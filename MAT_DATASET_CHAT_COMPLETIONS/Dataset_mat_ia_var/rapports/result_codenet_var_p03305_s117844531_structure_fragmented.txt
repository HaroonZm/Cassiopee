================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Dijkstra():
    class Edge():
        def __init__(self, _to, _cost):
            self.to = _to
            self.cost = _cost

    def __init__(self, V):
        self._init_graph(V)

    def _init_graph(self, V):
        self.G = [[] for i in range(V)]
        self._E = 0
        self._V = V

    @property
    def E(self):
        return self._get_E()

    def _get_E(self):
        return self._E

    @property
    def V(self):
        return self._get_V()

    def _get_V(self):
        return self._V

    def add(self, _from, _to, _cost):
        self._add_edge(_from, _to, _cost)

    def _add_edge(self, _from, _to, _cost):
        self.G[_from].append(self.Edge(_to, _cost))
        self._E += 1

    def shortest_path(self, s):
        return self._compute_shortest_path(s)

    def _compute_shortest_path(self, s):
        que = self._init_priority_queue()
        d = self._init_distance_list()
        self._set_start_distance(d, s)
        self._push_start_node(que, s)
        self._process_queue(que, d)
        return d

    def _init_priority_queue(self):
        return []

    def _init_distance_list(self):
        return [10**15] * self.V

    def _set_start_distance(self, d, s):
        d[s] = 0

    def _push_start_node(self, que, s):
        import heapq
        heapq.heappush(que, (0, s))

    def _process_queue(self, que, d):
        import heapq
        while self._queue_not_empty(que):
            cost, v = self._pop_queue(que)
            if self._should_skip_node(d, v, cost):
                continue
            self._update_neighbors(v, d, que)

    def _queue_not_empty(self, que):
        return len(que) != 0

    def _pop_queue(self, que):
        import heapq
        return heapq.heappop(que)

    def _should_skip_node(self, d, v, cost):
        return d[v] < cost

    def _update_neighbors(self, v, d, que):
        for i in self._get_neighbor_indices(v):
            e = self._get_neighbor_edge(v, i)
            self._try_update_distance(e, v, d, que)

    def _get_neighbor_indices(self, v):
        return range(len(self.G[v]))

    def _get_neighbor_edge(self, v, i):
        return self.G[v][i]

    def _try_update_distance(self, e, v, d, que):
        if self._should_update_distance(e, v, d):
            self._update_distance(e, v, d)
            self._push_new_candidate(e, d, que)

    def _should_update_distance(self, e, v, d):
        return d[e.to] > d[v] + e.cost

    def _update_distance(self, e, v, d):
        d[e.to] = d[v] + e.cost

    def _push_new_candidate(self, e, d, que):
        import heapq
        heapq.heappush(que, (d[e.to], e.to))

def main():
    n, m, s, t = read_main_input()
    yen, snuke = create_dijkstra_instances(n)
    process_edges(m, yen, snuke)
    s, t = adjust_node_indices(s, t)
    ye = yen.shortest_path(s)
    sn = snuke.shortest_path(t)
    answer = process_costs(n, ye, sn)
    output_result(answer)

def read_main_input():
    n, m, s, t = map(int, input().split())
    return n, m, s, t

def create_dijkstra_instances(n):
    yen = Dijkstra(n)
    snuke = Dijkstra(n)
    return yen, snuke

def process_edges(m, yen, snuke):
    for i in range(m):
        u, v, a, b = read_edge_input()
        u, v = adjust_edge_indices(u, v)
        add_both_direction_edges(u, v, a, b, yen, snuke)

def read_edge_input():
    return map(int, input().split())

def adjust_edge_indices(u, v):
    return u - 1, v - 1

def add_both_direction_edges(u, v, a, b, yen, snuke):
    add_yen_edges(u, v, a, yen)
    add_snuke_edges(u, v, b, snuke)

def add_yen_edges(u, v, a, yen):
    yen.add(u, v, a)
    yen.add(v, u, a)

def add_snuke_edges(u, v, b, snuke):
    snuke.add(u, v, b)
    snuke.add(v, u, b)

def adjust_node_indices(s, t):
    return s - 1, t - 1

def process_costs(n, ye, sn):
    answer = []
    cost = float("inf")
    for i in process_indices_reverse(n):
        cost = update_min_cost(cost, sn, ye, i)
        append_cost(answer, cost)
    return answer

def process_indices_reverse(n):
    return range(n-1, -1, -1)

def update_min_cost(cost, sn, ye, i):
    return min(cost, sn[i] + ye[i])

def append_cost(answer, cost):
    answer.append(cost)

def output_result(answer):
    for i in output_indices(answer):
        print(get_final_cost(answer, i))

def output_indices(answer):
    return range(len(answer))

def get_final_cost(answer, i):
    return 10**15 - answer[-i-1]

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' D' (ID: 415)
  → Token d'amorce (pas de prédiction)

Token 2: 'ijkstra' (ID: 124290)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08109422028064728
    2. ':' → logprob: -3.331094264984131
    3. '.' → logprob: -3.581094264984131
    4. '{' → logprob: -4.331094264984131
    5. ' {' → logprob: -7.956094264984131
    6. ' (' → logprob: -8.206093788146973
    7. ' ' → logprob: -8.456093788146973
    8. '```' → logprob: -9.456093788146973
    9. '[' → logprob: -10.831093788146973
    10. '({' → logprob: -11.081093788146973

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004251488950103521
    2. '(' → logprob: -5.754251480102539
    3. '():' → logprob: -8.004251480102539
    4. '   ' → logprob: -8.504251480102539
    5. '```' → logprob: -8.754251480102539
    6. ':
' → logprob: -9.379251480102539
    7. '(
' → logprob: -9.754251480102539
    8. '\' → logprob: -10.004251480102539
    9. '.' → logprob: -10.379251480102539
    10. ' :' → logprob: -10.504251480102539

Token 5: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2310020923614502
    2. '```' → logprob: -1.2310020923614502
    3. ' def' → logprob: -1.9810020923614502
    4. '\' → logprob: -2.48100209236145
    5. ' ' → logprob: -3.23100209236145
    6. ' 
' → logprob: -3.60600209236145
    7. ':' → logprob: -3.85600209236145
    8. ''' → logprob: -4.106001853942871
    9. '`' → logprob: -4.356001853942871
    10. 'def' → logprob: -4.606001853942871

Token 6: ' Edge' (ID: 16396)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04503903165459633
    2. '  ' → logprob: -3.545038938522339
    3. '    ' → logprob: -5.170039176940918
    4. '   ' → logprob: -5.920039176940918
    5. ' D' → logprob: -7.420039176940918
    6. ' ```' → logprob: -7.670039176940918
    7. '_' → logprob: -7.795039176940918
    8. 'A' → logprob: -8.045039176940918
    9. ' Node' → logprob: -8.170039176940918
    10. 'D' → logprob: -8.170039176940918

Token 7: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05699191242456436
    2. '(' → logprob: -2.9319918155670166
    3. ' :' → logprob: -6.931992053985596
    4. '{' → logprob: -8.181991577148438
    5. ':
' → logprob: -8.306991577148438
    6. '   ' → logprob: -9.056991577148438
    7. '```' → logprob: -9.181991577148438
    8. '():' → logprob: -9.306991577148438
    9. '):' → logprob: -9.931991577148438
    10. '.' → logprob: -10.056991577148438

Token 8: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17938271164894104
    2. ':' → logprob: -2.054382801055908
    3. '   ' → logprob: -4.929382801055908
    4. '       ' → logprob: -5.054382801055908
    5. ')' → logprob: -5.304382801055908
    6. '<|end|>' → logprob: -5.429382801055908
    7. '    ' → logprob: -5.679382801055908
    8. '(
' → logprob: -6.179382801055908
    9. ' :' → logprob: -6.429382801055908
    10. ' ' → logprob: -6.554382801055908

Token 9: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5427875518798828
    2. '(' → logprob: -1.6677875518798828
    3. '        ' → logprob: -2.667787551879883
    4. ' (' → logprob: -3.167787551879883
    5. '       ' → logprob: -3.792787551879883
    6. '   ' → logprob: -3.792787551879883
    7. '    ' → logprob: -4.292787551879883
    8. '           ' → logprob: -4.792787551879883
    9. ' \' → logprob: -5.167787551879883
    10. '            ' → logprob: -5.417787551879883

Token 10: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012147573754191399
    2. ' ' → logprob: -4.762147426605225
    3. '__' → logprob: -5.762147426605225
    4. ' init' → logprob: -8.887147903442383
    5. ' _' → logprob: -9.637147903442383
    6. '_' → logprob: -9.637147903442383
    7. ' constructor' → logprob: -10.512147903442383
    8. ' ' → logprob: -10.637147903442383
    9. ' find' → logprob: -11.137147903442383
    10. ' calculate' → logprob: -11.387147903442383

Token 11: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.36574100604048e-06
    2. ' init' → logprob: -13.125004768371582
    3. 'ini' → logprob: -13.500004768371582
    4. '_init' → logprob: -14.250004768371582
    5. '	init' → logprob: -16.250003814697266
    6. '__' → logprob: -16.625003814697266
    7. 'nit' → logprob: -17.375003814697266
    8. '(init' → logprob: -17.500003814697266
    9. 'int' → logprob: -17.625003814697266
    10. 'in' → logprob: -18.125003814697266

Token 12: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.19090451300144196
    2. '(' → logprob: -1.9409044981002808
    3. '__' → logprob: -4.06590461730957
    4. '(self' → logprob: -4.69090461730957
    5. ' (' → logprob: -6.44090461730957
    6. '__(
' → logprob: -6.81590461730957
    7. '_' → logprob: -7.94090461730957
    8. 'self' → logprob: -8.19090461730957
    9. '_(' → logprob: -8.69090461730957
    10. '__((' → logprob: -9.06590461730957

Token 13: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005944972508586943
    2. ' self' → logprob: -7.500594615936279
    3. 'source' → logprob: -10.625594139099121
    4. '(self' → logprob: -11.875594139099121
    5. ')' → logprob: -12.625594139099121
    6. 's' → logprob: -13.125594139099121
    7. ',self' → logprob: -13.750594139099121
    8. '	self' → logprob: -14.000594139099121
    9. 'src' → logprob: -14.625594139099121
    10. ''s' → logprob: -15.125594139099121

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4120595455169678
    2. ' ,' → logprob: -1.6620595455169678
    3. 'self' → logprob: -2.5370595455169678
    4. ' self' → logprob: -3.6620595455169678
    5. '(self' → logprob: -3.7870595455169678
    6. ')' → logprob: -4.787059783935547
    7. ' )' → logprob: -5.162059783935547
    8. '(' → logprob: -6.412059783935547
    9. ' ' → logprob: -6.662059783935547
    10. ',self' → logprob: -6.787059783935547

Token 15: ' _' (ID: 1175)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4896145164966583
    2. ' self' → logprob: -1.364614486694336
    3. ' source' → logprob: -3.239614486694336
    4. 'source' → logprob: -3.239614486694336
    5. 's' → logprob: -3.739614486694336
    6. 'u' → logprob: -4.864614486694336
    7. ' s' → logprob: -5.614614486694336
    8. ' u' → logprob: -5.739614486694336
    9. ' start' → logprob: -5.864614486694336
    10. 'src' → logprob: -6.114614486694336

Token 16: 'to' (ID: 935)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2569457292556763
    2. 'v' → logprob: -1.2569457292556763
    3. 'u' → logprob: -2.2569456100463867
    4. 'n' → logprob: -2.2569456100463867
    5. 'source' → logprob: -2.3819456100463867
    6. ',' → logprob: -3.3819456100463867
    7. '):' → logprob: -4.131945610046387
    8. 'from' → logprob: -4.131945610046387
    9. ')' → logprob: -4.881945610046387
    10. 'node' → logprob: -5.006945610046387

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006051328033208847
    2. '):' → logprob: -5.381051540374756
    3. ' ,' → logprob: -6.631051540374756
    4. ')' → logprob: -9.881051063537598
    5. ':' → logprob: -10.756051063537598
    6. ' ):' → logprob: -11.006051063537598
    7. '=' → logprob: -12.006051063537598
    8. '<|end|>' → logprob: -12.756051063537598
    9. ',int' → logprob: -13.256051063537598
    10. ',to' → logprob: -13.881051063537598

Token 18: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.34015026688575745
    2. '_' → logprob: -1.465150237083435
    3. ' ' → logprob: -4.090150356292725
    4. ' weight' → logprob: -4.465150356292725
    5. ' cost' → logprob: -4.965150356292725
    6. '_cost' → logprob: -5.465150356292725
    7. '_weight' → logprob: -5.715150356292725
    8. 'weight' → logprob: -5.840150356292725
    9. ' )' → logprob: -6.215150356292725
    10. ')' → logprob: -6.340150356292725

Token 19: 'cost' (ID: 33457)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.21620994806289673
    2. 'cost' → logprob: -1.966209888458252
    3. 'w' → logprob: -3.341209888458252
    4. 'dist' → logprob: -4.591209888458252
    5. 'distance' → logprob: -5.841209888458252
    6. 'from' → logprob: -6.341209888458252
    7. 'id' → logprob: -7.341209888458252
    8. 'to' → logprob: -7.591209888458252
    9. ')' → logprob: -7.716209888458252
    10. 'wt' → logprob: -8.09121036529541

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007656719535589218
    2. ')' → logprob: -7.625765800476074
    3. ',' → logprob: -8.375765800476074
    4. ':' → logprob: -10.250765800476074
    5. ' ):' → logprob: -11.750765800476074
    6. '):
' → logprob: -13.000765800476074
    7. '),' → logprob: -14.875765800476074
    8. '       ' → logprob: -15.000765800476074
    9. '   ' → logprob: -15.750765800476074
    10. ' ' → logprob: -16.000764846801758

Token 21: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6583923101425171
    2. '):' → logprob: -0.9083923101425171
    3. ':' → logprob: -2.9083924293518066
    4. '<|end|>' → logprob: -4.033392429351807
    5. '       ' → logprob: -6.033392429351807
    6. ' ):' → logprob: -6.908392429351807
    7. ' :' → logprob: -7.158392429351807
    8. ' )' → logprob: -7.158392429351807
    9. ',' → logprob: -7.158392429351807
    10. '           ' → logprob: -8.408391952514648

Token 22: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18024249374866486
    2. '               ' → logprob: -2.6802425384521484
    3. ' self' → logprob: -3.1802425384521484
    4. '           ' → logprob: -3.3052425384521484
    5. ' ' → logprob: -5.555242538452148
    6. '       ' → logprob: -5.680242538452148
    7. '            ' → logprob: -5.805242538452148
    8. '_' → logprob: -6.180242538452148
    9. '   ' → logprob: -7.055242538452148
    10. '                ' → logprob: -7.555242538452148

Token 23: '.to' (ID: 3552)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004139549098908901
    2. '._' → logprob: -5.754139423370361
    3. '.to' → logprob: -7.129139423370361
    4. ' .' → logprob: -9.25413990020752
    5. '_to' → logprob: -10.62913990020752
    6. '_' → logprob: -11.62913990020752
    7. ',' → logprob: -12.00413990020752
    8. ')' → logprob: -12.25413990020752
    9. '.from' → logprob: -13.00413990020752
    10. ' ' → logprob: -13.12913990020752

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7009035348892212
    2. ' =' → logprob: -0.7009035348892212
    3. '<|end|>' → logprob: -5.200903415679932
    4. ' ' → logprob: -6.700903415679932
    5. ')' → logprob: -7.700903415679932
    6. '_' → logprob: -8.45090389251709
    7. ' ==' → logprob: -9.07590389251709
    8. ' )' → logprob: -9.95090389251709
    9. ',' → logprob: -10.07590389251709
    10. '<|end|>' → logprob: -10.45090389251709

Token 25: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3931683301925659
    2. '_to' → logprob: -1.143168330192566
    3. '_cost' → logprob: -5.1431684494018555
    4. '_t' → logprob: -8.018168449401855
    5. '_' → logprob: -9.768168449401855
    6. ' to' → logprob: -11.018168449401855
    7. '_in' → logprob: -12.018168449401855
    8. '_next' → logprob: -12.393168449401855
    9. '_from' → logprob: -13.268168449401855
    10. '_space' → logprob: -13.393168449401855

Token 26: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.2664456789934775e-06
    2. 'cost' → logprob: -14.000000953674316
    3. '_to' → logprob: -15.500000953674316
    4. 't' → logprob: -16.875001907348633
    5. '_' → logprob: -18.625001907348633
    6. 'toq' → logprob: -19.375001907348633
    7. ' to' → logprob: -19.875001907348633
    8. '_cost' → logprob: -20.000001907348633
    9. 'то' → logprob: -20.375001907348633
    10. 'toc' → logprob: -20.875001907348633

Token 27: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '.cost' (ID: 80655)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3133978247642517
    2. '.cost' → logprob: -1.3133978843688965
    3. ' .' → logprob: -9.188397407531738
    4. '.c' → logprob: -10.688397407531738
    5. '._' → logprob: -12.688397407531738
    6. '.code' → logprob: -13.938397407531738
    7. '.period' → logprob: -14.188397407531738
    8. 'cost' → logprob: -14.188397407531738
    9. '.user' → logprob: -14.313397407531738
    10. '_cost' → logprob: -14.313397407531738

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006739169359207153
    2. '=' → logprob: -5.006739139556885
    3. ' ' → logprob: -11.006739616394043
    4. '<|end|>' → logprob: -12.256739616394043
    5. ')' → logprob: -14.006739616394043
    6. ' =
' → logprob: -14.506739616394043
    7. ',' → logprob: -15.006739616394043
    8. '<|end|>' → logprob: -15.256739616394043
    9. ' +=' → logprob: -15.881739616394043
    10. '  ' → logprob: -16.381738662719727

Token 32: ' _' (ID: 1175)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.31341856718063354
    2. ' _' → logprob: -1.3134186267852783
    3. '_' → logprob: -8.9384183883667
    4. '_c' → logprob: -11.6884183883667
    5. ' cost' → logprob: -11.8134183883667
    6. ' ' → logprob: -12.4384183883667
    7. '_space' → logprob: -13.4384183883667
    8. '_COST' → logprob: -13.4384183883667
    9. '_loss' → logprob: -14.6884183883667
    10. '_cut' → logprob: -14.8134183883667

Token 33: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.8624639324116288e-06
    2. '_cost' → logprob: -13.500001907348633
    3. 'co' → logprob: -15.250001907348633
    4. ' cost' → logprob: -15.875001907348633
    5. 'cos' → logprob: -17.000001907348633
    6. 'c' → logprob: -18.125001907348633
    7. 'cast' → logprob: -19.750001907348633
    8. '-cost' → logprob: -19.875001907348633
    9. '(cost' → logprob: -21.125001907348633
    10. '.cost' → logprob: -21.375001907348633

Token 34: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22280025482177734
    2. '   ' → logprob: -3.0978002548217773
    3. '    
' → logprob: -3.3478002548217773
    4. '<|end|>' → logprob: -3.4728002548217773
    5. ' 
' → logprob: -3.7228002548217773
    6. '       ' → logprob: -4.347800254821777
    7. '\n' → logprob: -4.472800254821777
    8. '' → logprob: -4.722800254821777
    9. '```' → logprob: -4.722800254821777
    10. 'newline' → logprob: -4.847800254821777

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014782710932195187
    2. '    
' → logprob: -5.389782905578613
    3. '   ' → logprob: -5.889782905578613
    4. '```' → logprob: -6.264782905578613
    5. '<|end|>' → logprob: -6.639782905578613
    6. '\n' → logprob: -7.014782905578613
    7. '

' → logprob: -7.389782905578613
    8. 'newline' → logprob: -7.389782905578613
    9. '       ' → logprob: -7.639782905578613
    10. ' 
' → logprob: -8.014782905578613

Token 36: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7787202000617981
    2. '   ' → logprob: -1.1537201404571533
    3. '
' → logprob: -2.0287201404571533
    4. '    
' → logprob: -3.7787201404571533
    5. ' ' → logprob: -4.278720378875732
    6. '       ' → logprob: -4.778720378875732
    7. '    ' → logprob: -4.778720378875732
    8. 'd' → logprob: -4.903720378875732
    9. '' → logprob: -5.028720378875732
    10. ' 
' → logprob: -5.153720378875732

Token 37: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16074548661708832
    2. ' ' → logprob: -2.28574538230896
    3. ' find' → logprob: -3.28574538230896
    4. '_' → logprob: -6.160745620727539
    5. '__' → logprob: -6.160745620727539
    6. ' compute' → logprob: -7.035745620727539
    7. ' calculate' → logprob: -7.035745620727539
    8. ' ‌' → logprob: -7.160745620727539
    9. ' solve' → logprob: -7.660745620727539
    10. ' _' → logprob: -7.660745620727539

Token 38: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.06213046982884407
    2. 'i' → logprob: -2.8121304512023926
    3. 'ini' → logprob: -9.31213092803955
    4. 'in' → logprob: -9.56213092803955
    5. ' init' → logprob: -14.18713092803955
    6. '_i' → logprob: -14.43713092803955
    7. ' i' → logprob: -14.81213092803955
    8. '_' → logprob: -15.68713092803955
    9. 'int' → logprob: -16.437129974365234
    10. '_init' → logprob: -16.687129974365234

Token 39: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10014110803604126
    2. '(' → logprob: -2.9751410484313965
    3. '__' → logprob: -3.3501410484313965
    4. '(self' → logprob: -5.7251410484313965
    5. '<|end|>' → logprob: -5.9751410484313965
    6. ' (' → logprob: -6.1001410484313965
    7. '__(
' → logprob: -7.8501410484313965
    8. '__((' → logprob: -8.475141525268555
    9. '_' → logprob: -8.725141525268555
    10. 'self' → logprob: -9.600141525268555

Token 40: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16024281084537506
    2. ' self' → logprob: -1.9102427959442139
    3. ')' → logprob: -11.035243034362793
    4. ' ' → logprob: -14.535243034362793
    5. ' )' → logprob: -14.660243034362793
    6. '(self' → logprob: -14.660243034362793
    7. '0' → logprob: -14.910243034362793
    8. ',' → logprob: -15.535243034362793
    9. '	self' → logprob: -16.035242080688477
    10. 's' → logprob: -16.160242080688477

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035346150398254395
    2. ' ,' → logprob: -3.410346031188965
    3. 'self' → logprob: -6.535346031188965
    4. ' self' → logprob: -9.035346031188965
    5. ' ' → logprob: -9.660346031188965
    6. ',self' → logprob: -10.410346031188965
    7. ')' → logprob: -11.035346031188965
    8. ' )' → logprob: -11.535346031188965
    9. '_self' → logprob: -13.160346031188965
    10. '):' → logprob: -13.785346031188965

Token 42: ' V' (ID: 631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6774637699127197
    2. ' self' → logprob: -1.5524637699127197
    3. ' V' → logprob: -2.0524637699127197
    4. 'self' → logprob: -3.0524637699127197
    5. 'n' → logprob: -3.4274637699127197
    6. ' graph' → logprob: -3.5524637699127197
    7. 'graph' → logprob: -4.302463531494141
    8. 'V' → logprob: -4.802463531494141
    9. ')' → logprob: -5.052463531494141
    10. ' ' → logprob: -5.177463531494141

Token 43: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3137363791465759
    2. '):' → logprob: -1.3137364387512207
    3. ' ):' → logprob: -8.563735961914062
    4. ')' → logprob: -9.188735961914062
    5. ':' → logprob: -9.313735961914062
    6. ' ,' → logprob: -9.438735961914062
    7. ':int' → logprob: -13.188735961914062
    8. '):
' → logprob: -13.188735961914062
    9. ',int' → logprob: -13.313735961914062
    10. '),' → logprob: -14.188735961914062

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44425106048583984
    2. ':' → logprob: -1.1942510604858398
    3. '<|end|>' → logprob: -3.31925106048584
    4. '
' → logprob: -5.31925106048584
    5. '   ' → logprob: -5.56925106048584
    6. ',' → logprob: -5.81925106048584
    7. ')' → logprob: -6.19425106048584
    8. 'self' → logprob: -6.56925106048584
    9. '<|end|>' → logprob: -6.56925106048584
    10. ':
' → logprob: -7.69425106048584

Token 45: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20190247893333435
    2. 'self' (adapté à ' self') → logprob: -1.7019025087356567
    3. '       ' → logprob: -8.076902389526367
    4. ' V' → logprob: -8.951902389526367
    5. '   ' → logprob: -10.701902389526367
    6. 'V' → logprob: -11.326902389526367
    7. ' ' → logprob: -11.701902389526367
    8. '	self' → logprob: -13.201902389526367
    9. ' super' → logprob: -13.576902389526367
    10. ' ' → logprob: -13.826902389526367

Token 46: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.650583028793335
    2. '.V' → logprob: -0.775583028793335
    3. ' .' → logprob: -4.650583267211914
    4. '.v' → logprob: -5.025583267211914
    5. '.vertices' → logprob: -7.525583267211914
    6. ' ' → logprob: -8.150583267211914
    7. '._' → logprob: -8.275583267211914
    8. '   ' → logprob: -8.525583267211914
    9. '.val' → logprob: -9.775583267211914
    10. '.vel' → logprob: -10.525583267211914

Token 47: 'init' (ID: 3287)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0003455944824963808
    2. 'v' → logprob: -8.000345230102539
    3. ' V' → logprob: -12.500345230102539
    4. 'graph' → logprob: -13.375345230102539
    5. '_V' → logprob: -13.750345230102539
    6. 'vertex' → logprob: -14.000345230102539
    7. 'n' → logprob: -14.500345230102539
    8. 'num' → logprob: -14.625345230102539
    9. '.V' → logprob: -14.750345230102539
    10. '	V' → logprob: -15.500345230102539

Token 48: '_graph' (ID: 33441)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.8857943415641785
    2. '_' → logprob: -1.6357944011688232
    3. 'ialize' → logprob: -2.0107944011688232
    4. '_(' → logprob: -2.5107944011688232
    5. 'i' → logprob: -3.2607944011688232
    6. 'ia' → logprob: -3.2607944011688232
    7. 'V' → logprob: -3.7607944011688232
    8. '_V' → logprob: -4.385794162750244
    9. 'ial' → logprob: -4.760794162750244
    10. '__(' → logprob: -5.135794162750244

Token 49: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.14678364992141724
    2. '(' → logprob: -2.0217835903167725
    3. '()' → logprob: -5.771783828735352
    4. 's' → logprob: -7.396783828735352
    5. '_' → logprob: -9.021783828735352
    6. '((' → logprob: -9.771783828735352
    7. '=' → logprob: -10.396783828735352
    8. ')' → logprob: -10.896783828735352
    9. '_(' → logprob: -10.896783828735352
    10. ' (' → logprob: -11.396783828735352

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -11.375014305114746
    3. ',' → logprob: -13.750014305114746
    4. '))' → logprob: -14.375014305114746
    5. ')
' → logprob: -15.625014305114746
    6. ')`' → logprob: -15.625014305114746
    7. ',)' → logprob: -15.750014305114746
    8. '),' → logprob: -16.25001335144043
    9. ')V' → logprob: -16.25001335144043
    10. ')}' → logprob: -17.00001335144043

Token 51: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7862591743469238
    2. '
' → logprob: -1.2862591743469238
    3. '<|end|>' → logprob: -1.9112591743469238
    4. ' def' → logprob: -3.161259174346924
    5. '   ' → logprob: -3.161259174346924
    6. '<|end|>' → logprob: -4.411259174346924
    7. '```' → logprob: -5.036259174346924
    8. '    
' → logprob: -5.286259174346924
    9. ' ' → logprob: -5.411259174346924
    10. 'newline' → logprob: -6.161259174346924

Token 53: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4775986969470978
    2. '_init' → logprob: -0.9775986671447754
    3. '_' → logprob: -5.852598667144775
    4. ' ' → logprob: -8.352599143981934
    5. '_add' → logprob: -8.352599143981934
    6. '_set' → logprob: -10.602599143981934
    7. '_insert' → logprob: -10.602599143981934
    8. '__' → logprob: -10.727599143981934
    9. ' ' → logprob: -10.852599143981934
    10. ' def' → logprob: -10.852599143981934

Token 54: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.001503790495917201
    2. '_init' → logprob: -6.501503944396973
    3. 'ini' → logprob: -15.001503944396973
    4. 'int' → logprob: -15.251503944396973
    5. ' init' → logprob: -15.501503944396973
    6. '_in' → logprob: -15.876503944396973
    7. '_' → logprob: -16.001502990722656
    8. 'i' → logprob: -16.251502990722656
    9. 'in' → logprob: -16.376502990722656
    10. 'innit' → logprob: -16.626502990722656

Token 55: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00013417120499070734
    2. '_' → logprob: -9.375134468078613
    3. '_g' → logprob: -10.500134468078613
    4. '__' → logprob: -11.125134468078613
    5. ' _' → logprob: -13.125134468078613
    6. '_G' → logprob: -13.500134468078613
    7. '_gr' → logprob: -13.625134468078613
    8. '```' → logprob: -14.500134468078613
    9. '_GRAPH' → logprob: -15.375134468078613
    10. 'raph' → logprob: -15.500134468078613

Token 56: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019847829826176167
    2. '(' → logprob: -6.251984596252441
    3. ' (' → logprob: -10.126984596252441
    4. '(s' → logprob: -12.626984596252441
    5. '   ' → logprob: -12.751984596252441
    6. 'self' → logprob: -13.001984596252441
    7. ' ' → logprob: -13.376984596252441
    8. '(V' → logprob: -13.376984596252441
    9. '(
' → logprob: -14.126984596252441
    10. '(Self' → logprob: -14.126984596252441

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011999329581158236
    2. ',V' → logprob: -9.625120162963867
    3. ' ,' → logprob: -10.125120162963867
    4. '):' → logprob: -11.500120162963867
    5. ')' → logprob: -13.125120162963867
    6. ',v' → logprob: -14.375120162963867
    7. 'self' → logprob: -14.875120162963867
    8. '   ' → logprob: -15.625120162963867
    9. ',size' → logprob: -15.750120162963867
    10. '  ' → logprob: -16.750120162963867

Token 58: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.3217220604419708
    2. 'V' → logprob: -1.3217220306396484
    3. 'self' → logprob: -5.571722030639648
    4. ' self' → logprob: -5.696722030639648
    5. '   ' → logprob: -7.946722030639648
    6. ')' → logprob: -7.946722030639648
    7. ' ' → logprob: -8.696722030639648
    8. ')V' → logprob: -8.946722030639648
    9. '	V' → logprob: -9.571722030639648
    10. '       ' → logprob: -10.696722030639648

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006564391660504043
    2. ',' → logprob: -7.500656604766846
    3. ')' → logprob: -10.375656127929688
    4. ':' → logprob: -10.500656127929688
    5. ' ):' → logprob: -10.875656127929688
    6. '   ' → logprob: -11.375656127929688
    7. '):
' → logprob: -11.625656127929688
    8. '       ' → logprob: -12.375656127929688
    9. ' ,' → logprob: -15.500656127929688
    10. ' ' → logprob: -15.500656127929688

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000504062045365572
    2. ':' → logprob: -8.875504493713379
    3. '<|end|>' → logprob: -8.875504493713379
    4. ',' → logprob: -10.125504493713379
    5. '```' → logprob: -10.250504493713379
    6. '<|end|>' → logprob: -10.375504493713379
    7. 'self' → logprob: -10.375504493713379
    8. '
' → logprob: -11.500504493713379
    9. '(self' → logprob: -11.500504493713379
    10. ' self' → logprob: -11.500504493713379

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03711747005581856
    2. ' self' → logprob: -3.7871174812316895
    3. '       ' → logprob: -4.2871174812316895
    4. '   ' → logprob: -10.787117004394531
    5. ' ' → logprob: -12.162117004394531
    6. '	self' → logprob: -12.537117004394531
    7. '(self' → logprob: -14.412117004394531
    8. ' ' → logprob: -14.787117004394531
    9. '  ' → logprob: -15.537117004394531
    10. '```' → logprob: -15.787117004394531

Token 62: '.G' (ID: 3773)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.7016434669494629
    2. '.graph' → logprob: -0.8266434669494629
    3. '.' → logprob: -3.451643466949463
    4. '.g' → logprob: -4.576643466949463
    5. ' .' → logprob: -4.826643466949463
    6. '.v' → logprob: -5.451643466949463
    7. '.edges' → logprob: -5.826643466949463
    8. '.V' → logprob: -6.701643466949463
    9. '.vertices' → logprob: -6.826643466949463
    10. '.G' → logprob: -6.951643466949463

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134074807167053
    2. '=' → logprob: -1.3134074211120605
    3. '=[]' → logprob: -8.938407897949219
    4. ' ' → logprob: -12.313407897949219
    5. '[' → logprob: -12.563407897949219
    6. '=[' → logprob: -14.063407897949219
    7. '=[]
' → logprob: -14.313407897949219
    8. '[:]' → logprob: -14.438407897949219
    9. '={}' → logprob: -14.688407897949219
    10. ' =[' → logprob: -14.688407897949219

Token 64: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016465028747916222
    2. ' [[]' → logprob: -6.501646518707275
    3. '[]' → logprob: -8.876646041870117
    4. ' [' → logprob: -12.876646041870117
    5. '[len' → logprob: -14.876646041870117
    6. '[self' → logprob: -15.126646041870117
    7. '[[' → logprob: -15.376646041870117
    8. '[V' → logprob: -15.626646041870117
    9. '[:]' → logprob: -15.626646041870117
    10. '[int' → logprob: -15.876646041870117

Token 65: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10089004039764404
    2. ' for' → logprob: -2.7258901596069336
    3. 'for' → logprob: -3.9758901596069336
    4. ')' → logprob: -5.100890159606934
    5. ' ]' → logprob: -5.725890159606934
    6. ',' → logprob: -6.350890159606934
    7. ')]' → logprob: -7.975890159606934
    8. '<|end|>' → logprob: -8.850890159606934
    9. '       ' → logprob: -9.725890159606934
    10. '],' → logprob: -11.350890159606934

Token 66: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6524349451065063
    2. ' ' → logprob: -1.7774349451065063
    3. ' i' → logprob: -2.027434825897217
    4. ' _' → logprob: -2.152434825897217
    5. '_' → logprob: -3.027434825897217
    6. 'range' → logprob: -4.652434825897217
    7. '(range' → logprob: -6.152434825897217
    8. '_range' → logprob: -7.527434825897217
    9. '(' → logprob: -7.777434825897217
    10. ' (' → logprob: -8.027435302734375

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07582040131092072
    2. ' range' → logprob: -3.3258204460144043
    3. ' ' → logprob: -4.075820446014404
    4. 'in' → logprob: -4.575820446014404
    5. '(range' → logprob: -5.200820446014404
    6. 'range' → logprob: -5.575820446014404
    7. '(' → logprob: -8.450819969177246
    8. ' xrange' → logprob: -9.200819969177246
    9. '<|end|>' → logprob: -9.825819969177246
    10. ')' → logprob: -10.325819969177246

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04304874315857887
    2. 'range' → logprob: -3.168048858642578
    3. '(range' → logprob: -10.418048858642578
    4. ' xrange' → logprob: -11.543048858642578
    5. '	range' → logprob: -12.293048858642578
    6. ' ' → logprob: -12.418048858642578
    7. ' ran' → logprob: -15.293048858642578
    8. '.range' → logprob: -15.418048858642578
    9. 'rang' → logprob: -15.668048858642578
    10. '_range' → logprob: -15.793048858642578

Token 69: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.011055837385356426
    2. '(' → logprob: -4.511055946350098
    3. ' (' → logprob: -12.136055946350098
    4. '(self' → logprob: -14.011055946350098
    5. '(
' → logprob: -14.386055946350098
    6. '(View' → logprob: -14.511055946350098
    7. ')' → logprob: -15.636055946350098
    8. '((' → logprob: -16.26105499267578
    9. ')(' → logprob: -16.51105499267578
    10. '(I' → logprob: -16.76105499267578

Token 70: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.519893501419574e-05
    2. ')' → logprob: -9.37509536743164
    3. ' )' → logprob: -12.12509536743164
    4. ')]
' → logprob: -12.75009536743164
    5. ')])' → logprob: -14.62509536743164
    6. '))' → logprob: -14.87509536743164
    7. ']' → logprob: -14.87509536743164
    8. '       ' → logprob: -15.25009536743164
    9. ')}' → logprob: -15.75009536743164
    10. '   ' → logprob: -16.12509536743164

Token 71: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05258529633283615
    2. '       ' → logprob: -3.1775853633880615
    3. ' self' → logprob: -4.802585124969482
    4. '   ' → logprob: -7.427585124969482
    5. '<|end|>' → logprob: -8.05258560180664
    6. ' ' → logprob: -8.55258560180664
    7. 's' → logprob: -9.55258560180664
    8. '	self' → logprob: -10.30258560180664
    9. '  ' → logprob: -10.92758560180664
    10. '```' → logprob: -11.05258560180664

Token 73: '._' (ID: 2697)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.027719028294086456
    2. '.v' → logprob: -4.152719020843506
    3. '.' → logprob: -4.902719020843506
    4. '.n' → logprob: -7.277719020843506
    5. '.N' → logprob: -7.527719020843506
    6. '._' → logprob: -7.527719020843506
    7. ' .' → logprob: -8.027719497680664
    8. '..' → logprob: -8.652719497680664
    9. '   ' → logprob: -8.652719497680664
    10. '.L' → logprob: -9.027719497680664

Token 74: 'E' (ID: 36)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.012006363831460476
    2. 'v' → logprob: -5.3870062828063965
    3. 'dist' → logprob: -5.5120062828063965
    4. 'prev' → logprob: -6.8870062828063965
    5. 'n' → logprob: -7.3870062828063965
    6. 'num' → logprob: -8.012006759643555
    7. 'vertex' → logprob: -9.262006759643555
    8. 'pos' → logprob: -9.387006759643555
    9. 'inf' → logprob: -9.387006759643555
    10. 'cost' → logprob: -9.387006759643555

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31338921189308167
    2. ' =' → logprob: -1.3133891820907593
    3. ' ' → logprob: -9.81338882446289
    4. '  ' → logprob: -11.06338882446289
    5. 'd' → logprob: -11.31338882446289
    6. '=[]' → logprob: -11.43838882446289
    7. 'n' → logprob: -12.18838882446289
    8. 'nd' → logprob: -12.18838882446289
    9. 'nt' → logprob: -13.18838882446289
    10. 'num' → logprob: -13.31338882446289

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012525065802037716
    2. ' ' → logprob: -4.3875250816345215
    3. '[]' → logprob: -11.262524604797363
    4. '<|end|>' → logprob: -13.387524604797363
    5. ' []' → logprob: -14.262524604797363
    6. '[' → logprob: -16.26252555847168
    7. '  ' → logprob: -16.63752555847168
    8. '۰' → logprob: -16.88752555847168
    9. '[]
' → logprob: -16.88752555847168
    10. '０' → logprob: -17.63752555847168

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.97155623533763e-05
    2. ' ' → logprob: -9.750089645385742
    3. '[]' → logprob: -10.375089645385742
    4. '[]
' → logprob: -16.875089645385742
    5. 'V' → logprob: -17.125089645385742
    6. '[' → logprob: -17.375089645385742
    7. ' []' → logprob: -17.500089645385742
    8. '{}' → logprob: -17.500089645385742
    9. '<|end|>' → logprob: -17.875089645385742
    10. '  ' → logprob: -19.250089645385742

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36035996675491333
    2. '<|end|>' → logprob: -1.2353599071502686
    3. ' 
' → logprob: -5.610360145568848
    4. '' → logprob: -6.485360145568848
    5. '   ' → logprob: -6.610360145568848
    6. '<|end|>' → logprob: -6.735360145568848
    7. '```' → logprob: -7.110360145568848
    8. '    
' → logprob: -7.235360145568848
    9. 'newline' → logprob: -7.735360145568848
    10. '\n' → logprob: -7.735360145568848

Token 79: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00026729601086117327
    2. ' .' → logprob: -9.125267028808594
    3. '<|end|>' → logprob: -9.500267028808594
    4. '.V' → logprob: -10.625267028808594
    5. ' ' → logprob: -11.125267028808594
    6. '._' → logprob: -11.375267028808594
    7. '.I' → logprob: -11.500267028808594
    8. '.G' → logprob: -12.375267028808594
    9. '.E' → logprob: -13.000267028808594
    10. '<|end|>' → logprob: -13.750267028808594

Token 82: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -9.102680633077398e-05
    2. 'v' → logprob: -10.500090599060059
    3. 'F' → logprob: -11.000090599060059
    4. 'G' → logprob: -11.125090599060059
    5. ' V' → logprob: -12.375090599060059
    6. ' ' → logprob: -12.937590599060059
    7. '   ' → logprob: -13.187590599060059
    8. '  ' → logprob: -13.312590599060059
    9. 'init' → logprob: -13.687590599060059
    10. '```' → logprob: -13.937590599060059

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038133297115564346
    2. '=' → logprob: -3.288133382797241
    3. ' ' → logprob: -9.66313362121582
    4. '<|end|>' → logprob: -10.66313362121582
    5. ' =
' → logprob: -12.41313362121582
    6. ' =)' → logprob: -15.03813362121582
    7. '＝' → logprob: -15.28813362121582
    8. ')' → logprob: -16.78813362121582
    9. ' +=' → logprob: -16.78813362121582
    10. ' |=' → logprob: -17.28813362121582

Token 84: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.2519374191761017
    2. 'V' → logprob: -1.5019373893737793
    3. ' ' → logprob: -12.626937866210938
    4. '	V' → logprob: -12.876937866210938
    5. ' ' → logprob: -13.001937866210938
    6. '_V' → logprob: -16.376937866210938
    7. '    ' → logprob: -16.501937866210938
    8. '   ' → logprob: -17.876937866210938
    9. '<V' → logprob: -18.751937866210938
    10. '  ' → logprob: -18.876937866210938

Token 85: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7330327033996582
    2. '<|end|>' → logprob: -0.9830327033996582
    3. ' 
' → logprob: -2.608032703399658
    4. '   ' → logprob: -3.608032703399658
    5. '    
' → logprob: -4.358032703399658
    6. '' → logprob: -4.608032703399658
    7. '<|end|>' → logprob: -5.483032703399658
    8. '```' → logprob: -5.608032703399658
    9. '  
' → logprob: -5.858032703399658
    10. 'newline' → logprob: -6.108032703399658

Token 86: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41667771339416504
    2. '<|end|>' → logprob: -1.791677713394165
    3. ' 
' → logprob: -2.666677713394165
    4. '   ' → logprob: -2.916677713394165
    5. '    
' → logprob: -3.916677713394165
    6. '  
' → logprob: -5.041677474975586
    7. ' ' → logprob: -5.166677474975586
    8. '' → logprob: -5.541677474975586
    9. 'def' → logprob: -5.541677474975586
    10. ' def' → logprob: -5.666677474975586

Token 87: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'property' (ID: 8813)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.4777739942073822
    2. 'property' → logprob: -1.4777740240097046
    3. 'p' → logprob: -2.852773904800415
    4. 's' → logprob: -3.102773904800415
    5. 'st' → logprob: -4.227774143218994
    6. 'classmethod' → logprob: -4.352774143218994
    7. 'dat' → logprob: -4.852774143218994
    8. 'static' → logprob: -5.352774143218994
    9. 'sta' → logprob: -6.227774143218994
    10. 'd' → logprob: -6.352774143218994

Token 89: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2439783215522766
    2. '
' → logprob: -2.243978261947632
    3. ' def' → logprob: -2.368978261947632
    4. '<|end|>' → logprob: -4.243978500366211
    5. '<|end|>' → logprob: -7.618978500366211
    6. '    
' → logprob: -7.993978500366211
    7. ' ' → logprob: -8.118978500366211
    8. '\' → logprob: -8.118978500366211
    9. '  
' → logprob: -8.493978500366211
    10. '	def' → logprob: -8.618978500366211

Token 90: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010403135092929006
    2. ' def' → logprob: -7.376040458679199
    3. '
' → logprob: -8.0010404586792
    4. 'd' → logprob: -10.7510404586792
    5. '   ' → logprob: -10.7510404586792
    6. '<|end|>' → logprob: -11.3760404586792
    7. 'de' → logprob: -11.7510404586792
    8. '	def' → logprob: -11.8760404586792
    9. '_def' → logprob: -12.8760404586792
    10. '\' → logprob: -13.5010404586792

Token 91: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003544118662830442
    2. ' def' → logprob: -8.625354766845703
    3. 'V' → logprob: -8.875354766845703
    4. 'E' → logprob: -10.625354766845703
    5. '
' → logprob: -12.500354766845703
    6. 'de' → logprob: -13.250354766845703
    7. '   ' → logprob: -13.500354766845703
    8. 'd' → logprob: -13.750354766845703
    9. 'G' → logprob: -13.875354766845703
    10. '_V' → logprob: -15.000354766845703

Token 92: ' E' (ID: 457)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.16885139048099518
    2. 'V' → logprob: -2.543851375579834
    3. ' E' → logprob: -2.793851375579834
    4. 'E' → logprob: -4.543851375579834
    5. ' ' → logprob: -5.543851375579834
    6. ' _' → logprob: -8.293851852416992
    7. ' ' → logprob: -8.668851852416992
    8. '_' → logprob: -9.168851852416992
    9. '  ' → logprob: -9.418851852416992
    10. '_V' → logprob: -9.543851852416992

Token 93: '(self' (ID: 2402)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.34696629643440247
    2. '(' → logprob: -2.22196626663208
    3. '()' → logprob: -2.47196626663208
    4. ':' → logprob: -2.59696626663208
    5. ')' → logprob: -4.84696626663208
    6. 'def' → logprob: -5.22196626663208
    7. '(self' → logprob: -5.34696626663208
    8. '):' → logprob: -6.34696626663208
    9. ' def' → logprob: -6.72196626663208
    10. '<|end|>' → logprob: -6.72196626663208

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6363551616668701
    2. ')' → logprob: -0.7613551616668701
    3. '():' → logprob: -6.636355400085449
    4. '):
' → logprob: -6.761355400085449
    5. '(self' → logprob: -7.886355400085449
    6. '}' → logprob: -8.51135540008545
    7. ':' → logprob: -9.01135540008545
    8. 'self' → logprob: -9.01135540008545
    9. '()' → logprob: -9.51135540008545
    10. '(' → logprob: -9.51135540008545

Token 95: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38881102204322815
    2. '       ' → logprob: -2.0138111114501953
    3. '<|end|>' → logprob: -2.2638111114501953
    4. '   ' → logprob: -3.0138111114501953
    5. '()' → logprob: -5.013811111450195
    6. ' ' → logprob: -5.138811111450195
    7. '(' → logprob: -5.888811111450195
    8. '():' → logprob: -5.888811111450195
    9. '<|end|>' → logprob: -6.013811111450195
    10. ')' → logprob: -6.013811111450195

Token 96: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6520954370498657
    2. ' return' → logprob: -0.7770954370498657
    3. '       ' → logprob: -4.277095317840576
    4. ' 
' → logprob: -6.277095317840576
    5. '   ' → logprob: -6.902095317840576
    6. '
' → logprob: -7.152095317840576
    7. '<|end|>' → logprob: -7.777095317840576
    8. '        
' → logprob: -8.152095794677734
    9. ':return' → logprob: -8.152095794677734
    10. '	return' → logprob: -8.152095794677734

Token 97: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.006716913543641567
    2. 'self' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.38171672821045
    4. ' ' → logprob: -14.50671672821045
    5. ' len' → logprob: -15.38171672821045
    6. '_self' → logprob: -16.006717681884766
    7. '	self' → logprob: -16.381717681884766
    8. '(self' → logprob: -17.006717681884766
    9. ' _' → logprob: -17.631717681884766
    10. 's' → logprob: -18.381717681884766

Token 98: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.0339031834737398e-05
    2. '.' → logprob: -10.875020027160645
    3. ']._' → logprob: -14.875020027160645
    4. ')._' → logprob: -15.000020027160645
    5. '_' → logprob: -15.875020027160645
    6. ' .' → logprob: -16.00002098083496
    7. '.G' → logprob: -16.37502098083496
    8. '   ' → logprob: -16.37502098083496
    9. '.E' → logprob: -16.37502098083496
    10. '._
' → logprob: -16.87502098083496

Token 99: 'get' (ID: 522)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -4.320199877838604e-07
    2. '_E' → logprob: -15.0
    3. ' E' → logprob: -17.75
    4. '	E' → logprob: -19.5
    5. '<E' → logprob: -19.75
    6. '>E' → logprob: -20.625
    7. '-E' → logprob: -21.25
    8. 'Ｅ' → logprob: -21.375
    9. 'Е' → logprob: -21.5
    10. 'EClass' → logprob: -21.875

Token 100: '_E' (ID: 6584)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3014874756336212
    2. '_' → logprob: -1.5514874458312988
    3. ' ' → logprob: -3.926487445831299
    4. '_E' → logprob: -4.176487445831299
    5. 'E' → logprob: -5.176487445831299
    6. '()' → logprob: -5.801487445831299
    7. '_e' → logprob: -7.176487445831299
    8. '__' → logprob: -7.426487445831299
    9. '  ' → logprob: -7.801487445831299
    10. ' E' → logprob: -7.926487445831299

Token 101: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.061054359131958e-06
    2. '()
' → logprob: -12.625007629394531
    3. '(' → logprob: -12.750007629394531
    4. ' ()' → logprob: -14.000007629394531
    5. '()

' → logprob: -14.875007629394531
    6. '()`' → logprob: -16.00000762939453
    7. '()]' → logprob: -16.37500762939453
    8. '<|end|>' → logprob: -16.62500762939453
    9. '()"' → logprob: -16.87500762939453
    10. '()\' → logprob: -17.00000762939453

Token 102: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4592636227607727
    2. '(' → logprob: -1.584263563156128
    3. '
' → logprob: -3.084263563156128
    4. ':' → logprob: -3.459263563156128
    5. '(
' → logprob: -3.459263563156128
    6. '()
' → logprob: -3.959263563156128
    7. '\' → logprob: -4.334263801574707
    8. '<|end|>' → logprob: -5.209263801574707
    9. '():' → logprob: -5.459263801574707
    10. '\n' → logprob: -5.584263801574707

Token 103: ' def' (ID: 1056)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29861247539520264
    2. '(' → logprob: -2.173612594604492
    3. '()
' → logprob: -2.798612594604492
    4. ':' → logprob: -3.548612594604492
    5. '
' → logprob: -3.798612594604492
    6. 'def' (adapté à ' def') → logprob: -4.923612594604492
    7. '(
' → logprob: -5.298612594604492
    8. '():' → logprob: -5.423612594604492
    9. '   ' → logprob: -5.548612594604492
    10. '<|end|>' → logprob: -5.923612594604492

Token 104: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.001443568617105484
    2. ' ' → logprob: -7.251443386077881
    3. '_get' → logprob: -7.876443386077881
    4. '_add' → logprob: -8.626443862915039
    5. '_' → logprob: -8.751443862915039
    6. ' def' → logprob: -11.376443862915039
    7. '  ' → logprob: -13.001443862915039
    8. ' ' → logprob: -14.126443862915039
    9. ' get' → logprob: -14.376443862915039
    10. '_def' → logprob: -15.001443862915039

Token 105: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -5.512236498361744e-07
    2. '_get' → logprob: -14.500000953674316
    3. ' get' → logprob: -18.25
    4. 'g' → logprob: -18.625
    5. 'init' → logprob: -19.375
    6. 'getitem' → logprob: -19.625
    7. 'gete' → logprob: -20.375
    8. 'E' → logprob: -20.5
    9. '.get' → logprob: -20.625
    10. '-get' → logprob: -20.75

Token 106: '_E' (ID: 6584)
  Prédit: '_E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_E' → logprob: -3.292907877039397e-06
    2. 'E' → logprob: -12.75000286102295
    3. '_' → logprob: -16.125003814697266
    4. '_EOL' → logprob: -16.875003814697266
    5. '```' → logprob: -17.000003814697266
    6. ' _' → logprob: -17.500003814697266
    7. '<E' → logprob: -17.500003814697266
    8. '_e' → logprob: -17.750003814697266
    9. '	E' → logprob: -18.000003814697266
    10. ' E' → logprob: -18.000003814697266

Token 107: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.702754474943504e-05
    2. '()' → logprob: -11.00003719329834
    3. '(' → logprob: -11.87503719329834
    4. 'self' → logprob: -12.25003719329834
    5. '(s' → logprob: -12.50003719329834
    6. '(
' → logprob: -13.37503719329834
    7. '():
' → logprob: -13.50003719329834
    8. '():' → logprob: -14.62503719329834
    9. '   ' → logprob: -14.75003719329834
    10. ' ' → logprob: -15.62503719329834

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008730157278478146
    2. '):
' → logprob: -5.008729934692383
    3. ')' → logprob: -6.258729934692383
    4. 'self' → logprob: -9.758729934692383
    5. '():' → logprob: -11.383729934692383
    6. ' ):' → logprob: -11.883729934692383
    7. '   ' → logprob: -12.008729934692383
    8. '):

' → logprob: -12.133729934692383
    9. '):
' → logprob: -12.633729934692383
    10. '       ' → logprob: -13.383729934692383

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037037418223917484
    2. ' return' → logprob: -8.750370025634766
    3. 'return' → logprob: -9.500370025634766
    4. '<|end|>' → logprob: -9.875370025634766
    5. ' ' → logprob: -10.625370025634766
    6. '
' → logprob: -11.250370025634766
    7. '   ' → logprob: -11.375370025634766
    8. '()' → logprob: -11.625370025634766
    9. '	' → logprob: -12.000370025634766
    10. '	return' → logprob: -12.250370025634766

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09571203589439392
    2. ' return' → logprob: -2.5957119464874268
    3. '       ' → logprob: -4.095712184906006
    4. '	return' → logprob: -10.595711708068848
    5. '   ' → logprob: -11.595711708068848
    6. 'self' → logprob: -13.595711708068848
    7. '{return' → logprob: -14.220711708068848
    8. ':return' → logprob: -14.720711708068848
    9. ' ' → logprob: -15.345711708068848
    10. '```' → logprob: -15.470711708068848

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.038046084344387054
    2. 'self' → logprob: -3.28804612159729
    3. '       ' → logprob: -13.288045883178711
    4. ' ' → logprob: -13.288045883178711
    5. '	self' → logprob: -14.163045883178711
    6. ' ' → logprob: -14.788045883178711
    7. '(self' → logprob: -16.66304588317871
    8. '   ' → logprob: -16.78804588317871
    9. ' len' → logprob: -17.16304588317871
    10. '    ' → logprob: -18.28804588317871

Token 112: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.996708104154095e-05
    2. '.' → logprob: -9.625100135803223
    3. ' .' → logprob: -11.500100135803223
    4. '   ' → logprob: -11.875100135803223
    5. '.E' → logprob: -12.000100135803223
    6. '       ' → logprob: -12.250100135803223
    7. '_' → logprob: -13.500100135803223
    8. ' ' → logprob: -14.125100135803223
    9. ']._' → logprob: -14.250100135803223
    10. ' _' → logprob: -14.500100135803223

Token 113: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -1.9361264946837764e-07
    2. '_E' → logprob: -16.625
    3. ' E' → logprob: -17.75
    4. 'get' → logprob: -19.25
    5. '	E' → logprob: -20.75
    6. 'Е' → logprob: -21.625
    7. '-E' → logprob: -21.75
    8. '.E' → logprob: -21.75
    9. '<E' → logprob: -22.125
    10. 'Ｅ' → logprob: -22.125

Token 114: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 115: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' @' (ID: 759)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09578471630811691
    2. '.' → logprob: -2.5957846641540527
    3. '   ' → logprob: -4.845784664154053
    4. 'self' → logprob: -5.845784664154053
    5. '<|end|>' → logprob: -5.970784664154053
    6. ' ' → logprob: -6.970784664154053
    7. 's' → logprob: -7.470784664154053
    8. 'def' → logprob: -7.470784664154053
    9. ')' → logprob: -8.470785140991211
    10. '#' → logprob: -8.845785140991211

Token 117: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0002193908003391698
    2. 'E' → logprob: -8.625219345092773
    3. 'staticmethod' → logprob: -10.750219345092773
    4. 'classmethod' → logprob: -11.125219345092773
    5. '_property' → logprob: -14.000219345092773
    6. 'pro' → logprob: -14.250219345092773
    7. '@property' → logprob: -14.375219345092773
    8. 'prop' → logprob: -14.750219345092773
    9. 'proper' → logprob: -15.500219345092773
    10. ' property' → logprob: -15.625219345092773

Token 118: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0548466257750988
    2. '<|end|>' → logprob: -3.8048465251922607
    3. 'E' → logprob: -4.17984676361084
    4. '
' → logprob: -4.80484676361084
    5. ' def' → logprob: -5.80484676361084
    6. '   ' → logprob: -6.55484676361084
    7. '\' → logprob: -7.55484676361084
    8. '(' → logprob: -7.55484676361084
    9. '_def' → logprob: -7.92984676361084
    10. '_' → logprob: -8.05484676361084

Token 119: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005477909464389086
    2. '<|end|>' → logprob: -6.0054779052734375
    3. '
' → logprob: -6.5054779052734375
    4. ' def' → logprob: -6.7554779052734375
    5. 'E' → logprob: -8.880477905273438
    6. '_def' → logprob: -9.630477905273438
    7. '   ' → logprob: -10.005477905273438
    8. '<|end|>' → logprob: -10.255477905273438
    9. 'Def' → logprob: -11.880477905273438
    10. 'V' → logprob: -11.880477905273438

Token 120: ' def' (ID: 1056)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.11381707340478897
    2. 'def' (adapté à ' def') → logprob: -2.238816976547241
    3. '
' → logprob: -7.11381721496582
    4. 'E' → logprob: -9.23881721496582
    5. '_V' → logprob: -9.86381721496582
    6. '   ' → logprob: -11.23881721496582
    7. ' V' → logprob: -11.98881721496582
    8. ' def' → logprob: -11.98881721496582
    9. 'v' → logprob: -13.98881721496582
    10. '_' → logprob: -14.23881721496582

Token 121: ' V' (ID: 631)
  Prédit: ' V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.045056238770484924
    2. 'V' → logprob: -3.1700563430786133
    3. ' _' → logprob: -6.920056343078613
    4. '_V' → logprob: -7.295056343078613
    5. ' ' → logprob: -8.920056343078613
    6. '	V' → logprob: -9.545056343078613
    7. '_' → logprob: -9.670056343078613
    8. ' ' → logprob: -10.420056343078613
    9. '
' → logprob: -10.670056343078613
    10. '<|end|>' → logprob: -10.795056343078613

Token 122: '(self' (ID: 2402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029280001297593117
    2. '):' → logprob: -3.654279947280884
    3. '):
' → logprob: -6.529280185699463
    4. '<|end|>' → logprob: -6.779280185699463
    5. ')return' → logprob: -9.279279708862305
    6. ':' → logprob: -9.279279708862305
    7. ')
' → logprob: -9.904279708862305
    8. '<|end|>' → logprob: -9.904279708862305
    9. '):

' → logprob: -10.529279708862305
    10. '   ' → logprob: -10.904279708862305

Token 124: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018395043909549713
    2. '       ' → logprob: -4.893394947052002
    3. ' return' → logprob: -4.893394947052002
    4. 'self' → logprob: -6.018394947052002
    5. '<|end|>' → logprob: -7.768394947052002
    6. '
' → logprob: -9.01839542388916
    7. '   ' → logprob: -9.26839542388916
    8. '	return' → logprob: -9.89339542388916
    9. ' 
' → logprob: -10.76839542388916
    10. ' self' → logprob: -10.76839542388916

Token 126: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.011049113236367702
    2. 'self' → logprob: -4.511049270629883
    3. ' ' → logprob: -14.636049270629883
    4. ' ' → logprob: -14.886049270629883
    5. '_self' → logprob: -15.511049270629883
    6. '	self' → logprob: -15.886049270629883
    7. '(self' → logprob: -16.011049270629883
    8. ' _' → logprob: -17.636049270629883
    9. '<|end|>' → logprob: -17.636049270629883
    10. ' s' → logprob: -18.886049270629883

Token 127: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00023202638840302825
    2. '.' → logprob: -8.375231742858887
    3. '_' → logprob: -14.250231742858887
    4. ' .' → logprob: -15.250231742858887
    5. '.__' → logprob: -15.875231742858887
    6. '   ' → logprob: -16.250232696533203
    7. '<|end|>' → logprob: -16.875232696533203
    8. '.
' → logprob: -17.125232696533203
    9. '."_' → logprob: -17.250232696533203
    10. ']._' → logprob: -17.500232696533203

Token 128: 'get' (ID: 522)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -8.180258191714529e-06
    2. 'get' → logprob: -11.750008583068848
    3. '_V' → logprob: -15.125008583068848
    4. ' V' → logprob: -17.37500762939453
    5. 'init' → logprob: -18.62500762939453
    6. '_get' → logprob: -19.62500762939453
    7. 'v' → logprob: -19.62500762939453
    8. '<V' → logprob: -20.37500762939453
    9. '	V' → logprob: -20.37500762939453
    10. '
' → logprob: -20.50000762939453

Token 129: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -0.0036427148152142763
    2. '_E' → logprob: -5.628642559051514
    3. '_' → logprob: -11.253643035888672
    4. 'V' → logprob: -11.503643035888672
    5. '```' → logprob: -12.378643035888672
    6. ' _' → logprob: -12.503643035888672
    7. '()' → logprob: -12.503643035888672
    8. '(V' → logprob: -13.503643035888672
    9. '(' → logprob: -13.628643035888672
    10. '__' → logprob: -13.878643035888672

Token 130: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018289826810359955
    2. '(' → logprob: -4.018290042877197
    3. '(
' → logprob: -9.643289566040039
    4. '()
' → logprob: -9.643289566040039
    5. '(

' → logprob: -12.768289566040039
    6. '()

' → logprob: -12.893289566040039
    7. '<|end|>' → logprob: -13.018289566040039
    8. '()`' → logprob: -14.643289566040039
    9. '#' → logprob: -14.893289566040039
    10. '().' → logprob: -15.518289566040039

Token 131: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39520835876464844
    2. '(' → logprob: -1.6452083587646484
    3. '<|end|>' → logprob: -2.6452083587646484
    4. '   ' → logprob: -4.020208358764648
    5. '()' → logprob: -4.145208358764648
    6. ')' → logprob: -5.020208358764648
    7. 'self' → logprob: -5.145208358764648
    8. 'def' → logprob: -5.770208358764648
    9. '       ' → logprob: -6.020208358764648
    10. 's' → logprob: -6.145208358764648

Token 132: ' def' (ID: 1056)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1978939771652222
    2. '()' → logprob: -1.1978939771652222
    3. '(' → logprob: -1.5728939771652222
    4. 'def' (adapté à ' def') → logprob: -2.5728940963745117
    5. '<|end|>' → logprob: -2.8228940963745117
    6. '```' → logprob: -4.197894096374512
    7. '   ' → logprob: -4.447894096374512
    8. 'self' → logprob: -4.947894096374512
    9. '#' → logprob: -4.947894096374512
    10. 's' → logprob: -5.447894096374512

Token 133: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4360296130180359
    2. '_get' → logprob: -1.0610296726226807
    3. '_self' → logprob: -5.936029434204102
    4. '(self' → logprob: -6.186029434204102
    5. '._' → logprob: -7.311029434204102
    6. ' ' → logprob: -8.186029434204102
    7. 'self' → logprob: -8.436029434204102
    8. ' self' → logprob: -8.561029434204102
    9. '   ' → logprob: -9.311029434204102
    10. '_' → logprob: -9.311029434204102

Token 134: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -3.214019307051785e-05
    2. 'g' → logprob: -10.750032424926758
    3. '_get' → logprob: -11.500032424926758
    4. ' get' → logprob: -15.500032424926758
    5. 'ge' → logprob: -16.000032424926758
    6. 'Get' → logprob: -17.375032424926758
    7. '.get' → logprob: -18.125032424926758
    8. '
' → logprob: -18.250032424926758
    9. '	get' → logprob: -18.250032424926758
    10. '```' → logprob: -18.500032424926758

Token 135: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -0.0009705372503958642
    2. 'V' → logprob: -7.000970363616943
    3. '```' → logprob: -10.750970840454102
    4. '(V' → logprob: -11.125970840454102
    5. '_E' → logprob: -12.000970840454102
    6. ' _' → logprob: -12.625970840454102
    7. 'self' → logprob: -12.750970840454102
    8. '_' → logprob: -12.875970840454102
    9. '__' → logprob: -13.250970840454102
    10. ' ' → logprob: -14.125970840454102

Token 136: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4014144837856293
    2. '(self' → logprob: -1.2764145135879517
    3. '(' → logprob: -3.151414394378662
    4. '(
' → logprob: -4.776414394378662
    5. '()
' → logprob: -8.27641487121582
    6. '()(' → logprob: -10.52641487121582
    7. '<|end|>' → logprob: -10.52641487121582
    8. 'self' → logprob: -10.77641487121582
    9. '(

' → logprob: -11.90141487121582
    10. '```' → logprob: -12.02641487121582

Token 137: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035000499337911606
    2. '()' → logprob: -6.253499984741211
    3. '())' → logprob: -6.503499984741211
    4. ')return' → logprob: -10.628499984741211
    5. ' )' → logprob: -11.253499984741211
    6. ')
' → logprob: -11.628499984741211
    7. '(' → logprob: -12.128499984741211
    8. '()
' → logprob: -13.003499984741211
    9. '):' → logprob: -13.003499984741211
    10. ' ())' → logprob: -13.253499984741211

Token 138: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6195446848869324
    2. '       ' → logprob: -1.3695447444915771
    3. 'self' → logprob: -1.6195447444915771
    4. '   ' → logprob: -5.244544506072998
    5. '<|end|>' → logprob: -6.619544506072998
    6. '(self' → logprob: -7.244544506072998
    7. '	self' → logprob: -7.494544506072998
    8. '
' → logprob: -7.619544506072998
    9. ' return' → logprob: -7.994544506072998
    10. ' ' → logprob: -8.119544982910156

Token 139: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006881289882585406
    2. 'return' (adapté à ' return') → logprob: -7.500688076019287
    3. ' self' → logprob: -9.000688552856445
    4. '       ' → logprob: -11.375688552856445
    5. ' return' → logprob: -15.500688552856445
    6. '   ' → logprob: -16.250688552856445
    7. '	self' → logprob: -17.375688552856445
    8. '```' → logprob: -19.000688552856445
    9. ' ' → logprob: -19.250688552856445
    10. '(self' → logprob: -19.375688552856445

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687145709991455
    2. ' self' → logprob: -1.1368714570999146
    3. '	self' → logprob: -15.886871337890625
    4. '_self' → logprob: -16.261871337890625
    5. '(self' → logprob: -16.386871337890625
    6. ' ' → logprob: -16.761871337890625
    7. ' ' → logprob: -17.386871337890625
    8. 'Self' → logprob: -18.386871337890625
    9. '   ' → logprob: -19.511871337890625
    10. ' _' → logprob: -19.636871337890625

Token 141: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00020509003661572933
    2. '.' → logprob: -8.500205039978027
    3. '.V' → logprob: -14.375205039978027
    4. ' .' → logprob: -14.625205039978027
    5. '.__' → logprob: -15.125205039978027
    6. 'self' → logprob: -16.625205993652344
    7. '.
' → logprob: -16.875205993652344
    8. '   ' → logprob: -17.125205993652344
    9. ']._' → logprob: -18.125205993652344
    10. '._
' → logprob: -18.500205993652344

Token 142: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.9361264946837764e-07
    2. '_V' → logprob: -16.625
    3. ' V' → logprob: -16.875
    4. '.V' → logprob: -19.875
    5. '	V' → logprob: -22.125
    6. 'VNode' → logprob: -22.375
    7. '<V' → logprob: -22.625
    8. 'get' → logprob: -23.125
    9. '(V' → logprob: -23.125
    10. '[V' → logprob: -23.25

Token 143: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19623763859272003
    2. ' ' → logprob: -2.071237564086914
    3. '.' → logprob: -4.821237564086914
    4. '    ' → logprob: -4.821237564086914
    5. ' 
' → logprob: -4.946237564086914
    6. '<|end|>' → logprob: -5.196237564086914
    7. '    
' → logprob: -5.446237564086914
    8. '
' → logprob: -5.696237564086914
    9. ':' → logprob: -5.946237564086914
    10. '       ' → logprob: -6.196237564086914

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1754833161830902
    2. '   ' → logprob: -2.300483226776123
    3. ' def' → logprob: -3.425483226776123
    4. ' ' → logprob: -4.050483226776123
    5. ' 
' → logprob: -5.425483226776123
    6. '    ' → logprob: -6.300483226776123
    7. '    
' → logprob: -6.550483226776123
    8. ')' → logprob: -7.425483226776123
    9. 'd' → logprob: -7.550483226776123
    10. '_' → logprob: -7.925483226776123

Token 146: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0034178397618234158
    2. '_add' → logprob: -6.12841796875
    3. 'add' → logprob: -7.62841796875
    4. ' def' → logprob: -7.87841796875
    5. ' _' → logprob: -8.50341796875
    6. ' append' → logprob: -9.25341796875
    7. ' addedge' → logprob: -10.37841796875
    8. '.add' → logprob: -11.62841796875
    9. '_' → logprob: -12.00341796875
    10. ' insert' → logprob: -12.87841796875

Token 147: '(self' (ID: 2402)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0019461298361420631
    2. '_' → logprob: -6.251945972442627
    3. '_vertex' → logprob: -12.876946449279785
    4. '_edges' → logprob: -12.876946449279785
    5. '_node' → logprob: -13.001946449279785
    6. ' _' → logprob: -13.126946449279785
    7. '_line' → logprob: -13.876946449279785
    8. ' ' → logprob: -14.001946449279785
    9. '   ' → logprob: -14.001946449279785
    10. 'edge' → logprob: -14.126946449279785

Token 148: ',' (ID: 11)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0005624461336992681
    2. '_' → logprob: -7.75056266784668
    3. ')_' → logprob: -10.00056266784668
    4. ' _' → logprob: -11.12556266784668
    5. '_vertex' → logprob: -11.25056266784668
    6. 'edge' → logprob: -11.37556266784668
    7. '   ' → logprob: -11.62556266784668
    8. ')' → logprob: -11.75056266784668
    9. 'Edge' → logprob: -12.12556266784668
    10. ' ' → logprob: -12.50056266784668

Token 149: ' _' (ID: 1175)
  Prédit: 'fr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fr' → logprob: -1.5342681407928467
    2. 'from' → logprob: -1.6592681407928467
    3. 's' → logprob: -2.1592681407928467
    4. 'frm' → logprob: -2.2842681407928467
    5. ' fr' → logprob: -2.6592681407928467
    6. ' from' → logprob: -2.9092681407928467
    7. 'u' → logprob: -3.0342681407928467
    8. ' s' → logprob: -3.0342681407928467
    9. '_from' → logprob: -3.5342681407928467
    10. 'v' → logprob: -3.5342681407928467

Token 150: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07971668988466263
    2. 'u' → logprob: -3.329716682434082
    3. 'to' → logprob: -4.079716682434082
    4. 'v' → logprob: -4.079716682434082
    5. '_from' → logprob: -5.829716682434082
    6. 'fr' → logprob: -6.204716682434082
    7. 'edge' → logprob: -7.454716682434082
    8. 'frm' → logprob: -7.954716682434082
    9. 'a' → logprob: -8.204716682434082
    10. ')' → logprob: -8.454716682434082

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ' ,' → logprob: -9.625075340270996
    3. ',_' → logprob: -12.125075340270996
    4. '_,' → logprob: -12.875075340270996
    5. ')' → logprob: -14.375075340270996
    6. ',to' → logprob: -14.625075340270996
    7. ',self' → logprob: -14.875075340270996
    8. ',int' → logprob: -17.375076293945312
    9. '),' → logprob: -17.750076293945312
    10. '‌,' → logprob: -17.750076293945312

Token 152: ' _' (ID: 1175)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.001521049183793366
    2. ' _' → logprob: -7.126521110534668
    3. '_from' → logprob: -7.251521110534668
    4. 'to' → logprob: -12.876521110534668
    5. ' to' → logprob: -13.126521110534668
    6. '   ' → logprob: -14.126521110534668
    7. '_t' → logprob: -14.626521110534668
    8. '_next' → logprob: -15.501521110534668
    9. '_for' → logprob: -15.751521110534668
    10. '_cost' → logprob: -15.751521110534668

Token 153: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -3.297462171758525e-05
    2. ')' → logprob: -11.000033378601074
    3. '):' → logprob: -11.125033378601074
    4. ' to' → logprob: -14.000033378601074
    5. ':' → logprob: -16.000032424926758
    6. '):
' → logprob: -16.625032424926758
    7. 't' → logprob: -16.875032424926758
    8. ',' → logprob: -17.000032424926758
    9. 'token' → logprob: -17.250032424926758
    10. ' ' → logprob: -17.625032424926758

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025162079837173223
    2. '):' → logprob: -6.002516269683838
    3. ')' → logprob: -10.25251579284668
    4. ' ,' → logprob: -12.75251579284668
    5. '):
' → logprob: -14.25251579284668
    6. '   ' → logprob: -15.12751579284668
    7. '),' → logprob: -15.37751579284668
    8. '<|end|>' → logprob: -15.87751579284668
    9. ',self' → logprob: -16.50251579284668
    10. ':' → logprob: -16.50251579284668

Token 155: ' _' (ID: 1175)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.003149789059534669
    2. ' _' → logprob: -6.00314998626709
    3. ' cost' → logprob: -7.62814998626709
    4. 'cost' → logprob: -8.62814998626709
    5. '_c' → logprob: -12.25314998626709
    6. '_COST' → logprob: -13.00314998626709
    7. '_' → logprob: -14.75314998626709
    8. ' ' → logprob: -16.253149032592773
    9. '_cut' → logprob: -16.503149032592773
    10. ')' → logprob: -16.503149032592773

Token 156: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.0219828002154827e-05
    2. ' cost' → logprob: -11.250020027160645
    3. '_cost' → logprob: -11.875020027160645
    4. 'c' → logprob: -16.62502098083496
    5. ')' → logprob: -16.87502098083496
    6. 'cos' → logprob: -17.00002098083496
    7. '(cost' → logprob: -17.75002098083496
    8. 'cast' → logprob: -18.12502098083496
    9. 'Cost' → logprob: -18.50002098083496
    10. '
' → logprob: -19.00002098083496

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00082309142453596
    2. ')' → logprob: -7.125823020935059
    3. '):
' → logprob: -11.375823020935059
    4. ' ):' → logprob: -12.125823020935059
    5. ':' → logprob: -14.125823020935059
    6. ',' → logprob: -14.750823020935059
    7. '   ' → logprob: -15.750823020935059
    8. '):
' → logprob: -16.250823974609375
    9. ')：' → logprob: -16.625823974609375
    10. '):

' → logprob: -17.125823974609375

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002792753279209137
    2. ':' → logprob: -6.377792835235596
    3. ')' → logprob: -8.002792358398438
    4. '):' → logprob: -8.752792358398438
    5. 'self' → logprob: -9.002792358398438
    6. '<|end|>' → logprob: -9.002792358398438
    7. ',' → logprob: -10.002792358398438
    8. '):
' → logprob: -10.002792358398438
    9. ' self' → logprob: -10.002792358398438
    10. '        
' → logprob: -10.252792358398438

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008928901515901089
    2. ' self' → logprob: -4.8839287757873535
    3. '       ' → logprob: -6.6339287757873535
    4. 'if' → logprob: -12.883929252624512
    5. '	self' → logprob: -13.133929252624512
    6. '   ' → logprob: -14.383929252624512
    7. ' ' → logprob: -15.133929252624512
    8. ' if' → logprob: -15.633929252624512
    9. '```' → logprob: -15.758929252624512
    10. 's' → logprob: -16.008928298950195

Token 160: '._' (ID: 2697)
  Prédit: '.G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.020588131621479988
    2. '.' → logprob: -3.8955881595611572
    3. '._' → logprob: -10.395587921142578
    4. ' .' → logprob: -12.020587921142578
    5. 'G' → logprob: -13.020587921142578
    6. '.S' → logprob: -13.395587921142578
    7. '   ' → logprob: -14.020587921142578
    8. ').' → logprob: -14.145587921142578
    9. '.​' → logprob: -14.270587921142578
    10. '.Г' → logprob: -14.645587921142578

Token 161: 'add' (ID: 964)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.049142614006996155
    2. 'get' → logprob: -3.049142599105835
    3. 'V' → logprob: -8.424142837524414
    4. 'G' → logprob: -8.549142837524414
    5. 'init' → logprob: -9.424142837524414
    6. 'add' → logprob: -10.424142837524414
    7. 'from' → logprob: -12.424142837524414
    8. ' E' → logprob: -13.174142837524414
    9. '.E' → logprob: -13.174142837524414
    10. '`' → logprob: -13.299142837524414

Token 162: '_edge' (ID: 43226)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.642310380935669
    2. '_edge' → logprob: -0.767310380935669
    3. 'Edge' → logprob: -5.89231014251709
    4. '_edges' → logprob: -6.01731014251709
    5. '_from' → logprob: -6.51731014251709
    6. '(from' → logprob: -6.64231014251709
    7. '(' → logprob: -7.39231014251709
    8. 'edge' → logprob: -7.51731014251709
    9. 'from' → logprob: -9.01731014251709
    10. '_cost' → logprob: -9.89231014251709

Token 163: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -5.300083648762666e-05
    2. '(' → logprob: -10.125053405761719
    3. '((_' → logprob: -11.875053405761719
    4. '_from' → logprob: -12.750053405761719
    5. ')(_' → logprob: -13.375053405761719
    6. 's' → logprob: -14.750053405761719
    7. '(self' → logprob: -15.500053405761719
    8. '(__' → logprob: -16.12505340576172
    9. 'From' → logprob: -16.87505340576172
    10. '[_' → logprob: -17.00005340576172

Token 164: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -3.531315314830863e-06
    2. 'to' → logprob: -13.750003814697266
    3. 'fr' → logprob: -14.750003814697266
    4. 'f' → logprob: -15.000003814697266
    5. ')' → logprob: -15.125003814697266
    6. 'fro' → logprob: -15.125003814697266
    7. ' from' → logprob: -15.250003814697266
    8. 'E' → logprob: -15.875003814697266
    9. 'graph' → logprob: -16.000003814697266
    10. '
' → logprob: -16.125003814697266

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.939851037808694e-05
    2. ',_' → logprob: -11.000029563903809
    3. ' ,' → logprob: -11.375029563903809
    4. ')' → logprob: -14.125029563903809
    5. '<|end|>' → logprob: -15.750029563903809
    6. ',
' → logprob: -16.250028610229492
    7. ',self' → logprob: -17.000028610229492
    8. '_,' → logprob: -17.125028610229492
    9. ' ' → logprob: -17.375028610229492
    10. '),' → logprob: -17.375028610229492

Token 166: ' _' (ID: 1175)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.01656646654009819
    2. ' _' → logprob: -4.141566276550293
    3. '_t' → logprob: -8.516566276550293
    4. '_cost' → logprob: -9.266566276550293
    5. ' to' → logprob: -9.391566276550293
    6. 'to' → logprob: -9.766566276550293
    7. '_from' → logprob: -9.891566276550293
    8. ')' → logprob: -11.891566276550293
    9. '<|end|>' → logprob: -12.016566276550293
    10. 'To' → logprob: -12.016566276550293

Token 167: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0010505540994927287
    2. 'cost' → logprob: -6.8760504722595215
    3. 'from' → logprob: -11.75105094909668
    4. ' to' → logprob: -11.87605094909668
    5. ')' → logprob: -14.25105094909668
    6. '
' → logprob: -14.50105094909668
    7. ' cost' → logprob: -14.62605094909668
    8. ' ' → logprob: -15.25105094909668
    9. ',' → logprob: -15.75105094909668
    10. '   ' → logprob: -15.87605094909668

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ')' → logprob: -13.000005722045898
    3. ',_' → logprob: -13.125005722045898
    4. ' ,' → logprob: -13.500005722045898
    5. ',
' → logprob: -15.875005722045898
    6. '_cost' → logprob: -17.1250057220459
    7. 'self' → logprob: -17.2500057220459
    8. '_,' → logprob: -17.5000057220459
    9. ',self' → logprob: -17.8750057220459
    10. ',

' → logprob: -18.0000057220459

Token 169: ' _' (ID: 1175)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.004091697279363871
    2. ' _' → logprob: -5.504091739654541
    3. ' cost' → logprob: -12.004091262817383
    4. '_' → logprob: -13.129091262817383
    5. '_c' → logprob: -13.129091262817383
    6. '_COST' → logprob: -13.129091262817383
    7. '_cos' → logprob: -15.379091262817383
    8. '_loss' → logprob: -15.754091262817383
    9. '_cut' → logprob: -16.004091262817383
    10. '
' → logprob: -16.129091262817383

Token 170: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.9862216504407115e-05
    2. ' cost' → logprob: -11.125020027160645
    3. '_cost' → logprob: -12.250020027160645
    4. ')' → logprob: -16.875019073486328
    5. 'cast' → logprob: -17.125019073486328
    6. 'c' → logprob: -17.250019073486328
    7. 'cos' → logprob: -17.250019073486328
    8. '
' → logprob: -17.500019073486328
    9. '-cost' → logprob: -17.625019073486328
    10. '.cost' → logprob: -17.625019073486328

Token 171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014048899174667895
    2. ')
' → logprob: -8.875140190124512
    3. ' )' → logprob: -15.125140190124512
    4. ')

' → logprob: -16.250141143798828
    5. ')
' → logprob: -16.625141143798828
    6. ')return' → logprob: -16.625141143798828
    7. '       ' → logprob: -17.125141143798828
    8. '   ' → logprob: -17.500141143798828
    9. '),' → logprob: -18.000141143798828
    10. '<|end|>' → logprob: -18.625141143798828

Token 172: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.541836678981781
    2. '<|end|>' → logprob: -0.916836678981781
    3. '       ' → logprob: -4.916836738586426
    4. '   ' → logprob: -5.041836738586426
    5. '<|end|>' → logprob: -7.166836738586426
    6. 'newline' → logprob: -7.416836738586426
    7. '()' → logprob: -7.666836738586426
    8. ')' → logprob: -7.791836738586426
    9. '    
' → logprob: -7.791836738586426
    10. '\n' → logprob: -7.791836738586426

Token 173: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' _' (ID: 1175)
  Prédit: '_add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_add' → logprob: -0.5760758519172668
    2. ' _' → logprob: -0.8260758519172668
    3. '_' → logprob: -9.201075553894043
    4. ' ' → logprob: -11.951075553894043
    5. '_ad' → logprob: -12.451075553894043
    6. ' ' → logprob: -12.826075553894043
    7. '_insert' → logprob: -12.951075553894043
    8. '_def' → logprob: -13.201075553894043
    9. '._' → logprob: -13.451075553894043
    10. '_append' → logprob: -13.451075553894043

Token 175: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.225939872208983e-05
    2. '_add' → logprob: -10.625032424926758
    3. 'get' → logprob: -12.375032424926758
    4. 'init' → logprob: -14.125032424926758
    5. ' add' → logprob: -14.250032424926758
    6. '	add' → logprob: -14.750032424926758
    7. 'a' → logprob: -15.500032424926758
    8. '.add' → logprob: -15.500032424926758
    9. '
' → logprob: -15.750032424926758
    10. 'ad' → logprob: -15.875032424926758

Token 176: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.954393079970032e-05
    2. '_' → logprob: -10.250049591064453
    3. '_edges' → logprob: -11.375049591064453
    4. 'edge' → logprob: -15.000049591064453
    5. '_line' → logprob: -15.000049591064453
    6. ' _' → logprob: -15.375049591064453
    7. '_ed' → logprob: -15.500049591064453
    8. '_e' → logprob: -15.750049591064453
    9. '```' → logprob: -15.750049591064453
    10. '_EDGE' → logprob: -16.500049591064453

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011796683247666806
    2. '(' → logprob: -9.125118255615234
    3. '(s' → logprob: -11.875118255615234
    4. 'self' → logprob: -14.250118255615234
    5. '(
' → logprob: -14.500118255615234
    6. ' (' → logprob: -14.875118255615234
    7. '(sel' → logprob: -15.250118255615234
    8. '<|end|>' → logprob: -16.750118255615234
    9. '	self' → logprob: -17.000118255615234
    10. ' ' → logprob: -17.250118255615234

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003444024478085339
    2. ',_' → logprob: -8.750344276428223
    3. 'self' → logprob: -9.000344276428223
    4. ' ,' → logprob: -10.625344276428223
    5. ',self' → logprob: -11.125344276428223
    6. ')' → logprob: -11.625344276428223
    7. '(self' → logprob: -12.250344276428223
    8. '_,' → logprob: -13.250344276428223
    9. ',
' → logprob: -13.875344276428223
    10. '<|end|>' → logprob: -13.875344276428223

Token 179: ' _' (ID: 1175)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.31525447964668274
    2. ' _' → logprob: -1.3152544498443604
    3. 'self' → logprob: -7.1902546882629395
    4. ' self' → logprob: -7.1902546882629395
    5. '_self' → logprob: -7.8152546882629395
    6. 'from' → logprob: -10.440254211425781
    7. '_to' → logprob: -11.440254211425781
    8. ' from' → logprob: -11.565254211425781
    9. ' ' → logprob: -11.940254211425781
    10. '_add' → logprob: -12.690254211425781

Token 180: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.8074162653647363e-05
    2. '_from' → logprob: -11.000018119812012
    3. 'to' → logprob: -15.125018119812012
    4. 'f' → logprob: -15.250018119812012
    5. 'fro' → logprob: -15.375018119812012
    6. '
' → logprob: -15.875018119812012
    7. ')' → logprob: -16.000017166137695
    8. 'fr' → logprob: -16.000017166137695
    9. ' from' → logprob: -16.250017166137695
    10. '.from' → logprob: -16.875017166137695

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.167648876318708e-05
    2. ',_' → logprob: -10.750041961669922
    3. ' ,' → logprob: -10.875041961669922
    4. ',self' → logprob: -14.750041961669922
    5. '_,' → logprob: -15.000041961669922
    6. 'self' → logprob: -15.500041961669922
    7. ',
' → logprob: -15.875041961669922
    8. '<|end|>' → logprob: -17.125041961669922
    9. '‌,' → logprob: -17.625041961669922
    10. ',to' → logprob: -17.750041961669922

Token 182: ' _' (ID: 1175)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.09218262881040573
    2. ' _' → logprob: -2.5921826362609863
    3. '_from' → logprob: -4.342182636260986
    4. '_cost' → logprob: -9.342182159423828
    5. '_t' → logprob: -9.467182159423828
    6. '_for' → logprob: -12.217182159423828
    7. '_' → logprob: -12.717182159423828
    8. '_in' → logprob: -12.967182159423828
    9. '   ' → logprob: -13.592182159423828
    10. '_user' → logprob: -13.717182159423828

Token 183: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.048660267144441605
    2. 'from' → logprob: -3.0486602783203125
    3. ',' → logprob: -9.923660278320312
    4. '_from' → logprob: -11.298660278320312
    5. '_to' → logprob: -12.173660278320312
    6. ')' → logprob: -12.923660278320312
    7. ' to' → logprob: -13.548660278320312
    8. 'for' → logprob: -14.048660278320312
    9. ',to' → logprob: -14.548660278320312
    10. 'From' → logprob: -15.923660278320312

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4285862057004124e-05
    2. ' ,' → logprob: -10.37503433227539
    3. ')' → logprob: -13.75003433227539
    4. ',_' → logprob: -14.62503433227539
    5. '),' → logprob: -14.87503433227539
    6. '       ' → logprob: -15.25003433227539
    7. '<|end|>' → logprob: -15.25003433227539
    8. ',
' → logprob: -15.75003433227539
    9. ',self' → logprob: -15.87503433227539
    10. '‌,' → logprob: -17.12503433227539

Token 185: ' _' (ID: 1175)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0024832691997289658
    2. ' _' → logprob: -6.002483367919922
    3. '_to' → logprob: -12.502483367919922
    4. '_c' → logprob: -13.877483367919922
    5. '_COST' → logprob: -14.627483367919922
    6. '_' → logprob: -14.752483367919922
    7. '_cos' → logprob: -14.877483367919922
    8. '_t' → logprob: -15.252483367919922
    9. '_from' → logprob: -15.252483367919922
    10. ' cost' → logprob: -15.377483367919922

Token 186: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00033534664544276893
    2. 'to' → logprob: -8.125335693359375
    3. '_cost' → logprob: -11.125335693359375
    4. ' cost' → logprob: -11.125335693359375
    5. ')' → logprob: -11.875335693359375
    6. 'cos' → logprob: -13.375335693359375
    7. 'co' → logprob: -13.750335693359375
    8. 'c' → logprob: -17.250335693359375
    9. 'Cost' → logprob: -17.250335693359375
    10. 'from' → logprob: -17.500335693359375

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00046606172691099346
    2. '):
' → logprob: -7.7504658699035645
    3. ')' → logprob: -10.500466346740723
    4. ':' → logprob: -12.875466346740723
    5. '   ' → logprob: -13.250466346740723
    6. '       ' → logprob: -13.250466346740723
    7. ' ):' → logprob: -13.500466346740723
    8. '):
' → logprob: -15.125466346740723
    9. '():' → logprob: -17.000465393066406
    10. '):

' → logprob: -17.375465393066406

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037499635946005583
    2. '<|end|>' → logprob: -6.503749847412109
    3. ')' → logprob: -7.378749847412109
    4. ' self' → logprob: -8.00374984741211
    5. '        
' → logprob: -8.00374984741211
    6. '):
' → logprob: -8.50374984741211
    7. ':' → logprob: -8.62874984741211
    8. '
' → logprob: -9.12874984741211
    9. ',' → logprob: -9.25374984741211
    10. '```' → logprob: -10.00374984741211

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2116834819316864
    2. '       ' → logprob: -1.8366835117340088
    3. ' self' → logprob: -3.461683511734009
    4. '	self' → logprob: -10.58668327331543
    5. '   ' → logprob: -11.46168327331543
    6. '
' → logprob: -12.71168327331543
    7. ' ' → logprob: -12.71168327331543
    8. 'if' → logprob: -12.96168327331543
    9. '```' → logprob: -13.21168327331543
    10. '	' → logprob: -13.33668327331543

Token 190: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.015663718804717064
    2. '._' → logprob: -4.7656636238098145
    3. '.' → logprob: -5.0156636238098145
    4. ' .' → logprob: -8.140664100646973
    5. 'self' → logprob: -11.015664100646973
    6. '   ' → logprob: -11.265664100646973
    7. '.S' → logprob: -11.765664100646973
    8. ' ' → logprob: -11.890664100646973
    9. '
' → logprob: -12.265664100646973
    10. '.​' → logprob: -12.390664100646973

Token 191: '[_' (ID: 24002)
  Prédit: '[_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[_' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '][_' → logprob: -16.5
    4. '_to' → logprob: -18.0
    5. '_from' → logprob: -18.25
    6. '[
' → logprob: -18.375
    7. '   ' → logprob: -19.0
    8. '```' → logprob: -19.125
    9. '[self' → logprob: -19.25
    10. ' [_' → logprob: -19.5

Token 192: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: 0.0
    2. '_from' → logprob: -17.5
    3. '.from' → logprob: -20.0
    4. 'for' → logprob: -20.75
    5. 'fro' → logprob: -21.0
    6. ' from' → logprob: -21.125
    7. 'From' → logprob: -21.625
    8. 'form' → logprob: -21.875
    9. '[from' → logprob: -22.5
    10. 'f' → logprob: -22.5

Token 193: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.040457421680912e-05
    2. ']' → logprob: -9.750070571899414
    3. ' ].' → logprob: -11.750070571899414
    4. '.append' → logprob: -12.750070571899414
    5. '.' → logprob: -13.625070571899414
    6. ').' → logprob: -16.875070571899414
    7. '}.' → logprob: -17.500070571899414
    8. ''].' → logprob: -17.625070571899414
    9. '   ' → logprob: -17.875070571899414
    10. 'append' → logprob: -18.000070571899414

Token 194: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.250000953674316
    3. ' append' → logprob: -16.75
    4. 'app' → logprob: -17.5
    5. 'appen' → logprob: -19.5
    6. '_append' → logprob: -20.25
    7. 'add' → logprob: -21.875
    8. ' ' → logprob: -21.875
    9. '	append' → logprob: -21.875
    10. 'ap' → logprob: -22.0

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002958565717563033
    2. '(D' → logprob: -6.00295877456665
    3. '(' → logprob: -7.75295877456665
    4. 'self' → logprob: -9.877958297729492
    5. '(
' → logprob: -14.377958297729492
    6. ' self' → logprob: -14.377958297729492
    7. 'D' → logprob: -14.877958297729492
    8. ' (' → logprob: -15.377958297729492
    9. '((' → logprob: -16.127958297729492
    10. '(d' → logprob: -16.377958297729492

Token 196: '.Edge' (ID: 195894)
  Prédit: '.Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Edge' → logprob: -4.417976379045285e-05
    2. '.' → logprob: -10.375043869018555
    3. '.Ed' → logprob: -12.250043869018555
    4. '.Class' → logprob: -12.500043869018555
    5. '.D' → logprob: -13.000043869018555
    6. 'Edge' → logprob: -13.875043869018555
    7. ' .' → logprob: -14.625043869018555
    8. '.edge' → logprob: -16.000043869018555
    9. '<Edge' → logprob: -16.125043869018555
    10. '.E' → logprob: -16.250043869018555

Token 197: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0006756199873052537
    2. '_to' → logprob: -8.250675201416016
    3. ')(_' → logprob: -8.375675201416016
    4. '(' → logprob: -8.875675201416016
    5. '((_' → logprob: -10.500675201416016
    6. '(to' → logprob: -12.000675201416016
    7. '(To' → logprob: -12.250675201416016
    8. ')' → logprob: -12.625675201416016
    9. '(
' → logprob: -13.625675201416016
    10. 'To' → logprob: -15.000675201416016

Token 198: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -2.339278580620885e-06
    2. 'from' → logprob: -13.625001907348633
    3. ' to' → logprob: -14.000001907348633
    4. '   ' → logprob: -16.750001907348633
    5. 't' → logprob: -16.875001907348633
    6. ')' → logprob: -17.375001907348633
    7. ' ' → logprob: -17.625001907348633
    8. ',' → logprob: -18.000001907348633
    9. '  ' → logprob: -18.375001907348633
    10. 'toq' → logprob: -18.375001907348633

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001294030516874045
    2. '_cost' → logprob: -9.500129699707031
    3. ',_' → logprob: -10.500129699707031
    4. ' ,' → logprob: -10.625129699707031
    5. ',c' → logprob: -13.750129699707031
    6. ',self' → logprob: -14.875129699707031
    7. 'cost' → logprob: -15.250129699707031
    8. ',
' → logprob: -15.625129699707031
    9. '_COST' → logprob: -15.875129699707031
    10. ' cost' → logprob: -16.00012969970703

Token 200: ' _' (ID: 1175)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00199477793648839
    2. ' _' → logprob: -6.251994609832764
    3. '_COST' → logprob: -10.251995086669922
    4. ' cost' → logprob: -11.001995086669922
    5. '_' → logprob: -12.751995086669922
    6. ')' → logprob: -12.876995086669922
    7. ' )' → logprob: -13.001995086669922
    8. '_c' → logprob: -13.126995086669922
    9. ' ' → logprob: -14.001995086669922
    10. ' 
' → logprob: -14.376995086669922

Token 201: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00013250234769657254
    2. '_cost' → logprob: -9.00013256072998
    3. ' cost' → logprob: -11.62513256072998
    4. '(cost' → logprob: -17.750131607055664
    5. '-cost' → logprob: -18.375131607055664
    6. '   ' → logprob: -19.000131607055664
    7. '.cost' → logprob: -19.250131607055664
    8. '
' → logprob: -19.500131607055664
    9. ')' → logprob: -19.500131607055664
    10. 'Cost' → logprob: -19.750131607055664

Token 202: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007890993729233742
    2. '))' → logprob: -5.0078911781311035
    3. ')
' → logprob: -6.7578911781311035
    4. '))
' → logprob: -11.382890701293945
    5. '       ' → logprob: -14.257890701293945
    6. ' )' → logprob: -14.632890701293945
    7. ')))' → logprob: -15.632890701293945
    8. ')

' → logprob: -15.757890701293945
    9. ')
' → logprob: -16.132890701293945
    10. ')#' → logprob: -16.382890701293945

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0072779180482029915
    2. '<|end|>' → logprob: -5.507277965545654
    3. 'self' → logprob: -6.757277965545654
    4. '
' → logprob: -6.757277965545654
    5. '	' → logprob: -7.632277965545654
    6. ' self' → logprob: -9.882277488708496
    7. '   ' → logprob: -10.007277488708496
    8. '+' → logprob: -10.007277488708496
    9. ')' → logprob: -10.132277488708496
    10. '	self' → logprob: -10.257277488708496

Token 204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004401274956762791
    2. ' self' → logprob: -6.004401206970215
    3. '       ' → logprob: -6.254401206970215
    4. '	self' → logprob: -13.754401206970215
    5. '
' → logprob: -14.754401206970215
    6. ' ' → logprob: -16.37940216064453
    7. '	' → logprob: -16.87940216064453
    8. '   ' → logprob: -17.00440216064453
    9. '```' → logprob: -17.00440216064453
    10. '(self' → logprob: -17.50440216064453

Token 205: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.0564331205387134e-05
    2. ')._' → logprob: -12.25001049041748
    3. ']._' → logprob: -12.50001049041748
    4. '.' → logprob: -13.50001049041748
    5. '._
' → logprob: -15.37501049041748
    6. 'self' → logprob: -15.50001049041748
    7. ' .' → logprob: -15.75001049041748
    8. '.__' → logprob: -16.875011444091797
    9. '."_' → logprob: -16.875011444091797
    10. '._

' → logprob: -17.750011444091797

Token 206: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: 0.0
    2. ' E' → logprob: -19.125
    3. '_E' → logprob: -19.125
    4. 'add' → logprob: -20.375
    5. 'get' → logprob: -20.5
    6. '
' → logprob: -23.75
    7. '

' → logprob: -24.75
    8. '`' → logprob: -24.875
    9. '.E' → logprob: -25.125
    10. ' ' → logprob: -25.375

Token 207: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.038051363080739975
    2. '+=' → logprob: -3.2880513668060303
    3. '+' → logprob: -12.03805160522461
    4. ' ' → logprob: -13.41305160522461
    5. '<|end|>' → logprob: -13.53805160522461
    6. ']+=' → logprob: -15.16305160522461
    7. ' +' → logprob: -15.41305160522461
    8. ' ' → logprob: -15.66305160522461
    9. '+='' → logprob: -16.28805160522461
    10. '  ' → logprob: -16.41305160522461

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -19.63604736328125
    4. ' ' → logprob: -21.38604736328125
    5. '```' → logprob: -22.26104736328125
    6. '１' → logprob: -22.38604736328125
    7. '  ' → logprob: -22.76104736328125
    8. '       ' → logprob: -23.63604736328125
    9. '0' → logprob: -23.76104736328125
    10. '    ' → logprob: -24.26104736328125

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -22.375
    4. '１' → logprob: -23.875
    5. '```' → logprob: -24.125
    6. '<|end|>' → logprob: -24.125
    7. '  ' → logprob: -25.125
    8. '۱' → logprob: -25.75
    9. '       ' → logprob: -25.875
    10. '+' → logprob: -26.375

Token 210: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06388159841299057
    2. '<|end|>' → logprob: -3.4388816356658936
    3. '   ' → logprob: -4.1888813972473145
    4. ' ' → logprob: -5.9388813972473145
    5. ' 
' → logprob: -6.0638813972473145
    6. '\n' → logprob: -6.0638813972473145
    7. '    
' → logprob: -6.1888813972473145
    8. 'def' → logprob: -6.4388813972473145
    9. '' → logprob: -7.1888813972473145
    10. '  
' → logprob: -7.9388813972473145

Token 212: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3259168863296509
    2. ' ' → logprob: -2.4509167671203613
    3. '   ' → logprob: -2.4509167671203613
    4. '<|end|>' → logprob: -2.9509167671203613
    5. ' 
' → logprob: -4.325916767120361
    6. '
' → logprob: -4.325916767120361
    7. ' def' → logprob: -4.575916767120361
    8. '    
' → logprob: -5.575916767120361
    9. 'd' → logprob: -5.700916767120361
    10. '    ' → logprob: -5.700916767120361

Token 213: ' shortest' (ID: 70564)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5163631439208984
    2. ' d' → logprob: -1.7663631439208984
    3. ' shortest' → logprob: -1.8913631439208984
    4. ' ' → logprob: -3.0163631439208984
    5. ' dist' → logprob: -4.391363143920898
    6. 'def' → logprob: -5.016363143920898
    7. ' _' → logprob: -5.516363143920898
    8. '_' → logprob: -6.016363143920898
    9. ' solve' → logprob: -6.391363143920898
    10. 'd' → logprob: -6.641363143920898

Token 214: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.7252845029579476e-05
    2. '_distance' → logprob: -11.250027656555176
    3. '_paths' → logprob: -11.750027656555176
    4. '_' → logprob: -13.375027656555176
    5. 'path' → logprob: -13.500027656555176
    6. '_pat' → logprob: -13.750027656555176
    7. '_dist' → logprob: -14.000027656555176
    8. '(self' → logprob: -14.125027656555176
    9. 'Path' → logprob: -14.750027656555176
    10. '__' → logprob: -16.50002670288086

Token 215: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028172398451715708
    2. '(' → logprob: -5.877817153930664
    3. 'self' → logprob: -12.002817153930664
    4. ' (' → logprob: -13.377817153930664
    5. '(s' → logprob: -13.627817153930664
    6. '_(' → logprob: -14.252817153930664
    7. '   ' → logprob: -14.377817153930664
    8. '(
' → logprob: -15.252817153930664
    9. 's' → logprob: -15.502817153930664
    10. '```' → logprob: -15.502817153930664

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005683222785592079
    2. 'self' → logprob: -5.380683422088623
    3. ' ,' → logprob: -8.130682945251465
    4. ',self' → logprob: -8.130682945251465
    5. '_,' → logprob: -9.255682945251465
    6. 'from' → logprob: -9.380682945251465
    7. '_from' → logprob: -9.380682945251465
    8. ',_' → logprob: -10.005682945251465
    9. '(self' → logprob: -10.255682945251465
    10. ',s' → logprob: -10.380682945251465

Token 217: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6949470043182373
    2. ' s' → logprob: -1.0699470043182373
    3. '_start' → logprob: -2.8199470043182373
    4. '_s' → logprob: -2.9449470043182373
    5. ' _' → logprob: -3.3199470043182373
    6. '_source' → logprob: -5.569947242736816
    7. 'start' → logprob: -6.569947242736816
    8. '_from' → logprob: -6.944947242736816
    9. ' start' → logprob: -7.569947242736816
    10. ')' → logprob: -7.569947242736816

Token 218: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22625482082366943
    2. '):' → logprob: -1.6012548208236694
    3. '):
' → logprob: -7.476254940032959
    4. ')' → logprob: -8.3512544631958
    5. 'self' → logprob: -11.3512544631958
    6. '   ' → logprob: -12.2262544631958
    7. ' ):' → logprob: -12.2262544631958
    8. ':' → logprob: -12.7262544631958
    9. '):

' → logprob: -12.9762544631958
    10. ' ,' → logprob: -12.9762544631958

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04458789899945259
    2. 'import' → logprob: -3.4195878505706787
    3. ':' → logprob: -5.919588088989258
    4. 'dist' → logprob: -6.044588088989258
    5. '
' → logprob: -6.169588088989258
    6. ' import' → logprob: -6.544588088989258
    7. ',' → logprob: -8.044588088989258
    8. 'from' → logprob: -8.044588088989258
    9. '   ' → logprob: -8.419588088989258
    10. '```' → logprob: -8.544588088989258

Token 220: ' return' (ID: 622)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.020729199051856995
    2. 'dist' → logprob: -4.645729064941406
    3. ' import' → logprob: -5.020729064941406
    4. '       ' → logprob: -6.020729064941406
    5. 'from' → logprob: -6.520729064941406
    6. 'inf' → logprob: -8.645729064941406
    7. 'INF' → logprob: -8.895729064941406
    8. '   ' → logprob: -10.145729064941406
    9. ' dist' → logprob: -10.520729064941406
    10. ' from' → logprob: -11.020729064941406

Token 221: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6212629675865173
    2. '[' → logprob: -0.8712629675865173
    3. '[self' → logprob: -4.496263027191162
    4. '[]' → logprob: -5.496263027191162
    5. ' []' → logprob: -5.496263027191162
    6. ' [],' → logprob: -5.496263027191162
    7. ' self' → logprob: -5.621263027191162
    8. 'self' → logprob: -5.746263027191162
    9. ' ' → logprob: -5.871263027191162
    10. ' None' → logprob: -6.246263027191162

Token 222: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.37095868587493896
    2. '._' → logprob: -1.370958685874939
    3. ' .' → logprob: -3.2459588050842285
    4. '.D' → logprob: -4.8709588050842285
    5. '.short' → logprob: -5.4959588050842285
    6. '.Short' → logprob: -7.7459588050842285
    7. ' shortest' → logprob: -7.8709588050842285
    8. ' ' → logprob: -7.9959588050842285
    9. '_' → logprob: -7.9959588050842285
    10. '[' → logprob: -8.12095832824707

Token 223: 'compute' (ID: 54521)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.6379589438438416
    2. 'd' → logprob: -0.7629589438438416
    3. 'solve' → logprob: -6.387959003448486
    4. '_short' → logprob: -6.762959003448486
    5. 'get' → logprob: -7.137959003448486
    6. '_d' → logprob: -7.762959003448486
    7. 'calc' → logprob: -8.012958526611328
    8. 'run' → logprob: -8.512958526611328
    9. 'calculate' → logprob: -9.012958526611328
    10. '_' → logprob: -9.137958526611328

Token 224: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.7561347484588623
    2. '_dist' → logprob: -1.0061347484588623
    3. '_path' → logprob: -2.7561347484588623
    4. '_distance' → logprob: -2.8811347484588623
    5. '_' → logprob: -3.5061347484588623
    6. '_paths' → logprob: -4.631134986877441
    7. '_d' → logprob: -7.006134986877441
    8. '```' → logprob: -7.006134986877441
    9. '_cost' → logprob: -7.131134986877441
    10. 'Shortest' → logprob: -7.506134986877441

Token 225: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.02079785242676735
    2. '_path' → logprob: -3.8957979679107666
    3. 'path' → logprob: -8.520797729492188
    4. '_est' → logprob: -11.145797729492188
    5. '_' → logprob: -11.645797729492188
    6. '```' → logprob: -12.020797729492188
    7. '_paths' → logprob: -12.770797729492188
    8. '(est' → logprob: -12.770797729492188
    9. 'e' → logprob: -13.145797729492188
    10. '_dist' → logprob: -13.520797729492188

Token 226: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -1.8908587662735954e-05
    2. '_paths' → logprob: -11.250019073486328
    3. '_' → logprob: -12.375019073486328
    4. 'est' → logprob: -13.750019073486328
    5. 'path' → logprob: -15.250019073486328
    6. '_distance' → logprob: -15.750019073486328
    7. '_p' → logprob: -16.625019073486328
    8. 'er' → logprob: -17.750019073486328
    9. '_Path' → logprob: -18.000019073486328
    10. ' _' → logprob: -18.250019073486328

Token 227: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002478694950696081
    2. '(' → logprob: -8.375247955322266
    3. '_' → logprob: -12.375247955322266
    4. '(self' → logprob: -13.000247955322266
    5. '_paths' → logprob: -13.000247955322266
    6. '_path' → logprob: -13.125247955322266
    7. '_(' → logprob: -13.375247955322266
    8. 's' → logprob: -13.625247955322266
    9. '_distance' → logprob: -14.000247955322266
    10. '_list' → logprob: -15.125247955322266

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -14.250001907348633
    3. '       ' → logprob: -15.125001907348633
    4. ')
' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.125001907348633
    6. '))' → logprob: -16.875001907348633
    7. ',' → logprob: -17.250001907348633
    8. '<|end|>' → logprob: -17.500001907348633
    9. '())' → logprob: -17.625001907348633
    10. '),' → logprob: -18.125001907348633

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5036272406578064
    2. '       ' → logprob: -1.6286273002624512
    3. ':' → logprob: -2.628627300262451
    4. 'def' → logprob: -2.628627300262451
    5. '(' → logprob: -3.503627300262451
    6. '_' → logprob: -5.503627300262451
    7. '(self' → logprob: -5.503627300262451
    8. ' def' → logprob: -6.003627300262451
    9. '(s' → logprob: -6.378627300262451
    10. '
' → logprob: -6.378627300262451

Token 230: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24601051211357117
    2. '   ' → logprob: -2.2460105419158936
    3. '
' → logprob: -2.9960105419158936
    4. 'def' (adapté à ' def') → logprob: -3.3710105419158936
    5. 'import' → logprob: -3.9960105419158936
    6. ':' → logprob: -5.3710103034973145
    7. '_' → logprob: -6.9960103034973145
    8. ' def' → logprob: -6.9960103034973145
    9. ' ' → logprob: -7.6210103034973145
    10. '```' → logprob: -8.121010780334473

Token 231: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.04989830031991005
    2. ' _' → logprob: -3.049898386001587
    3. '_' → logprob: -7.549898147583008
    4. '_get' → logprob: -8.174898147583008
    5. '__' → logprob: -8.549898147583008
    6. '_init' → logprob: -9.299898147583008
    7. '_def' → logprob: -10.924898147583008
    8. '_start' → logprob: -11.049898147583008
    9. '_add' → logprob: -11.049898147583008
    10. '_b' → logprob: -11.174898147583008

Token 232: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -2.9040898880339228e-05
    2. '_compute' → logprob: -10.625028610229492
    3. 'comp' → logprob: -13.125028610229492
    4. 'computer' → logprob: -13.750028610229492
    5. 'comput' → logprob: -14.375028610229492
    6. ' compute' → logprob: -15.125028610229492
    7. 'com' → logprob: -15.250028610229492
    8. 'calculate' → logprob: -16.250028610229492
    9. '.compute' → logprob: -16.625028610229492
    10. 'computed' → logprob: -16.625028610229492

Token 233: '_short' (ID: 40379)
  Prédit: '_short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_short' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.250007629394531
    3. 'short' → logprob: -13.125007629394531
    4. ' _' → logprob: -14.625007629394531
    5. '```' → logprob: -16.75000762939453
    6. '_next' → logprob: -17.25000762939453
    7. '_start' → logprob: -17.25000762939453
    8. '_soft' → logprob: -17.37500762939453
    9. '_s' → logprob: -17.50000762939453
    10. '__' → logprob: -17.50000762939453

Token 234: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.05812035873532295
    2. '_path' → logprob: -2.9331202507019043
    3. 'path' → logprob: -5.808120250701904
    4. '   ' → logprob: -10.558120727539062
    5. 'Path' → logprob: -10.808120727539062
    6. ' path' → logprob: -10.808120727539062
    7. '       ' → logprob: -10.808120727539062
    8. '```' → logprob: -10.808120727539062
    9. '
' → logprob: -11.058120727539062
    10. '__' → logprob: -11.683120727539062

Token 235: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -3.054500666621607e-06
    2. 'path' → logprob: -12.87500286102295
    3. '_paths' → logprob: -15.62500286102295
    4. '_' → logprob: -15.87500286102295
    5. '_point' → logprob: -16.750003814697266
    6. ' path' → logprob: -17.875003814697266
    7. '_p' → logprob: -17.875003814697266
    8. '       ' → logprob: -18.000003814697266
    9. '_distance' → logprob: -18.750003814697266
    10. ' _' → logprob: -18.750003814697266

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00022010602697264403
    2. '(s' → logprob: -8.50022029876709
    3. '(' → logprob: -11.12522029876709
    4. 'self' → logprob: -13.75022029876709
    5. ' (' → logprob: -14.62522029876709
    6. '   ' → logprob: -16.125219345092773
    7. '       ' → logprob: -17.250219345092773
    8. '(
' → logprob: -17.250219345092773
    9. '(Self' → logprob: -17.375219345092773
    10. 'def' → logprob: -17.750219345092773

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002488737925887108
    2. ',s' → logprob: -6.127488613128662
    3. 'self' → logprob: -8.75248908996582
    4. 's' → logprob: -9.75248908996582
    5. ' ,' → logprob: -9.87748908996582
    6. '_,' → logprob: -10.87748908996582
    7. ',self' → logprob: -12.12748908996582
    8. '   ' → logprob: -13.00248908996582
    9. '       ' → logprob: -13.00248908996582
    10. '(self' → logprob: -13.25248908996582

Token 238: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0342390276491642
    2. ' s' → logprob: -3.4092390537261963
    3. 'self' → logprob: -7.534238815307617
    4. ' self' → logprob: -10.409238815307617
    5. '   ' → logprob: -11.659238815307617
    6. ')' → logprob: -12.034238815307617
    7. 'start' → logprob: -12.534238815307617
    8. ' ' → logprob: -13.159238815307617
    9. 'source' → logprob: -13.534238815307617
    10. '
' → logprob: -14.034238815307617

Token 239: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004132661037147045
    2. '):
' → logprob: -5.5041327476501465
    3. ',' → logprob: -10.879132270812988
    4. ')' → logprob: -11.129132270812988
    5. '):
' → logprob: -11.629132270812988
    6. '       ' → logprob: -12.379132270812988
    7. ' ):' → logprob: -12.754132270812988
    8. '   ' → logprob: -13.254132270812988
    9. '):

' → logprob: -13.754132270812988
    10. ':' → logprob: -13.879132270812988

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011873723706230521
    2. ':' → logprob: -8.126187324523926
    3. '        
' → logprob: -8.251187324523926
    4. ' 
' → logprob: -8.876187324523926
    5. '
' → logprob: -9.251187324523926
    6. '[' → logprob: -9.751187324523926
    7. 'import' → logprob: -10.001187324523926
    8. ':
' → logprob: -10.126187324523926
    9. ',' → logprob: -10.501187324523926
    10. '   ' → logprob: -10.626187324523926

Token 241: ' que' (ID: 661)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4993561804294586
    2. ' import' → logprob: -1.4993561506271362
    3. '       ' → logprob: -1.8743561506271362
    4. ' from' → logprob: -5.249356269836426
    5. 'from' → logprob: -5.499356269836426
    6. 'dist' → logprob: -5.499356269836426
    7. ' dist' → logprob: -6.124356269836426
    8. '   ' → logprob: -7.999356269836426
    9. 'inf' → logprob: -9.124356269836426
    10. ' V' → logprob: -9.999356269836426

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0880853682756424
    2. 'ue' → logprob: -2.838085412979126
    3. 'u' → logprob: -4.213085174560547
    4. '=' → logprob: -4.838085174560547
    5. '   ' → logprob: -6.838085174560547
    6. '       ' → logprob: -6.838085174560547
    7. '=[]' → logprob: -8.088085174560547
    8. 'uer' → logprob: -9.338085174560547
    9. 'e' → logprob: -9.463085174560547
    10. '.' → logprob: -9.463085174560547

Token 243: ' self' (ID: 1051)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.008263615891337395
    2. '[]' → logprob: -5.00826358795166
    3. ' [(' → logprob: -6.63326358795166
    4. '[(' → logprob: -9.38326358795166
    5. ' []
' → logprob: -9.88326358795166
    6. ' [' → logprob: -10.00826358795166
    7. 'import' → logprob: -10.25826358795166
    8. 'Priority' → logprob: -12.50826358795166
    9. ' ' → logprob: -12.63326358795166
    10. '[' → logprob: -13.13326358795166

Token 244: '._' (ID: 2697)
  Prédit: '.Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.Priority' → logprob: -0.25633081793785095
    2. '.' → logprob: -2.006330728530884
    3. 'import' → logprob: -2.506330728530884
    4. '.heap' → logprob: -5.256330966949463
    5. '.priority' → logprob: -5.881330966949463
    6. '.P' → logprob: -7.631330966949463
    7. '.import' → logprob: -7.756330966949463
    8. '.Queue' → logprob: -8.631330490112305
    9. 'from' → logprob: -8.881330490112305
    10. 'heap' → logprob: -9.256330490112305

Token 245: 'init' (ID: 3287)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9482419490814209
    2. 'heap' → logprob: -1.198241949081421
    3. 'init' → logprob: -1.823241949081421
    4. 'get' → logprob: -3.073241949081421
    5. 'queue' → logprob: -3.573241949081421
    6. 'priority' → logprob: -3.823241949081421
    7. 'compute' → logprob: -4.0732421875
    8. 'Priority' → logprob: -5.0732421875
    9. 'from' → logprob: -5.5732421875
    10. 'V' → logprob: -5.6982421875

Token 246: '_priority' (ID: 93448)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.96778404712677
    2. '_priority' → logprob: -1.59278404712677
    3. '_queue' → logprob: -2.0927839279174805
    4. 'import' → logprob: -2.8427839279174805
    5. '_heap' → logprob: -2.9677839279174805
    6. '[' → logprob: -3.3427839279174805
    7. '[]' → logprob: -3.7177839279174805
    8. 'q' → logprob: -3.9677839279174805
    9. 'heap' → logprob: -4.0927839279174805
    10. 'priority' → logprob: -4.8427839279174805

Token 247: '_queue' (ID: 25622)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.6446789503097534
    2. '_queue' → logprob: -0.8946789503097534
    3. ' queue' → logprob: -3.144679069519043
    4. '_' → logprob: -3.894679069519043
    5. 'Queue' → logprob: -6.894679069519043
    6. 'q' → logprob: -7.144679069519043
    7. '   ' → logprob: -8.019679069519043
    8. 'que' → logprob: -8.269679069519043
    9. '[' → logprob: -8.894679069519043
    10. ' ' → logprob: -9.394679069519043

Token 248: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005224120686762035
    2. ' ()' → logprob: -8.12552261352539
    3. '([]' → logprob: -9.12552261352539
    4. '[]' → logprob: -9.62552261352539
    5. '(' → logprob: -11.00052261352539
    6. '()
' → logprob: -11.12552261352539
    7. '()

' → logprob: -12.37552261352539
    8. ' []' → logprob: -12.75052261352539
    9. '=[]' → logprob: -13.00052261352539
    10. '().' → logprob: -13.50052261352539

Token 249: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09739157557487488
    2. '       ' → logprob: -2.7223916053771973
    3. '()
' → logprob: -4.097391605377197
    4. 'import' → logprob: -5.097391605377197
    5. 'dist' → logprob: -6.472391605377197
    6. '[]' → logprob: -7.847391605377197
    7. '<|end|>' → logprob: -7.847391605377197
    8. ' ()' → logprob: -8.097391128540039
    9. ',' → logprob: -8.097391128540039
    10. 'distance' → logprob: -8.222391128540039

Token 250: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16718994081020355
    2. 'import' → logprob: -2.042189836502075
    3. ' dist' → logprob: -4.417190074920654
    4. '       ' → logprob: -5.167190074920654
    5. ' import' → logprob: -5.542190074920654
    6. ' distances' → logprob: -6.917190074920654
    7. 'self' → logprob: -7.542190074920654
    8. 'distance' → logprob: -8.292189598083496
    9. 'heap' → logprob: -8.542189598083496
    10. 'd' (adapté à ' d') → logprob: -8.667189598083496

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07408446818590164
    2. 'ist' → logprob: -2.699084520339966
    3. 'istance' → logprob: -6.449084281921387
    4. '=' → logprob: -6.449084281921387
    5. 'ists' → logprob: -7.449084281921387
    6. '[' → logprob: -9.074084281921387
    7. 'ista' → logprob: -9.824084281921387
    8. ',' → logprob: -10.074084281921387
    9. 'is' → logprob: -10.199084281921387
    10. '=[' → logprob: -10.824084281921387

Token 252: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08333670347929001
    2. ' [' → logprob: -2.583336591720581
    3. '[self' → logprob: -5.45833683013916
    4. '{' → logprob: -9.33333683013916
    5. '[int' → logprob: -10.33333683013916
    6. '[np' → logprob: -11.70833683013916
    7. '[class' → logprob: -11.95833683013916
    8. '[len' → logprob: -12.08333683013916
    9. '[node' → logprob: -12.20833683013916
    10. '[n' → logprob: -12.20833683013916

Token 253: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.32937654852867126
    2. '[' → logprob: -1.7043765783309937
    3. 'istance' → logprob: -3.829376459121704
    4. 'ist' → logprob: -3.829376459121704
    5. '.' → logprob: -3.954376459121704
    6. '.__' → logprob: -4.579376697540283
    7. 'ijkstra' → logprob: -4.704376697540283
    8. ' [' → logprob: -6.329376697540283
    9. '[-' → logprob: -6.579376697540283
    10. '.dist' → logprob: -6.579376697540283

Token 254: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.02756829373538494
    2. 'get' → logprob: -3.9025683403015137
    3. 'array' → logprob: -6.652568340301514
    4. '[' → logprob: -7.027568340301514
    5. '[V' → logprob: -7.027568340301514
    6. 'V' → logprob: -7.277568340301514
    7. 'dist' → logprob: -7.527568340301514
    8. 'new' → logprob: -7.652568340301514
    9. 'inf' → logprob: -7.902568340301514
    10. 'initialize' → logprob: -8.152567863464355

Token 255: '_distance' (ID: 45537)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.9306477308273315
    2. 'ist' → logprob: -1.1806477308273315
    3. 'istance' → logprob: -1.5556477308273315
    4. '[' → logprob: -3.430647850036621
    5. ' [' → logprob: -4.805647850036621
    6. '[s' → logprob: -5.180647850036621
    7. '_' → logprob: -5.305647850036621
    8. 'ef' → logprob: -5.555647850036621
    9. 'ijkstra' → logprob: -5.555647850036621
    10. '=[' → logprob: -6.055647850036621

Token 256: '_list' (ID: 4162)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.1488076448440552
    2. 's' → logprob: -1.5238076448440552
    3. '_array' → logprob: -1.5238076448440552
    4. '()' → logprob: -1.8988076448440552
    5. '_list' → logprob: -3.0238075256347656
    6. '(' → logprob: -3.3988075256347656
    7. '([' → logprob: -5.148807525634766
    8. '([]' → logprob: -5.773807525634766
    9. 'array' → logprob: -6.148807525634766
    10. '[]' → logprob: -7.023807525634766

Token 257: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8526292443275452
    2. '(s' → logprob: -0.8526292443275452
    3. '(len' → logprob: -2.2276291847229004
    4. '(' → logprob: -3.7276291847229004
    5. '([' → logprob: -4.3526291847229
    6. '(self' → logprob: -6.2276291847229
    7. '()
' → logprob: -8.477629661560059
    8. '[' → logprob: -8.977629661560059
    9. '([]' → logprob: -9.727629661560059
    10. '[]' → logprob: -9.977629661560059

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0102843614295125
    2. '        
' → logprob: -5.635284423828125
    3. 'd' → logprob: -6.385284423828125
    4. '
' → logprob: -6.760284423828125
    5. '<|end|>' → logprob: -6.885284423828125
    6. '[' → logprob: -7.135284423828125
    7. '()' → logprob: -7.885284423828125
    8. ' 
' → logprob: -8.135284423828125
    9. '   ' → logprob: -9.135284423828125
    10. '	' → logprob: -9.135284423828125

Token 259: ' self' (ID: 1051)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5943130254745483
    2. 'import' → logprob: -1.3443130254745483
    3. '       ' → logprob: -1.7193130254745483
    4. ' d' → logprob: -6.094313144683838
    5. '   ' → logprob: -6.344313144683838
    6. ' import' → logprob: -6.844313144683838
    7. 'dist' → logprob: -6.844313144683838
    8. 'from' → logprob: -7.844313144683838
    9. 'for' → logprob: -8.21931266784668
    10. 'while' → logprob: -8.59431266784668

Token 260: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.15949060022830963
    2. '.G' → logprob: -2.4094905853271484
    3. '.add' → logprob: -2.9094905853271484
    4. 'G' → logprob: -7.784490585327148
    5. '.set' → logprob: -7.909490585327148
    6. 'import' → logprob: -8.159490585327148
    7. '.' → logprob: -8.159490585327148
    8. 'add' → logprob: -8.534490585327148
    9. '.D' → logprob: -9.159490585327148
    10. '.fill' → logprob: -9.284490585327148

Token 261: 'set' (ID: 977)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.24410654604434967
    2. 'add' → logprob: -2.7441065311431885
    3. 'update' → logprob: -2.9941065311431885
    4. 'init' → logprob: -3.2441065311431885
    5. 'set' → logprob: -3.7441065311431885
    6. 'import' → logprob: -5.119106769561768
    7. 'pop' → logprob: -5.244106769561768
    8. 'initialize' → logprob: -5.244106769561768
    9. 'heap' → logprob: -5.369106769561768
    10. 'de' → logprob: -5.744106769561768

Token 262: '_start' (ID: 10949)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.12743060290813446
    2. 'dist' → logprob: -3.1274306774139404
    3. '_dist' → logprob: -3.2524306774139404
    4. 'distance' → logprob: -3.8774306774139404
    5. 'd' → logprob: -5.877430438995361
    6. '_queue' → logprob: -5.877430438995361
    7. '_start' → logprob: -6.127430438995361
    8. '_priority' → logprob: -6.127430438995361
    9. '_source' → logprob: -6.752430438995361
    10. 'item' → logprob: -7.127430438995361

Token 263: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.449417382478714
    2. '(s' → logprob: -2.0744173526763916
    3. '_dist' → logprob: -2.5744173526763916
    4. 'ing' → logprob: -3.0744173526763916
    5. 'distance' → logprob: -3.1994173526763916
    6. '_' → logprob: -3.8244173526763916
    7. 'dist' → logprob: -4.074417591094971
    8. '_point' → logprob: -4.699417591094971
    9. '_vertex' → logprob: -4.699417591094971
    10. '_node' → logprob: -5.699417591094971

Token 264: '(d' (ID: 2572)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.08050496131181717
    2. '(d' → logprob: -2.705504894256592
    3. '(' → logprob: -4.580504894256592
    4. 's' → logprob: -8.58050537109375
    5. '(distance' → logprob: -10.58050537109375
    6. 'd' → logprob: -10.95550537109375
    7. '(dist' → logprob: -11.33050537109375
    8. ' (' → logprob: -12.83050537109375
    9. '(q' → logprob: -12.95550537109375
    10. 'ing' → logprob: -13.33050537109375

Token 265: ',' (ID: 11)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.2523791193962097
    2. ',' → logprob: -1.5023791790008545
    3. ',s' → logprob: -7.877378940582275
    4. ' ,' → logprob: -9.877379417419434
    5. '(s' → logprob: -11.502379417419434
    6. ' s' → logprob: -12.627379417419434
    7. ')' → logprob: -12.877379417419434
    8. '[' → logprob: -13.877379417419434
    9. '       ' → logprob: -14.502379417419434
    10. ' [' → logprob: -14.877379417419434

Token 266: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054890185594558716
    2. ' s' → logprob: -2.9298901557922363
    3. ' ' → logprob: -12.929890632629395
    4. ')' → logprob: -12.929890632629395
    5. '<|end|>' → logprob: -13.679890632629395
    6. '   ' → logprob: -14.804890632629395
    7. '_s' → logprob: -15.179890632629395
    8. '	s' → logprob: -15.304890632629395
    9. '  ' → logprob: -15.429890632629395
    10. '[s' → logprob: -15.554890632629395

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2840014398097992
    2. ')
' → logprob: -1.4090014696121216
    3. ',' → logprob: -6.284001350402832
    4. '       ' → logprob: -7.034001350402832
    5. ')
' → logprob: -10.284001350402832
    6. ' )' → logprob: -10.909001350402832
    7. ')

' → logprob: -11.159001350402832
    8. ' )
' → logprob: -11.284001350402832
    9. '
' → logprob: -12.284001350402832
    10. ')d' → logprob: -13.034001350402832

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008961161598563194
    2. '<|end|>' → logprob: -6.383961200714111
    3. 'import' → logprob: -6.508961200714111
    4. '	' → logprob: -6.508961200714111
    5. '        
' → logprob: -6.633961200714111
    6. '
' → logprob: -7.258961200714111
    7. '        ' → logprob: -7.883961200714111
    8. '   ' → logprob: -8.258960723876953
    9. '		
' → logprob: -8.383960723876953
    10. ',' → logprob: -8.508960723876953

Token 269: ' self' (ID: 1051)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5558385252952576
    2. 'import' → logprob: -1.3058385848999023
    3. '       ' → logprob: -2.3058385848999023
    4. ' while' → logprob: -3.5558385848999023
    5. 'heap' → logprob: -4.430838584899902
    6. 'que' → logprob: -5.680838584899902
    7. ' import' → logprob: -5.805838584899902
    8. 'visited' → logprob: -5.930838584899902
    9. 'self' (adapté à ' self') → logprob: -6.930838584899902
    10. 'dist' → logprob: -7.180838584899902

Token 270: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0019166223937645555
    2. ' .' → logprob: -7.001916408538818
    3. '.' → logprob: -7.126916408538818
    4. '.add' → logprob: -9.626916885375977
    5. '.enqueue' → logprob: -10.626916885375977
    6. 'import' → logprob: -10.876916885375977
    7. '.push' → logprob: -11.001916885375977
    8. ' ' → logprob: -11.501916885375977
    9. '.__' → logprob: -11.876916885375977
    10. '
' → logprob: -12.126916885375977

Token 271: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.03162724897265434
    2. 'pop' → logprob: -4.781627178192139
    3. 'put' → logprob: -5.156627178192139
    4. 'add' → logprob: -5.156627178192139
    5. 'while' → logprob: -5.781627178192139
    6. 'he' → logprob: -6.406627178192139
    7. 'heap' → logprob: -6.406627178192139
    8. 'enqueue' → logprob: -6.656627178192139
    9. 'insert' → logprob: -7.281627178192139
    10. 'set' → logprob: -7.406627178192139

Token 272: '_start' (ID: 10949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2471589798224159e-05
    2. '(s' → logprob: -12.250012397766113
    3. '((' → logprob: -12.875012397766113
    4. ' (' → logprob: -13.375012397766113
    5. 'que' → logprob: -13.375012397766113
    6. '(
' → logprob: -14.000012397766113
    7. '(queue' → logprob: -14.875012397766113
    8. 's' → logprob: -15.250012397766113
    9. '(self' → logprob: -16.12501335144043
    10. ' que' → logprob: -16.12501335144043

Token 273: '_node' (ID: 11390)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001592822722159326
    2. '_distance' → logprob: -7.376592636108398
    3. '_queue' → logprob: -8.751592636108398
    4. 'distance' → logprob: -8.876592636108398
    5. '_node' → logprob: -9.251592636108398
    6. '   ' → logprob: -9.626592636108398
    7. ' (' → logprob: -9.751592636108398
    8. '_vertex' → logprob: -9.751592636108398
    9. '(s' → logprob: -9.876592636108398
    10. '_(' → logprob: -9.876592636108398

Token 274: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04355194792151451
    2. '(s' → logprob: -3.1685519218444824
    3. '((' → logprob: -7.793551921844482
    4. '(d' → logprob: -9.04355239868164
    5. '()' → logprob: -11.66855239868164
    6. '(queue' → logprob: -12.41855239868164
    7. '(
' → logprob: -13.16855239868164
    8. 's' → logprob: -13.29355239868164
    9. '(q' → logprob: -13.54355239868164
    10. ' (' → logprob: -13.66855239868164

Token 275: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.003746167290955782
    2. ' que' → logprob: -5.628746032714844
    3. 's' → logprob: -9.378746032714844
    4. '(' → logprob: -10.378746032714844
    5. '   ' → logprob: -11.503746032714844
    6. 'qu' → logprob: -12.003746032714844
    7. ')' → logprob: -12.128746032714844
    8. ' s' → logprob: -13.878746032714844
    9. 'ques' → logprob: -13.878746032714844
    10. 'Que' → logprob: -14.003746032714844

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002647927321959287
    2. ',s' → logprob: -8.375265121459961
    3. ' ,' → logprob: -11.125265121459961
    4. ',(' → logprob: -12.125265121459961
    5. '   ' → logprob: -12.750265121459961
    6. '(s' → logprob: -12.875265121459961
    7. ')' → logprob: -13.000265121459961
    8. '(' → logprob: -13.000265121459961
    9. 's' → logprob: -13.375265121459961
    10. ' ' → logprob: -14.250265121459961

Token 277: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06393416970968246
    2. ' s' → logprob: -2.813934087753296
    3. '(' → logprob: -6.938934326171875
    4. '(s' → logprob: -7.438934326171875
    5. ' (' → logprob: -8.313934326171875
    6. '0' → logprob: -9.438934326171875
    7. ')' → logprob: -10.063934326171875
    8. ' ' → logprob: -11.063934326171875
    9. '   ' → logprob: -12.438934326171875
    10. ')s' → logprob: -12.751434326171875

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010007272474467754
    2. ')
' → logprob: -4.760007381439209
    3. ',' → logprob: -6.635007381439209
    4. ')

' → logprob: -10.26000690460205
    5. '       ' → logprob: -10.38500690460205
    6. '   ' → logprob: -12.01000690460205
    7. ')
' → logprob: -13.01000690460205
    8. ' )' → logprob: -13.63500690460205
    9. '),' → logprob: -14.13500690460205
    10. ',)' → logprob: -14.51000690460205

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05754779651761055
    2. '<|end|>' → logprob: -3.1825478076934814
    3. 'import' → logprob: -5.807547569274902
    4. '	' → logprob: -6.182547569274902
    5. ' while' → logprob: -6.307547569274902
    6. '
' → logprob: -6.557547569274902
    7. '	while' → logprob: -6.557547569274902
    8. 'while' → logprob: -7.182547569274902
    9. '        
' → logprob: -7.182547569274902
    10. ' ' → logprob: -7.307547569274902

Token 280: ' self' (ID: 1051)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19755961000919342
    2. '       ' → logprob: -2.0725595951080322
    3. 'import' → logprob: -3.5725595951080322
    4. ' while' → logprob: -3.6975595951080322
    5. ' import' → logprob: -8.197559356689453
    6. '   ' → logprob: -9.322559356689453
    7. '	while' → logprob: -9.572559356689453
    8. '        
' → logprob: -10.072559356689453
    9. '```' → logprob: -10.822559356689453
    10. 'from' → logprob: -11.572559356689453

Token 281: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03588993474841118
    2. '._' → logprob: -4.035890102386475
    3. ':' → logprob: -4.660890102386475
    4. 'while' → logprob: -5.285890102386475
    5. ' .' → logprob: -6.910890102386475
    6. ' while' → logprob: -7.160890102386475
    7. '_' → logprob: -7.285890102386475
    8. ' ' → logprob: -9.035889625549316
    9. '.py' → logprob: -9.660889625549316
    10. 'def' → logprob: -9.660889625549316

Token 282: 'process' (ID: 9139)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.08206043392419815
    2. 'while' → logprob: -3.0820603370666504
    3. 'process' → logprob: -3.7070603370666504
    4. 'loop' → logprob: -5.45706033706665
    5. 'extract' → logprob: -7.08206033706665
    6. 'update' → logprob: -7.45706033706665
    7. '_pop' → logprob: -7.83206033706665
    8. 'd' → logprob: -7.83206033706665
    9. 'compute' → logprob: -7.83206033706665
    10. 'run' → logprob: -8.082060813903809

Token 283: '_queue' (ID: 25622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02344357781112194
    2. '_queue' → logprob: -3.8984434604644775
    3. '_' → logprob: -6.523443698883057
    4. '()' → logprob: -7.148443698883057
    5. '_nodes' → logprob: -8.148443222045898
    6. '(queue' → logprob: -9.273443222045898
    7. 'queue' → logprob: -9.398443222045898
    8. '_(' → logprob: -9.398443222045898
    9. '_next' → logprob: -10.648443222045898
    10. 's' → logprob: -11.648443222045898

Token 284: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029765412211418152
    2. '()' → logprob: -3.5297653675079346
    3. '()(' → logprob: -12.279765129089355
    4. '(queue' → logprob: -12.279765129089355
    5. '()`' → logprob: -13.779765129089355
    6. '(qu' → logprob: -13.779765129089355
    7. '();' → logprob: -14.154765129089355
    8. '()
' → logprob: -14.279765129089355
    9. '(q' → logprob: -14.654765129089355
    10. '((' → logprob: -15.404765129089355

Token 285: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.05498044937849045
    2. ' que' → logprob: -2.929980516433716
    3. 'd' → logprob: -10.304980278015137
    4. ')' → logprob: -10.554980278015137
    5. 'queue' → logprob: -11.554980278015137
    6. ' d' → logprob: -11.929980278015137
    7. 'qu' → logprob: -12.554980278015137
    8. '   ' → logprob: -12.679980278015137
    9. ' ' → logprob: -12.929980278015137
    10. 's' → logprob: -12.929980278015137

Token 286: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ',' → logprob: -11.000031471252441
    3. '):' → logprob: -11.500031471252441
    4. '()' → logprob: -13.750031471252441
    5. ')
' → logprob: -13.875031471252441
    6. ' )' → logprob: -14.125031471252441
    7. ',)' → logprob: -14.125031471252441
    8. '())' → logprob: -14.250031471252441
    9. '),' → logprob: -15.875031471252441
    10. '   ' → logprob: -16.250032424926758

Token 287: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0499984472990036
    2. ' d' → logprob: -3.0499985218048096
    3. 's' → logprob: -7.2999982833862305
    4. ')' → logprob: -7.6749982833862305
    5. ' s' → logprob: -9.04999828338623
    6. ')d' → logprob: -9.29999828338623
    7. '   ' → logprob: -11.17499828338623
    8. ' ' → logprob: -11.54999828338623
    9. 'self' → logprob: -11.92499828338623
    10. '  ' → logprob: -12.04999828338623

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ')
' → logprob: -11.37501335144043
    3. ')

' → logprob: -14.25001335144043
    4. ' )' → logprob: -15.12501335144043
    5. '       ' → logprob: -15.37501335144043
    6. ',' → logprob: -15.62501335144043
    7. '   ' → logprob: -15.87501335144043
    8. ',)' → logprob: -15.87501335144043
    9. '),' → logprob: -17.12501335144043
    10. '())' → logprob: -17.50001335144043

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0749787986278534
    2. '<|end|>' → logprob: -2.824978828430176
    3. '   ' → logprob: -4.949978828430176
    4. ' ' → logprob: -6.199978828430176
    5. '	' → logprob: -6.699978828430176
    6. '    ' → logprob: -7.824978828430176
    7. 'def' → logprob: -8.324978828430176
    8. '        
' → logprob: -8.324978828430176
    9. '
' → logprob: -8.324978828430176
    10. '        ' → logprob: -8.449978828430176

Token 290: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038980476558208466
    2. '       ' → logprob: -3.288980484008789
    3. 'import' → logprob: -7.788980484008789
    4. ' return' → logprob: -8.663980484008789
    5. 'dist' → logprob: -8.913980484008789
    6. '   ' → logprob: -9.038980484008789
    7. 'while' → logprob: -10.038980484008789
    8. 'def' → logprob: -11.038980484008789
    9. 'distance' → logprob: -11.163980484008789
    10. '
' → logprob: -11.413980484008789

Token 291: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.014164566993713379
    2. 'd' → logprob: -4.264164447784424
    3. '[d' → logprob: -14.889164924621582
    4. '[' → logprob: -15.139164924621582
    5. ' ' → logprob: -15.639164924621582
    6. ' ' → logprob: -15.889164924621582
    7. ' [' → logprob: -16.389163970947266
    8. '(d' → logprob: -16.889163970947266
    9. '	d' → logprob: -17.889163970947266
    10. ' (' → logprob: -18.514163970947266

Token 292: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12913085520267487
    2. '
' → logprob: -3.1291308403015137
    3. ' 
' → logprob: -3.5041308403015137
    4. '    
' → logprob: -4.129130840301514
    5. ' ' → logprob: -4.629130840301514
    6. 'def' → logprob: -5.004130840301514
    7. '<|end|>' → logprob: -5.129130840301514
    8. '  
' → logprob: -6.504130840301514
    9. ' def' → logprob: -6.504130840301514
    10. '  ' → logprob: -6.754130840301514

Token 294: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5276591181755066
    2. 'def' (adapté à ' def') → logprob: -1.1526591777801514
    3. 'import' → logprob: -2.4026591777801514
    4. 'from' → logprob: -6.152658939361572
    5. ' def' → logprob: -7.277658939361572
    6. '       ' → logprob: -8.15265941619873
    7. '
' → logprob: -8.27765941619873
    8. '    
' → logprob: -9.40265941619873
    9. '<|end|>' → logprob: -9.52765941619873
    10. '	def' → logprob: -9.65265941619873

Token 295: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.33883893489837646
    2. '_' → logprob: -1.3388389348983765
    3. '_init' → logprob: -3.713839054107666
    4. '_add' → logprob: -7.838839054107666
    5. '__' → logprob: -8.963838577270508
    6. '_short' → logprob: -9.088838577270508
    7. '_start' → logprob: -10.088838577270508
    8. '_in' → logprob: -10.713838577270508
    9. ' ' → logprob: -11.338838577270508
    10. '._' → logprob: -11.463838577270508

Token 296: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'process' → logprob: -14.375000953674316
    3. '_init' → logprob: -15.500000953674316
    4. 'int' → logprob: -16.625001907348633
    5. ' init' → logprob: -16.750001907348633
    6. 'in' → logprob: -16.750001907348633
    7. 'inite' → logprob: -17.000001907348633
    8. 'compute' → logprob: -17.000001907348633
    9. 'import' → logprob: -17.125001907348633
    10. 'initialize' → logprob: -17.625001907348633

Token 297: '_priority' (ID: 93448)
  Prédit: '_priority'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_priority' → logprob: -0.00036655968870036304
    2. '_queue' → logprob: -8.3753662109375
    3. 'priority' → logprob: -10.0003662109375
    4. '_' → logprob: -10.1253662109375
    5. '_p' → logprob: -11.0003662109375
    6. '_prior' → logprob: -11.1253662109375
    7. 'import' → logprob: -12.2503662109375
    8. '_heap' → logprob: -13.1253662109375
    9. 'def' → logprob: -13.2503662109375
    10. '__' → logprob: -13.2503662109375

Token 298: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -8.590104698669165e-05
    2. '_' → logprob: -9.375085830688477
    3. '_q' → logprob: -14.375085830688477
    4. 'queue' → logprob: -15.625085830688477
    5. '_list' → logprob: -16.250085830688477
    6. ' _' → logprob: -16.500085830688477
    7. '_QUEUE' → logprob: -16.875085830688477
    8. ' queue' → logprob: -17.125085830688477
    9. '       ' → logprob: -17.250085830688477
    10. '   ' → logprob: -17.375085830688477

Token 299: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014594044769182801
    2. '()' → logprob: -7.00145959854126
    3. '():' → logprob: -7.62645959854126
    4. '(' → logprob: -10.251459121704102
    5. '():
' → logprob: -11.001459121704102
    6. ' ()' → logprob: -12.626459121704102
    7. 'self' → logprob: -13.501459121704102
    8. ' (' → logprob: -13.501459121704102
    9. '(sel' → logprob: -14.751459121704102
    10. '   ' → logprob: -14.876459121704102

Token 300: '):
' (ID: 1883)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7310670018196106
    2. '):' → logprob: -0.8560670018196106
    3. '()' → logprob: -2.606066942214966
    4. '():
' → logprob: -4.981067180633545
    5. ')' → logprob: -5.106067180633545
    6. '):
' → logprob: -5.356067180633545
    7. ' ):' → logprob: -6.981067180633545
    8. '()):
' → logprob: -7.356067180633545
    9. 'import' → logprob: -8.481066703796387
    10. '())' → logprob: -8.606066703796387

Token 301: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5928223729133606
    2. '       ' → logprob: -1.0928223133087158
    3. ' import' → logprob: -2.217822313308716
    4. ' []' → logprob: -6.842822551727295
    5. '[]' → logprob: -7.217822551727295
    6. ' from' → logprob: -7.342822551727295
    7. 'from' → logprob: -7.717822551727295
    8. ' return' → logprob: -8.967822074890137
    9. 'return' → logprob: -10.467822074890137
    10. '	import' → logprob: -10.717822074890137

Token 302: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08049429208040237
    2. 'import' → logprob: -2.5804944038391113
    3. ' []' → logprob: -6.580494403839111
    4. '[]
' → logprob: -8.830493927001953
    5. '[]>' → logprob: -10.580493927001953
    6. '=[]' → logprob: -10.705493927001953
    7. '[],' → logprob: -12.330493927001953
    8. 'heap' → logprob: -12.455493927001953
    9. '[])' → logprob: -12.955493927001953
    10. 'from' → logprob: -12.955493927001953

Token 303: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001544321421533823
    2. ' []' → logprob: -8.875154495239258
    3. '[]
' → logprob: -11.750154495239258
    4. '[' → logprob: -13.375154495239258
    5. '[]>' → logprob: -13.500154495239258
    6. 'Priority' → logprob: -14.000154495239258
    7. '[]}' → logprob: -14.125154495239258
    8. '[],' → logprob: -14.500154495239258
    9. '[].' → logprob: -15.000154495239258
    10. '[]

' → logprob: -15.000154495239258

Token 304: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' def' (ID: 1056)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01660890318453312
    2. '<|end|>' → logprob: -4.266608715057373
    3. 'from' → logprob: -6.641608715057373
    4. 'heap' → logprob: -7.141608715057373
    5. ' ' → logprob: -9.516609191894531
    6. ' import' → logprob: -9.641609191894531
    7. 'return' → logprob: -10.141609191894531
    8. 'self' → logprob: -10.391609191894531
    9. '<|end|>' → logprob: -10.766609191894531
    10. '[' → logprob: -10.766609191894531

Token 306: ' _' (ID: 1175)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.13738621771335602
    2. 'from' → logprob: -2.7623863220214844
    3. '_push' → logprob: -3.6373863220214844
    4. 'def' → logprob: -4.387386322021484
    5. ' import' → logprob: -4.637386322021484
    6. ' def' → logprob: -5.387386322021484
    7. ' from' → logprob: -5.762386322021484
    8. '_import' → logprob: -6.262386322021484
    9. '_' → logprob: -6.387386322021484
    10. 'push' → logprob: -7.137386322021484

Token 307: 'init' (ID: 3287)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5919038653373718
    2. 'push' → logprob: -1.2169039249420166
    3. 'init' → logprob: -2.5919039249420166
    4. 'he' → logprob: -2.9669039249420166
    5. 'heap' → logprob: -3.8419039249420166
    6. 'pop' → logprob: -6.5919036865234375
    7. 'add' → logprob: -8.091903686523438
    8. '_push' → logprob: -8.216903686523438
    9. ' he' → logprob: -8.341903686523438
    10. 'from' → logprob: -8.966903686523438

Token 308: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.006385414861142635
    2. '_dist' → logprob: -5.131385326385498
    3. '_priority' → logprob: -9.131385803222656
    4. 'import' → logprob: -9.256385803222656
    5. '_queue' → logprob: -9.256385803222656
    6. 'distance' → logprob: -9.381385803222656
    7. 'dist' → logprob: -10.131385803222656
    8. '_' → logprob: -11.881385803222656
    9. '_depth' → logprob: -12.506385803222656
    10. '_d' → logprob: -12.631385803222656

Token 309: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.027522016316652298
    2. 's' → logprob: -3.902522087097168
    3. '_' → logprob: -5.527522087097168
    4. 'list' → logprob: -6.277522087097168
    5. 'List' → logprob: -7.402522087097168
    6. '[]' → logprob: -8.902522087097168
    7. '<|end|>' → logprob: -9.652522087097168
    8. '_array' → logprob: -10.027522087097168
    9. '_lists' → logprob: -10.152522087097168
    10. '()' → logprob: -10.277522087097168

Token 310: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000926826149225235
    2. '(' → logprob: -7.000926971435547
    3. ' (' → logprob: -11.750926971435547
    4. '       ' → logprob: -12.875926971435547
    5. '   ' → logprob: -13.250926971435547
    6. 'self' → logprob: -13.500926971435547
    7. '(size' → logprob: -14.250926971435547
    8. '(
' → logprob: -14.625926971435547
    9. '()' → logprob: -15.375926971435547
    10. '(len' → logprob: -15.875926971435547

Token 311: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000959700730163604
    2. 'self' → logprob: -7.500959873199463
    3. '(self' → logprob: -8.250959396362305
    4. '):' → logprob: -9.000959396362305
    5. ',self' → logprob: -11.625959396362305
    6. '):
' → logprob: -12.625959396362305
    7. ' ,' → logprob: -12.625959396362305
    8. '   ' → logprob: -13.000959396362305
    9. ' self' → logprob: -13.250959396362305
    10. ')' → logprob: -14.250959396362305

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4796570837497711
    2. '[' → logprob: -1.7296570539474487
    3. ' [' → logprob: -1.7296570539474487
    4. '   ' → logprob: -4.354657173156738
    5. 'return' → logprob: -4.979657173156738
    6. ' return' → logprob: -5.354657173156738
    7. '[self' → logprob: -6.479657173156738
    8. ' ' → logprob: -9.729657173156738
    9. '[int' → logprob: -9.979657173156738
    10. '[-' → logprob: -10.229657173156738

Token 313: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016999948769807816
    2. '[self' → logprob: -4.8919997215271
    3. ' [' → logprob: -5.3919997215271
    4. 'return' (adapté à ' return') → logprob: -5.6419997215271
    5. '[d' → logprob: -7.8919997215271
    6. '   ' → logprob: -8.392000198364258
    7. '[in' → logprob: -8.517000198364258
    8. '[int' → logprob: -9.142000198364258
    9. '       ' → logprob: -9.767000198364258
    10. '[from' → logprob: -10.017000198364258

Token 314: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5840839147567749
    2. '[self' → logprob: -0.8340839147567749
    3. ' [' → logprob: -4.9590840339660645
    4. '[int' → logprob: -7.3340840339660645
    5. '[in' → logprob: -9.834083557128906
    6. '[len' → logprob: -10.084083557128906
    7. '[value' → logprob: -10.584083557128906
    8. '[node' → logprob: -10.584083557128906
    9. '[class' → logprob: -10.709083557128906
    10. '[list' → logprob: -10.709083557128906

Token 315: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00012451570364646614
    2. '10' → logprob: -9.00012493133545
    3. ' float' → logprob: -14.12512493133545
    4. '(float' → logprob: -15.50012493133545
    5. '1' → logprob: -16.250123977661133
    6. 'int' → logprob: -17.000123977661133
    7. 'flo' → logprob: -17.750123977661133
    8. 'inf' → logprob: -17.875123977661133
    9. '(' → logprob: -17.875123977661133
    10. '100' → logprob: -19.375123977661133

Token 316: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.8444881536415778e-05
    2. ' **' → logprob: -10.500028610229492
    3. '9' → logprob: -14.625028610229492
    4. '*' → logprob: -15.125028610229492
    5. '^' → logprob: -17.000028610229492
    6. 'e' → logprob: -18.875028610229492
    7. '**
' → logprob: -19.000028610229492
    8. '***' → logprob: -19.500028610229492
    9. '000' → logprob: -19.625028610229492
    10. '7' → logprob: -19.750028610229492

Token 317: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002648071153089404
    2. '15' → logprob: -6.377647876739502
    3. '10' → logprob: -7.127647876739502
    4. '18' → logprob: -8.87764835357666
    5. '7' → logprob: -13.37764835357666
    6. '12' → logprob: -14.12764835357666
    7. '8' → logprob: -15.12764835357666
    8. '20' → logprob: -15.37764835357666
    9. ' ' → logprob: -16.002647399902344
    10. '+' → logprob: -16.252647399902344

Token 318: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017303572967648506
    2. ' ]' → logprob: -4.767303466796875
    3. ' for' → logprob: -5.142303466796875
    4. ']*' → logprob: -5.892303466796875
    5. ',' → logprob: -11.142303466796875
    6. 'for' → logprob: -11.267303466796875
    7. ']+' → logprob: -11.767303466796875
    8. ' ' → logprob: -12.392303466796875
    9. ']*(' → logprob: -13.267303466796875
    10. ']int' → logprob: -13.267303466796875

Token 319: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0439777672290802
    2. 'for' → logprob: -3.918977737426758
    3. ']' → logprob: -4.418977737426758
    4. ',' → logprob: -6.293977737426758
    5. '       ' → logprob: -6.293977737426758
    6. '        ' → logprob: -6.418977737426758
    7. ' ' → logprob: -6.543977737426758
    8. ' *' → logprob: -7.043977737426758
    9. '<|end|>' → logprob: -7.043977737426758
    10. '*' → logprob: -7.543977737426758

Token 320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7146746763028204e-05
    2. ' self' → logprob: -10.25003719329834
    3. '(self' → logprob: -13.50003719329834
    4. 'len' → logprob: -16.000036239624023
    5. '       ' → logprob: -16.375036239624023
    6. '   ' → logprob: -16.625036239624023
    7. '	self' → logprob: -18.750036239624023
    8. '[self' → logprob: -19.000036239624023
    9. '           ' → logprob: -20.000036239624023
    10. '
' → logprob: -20.125036239624023

Token 321: '.V' (ID: 5970)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.12697409093379974
    2. '.V' → logprob: -2.126974105834961
    3. '.' → logprob: -11.001974105834961
    4. ' .' → logprob: -11.001974105834961
    5. '_V' → logprob: -11.876974105834961
    6. '.__' → logprob: -13.501974105834961
    7. '.VK' → logprob: -13.751974105834961
    8. '   ' → logprob: -14.126974105834961
    9. ']._' → logprob: -14.501974105834961
    10. 'self' → logprob: -15.001974105834961

Token 322: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7298277616500854
    2. 'import' → logprob: -1.4798277616500854
    3. '   ' → logprob: -1.8548277616500854
    4. '<|end|>' → logprob: -2.104827880859375
    5. ' def' → logprob: -4.979827880859375
    6. 'from' → logprob: -5.854827880859375
    7. '	def' → logprob: -7.604827880859375
    8. 'heap' → logprob: -8.104827880859375
    9. '       ' → logprob: -8.229827880859375
    10. ')' → logprob: -8.354827880859375

Token 325: ' _' (ID: 1175)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0022349476348608732
    2. ' _' → logprob: -6.127234935760498
    3. '_init' → logprob: -11.502235412597656
    4. '_push' → logprob: -11.877235412597656
    5. '_reset' → logprob: -12.002235412597656
    6. '_def' → logprob: -12.502235412597656
    7. '_start' → logprob: -12.627235412597656
    8. '_get' → logprob: -12.877235412597656
    9. ' def' → logprob: -13.002235412597656
    10. 'def' → logprob: -13.127235412597656

Token 326: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0010438859462738037
    2. 'import' → logprob: -7.501043796539307
    3. 'push' → logprob: -8.251044273376465
    4. 'heap' → logprob: -9.251044273376465
    5. 'init' → logprob: -9.501044273376465
    6. 'def' → logprob: -11.376044273376465
    7. 'he' → logprob: -11.626044273376465
    8. 'from' → logprob: -11.751044273376465
    9. '_set' → logprob: -11.751044273376465
    10. 'get' → logprob: -12.126044273376465

Token 327: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.1637164789135568e-05
    2. '_distance' → logprob: -11.875011444091797
    3. '_dist' → logprob: -13.250011444091797
    4. 'start' → logprob: -13.500011444091797
    5. '_' → logprob: -14.000011444091797
    6. ' _' → logprob: -16.125011444091797
    7. '_s' → logprob: -16.500011444091797
    8. '_star' → logprob: -16.500011444091797
    9. '_current' → logprob: -16.625011444091797
    10. '_st' → logprob: -16.625011444091797

Token 328: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0001848254178185016
    2. '_dist' → logprob: -8.625185012817383
    3. '_' → logprob: -12.750185012817383
    4. '_cost' → logprob: -14.125185012817383
    5. ' _' → logprob: -14.375185012817383
    6. 'distance' → logprob: -15.500185012817383
    7. '_d' → logprob: -15.750185012817383
    8. '_length' → logprob: -16.000185012817383
    9. '_depth' → logprob: -16.125185012817383
    10. '_value' → logprob: -16.500185012817383

Token 329: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012788036838173866
    2. '(' → logprob: -4.387787818908691
    3. ' (' → logprob: -9.387787818908691
    4. '(d' → logprob: -9.512787818908691
    5. '(s' → logprob: -10.512787818908691
    6. '   ' → logprob: -10.637787818908691
    7. '(None' → logprob: -11.012787818908691
    8. '(
' → logprob: -11.137787818908691
    9. 'def' → logprob: -11.512787818908691
    10. 'self' → logprob: -12.137787818908691

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07224348932504654
    2. '(self' → logprob: -2.8222434520721436
    3. '(d' → logprob: -5.447243690490723
    4. ')' → logprob: -6.197243690490723
    5. ',d' → logprob: -6.822243690490723
    6. '(' → logprob: -6.947243690490723
    7. ' ,' → logprob: -7.322243690490723
    8. ',self' → logprob: -8.322243690490723
    9. ' (' → logprob: -8.572243690490723
    10. 'self' → logprob: -8.697243690490723

Token 331: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02325526252388954
    2. ' d' → logprob: -3.7732553482055664
    3. '   ' → logprob: -12.273255348205566
    4. ' ' → logprob: -13.148255348205566
    5. '       ' → logprob: -13.898255348205566
    6. '	d' → logprob: -14.648255348205566
    7. 'dist' → logprob: -15.273255348205566
    8. ')d' → logprob: -15.273255348205566
    9. '    ' → logprob: -15.398255348205566
    10. '  ' → logprob: -15.398255348205566

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003349890175741166
    2. ',s' → logprob: -8.125334739685059
    3. ' ,' → logprob: -10.500334739685059
    4. '[s' → logprob: -12.000334739685059
    5. ',d' → logprob: -12.500334739685059
    6. 'self' → logprob: -15.250334739685059
    7. '   ' → logprob: -15.250334739685059
    8. 's' → logprob: -15.375334739685059
    9. ',self' → logprob: -15.375334739685059
    10. 'd' → logprob: -15.875334739685059

Token 333: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20150135457515717
    2. 's' → logprob: -1.7015013694763184
    3. '0' → logprob: -9.95150089263916
    4. ' ' → logprob: -10.82650089263916
    5. '<|end|>' → logprob: -11.07650089263916
    6. ')' → logprob: -13.20150089263916
    7. '_s' → logprob: -13.57650089263916
    8. '<|end|>' → logprob: -14.20150089263916
    9. '    ' → logprob: -15.82650089263916
    10. ')s' → logprob: -15.95150089263916

Token 334: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4671787917613983
    2. '[s' → logprob: -1.8421788215637207
    3. '):' → logprob: -2.3421788215637207
    4. '   ' → logprob: -3.2171788215637207
    5. '       ' → logprob: -3.5921788215637207
    6. ':' → logprob: -3.8421788215637207
    7. '[d' → logprob: -4.342178821563721
    8. '):
' → logprob: -4.967178821563721
    9. '[' → logprob: -5.217178821563721
    10. 'self' → logprob: -6.967178821563721

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15043208003044128
    2. 'd' → logprob: -2.1504321098327637
    3. ' d' → logprob: -4.150432109832764
    4. '   ' → logprob: -4.900432109832764
    5. '	d' → logprob: -11.400431632995605
    6. '           ' → logprob: -11.775431632995605
    7. '```' → logprob: -12.400431632995605
    8. ' ' → logprob: -13.525431632995605
    9. '    ' → logprob: -13.900431632995605
    10. '      ' → logprob: -14.150431632995605

Token 336: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0003384422743692994
    2. ' d' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.125338554382324
    4. '       ' → logprob: -13.875338554382324
    5. '	d' → logprob: -16.625337600708008
    6. ' ' → logprob: -20.375337600708008
    7. '  ' → logprob: -20.500337600708008
    8. '           ' → logprob: -21.000337600708008
    9. '    ' → logprob: -21.250337600708008
    10. 'def' → logprob: -21.625337600708008

Token 337: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.250004768371582
    3. ' [' → logprob: -17.1250057220459
    4. 's' → logprob: -17.2500057220459
    5. '[
' → logprob: -19.3750057220459
    6. '```' → logprob: -19.8750057220459
    7. ' s' → logprob: -20.3750057220459
    8. '[S' → logprob: -20.6250057220459
    9. ' ' → logprob: -21.3750057220459
    10. '=s' → logprob: -21.6250057220459

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043281487887725234
    2. ' ]' → logprob: -8.000432968139648
    3. ']=' → logprob: -9.250432968139648
    4. '=' → logprob: -14.000432968139648
    5. ')' → logprob: -14.875432968139648
    6. ' =' → logprob: -16.12543296813965
    7. ']
' → logprob: -19.00043296813965
    8. ' ' → logprob: -19.25043296813965
    9. '']' → logprob: -19.50043296813965
    10. '`]' → logprob: -19.75043296813965

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192955136299133
    2. ' =' → logprob: -1.501929521560669
    3. '＝' → logprob: -15.75192928314209
    4. '[' → logprob: -15.87692928314209
    5. '.=' → logprob: -16.876930236816406
    6. '=

' → logprob: -17.126930236816406
    7. ' =
' → logprob: -17.251930236816406
    8. '=
' → logprob: -17.501930236816406
    9. '=int' → logprob: -17.626930236816406
    10. ' ' → logprob: -17.751930236816406

Token 340: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.125001907348633
    4. '۰' → logprob: -20.750001907348633
    5. '０' → logprob: -21.375001907348633
    6. '  ' → logprob: -23.000001907348633
    7. '00' → logprob: -23.375001907348633
    8. '000' → logprob: -23.375001907348633
    9. '       ' → logprob: -24.375001907348633
    10. '	' → logprob: -24.625001907348633

Token 341: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '０' → logprob: -20.375
    4. '۰' → logprob: -21.0
    5. '00' → logprob: -21.25
    6. '000' → logprob: -21.875
    7. '   ' → logprob: -22.875
    8. '০' → logprob: -24.125
    9. '  ' → logprob: -24.5
    10. '٠' → logprob: -24.5

Token 342: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.28586432337760925
    2. '   ' → logprob: -2.1608643531799316
    3. '	def' → logprob: -2.5358643531799316
    4. '<|end|>' → logprob: -3.2858643531799316
    5. ' def' → logprob: -4.285864353179932
    6. '<|end|>' → logprob: -7.160864353179932
    7. '    ' → logprob: -7.535864353179932
    8. '	   ' → logprob: -7.785864353179932
    9. '       ' → logprob: -8.535863876342773
    10. '	' → logprob: -8.785863876342773

Token 345: ' _' (ID: 1175)
  Prédit: '_push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_push' → logprob: -0.00039849523454904556
    2. ' _' → logprob: -7.875398635864258
    3. '_pop' → logprob: -12.375398635864258
    4. '_p' → logprob: -12.500398635864258
    5. '_' → logprob: -12.750398635864258
    6. '_set' → logprob: -13.000398635864258
    7. '_add' → logprob: -13.500398635864258
    8. '_start' → logprob: -14.500398635864258
    9. '_put' → logprob: -14.625398635864258
    10. '_enqueue' → logprob: -14.750398635864258

Token 346: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -2.1054253011243418e-05
    2. 'def' → logprob: -11.375020980834961
    3. '_push' → logprob: -12.625020980834961
    4. 'pop' → logprob: -12.625020980834961
    5. ' push' → logprob: -14.125020980834961
    6. '	push' → logprob: -14.375020980834961
    7. 'process' → logprob: -14.625020980834961
    8. 'init' → logprob: -15.000020980834961
    9. '.push' → logprob: -15.750020980834961
    10. 'pull' → logprob: -16.25002098083496

Token 347: '_start' (ID: 10949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008818893693387508
    2. '_start' → logprob: -5.258819103240967
    3. '<|end|>' → logprob: -6.383819103240967
    4. ' (' → logprob: -7.133819103240967
    5. 'start' → logprob: -7.883819103240967
    6. '(self' → logprob: -8.258818626403809
    7. '(queue' → logprob: -9.383818626403809
    8. '(s' → logprob: -9.508818626403809
    9. '(start' → logprob: -10.133818626403809
    10. '_' → logprob: -10.133818626403809

Token 348: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.588793960167095e-05
    2. '_' → logprob: -9.750076293945312
    3. '_queue' → logprob: -11.500076293945312
    4. '(' → logprob: -12.750076293945312
    5. '_nodes' → logprob: -14.125076293945312
    6. '_item' → logprob: -14.125076293945312
    7. '_Node' → logprob: -14.125076293945312
    8. 'node' → logprob: -14.750076293945312
    9. '_NODE' → logprob: -15.250076293945312
    10. 'Node' → logprob: -15.250076293945312

Token 349: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014583001844584942
    2. '(self' → logprob: -4.264583110809326
    3. '(queue' → logprob: -8.014582633972168
    4. ' (' → logprob: -9.889582633972168
    5. '<|end|>' → logprob: -11.264582633972168
    6. '(
' → logprob: -11.764582633972168
    7. '(qu' → logprob: -12.889582633972168
    8. '([],' → logprob: -13.139582633972168
    9. '(s' → logprob: -13.389582633972168
    10. '(push' → logprob: -13.639582633972168

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ' ,' → logprob: -12.125011444091797
    3. 'self' → logprob: -12.625011444091797
    4. '   ' → logprob: -13.750011444091797
    5. ',
' → logprob: -14.250011444091797
    6. 'que' → logprob: -14.625011444091797
    7. ')' → logprob: -15.625011444091797
    8. ' ' → logprob: -16.125011444091797
    9. '```' → logprob: -16.250011444091797
    10. '       ' → logprob: -16.500011444091797

Token 351: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4748450815677643
    2. ' que' → logprob: -0.9748450517654419
    3. 'queue' → logprob: -8.349844932556152
    4. ')' → logprob: -9.349844932556152
    5. '[]' → logprob: -9.474844932556152
    6. 'self' → logprob: -9.724844932556152
    7. '   ' → logprob: -9.974844932556152
    8. ' queue' → logprob: -10.099844932556152
    9. 'ques' → logprob: -10.224844932556152
    10. 'deque' → logprob: -10.474844932556152

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. ' ,' → logprob: -11.000044822692871
    3. '.append' → logprob: -11.125044822692871
    4. '):' → logprob: -12.500044822692871
    5. '.' → logprob: -13.625044822692871
    6. ')' → logprob: -13.625044822692871
    7. 'append' → logprob: -13.875044822692871
    8. '   ' → logprob: -13.875044822692871
    9. ').' → logprob: -13.875044822692871
    10. ',self' → logprob: -14.375044822692871

Token 353: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23589329421520233
    2. ' s' → logprob: -2.6108932495117188
    3. '(' → logprob: -2.7358932495117188
    4. '(s' → logprob: -2.9858932495117188
    5. ' (' → logprob: -3.8608932495117188
    6. '0' → logprob: -8.360893249511719
    7. ' ' → logprob: -10.360893249511719
    8. '(
' → logprob: -12.360893249511719
    9. ')' → logprob: -12.735893249511719
    10. '<|end|>' → logprob: -13.110893249511719

Token 354: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43070948123931885
    2. '):' → logprob: -1.1807094812393188
    3. '       ' → logprob: -3.3057093620300293
    4. '   ' → logprob: -6.055709362030029
    5. ':' → logprob: -6.555709362030029
    6. '):
' → logprob: -6.930709362030029
    7. ',' → logprob: -7.305709362030029
    8. 'import' → logprob: -8.180709838867188
    9. '.append' → logprob: -8.430709838867188
    10. ':
' → logprob: -8.805709838867188

Token 355: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5467222332954407
    2. '       ' → logprob: -0.9217222332954407
    3. 'heap' → logprob: -4.046722412109375
    4. ' heap' → logprob: -6.296722412109375
    5. 'que' → logprob: -6.421722412109375
    6. 'he' → logprob: -6.796722412109375
    7. ' import' → logprob: -7.546722412109375
    8. '   ' → logprob: -8.546722412109375
    9. ' he' → logprob: -8.796722412109375
    10. 'from' → logprob: -8.796722412109375

Token 356: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.10898838192224503
    2. 'he' → logprob: -2.8589882850646973
    3. 'heap' → logprob: -3.1089882850646973
    4. 'from' → logprob: -7.733988285064697
    5. '   ' → logprob: -8.358988761901855
    6. 'que' → logprob: -8.608988761901855
    7. '(' → logprob: -9.108988761901855
    8. ' heap' → logprob: -9.358988761901855
    9. ' import' → logprob: -9.858988761901855
    10. ' he' → logprob: -9.858988761901855

Token 357: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.01815415732562542
    2. 'heap' → logprob: -4.018154144287109
    3. '_heap' → logprob: -13.76815414428711
    4. ' he' → logprob: -14.39315414428711
    5. ' ' → logprob: -14.51815414428711
    6. '(heap' → logprob: -14.51815414428711
    7. 'he' → logprob: -15.14315414428711
    8. 's' → logprob: -15.14315414428711
    9. '```' → logprob: -15.51815414428711
    10. '   ' → logprob: -15.64315414428711

Token 358: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00018101456225849688
    2. 'queue' → logprob: -8.625181198120117
    3. ' queue' → logprob: -14.500181198120117
    4. '_queue' → logprob: -15.125181198120117
    5. 'heap' → logprob: -15.500181198120117
    6. 'que' → logprob: -16.250181198120117
    7. 'push' → logprob: -16.500181198120117
    8. 'u' → logprob: -16.625181198120117
    9. 'ify' → logprob: -17.500181198120117
    10. 'import' → logprob: -17.750181198120117

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9980485439300537
    2. 'heap' → logprob: -1.1230485439300537
    3. ' heap' → logprob: -1.4980485439300537
    4. '
' → logprob: -3.1230485439300537
    5. '(heap' → logprob: -3.4980485439300537
    6. '.heap' → logprob: -4.873048782348633
    7. '_heap' → logprob: -8.498048782348633
    8. '   ' → logprob: -8.998048782348633
    9. '
' → logprob: -9.748048782348633
    10. '        
' → logprob: -9.748048782348633

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24466300010681152
    2. 'heap' → logprob: -1.6196630001068115
    3. ' heap' → logprob: -3.9946630001068115
    4. '(heap' → logprob: -7.619663238525391
    5. '.heap' → logprob: -8.99466323852539
    6. '_heap' → logprob: -10.86966323852539
    7. '   ' → logprob: -11.61966323852539
    8. '	' → logprob: -12.61966323852539
    9. 'he' → logprob: -13.24466323852539
    10. '        
' → logprob: -13.99466323852539

Token 361: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.013514413498342037
    2. ' heap' → logprob: -4.513514518737793
    3. '       ' → logprob: -6.013514518737793
    4. 'he' → logprob: -12.263514518737793
    5. '(heap' → logprob: -12.388514518737793
    6. '   ' → logprob: -12.513514518737793
    7. '.heap' → logprob: -12.513514518737793
    8. '_heap' → logprob: -13.638514518737793
    9. ' ' → logprob: -15.888514518737793
    10. '	' → logprob: -16.513513565063477

Token 362: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. '.he' → logprob: -14.375000953674316
    3. '.q' → logprob: -16.250001907348633
    4. '.heap' → logprob: -16.500001907348633
    5. '.push' → logprob: -16.625001907348633
    6. '.' → logprob: -17.250001907348633
    7. '       ' → logprob: -17.500001907348633
    8. '   ' → logprob: -18.750001907348633
    9. 'queue' → logprob: -19.875001907348633
    10. '	q' → logprob: -20.000001907348633

Token 363: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0004665385349653661
    2. '.' → logprob: -8.250466346740723
    3. '.heap' → logprob: -8.500466346740723
    4. '.push' → logprob: -13.500466346740723
    5. '.h' → logprob: -16.25046730041504
    6. ' .' → logprob: -16.25046730041504
    7. ' he' → logprob: -16.75046730041504
    8. '.He' → logprob: -17.12546730041504
    9. '.q' → logprob: -17.25046730041504
    10. '.ht' → logprob: -17.62546730041504

Token 364: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011069540778407827
    2. 'ap' → logprob: -9.125110626220703
    3. 'pp' → logprob: -14.125110626220703
    4. 'a' → logprob: -14.500110626220703
    5. '```' → logprob: -15.125110626220703
    6. '[' → logprob: -16.625110626220703
    7. '   ' → logprob: -17.125110626220703
    8. 'appen' → logprob: -17.500110626220703
    9. '...' → logprob: -17.625110626220703
    10. 'push' → logprob: -18.125110626220703

Token 365: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.607391408877447e-05
    2. 'sh' → logprob: -11.125036239624023
    3. 'push' → logprob: -11.125036239624023
    4. 'op' → logprob: -12.250036239624023
    5. 'p' → logprob: -13.875036239624023
    6. 'ap' → logprob: -15.250036239624023
    7. 'u' → logprob: -15.750036239624023
    8. 'app' → logprob: -16.375036239624023
    9. '[' → logprob: -16.875036239624023
    10. 'q' → logprob: -17.250036239624023

Token 366: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -14.000001907348633
    3. '(
' → logprob: -14.500001907348633
    4. '(queue' → logprob: -15.375001907348633
    5. '<|end|>' → logprob: -15.875001907348633
    6. '((' → logprob: -17.750001907348633
    7. '(s' → logprob: -18.125001907348633
    8. ')' → logprob: -18.375001907348633
    9. '(

' → logprob: -18.625001907348633
    10. '(self' → logprob: -19.375001907348633

Token 367: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0005757896578870714
    2. '(' → logprob: -7.500576019287109
    3. ' que' → logprob: -11.00057601928711
    4. 'quee' → logprob: -13.25057601928711
    5. 'ques' → logprob: -13.37557601928711
    6. ')' → logprob: -13.50057601928711
    7. '   ' → logprob: -15.00057601928711
    8. 'quec' → logprob: -15.25057601928711
    9. '       ' → logprob: -15.37557601928711
    10. 'queue' → logprob: -15.62557601928711

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03003602847456932
    2. '(' → logprob: -3.530035972595215
    3. ' (' → logprob: -9.280035972595215
    4. ',(' → logprob: -9.405035972595215
    5. ' ,' → logprob: -9.780035972595215
    6. '(s' → logprob: -10.655035972595215
    7. ')' → logprob: -11.030035972595215
    8. '((' → logprob: -12.530035972595215
    9. '       ' → logprob: -12.780035972595215
    10. '(queue' → logprob: -13.280035972595215

Token 369: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007698552217334509
    2. ' (' → logprob: -5.2576985359191895
    3. '(s' → logprob: -6.0076985359191895
    4. ')' → logprob: -14.632699012756348
    5. '[' → logprob: -14.632699012756348
    6. ' ' → logprob: -14.882699012756348
    7. '   ' → logprob: -15.382699012756348
    8. '0' → logprob: -15.632699012756348
    9. '(self' → logprob: -15.882699012756348
    10. '<|end|>' → logprob: -17.00769805908203

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.875009536743164
    4. ')' → logprob: -19.875009536743164
    5. '(' → logprob: -21.125009536743164
    6. '```' → logprob: -21.625009536743164
    7. '       ' → logprob: -22.000009536743164
    8. '  ' → logprob: -22.125009536743164
    9. '۰' → logprob: -22.750009536743164
    10. ')
' → logprob: -22.750009536743164

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001801801408873871
    2. ',s' → logprob: -9.1251802444458
    3. 's' → logprob: -9.7501802444458
    4. ' ,' → logprob: -11.5001802444458
    5. ' s' → logprob: -13.8751802444458
    6. ')' → logprob: -14.2501802444458
    7. '<|end|>' → logprob: -14.2501802444458
    8. ',
' → logprob: -14.8751802444458
    9. '),' → logprob: -17.625179290771484
    10. '```' → logprob: -17.750179290771484

Token 372: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25192946195602417
    2. ' s' → logprob: -1.501929521560669
    3. ' ' → logprob: -16.376930236816406
    4. '   ' → logprob: -16.751930236816406
    5. '_s' → logprob: -16.876930236816406
    6. '    ' → logprob: -17.751930236816406
    7. '	s' → logprob: -17.751930236816406
    8. '       ' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.001930236816406
    10. '  ' → logprob: -18.251930236816406

Token 373: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804837539792061
    2. '))' → logprob: -3.288048267364502
    3. '       ' → logprob: -12.66304874420166
    4. ')
' → logprob: -13.03804874420166
    5. ' )' → logprob: -13.91304874420166
    6. '))
' → logprob: -15.28804874420166
    7. ')}' → logprob: -15.91304874420166
    8. ')))' → logprob: -16.038047790527344
    9. '<|end|>' → logprob: -16.663047790527344
    10. '   ' → logprob: -16.913047790527344

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11322901397943497
    2. 'def' → logprob: -2.2382290363311768
    3. ' def' → logprob: -7.988228797912598
    4. '<|end|>' → logprob: -9.988228797912598
    5. '	def' → logprob: -11.738228797912598
    6. '```' → logprob: -12.488228797912598
    7. '    
' → logprob: -13.113228797912598
    8. ')' → logprob: -13.363228797912598
    9. '       ' → logprob: -13.738228797912598
    10. '  ' → logprob: -13.863228797912598

Token 375: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013828959316015244
    2. '   ' → logprob: -4.513828754425049
    3. ' def' → logprob: -5.888828754425049
    4. '	def' → logprob: -12.138829231262207
    5. '
' → logprob: -14.138829231262207
    6. '_def' → logprob: -14.888829231262207
    7. '    
' → logprob: -15.513829231262207
    8. '```' → logprob: -15.638829231262207
    9. ' ' → logprob: -16.26382827758789
    10. 'import' → logprob: -16.76382827758789

Token 376: ' _' (ID: 1175)
  Prédit: '_process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_process' → logprob: -0.062002409249544144
    2. ' _' → logprob: -2.812002420425415
    3. '_push' → logprob: -11.562002182006836
    4. '_' → logprob: -11.687002182006836
    5. ' def' → logprob: -13.062002182006836
    6. '_compute' → logprob: -13.062002182006836
    7. '_add' → logprob: -13.437002182006836
    8. ' ' → logprob: -13.562002182006836
    9. 'def' → logprob: -13.687002182006836
    10. '_def' → logprob: -13.812002182006836

Token 377: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -2.093505099765025e-05
    2. 'pop' → logprob: -11.875020980834961
    3. '_process' → logprob: -12.000020980834961
    4. 'import' → logprob: -12.750020980834961
    5. 'def' → logprob: -13.250020980834961
    6. 'push' → logprob: -13.875020980834961
    7. ' process' → logprob: -14.375020980834961
    8. 'proc' → logprob: -14.875020980834961
    9. '	process' → logprob: -15.000020980834961
    10. 'processing' → logprob: -15.500020980834961

Token 378: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.5597102396423e-05
    2. '_' → logprob: -10.250035285949707
    3. '(queue' → logprob: -17.375036239624023
    4. '(self' → logprob: -17.500036239624023
    5. '_QUEUE' → logprob: -17.625036239624023
    6. 'queue' → logprob: -17.625036239624023
    7. '_q' → logprob: -17.875036239624023
    8. '__' → logprob: -18.125036239624023
    9. '_query' → logprob: -18.500036239624023
    10. '```' → logprob: -18.750036239624023

Token 379: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005579164135269821
    2. '(' → logprob: -7.500557899475098
    3. ' (' → logprob: -13.000557899475098
    4. '       ' → logprob: -13.250557899475098
    5. 'self' → logprob: -14.750557899475098
    6. '   ' → logprob: -15.000557899475098
    7. '(s' → logprob: -15.875557899475098
    8. '(
' → logprob: -17.250558853149414
    9. '(sel' → logprob: -17.625558853149414
    10. '```' → logprob: -17.750558853149414

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.873571692267433e-05
    2. ' ,' → logprob: -10.375068664550781
    3. '       ' → logprob: -10.750068664550781
    4. 'self' → logprob: -11.375068664550781
    5. '   ' → logprob: -13.125068664550781
    6. ',self' → logprob: -14.125068664550781
    7. '(self' → logprob: -14.250068664550781
    8. '):' → logprob: -14.625068664550781
    9. ',
' → logprob: -15.000068664550781
    10. ')' → logprob: -16.25006866455078

Token 381: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.04865594953298569
    2. ' que' → logprob: -3.0486559867858887
    3. 'queue' → logprob: -11.04865550994873
    4. ' ' → logprob: -11.29865550994873
    5. 'qu' → logprob: -11.42365550994873
    6. '   ' → logprob: -12.17365550994873
    7. ')' → logprob: -12.67365550994873
    8. '
' → logprob: -12.67365550994873
    9. 'q' → logprob: -13.04865550994873
    10. 'ques' → logprob: -13.04865550994873

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005152635276317596
    2. '):' → logprob: -8.37551498413086
    3. '       ' → logprob: -8.62551498413086
    4. '):
' → logprob: -9.50051498413086
    5. ' ,' → logprob: -11.25051498413086
    6. '   ' → logprob: -11.50051498413086
    7. 'self' → logprob: -12.62551498413086
    8. ',d' → logprob: -13.75051498413086
    9. ',self' → logprob: -14.50051498413086
    10. ',
' → logprob: -14.62551498413086

Token 383: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06196768581867218
    2. ' d' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.936967849731445
    4. 'D' → logprob: -18.436967849731445
    5. '	d' → logprob: -18.686967849731445
    6. ' ' → logprob: -19.436967849731445
    7. 'def' → logprob: -19.436967849731445
    8. ')d' → logprob: -19.811967849731445
    9. '       ' → logprob: -20.186967849731445
    10. '_d' → logprob: -20.686967849731445

Token 384: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5096522569656372
    2. '       ' → logprob: -1.2596522569656372
    3. '):' → logprob: -2.2596521377563477
    4. '   ' → logprob: -5.134652137756348
    5. 'self' → logprob: -5.634652137756348
    6. ',' → logprob: -7.134652137756348
    7. '):
' → logprob: -7.634652137756348
    8. '(self' → logprob: -8.384652137756348
    9. ':' → logprob: -9.509652137756348
    10. ')' → logprob: -10.759652137756348

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011833544820547104
    2. 'import' → logprob: -4.511833667755127
    3. '   ' → logprob: -7.261833667755127
    4. ' import' → logprob: -9.761833190917969
    5. '	import' → logprob: -10.761833190917969
    6. 'while' → logprob: -13.511833190917969
    7. '	' → logprob: -13.761833190917969
    8. '           ' → logprob: -14.511833190917969
    9. '	   ' → logprob: -14.886833190917969
    10. '    ' → logprob: -14.886833190917969

Token 386: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.1374291330575943
    2. '       ' → logprob: -2.2624292373657227
    3. ' import' → logprob: -3.7624292373657227
    4. 'while' → logprob: -7.012429237365723
    5. ' while' → logprob: -9.262429237365723
    6. '   ' → logprob: -9.512429237365723
    7. '	import' → logprob: -12.012429237365723
    8. ' ' → logprob: -13.637429237365723
    9. 'from' → logprob: -14.887429237365723
    10. '           ' → logprob: -14.887429237365723

Token 387: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20141547918319702
    2. ' heap' → logprob: -1.7014155387878418
    3. '_heap' → logprob: -13.951415061950684
    4. 'he' → logprob: -14.076415061950684
    5. '(heap' → logprob: -15.326415061950684
    6. '.heap' → logprob: -15.576415061950684
    7. ' ' → logprob: -16.201416015625
    8. '```' → logprob: -17.326416015625
    9. 'Heap' → logprob: -17.701416015625
    10. ' ' → logprob: -18.201416015625

Token 388: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -18.75
    3. '       ' → logprob: -19.375
    4. 'import' → logprob: -19.625
    5. '   ' → logprob: -20.5
    6. 'ql' → logprob: -20.75
    7. 'qml' → logprob: -20.75
    8. 'p' → logprob: -20.875
    9. 'k' → logprob: -21.625
    10. '[' → logprob: -21.875

Token 389: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15232950448989868
    2. '
' → logprob: -2.027329444885254
    3. 'while' → logprob: -5.027329444885254
    4. ' while' → logprob: -6.152329444885254
    5. '<|end|>' → logprob: -7.652329444885254
    6. '	while' → logprob: -8.152329444885254
    7. '        
' → logprob: -10.027329444885254
    8. '
' → logprob: -10.152329444885254
    9. '	' → logprob: -10.902329444885254
    10. 'While' → logprob: -11.402329444885254

Token 390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19759003818035126
    2. 'while' → logprob: -1.9475899934768677
    3. ' while' → logprob: -3.3225901126861572
    4. '	while' → logprob: -7.572589874267578
    5. '   ' → logprob: -9.947589874267578
    6. '	' → logprob: -10.072589874267578
    7. '	   ' → logprob: -11.947589874267578
    8. '
' → logprob: -13.072589874267578
    9. '        
' → logprob: -13.447589874267578
    10. '           ' → logprob: -14.822589874267578

Token 391: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0021923754829913378
    2. '       ' → logprob: -6.252192497253418
    3. ' while' → logprob: -8.252192497253418
    4. '	while' → logprob: -12.752192497253418
    5. '   ' → logprob: -16.6271915435791
    6. 'While' → logprob: -17.6271915435791
    7. '        
' → logprob: -17.8771915435791
    8. 'wh' → logprob: -18.3771915435791
    9. '
' → logprob: -18.5021915435791
    10. '	' → logprob: -18.5021915435791

Token 392: ' self' (ID: 1051)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22619739174842834
    2. 'que' → logprob: -1.601197361946106
    3. ' len' → logprob: -7.351197242736816
    4. 'len' → logprob: -8.976197242736816
    5. 'qu' → logprob: -12.226197242736816
    6. 'True' → logprob: -12.726197242736816
    7. ' ' → logprob: -13.476197242736816
    8. ' qu' → logprob: -13.476197242736816
    9. 'Que' → logprob: -13.976197242736816
    10. '(len' → logprob: -14.226197242736816

Token 393: '._' (ID: 2697)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34492436051368713
    2. '.' → logprob: -1.5949243307113647
    3. ':' → logprob: -3.0949244499206543
    4. 'and' → logprob: -3.7199244499206543
    5. 'que' → logprob: -4.594924449920654
    6. ' ' → logprob: -6.719924449920654
    7. '   ' → logprob: -6.719924449920654
    8. '.G' → logprob: -6.719924449920654
    9. ' que' → logprob: -6.844924449920654
    10. ':
' → logprob: -7.219924449920654

Token 394: 'queue' (ID: 9409)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2889315187931061
    2. 'que' → logprob: -2.2889316082000732
    3. 'init' → logprob: -2.9139316082000732
    4. 'queue' → logprob: -3.0389316082000732
    5. 'len' → logprob: -4.413931369781494
    6. '_process' → logprob: -5.038931369781494
    7. '_init' → logprob: -5.413931369781494
    8. '_queue' → logprob: -5.663931369781494
    9. 'q' → logprob: -5.788931369781494
    10. 'E' → logprob: -6.163931369781494

Token 395: '_not' (ID: 17599)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1754302829504013
    2. '<|end|>' → logprob: -2.3004302978515625
    3. '):' → logprob: -3.4254302978515625
    4. ' and' → logprob: -4.3004302978515625
    5. 'and' → logprob: -5.1754302978515625
    6. ')' → logprob: -5.6754302978515625
    7. '):
' → logprob: -6.6754302978515625
    8. ':
' → logprob: -6.9254302978515625
    9. '<|end|>' → logprob: -7.1754302978515625
    10. '[' → logprob: -7.8004302978515625

Token 396: '_empty' (ID: 35051)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.00674793915823102
    2. '_empty' → logprob: -5.006747722625732
    3. ' empty' → logprob: -10.63174819946289
    4. 'empt' → logprob: -12.50674819946289
    5. '```' → logprob: -13.88174819946289
    6. 'Empty' → logprob: -14.00674819946289
    7. 'emp' → logprob: -14.00674819946289
    8. '
' → logprob: -14.25674819946289
    9. 'isempty' → logprob: -14.88174819946289
    10. '-empty' → logprob: -15.13174819946289

Token 397: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4974866644479334e-05
    2. ' (' → logprob: -11.125015258789062
    3. '(self' → logprob: -15.625015258789062
    4. '():' → logprob: -16.875015258789062
    5. ':' → logprob: -17.875015258789062
    6. '(
' → logprob: -17.875015258789062
    7. '()' → logprob: -18.000015258789062
    8. ' ' → logprob: -18.250015258789062
    9. '   ' → logprob: -18.250015258789062
    10. 'que' → logprob: -18.625015258789062

Token 398: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00011045700375689194
    2. ' que' → logprob: -9.250110626220703
    3. '(' → logprob: -11.250110626220703
    4. ')' → logprob: -15.625110626220703
    5. '   ' → logprob: -15.625110626220703
    6. 'ques' → logprob: -15.750110626220703
    7. 'qu' → logprob: -16.000110626220703
    8. '```' → logprob: -16.000110626220703
    9. 'queue' → logprob: -16.125110626220703
    10. '       ' → logprob: -16.250110626220703

Token 399: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000706236984115094
    2. '():' → logprob: -8.250706672668457
    3. ')' → logprob: -8.375706672668457
    4. ' ):' → logprob: -9.000706672668457
    5. '):
' → logprob: -9.750706672668457
    6. '()' → logprob: -11.000706672668457
    7. ':' → logprob: -11.750706672668457
    8. ' and' → logprob: -13.000706672668457
    9. 'and' → logprob: -13.000706672668457
    10. '   ' → logprob: -13.750706672668457

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040099851321429014
    2. '       ' → logprob: -9.50040054321289
    3. ',' → logprob: -9.62540054321289
    4. '   ' → logprob: -10.12540054321289
    5. '          ' → logprob: -10.50040054321289
    6. '            ' → logprob: -10.75040054321289
    7. 'heap' → logprob: -11.00040054321289
    8. '	       ' → logprob: -11.12540054321289
    9. 'cost' → logprob: -11.12540054321289
    10. 'u' → logprob: -11.37540054321289

Token 401: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.349795937538147
    2. 'dist' → logprob: -1.474795937538147
    3. 'c' → logprob: -3.0997958183288574
    4. 'cur' → logprob: -4.849795818328857
    5. 'current' → logprob: -5.224795818328857
    6. 'd' → logprob: -5.849795818328857
    7. '   ' → logprob: -6.599795818328857
    8. '(cost' → logprob: -7.224795818328857
    9. 'curr' → logprob: -7.349795818328857
    10. '           ' → logprob: -7.599795818328857

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.253713218029588e-05
    2. ' ,' → logprob: -11.125062942504883
    3. ',node' → logprob: -11.125062942504883
    4. ',current' → logprob: -11.250062942504883
    5. ',u' → logprob: -11.625062942504883
    6. '_,' → logprob: -12.375062942504883
    7. ',v' → logprob: -13.250062942504883
    8. ',c' → logprob: -13.750062942504883
    9. ',next' → logprob: -14.500062942504883
    10. ',user' → logprob: -15.000062942504883

Token 403: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006761318072676659
    2. ' v' → logprob: -5.13176155090332
    3. 'u' → logprob: -7.13176155090332
    4. ' u' → logprob: -11.38176155090332
    5. 'node' → logprob: -11.88176155090332
    6. '   ' → logprob: -12.00676155090332
    7. ' ' → logprob: -13.13176155090332
    8. 'pos' → logprob: -13.25676155090332
    9. 'now' → logprob: -14.00676155090332
    10. '```' → logprob: -14.38176155090332

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687315583229065
    2. ' =' → logprob: -1.1368731260299683
    3. '   ' → logprob: -14.136873245239258
    4. '       ' → logprob: -14.761873245239258
    5. ' ' → logprob: -15.011873245239258
    6. ')' → logprob: -15.511873245239258
    7. '    ' → logprob: -16.511873245239258
    8. '           ' → logprob: -16.636873245239258
    9. '=
' → logprob: -16.886873245239258
    10. '=

' → logprob: -16.886873245239258

Token 405: ' self' (ID: 1051)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5759435892105103
    2. ' heap' → logprob: -0.8259435892105103
    3. 'he' → logprob: -13.075943946838379
    4. '(heap' → logprob: -14.325943946838379
    5. ' he' → logprob: -14.575943946838379
    6. '.heap' → logprob: -14.825943946838379
    7. '_heap' → logprob: -15.200943946838379
    8. '   ' → logprob: -16.075942993164062
    9. '       ' → logprob: -16.575942993164062
    10. '    ' → logprob: -16.700942993164062

Token 406: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0030573306139558554
    2. '_' → logprob: -7.253057479858398
    3. '.' → logprob: -7.378057479858398
    4. '.pop' → logprob: -7.503057479858398
    5. '_queue' → logprob: -8.003057479858398
    6. '.dequeue' → logprob: -8.628057479858398
    7. '.queue' → logprob: -9.503057479858398
    8. '_pop' → logprob: -9.628057479858398
    9. ' _' → logprob: -10.253057479858398
    10. 'import' → logprob: -10.253057479858398

Token 407: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.052678607404232025
    2. 'queue' → logprob: -3.0526785850524902
    3. 'get' → logprob: -6.80267858505249
    4. 'extract' → logprob: -7.05267858505249
    5. '_pop' → logprob: -7.05267858505249
    6. 'peek' → logprob: -8.302679061889648
    7. 'poll' → logprob: -8.427679061889648
    8. 'process' → logprob: -8.802679061889648
    9. '
' → logprob: -9.302679061889648
    10. 'heap' → logprob: -9.427679061889648

Token 408: '_queue' (ID: 25622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015689032152295113
    2. 'queue' → logprob: -7.376568794250488
    3. 'heap' → logprob: -7.876568794250488
    4. '_queue' → logprob: -8.376568794250488
    5. '(queue' → logprob: -8.876568794250488
    6. '(heap' → logprob: -10.126568794250488
    7. '_heap' → logprob: -10.126568794250488
    8. 'item' → logprob: -10.376568794250488
    9. '_' → logprob: -10.376568794250488
    10. 'que' → logprob: -11.751568794250488

Token 409: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6405310816480778e-05
    2. '()' → logprob: -11.250016212463379
    3. '(queue' → logprob: -13.500016212463379
    4. '()(' → logprob: -13.750016212463379
    5. '       ' → logprob: -15.125016212463379
    6. ' (' → logprob: -15.750016212463379
    7. '()
' → logprob: -16.125017166137695
    8. '   ' → logprob: -16.500017166137695
    9. '           ' → logprob: -16.625017166137695
    10. '```' → logprob: -16.875017166137695

Token 410: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -5.943783253314905e-05
    2. ' que' → logprob: -9.750059127807617
    3. 'queue' → logprob: -14.500059127807617
    4. 'ques' → logprob: -15.750059127807617
    5. ')' → logprob: -16.000059127807617
    6. '```' → logprob: -16.625059127807617
    7. 'quee' → logprob: -16.750059127807617
    8. '   ' → logprob: -16.875059127807617
    9. ',' → logprob: -17.125059127807617
    10. 'qu' → logprob: -17.500059127807617

Token 411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. ')
' → logprob: -9.750061988830566
    3. '       ' → logprob: -13.500061988830566
    4. '<|end|>' → logprob: -13.875061988830566
    5. '())' → logprob: -14.500061988830566
    6. '   ' → logprob: -15.375061988830566
    7. '           ' → logprob: -15.500061988830566
    8. ')

' → logprob: -15.500061988830566
    9. '()' → logprob: -15.500061988830566
    10. ' )' → logprob: -15.875061988830566

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024869415909051895
    2. '<|end|>' → logprob: -3.899869441986084
    3. '       ' → logprob: -6.274869441986084
    4. '   ' → logprob: -6.524869441986084
    5. '            
' → logprob: -8.274868965148926
    6. 'def' → logprob: -8.899868965148926
    7. '               ' → logprob: -9.024868965148926
    8. '<|end|>' → logprob: -9.274868965148926
    9. '```' → logprob: -9.774868965148926
    10. '
' → logprob: -10.274868965148926

Token 413: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14573833346366882
    2. 'if' (adapté à ' if') → logprob: -2.395738363265991
    3. ' if' → logprob: -3.145738363265991
    4. '       ' → logprob: -6.895738124847412
    5. '   ' → logprob: -8.14573860168457
    6. '               ' → logprob: -9.14573860168457
    7. '	       ' → logprob: -11.14573860168457
    8. '            
' → logprob: -11.27073860168457
    9. '		' → logprob: -11.77073860168457
    10. '	if' → logprob: -11.89573860168457

Token 414: ' self' (ID: 1051)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.21352015435695648
    2. 'd' → logprob: -1.7135201692581177
    3. ' cost' → logprob: -4.713520050048828
    4. 'cost' → logprob: -5.838520050048828
    5. '	d' → logprob: -9.588520050048828
    6. '   ' → logprob: -10.713520050048828
    7. ' ' → logprob: -10.713520050048828
    8. '    ' → logprob: -12.213520050048828
    9. '  ' → logprob: -12.338520050048828
    10. '(d' → logprob: -12.963520050048828

Token 415: '._' (ID: 2697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: 'should' (ID: 10618)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.0172998905181885
    2. 'get' → logprob: -1.6422998905181885
    3. 'cost' → logprob: -2.1422998905181885
    4. 'pop' → logprob: -2.5172998905181885
    5. 'V' → logprob: -2.6422998905181885
    6. 'distance' → logprob: -2.7672998905181885
    7. 'is' → logprob: -4.142299652099609
    8. 'queue' → logprob: -4.142299652099609
    9. 'dist' → logprob: -4.517299652099609
    10. 'E' → logprob: -4.517299652099609

Token 417: '_skip' (ID: 108208)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2673798203468323
    2. 'skip' → logprob: -1.7673797607421875
    3. '_continue' → logprob: -3.2673797607421875
    4. '_skip' → logprob: -4.0173797607421875
    5. 'process' → logprob: -5.8923797607421875
    6. '_ignore' → logprob: -7.0173797607421875
    7. ' continue' → logprob: -7.2673797607421875
    8. 'ignore' → logprob: -7.3923797607421875
    9. 'discard' → logprob: -7.3923797607421875
    10. '_process' → logprob: -7.3923797607421875

Token 418: '_node' (ID: 11390)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0028248466551303864
    2. '(v' → logprob: -6.502824783325195
    3. '(d' → logprob: -7.002824783325195
    4. 'cost' → logprob: -8.752824783325195
    5. '(distance' → logprob: -9.252824783325195
    6. '(' → logprob: -9.377824783325195
    7. 'd' → logprob: -10.877824783325195
    8. '_(' → logprob: -10.877824783325195
    9. '_cost' → logprob: -11.627824783325195
    10. ' (' → logprob: -12.377824783325195

Token 419: '(d' (ID: 2572)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.03525524213910103
    2. '(v' → logprob: -3.660255193710327
    3. '(' → logprob: -4.910255432128906
    4. '(d' → logprob: -7.035255432128906
    5. ' (' → logprob: -7.535255432128906
    6. 'cost' → logprob: -9.410255432128906
    7. '(c' → logprob: -10.660255432128906
    8. 'd' → logprob: -11.910255432128906
    9. ' cost' → logprob: -12.535255432128906
    10. '           ' → logprob: -13.035255432128906

Token 420: ',' (ID: 11)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00017398154886905104
    2. ',' → logprob: -9.000173568725586
    3. ',v' → logprob: -10.625173568725586
    4. '[' → logprob: -11.000173568725586
    5. 'v' → logprob: -12.250173568725586
    6. ')' → logprob: -13.875173568725586
    7. '   ' → logprob: -13.875173568725586
    8. ' v' → logprob: -14.125173568725586
    9. '[c' → logprob: -14.750173568725586
    10. '<v' → logprob: -15.375173568725586

Token 421: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1435733437538147
    2. 'cost' → logprob: -2.01857328414917
    3. ' v' → logprob: -7.39357328414917
    4. ' cost' → logprob: -8.393573760986328
    5. '   ' → logprob: -11.018573760986328
    6. 'd' → logprob: -11.268573760986328
    7. '[v' → logprob: -12.143573760986328
    8. '(cost' → logprob: -12.143573760986328
    9. '```' → logprob: -13.018573760986328
    10. ' ' → logprob: -13.143573760986328

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002149802603526041
    2. ' ,' → logprob: -8.875214576721191
    3. '):' → logprob: -9.750214576721191
    4. '):
' → logprob: -12.750214576721191
    5. '   ' → logprob: -12.875214576721191
    6. ',c' → logprob: -13.125214576721191
    7. ')' → logprob: -13.375214576721191
    8. 'cost' → logprob: -13.500214576721191
    9. '           ' → logprob: -13.750214576721191
    10. '(cost' → logprob: -13.875214576721191

Token 423: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.014176911674439907
    2. ' cost' → logprob: -4.264176845550537
    3. '10' → logprob: -11.889177322387695
    4. '   ' → logprob: -13.139177322387695
    5. '(cost' → logprob: -13.264177322387695
    6. ' ' → logprob: -14.014177322387695
    7. '    ' → logprob: -14.764177322387695
    8. '  ' → logprob: -15.389177322387695
    9. 'self' → logprob: -15.389177322387695
    10. ')' → logprob: -15.389177322387695

Token 424: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26539215445518494
    2. '):
' → logprob: -1.5153921842575073
    3. ':' → logprob: -4.515392303466797
    4. '           ' → logprob: -6.765392303466797
    5. '               ' → logprob: -7.390392303466797
    6. ':
' → logprob: -7.890392303466797
    7. ')' → logprob: -8.640392303466797
    8. '():
' → logprob: -10.390392303466797
    9. '       ' → logprob: -10.515392303466797
    10. '():' → logprob: -11.140392303466797

Token 425: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020240074023604393
    2. '           ' → logprob: -4.020240306854248
    3. ' continue' → logprob: -6.270240306854248
    4. 'continue' → logprob: -8.77023983001709
    5. '   ' → logprob: -11.64523983001709
    6. '       ' → logprob: -11.77023983001709
    7. '                   ' → logprob: -11.89523983001709
    8. '              ' → logprob: -12.39523983001709
    9. '_continue' → logprob: -13.14523983001709
    10. '            ' → logprob: -13.64523983001709

Token 426: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1732741892337799
    2. ' continue' → logprob: -2.423274278640747
    3. 'continue' (adapté à ' continue') → logprob: -2.673274278640747
    4. '           ' → logprob: -6.798274040222168
    5. '                   ' → logprob: -8.298274040222168
    6. '	continue' → logprob: -10.298274040222168
    7. '_continue' → logprob: -11.048274040222168
    8. '	           ' → logprob: -12.548274040222168
    9. '   ' → logprob: -12.548274040222168
    10. '			' → logprob: -12.923274040222168

Token 427: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008385145105421543
    2. 'def' → logprob: -5.633385181427002
    3. '   ' → logprob: -6.008385181427002
    4. '       ' → logprob: -6.508385181427002
    5. '<|end|>' → logprob: -8.008384704589844
    6. ' def' → logprob: -8.258384704589844
    7. '            
' → logprob: -9.508384704589844
    8. '               ' → logprob: -10.633384704589844
    9. '          ' → logprob: -10.883384704589844
    10. ' ' → logprob: -11.258384704589844

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005510738585144281
    2. '<|end|>' → logprob: -6.2555108070373535
    3. '       ' → logprob: -6.5055108070373535
    4. '   ' → logprob: -6.8805108070373535
    5. 'def' → logprob: -7.8805108070373535
    6. ' def' → logprob: -8.880510330200195
    7. '               ' → logprob: -9.380510330200195
    8. '    ' → logprob: -9.380510330200195
    9. '            
' → logprob: -9.380510330200195
    10. ' ' → logprob: -9.505510330200195

Token 429: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05417235195636749
    2. 'for' → logprob: -3.1791722774505615
    3. ' for' → logprob: -4.554172515869141
    4. '       ' → logprob: -8.17917251586914
    5. '   ' → logprob: -8.55417251586914
    6. '            
' → logprob: -10.42917251586914
    7. '               ' → logprob: -10.67917251586914
    8. 'self' (adapté à ' self') → logprob: -10.92917251586914
    9. '	       ' → logprob: -11.55417251586914
    10. '          ' → logprob: -12.30417251586914

Token 430: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.349075556499884e-05
    2. '.' → logprob: -10.3750638961792
    3. '   ' → logprob: -11.3750638961792
    4. 'for' → logprob: -12.1250638961792
    5. ' .' → logprob: -13.0000638961792
    6. '       ' → logprob: -13.1250638961792
    7. 'def' → logprob: -13.2500638961792
    8. '.process' → logprob: -13.3750638961792
    9. '_for' → logprob: -13.5000638961792
    10. ' for' → logprob: -13.8750638961792

Token 431: 'update' (ID: 4076)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rel' → logprob: -0.4945434629917145
    2. 'update' → logprob: -0.9945434331893921
    3. 'for' → logprob: -4.744543552398682
    4. 'process' → logprob: -4.869543552398682
    5. 'expand' → logprob: -6.619543552398682
    6. 'visit' → logprob: -6.744543552398682
    7. 'expl' → logprob: -8.119543075561523
    8. 'iterate' → logprob: -8.369543075561523
    9. 'scan' → logprob: -8.744543075561523
    10. '_rel' → logprob: -8.869543075561523

Token 432: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.8309196829795837
    2. '_dist' → logprob: -1.2059197425842285
    3. 'dist' → logprob: -1.4559197425842285
    4. '_distance' → logprob: -4.5809197425842285
    5. '_edges' → logprob: -4.9559197425842285
    6. 'distance' → logprob: -5.8309197425842285
    7. 'd' → logprob: -5.8309197425842285
    8. 'neighbors' → logprob: -6.3309197425842285
    9. '_adj' → logprob: -6.9559197425842285
    10. '_neighbor' → logprob: -7.2059197425842285

Token 433: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.49797511100769043
    2. '(d' → logprob: -0.9979751110076904
    3. '(' → logprob: -3.7479751110076904
    4. ' (' → logprob: -10.87297534942627
    5. '(cost' → logprob: -10.87297534942627
    6. 'd' → logprob: -12.62297534942627
    7. '(queue' → logprob: -13.37297534942627
    8. '   ' → logprob: -13.49797534942627
    9. 'cost' → logprob: -13.87297534942627
    10. '(q' → logprob: -14.37297534942627

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040338258258998394
    2. ')' → logprob: -8.75040340423584
    3. ' ,' → logprob: -8.87540340423584
    4. ',d' → logprob: -9.75040340423584
    5. '           ' → logprob: -10.75040340423584
    6. ',c' → logprob: -12.00040340423584
    7. '       ' → logprob: -12.00040340423584
    8. '   ' → logprob: -12.50040340423584
    9. 'cost' → logprob: -13.25040340423584
    10. '(cost' → logprob: -13.37540340423584

Token 435: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0279991626739502
    2. 'cost' → logprob: -1.1529991626739502
    3. 'que' → logprob: -1.2779991626739502
    4. ' que' → logprob: -4.027998924255371
    5. ' d' → logprob: -4.152998924255371
    6. ' cost' → logprob: -4.277998924255371
    7. '   ' → logprob: -9.152998924255371
    8. 'queue' → logprob: -9.277998924255371
    9. 'self' → logprob: -9.902998924255371
    10. ' ' → logprob: -10.152998924255371

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14734004437923431
    2. ')' → logprob: -2.0223400592803955
    3. '           ' → logprob: -5.772339820861816
    4. '       ' → logprob: -6.897339820861816
    5. ' ,' → logprob: -8.272339820861816
    6. '[' → logprob: -9.272339820861816
    7. '<|end|>' → logprob: -10.272339820861816
    8. '          ' → logprob: -10.397339820861816
    9. '   ' → logprob: -10.647339820861816
    10. ' )' → logprob: -10.772339820861816

Token 437: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0077361734583973885
    2. 'cost' → logprob: -5.3827362060546875
    3. 'heap' → logprob: -6.0077362060546875
    4. ' que' → logprob: -7.7577362060546875
    5. 'queue' → logprob: -8.507736206054688
    6. 'ques' → logprob: -12.632736206054688
    7. ' cost' → logprob: -13.007736206054688
    8. 'qu' → logprob: -13.257736206054688
    9. '   ' → logprob: -13.382736206054688
    10. 'd' → logprob: -13.507736206054688

Token 438: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018816311785485595
    2. '       ' → logprob: -9.500187873840332
    3. ')

' → logprob: -9.500187873840332
    4. ')
' → logprob: -10.500187873840332
    5. ',' → logprob: -12.250187873840332
    6. ' )' → logprob: -12.500187873840332
    7. '   ' → logprob: -13.750187873840332
    8. ')`' → logprob: -15.500187873840332
    9. '           ' → logprob: -15.750187873840332
    10. '<|end|>' → logprob: -15.875187873840332

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010147005319595337
    2. 'def' → logprob: -4.6351470947265625
    3. '       ' → logprob: -8.760147094726562
    4. '	def' → logprob: -9.510147094726562
    5. ' def' → logprob: -9.760147094726562
    6. '<|end|>' → logprob: -10.010147094726562
    7. '    
' → logprob: -10.260147094726562
    8. '  ' → logprob: -12.635147094726562
    9. '        
' → logprob: -12.760147094726562
    10. ' ' → logprob: -12.760147094726562

Token 440: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0250009223818779
    2. 'def' (adapté à ' def') → logprob: -3.900000810623169
    3. ' def' → logprob: -6.400001049041748
    4. '	def' → logprob: -6.400001049041748
    5. '<|end|>' → logprob: -7.275001049041748
    6. '    ' → logprob: -9.40000057220459
    7. '  ' → logprob: -9.52500057220459
    8. '       ' → logprob: -9.65000057220459
    9. ' ' → logprob: -9.77500057220459
    10. '    
' → logprob: -10.02500057220459

Token 441: ' _' (ID: 1175)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.0003003081073984504
    2. ' _' → logprob: -8.500300407409668
    3. '_' → logprob: -9.250300407409668
    4. '_enqueue' → logprob: -15.750300407409668
    5. '_add' → logprob: -16.25029945373535
    6. '_next' → logprob: -16.37529945373535
    7. '_continue' → logprob: -16.75029945373535
    8. '_stack' → logprob: -17.12529945373535
    9. '_qu' → logprob: -17.25029945373535
    10. '_get' → logprob: -17.25029945373535

Token 442: 'queue' (ID: 9409)
  Prédit: 'queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -3.292907877039397e-06
    2. '_queue' → logprob: -12.75000286102295
    3. ' queue' → logprob: -15.75000286102295
    4. 'que' → logprob: -16.375003814697266
    5. 'def' → logprob: -16.875003814697266
    6. 'query' → logprob: -17.000003814697266
    7. '.queue' → logprob: -18.125003814697266
    8. '	queue' → logprob: -18.750003814697266
    9. '(queue' → logprob: -19.375003814697266
    10. 'pop' → logprob: -19.375003814697266

Token 443: '_not' (ID: 17599)
  Prédit: '_not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_not' → logprob: -3.531315314830863e-06
    2. 'not' → logprob: -13.000003814697266
    3. '_no' → logprob: -14.000003814697266
    4. '_n' → logprob: -15.500003814697266
    5. '_' → logprob: -17.000003814697266
    6. 'def' → logprob: -17.000003814697266
    7. '_NOT' → logprob: -17.500003814697266
    8. '_to' → logprob: -18.000003814697266
    9. '__' → logprob: -18.250003814697266
    10. '_def' → logprob: -18.250003814697266

Token 444: '_empty' (ID: 35051)
  Prédit: '_empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_empty' → logprob: -0.00033558503491804004
    2. 'empty' → logprob: -8.000335693359375
    3. '_not' → logprob: -16.625335693359375
    4. '_EMPTY' → logprob: -19.375335693359375
    5. ' empty' → logprob: -19.500335693359375
    6. '_' → logprob: -19.750335693359375
    7. 'Empty' → logprob: -19.875335693359375
    8. 'def' → logprob: -20.000335693359375
    9. '```' → logprob: -21.125335693359375
    10. '_full' → logprob: -21.500335693359375

Token 445: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004083266947418451
    2. '(' → logprob: -5.504083156585693
    3. 'self' → logprob: -12.879083633422852
    4. ' (' → logprob: -13.504083633422852
    5. '(s' → logprob: -14.754083633422852
    6. '(
' → logprob: -15.379083633422852
    7. '(sel' → logprob: -16.25408363342285
    8. '   ' → logprob: -17.00408363342285
    9. '(se' → logprob: -17.12908363342285
    10. ' self' → logprob: -17.25408363342285

Token 446: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012859589420258999
    2. '(' → logprob: -4.38785982131958
    3. 'self' → logprob: -8.262859344482422
    4. ')' → logprob: -9.762859344482422
    5. ')(' → logprob: -11.137859344482422
    6. ',' → logprob: -11.762859344482422
    7. ' (' → logprob: -12.387859344482422
    8. '(
' → logprob: -13.387859344482422
    9. '):
' → logprob: -13.512859344482422
    10. '<|end|>' → logprob: -13.887859344482422

Token 447: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.012542614713311195
    2. ' que' → logprob: -4.387542724609375
    3. 'self' → logprob: -10.637542724609375
    4. 'queue' → logprob: -12.637542724609375
    5. ' self' → logprob: -13.762542724609375
    6. 'qu' → logprob: -13.887542724609375
    7. 'ques' → logprob: -14.012542724609375
    8. '   ' → logprob: -14.387542724609375
    9. ' queue' → logprob: -14.887542724609375
    10. 'Que' → logprob: -15.137542724609375

Token 448: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016724377870559692
    2. '):
' → logprob: -4.141724586486816
    3. ')' → logprob: -7.391724586486816
    4. '   ' → logprob: -10.641724586486816
    5. ' ):' → logprob: -11.016724586486816
    6. ':' → logprob: -11.516724586486816
    7. '():' → logprob: -11.891724586486816
    8. 'self' → logprob: -12.391724586486816
    9. '):
' → logprob: -12.391724586486816
    10. '}:' → logprob: -13.391724586486816

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012693876400589943
    2. 'return' → logprob: -4.762693881988525
    3. ' return' → logprob: -5.512693881988525
    4. '   ' → logprob: -10.512693405151367
    5. '	return' → logprob: -12.137693405151367
    6. '	' → logprob: -13.762693405151367
    7. '    ' → logprob: -14.387693405151367
    8. '      ' → logprob: -14.887693405151367
    9. ':return' → logprob: -15.137693405151367
    10. '<|end|>' → logprob: -15.262693405151367

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008717396296560764
    2. ' return' → logprob: -4.7587175369262695
    3. '       ' → logprob: -9.25871753692627
    4. '   ' → logprob: -12.25871753692627
    5. 'len' → logprob: -12.88371753692627
    6. '	return' → logprob: -15.38371753692627
    7. '    ' → logprob: -17.508716583251953
    8. '           ' → logprob: -17.883716583251953
    9. '0' → logprob: -18.133716583251953
    10. 'def' → logprob: -18.133716583251953

Token 451: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519446313381195
    2. ' len' → logprob: -1.501944661140442
    3. 'bool' → logprob: -11.376944541931152
    4. ' bool' → logprob: -13.001944541931152
    5. '(len' → logprob: -14.376944541931152
    6. 'que' → logprob: -14.626944541931152
    7. '	len' → logprob: -14.751944541931152
    8. ' ' → logprob: -15.376944541931152
    9. ' que' → logprob: -15.876944541931152
    10. '   ' → logprob: -17.12694549560547

Token 452: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. '(queue' → logprob: -13.375001907348633
    3. 'que' → logprob: -16.750001907348633
    4. '(
' → logprob: -17.250001907348633
    5. ' (' → logprob: -18.250001907348633
    6. '<|end|>' → logprob: -19.500001907348633
    7. '(qu' → logprob: -20.125001907348633
    8. '(

' → logprob: -20.250001907348633
    9. '(q' → logprob: -20.375001907348633
    10. '()' → logprob: -20.625001907348633

Token 453: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.688212614681106e-05
    2. ' que' → logprob: -11.000017166137695
    3. 'qu' → logprob: -16.500017166137695
    4. 'queue' → logprob: -17.250017166137695
    5. 'quee' → logprob: -19.375017166137695
    6. 'Que' → logprob: -19.625017166137695
    7. 'ques' → logprob: -19.875017166137695
    8. 'q' → logprob: -19.875017166137695
    9. '```' → logprob: -19.875017166137695
    10. '(' → logprob: -20.500017166137695

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011087823659181595
    2. ')>' → logprob: -6.876108646392822
    3. '>' → logprob: -10.37610912322998
    4. ' >' → logprob: -10.75110912322998
    5. ' )' → logprob: -10.75110912322998
    6. '<|end|>' → logprob: -14.25110912322998
    7. ')!=' → logprob: -14.62610912322998
    8. ' ' → logprob: -15.25110912322998
    9. '）' → logprob: -16.001108169555664
    10. '[' → logprob: -16.376108169555664

Token 455: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1605512946844101
    2. ' >' → logprob: -1.9105513095855713
    3. '()>' → logprob: -8.160551071166992
    4. '()' → logprob: -11.160551071166992
    5. ' !=' → logprob: -11.285551071166992
    6. '!=' → logprob: -12.285551071166992
    7. ')>' → logprob: -12.535551071166992
    8. ')' → logprob: -13.035551071166992
    9. '0' → logprob: -13.785551071166992
    10. '   ' → logprob: -14.285551071166992

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '  ' → logprob: -17.523244857788086
    4. '   ' → logprob: -18.023244857788086
    5. ' ' → logprob: -18.273244857788086
    6. '	' → logprob: -18.648244857788086
    7. '    ' → logprob: -19.523244857788086
    8. '۰' → logprob: -19.773244857788086
    9. ' ' → logprob: -20.023244857788086
    10. '０' → logprob: -20.148244857788086

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -21.500001907348633
    4. '０' → logprob: -21.750001907348633
    5. '  ' → logprob: -22.000001907348633
    6. '   ' → logprob: -22.125001907348633
    7. '```' → logprob: -22.250001907348633
    8. '    ' → logprob: -22.750001907348633
    9. '=' → logprob: -23.250001907348633
    10. ' ' → logprob: -23.375001907348633

Token 458: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018658455461263657
    2. 'def' → logprob: -4.018658638000488
    3. ' def' → logprob: -8.268658638000488
    4. '<|end|>' → logprob: -9.518658638000488
    5. '```' → logprob: -10.018658638000488
    6. '  ' → logprob: -10.518658638000488
    7. '	def' → logprob: -10.518658638000488
    8. ')' → logprob: -11.018658638000488
    9. '_' → logprob: -11.393658638000488
    10. '    ' → logprob: -11.518658638000488

Token 460: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08732874691486359
    2. '   ' → logprob: -2.7123286724090576
    3. ' def' → logprob: -4.087328910827637
    4. '	def' → logprob: -8.087328910827637
    5. ')' → logprob: -10.087328910827637
    6. '  ' → logprob: -10.712328910827637
    7. '<|end|>' → logprob: -10.712328910827637
    8. ' ' → logprob: -10.837328910827637
    9. '_def' → logprob: -11.087328910827637
    10. '    ' → logprob: -11.712328910827637

Token 461: ' _' (ID: 1175)
  Prédit: '_pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pop' → logprob: -9.849109119386412e-06
    2. ' _' → logprob: -11.625009536743164
    3. '_popup' → logprob: -14.875009536743164
    4. '_p' → logprob: -15.125009536743164
    5. '_' → logprob: -16.375009536743164
    6. '_push' → logprob: -17.000009536743164
    7. '_queue' → logprob: -17.375009536743164
    8. '_add' → logprob: -18.375009536743164
    9. '_put' → logprob: -18.875009536743164
    10. '_get' → logprob: -19.125009536743164

Token 462: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.9361264946837764e-07
    2. 'push' → logprob: -17.0
    3. 'p' → logprob: -17.25
    4. '_pop' → logprob: -17.875
    5. ' pop' → logprob: -18.0
    6. 'def' → logprob: -18.0
    7. 'po' → logprob: -18.375
    8. 'popup' → logprob: -18.5
    9. 'populate' → logprob: -18.625
    10. '.pop' → logprob: -18.625

Token 463: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.0001645644661039114
    2. '_' → logprob: -8.750164985656738
    3. '_heap' → logprob: -12.500164985656738
    4. 'queue' → logprob: -14.125164985656738
    5. '_QUEUE' → logprob: -14.875164985656738
    6. '(queue' → logprob: -15.375164985656738
    7. '(' → logprob: -15.375164985656738
    8. '_q' → logprob: -16.125164031982422
    9. '```' → logprob: -16.250164031982422
    10. ' _' → logprob: -16.375164031982422

Token 464: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10032344609498978
    2. '(' → logprob: -2.350323438644409
    3. '(
' → logprob: -9.975323677062988
    4. 'self' → logprob: -10.600323677062988
    5. ',' → logprob: -10.850323677062988
    6. ' (' → logprob: -11.225323677062988
    7. '       ' → logprob: -12.350323677062988
    8. '   ' → logprob: -12.475323677062988
    9. '(s' → logprob: -13.100323677062988
    10. ' self' → logprob: -14.475323677062988

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7105957269668579
    2. '(self' → logprob: -0.7105957269668579
    3. '(' → logprob: -4.585595607757568
    4. '       ' → logprob: -5.335595607757568
    5. 'self' → logprob: -6.710595607757568
    6. '   ' → logprob: -7.835595607757568
    7. ' (' → logprob: -7.960595607757568
    8. ',self' → logprob: -9.085596084594727
    9. ')' → logprob: -9.835596084594727
    10. ' ,' → logprob: -10.085596084594727

Token 466: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.023248620331287384
    2. ' que' → logprob: -3.7732486724853516
    3. 'queue' → logprob: -13.523248672485352
    4. 'ques' → logprob: -14.648248672485352
    5. '   ' → logprob: -15.148248672485352
    6. 'qu' → logprob: -15.398248672485352
    7. '```' → logprob: -15.398248672485352
    8. ' ' → logprob: -15.898248672485352
    9. ' queue' → logprob: -16.02324867248535
    10. 'quee' → logprob: -16.64824867248535

Token 467: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4596332907676697
    2. ',' → logprob: -1.7096333503723145
    3. '):' → logprob: -2.9596333503723145
    4. '(' → logprob: -3.0846333503723145
    5. 'self' → logprob: -3.0846333503723145
    6. '):
' → logprob: -3.7096333503723145
    7. '       ' → logprob: -4.5846333503723145
    8. '(heap' → logprob: -5.7096333503723145
    9. '   ' → logprob: -5.9596333503723145
    10. 'import' → logprob: -6.5846333503723145

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16121302545070648
    2. 'import' → logprob: -1.9112130403518677
    3. ' import' → logprob: -7.161212921142578
    4. 'return' → logprob: -8.661212921142578
    5. '   ' → logprob: -10.786212921142578
    6. ' return' → logprob: -11.286212921142578
    7. '	' → logprob: -13.286212921142578
    8. '	import' → logprob: -13.536212921142578
    9. '```' → logprob: -13.661212921142578
    10. '           ' → logprob: -14.161212921142578

Token 469: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.10044529289007187
    2. ' import' → logprob: -2.47544527053833
    3. '       ' → logprob: -4.47544527053833
    4. ' heap' → logprob: -11.225445747375488
    5. '   ' → logprob: -11.350445747375488
    6. 'heap' → logprob: -11.475445747375488
    7. 'return' → logprob: -11.850445747375488
    8. '	import' → logprob: -12.475445747375488
    9. ' return' → logprob: -12.850445747375488
    10. '```' → logprob: -13.975445747375488

Token 470: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0031777136027812958
    2. ' heap' → logprob: -5.753177642822266
    3. 'he' → logprob: -17.503177642822266
    4. '_heap' → logprob: -18.503177642822266
    5. '.heap' → logprob: -18.878177642822266
    6. '(heap' → logprob: -19.628177642822266
    7. 'Heap' → logprob: -20.878177642822266
    8. 'queue' → logprob: -22.378177642822266
    9. '```' → logprob: -22.628177642822266
    10. 'h' → logprob: -23.378177642822266

Token 471: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -20.25
    3. 'qml' → logprob: -21.625
    4. 'ql' → logprob: -22.0
    5. '       ' → logprob: -22.75
    6. 'qx' → logprob: -22.875
    7. '[' → logprob: -23.25
    8. '	q' → logprob: -23.375
    9. 'qq' → logprob: -23.5
    10. 'qp' → logprob: -23.5

Token 472: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2747519314289093
    2. '       ' → logprob: -1.774751901626587
    3. '.heap' → logprob: -3.524751901626587
    4. 'heap' → logprob: -3.649751901626587
    5. '        
' → logprob: -5.649752140045166
    6. '(heap' → logprob: -5.899752140045166
    7. '<|end|>' → logprob: -6.149752140045166
    8. 'return' → logprob: -6.274752140045166
    9. ' heap' → logprob: -7.024752140045166
    10. '   ' → logprob: -7.149752140045166

Token 473: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2040981650352478
    2. '       ' → logprob: -1.7040982246398926
    3. ' return' → logprob: -5.954098224639893
    4. 'heap' → logprob: -9.704097747802734
    5. '   ' → logprob: -11.204097747802734
    6. '	return' → logprob: -11.829097747802734
    7. '
' → logprob: -12.829097747802734
    8. '        
' → logprob: -15.079097747802734
    9. ' heap' → logprob: -15.954097747802734
    10. '	' → logprob: -16.079097747802734

Token 474: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025374903343617916
    2. 'heap' → logprob: -6.377537727355957
    3. 'cost' → logprob: -7.752537727355957
    4. '       ' → logprob: -8.002537727355957
    5. ' return' → logprob: -9.627537727355957
    6. '   ' → logprob: -13.502537727355957
    7. 'ret' → logprob: -14.127537727355957
    8. '           ' → logprob: -14.877537727355957
    9. '	return' → logprob: -15.002537727355957
    10. 'res' → logprob: -15.252537727355957

Token 475: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.061970822513103485
    2. ' heap' → logprob: -2.8119707107543945
    3. '(heap' → logprob: -13.436970710754395
    4. '.heap' → logprob: -14.311970710754395
    5. 'he' → logprob: -14.436970710754395
    6. '   ' → logprob: -14.811970710754395
    7. ' he' → logprob: -16.06197166442871
    8. '_heap' → logprob: -17.93697166442871
    9. ' ' → logprob: -17.93697166442871
    10. 'h' → logprob: -18.06197166442871

Token 476: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'qp' → logprob: -16.75
    3. '.q' → logprob: -16.75
    4. 'ql' → logprob: -18.25
    5. '[' → logprob: -18.75
    6. 'qq' → logprob: -19.0
    7. 'p' → logprob: -19.125
    8. '[q' → logprob: -20.0
    9. 'qh' → logprob: -21.375
    10. 'op' → logprob: -21.5

Token 477: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.512236498361744e-07
    2. '.heap' → logprob: -14.875000953674316
    3. 'he' → logprob: -16.625
    4. '.' → logprob: -17.125
    5. '.h' → logprob: -18.125
    6. '.nl' → logprob: -18.625
    7. '.pop' → logprob: -18.875
    8. ' he' → logprob: -19.0
    9. ' .' → logprob: -19.125
    10. '_he' → logprob: -19.5

Token 478: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -4.320199877838604e-07
    2. 'ap' → logprob: -15.125
    3. 'q' → logprob: -16.75
    4. 'pp' → logprob: -17.25
    5. 'a' → logprob: -17.5
    6. 'appe' → logprob: -19.25
    7. '[' → logprob: -19.625
    8. '```' → logprob: -20.0
    9. 'appen' → logprob: -20.375
    10. '``' → logprob: -21.375

Token 479: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.1269301027059555
    2. 'ush' → logprob: -2.126929998397827
    3. 'pop' → logprob: -13.751930236816406
    4. '[' → logprob: -14.626930236816406
    5. 'o' → logprob: -14.876930236816406
    6. 'sh' → logprob: -15.751930236816406
    7. 'osh' → logprob: -17.251930236816406
    8. 'e' → logprob: -17.626930236816406
    9. 'p' → logprob: -17.751930236816406
    10. '```' → logprob: -18.251930236816406

Token 480: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '(queue' → logprob: -16.25
    3. '<|end|>' → logprob: -18.0
    4. '(
' → logprob: -19.0
    5. '()' → logprob: -20.5
    6. 'que' → logprob: -20.5
    7. ' (' → logprob: -21.25
    8. '((' → logprob: -21.875
    9. '```' → logprob: -22.0
    10. '(heap' → logprob: -22.0

Token 481: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: 0.0
    2. ' que' → logprob: -17.375
    3. '```' → logprob: -19.375
    4. 'qu' → logprob: -19.875
    5. 'ques' → logprob: -20.125
    6. ')' → logprob: -20.25
    7. 'queue' → logprob: -20.25
    8. '   ' → logprob: -20.5
    9. 'qui' → logprob: -20.625
    10. 'Que' → logprob: -21.75

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '<|end|>' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.125000953674316
    4. ')
' → logprob: -15.250000953674316
    5. '       ' → logprob: -17.375
    6. '   ' → logprob: -17.625
    7. '())' → logprob: -18.625
    8. ')}' → logprob: -18.625
    9. ')#' → logprob: -18.75
    10. '),' → logprob: -19.0

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003338598646223545
    2. '<|end|>' → logprob: -6.003338813781738
    3. 'def' → logprob: -7.628338813781738
    4. '       ' → logprob: -8.378338813781738
    5. '  ' → logprob: -9.503338813781738
    6. ' def' → logprob: -10.253338813781738
    7. '           ' → logprob: -11.003338813781738
    8. '<|end|>' → logprob: -11.878338813781738
    9. ' ' → logprob: -12.128338813781738
    10. '    ' → logprob: -13.253338813781738

Token 484: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.024580415338277817
    2. '   ' → logprob: -3.774580478668213
    3. ' def' → logprob: -6.774580478668213
    4. '       ' → logprob: -8.899580001831055
    5. 'for' → logprob: -10.649580001831055
    6. '  ' → logprob: -11.774580001831055
    7. '	def' → logprob: -11.899580001831055
    8. '           ' → logprob: -11.899580001831055
    9. '<|end|>' → logprob: -12.774580001831055
    10. ' ' → logprob: -13.024580001831055

Token 485: ' _' (ID: 1175)
  Prédit: '_should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_should' → logprob: -0.0072828843258321285
    2. '_update' → logprob: -5.007282733917236
    3. ' _' → logprob: -8.007283210754395
    4. '_sh' → logprob: -9.382283210754395
    5. '_process' → logprob: -10.007283210754395
    6. '_get' → logprob: -10.257283210754395
    7. '_has' → logprob: -11.507283210754395
    8. '_def' → logprob: -12.007283210754395
    9. '_do' → logprob: -12.257283210754395
    10. '_' → logprob: -12.257283210754395

Token 486: 'should' (ID: 10618)
  Prédit: 'should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -1.5570885807392187e-05
    2. '_should' → logprob: -11.125015258789062
    3. 'update' → logprob: -14.875015258789062
    4. ' should' → logprob: -15.625015258789062
    5. 'def' → logprob: -16.500015258789062
    6. 'process' → logprob: -18.125015258789062
    7. '.should' → logprob: -19.125015258789062
    8. '   ' → logprob: -19.500015258789062
    9. 'Should' → logprob: -19.500015258789062
    10. 'set' → logprob: -19.500015258789062

Token 487: '_skip' (ID: 108208)
  Prédit: '_skip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_skip' → logprob: -1.735893965815194e-05
    2. '_should' → logprob: -11.250017166137695
    3. 'skip' → logprob: -13.500017166137695
    4. '_sk' → logprob: -14.000017166137695
    5. '_keep' → logprob: -14.125017166137695
    6. '_continue' → logprob: -14.625017166137695
    7. '_SKIP' → logprob: -15.000017166137695
    8. '_ignore' → logprob: -16.750017166137695
    9. '_' → logprob: -16.875017166137695
    10. '_stop' → logprob: -17.000017166137695

Token 488: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00011939727846765891
    2. 'node' → logprob: -9.50011920928955
    3. '(self' → logprob: -10.87511920928955
    4. '_nodes' → logprob: -11.37511920928955
    5. 'self' → logprob: -11.50011920928955
    6. '_' → logprob: -13.37511920928955
    7. '_d' → logprob: -14.25011920928955
    8. '(d' → logprob: -14.37511920928955
    9. 'd' → logprob: -14.75011920928955
    10. '(node' → logprob: -15.50011920928955

Token 489: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5358694731257856e-05
    2. '(' → logprob: -10.375035285949707
    3. 'self' → logprob: -12.500035285949707
    4. '       ' → logprob: -15.375035285949707
    5. '   ' → logprob: -15.875035285949707
    6. ' (' → logprob: -17.875036239624023
    7. '(
' → logprob: -18.000036239624023
    8. 'def' → logprob: -18.250036239624023
    9. '(s' → logprob: -18.500036239624023
    10. '(d' → logprob: -19.750036239624023

Token 490: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11235149949789047
    2. ',' → logprob: -2.737351417541504
    3. '(d' → logprob: -3.987351417541504
    4. 'self' → logprob: -3.987351417541504
    5. 'd' → logprob: -5.612351417541504
    6. '   ' → logprob: -8.487351417541504
    7. '       ' → logprob: -8.612351417541504
    8. ')' → logprob: -9.237351417541504
    9. ',d' → logprob: -9.487351417541504
    10. '(' → logprob: -9.862351417541504

Token 491: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16023722290992737
    2. ' d' → logprob: -1.910237193107605
    3. '   ' → logprob: -12.285237312316895
    4. 'self' → logprob: -12.660237312316895
    5. '       ' → logprob: -13.410237312316895
    6. ' self' → logprob: -13.660237312316895
    7. '  ' → logprob: -14.535237312316895
    8. '    ' → logprob: -14.660237312316895
    9. ' ' → logprob: -15.035237312316895
    10. '	d' → logprob: -15.160237312316895

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000718030845746398
    2. '[v' → logprob: -7.375718116760254
    3. ',v' → logprob: -9.750718116760254
    4. '[' → logprob: -10.875718116760254
    5. ' ,' → logprob: -11.375718116760254
    6. '   ' → logprob: -13.625718116760254
    7. '```' → logprob: -15.125718116760254
    8. ',d' → logprob: -15.625718116760254
    9. '[self' → logprob: -15.625718116760254
    10. '[],' → logprob: -15.750718116760254

Token 493: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00044556602369993925
    2. 'd' → logprob: -8.000445365905762
    3. ' v' → logprob: -9.125445365905762
    4. ' d' → logprob: -14.500445365905762
    5. '   ' → logprob: -15.875445365905762
    6. '	v' → logprob: -15.875445365905762
    7. 'cost' → logprob: -16.125446319580078
    8. '_v' → logprob: -16.125446319580078
    9. 'self' → logprob: -16.375446319580078
    10. 'vq' → logprob: -17.125446319580078

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -13.000004768371582
    3. ',v' → logprob: -14.750004768371582
    4. ')' → logprob: -15.000004768371582
    5. '):' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.625004768371582
    7. '<|end|>' → logprob: -15.625004768371582
    8. ',d' → logprob: -15.750004768371582
    9. '),' → logprob: -16.125003814697266
    10. 'cost' → logprob: -16.375003814697266

Token 495: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0067154900170862675
    2. ' cost' → logprob: -5.006715297698975
    3. '(cost' → logprob: -16.256715774536133
    4. '_cost' → logprob: -18.381715774536133
    5. 'c' → logprob: -19.006715774536133
    6. ' ' → logprob: -19.131715774536133
    7. '   ' → logprob: -19.131715774536133
    8. 'd' → logprob: -19.381715774536133
    9. 'Cost' → logprob: -19.631715774536133
    10. '.cost' → logprob: -19.881715774536133

Token 496: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007142394781112671
    2. ':' → logprob: -5.257142543792725
    3. '):
' → logprob: -6.382142543792725
    4. '   ' → logprob: -9.257142066955566
    5. '>:' → logprob: -10.257142066955566
    6. '       ' → logprob: -10.382142066955566
    7. ' ):' → logprob: -11.257142066955566
    8. ')' → logprob: -11.257142066955566
    9. '>' → logprob: -11.757142066955566
    10. '():' → logprob: -12.382142066955566

Token 497: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20224004983901978
    2. '       ' → logprob: -1.702239990234375
    3. ' return' → logprob: -7.202239990234375
    4. 'if' → logprob: -9.702239990234375
    5. '   ' → logprob: -11.077239990234375
    6. '	return' → logprob: -12.827239990234375
    7. 'd' → logprob: -13.702239990234375
    8. '{return' → logprob: -14.452239990234375
    9. '	' → logprob: -15.202239990234375
    10. ' if' → logprob: -16.577239990234375

Token 498: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0027228486724197865
    2. '       ' → logprob: -6.50272274017334
    3. ' return' → logprob: -7.25272274017334
    4. 'if' → logprob: -8.25272274017334
    5. '   ' → logprob: -8.37772274017334
    6. 'd' → logprob: -11.00272274017334
    7. '	return' → logprob: -13.50272274017334
    8. '           ' → logprob: -13.62772274017334
    9. 'cost' → logprob: -14.37772274017334
    10. '    ' → logprob: -14.87772274017334

Token 499: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.018495459109544754
    2. ' d' → logprob: -4.518495559692383
    3. 'cost' → logprob: -5.018495559692383
    4. ' cost' → logprob: -7.143495559692383
    5. '   ' → logprob: -11.893495559692383
    6. ' ' → logprob: -12.393495559692383
    7. '  ' → logprob: -13.893495559692383
    8. '	d' → logprob: -14.018495559692383
    9. '(cost' → logprob: -14.018495559692383
    10. 'distance' → logprob: -14.893495559692383

Token 500: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. 'v' → logprob: -14.625000953674316
    3. '[' → logprob: -16.875
    4. '<v' → logprob: -18.125
    5. '[
' → logprob: -19.75
    6. '[d' → logprob: -19.75
    7. ' v' → logprob: -20.375
    8. '	v' → logprob: -20.625
    9. '```' → logprob: -20.625
    10. '[c' → logprob: -21.125

Token 501: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08228564262390137
    2. ' <' → logprob: -2.5822856426239014
    3. '<v' → logprob: -7.0822858810424805
    4. ')' → logprob: -7.7072858810424805
    5. '<|end|>' → logprob: -7.7072858810424805
    6. '<int' → logprob: -7.7072858810424805
    7. ']' → logprob: -8.83228588104248
    8. ' ' → logprob: -9.20728588104248
    9. '[' → logprob: -9.33228588104248
    10. '  ' → logprob: -9.45728588104248

Token 502: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00027301779482513666
    2. ' <' → logprob: -9.125272750854492
    3. '<v' → logprob: -9.250272750854492
    4. '<int' → logprob: -10.625272750854492
    5. '<const' → logprob: -11.875272750854492
    6. '<data' → logprob: -12.250272750854492
    7. '<com' → logprob: -12.875272750854492
    8. '<ll' → logprob: -13.000272750854492
    9. '<c' → logprob: -13.250272750854492
    10. '<num' → logprob: -13.250272750854492

Token 503: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022473573684692
    2. ' cost' → logprob: -1.9102246761322021
    3. '(cost' → logprob: -14.910224914550781
    4. '_cost' → logprob: -16.16022491455078
    5. '.cost' → logprob: -17.16022491455078
    6. ' ' → logprob: -18.16022491455078
    7. '-cost' → logprob: -18.41022491455078
    8. 'Cost' → logprob: -18.91022491455078
    9. 'ost' → logprob: -19.03522491455078
    10. ' kost' → logprob: -19.53522491455078

Token 504: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7026346325874329
    2. '       ' → logprob: -0.7026346325874329
    3. '<|end|>' → logprob: -5.202634811401367
    4. '           ' → logprob: -6.327634811401367
    5. '
' → logprob: -7.202634811401367
    6. '    
' → logprob: -7.952634811401367
    7. 'def' → logprob: -8.077634811401367
    8. '        
' → logprob: -8.202634811401367
    9. '     ' → logprob: -9.577634811401367
    10. '      ' → logprob: -9.702634811401367

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08989568054676056
    2. '       ' → logprob: -2.464895725250244
    3. 'def' → logprob: -7.589895725250244
    4. '<|end|>' → logprob: -8.589895248413086
    5. 'for' → logprob: -8.964895248413086
    6. ' for' → logprob: -9.964895248413086
    7. '           ' → logprob: -10.214895248413086
    8. '```' → logprob: -10.589895248413086
    9. '
' → logprob: -12.464895248413086
    10. '    
' → logprob: -12.714895248413086

Token 506: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5769401788711548
    2. '   ' → logprob: -0.8269401788711548
    3. ' def' → logprob: -6.951940059661865
    4. '	def' → logprob: -11.201940536499023
    5. '       ' → logprob: -11.576940536499023
    6. '    
' → logprob: -12.076940536499023
    7. '  ' → logprob: -12.451940536499023
    8. '
' → logprob: -12.451940536499023
    9. ' ' → logprob: -12.826940536499023
    10. 'for' → logprob: -13.951940536499023

Token 507: ' _' (ID: 1175)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -1.0206720617134124e-05
    2. ' _' → logprob: -11.50001049041748
    3. 'update' → logprob: -19.000009536743164
    4. '_updated' → logprob: -19.500009536743164
    5. '_updates' → logprob: -19.500009536743164
    6. '_' → logprob: -19.625009536743164
    7. '_up' → logprob: -19.750009536743164
    8. '_process' → logprob: -20.750009536743164
    9. ' update' → logprob: -21.125009536743164
    10. '_UPDATE' → logprob: -21.375009536743164

Token 508: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -4.320199877838604e-07
    2. ' update' → logprob: -15.125
    3. '_update' → logprob: -16.0
    4. '	update' → logprob: -18.375
    5. '.update' → logprob: -19.0
    6. 'up' → logprob: -19.75
    7. 'def' → logprob: -19.875
    8. '   ' → logprob: -20.125
    9. 'upd' → logprob: -20.125
    10. ' ' → logprob: -20.25

Token 509: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -3.173704271830502e-06
    2. '_ne' → logprob: -13.50000286102295
    3. 'neighbors' → logprob: -14.62500286102295
    4. '(self' → logprob: -15.25000286102295
    5. '_neighbor' → logprob: -15.75000286102295
    6. '_edges' → logprob: -15.75000286102295
    7. '_nodes' → logprob: -15.87500286102295
    8. '_helpers' → logprob: -16.125003814697266
    9. '_' → logprob: -16.250003814697266
    10. '_self' → logprob: -16.625003814697266

Token 510: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003143704670947045
    2. '(' → logprob: -8.125314712524414
    3. ' (' → logprob: -11.250314712524414
    4. '       ' → logprob: -12.875314712524414
    5. '   ' → logprob: -13.375314712524414
    6. 'def' → logprob: -14.125314712524414
    7. 'self' → logprob: -14.875314712524414
    8. '(s' → logprob: -17.000314712524414
    9. '(
' → logprob: -17.000314712524414
    10. ' self' → logprob: -17.875314712524414

Token 511: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004399671161081642
    2. ',' → logprob: -8.750439643859863
    3. '(' → logprob: -8.875439643859863
    4. 'self' → logprob: -10.125439643859863
    5. 'def' → logprob: -10.500439643859863
    6. '   ' → logprob: -10.625439643859863
    7. '       ' → logprob: -10.625439643859863
    8. ' (' → logprob: -10.875439643859863
    9. '(v' → logprob: -13.000439643859863
    10. '```' → logprob: -13.875439643859863

Token 512: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023248620331287384
    2. ' v' → logprob: -3.7732486724853516
    3. 'u' → logprob: -13.148248672485352
    4. '   ' → logprob: -14.648248672485352
    5. '	v' → logprob: -14.898248672485352
    6. 'self' → logprob: -15.773248672485352
    7. ' u' → logprob: -16.39824867248535
    8. '_v' → logprob: -16.89824867248535
    9. '```' → logprob: -17.02324867248535
    10. 'def' → logprob: -17.27324867248535

Token 513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009338518721051514
    2. 'self' → logprob: -7.500933647155762
    3. '       ' → logprob: -8.000933647155762
    4. ' ,' → logprob: -10.875933647155762
    5. ',self' → logprob: -11.250933647155762
    6. ' self' → logprob: -12.375933647155762
    7. '(self' → logprob: -12.375933647155762
    8. '   ' → logprob: -12.625933647155762
    9. ',
' → logprob: -14.000933647155762
    10. '```' → logprob: -14.750933647155762

Token 514: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02975071594119072
    2. ' d' → logprob: -3.5297508239746094
    3. '   ' → logprob: -15.40475082397461
    4. ' ' → logprob: -17.40475082397461
    5. '    ' → logprob: -17.77975082397461
    6. '  ' → logprob: -17.90475082397461
    7. '	d' → logprob: -18.15475082397461
    8. ')d' → logprob: -19.02975082397461
    9. '(d' → logprob: -19.15475082397461
    10. '       ' → logprob: -19.27975082397461

Token 515: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001737431448418647
    2. '       ' → logprob: -8.875173568725586
    3. ' ,' → logprob: -11.375173568725586
    4. 'self' → logprob: -11.500173568725586
    5. '   ' → logprob: -12.625173568725586
    6. ',
' → logprob: -13.000173568725586
    7. ',self' → logprob: -13.000173568725586
    8. '):' → logprob: -13.500173568725586
    9. 'for' → logprob: -13.875173568725586
    10. '```' → logprob: -14.000173568725586

Token 516: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0052384985610842705
    2. ' que' → logprob: -5.2552385330200195
    3. '   ' → logprob: -13.25523853302002
    4. 'queue' → logprob: -14.13023853302002
    5. 'qu' → logprob: -14.25523853302002
    6. ' ' → logprob: -14.75523853302002
    7. 'ques' → logprob: -15.50523853302002
    8. '     ' → logprob: -15.88023853302002
    9. '```' → logprob: -16.130237579345703
    10. 'quee' → logprob: -16.255237579345703

Token 517: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10232886672019958
    2. '       ' → logprob: -2.6023287773132324
    3. '):' → logprob: -3.8523287773132324
    4. '   ' → logprob: -6.477328777313232
    5. ':' → logprob: -8.85232925415039
    6. '):
' → logprob: -8.97732925415039
    7. ':
' → logprob: -9.97732925415039
    8. ')' → logprob: -10.35232925415039
    9. 'for' → logprob: -10.72732925415039
    10. ',' → logprob: -11.60232925415039

Token 518: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16557665169239044
    2. '       ' → logprob: -1.915576696395874
    3. ' for' → logprob: -5.415576457977295
    4. '   ' → logprob: -7.665576457977295
    5. 'import' → logprob: -7.790576457977295
    6. '	for' → logprob: -11.665576934814453
    7. ' import' → logprob: -15.665576934814453
    8. '           ' → logprob: -15.915576934814453
    9. '```' → logprob: -16.290576934814453
    10. '      ' → logprob: -17.165576934814453

Token 519: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007572157774120569
    2. '       ' → logprob: -7.500757217407227
    3. ' for' → logprob: -8.500757217407227
    4. '   ' → logprob: -14.750757217407227
    5. 'import' → logprob: -14.875757217407227
    6. '	for' → logprob: -15.625757217407227
    7. 'edges' → logprob: -19.250757217407227
    8. '           ' → logprob: -20.125757217407227
    9. 'from' → logprob: -20.250757217407227
    10. '        ' → logprob: -20.375757217407227

Token 520: ' i' (ID: 575)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.002857535844668746
    2. ' e' → logprob: -6.002857685089111
    3. 'edge' → logprob: -8.002857208251953
    4. 'self' → logprob: -10.627857208251953
    5. ' edge' → logprob: -11.502857208251953
    6. ' ' → logprob: -12.252857208251953
    7. '   ' → logprob: -12.377857208251953
    8. ' self' → logprob: -14.377857208251953
    9. '(e' → logprob: -14.752857208251953
    10. '	e' → logprob: -15.127857208251953

Token 521: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021535485982894897
    2. 'in' → logprob: -3.8965353965759277
    3. 'n' → logprob: -7.646535396575928
    4. ',' → logprob: -7.896535396575928
    5. 'edge' → logprob: -10.396535873413086
    6. ' ' → logprob: -11.021535873413086
    7. 's' → logprob: -11.021535873413086
    8. '  ' → logprob: -11.021535873413086
    9. 'dge' → logprob: -11.146535873413086
    10. 'd' → logprob: -11.521535873413086

Token 522: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002434047171846032
    2. 'range' → logprob: -6.252434253692627
    3. ' self' → logprob: -7.627434253692627
    4. ' range' → logprob: -11.252433776855469
    5. '   ' → logprob: -13.127433776855469
    6. '(self' → logprob: -13.627433776855469
    7. ' ' → logprob: -13.877433776855469
    8. '	self' → logprob: -14.877433776855469
    9. '  ' → logprob: -15.002433776855469
    10. '[self' → logprob: -15.377433776855469

Token 523: '._' (ID: 2697)
  Prédit: '.G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.G' → logprob: -3.726595241460018e-05
    2. 'G' → logprob: -10.62503719329834
    3. 'self' → logprob: -11.50003719329834
    4. ' .' → logprob: -13.75003719329834
    5. '.' → logprob: -14.12503719329834
    6. ' G' → logprob: -15.37503719329834
    7. '	G' → logprob: -15.62503719329834
    8. 'range' → logprob: -16.000038146972656
    9. '   ' → logprob: -16.500038146972656
    10. ' self' → logprob: -16.500038146972656

Token 524: 'get' (ID: 522)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3365946114063263
    2. 'get' → logprob: -1.961594581604004
    3. 'update' → logprob: -2.336594581604004
    4. 'graph' → logprob: -4.336594581604004
    5. 'init' → logprob: -4.461594581604004
    6. 'process' → logprob: -5.211594581604004
    7. 'range' → logprob: -5.461594581604004
    8. 'iter' → logprob: -6.086594581604004
    9. 'edges' → logprob: -6.211594581604004
    10. 'enumer' → logprob: -6.461594581604004

Token 525: '_neighbor' (ID: 177120)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.39414820075035095
    2. 'range' → logprob: -1.6441482305526733
    3. 'self' → logprob: -2.519148111343384
    4. 'v' → logprob: -4.144148349761963
    5. '_neighbors' → logprob: -4.519148349761963
    6. ' neighbors' → logprob: -4.769148349761963
    7. 'edges' → logprob: -5.269148349761963
    8. 'adj' → logprob: -6.144148349761963
    9. ' v' → logprob: -6.269148349761963
    10. 'ne' → logprob: -6.519148349761963

Token 526: '_indices' (ID: 43508)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -3.643152740551159e-05
    2. 'bors' → logprob: -10.750036239624023
    3. '(v' → logprob: -12.375036239624023
    4. '(s' → logprob: -12.625036239624023
    5. ' s' → logprob: -13.250036239624023
    6. 'ors' → logprob: -13.875036239624023
    7. 'edges' → logprob: -14.000036239624023
    8. '_edges' → logprob: -14.125036239624023
    9. 'Edges' → logprob: -14.750036239624023
    10. 'bours' → logprob: -14.875036239624023

Token 527: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0007755621336400509
    2. '(self' → logprob: -7.375775337219238
    3. '(' → logprob: -9.375775337219238
    4. ' (' → logprob: -10.000775337219238
    5. 'range' → logprob: -12.000775337219238
    6. '(range' → logprob: -12.250775337219238
    7. '   ' → logprob: -12.625775337219238
    8. '[v' → logprob: -13.875775337219238
    9. '(d' → logprob: -14.125775337219238
    10. 'self' → logprob: -14.375775337219238

Token 528: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02895372174680233
    2. '):
' → logprob: -3.653953790664673
    3. ' ):' → logprob: -6.903953552246094
    4. '       ' → logprob: -7.653953552246094
    5. '():' → logprob: -7.903953552246094
    6. '   ' → logprob: -7.903953552246094
    7. 'self' → logprob: -9.528953552246094
    8. ':' → logprob: -9.778953552246094
    9. '  ' → logprob: -9.778953552246094
    10. ')' → logprob: -10.028953552246094

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06609656661748886
    2. '   ' → logprob: -3.441096544265747
    3. 'edge' → logprob: -4.691096782684326
    4. '       ' → logprob: -5.066096782684326
    5. 'e' → logprob: -5.191096782684326
    6. ' edge' → logprob: -5.691096782684326
    7. 'n' → logprob: -5.816096782684326
    8. 'neighbor' → logprob: -6.691096782684326
    9. ' e' → logprob: -7.316096782684326
    10. 'yield' → logprob: -8.066096305847168

Token 530: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.017263730987906456
    2. 'edge' → logprob: -4.267263889312744
    3. 'w' → logprob: -6.392263889312744
    4. 'self' → logprob: -7.517263889312744
    5. 'u' → logprob: -8.142263412475586
    6. '       ' → logprob: -8.642263412475586
    7. '   ' → logprob: -8.642263412475586
    8. ' e' → logprob: -10.017263412475586
    9. 'to' → logprob: -10.017263412475586
    10. 'n' → logprob: -10.142263412475586

Token 531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00712606543675065
    2. '=' → logprob: -5.0071258544921875
    3. 'dge' → logprob: -8.507125854492188
    4. '        ' → logprob: -9.757125854492188
    5. '=edge' → logprob: -10.257125854492188
    6. 'd' → logprob: -10.507125854492188
    7. '=self' → logprob: -10.757125854492188
    8. '       ' → logprob: -10.882125854492188
    9. '   ' → logprob: -11.382125854492188
    10. '    ' → logprob: -11.757125854492188

Token 532: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028084407094866037
    2. ' self' → logprob: -5.877808570861816
    3. '           ' → logprob: -13.002808570861816
    4. '       ' → logprob: -14.002808570861816
    5. '   ' → logprob: -15.877808570861816
    6. ' ' → logprob: -16.6278076171875
    7. '	self' → logprob: -16.6278076171875
    8. '               ' → logprob: -16.8778076171875
    9. '(self' → logprob: -17.0028076171875
    10. '         ' → logprob: -17.5028076171875

Token 533: '._' (ID: 2697)
  Prédit: '.G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.003845090279355645
    2. 'G' → logprob: -5.62884521484375
    3. '.' → logprob: -9.00384521484375
    4. 'self' → logprob: -9.25384521484375
    5. ' G' → logprob: -11.87884521484375
    6. ' .' → logprob: -12.37884521484375
    7. '   ' → logprob: -12.50384521484375
    8. '	G' → logprob: -13.50384521484375
    9. '       ' → logprob: -13.75384521484375
    10. ' self' → logprob: -13.87884521484375

Token 534: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.014759796671569347
    2. 'neighbor' → logprob: -5.1397600173950195
    3. 'G' → logprob: -5.6397600173950195
    4. 'edge' → logprob: -5.8897600173950195
    5. 'neighbors' → logprob: -7.3897600173950195
    6. 'graph' → logprob: -7.8897600173950195
    7. 'next' → logprob: -8.38976001739502
    8. 'getitem' → logprob: -8.38976001739502
    9. '_get' → logprob: -8.63976001739502
    10. 'access' → logprob: -8.88976001739502

Token 535: '_neighbor' (ID: 177120)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.7777161002159119
    2. 'self' → logprob: -1.0277161598205566
    3. 'edge' → logprob: -2.4027161598205566
    4. 'e' → logprob: -3.5277161598205566
    5. '(v' → logprob: -4.277716159820557
    6. 'G' → logprob: -4.652716159820557
    7. 'v' → logprob: -4.652716159820557
    8. 'neighbors' → logprob: -4.777716159820557
    9. '_neighbor' → logprob: -5.027716159820557
    10. '_edge' → logprob: -5.902716159820557

Token 536: '_edge' (ID: 43226)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15761493146419525
    2. '(v' → logprob: -2.0326149463653564
    3. '_edges' → logprob: -4.532614707946777
    4. 'edges' → logprob: -6.782614707946777
    5. '_indices' → logprob: -6.907614707946777
    6. 'cost' → logprob: -7.532614707946777
    7. '[v' → logprob: -7.657614707946777
    8. 'indices' → logprob: -8.282614707946777
    9. '_vertices' → logprob: -9.157614707946777
    10. 'edge' → logprob: -9.532614707946777

Token 537: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001438266917830333
    2. '(i' → logprob: -9.250144004821777
    3. '(' → logprob: -10.125144004821777
    4. 's' → logprob: -12.000144004821777
    5. ' (' → logprob: -14.375144004821777
    6. 'v' → logprob: -14.875144004821777
    7. '(s' → logprob: -16.00014305114746
    8. '(e' → logprob: -16.12514305114746
    9. 'e' → logprob: -17.25014305114746
    10. ',' → logprob: -17.25014305114746

Token 538: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0051882206462323666
    2. ',i' → logprob: -5.38018798828125
    3. '[i' → logprob: -8.25518798828125
    4. ')[' → logprob: -8.75518798828125
    5. ' ,' → logprob: -9.63018798828125
    6. '][' → logprob: -9.63018798828125
    7. ')' → logprob: -11.38018798828125
    8. '   ' → logprob: -12.88018798828125
    9. '(i' → logprob: -13.63018798828125
    10. ',[' → logprob: -13.75518798828125

Token 539: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028280578553676605
    2. ' i' → logprob: -5.877828121185303
    3. '           ' → logprob: -12.127827644348145
    4. '   ' → logprob: -12.127827644348145
    5. '       ' → logprob: -12.252827644348145
    6. ' ' → logprob: -13.127827644348145
    7. '  ' → logprob: -13.877827644348145
    8. ')' → logprob: -14.002827644348145
    9. '    ' → logprob: -14.377827644348145
    10. 'self' → logprob: -15.002827644348145

Token 540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7496076226234436
    2. '           ' → logprob: -0.9996076226234436
    3. ')
' → logprob: -1.8746075630187988
    4. '       ' → logprob: -5.374607563018799
    5. '               ' → logprob: -7.374607563018799
    6. ')
' → logprob: -8.874608039855957
    7. '          ' → logprob: -9.124608039855957
    8. '):
' → logprob: -9.749608039855957
    9. ']' → logprob: -9.874608039855957
    10. '
' → logprob: -9.999608039855957

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.542423165636137e-05
    2. '               ' → logprob: -10.625085830688477
    3. '<|end|>' → logprob: -10.875085830688477
    4. '       ' → logprob: -11.500085830688477
    5. ' if' → logprob: -11.625085830688477
    6. '            
' → logprob: -11.875085830688477
    7. '          ' → logprob: -12.625085830688477
    8. 'if' → logprob: -12.750085830688477
    9. '	       ' → logprob: -13.000085830688477
    10. ',' → logprob: -13.375085830688477

Token 542: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5817797183990479
    2. 'new' → logprob: -0.9567797183990479
    3. 'nd' → logprob: -4.206779479980469
    4. 'cost' → logprob: -4.706779479980469
    5. 'n' → logprob: -5.206779479980469
    6. '       ' → logprob: -5.456779479980469
    7. 'nv' → logprob: -5.581779479980469
    8. 'self' (adapté à ' self') → logprob: -5.706779479980469
    9. 'alt' → logprob: -5.956779479980469
    10. 'nc' → logprob: -6.206779479980469

Token 543: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.17751313745975494
    2. '_cost' → logprob: -2.6775131225585938
    3. 'if' → logprob: -2.8025131225585938
    4. '_' → logprob: -4.677513122558594
    5. 'def' → logprob: -5.302513122558594
    6. '.' → logprob: -5.302513122558594
    7. '_if' → logprob: -5.552513122558594
    8. ' =' → logprob: -6.302513122558594
    9. 'cost' → logprob: -6.302513122558594
    10. ' if' → logprob: -6.427513122558594

Token 544: 'try' (ID: 1806)
  Prédit: 'try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.9640849828720093
    2. 'rel' → logprob: -0.9640849828720093
    3. 'update' → logprob: -1.5890849828720093
    4. 'process' → logprob: -4.214085102081299
    5. 'check' → logprob: -4.964085102081299
    6. 'attempt' → logprob: -5.964085102081299
    7. 'consider' → logprob: -6.339085102081299
    8. 'maybe' → logprob: -6.839085102081299
    9. 'visit' → logprob: -6.964085102081299
    10. 'push' → logprob: -7.214085102081299

Token 545: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.07817576825618744
    2. '_rel' → logprob: -2.7031757831573486
    3. '_to' → logprob: -5.8281755447387695
    4. '_cost' → logprob: -5.8281755447387695
    5. '_' → logprob: -8.07817554473877
    6. '_edge' → logprob: -8.32817554473877
    7. 'rel' → logprob: -8.32817554473877
    8. '_e' → logprob: -8.57817554473877
    9. '_push' → logprob: -8.70317554473877
    10. 'update' → logprob: -8.82817554473877

Token 546: '_distance' (ID: 45537)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2624543607234955
    2. '_distance' → logprob: -1.5124543905258179
    3. 'distance' → logprob: -5.387454509735107
    4. '(v' → logprob: -6.012454509735107
    5. '_cost' → logprob: -6.762454509735107
    6. '_node' → logprob: -7.012454509735107
    7. '_neighbor' → logprob: -7.512454509735107
    8. '(' → logprob: -8.38745403289795
    9. '(distance' → logprob: -8.76245403289795
    10. 'cost' → logprob: -9.38745403289795

Token 547: '(e' (ID: 3454)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.315426766872406
    2. '(d' → logprob: -1.3154268264770508
    3. '(e' → logprob: -6.440426826477051
    4. '(' → logprob: -7.690426826477051
    5. '(i' → logprob: -9.31542682647705
    6. '(j' → logprob: -12.81542682647705
    7. ' (' → logprob: -12.81542682647705
    8. '           ' → logprob: -13.06542682647705
    9. '   ' → logprob: -13.06542682647705
    10. '(u' → logprob: -13.31542682647705

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0142817422747612
    2. '(v' → logprob: -5.014281749725342
    3. ',v' → logprob: -6.014281749725342
    4. ',d' → logprob: -6.264281749725342
    5. ',e' → logprob: -6.764281749725342
    6. '(e' → logprob: -7.264281749725342
    7. 'cost' → logprob: -8.014281272888184
    8. ' ,' → logprob: -8.139281272888184
    9. ')' → logprob: -8.264281272888184
    10. '.cost' → logprob: -9.264281272888184

Token 549: ' v' (ID: 323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02196626365184784
    2. ' d' → logprob: -4.396966457366943
    3. 'que' → logprob: -5.146966457366943
    4. 'e' → logprob: -6.271966457366943
    5. 'v' → logprob: -7.021966457366943
    6. ' que' → logprob: -7.521966457366943
    7. ' e' → logprob: -9.146965980529785
    8. '   ' → logprob: -10.521965980529785
    9. ' v' → logprob: -10.521965980529785
    10. 'queue' → logprob: -11.021965980529785

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003941263537853956
    2. ',d' → logprob: -5.753941059112549
    3. ' ,' → logprob: -7.878941059112549
    4. ',e' → logprob: -8.628941535949707
    5. '.d' → logprob: -9.378941535949707
    6. '.cost' → logprob: -10.378941535949707
    7. 'cost' → logprob: -10.628941535949707
    8. ')' → logprob: -10.878941535949707
    9. 'd' → logprob: -11.003941535949707
    10. '   ' → logprob: -12.003941535949707

Token 551: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.008787225931882858
    2. ' d' → logprob: -4.758787155151367
    3. 'e' → logprob: -9.508787155151367
    4. 'que' → logprob: -10.133787155151367
    5. '   ' → logprob: -11.008787155151367
    6. 'i' → logprob: -12.008787155151367
    7. ' que' → logprob: -12.133787155151367
    8. ' e' → logprob: -12.133787155151367
    9. '     ' → logprob: -12.383787155151367
    10. '  ' → logprob: -12.758787155151367

Token 552: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012263685464859009
    2. ')' → logprob: -4.512263774871826
    3. ',e' → logprob: -7.512263774871826
    4. ' ,' → logprob: -8.262263298034668
    5. '           ' → logprob: -8.637263298034668
    6. 'e' → logprob: -9.512263298034668
    7. '[' → logprob: -10.512263298034668
    8. ',i' → logprob: -10.887263298034668
    9. '       ' → logprob: -11.387263298034668
    10. '[i' → logprob: -11.387263298034668

Token 553: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10029260814189911
    2. ' que' → logprob: -2.350292682647705
    3. '   ' → logprob: -11.100292205810547
    4. 'qu' → logprob: -11.725292205810547
    5. 'queue' → logprob: -11.725292205810547
    6. '     ' → logprob: -11.975292205810547
    7. ' queue' → logprob: -12.225292205810547
    8. '      ' → logprob: -12.350292205810547
    9. ' e' → logprob: -12.475292205810547
    10. 'e' → logprob: -12.475292205810547

Token 554: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.2524021157296374e-05
    2. '       ' → logprob: -11.000052452087402
    3. ' )' → logprob: -11.125052452087402
    4. ')

' → logprob: -11.750052452087402
    5. ')
' → logprob: -12.125052452087402
    6. '<|end|>' → logprob: -13.375052452087402
    7. ',' → logprob: -13.500052452087402
    8. '   ' → logprob: -13.625052452087402
    9. '           ' → logprob: -14.000052452087402
    10. ' ' → logprob: -14.500052452087402

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2286807745695114
    2. '<|end|>' → logprob: -1.8536807298660278
    3. '       ' → logprob: -3.4786808490753174
    4. 'def' → logprob: -4.228680610656738
    5. '<|end|>' → logprob: -7.728680610656738
    6. '  ' → logprob: -7.728680610656738
    7. ' def' → logprob: -8.478680610656738
    8. ' ' → logprob: -8.478680610656738
    9. '	def' → logprob: -8.728680610656738
    10. '```' → logprob: -8.853680610656738

Token 556: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1841336488723755
    2. '   ' → logprob: -1.9341336488723755
    3. ' def' → logprob: -4.434133529663086
    4. '       ' → logprob: -4.934133529663086
    5. '<|end|>' → logprob: -6.059133529663086
    6. '	def' → logprob: -6.809133529663086
    7. '  ' → logprob: -7.559133529663086
    8. ' ' → logprob: -8.059133529663086
    9. '
' → logprob: -8.809133529663086
    10. '_def' → logprob: -10.684133529663086

Token 557: ' _' (ID: 1175)
  Prédit: '_get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -7.40998875699006e-05
    2. '_try' → logprob: -9.62507438659668
    3. ' _' → logprob: -12.12507438659668
    4. '_set' → logprob: -14.50007438659668
    5. '_add' → logprob: -15.00007438659668
    6. '_' → logprob: -15.37507438659668
    7. '__' → logprob: -15.75007438659668
    8. '_update' → logprob: -15.87507438659668
    9. '_has' → logprob: -16.50007438659668
    10. '_iter' → logprob: -16.62507438659668

Token 558: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.664371848164592e-05
    2. '_get' → logprob: -11.250016212463379
    3. 'def' → logprob: -13.250016212463379
    4. 'try' → logprob: -14.125016212463379
    5. 'for' → logprob: -14.375016212463379
    6. ' get' → logprob: -15.125016212463379
    7. '.get' → logprob: -16.750017166137695
    8. 'getitem' → logprob: -17.375017166137695
    9. '@get' → logprob: -17.500017166137695
    10. '```' → logprob: -17.875017166137695

Token 559: '_neighbor' (ID: 177120)
  Prédit: '_neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbor' → logprob: -0.18295493721961975
    2. 'neighbor' → logprob: -1.8079549074172974
    3. '_neighbors' → logprob: -5.932954788208008
    4. 'neighbors' → logprob: -8.432954788208008
    5. '_edge' → logprob: -8.682954788208008
    6. ' neighbor' → logprob: -9.182954788208008
    7. 'Neighbor' → logprob: -10.932954788208008
    8. '_edges' → logprob: -11.057954788208008
    9. '_ne' → logprob: -12.432954788208008
    10. 'adj' → logprob: -12.932954788208008

Token 560: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.001526644453406334
    2. 's' → logprob: -6.501526832580566
    3. 'indices' → logprob: -11.001526832580566
    4. '_edges' → logprob: -12.251526832580566
    5. '_ids' → logprob: -14.376526832580566
    6. '_indexes' → logprob: -14.626526832580566
    7. '"indices' → logprob: -15.001526832580566
    8. '_count' → logprob: -15.376526832580566
    9. 'Indices' → logprob: -15.501526832580566
    10. '_counts' → logprob: -15.501526832580566

Token 561: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010771531378850341
    2. '(' → logprob: -9.250107765197754
    3. 'self' → logprob: -11.875107765197754
    4. '(s' → logprob: -13.125107765197754
    5. 'def' → logprob: -13.375107765197754
    6. ' (' → logprob: -14.500107765197754
    7. '(
' → logprob: -15.250107765197754
    8. ' self' → logprob: -16.250106811523438
    9. '   ' → logprob: -16.375106811523438
    10. '       ' → logprob: -17.250106811523438

Token 562: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018504580482840538
    2. '(' → logprob: -4.018504619598389
    3. ',' → logprob: -9.51850414276123
    4. '(s' → logprob: -9.64350414276123
    5. 'def' → logprob: -9.89350414276123
    6. 'self' → logprob: -9.89350414276123
    7. ' (' → logprob: -10.64350414276123
    8. '(v' → logprob: -10.64350414276123
    9. ')' → logprob: -10.76850414276123
    10. '<|end|>' → logprob: -10.89350414276123

Token 563: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007462277542799711
    2. ' v' → logprob: -5.132462501525879
    3. 'self' → logprob: -6.507462501525879
    4. ' self' → logprob: -10.257462501525879
    5. ' ' → logprob: -14.132462501525879
    6. '(v' → logprob: -14.382462501525879
    7. '	v' → logprob: -14.507462501525879
    8. ')v' → logprob: -14.632462501525879
    9. '   ' → logprob: -14.882462501525879
    10. '[v' → logprob: -15.007462501525879

Token 564: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003918580245226622
    2. 'self' → logprob: -6.128918647766113
    3. '):' → logprob: -7.503918647766113
    4. '(' → logprob: -7.628918647766113
    5. '       ' → logprob: -8.128918647766113
    6. '):
' → logprob: -8.753918647766113
    7. '   ' → logprob: -9.628918647766113
    8. ')' → logprob: -9.878918647766113
    9. '():' → logprob: -10.878918647766113
    10. ' (' → logprob: -11.128918647766113

Token 565: '       ' (ID: 309)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5976864099502563
    2. 'return' → logprob: -0.8476864099502563
    3. '       ' → logprob: -4.347686290740967
    4. ' range' → logprob: -5.347686290740967
    5. '   ' → logprob: -5.847686290740967
    6. ' return' → logprob: -7.097686290740967
    7. '(range' → logprob: -9.347686767578125
    8. '	range' → logprob: -12.097686767578125
    9. ' ' → logprob: -12.597686767578125
    10. '	return' → logprob: -12.722686767578125

Token 566: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3153214454650879
    2. 'range' → logprob: -1.315321445465088
    3. '   ' → logprob: -6.815321445465088
    4. ' range' → logprob: -7.315321445465088
    5. ' return' → logprob: -8.31532096862793
    6. '       ' → logprob: -9.94032096862793
    7. ' ' → logprob: -14.31532096862793
    8. '(range' → logprob: -14.81532096862793
    9. '    ' → logprob: -14.94032096862793
    10. '	return' → logprob: -15.06532096862793

Token 567: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011021859245374799
    2. ' range' → logprob: -9.125110626220703
    3. '(range' → logprob: -14.000110626220703
    4. '	range' → logprob: -16.000110626220703
    5. 'list' → logprob: -16.250110626220703
    6. 'self' → logprob: -16.500110626220703
    7. '[' → logprob: -16.750110626220703
    8. '   ' → logprob: -17.875110626220703
    9. 'len' → logprob: -18.375110626220703
    10. 'enumer' → logprob: -19.375110626220703

Token 568: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0002613358374219388
    2. 'len' → logprob: -8.250261306762695
    3. '(' → logprob: -17.750261306762695
    4. ' len' → logprob: -18.500261306762695
    5. '[len' → logprob: -19.375261306762695
    6. '(
' → logprob: -19.625261306762695
    7. ',len' → logprob: -19.750261306762695
    8. '	len' → logprob: -20.625261306762695
    9. '<len' → logprob: -21.250261306762695
    10. '=len' → logprob: -21.375261306762695

Token 569: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00025657136575318873
    2. 'self' → logprob: -8.375256538391113
    3. '(' → logprob: -10.625256538391113
    4. ' self' → logprob: -14.250256538391113
    5. ' (' → logprob: -14.500256538391113
    6. '[self' → logprob: -15.250256538391113
    7. '(
' → logprob: -15.750256538391113
    8. ')' → logprob: -16.25025749206543
    9. '(this' → logprob: -17.25025749206543
    10. '(s' → logprob: -17.62525749206543

Token 570: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.00041816019802354276
    2. '.' → logprob: -8.375417709350586
    3. ' .' → logprob: -9.625417709350586
    4. 'G' → logprob: -9.875417709350586
    5. 'self' → logprob: -9.875417709350586
    6. '(G' → logprob: -11.875417709350586
    7. '().' → logprob: -12.625417709350586
    8. ').' → logprob: -12.875417709350586
    9. '   ' → logprob: -14.000417709350586
    10. ' G' → logprob: -14.125417709350586

Token 571: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.008129963040119e-06
    2. ' [' → logprob: -12.875003814697266
    3. '[' → logprob: -14.000003814697266
    4. 'v' → logprob: -15.625003814697266
    5. '[self' → logprob: -15.625003814697266
    6. '[
' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.500003814697266
    8. ')' → logprob: -17.500003814697266
    9. '```' → logprob: -18.000003814697266
    10. ')[' → logprob: -18.125003814697266

Token 572: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01072177104651928
    2. ']))' → logprob: -4.635721683502197
    3. '[v' → logprob: -7.510721683502197
    4. ' ))' → logprob: -9.135722160339355
    5. '])' → logprob: -9.510722160339355
    6. '   ' → logprob: -10.010722160339355
    7. ' ' → logprob: -10.135722160339355
    8. '[' → logprob: -10.385722160339355
    9. '       ' → logprob: -10.385722160339355
    10. ')' → logprob: -10.635722160339355

Token 573: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' _' (ID: 1175)
  Prédit: '_get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -0.0002570481738075614
    2. ' _' → logprob: -8.37525749206543
    3. '_add' → logprob: -12.12525749206543
    4. '_def' → logprob: -12.25025749206543
    5. '_' → logprob: -12.37525749206543
    6. '_try' → logprob: -13.25025749206543
    7. '_continue' → logprob: -13.50025749206543
    8. '_set' → logprob: -13.75025749206543
    9. 'def' → logprob: -14.00025749206543
    10. '_g' → logprob: -14.00025749206543

Token 576: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -1.2233183042553719e-05
    2. '_get' → logprob: -11.500012397766113
    3. ' get' → logprob: -13.625012397766113
    4. 'def' → logprob: -14.750012397766113
    5. '.get' → logprob: -16.250011444091797
    6. 'update' → logprob: -16.500011444091797
    7. 'getitem' → logprob: -16.875011444091797
    8. 'try' → logprob: -17.125011444091797
    9. '(get' → logprob: -17.375011444091797
    10. 'Get' → logprob: -17.500011444091797

Token 577: '_neighbor' (ID: 177120)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.3092987537384033
    2. '_neighbor' → logprob: -1.5592987537384033
    3. '_edge' → logprob: -3.5592987537384033
    4. 'Neighbor' → logprob: -3.9342987537384033
    5. '_neighbors' → logprob: -6.184298515319824
    6. 'Edge' → logprob: -6.309298515319824
    7. 'neighbors' → logprob: -6.684298515319824
    8. 'edge' → logprob: -7.059298515319824
    9. ' neighbor' → logprob: -7.684298515319824
    10. 'v' → logprob: -8.184298515319824

Token 578: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0010803256882354617
    2. '_edges' → logprob: -7.126080513000488
    3. 'edge' → logprob: -8.251080513000488
    4. 'Edge' → logprob: -11.876080513000488
    5. 'edges' → logprob: -12.251080513000488
    6. 's' → logprob: -13.501080513000488
    7. ' edge' → logprob: -14.626080513000488
    8. '_EDGE' → logprob: -14.876080513000488
    9. '[v' → logprob: -15.376080513000488
    10. '(edge' → logprob: -15.501080513000488

Token 579: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018792471382766962
    2. '(' → logprob: -8.625187873840332
    3. 'self' → logprob: -12.625187873840332
    4. ' (' → logprob: -13.000187873840332
    5. '(s' → logprob: -13.125187873840332
    6. '<|end|>' → logprob: -14.875187873840332
    7. '(
' → logprob: -15.250187873840332
    8. ' self' → logprob: -16.12518882751465
    9. '(v' → logprob: -16.62518882751465
    10. '   ' → logprob: -17.37518882751465

Token 580: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30721402168273926
    2. ',' → logprob: -2.1822140216827393
    3. 'self' → logprob: -2.5572140216827393
    4. '[self' → logprob: -3.8072140216827393
    5. '<|end|>' → logprob: -4.30721378326416
    6. ')' → logprob: -4.68221378326416
    7. '[' → logprob: -5.05721378326416
    8. '(v' → logprob: -5.18221378326416
    9. '[v' → logprob: -5.30721378326416
    10. ' (' → logprob: -5.68221378326416

Token 581: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008628644980490208
    2. ' v' → logprob: -4.758628845214844
    3. 'self' → logprob: -11.383628845214844
    4. '[v' → logprob: -14.008628845214844
    5. ')v' → logprob: -14.383628845214844
    6. '	v' → logprob: -14.758628845214844
    7. ' self' → logprob: -15.383628845214844
    8. '<|end|>' → logprob: -15.633628845214844
    9. '(v' → logprob: -15.758628845214844
    10. ' ' → logprob: -16.008628845214844

Token 582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006776464288122952
    2. 'self' → logprob: -7.625677585601807
    3. ',v' → logprob: -9.500678062438965
    4. ' ,' → logprob: -9.875678062438965
    5. ',self' → logprob: -10.500678062438965
    6. '[v' → logprob: -11.500678062438965
    7. '[self' → logprob: -12.000678062438965
    8. '<|end|>' → logprob: -12.000678062438965
    9. '[' → logprob: -12.250678062438965
    10. '(self' → logprob: -13.000678062438965

Token 583: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006766928127035499
    2. ' v' → logprob: -7.62567663192749
    3. 'i' → logprob: -8.625677108764648
    4. ' i' → logprob: -12.750677108764648
    5. '<|end|>' → logprob: -12.750677108764648
    6. 'self' → logprob: -13.875677108764648
    7. ' ' → logprob: -14.000677108764648
    8. '[v' → logprob: -15.000677108764648
    9. '   ' → logprob: -15.625677108764648
    10. '_v' → logprob: -15.875677108764648

Token 584: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7073105573654175
    2. '(self' → logprob: -1.4573105573654175
    3. '):
' → logprob: -1.7073105573654175
    4. ')' → logprob: -2.957310676574707
    5. 'self' → logprob: -3.332310676574707
    6. '       ' → logprob: -6.082310676574707
    7. '<|end|>' → logprob: -7.207310676574707
    8. '   ' → logprob: -7.707310676574707
    9. ',' → logprob: -8.207310676574707
    10. ' self' → logprob: -8.207310676574707

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9053641557693481
    2. ' return' → logprob: -0.9053641557693481
    3. 'return' → logprob: -1.6553641557693481
    4. '	return' → logprob: -8.905364036560059
    5. '   ' → logprob: -10.155364036560059
    6. '<|end|>' → logprob: -12.030364036560059
    7. '{return' → logprob: -12.905364036560059
    8. ':return' → logprob: -13.280364036560059
    9. '	' → logprob: -13.905364036560059
    10. '	   ' → logprob: -14.405364036560059

Token 586: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024723822250962257
    2. ' return' → logprob: -3.774723768234253
    3. '       ' → logprob: -6.524724006652832
    4. 'self' → logprob: -11.649724006652832
    5. '	return' → logprob: -13.774724006652832
    6. '   ' → logprob: -14.649724006652832
    7. ' self' → logprob: -16.274723052978516
    8. '{return' → logprob: -16.649723052978516
    9. ':return' → logprob: -16.899723052978516
    10. '
' → logprob: -18.274723052978516

Token 587: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234002135694027
    2. ' self' → logprob: -5.2552337646484375
    3. '       ' → logprob: -15.380233764648438
    4. '	self' → logprob: -17.380233764648438
    5. '(self' → logprob: -17.630233764648438
    6. '[self' → logprob: -19.005233764648438
    7. '   ' → logprob: -19.755233764648438
    8. '=self' → logprob: -20.630233764648438
    9. ' ' → logprob: -20.880233764648438
    10. '           ' → logprob: -22.005233764648438

Token 588: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -5.2524021157296374e-05
    2. '.' → logprob: -10.250052452087402
    3. ' .' → logprob: -11.125052452087402
    4. '.Г' → logprob: -14.250052452087402
    5. 'self' → logprob: -14.750052452087402
    6. '	G' → logprob: -15.500052452087402
    7. '.Gson' → logprob: -15.750052452087402
    8. 'G' → logprob: -15.875052452087402
    9. '‌.' → logprob: -16.12505340576172
    10. '.Q' → logprob: -16.25005340576172

Token 589: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. 'v' → logprob: -16.125
    4. ' [' → logprob: -16.625
    5. '```' → logprob: -17.375
    6. '[
' → logprob: -18.375
    7. '[val' → logprob: -19.125
    8. '[u' → logprob: -19.375
    9. '[self' → logprob: -20.25
    10. '\[' → logprob: -20.625

Token 590: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12753628194332123
    2. '[v' → logprob: -2.1275362968444824
    3. ']' → logprob: -7.627536296844482
    4. '[' → logprob: -9.502535820007324
    5. 'v' → logprob: -10.377535820007324
    6. ' ][' → logprob: -11.752535820007324
    7. '[
' → logprob: -13.752535820007324
    8. '][_' → logprob: -14.002535820007324
    9. '[i' → logprob: -14.252535820007324
    10. ']
' → logprob: -14.377535820007324

Token 591: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.842555426876061e-06
    2. ' i' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.0000057220459
    4. '  ' → logprob: -20.0000057220459
    5. '	i' → logprob: -20.1250057220459
    6. ' ' → logprob: -20.2500057220459
    7. '```' → logprob: -20.8750057220459
    8. '[i' → logprob: -21.0000057220459
    9. '_i' → logprob: -21.1250057220459
    10. 'I' → logprob: -21.3750057220459

Token 592: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. '<|end|>' → logprob: -9.750072479248047
    3. ')
' → logprob: -11.750072479248047
    4. '}' → logprob: -12.875072479248047
    5. ' )' → logprob: -12.875072479248047
    6. ')

' → logprob: -15.375072479248047
    7. ']' → logprob: -15.375072479248047
    8. '<|end|>' → logprob: -15.625072479248047
    9. ')return' → logprob: -15.750072479248047
    10. '   ' → logprob: -16.750072479248047

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048840560019016266
    2. '       ' → logprob: -3.5488405227661133
    3. 'def' → logprob: -4.298840522766113
    4. '<|end|>' → logprob: -5.923840522766113
    5. '```' → logprob: -7.048840522766113
    6. '           ' → logprob: -8.048840522766113
    7. '    
' → logprob: -8.173840522766113
    8. '
' → logprob: -8.173840522766113
    9. ' def' → logprob: -8.298840522766113
    10. '  ' → logprob: -8.923840522766113

Token 594: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04573845863342285
    2. '   ' → logprob: -3.420738458633423
    3. '       ' → logprob: -5.420738220214844
    4. 'if' → logprob: -6.045738220214844
    5. 'new' → logprob: -6.045738220214844
    6. ' def' → logprob: -6.420738220214844
    7. '           ' → logprob: -7.795738220214844
    8. 'for' → logprob: -8.795738220214844
    9. 'tent' → logprob: -8.795738220214844
    10. ' if' → logprob: -9.545738220214844

Token 595: ' _' (ID: 1175)
  Prédit: '_try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_try' → logprob: -0.0001967457792488858
    2. ' _' → logprob: -9.00019645690918
    3. '_' → logprob: -9.62519645690918
    4. '_update' → logprob: -12.50019645690918
    5. '_tr' → logprob: -13.62519645690918
    6. '_continue' → logprob: -14.25019645690918
    7. '_add' → logprob: -14.62519645690918
    8. '_get' → logprob: -15.37519645690918
    9. 'try' → logprob: -15.75019645690918
    10. '_write' → logprob: -16.12519645690918

Token 596: 'try' (ID: 1806)
  Prédit: 'try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.00020413640595506877
    2. '_try' → logprob: -8.500204086303711
    3. 'def' → logprob: -15.125204086303711
    4. ' try' → logprob: -15.250204086303711
    5. '.try' → logprob: -16.37520408630371
    6. 'update' → logprob: -17.62520408630371
    7. 'Try' → logprob: -18.50020408630371
    8. 'for' → logprob: -18.50020408630371
    9. '	try' → logprob: -18.62520408630371
    10. '_' → logprob: -18.75020408630371

Token 597: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -1.3856492842023727e-06
    2. 'update' → logprob: -14.500000953674316
    3. '_add' → logprob: -15.125000953674316
    4. '_try' → logprob: -16.500001907348633
    5. ' _' → logprob: -16.625001907348633
    6. '_' → logprob: -16.625001907348633
    7. '_UPDATE' → logprob: -16.750001907348633
    8. '_Update' → logprob: -17.000001907348633
    9. 'Update' → logprob: -17.250001907348633
    10. '_get' → logprob: -17.500001907348633

Token 598: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0003919463779311627
    2. 'distance' → logprob: -7.875391960144043
    3. '_dist' → logprob: -12.125391960144043
    4. 'Distance' → logprob: -12.625391960144043
    5. '_cost' → logprob: -13.625391960144043
    6. '(e' → logprob: -13.750391960144043
    7. '_DISTANCE' → logprob: -14.875391960144043
    8. 'dist' → logprob: -15.125391960144043
    9. '```' → logprob: -16.750391006469727
    10. ' distance' → logprob: -16.875391006469727

Token 599: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.618001053633634e-05
    2. '(' → logprob: -10.875025749206543
    3. '(e' → logprob: -13.000025749206543
    4. 'self' → logprob: -13.125025749206543
    5. ' (' → logprob: -13.125025749206543
    6. '(
' → logprob: -15.375025749206543
    7. '(s' → logprob: -15.375025749206543
    8. '   ' → logprob: -15.375025749206543
    9. '       ' → logprob: -15.625025749206543
    10. 'def' → logprob: -18.00002670288086

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5449646711349487
    2. '(self' → logprob: -0.9199646711349487
    3. '(e' → logprob: -4.044964790344238
    4. 'self' → logprob: -6.044964790344238
    5. '       ' → logprob: -8.044964790344238
    6. ',e' → logprob: -8.169964790344238
    7. ')' → logprob: -8.294964790344238
    8. '   ' → logprob: -8.544964790344238
    9. ',self' → logprob: -8.919964790344238
    10. '(edge' → logprob: -8.919964790344238

Token 601: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3485536575317383
    2. ' e' → logprob: -1.2235536575317383
    3. 'edge' → logprob: -10.223553657531738
    4. '   ' → logprob: -10.473553657531738
    5. ' edge' → logprob: -10.598553657531738
    6. 'self' → logprob: -12.598553657531738
    7. '       ' → logprob: -12.598553657531738
    8. '    ' → logprob: -12.848553657531738
    9. ' ' → logprob: -12.848553657531738
    10. '	e' → logprob: -13.473553657531738

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041053479071706533
    2. ',e' → logprob: -8.500410079956055
    3. ' ,' → logprob: -9.000410079956055
    4. 'e' → logprob: -10.625410079956055
    5. '<|end|>' → logprob: -11.000410079956055
    6. 'self' → logprob: -11.125410079956055
    7. ' e' → logprob: -11.625410079956055
    8. '       ' → logprob: -12.375410079956055
    9. '   ' → logprob: -12.500410079956055
    10. ')' → logprob: -12.750410079956055

Token 603: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.22553762793540955
    2. ' v' → logprob: -1.600537657737732
    3. 'e' → logprob: -9.475537300109863
    4. ' e' → logprob: -10.850537300109863
    5. 'd' → logprob: -12.225537300109863
    6. '<|end|>' → logprob: -12.225537300109863
    7. ' ' → logprob: -12.350537300109863
    8. '	v' → logprob: -12.350537300109863
    9. '   ' → logprob: -13.600537300109863
    10. ' d' → logprob: -13.725537300109863

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ',d' → logprob: -9.125182151794434
    3. ' ,' → logprob: -9.625182151794434
    4. 'd' → logprob: -12.125182151794434
    5. ' d' → logprob: -14.625182151794434
    6. '_,' → logprob: -15.000182151794434
    7. '   ' → logprob: -15.625182151794434
    8. '       ' → logprob: -15.750182151794434
    9. ',
' → logprob: -16.625181198120117
    10. ',e' → logprob: -16.625181198120117

Token 605: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019526603864505887
    2. ' d' → logprob: -6.251952648162842
    3. 'e' → logprob: -11.001953125
    4. '   ' → logprob: -12.251953125
    5. 'v' → logprob: -14.251953125
    6. '	d' → logprob: -14.501953125
    7. ' e' → logprob: -14.626953125
    8. ' ' → logprob: -15.751953125
    9. '10' → logprob: -16.126953125
    10. '```' → logprob: -16.251953125

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003010233340319246
    2. ' ,' → logprob: -8.375301361083984
    3. ',e' → logprob: -10.125301361083984
    4. '       ' → logprob: -11.125301361083984
    5. '   ' → logprob: -12.125301361083984
    6. 'e' → logprob: -12.750301361083984
    7. '           ' → logprob: -12.875301361083984
    8. ' e' → logprob: -14.125301361083984
    9. '```' → logprob: -14.625301361083984
    10. ',new' → logprob: -14.875301361083984

Token 607: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.2572375535964966
    2. ' que' → logprob: -1.5072375535964966
    3. 'd' → logprob: -5.507237434387207
    4. ' d' → logprob: -7.007237434387207
    5. '   ' → logprob: -9.257237434387207
    6. 'e' → logprob: -9.882237434387207
    7. 'cost' → logprob: -10.132237434387207
    8. '     ' → logprob: -10.757237434387207
    9. ' e' → logprob: -10.757237434387207
    10. '      ' → logprob: -11.007237434387207

Token 608: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1948833018541336
    2. '):' → logprob: -2.069883346557617
    3. '):
' → logprob: -3.694883346557617
    4. '       ' → logprob: -3.694883346557617
    5. '   ' → logprob: -7.194883346557617
    6. ':' → logprob: -9.194883346557617
    7. ' ,' → logprob: -10.069883346557617
    8. ')' → logprob: -10.069883346557617
    9. '):
' → logprob: -10.194883346557617
    10. 'cost' → logprob: -10.319883346557617

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.101348377764225
    2. 'if' → logprob: -2.976348400115967
    3. 'new' → logprob: -3.226348400115967
    4. ' if' → logprob: -5.851348400115967
    5. 'alt' → logprob: -6.726348400115967
    6. '           ' → logprob: -7.476348400115967
    7. ' new' → logprob: -7.726348400115967
    8. '   ' → logprob: -8.101347923278809
    9. '        ' → logprob: -9.851347923278809
    10. '```' → logprob: -10.476347923278809

Token 610: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1403599977493286
    2. 'new' → logprob: -2.140359878540039
    3. '       ' → logprob: -4.765359878540039
    4. ' if' → logprob: -6.765359878540039
    5. 'nd' → logprob: -7.265359878540039
    6. 'nv' → logprob: -7.390359878540039
    7. 'cost' → logprob: -7.515359878540039
    8. 'next' → logprob: -7.640359878540039
    9. 'nc' → logprob: -7.765359878540039
    10. 'n' → logprob: -9.140359878540039

Token 611: ' self' (ID: 1051)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.20199871063232422
    2. 'd' → logprob: -1.7019987106323242
    3. ' e' → logprob: -8.701998710632324
    4. '   ' → logprob: -9.076998710632324
    5. ' ' → logprob: -9.451998710632324
    6. 'e' → logprob: -9.451998710632324
    7. ' self' → logprob: -10.076998710632324
    8. '       ' → logprob: -10.576998710632324
    9. '    ' → logprob: -10.951998710632324
    10. '	d' → logprob: -11.326998710632324

Token 612: '._' (ID: 2697)
  Prédit: '.cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.41772401332855225
    2. 'cost' → logprob: -1.1677240133285522
    3. '._' → logprob: -4.417724132537842
    4. '   ' → logprob: -5.667724132537842
    5. 'd' → logprob: -6.167724132537842
    6. '       ' → logprob: -6.167724132537842
    7. ' cost' → logprob: -6.417724132537842
    8. '.' → logprob: -6.542724132537842
    9. ' ' → logprob: -6.792724132537842
    10. '.d' → logprob: -7.042724132537842

Token 613: 'should' (ID: 10618)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.18465596437454224
    2. 'should' → logprob: -2.9346559047698975
    3. 'update' → logprob: -3.3096559047698975
    4. 'get' → logprob: -3.9346559047698975
    5. 'can' → logprob: -4.184656143188477
    6. 'set' → logprob: -5.184656143188477
    7. 'distance' → logprob: -5.309656143188477
    8. '_try' → logprob: -5.559656143188477
    9. 'is' → logprob: -5.684656143188477
    10. 'def' → logprob: -5.809656143188477

Token 614: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.014065952971577644
    2. '_try' → logprob: -4.389065742492676
    3. 'try' → logprob: -6.889065742492676
    4. 'update' → logprob: -7.889065742492676
    5. '_skip' → logprob: -9.639065742492676
    6. 'e' → logprob: -10.014065742492676
    7. '_check' → logprob: -11.514065742492676
    8. '_replace' → logprob: -11.889065742492676
    9. '_attempt' → logprob: -12.389065742492676
    10. 'skip' → logprob: -12.764065742492676

Token 615: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.03649986535310745
    2. '(e' → logprob: -3.5364999771118164
    3. 'distance' → logprob: -5.536499977111816
    4. '(d' → logprob: -6.286499977111816
    5. 'Distance' → logprob: -8.036499977111816
    6. '_dist' → logprob: -8.286499977111816
    7. ' distance' → logprob: -9.411499977111816
    8. '(' → logprob: -9.536499977111816
    9. 'd' → logprob: -10.161499977111816
    10. ' (' → logprob: -10.536499977111816

Token 616: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.5242080092430115
    2. '(d' → logprob: -0.8992080092430115
    3. '(' → logprob: -7.149208068847656
    4. ' (' → logprob: -8.774208068847656
    5. 'd' → logprob: -10.024208068847656
    6. 'e' → logprob: -10.524208068847656
    7. '((' → logprob: -10.899208068847656
    8. '(v' → logprob: -11.024208068847656
    9. ' d' → logprob: -11.399208068847656
    10. '   ' → logprob: -11.899208068847656

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09248402714729309
    2. '.cost' → logprob: -2.8424839973449707
    3. ',e' → logprob: -3.7174839973449707
    4. ' ,' → logprob: -5.842483997344971
    5. 'cost' → logprob: -6.092483997344971
    6. ',v' → logprob: -8.592484474182129
    7. '.e' → logprob: -9.592484474182129
    8. ')' → logprob: -9.842484474182129
    9. ' cost' → logprob: -9.967484474182129
    10. ',c' → logprob: -10.217484474182129

Token 618: ' v' (ID: 323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1763920933008194
    2. 'v' → logprob: -1.9263920783996582
    3. 'e' → logprob: -4.926392078399658
    4. ' d' → logprob: -4.926392078399658
    5. ' v' → logprob: -6.801392078399658
    6. ' e' → logprob: -8.676392555236816
    7. '   ' → logprob: -9.051392555236816
    8. 'cost' → logprob: -10.176392555236816
    9. '       ' → logprob: -10.801392555236816
    10. ' ' → logprob: -11.301392555236816

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004523281008005142
    2. ',d' → logprob: -5.754523277282715
    3. ',e' → logprob: -6.754523277282715
    4. ' ,' → logprob: -9.004523277282715
    5. ',v' → logprob: -11.129523277282715
    6. 'cost' → logprob: -11.254523277282715
    7. ',c' → logprob: -12.004523277282715
    8. '.cost' → logprob: -12.629523277282715
    9. '   ' → logprob: -12.754523277282715
    10. '.d' → logprob: -13.004523277282715

Token 620: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01825728639960289
    2. ' d' → logprob: -4.018257141113281
    3. '   ' → logprob: -10.393257141113281
    4. 'e' → logprob: -10.518257141113281
    5. '       ' → logprob: -11.143257141113281
    6. '     ' → logprob: -12.018257141113281
    7. ' e' → logprob: -12.393257141113281
    8. 'cost' → logprob: -12.643257141113281
    9. '	d' → logprob: -12.768257141113281
    10. '    ' → logprob: -12.768257141113281

Token 621: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19320209324359894
    2. '):' → logprob: -1.9432021379470825
    3. '):
' → logprob: -3.943202018737793
    4. ',e' → logprob: -4.818202018737793
    5. ' ,' → logprob: -6.443202018737793
    6. '       ' → logprob: -6.818202018737793
    7. '   ' → logprob: -7.443202018737793
    8. ')' → logprob: -8.193202018737793
    9. ' e' → logprob: -8.443202018737793
    10. '           ' → logprob: -8.568202018737793

Token 622: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11449271440505981
    2. ':' → logprob: -2.239492654800415
    3. ' :' → logprob: -7.239492893218994
    4. ':
' → logprob: -7.614492893218994
    5. '               ' → logprob: -9.114492416381836
    6. ' and' → logprob: -9.364492416381836
    7. '       ' → logprob: -9.614492416381836
    8. '          ' → logprob: -9.864492416381836
    9. '<|end|>' → logprob: -9.864492416381836
    10. '		' → logprob: -11.739492416381836

Token 623: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6300548911094666
    2. 'd' → logprob: -1.5050549507141113
    3. ' d' → logprob: -2.0050549507141113
    4. ' nd' → logprob: -3.3800549507141113
    5. 'new' → logprob: -3.6300549507141113
    6. '               ' → logprob: -3.8800549507141113
    7. ' new' → logprob: -3.8800549507141113
    8. 'nd' → logprob: -6.005054950714111
    9. 'self' (adapté à ' self') → logprob: -6.130054950714111
    10. '   ' → logprob: -6.755054950714111

Token 624: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0007725820760242641
    2. '.' → logprob: -8.750772476196289
    3. '       ' → logprob: -9.000772476196289
    4. '   ' → logprob: -9.750772476196289
    5. ' _' → logprob: -10.000772476196289
    6. '_cost' → logprob: -10.250772476196289
    7. ' ' → logprob: -10.500772476196289
    8. '           ' → logprob: -10.500772476196289
    9. '_update' → logprob: -10.500772476196289
    10. '_' → logprob: -10.750772476196289

Token 625: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.0049966671504080296
    2. 'push' → logprob: -6.1299967765808105
    3. 'do' → logprob: -6.5049967765808105
    4. 'set' → logprob: -7.2549967765808105
    5. 'apply' → logprob: -8.629996299743652
    6. 'perform' → logprob: -9.254996299743652
    7. 'rel' → logprob: -9.629996299743652
    8. 'add' → logprob: -9.879996299743652
    9. '_update' → logprob: -9.879996299743652
    10. 'enqueue' → logprob: -10.754996299743652

Token 626: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.5771927833557129
    2. 'distance' → logprob: -0.8271927833557129
    3. 'd' → logprob: -7.952192783355713
    4. ' distance' → logprob: -8.077192306518555
    5. 'dist' → logprob: -9.077192306518555
    6. '_dist' → logprob: -9.327192306518555
    7. '(distance' → logprob: -9.452192306518555
    8. '_queue' → logprob: -9.452192306518555
    9. '_cost' → logprob: -10.202192306518555
    10. '_neighbor' → logprob: -10.202192306518555

Token 627: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0005394508480094373
    2. '           ' → logprob: -7.875539302825928
    3. '(' → logprob: -9.375539779663086
    4. '(d' → logprob: -10.375539779663086
    5. ' (' → logprob: -11.375539779663086
    6. 's' → logprob: -12.375539779663086
    7. 'distance' → logprob: -12.500539779663086
    8. '(v' → logprob: -12.875539779663086
    9. '[e' → logprob: -12.875539779663086
    10. '       ' → logprob: -13.000539779663086

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006198011338710785
    2. ',e' → logprob: -5.631197929382324
    3. ',v' → logprob: -6.631197929382324
    4. '(e' → logprob: -8.131197929382324
    5. '(v' → logprob: -8.381197929382324
    6. ',d' → logprob: -8.506197929382324
    7. 'e' → logprob: -9.006197929382324
    8. ' ,' → logprob: -9.131197929382324
    9. 'cost' → logprob: -9.506197929382324
    10. ')' → logprob: -9.631197929382324

Token 629: ' v' (ID: 323)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33030152320861816
    2. 'v' → logprob: -1.8303015232086182
    3. 'que' → logprob: -2.955301523208618
    4. ' d' → logprob: -3.205301523208618
    5. ' que' → logprob: -3.955301523208618
    6. ' v' → logprob: -4.830301284790039
    7. 'cost' → logprob: -8.080301284790039
    8. '   ' → logprob: -8.955301284790039
    9. 'queue' → logprob: -9.205301284790039
    10. ' ' → logprob: -9.830301284790039

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045367187703959644
    2. '           ' → logprob: -8.50045394897461
    3. ',d' → logprob: -8.75045394897461
    4. ' ,' → logprob: -9.75045394897461
    5. 'd' → logprob: -10.50045394897461
    6. '```' → logprob: -13.62545394897461
    7. '               ' → logprob: -14.00045394897461
    8. ' d' → logprob: -14.25045394897461
    9. '[' → logprob: -14.50045394897461
    10. '),' → logprob: -14.62545394897461

Token 631: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029865145683288574
    2. ' d' → logprob: -3.529865264892578
    3. '   ' → logprob: -10.279865264892578
    4. '     ' → logprob: -11.029865264892578
    5. '       ' → logprob: -11.279865264892578
    6. 'que' → logprob: -11.529865264892578
    7. '    ' → logprob: -12.029865264892578
    8. '         ' → logprob: -12.029865264892578
    9. '  ' → logprob: -12.154865264892578
    10. '           ' → logprob: -12.404865264892578

Token 632: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01121451798826456
    2. '           ' → logprob: -4.511214733123779
    3. '[' → logprob: -9.386214256286621
    4. ' ,' → logprob: -10.136214256286621
    5. '               ' → logprob: -11.511214256286621
    6. ')' → logprob: -12.011214256286621
    7. '   ' → logprob: -12.261214256286621
    8. '```' → logprob: -12.761214256286621
    9. ',
' → logprob: -12.886214256286621
    10. ' and' → logprob: -12.886214256286621

Token 633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022213248303160071
    2. '            ' → logprob: -8.875222206115723
    3. '          ' → logprob: -10.250222206115723
    4. '               ' → logprob: -11.250222206115723
    5. '       ' → logprob: -11.500222206115723
    6. '   ' → logprob: -12.625222206115723
    7. '<|end|>' → logprob: -12.625222206115723
    8. '		' → logprob: -12.750222206115723
    9. '            
' → logprob: -13.250222206115723
    10. 'self' → logprob: -13.375222206115723

Token 634: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004856815095990896
    2. '           ' → logprob: -5.504856586456299
    3. 'import' → logprob: -7.879856586456299
    4. 'heap' → logprob: -8.004857063293457
    5. ' self' → logprob: -9.754857063293457
    6. '               ' → logprob: -12.754857063293457
    7. '   ' → logprob: -13.129857063293457
    8. '       ' → logprob: -13.504857063293457
    9. '                   ' → logprob: -14.629857063293457
    10. '	self' → logprob: -15.754857063293457

Token 635: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6047699318733066e-05
    2. '_push' → logprob: -11.500016212463379
    3. '.' → logprob: -12.375016212463379
    4. '.push' → logprob: -15.000016212463379
    5. '   ' → logprob: -15.250016212463379
    6. '_' → logprob: -15.375016212463379
    7. ')._' → logprob: -15.625016212463379
    8. ' ' → logprob: -16.625015258789062
    9. ']._' → logprob: -16.750015258789062
    10. '_p' → logprob: -16.875015258789062

Token 636: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.0001987722353078425
    2. 'add' → logprob: -9.250198364257812
    3. '_push' → logprob: -9.875198364257812
    4. 'enqueue' → logprob: -11.125198364257812
    5. 'try' → logprob: -11.375198364257812
    6. 'append' → logprob: -11.875198364257812
    7. 'update' → logprob: -12.125198364257812
    8. 'put' → logprob: -12.250198364257812
    9. ' push' → logprob: -13.125198364257812
    10. 'insert' → logprob: -13.500198364257812

Token 637: '_new' (ID: 13000)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.5014374852180481
    2. '(' → logprob: -1.0014374256134033
    3. '_start' → logprob: -4.126437664031982
    4. 'queue' → logprob: -5.501437664031982
    5. '_updated' → logprob: -6.751437664031982
    6. '_distance' → logprob: -6.751437664031982
    7. '_node' → logprob: -7.126437664031982
    8. 'start' → logprob: -7.251437664031982
    9. 'que' → logprob: -7.751437664031982
    10. '(queue' → logprob: -7.876437664031982

Token 638: '_candidate' (ID: 158186)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.8269128799438477
    2. '_node' → logprob: -1.0769128799438477
    3. 'distance' → logprob: -2.3269128799438477
    4. 'node' → logprob: -2.8269128799438477
    5. '_queue' → logprob: -3.0769128799438477
    6. '_cost' → logprob: -5.076912879943848
    7. 'queue' → logprob: -5.326912879943848
    8. 'cost' → logprob: -5.451912879943848
    9. 'd' → logprob: -6.701912879943848
    10. 'dist' → logprob: -7.451912879943848

Token 639: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000657750410027802
    2. '_node' → logprob: -7.500657558441162
    3. '_distance' → logprob: -10.00065803527832
    4. 'node' → logprob: -10.37565803527832
    5. 'distance' → logprob: -11.62565803527832
    6. '```' → logprob: -12.12565803527832
    7. '_queue' → logprob: -12.50065803527832
    8. ' (' → logprob: -12.62565803527832
    9. '   ' → logprob: -13.25065803527832
    10. '`' → logprob: -14.00065803527832

Token 640: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00125570734962821
    2. '(' → logprob: -7.126255512237549
    3. ' ,' → logprob: -9.001255989074707
    4. 'cost' → logprob: -9.501255989074707
    5. '           ' → logprob: -9.876255989074707
    6. ')' → logprob: -10.376255989074707
    7. '_cost' → logprob: -10.626255989074707
    8. 'que' → logprob: -10.751255989074707
    9. '       ' → logprob: -10.876255989074707
    10. '.' → logprob: -11.001255989074707

Token 641: ' d' (ID: 272)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.12802505493164062
    2. ' que' → logprob: -2.1280250549316406
    3. 'd' → logprob: -7.503025054931641
    4. ' d' → logprob: -8.62802505493164
    5. 'e' → logprob: -8.75302505493164
    6. ' e' → logprob: -9.62802505493164
    7. '   ' → logprob: -10.12802505493164
    8. 'queue' → logprob: -11.00302505493164
    9. 'cost' → logprob: -11.50302505493164
    10. '     ' → logprob: -11.50302505493164

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009685108088888228
    2. '[' → logprob: -7.8759684562683105
    3. '           ' → logprob: -7.8759684562683105
    4. ' ,' → logprob: -8.625968933105469
    5. '       ' → logprob: -11.875968933105469
    6. '   ' → logprob: -12.125968933105469
    7. '               ' → logprob: -12.500968933105469
    8. '          ' → logprob: -13.125968933105469
    9. 'que' → logprob: -13.250968933105469
    10. ',
' → logprob: -13.500968933105469

Token 643: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.14278997480869293
    2. ' que' → logprob: -2.0177900791168213
    3. '   ' → logprob: -10.142789840698242
    4. '       ' → logprob: -10.517789840698242
    5. '     ' → logprob: -10.892789840698242
    6. '      ' → logprob: -12.017789840698242
    7. ' ' → logprob: -12.392789840698242
    8. '    ' → logprob: -12.642789840698242
    9. 'queue' → logprob: -12.892789840698242
    10. '  ' → logprob: -13.017789840698242

Token 644: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027611342375166714
    2. '       ' → logprob: -8.250276565551758
    3. ',' → logprob: -12.000276565551758
    4. ' )' → logprob: -12.500276565551758
    5. ')
' → logprob: -12.625276565551758
    6. '   ' → logprob: -14.625276565551758
    7. '()' → logprob: -15.500276565551758
    8. '           ' → logprob: -15.625276565551758
    9. ')

' → logprob: -15.875276565551758
    10. '),' → logprob: -16.000276565551758

Token 645: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2447870373725891
    2. 'def' (adapté à ' def') → logprob: -2.1197869777679443
    3. '<|end|>' → logprob: -2.7447869777679443
    4. ' ' → logprob: -4.619787216186523
    5. '       ' → logprob: -4.869787216186523
    6. '  ' → logprob: -5.619787216186523
    7. ' 
' → logprob: -5.869787216186523
    8. '    
' → logprob: -5.869787216186523
    9. '  
' → logprob: -6.744787216186523
    10. '    ' → logprob: -6.869787216186523

Token 647: ' _' (ID: 1175)
  Prédit: '_should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_should' → logprob: -0.00011403311509639025
    2. ' _' → logprob: -9.125114440917969
    3. '_sh' → logprob: -13.250114440917969
    4. ' should' → logprob: -13.500114440917969
    5. '_' → logprob: -14.000114440917969
    6. '_try' → logprob: -14.625114440917969
    7. 'should' → logprob: -14.750114440917969
    8. '_Should' → logprob: -16.75011444091797
    9. '_def' → logprob: -17.25011444091797
    10. '_has' → logprob: -17.50011444091797

Token 648: 'should' (ID: 10618)
  Prédit: 'should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'should' → logprob: -2.618001053633634e-05
    2. '_should' → logprob: -10.625025749206543
    3. ' should' → logprob: -14.000025749206543
    4. 'def' → logprob: -14.125025749206543
    5. '.should' → logprob: -15.125025749206543
    6. '   ' → logprob: -18.25002670288086
    7. 'try' → logprob: -18.37502670288086
    8. 'Should' → logprob: -18.75002670288086
    9. 'set' → logprob: -19.25002670288086
    10. 'sh' → logprob: -19.37502670288086

Token 649: '_update' (ID: 19528)
  Prédit: '_update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.0019288709154352546
    2. 'update' → logprob: -6.251928806304932
    3. ' update' → logprob: -15.37692928314209
    4. '_' → logprob: -17.376928329467773
    5. '_continue' → logprob: -18.126928329467773
    6. '```' → logprob: -18.251928329467773
    7. ' _' → logprob: -18.501928329467773
    8. '_UPDATE' → logprob: -18.626928329467773
    9. '.update' → logprob: -18.751928329467773
    10. '_should' → logprob: -18.751928329467773

Token 650: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.3306015716807451e-05
    2. '_dist' → logprob: -11.75001335144043
    3. 'distance' → logprob: -12.37501335144043
    4. '_cost' → logprob: -14.50001335144043
    5. '_' → logprob: -15.25001335144043
    6. '_DISTANCE' → logprob: -15.62501335144043
    7. '_d' → logprob: -16.37501335144043
    8. 'Distance' → logprob: -16.75001335144043
    9. '(distance' → logprob: -17.50001335144043
    10. '_length' → logprob: -17.62501335144043

Token 651: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'self' → logprob: -15.875000953674316
    4. ' (' → logprob: -17.5
    5. '   ' → logprob: -17.75
    6. '(
' → logprob: -18.0
    7. '(e' → logprob: -18.5
    8. '(s' → logprob: -18.75
    9. '       ' → logprob: -19.375
    10. '(this' → logprob: -20.5

Token 652: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.044843364506959915
    2. ',' → logprob: -3.1698434352874756
    3. 'self' → logprob: -6.7948431968688965
    4. '(e' → logprob: -7.5448431968688965
    5. ',self' → logprob: -9.544843673706055
    6. '       ' → logprob: -9.919843673706055
    7. '   ' → logprob: -10.669843673706055
    8. ',e' → logprob: -11.044843673706055
    9. '(' → logprob: -11.669843673706055
    10. '```' → logprob: -12.544843673706055

Token 653: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.3133184313774109
    2. 'e' → logprob: -1.3133184909820557
    3. 'self' → logprob: -10.563318252563477
    4. '       ' → logprob: -11.438318252563477
    5. '   ' → logprob: -11.563318252563477
    6. ' ' → logprob: -12.938318252563477
    7. '    ' → logprob: -12.938318252563477
    8. ' self' → logprob: -13.313318252563477
    9. '	e' → logprob: -13.688318252563477
    10. '  ' → logprob: -14.438318252563477

Token 654: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.983476436696947e-05
    2. ',e' → logprob: -10.500089645385742
    3. 'self' → logprob: -10.875089645385742
    4. ',v' → logprob: -11.000089645385742
    5. ' ,' → logprob: -11.000089645385742
    6. ',self' → logprob: -12.750089645385742
    7. '<|end|>' → logprob: -13.125089645385742
    8. 'e' → logprob: -13.750089645385742
    9. ' e' → logprob: -14.250089645385742
    10. '       ' → logprob: -14.375089645385742

Token 655: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1697607934474945
    2. ' v' → logprob: -1.919760823249817
    3. 'd' → logprob: -5.294760704040527
    4. ' d' → logprob: -6.544760704040527
    5. 'e' → logprob: -7.044760704040527
    6. '   ' → logprob: -7.169760704040527
    7. ' e' → logprob: -8.044760704040527
    8. '       ' → logprob: -8.169760704040527
    9. ' ' → logprob: -8.919760704040527
    10. '  ' → logprob: -9.169760704040527

Token 656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.575563020305708e-05
    2. ',d' → logprob: -10.000065803527832
    3. ' ,' → logprob: -11.750065803527832
    4. 'self' → logprob: -11.875065803527832
    5. 'd' → logprob: -13.125065803527832
    6. '   ' → logprob: -13.375065803527832
    7. '       ' → logprob: -13.750065803527832
    8. '):' → logprob: -15.750065803527832
    9. ',e' → logprob: -16.000064849853516
    10. '           ' → logprob: -16.375064849853516

Token 657: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010543649550527334
    2. ' d' → logprob: -6.876054286956787
    3. '   ' → logprob: -11.001054763793945
    4. '       ' → logprob: -13.626054763793945
    5. ' ' → logprob: -14.126054763793945
    6. '  ' → logprob: -14.501054763793945
    7. '     ' → logprob: -14.876054763793945
    8. '    ' → logprob: -14.876054763793945
    9. '	d' → logprob: -15.001054763793945
    10. 'e' → logprob: -15.376054763793945

Token 658: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1434328854084015
    2. '):' → logprob: -2.018432855606079
    3. '       ' → logprob: -7.893433094024658
    4. '   ' → logprob: -8.1434326171875
    5. '):
' → logprob: -10.1434326171875
    6. ',' → logprob: -10.3934326171875
    7. '():
' → logprob: -11.7684326171875
    8. ':' → logprob: -12.1434326171875
    9. '):

' → logprob: -12.5184326171875
    10. 'self' → logprob: -13.3934326171875

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03411033749580383
    2. 'return' → logprob: -3.4091103076934814
    3. ' return' → logprob: -7.7841105461120605
    4. '	return' → logprob: -11.534110069274902
    5. '```' → logprob: -11.534110069274902
    6. '{return' → logprob: -11.909110069274902
    7. '   ' → logprob: -12.034110069274902
    8. '           ' → logprob: -12.534110069274902
    9. '{
' → logprob: -12.784110069274902
    10. ':return' → logprob: -13.284110069274902

Token 660: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0014787978725507855
    2. '       ' → logprob: -6.626478672027588
    3. ' return' → logprob: -8.876479148864746
    4. 'd' → logprob: -11.876479148864746
    5. 'e' → logprob: -13.126479148864746
    6. '	return' → logprob: -13.376479148864746
    7. '   ' → logprob: -13.376479148864746
    8. '{return' → logprob: -14.751479148864746
    9. '
' → logprob: -15.501479148864746
    10. 'eturn' → logprob: -15.626479148864746

Token 661: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0165375005453825
    2. ' d' → logprob: -4.266537666320801
    3. 'e' → logprob: -6.141537666320801
    4. '   ' → logprob: -9.2665376663208
    5. ' e' → logprob: -9.5165376663208
    6. '       ' → logprob: -10.6415376663208
    7. '(d' → logprob: -12.0165376663208
    8. 'self' → logprob: -12.3915376663208
    9. ' ' → logprob: -12.6415376663208
    10. '           ' → logprob: -12.8915376663208

Token 662: '[e' (ID: 51414)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0008077251841314137
    2. 'v' → logprob: -7.125807762145996
    3. '[' → logprob: -13.250807762145996
    4. '[e' → logprob: -15.000807762145996
    5. '   ' → logprob: -15.375807762145996
    6. '<v' → logprob: -15.500807762145996
    7. ' v' → logprob: -15.750807762145996
    8. ' [' → logprob: -15.750807762145996
    9. '(v' → logprob: -16.37580680847168
    10. '[
' → logprob: -16.75080680847168

Token 663: '.to' (ID: 3552)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5091701745986938
    2. '[v' → logprob: -1.7591701745986938
    3. 'v' → logprob: -2.3841700553894043
    4. '.to' → logprob: -2.8841700553894043
    5. 'cost' → logprob: -3.5091700553894043
    6. '.v' → logprob: -4.134170055389404
    7. '[to' → logprob: -4.634170055389404
    8. '.' → logprob: -4.884170055389404
    9. '.cost' → logprob: -5.384170055389404
    10. ']' → logprob: -5.509170055389404

Token 664: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1010555550456047
    2. ' >' → logprob: -2.35105562210083
    3. ']' → logprob: -7.60105562210083
    4. ']>' → logprob: -8.101055145263672
    5. '">' → logprob: -10.851055145263672
    6. ' ' → logprob: -12.101055145263672
    7. ')' → logprob: -12.351055145263672
    8. '()>' → logprob: -12.351055145263672
    9. ')>' → logprob: -13.226055145263672
    10. '```' → logprob: -13.476055145263672

Token 665: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0036012595519423485
    2. ' >' → logprob: -5.62860107421875
    3. '()>' → logprob: -14.87860107421875
    4. '＞' → logprob: -15.12860107421875
    5. '>
' → logprob: -16.37860107421875
    6. '>`' → logprob: -16.50360107421875
    7. '>

' → logprob: -16.62860107421875
    8. '">' → logprob: -16.75360107421875
    9. '>d' → logprob: -16.87860107421875
    10. '```' → logprob: -17.25360107421875

Token 666: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014166207052767277
    2. ' d' → logprob: -4.264166355133057
    3. '(d' → logprob: -13.639165878295898
    4. '   ' → logprob: -14.139165878295898
    5. 'e' → logprob: -15.139165878295898
    6. '	d' → logprob: -15.514165878295898
    7. '       ' → logprob: -16.7641658782959
    8. 'self' → logprob: -16.7641658782959
    9. '           ' → logprob: -17.6391658782959
    10. ' ' → logprob: -17.7641658782959

Token 667: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.190178904333152e-05
    2. 'v' → logprob: -10.375031471252441
    3. ' v' → logprob: -15.375031471252441
    4. '[' → logprob: -15.375031471252441
    5. '	v' → logprob: -16.375032424926758
    6. '```' → logprob: -17.375032424926758
    7. ' [' → logprob: -17.875032424926758
    8. '(v' → logprob: -18.000032424926758
    9. '<v' → logprob: -18.125032424926758
    10. ')v' → logprob: -18.125032424926758

Token 668: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003810287918895483
    2. ']+' → logprob: -6.003810405731201
    3. ' ]' → logprob: -6.628810405731201
    4. ' +' → logprob: -11.503809928894043
    5. '+' → logprob: -14.378809928894043
    6. '    ' → logprob: -15.003809928894043
    7. '        ' → logprob: -15.128809928894043
    8. ' ' → logprob: -16.00381088256836
    9. '"]' → logprob: -16.25381088256836
    10. '+]' → logprob: -16.37881088256836

Token 669: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232177376747131
    2. '+' → logprob: -0.8982177376747131
    3. '<|end|>' → logprob: -9.898218154907227
    4. '[' → logprob: -11.648218154907227
    5. ' +
' → logprob: -12.023218154907227
    6. ' plus' → logprob: -12.273218154907227
    7. ' ' → logprob: -12.273218154907227
    8. '+
' → logprob: -12.273218154907227
    9. '+self' → logprob: -12.273218154907227
    10. '        ' → logprob: -12.898218154907227

Token 670: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1602250337600708
    2. ' e' → logprob: -1.9102250337600708
    3. '	e' → logprob: -14.910224914550781
    4. '   ' → logprob: -15.285224914550781
    5. ' ' → logprob: -15.535224914550781
    6. '  ' → logprob: -17.03522491455078
    7. '    ' → logprob: -17.28522491455078
    8. '
' → logprob: -18.03522491455078
    9. '(e' → logprob: -18.41022491455078
    10. '1' → logprob: -18.53522491455078

Token 671: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -4.084206375409849e-05
    2. '.' → logprob: -10.875041007995605
    3. 'cost' → logprob: -10.875041007995605
    4. ' .' → logprob: -13.625041007995605
    5. ' cost' → logprob: -13.875041007995605
    6. 'Cost' → logprob: -15.875041007995605
    7. '(cost' → logprob: -15.875041007995605
    8. '`.' → logprob: -16.12504005432129
    9. '   ' → logprob: -16.12504005432129
    10. '.code' → logprob: -16.75004005432129

Token 672: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 673: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' _' (ID: 1175)
  Prédit: '_update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_update' → logprob: -0.0033176883589476347
    2. '_try' → logprob: -5.753317832946777
    3. ' _' → logprob: -9.503317832946777
    4. '_' → logprob: -11.003317832946777
    5. '_push' → logprob: -11.003317832946777
    6. '_should' → logprob: -11.128317832946777
    7. '_continue' → logprob: -12.878317832946777
    8. '_set' → logprob: -13.003317832946777
    9. '_add' → logprob: -13.128317832946777
    10. 'def' → logprob: -13.503317832946777

Token 676: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -6.968934758333489e-05
    2. '_update' → logprob: -9.625069618225098
    3. ' update' → logprob: -12.750069618225098
    4. 'try' → logprob: -15.000069618225098
    5. '.update' → logprob: -16.000070571899414
    6. 'def' → logprob: -16.250070571899414
    7. '	update' → logprob: -17.125070571899414
    8. '(update' → logprob: -17.625070571899414
    9. '_' → logprob: -18.625070571899414
    10. 'push' → logprob: -18.750070571899414

Token 677: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01105300523340702
    2. 'distance' → logprob: -4.511053085327148
    3. 'Distance' → logprob: -12.761053085327148
    4. ' distance' → logprob: -13.386053085327148
    5. '_cost' → logprob: -14.261053085327148
    6. '_DISTANCE' → logprob: -16.01105308532715
    7. 'cost' → logprob: -17.01105308532715
    8. '_length' → logprob: -18.13605308532715
    9. '(distance' → logprob: -18.13605308532715
    10. '_dist' → logprob: -18.26105308532715

Token 678: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002555688377469778
    2. '(e' → logprob: -6.002555847167969
    3. '(' → logprob: -9.627555847167969
    4. 'self' → logprob: -12.002555847167969
    5. ' (' → logprob: -12.502555847167969
    6. '   ' → logprob: -13.002555847167969
    7. '       ' → logprob: -13.377555847167969
    8. '(E' → logprob: -15.502555847167969
    9. '(
' → logprob: -16.00255584716797
    10. ' self' → logprob: -16.75255584716797

Token 679: ',' (ID: 11)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.04190293699502945
    2. '(self' → logprob: -3.541903018951416
    3. ',' → logprob: -5.166903018951416
    4. ' (' → logprob: -6.291903018951416
    5. '[e' → logprob: -6.291903018951416
    6. 'self' → logprob: -7.041903018951416
    7. '(' → logprob: -7.166903018951416
    8. '[' → logprob: -8.041902542114258
    9. ',e' → logprob: -8.416902542114258
    10. ')' → logprob: -8.666902542114258

Token 680: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03178280219435692
    2. ' e' → logprob: -3.531782865524292
    3. 'd' → logprob: -6.281782627105713
    4. ' d' → logprob: -9.281783103942871
    5. '   ' → logprob: -10.156783103942871
    6. '       ' → logprob: -11.531783103942871
    7. 'v' → logprob: -12.031783103942871
    8. '    ' → logprob: -13.156783103942871
    9. ' ' → logprob: -13.281783103942871
    10. '	e' → logprob: -13.531783103942871

Token 681: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019157878123223782
    2. '(v' → logprob: -7.87691593170166
    3. ' ,' → logprob: -7.87691593170166
    4. '[v' → logprob: -8.50191593170166
    5. ',v' → logprob: -8.62691593170166
    6. '<|end|>' → logprob: -8.62691593170166
    7. ')' → logprob: -8.87691593170166
    8. ',e' → logprob: -9.00191593170166
    9. '(e' → logprob: -9.62691593170166
    10. 'e' → logprob: -9.87691593170166

Token 682: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.006721417419612408
    2. ' v' → logprob: -5.006721496582031
    3. 'd' → logprob: -12.506721496582031
    4. 'e' → logprob: -14.006721496582031
    5. '   ' → logprob: -14.381721496582031
    6. '	v' → logprob: -14.756721496582031
    7. '       ' → logprob: -16.00672149658203
    8. ' d' → logprob: -16.25672149658203
    9. '_v' → logprob: -16.38172149658203
    10. ' e' → logprob: -16.50672149658203

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005834150360897183
    2. '[e' → logprob: -8.50058364868164
    3. '       ' → logprob: -9.12558364868164
    4. ' ,' → logprob: -10.00058364868164
    5. ',e' → logprob: -10.00058364868164
    6. 'e' → logprob: -10.12558364868164
    7. '[' → logprob: -10.12558364868164
    8. 'd' → logprob: -10.87558364868164
    9. '   ' → logprob: -11.00058364868164
    10. '```' → logprob: -11.12558364868164

Token 684: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003185436362400651
    2. ' d' → logprob: -5.753185272216797
    3. '   ' → logprob: -12.628185272216797
    4. 'e' → logprob: -13.878185272216797
    5. '     ' → logprob: -14.128185272216797
    6. '	d' → logprob: -14.503185272216797
    7. '       ' → logprob: -14.628185272216797
    8. '  ' → logprob: -15.128185272216797
    9. '    ' → logprob: -15.253185272216797
    10. '10' → logprob: -15.378185272216797

Token 685: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5593977570533752
    2. '       ' → logprob: -1.3093976974487305
    3. '):' → logprob: -2.0593976974487305
    4. '   ' → logprob: -4.5593976974487305
    5. ',' → logprob: -4.6843976974487305
    6. '[e' → logprob: -5.5593976974487305
    7. '           ' → logprob: -5.9343976974487305
    8. 'd' → logprob: -6.4343976974487305
    9. 'self' → logprob: -7.0593976974487305
    10. ':' → logprob: -7.5593976974487305

Token 686: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.041106052696704865
    2. ' d' → logprob: -3.7911059856414795
    3. '       ' → logprob: -4.041106224060059
    4. '   ' → logprob: -9.291106224060059
    5. '           ' → logprob: -10.541106224060059
    6. '	d' → logprob: -13.041106224060059
    7. '               ' → logprob: -13.166106224060059
    8. '      ' → logprob: -14.916106224060059
    9. '  ' → logprob: -16.041105270385742
    10. ' ' → logprob: -16.041105270385742

Token 687: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0009247996495105326
    2. ' d' → logprob: -7.000924587249756
    3. '       ' → logprob: -11.250925064086914
    4. '           ' → logprob: -15.875925064086914
    5. '   ' → logprob: -16.250925064086914
    6. '	d' → logprob: -17.875925064086914
    7. '               ' → logprob: -19.125925064086914
    8. 'def' → logprob: -20.875925064086914
    9. '      ' → logprob: -21.250925064086914
    10. '        ' → logprob: -21.500925064086914

Token 688: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0005558936391025782
    2. 'e' → logprob: -7.500555992126465
    3. '[' → logprob: -13.500555992126465
    4. '```' → logprob: -14.750555992126465
    5. '[d' → logprob: -15.250555992126465
    6. ' e' → logprob: -15.250555992126465
    7. '	e' → logprob: -15.750555992126465
    8. '[v' → logprob: -15.875555992126465
    9. '[self' → logprob: -16.37555503845215
    10. '(e' → logprob: -17.12555503845215

Token 689: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -8.172891830326989e-05
    2. 'to' → logprob: -9.625082015991211
    3. '.' → logprob: -11.750082015991211
    4. '].' → logprob: -12.250082015991211
    5. ']' → logprob: -13.875082015991211
    6. 'To' → logprob: -14.500082015991211
    7. '[to' → logprob: -14.875082015991211
    8. '.from' → logprob: -15.000082015991211
    9. '<|end|>' → logprob: -16.25008201599121
    10. ').' → logprob: -16.50008201599121

Token 690: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02726788818836212
    2. '=' → logprob: -3.9022679328918457
    3. ' =' → logprob: -5.152267932891846
    4. ')' → logprob: -7.527267932891846
    5. ' ]' → logprob: -8.527267456054688
    6. ']=' → logprob: -8.652267456054688
    7. ']+=' → logprob: -13.402267456054688
    8. ' ' → logprob: -13.527267456054688
    9. ' )' → logprob: -14.027267456054688
    10. '[' → logprob: -14.527267456054688

Token 691: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '=
' → logprob: -17.78522491455078
    4. '＝' → logprob: -18.28522491455078
    5. ' ' → logprob: -18.53522491455078
    6. ' =
' → logprob: -18.91022491455078
    7. '.=' → logprob: -19.03522491455078
    8. '   ' → logprob: -19.66022491455078
    9. '=

' → logprob: -20.16022491455078
    10. '=d' → logprob: -20.66022491455078

Token 692: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1269349306821823
    2. ' d' → logprob: -2.1269350051879883
    3. '       ' → logprob: -12.876935005187988
    4. '   ' → logprob: -13.001935005187988
    5. '           ' → logprob: -14.501935005187988
    6. '	d' → logprob: -14.751935005187988
    7. 'self' → logprob: -14.876935005187988
    8. '    ' → logprob: -15.251935005187988
    9. '     ' → logprob: -16.251934051513672
    10. '  ' → logprob: -16.626934051513672

Token 693: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.688212614681106e-05
    2. 'v' → logprob: -11.000017166137695
    3. '```' → logprob: -17.000017166137695
    4. '[' → logprob: -17.500017166137695
    5. '[e' → logprob: -17.875017166137695
    6. '	v' → logprob: -18.500017166137695
    7. '<v' → logprob: -18.625017166137695
    8. ' [' → logprob: -19.500017166137695
    9. ' v' → logprob: -19.750017166137695
    10. '[d' → logprob: -19.875017166137695

Token 694: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025770556181669235
    2. ']+' → logprob: -4.025770664215088
    3. ' +' → logprob: -5.275770664215088
    4. '+' → logprob: -6.275770664215088
    5. '[e' → logprob: -8.27577018737793
    6. ' ]' → logprob: -8.40077018737793
    7. '[' → logprob: -9.77577018737793
    8. '   ' → logprob: -11.15077018737793
    9. ' ' → logprob: -11.15077018737793
    10. ')' → logprob: -11.77577018737793

Token 695: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759835839271545
    2. '+' → logprob: -0.8259835839271545
    3. '[' → logprob: -11.075984001159668
    4. '+self' → logprob: -11.075984001159668
    5. '[e' → logprob: -12.450984001159668
    6. '       ' → logprob: -13.075984001159668
    7. '+c' → logprob: -13.200984001159668
    8. ' ' → logprob: -13.450984001159668
    9. '+d' → logprob: -14.575984001159668
    10. '   ' → logprob: -14.575984001159668

Token 696: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.048587486147880554
    2. ' e' → logprob: -3.0485875606536865
    3. '   ' → logprob: -17.298587799072266
    4. ' ' → logprob: -18.298587799072266
    5. '	e' → logprob: -18.298587799072266
    6. '       ' → logprob: -19.673587799072266
    7. '  ' → logprob: -20.173587799072266
    8. '    ' → logprob: -20.548587799072266
    9. '(e' → logprob: -20.548587799072266
    10. '           ' → logprob: -20.798587799072266

Token 697: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.00020783171930816025
    2. 'cost' → logprob: -8.500207901000977
    3. '.' → logprob: -12.750207901000977
    4. ' cost' → logprob: -14.000207901000977
    5. ' .' → logprob: -15.375207901000977
    6. '(cost' → logprob: -16.375207901000977
    7. '_cost' → logprob: -16.500207901000977
    8. '```' → logprob: -17.125207901000977
    9. '`.' → logprob: -17.375207901000977
    10. '   ' → logprob: -17.750207901000977

Token 698: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012841705232858658
    2. '<|end|>' → logprob: -4.387841701507568
    3. '```' → logprob: -8.512842178344727
    4. 'def' → logprob: -9.887842178344727
    5. '  ' → logprob: -10.762842178344727
    6. ')' → logprob: -10.762842178344727
    7. '       ' → logprob: -11.262842178344727
    8. '<|end|>' → logprob: -11.512842178344727
    9. '    
' → logprob: -12.262842178344727
    10. ' ' → logprob: -12.387842178344727

Token 699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013277999125421047
    2. 'def' → logprob: -4.388278007507324
    3. '<|end|>' → logprob: -7.763278007507324
    4. '```' → logprob: -8.888278007507324
    5. '    
' → logprob: -9.138278007507324
    6. '	def' → logprob: -10.513278007507324
    7. ' def' → logprob: -10.638278007507324
    8. '  ' → logprob: -10.888278007507324
    9. '       ' → logprob: -11.638278007507324
    10. ')' → logprob: -12.763278007507324

Token 700: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06211647391319275
    2. '   ' → logprob: -2.8121163845062256
    3. ' def' → logprob: -9.187116622924805
    4. '	def' → logprob: -10.062116622924805
    5. '    
' → logprob: -13.812116622924805
    6. '```' → logprob: -14.062116622924805
    7. '_def' → logprob: -14.312116622924805
    8. '
' → logprob: -14.812116622924805
    9. '       ' → logprob: -15.062116622924805
    10. '  ' → logprob: -15.187116622924805

Token 701: ' _' (ID: 1175)
  Prédit: '_push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_push' → logprob: -0.005430357996374369
    2. '_try' → logprob: -5.255430221557617
    3. ' _' → logprob: -9.005430221557617
    4. '_update' → logprob: -10.755430221557617
    5. '_p' → logprob: -11.255430221557617
    6. '_add' → logprob: -11.505430221557617
    7. '_P' → logprob: -12.130430221557617
    8. '_' → logprob: -12.380430221557617
    9. '_pop' → logprob: -12.505430221557617
    10. '_put' → logprob: -13.755430221557617

Token 702: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -7.541112427134067e-05
    2. '_push' → logprob: -9.500075340270996
    3. 'try' → logprob: -15.000075340270996
    4. ' push' → logprob: -16.500076293945312
    5. 'pop' → logprob: -16.875076293945312
    6. '	push' → logprob: -17.000076293945312
    7. '.push' → logprob: -17.625076293945312
    8. '_' → logprob: -18.250076293945312
    9. 'Push' → logprob: -18.875076293945312
    10. 'pus' → logprob: -19.375076293945312

Token 703: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -5.431207682704553e-05
    2. 'new' → logprob: -9.875054359436035
    3. 'New' → logprob: -14.125054359436035
    4. '_' → logprob: -14.375054359436035
    5. '```' → logprob: -14.625054359436035
    6. '(self' → logprob: -15.250054359436035
    7. 'self' → logprob: -15.500054359436035
    8. '   ' → logprob: -16.00005340576172
    9. '_NEW' → logprob: -16.12505340576172
    10. '_push' → logprob: -16.75005340576172

Token 704: '_candidate' (ID: 158186)
  Prédit: '_candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidate' → logprob: -0.0003943304473068565
    2. 'candidate' → logprob: -7.875394344329834
    3. '_node' → logprob: -11.875393867492676
    4. '_' → logprob: -13.125393867492676
    5. '(candidate' → logprob: -13.750393867492676
    6. '_candidates' → logprob: -13.750393867492676
    7. '_distance' → logprob: -13.875393867492676
    8. '```' → logprob: -14.125393867492676
    9. ' candidate' → logprob: -14.500393867492676
    10. '_new' → logprob: -14.875393867492676

Token 705: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006840402726083994
    2. '(e' → logprob: -5.256840229034424
    3. '(self' → logprob: -6.506840229034424
    4. ' (' → logprob: -9.256840705871582
    5. '       ' → logprob: -12.131840705871582
    6. '(queue' → logprob: -12.131840705871582
    7. '   ' → logprob: -12.506840705871582
    8. ',' → logprob: -13.881840705871582
    9. '```' → logprob: -15.381840705871582
    10. '(E' → logprob: -15.506840705871582

Token 706: ',' (ID: 11)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.14395566284656525
    2. ',' → logprob: -2.018955707550049
    3. ',e' → logprob: -7.768955707550049
    4. '(' → logprob: -7.893955707550049
    5. ' (' → logprob: -8.26895523071289
    6. '(self' → logprob: -9.76895523071289
    7. '       ' → logprob: -10.39395523071289
    8. '```' → logprob: -10.51895523071289
    9. ')' → logprob: -10.64395523071289
    10. ' ,' → logprob: -10.64395523071289

Token 707: ' e' (ID: 319)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.24793951213359833
    2. 'e' → logprob: -1.6229394674301147
    3. ' que' → logprob: -4.247939586639404
    4. ' e' → logprob: -4.872939586639404
    5. 'd' → logprob: -9.372939109802246
    6. '   ' → logprob: -10.122939109802246
    7. '       ' → logprob: -10.122939109802246
    8. '(e' → logprob: -10.372939109802246
    9. 'queue' → logprob: -10.497939109802246
    10. '     ' → logprob: -10.997939109802246

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.750032424926758
    3. ',d' → logprob: -12.000032424926758
    4. 'd' → logprob: -12.875032424926758
    5. '   ' → logprob: -14.375032424926758
    6. '<|end|>' → logprob: -14.875032424926758
    7. '```' → logprob: -15.250032424926758
    8. ' d' → logprob: -15.375032424926758
    9. '       ' → logprob: -15.875032424926758
    10. ',
' → logprob: -16.000032424926758

Token 709: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06994444131851196
    2. ' d' → logprob: -2.694944381713867
    3. '       ' → logprob: -13.319944381713867
    4. 'e' → logprob: -13.319944381713867
    5. '   ' → logprob: -13.694944381713867
    6. '```' → logprob: -13.944944381713867
    7. '     ' → logprob: -15.069944381713867
    8. '         ' → logprob: -15.069944381713867
    9. '	d' → logprob: -15.069944381713867
    10. '    ' → logprob: -15.319944381713867

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5822400857578032e-05
    2. ' ,' → logprob: -10.750025749206543
    3. '   ' → logprob: -12.625025749206543
    4. '       ' → logprob: -14.125025749206543
    5. '[' → logprob: -16.25002670288086
    6. ',
' → logprob: -16.50002670288086
    7. '```' → logprob: -17.00002670288086
    8. '    ' → logprob: -17.12502670288086
    9. '      ' → logprob: -17.62502670288086
    10. '  ' → logprob: -17.62502670288086

Token 711: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.06196970492601395
    2. ' que' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.436969757080078
    4. '   ' → logprob: -15.061969757080078
    5. 'queue' → logprob: -15.186969757080078
    6. 'ques' → logprob: -15.686969757080078
    7. 'quee' → logprob: -15.686969757080078
    8. '```' → logprob: -16.186969757080078
    9. '       ' → logprob: -16.436969757080078
    10. ' queue' → logprob: -16.436969757080078

Token 712: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023849794641137123
    2. '       ' → logprob: -3.7738497257232666
    3. 'self' → logprob: -7.648849964141846
    4. ' ,' → logprob: -10.398849487304688
    5. '(self' → logprob: -10.648849487304688
    6. '   ' → logprob: -10.773849487304688
    7. '(' → logprob: -10.898849487304688
    8. '           ' → logprob: -12.023849487304688
    9. 'que' → logprob: -12.523849487304688
    10. '):
' → logprob: -12.648849487304688

Token 713: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2545095384120941
    2. '       ' → logprob: -1.5045095682144165
    3. 'heap' → logprob: -6.254509449005127
    4. '```' → logprob: -7.629509449005127
    5. ' import' → logprob: -9.254509925842285
    6. '   ' → logprob: -9.879509925842285
    7. '	import' → logprob: -11.879509925842285
    8. ' heap' → logprob: -11.879509925842285
    9. '	' → logprob: -12.879509925842285
    10. '           ' → logprob: -13.629509925842285

Token 714: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.011173497885465622
    2. '       ' → logprob: -5.136173725128174
    3. 'heap' → logprob: -5.261173725128174
    4. ' import' → logprob: -10.511173248291016
    5. '   ' → logprob: -12.261173248291016
    6. ' heap' → logprob: -13.136173248291016
    7. 'queue' → logprob: -13.511173248291016
    8. '```' → logprob: -13.636173248291016
    9. '	import' → logprob: -13.761173248291016
    10. 'from' → logprob: -13.761173248291016

Token 715: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.002475777640938759
    2. ' heap' → logprob: -6.002475738525391
    3. 'he' → logprob: -16.62747573852539
    4. '_heap' → logprob: -17.62747573852539
    5. '.heap' → logprob: -18.12747573852539
    6. '(heap' → logprob: -18.25247573852539
    7. ' ' → logprob: -19.37747573852539
    8. 'Heap' → logprob: -20.50247573852539
    9. '   ' → logprob: -20.62747573852539
    10. 'heat' → logprob: -20.75247573852539

Token 716: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'f' → logprob: -21.5
    3. 'p' → logprob: -22.125
    4. ' q' → logprob: -22.375
    5. 'queue' → logprob: -22.625
    6. '       ' → logprob: -23.375
    7. 'Q' → logprob: -23.625
    8. 'ql' → logprob: -24.125
    9. 'e' → logprob: -24.25
    10. 'qx' → logprob: -24.25

Token 717: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5760285258293152
    2. 'heap' → logprob: -0.8260285258293152
    3. ' heap' → logprob: -9.701028823852539
    4. '   ' → logprob: -11.326028823852539
    5. '(heap' → logprob: -11.701028823852539
    6. '.heap' → logprob: -12.326028823852539
    7. '           ' → logprob: -13.701028823852539
    8. '_heap' → logprob: -14.076028823852539
    9. 'he' → logprob: -14.326028823852539
    10. '```' → logprob: -15.451028823852539

Token 718: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.004085643216967583
    2. '       ' → logprob: -5.504085540771484
    3. ' heap' → logprob: -12.004085540771484
    4. '   ' → logprob: -14.504085540771484
    5. 'he' → logprob: -15.504085540771484
    6. '(heap' → logprob: -15.629085540771484
    7. '.heap' → logprob: -15.879085540771484
    8. 'queue' → logprob: -17.004085540771484
    9. '_heap' → logprob: -17.504085540771484
    10. '           ' → logprob: -18.379085540771484

Token 719: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -15.625
    3. '       ' → logprob: -16.0
    4. '   ' → logprob: -17.375
    5. 'he' → logprob: -19.25
    6. '(heap' → logprob: -20.375
    7. '.heap' → logprob: -20.75
    8. 'h' → logprob: -21.625
    9. '           ' → logprob: -21.625
    10. 'hq' → logprob: -21.75

Token 720: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'p' → logprob: -20.875
    3. '       ' → logprob: -21.75
    4. 'f' → logprob: -22.125
    5. 'queue' → logprob: -22.375
    6. '.q' → logprob: -22.75
    7. 'push' → logprob: -23.0
    8. '[' → logprob: -23.375
    9. 'qp' → logprob: -23.5
    10. 'ify' → logprob: -23.5

Token 721: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -2.2200749754119897e-06
    2. 'he' → logprob: -13.625001907348633
    3. '.heap' → logprob: -14.125001907348633
    4. '.' → logprob: -15.250001907348633
    5. ' he' → logprob: -17.625001907348633
    6. '_he' → logprob: -18.250001907348633
    7. '.h' → logprob: -18.250001907348633
    8. 'heap' → logprob: -19.625001907348633
    9. '.He' → logprob: -20.125001907348633
    10. '.ht' → logprob: -20.250001907348633

Token 722: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.45848218582978e-06
    2. 'ap' → logprob: -13.00000286102295
    3. 'a' → logprob: -16.125001907348633
    4. 'pp' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '[' → logprob: -20.000001907348633
    7. '	app' → logprob: -20.000001907348633
    8. ' app' → logprob: -20.125001907348633
    9. 'apput' → logprob: -20.250001907348633
    10. 'q' → logprob: -20.500001907348633

Token 723: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.054500666621607e-06
    2. 'push' → logprob: -13.12500286102295
    3. 'app' → logprob: -14.00000286102295
    4. 'e' → logprob: -16.250003814697266
    5. 'p' → logprob: -18.375003814697266
    6. '```' → logprob: -19.000003814697266
    7. 'u' → logprob: -19.875003814697266
    8. 'USH' → logprob: -19.875003814697266
    9. 'he' → logprob: -20.000003814697266
    10. 'op' → logprob: -20.000003814697266

Token 724: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.0
    3. '(
' → logprob: -18.5
    4. '       ' → logprob: -21.625
    5. '```' → logprob: -21.875
    6. '   ' → logprob: -22.25
    7. '(queue' → logprob: -23.25
    8. '((' → logprob: -23.625
    9. '      ' → logprob: -24.0
    10. '  ' → logprob: -24.75

Token 725: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.000017166137695
    3. ' que' → logprob: -14.625017166137695
    4. '   ' → logprob: -15.875017166137695
    5. '       ' → logprob: -16.625017166137695
    6. '```' → logprob: -17.250017166137695
    7. 'ques' → logprob: -17.500017166137695
    8. 'queue' → logprob: -18.500017166137695
    9. 'quee' → logprob: -18.625017166137695
    10. 'qui' → logprob: -19.250017166137695

Token 726: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39107081294059753
    2. ',' → logprob: -1.14107084274292
    3. ',(' → logprob: -6.14107084274292
    4. ' (' → logprob: -6.26607084274292
    5. ' ,' → logprob: -9.391070365905762
    6. '       ' → logprob: -10.141070365905762
    7. ')' → logprob: -11.641070365905762
    8. '((' → logprob: -13.266070365905762
    9. ')(' → logprob: -13.641070365905762
    10. '```' → logprob: -13.641070365905762

Token 727: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2552472651004791
    2. ' (' → logprob: -1.5052472352981567
    3. '(' → logprob: -5.755247116088867
    4. '(self' → logprob: -10.630247116088867
    5. '((' → logprob: -10.755247116088867
    6. '   ' → logprob: -11.630247116088867
    7. '(dis' → logprob: -12.005247116088867
    8. '(dp' → logprob: -12.005247116088867
    9. '(new' → logprob: -12.130247116088867
    10. '(e' → logprob: -12.130247116088867

Token 728: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.41866585687967e-06
    2. ' d' → logprob: -11.750008583068848
    3. '(d' → logprob: -15.250008583068848
    4. '   ' → logprob: -16.50000762939453
    5. '       ' → logprob: -17.37500762939453
    6. '           ' → logprob: -17.62500762939453
    7. 'self' → logprob: -17.75000762939453
    8. '_d' → logprob: -17.75000762939453
    9. '          ' → logprob: -17.87500762939453
    10. '  ' → logprob: -18.37500762939453

Token 729: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -12.000008583068848
    3. 'e' → logprob: -13.125008583068848
    4. '[
' → logprob: -16.25000762939453
    5. '```' → logprob: -17.25000762939453
    6. ' [' → logprob: -18.87500762939453
    7. '(e' → logprob: -19.50000762939453
    8. ' e' → logprob: -19.75000762939453
    9. ')e' → logprob: -20.12500762939453
    10. '[self' → logprob: -21.12500762939453

Token 730: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -4.127333340875339e-06
    2. '.' → logprob: -12.750003814697266
    3. 'to' → logprob: -13.750003814697266
    4. '[to' → logprob: -17.125003814697266
    5. ' .' → logprob: -17.625003814697266
    6. '.To' → logprob: -18.375003814697266
    7. '.e' → logprob: -18.875003814697266
    8. 'To' → logprob: -19.375003814697266
    9. '.from' → logprob: -20.125003814697266
    10. ',to' → logprob: -20.250003814697266

Token 731: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.012673157267272472
    2. ',' → logprob: -4.387673377990723
    3. '[e' → logprob: -9.137673377990723
    4. ']' → logprob: -10.512673377990723
    5. 'e' → logprob: -11.512673377990723
    6. ' ],' → logprob: -12.012673377990723
    7. ',e' → logprob: -12.262673377990723
    8. '),' → logprob: -13.012673377990723
    9. '],
' → logprob: -13.512673377990723
    10. '[' → logprob: -13.512673377990723

Token 732: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00861456897109747
    2. ' e' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.133615493774414
    4. '	e' → logprob: -18.508615493774414
    5. ')e' → logprob: -19.383615493774414
    6. ' ' → logprob: -19.508615493774414
    7. '    ' → logprob: -20.008615493774414
    8. '_e' → logprob: -20.508615493774414
    9. '  ' → logprob: -20.633615493774414
    10. '       ' → logprob: -20.758615493774414

Token 733: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -4.5491004129871726e-05
    2. 'to' → logprob: -10.000045776367188
    3. '.' → logprob: -17.000045776367188
    4. '[to' → logprob: -18.875045776367188
    5. ',to' → logprob: -19.875045776367188
    6. 'To' → logprob: -20.250045776367188
    7. '(to' → logprob: -20.500045776367188
    8. ').' → logprob: -20.750045776367188
    9. '.To' → logprob: -20.750045776367188
    10. ' to' → logprob: -20.875045776367188

Token 734: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011759399203583598
    2. ')' → logprob: -6.751175880432129
    3. '))
' → logprob: -12.251175880432129
    4. '       ' → logprob: -14.501175880432129
    5. '   ' → logprob: -15.876175880432129
    6. ')))' → logprob: -15.876175880432129
    7. ')
' → logprob: -16.376176834106445
    8. ' ))' → logprob: -16.876176834106445
    9. '));' → logprob: -17.376176834106445
    10. '()))' → logprob: -18.251176834106445

Token 735: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15168796479701996
    2. ' test' → logprob: -2.7766878604888916
    3. ' _' → logprob: -3.5266878604888916
    4. ' ' → logprob: -3.7766878604888916
    5. ' shortest' → logprob: -4.901688098907471
    6. ' solve' → logprob: -5.151688098907471
    7. '_' → logprob: -5.401688098907471
    8. ' run' → logprob: -5.901688098907471
    9. ' __' → logprob: -7.026688098907471
    10. ' add' → logprob: -7.151688098907471

Token 737: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.2378600735682994e-05
    2. '():
' → logprob: -10.375032424926758
    3. ' ():' → logprob: -14.000032424926758
    4. '()' → logprob: -15.625032424926758
    5. '():
' → logprob: -16.500032424926758
    6. '():

' → logprob: -17.000032424926758
    7. '(' → logprob: -18.250032424926758
    8. 'def' → logprob: -19.125032424926758
    9. '().' → logprob: -19.125032424926758
    10. '_' → logprob: -19.250032424926758

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01910555362701416
    2. ' n' → logprob: -4.394105434417725
    3. 'n' → logprob: -5.144105434417725
    4. ' import' → logprob: -8.144105911254883
    5. '```' → logprob: -8.644105911254883
    6. 'import' → logprob: -9.019105911254883
    7. '    ' → logprob: -9.644105911254883
    8. 'v' → logprob: -11.019105911254883
    9. '	n' → logprob: -11.394105911254883
    10. '   ' → logprob: -11.394105911254883

Token 739: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.090979814529419
    2. '   ' → logprob: -1.465979814529419
    3. ' n' → logprob: -1.840979814529419
    4. 'import' → logprob: -2.215979814529419
    5. ' import' → logprob: -2.715979814529419
    6. 'V' → logprob: -3.090979814529419
    7. ' V' → logprob: -3.715979814529419
    8. 'N' → logprob: -4.09097957611084
    9. ' N' → logprob: -4.84097957611084
    10. 'v' → logprob: -6.09097957611084

Token 740: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01585405133664608
    2. ' =' → logprob: -4.2658538818359375
    3. ' ,' → logprob: -6.8908538818359375
    4. '=' → logprob: -8.265853881835938
    5. ',m' → logprob: -8.640853881835938
    6. '=int' → logprob: -10.265853881835938
    7. '   ' → logprob: -10.515853881835938
    8. ',p' → logprob: -10.640853881835938
    9. ',k' → logprob: -10.765853881835938
    10. ',n' → logprob: -10.890853881835938

Token 741: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0034513415303081274
    2. ' m' → logprob: -5.753451347351074
    3. 'k' → logprob: -8.253451347351074
    4. 'q' → logprob: -11.753451347351074
    5. ' k' → logprob: -12.878451347351074
    6. ' ' → logprob: -13.753451347351074
    7. 'n' → logprob: -14.503451347351074
    8. 'd' → logprob: -15.128451347351074
    9. 'p' → logprob: -15.503451347351074
    10. '=' → logprob: -15.628451347351074

Token 742: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861824959516525
    2. ' =' → logprob: -3.0486183166503906
    3. ',' → logprob: -10.42361831665039
    4. '=input' → logprob: -13.92361831665039
    5. '=int' → logprob: -16.92361831665039
    6. '＝' → logprob: -17.67361831665039
    7. '=
' → logprob: -18.04861831665039
    8. ')' → logprob: -18.42361831665039
    9. '   ' → logprob: -18.67361831665039
    10. ' =
' → logprob: -18.67361831665039

Token 743: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005052540800534189
    2. 'q' → logprob: -8.375505447387695
    3. 'k' → logprob: -8.500505447387695
    4. 'start' → logprob: -10.375505447387695
    5. 'x' → logprob: -11.125505447387695
    6. ' s' → logprob: -11.500505447387695
    7. 'r' → logprob: -12.500505447387695
    8. '_' → logprob: -12.625505447387695
    9. 'p' → logprob: -13.375505447387695
    10. 't' → logprob: -13.500505447387695

Token 744: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023251652717590332
    2. ' =' → logprob: -3.773251533508301
    3. ',' → logprob: -12.1482515335083
    4. '=input' → logprob: -14.1482515335083
    5. '＝' → logprob: -17.273252487182617
    6. '=list' → logprob: -17.523252487182617
    7. ' ' → logprob: -17.648252487182617
    8. '=line' → logprob: -18.023252487182617
    9. '=int' → logprob: -18.148252487182617
    10. '   ' → logprob: -18.648252487182617

Token 745: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0815415233373642
    2. '_' → logprob: -3.9565415382385254
    3. '_t' → logprob: -3.9565415382385254
    4. ' =' → logprob: -4.081541538238525
    5. '=' → logprob: -4.581541538238525
    6. '_=' → logprob: -4.831541538238525
    7. ' t' → logprob: -6.331541538238525
    8. 'q' → logprob: -7.081541538238525
    9. 'd' → logprob: -7.706541538238525
    10. ' ' → logprob: -7.831541538238525

Token 746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326669454574585
    2. ' =' → logprob: -1.3132667541503906
    3. ',' → logprob: -12.56326675415039
    4. '=input' → logprob: -13.81326675415039
    5. '=list' → logprob: -15.81326675415039
    6. '=int' → logprob: -16.43826675415039
    7. '＝' → logprob: -16.56326675415039
    8. '=line' → logprob: -17.31326675415039
    9. '  ' → logprob: -17.68826675415039
    10. ')' → logprob: -17.81326675415039

Token 747: ' read' (ID: 1729)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740801155567169
    2. ' map' → logprob: -0.9740800857543945
    3. 'list' → logprob: -13.224080085754395
    4. ' list' → logprob: -14.349080085754395
    5. '	map' → logprob: -14.974080085754395
    6. ' ' → logprob: -15.599080085754395
    7. 'input' → logprob: -16.34908103942871
    8. '(map' → logprob: -16.59908103942871
    9. '   ' → logprob: -17.09908103942871
    10. '[' → logprob: -17.47408103942871

Token 748: '_main' (ID: 23076)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14520929753780365
    2. 'line' → logprob: -2.020209312438965
    3. '().' → logprob: -6.520209312438965
    4. '_line' → logprob: -7.895209312438965
    5. '()
' → logprob: -8.395209312438965
    6. ' ()' → logprob: -9.145209312438965
    7. 'input' → logprob: -9.895209312438965
    8. 'map' → logprob: -10.145209312438965
    9. 'lines' → logprob: -10.270209312438965
    10. '())' → logprob: -10.395209312438965

Token 749: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010629897937178612
    2. 'line' → logprob: -4.760630130767822
    3. '()
' → logprob: -7.135630130767822
    4. '_line' → logprob: -7.510630130767822
    5. '().' → logprob: -7.760630130767822
    6. '()\' → logprob: -9.260629653930664
    7. '()]' → logprob: -10.385629653930664
    8. ' ()' → logprob: -10.385629653930664
    9. '())' → logprob: -11.510629653930664
    10. '_input' → logprob: -12.010629653930664

Token 750: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014537633978761733
    2. '()
' → logprob: -9.500144958496094
    3. '(' → logprob: -10.625144958496094
    4. '_' → logprob: -11.500144958496094
    5. ')' → logprob: -11.875144958496094
    6. '=' → logprob: -12.375144958496094
    7. '().' → logprob: -12.500144958496094
    8. '_line' → logprob: -12.875144958496094
    9. '()\' → logprob: -13.000144958496094
    10. ' ()' → logprob: -13.125144958496094

Token 751: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011394627392292023
    2. '
' → logprob: -5.636394500732422
    3. '    
' → logprob: -5.636394500732422
    4. ',' → logprob: -7.761394500732422
    5. 'n' → logprob: -7.761394500732422
    6. 'def' → logprob: -7.761394500732422
    7. '```' → logprob: -7.761394500732422
    8. 'd' → logprob: -8.136394500732422
    9. '<|end|>' → logprob: -8.136394500732422
    10. '.' → logprob: -8.136394500732422

Token 752: ' yen' (ID: 34890)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.551974356174469
    2. 'd' → logprob: -1.9269742965698242
    3. 'graph' → logprob: -1.9269742965698242
    4. 'G' → logprob: -2.176974296569824
    5. '   ' → logprob: -4.301974296569824
    6. 'dist' → logprob: -6.051974296569824
    7. 'dj' → logprob: -7.176974296569824
    8. 'dp' → logprob: -7.801974296569824
    9. '```' → logprob: -7.801974296569824
    10. ' graph' → logprob: -7.926974296569824

Token 753: ',' (ID: 11)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.478670597076416
    2. '_dist' → logprob: -1.603670597076416
    3. '_cost' → logprob: -1.603670597076416
    4. ' =' → logprob: -1.853670597076416
    5. '_path' → logprob: -2.728670597076416
    6. '_distance' → logprob: -3.103670597076416
    7. ',' → logprob: -3.353670597076416
    8. '_price' → logprob: -4.478670597076416
    9. '_paths' → logprob: -4.853670597076416
    10. 's' → logprob: -5.228670597076416

Token 754: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.5528415441513062
    2. 's' → logprob: -1.1778415441513062
    3. 'ans' → logprob: -3.5528416633605957
    4. 'd' → logprob: -4.177841663360596
    5. 'dp' → logprob: -4.552841663360596
    6. 'yen' → logprob: -5.052841663360596
    7. 'y' → logprob: -5.677841663360596
    8. 'at' → logprob: -5.802841663360596
    9. 'dist' → logprob: -5.927841663360596
    10. '_s' → logprob: -6.052841663360596

Token 755: 'uke' (ID: 10307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.322843074798584
    2. 'uke' → logprob: -1.822843074798584
    3. 'uk' → logprob: -1.947843074798584
    4. 'ow' → logprob: -2.072843074798584
    5. 'u' → logprob: -2.072843074798584
    6. 'o' → logprob: -3.322843074798584
    7. ',' → logprob: -3.822843074798584
    8. 'ee' → logprob: -4.197843074798584
    9. '_' → logprob: -4.447843074798584
    10. ' =' → logprob: -4.447843074798584

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6213082671165466
    2. '=' → logprob: -0.8713082671165466
    3. ',' → logprob: -3.1213083267211914
    4. '<|end|>' → logprob: -9.246308326721191
    5. ' ,' → logprob: -10.871308326721191
    6. ' ' → logprob: -11.246308326721191
    7. '<|end|>' → logprob: -11.496308326721191
    8. '_cost' → logprob: -11.496308326721191
    9. 's' → logprob: -11.871308326721191
    10. '=[]' → logprob: -11.996308326721191

Token 757: ' create' (ID: 2501)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7600032091140747
    2. '0' → logprob: -1.0100032091140747
    3. '[n' → logprob: -2.885003089904785
    4. 'D' → logprob: -3.135003089904785
    5. '[D' → logprob: -3.510003089904785
    6. '[],' → logprob: -4.260003089904785
    7. '[s' → logprob: -4.510003089904785
    8. 'n' → logprob: -5.885003089904785
    9. '[d' → logprob: -5.885003089904785
    10. '[y' → logprob: -6.635003089904785

Token 758: '_d' (ID: 1565)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4691483676433563
    2. '(n' → logprob: -2.0941483974456787
    3. '[n' → logprob: -2.9691483974456787
    4. '[D' → logprob: -3.5941483974456787
    5. '[' → logprob: -3.9691483974456787
    6. '_graph' → logprob: -4.0941481590271
    7. '([' → logprob: -4.0941481590271
    8. 'graph' → logprob: -4.0941481590271
    9. 'Graph' → logprob: -4.7191481590271
    10. '(D' → logprob: -4.8441481590271

Token 759: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.08850083500146866
    2. 'istance' → logprob: -2.963500738143921
    3. 'ist' → logprob: -4.5885009765625
    4. 'st' → logprob: -5.5885009765625
    5. 'list' → logprob: -5.9635009765625
    6. 't' → logprob: -6.4635009765625
    7. '_list' → logprob: -6.4635009765625
    8. 'ef' → logprob: -6.5885009765625
    9. 'ict' → logprob: -6.7135009765625
    10. '_lists' → logprob: -6.9635009765625

Token 760: '_instances' (ID: 108386)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09831688553094864
    2. 's' → logprob: -2.8483169078826904
    3. '(n' → logprob: -3.5983169078826904
    4. '(' → logprob: -5.473316669464111
    5. 'es' → logprob: -6.973316669464111
    6. '()
' → logprob: -7.223316669464111
    7. '('' → logprob: -7.973316669464111
    8. '(D' → logprob: -8.09831714630127
    9. '()(' → logprob: -8.22331714630127
    10. 'graphs' → logprob: -8.84831714630127

Token 761: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36028432846069336
    2. '(n' → logprob: -1.4852843284606934
    3. '(' → logprob: -2.7352843284606934
    4. '()
' → logprob: -4.735284328460693
    5. ' =' → logprob: -7.235284328460693
    6. ' (' → logprob: -7.735284328460693
    7. ' ()' → logprob: -7.860284328460693
    8. '(y' → logprob: -8.360284805297852
    9. '=' → logprob: -8.735284805297852
    10. '   ' → logprob: -9.485284805297852

Token 762: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032937146723270416
    2. ',' → logprob: -3.5329370498657227
    3. '()' → logprob: -5.782937049865723
    4. '())' → logprob: -9.782937049865723
    5. ' )' → logprob: -11.532937049865723
    6. '(),' → logprob: -11.657937049865723
    7. ')
' → logprob: -11.782937049865723
    8. '[' → logprob: -12.907937049865723
    9. '(' → logprob: -13.032937049865723
    10. ',)' → logprob: -13.157937049865723

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040307849645614624
    2. '    
' → logprob: -4.540307998657227
    3. ',' → logprob: -4.665307998657227
    4. '
' → logprob: -5.415307998657227
    5. 'y' → logprob: -5.540307998657227
    6. 'def' → logprob: -6.415307998657227
    7. ' for' → logprob: -6.790307998657227
    8. 'for' → logprob: -7.040307998657227
    9. 'yen' → logprob: -7.040307998657227
    10. ' 
' → logprob: -7.165307998657227

Token 764: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023685645312070847
    2. '   ' → logprob: -3.8986856937408447
    3. ' for' → logprob: -6.273685455322266
    4. 'yen' → logprob: -7.398685455322266
    5. 'def' → logprob: -8.023685455322266
    6. '```' → logprob: -8.398685455322266
    7. 'y' → logprob: -11.398685455322266
    8. '	for' → logprob: -11.898685455322266
    9. '
' → logprob: -12.023685455322266
    10. ' ' → logprob: -12.398685455322266

Token 765: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.24874818325042725
    2. '(' → logprob: -2.998748302459717
    3. '_paths' → logprob: -3.123748302459717
    4. '(m' → logprob: -3.498748302459717
    5. '_' → logprob: -3.748748302459717
    6. '_path' → logprob: -3.998748302459717
    7. '_edge' → logprob: -4.123748302459717
    8. '_graph' → logprob: -4.498748302459717
    9. '(n' → logprob: -5.248748302459717
    10. '_m' → logprob: -5.498748302459717

Token 766: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.041833437979221344
    2. '(' → logprob: -3.4168334007263184
    3. '(n' → logprob: -4.916833400726318
    4. 'for' → logprob: -8.541833877563477
    5. '(edges' → logprob: -8.666833877563477
    6. '   ' → logprob: -9.291833877563477
    7. '(y' → logprob: -9.666833877563477
    8. ' =' → logprob: -10.166833877563477
    9. '=' → logprob: -10.416833877563477
    10. 'def' → logprob: -10.541833877563477

Token 767: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6331432461738586
    2. ')' → logprob: -0.7581432461738586
    3. '   ' → logprob: -8.508143424987793
    4. ')
' → logprob: -9.508143424987793
    5. ' ,' → logprob: -10.008143424987793
    6. ',n' → logprob: -10.008143424987793
    7. 'n' → logprob: -10.633143424987793
    8. ',y' → logprob: -11.008143424987793
    9. ' )' → logprob: -11.133143424987793
    10. ')n' → logprob: -11.133143424987793

Token 768: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.04863550886511803
    2. 's' → logprob: -3.173635482788086
    3. 'n' → logprob: -5.548635482788086
    4. ' yen' → logprob: -6.673635482788086
    5. 'read' → logprob: -8.798635482788086
    6. 't' → logprob: -9.923635482788086
    7. 'y' → logprob: -10.673635482788086
    8. 'ny' → logprob: -10.673635482788086
    9. 'yan' → logprob: -10.798635482788086
    10. 'sn' → logprob: -11.173635482788086

Token 769: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010354319238103926
    2. ')' → logprob: -9.750103950500488
    3. ' ,' → logprob: -10.750103950500488
    4. '   ' → logprob: -11.375103950500488
    5. ',s' → logprob: -12.375103950500488
    6. ',y' → logprob: -12.750103950500488
    7. ',
' → logprob: -13.375103950500488
    8. 'y' → logprob: -14.250103950500488
    9. 's' → logprob: -14.250103950500488
    10. ',n' → logprob: -14.500103950500488

Token 770: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.00395539402961731
    2. ' sn' → logprob: -5.628955364227295
    3. 's' → logprob: -8.003955841064453
    4. 't' → logprob: -11.128955841064453
    5. '   ' → logprob: -13.878955841064453
    6. ' ' → logprob: -14.003955841064453
    7. 'yen' → logprob: -14.378955841064453
    8. ')' → logprob: -14.628955841064453
    9. 'n' → logprob: -14.753955841064453
    10. 'snake' → logprob: -14.878955841064453

Token 771: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.00011307948443572968
    2. 'uk' → logprob: -9.500113487243652
    3. 'u' → logprob: -10.250113487243652
    4. '
' → logprob: -14.625113487243652
    5. '_' → logprob: -15.000113487243652
    6. '   ' → logprob: -15.000113487243652
    7. '```' → logprob: -15.750113487243652
    8. 'n' → logprob: -16.125112533569336
    9. 'ake' → logprob: -16.125112533569336
    10. '...' → logprob: -16.250112533569336

Token 772: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2346843183040619
    2. ',' → logprob: -1.6096843481063843
    3. '<|end|>' → logprob: -4.859684467315674
    4. 'def' → logprob: -7.234684467315674
    5. '   ' → logprob: -7.734684467315674
    6. '<|end|>' → logprob: -9.609683990478516
    7. ')
' → logprob: -10.109683990478516
    8. ');' → logprob: -10.359683990478516
    9. '```' → logprob: -10.609683990478516
    10. ',
' → logprob: -11.109683990478516

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07735355943441391
    2. 'def' → logprob: -2.7023534774780273
    3. '
' → logprob: -5.952353477478027
    4. '<|end|>' → logprob: -6.327353477478027
    5. '```' → logprob: -7.327353477478027
    6. ' for' → logprob: -7.452353477478027
    7. ' def' → logprob: -7.452353477478027
    8. '    
' → logprob: -7.702353477478027
    9. 'for' → logprob: -8.327353477478027
    10. ',' → logprob: -9.577353477478027

Token 774: ' s' (ID: 265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9541425704956055
    2. 'ans' → logprob: -1.5791425704956055
    3. 'for' → logprob: -2.4541425704956055
    4. 'd' → logprob: -2.5791425704956055
    5. 'answer' → logprob: -3.2041425704956055
    6. 'cost' → logprob: -3.2041425704956055
    7. 'dp' → logprob: -3.3291425704956055
    8. 'def' → logprob: -3.5791425704956055
    9. 'res' → logprob: -4.0791425704956055
    10. 'result' → logprob: -4.5791425704956055

Token 775: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22529958188533783
    2. ' =' → logprob: -2.100299596786499
    3. '_' → logprob: -3.600299596786499
    4. 'p' → logprob: -4.97529935836792
    5. 't' → logprob: -4.97529935836792
    6. ' ,' → logprob: -5.22529935836792
    7. '_,' → logprob: -5.35029935836792
    8. '=' → logprob: -5.47529935836792
    9. '_distance' → logprob: -5.85029935836792
    10. '_dist' → logprob: -6.60029935836792

Token 776: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.28115609288215637
    2. ' t' → logprob: -1.406156063079834
    3. 's' → logprob: -13.656156539916992
    4. '_t' → logprob: -14.406156539916992
    5. ' ' → logprob: -14.531156539916992
    6. ' s' → logprob: -14.906156539916992
    7. '   ' → logprob: -14.906156539916992
    8. '_' → logprob: -15.031156539916992
    9. 'def' → logprob: -15.031156539916992
    10. '`t' → logprob: -15.031156539916992

Token 777: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40709832310676575
    2. ' =' → logprob: -1.4070982933044434
    3. '<|end|>' → logprob: -2.5320982933044434
    4. '=' → logprob: -5.282098293304443
    5. 'def' → logprob: -6.532098293304443
    6. ')' → logprob: -7.532098293304443
    7. '<|end|>' → logprob: -7.657098293304443
    8. '
' → logprob: -7.657098293304443
    9. 'print' → logprob: -8.032098770141602
    10. ' ' → logprob: -8.032098770141602

Token 778: ' adjust' (ID: 10266)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06625445187091827
    2. 't' → logprob: -3.3162543773651123
    3. ' s' → logprob: -4.441254615783691
    4. 'map' → logprob: -5.066254615783691
    5. 'int' → logprob: -5.816254615783691
    6. 'min' → logprob: -6.316254615783691
    7. '(s' → logprob: -6.691254615783691
    8. ' t' → logprob: -7.066254615783691
    9. 'adjust' → logprob: -7.066254615783691
    10. ' map' → logprob: -7.691254615783691

Token 779: '_node' (ID: 11390)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3838254511356354
    2. '_indices' → logprob: -1.383825421333313
    3. '_input' → logprob: -3.1338255405426025
    4. '_indexes' → logprob: -4.508825302124023
    5. '_nodes' → logprob: -5.883825302124023
    6. '_inputs' → logprob: -6.133825302124023
    7. 'indices' → logprob: -6.258825302124023
    8. '_coordinates' → logprob: -6.758825302124023
    9. '_index' → logprob: -7.008825302124023
    10. '(t' → logprob: -7.133825302124023

Token 780: '_indices' (ID: 43508)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36593762040138245
    2. '_indices' → logprob: -1.36593759059906
    3. 'indices' → logprob: -4.11593770980835
    4. '_indexes' → logprob: -4.49093770980835
    5. '_ids' → logprob: -4.61593770980835
    6. '_numbers' → logprob: -4.74093770980835
    7. ' indices' → logprob: -6.36593770980835
    8. 'indexes' → logprob: -6.99093770980835
    9. '_values' → logprob: -7.74093770980835
    10. '_index' → logprob: -7.99093770980835

Token 781: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0019769303034991026
    2. '(' → logprob: -6.25197696685791
    3. '(n' → logprob: -10.75197696685791
    4. 's' → logprob: -11.37697696685791
    5. ' (' → logprob: -11.87697696685791
    6. '(t' → logprob: -12.50197696685791
    7. '((' → logprob: -13.12697696685791
    8. '(
' → logprob: -14.12697696685791
    9. '(-' → logprob: -14.50197696685791
    10. '()' → logprob: -15.25197696685791

Token 782: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13108429312705994
    2. ' -' → logprob: -2.1310842037200928
    3. ',' → logprob: -5.506084442138672
    4. ')' → logprob: -9.631084442138672
    5. '   ' → logprob: -11.756084442138672
    6. '),' → logprob: -12.881084442138672
    7. '```' → logprob: -13.131084442138672
    8. ' ' → logprob: -13.256084442138672
    9. 'def' → logprob: -13.506084442138672
    10. '–' → logprob: -13.881084442138672

Token 783: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006717386189848185
    2. ' t' → logprob: -5.006717205047607
    3. '   ' → logprob: -13.631717681884766
    4. 'n' → logprob: -15.006717681884766
    5. 's' → logprob: -15.381717681884766
    6. ' ' → logprob: -16.631717681884766
    7. '1' → logprob: -16.881717681884766
    8. ',' → logprob: -17.131717681884766
    9. '-' → logprob: -17.131717681884766
    10. '	t' → logprob: -17.381717681884766

Token 784: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8636096119880676
    2. '
' → logprob: -1.3636095523834229
    3. ')' → logprob: -2.113609552383423
    4. ')
' → logprob: -2.488609552383423
    5. ',' → logprob: -2.613609552383423
    6. 'def' → logprob: -3.863609552383423
    7. '<|end|>' → logprob: -4.113609790802002
    8. '+' → logprob: -6.113609790802002
    9. '    
' → logprob: -6.613609790802002
    10. ' +' → logprob: -6.738609790802002

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00479227676987648
    2. 'def' → logprob: -6.004792213439941
    3. 'yen' → logprob: -7.504792213439941
    4. 'd' → logprob: -7.754792213439941
    5. '    
' → logprob: -8.129792213439941
    6. '```' → logprob: -8.254792213439941
    7. '
' → logprob: -8.879792213439941
    8. ',' → logprob: -9.379792213439941
    9. 'y' → logprob: -9.754792213439941
    10. 'for' → logprob: -9.879792213439941

Token 786: ' ye' (ID: 9225)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2889859974384308
    2. 'd' → logprob: -2.2889859676361084
    3. 'yen' → logprob: -2.7889859676361084
    4. 'ans' → logprob: -3.6639859676361084
    5. 'cost' → logprob: -3.9139859676361084
    6. 'dp' → logprob: -4.5389862060546875
    7. 'def' → logprob: -4.7889862060546875
    8. 'distance' → logprob: -5.5389862060546875
    9. '   ' → logprob: -5.9139862060546875
    10. 'for' → logprob: -6.0389862060546875

Token 787: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.25
    3. ' n' → logprob: -17.5
    4. 'ndef' → logprob: -17.75
    5. 'ns' → logprob: -18.25
    6. 'н' → logprob: -18.25
    7. 'ndata' → logprob: -18.375
    8. 'nable' → logprob: -18.625
    9. 'ン' → logprob: -18.75
    10. '	n' → logprob: -18.75

Token 788: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0020362993236631155
    2. ' yen' → logprob: -6.252036094665527
    3. 'y' → logprob: -9.627036094665527
    4. '   ' → logprob: -11.502036094665527
    5. 'n' → logprob: -11.502036094665527
    6. 'ven' → logprob: -12.752036094665527
    7. 'yer' → logprob: -13.252036094665527
    8. '  ' → logprob: -13.252036094665527
    9. 'yan' → logprob: -13.502036094665527
    10. '[' → logprob: -13.752036094665527

Token 789: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -0.004499904345721006
    2. 'short' → logprob: -5.504499912261963
    3. '._' → logprob: -8.754499435424805
    4. '_short' → logprob: -8.879499435424805
    5. '.s' → logprob: -10.254499435424805
    6. '.V' → logprob: -10.629499435424805
    7. '.shortcuts' → logprob: -11.254499435424805
    8. '	short' → logprob: -11.254499435424805
    9. '.Short' → logprob: -12.129499435424805
    10. '.' → logprob: -12.129499435424805

Token 790: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.000206401280593127
    2. '_path' → logprob: -8.875205993652344
    3. 'ort' → logprob: -9.750205993652344
    4. 'path' → logprob: -12.500205993652344
    5. 'test' → logprob: -12.875205993652344
    6. 't' → logprob: -14.375205993652344
    7. '```' → logprob: -15.000205993652344
    8. 'rest' → logprob: -15.500205993652344
    9. 'iest' → logprob: -16.375205993652344
    10. 'ert' → logprob: -16.500205993652344

Token 791: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -2.935296834039036e-06
    2. '_distance' → logprob: -13.50000286102295
    3. '_' → logprob: -14.62500286102295
    4. 'path' → logprob: -15.12500286102295
    5. '_point' → logprob: -15.50000286102295
    6. '_paths' → logprob: -16.000003814697266
    7. '_to' → logprob: -16.625003814697266
    8. '_p' → logprob: -16.625003814697266
    9. '__' → logprob: -16.875003814697266
    10. '```' → logprob: -17.750003814697266

Token 792: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.759734732331708e-05
    2. 's' → logprob: -11.750017166137695
    3. '(' → logprob: -12.125017166137695
    4. '(t' → logprob: -12.500017166137695
    5. 't' → logprob: -15.500017166137695
    6. ' (' → logprob: -15.750017166137695
    7. '(n' → logprob: -17.250017166137695
    8. '(S' → logprob: -17.500017166137695
    9. '((' → logprob: -17.875017166137695
    10. '   ' → logprob: -18.250017166137695

Token 793: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1512272208929062
    2. ')' → logprob: -2.0262272357940674
    3. ')[' → logprob: -4.901226997375488
    4. ')
' → logprob: -6.901226997375488
    5. ')

' → logprob: -10.526226997375488
    6. ' )
' → logprob: -11.401226997375488
    7. '[t' → logprob: -11.401226997375488
    8. ')t' → logprob: -11.901226997375488
    9. 't' → logprob: -12.401226997375488
    10. '[' → logprob: -13.026226997375488

Token 794: '   ' (ID: 271)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.4283965528011322
    2. '   ' → logprob: -1.8033965826034546
    3. 'su' → logprob: -2.053396463394165
    4. ' sn' → logprob: -3.178396463394165
    5. ' ' → logprob: -5.178396701812744
    6. ' su' → logprob: -5.803396701812744
    7. 's' → logprob: -6.303396701812744
    8. 'sk' → logprob: -6.928396701812744
    9. '       ' → logprob: -7.178396701812744
    10. '  ' → logprob: -7.428396701812744

Token 795: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' (adapté à ' sn') → logprob: -0.012986444868147373
    2. 'su' → logprob: -4.387986660003662
    3. 'sk' → logprob: -8.762986183166504
    4. 's' → logprob: -8.762986183166504
    5. ' sn' → logprob: -10.387986183166504
    6. 'es' → logprob: -10.387986183166504
    7. '   ' → logprob: -10.512986183166504
    8. 'nu' → logprob: -11.262986183166504
    9. 'ys' → logprob: -11.387986183166504
    10. 'tn' → logprob: -11.762986183166504

Token 796: ' =' (ID: 314)
  Prédit: 'uke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uke' → logprob: -9.829823102336377e-05
    2. 'u' → logprob: -9.62509822845459
    3. 'uk' → logprob: -10.37509822845459
    4. '```' → logprob: -15.37509822845459
    5. '   ' → logprob: -15.62509822845459
    6. ' uke' → logprob: -16.375099182128906
    7. '_' → logprob: -16.875099182128906
    8. 's' → logprob: -17.125099182128906
    9. 'une' → logprob: -17.375099182128906
    10. 'uhe' → logprob: -17.375099182128906

Token 797: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.008853639476001263
    2. ' sn' → logprob: -4.758853435516357
    3. 'n' → logprob: -8.508853912353516
    4. '_sn' → logprob: -10.758853912353516
    5. '(sn' → logprob: -12.383853912353516
    6. 'snake' → logprob: -12.508853912353516
    7. '.sn' → logprob: -13.008853912353516
    8. 's' → logprob: -13.258853912353516
    9. 'sk' → logprob: -13.633853912353516
    10. '   ' → logprob: -14.508853912353516

Token 798: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.0022445812355726957
    2. 'uk' → logprob: -7.252244472503662
    3. 'short' → logprob: -7.627244472503662
    4. '.short' → logprob: -7.752244472503662
    5. '.' → logprob: -8.62724494934082
    6. '_short' → logprob: -9.87724494934082
    7. '```' → logprob: -10.00224494934082
    8. '   ' → logprob: -10.37724494934082
    9. '.sn' → logprob: -10.50224494934082
    10. 'u' → logprob: -10.50224494934082

Token 799: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -5.371605948312208e-05
    2. '.' → logprob: -11.125053405761719
    3. '.shortcuts' → logprob: -11.375053405761719
    4. 'short' → logprob: -11.375053405761719
    5. ' .' → logprob: -11.875053405761719
    6. '.s' → logprob: -13.000053405761719
    7. '.long' → logprob: -13.125053405761719
    8. '	short' → logprob: -14.125053405761719
    9. '.next' → logprob: -14.625053405761719
    10. '.readline' → logprob: -14.750053405761719

Token 800: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.005636997055262327
    2. 't' → logprob: -5.880637168884277
    3. 'test' → logprob: -5.880637168884277
    4. '_path' → logprob: -10.380637168884277
    5. 'path' → logprob: -14.005637168884277
    6. 'st' → logprob: -14.130637168884277
    7. '```' → logprob: -14.130637168884277
    8. '_test' → logprob: -14.505637168884277
    9. 'ort' → logprob: -14.505637168884277
    10. '_est' → logprob: -15.755637168884277

Token 801: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -6.670925358776003e-05
    2. 'path' → logprob: -9.625066757202148
    3. 't' → logprob: -17.00006675720215
    4. ' path' → logprob: -17.12506675720215
    5. 'spath' → logprob: -17.25006675720215
    6. 'Path' → logprob: -17.37506675720215
    7. 'ed' → logprob: -17.50006675720215
    8. '_paths' → logprob: -17.50006675720215
    9. '-path' → logprob: -17.62506675720215
    10. '_route' → logprob: -17.75006675720215

Token 802: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -3.833878508885391e-05
    2. '(s' → logprob: -10.375038146972656
    3. 't' → logprob: -12.000038146972656
    4. '(' → logprob: -14.875038146972656
    5. ' (' → logprob: -15.250038146972656
    6. 's' → logprob: -15.625038146972656
    7. 'def' → logprob: -16.875038146972656
    8. '(
' → logprob: -17.250038146972656
    9. ' t' → logprob: -17.375038146972656
    10. '   ' → logprob: -18.750038146972656

Token 803: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.792751032160595e-05
    2. ')
' → logprob: -9.37508773803711
    3. ' )' → logprob: -14.12508773803711
    4. '   ' → logprob: -14.37508773803711
    5. ')[' → logprob: -14.87508773803711
    6. ')

' → logprob: -15.37508773803711
    7. '<|end|>' → logprob: -15.37508773803711
    8. '())' → logprob: -15.50008773803711
    9. '[' → logprob: -15.87508773803711
    10. '[])' → logprob: -16.25008773803711

Token 804: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0394323356449604
    2. '<|end|>' → logprob: -3.5394322872161865
    3. '
' → logprob: -4.789432525634766
    4. '    
' → logprob: -7.914432525634766
    5. '```' → logprob: -8.289432525634766
    6. 'def' → logprob: -9.039432525634766
    7. '[' → logprob: -9.164432525634766
    8. '<|end|>' → logprob: -9.414432525634766
    9. ')' → logprob: -10.164432525634766
    10. ' for' → logprob: -10.351932525634766

Token 805: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.29023638367652893
    2. 'answer' (adapté à ' answer') → logprob: -1.7902363538742065
    3. 'res' → logprob: -3.040236473083496
    4. 'result' → logprob: -3.915236473083496
    5. 'min' → logprob: -4.290236473083496
    6. 'for' → logprob: -6.915236473083496
    7. 'max' → logprob: -7.540236473083496
    8. 'print' → logprob: -7.790236473083496
    9. 'ret' → logprob: -8.540236473083496
    10. 'dist' → logprob: -8.915236473083496

Token 806: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002336758654564619
    2. '=' → logprob: -6.1273369789123535
    3. '_' → logprob: -9.877336502075195
    4. 's' → logprob: -10.377336502075195
    5. '   ' → logprob: -11.127336502075195
    6. '[' → logprob: -11.502336502075195
    7. '[]' → logprob: -12.127336502075195
    8. ' ' → logprob: -12.127336502075195
    9. ' =[' → logprob: -12.252336502075195
    10. '.' → logprob: -12.377336502075195

Token 807: ' process' (ID: 2273)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28577491641044617
    2. 'min' → logprob: -1.4107749462127686
    3. 'max' → logprob: -6.5357747077941895
    4. 'float' → logprob: -6.6607747077941895
    5. '[' → logprob: -6.9107747077941895
    6. '[min' → logprob: -7.9107747077941895
    7. 'None' → logprob: -8.660775184631348
    8. ' min' → logprob: -9.660775184631348
    9. '(' → logprob: -9.660775184631348
    10. '```' → logprob: -10.285775184631348

Token 808: '_cost' (ID: 36820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4878144860267639
    2. '(lambda' → logprob: -2.487814426422119
    3. '[' → logprob: -3.112814426422119
    4. '(y' → logprob: -3.612814426422119
    5. '_answer' → logprob: -3.612814426422119
    6. '(s' → logprob: -3.737814426422119
    7. '_' → logprob: -3.862814426422119
    8. ' (' → logprob: -3.862814426422119
    9. '   ' → logprob: -3.987814426422119
    10. ' =' → logprob: -4.362814426422119

Token 809: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.043044090270996
    2. '(' → logprob: -1.668044090270996
    3. '_list' → logprob: -2.293044090270996
    4. '[' → logprob: -2.918044090270996
    5. '(y' → logprob: -2.918044090270996
    6. '[]' → logprob: -3.168044090270996
    7. '(n' → logprob: -3.543044090270996
    8. ' =' → logprob: -3.918044090270996
    9. '_array' → logprob: -4.043044090270996
    10. '_sum' → logprob: -4.418044090270996

Token 810: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031864676624536514
    2. '(y' → logprob: -3.656864643096924
    3. '(lambda' → logprob: -6.281864643096924
    4. ' (' → logprob: -6.406864643096924
    5. '(n' → logprob: -7.656864643096924
    6. '   ' → logprob: -7.781864643096924
    7. '[' → logprob: -8.281865119934082
    8. '(len' → logprob: -8.406865119934082
    9. '(
' → logprob: -8.781865119934082
    10. '([' → logprob: -8.906865119934082

Token 811: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000897289311978966
    2. '   ' → logprob: -8.250897407531738
    3. ' ,' → logprob: -8.250897407531738
    4. ',y' → logprob: -8.250897407531738
    5. 'yen' → logprob: -10.125897407531738
    6. ')' → logprob: -10.250897407531738
    7. 'y' → logprob: -10.750897407531738
    8. ',
' → logprob: -11.875897407531738
    9. 'yer' → logprob: -13.500897407531738
    10. 'ye' → logprob: -13.500897407531738

Token 812: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.0036891514901071787
    2. 'yen' → logprob: -5.878689289093018
    3. 'y' → logprob: -7.753689289093018
    4. 's' → logprob: -8.37868881225586
    5. ' ye' → logprob: -9.00368881225586
    6. 'sn' → logprob: -10.25368881225586
    7. 'ys' → logprob: -11.25368881225586
    8. '   ' → logprob: -11.62868881225586
    9. ' yen' → logprob: -11.62868881225586
    10. 'yn' → logprob: -11.75368881225586

Token 813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001843485952122137
    2. ',
' → logprob: -10.000184059143066
    3. ',s' → logprob: -10.250184059143066
    4. ' ,' → logprob: -10.375184059143066
    5. '   ' → logprob: -10.625184059143066
    6. ')' → logprob: -11.500184059143066
    7. ',y' → logprob: -11.625184059143066
    8. 'sn' → logprob: -12.250184059143066
    9. 't' → logprob: -12.500184059143066
    10. '-' → logprob: -12.625184059143066

Token 814: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.0024762547109276056
    2. ' sn' → logprob: -6.002476215362549
    3. '(sn' → logprob: -15.502476692199707
    4. 's' → logprob: -15.752476692199707
    5. '_sn' → logprob: -16.50247573852539
    6. '   ' → logprob: -16.87747573852539
    7. 'n' → logprob: -18.12747573852539
    8. ' ' → logprob: -18.50247573852539
    9. 'Sn' → logprob: -18.62747573852539
    10. 'sns' → logprob: -18.62747573852539

Token 815: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06865552067756653
    2. ',' → logprob: -2.818655490875244
    3. ')
' → logprob: -5.318655490875244
    4. '   ' → logprob: -6.568655490875244
    5. '<|end|>' → logprob: -8.943655967712402
    6. 'def' → logprob: -10.068655967712402
    7. ')
' → logprob: -10.318655967712402
    8. ',y' → logprob: -10.443655967712402
    9. 'n' → logprob: -10.943655967712402
    10. ',n' → logprob: -11.318655967712402

Token 816: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22236420214176178
    2. '   ' → logprob: -1.8473641872406006
    3. '
' → logprob: -4.09736442565918
    4. '<|end|>' → logprob: -4.34736442565918
    5. '```' → logprob: -4.59736442565918
    6. 'if' → logprob: -8.34736442565918
    7. '()' → logprob: -8.34736442565918
    8. ')' → logprob: -9.09736442565918
    9. ' ' → logprob: -9.09736442565918
    10. '<|end|>' → logprob: -9.09736442565918

Token 817: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.061452705413103104
    2. 'return' → logprob: -3.311452627182007
    3. '   ' → logprob: -3.811452627182007
    4. ' print' → logprob: -7.811452865600586
    5. 'for' → logprob: -8.311452865600586
    6. ' return' → logprob: -8.561452865600586
    7. 'def' → logprob: -8.936452865600586
    8. '
' → logprob: -10.936452865600586
    9. '```' → logprob: -11.811452865600586
    10. '    
' → logprob: -11.936452865600586

Token 818: '_result' (ID: 11623)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0019204332493245602
    2. '(' → logprob: -6.376920223236084
    3. 'answer' → logprob: -9.251920700073242
    4. '(ans' → logprob: -10.001920700073242
    5. '_answer' → logprob: -10.501920700073242
    6. '()' → logprob: -11.126920700073242
    7. '(output' → logprob: -11.876920700073242
    8. ' (' → logprob: -12.501920700073242
    9. '```' → logprob: -12.751920700073242
    10. '(
' → logprob: -13.251920700073242

Token 819: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.017143864184617996
    2. '()' → logprob: -4.392143726348877
    3. '(' → logprob: -5.392143726348877
    4. '(ans' → logprob: -10.392144203186035
    5. '(output' → logprob: -10.517144203186035
    6. 'answer' → logprob: -12.767144203186035
    7. '```' → logprob: -13.142144203186035
    8. '(print' → logprob: -13.767144203186035
    9. '(question' → logprob: -14.392144203186035
    10. '();' → logprob: -14.517144203186035

Token 820: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -14.250012397766113
    4. '())' → logprob: -14.250012397766113
    5. '()' → logprob: -14.875012397766113
    6. '   ' → logprob: -16.000011444091797
    7. ')#' → logprob: -16.125011444091797
    8. ')`' → logprob: -16.875011444091797
    9. ')

' → logprob: -17.500011444091797
    10. '))' → logprob: -17.750011444091797

Token 821: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5721545219421387
    2. '<|end|>' → logprob: -1.5721545219421387
    3. '_' → logprob: -1.6971545219421387
    4. ')' → logprob: -2.0721545219421387
    5. ':' → logprob: -2.4471545219421387
    6. 'n' → logprob: -3.4471545219421387
    7. '(' → logprob: -3.5721545219421387
    8. ' ' → logprob: -3.6971545219421387
    9. '#' → logprob: -3.9471545219421387
    10. '[' → logprob: -4.072154521942139

Token 822: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.02263917773962021
    2. 'read' → logprob: -5.022639274597168
    3. '_' → logprob: -5.147639274597168
    4. ' main' → logprob: -5.147639274597168
    5. '__' → logprob: -6.772639274597168
    6. ' __' → logprob: -6.897639274597168
    7. ' _' → logprob: -6.897639274597168
    8. ' ' → logprob: -8.147639274597168
    9. '_read' → logprob: -8.522639274597168
    10. ' readline' → logprob: -9.147639274597168

Token 823: '_main' (ID: 23076)
  Prédit: '_main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_main' → logprob: -1.1994775377388578e-05
    2. 'main' → logprob: -11.375012397766113
    3. 'Main' → logprob: -16.125011444091797
    4. '_Main' → logprob: -16.125011444091797
    5. '(main' → logprob: -16.625011444091797
    6. '_MAIN' → logprob: -16.875011444091797
    7. ' main' → logprob: -17.375011444091797
    8. '(' → logprob: -18.500011444091797
    9. '_raw' → logprob: -18.875011444091797
    10. '_' → logprob: -18.875011444091797

Token 824: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.01419759076088667
    2. '_main' → logprob: -4.264197826385498
    3. '_inputs' → logprob: -10.51419734954834
    4. '_in' → logprob: -12.76419734954834
    5. '_line' → logprob: -13.76419734954834
    6. '_' → logprob: -14.13919734954834
    7. '_raw' → logprob: -14.26419734954834
    8. 'input' → logprob: -15.01419734954834
    9. '_output' → logprob: -15.51419734954834
    10. '```' → logprob: -15.88919734954834

Token 825: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0031830633524805307
    2. '():
' → logprob: -5.753182888031006
    3. ' ():' → logprob: -13.003183364868164
    4. '()' → logprob: -13.378183364868164
    5. '():

' → logprob: -13.753183364868164
    6. '():
' → logprob: -15.003183364868164
    7. '()>' → logprob: -16.128183364868164
    8. '()">' → logprob: -17.753183364868164
    9. '();' → logprob: -18.003183364868164
    10. '(' → logprob: -18.253183364868164

Token 826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006272878497838974
    2. 'n' → logprob: -5.131272792816162
    3. ' n' → logprob: -8.13127326965332
    4. 'return' → logprob: -11.00627326965332
    5. '	n' → logprob: -11.63127326965332
    6. '```' → logprob: -11.88127326965332
    7. '   ' → logprob: -12.00627326965332
    8. ' return' → logprob: -13.00627326965332
    9. '_n' → logprob: -13.50627326965332
    10. '()' → logprob: -13.75627326965332

Token 827: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.733694851398468
    2. 'map' → logprob: -0.733694851398468
    3. 'tuple' → logprob: -3.6086947917938232
    4. 'return' → logprob: -4.483695030212402
    5. 'list' → logprob: -7.733695030212402
    6. '   ' → logprob: -8.483695030212402
    7. 'line' → logprob: -8.983695030212402
    8. 'l' → logprob: -9.233695030212402
    9. ' n' → logprob: -9.483695030212402
    10. 'a' → logprob: -9.483695030212402

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. '=' → logprob: -9.00019359588623
    3. ' =' → logprob: -10.12519359588623
    4. ' ,' → logprob: -11.25019359588623
    5. ',m' → logprob: -11.37519359588623
    6. '<|end|>' → logprob: -13.50019359588623
    7. ',
' → logprob: -13.75019359588623
    8. '   ' → logprob: -13.87519359588623
    9. ',n' → logprob: -14.25019359588623
    10. ',s' → logprob: -14.75019359588623

Token 829: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06196768581867218
    2. ' m' → logprob: -2.811967611312866
    3. '    ' → logprob: -19.061967849731445
    4. '   ' → logprob: -19.061967849731445
    5. ',m' → logprob: -19.561967849731445
    6. '	m' → logprob: -19.561967849731445
    7. ' ' → logprob: -20.186967849731445
    8. '  ' → logprob: -20.186967849731445
    9. ' ' → logprob: -20.311967849731445
    10. ',' → logprob: -20.561967849731445

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008046864531934261
    2. '=' → logprob: -5.258046627044678
    3. ' =' → logprob: -5.883046627044678
    4. ',s' → logprob: -12.008047103881836
    5. '<|end|>' → logprob: -12.508047103881836
    6. ' ,' → logprob: -12.883047103881836
    7. '   ' → logprob: -13.133047103881836
    8. ',input' → logprob: -13.258047103881836
    9. '=input' → logprob: -13.383047103881836
    10. ',_' → logprob: -14.258047103881836

Token 831: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5280746817588806
    2. ' s' → logprob: -0.9030746817588806
    3. 'map' → logprob: -6.028074741363525
    4. 'k' → logprob: -7.528074741363525
    5. ' =' → logprob: -7.903074741363525
    6. ' k' → logprob: -8.403074264526367
    7. ' map' → logprob: -8.403074264526367
    8. '=' → logprob: -8.528074264526367
    9. '_' → logprob: -8.778074264526367
    10. '*' → logprob: -8.778074264526367

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1367078721523285
    2. '=' → logprob: -2.1367077827453613
    3. ' =' → logprob: -4.636707782745361
    4. '<|end|>' → logprob: -11.01170825958252
    5. '=
' → logprob: -12.01170825958252
    6. '   ' → logprob: -12.38670825958252
    7. ' ,' → logprob: -12.51170825958252
    8. ' =
' → logprob: -13.26170825958252
    9. ',
' → logprob: -13.26170825958252
    10. ')' → logprob: -13.38670825958252

Token 833: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141421258449554
    2. ' t' → logprob: -1.7014142274856567
    3. 'k' → logprob: -15.326414108276367
    4. ' =' → logprob: -15.326414108276367
    5. ' ' → logprob: -15.451414108276367
    6. '=' → logprob: -15.826414108276367
    7. 'int' → logprob: -17.076414108276367
    8. '   ' → logprob: -17.451414108276367
    9. 'T' → logprob: -17.701414108276367
    10. 'c' → logprob: -17.826414108276367

Token 834: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193870067596436
    2. ' =' → logprob: -1.5019387006759644
    3. ',' → logprob: -12.001938819885254
    4. '=input' → logprob: -12.876938819885254
    5. '=
' → logprob: -15.001938819885254
    6. ' =
' → logprob: -15.376938819885254
    7. '＝' → logprob: -15.626938819885254
    8. 'input' → logprob: -16.251937866210938
    9. ')' → logprob: -17.251937866210938
    10. '=int' → logprob: -17.876937866210938

Token 835: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009136092266999185
    2. ' map' → logprob: -7.000913619995117
    3. 'list' → logprob: -13.625913619995117
    4. 'tuple' → logprob: -14.375913619995117
    5. '	map' → logprob: -16.375913619995117
    6. '   ' → logprob: -17.125913619995117
    7. 'input' → logprob: -17.250913619995117
    8. '(map' → logprob: -18.000913619995117
    9. '[' → logprob: -18.375913619995117
    10. 'm' → logprob: -19.250913619995117

Token 836: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013464801304508
    2. 'int' → logprob: -9.000134468078613
    3. '(' → logprob: -11.750134468078613
    4. '(input' → logprob: -12.875134468078613
    5. ' int' → logprob: -15.625134468078613
    6. ',int' → logprob: -16.00013542175293
    7. 'input' → logprob: -16.12513542175293
    8. '<int' → logprob: -16.12513542175293
    9. '=int' → logprob: -16.37513542175293
    10. '(str' → logprob: -16.37513542175293

Token 837: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.18687690794467926
    2. 'input' → logprob: -2.3118770122528076
    3. ',' → logprob: -2.6868770122528076
    4. '(input' → logprob: -5.9368767738342285
    5. '   ' → logprob: -7.6868767738342285
    6. '(' → logprob: -9.811877250671387
    7. ' input' → logprob: -9.936877250671387
    8. '=input' → logprob: -10.936877250671387
    9. ' ,' → logprob: -11.436877250671387
    10. ')' → logprob: -11.436877250671387

Token 838: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. ',input' → logprob: -18.37509536743164
    4. '=input' → logprob: -19.12509536743164
    5. 'open' → logprob: -19.25009536743164
    6. '(input' → logprob: -20.12509536743164
    7. '   ' → logprob: -20.62509536743164
    8. ' ' → logprob: -20.62509536743164
    9. '	input' → logprob: -21.00009536743164
    10. '_input' → logprob: -21.12509536743164

Token 839: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -17.125003814697266
    4. '(' → logprob: -17.250003814697266
    5. '()
' → logprob: -19.750003814697266
    6. '.split' → logprob: -19.875003814697266
    7. '())' → logprob: -20.375003814697266
    8. 'split' → logprob: -21.000003814697266
    9. '().__' → logprob: -21.000003814697266
    10. '.' → logprob: -21.375003814697266

Token 840: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.2617008400848135e-05
    2. 'strip' → logprob: -10.375032424926758
    3. 'rstrip' → logprob: -14.500032424926758
    4. '(split' → logprob: -14.625032424926758
    5. ' split' → logprob: -15.500032424926758
    6. 'spl' → logprob: -16.000032424926758
    7. 's' → logprob: -17.375032424926758
    8. '().' → logprob: -19.000032424926758
    9. 'read' → logprob: -19.375032424926758
    10. '.split' → logprob: -19.625032424926758

Token 841: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38967978954315186
    2. ')' → logprob: -1.1396797895431519
    3. '()' → logprob: -5.889679908752441
    4. '(' → logprob: -11.139679908752441
    5. '))' → logprob: -11.139679908752441
    6. '()))' → logprob: -12.764679908752441
    7. '())
' → logprob: -13.014679908752441
    8. ' ())' → logprob: -14.264679908752441
    9. '(),' → logprob: -14.514679908752441
    10. ' )' → logprob: -14.764679908752441

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010452601127326488
    2. 'return' → logprob: -4.885452747344971
    3. ' return' → logprob: -5.885452747344971
    4. '	return' → logprob: -9.885452270507812
    5. ' ' → logprob: -12.635452270507812
    6. '       ' → logprob: -13.385452270507812
    7. ':return' → logprob: -13.635452270507812
    8. '  ' → logprob: -13.760452270507812
    9. '<|end|>' → logprob: -13.885452270507812
    10. '   ' → logprob: -13.885452270507812

Token 843: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.906711546937004e-05
    2. ' return' → logprob: -10.500048637390137
    3. '   ' → logprob: -10.750048637390137
    4. '	return' → logprob: -18.500049591064453
    5. '{return' → logprob: -19.375049591064453
    6. 'n' → logprob: -20.625049591064453
    7. ':return' → logprob: -20.625049591064453
    8. 'eturn' → logprob: -21.000049591064453
    9. '
' → logprob: -21.125049591064453
    10. ' ' → logprob: -21.125049591064453

Token 844: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.4391956685576588e-05
    2. ' n' → logprob: -10.750024795532227
    3. '(n' → logprob: -12.750024795532227
    4. '   ' → logprob: -18.500024795532227
    5. '	n' → logprob: -18.500024795532227
    6. ' (' → logprob: -19.625024795532227
    7. '[n' → logprob: -21.500024795532227
    8. ' ' → logprob: -22.000024795532227
    9. '_n' → logprob: -22.250024795532227
    10. '  ' → logprob: -22.375024795532227

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005264613428153098
    2. ',m' → logprob: -8.000526428222656
    3. ' ,' → logprob: -8.625526428222656
    4. ',n' → logprob: -11.750526428222656
    5. ',
' → logprob: -14.125526428222656
    6. '<|end|>' → logprob: -14.375526428222656
    7. '‌,' → logprob: -14.875526428222656
    8. '_,' → logprob: -15.000526428222656
    9. ',None' → logprob: -15.500526428222656
    10. '   ' → logprob: -15.625526428222656

Token 846: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931473612785339
    2. ' m' → logprob: -0.6931473612785339
    3. ' ' → logprob: -16.818147659301758
    4. ',' → logprob: -16.818147659301758
    5. ' ' → logprob: -17.568147659301758
    6. '	m' → logprob: -18.318147659301758
    7. ',m' → logprob: -18.693147659301758
    8. ' 
' → logprob: -19.193147659301758
    9. '<|end|>' → logprob: -19.193147659301758
    10. '```' → logprob: -19.818147659301758

Token 847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009052246809005737
    2. ' s' → logprob: -5.259052276611328
    3. 's' → logprob: -5.634052276611328
    4. ' ,' → logprob: -8.509052276611328
    5. ',s' → logprob: -10.259052276611328
    6. ' ' → logprob: -15.634052276611328
    7. '   ' → logprob: -16.509052276611328
    8. ',
' → logprob: -16.884052276611328
    9. '```' → logprob: -17.259052276611328
    10. '_,' → logprob: -17.384052276611328

Token 848: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019286326132714748
    2. ' s' → logprob: -6.251928806304932
    3. '	s' → logprob: -20.501928329467773
    4. ' ' → logprob: -22.001928329467773
    5. '{s' → logprob: -22.126928329467773
    6. '   ' → logprob: -22.376928329467773
    7. '    ' → logprob: -23.251928329467773
    8. 't' → logprob: -23.626928329467773
    9. '  ' → logprob: -23.626928329467773
    10. '(s' → logprob: -23.751928329467773

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018804390856530517
    2. ',t' → logprob: -8.875187873840332
    3. ' ,' → logprob: -10.000187873840332
    4. ',
' → logprob: -13.875187873840332
    5. '<|end|>' → logprob: -13.875187873840332
    6. '   ' → logprob: -15.375187873840332
    7. ',\
' → logprob: -15.875187873840332
    8. '‌,' → logprob: -16.50018882751465
    9. ',tp' → logprob: -16.75018882751465
    10. '```' → logprob: -16.87518882751465

Token 850: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5759404897689819
    2. 't' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.325940132141113
    4. ' ' → logprob: -15.325940132141113
    5. '	t' → logprob: -16.20094108581543
    6. '`t' → logprob: -16.82594108581543
    7. ' 
' → logprob: -17.82594108581543
    8. '_t' → logprob: -17.95094108581543
    9. '"' → logprob: -18.07594108581543
    10. '   ' → logprob: -18.57594108581543

Token 851: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05140095576643944
    2. '<|end|>' → logprob: -3.051400899887085
    3. '```' → logprob: -6.176401138305664
    4. '
' → logprob: -7.676401138305664
    5. '<|end|>' → logprob: -9.676401138305664
    6. ' def' → logprob: -10.176401138305664
    7. '\' → logprob: -10.176401138305664
    8. '[' → logprob: -10.301401138305664
    9. 'ndef' → logprob: -11.051401138305664
    10. '#' → logprob: -11.551401138305664

Token 853: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.00862320140004158
    2. ' create' → logprob: -4.758623123168945
    3. 'read' → logprob: -12.633623123168945
    4. 'main' → logprob: -12.758623123168945
    5. 'def' → logprob: -13.633623123168945
    6. 'reate' → logprob: -15.633623123168945
    7. 'parse' → logprob: -15.633623123168945
    8. '_create' → logprob: -15.883623123168945
    9. ' main' → logprob: -16.133623123168945
    10. '	create' → logprob: -16.383623123168945

Token 854: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.008580531924962997
    2. 'd' → logprob: -5.633580684661865
    3. 'def' → logprob: -5.883580684661865
    4. 'D' → logprob: -6.258580684661865
    5. 'n' → logprob: -9.883580207824707
    6. ' D' → logprob: -10.133580207824707
    7. '_D' → logprob: -10.633580207824707
    8. '```' → logprob: -10.883580207824707
    9. ' def' → logprob: -11.133580207824707
    10. ' d' → logprob: -11.133580207824707

Token 855: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -1.580929347255733e-05
    2. 'ijk' → logprob: -12.000016212463379
    3. 'ef' → logprob: -12.125016212463379
    4. 'ij' → logprob: -12.500016212463379
    5. '_' → logprob: -15.500016212463379
    6. 'f' → logprob: -16.125015258789062
    7. 'ijkl' → logprob: -16.500015258789062
    8. '```' → logprob: -17.750015258789062
    9. '_f' → logprob: -17.875015258789062
    10. 'create' → logprob: -18.125015258789062

Token 856: '_instances' (ID: 108386)
  Prédit: '_instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -0.0030449775513261557
    2. 'Instances' → logprob: -6.003045082092285
    3. 's' → logprob: -7.628045082092285
    4. 'instances' → logprob: -9.753045082092285
    5. '_' → logprob: -11.378045082092285
    6. '():' → logprob: -11.878045082092285
    7. '_s' → logprob: -13.503045082092285
    8. '()' → logprob: -13.878045082092285
    9. '():
' → logprob: -14.253045082092285
    10. '_inst' → logprob: -14.628045082092285

Token 857: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015038289711810648
    2. '(' → logprob: -8.875150680541992
    3. ' (' → logprob: -11.625150680541992
    4. '(N' → logprob: -14.375150680541992
    5. '(
' → logprob: -15.625150680541992
    6. '(num' → logprob: -15.750150680541992
    7. 'n' → logprob: -16.000150680541992
    8. '(size' → logprob: -16.375150680541992
    9. '(number' → logprob: -16.625150680541992
    10. 'def' → logprob: -17.375150680541992

Token 858: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.366022527217865
    2. '):
' → logprob: -1.2410225868225098
    3. '():
' → logprob: -4.86602258682251
    4. '():' → logprob: -4.86602258682251
    5. '()' → logprob: -6.74102258682251
    6. '()):
' → logprob: -7.24102258682251
    7. ')' → logprob: -10.116022109985352
    8. '):
' → logprob: -10.366022109985352
    9. '(n' → logprob: -10.491022109985352
    10. '   ' → logprob: -11.991022109985352

Token 859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011088147759437561
    2. 'return' → logprob: -5.2610883712768555
    3. 'yen' → logprob: -5.3860883712768555
    4. ' return' → logprob: -7.2610883712768555
    5. ' yen' → logprob: -7.7610883712768555
    6. 'yer' → logprob: -9.511088371276855
    7. 'y' → logprob: -10.511088371276855
    8. ' y' → logprob: -12.761088371276855
    9. '```' → logprob: -12.761088371276855
    10. ' ' → logprob: -12.761088371276855

Token 860: ' yen' (ID: 34890)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.46203041076660156
    2. 'yen' (adapté à ' yen') → logprob: -1.0870304107666016
    3. '(y' → logprob: -3.5870304107666016
    4. '(' → logprob: -5.712030410766602
    5. '(return' → logprob: -7.587030410766602
    6. '   ' → logprob: -8.587030410766602
    7. 'yer' → logprob: -8.712030410766602
    8. 'ye' → logprob: -8.962030410766602
    9. 'yan' → logprob: -9.212030410766602
    10. ' return' → logprob: -9.337030410766602

Token 861: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12548814713954926
    2. '=' → logprob: -2.250488042831421
    3. ',' → logprob: -4.37548828125
    4. 'y' → logprob: -14.25048828125
    5. ',y' → logprob: -14.62548828125
    6. '   ' → logprob: -14.62548828125
    7. '＝' → logprob: -15.12548828125
    8. 'return' → logprob: -15.25048828125
    9. ' ,' → logprob: -15.25048828125
    10. ' ' → logprob: -15.25048828125

Token 862: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.627176768844947e-05
    2. ' D' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.00009536743164
    4. ' ' → logprob: -18.12509536743164
    5. '	D' → logprob: -18.50009536743164
    6. '  ' → logprob: -19.50009536743164
    7. '=D' → logprob: -20.00009536743164
    8. 'class' → logprob: -20.75009536743164
    9. 'd' → logprob: -20.87509536743164
    10. '>D' → logprob: -21.12509536743164

Token 863: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: 0.0
    2. 'ijk' → logprob: -17.875
    3. 'ij' → logprob: -20.125
    4. 'ijks' → logprob: -21.625
    5. 'ijska' → logprob: -22.25
    6. 'jik' → logprob: -22.375
    7. 'ijkl' → logprob: -22.5
    8. '```' → logprob: -22.875
    9. 'i' → logprob: -23.0
    10. 'ijkt' → logprob: -23.125

Token 864: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.375004768371582
    3. '()' → logprob: -14.750004768371582
    4. ' (' → logprob: -15.750004768371582
    5. '((' → logprob: -17.7500057220459
    6. '(N' → logprob: -18.5000057220459
    7. '()(' → logprob: -18.5000057220459
    8. ')(' → logprob: -18.7500057220459
    9. '```' → logprob: -20.0000057220459
    10. '(
' → logprob: -20.0000057220459

Token 865: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029753385111689568
    2. ')' → logprob: -3.5297534465789795
    3. ')
' → logprob: -13.154753684997559
    4. ')

' → logprob: -14.904753684997559
    5. ' )
' → logprob: -15.029753684997559
    6. '),' → logprob: -15.029753684997559
    7. '   ' → logprob: -16.904752731323242
    8. ')n' → logprob: -18.779752731323242
    9. '())
' → logprob: -19.279752731323242
    10. ' )' → logprob: -19.529752731323242

Token 866: '   ' (ID: 271)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.47426286339759827
    2. '   ' → logprob: -0.9742628335952759
    3. ' sn' → logprob: -8.599263191223145
    4. '_sn' → logprob: -13.849263191223145
    5. '   ' → logprob: -16.349262237548828
    6. 'sm' → logprob: -16.474262237548828
    7. 's' → logprob: -16.474262237548828
    8. '(sn' → logprob: -16.599262237548828
    9. 'Sn' → logprob: -16.724262237548828
    10. 'snippet' → logprob: -16.724262237548828

Token 867: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' (adapté à ' sn') → logprob: -1.8624639324116288e-06
    2. ' sn' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.000001907348633
    4. 'sm' → logprob: -16.875001907348633
    5. '```' → logprob: -19.500001907348633
    6. 'sk' → logprob: -20.250001907348633
    7. '  ' → logprob: -20.250001907348633
    8. ' ' → logprob: -21.000001907348633
    9. '_sn' → logprob: -21.125001907348633
    10. 'snippet' → logprob: -21.625001907348633

Token 868: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.4153549020411447e-05
    2. 'uk' → logprob: -11.50002384185791
    3. 'u' → logprob: -11.87502384185791
    4. '   ' → logprob: -12.00002384185791
    5. ' uke' → logprob: -15.50002384185791
    6. '  ' → logprob: -16.625024795532227
    7. '```' → logprob: -16.750024795532227
    8. 'uck' → logprob: -16.875024795532227
    9. '=' → logprob: -16.875024795532227
    10. '       ' → logprob: -16.875024795532227

Token 869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014467716217041
    2. '=' → logprob: -1.701446771621704
    3. '(n' → logprob: -10.826446533203125
    4. '=D' → logprob: -11.701446533203125
    5. '=n' → logprob: -12.576446533203125
    6. ' ' → logprob: -14.076446533203125
    7. '   ' → logprob: -14.451446533203125
    8. '(' → logprob: -15.076446533203125
    9. 'n' → logprob: -16.701446533203125
    10. '＝' → logprob: -17.076446533203125

Token 870: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00023095356300473213
    2. ' D' → logprob: -8.37523078918457
    3. '   ' → logprob: -15.00023078918457
    4. ' ' → logprob: -17.62523078918457
    5. '  ' → logprob: -18.12523078918457
    6. '	D' → logprob: -19.00023078918457
    7. '```' → logprob: -20.87523078918457
    8. '       ' → logprob: -21.37523078918457
    9. '_D' → logprob: -21.50023078918457
    10. '    ' → logprob: -21.50023078918457

Token 871: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.438573680294212e-06
    2. 'ijk' → logprob: -12.250005722045898
    3. 'D' → logprob: -15.000005722045898
    4. 'ij' → logprob: -15.625005722045898
    5. 'jik' → logprob: -17.3750057220459
    6. 'i' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.0000057220459
    8. 'ijkl' → logprob: -19.1250057220459
    9. 'ijks' → logprob: -19.1250057220459
    10. 'istrict' → logprob: -19.3750057220459

Token 872: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -16.500001907348633
    4. '<|end|>' → logprob: -18.250001907348633
    5. 'n' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.625001907348633
    7. '(N' → logprob: -20.500001907348633
    8. '```' → logprob: -20.625001907348633
    9. '(no' → logprob: -20.875001907348633
    10. '(nn' → logprob: -21.875001907348633

Token 873: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038658222183585167
    2. ')
' → logprob: -7.875386714935303
    3. '())' → logprob: -12.625386238098145
    4. '   ' → logprob: -13.625386238098145
    5. '()' → logprob: -13.750386238098145
    6. ' )' → logprob: -14.500386238098145
    7. ')return' → logprob: -15.750386238098145
    8. ')

' → logprob: -16.25038719177246
    9. ')
' → logprob: -16.50038719177246
    10. 'return' → logprob: -17.50038719177246

Token 874: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019865304057020694
    2. ' return' → logprob: -8.875198364257812
    3. 'return' → logprob: -9.750198364257812
    4. '	return' → logprob: -14.500198364257812
    5. '       ' → logprob: -17.250198364257812
    6. '   ' → logprob: -17.625198364257812
    7. ' ' → logprob: -17.875198364257812
    8. '  ' → logprob: -18.125198364257812
    9. '<|end|>' → logprob: -18.375198364257812
    10. '
' → logprob: -19.500198364257812

Token 875: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019626330584287643
    2. '   ' → logprob: -4.019626140594482
    3. ' return' → logprob: -6.519626140594482
    4. '	return' → logprob: -14.26962661743164
    5. ' ' → logprob: -15.14462661743164
    6. '       ' → logprob: -16.39462661743164
    7. '  ' → logprob: -16.89462661743164
    8. ':return' → logprob: -17.51962661743164
    9. '{return' → logprob: -18.26962661743164
    10. 'def' → logprob: -18.76962661743164

Token 876: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.015171285718679428
    2. ' yen' → logprob: -4.515171051025391
    3. '(y' → logprob: -5.640171051025391
    4. '(' → logprob: -7.640171051025391
    5. 'ye' → logprob: -10.76517105102539
    6. ' (' → logprob: -10.89017105102539
    7. 'yuan' → logprob: -11.51517105102539
    8. 'yan' → logprob: -12.14017105102539
    9. 'yer' → logprob: -12.51517105102539
    10. '   ' → logprob: -12.76517105102539

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4259644558478612e-05
    2. ',s' → logprob: -11.375014305114746
    3. ',
' → logprob: -13.375014305114746
    4. ' ,' → logprob: -14.000014305114746
    5. ',n' → logprob: -15.125014305114746
    6. '(sn' → logprob: -18.00001335144043
    7. ',y' → logprob: -18.50001335144043
    8. '‌,' → logprob: -18.87501335144043
    9. ',en' → logprob: -19.25001335144043
    10. ',None' → logprob: -19.50001335144043

Token 878: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.023247458040714264
    2. ' sn' → logprob: -3.773247480392456
    3. '(sn' → logprob: -13.148247718811035
    4. 's' → logprob: -17.39824676513672
    5. 'sk' → logprob: -18.27324676513672
    6. '_sn' → logprob: -18.64824676513672
    7. 'snake' → logprob: -18.64824676513672
    8. ' ' → logprob: -19.14824676513672
    9. 'snippet' → logprob: -19.77324676513672
    10. 'sm' → logprob: -19.89824676513672

Token 879: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.00012511172099038959
    2. 'u' → logprob: -9.12512493133545
    3. 'uk' → logprob: -11.50012493133545
    4. 'uhe' → logprob: -13.50012493133545
    5. 'ukke' → logprob: -13.87512493133545
    6. 'uxe' → logprob: -14.12512493133545
    7. ' uke' → logprob: -14.37512493133545
    8. '   ' → logprob: -15.00012493133545
    9. 'uck' → logprob: -15.50012493133545
    10. 'n' → logprob: -15.87512493133545

Token 880: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.7133641196996905e-05
    2. '```' → logprob: -11.00002670288086
    3. '<|end|>' → logprob: -12.12502670288086
    4. ' def' → logprob: -12.50002670288086
    5. '
' → logprob: -14.12502670288086
    6. '<|end|>' → logprob: -15.25002670288086
    7. ':def' → logprob: -16.50002670288086
    8. '``' → logprob: -17.25002670288086
    9. 'Def' → logprob: -17.75002670288086
    10. '   ' → logprob: -18.00002670288086

Token 881: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.607391408877447e-05
    2. '```' → logprob: -10.250036239624023
    3. ' def' → logprob: -15.250036239624023
    4. '
' → logprob: -16.250036239624023
    5. '<|end|>' → logprob: -16.375036239624023
    6. '``' → logprob: -16.500036239624023
    7. 'ndef' → logprob: -16.500036239624023
    8. 'from' → logprob: -17.500036239624023
    9. 'import' → logprob: -17.500036239624023
    10. '#' → logprob: -18.000036239624023

Token 882: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4486064612865448
    2. 'process' → logprob: -1.0736064910888672
    3. ' process' → logprob: -4.323606491088867
    4. ' def' → logprob: -5.073606491088867
    5. 'm' → logprob: -9.948606491088867
    6. '
' → logprob: -10.323606491088867
    7. 'define' → logprob: -10.948606491088867
    8. '_process' → logprob: -11.573606491088867
    9. 'read' → logprob: -11.698606491088867
    10. '```' → logprob: -11.948606491088867

Token 883: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0011888028820976615
    2. 'def' → logprob: -6.8761887550354
    3. '```' → logprob: -9.626189231872559
    4. '_edge' → logprob: -10.126189231872559
    5. 'edges' → logprob: -10.626189231872559
    6. '_def' → logprob: -11.126189231872559
    7. '_lines' → logprob: -12.876189231872559
    8. '_input' → logprob: -13.376189231872559
    9. '
' → logprob: -13.876189231872559
    10. '_m' → logprob: -14.376189231872559

Token 884: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.875001907348633
    3. 'def' → logprob: -14.250001907348633
    4. ' (' → logprob: -15.125001907348633
    5. '(M' → logprob: -17.125001907348633
    6. '(
' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '(n' → logprob: -18.375001907348633
    9. '(def' → logprob: -19.000001907348633
    10. '(i' → logprob: -19.000001907348633

Token 885: ',' (ID: 11)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.25732287764549255
    2. '(' → logprob: -1.507322907447815
    3. '(n' → logprob: -6.007322788238525
    4. ',' → logprob: -6.507322788238525
    5. '(i' → logprob: -7.382322788238525
    6. '   ' → logprob: -8.882323265075684
    7. ' (' → logprob: -9.007323265075684
    8. 'def' → logprob: -9.007323265075684
    9. '(
' → logprob: -10.007323265075684
    10. '(def' → logprob: -10.007323265075684

Token 886: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.07902826368808746
    2. ' yen' → logprob: -2.579028367996216
    3. '   ' → logprob: -10.329028129577637
    4. 'ye' → logprob: -10.704028129577637
    5. 'yan' → logprob: -10.829028129577637
    6. ' ' → logprob: -10.954028129577637
    7. 'y' → logprob: -11.579028129577637
    8. 'yon' → logprob: -12.204028129577637
    9. 'yer' → logprob: -12.329028129577637
    10. '
' → logprob: -12.579028129577637

Token 887: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1008713702030946e-06
    2. ' ,' → logprob: -13.500001907348633
    3. ',s' → logprob: -14.375001907348633
    4. ',
' → logprob: -16.500001907348633
    5. '_,' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ',n' → logprob: -19.000001907348633
    8. ',y' → logprob: -19.000001907348633
    9. ',m' → logprob: -19.750001907348633
    10. 's' → logprob: -20.250001907348633

Token 888: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.011054305359721184
    2. ' sn' → logprob: -4.511054515838623
    3. 'def' → logprob: -13.011054039001465
    4. 's' → logprob: -13.636054039001465
    5. '   ' → logprob: -13.636054039001465
    6. '_sn' → logprob: -14.886054039001465
    7. '(sn' → logprob: -15.136054039001465
    8. '```' → logprob: -15.261054039001465
    9. 'sm' → logprob: -15.886054039001465
    10. 'snippet' → logprob: -16.26105499267578

Token 889: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -15.250000953674316
    3. 'uk' → logprob: -15.750000953674316
    4. '   ' → logprob: -17.625
    5. 'ike' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. ' uke' → logprob: -18.625
    8. 's' → logprob: -20.0
    9. '
' → logprob: -20.0
    10. 'ake' → logprob: -20.125

Token 890: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47388482093811035
    2. '(m' → logprob: -1.3488848209381104
    3. '):' → logprob: -2.9738848209381104
    4. '   ' → logprob: -3.2238848209381104
    5. ')' → logprob: -4.848884582519531
    6. 'def' → logprob: -5.098884582519531
    7. '(y' → logprob: -5.098884582519531
    8. '):
' → logprob: -5.598884582519531
    9. ':' → logprob: -6.723884582519531
    10. ' (' → logprob: -7.973884582519531

Token 891: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006782165728509426
    2. 'for' → logprob: -5.006782054901123
    3. ' for' → logprob: -9.756782531738281
    4. '	for' → logprob: -12.006782531738281
    5. 'def' → logprob: -13.506782531738281
    6. '```' → logprob: -14.256782531738281
    7. '   ' → logprob: -14.506782531738281
    8. '       ' → logprob: -16.13178253173828
    9. '
' → logprob: -16.38178253173828
    10. '\t' → logprob: -16.75678253173828

Token 892: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.931863051955588e-05
    2. '   ' → logprob: -10.375059127807617
    3. 'import' → logprob: -10.750059127807617
    4. 'def' → logprob: -12.250059127807617
    5. ' for' → logprob: -13.250059127807617
    6. 'yen' → logprob: -17.000059127807617
    7. '
' → logprob: -17.500059127807617
    8. 'global' → logprob: -17.500059127807617
    9. 'from' → logprob: -17.750059127807617
    10. '	for' → logprob: -18.375059127807617

Token 893: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012951197568327188
    2. ' _' → logprob: -6.75129508972168
    3. '_i' → logprob: -9.12629508972168
    4. 'i' → logprob: -11.25129508972168
    5. ' i' → logprob: -12.87629508972168
    6. '_in' → logprob: -16.12629508972168
    7. '_=' → logprob: -16.37629508972168
    8. '__' → logprob: -16.62629508972168
    9. '_line' → logprob: -16.75129508972168
    10. '   ' → logprob: -17.25129508972168

Token 894: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006044215988367796
    2. 'in' → logprob: -5.131044387817383
    3. '_' → logprob: -9.256044387817383
    4. 'n' → logprob: -11.756044387817383
    5. ' ' → logprob: -12.131044387817383
    6. '  ' → logprob: -12.881044387817383
    7. '   ' → logprob: -13.631044387817383
    8. '0' → logprob: -14.381044387817383
    9. 'range' → logprob: -14.381044387817383
    10. 's' → logprob: -14.756044387817383

Token 895: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007104054093360901
    2. ' range' → logprob: -7.250710487365723
    3. '_' → logprob: -15.125710487365723
    4. '   ' → logprob: -15.750710487365723
    5. ' ' → logprob: -17.125709533691406
    6. '_range' → logprob: -17.375709533691406
    7. 'in' → logprob: -18.000709533691406
    8. '	range' → logprob: -18.000709533691406
    9. '  ' → logprob: -18.125709533691406
    10. '0' → logprob: -18.625709533691406

Token 896: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00016778295685071498
    2. 'm' → logprob: -8.750167846679688
    3. '(' → logprob: -11.625167846679688
    4. ' (' → logprob: -15.625167846679688
    5. ' m' → logprob: -15.875167846679688
    6. '	m' → logprob: -16.625167846679688
    7. '   ' → logprob: -17.375167846679688
    8. '(
' → logprob: -19.250167846679688
    9. ',m' → logprob: -19.250167846679688
    10. ',' → logprob: -19.750167846679688

Token 897: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6339755058288574
    2. '):' → logprob: -0.7589755058288574
    3. '):
' → logprob: -6.758975505828857
    4. '   ' → logprob: -8.883975982666016
    5. ':' → logprob: -10.383975982666016
    6. ')' → logprob: -10.633975982666016
    7. '():
' → logprob: -12.008975982666016
    8. ' ):' → logprob: -12.633975982666016
    9. '():' → logprob: -12.883975982666016
    10. ',' → logprob: -12.883975982666016

Token 898: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11704646795988083
    2. '       ' → logprob: -2.242046356201172
    3. 'u' → logprob: -6.117046356201172
    4. 'a' → logprob: -6.242046356201172
    5. ' u' → logprob: -9.867046356201172
    6. ' a' → logprob: -12.367046356201172
    7. '	u' → logprob: -12.867046356201172
    8. '_u' → logprob: -13.742046356201172
    9. 'x' → logprob: -14.492046356201172
    10. 'A' → logprob: -14.492046356201172

Token 899: ' u' (ID: 337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05550374835729599
    2. 'u' (adapté à ' u') → logprob: -2.9305038452148438
    3. '   ' → logprob: -8.305503845214844
    4. 'A' → logprob: -8.805503845214844
    5. '_a' → logprob: -9.055503845214844
    6. '_u' → logprob: -9.930503845214844
    7. 'x' → logprob: -11.180503845214844
    8. 'f' → logprob: -11.305503845214844
    9. ' a' → logprob: -11.430503845214844
    10. 'from' → logprob: -12.555503845214844

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001088543445803225
    2. ',v' → logprob: -7.001088619232178
    3. ' ,' → logprob: -9.37608814239502
    4. ',u' → logprob: -10.12608814239502
    5. ',s' → logprob: -11.00108814239502
    6. 's' → logprob: -11.87608814239502
    7. '=' → logprob: -12.37608814239502
    8. '_,' → logprob: -12.50108814239502
    9. ' =' → logprob: -12.50108814239502
    10. ',c' → logprob: -12.62608814239502

Token 901: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00010998018842656165
    2. ' v' → logprob: -9.125109672546387
    3. ',v' → logprob: -14.375109672546387
    4. '	v' → logprob: -16.125110626220703
    5. '_v' → logprob: -16.250110626220703
    6. 'c' → logprob: -16.375110626220703
    7. 'a' → logprob: -17.250110626220703
    8. 'vv' → logprob: -17.375110626220703
    9. 'vvvv' → logprob: -18.125110626220703
    10. 'vl' → logprob: -18.375110626220703

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022392053506337106
    2. '=' → logprob: -8.750224113464355
    3. ' =' → logprob: -10.625224113464355
    4. ',c' → logprob: -10.625224113464355
    5. ',w' → logprob: -11.500224113464355
    6. 'cost' → logprob: -13.375224113464355
    7. 'w' → logprob: -13.625224113464355
    8. ' ,' → logprob: -13.625224113464355
    9. 'c' → logprob: -13.875224113464355
    10. ',u' → logprob: -14.375224113464355

Token 903: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00036216014996171
    2. 'w' → logprob: -8.250362396240234
    3. 'c' → logprob: -9.625362396240234
    4. 'x' → logprob: -11.625362396240234
    5. ' a' → logprob: -12.000362396240234
    6. 'A' → logprob: -12.375362396240234
    7. 'z' → logprob: -12.750362396240234
    8. 'ab' → logprob: -12.750362396240234
    9. 'ai' → logprob: -13.375362396240234
    10. 'cost' → logprob: -13.500362396240234

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017243190086446702
    2. 'b' → logprob: -9.75017261505127
    3. ',b' → logprob: -10.12517261505127
    4. '=' → logprob: -10.50017261505127
    5. ' =' → logprob: -11.00017261505127
    6. 'cost' → logprob: -11.37517261505127
    7. ' ,' → logprob: -11.87517261505127
    8. '_cost' → logprob: -12.37517261505127
    9. ',c' → logprob: -12.87517261505127
    10. 's' → logprob: -13.87517261505127

Token 905: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.77627644513268e-06
    2. 'c' → logprob: -12.250008583068848
    3. ' b' → logprob: -13.250008583068848
    4. '```' → logprob: -13.500008583068848
    5. 'B' → logprob: -15.875008583068848
    6. 'z' → logprob: -16.000009536743164
    7. 'd' → logprob: -16.625009536743164
    8. '_b' → logprob: -16.625009536743164
    9. 'A' → logprob: -16.625009536743164
    10. '	b' → logprob: -16.750009536743164

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=input' → logprob: -16.85020637512207
    4. '＝' → logprob: -17.97520637512207
    5. '   ' → logprob: -19.35020637512207
    6. ',' → logprob: -19.47520637512207
    7. '=line' → logprob: -19.72520637512207
    8. ' ' → logprob: -20.35020637512207
    9. '_=' → logprob: -20.35020637512207
    10. '=user' → logprob: -20.85020637512207

Token 907: ' read' (ID: 1729)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0031777136027812958
    2. ' map' → logprob: -5.753177642822266
    3. '	map' → logprob: -17.128177642822266
    4. '   ' → logprob: -19.503177642822266
    5. 'm' → logprob: -19.628177642822266
    6. 'list' → logprob: -20.003177642822266
    7. ' ' → logprob: -20.253177642822266
    8. '.map' → logprob: -21.628177642822266
    9. '(map' → logprob: -22.253177642822266
    10. '  ' → logprob: -22.378177642822266

Token 908: '_edge' (ID: 43226)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02003408782184124
    2. '().' → logprob: -4.645034313201904
    3. 'map' → logprob: -5.270034313201904
    4. 'list' → logprob: -6.645034313201904
    5. '_map' → logprob: -7.895034313201904
    6. ' map' → logprob: -8.145033836364746
    7. '(),' → logprob: -8.145033836364746
    8. 'ints' → logprob: -8.270033836364746
    9. 'input' → logprob: -8.395033836364746
    10. 'int' → logprob: -8.395033836364746

Token 909: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012406282126903534
    2. '()
' → logprob: -4.512406349182129
    3. ' =' → logprob: -7.387406349182129
    4. '=' → logprob: -8.262406349182129
    5. '()\' → logprob: -8.762406349182129
    6. '_input' → logprob: -9.012406349182129
    7. '_line' → logprob: -10.637406349182129
    8. 'input' → logprob: -10.762406349182129
    9. 's' → logprob: -10.762406349182129
    10. 'line' → logprob: -11.137406349182129

Token 910: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2743625044822693
    2. '()
' → logprob: -1.524362564086914
    3. ' =' → logprob: -4.524362564086914
    4. '       ' → logprob: -5.274362564086914
    5. '=' → logprob: -5.399362564086914
    6. '   ' → logprob: -7.024362564086914
    7. '():
' → logprob: -8.024362564086914
    8. '<|end|>' → logprob: -9.399362564086914
    9. '()\' → logprob: -9.899362564086914
    10. '():' → logprob: -10.024362564086914

Token 911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1456172615289688
    2. '<|end|>' → logprob: -2.2706172466278076
    3. 'def' → logprob: -3.7706172466278076
    4. '   ' → logprob: -4.770617485046387
    5. '        
' → logprob: -9.020617485046387
    6. '
' → logprob: -9.145617485046387
    7. '<|end|>' → logprob: -9.145617485046387
    8. '```' → logprob: -9.395617485046387
    9. ' def' → logprob: -9.645617485046387
    10. 'u' → logprob: -9.770617485046387

Token 912: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10925453156232834
    2. 'yen' → logprob: -2.7342545986175537
    3. '       ' → logprob: -3.9842545986175537
    4. 'def' → logprob: -4.734254360198975
    5. ' yen' → logprob: -5.109254360198975
    6. 'u' (adapté à ' u') → logprob: -6.234254360198975
    7. ' u' → logprob: -6.484254360198975
    8. ' ' → logprob: -7.859254360198975
    9. ' def' → logprob: -8.484254837036133
    10. ' if' → logprob: -8.484254837036133

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19461573660373688
    2. ' -=' → logprob: -2.4446158409118652
    3. '-' → logprob: -2.9446158409118652
    4. '-=' → logprob: -4.069615840911865
    5. ' =' → logprob: -4.694615840911865
    6. '=' → logprob: -4.944615840911865
    7. ' -' → logprob: -6.194615840911865
    8. ' ,' → logprob: -6.444615840911865
    9. ',v' → logprob: -9.069615364074707
    10. ',u' → logprob: -9.319615364074707

Token 914: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04859941080212593
    2. ' v' → logprob: -3.0485994815826416
    3. 'u' → logprob: -11.423599243164062
    4. ' u' → logprob: -13.923599243164062
    5. 'def' → logprob: -16.548599243164062
    6. ' ' → logprob: -16.923599243164062
    7. '   ' → logprob: -17.173599243164062
    8. '	v' → logprob: -17.423599243164062
    9. '  ' → logprob: -18.048599243164062
    10. '    ' → logprob: -18.173599243164062

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3239591121673584
    2. ' =' → logprob: -1.5739591121673584
    3. '-=' → logprob: -3.3239591121673584
    4. ',' → logprob: -4.0739593505859375
    5. ' -=' → logprob: -4.3239593505859375
    6. '-' → logprob: -5.8239593505859375
    7. '=u' → logprob: -9.323959350585938
    8. ',u' → logprob: -9.448959350585938
    9. '   ' → logprob: -10.073959350585938
    10. 'u' → logprob: -11.573959350585938

Token 916: ' adjust' (ID: 10266)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.010757508687675
    2. 'adjust' → logprob: -4.6357574462890625
    3. ' u' → logprob: -7.6357574462890625
    4. '[u' → logprob: -8.385757446289062
    5. 'map' → logprob: -8.635757446289062
    6. ' adjust' → logprob: -10.010757446289062
    7. '(u' → logprob: -10.385757446289062
    8. 'convert' → logprob: -12.135757446289062
    9. 'read' → logprob: -12.260757446289062
    10. 'int' → logprob: -12.260757446289062

Token 917: '_edge' (ID: 43226)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01586988754570484
    2. 'node' → logprob: -4.515870094299316
    3. '_indices' → logprob: -6.515870094299316
    4. '_edge' → logprob: -6.890870094299316
    5. '(u' → logprob: -7.015870094299316
    6. 'u' → logprob: -7.515870094299316
    7. '_nodes' → logprob: -7.890870094299316
    8. 'indices' → logprob: -8.015870094299316
    9. '_u' → logprob: -10.265870094299316
    10. 'edge' → logprob: -10.390870094299316

Token 918: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.33425623178482056
    2. '(u' → logprob: -1.3342561721801758
    3. '_nodes' → logprob: -4.584256172180176
    4. 'indices' → logprob: -4.709256172180176
    5. '_node' → logprob: -6.959256172180176
    6. '   ' → logprob: -8.459256172180176
    7. '_input' → logprob: -9.459256172180176
    8. 'node' → logprob: -9.459256172180176
    9. 'u' → logprob: -9.959256172180176
    10. '_uv' → logprob: -10.334256172180176

Token 919: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.875004768371582
    3. 'u' → logprob: -13.375004768371582
    4. ' (' → logprob: -14.625004768371582
    5. '   ' → logprob: -15.250004768371582
    6. '(v' → logprob: -16.7500057220459
    7. '       ' → logprob: -17.0000057220459
    8. '(
' → logprob: -17.1250057220459
    9. '```' → logprob: -17.2500057220459
    10. '[u' → logprob: -17.8750057220459

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013403621269389987
    2. '-' → logprob: -7.376340389251709
    3. ',v' → logprob: -8.12633991241455
    4. ' ,' → logprob: -8.25133991241455
    5. ' -' → logprob: -9.25133991241455
    6. '       ' → logprob: -10.25133991241455
    7. '(),' → logprob: -11.87633991241455
    8. '   ' → logprob: -12.12633991241455
    9. ')' → logprob: -12.62633991241455
    10. ',u' → logprob: -13.00133991241455

Token 921: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2014133334159851
    2. ' v' → logprob: -1.7014133930206299
    3. '	v' → logprob: -17.576414108276367
    4. ' ' → logprob: -17.951414108276367
    5. 'u' → logprob: -18.701414108276367
    6. '   ' → logprob: -19.451414108276367
    7. '    ' → logprob: -19.951414108276367
    8. ' u' → logprob: -20.576414108276367
    9. '```' → logprob: -20.701414108276367
    10. 'b' → logprob: -20.826414108276367

Token 922: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16433313488960266
    2. ')
' → logprob: -1.9143331050872803
    3. ',' → logprob: -5.664333343505859
    4. '   ' → logprob: -8.16433334350586
    5. '       ' → logprob: -8.91433334350586
    6. ')
' → logprob: -8.91433334350586
    7. 'def' → logprob: -10.03933334350586
    8. ' ' → logprob: -11.78933334350586
    9. ')

' → logprob: -12.53933334350586
    10. '[' → logprob: -12.66433334350586

Token 923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6933307647705078
    2. '<|end|>' → logprob: -0.8183307647705078
    3. 'def' → logprob: -2.943330764770508
    4. '   ' → logprob: -5.318330764770508
    5. '        
' → logprob: -8.068330764770508
    6. '<|end|>' → logprob: -8.318330764770508
    7. ' def' → logprob: -8.818330764770508
    8. '```' → logprob: -8.818330764770508
    9. '        ' → logprob: -9.193330764770508
    10. ' ' → logprob: -9.568330764770508

Token 924: ' add' (ID: 1147)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0670911967754364
    2. '       ' → logprob: -2.817091226577759
    3. ' yen' → logprob: -5.81709098815918
    4. '   ' → logprob: -6.31709098815918
    5. 'yer' → logprob: -8.94209098815918
    6. 'ye' → logprob: -10.06709098815918
    7. 'def' → logprob: -10.44209098815918
    8. 'yan' → logprob: -10.69209098815918
    9. 'y' → logprob: -11.19209098815918
    10. ' ' → logprob: -11.56709098815918

Token 925: '_b' (ID: 1535)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.059742506593465805
    2. '_edge' → logprob: -3.3097424507141113
    3. 'yen' → logprob: -4.684742450714111
    4. '_edges' → logprob: -4.934742450714111
    5. 'y' → logprob: -6.184742450714111
    6. 'edges' → logprob: -6.434742450714111
    7. 'edge' → logprob: -6.809742450714111
    8. '_y' → logprob: -9.30974292755127
    9. '_' → logprob: -10.18474292755127
    10. '_to' → logprob: -10.43474292755127

Token 926: 'oth' (ID: 1661)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.29858019948005676
    2. '(y' → logprob: -2.2985801696777344
    3. 'oth' → logprob: -2.5485801696777344
    4. 'edge' → logprob: -3.6735801696777344
    5. '_edges' → logprob: -4.048580169677734
    6. 'yen' → logprob: -4.923580169677734
    7. 'edges' → logprob: -5.048580169677734
    8. 'dge' → logprob: -5.423580169677734
    9. 'y' → logprob: -5.548580169677734
    10. '(' → logprob: -6.673580169677734

Token 927: '_direction' (ID: 64332)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.25747862458229065
    2. '_edges' → logprob: -1.5074785947799683
    3. '_edge' → logprob: -5.757478713989258
    4. 'edges' → logprob: -6.882478713989258
    5. '(' → logprob: -7.382478713989258
    6. '_' → logprob: -9.007478713989258
    7. '(s' → logprob: -9.257478713989258
    8. 's' → logprob: -9.257478713989258
    9. '_s' → logprob: -9.507478713989258
    10. 'y' → logprob: -9.757478713989258

Token 928: '_edges' (ID: 68870)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.47698310017585754
    2. 'al' → logprob: -0.9769830703735352
    3. '(' → logprob: -6.726983070373535
    4. '_edges' → logprob: -7.476983070373535
    5. '_edge' → logprob: -7.976983070373535
    6. 'y' → logprob: -8.101983070373535
    7. 'ality' → logprob: -9.101983070373535
    8. '(u' → logprob: -9.351983070373535
    9. 's' → logprob: -9.476983070373535
    10. '_y' → logprob: -10.601983070373535

Token 929: '(u' (ID: 17057)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -7.076218025758862e-05
    2. '(u' → logprob: -9.625070571899414
    3. '(' → logprob: -13.250070571899414
    4. ' (' → logprob: -14.250070571899414
    5. 'y' → logprob: -14.375070571899414
    6. '   ' → logprob: -14.500070571899414
    7. '(s' → logprob: -15.125070571899414
    8. '       ' → logprob: -16.125070571899414
    9. '```' → logprob: -16.250070571899414
    10. '(d' → logprob: -16.250070571899414

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002028251619776711
    2. ' ,' → logprob: -8.625203132629395
    3. ',y' → logprob: -11.250203132629395
    4. ',v' → logprob: -12.125203132629395
    5. ')' → logprob: -13.500203132629395
    6. '       ' → logprob: -14.125203132629395
    7. ',
' → logprob: -14.375203132629395
    8. '   ' → logprob: -14.500203132629395
    9. 'y' → logprob: -15.250203132629395
    10. '=' → logprob: -15.625203132629395

Token 931: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.022473206743597984
    2. 'yen' → logprob: -3.897473096847534
    3. ' v' → logprob: -6.772473335266113
    4. 'ven' → logprob: -8.147473335266113
    5. ' yen' → logprob: -8.147473335266113
    6. 'y' → logprob: -9.397473335266113
    7. 'vy' → logprob: -10.022473335266113
    8. '   ' → logprob: -10.897473335266113
    9. 'vin' → logprob: -11.647473335266113
    10. '     ' → logprob: -12.022473335266113

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005922323907725513
    2. ' ,' → logprob: -7.500592231750488
    3. ',y' → logprob: -10.375592231750488
    4. '       ' → logprob: -12.250592231750488
    5. '   ' → logprob: -14.000592231750488
    6. '<|end|>' → logprob: -14.375592231750488
    7. ')' → logprob: -14.750592231750488
    8. ',u' → logprob: -15.750592231750488
    9. ',
' → logprob: -16.000593185424805
    10. '(),' → logprob: -16.000593185424805

Token 933: ' a' (ID: 261)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.638298511505127
    2. 'a' → logprob: -0.763298511505127
    3. ' yen' → logprob: -5.763298511505127
    4. ' a' → logprob: -6.638298511505127
    5. 'y' → logprob: -7.388298511505127
    6. 'yan' → logprob: -9.388298034667969
    7. '   ' → logprob: -9.388298034667969
    8. 'ye' → logprob: -9.450798034667969
    9. 'yer' → logprob: -9.450798034667969
    10. 'yam' → logprob: -10.888298034667969

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002456046058796346
    2. ' ,' → logprob: -8.375246047973633
    3. ',b' → logprob: -11.375246047973633
    4. '   ' → logprob: -13.375246047973633
    5. 'b' → logprob: -14.250246047973633
    6. ',y' → logprob: -14.500246047973633
    7. ')' → logprob: -14.500246047973633
    8. ',s' → logprob: -16.375246047973633
    9. '),' → logprob: -16.750246047973633
    10. ',
' → logprob: -16.875246047973633

Token 935: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038042984902858734
    2. ' b' → logprob: -3.2880430221557617
    3. '   ' → logprob: -14.788043022155762
    4. '	b' → logprob: -15.038043022155762
    5. 'a' → logprob: -16.038042068481445
    6. 'yen' → logprob: -16.038042068481445
    7. ' ' → logprob: -16.413042068481445
    8. ')b' → logprob: -16.475542068481445
    9. '  ' → logprob: -16.725542068481445
    10. 'y' → logprob: -16.788042068481445

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027719514910131693
    2. ',y' → logprob: -6.127771854400635
    3. ')' → logprob: -8.127772331237793
    4. ' ,' → logprob: -8.502772331237793
    5. '   ' → logprob: -10.127772331237793
    6. '(y' → logprob: -10.752772331237793
    7. '       ' → logprob: -11.752772331237793
    8. ')
' → logprob: -12.002772331237793
    9. 'yen' → logprob: -12.627772331237793
    10. '<|end|>' → logprob: -13.377772331237793

Token 937: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.0013883279170840979
    2. ' yen' → logprob: -6.6263885498046875
    3. '   ' → logprob: -9.876388549804688
    4. '       ' → logprob: -12.126388549804688
    5. 'y' → logprob: -13.126388549804688
    6. 'yan' → logprob: -13.876388549804688
    7. 'yer' → logprob: -14.501388549804688
    8. 'ye' → logprob: -14.501388549804688
    9. '           ' → logprob: -14.626388549804688
    10. ' ' → logprob: -15.751388549804688

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.500031471252441
    3. '   ' → logprob: -13.125031471252441
    4. ',s' → logprob: -13.250031471252441
    5. ',
' → logprob: -16.125032424926758
    6. ')' → logprob: -17.000032424926758
    7. ',y' → logprob: -17.750032424926758
    8. ',n' → logprob: -18.000032424926758
    9. '       ' → logprob: -18.125032424926758
    10. ')
' → logprob: -18.375032424926758

Token 939: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.0052342405542731285
    2. ' sn' → logprob: -5.255234241485596
    3. '(sn' → logprob: -16.005233764648438
    4. '   ' → logprob: -16.130233764648438
    5. 's' → logprob: -16.255233764648438
    6. '
' → logprob: -17.380233764648438
    7. ' ' → logprob: -17.505233764648438
    8. 'Sn' → logprob: -17.505233764648438
    9. '_sn' → logprob: -17.630233764648438
    10. 'sm' → logprob: -18.130233764648438

Token 940: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -3.15441757265944e-05
    2. 'uk' → logprob: -10.625031471252441
    3. 'u' → logprob: -12.125031471252441
    4. ' uke' → logprob: -14.375031471252441
    5. '_' → logprob: -14.750031471252441
    6. '   ' → logprob: -15.000031471252441
    7. '
' → logprob: -15.875031471252441
    8. '```' → logprob: -16.625032424926758
    9. '

' → logprob: -17.250032424926758
    10. '=' → logprob: -17.500032424926758

Token 941: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000399925687815994
    2. ')

' → logprob: -8.000399589538574
    3. ')
' → logprob: -9.750399589538574
    4. 'def' → logprob: -12.500399589538574
    5. '   ' → logprob: -13.250399589538574
    6. '<|end|>' → logprob: -15.000399589538574
    7. ' )' → logprob: -15.500399589538574
    8. '()' → logprob: -16.75040054321289
    9. ')
' → logprob: -17.25040054321289
    10. '())' → logprob: -17.37540054321289

Token 942: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00014215784904081374
    2. '```' → logprob: -9.250142097473145
    3. '
' → logprob: -10.125142097473145
    4. '<|end|>' → logprob: -12.500142097473145
    5. ' def' → logprob: -13.625142097473145
    6. '``' → logprob: -15.250142097473145
    7. '

' → logprob: -15.750142097473145
    8. '    
' → logprob: -16.37514305114746
    9. ':def' → logprob: -16.50014305114746
    10. '-def' → logprob: -16.75014305114746

Token 943: ' read' (ID: 1729)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0058855414390563965
    2. 'read' → logprob: -5.880885601043701
    3. ' def' → logprob: -6.005885601043701
    4. 'define' → logprob: -8.505885124206543
    5. '
' → logprob: -9.255885124206543
    6. 'continue' → logprob: -9.880885124206543
    7. ' read' → logprob: -10.130885124206543
    8. 'ndef' → logprob: -11.193385124206543
    9. '#' → logprob: -11.505885124206543
    10. 'for' → logprob: -11.693385124206543

Token 944: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -4.2987729102605954e-05
    2. 'edge' → logprob: -10.250042915344238
    3. 'def' → logprob: -12.250042915344238
    4. '_edges' → logprob: -13.625042915344238
    5. '_input' → logprob: -14.375042915344238
    6. '_line' → logprob: -14.875042915344238
    7. '_EDGE' → logprob: -15.250042915344238
    8. 'Edge' → logprob: -15.375042915344238
    9. '_' → logprob: -18.000043869018555
    10. '_def' → logprob: -18.125043869018555

Token 945: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.741137283621356e-05
    2. '_inputs' → logprob: -10.625057220458984
    3. 'input' → logprob: -11.375057220458984
    4. 'Input' → logprob: -12.000057220458984
    5. 'def' → logprob: -12.250057220458984
    6. 's' → logprob: -12.875057220458984
    7. '_edge' → logprob: -13.000057220458984
    8. '_output' → logprob: -13.375057220458984
    9. '_line' → logprob: -14.625057220458984
    10. '_INPUT' → logprob: -14.625057220458984

Token 946: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5759754776954651
    2. '():
' → logprob: -0.8259754776954651
    3. '():
' → logprob: -10.70097541809082
    4. '()' → logprob: -11.70097541809082
    5. '():

' → logprob: -12.45097541809082
    6. '()):
' → logprob: -14.32597541809082
    7. '()>' → logprob: -15.45097541809082
    8. 'def' → logprob: -15.57597541809082
    9. '(' → logprob: -15.57597541809082
    10. ' ():' → logprob: -16.45097541809082

Token 947: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5971408486366272
    2. '   ' → logprob: -0.8471408486366272
    3. 'return' → logprob: -3.9721407890319824
    4. 'map' → logprob: -6.597140789031982
    5. ' u' → logprob: -7.222140789031982
    6. '	u' → logprob: -10.84714126586914
    7. ' return' → logprob: -11.22214126586914
    8. 'tuple' → logprob: -12.22214126586914
    9. '    
' → logprob: -12.47214126586914
    10. '```' → logprob: -12.84714126586914

Token 948: ' return' (ID: 622)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.010816475376486778
    2. 'map' → logprob: -5.01081657409668
    3. 'return' (adapté à ' return') → logprob: -5.51081657409668
    4. 'tuple' → logprob: -10.13581657409668
    5. ' u' → logprob: -11.88581657409668
    6. 'list' → logprob: -13.13581657409668
    7. '   ' → logprob: -14.63581657409668
    8. 'a' → logprob: -15.63581657409668
    9. ' return' → logprob: -15.76081657409668
    10. ' map' → logprob: -16.51081657409668

Token 949: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005235529970377684
    2. 'tuple' → logprob: -5.25523567199707
    3. ' map' → logprob: -13.75523567199707
    4. ' tuple' → logprob: -14.63023567199707
    5. 'list' → logprob: -15.38023567199707
    6. '	map' → logprob: -18.75523567199707
    7. '   ' → logprob: -19.13023567199707
    8. '(map' → logprob: -19.25523567199707
    9. '  ' → logprob: -21.25523567199707
    10. '.map' → logprob: -21.38023567199707

Token 950: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007176732178777456
    2. 'int' → logprob: -7.250717639923096
    3. '[int' → logprob: -12.875718116760254
    4. '<int' → logprob: -13.250718116760254
    5. '=int' → logprob: -13.875718116760254
    6. '(' → logprob: -14.000718116760254
    7. ',int' → logprob: -14.375718116760254
    8. '(
' → logprob: -14.625718116760254
    9. ' int' → logprob: -15.375718116760254
    10. 'input' → logprob: -16.750717163085938

Token 951: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00696850148960948
    2. ',input' → logprob: -5.7569684982299805
    3. '(' → logprob: -6.0069684982299805
    4. '(),' → logprob: -7.1319684982299805
    5. 'input' → logprob: -8.13196849822998
    6. ',' → logprob: -9.13196849822998
    7. '()' → logprob: -9.75696849822998
    8. ' (' → logprob: -10.50696849822998
    9. ')' → logprob: -11.63196849822998
    10. '())' → logprob: -12.00696849822998

Token 952: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '_input' → logprob: -19.125123977661133
    4. ',input' → logprob: -19.125123977661133
    5. '(input' → logprob: -19.875123977661133
    6. '	input' → logprob: -20.000123977661133
    7. ' ' → logprob: -20.375123977661133
    8. '[input' → logprob: -20.500123977661133
    9. '<input' → logprob: -20.625123977661133
    10. '=input' → logprob: -20.875123977661133

Token 953: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.106736039626412e-05
    2. '()' → logprob: -10.500031471252441
    3. ' ().' → logprob: -12.750031471252441
    4. '())' → logprob: -14.875031471252441
    5. ')' → logprob: -16.375030517578125
    6. '(' → logprob: -16.500030517578125
    7. '().__' → logprob: -17.625030517578125
    8. '()
' → logprob: -17.750030517578125
    9. '.' → logprob: -17.875030517578125
    10. ' ()' → logprob: -18.750030517578125

Token 954: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. 'strip' → logprob: -13.875001907348633
    3. 'spl' → logprob: -15.000001907348633
    4. ')' → logprob: -16.875001907348633
    5. 'rstrip' → logprob: -16.875001907348633
    6. ' split' → logprob: -16.875001907348633
    7. '(split' → logprob: -17.750001907348633
    8. '_split' → logprob: -19.125001907348633
    9. 's' → logprob: -19.250001907348633
    10. '.split' → logprob: -19.625001907348633

Token 955: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0052464487962424755
    2. ')' → logprob: -5.505246639251709
    3. '()' → logprob: -6.755246639251709
    4. '())
' → logprob: -13.63024616241455
    5. ' ())' → logprob: -14.25524616241455
    6. '();)' → logprob: -15.38024616241455
    7. '(),' → logprob: -16.005247116088867
    8. ' )' → logprob: -16.130247116088867
    9. '(' → logprob: -16.380247116088867
    10. '()]' → logprob: -16.630247116088867

Token 956: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020461321400944144
    2. '```' → logprob: -9.250205039978027
    3. '<|end|>' → logprob: -9.875205039978027
    4. '
' → logprob: -9.875205039978027
    5. ' def' → logprob: -12.875205039978027
    6. '

' → logprob: -13.875205039978027
    7. '  
' → logprob: -14.500205039978027
    8. ')' → logprob: -15.125205039978027
    9. '    
' → logprob: -15.250205039978027
    10. '#' → logprob: -15.250205039978027

Token 957: ' adjust' (ID: 10266)
  Prédit: 'adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adjust' → logprob: -0.16348417103290558
    2. 'def' → logprob: -1.9134842157363892
    3. ' adjust' → logprob: -5.9134840965271
    4. ' def' → logprob: -7.6634840965271
    5. '_adjust' → logprob: -10.038484573364258
    6. 'define' → logprob: -11.288484573364258
    7. '.adjust' → logprob: -12.038484573364258
    8. '```' → logprob: -12.913484573364258
    9. 'add' → logprob: -13.288484573364258
    10. 'update' → logprob: -13.538484573364258

Token 958: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.000320565392030403
    2. '_node' → logprob: -8.750320434570312
    3. 'edge' → logprob: -9.125320434570312
    4. 'def' → logprob: -10.375320434570312
    5. '_edges' → logprob: -11.125320434570312
    6. '_' → logprob: -12.500320434570312
    7. '_EDGE' → logprob: -14.000320434570312
    8. '```' → logprob: -14.375320434570312
    9. '(edge' → logprob: -14.500320434570312
    10. '_indices' → logprob: -14.500320434570312

Token 959: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.002911265939474106
    2. 'indices' → logprob: -5.87791109085083
    3. '(indices' → logprob: -10.377911567687988
    4. '"indices' → logprob: -10.502911567687988
    5. '_' → logprob: -11.127911567687988
    6. '(u' → logprob: -11.877911567687988
    7. '```' → logprob: -12.127911567687988
    8. 'def' → logprob: -12.252911567687988
    9. 'Indices' → logprob: -12.627911567687988
    10. '_edges' → logprob: -12.877911567687988

Token 960: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0005211008246988058
    2. '(' → logprob: -7.625521183013916
    3. '(s' → logprob: -11.875520706176758
    4. 'def' → logprob: -12.000520706176758
    5. '(_' → logprob: -12.000520706176758
    6. '(a' → logprob: -12.125520706176758
    7. '():' → logprob: -12.375520706176758
    8. '(n' → logprob: -14.375520706176758
    9. '(U' → logprob: -14.375520706176758
    10. '(i' → logprob: -14.500520706176758

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006154587608762085
    2. ',v' → logprob: -7.62561559677124
    3. ',u' → logprob: -9.750615119934082
    4. '   ' → logprob: -10.125615119934082
    5. ' ,' → logprob: -11.000615119934082
    6. 'def' → logprob: -12.250615119934082
    7. ',
' → logprob: -13.875615119934082
    8. ',t' → logprob: -13.875615119934082
    9. '=' → logprob: -14.125615119934082
    10. '```' → logprob: -14.125615119934082

Token 962: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008054602658376098
    2. ' v' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.375805854797363
    4. 'u' → logprob: -15.875805854797363
    5. '
' → logprob: -16.000804901123047
    6. '	v' → logprob: -16.625804901123047
    7. ',v' → logprob: -16.875804901123047
    8. '    ' → logprob: -18.000804901123047
    9. ' ' → logprob: -18.125804901123047
    10. '_v' → logprob: -18.250804901123047

Token 963: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31352102756500244
    2. '):
' → logprob: -1.3135210275650024
    3. '():
' → logprob: -8.688521385192871
    4. '():' → logprob: -9.938521385192871
    5. '   ' → logprob: -11.313521385192871
    6. '):
' → logprob: -11.313521385192871
    7. '=' → logprob: -11.688521385192871
    8. ':' → logprob: -12.813521385192871
    9. ')' → logprob: -13.188521385192871
    10. '):

' → logprob: -13.438521385192871

Token 964: '   ' (ID: 271)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5114645957946777
    2. ' u' → logprob: -1.5114645957946777
    3. '   ' → logprob: -2.0114645957946777
    4. ' return' → logprob: -3.7614645957946777
    5. '(u' → logprob: -4.136464595794678
    6. 'return' → logprob: -5.136464595794678
    7. ' (' → logprob: -8.011465072631836
    8. '	u' → logprob: -8.886465072631836
    9. '[u' → logprob: -9.011465072631836
    10. ',u' → logprob: -9.011465072631836

Token 965: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08078077435493469
    2. '(u' → logprob: -3.2057807445526123
    3. 'u' → logprob: -3.3307807445526123
    4. ' return' → logprob: -6.830780982971191
    5. '   ' → logprob: -8.455780982971191
    6. ' u' → logprob: -11.955780982971191
    7. '(return' → logprob: -12.205780982971191
    8. '(
' → logprob: -12.580780982971191
    9. ' (' → logprob: -13.580780982971191
    10. '{return' → logprob: -14.455780982971191

Token 966: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004092766437679529
    2. '(u' → logprob: -5.504092693328857
    3. ' u' → logprob: -11.629093170166016
    4. '   ' → logprob: -12.379093170166016
    5. ' (' → logprob: -14.129093170166016
    6. '	u' → logprob: -15.629093170166016
    7. '_u' → logprob: -15.879093170166016
    8. '(' → logprob: -16.254093170166016
    9. ' ' → logprob: -18.004093170166016
    10. '[u' → logprob: -18.254093170166016

Token 967: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2519317865371704
    2. ' -' → logprob: -1.5019317865371704
    3. '   ' → logprob: -13.501932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '−' → logprob: -16.25193214416504
    6. '1' → logprob: -16.37693214416504
    7. ' ' → logprob: -17.12693214416504
    8. ',' → logprob: -17.50193214416504
    9. '  ' → logprob: -17.50193214416504
    10. '–' → logprob: -18.00193214416504

Token 968: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -21.25
    4. '2' → logprob: -22.5
    5. '   ' → logprob: -22.625
    6. '１' → logprob: -22.75
    7. '<|end|>' → logprob: -22.875
    8. '۱' → logprob: -23.5
    9. '১' → logprob: -23.625
    10. '=' → logprob: -24.5

Token 969: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '１' → logprob: -20.750001907348633
    4. '   ' → logprob: -21.125001907348633
    5. '```' → logprob: -21.375001907348633
    6. '<|end|>' → logprob: -21.500001907348633
    7. '১' → logprob: -21.750001907348633
    8. '۱' → logprob: -22.125001907348633
    9. '{' → logprob: -22.250001907348633
    10. '=' → logprob: -22.250001907348633

Token 970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001261845463886857
    2. ',v' → logprob: -9.000125885009766
    3. ' ,' → logprob: -13.375125885009766
    4. 'v' → logprob: -14.000125885009766
    5. ',
' → logprob: -15.000125885009766
    6. ',u' → logprob: -18.625125885009766
    7. '   ' → logprob: -18.750125885009766
    8. ' v' → logprob: -19.250125885009766
    9. 'u' → logprob: -19.875125885009766
    10. '-' → logprob: -20.125125885009766

Token 971: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10020667314529419
    2. ' v' → logprob: -2.3502066135406494
    3. '	v' → logprob: -17.72520637512207
    4. '   ' → logprob: -18.97520637512207
    5. ' ' → logprob: -19.35020637512207
    6. '    ' → logprob: -20.60020637512207
    7. '_v' → logprob: -21.97520637512207
    8. '(v' → logprob: -22.60020637512207
    9. '  ' → logprob: -22.72520637512207
    10. '$v' → logprob: -22.97520637512207

Token 972: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931532025337219
    2. ' -' → logprob: -0.6931532025337219
    3. ' ' → logprob: -12.318153381347656
    4. '   ' → logprob: -13.818153381347656
    5. '1' → logprob: -16.318153381347656
    6. '<|end|>' → logprob: -16.568153381347656
    7. 'def' → logprob: -17.318153381347656
    8. ' ' → logprob: -17.318153381347656
    9. '_' → logprob: -17.318153381347656
    10. ')' → logprob: -17.568153381347656

Token 973: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.50006675720215
    4. '2' → logprob: -18.87506675720215
    5. '```' → logprob: -19.00006675720215
    6. '  ' → logprob: -20.00006675720215
    7. '１' → logprob: -20.62506675720215
    8. '<|end|>' → logprob: -20.87506675720215
    9. '-' → logprob: -21.62506675720215
    10. '0' → logprob: -21.62506675720215

Token 974: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '2' → logprob: -16.875001907348633
    4. '```' → logprob: -18.000001907348633
    5. '<|end|>' → logprob: -18.187501907348633
    6. '   ' → logprob: -19.312501907348633
    7. '１' → logprob: -19.437501907348633
    8. '۱' → logprob: -19.625001907348633
    9. '-' → logprob: -19.687501907348633
    10. '11' → logprob: -19.687501907348633

Token 975: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.226628895296017e-06
    2. '
' → logprob: -12.000007629394531
    3. '```' → logprob: -14.375007629394531
    4. ' def' → logprob: -15.375007629394531
    5. '

' → logprob: -15.875007629394531
    6. '<|end|>' → logprob: -16.00000762939453
    7. '    
' → logprob: -17.50000762939453
    8. '  
' → logprob: -18.12500762939453
    9. '   ' → logprob: -18.25000762939453
    10. ':def' → logprob: -19.00000762939453

Token 976: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.375000953674316
    3. ' def' → logprob: -17.125
    4. '
' → logprob: -18.375
    5. '<|end|>' → logprob: -19.75
    6. '``' → logprob: -20.125
    7. '#' → logprob: -20.75
    8. '	def' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. 'ndef' → logprob: -22.0

Token 977: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0019388694781810045
    2. 'def' → logprob: -6.251938819885254
    3. ' add' → logprob: -11.501938819885254
    4. 'adjust' → logprob: -16.75193977355957
    5. '	add' → logprob: -17.87693977355957
    6. 'define' → logprob: -18.75193977355957
    7. 'Add' → logprob: -18.87693977355957
    8. ' def' → logprob: -19.00193977355957
    9. '_add' → logprob: -19.00193977355957
    10. '
' → logprob: -19.00193977355957

Token 978: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0017841795925050974
    2. 'both' → logprob: -6.376784324645996
    3. 'Both' → logprob: -10.001784324645996
    4. ' both' → logprob: -11.126784324645996
    5. '_' → logprob: -12.251784324645996
    6. '_edge' → logprob: -12.501784324645996
    7. '```' → logprob: -12.751784324645996
    8. 'def' → logprob: -13.126784324645996
    9. '_all' → logprob: -13.251784324645996
    10. '(_' → logprob: -13.251784324645996

Token 979: 'oth' (ID: 1661)
  Prédit: 'oth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oth' → logprob: -0.0001238004770129919
    2. 'both' → logprob: -9.000123977661133
    3. '_' → logprob: -15.750123977661133
    4. 'ot' → logprob: -17.000123977661133
    5. 'othe' → logprob: -17.250123977661133
    6. ' oth' → logprob: -17.375123977661133
    7. 'other' → logprob: -17.625123977661133
    8. '_b' → logprob: -17.750123977661133
    9. 'o' → logprob: -17.750123977661133
    10. '```' → logprob: -18.875123977661133

Token 980: '_direction' (ID: 64332)
  Prédit: '_direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.003051385283470154
    2. '_edges' → logprob: -6.003051280975342
    3. '_edge' → logprob: -7.628051280975342
    4. '_b' → logprob: -9.8780517578125
    5. '_d' → logprob: -11.6280517578125
    6. '_bid' → logprob: -11.7530517578125
    7. '_direct' → logprob: -12.1280517578125
    8. '_dir' → logprob: -12.3780517578125
    9. '```' → logprob: -13.2530517578125
    10. 'direction' → logprob: -13.2530517578125

Token 981: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.12258882028982e-05
    2. '_edge' → logprob: -9.87506103515625
    3. '_ed' → logprob: -12.12506103515625
    4. 's' → logprob: -12.87506103515625
    5. '_s' → logprob: -14.12506103515625
    6. '_' → logprob: -14.62506103515625
    7. '```' → logprob: -15.75006103515625
    8. '_b' → logprob: -16.37506103515625
    9. '_nodes' → logprob: -16.62506103515625
    10. '_c' → logprob: -17.37506103515625

Token 982: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.125015258789062
    3. ' (' → logprob: -18.125015258789062
    4. '(user' → logprob: -18.625015258789062
    5. '(a' → logprob: -18.625015258789062
    6. '(U' → logprob: -19.000015258789062
    7. '(_' → logprob: -19.500015258789062
    8. '(i' → logprob: -19.875015258789062
    9. '(s' → logprob: -20.000015258789062
    10. '(v' → logprob: -20.375015258789062

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035072024911642075
    2. ',v' → logprob: -8.000350952148438
    3. ' ,' → logprob: -11.500350952148438
    4. ',u' → logprob: -12.375350952148438
    5. '   ' → logprob: -14.625350952148438
    6. 'v' → logprob: -15.625350952148438
    7. ',
' → logprob: -16.250350952148438
    8. 'u' → logprob: -16.375350952148438
    9. 'def' → logprob: -16.625350952148438
    10. '```' → logprob: -17.375350952148438

Token 984: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.011048289015889168
    2. ' v' → logprob: -4.511048316955566
    3. 'u' → logprob: -14.636048316955566
    4. '   ' → logprob: -18.01104736328125
    5. ' u' → logprob: -18.13604736328125
    6. '	v' → logprob: -18.38604736328125
    7. '    ' → logprob: -19.01104736328125
    8. ',' → logprob: -19.38604736328125
    9. ' ' → logprob: -19.88604736328125
    10. ',v' → logprob: -19.88604736328125

Token 985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.248469718324486e-05
    2. ',u' → logprob: -11.250022888183594
    3. ' ,' → logprob: -11.750022888183594
    4. ',a' → logprob: -13.875022888183594
    5. '   ' → logprob: -14.625022888183594
    6. ',
' → logprob: -17.375022888183594
    7. 'u' → logprob: -17.500022888183594
    8. '):' → logprob: -18.625022888183594
    9. '```' → logprob: -18.625022888183594
    10. ',v' → logprob: -19.000022888183594

Token 986: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502717612311244
    2. ' a' → logprob: -6.501502513885498
    3. 'u' → logprob: -15.626502990722656
    4. '   ' → logprob: -15.751502990722656
    5. '	a' → logprob: -16.501502990722656
    6. '_a' → logprob: -17.251502990722656
    7. '    ' → logprob: -18.126502990722656
    8. ' u' → logprob: -19.001502990722656
    9. '  ' → logprob: -19.126502990722656
    10. ' ' → logprob: -19.251502990722656

Token 987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.180879816180095e-05
    2. ' ,' → logprob: -10.375051498413086
    3. ',b' → logprob: -11.000051498413086
    4. '   ' → logprob: -13.125051498413086
    5. ',v' → logprob: -14.625051498413086
    6. ',a' → logprob: -14.750051498413086
    7. 'b' → logprob: -15.000051498413086
    8. 'a' → logprob: -15.750051498413086
    9. '```' → logprob: -16.000051498413086
    10. 'def' → logprob: -16.250051498413086

Token 988: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011853460222482681
    2. ' b' → logprob: -4.5118536949157715
    3. 'a' → logprob: -7.1368536949157715
    4. ' a' → logprob: -11.511853218078613
    5. '	b' → logprob: -17.26185417175293
    6. '   ' → logprob: -17.88685417175293
    7. 'u' → logprob: -18.13685417175293
    8. ' ' → logprob: -18.63685417175293
    9. ',b' → logprob: -19.76185417175293
    10. '  ' → logprob: -19.88685417175293

Token 989: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ' ,' → logprob: -11.750018119812012
    3. '   ' → logprob: -12.375018119812012
    4. ',u' → logprob: -12.625018119812012
    5. ',y' → logprob: -13.625018119812012
    6. '):
' → logprob: -14.750018119812012
    7. '):' → logprob: -14.750018119812012
    8. ',
' → logprob: -15.000018119812012
    9. '```' → logprob: -16.250019073486328
    10. '_,' → logprob: -16.500019073486328

Token 990: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' → logprob: -0.03806202858686447
    2. ' yen' → logprob: -3.28806209564209
    3. '   ' → logprob: -11.03806209564209
    4. 'y' → logprob: -13.78806209564209
    5. 'yan' → logprob: -14.03806209564209
    6. 'yer' → logprob: -14.41306209564209
    7. ' ' → logprob: -14.53806209564209
    8. 'ye' → logprob: -14.66306209564209
    9. '```' → logprob: -14.78806209564209
    10. 'zen' → logprob: -15.78806209564209

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -11.750009536743164
    3. ',s' → logprob: -13.875009536743164
    4. ',y' → logprob: -14.625009536743164
    5. ',
' → logprob: -15.500009536743164
    6. '   ' → logprob: -16.000009536743164
    7. ',v' → logprob: -16.250009536743164
    8. ',u' → logprob: -18.000009536743164
    9. '_,' → logprob: -18.125009536743164
    10. 'sn' → logprob: -18.375009536743164

Token 992: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.02975071594119072
    2. ' sn' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.65475082397461
    4. ' ' → logprob: -17.27975082397461
    5. '(sn' → logprob: -17.77975082397461
    6. '_sn' → logprob: -18.15475082397461
    7. 's' → logprob: -18.52975082397461
    8. 'sm' → logprob: -19.40475082397461
    9. 'Sn' → logprob: -19.52975082397461
    10. '
' → logprob: -19.65475082397461

Token 993: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -3.619311974034645e-05
    2. 'uk' → logprob: -10.875036239624023
    3. 'u' → logprob: -11.375036239624023
    4. '   ' → logprob: -12.875036239624023
    5. ' uke' → logprob: -13.125036239624023
    6. '```' → logprob: -14.500036239624023
    7. '  ' → logprob: -16.375036239624023
    8. 'une' → logprob: -17.125036239624023
    9. '_' → logprob: -17.250036239624023
    10. 'uck' → logprob: -17.375036239624023

Token 994: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4068393111228943
    2. '):
' → logprob: -1.156839370727539
    3. ',' → logprob: -4.156839370727539
    4. '(u' → logprob: -6.031839370727539
    5. '):
' → logprob: -6.781839370727539
    6. '   ' → logprob: -8.531839370727539
    7. ',u' → logprob: -8.906839370727539
    8. ')' → logprob: -9.281839370727539
    9. '):

' → logprob: -9.281839370727539
    10. ':' → logprob: -10.781839370727539

Token 995: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16095224022865295
    2. 'yen' → logprob: -1.9109522104263306
    3. ' yen' → logprob: -7.285952091217041
    4. 'yer' → logprob: -11.1609525680542
    5. 'y' → logprob: -12.0359525680542
    6. 'yan' → logprob: -12.6609525680542
    7. '   ' → logprob: -12.6609525680542
    8. '```' → logprob: -13.0359525680542
    9. 'yor' → logprob: -13.2859525680542
    10. 'zen' → logprob: -13.7859525680542

Token 996: ' add' (ID: 1147)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yen' → logprob: -7.195421494543552e-05
    2. '   ' → logprob: -10.12507152557373
    3. ' yen' → logprob: -10.37507152557373
    4. 'yer' → logprob: -15.37507152557373
    5. 'y' → logprob: -16.125072479248047
    6. 'yan' → logprob: -16.375072479248047
    7. 'yuan' → logprob: -16.375072479248047
    8. '```' → logprob: -17.000072479248047
    9. 'yon' → logprob: -17.125072479248047
    10. 'ye' → logprob: -17.625072479248047

Token 997: '_y' (ID: 9410)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.0082489252090454
    2. '_edge' → logprob: -1.5082489252090454
    3. 'yen' → logprob: -1.7582489252090454
    4. 'both' → logprob: -2.258248805999756
    5. '_edges' → logprob: -2.758248805999756
    6. 'edge' → logprob: -4.133248805999756
    7. '(u' → logprob: -4.258248805999756
    8. 'edges' → logprob: -4.758248805999756
    9. 'y' → logprob: -5.258248805999756
    10. '(y' → logprob: -5.508248805999756

Token 998: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00012011249782517552
    2. 'n' → logprob: -9.125120162963867
    3. '_en' → logprob: -12.625120162963867
    4. 'e' → logprob: -12.750120162963867
    5. '```' → logprob: -13.625120162963867
    6. '(en' → logprob: -14.125120162963867
    7. 'es' → logprob: -15.000120162963867
    8. '_' → logprob: -15.250120162963867
    9. 'ен' → logprob: -15.500120162963867
    10. '_n' → logprob: -15.500120162963867

Token 999: '_edges' (ID: 68870)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.018139062449336052
    2. '(y' → logprob: -4.518138885498047
    3. '_edge' → logprob: -5.268138885498047
    4. '(' → logprob: -6.518138885498047
    5. 'edge' → logprob: -8.518138885498047
    6. '_edges' → logprob: -9.393138885498047
    7. '(_' → logprob: -10.518138885498047
    8. ' (' → logprob: -10.768138885498047
    9. '(v' → logprob: -10.893138885498047
    10. 'yen' → logprob: -11.143138885498047

Token 1000: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.04860859736800194
    2. '(y' → logprob: -3.0486085414886475
    3. '(' → logprob: -10.798608779907227
    4. 'u' → logprob: -15.048608779907227
    5. 'y' → logprob: -15.548608779907227
    6. '   ' → logprob: -15.673608779907227
    7. ' (' → logprob: -16.048608779907227
    8. '(v' → logprob: -17.548608779907227
    9. '```' → logprob: -17.798608779907227
    10. '((' → logprob: -18.423608779907227

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017302791820839047
    2. ' ,' → logprob: -9.00017261505127
    3. ',y' → logprob: -11.00017261505127
    4. ')' → logprob: -11.12517261505127
    5. 'y' → logprob: -11.62517261505127
    6. '   ' → logprob: -12.87517261505127
    7. '<|end|>' → logprob: -13.62517261505127
    8. ',v' → logprob: -13.75017261505127
    9. ',
' → logprob: -14.00017261505127
    10. '```' → logprob: -14.25017261505127

Token 1002: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0008048642775975168
    2. ' v' → logprob: -7.125804901123047
    3. 'u' → logprob: -15.250804901123047
    4. '   ' → logprob: -16.125804901123047
    5. '	v' → logprob: -16.250804901123047
    6. ')v' → logprob: -18.000804901123047
    7. '    ' → logprob: -18.250804901123047
    8. '<v' → logprob: -19.250804901123047
    9. ',v' → logprob: -19.250804901123047
    10. 'y' → logprob: -19.625804901123047

Token 1003: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005576779949478805
    2. ' ,' → logprob: -8.000557899475098
    3. ',y' → logprob: -9.125557899475098
    4. '   ' → logprob: -9.500557899475098
    5. 'y' → logprob: -10.875557899475098
    6. 'yen' → logprob: -12.000557899475098
    7. ')' → logprob: -12.500557899475098
    8. 'a' → logprob: -12.750557899475098
    9. '```' → logprob: -13.000557899475098
    10. '),' → logprob: -14.250557899475098

Token 1004: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000563638168387115
    2. ' a' → logprob: -7.500563621520996
    3. '   ' → logprob: -11.750563621520996
    4. '  ' → logprob: -14.375563621520996
    5. ' ' → logprob: -14.500563621520996
    6. 'yen' → logprob: -14.625563621520996
    7. 'u' → logprob: -15.000563621520996
    8. 'b' → logprob: -15.375563621520996
    9. '    ' → logprob: -15.875563621520996
    10. '	a' → logprob: -16.250564575195312

Token 1005: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025229842867702246
    2. '   ' → logprob: -6.627522945404053
    3. ')' → logprob: -7.252522945404053
    4. ' ,' → logprob: -8.752523422241211
    5. ',y' → logprob: -8.877523422241211
    6. ')
' → logprob: -8.877523422241211
    7. '<|end|>' → logprob: -11.502523422241211
    8. ' and' → logprob: -11.877523422241211
    9. 'y' → logprob: -12.002523422241211
    10. ',b' → logprob: -12.127523422241211

Token 1006: ' yen' (ID: 34890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20345953106880188
    2. 'b' → logprob: -1.7034595012664795
    3. ' a' → logprob: -6.578459739685059
    4. ' b' → logprob: -7.453459739685059
    5. 'u' → logprob: -9.703459739685059
    6. '   ' → logprob: -12.578459739685059
    7. 'y' → logprob: -13.078459739685059
    8. ' ' → logprob: -13.328459739685059
    9. ' u' → logprob: -13.890959739685059
    10. '```' → logprob: -13.890959739685059

Token 1007: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4144846498966217
    2. ')
' → logprob: -1.6644846200942993
    3. '   ' → logprob: -2.289484739303589
    4. ')' → logprob: -3.039484739303589
    5. 'def' → logprob: -7.66448450088501
    6. ',
' → logprob: -9.414484977722168
    7. ',y' → logprob: -9.539484977722168
    8. '
' → logprob: -9.789484977722168
    9. ' ,' → logprob: -10.414484977722168
    10. 'sn' → logprob: -10.789484977722168

Token 1008: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05100126564502716
    2. 'def' → logprob: -3.0510013103485107
    3. 'add' → logprob: -6.301001071929932
    4. '
' → logprob: -7.926001071929932
    5. '    
' → logprob: -9.30100154876709
    6. '```' → logprob: -9.30100154876709
    7. '<|end|>' → logprob: -11.67600154876709
    8. '_add' → logprob: -12.05100154876709
    9. ',' → logprob: -12.55100154876709
    10. ' def' → logprob: -12.67600154876709

Token 1009: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.0009991057449951768
    2. '   ' → logprob: -7.1259989738464355
    3. 'def' → logprob: -8.750999450683594
    4. ' add' → logprob: -10.250999450683594
    5. '	add' → logprob: -14.625999450683594
    6. '```' → logprob: -15.500999450683594
    7. ' ' → logprob: -16.500999450683594
    8. '
' → logprob: -16.625999450683594
    9. '  ' → logprob: -17.000999450683594
    10. '_add' → logprob: -17.375999450683594

Token 1010: '_sn' (ID: 68531)
  Prédit: '_sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sn' → logprob: -0.0007278018747456372
    2. '_y' → logprob: -7.375727653503418
    3. '_' → logprob: -9.750727653503418
    4. 'sn' → logprob: -10.750727653503418
    5. '_s' → logprob: -11.750727653503418
    6. '```' → logprob: -12.750727653503418
    7. '(sn' → logprob: -13.125727653503418
    8. 'y' → logprob: -13.125727653503418
    9. '_b' → logprob: -13.625727653503418
    10. ' sn' → logprob: -14.500727653503418

Token 1011: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -3.190178904333152e-05
    2. 'u' → logprob: -10.750031471252441
    3. 'uk' → logprob: -11.625031471252441
    4. '```' → logprob: -15.000031471252441
    5. '   ' → logprob: -15.125031471252441
    6. 'n' → logprob: -15.500031471252441
    7. '_' → logprob: -15.625031471252441
    8. ' uke' → logprob: -16.250032424926758
    9. '...' → logprob: -16.875032424926758
    10. '`' → logprob: -17.250032424926758

Token 1012: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -9.729906196298543e-06
    2. '_edge' → logprob: -11.750009536743164
    3. 'edges' → logprob: -14.125009536743164
    4. '```' → logprob: -15.000009536743164
    5. '_s' → logprob: -15.750009536743164
    6. '_lines' → logprob: -16.375009536743164
    7. 's' → logprob: -16.375009536743164
    8. '_b' → logprob: -16.750009536743164
    9. '_ed' → logprob: -16.750009536743164
    10. '(_' → logprob: -16.875009536743164

Token 1013: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0011834424221888185
    2. '(v' → logprob: -6.75118350982666
    3. '(' → logprob: -12.00118350982666
    4. 'u' → logprob: -12.00118350982666
    5. '(
' → logprob: -14.75118350982666
    6. ' (' → logprob: -15.12618350982666
    7. 'def' → logprob: -16.376182556152344
    8. 'v' → logprob: -17.251182556152344
    9. '   ' → logprob: -17.751182556152344
    10. '(s' → logprob: -18.126182556152344

Token 1014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022344745229929686
    2. ',v' → logprob: -6.12723445892334
    3. ' ,' → logprob: -10.25223445892334
    4. 'v' → logprob: -11.62723445892334
    5. ' v' → logprob: -12.75223445892334
    6. '```' → logprob: -14.00223445892334
    7. '   ' → logprob: -14.62723445892334
    8. ',
' → logprob: -15.00223445892334
    9. '(v' → logprob: -15.37723445892334
    10. 'def' → logprob: -16.002235412597656

Token 1015: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.3319124011322856e-05
    2. ' v' → logprob: -11.250022888183594
    3. 'u' → logprob: -11.500022888183594
    4. '	v' → logprob: -16.625022888183594
    5. 's' → logprob: -18.250022888183594
    6. '```' → logprob: -18.250022888183594
    7. '   ' → logprob: -18.750022888183594
    8. '
' → logprob: -19.250022888183594
    9. 'y' → logprob: -19.625022888183594
    10. ',v' → logprob: -19.750022888183594

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1186566047836095e-05
    2. ',b' → logprob: -10.875031471252441
    3. '   ' → logprob: -11.875031471252441
    4. 'b' → logprob: -13.125031471252441
    5. ' ,' → logprob: -13.125031471252441
    6. '```' → logprob: -15.000031471252441
    7. ',s' → logprob: -15.250031471252441
    8. 'def' → logprob: -15.500031471252441
    9. ',v' → logprob: -16.000030517578125
    10. ' b' → logprob: -16.000030517578125

Token 1017: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.794061770662665e-05
    2. ' b' → logprob: -9.62509822845459
    3. 'a' → logprob: -10.37509822845459
    4. '   ' → logprob: -15.25009822845459
    5. 'u' → logprob: -15.37509822845459
    6. 'sn' → logprob: -15.87509822845459
    7. 's' → logprob: -16.875097274780273
    8. ' ' → logprob: -18.000097274780273
    9. ' a' → logprob: -18.500097274780273
    10. '    ' → logprob: -18.500097274780273

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002933942887466401
    2. ')' → logprob: -8.500293731689453
    3. '   ' → logprob: -10.000293731689453
    4. ',y' → logprob: -10.625293731689453
    5. ' ,' → logprob: -11.000293731689453
    6. 'def' → logprob: -13.125293731689453
    7. ',
' → logprob: -15.000293731689453
    8. '<|end|>' → logprob: -15.625293731689453
    9. '```' → logprob: -15.625293731689453
    10. ')
' → logprob: -15.875293731689453

Token 1019: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.00026181264547631145
    2. ' sn' → logprob: -8.250262260437012
    3. '```' → logprob: -15.750262260437012
    4. 's' → logprob: -15.875262260437012
    5. 'sm' → logprob: -16.250261306762695
    6. '   ' → logprob: -16.875261306762695
    7. '(sn' → logprob: -17.375261306762695
    8. 'sk' → logprob: -17.500261306762695
    9. ' ' → logprob: -18.000261306762695
    10. '
' → logprob: -18.250261306762695

Token 1020: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.045823566731997e-05
    2. 'uk' → logprob: -11.375020027160645
    3. 'u' → logprob: -11.750020027160645
    4. ' uke' → logprob: -15.125020027160645
    5. '   ' → logprob: -15.500020027160645
    6. '```' → logprob: -15.500020027160645
    7. 'ke' → logprob: -16.12502098083496
    8. '
' → logprob: -16.50002098083496
    9. 'ake' → logprob: -17.25002098083496
    10. 'oke' → logprob: -17.37502098083496

Token 1021: ')

' (ID: 1029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4476108253002167
    2. '
' → logprob: -1.322610855102539
    3. '   ' → logprob: -2.447610855102539
    4. '```' → logprob: -5.697610855102539
    5. '    
' → logprob: -6.072610855102539
    6. '<|end|>' → logprob: -6.697610855102539
    7. ')' → logprob: -7.572610855102539
    8. ')
' → logprob: -8.322610855102539
    9. '

' → logprob: -9.072610855102539
    10. ' def' → logprob: -10.572610855102539

Token 1022: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014346358366310596
    2. '
' → logprob: -6.626434803009033
    3. '   ' → logprob: -10.001434326171875
    4. '```' → logprob: -10.001434326171875
    5. ' def' → logprob: -11.501434326171875
    6. '    
' → logprob: -12.376434326171875
    7. '

' → logprob: -14.251434326171875
    8. '<|end|>' → logprob: -14.251434326171875
    9. '``' → logprob: -15.001434326171875
    10. '   
' → logprob: -15.001434326171875

Token 1023: ' add' (ID: 1147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023276694118976593
    2. 'add' → logprob: -3.7732768058776855
    3. 'define' → logprob: -11.398276329040527
    4. ' def' → logprob: -11.398276329040527
    5. '
' → logprob: -12.523276329040527
    6. ' add' → logprob: -13.523276329040527
    7. '_add' → logprob: -14.148276329040527
    8. 'ndef' → logprob: -14.648276329040527
    9. '```' → logprob: -14.648276329040527
    10. 'de' → logprob: -15.148276329040527

Token 1024: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.128163257315464e-07
    2. '_b' → logprob: -16.0
    3. '_x' → logprob: -16.875
    4. '_u' → logprob: -17.25
    5. 'y' → logprob: -17.375
    6. 'yen' → logprob: -17.625
    7. '```' → logprob: -17.625
    8. '_' → logprob: -18.25
    9. '_yes' → logprob: -18.875
    10. '_you' → logprob: -19.0

Token 1025: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0005924708093516529
    2. 'n' → logprob: -7.5005927085876465
    3. '_en' → logprob: -11.000592231750488
    4. 'sn' → logprob: -12.125592231750488
    5. '_sn' → logprob: -13.125592231750488
    6. '_n' → logprob: -13.250592231750488
    7. 'e' → logprob: -13.375592231750488
    8. 'yen' → logprob: -13.625592231750488
    9. '```' → logprob: -13.750592231750488
    10. '
' → logprob: -14.000592231750488

Token 1026: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0006125979125499725
    2. '(u' → logprob: -7.625612735748291
    3. '```' → logprob: -10.250612258911133
    4. '_' → logprob: -11.125612258911133
    5. '_edge' → logprob: -11.125612258911133
    6. 'edges' → logprob: -11.500612258911133
    7. '(_' → logprob: -12.000612258911133
    8. 'Edges' → logprob: -12.125612258911133
    9. 's' → logprob: -12.250612258911133
    10. '(' → logprob: -12.500612258911133

Token 1027: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'def' → logprob: -18.375
    4. '(
' → logprob: -18.5
    5. 'u' → logprob: -18.875
    6. ' (' → logprob: -20.375
    7. '(a' → logprob: -20.5
    8. '   ' → logprob: -20.625
    9. '(_' → logprob: -20.75
    10. '((' → logprob: -21.75

Token 1028: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013382164761424065
    2. '(u' → logprob: -7.001338005065918
    3. ',u' → logprob: -8.001338005065918
    4. ',v' → logprob: -10.126338005065918
    5. 'u' → logprob: -10.876338005065918
    6. '   ' → logprob: -11.376338005065918
    7. 'def' → logprob: -12.376338005065918
    8. ' ,' → logprob: -12.626338005065918
    9. '(v' → logprob: -12.876338005065918
    10. '<|end|>' → logprob: -13.001338005065918

Token 1029: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002491807099431753
    2. ' v' → logprob: -8.875248908996582
    3. 'u' → logprob: -9.125248908996582
    4. ' u' → logprob: -15.500248908996582
    5. '   ' → logprob: -16.5002498626709
    6. '	v' → logprob: -17.1252498626709
    7. 'y' → logprob: -18.7502498626709
    8. '
' → logprob: -19.5002498626709
    9. '```' → logprob: -19.7502498626709
    10. ',v' → logprob: -20.2502498626709

Token 1030: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',u' → logprob: -11.75001335144043
    3. ' ,' → logprob: -12.25001335144043
    4. '   ' → logprob: -15.25001335144043
    5. ',a' → logprob: -15.37501335144043
    6. ',
' → logprob: -15.87501335144043
    7. 'a' → logprob: -18.12501335144043
    8. '(u' → logprob: -18.25001335144043
    9. ',v' → logprob: -18.37501335144043
    10. 'u' → logprob: -18.62501335144043

Token 1031: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0076254382729530334
    2. ' a' → logprob: -4.882625579833984
    3. 'u' → logprob: -11.132625579833984
    4. ' u' → logprob: -13.382625579833984
    5. '   ' → logprob: -13.882625579833984
    6. ',' → logprob: -14.257625579833984
    7. 'y' → logprob: -14.382625579833984
    8. 'b' → logprob: -15.132625579833984
    9. '```' → logprob: -15.382625579833984
    10. ' ' → logprob: -15.507625579833984

Token 1032: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ',u' → logprob: -13.125001907348633
    3. ' ,' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.250001907348633
    5. ',
' → logprob: -17.250001907348633
    6. '(u' → logprob: -17.875001907348633
    7. '):' → logprob: -18.000001907348633
    8. ',y' → logprob: -18.375001907348633
    9. '):
' → logprob: -19.250001907348633
    10. ',a' → logprob: -19.375001907348633

Token 1033: ' yen' (ID: 34890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32167091965675354
    2. 'yen' → logprob: -1.3216708898544312
    3. ' yen' → logprob: -5.321671009063721
    4. ' a' → logprob: -5.821671009063721
    5. 'y' → logprob: -8.571670532226562
    6. 'u' → logprob: -9.071670532226562
    7. '   ' → logprob: -9.196670532226562
    8. '```' → logprob: -10.821670532226562
    9. ' ' → logprob: -11.071670532226562
    10. 'ye' → logprob: -11.696670532226562

Token 1034: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003839597338810563
    2. '   ' → logprob: -8.500384330749512
    3. ',u' → logprob: -9.125384330749512
    4. ',y' → logprob: -10.375384330749512
    5. ' ,' → logprob: -11.000384330749512
    6. '):' → logprob: -11.875384330749512
    7. ',
' → logprob: -11.875384330749512
    8. '):
' → logprob: -12.000384330749512
    9. 'u' → logprob: -14.000384330749512
    10. ':' → logprob: -14.125384330749512

Token 1035: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22565476596355438
    2. 'yen' → logprob: -1.6006547212600708
    3. ' yen' → logprob: -9.100654602050781
    4. '```' → logprob: -9.600654602050781
    5. 'yer' → logprob: -11.100654602050781
    6. 'def' → logprob: -11.725654602050781
    7. 'yan' → logprob: -12.225654602050781
    8. 'y' → logprob: -12.350654602050781
    9. '   ' → logprob: -12.600654602050781
    10. '    
' → logprob: -12.850654602050781

Token 1036: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' (adapté à ' yen') → logprob: -0.00019769940990954638
    2. '   ' → logprob: -8.625197410583496
    3. ' yen' → logprob: -11.125197410583496
    4. '```' → logprob: -13.750197410583496
    5. 'y' → logprob: -14.250197410583496
    6. 'yer' → logprob: -14.500197410583496
    7. 'yan' → logprob: -15.125197410583496
    8. 'ye' → logprob: -16.000198364257812
    9. 'yuan' → logprob: -16.000198364257812
    10. 'yon' → logprob: -16.375198364257812

Token 1037: '.add' (ID: 1950)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.12693892419338226
    2. '.add' → logprob: -2.126938819885254
    3. '.' → logprob: -11.876938819885254
    4. '_add' → logprob: -13.501938819885254
    5. 'add' → logprob: -14.001938819885254
    6. ')._' → logprob: -14.126938819885254
    7. ']._' → logprob: -14.501938819885254
    8. ' .' → logprob: -15.376938819885254
    9. '```' → logprob: -15.876938819885254
    10. '   ' → logprob: -16.87693977355957

Token 1038: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.875000953674316
    3. 'u' → logprob: -15.000000953674316
    4. ' u' → logprob: -20.25
    5. '	u' → logprob: -20.25
    6. '(
' → logprob: -21.0
    7. ',u' → logprob: -21.125
    8. ' (' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '(v' → logprob: -21.875

Token 1039: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5252596464706585e-05
    2. ' ,' → logprob: -10.250044822692871
    3. ',v' → logprob: -11.625044822692871
    4. ',u' → logprob: -14.500044822692871
    5. '   ' → logprob: -15.625044822692871
    6. 'v' → logprob: -16.250045776367188
    7. ',
' → logprob: -17.000045776367188
    8. ')' → logprob: -18.000045776367188
    9. '```' → logprob: -18.500045776367188
    10. 'u' → logprob: -18.875045776367188

Token 1040: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001234428636962548
    2. ' v' → logprob: -9.000123023986816
    3. '	v' → logprob: -18.625123977661133
    4. ')v' → logprob: -20.250123977661133
    5. '   ' → logprob: -21.375123977661133
    6. '
' → logprob: -22.500123977661133
    7. ' ' → logprob: -23.125123977661133
    8. '  ' → logprob: -23.250123977661133
    9. '<v' → logprob: -23.375123977661133
    10. 'vq' → logprob: -23.375123977661133

Token 1041: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003062646137550473
    2. ' ,' → logprob: -8.250306129455566
    3. ',a' → logprob: -10.250306129455566
    4. '   ' → logprob: -11.750306129455566
    5. 'a' → logprob: -13.500306129455566
    6. '    ' → logprob: -16.250307083129883
    7. ' a' → logprob: -16.625307083129883
    8. '  ' → logprob: -17.500307083129883
    9. ',
' → logprob: -18.000307083129883
    10. ')' → logprob: -18.125307083129883

Token 1042: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000158842682139948
    2. ' a' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.12515926361084
    4. '	a' → logprob: -17.375158309936523
    5. '    ' → logprob: -18.500158309936523
    6. ' ' → logprob: -18.500158309936523
    7. ')a' → logprob: -18.500158309936523
    8. '  ' → logprob: -18.875158309936523
    9. '_a' → logprob: -19.750158309936523
    10. ')' → logprob: -20.250158309936523

Token 1043: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10178270936012268
    2. ')' → logprob: -2.35178279876709
    3. ')
' → logprob: -6.85178279876709
    4. '   ' → logprob: -7.60178279876709
    5. ' )
' → logprob: -11.47678279876709
    6. ')y' → logprob: -12.10178279876709
    7. ' )' → logprob: -14.35178279876709
    8. 'yen' → logprob: -14.85178279876709
    9. ')

' → logprob: -15.72678279876709
    10. '),' → logprob: -15.85178279876709

Token 1044: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237825512886047
    2. 'yen' → logprob: -0.8987825512886047
    3. ' yen' → logprob: -7.398782730102539
    4. '```' → logprob: -11.523782730102539
    5. 'yer' → logprob: -11.898782730102539
    6. 'yor' → logprob: -12.273782730102539
    7. 'y' → logprob: -12.273782730102539
    8. '   ' → logprob: -12.398782730102539
    9. 'yan' → logprob: -12.648782730102539
    10. 'yuan' → logprob: -13.273782730102539

Token 1045: ' yen' (ID: 34890)
  Prédit: 'yen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yen' (adapté à ' yen') → logprob: -4.60414821645827e-06
    2. '   ' → logprob: -12.500004768371582
    3. ' yen' → logprob: -14.125004768371582
    4. 'y' → logprob: -16.000003814697266
    5. 'yan' → logprob: -17.000003814697266
    6. 'yuan' → logprob: -18.250003814697266
    7. 'yer' → logprob: -18.500003814697266
    8. 'yon' → logprob: -18.750003814697266
    9. '       ' → logprob: -19.500003814697266
    10. 'yin' → logprob: -19.625003814697266

Token 1046: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. ' .' → logprob: -14.375431060791016
    4. 'add' → logprob: -15.750431060791016
    5. '   ' → logprob: -17.125431060791016
    6. ').' → logprob: -17.500431060791016
    7. '	add' → logprob: -18.750431060791016
    8. '._' → logprob: -19.125431060791016
    9. ' ' → logprob: -19.250431060791016
    10. '```' → logprob: -19.250431060791016

Token 1047: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0008070098701864481
    2. '(' → logprob: -7.12580680847168
    3. ' (' → logprob: -13.87580680847168
    4. '(
' → logprob: -13.87580680847168
    5. '(u' → logprob: -15.00080680847168
    6. ' v' → logprob: -15.12580680847168
    7. 'v' → logprob: -15.75080680847168
    8. '(V' → logprob: -19.12580680847168
    9. '	v' → logprob: -19.75080680847168
    10. '<|end|>' → logprob: -19.75080680847168

Token 1048: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005593468667939305
    2. ' ,' → logprob: -7.625559329986572
    3. ',u' → logprob: -9.62555980682373
    4. '   ' → logprob: -12.62555980682373
    5. 'u' → logprob: -13.62555980682373
    6. ' u' → logprob: -14.87555980682373
    7. ',v' → logprob: -15.75055980682373
    8. '```' → logprob: -16.750558853149414
    9. '_,' → logprob: -17.000558853149414
    10. ' ' → logprob: -17.250558853149414

Token 1049: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002476016292348504
    2. ' u' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.37747573852539
    4. ' ' → logprob: -16.37747573852539
    5. '	u' → logprob: -16.37747573852539
    6. '  ' → logprob: -19.50247573852539
    7. '    ' → logprob: -19.62747573852539
    8. '[u' → logprob: -19.87747573852539
    9. ',u' → logprob: -20.25247573852539
    10. ',' → logprob: -20.62747573852539

Token 1050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005043004639446735
    2. ',a' → logprob: -7.625504493713379
    3. ' ,' → logprob: -11.500504493713379
    4. 'a' → logprob: -12.500504493713379
    5. '   ' → logprob: -13.250504493713379
    6. ' a' → logprob: -14.875504493713379
    7. ',u' → logprob: -16.625503540039062
    8. ',
' → logprob: -17.375503540039062
    9. ')' → logprob: -17.375503540039062
    10. '<|end|>' → logprob: -17.750503540039062

Token 1051: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.37520408630371
    4. '	a' → logprob: -18.50020408630371
    5. ' ' → logprob: -20.50020408630371
    6. '_a' → logprob: -21.25020408630371
    7. ')a' → logprob: -21.37520408630371
    8. '    ' → logprob: -21.50020408630371
    9. '  ' → logprob: -21.75020408630371
    10. ''a' → logprob: -22.12520408630371

Token 1052: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')
' → logprob: -10.500028610229492
    3. '   ' → logprob: -13.875028610229492
    4. ' )' → logprob: -15.500028610229492
    5. '<|end|>' → logprob: -16.250028610229492
    6. ')

' → logprob: -16.750028610229492
    7. ')#' → logprob: -17.375028610229492
    8. '),' → logprob: -17.875028610229492
    9. ')}' → logprob: -18.625028610229492
    10. ').' → logprob: -18.750028610229492

Token 1053: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005945982877165079
    2. '```' → logprob: -5.255946159362793
    3. 'def' → logprob: -7.505946159362793
    4. 'sn' → logprob: -8.880946159362793
    5. '``' → logprob: -10.880946159362793
    6. '
' → logprob: -13.130946159362793
    7. '    
' → logprob: -13.755946159362793
    8. '       ' → logprob: -15.255946159362793
    9. 'snippet' → logprob: -15.880946159362793
    10. ' ' → logprob: -15.880946159362793

Token 1054: ' add' (ID: 1147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4743635356426239
    2. 'add' → logprob: -0.9743635654449463
    3. 'sn' → logprob: -8.599363327026367
    4. ' add' → logprob: -9.474363327026367
    5. ' def' → logprob: -10.974363327026367
    6. '
' → logprob: -12.224363327026367
    7. '.add' → logprob: -14.224363327026367
    8. '```' → logprob: -14.224363327026367
    9. 'define' → logprob: -15.224363327026367
    10. ' sn' → logprob: -15.224363327026367

Token 1055: '_sn' (ID: 68531)
  Prédit: '_sn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sn' → logprob: -0.014165983535349369
    2. 'sn' → logprob: -4.264165878295898
    3. 'def' → logprob: -14.139165878295898
    4. ' sn' → logprob: -14.514165878295898
    5. 'Sn' → logprob: -15.139165878295898
    6. '(sn' → logprob: -15.264165878295898
    7. '_s' → logprob: -15.389165878295898
    8. 's' → logprob: -15.764165878295898
    9. '   ' → logprob: -15.889165878295898
    10. '```' → logprob: -15.889165878295898

Token 1056: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.5776860184123507e-06
    2. 'u' → logprob: -13.12500286102295
    3. 'uk' → logprob: -14.50000286102295
    4. 'n' → logprob: -18.500001907348633
    5. ' uke' → logprob: -19.375001907348633
    6. '
' → logprob: -19.625001907348633
    7. 'uck' → logprob: -19.625001907348633
    8. '_' → logprob: -19.750001907348633
    9. 'ke' → logprob: -20.375001907348633
    10. 'uhe' → logprob: -20.625001907348633

Token 1057: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0001483564410591498
    2. 'edges' → logprob: -8.87514877319336
    3. '(u' → logprob: -12.12514877319336
    4. 'def' → logprob: -13.75014877319336
    5. '```' → logprob: -14.25014877319336
    6. 'Edges' → logprob: -14.50014877319336
    7. '_sn' → logprob: -14.62514877319336
    8. '(v' → logprob: -16.12514877319336
    9. '
' → logprob: -16.87514877319336
    10. 's' → logprob: -17.00014877319336

Token 1058: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.5776860184123507e-06
    2. 'u' → logprob: -13.50000286102295
    3. '(v' → logprob: -13.75000286102295
    4. '(' → logprob: -17.625001907348633
    5. ' (' → logprob: -18.375001907348633
    6. 'def' → logprob: -18.500001907348633
    7. ' u' → logprob: -18.625001907348633
    8. '[u' → logprob: -18.875001907348633
    9. '(
' → logprob: -19.000001907348633
    10. '	u' → logprob: -19.375001907348633

Token 1059: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02603725530207157
    2. ',v' → logprob: -3.9010372161865234
    3. 'v' → logprob: -5.651037216186523
    4. '(v' → logprob: -6.901037216186523
    5. 'def' → logprob: -7.276037216186523
    6. '(u' → logprob: -8.651037216186523
    7. ' v' → logprob: -10.026037216186523
    8. 'u' → logprob: -11.276037216186523
    9. ',u' → logprob: -11.526037216186523
    10. '   ' → logprob: -12.026037216186523

Token 1060: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005158595158718526
    2. 'u' → logprob: -7.750515937805176
    3. ' v' → logprob: -9.375515937805176
    4. ' u' → logprob: -15.000515937805176
    5. '(v' → logprob: -17.87551498413086
    6. '	v' → logprob: -17.87551498413086
    7. '```' → logprob: -18.00051498413086
    8. '(u' → logprob: -18.12551498413086
    9. 'vi' → logprob: -19.50051498413086
    10. '   ' → logprob: -19.50051498413086

Token 1061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18816569447517395
    2. 'u' → logprob: -2.3131656646728516
    3. '(u' → logprob: -2.8131656646728516
    4. ' u' → logprob: -4.563165664672852
    5. '   ' → logprob: -6.438165664672852
    6. ',u' → logprob: -7.813165664672852
    7. ' (' → logprob: -10.563165664672852
    8. '```' → logprob: -11.063165664672852
    9. ' ,' → logprob: -11.313165664672852
    10. 'def' → logprob: -11.313165664672852

Token 1062: ' b' (ID: 287)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.008615754544734955
    2. ' u' → logprob: -4.758615970611572
    3. 'v' → logprob: -13.758615493774414
    4. '	u' → logprob: -16.008615493774414
    5. '(u' → logprob: -17.133615493774414
    6. '   ' → logprob: -17.133615493774414
    7. '```' → logprob: -17.258615493774414
    8. ' ' → logprob: -18.008615493774414
    9. '[u' → logprob: -18.383615493774414
    10. ' v' → logprob: -18.883615493774414

Token 1063: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8511202335357666
    2. '(sn' → logprob: -1.3511202335357666
    3. '   ' → logprob: -1.6011202335357666
    4. '(u' → logprob: -2.7261202335357666
    5. '(v' → logprob: -4.2261199951171875
    6. ' sn' → logprob: -4.7261199951171875
    7. 'v' → logprob: -4.8511199951171875
    8. 'sn' → logprob: -5.1011199951171875
    9. 'u' → logprob: -5.3511199951171875
    10. ',v' → logprob: -6.3511199951171875

Token 1064: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.12353559583425522
    2. ' sn' → logprob: -2.498535633087158
    3. 'u' → logprob: -3.498535633087158
    4. 's' → logprob: -5.873535633087158
    5. ' u' → logprob: -7.123535633087158
    6. 'v' → logprob: -9.62353515625
    7. ' s' → logprob: -9.99853515625
    8. '_sn' → logprob: -11.74853515625
    9. ' v' → logprob: -12.37353515625
    10. '   ' → logprob: -12.49853515625

Token 1065: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -6.980854959692806e-05
    2. 'u' → logprob: -9.750069618225098
    3. '```' → logprob: -12.500069618225098
    4. 'uk' → logprob: -12.750069618225098
    5. 'oke' → logprob: -12.875069618225098
    6. '   ' → logprob: -13.750069618225098
    7. '
' → logprob: -15.500069618225098
    8. 's' → logprob: -15.875069618225098
    9. 'uck' → logprob: -16.250070571899414
    10. ' uke' → logprob: -16.250070571899414

Token 1066: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2023848593235016
    2. ',' → logprob: -1.9523848295211792
    3. '   ' → logprob: -3.4523849487304688
    4. '):' → logprob: -4.952384948730469
    5. '(sn' → logprob: -7.077384948730469
    6. ')' → logprob: -7.327384948730469
    7. ')
' → logprob: -7.952384948730469
    8. 'def' → logprob: -8.202384948730469
    9. ',s' → logprob: -9.077384948730469
    10. '):
' → logprob: -9.702384948730469

Token 1067: '   ' (ID: 271)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -2.975612187583465e-05
    2. ' sn' → logprob: -11.000029563903809
    3. '   ' → logprob: -11.250029563903809
    4. '```' → logprob: -17.750030517578125
    5. 'snippet' → logprob: -19.625030517578125
    6. '(sn' → logprob: -20.000030517578125
    7. 'sm' → logprob: -20.125030517578125
    8. 'sk' → logprob: -20.250030517578125
    9. '_sn' → logprob: -20.500030517578125
    10. 's' → logprob: -21.500030517578125

Token 1068: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' (adapté à ' sn') → logprob: -1.9361264946837764e-07
    2. ' sn' → logprob: -16.0
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -20.5
    5. 'snippet' → logprob: -23.0
    6. '(sn' → logprob: -23.25
    7. 'sk' → logprob: -23.375
    8. '
' → logprob: -23.5
    9. 'sm' → logprob: -23.75
    10. '_sn' → logprob: -24.0

Token 1069: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.696889623621246e-06
    2. 'uk' → logprob: -13.75000286102295
    3. 'u' → logprob: -14.25000286102295
    4. 'n' → logprob: -14.62500286102295
    5. 's' → logprob: -15.62500286102295
    6. 'sn' → logprob: -16.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. 'uck' → logprob: -17.875001907348633
    9. 'oke' → logprob: -18.375001907348633
    10. '   ' → logprob: -18.500001907348633

Token 1070: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -6.2729995988775045e-06
    2. '.' → logprob: -12.000006675720215
    3. ' .' → logprob: -17.1250057220459
    4. 'add' → logprob: -17.7500057220459
    5. ').' → logprob: -20.5000057220459
    6. '.Add' → logprob: -21.1250057220459
    7. '   ' → logprob: -21.2500057220459
    8. '```' → logprob: -21.2500057220459
    9. '.append' → logprob: -22.2500057220459
    10. ')add' → logprob: -22.7500057220459

Token 1071: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0007104054093360901
    2. 'u' → logprob: -7.250710487365723
    3. '(v' → logprob: -15.125710487365723
    4. '	u' → logprob: -16.625709533691406
    5. ' u' → logprob: -18.000709533691406
    6. '(' → logprob: -18.000709533691406
    7. '[u' → logprob: -18.250709533691406
    8. '<u' → logprob: -19.000709533691406
    9. '/u' → logprob: -19.875709533691406
    10. ''u' → logprob: -20.125709533691406

Token 1072: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',v' → logprob: -11.000018119812012
    3. ' ,' → logprob: -13.750018119812012
    4. ',u' → logprob: -15.625018119812012
    5. 'v' → logprob: -17.125017166137695
    6. '   ' → logprob: -18.000017166137695
    7. ',
' → logprob: -18.000017166137695
    8. 'u' → logprob: -19.000017166137695
    9. ' v' → logprob: -19.000017166137695
    10. ',user' → logprob: -19.625017166137695

Token 1073: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7610454708337784e-05
    2. ' v' → logprob: -10.500027656555176
    3. 'u' → logprob: -19.50002670288086
    4. '	v' → logprob: -20.00002670288086
    5. '   ' → logprob: -21.37502670288086
    6. ',v' → logprob: -22.25002670288086
    7. ')v' → logprob: -22.87502670288086
    8. '    ' → logprob: -23.62502670288086
    9. '<|end|>' → logprob: -23.62502670288086
    10. '$v' → logprob: -24.12502670288086

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ',b' → logprob: -11.000025749206543
    3. ' ,' → logprob: -12.250025749206543
    4. '   ' → logprob: -12.875025749206543
    5. 'b' → logprob: -13.250025749206543
    6. ' b' → logprob: -17.25002670288086
    7. '```' → logprob: -18.37502670288086
    8. ',
' → logprob: -18.75002670288086
    9. ')' → logprob: -20.37502670288086
    10. ' ' → logprob: -20.62502670288086

Token 1075: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004306692280806601
    2. ' b' → logprob: -7.750430583953857
    3. '   ' → logprob: -21.000431060791016
    4. '	b' → logprob: -21.625431060791016
    5. '```' → logprob: -22.875431060791016
    6. ' ' → logprob: -24.375431060791016
    7. '_b' → logprob: -24.500431060791016
    8. ')b' → logprob: -24.625431060791016
    9. '1' → logprob: -25.375431060791016
    10. '>b' → logprob: -25.500431060791016

Token 1076: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2157212197780609
    2. '   ' → logprob: -2.2157211303710938
    3. ')' → logprob: -2.4657211303710938
    4. ')
' → logprob: -11.340721130371094
    5. ' )
' → logprob: -12.465721130371094
    6. ' )' → logprob: -14.965721130371094
    7. '  ' → logprob: -14.965721130371094
    8. ' ' → logprob: -15.465721130371094
    9. 'def' → logprob: -15.715721130371094
    10. ')\' → logprob: -15.965721130371094

Token 1077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005664954078383744
    2. 'sn' → logprob: -7.500566482543945
    3. ' sn' → logprob: -11.375566482543945
    4. '```' → logprob: -13.250566482543945
    5. '(sn' → logprob: -16.250566482543945
    6. '   ' → logprob: -16.625566482543945
    7. '
' → logprob: -17.250566482543945
    8. 'sk' → logprob: -17.750566482543945
    9. 'snippet' → logprob: -17.750566482543945
    10. '       ' → logprob: -17.875566482543945

Token 1078: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' (adapté à ' sn') → logprob: -0.0004307884373702109
    2. ' sn' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.625431060791016
    4. 'sk' → logprob: -18.500431060791016
    5. '(sn' → logprob: -19.000431060791016
    6. '.sn' → logprob: -21.000431060791016
    7. '```' → logprob: -21.000431060791016
    8. 'snippet' → logprob: -21.125431060791016
    9. '_sn' → logprob: -21.250431060791016
    10. 'sm' → logprob: -21.625431060791016

Token 1079: 'uke' (ID: 10307)
  Prédit: 'uke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uke' → logprob: -2.339278580620885e-06
    2. 'u' → logprob: -13.250001907348633
    3. 'uk' → logprob: -14.750001907348633
    4. 's' → logprob: -16.625001907348633
    5. 'n' → logprob: -17.375001907348633
    6. 'uck' → logprob: -18.000001907348633
    7. '```' → logprob: -18.875001907348633
    8. ' uke' → logprob: -18.875001907348633
    9. 'ukke' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.375001907348633

Token 1080: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.729906196298543e-06
    2. 'add' → logprob: -11.625009536743164
    3. '.' → logprob: -14.250009536743164
    4. '   ' → logprob: -17.500009536743164
    5. ' .' → logprob: -18.500009536743164
    6. '
' → logprob: -19.000009536743164
    7. '	add' → logprob: -19.375009536743164
    8. '```' → logprob: -19.375009536743164
    9. ' add' → logprob: -19.875009536743164
    10. '.sn' → logprob: -20.375009536743164

Token 1081: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.36574100604048e-06
    2. 'v' → logprob: -12.375004768371582
    3. '(' → logprob: -17.750003814697266
    4. ' v' → logprob: -17.875003814697266
    5. ' (' → logprob: -18.625003814697266
    6. '   ' → logprob: -18.875003814697266
    7. '	v' → logprob: -19.125003814697266
    8. '(
' → logprob: -21.625003814697266
    9. '[v' → logprob: -21.625003814697266
    10. '(V' → logprob: -21.875003814697266

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. 'u' → logprob: -10.12506103515625
    3. ',u' → logprob: -11.00006103515625
    4. ' ,' → logprob: -13.25006103515625
    5. ' u' → logprob: -13.37506103515625
    6. '   ' → logprob: -14.12506103515625
    7. '(u' → logprob: -16.62506103515625
    8. '```' → logprob: -16.87506103515625
    9. ',
' → logprob: -17.75006103515625
    10. ',v' → logprob: -17.87506103515625

Token 1083: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0380416102707386
    2. ' u' → logprob: -3.288041591644287
    3. 'v' → logprob: -16.038042068481445
    4. '	u' → logprob: -18.163042068481445
    5. ' v' → logprob: -19.913042068481445
    6. ' ' → logprob: -20.788042068481445
    7. ''u' → logprob: -22.038042068481445
    8. '_u' → logprob: -22.163042068481445
    9. '(u' → logprob: -22.163042068481445
    10. ',u' → logprob: -22.163042068481445

Token 1084: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ',b' → logprob: -9.500086784362793
    3. ' ,' → logprob: -11.750086784362793
    4. '   ' → logprob: -13.000086784362793
    5. ' b' → logprob: -14.250086784362793
    6. 'b' → logprob: -14.875086784362793
    7. ',v' → logprob: -15.000086784362793
    8. ',u' → logprob: -15.625086784362793
    9. '```' → logprob: -16.625085830688477
    10. '(b' → logprob: -17.250085830688477

Token 1085: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009115827269852161
    2. ' b' → logprob: -7.000911712646484
    3. 'u' → logprob: -17.125911712646484
    4. 'v' → logprob: -17.375911712646484
    5. '	b' → logprob: -19.625911712646484
    6. ' u' → logprob: -22.750911712646484
    7. '   ' → logprob: -23.000911712646484
    8. '(b' → logprob: -23.250911712646484
    9. ')b' → logprob: -23.375911712646484
    10. ' ' → logprob: -23.625911712646484

Token 1086: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4617256056226324e-05
    2. ')
' → logprob: -11.250014305114746
    3. ')

' → logprob: -14.625014305114746
    4. '   ' → logprob: -15.000014305114746
    5. '))' → logprob: -16.000015258789062
    6. '())' → logprob: -16.250015258789062
    7. ')return' → logprob: -16.250015258789062
    8. ' )' → logprob: -16.250015258789062
    9. '<|end|>' → logprob: -16.500015258789062
    10. ')}' → logprob: -16.625015258789062

Token 1087: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00018744789122138172
    2. 'if' → logprob: -8.875187873840332
    3. '```' → logprob: -10.250187873840332
    4. 'import' → logprob: -12.000187873840332
    5. '
' → logprob: -12.250187873840332
    6. 'for' → logprob: -14.625187873840332
    7. 'class' → logprob: -14.875187873840332
    8. 'answer' → logprob: -15.500187873840332
    9. '``' → logprob: -16.125186920166016
    10. 'from' → logprob: -16.750186920166016

Token 1088: ' adjust' (ID: 10266)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7201181650161743
    2. 'process' → logprob: -1.2201181650161743
    3. ' main' → logprob: -2.2201180458068848
    4. '__' → logprob: -2.9701180458068848
    5. 'def' → logprob: -3.5951180458068848
    6. ' process' → logprob: -3.7201180458068848
    7. ' def' → logprob: -5.470118045806885
    8. 'calculate' → logprob: -6.845118045806885
    9. 'output' → logprob: -8.345118522644043
    10. 'solve' → logprob: -8.470118522644043

Token 1089: '_node' (ID: 11390)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3747192621231079
    2. '(s' → logprob: -2.2497191429138184
    3. '_node' → logprob: -2.3747191429138184
    4. 'node' → logprob: -2.9997191429138184
    5. 't' → logprob: -3.4997191429138184
    6. 'def' → logprob: -4.624719142913818
    7. '_nodes' → logprob: -4.749719142913818
    8. '(node' → logprob: -5.749719142913818
    9. '_s' → logprob: -5.999719142913818
    10. '(t' → logprob: -6.249719142913818

Token 1090: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.010918483138084412
    2. 'indices' → logprob: -4.635918617248535
    3. 's' → logprob: -6.885918617248535
    4. '(s' → logprob: -9.760918617248535
    5. 'def' → logprob: -10.510918617248535
    6. '(indices' → logprob: -10.885918617248535
    7. '_ind' → logprob: -11.510918617248535
    8. ' indices' → logprob: -11.885918617248535
    9. '"indices' → logprob: -12.135918617248535
    10. 'Indices' → logprob: -12.510918617248535

Token 1091: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.8351892473874614e-05
    2. '(u' → logprob: -10.125048637390137
    3. '(' → logprob: -12.125048637390137
    4. 'def' → logprob: -13.000048637390137
    5. ' (' → logprob: -16.00004768371582
    6. '(def' → logprob: -16.25004768371582
    7. '(t' → logprob: -16.62504768371582
    8. '(S' → logprob: -16.87504768371582
    9. '(a' → logprob: -17.00004768371582
    10. '(
' → logprob: -17.00004768371582

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030114251421764493
    2. ',s' → logprob: -9.000301361083984
    3. ',t' → logprob: -10.000301361083984
    4. '):' → logprob: -10.000301361083984
    5. '   ' → logprob: -10.250301361083984
    6. '):
' → logprob: -11.000301361083984
    7. 's' → logprob: -11.625301361083984
    8. 'def' → logprob: -11.625301361083984
    9. ' ,' → logprob: -12.000301361083984
    10. 't' → logprob: -13.125301361083984

Token 1093: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804149478673935
    2. ' t' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.038042068481445
    4. 'def' → logprob: -18.288042068481445
    5. '`t' → logprob: -20.038042068481445
    6. '	t' → logprob: -20.663042068481445
    7. ')t' → logprob: -20.788042068481445
    8. '    ' → logprob: -20.913042068481445
    9. '_t' → logprob: -21.038042068481445
    10. '```' → logprob: -21.163042068481445

Token 1094: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10859448462724686
    2. '):
' → logprob: -2.3585944175720215
    3. ',' → logprob: -4.8585944175720215
    4. '   ' → logprob: -8.10859489440918
    5. ')' → logprob: -8.98359489440918
    6. '):
' → logprob: -9.73359489440918
    7. ':' → logprob: -9.73359489440918
    8. '(s' → logprob: -10.98359489440918
    9. '():
' → logprob: -11.98359489440918
    10. '():' → logprob: -12.35859489440918

Token 1095: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12694154679775238
    2. 'return' → logprob: -2.126941442489624
    3. ' return' → logprob: -11.251941680908203
    4. '	return' → logprob: -14.376941680908203
    5. '  ' → logprob: -17.126941680908203
    6. '{return' → logprob: -17.751941680908203
    7. 's' → logprob: -18.376941680908203
    8. '       ' → logprob: -18.626941680908203
    9. '```' → logprob: -19.001941680908203
    10. ':return' → logprob: -19.251941680908203

Token 1096: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009063472039997578
    2. '   ' → logprob: -4.759063243865967
    3. ' return' → logprob: -7.759063243865967
    4. 's' → logprob: -11.134063720703125
    5. '(s' → logprob: -12.509063720703125
    6. '{return' → logprob: -13.384063720703125
    7. '	return' → logprob: -13.759063720703125
    8. '(return' → logprob: -15.384063720703125
    9. '(' → logprob: -15.384063720703125
    10. '(
' → logprob: -15.884063720703125

Token 1097: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012071382952854037
    2. ' s' → logprob: -6.75120735168457
    3. '(s' → logprob: -10.25120735168457
    4. '   ' → logprob: -13.50120735168457
    5. ' (' → logprob: -16.25120735168457
    6. '(' → logprob: -16.62620735168457
    7. ' ' → logprob: -18.37620735168457
    8. '	s' → logprob: -18.37620735168457
    9. '`s' → logprob: -19.37620735168457
    10. '{s' → logprob: -19.75120735168457

Token 1098: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687241077423096
    2. '-' → logprob: -1.136872410774231
    3. ' ' → logprob: -13.761872291564941
    4. ' ' → logprob: -16.136873245239258
    5. '1' → logprob: -16.386873245239258
    6. '   ' → logprob: -16.761873245239258
    7. '  ' → logprob: -16.761873245239258
    8. '–' → logprob: -17.636873245239258
    9. '−' → logprob: -18.011873245239258
    10. 's' → logprob: -19.011873245239258

Token 1099: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '```' → logprob: -19.750001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. '１' → logprob: -21.500001907348633
    7. '۱' → logprob: -22.000001907348633
    8. '=' → logprob: -23.125001907348633
    9. '  ' → logprob: -23.250001907348633
    10. '0' → logprob: -23.312501907348633

Token 1100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.125
    5. '<|end|>' → logprob: -18.5
    6. '１' → logprob: -20.375
    7. '[' → logprob: -20.5
    8. '۱' → logprob: -20.5
    9. 'def' → logprob: -21.3125
    10. '0' → logprob: -21.5

Token 1101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8219583075260743e-05
    2. ',t' → logprob: -10.875038146972656
    3. ' ,' → logprob: -10.875038146972656
    4. 't' → logprob: -15.375038146972656
    5. ',
' → logprob: -16.250038146972656
    6. ' t' → logprob: -18.625038146972656
    7. 'def' → logprob: -19.250038146972656
    8. '   ' → logprob: -20.000038146972656
    9. '_,' → logprob: -20.375038146972656
    10. '`,' → logprob: -20.875038146972656

Token 1102: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020354038861114532
    2. ' t' → logprob: -8.500203132629395
    3. '`t' → logprob: -20.00020408630371
    4. '	t' → logprob: -22.62520408630371
    5. '   ' → logprob: -23.37520408630371
    6. '(t' → logprob: -23.87520408630371
    7. 'T' → logprob: -25.50020408630371
    8. '
' → logprob: -25.75020408630371
    9. '<t' → logprob: -26.25020408630371
    10. '[t' → logprob: -26.25020408630371

Token 1103: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931478977203369
    2. ' -' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.443147659301758
    4. '–' → logprob: -16.693147659301758
    5. '   ' → logprob: -17.193147659301758
    6. 'def' → logprob: -17.443147659301758
    7. '1' → logprob: -17.443147659301758
    8. '()-' → logprob: -17.568147659301758
    9. '−' → logprob: -17.568147659301758
    10. '<|end|>' → logprob: -17.568147659301758

Token 1104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -17.125001907348633
    4. '10' → logprob: -17.625001907348633
    5. '۱' → logprob: -18.375001907348633
    6. '11' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '１' → logprob: -19.187501907348633
    9. '<|end|>' → logprob: -19.187501907348633
    10. '134' → logprob: -19.625001907348633

Token 1105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.875
    4. '۱' → logprob: -18.6875
    5. '１' → logprob: -18.875
    6. '2' → logprob: -19.1875
    7. '   ' → logprob: -19.5625
    8. '11' → logprob: -19.5625
    9. '10' → logprob: -19.625
    10. '<|end|>' → logprob: -19.6875

Token 1106: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14849437773227692
    2. '```' → logprob: -2.0234944820404053
    3. '<|end|>' → logprob: -5.648494243621826
    4. '   ' → logprob: -6.773494243621826
    5. '
' → logprob: -7.273494243621826
    6. 'from' → logprob: -8.273494720458984
    7. '``' → logprob: -9.648494720458984
    8. '#' → logprob: -10.648494720458984
    9. '<|end|>' → logprob: -10.898494720458984
    10. ' def' → logprob: -11.023494720458984

Token 1107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.875000953674316
    3. 'from' → logprob: -15.000000953674316
    4. 'import' → logprob: -15.750000953674316
    5. '
' → logprob: -16.625001907348633
    6. ' def' → logprob: -17.500001907348633
    7. 'class' → logprob: -18.625001907348633
    8. '@' → logprob: -19.000001907348633
    9. 'answer' → logprob: -21.125001907348633
    10. '``' → logprob: -21.125001907348633

Token 1108: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.01260265614837408
    2. 'output' → logprob: -4.387602806091309
    3. 'def' → logprob: -9.512602806091309
    4. ' process' → logprob: -11.887602806091309
    5. 'answer' → logprob: -12.762602806091309
    6. 'calculate' → logprob: -12.762602806091309
    7. 'compute' → logprob: -13.262602806091309
    8. '_process' → logprob: -14.262602806091309
    9. 'prepare' → logprob: -14.387602806091309
    10. 'main' → logprob: -14.762602806091309

Token 1109: '_cost' (ID: 36820)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.12776616215705872
    2. '_cost' → logprob: -2.1277661323547363
    3. 'def' → logprob: -7.127766132354736
    4. '
' → logprob: -11.377766609191895
    5. '```' → logprob: -11.377766609191895
    6. ' costs' → logprob: -12.627766609191895
    7. '(cost' → logprob: -12.627766609191895
    8. 's' → logprob: -13.127766609191895
    9. 'Costs' → logprob: -14.127766609191895
    10. 'n' → logprob: -14.502766609191895

Token 1110: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. 'def' → logprob: -14.375000953674316
    3. '_s' → logprob: -14.875000953674316
    4. '(s' → logprob: -17.250001907348633
    5. ' s' → logprob: -19.000001907348633
    6. '```' → logprob: -19.250001907348633
    7. '{s' → logprob: -19.375001907348633
    8. 'S' → logprob: -19.875001907348633
    9. 'icients' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.750001907348633

Token 1111: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000639169302303344
    2. 'def' → logprob: -7.750638961791992
    3. '(' → logprob: -8.500638961791992
    4. ' (' → logprob: -13.000638961791992
    5. '(
' → logprob: -13.125638961791992
    6. 'n' → logprob: -15.000638961791992
    7. ' def' → logprob: -15.125638961791992
    8. '(def' → logprob: -15.750638961791992
    9. '   ' → logprob: -15.875638961791992
    10. '(N' → logprob: -16.875638961791992

Token 1112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015865087043493986
    2. '):' → logprob: -6.501586437225342
    3. '   ' → logprob: -10.0015869140625
    4. ' ,' → logprob: -11.1265869140625
    5. 'def' → logprob: -12.5015869140625
    6. ',y' → logprob: -12.6265869140625
    7. '):
' → logprob: -12.7515869140625
    8. '(' → logprob: -12.8765869140625
    9. '(n' → logprob: -13.5015869140625
    10. ',s' → logprob: -13.6265869140625

Token 1113: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.00034380643046461046
    2. ' ye' → logprob: -8.000344276428223
    3. 'y' → logprob: -12.625344276428223
    4. '```' → logprob: -13.750344276428223
    5. ' ' → logprob: -14.125344276428223
    6. 'yen' → logprob: -14.125344276428223
    7. 'yo' → logprob: -14.500344276428223
    8. '   ' → logprob: -14.875344276428223
    9. 'ya' → logprob: -15.125344276428223
    10. 'he' → logprob: -15.750344276428223

Token 1114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6166903151315637e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ',s' → logprob: -13.875016212463379
    4. ',
' → logprob: -13.875016212463379
    5. ',y' → logprob: -15.125016212463379
    6. ',e' → logprob: -15.625016212463379
    7. ',d' → logprob: -15.750016212463379
    8. ',t' → logprob: -16.250015258789062
    9. 'def' → logprob: -16.375015258789062
    10. '   ' → logprob: -16.500015258789062

Token 1115: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -3.1424973713001236e-05
    2. ' sn' → logprob: -10.375031471252441
    3. '```' → logprob: -16.125030517578125
    4. 'sm' → logprob: -17.500030517578125
    5. 's' → logprob: -17.875030517578125
    6. '   ' → logprob: -18.000030517578125
    7. '_sn' → logprob: -18.125030517578125
    8. '(sn' → logprob: -18.250030517578125
    9. 'se' → logprob: -18.625030517578125
    10. 'sk' → logprob: -18.875030517578125

Token 1116: '):
' (ID: 1883)
  Prédit: 'uke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uke' → logprob: -0.004261581227183342
    2. 'uk' → logprob: -6.004261493682861
    3. 'u' → logprob: -6.379261493682861
    4. '```' → logprob: -9.62926197052002
    5. '   ' → logprob: -11.87926197052002
    6. 'uck' → logprob: -12.50426197052002
    7. 'uko' → logprob: -13.62926197052002
    8. 'uc' → logprob: -13.62926197052002
    9. 'uki' → logprob: -13.75426197052002
    10. 'ux' → logprob: -13.87926197052002

Token 1117: '   ' (ID: 271)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.7298381328582764
    2. '   ' → logprob: -0.8548381328582764
    3. 'ans' → logprob: -3.1048381328582764
    4. 'cost' → logprob: -3.9798381328582764
    5. 'result' → logprob: -4.2298383712768555
    6. 'res' → logprob: -5.3548383712768555
    7. 'c' → logprob: -5.7298383712768555
    8. 'dp' → logprob: -6.6048383712768555
    9. 'prefix' → logprob: -6.7298383712768555
    10. 'total' → logprob: -6.9798383712768555

Token 1118: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.3294188976287842
    2. 'res' → logprob: -2.079418897628784
    3. 'ans' → logprob: -2.204418897628784
    4. 'result' → logprob: -3.704418897628784
    5. 'cost' → logprob: -4.704419136047363
    6. 'acc' → logprob: -6.079419136047363
    7. 'c' → logprob: -6.454419136047363
    8. 'dp' → logprob: -6.704419136047363
    9. 'ret' → logprob: -6.704419136047363
    10. 'min' → logprob: -7.204419136047363

Token 1119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11293869465589523
    2. ' =' → logprob: -2.237938642501831
    3. '=[' → logprob: -9.98793888092041
    4. '   ' → logprob: -9.98793888092041
    5. '=[]' → logprob: -11.36293888092041
    6. '=[]
' → logprob: -11.86293888092041
    7. '[' → logprob: -13.61293888092041
    8. '=
' → logprob: -14.11293888092041
    9. ' =[' → logprob: -14.11293888092041
    10. ',' → logprob: -14.73793888092041

Token 1120: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033069768687710166
    2. ' [' → logprob: -9.375330924987793
    3. '[n' → logprob: -9.625330924987793
    4. '[y' → logprob: -10.000330924987793
    5. '[d' → logprob: -10.250330924987793
    6. '[a' → logprob: -10.500330924987793
    7. '10' → logprob: -11.625330924987793
    8. '[]' → logprob: -11.750330924987793
    9. '[s' → logprob: -11.750330924987793
    10. '[len' → logprob: -12.125330924987793

Token 1121: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0534428246319294
    2. '   ' → logprob: -4.67844295501709
    3. 'acc' → logprob: -4.67844295501709
    4. 'current' → logprob: -4.92844295501709
    5. 'c' → logprob: -5.05344295501709
    6. 'prefix' → logprob: -5.55344295501709
    7. 'cum' → logprob: -5.67844295501709
    8. 'curr' → logprob: -5.92844295501709
    9. 'total' → logprob: -5.92844295501709
    10. 'cost' → logprob: -6.67844295501709

Token 1122: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.592671513557434
    2. 'acc' → logprob: -1.717671513557434
    3. 'sum' → logprob: -2.5926713943481445
    4. 'max' → logprob: -2.7176713943481445
    5. 'min' → logprob: -2.8426713943481445
    6. 'cur' → logprob: -3.2176713943481445
    7. 'sm' → logprob: -3.3426713943481445
    8. 'INF' → logprob: -3.3426713943481445
    9. 'curr' → logprob: -3.4676713943481445
    10. 's' → logprob: -3.4676713943481445

Token 1123: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022183503955602646
    2. ' =' → logprob: -3.897183418273926
    3. '_' → logprob: -7.772183418273926
    4. '_sum' → logprob: -7.772183418273926
    5. 's' → logprob: -8.397183418273926
    6. '   ' → logprob: -8.897183418273926
    7. '_max' → logprob: -9.397183418273926
    8. 'sum' → logprob: -9.647183418273926
    9. 'max' → logprob: -9.897183418273926
    10. '_=' → logprob: -9.897183418273926

Token 1124: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2670983672142029
    2. 'ye' → logprob: -1.5170984268188477
    3. '0' → logprob: -4.392098426818848
    4. '(' → logprob: -7.517098426818848
    5. 'float' → logprob: -7.642098426818848
    6. 'yen' → logprob: -8.017098426818848
    7. 'int' → logprob: -8.267098426818848
    8. '[' → logprob: -8.267098426818848
    9. 'sum' → logprob: -8.767098426818848
    10. '1' → logprob: -8.892098426818848

Token 1125: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00013738969573751092
    2. '("' → logprob: -9.000137329101562
    3. '(' → logprob: -12.125137329101562
    4. ''in' → logprob: -12.125137329101562
    5. ''' → logprob: -13.250137329101562
    6. '10' → logprob: -13.875137329101562
    7. ''n' → logprob: -15.875137329101562
    8. ''s' → logprob: -16.375137329101562
    9. '"' → logprob: -17.000137329101562
    10. '('-' → logprob: -17.500137329101562

Token 1126: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.3894490897655487
    2. 'inf' → logprob: -1.639449119567871
    3. '"' → logprob: -2.389449119567871
    4. ''' → logprob: -4.139449119567871
    5. '10' → logprob: -4.389449119567871
    6. ''n' → logprob: -5.514449119567871
    7. '('' → logprob: -6.639449119567871
    8. '1' → logprob: -7.139449119567871
    9. ''un' → logprob: -7.639449119567871
    10. '"in' → logprob: -7.639449119567871

Token 1127: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02100379392504692
    2. ')' → logprob: -3.8960037231445312
    3. '")
' → logprob: -7.896003723144531
    4. '")' → logprob: -10.521003723144531
    5. ')
' → logprob: -10.896003723144531
    6. '())
' → logprob: -10.896003723144531
    7. ' )
' → logprob: -11.271003723144531
    8. '   ' → logprob: -12.271003723144531
    9. ')")
' → logprob: -13.771003723144531
    10. ')

' → logprob: -14.021003723144531

Token 1128: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7734860181808472
    2. '   ' → logprob: -1.6484860181808472
    3. ' for' → logprob: -2.2734861373901367
    4. 'current' → logprob: -2.7734861373901367
    5. 'total' → logprob: -3.1484861373901367
    6. 'sum' → logprob: -4.023486137390137
    7. 'cur' → logprob: -4.023486137390137
    8. 'acc' → logprob: -4.148486137390137
    9. 'prev' → logprob: -4.273486137390137
    10. 'c' → logprob: -4.273486137390137

Token 1129: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00411591911688447
    2. 'j' → logprob: -7.254116058349609
    3. 'total' → logprob: -7.504116058349609
    4. 'ans' → logprob: -7.504116058349609
    5. 'cost' → logprob: -8.50411605834961
    6. 'i' → logprob: -8.62911605834961
    7. 'import' → logprob: -8.75411605834961
    8. 'current' → logprob: -8.75411605834961
    9. 'cur' → logprob: -8.87911605834961
    10. 'c' → logprob: -8.87911605834961

Token 1130: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5014188799541444e-05
    2. ' i' → logprob: -11.500044822692871
    3. 'v' → logprob: -11.625044822692871
    4. 'u' → logprob: -11.625044822692871
    5. 'x' → logprob: -12.125044822692871
    6. '_i' → logprob: -12.250044822692871
    7. '_' → logprob: -12.625044822692871
    8. '```' → logprob: -14.250044822692871
    9. 'j' → logprob: -14.375044822692871
    10. '   ' → logprob: -14.625044822692871

Token 1131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012808985076844692
    2. 'in' → logprob: -4.387808799743652
    3. 'n' → logprob: -8.887808799743652
    4. '   ' → logprob: -9.387808799743652
    5. ',' → logprob: -10.387808799743652
    6. ' ' → logprob: -10.762808799743652
    7. '_' → logprob: -12.137808799743652
    8. '  ' → logprob: -12.387808799743652
    9. ' n' → logprob: -12.637808799743652
    10. 's' → logprob: -13.262808799743652

Token 1132: ' process' (ID: 2273)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014175730757415295
    2. 're' → logprob: -4.264175891876221
    3. ' range' → logprob: -11.514175415039062
    4. ' reversed' → logprob: -13.389175415039062
    5. 'reverse' → logprob: -14.389175415039062
    6. 'r' → logprob: -16.139175415039062
    7. '   ' → logprob: -17.389175415039062
    8. '(range' → logprob: -17.514175415039062
    9. 'rev' → logprob: -17.639175415039062
    10. 'list' → logprob: -17.764175415039062

Token 1133: '_indices' (ID: 43508)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04654926061630249
    2. 'in' → logprob: -3.9215493202209473
    3. ' range' → logprob: -4.171549320220947
    4. 're' → logprob: -5.296549320220947
    5. '   ' → logprob: -6.046549320220947
    6. ' in' → logprob: -6.046549320220947
    7. 'n' → logprob: -8.671548843383789
    8. ' reversed' → logprob: -9.171548843383789
    9. '(range' → logprob: -9.546548843383789
    10. ' ' → logprob: -9.671548843383789

Token 1134: '_reverse' (ID: 112788)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.2666737139225006
    2. 'in' → logprob: -1.8916736841201782
    3. ' in' → logprob: -2.7666738033294678
    4. '(' → logprob: -4.766673564910889
    5. 'range' → logprob: -4.766673564910889
    6. '(n' → logprob: -6.266673564910889
    7. '(in' → logprob: -7.891673564910889
    8. '   ' → logprob: -8.266674041748047
    9. '(i' → logprob: -8.391674041748047
    10. ' range' → logprob: -8.641674041748047

Token 1135: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.013946055434644222
    2. 'in' → logprob: -5.138946056365967
    3. 'range' → logprob: -5.388946056365967
    4. ' in' → logprob: -6.638946056365967
    5. '(re' → logprob: -6.763946056365967
    6. '(' → logprob: -7.638946056365967
    7. '(i' → logprob: -8.263945579528809
    8. '(n' → logprob: -9.513945579528809
    9. ' range' → logprob: -9.888945579528809
    10. ',' → logprob: -11.013945579528809

Token 1136: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3540433645248413
    2. '(range' → logprob: -1.3540433645248413
    3. ' in' → logprob: -1.4790433645248413
    4. 'range' → logprob: -1.8540433645248413
    5. ',' → logprob: -2.979043483734131
    6. ' range' → logprob: -4.229043483734131
    7. '   ' → logprob: -4.604043483734131
    8. 'in' → logprob: -4.979043483734131
    9. ' -' → logprob: -5.354043483734131
    10. '[::-' → logprob: -5.729043483734131

Token 1137: '       ' (ID: 309)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5722619891166687
    2. '   ' → logprob: -1.0722620487213135
    3. ' range' → logprob: -2.6972620487213135
    4. '(range' → logprob: -4.447261810302734
    5. '       ' → logprob: -5.072261810302734
    6. 're' → logprob: -5.197261810302734
    7. '```' → logprob: -7.572261810302734
    8. '[::-' → logprob: -7.822261810302734
    9. ' reversed' → logprob: -8.072261810302734
    10. '(i' → logprob: -8.822261810302734

Token 1138: ' cost' (ID: 3097)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06064042076468468
    2. 'cost' (adapté à ' cost') → logprob: -3.060640335083008
    3. 'answer' → logprob: -5.685640335083008
    4. 'range' → logprob: -5.810640335083008
    5. ' i' → logprob: -6.435640335083008
    6. '   ' → logprob: -6.560640335083008
    7. 'for' → logprob: -7.060640335083008
    8. ' cost' → logprob: -7.310640335083008
    9. 'yield' → logprob: -8.060640335083008
    10. 'n' → logprob: -8.185640335083008

Token 1139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003603871213272214
    2. ' =' → logprob: -5.628603935241699
    3. '   ' → logprob: -13.0036039352417
    4. '=min' → logprob: -14.5036039352417
    5. '+=' → logprob: -14.7536039352417
    6. '=max' → logprob: -15.6286039352417
    7. '```' → logprob: -16.128602981567383
    8. '*=' → logprob: -16.128602981567383
    9. '=
' → logprob: -16.628602981567383
    10. '>=' → logprob: -16.878602981567383

Token 1140: ' update' (ID: 4027)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011914180358871818
    2. ' min' → logprob: -6.75119161605835
    3. 'cost' → logprob: -11.626191139221191
    4. '10' → logprob: -12.376191139221191
    5. 'ye' → logprob: -13.126191139221191
    6. '(min' → logprob: -13.751191139221191
    7. 'mi' → logprob: -13.876191139221191
    8. '=min' → logprob: -14.501191139221191
    9. '100' → logprob: -14.751191139221191
    10. '   ' → logprob: -14.876191139221191

Token 1141: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001817862968891859
    2. 'cost' → logprob: -6.50181770324707
    3. ' min' → logprob: -8.25181770324707
    4. 'max' → logprob: -10.25181770324707
    5. '(min' → logprob: -11.25181770324707
    6. 'i' → logprob: -13.25181770324707
    7. '[min' → logprob: -13.75181770324707
    8. 'process' → logprob: -14.50181770324707
    9. '```' → logprob: -14.50181770324707
    10. '(cost' → logprob: -15.00181770324707

Token 1142: '_cost' (ID: 36820)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0005280109471641481
    2. '(' → logprob: -7.875527858734131
    3. '(min' → logprob: -9.625528335571289
    4. '(
' → logprob: -10.250528335571289
    5. 'cost' → logprob: -10.500528335571289
    6. '(c' → logprob: -11.000528335571289
    7. '(i' → logprob: -13.625528335571289
    8. ' cost' → logprob: -14.625528335571289
    9. '(

' → logprob: -15.875528335571289
    10. '(max' → logprob: -15.875528335571289

Token 1143: '(cost' (ID: 133554)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.9854266047477722
    2. 'min' → logprob: -1.235426664352417
    3. '(i' → logprob: -1.360426664352417
    4. 'cost' → logprob: -4.110426425933838
    5. '(cost' → logprob: -4.110426425933838
    6. '[i' → logprob: -4.235426425933838
    7. '(max' → logprob: -4.610426425933838
    8. 'max' → logprob: -4.860426425933838
    9. '[min' → logprob: -5.485426425933838
    10. 'i' → logprob: -6.110426425933838

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022337745875120163
    2. ',min' → logprob: -3.8973376750946045
    3. 'min' → logprob: -6.522337913513184
    4. 'if' → logprob: -9.522337913513184
    5. '(min' → logprob: -9.647337913513184
    6. 'cost' → logprob: -10.022337913513184
    7. ' if' → logprob: -10.397337913513184
    8. ' min' → logprob: -10.772337913513184
    9. ')' → logprob: -11.022337913513184
    10. '   ' → logprob: -11.147337913513184

Token 1145: ' sn' (ID: 3967)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ye' → logprob: -0.003562061581760645
    2. ' ye' → logprob: -5.878561973571777
    3. 'min' → logprob: -7.628561973571777
    4. 'cost' → logprob: -8.878561973571777
    5. ' min' → logprob: -10.378561973571777
    6. 'answer' → logprob: -10.753561973571777
    7. 'max' → logprob: -10.878561973571777
    8. 'yen' → logprob: -11.003561973571777
    9. ' ' → logprob: -11.503561973571777
    10. '   ' → logprob: -11.628561973571777

Token 1146: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.250004768371582
    3. 'i' → logprob: -13.875004768371582
    4. '[
' → logprob: -14.250004768371582
    5. '```' → logprob: -15.125004768371582
    6. '[min' → logprob: -15.500004768371582
    7. '
' → logprob: -15.750004768371582
    8. ' [' → logprob: -15.875004768371582
    9. 'cost' → logprob: -16.250003814697266
    10. '[u' → logprob: -17.125003814697266

Token 1147: ' ye' (ID: 9225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028654970228672028
    2. 'ye' → logprob: -5.877865314483643
    3. ' i' → logprob: -10.1278657913208
    4. '   ' → logprob: -11.7528657913208
    5. '     ' → logprob: -12.7528657913208
    6. ' ye' → logprob: -13.0028657913208
    7. '       ' → logprob: -13.3778657913208
    8. 'y' → logprob: -13.8778657913208
    9. 'ie' → logprob: -13.8778657913208
    10. '[i' → logprob: -14.1278657913208

Token 1148: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.432940274477005
    2. ',' → logprob: -1.0579402446746826
    3. '[' → logprob: -6.432940483093262
    4. '       ' → logprob: -6.807940483093262
    5. ',i' → logprob: -6.807940483093262
    6. '   ' → logprob: -8.307940483093262
    7. '(i' → logprob: -10.807940483093262
    8. ')' → logprob: -10.807940483093262
    9. '[
' → logprob: -10.807940483093262
    10. '```' → logprob: -10.932940483093262

Token 1149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011089086532592773
    2. ' i' → logprob: -4.511089324951172
    3. '       ' → logprob: -10.636089324951172
    4. '   ' → logprob: -12.261089324951172
    5. '           ' → logprob: -12.886089324951172
    6. '[i' → logprob: -13.011089324951172
    7. ',' → logprob: -13.386089324951172
    8. '```' → logprob: -13.761089324951172
    9. '         ' → logprob: -14.511089324951172
    10. ')i' → logprob: -14.636089324951172

Token 1150: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3982622027397156
    2. ' if' → logprob: -1.7732622623443604
    3. '       ' → logprob: -2.5232622623443604
    4. 'if' → logprob: -3.5232622623443604
    5. ' =' → logprob: -4.273262023925781
    6. ')' → logprob: -4.523262023925781
    7. 'min' → logprob: -4.898262023925781
    8. '   ' → logprob: -5.023262023925781
    9. '=' → logprob: -6.523262023925781
    10. ',min' → logprob: -6.523262023925781

Token 1151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48275160789489746
    2. 'cost' → logprob: -1.6077516078948975
    3. ' cost' → logprob: -2.3577516078948975
    4. ' for' → logprob: -3.4827516078948975
    5. 'for' → logprob: -3.8577516078948975
    6. '   ' → logprob: -3.8577516078948975
    7. ' i' → logprob: -5.607751846313477
    8. 'def' → logprob: -5.732751846313477
    9. 'i' → logprob: -5.982751846313477
    10. '(cost' → logprob: -6.482751846313477

Token 1152: ' append' (ID: 17147)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.350853830575943
    2. ' answer' → logprob: -1.2258538007736206
    3. '   ' → logprob: -6.47585391998291
    4. 'cost' → logprob: -7.72585391998291
    5. ' cost' → logprob: -7.85085391998291
    6. '       ' → logprob: -11.35085391998291
    7. 'Answer' → logprob: -12.22585391998291
    8. '	answer' → logprob: -12.35085391998291
    9. '```' → logprob: -12.35085391998291
    10. '(answer' → logprob: -13.47585391998291

Token 1153: '_cost' (ID: 36820)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.12693524360656738
    2. 'answer' → logprob: -2.1269352436065674
    3. ' answer' → logprob: -12.001935005187988
    4. '	answer' → logprob: -14.626935005187988
    5. '_answer' → logprob: -14.751935005187988
    6. 'Answer' → logprob: -16.251935958862305
    7. '(ans' → logprob: -17.001935958862305
    8. 'cost' → logprob: -17.126935958862305
    9. '.answer' → logprob: -17.626935958862305
    10. '(
' → logprob: -18.126935958862305

Token 1154: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0015585471410304308
    2. 'answer' → logprob: -6.501558780670166
    3. '(cost' → logprob: -9.876558303833008
    4. ' answer' → logprob: -13.376558303833008
    5. '(ans' → logprob: -13.626558303833008
    6. '(' → logprob: -14.626558303833008
    7. '	answer' → logprob: -14.751558303833008
    8. '(
' → logprob: -15.001558303833008
    9. '_answer' → logprob: -15.126558303833008
    10. ' (' → logprob: -15.376558303833008

Token 1155: ',' (ID: 11)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.01833980344235897
    2. '(' → logprob: -4.64333963394165
    3. ',' → logprob: -5.14333963394165
    4. '(max' → logprob: -6.64333963394165
    5. '((' → logprob: -7.89333963394165
    6. '(min' → logprob: -8.268340110778809
    7. 'cost' → logprob: -8.268340110778809
    8. '(
' → logprob: -9.143340110778809
    9. '(int' → logprob: -9.268340110778809
    10. '(float' → logprob: -9.393340110778809

Token 1156: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.48491477966308594
    2. 'cost' → logprob: -0.9849147796630859
    3. '10' → logprob: -5.234914779663086
    4. ' ye' → logprob: -6.484914779663086
    5. '(cost' → logprob: -7.359914779663086
    6. ' ' → logprob: -7.609914779663086
    7. '   ' → logprob: -7.859914779663086
    8. 'ye' → logprob: -8.109914779663086
    9. ' str' → logprob: -8.109914779663086
    10. ' float' → logprob: -8.609914779663086

Token 1157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1899724304676056
    2. '       ' → logprob: -2.564972400665283
    3. ',' → logprob: -2.689972400665283
    4. ')
' → logprob: -4.189972400665283
    5. '   ' → logprob: -4.939972400665283
    6. '[i' → logprob: -5.814972400665283
    7. '```' → logprob: -7.314972400665283
    8. '<|end|>' → logprob: -7.314972400665283
    9. '[::-' → logprob: -7.939972400665283
    10. '[' → logprob: -8.314972877502441

Token 1158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2603587210178375
    2. '```' → logprob: -2.7603588104248047
    3. '       ' → logprob: -3.3853588104248047
    4. 'for' → logprob: -3.5103588104248047
    5. '[::-' → logprob: -3.5103588104248047
    6. '\' → logprob: -4.010358810424805
    7. ' for' → logprob: -4.510358810424805
    8. '[' → logprob: -5.010358810424805
    9. '[i' → logprob: -5.135358810424805
    10. 'def' → logprob: -5.510358810424805

Token 1159: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3579370975494385
    2. '\n' → logprob: -1.6079370975494385
    3. '```' → logprob: -1.6079370975494385
    4. '\' → logprob: -2.1079370975494385
    5. ' \' → logprob: -3.2329370975494385
    6. ' 
' → logprob: -3.4829370975494385
    7. ' def' → logprob: -3.8579370975494385
    8. '
' → logprob: -4.232936859130859
    9. '[::-' → logprob: -4.232936859130859
    10. '    ' → logprob: -4.357936859130859

Token 1160: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.002059734659269452
    2. 'list' → logprob: -6.5020599365234375
    3. ' answer' → logprob: -7.5020599365234375
    4. '[' → logprob: -12.752059936523438
    5. ' list' → logprob: -13.127059936523438
    6. '(answer' → logprob: -16.502059936523438
    7. '	answer' → logprob: -16.877059936523438
    8. ' [' → logprob: -17.127059936523438
    9. 'ans' → logprob: -17.127059936523438
    10. 're' → logprob: -17.252059936523438

Token 1161: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8645247220993042
    2. '[::-' → logprob: -0.9895247220993042
    3. '   ' → logprob: -2.6145248413085938
    4. '```' → logprob: -2.8645248413085938
    5. '
' → logprob: -3.2395248413085938
    6. ' def' → logprob: -4.489524841308594
    7. '[' → logprob: -4.864524841308594
    8. '.reverse' → logprob: -5.489524841308594
    9. '\' → logprob: -5.739524841308594
    10. '[
' → logprob: -5.864524841308594

Token 1162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01926800049841404
    2. '   ' → logprob: -4.519268035888672
    3. '```' → logprob: -6.019268035888672
    4. 'for' → logprob: -6.269268035888672
    5. ' def' → logprob: -6.519268035888672
    6. '[::-' → logprob: -6.894268035888672
    7. '[' → logprob: -7.394268035888672
    8. ' for' → logprob: -7.894268035888672
    9. '[
' → logprob: -8.769268035888672
    10. '
' → logprob: -9.394268035888672

Token 1163: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.030019022524356842
    2. 'range' → logprob: -3.5300190448760986
    3. 're' → logprob: -8.78001880645752
    4. 'reverse' → logprob: -9.53001880645752
    5. 'append' → logprob: -10.40501880645752
    6. ' process' → logprob: -12.15501880645752
    7. '_process' → logprob: -13.28001880645752
    8. 'processed' → logprob: -13.40501880645752
    9. 'rev' → logprob: -14.53001880645752
    10. 'for' → logprob: -14.65501880645752

Token 1164: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0005657802103087306
    2. 'indices' → logprob: -8.250565528869629
    3. 'range' → logprob: -8.875565528869629
    4. '_indexes' → logprob: -9.500565528869629
    5. '```' → logprob: -10.875565528869629
    6. 'Indices' → logprob: -11.000565528869629
    7. '
' → logprob: -11.125565528869629
    8. '_range' → logprob: -11.750565528869629
    9. '_ranges' → logprob: -12.625565528869629
    10. '_ids' → logprob: -12.750565528869629

Token 1165: '_reverse' (ID: 112788)
  Prédit: '_reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_reverse' → logprob: -0.0108904168009758
    2. 'reverse' → logprob: -4.885890483856201
    3. 'range' → logprob: -6.635890483856201
    4. '=' → logprob: -7.010890483856201
    5. 'def' → logprob: -7.385890483856201
    6. '_range' → logprob: -8.135890007019043
    7. '(reverse' → logprob: -10.135890007019043
    8. '_' → logprob: -10.385890007019043
    9. '=lambda' → logprob: -11.135890007019043
    10. '```' → logprob: -11.135890007019043

Token 1166: '(n' (ID: 2406)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.2579251527786255
    2. '(n' → logprob: -1.5079251527786255
    3. 'range' → logprob: -5.132925033569336
    4. 'def' → logprob: -10.257925033569336
    5. '(' → logprob: -11.382925033569336
    6. ' (' → logprob: -11.632925033569336
    7. '(re' → logprob: -11.757925033569336
    8. ' range' → logprob: -12.007925033569336
    9. 'n' → logprob: -13.257925033569336
    10. '```' → logprob: -13.382925033569336

Token 1167: '):
' (ID: 1883)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2558939754962921
    2. '():
' → logprob: -1.5058939456939697
    3. '=' → logprob: -5.755894184112549
    4. '()' → logprob: -7.505894184112549
    5. 'range' → logprob: -9.13089370727539
    6. '):' → logprob: -10.38089370727539
    7. '):
' → logprob: -10.38089370727539
    8. '(range' → logprob: -11.13089370727539
    9. '()):
' → logprob: -11.13089370727539
    10. '():
' → logprob: -11.50589370727539

Token 1168: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012870182283222675
    2. 'return' → logprob: -4.7628703117370605
    3. 're' → logprob: -5.5128703117370605
    4. '   ' → logprob: -8.512869834899902
    5. 'reverse' → logprob: -11.637869834899902
    6. ' range' → logprob: -13.637869834899902
    7. '```' → logprob: -14.387869834899902
    8. 'rev' → logprob: -15.512869834899902
    9. '(range' → logprob: -16.13787078857422
    10. ' reversed' → logprob: -16.38787078857422

Token 1169: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859009385108948
    2. 're' → logprob: -3.0485901832580566
    3. 'reverse' → logprob: -13.048589706420898
    4. ' range' → logprob: -15.548589706420898
    5. 'rev' → logprob: -15.673589706420898
    6. ' reversed' → logprob: -16.1735897064209
    7. '(range' → logprob: -17.2985897064209
    8. 'return' (adapté à ' return') → logprob: -17.2985897064209
    9. '(re' → logprob: -18.2985897064209
    10. '[::-' → logprob: -18.2985897064209

Token 1170: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804321587085724
    2. 're' → logprob: -3.288043260574341
    3. 'reverse' → logprob: -13.538043022155762
    4. ' range' → logprob: -15.163043022155762
    5. '(range' → logprob: -16.288043975830078
    6. 'rev' → logprob: -17.163043975830078
    7. ' reversed' → logprob: -17.663043975830078
    8. '(re' → logprob: -18.038043975830078
    9. '[::-' → logprob: -18.788043975830078
    10. 'list' → logprob: -19.538043975830078

Token 1171: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020747410599142313
    2. 'n' → logprob: -8.500207901000977
    3. '(' → logprob: -13.250207901000977
    4. '	n' → logprob: -13.500207901000977
    5. ' n' → logprob: -14.375207901000977
    6. '   ' → logprob: -15.875207901000977
    7. '[n' → logprob: -16.750207901000977
    8. 'def' → logprob: -17.000207901000977
    9. ',n' → logprob: -17.125207901000977
    10. '<n' → logprob: -17.750207901000977

Token 1172: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078639671206474
    2. ' -' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.25407886505127
    4. ' ' → logprob: -17.379077911376953
    5. ')' → logprob: -17.504077911376953
    6. ',' → logprob: -17.879077911376953
    7. '1' → logprob: -19.004077911376953
    8. '−' → logprob: -19.004077911376953
    9. '	' → logprob: -19.629077911376953
    10. '()-' → logprob: -19.879077911376953

Token 1173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.375000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '   ' → logprob: -18.375
    5. '
' → logprob: -18.375
    6. '-' → logprob: -18.625
    7. '１' → logprob: -19.5
    8. '3' → logprob: -19.625
    9. '```' → logprob: -20.0625
    10. '0' → logprob: -20.0625

Token 1174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002485288307070732
    2. ',-' → logprob: -6.002485275268555
    3. ' ,' → logprob: -12.252485275268555
    4. '-' → logprob: -12.752485275268555
    5. ',
' → logprob: -13.877485275268555
    6. ' -' → logprob: -15.127485275268555
    7. ' ,-' → logprob: -15.127485275268555
    8. ',None' → logprob: -16.127485275268555
    9. '```' → logprob: -16.627485275268555
    10. ',n' → logprob: -16.877485275268555

Token 1175: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.584861744660884e-05
    2. ' -' → logprob: -10.000045776367188
    3. ' ' → logprob: -16.500045776367188
    4. '   ' → logprob: -16.625045776367188
    5. '
' → logprob: -16.875045776367188
    6. '  ' → logprob: -17.250045776367188
    7. '0' → logprob: -18.125045776367188
    8. '	' → logprob: -19.875045776367188
    9. '1' → logprob: -20.000045776367188
    10. '    ' → logprob: -20.000045776367188

Token 1176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '```' → logprob: -18.375
    4. '2' → logprob: -19.125
    5. '   ' → logprob: -19.125
    6. '１' → logprob: -19.375
    7. '
' → logprob: -19.875
    8. '``' → logprob: -20.125
    9. '-' → logprob: -21.25
    10. ',' → logprob: -21.5

Token 1177: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269860565662384
    2. ',' → logprob: -2.126986026763916
    3. ',-' → logprob: -10.251986503601074
    4. '```' → logprob: -11.376986503601074
    5. '   ' → logprob: -12.376986503601074
    6. ',
' → logprob: -12.751986503601074
    7. ' ,' → logprob: -13.001986503601074
    8. '-' → logprob: -14.251986503601074
    9. ')' → logprob: -15.251986503601074
    10. ' ' → logprob: -15.501986503601074

Token 1178: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.848420551046729e-05
    2. ' -' → logprob: -9.7500581741333
    3. '1' → logprob: -16.250059127807617
    4. '   ' → logprob: -17.500059127807617
    5. '0' → logprob: -19.625059127807617
    6. '```' → logprob: -20.125059127807617
    7. ' ' → logprob: -20.500059127807617
    8. '  ' → logprob: -20.500059127807617
    9. '-
' → logprob: -21.250059127807617
    10. '       ' → logprob: -21.875059127807617

Token 1179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '
' → logprob: -20.75
    6. '2' → logprob: -21.25
    7. '``' → logprob: -21.375
    8. '۱' → logprob: -21.875
    9. '１' → logprob: -22.0
    10. '১' → logprob: -22.125

Token 1180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. '):' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.625012397766113
    4. ')
' → logprob: -14.625012397766113
    5. ':' → logprob: -15.500012397766113
    6. '<|end|>' → logprob: -16.00001335144043
    7. ' )' → logprob: -16.75001335144043
    8. ')

' → logprob: -17.00001335144043
    9. '),' → logprob: -17.00001335144043
    10. ')}' → logprob: -17.50001335144043

Token 1181: 'def' (ID: 1314)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.2012279033660889
    2. '   ' → logprob: -1.3262279033660889
    3. 'def' → logprob: -1.3262279033660889
    4. '```' → logprob: -1.8262279033660889
    5. '``' → logprob: -5.951228141784668
    6. 'cost' → logprob: -6.201228141784668
    7. ' answer' → logprob: -6.826228141784668
    8. 'for' → logprob: -6.951228141784668
    9. ' def' → logprob: -8.826228141784668
    10. '       ' → logprob: -9.076228141784668

Token 1182: ' update' (ID: 4027)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0015389078762382269
    2. 'answer' → logprob: -7.6265387535095215
    3. 'cost' → logprob: -8.50153923034668
    4. 'insert' → logprob: -8.50153923034668
    5. 're' → logprob: -8.62653923034668
    6. 'update' → logprob: -8.87653923034668
    7. 'reverse' → logprob: -8.87653923034668
    8. ' append' → logprob: -9.50153923034668
    9. 'def' → logprob: -10.12653923034668
    10. '_append' → logprob: -10.50153923034668

Token 1183: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7120111584663391
    2. 'cost' → logprob: -0.8370111584663391
    3. '_cost' → logprob: -3.3370110988616943
    4. 'min' → logprob: -3.5870110988616943
    5. '(cost' → logprob: -4.462011337280273
    6. 'def' → logprob: -6.712011337280273
    7. '_max' → logprob: -8.837011337280273
    8. ' cost' → logprob: -9.837011337280273
    9. '```' → logprob: -10.087011337280273
    10. '(min' → logprob: -10.212011337280273

Token 1184: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.1446400284767151
    2. 'cost' → logprob: -2.0196399688720703
    3. '(cost' → logprob: -6.51963996887207
    4. 'def' → logprob: -7.89463996887207
    5. ' cost' → logprob: -9.76963996887207
    6. '```' → logprob: -10.39463996887207
    7. '_COST' → logprob: -11.64463996887207
    8. '(
' → logprob: -12.39463996887207
    9. 'Cost' → logprob: -12.76963996887207
    10. '(lambda' → logprob: -12.89463996887207

Token 1185: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.125020027160645
    3. '(current' → logprob: -13.000020027160645
    4. ' (' → logprob: -13.875020027160645
    5. '(min' → logprob: -14.500020027160645
    6. '(old' → logprob: -14.875020027160645
    7. 'cost' → logprob: -15.250020027160645
    8. '(c' → logprob: -15.375020027160645
    9. '(existing' → logprob: -16.125019073486328
    10. '(
' → logprob: -16.250019073486328

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.637786231702194e-05
    2. '(cost' → logprob: -9.625086784362793
    3. 'cost' → logprob: -11.750086784362793
    4. ',c' → logprob: -11.875086784362793
    5. '   ' → logprob: -13.000086784362793
    6. ' ,' → logprob: -13.500086784362793
    7. ',
' → logprob: -13.750086784362793
    8. ' cost' → logprob: -15.625086784362793
    9. 'def' → logprob: -16.625085830688477
    10. 'c' → logprob: -17.000085830688477

Token 1187: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.052060019224882126
    2. 'ye' → logprob: -3.302060127258301
    3. ' sn' → logprob: -4.302060127258301
    4. ' ye' → logprob: -7.927060127258301
    5. '   ' → logprob: -12.0520601272583
    6. 'yn' → logprob: -12.6770601272583
    7. '```' → logprob: -12.9270601272583
    8. ' ' → logprob: -13.3020601272583
    9. '(sn' → logprob: -14.3020601272583
    10. 'y' → logprob: -14.8020601272583

Token 1188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ',i' → logprob: -11.250024795532227
    3. ' ,' → logprob: -12.375024795532227
    4. '[i' → logprob: -12.375024795532227
    5. '<|end|>' → logprob: -13.750024795532227
    6. 'i' → logprob: -14.375024795532227
    7. ',
' → logprob: -14.625024795532227
    8. '=' → logprob: -15.500024795532227
    9. ')' → logprob: -15.750024795532227
    10. '[' → logprob: -15.750024795532227

Token 1189: ' ye' (ID: 9225)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007402291987091303
    2. 'ye' → logprob: -5.882402420043945
    3. ' i' → logprob: -5.882402420043945
    4. 'sn' → logprob: -6.382402420043945
    5. '[i' → logprob: -10.757402420043945
    6. ' sn' → logprob: -11.007402420043945
    7. ' ye' → logprob: -11.132402420043945
    8. 'cost' → logprob: -11.132402420043945
    9. '```' → logprob: -11.382402420043945
    10. '   ' → logprob: -11.382402420043945

Token 1190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ',i' → logprob: -10.375039100646973
    3. ' ,' → logprob: -12.250039100646973
    4. ',
' → logprob: -13.500039100646973
    5. '   ' → logprob: -14.500039100646973
    6. '[i' → logprob: -15.000039100646973
    7. 'i' → logprob: -16.875038146972656
    8. '(i' → logprob: -17.000038146972656
    9. ',v' → logprob: -17.375038146972656
    10. '_,' → logprob: -17.500038146972656

Token 1191: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00014120421838015318
    2. ' i' → logprob: -8.875141143798828
    3. '```' → logprob: -14.625141143798828
    4. '_i' → logprob: -15.500141143798828
    5. ')' → logprob: -15.875141143798828
    6. '_' → logprob: -16.125141143798828
    7. 'idx' → logprob: -16.375141143798828
    8. 'index' → logprob: -16.500141143798828
    9. 'v' → logprob: -16.750141143798828
    10. '   ' → logprob: -17.000141143798828

Token 1192: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03533394634723663
    2. '=' → logprob: -4.28533411026001
    3. '):' → logprob: -4.53533411026001
    4. '   ' → logprob: -5.03533411026001
    5. ' =' → logprob: -6.53533411026001
    6. ':' → logprob: -6.78533411026001
    7. '):
' → logprob: -7.28533411026001
    8. ',
' → logprob: -8.285333633422852
    9. ' ,' → logprob: -9.910333633422852
    10. 'if' → logprob: -10.535333633422852

Token 1193: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0667610689997673
    2. 'return' → logprob: -3.066761016845703
    3. 'cost' → logprob: -4.816761016845703
    4. ' min' → logprob: -5.066761016845703
    5. ' return' → logprob: -6.441761016845703
    6. '   ' → logprob: -6.566761016845703
    7. 'if' → logprob: -7.816761016845703
    8. ' cost' → logprob: -9.441761016845703
    9. '```' → logprob: -9.441761016845703
    10. 'max' → logprob: -10.941761016845703

Token 1194: ' return' (ID: 622)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4749736785888672
    2. 'return' (adapté à ' return') → logprob: -0.9749736785888672
    3. 'cost' → logprob: -7.224973678588867
    4. 'new' → logprob: -9.474973678588867
    5. ' return' → logprob: -10.099973678588867
    6. ' min' → logprob: -10.474973678588867
    7. '   ' → logprob: -11.474973678588867
    8. 'if' → logprob: -12.349973678588867
    9. '```' → logprob: -12.599973678588867
    10. 'c' → logprob: -13.974973678588867

Token 1195: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.771655115589965e-05
    2. ' min' → logprob: -11.250018119812012
    3. 'cost' → logprob: -12.750018119812012
    4. '   ' → logprob: -13.625018119812012
    5. '	min' → logprob: -15.750018119812012
    6. '10' → logprob: -15.875018119812012
    7. '(min' → logprob: -16.375017166137695
    8. 'float' → logprob: -18.000017166137695
    9. 'int' → logprob: -18.250017166137695
    10. '
' → logprob: -18.250017166137695

Token 1196: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.001171652227640152
    2. 'cost' → logprob: -6.751171588897705
    3. ' cost' → logprob: -13.626172065734863
    4. '(' → logprob: -15.501172065734863
    5. '(
' → logprob: -18.001171112060547
    6. '(c' → logprob: -18.251171112060547
    7. 'Cost' → logprob: -18.501171112060547
    8. '_cost' → logprob: -18.626171112060547
    9. '.cost' → logprob: -18.876171112060547
    10. '```' → logprob: -19.251171112060547

Token 1197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003728774609044194
    2. ' ,' → logprob: -8.000372886657715
    3. 'sn' → logprob: -11.000372886657715
    4. ',
' → logprob: -12.000372886657715
    5. 'ye' → logprob: -12.750372886657715
    6. ' sn' → logprob: -13.125372886657715
    7. ')' → logprob: -13.375372886657715
    8. '),' → logprob: -13.500372886657715
    9. ',y' → logprob: -13.750372886657715
    10. '   ' → logprob: -13.875372886657715

Token 1198: ' sn' (ID: 3967)
  Prédit: 'sn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sn' → logprob: -0.14432638883590698
    2. 'ye' → logprob: -2.0193264484405518
    3. ' sn' → logprob: -6.769326210021973
    4. ' ye' → logprob: -8.519326210021973
    5. 'yn' → logprob: -9.644326210021973
    6. '   ' → logprob: -9.769326210021973
    7. '(sn' → logprob: -10.269326210021973
    8. ' ' → logprob: -10.394326210021973
    9. 'yen' → logprob: -11.206826210021973
    10. '```' → logprob: -11.394326210021973

Token 1199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.041768160182983e-05
    2. '[' → logprob: -9.500080108642578
    3. ' [' → logprob: -12.625080108642578
    4. '[
' → logprob: -13.875080108642578
    5. '```' → logprob: -14.750080108642578
    6. '[I' → logprob: -15.375080108642578
    7. ')' → logprob: -15.625080108642578
    8. ')[' → logprob: -16.000080108642578
    9. '[e' → logprob: -16.625080108642578
    10. '[int' → logprob: -16.875080108642578

Token 1200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03363935649394989
    2. ']+' → logprob: -3.658639430999756
    3. '[i' → logprob: -5.033639430999756
    4. '+' → logprob: -7.408639430999756
    5. ' +' → logprob: -9.283638954162598
    6. ' ]' → logprob: -9.783638954162598
    7. '[' → logprob: -11.158638954162598
    8. '+i' → logprob: -11.783638954162598
    9. ')' → logprob: -12.033638954162598
    10. '   ' → logprob: -12.283638954162598

Token 1201: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038046542555093765
    2. ' +' → logprob: -3.2880465984344482
    3. '+
' → logprob: -13.038046836853027
    4. '+i' → logprob: -14.038046836853027
    5. '[i' → logprob: -14.413046836853027
    6. '   ' → logprob: -14.538046836853027
    7. '[' → logprob: -14.788046836853027
    8. '```' → logprob: -15.913046836853027
    9. '＋' → logprob: -16.03804588317871
    10. '+y' → logprob: -16.41304588317871

Token 1202: ' ye' (ID: 9225)
  Prédit: 'ye'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ye' → logprob: -4.842555426876061e-06
    2. ' ye' → logprob: -12.250004768371582
    3. 'yen' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.1250057220459
    5. ' ' → logprob: -18.8750057220459
    6. 'yee' → logprob: -19.7500057220459
    7. '[' → logprob: -20.3750057220459
    8. 'y' → logprob: -20.3750057220459
    9. '  ' → logprob: -20.7500057220459
    10. '     ' → logprob: -20.8750057220459

Token 1203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.153795766294934e-06
    2. 'i' → logprob: -12.375005722045898
    3. '[' → logprob: -13.375005722045898
    4. '[
' → logprob: -16.6250057220459
    5. '[I' → logprob: -17.0000057220459
    6. '```' → logprob: -17.1250057220459
    7. ')[' → logprob: -18.5000057220459
    8. ' [' → logprob: -18.5000057220459
    9. '[int' → logprob: -18.8750057220459
    10. '   ' → logprob: -19.0000057220459

Token 1204: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ' )' → logprob: -11.250022888183594
    3. ')
' → logprob: -12.500022888183594
    4. '   ' → logprob: -13.250022888183594
    5. '())' → logprob: -13.375022888183594
    6. '))' → logprob: -13.875022888183594
    7. '])' → logprob: -14.375022888183594
    8. '[i' → logprob: -15.750022888183594
    9. '})' → logprob: -16.250022888183594
    10. '[])' → logprob: -16.750022888183594

Token 1205: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.076218025758862e-05
    2. '```' → logprob: -9.625070571899414
    3. 'answer' → logprob: -13.000070571899414
    4. ' def' → logprob: -13.875070571899414
    5. '   ' → logprob: -14.125070571899414
    6. '<|end|>' → logprob: -14.625070571899414
    7. ')' → logprob: -15.750070571899414
    8. 'cost' → logprob: -17.500070571899414
    9. '``' → logprob: -17.750070571899414
    10. '`' → logprob: -18.000070571899414

Token 1206: ' append' (ID: 17147)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.013888094574213028
    2. 'def' → logprob: -4.638887882232666
    3. 'append' → logprob: -5.513887882232666
    4. ' answer' → logprob: -9.638888359069824
    5. 'lambda' → logprob: -11.263888359069824
    6. '(answer' → logprob: -12.388888359069824
    7. 'cost' → logprob: -12.513888359069824
    8. 'insert' → logprob: -12.638888359069824
    9. ' def' → logprob: -13.888888359069824
    10. 'prepend' → logprob: -14.138888359069824

Token 1207: '_cost' (ID: 36820)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.005280007608234882
    2. 'answer' → logprob: -5.255280017852783
    3. '_answer' → logprob: -10.630279541015625
    4. '```' → logprob: -11.380279541015625
    5. '(cost' → logprob: -13.130279541015625
    6. ' answer' → logprob: -13.255279541015625
    7. '	answer' → logprob: -13.380279541015625
    8. '(question' → logprob: -13.755279541015625
    9. '(' → logprob: -13.880279541015625
    10. '(argument' → logprob: -14.630279541015625

Token 1208: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -5.319370302458992e-06
    2. '(ans' → logprob: -13.250005722045898
    3. '(argument' → logprob: -14.000005722045898
    4. '(' → logprob: -14.375005722045898
    5. 'answer' → logprob: -14.375005722045898
    6. '(output' → logprob: -14.500005722045898
    7. '(question' → logprob: -15.000005722045898
    8. '(response' → logprob: -16.0000057220459
    9. '(address' → logprob: -16.3750057220459
    10. '```' → logprob: -16.6250057220459

Token 1209: ',' (ID: 11)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.013966857455670834
    2. '(' → logprob: -4.388967037200928
    3. ',' → logprob: -7.013967037200928
    4. '.append' → logprob: -8.88896656036377
    5. ' (' → logprob: -9.38896656036377
    6. ')' → logprob: -9.63896656036377
    7. '(ans' → logprob: -9.63896656036377
    8. '(
' → logprob: -10.13896656036377
    9. '(output' → logprob: -11.01396656036377
    10. '(cost' → logprob: -11.26396656036377

Token 1210: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04395997151732445
    2. 'answer' → logprob: -3.543959856033325
    3. ' cost' → logprob: -4.918960094451904
    4. '0' → logprob: -5.043960094451904
    5. '(cost' → logprob: -8.793959617614746
    6. ' answer' → logprob: -8.918959617614746
    7. '   ' → logprob: -10.668959617614746
    8. 'str' → logprob: -11.918959617614746
    9. ' ' → logprob: -11.918959617614746
    10. 'lambda' → logprob: -12.043959617614746

Token 1211: '):
' (ID: 1883)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.008149859495460987
    2. '   ' → logprob: -5.25814962387085
    3. 'answer' → logprob: -6.75814962387085
    4. ')' → logprob: -7.75814962387085
    5. '):' → logprob: -7.88314962387085
    6. '):
' → logprob: -8.258150100708008
    7. '```' → logprob: -9.008150100708008
    8. '(
' → logprob: -9.258150100708008
    9. '	answer' → logprob: -9.383150100708008
    10. '.answer' → logprob: -9.633150100708008

Token 1212: '   ' (ID: 271)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.621306836605072
    2. '   ' → logprob: -0.871306836605072
    3. ' answer' → logprob: -3.121306896209717
    4. '	answer' → logprob: -8.746306419372559
    5. '```' → logprob: -9.371306419372559
    6. '(answer' → logprob: -11.996306419372559
    7. '.answer' → logprob: -13.246306419372559
    8. '``' → logprob: -13.996306419372559
    9. '
' → logprob: -15.121306419372559
    10. '   ' → logprob: -15.871306419372559

Token 1213: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -2.3795937522663735e-05
    2. ' answer' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.00002384185791
    4. '	answer' → logprob: -19.000022888183594
    5. '```' → logprob: -19.750022888183594
    6. 'Answer' → logprob: -22.000022888183594
    7. '(answer' → logprob: -22.500022888183594
    8. '.answer' → logprob: -23.000022888183594
    9. '_answer' → logprob: -23.500022888183594
    10. '``' → logprob: -23.625022888183594

Token 1214: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015908108616713434
    2. '.insert' → logprob: -9.00015926361084
    3. '.' → logprob: -10.25015926361084
    4. '.app' → logprob: -16.375158309936523
    5. 'append' → logprob: -16.375158309936523
    6. ' .' → logprob: -18.375158309936523
    7. '.ap' → logprob: -18.375158309936523
    8. '.extend' → logprob: -18.625158309936523
    9. '   ' → logprob: -20.000158309936523
    10. '​.' → logprob: -20.625158309936523

Token 1215: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0007106438861228526
    2. 'cost' → logprob: -7.250710487365723
    3. ' cost' → logprob: -14.375710487365723
    4. '(' → logprob: -16.50071144104004
    5. '(code' → logprob: -18.75071144104004
    6. '(int' → logprob: -19.62571144104004
    7. '10' → logprob: -19.75071144104004
    8. 'int' → logprob: -19.87571144104004
    9. '_cost' → logprob: -20.00071144104004
    10. 'Cost' → logprob: -20.00071144104004

Token 1216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002374342642724514
    2. '   ' → logprob: -6.252374172210693
    3. ' -' → logprob: -8.752374649047852
    4. ')
' → logprob: -9.002374649047852
    5. '-' → logprob: -9.502374649047852
    6. '<|end|>' → logprob: -10.127374649047852
    7. '+' → logprob: -11.252374649047852
    8. '	' → logprob: -11.752374649047852
    9. ' )' → logprob: -12.377374649047852
    10. '```' → logprob: -12.502374649047852

Token 1217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12857815623283386
    2. 'if' → logprob: -2.1285781860351562
    3. ' if' → logprob: -7.378578186035156
    4. '<|end|>' → logprob: -7.878578186035156
    5. 'for' → logprob: -8.003578186035156
    6. '   ' → logprob: -8.628578186035156
    7. '```' → logprob: -9.753578186035156
    8. ' def' → logprob: -10.878578186035156
    9. '
' → logprob: -11.378578186035156
    10. '#' → logprob: -11.628578186035156

Token 1218: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.8685669898986816
    2. ' output' → logprob: -1.1185669898986816
    3. 'print' → logprob: -1.8685669898986816
    4. 'main' → logprob: -3.2435669898986816
    5. ' print' → logprob: -3.3685669898986816
    6. ' main' → logprob: -4.243566989898682
    7. 'reverse' → logprob: -5.243566989898682
    8. 'def' → logprob: -5.993566989898682
    9. ' reverse' → logprob: -6.743566989898682
    10. ' def' → logprob: -7.118566989898682

Token 1219: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.7296001315116882
    2. '(' → logprob: -1.479600191116333
    3. '()' → logprob: -1.729600191116333
    4. '(answer' → logprob: -2.854600191116333
    5. '(
' → logprob: -4.354599952697754
    6. 'def' → logprob: -4.479599952697754
    7. '_answer' → logprob: -4.729599952697754
    8. '(result' → logprob: -4.729599952697754
    9. '```' → logprob: -5.729599952697754
    10. 'result' → logprob: -6.229599952697754

Token 1220: '(answer' (ID: 78433)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1821624040603638
    2. 'for' → logprob: -1.1821624040603638
    3. '(answer' → logprob: -2.057162284851074
    4. '
' → logprob: -2.682162284851074
    5. '(' → logprob: -2.932162284851074
    6. '(
' → logprob: -3.432162284851074
    7. '```' → logprob: -3.557162284851074
    8. 'answer' → logprob: -3.557162284851074
    9. 'from' → logprob: -4.307162284851074
    10. '(ans' → logprob: -5.057162284851074

Token 1221: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5341774225234985
    2. '():' → logprob: -0.9091774225234985
    3. '()' → logprob: -4.659177303314209
    4. '):
' → logprob: -7.284177303314209
    5. '()):
' → logprob: -7.784177303314209
    6. '):' → logprob: -8.909177780151367
    7. '   ' → logprob: -9.284177780151367
    8. '():
' → logprob: -9.409177780151367
    9. '()[' → logprob: -10.534177780151367
    10. '[::-' → logprob: -11.034177780151367

Token 1222: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008116515236906707
    2. 'import' → logprob: -7.250811576843262
    3. ' for' → logprob: -10.000811576843262
    4. 'from' → logprob: -10.125811576843262
    5. 'answer' → logprob: -11.500811576843262
    6. '   ' → logprob: -12.625811576843262
    7. '
' → logprob: -13.375811576843262
    8. 'print' → logprob: -14.625811576843262
    9. '```' → logprob: -14.875811576843262
    10. 'total' → logprob: -15.500811576843262

Token 1223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014245182275772095
    2. 'import' → logprob: -4.26424503326416
    3. 'from' → logprob: -9.63924503326416
    4. 'answer' → logprob: -11.13924503326416
    5. 'print' → logprob: -13.63924503326416
    6. ' for' → logprob: -14.26424503326416
    7. '```' → logprob: -16.139245986938477
    8. 'ans' → logprob: -16.389245986938477
    9. '
' → logprob: -18.014245986938477
    10. ' import' → logprob: -18.764245986938477

Token 1224: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.49061402678489685
    2. 'cost' → logprob: -1.7406140565872192
    3. 'c' → logprob: -2.4906139373779297
    4. 'i' → logprob: -3.1156139373779297
    5. 'ans' → logprob: -3.1156139373779297
    6. 'x' → logprob: -3.6156139373779297
    7. 'v' → logprob: -5.24061393737793
    8. 'val' → logprob: -5.74061393737793
    9. 'value' → logprob: -6.11561393737793
    10. 'price' → logprob: -6.61561393737793

Token 1225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07901966571807861
    2. 'in' → logprob: -2.579019546508789
    3. ',' → logprob: -9.454019546508789
    4. 'n' → logprob: -10.079019546508789
    5. '   ' → logprob: -12.454019546508789
    6. ' ' → logprob: -12.954019546508789
    7. ' n' → logprob: -14.704019546508789
    8. '  ' → logprob: -14.704019546508789
    9. ' ,' → logprob: -14.829019546508789
    10. '```' → logprob: -14.954019546508789

Token 1226: ' output' (ID: 4733)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22967460751533508
    2. 'answer' → logprob: -1.7296745777130127
    3. 'ans' → logprob: -4.354674816131592
    4. 're' → logprob: -4.479674816131592
    5. 'a' → logprob: -6.354674816131592
    6. 'cost' → logprob: -6.979674816131592
    7. ' range' → logprob: -7.729674816131592
    8. ' answer' → logprob: -8.604674339294434
    9. 'r' → logprob: -9.229674339294434
    10. 'x' → logprob: -9.729674339294434

Token 1227: '_indices' (ID: 43508)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1463785171508789
    2. ' in' → logprob: -2.521378517150879
    3. '(answer' → logprob: -3.396378517150879
    4. '(len' → logprob: -4.896378517150879
    5. '(cost' → logprob: -5.271378517150879
    6. 'answer' → logprob: -5.271378517150879
    7. '   ' → logprob: -7.021378517150879
    8. '(' → logprob: -7.021378517150879
    9. 'len' → logprob: -8.146378517150879
    10. 'range' → logprob: -8.271378517150879

Token 1228: '(answer' (ID: 78433)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.01500596385449171
    2. 'range' → logprob: -5.515006065368652
    3. '[::-' → logprob: -5.765006065368652
    4. '(' → logprob: -6.390006065368652
    5. '(len' → logprob: -6.640006065368652
    6. ' range' → logprob: -6.765006065368652
    7. '   ' → logprob: -6.890006065368652
    8. '(reverse' → logprob: -7.015006065368652
    9. '(answer' → logprob: -7.265006065368652
    10. 'in' → logprob: -8.640006065368652

Token 1229: '):
' (ID: 1883)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.2328001707792282
    2. '):
' → logprob: -2.232800245285034
    3. '(len' → logprob: -3.357800245285034
    4. '):' → logprob: -3.732800245285034
    5. '(range' → logprob: -4.232800006866455
    6. '   ' → logprob: -5.607800006866455
    7. '[' → logprob: -5.732800006866455
    8. '-' → logprob: -5.982800006866455
    9. ' range' → logprob: -6.232800006866455
    10. '()):
' → logprob: -6.357800006866455

Token 1230: '       ' (ID: 309)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2473248690366745
    2. '   ' → logprob: -1.622324824333191
    3. ' range' → logprob: -4.7473249435424805
    4. 're' → logprob: -5.7473249435424805
    5. 'answer' → logprob: -5.9973249435424805
    6. '(range' → logprob: -6.2473249435424805
    7. '[::-' → logprob: -6.2473249435424805
    8. 'in' → logprob: -7.3723249435424805
    9. 'reverse' → logprob: -7.3723249435424805
    10. '       ' → logprob: -7.4973249435424805

Token 1231: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001730391290038824
    2. ' print' → logprob: -7.126730442047119
    3. '```' → logprob: -7.126730442047119
    4. '   ' → logprob: -9.126729965209961
    5. 'for' → logprob: -11.751729965209961
    6. '``' → logprob: -12.751729965209961
    7. 'answer' → logprob: -13.376729965209961
    8. 'range' → logprob: -14.501729965209961
    9. '	print' → logprob: -16.12672996520996
    10. '`' → logprob: -16.25172996520996

Token 1232: '(get' (ID: 7119)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.004893350414931774
    2. '(answer' → logprob: -5.3798933029174805
    3. ' answer' → logprob: -8.37989330291748
    4. 'int' → logprob: -11.00489330291748
    5. 'len' → logprob: -11.50489330291748
    6. '10' → logprob: -12.00489330291748
    7. 'ans' → logprob: -12.25489330291748
    8. '(' → logprob: -12.75489330291748
    9. '(len' → logprob: -14.37989330291748
    10. '   ' → logprob: -14.50489330291748

Token 1233: '_final' (ID: 46468)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.010195044800639153
    2. 'i' → logprob: -5.135195255279541
    3. ' answer' → logprob: -5.635195255279541
    4. 'len' → logprob: -8.010194778442383
    5. ' i' → logprob: -8.635194778442383
    6. '   ' → logprob: -9.760194778442383
    7. 'ans' → logprob: -9.885194778442383
    8. '(answer' → logprob: -10.385194778442383
    9. ' len' → logprob: -11.635194778442383
    10. '	answer' → logprob: -12.010194778442383

Token 1234: '_cost' (ID: 36820)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.0408044308423996
    2. ' answer' → logprob: -3.540804386138916
    3. 'i' → logprob: -4.790804386138916
    4. 'len' → logprob: -6.790804386138916
    5. ' i' → logprob: -7.540804386138916
    6. '(answer' → logprob: -8.040804862976074
    7. '   ' → logprob: -8.415804862976074
    8. '[i' → logprob: -9.415804862976074
    9. 'ans' → logprob: -9.415804862976074
    10. ' len' → logprob: -9.790804862976074

Token 1235: '(answer' (ID: 78433)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9119694232940674
    2. '(len' → logprob: -1.0369694232940674
    3. 'len' → logprob: -2.6619694232940674
    4. '(answer' → logprob: -2.7869694232940674
    5. '[i' → logprob: -3.0369694232940674
    6. 'answer' → logprob: -3.7869694232940674
    7. 'i' → logprob: -4.536969184875488
    8. '(' → logprob: -4.536969184875488
    9. '[len' → logprob: -4.911969184875488
    10. ')' → logprob: -5.161969184875488

Token 1236: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017401513177901506
    2. '[' → logprob: -7.001739978790283
    3. '[len' → logprob: -7.251739978790283
    4. '[-' → logprob: -10.126740455627441
    5. '[n' → logprob: -10.626740455627441
    6. ' [' → logprob: -11.376740455627441
    7. ')[' → logprob: -11.501740455627441
    8. ')' → logprob: -11.626740455627441
    9. ',i' → logprob: -11.751740455627441
    10. ',' → logprob: -12.376740455627441

Token 1237: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3511839807033539
    2. 'len' → logprob: -1.2261840105056763
    3. '-' → logprob: -7.226183891296387
    4. ' len' → logprob: -7.351183891296387
    5. ')' → logprob: -7.976183891296387
    6. '   ' → logprob: -8.101183891296387
    7. ' i' → logprob: -8.226183891296387
    8. ' -' → logprob: -8.851183891296387
    9. '[len' → logprob: -9.851183891296387
    10. '(len' → logprob: -9.976183891296387

Token 1238: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5879380106925964
    2. ')' → logprob: -0.8379380106925964
    3. ')-' → logprob: -5.712937831878662
    4. '-' → logprob: -6.087937831878662
    5. ' -' → logprob: -6.462937831878662
    6. '),' → logprob: -6.587937831878662
    7. ',' → logprob: -6.587937831878662
    8. ')+' → logprob: -7.462937831878662
    9. '```' → logprob: -7.837937831878662
    10. '))
' → logprob: -7.837937831878662

Token 1239: 'def' (ID: 1314)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40813976526260376
    2. 'range' → logprob: -1.408139705657959
    3. '```' → logprob: -2.908139705657959
    4. '(len' → logprob: -4.283139705657959
    5. 'def' → logprob: -4.408139705657959
    6. '   ' → logprob: -5.033139705657959
    7. 'reverse' → logprob: -6.533139705657959
    8. '``' → logprob: -7.908139705657959
    9. '
' → logprob: -8.033140182495117
    10. 'for' → logprob: -8.283140182495117

Token 1240: ' output' (ID: 4733)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018463045358657837
    2. 'output' → logprob: -4.018463134765625
    3. 're' → logprob: -9.018463134765625
    4. 'reverse' → logprob: -9.018463134765625
    5. 'len' → logprob: -10.268463134765625
    6. ' range' → logprob: -10.393463134765625
    7. 'for' → logprob: -13.268463134765625
    8. 'i' → logprob: -13.768463134765625
    9. '```' → logprob: -14.393463134765625
    10. 'answer' → logprob: -14.393463134765625

Token 1241: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0004408015520311892
    2. '_indexes' → logprob: -9.12544059753418
    3. '_' → logprob: -9.62544059753418
    4. 's' → logprob: -10.00044059753418
    5. '```' → logprob: -10.25044059753418
    6. 'Indices' → logprob: -10.87544059753418
    7. '_ind' → logprob: -10.87544059753418
    8. 'indices' → logprob: -10.87544059753418
    9. '_inds' → logprob: -11.12544059753418
    10. '_range' → logprob: -11.25044059753418

Token 1242: '(answer' (ID: 78433)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.01801414042711258
    2. 'range' → logprob: -4.768013954162598
    3. '=' → logprob: -4.893013954162598
    4. ' =' → logprob: -7.143013954162598
    5. '(answer' → logprob: -7.268013954162598
    6. '(reverse' → logprob: -9.018013954162598
    7. ' range' → logprob: -9.268013954162598
    8. '(' → logprob: -9.393013954162598
    9. '   ' → logprob: -11.143013954162598
    10. 'in' → logprob: -11.268013954162598

Token 1243: '):
' (ID: 1883)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.682274341583252
    2. ' =' → logprob: -1.182274341583252
    3. '()' → logprob: -2.057274341583252
    4. '   ' → logprob: -4.182274341583252
    5. '(range' → logprob: -4.182274341583252
    6. '():' → logprob: -4.432274341583252
    7. ')' → logprob: -5.307274341583252
    8. '(' → logprob: -5.307274341583252
    9. 'range' → logprob: -5.807274341583252
    10. '():
' → logprob: -6.807274341583252

Token 1244: '   ' (ID: 271)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05108225718140602
    2. 'return' → logprob: -3.0510823726654053
    3. '   ' → logprob: -6.301082134246826
    4. ' range' → logprob: -7.426082134246826
    5. 'reverse' → logprob: -10.301082611083984
    6. ' return' → logprob: -11.801082611083984
    7. '=' → logprob: -11.926082611083984
    8. '(range' → logprob: -12.426082611083984
    9. 're' → logprob: -12.801082611083984
    10. 'for' → logprob: -12.926082611083984

Token 1245: ' return' (ID: 622)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.6550729419104755e-05
    2. 'return' (adapté à ' return') → logprob: -10.250036239624023
    3. 'reverse' → logprob: -14.625036239624023
    4. ' range' → logprob: -14.750036239624023
    5. 're' → logprob: -15.000036239624023
    6. '   ' → logprob: -17.000036239624023
    7. 'for' → logprob: -19.625036239624023
    8. '(range' → logprob: -19.625036239624023
    9. 'Range' → logprob: -20.000036239624023
    10. 'enumer' → logprob: -20.375036239624023

Token 1246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.898723561083898e-05
    2. ' range' → logprob: -9.500079154968262
    3. 're' → logprob: -13.125079154968262
    4. '   ' → logprob: -13.500079154968262
    5. 'reverse' → logprob: -14.750079154968262
    6. '(range' → logprob: -16.500078201293945
    7. '	range' → logprob: -16.625078201293945
    8. '  ' → logprob: -16.750078201293945
    9. ' ' → logprob: -18.375078201293945
    10. 'enumer' → logprob: -18.375078201293945

Token 1247: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.0445127372804563e-05
    2. 'len' → logprob: -11.50001049041748
    3. '(' → logprob: -15.50001049041748
    4. '[len' → logprob: -18.625009536743164
    5. '=len' → logprob: -20.125009536743164
    6. ' len' → logprob: -20.750009536743164
    7. '	len' → logprob: -20.750009536743164
    8. '((' → logprob: -21.375009536743164
    9. ',len' → logprob: -21.625009536743164
    10. '   ' → logprob: -22.000009536743164

Token 1248: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -1.8624639324116288e-06
    2. 'answer' → logprob: -13.250001907348633
    3. '(output' → logprob: -17.500001907348633
    4. '(ans' → logprob: -18.250001907348633
    5. 'Answer' → logprob: -19.000001907348633
    6. '	answer' → logprob: -19.250001907348633
    7. '_answer' → logprob: -20.375001907348633
    8. ' answer' → logprob: -20.750001907348633
    9. '(question' → logprob: -21.750001907348633
    10. '.answer' → logprob: -22.500001907348633

Token 1249: '))

' (ID: 9746)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1435362696647644
    2. ' -' → logprob: -2.268536329269409
    3. ')' → logprob: -3.768536329269409
    4. '))' → logprob: -5.26853609085083
    5. ',' → logprob: -6.39353609085083
    6. ')-' → logprob: -9.018536567687988
    7. ')[' → logprob: -10.393536567687988
    8. '):
' → logprob: -10.393536567687988
    9. ')))' → logprob: -10.768536567687988
    10. ')):
' → logprob: -10.768536567687988

Token 1250: 'def' (ID: 1314)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.3823831081390381
    2. '(len' → logprob: -2.132383108139038
    3. 'len' → logprob: -2.632383108139038
    4. '[-' → logprob: -3.132383108139038
    5. 'def' → logprob: -3.882383108139038
    6. 'answer' → logprob: -4.007383346557617
    7. '[' → logprob: -4.632383346557617
    8. '   ' → logprob: -4.882383346557617
    9. '
' → logprob: -5.007383346557617
    10. '[i' → logprob: -5.632383346557617

Token 1251: ' get' (ID: 717)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.5184664130210876
    2. 'get' → logprob: -1.5184664726257324
    3. 'len' → logprob: -2.0184664726257324
    4. 'answer' → logprob: -3.0184664726257324
    5. 'reverse' → logprob: -6.393466472625732
    6. 'print' → logprob: -7.018466472625732
    7. 'output' → logprob: -7.143466472625732
    8. 'range' → logprob: -9.268465995788574
    9. 'lambda' → logprob: -9.393465995788574
    10. '
' → logprob: -9.893465995788574

Token 1252: '_final' (ID: 46468)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.02000289037823677
    2. 'final' → logprob: -4.020002841949463
    3. '_final' → logprob: -7.020002841949463
    4. '_answer' → logprob: -7.645002841949463
    5. 'len' → logprob: -8.395003318786621
    6. ' answer' → logprob: -9.020003318786621
    7. '(answer' → logprob: -9.145003318786621
    8. '```' → logprob: -11.520003318786621
    9. 'Final' → logprob: -12.645003318786621
    10. 'lambda' → logprob: -13.145003318786621

Token 1253: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.003339671529829502
    2. 'cost' → logprob: -6.253339767456055
    3. '_answer' → logprob: -7.753339767456055
    4. 'answer' → logprob: -7.878339767456055
    5. '(answer' → logprob: -8.253339767456055
    6. '```' → logprob: -8.378339767456055
    7. '(cost' → logprob: -9.628339767456055
    8. '_code' → logprob: -11.378339767456055
    9. '``' → logprob: -11.878339767456055
    10. '`' → logprob: -12.503339767456055

Token 1254: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.001112712430767715
    2. 'answer' → logprob: -6.876112937927246
    3. '```' → logprob: -10.501112937927246
    4. 'def' → logprob: -10.751112937927246
    5. '(' → logprob: -11.751112937927246
    6. '(ans' → logprob: -12.501112937927246
    7. '   ' → logprob: -12.626112937927246
    8. '(lambda' → logprob: -12.626112937927246
    9. '[' → logprob: -13.001112937927246
    10. '_answer' → logprob: -13.251112937927246

Token 1255: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.635164754698053e-05
    2. '   ' → logprob: -10.750066757202148
    3. '[i' → logprob: -11.250066757202148
    4. ',i' → logprob: -11.250066757202148
    5. '[' → logprob: -12.000066757202148
    6. ' ,' → logprob: -12.375066757202148
    7. '```' → logprob: -13.000066757202148
    8. 'def' → logprob: -13.250066757202148
    9. ',index' → logprob: -14.125066757202148
    10. '[-' → logprob: -14.625066757202148

Token 1256: ' i' (ID: 575)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.27380040287971497
    2. '-' → logprob: -1.7738003730773926
    3. 'i' → logprob: -2.7738003730773926
    4. '-i' → logprob: -5.648800373077393
    5. ' -' → logprob: -6.148800373077393
    6. ' len' → logprob: -6.648800373077393
    7. '-l' → logprob: -9.14880084991455
    8. '(len' → logprob: -9.64880084991455
    9. '[len' → logprob: -9.77380084991455
    10. '0' → logprob: -10.64880084991455

Token 1257: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.374149352312088
    2. '(answer' → logprob: -1.7491493225097656
    3. '   ' → logprob: -3.3741493225097656
    4. '(i' → logprob: -3.9991493225097656
    5. '):' → logprob: -3.9991493225097656
    6. '[i' → logprob: -4.124149322509766
    7. ' =' → logprob: -4.749149322509766
    8. '=' → logprob: -4.999149322509766
    9. ',' → logprob: -5.124149322509766
    10. ')' → logprob: -5.374149322509766

Token 1258: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2837998867034912
    2. '10' → logprob: -1.5337998867034912
    3. '   ' → logprob: -4.40880012512207
    4. 'str' → logprob: -5.03380012512207
    5. '100' → logprob: -5.90880012512207
    6. '999' → logprob: -6.53380012512207
    7. '9' → logprob: -6.53380012512207
    8. ' return' → logprob: -6.65880012512207
    9. '`' → logprob: -7.40880012512207
    10. '104' → logprob: -7.78380012512207

Token 1259: ' return' (ID: 622)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005119430832564831
    2. 'str' → logprob: -6.630119323730469
    3. 'answer' → logprob: -6.630119323730469
    4. '100' → logprob: -6.880119323730469
    5. 'return' (adapté à ' return') → logprob: -8.005119323730469
    6. '999' → logprob: -8.130119323730469
    7. 'print' → logprob: -8.380119323730469
    8. '   ' → logprob: -9.005119323730469
    9. 'int' → logprob: -9.005119323730469
    10. 'ans' → logprob: -9.505119323730469

Token 1260: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22714050114154816
    2. 'answer' → logprob: -1.6021405458450317
    3. 'ans' → logprob: -7.977140426635742
    4. '(' → logprob: -7.977140426635742
    5. 'str' → logprob: -8.102140426635742
    6. 'int' → logprob: -8.602140426635742
    7. '100' → logprob: -9.227140426635742
    8. ' answer' → logprob: -9.352140426635742
    9. ' ' → logprob: -9.352140426635742
    10. '(answer' → logprob: -9.852140426635742

Token 1261: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22696655988693237
    2. 'answer' → logprob: -1.6019666194915771
    3. 'int' → logprob: -7.601966381072998
    4. '(' → logprob: -8.101966857910156
    5. 'str' → logprob: -8.351966857910156
    6. 'ans' → logprob: -8.726966857910156
    7. 'max' → logprob: -9.101966857910156
    8. '100' → logprob: -9.726966857910156
    9. 'float' → logprob: -9.851966857910156
    10. '"' → logprob: -10.601966857910156

Token 1262: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.12797512114048004
    2. '15' → logprob: -2.1279752254486084
    3. '9' → logprob: -7.877974987030029
    4. '14' → logprob: -8.002975463867188
    5. '18' → logprob: -8.377975463867188
    6. '12' → logprob: -10.627975463867188
    7. '6' → logprob: -11.002975463867188
    8. '8' → logprob: -11.752975463867188
    9. '10' → logprob: -11.752975463867188
    10. '*' → logprob: -11.752975463867188

Token 1263: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.00016241880075540394
    2. '9' → logprob: -8.875162124633789
    3. '16' → logprob: -11.625162124633789
    4. '14' → logprob: -11.875162124633789
    5. '10' → logprob: -13.000162124633789
    6. '12' → logprob: -13.750162124633789
    7. '18' → logprob: -14.000162124633789
    8. '8' → logprob: -14.125162124633789
    9. '6' → logprob: -14.500162124633789
    10. '7' → logprob: -14.625162124633789

Token 1264: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740930497646332
    2. '-' → logprob: -0.9740930795669556
    3. '-int' → logprob: -12.974093437194824
    4. '   ' → logprob: -13.099093437194824
    5. '-answer' → logprob: -13.224093437194824
    6. '-if' → logprob: -13.349093437194824
    7. '-i' → logprob: -13.474093437194824
    8. '-
' → logprob: -13.724093437194824
    9. ' ' → logprob: -13.724093437194824
    10. '    ' → logprob: -14.224093437194824

Token 1265: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -2.935296834039036e-06
    2. ' answer' → logprob: -12.75000286102295
    3. '(answer' → logprob: -18.500003814697266
    4. '	answer' → logprob: -20.375003814697266
    5. 'ans' → logprob: -22.875003814697266
    6. 'Answer' → logprob: -23.375003814697266
    7. '_answer' → logprob: -23.375003814697266
    8. '1' → logprob: -23.875003814697266
    9. '.answer' → logprob: -23.875003814697266
    10. '   ' → logprob: -24.000003814697266

Token 1266: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002264686394482851
    2. '[' → logprob: -6.252264499664307
    3. '[s' → logprob: -9.252264976501465
    4. '\[' → logprob: -9.252264976501465
    5. '```' → logprob: -9.502264976501465
    6. 's' → logprob: -9.877264976501465
    7. '   ' → logprob: -11.752264976501465
    8. '[u' → logprob: -13.502264976501465
    9. ' [' → logprob: -14.127264976501465
    10. '[I' → logprob: -14.127264976501465

Token 1267: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20040136575698853
    2. '(' → logprob: -2.5754013061523438
    3. 'i' → logprob: -2.8254013061523438
    4. '(i' → logprob: -3.0754013061523438
    5. ' (' → logprob: -11.450401306152344
    6. ' i' → logprob: -13.075401306152344
    7. '{i' → logprob: -13.825401306152344
    8. ' ' → logprob: -14.200401306152344
    9. '[i' → logprob: -14.325401306152344
    10. '```' → logprob: -14.575401306152344

Token 1268: '-' (ID: 12)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000253591249929741
    2. 'i' → logprob: -8.750253677368164
    3. '-' → logprob: -9.375253677368164
    4. ' ' → logprob: -11.625253677368164
    5. ' -' → logprob: -14.875253677368164
    6. '   ' → logprob: -15.000253677368164
    7. '[i' → logprob: -15.500253677368164
    8. ' i' → logprob: -15.750253677368164
    9. '```' → logprob: -15.750253677368164
    10. '
' → logprob: -16.625253677368164

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.750000953674316
    3. 'i' → logprob: -16.375
    4. '```' → logprob: -16.75
    5. '-' → logprob: -17.5
    6. ' ' → logprob: -17.625
    7. '   ' → logprob: -17.75
    8. '
' → logprob: -18.625
    9. '１' → logprob: -19.125
    10. '۱' → logprob: -20.0

Token 1270: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08153855800628662
    2. ']' → logprob: -2.581538677215576
    3. '])' → logprob: -6.081538677215576
    4. ')]' → logprob: -9.081538200378418
    5. '<|end|>' → logprob: -9.081538200378418
    6. ' )' → logprob: -9.456538200378418
    7. '```' → logprob: -11.081538200378418
    8. '   ' → logprob: -11.956538200378418
    9. '）' → logprob: -12.081538200378418
    10. '}' → logprob: -12.081538200378418

Token 1271: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2615850269794464
    2. '<|end|>' → logprob: -1.511584997177124
    3. '```' → logprob: -5.011585235595703
    4. '}' → logprob: -6.511585235595703
    5. '
' → logprob: -7.636585235595703
    6. '#' → logprob: -7.636585235595703
    7. '\n' → logprob: -8.136585235595703
    8. '<|end|>' → logprob: -9.886585235595703
    9. ']' → logprob: -10.011585235595703
    10. '   ' → logprob: -11.136585235595703

Token 1272: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.062498968094587326
    2. '(' → logprob: -2.8124990463256836
    3. '#' → logprob: -8.812499046325684
    4. '()
' → logprob: -8.937499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. '(
' → logprob: -9.687499046325684
    7. '```' → logprob: -10.437499046325684
    8. '();' → logprob: -10.562499046325684
    9. '()\' → logprob: -11.562499046325684
    10. '("")' → logprob: -11.562499046325684


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1270
Tokens correctement prédits (1ère position, stricte): 567
Tokens correctement prédits (1ère position, avec adaptation): 630
Tokens correctement prédits (top 10): 1108
Précision stricte (1ère position): 44.65%
Précision adaptée (1ère position): 49.61%
Précision (top 10): 87.24%
================================================================================
