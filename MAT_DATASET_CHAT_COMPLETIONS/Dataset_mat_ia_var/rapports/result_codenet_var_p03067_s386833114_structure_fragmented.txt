================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def parse_input(input_str):
    return list(map(int, input_str.split()))

def sort_pair(a, b):
    return sorted([a, b])

def create_range_list(start, end):
    return [i for i in range(start, end)]

def check_in_range(value, range_list):
    return value in range_list

def print_yes():
    print("Yes")

def print_no():
    print("No")

def main():
    user_input = get_input()
    values = parse_input(user_input)
    a, b, c = values[0], values[1], values[2]
    sorted_pair = sort_pair(a, b)
    start = sorted_pair[0]
    end = sorted_pair[1]
    range_list = create_range_list(start, end)
    if check_in_range(c, range_list):
        print_yes()
    else:
        print_no()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032705222256481647
    2. '_' → logprob: -6.253270626068115
    3. '():' → logprob: -7.253270626068115
    4. '```' → logprob: -8.378270149230957
    5. '()' → logprob: -8.628270149230957
    6. ' (' → logprob: -9.878270149230957
    7. '(_' → logprob: -9.878270149230957
    8. '(_:' → logprob: -10.503270149230957
    9. '(:' → logprob: -10.878270149230957
    10. '("("' → logprob: -12.003270149230957

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6354003548622131
    2. '   ' → logprob: -1.6354002952575684
    3. '\' → logprob: -2.0104002952575684
    4. '    
' → logprob: -3.3854002952575684
    5. '\n' → logprob: -3.5104002952575684
    6. '(' → logprob: -4.010400295257568
    7. '  
' → logprob: -5.135400295257568
    8. '   
' → logprob: -5.260400295257568
    9. '()' → logprob: -5.385400295257568
    10. '(
' → logprob: -5.385400295257568

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1634688824415207
    2. 'input' → logprob: -2.538468837738037
    3. 'user' → logprob: -3.413468837738037
    4. '   ' → logprob: -4.038468837738037
    5. ' return' → logprob: -5.288468837738037
    6. 'x' → logprob: -5.538468837738037
    7. '```' → logprob: -5.538468837738037
    8. ' ' → logprob: -5.663468837738037
    9. 'text' → logprob: -6.788468837738037
    10. 'i' → logprob: -7.288468837738037

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2521325349807739
    2. '"' → logprob: -2.5021324157714844
    3. ' input' → logprob: -2.6271324157714844
    4. 'input' → logprob: -3.0021324157714844
    5. ''' → logprob: -4.127132415771484
    6. '  ' → logprob: -6.877132415771484
    7. ' "' → logprob: -7.252132415771484
    8. ' '' → logprob: -8.252132415771484
    9. '(input' → logprob: -8.502132415771484
    10. '    ' → logprob: -9.252132415771484

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001581993536092341
    2. '('' → logprob: -7.251582145690918
    3. '()' → logprob: -7.626582145690918
    4. ''' → logprob: -8.876582145690918
    5. '("("' → logprob: -9.251582145690918
    6. ' (' → logprob: -10.501582145690918
    7. '```' → logprob: -10.626582145690918
    8. '(
' → logprob: -10.876582145690918
    9. '"' → logprob: -10.876582145690918
    10. ' ' → logprob: -11.626582145690918

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10757318139076233
    2. '.' → logprob: -3.4825732707977295
    3. '(
' → logprob: -4.23257303237915
    4. '()' → logprob: -4.48257303237915
    5. '\n' → logprob: -4.60757303237915
    6. '#' → logprob: -4.73257303237915
    7. ':' → logprob: -5.23257303237915
    8. ')' → logprob: -5.73257303237915
    9. 'def' → logprob: -5.73257303237915
    10. '```' → logprob: -5.85757303237915

Token 9: ' parse' (ID: 8420)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6985287070274353
    2. ' get' → logprob: -1.19852876663208
    3. ' process' → logprob: -2.82352876663208
    4. ' space' → logprob: -2.94852876663208
    5. ' user' → logprob: -3.57352876663208
    6. ' main' → logprob: -4.82352876663208
    7. ' add' → logprob: -4.94852876663208
    8. ' compute' → logprob: -5.07352876663208
    9. ' my' → logprob: -5.19852876663208
    10. '_' → logprob: -5.44852876663208

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31203189492225647
    2. '(' → logprob: -1.437031865119934
    3. '_input' → logprob: -3.5620319843292236
    4. '_line' → logprob: -8.062031745910645
    5. '_token' → logprob: -8.312031745910645
    6. '_text' → logprob: -8.437031745910645
    7. '_data' → logprob: -8.812031745910645
    8. '(_)' → logprob: -9.062031745910645
    9. '('_' → logprob: -9.187031745910645
    10. '(_' → logprob: -9.187031745910645

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01394134946167469
    2. '_' → logprob: -4.388941287994385
    3. '("("' → logprob: -7.513941287994385
    4. '(_' → logprob: -8.763941764831543
    5. '('_' → logprob: -9.013941764831543
    6. '(_)' → logprob: -9.388941764831543
    7. '('' → logprob: -9.888941764831543
    8. '(_:' → logprob: -10.013941764831543
    9. '_parent' → logprob: -10.388941764831543
    10. '_(' → logprob: -10.513941764831543

Token 12: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20742450654506683
    2. '):' → logprob: -1.832424521446228
    3. '_' → logprob: -3.8324244022369385
    4. ')_' → logprob: -6.707424640655518
    5. '_)' → logprob: -6.832424640655518
    6. '_string' → logprob: -7.207424640655518
    7. '(' → logprob: -7.707424640655518
    8. '_data' → logprob: -7.707424640655518
    9. '_input' → logprob: -8.08242416381836
    10. '_text' → logprob: -8.20742416381836

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002206047298386693
    2. ')' → logprob: -6.377205848693848
    3. ':' → logprob: -8.127205848693848
    4. '):
' → logprob: -9.127205848693848
    5. ' ):' → logprob: -10.377205848693848
    6. ',' → logprob: -10.752205848693848
    7. '(' → logprob: -12.127205848693848
    8. '   ' → logprob: -12.502205848693848
    9. '():' → logprob: -12.502205848693848
    10. '[' → logprob: -12.627205848693848

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04686075448989868
    2. '(' → logprob: -3.671860694885254
    3. '    ' → logprob: -5.046860694885254
    4. ' return' → logprob: -5.296860694885254
    5. ' input' → logprob: -5.671860694885254
    6. 'input' → logprob: -6.546860694885254
    7. '(input' → logprob: -7.171860694885254
    8. '[' → logprob: -7.546860694885254
    9. ' token' → logprob: -8.171860694885254
    10. 'return' → logprob: -8.171860694885254

Token 15: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10958172380924225
    2. ' tokens' → logprob: -2.859581708908081
    3. ' return' → logprob: -4.10958194732666
    4. '    ' → logprob: -4.48458194732666
    5. 'tokens' → logprob: -5.35958194732666
    6. ' token' → logprob: -5.60958194732666
    7. ' split' → logprob: -5.98458194732666
    8. ' if' → logprob: -6.35958194732666
    9. ' input' → logprob: -7.23458194732666
    10. ' try' → logprob: -7.35958194732666

Token 16: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.053015679121017456
    2. ' list' → logprob: -3.92801570892334
    3. 'input' → logprob: -3.92801570892334
    4. ' int' → logprob: -4.55301570892334
    5. 'list' → logprob: -7.42801570892334
    6. 'int' → logprob: -7.67801570892334
    7. ' ' → logprob: -8.30301570892334
    8. '[input' → logprob: -8.92801570892334
    9. ' [' → logprob: -9.30301570892334
    10. ' []' → logprob: -9.55301570892334

Token 17: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014224973507225513
    2. '(input' → logprob: -4.264225006103516
    3. '(eval' → logprob: -11.639225006103516
    4. '(int' → logprob: -12.014225006103516
    5. '(token' → logprob: -12.264225006103516
    6. '(range' → logprob: -12.389225006103516
    7. '(parse' → logprob: -12.389225006103516
    8. '("("' → logprob: -12.514225006103516
    9. '(str' → logprob: -12.639225006103516
    10. '(

' → logprob: -12.764225006103516

Token 18: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7277054190635681
    2. '(int' → logprob: -0.9777054190635681
    3. '(str' → logprob: -1.977705478668213
    4. '(lambda' → logprob: -6.477705478668213
    5. 'str' → logprob: -7.727705478668213
    6. 'int' → logprob: -8.977705001831055
    7. '(eval' → logprob: -9.352705001831055
    8. ')' → logprob: -9.852705001831055
    9. '(
' → logprob: -10.102705001831055
    10. '(ord' → logprob: -10.352705001831055

Token 19: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1795908361673355
    2. ',input' → logprob: -2.679590940475464
    3. ',' → logprob: -2.804590940475464
    4. '(' → logprob: -3.429590940475464
    5. 'input' → logprob: -6.304590702056885
    6. ' (' → logprob: -7.679590702056885
    7. ' ,' → logprob: -8.179591178894043
    8. ' input' → logprob: -8.804591178894043
    9. '(
' → logprob: -10.179591178894043
    10. ')' → logprob: -10.554591178894043

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12694910168647766
    2. 'input' → logprob: -2.1269490718841553
    3. '(input' → logprob: -11.001949310302734
    4. ',input' → logprob: -13.501949310302734
    5. '   ' → logprob: -13.751949310302734
    6. '_input' → logprob: -14.501949310302734
    7. '	input' → logprob: -14.751949310302734
    8. '=input' → logprob: -15.126949310302734
    9. ')' → logprob: -15.626949310302734
    10. ' ' → logprob: -15.751949310302734

Token 21: '_str' (ID: 6182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1059740781784058
    2. '(input' → logprob: -1.1059740781784058
    3. '_str' → logprob: -1.1059740781784058
    4. ')' → logprob: -5.980974197387695
    5. '(str' → logprob: -7.230974197387695
    6. 'input' → logprob: -7.480974197387695
    7. '_string' → logprob: -7.605974197387695
    8. '(.' → logprob: -7.855974197387695
    9. '(_' → logprob: -7.980974197387695
    10. ' (' → logprob: -8.105974197387695

Token 22: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.11399824172258377
    2. '.' → logprob: -2.3639981746673584
    3. '.strip' → logprob: -4.6139984130859375
    4. ' .' → logprob: -6.1139984130859375
    5. '   ' → logprob: -6.6139984130859375
    6. '().' → logprob: -8.738998413085938
    7. 'split' → logprob: -9.988998413085938
    8. '    ' → logprob: -12.363998413085938
    9. '('.' → logprob: -12.738998413085938
    10. '(split' → logprob: -12.863998413085938

Token 23: '()))

' (ID: 125972)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.13601535558700562
    2. '()))' → logprob: -2.1360154151916504
    3. '()' → logprob: -5.01101541519165
    4. '())' → logprob: -6.63601541519165
    5. '())))' → logprob: -7.38601541519165
    6. '(' → logprob: -8.261014938354492
    7. '(','' → logprob: -9.511014938354492
    8. '("' → logprob: -10.011014938354492
    9. ''))' → logprob: -10.136014938354492
    10. ''' → logprob: -12.011014938354492

Token 24: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7478659152984619
    2. 'def' → logprob: -0.7478659152984619
    3. '
' → logprob: -3.997865915298462
    4. 'd' → logprob: -4.122865676879883
    5. '\' → logprob: -4.497865676879883
    6. '```' → logprob: -6.622865676879883
    7. ' 

' → logprob: -6.747865676879883
    8. '\n' → logprob: -6.872865676879883
    9. '_

' → logprob: -6.997865676879883
    10. '`

' → logprob: -8.122865676879883

Token 25: ' sort' (ID: 4506)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17078886926174164
    2. ' solve' → logprob: -2.6707887649536133
    3. ' calculate' → logprob: -3.0457887649536133
    4. ' sum' → logprob: -3.9207887649536133
    5. ' process' → logprob: -4.545788764953613
    6. ' compute' → logprob: -5.795788764953613
    7. ' find' → logprob: -6.670788764953613
    8. 'main' → logprob: -6.920788764953613
    9. 'solve' → logprob: -6.920788764953613
    10. ' add' → logprob: -7.295788764953613

Token 26: '_pair' (ID: 34819)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4990638494491577
    2. '(' → logprob: -1.6240638494491577
    3. '_list' → logprob: -2.8740639686584473
    4. '_items' → logprob: -2.9990639686584473
    5. '_array' → logprob: -3.4990639686584473
    6. '_data' → logprob: -4.124063968658447
    7. '_numbers' → logprob: -4.874063968658447
    8. '_values' → logprob: -5.124063968658447
    9. '_elements' → logprob: -5.499063968658447
    10. 'ed' → logprob: -5.499063968658447

Token 27: '(a' (ID: 6271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.024305863305926323
    2. '(' → logprob: -4.649305820465088
    3. '_s' → logprob: -5.024305820465088
    4. '(s' → logprob: -5.024305820465088
    5. '()' → logprob: -7.899305820465088
    6. 'def' → logprob: -7.899305820465088
    7. '(_' → logprob: -8.899306297302246
    8. '_list' → logprob: -8.899306297302246
    9. '_' → logprob: -9.524306297302246
    10. ' s' → logprob: -9.774306297302246

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012885673204436898
    2. ',b' → logprob: -7.251288414001465
    3. ',)' → logprob: -8.376288414001465
    4. ')' → logprob: -8.501288414001465
    5. ' ,' → logprob: -9.126288414001465
    6. 's' → logprob: -11.626288414001465
    7. ',a' → logprob: -12.501288414001465
    8. ',p' → logprob: -12.626288414001465
    9. '_,' → logprob: -12.876288414001465
    10. ',s' → logprob: -13.001288414001465

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28117042779922485
    2. ' b' → logprob: -1.40617036819458
    3. ' ' → logprob: -11.281170845031738
    4. 'a' → logprob: -12.906170845031738
    5. ')b' → logprob: -13.281170845031738
    6. ')' → logprob: -13.906170845031738
    7. '<|end|>' → logprob: -14.656170845031738
    8. '>b' → logprob: -14.781170845031738
    9. ' )' → logprob: -15.031170845031738
    10. ',b' → logprob: -15.343670845031738

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006573928403668106
    2. ')' → logprob: -7.500657558441162
    3. ' ):' → logprob: -10.375657081604004
    4. ':' → logprob: -10.500657081604004
    5. ',' → logprob: -10.625657081604004
    6. '):
' → logprob: -11.250657081604004
    7. '   ' → logprob: -12.750657081604004
    8. ' ' → logprob: -13.750657081604004
    9. ')):' → logprob: -13.750657081604004
    10. '=' → logprob: -14.250657081604004

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09059210866689682
    2. '):' → logprob: -2.7155921459198
    3. ':
' → logprob: -4.340591907501221
    4. '   ' → logprob: -6.340591907501221
    5. ':return' → logprob: -6.340591907501221
    6. '):
' → logprob: -6.465591907501221
    7. ' :' → logprob: -7.215591907501221
    8. '(a' → logprob: -8.090592384338379
    9. '():' → logprob: -8.340592384338379
    10. ',' → logprob: -8.340592384338379

Token 32: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4936124086380005
    2. ' return' → logprob: -1.9936124086380005
    3. 'if' → logprob: -2.118612289428711
    4. '   ' → logprob: -2.618612289428711
    5. 'return' (adapté à ' return') → logprob: -2.868612289428711
    6. ' ' → logprob: -6.743612289428711
    7. 'a' → logprob: -7.118612289428711
    8. ' a' → logprob: -7.868612289428711
    9. '    ' → logprob: -8.743612289428711
    10. '    
' → logprob: -8.743612289428711

Token 33: ' sorted' (ID: 20099)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6406647562980652
    2. ' (' → logprob: -1.64066481590271
    3. 'a' → logprob: -2.01566481590271
    4. '(min' → logprob: -2.51566481590271
    5. ' a' → logprob: -3.76566481590271
    6. ' min' → logprob: -4.015664577484131
    7. 'min' → logprob: -4.265664577484131
    8. '(' → logprob: -5.265664577484131
    9. ' ' → logprob: -6.890664577484131
    10. '(max' → logprob: -6.890664577484131

Token 34: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.46531349420547485
    2. '(' → logprob: -1.21531343460083
    3. '([' → logprob: -2.59031343460083
    4. '(a' → logprob: -8.090313911437988
    5. '(([' → logprob: -9.465313911437988
    6. '([(' → logprob: -10.965313911437988
    7. '(
' → logprob: -11.215313911437988
    8. '<|end|>' → logprob: -12.340313911437988
    9. '```' → logprob: -12.465313911437988
    10. '(

' → logprob: -12.590313911437988

Token 35: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.5577775128767826e-06
    2. ' a' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.6250057220459
    4. ' ' → logprob: -18.7500057220459
    5. '	a' → logprob: -20.1250057220459
    6. '(a' → logprob: -20.8750057220459
    7. ''a' → logprob: -21.3750057220459
    8. '  ' → logprob: -21.5000057220459
    9. ',a' → logprob: -22.1250057220459
    10. 'а' → logprob: -22.6250057220459

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015298592625185847
    2. ',b' → logprob: -6.626529693603516
    3. ' ,' → logprob: -8.501529693603516
    4. ',
' → logprob: -14.626529693603516
    5. ' ' → logprob: -15.501529693603516
    6. 'b' → logprob: -16.751529693603516
    7. '```' → logprob: -17.501529693603516
    8. ',a' → logprob: -17.626529693603516
    9. '‌,' → logprob: -18.626529693603516
    10. '   ' → logprob: -19.251529693603516

Token 37: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740804135799408
    2. ' b' → logprob: -0.9740804433822632
    3. ' ' → logprob: -13.349080085754395
    4. '   ' → logprob: -13.849080085754395
    5. '    ' → logprob: -14.599080085754395
    6. ' ' → logprob: -15.974080085754395
    7. '>b' → logprob: -16.97408103942871
    8. '  ' → logprob: -16.97408103942871
    9. ')b' → logprob: -17.09908103942871
    10. '	b' → logprob: -17.72408103942871

Token 38: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -2.4391956685576588e-05
    2. ')' → logprob: -11.000024795532227
    3. '])
' → logprob: -12.750024795532227
    4. '],' → logprob: -13.250024795532227
    5. ' ])' → logprob: -14.125024795532227
    6. ']))' → logprob: -14.500024795532227
    7. ')])' → logprob: -14.625024795532227
    8. ']' → logprob: -14.875024795532227
    9. ']])' → logprob: -15.500024795532227
    10. '))' → logprob: -15.500024795532227

Token 39: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007676300127059221
    2. '
' → logprob: -5.632676124572754
    3. '\' → logprob: -6.257676124572754
    4. '

' → logprob: -7.382676124572754
    5. '<|end|>' → logprob: -7.632676124572754
    6. '\n' → logprob: -8.257676124572754
    7. '#' → logprob: -8.382676124572754
    8. '```' → logprob: -8.507676124572754
    9. 'a' → logprob: -9.382676124572754
    10. '<|end|>' → logprob: -9.632676124572754

Token 40: ' create' (ID: 2501)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03371969982981682
    2. 'main' → logprob: -4.408719539642334
    3. ' process' → logprob: -5.158719539642334
    4. ' find' → logprob: -5.283719539642334
    5. ' merge' → logprob: -5.908719539642334
    6. ' sort' → logprob: -6.033719539642334
    7. ' get' → logprob: -7.408719539642334
    8. ' solve' → logprob: -7.408719539642334
    9. ' max' → logprob: -7.658719539642334
    10. ' calculate' → logprob: -7.783719539642334

Token 41: '_range' (ID: 22022)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.09053745120763779
    2. '_array' → logprob: -2.9655375480651855
    3. '_list' → logprob: -3.8405375480651855
    4. '_pairs' → logprob: -5.4655375480651855
    5. '_stack' → logprob: -6.4655375480651855
    6. '_' → logprob: -6.5905375480651855
    7. '_user' → logprob: -6.8405375480651855
    8. '_tuple' → logprob: -7.2155375480651855
    9. '_set' → logprob: -7.3405375480651855
    10. '_matrix' → logprob: -7.9655375480651855

Token 42: '_list' (ID: 4162)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.21966838836669922
    2. '(a' → logprob: -1.8446683883666992
    3. '(' → logprob: -3.344668388366699
    4. '(s' → logprob: -7.094668388366699
    5. '(n' → logprob: -7.344668388366699
    6. '(min' → logprob: -7.469668388366699
    7. '(begin' → logprob: -7.469668388366699
    8. ' (' → logprob: -7.719668388366699
    9. '(from' → logprob: -7.969668388366699
    10. '(lower' → logprob: -8.9696683883667

Token 43: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.07466355711221695
    2. '(' → logprob: -3.0746636390686035
    3. '(a' → logprob: -3.8246636390686035
    4. '(n' → logprob: -6.5746636390686035
    5. '(s' → logprob: -6.8246636390686035
    6. '(begin' → logprob: -8.074663162231445
    7. '(size' → logprob: -8.324663162231445
    8. '(from' → logprob: -8.324663162231445
    9. '(m' → logprob: -8.449663162231445
    10. ' (' → logprob: -9.324663162231445

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010282796574756503
    2. ' ,' → logprob: -9.375102996826172
    3. ',end' → logprob: -11.125102996826172
    4. ',
' → logprob: -14.125102996826172
    5. '_,' → logprob: -14.625102996826172
    6. ',start' → logprob: -14.750102996826172
    7. '‌,' → logprob: -15.500102996826172
    8. ' ' → logprob: -15.750102996826172
    9. ',int' → logprob: -16.000102996826172
    10. ')' → logprob: -16.125102996826172

Token 45: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.08943895250558853
    2. 'end' → logprob: -2.4644389152526855
    3. ' stop' → logprob: -8.214439392089844
    4. 'stop' → logprob: -8.464439392089844
    5. ' ' → logprob: -11.464439392089844
    6. '   ' → logprob: -12.964439392089844
    7. '  ' → logprob: -13.714439392089844
    8. ' finish' → logprob: -13.964439392089844
    9. '	end' → logprob: -14.214439392089844
    10. '    ' → logprob: -14.714439392089844

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00040338258258998394
    2. '):
' → logprob: -8.37540340423584
    3. ':' → logprob: -9.12540340423584
    4. ')' → logprob: -10.00040340423584
    5. ' ):' → logprob: -11.87540340423584
    6. '   ' → logprob: -12.37540340423584
    7. '):
' → logprob: -13.00040340423584
    8. '=' → logprob: -13.12540340423584
    9. '**' → logprob: -14.37540340423584
    10. ',' → logprob: -14.50040340423584

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4620155096054077
    2. ' return' → logprob: -1.0870155096054077
    3. ' range' → logprob: -3.7120156288146973
    4. 'return' → logprob: -5.087015628814697
    5. 'range' → logprob: -6.462015628814697
    6. ' list' → logprob: -8.337015151977539
    7. '(range' → logprob: -9.337015151977539
    8. ' [' → logprob: -9.712015151977539
    9. '[' → logprob: -9.962015151977539
    10. '    ' → logprob: -10.337015151977539

Token 48: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04822301119565964
    2. ' return' → logprob: -3.6732230186462402
    3. '   ' → logprob: -4.29822301864624
    4. 'range' → logprob: -5.42322301864624
    5. 'list' → logprob: -5.79822301864624
    6. ' list' → logprob: -7.79822301864624
    7. ' range' → logprob: -8.673222541809082
    8. '[]' → logprob: -10.673222541809082
    9. '```' → logprob: -11.048222541809082
    10. '[' → logprob: -11.298222541809082

Token 49: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16346858441829681
    2. ' list' → logprob: -1.913468599319458
    3. '[list' → logprob: -5.788468360900879
    4. 'range' → logprob: -9.163468360900879
    5. ' [' → logprob: -10.288468360900879
    6. '[' → logprob: -10.788468360900879
    7. ' range' → logprob: -12.538468360900879
    8. '(list' → logprob: -13.163468360900879
    9. '   ' → logprob: -13.163468360900879
    10. '	list' → logprob: -13.288468360900879

Token 50: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021029239520430565
    2. 'x' → logprob: -4.521029472351074
    3. 'start' → logprob: -4.646029472351074
    4. ' i' → logprob: -8.271029472351074
    5. 'range' → logprob: -9.896029472351074
    6. ' start' → logprob: -12.146029472351074
    7. 'n' → logprob: -12.396029472351074
    8. '*' → logprob: -12.521029472351074
    9. ' x' → logprob: -12.646029472351074
    10. 'num' → logprob: -13.146029472351074

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0032210873905569315
    2. 'for' → logprob: -5.753221035003662
    3. ' ' → logprob: -10.37822151184082
    4. '	for' → logprob: -12.37822151184082
    5. 'range' → logprob: -12.37822151184082
    6. ' in' → logprob: -13.25322151184082
    7. ' range' → logprob: -14.00322151184082
    8. ' f' → logprob: -15.12822151184082
    9. '   ' → logprob: -15.37822151184082
    10. ' ' → logprob: -15.50322151184082

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11985591799020767
    2. ' range' → logprob: -2.6198558807373047
    3. ' ' → logprob: -3.7448558807373047
    4. 'range' → logprob: -4.619855880737305
    5. 'i' → logprob: -5.244855880737305
    6. ' in' → logprob: -6.869855880737305
    7. ' ' → logprob: -9.619855880737305
    8. '  ' → logprob: -10.244855880737305
    9. '	i' → logprob: -10.369855880737305
    10. '<|end|>' → logprob: -10.369855880737305

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.156403586268425
    2. 'in' → logprob: -2.2814035415649414
    3. ' range' → logprob: -3.7814035415649414
    4. 'range' → logprob: -4.281403541564941
    5. ' ' → logprob: -5.156403541564941
    6. '<|end|>' → logprob: -8.906403541564941
    7. 'n' → logprob: -9.656403541564941
    8. '  ' → logprob: -11.031403541564941
    9. ' xrange' → logprob: -11.156403541564941
    10. '<|end|>' → logprob: -11.656403541564941

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804275393486023
    2. 'range' → logprob: -3.2880427837371826
    3. '	range' → logprob: -14.288043022155762
    4. '(range' → logprob: -14.413043022155762
    5. ' ' → logprob: -16.413042068481445
    6. '_range' → logprob: -17.788042068481445
    7. ' xrange' → logprob: -18.038042068481445
    8. '.range' → logprob: -18.288042068481445
    9. 'Range' → logprob: -18.538042068481445
    10. '   ' → logprob: -18.663042068481445

Token 55: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.006812599487602711
    2. '(' → logprob: -5.006812572479248
    3. 'start' → logprob: -9.881813049316406
    4. ' (' → logprob: -10.506813049316406
    5. ' start' → logprob: -11.006813049316406
    6. '(end' → logprob: -13.756813049316406
    7. '(
' → logprob: -15.256813049316406
    8. '=start' → logprob: -15.381813049316406
    9. ',start' → logprob: -15.381813049316406
    10. '(s' → logprob: -15.881813049316406

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009841673076152802
    2. ',end' → logprob: -4.884841442108154
    3. ' ,' → logprob: -6.134841442108154
    4. 'end' → logprob: -10.009841918945312
    5. '   ' → logprob: -11.884841918945312
    6. '(end' → logprob: -12.259841918945312
    7. ',
' → logprob: -13.134841918945312
    8. ' end' → logprob: -13.259841918945312
    9. ' ' → logprob: -13.509841918945312
    10. ',int' → logprob: -13.634841918945312

Token 57: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.14285703003406525
    2. 'end' → logprob: -2.017857074737549
    3. '    ' → logprob: -9.14285659790039
    4. '   ' → logprob: -9.76785659790039
    5. '(end' → logprob: -12.14285659790039
    6. ' ' → logprob: -12.14285659790039
    7. '	end' → logprob: -13.14285659790039
    8. ',end' → logprob: -13.89285659790039
    9. '  ' → logprob: -14.14285659790039
    10. '=end' → logprob: -14.39285659790039

Token 58: ')]

' (ID: 56882)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22579142451286316
    2. ' +' → logprob: -1.6007914543151855
    3. ')]' → logprob: -8.100790977478027
    4. ')' → logprob: -9.725790977478027
    5. '1' → logprob: -12.725790977478027
    6. '))' → logprob: -13.100790977478027
    7. ' ' → logprob: -13.100790977478027
    8. ',' → logprob: -13.100790977478027
    9. '   ' → logprob: -13.850790977478027
    10. ')])' → logprob: -13.850790977478027

Token 59: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12863601744174957
    2. 'def' → logprob: -2.878636121749878
    3. ']' → logprob: -4.003635883331299
    4. ')]' → logprob: -4.378635883331299
    5. '()]' → logprob: -5.003635883331299
    6. '(' → logprob: -5.128635883331299
    7. ')' → logprob: -5.253635883331299
    8. '+]' → logprob: -5.503635883331299
    9. ' +' → logprob: -6.003635883331299
    10. '```' → logprob: -6.378635883331299

Token 60: ' check' (ID: 2371)
  Prédit: ' create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -0.005299573298543692
    2. ' sort' → logprob: -6.3802995681762695
    3. 'create' → logprob: -6.8802995681762695
    4. '_' → logprob: -7.0052995681762695
    5. ' main' → logprob: -7.7552995681762695
    6. ' ' → logprob: -8.00529956817627
    7. ' get' → logprob: -8.63029956817627
    8. '_create' → logprob: -9.13029956817627
    9. ' _' → logprob: -9.63029956817627
    10. ' check' → logprob: -9.75529956817627

Token 61: '_in' (ID: 2267)
  Prédit: '_overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_overlap' → logprob: -0.4665314555168152
    2. '_in' → logprob: -1.71653151512146
    3. '_range' → logprob: -1.96653151512146
    4. '_inter' → logprob: -3.71653151512146
    5. '_' → logprob: -4.466531276702881
    6. '_over' → logprob: -5.216531276702881
    7. '_ranges' → logprob: -6.091531276702881
    8. '_pair' → logprob: -6.341531276702881
    9. '_interval' → logprob: -6.466531276702881
    10. '_cont' → logprob: -7.091531276702881

Token 62: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.11193813383579254
    2. '_' → logprob: -2.986938238143921
    3. 'range' → logprob: -4.236937999725342
    4. 'cludes' → logprob: -4.611937999725342
    5. 'clude' → logprob: -4.736937999725342
    6. 't' → logprob: -5.236937999725342
    7. 'put' → logprob: -5.361937999725342
    8. '_list' → logprob: -5.611937999725342
    9. 'clusive' → logprob: -6.486937999725342
    10. 'clusion' → logprob: -6.736937999725342

Token 63: '(value' (ID: 6333)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.44222667813301086
    2. '(' → logprob: -1.0672266483306885
    3. ' (' → logprob: -4.817226886749268
    4. '(range' → logprob: -5.817226886749268
    5. '(s' → logprob: -6.942226886749268
    6. '(end' → logprob: -7.567226886749268
    7. '(a' → logprob: -7.692226886749268
    8. '(begin' → logprob: -9.31722640991211
    9. '(value' → logprob: -9.94222640991211
    10. 's' → logprob: -9.94222640991211

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008869222365319729
    2. ' ,' → logprob: -7.125886917114258
    3. ')' → logprob: -10.250886917114258
    4. ',start' → logprob: -10.750886917114258
    5. '):' → logprob: -11.250886917114258
    6. ',value' → logprob: -12.125886917114258
    7. ' ' → logprob: -13.500886917114258
    8. ' )' → logprob: -14.125886917114258
    9. ',int' → logprob: -14.250886917114258
    10. '=' → logprob: -15.000886917114258

Token 65: ' range' (ID: 3352)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.04209655895829201
    2. 'start' → logprob: -3.2920966148376465
    3. ' range' → logprob: -5.6670966148376465
    4. 'range' → logprob: -7.9170966148376465
    5. ' low' → logprob: -9.667096138000488
    6. ' lower' → logprob: -10.792096138000488
    7. ' min' → logprob: -10.917096138000488
    8. ' rng' → logprob: -10.917096138000488
    9. ' r' → logprob: -11.042096138000488
    10. '   ' → logprob: -11.292096138000488

Token 66: '_list' (ID: 4162)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.06287629157304764
    2. '_list' → logprob: -3.5628762245178223
    3. '_' → logprob: -3.9378762245178223
    4. 's' → logprob: -5.437876224517822
    5. '):' → logprob: -5.937876224517822
    6. '_end' → logprob: -6.562876224517822
    7. '_values' → logprob: -7.062876224517822
    8. '_range' → logprob: -7.062876224517822
    9. '_tuple' → logprob: -7.062876224517822
    10. '_value' → logprob: -7.437876224517822

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011748670367524028
    2. '):
' → logprob: -6.8761749267578125
    3. ')' → logprob: -9.251174926757812
    4. ' ):' → logprob: -10.251174926757812
    5. '):
' → logprob: -12.626174926757812
    6. ' ' → logprob: -13.126174926757812
    7. '):

' → logprob: -13.251174926757812
    8. ':' → logprob: -14.001174926757812
    9. '   ' → logprob: -14.126174926757812
    10. ',' → logprob: -14.751174926757812

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1277228444814682
    2. ' return' → logprob: -2.37772274017334
    3. ' value' → logprob: -4.62772274017334
    4. 'value' → logprob: -4.75272274017334
    5. 'return' → logprob: -5.00272274017334
    6. '    ' → logprob: -7.25272274017334
    7. ' if' → logprob: -7.62772274017334
    8. ' in' → logprob: -8.37772274017334
    9. '(value' → logprob: -8.62772274017334
    10. ')' → logprob: -10.00272274017334

Token 69: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5098678469657898
    2. 'return' (adapté à ' return') → logprob: -1.0098679065704346
    3. '   ' → logprob: -4.1348676681518555
    4. 'value' → logprob: -4.3848676681518555
    5. ' value' → logprob: -5.0098676681518555
    6. ' ' → logprob: -12.884867668151855
    7. '    ' → logprob: -12.884867668151855
    8. ' for' → logprob: -13.134867668151855
    9. ' if' → logprob: -13.509867668151855
    10. 'if' → logprob: -13.634867668151855

Token 70: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.14269457757472992
    2. 'value' → logprob: -2.0176944732666016
    3. ' ' → logprob: -11.517694473266602
    4. ' any' → logprob: -12.517694473266602
    5. '(value' → logprob: -13.017694473266602
    6. 'alue' → logprob: -14.392694473266602
    7. ' range' → logprob: -14.517694473266602
    8. '   ' → logprob: -14.517694473266602
    9. '  ' → logprob: -15.142694473266602
    10. '	value' → logprob: -15.267694473266602

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043254148215055466
    2. 'in' → logprob: -3.1682541370391846
    3. '>=' → logprob: -9.043253898620605
    4. ' ' → logprob: -9.293253898620605
    5. ' >=' → logprob: -10.668253898620605
    6. '>' → logprob: -11.668253898620605
    7. '   ' → logprob: -12.793253898620605
    8. ' not' → logprob: -13.168253898620605
    9. ' i' → logprob: -13.543253898620605
    10. '  ' → logprob: -13.793253898620605

Token 72: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02975245751440525
    2. 'range' → logprob: -3.529752492904663
    3. '	range' → logprob: -13.779752731323242
    4. '(range' → logprob: -14.654752731323242
    5. ' set' → logprob: -15.654752731323242
    6. '_range' → logprob: -15.904752731323242
    7. ' ' → logprob: -16.529752731323242
    8. '.range' → logprob: -17.404752731323242
    9. ' ' → logprob: -17.404752731323242
    10. ' list' → logprob: -17.529752731323242

Token 73: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.62500286102295
    3. ' _' → logprob: -13.87500286102295
    4. '_lists' → logprob: -15.25000286102295
    5. '_lst' → logprob: -15.50000286102295
    6. '_range' → logprob: -16.125003814697266
    7. '```' → logprob: -16.125003814697266
    8. 'list' → logprob: -16.500003814697266
    9. '_lista' → logprob: -16.875003814697266
    10. '_l' → logprob: -16.875003814697266

Token 74: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37892717123031616
    2. '<|end|>' → logprob: -1.378927230834961
    3. '
' → logprob: -3.753927230834961
    4. '_' → logprob: -4.253927230834961
    5. '#' → logprob: -5.503927230834961
    6. '[' → logprob: -5.628927230834961
    7. '<|end|>' → logprob: -5.628927230834961
    8. '\' → logprob: -5.878927230834961
    9. '```' → logprob: -6.128927230834961
    10. '\n' → logprob: -6.753927230834961

Token 76: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2962266802787781
    2. ' check' → logprob: -2.921226739883423
    3. ' find' → logprob: -3.171226739883423
    4. ' is' → logprob: -3.296226739883423
    5. ' process' → logprob: -3.796226739883423
    6. ' merge' → logprob: -4.171226501464844
    7. ' sort' → logprob: -4.421226501464844
    8. ' count' → logprob: -4.421226501464844
    9. ' binary' → logprob: -4.421226501464844
    10. ' calculate' → logprob: -4.546226501464844

Token 77: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09542957693338394
    2. '_' → logprob: -3.7204296588897705
    3. '_result' → logprob: -4.095429420471191
    4. '()' → logprob: -4.470429420471191
    5. '_range' → logprob: -4.845429420471191
    6. '_output' → logprob: -5.220429420471191
    7. '_results' → logprob: -5.595429420471191
    8. '_pair' → logprob: -5.595429420471191
    9. '_sorted' → logprob: -5.720429420471191
    10. '_ranges' → logprob: -5.970429420471191

Token 78: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002451638225466013
    2. '():' → logprob: -6.127451419830322
    3. '()
' → logprob: -8.75245189666748
    4. '():
' → logprob: -10.00245189666748
    5. '()

' → logprob: -10.50245189666748
    6. ' ()' → logprob: -10.62745189666748
    7. '()`' → logprob: -12.87745189666748
    8. '`()' → logprob: -13.37745189666748
    9. '()">' → logprob: -13.50245189666748
    10. '():

' → logprob: -13.75245189666748

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007941609248518944
    2. 'print' → logprob: -4.882941722869873
    3. ' print' → logprob: -8.007941246032715
    4. '	print' → logprob: -14.132941246032715
    5. '(' → logprob: -14.757941246032715
    6. '    ' → logprob: -15.382941246032715
    7. 'def' → logprob: -15.507941246032715
    8. '(print' → logprob: -15.507941246032715
    9. ' ' → logprob: -15.632941246032715
    10. '()' → logprob: -15.757941246032715

Token 80: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004677187651395798
    2. '   ' → logprob: -5.7546772956848145
    3. ' print' → logprob: -6.5046772956848145
    4. '```' → logprob: -13.504676818847656
    5. '	print' → logprob: -15.129676818847656
    6. '    ' → logprob: -16.254676818847656
    7. ' ' → logprob: -16.504676818847656
    8. 'pr' → logprob: -17.129676818847656
    9. '  ' → logprob: -17.379676818847656
    10. 'prin' → logprob: -17.879676818847656

Token 81: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.031845852732658386
    2. '(' → logprob: -4.156846046447754
    3. '('' → logprob: -4.156846046447754
    4. '(True' → logprob: -10.781846046447754
    5. ' ("' → logprob: -12.406846046447754
    6. '("("' → logprob: -13.531846046447754
    7. '()' → logprob: -13.906846046447754
    8. '"' → logprob: -14.156846046447754
    9. '(
' → logprob: -14.781846046447754
    10. '   ' → logprob: -14.781846046447754

Token 82: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.43952715396881104
    2. 'YES' → logprob: -1.064527153968811
    3. 'yes' → logprob: -4.5645270347595215
    4. 'Y' → logprob: -9.06452751159668
    5. 'OK' → logprob: -10.43952751159668
    6. 'True' → logprob: -10.81452751159668
    7. '_yes' → logprob: -11.12702751159668
    8. '"' → logprob: -11.18952751159668
    9. ' Yes' → logprob: -11.18952751159668
    10. 'Possible' → logprob: -11.56452751159668

Token 83: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -9.372294698550832e-06
    2. '")
' → logprob: -12.125009536743164
    3. '!")' → logprob: -13.000009536743164
    4. ')")' → logprob: -14.625009536743164
    5. 'def' → logprob: -14.750009536743164
    6. '")

' → logprob: -15.000009536743164
    7. ')' → logprob: -15.250009536743164
    8. '"' → logprob: -15.750009536743164
    9. '")
' → logprob: -17.000009536743164
    10. '\")' → logprob: -17.125009536743164

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -15.25
    3. ' def' → logprob: -17.375
    4. '```' → logprob: -17.75
    5. '<|end|>' → logprob: -18.25
    6. '  
' → logprob: -18.5
    7. '    
' → logprob: -18.5
    8. '<|end|>' → logprob: -19.25
    9. '\' → logprob: -19.375
    10. 'ndef' → logprob: -19.75

Token 85: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07983171194791794
    2. 'print' → logprob: -2.579831600189209
    3. '_print' → logprob: -7.329831600189209
    4. 'def' → logprob: -8.454832077026367
    5. ' def' → logprob: -9.704832077026367
    6. '_' → logprob: -12.579832077026367
    7. '.print' → logprob: -12.829832077026367
    8. '	print' → logprob: -13.079832077026367
    9. '
' → logprob: -14.329832077026367
    10. ' ' → logprob: -14.454832077026367

Token 86: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0014692727709189057
    2. '("' → logprob: -7.251469135284424
    3. '_n' → logprob: -8.001469612121582
    4. '("_' → logprob: -8.376469612121582
    5. 'No' → logprob: -9.626469612121582
    6. '_No' → logprob: -9.876469612121582
    7. '_' → logprob: -10.251469612121582
    8. '_NO' → logprob: -11.376469612121582
    9. '()' → logprob: -11.876469612121582
    10. ' ' → logprob: -12.876469612121582

Token 87: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.368984107510187e-05
    2. '():
' → logprob: -10.500033378601074
    3. ' ():' → logprob: -12.375033378601074
    4. '()' → logprob: -13.250033378601074
    5. '():
' → logprob: -16.50003433227539
    6. ':' → logprob: -17.25003433227539
    7. '():

' → logprob: -17.50003433227539
    8. '(' → logprob: -19.12503433227539
    9. ' ()' → logprob: -19.87503433227539
    10. '()>' → logprob: -20.25003433227539

Token 88: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12810592353343964
    2. '   ' → logprob: -2.128105878829956
    3. ' print' → logprob: -6.753106117248535
    4. '	print' → logprob: -12.378106117248535
    5. '```' → logprob: -12.878106117248535
    6. '(print' → logprob: -13.628106117248535
    7. '("' → logprob: -14.503106117248535
    8. ' ' → logprob: -14.503106117248535
    9. '  ' → logprob: -15.003106117248535
    10. '(' → logprob: -15.378106117248535

Token 89: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008893063059076667
    2. '   ' → logprob: -7.500889301300049
    3. ' print' → logprob: -8.000889778137207
    4. '(print' → logprob: -14.875889778137207
    5. '```' → logprob: -15.250889778137207
    6. '	print' → logprob: -15.625889778137207
    7. 'Print' → logprob: -15.875889778137207
    8. '  ' → logprob: -16.87588882446289
    9. ' ' → logprob: -17.00088882446289
    10. '.print' → logprob: -18.12588882446289

Token 90: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006382156861945987
    2. '(' → logprob: -7.375638008117676
    3. '()' → logprob: -11.875638008117676
    4. '("")' → logprob: -13.000638008117676
    5. '('' → logprob: -14.125638008117676
    6. ' ("' → logprob: -14.750638008117676
    7. '"No' → logprob: -15.125638008117676
    8. 'No' → logprob: -15.625638008117676
    9. '(No' → logprob: -15.750638008117676
    10. '_no' → logprob: -16.125638961791992

Token 91: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -3.4121114822482923e-06
    2. '"No' → logprob: -12.750003814697266
    3. '")' → logprob: -14.875003814697266
    4. ' No' → logprob: -16.625003814697266
    5. 'N' → logprob: -18.000003814697266
    6. 'NO' → logprob: -18.000003814697266
    7. '"' → logprob: -18.000003814697266
    8. 'Yes' → logprob: -18.875003814697266
    9. '_No' → logprob: -20.750003814697266
    10. 'None' → logprob: -20.875003814697266

Token 92: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.006415386218577623
    2. ')' → logprob: -5.256415367126465
    3. ')")' → logprob: -6.756415367126465
    4. '()' → logprob: -11.256415367126465
    5. '")
' → logprob: -12.881415367126465
    6. '}")' → logprob: -14.631415367126465
    7. '")

' → logprob: -14.756415367126465
    8. '')' → logprob: -14.756415367126465
    9. '"' → logprob: -15.131415367126465
    10. 'def' → logprob: -16.13141632080078

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004365102213341743
    2. 'a' → logprob: -7.875436305999756
    3. '#' → logprob: -11.000436782836914
    4. 'n' → logprob: -11.500436782836914
    5. 'for' → logprob: -11.750436782836914
    6. '```' → logprob: -11.750436782836914
    7. 'if' → logprob: -11.875436782836914
    8. '\' → logprob: -14.375436782836914
    9. 'from' → logprob: -14.375436782836914
    10. 'x' → logprob: -14.500436782836914

Token 94: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.19819709658622742
    2. ' main' → logprob: -1.9481971263885498
    3. 'check' → logprob: -4.198196887969971
    4. 'over' → logprob: -5.323196887969971
    5. 'solve' → logprob: -5.323196887969971
    6. 'is' → logprob: -5.448196887969971
    7. 'process' → logprob: -5.698196887969971
    8. 'can' → logprob: -7.198196887969971
    9. 'inter' → logprob: -7.448196887969971
    10. ' check' → logprob: -7.448196887969971

Token 95: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.481510692741722e-05
    2. '(' → logprob: -10.00007438659668
    3. '()' → logprob: -10.87507438659668
    4. '_' → logprob: -12.37507438659668
    5. '():
' → logprob: -12.75007438659668
    6. ' ():' → logprob: -13.25007438659668
    7. '(:' → logprob: -14.12507438659668
    8. '(":' → logprob: -15.00007438659668
    9. ':' → logprob: -15.50007438659668
    10. '()">' → logprob: -17.12507438659668

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00324687035754323
    2. 'input' → logprob: -6.003246784210205
    3. ' input' → logprob: -7.628246784210205
    4. '    
' → logprob: -9.628247261047363
    5. 'a' → logprob: -10.003247261047363
    6. '(input' → logprob: -11.003247261047363
    7. 'start' → logprob: -11.128247261047363
    8. 'n' → logprob: -11.128247261047363
    9. '       ' → logprob: -11.253247261047363
    10. '```' → logprob: -11.253247261047363

Token 97: ' user' (ID: 1825)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0994289293885231
    2. 'input' → logprob: -2.72442889213562
    3. ' a' → logprob: -4.224429130554199
    4. '   ' → logprob: -4.849429130554199
    5. 'a' → logprob: -6.474429130554199
    6. ' first' → logprob: -6.724429130554199
    7. ' inputs' → logprob: -6.849429130554199
    8. ' pairs' → logprob: -7.599429130554199
    9. ' raw' → logprob: -7.724429130554199
    10. ' start' → logprob: -7.849429130554199

Token 98: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0017247996293008327
    2. '_' → logprob: -6.376724720001221
    3. '_str' → logprob: -12.001725196838379
    4. '_in' → logprob: -12.126725196838379
    5. ' _' → logprob: -12.376725196838379
    6. '_data' → logprob: -13.251725196838379
    7. '_inputs' → logprob: -13.376725196838379
    8. '_value' → logprob: -14.126725196838379
    9. '_val' → logprob: -14.251725196838379
    10. '_Input' → logprob: -15.126725196838379

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09007653594017029
    2. '=' → logprob: -2.465076446533203
    3. '_' → logprob: -7.215076446533203
    4. '_str' → logprob: -8.590076446533203
    5. '()' → logprob: -8.590076446533203
    6. '(' → logprob: -11.465076446533203
    7. 's' → logprob: -11.965076446533203
    8. '   ' → logprob: -12.965076446533203
    9. '_=' → logprob: -13.090076446533203
    10. '_line' → logprob: -13.590076446533203

Token 100: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06197172403335571
    2. ' get' → logprob: -2.811971664428711
    3. '	get' → logprob: -13.436971664428711
    4. ' ' → logprob: -14.186971664428711
    5. '   ' → logprob: -14.186971664428711
    6. '(get' → logprob: -14.436971664428711
    7. 'parse' → logprob: -15.311971664428711
    8. 'input' → logprob: -15.436971664428711
    9. '  ' → logprob: -16.06197166442871
    10. ' input' → logprob: -16.68697166442871

Token 101: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.9160102712921798e-05
    2. '_' → logprob: -11.000029563903809
    3. '()' → logprob: -12.000029563903809
    4. '_user' → logprob: -12.375029563903809
    5. ' _' → logprob: -14.750029563903809
    6. 'input' → logprob: -15.000029563903809
    7. '_inputs' → logprob: -15.375029563903809
    8. '_Input' → logprob: -15.500029563903809
    9. '_output' → logprob: -15.625029563903809
    10. '_line' → logprob: -15.875029563903809

Token 102: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1875571544806007e-05
    2. '()
' → logprob: -11.625011444091797
    3. '()

' → logprob: -14.250011444091797
    4. ' ()' → logprob: -14.750011444091797
    5. '()`' → logprob: -14.750011444091797
    6. '().' → logprob: -15.500011444091797
    7. '())' → logprob: -15.625011444091797
    8. '()<' → logprob: -15.750011444091797
    9. '();' → logprob: -15.875011444091797
    10. '()]' → logprob: -16.000011444091797

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04885917901992798
    2. ' pairs' → logprob: -3.423859119415283
    3. 'pairs' → logprob: -4.548859119415283
    4. '    
' → logprob: -6.548859119415283
    5. ' pair' → logprob: -7.048859119415283
    6. 'pair' → logprob: -7.673859119415283
    7. ' parts' → logprob: -7.798859119415283
    8. 'tokens' → logprob: -8.423859596252441
    9. 'parsed' → logprob: -8.798859596252441
    10. ' ranges' → logprob: -8.798859596252441

Token 104: ' values' (ID: 4824)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7666295766830444
    2. 'pair' → logprob: -1.6416295766830444
    3. 'numbers' → logprob: -2.516629695892334
    4. 'a' → logprob: -2.641629695892334
    5. 'nums' → logprob: -2.641629695892334
    6. 'parsed' → logprob: -3.266629695892334
    7. ' pairs' → logprob: -4.016629695892334
    8. ' numbers' → logprob: -4.141629695892334
    9. 'values' (adapté à ' values') → logprob: -4.516629695892334
    10. '   ' → logprob: -4.891629695892334

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013358361320570111
    2. '=' → logprob: -6.626335620880127
    3. '_' → logprob: -11.876336097717285
    4. '   ' → logprob: -13.626336097717285
    5. ' ' → logprob: -14.876336097717285
    6. ',' → logprob: -14.876336097717285
    7. 's' → logprob: -15.376336097717285
    8. '[' → logprob: -15.501336097717285
    9. '  ' → logprob: -16.25133514404297
    10. ' =)' → logprob: -16.25133514404297

Token 106: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.20143447816371918
    2. 'parse' → logprob: -1.7014344930648804
    3. '(parse' → logprob: -10.951434135437012
    4. '   ' → logprob: -13.451434135437012
    5. '	parse' → logprob: -13.826434135437012
    6. '=parse' → logprob: -14.326434135437012
    7. ' ' → logprob: -15.451434135437012
    8. '.parse' → logprob: -15.826434135437012
    9. '  ' → logprob: -16.451435089111328
    10. '_parse' → logprob: -16.576435089111328

Token 107: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003035266126971692
    2. '_user' → logprob: -8.750303268432617
    3. '(user' → logprob: -9.375303268432617
    4. '(input' → logprob: -10.250303268432617
    5. 'input' → logprob: -11.000303268432617
    6. '_' → logprob: -12.125303268432617
    7. 'user' → logprob: -14.125303268432617
    8. '```' → logprob: -14.625303268432617
    9. '_inputs' → logprob: -14.750303268432617
    10. '(' → logprob: -15.125303268432617

Token 108: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. ' (' → logprob: -14.75001335144043
    4. 'user' → logprob: -16.87501335144043
    5. '(u' → logprob: -17.87501335144043
    6. ',user' → logprob: -18.00001335144043
    7. '(input' → logprob: -18.25001335144043
    8. '(users' → logprob: -18.37501335144043
    9. '=user' → logprob: -18.37501335144043
    10. '_user' → logprob: -18.87501335144043

Token 109: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003567959647625685
    2. '_str' → logprob: -8.500356674194336
    3. 'input' → logprob: -9.125356674194336
    4. ')' → logprob: -10.625356674194336
    5. '_' → logprob: -12.250356674194336
    6. '```' → logprob: -12.500356674194336
    7. '_string' → logprob: -12.625356674194336
    8. 'str' → logprob: -13.000356674194336
    9. '(input' → logprob: -13.750356674194336
    10. '   ' → logprob: -14.125356674194336

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002238013403257355
    2. ')
' → logprob: -8.625224113464355
    3. '()' → logprob: -10.375224113464355
    4. '())' → logprob: -12.125224113464355
    5. '   ' → logprob: -12.375224113464355
    6. '[' → logprob: -13.375224113464355
    7. ' )' → logprob: -14.125224113464355
    8. '()
' → logprob: -15.125224113464355
    9. '))' → logprob: -15.500224113464355
    10. ' ' → logprob: -16.62522315979004

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0529167540371418
    2. '
' → logprob: -3.4279167652130127
    3. '    
' → logprob: -4.552916526794434
    4. '[' → logprob: -5.427916526794434
    5. ',' → logprob: -6.177916526794434
    6. 'a' → logprob: -7.927916526794434
    7. ' if' → logprob: -8.677916526794434
    8. '(' → logprob: -8.802916526794434
    9. ' ' → logprob: -8.802916526794434
    10. '<|end|>' → logprob: -8.802916526794434

Token 112: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1694769710302353
    2. ' a' → logprob: -3.1694769859313965
    3. 'start' → logprob: -3.2944769859313965
    4. '   ' → logprob: -3.7944769859313965
    5. 'if' → logprob: -4.5444769859313965
    6. 'first' → logprob: -4.6694769859313965
    7. 'sorted' → logprob: -4.7944769859313965
    8. 'x' → logprob: -5.0444769859313965
    9. 'range' → logprob: -5.7944769859313965
    10. 'pair' → logprob: -5.9194769859313965

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000592947646509856
    2. ' ,' → logprob: -7.500593185424805
    3. ',b' → logprob: -10.250593185424805
    4. ' =' → logprob: -12.750593185424805
    5. '=' → logprob: -14.125593185424805
    6. 'a' → logprob: -15.500593185424805
    7. 'b' → logprob: -15.875593185424805
    8. 'sorted' → logprob: -15.875593185424805
    9. ',a' → logprob: -15.875593185424805
    10. '1' → logprob: -16.375593185424805

Token 114: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931519508361816
    2. ' b' → logprob: -0.6931519508361816
    3. '<|end|>' → logprob: -13.193151473999023
    4. ' ' → logprob: -13.318151473999023
    5. 'values' → logprob: -14.443151473999023
    6. '   ' → logprob: -14.943151473999023
    7. ' values' → logprob: -15.193151473999023
    8. ' =' → logprob: -16.318151473999023
    9. '    ' → logprob: -17.443151473999023
    10. '  ' → logprob: -17.568151473999023

Token 115: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009864693507552147
    2. '=' → logprob: -4.634864807128906
    3. ',' → logprob: -9.134864807128906
    4. ' =)' → logprob: -15.634864807128906
    5. ' ' → logprob: -15.759864807128906
    6. '    ' → logprob: -16.009864807128906
    7. ')' → logprob: -16.134864807128906
    8. ' ,' → logprob: -16.384864807128906
    9. '<|end|>' → logprob: -16.384864807128906
    10. '   ' → logprob: -16.759864807128906

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6962215900421143
    2. ' c' → logprob: -0.6962215900421143
    3. ' =' → logprob: -6.196221351623535
    4. ' ' → logprob: -7.446221351623535
    5. '_' → logprob: -9.696221351623535
    6. ' s' → logprob: -9.946221351623535
    7. '=' → logprob: -9.946221351623535
    8. ' values' → logprob: -10.196221351623535
    9. ' x' → logprob: -10.571221351623535
    10. ' range' → logprob: -10.696221351623535

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051615308970212936
    2. '=' → logprob: -3.0516152381896973
    3. ',' → logprob: -5.801615238189697
    4. ' ' → logprob: -15.926615715026855
    5. ')' → logprob: -16.05161476135254
    6. ' =)' → logprob: -16.30161476135254
    7. 'a' → logprob: -16.55161476135254
    8. ' ,' → logprob: -16.67661476135254
    9. ' =
' → logprob: -17.42661476135254
    10. '.' → logprob: -17.80161476135254

Token 118: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.006719759665429592
    2. 'values' → logprob: -5.006719589233398
    3. ' parse' → logprob: -13.006719589233398
    4. ' sort' → logprob: -14.006719589233398
    5. '	values' → logprob: -15.256719589233398
    6. ' sorted' → logprob: -15.381719589233398
    7. 'parse' → logprob: -15.381719589233398
    8. 'sort' → logprob: -15.506719589233398
    9. '(values' → logprob: -15.506719589233398
    10. '   ' → logprob: -16.3817195892334

Token 119: '[' (ID: 58)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06232493743300438
    2. '<|end|>' → logprob: -3.0623250007629395
    3. '   ' → logprob: -5.0623250007629395
    4. '  
' → logprob: -5.6873250007629395
    5. '    
' → logprob: -6.8123250007629395
    6. '<|end|>' → logprob: -6.9373250007629395
    7. ' 
' → logprob: -8.062324523925781
    8. ',' → logprob: -8.187324523925781
    9. ' if' → logprob: -8.312324523925781
    10. '
' → logprob: -8.562324523925781

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008924534544348717
    2. ':' → logprob: -4.75892448425293
    3. ' ' → logprob: -8.50892448425293
    4. ' :' → logprob: -9.50892448425293
    5. ':]' → logprob: -10.63392448425293
    6. '   ' → logprob: -12.88392448425293
    7. ']' → logprob: -13.50892448425293
    8. '  ' → logprob: -13.75892448425293
    9. '])' → logprob: -13.88392448425293
    10. ':index' → logprob: -14.38392448425293

Token 121: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22703751921653748
    2. '],' → logprob: -1.6020375490188599
    3. ']' → logprob: -7.35203742980957
    4. ':' → logprob: -7.47703742980957
    5. ' ,' → logprob: -8.10203742980957
    6. ' ],' → logprob: -10.35203742980957
    7. ':],' → logprob: -10.85203742980957
    8. ' :' → logprob: -11.35203742980957
    9. ':]' → logprob: -11.47703742980957
    10. '   ' → logprob: -11.72703742980957

Token 122: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2519404888153076
    2. ' values' → logprob: -1.5019404888153076
    3. '   ' → logprob: -11.876940727233887
    4. '	values' → logprob: -12.626940727233887
    5. ' ' → logprob: -14.876940727233887
    6. '.values' → logprob: -15.001940727233887
    7. '(values' → logprob: -15.501940727233887
    8. '  ' → logprob: -15.626940727233887
    9. '    ' → logprob: -16.62693977355957
    10. ' ' → logprob: -17.25193977355957

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.9728669738397e-05
    2. ',' → logprob: -9.500100135803223
    3. '1' → logprob: -10.875100135803223
    4. ' [' → logprob: -12.625100135803223
    5. '[
' → logprob: -13.625100135803223
    6. ' ,' → logprob: -14.750100135803223
    7. ' ' → logprob: -15.000100135803223
    8. ',[' → logprob: -15.250100135803223
    9. '[]' → logprob: -16.125099182128906
    10. '```' → logprob: -17.000099182128906

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '2' → logprob: -12.375005722045898
    3. ' ' → logprob: -13.875005722045898
    4. '   ' → logprob: -15.000005722045898
    5. '```' → logprob: -15.875005722045898
    6. '3' → logprob: -16.0000057220459
    7. '-' → logprob: -16.1250057220459
    8. '0' → logprob: -16.5000057220459
    9. '
' → logprob: -16.6875057220459
    10. ']' → logprob: -16.9375057220459

Token 125: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.399378566537052e-05
    2. ' ,' → logprob: -9.500083923339844
    3. '],' → logprob: -12.500083923339844
    4. '<|end|>' → logprob: -13.250083923339844
    5. ']' → logprob: -13.750083923339844
    6. '<|end|>' → logprob: -14.000083923339844
    7. '‌,' → logprob: -14.625083923339844
    8. ',b' → logprob: -15.250083923339844
    9. '   ' → logprob: -15.375083923339844
    10. ' ' → logprob: -15.875083923339844

Token 126: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.31327101588249207
    2. 'values' → logprob: -1.3132710456848145
    3. '	values' → logprob: -12.563270568847656
    4. '   ' → logprob: -13.063270568847656
    5. '(values' → logprob: -13.938270568847656
    6. ' ' → logprob: -14.188270568847656
    7. 'c' → logprob: -14.188270568847656
    8. '.values' → logprob: -14.688270568847656
    9. '  ' → logprob: -15.063270568847656
    10. ' c' → logprob: -15.313270568847656

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011009939044015482
    2. '2' → logprob: -9.125109672546387
    3. '(' → logprob: -14.250109672546387
    4. ' [' → logprob: -15.500109672546387
    5. '[
' → logprob: -16.125110626220703
    6. '```' → logprob: -16.375110626220703
    7. '3' → logprob: -17.625110626220703
    8. ' ' → logprob: -17.625110626220703
    9. '1' → logprob: -18.000110626220703
    10. '0' → logprob: -18.000110626220703

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '   ' → logprob: -14.125017166137695
    4. '-' → logprob: -14.125017166137695
    5. ']' → logprob: -15.625017166137695
    6. '  ' → logprob: -15.750017166137695
    7. '```' → logprob: -16.000017166137695
    8. '
' → logprob: -16.750017166137695
    9. ' -' → logprob: -17.062517166137695
    10. '3' → logprob: -17.500017166137695

Token 129: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013212941586971283
    2. ')' → logprob: -4.513213157653809
    3. ',' → logprob: -6.388213157653809
    4. '],' → logprob: -8.513213157653809
    5. '<|end|>' → logprob: -9.138213157653809
    6. ' ]' → logprob: -10.138213157653809
    7. ']
' → logprob: -10.388213157653809
    8. ')]' → logprob: -10.638213157653809
    9. '   ' → logprob: -10.638213157653809
    10. '),' → logprob: -11.263213157653809

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10254686325788498
    2. '
' → logprob: -2.9775469303131104
    3. ',' → logprob: -3.8525469303131104
    4. 'range' → logprob: -4.977546691894531
    5. '    
' → logprob: -5.602546691894531
    6. '  
' → logprob: -6.102546691894531
    7. ' ranges' → logprob: -6.227546691894531
    8. 'ranges' → logprob: -6.227546691894531
    9. '<|end|>' → logprob: -6.477546691894531
    10. ' range' → logprob: -6.852546691894531

Token 131: ' sorted' (ID: 20099)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9432900547981262
    2. 'start' → logprob: -1.0682899951934814
    3. ' start' → logprob: -2.6932899951934814
    4. ' a' → logprob: -2.9432899951934814
    5. '   ' → logprob: -3.3182899951934814
    6. 'sorted' (adapté à ' sorted') → logprob: -3.3182899951934814
    7. 'range' → logprob: -4.1932902336120605
    8. ' sorted' → logprob: -4.5682902336120605
    9. 'x' → logprob: -4.8182902336120605
    10. 'low' → logprob: -4.9432902336120605

Token 132: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.3316243290901184
    2. '_a' → logprob: -1.5816242694854736
    3. '_vals' → logprob: -3.7066242694854736
    4. '_' → logprob: -4.081624507904053
    5. '_values' → logprob: -4.206624507904053
    6. '_ab' → logprob: -4.331624507904053
    7. '_pairs' → logprob: -5.956624507904053
    8. 'a' → logprob: -6.456624507904053
    9. '_range' → logprob: -6.456624507904053
    10. '_list' → logprob: -7.831624507904053

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28143855929374695
    2. ' =' → logprob: -1.4064385890960693
    3. '(' → logprob: -8.781438827514648
    4. '(a' → logprob: -9.406438827514648
    5. 's' → logprob: -10.656438827514648
    6. '_' → logprob: -11.031438827514648
    7. '_=' → logprob: -12.281438827514648
    8. '=a' → logprob: -12.906438827514648
    9. '(s' → logprob: -13.531438827514648
    10. '=s' → logprob: -14.406438827514648

Token 134: ' sort' (ID: 4506)
  Prédit: ' sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.10022435337305069
    2. 'sort' → logprob: -2.350224256515503
    3. ' sorted' → logprob: -11.350224494934082
    4. '(sort' → logprob: -12.350224494934082
    5. 'sorted' → logprob: -13.600224494934082
    6. '	sort' → logprob: -15.475224494934082
    7. ' ' → logprob: -16.100223541259766
    8. '_sort' → logprob: -17.225223541259766
    9. '.sort' → logprob: -17.850223541259766
    10. ' sorte' → logprob: -18.600223541259766

Token 135: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.0002795703476294875
    2. '(a' → logprob: -8.875279426574707
    3. '_' → logprob: -9.250279426574707
    4. 'pair' → logprob: -11.750279426574707
    5. '(_' → logprob: -12.125279426574707
    6. '(' → logprob: -12.125279426574707
    7. '_p' → logprob: -12.375279426574707
    8. '([' → logprob: -12.375279426574707
    9. '(pair' → logprob: -12.625279426574707
    10. 'Pair' → logprob: -12.750279426574707

Token 136: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.35837464465294e-05
    2. 'a' → logprob: -10.625043869018555
    3. '(' → logprob: -10.875043869018555
    4. ' (' → logprob: -16.125043869018555
    5. '(b' → logprob: -16.375043869018555
    6. '(
' → logprob: -18.000043869018555
    7. '((' → logprob: -18.125043869018555
    8. 'def' → logprob: -19.375043869018555
    9. '(c' → logprob: -19.375043869018555
    10. '```' → logprob: -19.375043869018555

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0259055495262146
    2. '(' → logprob: -4.900905609130859
    3. ',b' → logprob: -4.900905609130859
    4. '(b' → logprob: -5.150905609130859
    5. '(sorted' → logprob: -6.025905609130859
    6. 'sorted' → logprob: -7.400905609130859
    7. ' ,' → logprob: -7.525905609130859
    8. '(a' → logprob: -7.900905609130859
    9. 'b' → logprob: -7.900905609130859
    10. '[' → logprob: -8.77590560913086

Token 138: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038053546100854874
    2. ' b' → logprob: -3.288053512573242
    3. 'c' → logprob: -11.413053512573242
    4. ' c' → logprob: -14.413053512573242
    5. ')b' → logprob: -14.538053512573242
    6. ' ' → logprob: -16.788053512573242
    7. ')' → logprob: -17.413053512573242
    8. '   ' → logprob: -17.538053512573242
    9. '>b' → logprob: -17.663053512573242
    10. '	b' → logprob: -18.038053512573242

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019351851660758257
    2. ')
' → logprob: -6.251935005187988
    3. ')

' → logprob: -12.876935005187988
    4. ' )' → logprob: -13.626935005187988
    5. '[' → logprob: -14.126935005187988
    6. '   ' → logprob: -14.251935005187988
    7. ')
' → logprob: -14.751935005187988
    8. ')`' → logprob: -15.626935005187988
    9. '))' → logprob: -16.126935958862305
    10. ',' → logprob: -16.376935958862305

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09237980097532272
    2. 'start' → logprob: -3.0923798084259033
    3. 'range' → logprob: -4.217379570007324
    4. 'c' → logprob: -4.717379570007324
    5. 'if' → logprob: -4.842379570007324
    6. ' if' → logprob: -5.967379570007324
    7. ' start' → logprob: -6.092379570007324
    8. ' range' → logprob: -6.967379570007324
    9. '    
' → logprob: -7.092379570007324
    10. 'r' → logprob: -7.592379570007324

Token 141: ' start' (ID: 1604)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07587113231420517
    2. 'start' (adapté à ' start') → logprob: -3.075871229171753
    3. 'r' → logprob: -4.075870990753174
    4. 'ranges' → logprob: -6.075870990753174
    5. 'if' → logprob: -6.200870990753174
    6. '   ' → logprob: -6.575870990753174
    7. 'c' → logprob: -6.825870990753174
    8. ' range' → logprob: -6.825870990753174
    9. 'a' → logprob: -7.200870990753174
    10. 'value' → logprob: -8.575871467590332

Token 142: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033160268794745207
    2. '=' → logprob: -5.8783159255981445
    3. ' =' → logprob: -7.6283159255981445
    4. ' ,' → logprob: -11.503315925598145
    5. 'sorted' → logprob: -12.003315925598145
    6. ',end' → logprob: -13.378315925598145
    7. '_,' → logprob: -13.753315925598145
    8. '_sorted' → logprob: -13.878315925598145
    9. 's' → logprob: -14.503315925598145
    10. ',
' → logprob: -14.503315925598145

Token 143: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.31327834725379944
    2. 'sorted' → logprob: -1.313278317451477
    3. '(sorted' → logprob: -11.188278198242188
    4. '_sorted' → logprob: -14.063278198242188
    5. '   ' → logprob: -14.688278198242188
    6. '.sorted' → logprob: -15.063278198242188
    7. ' ' → logprob: -15.438278198242188
    8. 'sort' → logprob: -15.438278198242188
    9. 'Sorted' → logprob: -15.563278198242188
    10. 's' → logprob: -15.563278198242188

Token 144: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -3.702754474943504e-05
    2. 'pair' → logprob: -10.25003719329834
    3. '(pair' → logprob: -14.62503719329834
    4. 'Pair' → logprob: -15.12503719329834
    5. '_token' → logprob: -15.87503719329834
    6. '_PAIR' → logprob: -16.125036239624023
    7. '(_' → logprob: -16.625036239624023
    8. '(sorted' → logprob: -16.625036239624023
    9. '_pairs' → logprob: -16.750036239624023
    10. '[' → logprob: -16.750036239624023

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001637300301808864
    2. '0' → logprob: -8.750164031982422
    3. ' [' → logprob: -13.250164031982422
    4. '(' → logprob: -13.500164031982422
    5. '()[' → logprob: -14.375164031982422
    6. 'def' → logprob: -14.750164031982422
    7. '
' → logprob: -15.125164031982422
    8. '```' → logprob: -15.125164031982422
    9. '[
' → logprob: -15.500164031982422
    10. '   ' → logprob: -16.500164031982422

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -18.625001907348633
    4. '
' → logprob: -18.875001907348633
    5. '1' → logprob: -19.000001907348633
    6. '[' → logprob: -19.000001907348633
    7. '<|end|>' → logprob: -19.500001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '(' → logprob: -20.187501907348633
    10. '٠' → logprob: -20.812501907348633

Token 147: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '   ' (ID: 271)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.23023667931556702
    2. ' end' → logprob: -2.355236768722534
    3. '   ' → logprob: -3.605236768722534
    4. ',' → logprob: -3.605236768722534
    5. '+' → logprob: -3.980236768722534
    6. ',end' → logprob: -3.980236768722534
    7. 'stop' → logprob: -5.105236530303955
    8. '
' → logprob: -5.605236530303955
    9. ',
' → logprob: -6.230236530303955
    10. ' +' → logprob: -6.855236530303955

Token 149: ' end' (ID: 1268)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0162857286632061
    2. ' sorted' → logprob: -4.1412858963012695
    3. 'end' (adapté à ' end') → logprob: -8.51628589630127
    4. 'stop' → logprob: -10.51628589630127
    5. '   ' → logprob: -11.64128589630127
    6. '(sorted' → logprob: -11.64128589630127
    7. ' end' → logprob: -12.89128589630127
    8. 's' → logprob: -13.76628589630127
    9. '_sorted' → logprob: -14.51628589630127
    10. 'sort' → logprob: -14.64128589630127

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38725560903549194
    2. '=' → logprob: -1.1372556686401367
    3. '+' → logprob: -8.137255668640137
    4. ' +' → logprob: -9.387255668640137
    5. '   ' → logprob: -12.512255668640137
    6. 'sorted' → logprob: -13.887255668640137
    7. '_' → logprob: -14.387255668640137
    8. ',' → logprob: -14.387255668640137
    9. ' ' → logprob: -14.512255668640137
    10. '=end' → logprob: -14.637255668640137

Token 151: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.20154480636119843
    2. ' sorted' → logprob: -1.7015447616577148
    3. '(sorted' → logprob: -8.951544761657715
    4. '_sorted' → logprob: -14.076544761657715
    5. '.sorted' → logprob: -14.326544761657715
    6. 's' → logprob: -15.826544761657715
    7. '   ' → logprob: -15.951544761657715
    8. 'sort' → logprob: -16.45154571533203
    9. 'Sorted' → logprob: -16.82654571533203
    10. ' ' → logprob: -17.32654571533203

Token 152: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.7835754988482222e-05
    2. 'ed' → logprob: -12.375018119812012
    3. '(sorted' → logprob: -12.500018119812012
    4. '(_' → logprob: -13.000018119812012
    5. 'Pair' → logprob: -13.375018119812012
    6. '_' → logprob: -13.750018119812012
    7. 'pair' → logprob: -13.750018119812012
    8. '(' → logprob: -14.125018119812012
    9. 'sorted' → logprob: -14.625018119812012
    10. '_sorted' → logprob: -14.625018119812012

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02691495046019554
    2. '+' → logprob: -3.6519148349761963
    3. ' +' → logprob: -7.401915073394775
    4. '1' → logprob: -13.276914596557617
    5. ' [' → logprob: -14.276914596557617
    6. '+[' → logprob: -15.151914596557617
    7. '[]' → logprob: -15.526914596557617
    8. 's' → logprob: -15.651914596557617
    9. '[
' → logprob: -15.776914596557617
    10. ' ' → logprob: -16.026914596557617

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '-' → logprob: -13.625001907348633
    3. '0' → logprob: -15.875001907348633
    4. '```' → logprob: -16.250001907348633
    5. '' → logprob: -16.937501907348633
    6. '
' → logprob: -17.000001907348633
    7. '+' → logprob: -17.000001907348633
    8. '[' → logprob: -17.062501907348633
    9. ' ' → logprob: -17.562501907348633
    10. '   ' → logprob: -17.812501907348633

Token 155: ']
' (ID: 1592)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759720206260681
    2. '+' → logprob: -0.8259720206260681
    3. ')' → logprob: -10.450971603393555
    4. ')+' → logprob: -13.700971603393555
    5. ' +
' → logprob: -14.450971603393555
    6. '+)' → logprob: -14.825971603393555
    7. '+
' → logprob: -14.825971603393555
    8. ']' → logprob: -14.950971603393555
    9. '   ' → logprob: -15.200971603393555
    10. ']+' → logprob: -15.700971603393555

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20071761310100555
    2. 'range' → logprob: -2.5757176876068115
    3. 'if' → logprob: -2.9507176876068115
    4. '
' → logprob: -3.7007176876068115
    5. '+' → logprob: -3.8257176876068115
    6. ' if' → logprob: -5.700717449188232
    7. '    
' → logprob: -7.075717449188232
    8. ' +' → logprob: -7.450717449188232
    9. ' range' → logprob: -7.575717449188232
    10. 'r' → logprob: -7.950717449188232

Token 157: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' (adapté à ' range') → logprob: -0.0036612374242395163
    2. 'if' → logprob: -6.253661155700684
    3. 'r' → logprob: -7.253661155700684
    4. '   ' → logprob: -8.128661155700684
    5. 'end' → logprob: -8.503661155700684
    6. ' range' → logprob: -9.128661155700684
    7. 'rng' → logprob: -9.128661155700684
    8. 'ranges' → logprob: -9.253661155700684
    9. 'value' → logprob: -9.628661155700684
    10. 'rang' → logprob: -10.378661155700684

Token 158: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001038883114233613
    2. '_' → logprob: -6.876039028167725
    3. '_lst' → logprob: -13.001038551330566
    4. 'list' → logprob: -14.001038551330566
    5. ' _' → logprob: -14.001038551330566
    6. 'List' → logprob: -14.751038551330566
    7. '_lista' → logprob: -15.001038551330566
    8. '_li' → logprob: -15.251038551330566
    9. '_List' → logprob: -15.376038551330566
    10. '_l' → logprob: -15.376038551330566

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740939140319824
    2. ' =' → logprob: -0.9740939140319824
    3. '=create' → logprob: -11.84909439086914
    4. '_' → logprob: -12.22409439086914
    5. '(' → logprob: -12.47409439086914
    6. ')' → logprob: -14.59909439086914
    7. '()' → logprob: -14.97409439086914
    8. '(create' → logprob: -16.22409439086914
    9. '＝' → logprob: -17.47409439086914
    10. 's' → logprob: -17.47409439086914

Token 160: ' create' (ID: 2501)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.3135620653629303
    2. ' create' → logprob: -1.313562035560608
    3. 'list' → logprob: -8.813562393188477
    4. ' list' → logprob: -8.938562393188477
    5. 'range' → logprob: -11.688562393188477
    6. ' range' → logprob: -12.313562393188477
    7. ' ' → logprob: -13.063562393188477
    8. '(create' → logprob: -13.313562393188477
    9. '   ' → logprob: -13.813562393188477
    10. '=create' → logprob: -14.063562393188477

Token 161: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -4.11996734328568e-05
    2. 'range' → logprob: -11.250041007995605
    3. '_' → logprob: -11.875041007995605
    4. '(start' → logprob: -11.875041007995605
    5. '_r' → logprob: -12.125041007995605
    6. '_list' → logprob: -12.625041007995605
    7. 'Range' → logprob: -13.375041007995605
    8. ' _' → logprob: -14.000041007995605
    9. '_start' → logprob: -14.375041007995605
    10. '(_' → logprob: -14.500041007995605

Token 162: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.438573680294212e-06
    2. '(start' → logprob: -12.750005722045898
    3. 'list' → logprob: -13.750005722045898
    4. 'List' → logprob: -13.750005722045898
    5. '_range' → logprob: -15.750005722045898
    6. '_' → logprob: -17.3750057220459
    7. '_start' → logprob: -17.5000057220459
    8. '_List' → logprob: -17.6250057220459
    9. '(_' → logprob: -17.6250057220459
    10. '```' → logprob: -18.0000057220459

Token 163: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0001170132018160075
    2. 'start' → logprob: -9.250117301940918
    3. '(' → logprob: -10.875117301940918
    4. ' (' → logprob: -13.625117301940918
    5. '(end' → logprob: -14.625117301940918
    6. '(
' → logprob: -15.750117301940918
    7. '(st' → logprob: -17.3751163482666
    8. ' start' → logprob: -17.3751163482666
    9. '[start' → logprob: -17.7501163482666
    10. ',start' → logprob: -17.8751163482666

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001802746090106666
    2. ',end' → logprob: -6.376802921295166
    3. ' ,' → logprob: -9.626802444458008
    4. '+' → logprob: -11.251802444458008
    5. ',
' → logprob: -11.876802444458008
    6. '(end' → logprob: -12.001802444458008
    7. 'end' → logprob: -12.001802444458008
    8. '   ' → logprob: -14.251802444458008
    9. ' +' → logprob: -14.376802444458008
    10. ',

' → logprob: -15.376802444458008

Token 165: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16023874282836914
    2. ' end' → logprob: -1.9102387428283691
    3. '(end' → logprob: -11.535238265991211
    4. ' ' → logprob: -13.910238265991211
    5. '   ' → logprob: -14.035238265991211
    6. '+' → logprob: -14.410238265991211
    7. '=end' → logprob: -14.535238265991211
    8. ',end' → logprob: -14.910238265991211
    9. ':end' → logprob: -15.285238265991211
    10. '[end' → logprob: -15.410238265991211

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5568310618400574
    2. '+' → logprob: -1.0568311214447021
    3. ' +' → logprob: -2.931831121444702
    4. ')
' → logprob: -3.681831121444702
    5. '   ' → logprob: -7.931830883026123
    6. ',' → logprob: -8.556831359863281
    7. '+
' → logprob: -9.181831359863281
    8. '+c' → logprob: -9.431831359863281
    9. ' )' → logprob: -9.806831359863281
    10. ')

' → logprob: -10.306831359863281

Token 167: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10693227499723434
    2. '   ' → logprob: -2.4819321632385254
    3. 'if' → logprob: -5.106932163238525
    4. '    
' → logprob: -5.481932163238525
    5. ' if' → logprob: -5.606932163238525
    6. '  
' → logprob: -6.106932163238525
    7. ' 
' → logprob: -6.981932163238525
    8. '<|end|>' → logprob: -7.981932163238525
    9. '   
' → logprob: -8.981932640075684
    10. '\n' → logprob: -9.481932640075684

Token 168: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016158436483237892
    2. ' if' → logprob: -9.000161170959473
    3. '   ' → logprob: -10.250161170959473
    4. 'result' → logprob: -14.125161170959473
    5. '    
' → logprob: -14.125161170959473
    6. 'print' → logprob: -14.625161170959473
    7. '```' → logprob: -14.750161170959473
    8. '
' → logprob: -15.875161170959473
    9. 'for' → logprob: -16.50016212463379
    10. 'If' → logprob: -16.75016212463379

Token 169: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.01626943238079548
    2. 'check' → logprob: -4.141269207000732
    3. ' c' → logprob: -8.64126968383789
    4. 'c' → logprob: -10.64126968383789
    5. ' not' → logprob: -11.39126968383789
    6. ' ' → logprob: -11.76626968383789
    7. '(check' → logprob: -11.89126968383789
    8. '	check' → logprob: -12.26626968383789
    9. ' ' → logprob: -13.64126968383789
    10. '   ' → logprob: -14.14126968383789

Token 170: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -4.000763510703109e-05
    2. '(c' → logprob: -10.875040054321289
    3. '_' → logprob: -11.250040054321289
    4. '(_' → logprob: -13.375040054321289
    5. '_(' → logprob: -13.375040054321289
    6. '(' → logprob: -13.875040054321289
    7. 'In' → logprob: -14.125040054321289
    8. 'in' → logprob: -14.250040054321289
    9. ')' → logprob: -14.375040054321289
    10. ' _' → logprob: -14.875040054321289

Token 171: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.004513312131166458
    2. 'range' → logprob: -5.629513263702393
    3. '_' → logprob: -8.12951374053955
    4. '_r' → logprob: -8.25451374053955
    5. '_list' → logprob: -8.50451374053955
    6. '_ra' → logprob: -11.00451374053955
    7. '(range' → logprob: -11.25451374053955
    8. 'r' → logprob: -11.37951374053955
    9. 'ange' → logprob: -11.62951374053955
    10. ' _' → logprob: -11.62951374053955

Token 172: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002164890756830573
    2. '(' → logprob: -6.252164840698242
    3. ' (' → logprob: -8.377164840698242
    4. '(
' → logprob: -13.127164840698242
    5. 'c' → logprob: -13.502164840698242
    6. '(s' → logprob: -13.877164840698242
    7. ' c' → logprob: -13.877164840698242
    8. '(b' → logprob: -14.877164840698242
    9. ')' → logprob: -15.502164840698242
    10. '((' → logprob: -15.752164840698242

Token 173: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014836019836366177
    2. ',' → logprob: -4.889835834503174
    3. ')' → logprob: -5.639835834503174
    4. '):
' → logprob: -6.389835834503174
    5. '(range' → logprob: -6.889835834503174
    6. ' ):' → logprob: -7.764835834503174
    7. 'range' → logprob: -8.639836311340332
    8. ':' → logprob: -8.889836311340332
    9. '   ' → logprob: -10.389836311340332
    10. '_range' → logprob: -10.514836311340332

Token 174: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142844319343567
    2. 'range' → logprob: -1.7014284133911133
    3. '(range' → logprob: -11.576428413391113
    4. '	range' → logprob: -12.826428413391113
    5. ')' → logprob: -13.076428413391113
    6. '_range' → logprob: -14.826428413391113
    7. ' ' → logprob: -15.201428413391113
    8. ' ' → logprob: -15.826428413391113
    9. 'space' → logprob: -16.57642936706543
    10. '.range' → logprob: -16.57642936706543

Token 175: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.625000953674316
    3. '_' → logprob: -16.375
    4. ' _' → logprob: -16.5
    5. ')_' → logprob: -16.5
    6. 'list' → logprob: -17.125
    7. 'List' → logprob: -17.25
    8. '_l' → logprob: -17.75
    9. '_range' → logprob: -18.875
    10. '(_' → logprob: -18.875

Token 176: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023725584615021944
    2. '):
' → logprob: -6.127372741699219
    3. ':' → logprob: -8.877372741699219
    4. ')' → logprob: -10.627372741699219
    5. '   ' → logprob: -11.627372741699219
    6. '():' → logprob: -11.877372741699219
    7. ' ):' → logprob: -12.002372741699219
    8. '==' → logprob: -15.502372741699219
    9. ')==' → logprob: -15.627372741699219
    10. ':
' → logprob: -15.877372741699219

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034237600630149245
    2. 'print' → logprob: -8.50034236907959
    3. ' print' → logprob: -9.12534236907959
    4. '   ' → logprob: -10.87534236907959
    5. ',' → logprob: -13.12534236907959
    6. '(print' → logprob: -13.37534236907959
    7. '    ' → logprob: -13.62534236907959
    8. '      ' → logprob: -14.00034236907959
    9. '        
' → logprob: -14.12534236907959
    10. ':' → logprob: -14.50034236907959

Token 178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5735989809036255
    2. ' print' → logprob: -1.0735989809036255
    3. '   ' → logprob: -2.948598861694336
    4. '       ' → logprob: -3.198598861694336
    5. '
' → logprob: -6.823598861694336
    6. '    
' → logprob: -8.573598861694336
    7. '	print' → logprob: -8.698598861694336
    8. '        
' → logprob: -10.948598861694336
    9. '(print' → logprob: -11.073598861694336
    10. '   ' → logprob: -11.948598861694336

Token 179: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -6.8497312895488e-05
    2. '_' → logprob: -9.875068664550781
    3. '_no' → logprob: -11.000068664550781
    4. '("_' → logprob: -16.12506866455078
    5. '_you' → logprob: -16.75006866455078
    6. '(' → logprob: -17.12506866455078
    7. '```' → logprob: -17.62506866455078
    8. '_y' → logprob: -17.87506866455078
    9. ' _' → logprob: -18.00006866455078
    10. 'Yes' → logprob: -18.50006866455078

Token 180: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07900237292051315
    2. '()
' → logprob: -2.5790023803710938
    3. '   ' → logprob: -9.204002380371094
    4. '()

' → logprob: -12.079002380371094
    5. 'else' → logprob: -12.829002380371094
    6. ' ()' → logprob: -13.704002380371094
    7. '(' → logprob: -13.829002380371094
    8. '())' → logprob: -14.579002380371094
    9. '()\' → logprob: -15.329002380371094
    10. '()
' → logprob: -15.704002380371094

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03371785581111908
    2. 'else' → logprob: -3.5337178707122803
    3. ' else' → logprob: -5.533717632293701
    4. '	else' → logprob: -12.53371810913086
    5. '    
' → logprob: -13.28371810913086
    6. ' ' → logprob: -14.53371810913086
    7. ')' → logprob: -15.03371810913086
    8. '```' → logprob: -15.03371810913086
    9. '<|end|>' → logprob: -15.28371810913086
    10. '_else' → logprob: -15.40871810913086

Token 182: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.03597860038280487
    2. '   ' → logprob: -4.0359787940979
    3. ' else' → logprob: -4.0359787940979
    4. ' ' → logprob: -13.660978317260742
    5. '	else' → logprob: -14.535978317260742
    6. '_else' → logprob: -15.535978317260742
    7. '  ' → logprob: -16.160978317260742
    8. 'elser' → logprob: -16.285978317260742
    9. 'elif' → logprob: -16.285978317260742
    10. 'e' → logprob: -16.660978317260742

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4768260419368744
    2. '():' → logprob: -0.9768260717391968
    3. '():
' → logprob: -6.476826190948486
    4. ':
' → logprob: -6.976826190948486
    5. '()' → logprob: -8.226825714111328
    6. ' ():' → logprob: -12.726825714111328
    7. ' :' → logprob: -13.726825714111328
    8. '   ' → logprob: -14.726825714111328
    9. '()
' → logprob: -14.976825714111328
    10. '(' → logprob: -15.226825714111328

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020563025027513504
    2. 'print' → logprob: -4.270563125610352
    3. ' print' → logprob: -5.645563125610352
    4. '   ' → logprob: -5.895563125610352
    5. '(print' → logprob: -9.520563125610352
    6. '	print' → logprob: -11.770563125610352
    7. '()' → logprob: -12.770563125610352
    8. '     ' → logprob: -12.895563125610352
    9. '      ' → logprob: -13.270563125610352
    10. '.print' → logprob: -13.895563125610352

Token 185: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019287518225610256
    2. ' print' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. '(print' → logprob: -18.251928329467773
    5. '.print' → logprob: -18.751928329467773
    6. '	print' → logprob: -18.751928329467773
    7. '_print' → logprob: -19.501928329467773
    8. '
' → logprob: -19.876928329467773
    9. ' ' → logprob: -19.876928329467773
    10. '  ' → logprob: -21.126928329467773

Token 186: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.9361264946837764e-07
    2. '_n' → logprob: -16.75
    3. 'No' → logprob: -17.75
    4. '_' → logprob: -18.125
    5. 'no' → logprob: -18.375
    6. '"_' → logprob: -19.25
    7. '("_' → logprob: -19.25
    8. '_No' → logprob: -19.375
    9. '_yes' → logprob: -19.5
    10. '_NO' → logprob: -19.625

Token 187: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.293326199054718
    2. '
' → logprob: -1.9183261394500732
    3. '()
' → logprob: -2.2933261394500732
    4. '<|end|>' → logprob: -6.043326377868652
    5. '\n' → logprob: -6.668326377868652
    6. '()

' → logprob: -6.918326377868652
    7. '(
' → logprob: -6.918326377868652
    8. '(' → logprob: -8.043326377868652
    9. '```' → logprob: -9.043326377868652
    10. '

' → logprob: -9.293326377868652

Token 188: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1288755089044571
    2. '
' → logprob: -2.128875494003296
    3. '\n' → logprob: -6.378875732421875
    4. ' if' → logprob: -9.628875732421875
    5. '\' → logprob: -10.503875732421875
    6. '#' → logprob: -10.503875732421875
    7. '<|end|>' → logprob: -10.503875732421875
    8. '```' → logprob: -10.628875732421875
    9. '    
' → logprob: -10.878875732421875
    10. '  
' → logprob: -11.128875732421875

Token 189: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16025042533874512
    2. '(' → logprob: -1.9102504253387451
    3. '();' → logprob: -11.660250663757324
    4. '(
' → logprob: -12.285250663757324
    5. '()">' → logprob: -13.160250663757324
    6. '()
' → logprob: -13.285250663757324
    7. '()`' → logprob: -13.910250663757324
    8. '(

' → logprob: -14.035250663757324
    9. '()<' → logprob: -14.160250663757324
    10. ' ()' → logprob: -14.160250663757324


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 187
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 48.13%
Précision adaptée (1ère position): 53.48%
Précision (top 10): 87.17%
================================================================================
