================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    N, M = map(int, sys.stdin.readline().split())
    # Initialisation façon imperative
    neighbors = [[] for i in range(N)]
    parents = [list() for _ in range(N)]
    outd = [0]*N
    for _ in range(M):
        s, t = (int(x)-1 for x in sys.stdin.readline().split())
        neighbors[s] += [t]
        parents[t].append(s)
        outd[s] += 1

    prob = [0 for _ in range(N)]
    exp = [0]*N
    prob[0] = 1

    # Style for/while mélangé
    idx=0
    while idx<N:
        p = prob[idx]
        e = exp[idx]
        d = outd[idx]
        if p:
            m = e/p
            for j in neighbors[idx]:
                prob[j] += p/d
                exp[j] += p*(m+1)/d
        idx+=1

    pr = [0]*N
    er = [0]*N
    pr[-1] = 1
    # reverse avec indexation à la C
    for i in range(N-1,-1,-1):
        p = pr[i]
        e = er[i]
        if p:
            m = e/p
            for j in parents[i]:
                pr[j] += p/outd[j]
                er[j] += p*(m+1)/outd[j]

    result = exp[-1]
    for k in range(N-1):
        if outd[k]==1: continue
        L = []
        p=prob[k]
        e=exp[k]
        d=outd[k]
        for v in neighbors[k]:
            val = e*pr[v] + er[v]*p + p*pr[v]
            L.append(val)
        tot = sum(L)
        v2 = exp[-1] - tot/d
        for v in L:
            candidate = v2 + (tot-v)/(d-1)
            if candidate < result:
                result = candidate

    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025130433961749077
    2. '\n' → logprob: -4.400130271911621
    3. 'import' → logprob: -5.275130271911621
    4. '<|end|>' → logprob: -5.900130271911621
    5. '\' → logprob: -6.150130271911621
    6. 'newline' → logprob: -7.900130271911621
    7. '' → logprob: -8.025130271911621
    8. '
' → logprob: -8.400130271911621
    9. ';' → logprob: -8.525130271911621
    10. ',' → logprob: -8.525130271911621

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04059256613254547
    2. ' main' → logprob: -4.915592670440674
    3. ' space' → logprob: -5.165592670440674
    4. ' process' → logprob: -5.415592670440674
    5. ' ' → logprob: -6.040592670440674
    6. ' sys' → logprob: -6.165592670440674
    7. ' my' → logprob: -6.415592670440674
    8. ' function' → logprob: -6.790592670440674
    9. ' system' → logprob: -6.915592670440674
    10. ' read' → logprob: -6.915592670440674

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02034590020775795
    2. '():' → logprob: -4.145345687866211
    3. '(:' → logprob: -5.770345687866211
    4. ':' → logprob: -6.895345687866211
    5. ' (' → logprob: -10.145345687866211
    6. '(":' → logprob: -11.020345687866211
    7. '(`' → logprob: -11.020345687866211
    8. '(
' → logprob: -11.020345687866211
    9. '```' → logprob: -11.270345687866211
    10. '):' → logprob: -11.395345687866211

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13950742781162262
    2. '\' → logprob: -2.389507532119751
    3. '(' → logprob: -4.139507293701172
    4. '    ' → logprob: -4.639507293701172
    5. '\n' → logprob: -5.764507293701172
    6. 'print' → logprob: -6.264507293701172
    7. '    
' → logprob: -6.514507293701172
    8. '(sys' → logprob: -6.639507293701172
    9. '```' → logprob: -6.889507293701172
    10. ' ' → logprob: -7.639507293701172

Token 7: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8435841798782349
    2. '    ' → logprob: -1.2185841798782349
    3. '   ' → logprob: -1.5935841798782349
    4. 'pass' → logprob: -3.0935840606689453
    5. ' pass' → logprob: -4.718584060668945
    6. ' print' → logprob: -5.093584060668945
    7. ' ' → logprob: -5.218584060668945
    8. '  ' → logprob: -7.343584060668945
    9. '_' → logprob: -7.343584060668945
    10. 'return' → logprob: -7.468584060668945

Token 8: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4787765145301819
    2. '=' → logprob: -1.728776454925537
    3. ' ' → logprob: -1.728776454925537
    4. '  ' → logprob: -4.728776454925537
    5. '_' → logprob: -4.978776454925537
    6. '   ' → logprob: -5.353776454925537
    7. ',' → logprob: -6.603776454925537
    8. '.' → logprob: -7.478776454925537
    9. '    ' → logprob: -7.478776454925537
    10. ')' → logprob: -7.728776454925537

Token 9: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8444766402244568
    2. ' M' → logprob: -0.9694766402244568
    3. ' ' → logprob: -1.7194766998291016
    4. 'K' → logprob: -5.844476699829102
    5. 'M' → logprob: -6.344476699829102
    6. ' input' → logprob: -6.469476699829102
    7. 'input' → logprob: -7.219476699829102
    8. ' =' → logprob: -7.219476699829102
    9. ' sys' → logprob: -7.219476699829102
    10. ' k' → logprob: -7.719476699829102

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05581201612949371
    2. '=' → logprob: -2.930812120437622
    3. ',' → logprob: -7.055811882019043
    4. ' ,' → logprob: -10.305811882019043
    5. ' ' → logprob: -11.055811882019043
    6. ' =
' → logprob: -12.555811882019043
    7. '<|end|>' → logprob: -12.555811882019043
    8. ')' → logprob: -12.930811882019043
    9. '   ' → logprob: -13.055811882019043
    10. '    ' → logprob: -13.805811882019043

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0022537452168762684
    2. 'map' → logprob: -6.127253532409668
    3. ' input' → logprob: -10.252253532409668
    4. ' ' → logprob: -11.127253532409668
    5. ' sys' → logprob: -11.502253532409668
    6. ' list' → logprob: -12.627253532409668
    7. 'input' → logprob: -13.127253532409668
    8. ' [' → logprob: -13.627253532409668
    9. '	map' → logprob: -14.877253532409668
    10. ' ' → logprob: -15.127253532409668

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8097590804100037
    2. '(str' → logprob: -1.3097591400146484
    3. '(int' → logprob: -1.3097591400146484
    4. '(lambda' → logprob: -4.309759140014648
    5. '(
' → logprob: -7.684759140014648
    6. 'str' → logprob: -7.934759140014648
    7. '(list' → logprob: -8.434759140014648
    8. '<|end|>' → logprob: -8.559759140014648
    9. 'int' → logprob: -8.934759140014648
    10. '(tuple' → logprob: -9.434759140014648

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1599964052438736
    2. ')' → logprob: -2.284996509552002
    3. '(' → logprob: -4.284996509552002
    4. '(sys' → logprob: -4.284996509552002
    5. '(input' → logprob: -4.284996509552002
    6. ',input' → logprob: -6.034996509552002
    7. 'input' → logprob: -6.659996509552002
    8. ' ,' → logprob: -7.784996509552002
    9. '),' → logprob: -8.534996032714844
    10. '```' → logprob: -9.409996032714844

Token 14: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5744168162345886
    2. ' input' → logprob: -1.1994168758392334
    3. ' sys' → logprob: -2.6994168758392334
    4. 'sys' → logprob: -2.6994168758392334
    5. ')' → logprob: -6.824416637420654
    6. ' )' → logprob: -11.324417114257812
    7. '(sys' → logprob: -12.699417114257812
    8. ' ' → logprob: -13.699417114257812
    9. '=sys' → logprob: -13.699417114257812
    10. '	sys' → logprob: -14.074417114257812

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.047765687108039856
    2. '.argv' → logprob: -3.5477657318115234
    3. '.' → logprob: -4.047765731811523
    4. ' .' → logprob: -8.297765731811523
    5. '.readline' → logprob: -9.047765731811523
    6. '.stdout' → logprob: -11.047765731811523
    7. '.std' → logprob: -12.297765731811523
    8. '.input' → logprob: -12.922765731811523
    9. ' stdin' → logprob: -14.672765731811523
    10. '.st' → logprob: -14.922765731811523

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01653093472123146
    2. '.read' → logprob: -4.516530990600586
    3. '.' → logprob: -5.266530990600586
    4. '.readlines' → logprob: -8.641530990600586
    5. '.stdin' → logprob: -9.766530990600586
    6. ').' → logprob: -10.016530990600586
    7. ')' → logprob: -11.766530990600586
    8. ' .' → logprob: -12.016530990600586
    9. '.argv' → logprob: -12.016530990600586
    10. '.)' → logprob: -13.391530990600586

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.08225995302200317
    2. '())' → logprob: -2.5822598934173584
    3. '()' → logprob: -5.7072601318359375
    4. '()))' → logprob: -10.957260131835938
    5. ')' → logprob: -11.207260131835938
    6. ' ())' → logprob: -12.957260131835938
    7. '()[' → logprob: -13.457260131835938
    8. '.readline' → logprob: -13.707260131835938
    9. '()]' → logprob: -14.082260131835938
    10. '();)' → logprob: -14.332260131835938

Token 18: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.08489236980676651
    2. 'split' → logprob: -3.0848922729492188
    3. 'rstrip' → logprob: -3.3348922729492188
    4. 'read' → logprob: -10.459892272949219
    5. ')' → logprob: -12.459892272949219
    6. ' strip' → logprob: -13.084892272949219
    7. '```' → logprob: -15.084892272949219
    8. ' split' → logprob: -15.584892272949219
    9. 'replace' → logprob: -16.20989227294922
    10. '())' → logprob: -16.95989227294922

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25849559903144836
    2. '))' → logprob: -1.508495569229126
    3. '())' → logprob: -5.258495807647705
    4. '()))' → logprob: -6.883495807647705
    5. '()' → logprob: -8.133495330810547
    6. ')))' → logprob: -11.758495330810547
    7. '(' → logprob: -12.133495330810547
    8. '),' → logprob: -12.383495330810547
    9. ')
' → logprob: -13.508495330810547
    10. ''))' → logprob: -14.258495330810547

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35465386509895325
    2. ')' → logprob: -1.6046538352966309
    3. '\n' → logprob: -3.729653835296631
    4. '
' → logprob: -3.729653835296631
    5. '    
' → logprob: -4.104653835296631
    6. '\' → logprob: -4.854653835296631
    7. '```' → logprob: -4.979653835296631
    8. ' for' → logprob: -5.979653835296631
    9. 'for' → logprob: -6.104653835296631
    10. ' ' → logprob: -6.104653835296631

Token 21: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1677342653274536
    2. '   ' → logprob: -1.9177342653274536
    3. 'data' → logprob: -2.042734146118164
    4. ' for' → logprob: -2.292734146118164
    5. ')' → logprob: -2.917734146118164
    6. 'a' → logprob: -3.792734146118164
    7. ' lines' → logprob: -4.042734146118164
    8. 'matrix' → logprob: -4.042734146118164
    9. 'graph' → logprob: -4.167734146118164
    10. ' data' → logprob: -4.292734146118164

Token 22: ' Initial' (ID: 9209)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7413682341575623
    2. 'for' → logprob: -1.241368293762207
    3. ' numbers' → logprob: -3.366368293762207
    4. ' data' → logprob: -3.366368293762207
    5. ' result' → logprob: -3.491368293762207
    6. 'data' → logprob: -3.991368293762207
    7. ' matrix' → logprob: -4.366368293762207
    8. 'result' → logprob: -4.491368293762207
    9. ' arr' → logprob: -4.491368293762207
    10. 'arr' → logprob: -4.616368293762207

Token 23: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04589102789759636
    2. '_array' → logprob: -4.545890808105469
    3. '_matrix' → logprob: -5.295890808105469
    4. '_list' → logprob: -5.545890808105469
    5. ' ' → logprob: -5.795890808105469
    6. ' _' → logprob: -5.920890808105469
    7. '_arr' → logprob: -6.045890808105469
    8. 'array' → logprob: -6.295890808105469
    9. ' array' → logprob: -6.545890808105469
    10. '[' → logprob: -6.795890808105469

Token 24: ' façon' (ID: 33381)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0663223266601562
    2. 'dp' → logprob: -1.1913223266601562
    3. 'data' → logprob: -2.4413223266601562
    4. 'matrix' → logprob: -3.3163223266601562
    5. '_' → logprob: -3.5663223266601562
    6. ' dp' → logprob: -3.5663223266601562
    7. ')' → logprob: -3.8163223266601562
    8. 's' → logprob: -4.191322326660156
    9. 'A' → logprob: -4.441322326660156
    10. ' matrix' → logprob: -4.441322326660156

Token 25: ' imperative' (ID: 73047)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0753049850463867
    2. ' d' → logprob: -1.4503049850463867
    3. ' python' → logprob: -2.9503049850463867
    4. 'd' → logprob: -3.0753049850463867
    5. ' "' → logprob: -3.3253049850463867
    6. ' à' → logprob: -3.5753049850463867
    7. ' a' → logprob: -3.9503049850463867
    8. ' dp' → logprob: -3.9503049850463867
    9. 's' → logprob: -4.200304985046387
    10. 'dict' → logprob: -4.450304985046387

Token 26: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39366576075553894
    2. 'dp' → logprob: -2.7686657905578613
    3. ')' → logprob: -3.0186657905578613
    4. 'n' → logprob: -3.7686657905578613
    5. ' ' → logprob: -3.8936657905578613
    6. 'matrix' → logprob: -3.8936657905578613
    7. 's' → logprob: -4.018665790557861
    8. '_' → logprob: -4.268665790557861
    9. '```' → logprob: -4.518665790557861
    10. 'data' → logprob: -4.518665790557861

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5652645230293274
    2. 'result' → logprob: -2.4402644634246826
    3. 'matrix' → logprob: -2.5652644634246826
    4. 'dp' → logprob: -2.9402644634246826
    5. 's' → logprob: -3.5652644634246826
    6. 'data' → logprob: -3.6902644634246826
    7. ' matrix' → logprob: -3.6902644634246826
    8. ' result' → logprob: -4.690264701843262
    9. ')' → logprob: -4.690264701843262
    10. ' dp' → logprob: -4.815264701843262

Token 28: ' neighbors' (ID: 31655)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -1.1195271015167236
    2. ' dp' → logprob: -1.8695271015167236
    3. 'matrix' → logprob: -1.9945271015167236
    4. 'dp' → logprob: -2.3695271015167236
    5. '   ' → logprob: -3.1195271015167236
    6. ' result' → logprob: -3.8695271015167236
    7. ' data' → logprob: -3.9945271015167236
    8. ' array' → logprob: -4.2445268630981445
    9. 'result' → logprob: -4.3695268630981445
    10. 'data' → logprob: -4.4945268630981445

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012682810425758362
    2. '=' → logprob: -4.387682914733887
    3. 's' → logprob: -8.887682914733887
    4. '[' → logprob: -10.887682914733887
    5. '=[]' → logprob: -12.387682914733887
    6. '[]' → logprob: -12.637682914733887
    7. ' ' → logprob: -13.262682914733887
    8. '_' → logprob: -13.637682914733887
    9. ' =[' → logprob: -14.262682914733887
    10. '_list' → logprob: -14.387682914733887

Token 30: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14567969739437103
    2. '{}' → logprob: -3.0206797122955322
    3. ' [' → logprob: -3.2706797122955322
    4. ' [[]' → logprob: -3.8956797122955322
    5. '{' → logprob: -4.020679473876953
    6. '[]' → logprob: -5.645679473876953
    7. ' {}' → logprob: -6.020679473876953
    8. ' {' → logprob: -6.270679473876953
    9. ' [{}' → logprob: -6.395679473876953
    10. ' []' → logprob: -8.270679473876953

Token 31: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08959002047777176
    2. 'for' → logprob: -2.464590072631836
    3. ']' → logprob: -8.464590072631836
    4. '()' → logprob: -8.589590072631836
    5. ')' → logprob: -8.964590072631836
    6. ' ' → logprob: -9.839590072631836
    7. '(' → logprob: -10.714590072631836
    8. '   ' → logprob: -11.089590072631836
    9. '(N' → logprob: -11.339590072631836
    10. '	for' → logprob: -11.589590072631836

Token 32: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013938075862824917
    2. ' _' → logprob: -7.126393795013428
    3. 'range' → logprob: -8.126394271850586
    4. ' range' → logprob: -8.376394271850586
    5. '_range' → logprob: -10.376394271850586
    6. '_i' → logprob: -10.626394271850586
    7. ' ' → logprob: -12.876394271850586
    8. 'i' → logprob: -13.126394271850586
    9. ' i' → logprob: -14.251394271850586
    10. '(range' → logprob: -14.626394271850586

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006754444446414709
    2. 'in' → logprob: -5.006754398345947
    3. ' ' → logprob: -11.131754875183105
    4. 'range' → logprob: -11.381754875183105
    5. '_' → logprob: -12.881754875183105
    6. ' range' → logprob: -13.256754875183105
    7. 'n' → logprob: -13.256754875183105
    8. ')' → logprob: -13.506754875183105
    9. ' i' → logprob: -13.631754875183105
    10. '<|end|>' → logprob: -14.381754875183105

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759457349777222
    2. 'range' → logprob: -0.8259457349777222
    3. '	range' → logprob: -13.075945854187012
    4. ' ' → logprob: -13.325945854187012
    5. '(range' → logprob: -13.950945854187012
    6. 'rang' → logprob: -14.700945854187012
    7. ' xrange' → logprob: -15.200945854187012
    8. ')' → logprob: -15.575945854187012
    9. '   ' → logprob: -15.700945854187012
    10. 'ange' → logprob: -15.950945854187012

Token 35: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.009839548729360104
    2. '(' → logprob: -5.2598395347595215
    3. '(M' → logprob: -5.3848395347595215
    4. '(n' → logprob: -12.50984001159668
    5. ' (' → logprob: -13.00984001159668
    6. ')' → logprob: -13.75984001159668
    7. '(
' → logprob: -14.00984001159668
    8. 'N' → logprob: -14.63484001159668
    9. '(

' → logprob: -15.75984001159668
    10. 'M' → logprob: -15.88484001159668

Token 36: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.8550976164988242e-05
    2. ')' → logprob: -11.500018119812012
    3. ']' → logprob: -12.625018119812012
    4. ' )' → logprob: -13.250018119812012
    5. ')])' → logprob: -14.000018119812012
    6. '])' → logprob: -14.250018119812012
    7. '])]' → logprob: -14.500018119812012
    8. ')],' → logprob: -14.875018119812012
    9. ')]
' → logprob: -15.250018119812012
    10. ' ' → logprob: -16.000019073486328

Token 37: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' parents' (ID: 8783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.836988091468811
    2. ' for' → logprob: -1.336988091468811
    3. '<|end|>' → logprob: -1.336988091468811
    4. '
' → logprob: -3.9619879722595215
    5. ' ' → logprob: -4.8369879722595215
    6. ' 
' → logprob: -5.7119879722595215
    7. '\n' → logprob: -5.8369879722595215
    8. '<|end|>' → logprob: -5.9619879722595215
    9. '  
' → logprob: -6.3369879722595215
    10. '   ' → logprob: -6.8369879722595215

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366759791970253
    2. '=' → logprob: -3.40866756439209
    3. 's' → logprob: -11.40866756439209
    4. ' ' → logprob: -11.90866756439209
    5. '[' → logprob: -13.78366756439209
    6. '=[]' → logprob: -13.78366756439209
    7. '   ' → logprob: -14.53366756439209
    8. '[]' → logprob: -15.03366756439209
    9. '[:]' → logprob: -15.40866756439209
    10. ' =[' → logprob: -15.53366756439209

Token 40: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.23088476061820984
    2. '[' → logprob: -2.1058847904205322
    3. ' [-' → logprob: -2.7308847904205322
    4. '[-' → logprob: -3.9808847904205322
    5. ' [[]' → logprob: -8.480884552001953
    6. ' []' → logprob: -8.855884552001953
    7. '[]' → logprob: -9.230884552001953
    8. '[i' → logprob: -9.855884552001953
    9. '[N' → logprob: -10.855884552001953
    10. '[:]' → logprob: -11.105884552001953

Token 41: 'list' (ID: 2641)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00448246207088232
    2. 'None' → logprob: -6.754482269287109
    3. 'False' → logprob: -6.879482269287109
    4. 'i' → logprob: -7.004482269287109
    5. ' -' → logprob: -7.379482269287109
    6. '0' → logprob: -8.12948226928711
    7. '[]' → logprob: -8.37948226928711
    8. '-i' → logprob: -9.25448226928711
    9. '-
' → logprob: -10.87948226928711
    10. ' None' → logprob: -10.87948226928711

Token 42: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11061131954193115
    2. '()]' → logprob: -2.7356114387512207
    3. '(range' → logprob: -3.2356114387512207
    4. '(set' → logprob: -8.860610961914062
    5. '(map' → logprob: -9.235610961914062
    6. '([]' → logprob: -9.735610961914062
    7. '(' → logprob: -10.110610961914062
    8. '()
' → logprob: -10.235610961914062
    9. ' ()' → logprob: -10.610610961914062
    10. ']' → logprob: -10.610610961914062

Token 43: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034466393291950226
    2. '()]' → logprob: -3.409466505050659
    3. ' for' → logprob: -8.534466743469238
    4. '()
' → logprob: -8.784466743469238
    5. 'for' → logprob: -9.034466743469238
    6. ']' → logprob: -9.284466743469238
    7. ' ()' → logprob: -9.784466743469238
    8. '())' → logprob: -9.784466743469238
    9. '(' → logprob: -10.159466743469238
    10. ')' → logprob: -10.284466743469238

Token 44: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20275664329528809
    2. '_' → logprob: -2.327756643295288
    3. '(i' → logprob: -2.952756643295288
    4. '()' → logprob: -4.202756881713867
    5. ' ' → logprob: -5.452756881713867
    6. ' _' → logprob: -5.702756881713867
    7. 'i' → logprob: -5.827756881713867
    8. '(_' → logprob: -6.327756881713867
    9. '(range' → logprob: -6.327756881713867
    10. 'range' → logprob: -6.702756881713867

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5787416696548462
    2. 'in' → logprob: -0.8287416696548462
    3. 'range' → logprob: -6.578741550445557
    4. 'i' → logprob: -7.203741550445557
    5. ' ' → logprob: -8.203742027282715
    6. '(' → logprob: -8.703742027282715
    7. ' range' → logprob: -9.703742027282715
    8. '_' → logprob: -9.828742027282715
    9. '()' → logprob: -10.453742027282715
    10. '  ' → logprob: -10.953742027282715

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016054192557930946
    2. ' range' → logprob: -4.141054153442383
    3. '(range' → logprob: -11.516054153442383
    4. '_' → logprob: -12.391054153442383
    5. ')' → logprob: -13.516054153442383
    6. 'neighbors' → logprob: -13.641054153442383
    7. ' ' → logprob: -14.016054153442383
    8. '	range' → logprob: -14.266054153442383
    9. ']' → logprob: -14.766054153442383
    10. '   ' → logprob: -15.516054153442383

Token 47: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14329366385936737
    2. '(M' → logprob: -2.018293619155884
    3. '(' → logprob: -7.518293857574463
    4. 'M' → logprob: -10.643293380737305
    5. 'N' → logprob: -11.143293380737305
    6. '(n' → logprob: -11.268293380737305
    7. ' (' → logprob: -12.143293380737305
    8. '(
' → logprob: -12.518293380737305
    9. ')' → logprob: -12.643293380737305
    10. '(i' → logprob: -12.893293380737305

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002100965939462185
    2. ')' → logprob: -9.12520980834961
    3. ']' → logprob: -9.37520980834961
    4. ')]
' → logprob: -12.37520980834961
    5. ' )' → logprob: -12.62520980834961
    6. '   ' → logprob: -13.50020980834961
    7. ')],' → logprob: -13.62520980834961
    8. '])' → logprob: -13.75020980834961
    9. ')]
' → logprob: -13.87520980834961
    10. '])]' → logprob: -14.00020980834961

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' out' (ID: 842)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2407604157924652
    2. ' for' → logprob: -2.115760326385498
    3. '
' → logprob: -2.740760326385498
    4. ' ' → logprob: -4.865760326385498
    5. '   ' → logprob: -4.990760326385498
    6. '<|end|>' → logprob: -5.240760326385498
    7. '\n' → logprob: -6.115760326385498
    8. '' → logprob: -6.365760326385498
    9. ' 
' → logprob: -6.740760326385498
    10. '	for' → logprob: -7.365760326385498

Token 51: 'd' (ID: 67)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -1.0088818073272705
    2. '_de' → logprob: -1.2588818073272705
    3. 'degrees' → logprob: -1.6338818073272705
    4. '_degree' → logprob: -2.0088818073272705
    5. 'deg' → logprob: -4.383881568908691
    6. '_edges' → logprob: -6.133881568908691
    7. '_deg' → logprob: -6.508881568908691
    8. 'de' → logprob: -6.758881568908691
    9. ' =' → logprob: -6.883881568908691
    10. '_neighbors' → logprob: -7.133881568908691

Token 52: ' =' (ID: 314)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.052604977041482925
    2. 'egree' → logprob: -3.177604913711548
    3. 'egs' → logprob: -4.677605152130127
    4. 'e' → logprob: -8.302604675292969
    5. 'eq' → logprob: -13.302604675292969
    6. 'ee' → logprob: -13.677604675292969
    7. 'ege' → logprob: -14.177604675292969
    8. '[' → logprob: -14.177604675292969
    9. '```' → logprob: -14.177604675292969
    10. ' =' → logprob: -14.427604675292969

Token 53: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3136543035507202
    2. ' [' → logprob: -1.3136543035507202
    3. '[int' → logprob: -9.313653945922852
    4. '[i' → logprob: -9.563653945922852
    5. '[o' → logprob: -10.063653945922852
    6. '[M' → logprob: -10.188653945922852
    7. '[N' → logprob: -10.438653945922852
    8. '[len' → logprob: -10.563653945922852
    9. '[]' → logprob: -11.313653945922852
    10. '[n' → logprob: -11.313653945922852

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001216901931911707
    2. ' ' → logprob: -6.751216888427734
    3. 'int' → logprob: -10.501216888427734
    4. ']' → logprob: -11.876216888427734
    5. ')' → logprob: -12.751216888427734
    6. 'M' → logprob: -13.501216888427734
    7. ' int' → logprob: -13.751216888427734
    8. '(' → logprob: -14.251216888427734
    9. 'False' → logprob: -14.313716888427734
    10. '[]' → logprob: -14.376216888427734

Token 55: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011006083339452744
    2. ']*' → logprob: -4.761005878448486
    3. ' for' → logprob: -6.261005878448486
    4. 'for' → logprob: -8.011006355285645
    5. ' ]' → logprob: -8.886006355285645
    6. ' ' → logprob: -12.886006355285645
    7. ')' → logprob: -12.886006355285645
    8. '   ' → logprob: -13.386006355285645
    9. ']*(' → logprob: -14.386006355285645
    10. '	for' → logprob: -14.636006355285645

Token 56: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3425219549390022e-05
    2. ' N' → logprob: -11.62501335144043
    3. 'M' → logprob: -12.50001335144043
    4. '(N' → logprob: -14.87501335144043
    5. '   ' → logprob: -15.75001335144043
    6. '	N' → logprob: -16.37501335144043
    7. 'n' → logprob: -16.50001335144043
    8. ' ' → logprob: -17.00001335144043
    9. '(' → logprob: -18.12501335144043
    10. '  ' → logprob: -18.62501335144043

Token 57: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04802510514855385
    2. '<|end|>' → logprob: -3.173025131225586
    3. '   ' → logprob: -6.298025131225586
    4. '<|end|>' → logprob: -6.923025131225586
    5. '    
' → logprob: -7.548025131225586
    6. '\n' → logprob: -7.548025131225586
    7. '
' → logprob: -8.548025131225586
    8. ' 
' → logprob: -8.548025131225586
    9. '' → logprob: -9.048025131225586
    10. 'newline' → logprob: -9.048025131225586

Token 58: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30806535482406616
    2. '   ' → logprob: -2.183065414428711
    3. '<|end|>' → logprob: -2.683065414428711
    4. 'for' → logprob: -3.558065414428711
    5. ' for' → logprob: -4.058065414428711
    6. '    
' → logprob: -4.558065414428711
    7. '\n' → logprob: -5.058065414428711
    8. ' ' → logprob: -5.683065414428711
    9. '  
' → logprob: -5.808065414428711
    10. 'newline' → logprob: -5.933065414428711

Token 59: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21156059205532074
    2. 'for' (adapté à ' for') → logprob: -1.836560606956482
    3. ' for' → logprob: -3.7115604877471924
    4. '<|end|>' → logprob: -5.8365607261657715
    5. '' → logprob: -6.9615607261657715
    6. '<|end|>' → logprob: -7.0865607261657715
    7. ' 
' → logprob: -7.5865607261657715
    8. '\n' → logprob: -7.9615607261657715
    9. '
' → logprob: -8.336560249328613
    10. ' ' → logprob: -8.461560249328613

Token 60: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004899634979665279
    2. ' i' → logprob: -6.004899501800537
    3. ' ' → logprob: -6.629899501800537
    4. '_' → logprob: -6.879899501800537
    5. ' range' → logprob: -10.004899978637695
    6. ' in' → logprob: -12.129899978637695
    7. ' ▁' → logprob: -12.504899978637695
    8. ' M' → logprob: -12.629899978637695
    9. ' ‌' → logprob: -12.629899978637695
    10. '  ' → logprob: -12.754899978637695

Token 61: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6346719861030579
    2. ' in' → logprob: -0.7596719861030579
    3. ' ' → logprob: -6.384672164916992
    4. 'range' → logprob: -8.884672164916992
    5. '  ' → logprob: -9.259672164916992
    6. 'i' → logprob: -10.384672164916992
    7. ',' → logprob: -11.384672164916992
    8. 's' → logprob: -11.509672164916992
    9. 'n' → logprob: -11.634672164916992
    10. '_' → logprob: -11.759672164916992

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032156186643987894
    2. ' range' → logprob: -5.753215789794922
    3. '(range' → logprob: -11.378215789794922
    4. 'ange' → logprob: -12.128215789794922
    5. ' ' → logprob: -12.753215789794922
    6. 'ran' → logprob: -12.753215789794922
    7. 'rang' → logprob: -12.753215789794922
    8. '	range' → logprob: -12.878215789794922
    9. 'r' → logprob: -13.253215789794922
    10. '```' → logprob: -13.753215789794922

Token 63: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0030632726848125458
    2. ' (' → logprob: -6.003063201904297
    3. '(' → logprob: -7.503063201904297
    4. ' M' → logprob: -10.503063201904297
    5. 'M' → logprob: -12.378063201904297
    6. ' ' → logprob: -13.503063201904297
    7. '(m' → logprob: -13.753063201904297
    8. '(N' → logprob: -14.628063201904297
    9. '(
' → logprob: -15.253063201904297
    10. '(int' → logprob: -15.753063201904297

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029295608401298523
    2. ')' → logprob: -6.0029296875
    3. ' ):' → logprob: -7.7529296875
    4. ':' → logprob: -11.3779296875
    5. '):
' → logprob: -11.7529296875
    6. ' )' → logprob: -12.7529296875
    7. '():' → logprob: -14.2529296875
    8. ',' → logprob: -15.0029296875
    9. '):
' → logprob: -15.6279296875
    10. ' ' → logprob: -15.7529296875

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1971939355134964
    2. '<|end|>' → logprob: -2.1971938610076904
    3. '   ' → logprob: -2.8221938610076904
    4. ' ' → logprob: -6.3221940994262695
    5. '<|end|>' → logprob: -6.3221940994262695
    6. ',' → logprob: -6.9471940994262695
    7. '    ' → logprob: -7.4471940994262695
    8. '    
' → logprob: -7.5721940994262695
    9. ' A' → logprob: -7.8221940994262695
    10. 'n' → logprob: -7.8221940994262695

Token 66: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.39614415168762207
    2. ' u' → logprob: -1.271144151687622
    3. 'a' → logprob: -3.271144151687622
    4. ' a' → logprob: -5.271143913269043
    5. 'A' → logprob: -7.146143913269043
    6. 'x' → logprob: -7.396143913269043
    7. ' line' → logprob: -7.646143913269043
    8. '   ' → logprob: -8.146143913269043
    9. 'U' → logprob: -8.271143913269043
    10. ' A' → logprob: -8.521143913269043

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026744648348540068
    2. ' ,' → logprob: -6.002674579620361
    3. ',t' → logprob: -9.752674102783203
    4. 'tr' → logprob: -10.377674102783203
    5. '_,' → logprob: -10.377674102783203
    6. ' =' → logprob: -10.502674102783203
    7. '1' → logprob: -11.752674102783203
    8. '=' → logprob: -12.002674102783203
    9. 't' → logprob: -12.502674102783203
    10. 'r' → logprob: -12.627674102783203

Token 68: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7818036675453186
    2. ' d' → logprob: -1.6568036079406738
    3. 'd' → logprob: -2.156803607940674
    4. ' e' → logprob: -2.406803607940674
    5. 't' → logprob: -2.531803607940674
    6. 'e' → logprob: -2.781803607940674
    7. ' f' → logprob: -6.906803607940674
    8. ' ' → logprob: -6.906803607940674
    9. 'f' → logprob: -7.281803607940674
    10. ' p' → logprob: -7.656803607940674

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974749207496643
    2. '=' → logprob: -1.804747462272644
    3. ' ' → logprob: -13.679747581481934
    4. ')' → logprob: -14.679747581481934
    5. ',' → logprob: -15.304747581481934
    6. '=input' → logprob: -16.054746627807617
    7. ' =
' → logprob: -16.054746627807617
    8. '    ' → logprob: -16.179746627807617
    9. '＝' → logprob: -16.179746627807617
    10. '=s' → logprob: -16.179746627807617

Token 70: ' (' (ID: 350)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019442226039245725
    2. 'map' → logprob: -6.251944065093994
    3. ' ' → logprob: -11.876944541931152
    4. '	map' → logprob: -12.751944541931152
    5. ' ' → logprob: -13.001944541931152
    6. ' list' → logprob: -13.501944541931152
    7. ' m' → logprob: -14.376944541931152
    8. '    ' → logprob: -15.126944541931152
    9. ' mapa' → logprob: -15.126944541931152
    10. '(map' → logprob: -15.251944541931152

Token 71: 'int' (ID: 491)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14334437251091003
    2. 'map' → logprob: -2.0183444023132324
    3. ')' → logprob: -8.143343925476074
    4. '    ' → logprob: -9.393343925476074
    5. ' sys' → logprob: -9.393343925476074
    6. '   ' → logprob: -9.643343925476074
    7. ' ' → logprob: -10.143343925476074
    8. 'int' → logprob: -10.768343925476074
    9. '	map' → logprob: -11.018343925476074
    10. ' )' → logprob: -11.643343925476074

Token 72: '(x' (ID: 4061)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.15257740020751953
    2. '(' → logprob: -2.1525774002075195
    3. ')' → logprob: -4.7775774002075195
    4. '()' → logprob: -4.9025774002075195
    5. '(s' → logprob: -5.2775774002075195
    6. '())' → logprob: -6.6525774002075195
    7. '(system' → logprob: -7.0275774002075195
    8. '(

' → logprob: -7.7775774002075195
    9. '=sys' → logprob: -8.15257740020752
    10. '(
' → logprob: -8.27757740020752

Token 73: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10700962692499161
    2. '(sys' → logprob: -2.4820096492767334
    3. 'sys' → logprob: -4.732009410858154
    4. '()' → logprob: -5.232009410858154
    5. ' sys' → logprob: -7.107009410858154
    6. '(' → logprob: -7.482009410858154
    7. '(s' → logprob: -7.732009410858154
    8. '())' → logprob: -7.857009410858154
    9. '(x' → logprob: -7.982009410858154
    10. '=sys' → logprob: -8.107009887695312

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002209854545071721
    2. ' ' → logprob: -6.127209663391113
    3. '<|end|>' → logprob: -10.877209663391113
    4. ')' → logprob: -12.627209663391113
    5. ' for' → logprob: -14.127209663391113
    6. '<|end|>' → logprob: -14.502209663391113
    7. '  ' → logprob: -15.127209663391113
    8. ' )' → logprob: -16.00221061706543
    9. ',' → logprob: -16.18971061706543
    10. '   ' → logprob: -16.37721061706543

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4125489294528961
    2. ')' → logprob: -1.6625488996505737
    3. 'for' → logprob: -1.9125488996505737
    4. ' )' → logprob: -7.662549018859863
    5. '	for' → logprob: -9.787549018859863
    6. ',' → logprob: -10.037549018859863
    7. '),' → logprob: -10.287549018859863
    8. ' ' → logprob: -10.412549018859863
    9. '<|end|>' → logprob: -11.662549018859863
    10. 's' → logprob: -12.662549018859863

Token 76: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.010158454068005085
    2. 'sys' → logprob: -4.635158538818359
    3. ' x' → logprob: -8.63515853881836
    4. ' ' → logprob: -9.38515853881836
    5. ' input' → logprob: -10.13515853881836
    6. '_' → logprob: -10.51015853881836
    7. '=sys' → logprob: -10.76015853881836
    8. '	sys' → logprob: -11.01015853881836
    9. 'x' → logprob: -11.63515853881836
    10. '(sys' → logprob: -12.38515853881836

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08943948894739151
    2. 'in' → logprob: -2.4644393920898438
    3. 's' → logprob: -8.089439392089844
    4. ')' → logprob: -9.089439392089844
    5. ' ' → logprob: -10.589439392089844
    6. '  ' → logprob: -11.089439392089844
    7. ' ' → logprob: -12.089439392089844
    8. ' )' → logprob: -12.089439392089844
    9. 'In' → logprob: -12.214439392089844
    10. 'x' → logprob: -12.464439392089844

Token 78: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029764965176582336
    2. ' sys' → logprob: -3.5297648906707764
    3. 'input' → logprob: -12.279765129089355
    4. '(sys' → logprob: -12.654765129089355
    5. '=sys' → logprob: -13.154765129089355
    6. ')' → logprob: -13.404765129089355
    7. '	sys' → logprob: -13.654765129089355
    8. ' ' → logprob: -14.029765129089355
    9. ' input' → logprob: -15.279765129089355
    10. 'range' → logprob: -15.529765129089355

Token 79: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018041854491457343
    2. '.' → logprob: -9.3751802444458
    3. 'stdin' → logprob: -9.6251802444458
    4. '.readline' → logprob: -10.7501802444458
    5. '.stdout' → logprob: -13.1251802444458
    6. '.std' → logprob: -13.1251802444458
    7. '<|end|>' → logprob: -13.2501802444458
    8. '.argv' → logprob: -13.3751802444458
    9. '(stdin' → logprob: -15.0001802444458
    10. ' stdin' → logprob: -15.6251802444458

Token 80: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.12500286102295
    3. '.readlines' → logprob: -14.37500286102295
    4. ' readline' → logprob: -15.75000286102295
    5. ')' → logprob: -16.000003814697266
    6. 'read' → logprob: -17.375003814697266
    7. ' .' → logprob: -19.000003814697266
    8. '.read' → logprob: -19.125003814697266
    9. ').' → logprob: -19.250003814697266
    10. '.stdin' → logprob: -20.000003814697266

Token 81: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03444301709532738
    2. '()' → logprob: -3.409442901611328
    3. '())' → logprob: -7.159442901611328
    4. ')' → logprob: -11.784442901611328
    5. '(' → logprob: -12.659442901611328
    6. '()]' → logprob: -13.034442901611328
    7. '()-' → logprob: -13.409442901611328
    8. '()
' → logprob: -14.284442901611328
    9. '()).' → logprob: -14.659442901611328
    10. '().__' → logprob: -14.659442901611328

Token 82: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011312000453472137
    2. 'strip' → logprob: -4.511312007904053
    3. 'rstrip' → logprob: -8.261311531066895
    4. ' split' → logprob: -12.386311531066895
    5. 'spl' → logprob: -13.511311531066895
    6. 'read' → logprob: -16.26131248474121
    7. ' strip' → logprob: -16.88631248474121
    8. ')' → logprob: -17.26131248474121
    9. '(split' → logprob: -18.13631248474121
    10. 's' → logprob: -18.26131248474121

Token 83: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13461898267269135
    2. '()' → logprob: -2.1346189975738525
    3. ')' → logprob: -4.884618759155273
    4. '())
' → logprob: -9.759618759155273
    5. '(' → logprob: -10.759618759155273
    6. '()))' → logprob: -11.884618759155273
    7. '()
' → logprob: -11.884618759155273
    8. '()]' → logprob: -13.134618759155273
    9. ' ())' → logprob: -13.884618759155273
    10. '())

' → logprob: -14.259618759155273

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4371916651725769
    2. '<|end|>' → logprob: -1.9371917247772217
    3. '   ' → logprob: -2.4371917247772217
    4. ')' → logprob: -2.4371917247772217
    5. '
' → logprob: -3.8121917247772217
    6. '<|end|>' → logprob: -6.187191486358643
    7. ' neighbors' → logprob: -6.312191486358643
    8. 'neighbors' → logprob: -6.312191486358643
    9. '        
' → logprob: -6.687191486358643
    10. '    
' → logprob: -7.187191486358643

Token 85: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' (adapté à ' neighbors') → logprob: -0.0705990344285965
    2. ')' → logprob: -3.57059907913208
    3. '<|end|>' → logprob: -4.19559907913208
    4. ' neighbors' → logprob: -4.19559907913208
    5. '
' → logprob: -5.94559907913208
    6. 'out' → logprob: -6.32059907913208
    7. '   ' → logprob: -6.57059907913208
    8. '    
' → logprob: -7.44559907913208
    9. '_neighbors' → logprob: -7.69559907913208
    10. 'newline' → logprob: -7.94559907913208

Token 86: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00011105302110081539
    2. '[' → logprob: -9.125110626220703
    3. '[t' → logprob: -14.000110626220703
    4. 's' → logprob: -14.000110626220703
    5. ' [' → logprob: -14.875110626220703
    6. '[S' → logprob: -17.875110626220703
    7. '```' → logprob: -18.375110626220703
    8. '[
' → logprob: -18.375110626220703
    9. ' ' → logprob: -18.625110626220703
    10. '[src' → logprob: -19.125110626220703

Token 87: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.01558720413595438
    2. '.append' → logprob: -4.265587329864502
    3. '.' → logprob: -7.265587329864502
    4. ']' → logprob: -7.515587329864502
    5. ').' → logprob: -8.765586853027344
    6. '[' → logprob: -11.640586853027344
    7. ' ].' → logprob: -11.890586853027344
    8. '   ' → logprob: -12.890586853027344
    9. 'append' → logprob: -13.765586853027344
    10. ' .' → logprob: -14.015586853027344

Token 88: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012566512450575829
    2. '.' → logprob: -4.387566566467285
    3. '].' → logprob: -11.137566566467285
    4. '.add' → logprob: -11.137566566467285
    5. ' .' → logprob: -11.387566566467285
    6. ').' → logprob: -11.637566566467285
    7. '.Append' → logprob: -13.012566566467285
    8. '.app' → logprob: -13.262566566467285
    9. 'append' → logprob: -13.637566566467285
    10. '[' → logprob: -14.387566566467285

Token 89: ' [' (ID: 723)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.07174797356128693
    2. ' [' → logprob: -2.8217480182647705
    3. '[' → logprob: -4.696747779846191
    4. '[s' → logprob: -7.571747779846191
    5. '[i' → logprob: -10.446747779846191
    6. '[int' → logprob: -10.821747779846191
    7. '[j' → logprob: -11.696747779846191
    8. '[f' → logprob: -12.071747779846191
    9. '[T' → logprob: -12.071747779846191
    10. '[str' → logprob: -12.446747779846191

Token 90: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005555360112339258
    2. ' t' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.125555992126465
    4. '	t' → logprob: -15.375555992126465
    5. ' ' → logprob: -15.875555992126465
    6. '(t' → logprob: -16.75055503845215
    7. '`t' → logprob: -16.75055503845215
    8. '  ' → logprob: -17.25055503845215
    9. '    ' → logprob: -18.25055503845215
    10. '```' → logprob: -18.62555503845215

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038256102707237005
    2. ']
' → logprob: -6.003825664520264
    3. ' ]' → logprob: -6.753825664520264
    4. '       ' → logprob: -9.378825187683105
    5. '   ' → logprob: -9.628825187683105
    6. ']

' → logprob: -11.503825187683105
    7. ',' → logprob: -12.128825187683105
    8. ' ]
' → logprob: -12.378825187683105
    9. ']
' → logprob: -12.628825187683105
    10. '<|end|>' → logprob: -13.503825187683105

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11119431257247925
    2. '
' → logprob: -3.111194372177124
    3. '<|end|>' → logprob: -3.986194372177124
    4. '   ' → logprob: -4.111194133758545
    5. 'out' → logprob: -5.361194133758545
    6. '        
' → logprob: -5.611194133758545
    7. ')' → logprob: -5.986194133758545
    8. '    
' → logprob: -6.236194133758545
    9. ' ' → logprob: -6.361194133758545
    10. '\n' → logprob: -6.361194133758545

Token 93: ' parents' (ID: 8783)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.31548580527305603
    2. 'parents' (adapté à ' parents') → logprob: -1.3154858350753784
    3. ' out' → logprob: -6.940485954284668
    4. ' parents' → logprob: -7.065485954284668
    5. '   ' → logprob: -8.690485954284668
    6. 'parent' → logprob: -9.690485954284668
    7. '       ' → logprob: -10.190485954284668
    8. 'Parents' → logprob: -11.065485954284668
    9. ' ' → logprob: -11.190485954284668
    10. '	out' → logprob: -11.315485954284668

Token 94: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -6.170270353322849e-05
    2. '[' → logprob: -10.125061988830566
    3. '[s' → logprob: -11.125061988830566
    4. ' [' → logprob: -12.375061988830566
    5. 't' → logprob: -13.250061988830566
    6. '[T' → logprob: -14.750061988830566
    7. '[target' → logprob: -16.37506103515625
    8. ' t' → logprob: -16.75006103515625
    9. '[to' → logprob: -17.12506103515625
    10. '[u' → logprob: -17.50006103515625

Token 95: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4577862024307251
    2. '].' → logprob: -1.332786202430725
    3. '.' → logprob: -2.4577860832214355
    4. ']+=' → logprob: -4.8327860832214355
    5. ' ]' → logprob: -5.5827860832214355
    6. ' ].' → logprob: -5.9577860832214355
    7. '.append' → logprob: -6.5827860832214355
    8. '.]' → logprob: -6.7077860832214355
    9. ' +=' → logprob: -7.5827860832214355
    10. ' .' → logprob: -8.707786560058594

Token 96: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0445127372804563e-05
    2. ' append' → logprob: -11.62501049041748
    3. '.append' → logprob: -14.25001049041748
    4. 'add' → logprob: -14.62501049041748
    5. '+=' → logprob: -15.75001049041748
    6. '	append' → logprob: -16.375009536743164
    7. '+' → logprob: -17.000009536743164
    8. '_append' → logprob: -17.875009536743164
    9. 'appen' → logprob: -18.000009536743164
    10. 'Append' → logprob: -18.250009536743164

Token 97: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0013579712249338627
    2. '(' → logprob: -6.6263580322265625
    3. 's' → logprob: -10.376358032226562
    4. '(
' → logprob: -14.626358032226562
    5. ' (' → logprob: -15.751358032226562
    6. '((' → logprob: -16.001358032226562
    7. '()' → logprob: -17.876358032226562
    8. '(x' → logprob: -18.001358032226562
    9. '(

' → logprob: -18.126358032226562
    10. '(S' → logprob: -18.376358032226562

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007797269499860704
    2. ')
' → logprob: -7.250779628753662
    3. ' )' → logprob: -9.62578010559082
    4. '       ' → logprob: -13.50078010559082
    5. '   ' → logprob: -14.00078010559082
    6. ')

' → logprob: -14.37578010559082
    7. ' )
' → logprob: -15.37578010559082
    8. ')
' → logprob: -15.62578010559082
    9. '))' → logprob: -16.37578010559082
    10. ')return' → logprob: -16.50078010559082

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09620004892349243
    2. '   ' → logprob: -3.2211999893188477
    3. '
' → logprob: -3.9711999893188477
    4. 'out' → logprob: -4.096199989318848
    5. '<|end|>' → logprob: -4.846199989318848
    6. ' out' → logprob: -5.346199989318848
    7. '	out' → logprob: -6.721199989318848
    8. '        
' → logprob: -7.596199989318848
    9. '```' → logprob: -7.596199989318848
    10. '<|end|>' → logprob: -8.721199989318848

Token 100: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.006894750986248255
    2. ' out' → logprob: -5.131894588470459
    3. '       ' → logprob: -7.631894588470459
    4. '   ' → logprob: -7.756894588470459
    5. '	out' → logprob: -10.631895065307617
    6. '```' → logprob: -11.381895065307617
    7. ' ' → logprob: -12.006895065307617
    8. '
' → logprob: -12.631895065307617
    9. '        
' → logprob: -13.881895065307617
    10. '  ' → logprob: -13.881895065307617

Token 101: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.173704271830502e-06
    2. ' d' → logprob: -13.12500286102295
    3. '[d' → logprob: -14.62500286102295
    4. 's' → logprob: -15.12500286102295
    5. 't' → logprob: -16.125003814697266
    6. '```' → logprob: -16.250003814697266
    7. 'д' → logprob: -16.750003814697266
    8. '[' → logprob: -17.000003814697266
    9. '	d' → logprob: -17.125003814697266
    10. '[s' → logprob: -17.125003814697266

Token 102: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.9266199160483666e-05
    2. '[' → logprob: -11.500019073486328
    3. 's' → logprob: -11.625019073486328
    4. ' [' → logprob: -16.250019073486328
    5. '[t' → logprob: -18.625019073486328
    6. '```' → logprob: -18.750019073486328
    7. '[
' → logprob: -19.500019073486328
    8. '[u' → logprob: -19.750019073486328
    9. ' s' → logprob: -19.750019073486328
    10. '(s' → logprob: -20.125019073486328

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031220275908708572
    2. ']+=' → logprob: -3.5312201976776123
    3. ' ]' → logprob: -6.781220436096191
    4. '+=' → logprob: -8.406220436096191
    5. '+' → logprob: -9.656220436096191
    6. ' +=' → logprob: -11.031220436096191
    7. '+]' → logprob: -11.531220436096191
    8. ']+' → logprob: -11.656220436096191
    9. '[' → logprob: -12.156220436096191
    10. '']' → logprob: -12.406220436096191

Token 104: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07898221164941788
    2. ' +=' → logprob: -2.57898211479187
    3. '+' → logprob: -9.95398235321045
    4. '=' → logprob: -10.32898235321045
    5. ']+=' → logprob: -11.70398235321045
    6. '[' → logprob: -13.32898235321045
    7. ' ' → logprob: -14.57898235321045
    8. '++' → logprob: -14.57898235321045
    9. '+=(' → logprob: -14.82898235321045
    10. '+='' → logprob: -14.82898235321045

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '  ' → logprob: -17.001033782958984
    4. '   ' → logprob: -17.376033782958984
    5. '+' → logprob: -18.188533782958984
    6. 'len' → logprob: -18.688533782958984
    7. '<|end|>' → logprob: -18.938533782958984
    8. '2' → logprob: -19.001033782958984
    9. '１' → logprob: -19.313533782958984
    10. ' ' → logprob: -19.313533782958984

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '  ' → logprob: -18.25002670288086
    4. 'len' → logprob: -18.56252670288086
    5. '   ' → logprob: -18.68752670288086
    6. '１' → logprob: -19.12502670288086
    7. '-' → logprob: -19.56252670288086
    8. '2' → logprob: -19.81252670288086
    9. '+' → logprob: -19.81252670288086
    10. '<|end|>' → logprob: -20.25002670288086

Token 107: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011262495070695877
    2. '<|end|>' → logprob: -5.7612624168396
    3. ' 
' → logprob: -6.1362624168396
    4. '   ' → logprob: -6.2612624168396
    5. '    
' → logprob: -6.8862624168396
    6. '  
' → logprob: -7.1362624168396
    7. '\n' → logprob: -7.2612624168396
    8. '' → logprob: -7.8862624168396
    9. ' ' → logprob: -8.386262893676758
    10. '

' → logprob: -8.511262893676758

Token 108: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08706642687320709
    2. '   ' → logprob: -2.587066411972046
    3. '<|end|>' → logprob: -5.587066650390625
    4. '    
' → logprob: -5.837066650390625
    5. 'def' → logprob: -8.087066650390625
    6. '

' → logprob: -8.462066650390625
    7. ' 
' → logprob: -8.587066650390625
    8. '  
' → logprob: -8.587066650390625
    9. '
' → logprob: -9.337066650390625
    10. '```' → logprob: -9.712066650390625

Token 109: ' prob' (ID: 4921)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.42944470047950745
    2. 'queue' → logprob: -2.1794447898864746
    3. '   ' → logprob: -2.6794447898864746
    4. 'd' → logprob: -3.5544447898864746
    5. 'from' → logprob: -3.5544447898864746
    6. 'stack' → logprob: -3.5544447898864746
    7. 'Q' → logprob: -4.429444789886475
    8. ' ' → logprob: -4.554444789886475
    9. 'u' → logprob: -4.929444789886475
    10. 'v' → logprob: -5.054444789886475

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1218910217285156
    2. ' =' → logprob: -1.1218910217285156
    3. 'abilities' → logprob: -1.6218910217285156
    4. 's' → logprob: -2.3718910217285156
    5. 'as' → logprob: -4.871891021728516
    6. '[' → logprob: -4.996891021728516
    7. 'ability' → logprob: -5.121891021728516
    8. '=[]' → logprob: -5.121891021728516
    9. 'ab' → logprob: -5.246891021728516
    10. ')' → logprob: -5.621891021728516

Token 111: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20458492636680603
    2. ' [' → logprob: -1.7045849561691284
    3. '[out' → logprob: -6.454585075378418
    4. '[N' → logprob: -8.329585075378418
    5. '[len' → logprob: -8.329585075378418
    6. '[n' → logprob: -8.454585075378418
    7. '[s' → logprob: -8.454585075378418
    8. '[-' → logprob: -8.579585075378418
    9. 'out' → logprob: -10.204585075378418
    10. '[p' → logprob: -10.329585075378418

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.304415762424469
    2. '1' → logprob: -1.5544157028198242
    3. '[' → logprob: -3.179415702819824
    4. '[]' → logprob: -6.429415702819824
    5. ' ' → logprob: -6.429415702819824
    6. '[i' → logprob: -6.679415702819824
    7. '(' → logprob: -6.804415702819824
    8. ' [' → logprob: -7.054415702819824
    9. ']' → logprob: -7.554415702819824
    10. '[M' → logprob: -7.804415702819824

Token 113: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7041019797325134
    2. ']*' → logprob: -0.7041019797325134
    3. ']*(' → logprob: -4.829102039337158
    4. '.' → logprob: -6.454102039337158
    5. 'for' → logprob: -7.329102039337158
    6. ' ]' → logprob: -8.5791015625
    7. ' for' → logprob: -8.5791015625
    8. ']+' → logprob: -9.0791015625
    9. '/N' → logprob: -10.3291015625
    10. ' ' → logprob: -10.4541015625

Token 114: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.020780568942427635
    2. '_' → logprob: -3.895780563354492
    3. ' ' → logprob: -8.895780563354492
    4. ' i' → logprob: -9.770780563354492
    5. ' in' → logprob: -11.020780563354492
    6. ' range' → logprob: -11.270780563354492
    7. 'range' → logprob: -12.020780563354492
    8. '(' → logprob: -12.520780563354492
    9. '(_' → logprob: -13.770780563354492
    10. 'i' → logprob: -13.895780563354492

Token 115: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49406513571739197
    2. 'in' → logprob: -0.9940651655197144
    3. ' in' → logprob: -3.994065046310425
    4. ' range' → logprob: -6.619065284729004
    5. ' ' → logprob: -11.369065284729004
    6. 'ange' → logprob: -11.494065284729004
    7. '(range' → logprob: -12.619065284729004
    8. 'i' → logprob: -13.994065284729004
    9. ' xrange' → logprob: -14.244065284729004
    10. '_range' → logprob: -14.494065284729004

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06994076818227768
    2. ' range' → logprob: -2.6949408054351807
    3. 'neighbors' → logprob: -13.569940567016602
    4. '(range' → logprob: -14.319940567016602
    5. '	range' → logprob: -14.319940567016602
    6. ' ' → logprob: -14.569940567016602
    7. 'prob' → logprob: -14.944940567016602
    8. ' xrange' → logprob: -15.819940567016602
    9. 'rang' → logprob: -16.0699405670166
    10. 'ranges' → logprob: -16.1949405670166

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10731279850006104
    2. 'N' → logprob: -2.3573126792907715
    3. 'range' → logprob: -5.3573126792907715
    4. ' range' → logprob: -6.3573126792907715
    5. '(' → logprob: -8.35731315612793
    6. ')' → logprob: -8.60731315612793
    7. ' N' → logprob: -9.23231315612793
    8. '   ' → logprob: -9.98231315612793
    9. ' (' → logprob: -10.60731315612793
    10. '(range' → logprob: -11.73231315612793

Token 118: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2039625495672226
    2. ')]' → logprob: -2.078962564468384
    3. ')' → logprob: -2.828962564468384
    4. ']
' → logprob: -8.453962326049805
    5. ' ]' → logprob: -9.453962326049805
    6. '])' → logprob: -9.828962326049805
    7. ')
' → logprob: -11.703962326049805
    8. ']

' → logprob: -11.953962326049805
    9. ')]
' → logprob: -12.578962326049805
    10. ' )' → logprob: -12.578962326049805

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8395311832427979
    2. '
' → logprob: -1.2145311832427979
    3. 'prob' → logprob: -1.8395311832427979
    4. '<|end|>' → logprob: -2.839531183242798
    5. ' 
' → logprob: -3.464531183242798
    6. '    
' → logprob: -4.714530944824219
    7. '	pro' → logprob: -5.589530944824219
    8. ' ' → logprob: -6.089530944824219
    9. ' prob' → logprob: -6.839530944824219
    10. '  
' → logprob: -7.089530944824219

Token 120: ' exp' (ID: 2794)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.003986504394561052
    2. '   ' → logprob: -6.253986358642578
    3. 'for' → logprob: -7.253986358642578
    4. ' prob' → logprob: -7.878986358642578
    5. 'q' → logprob: -8.128986358642578
    6. '0' → logprob: -9.503986358642578
    7. '
' → logprob: -9.753986358642578
    8. 'pro' → logprob: -9.753986358642578
    9. ' for' → logprob: -9.878986358642578
    10. 'p' → logprob: -10.003986358642578

Token 121: ' =' (ID: 314)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.3588721454143524
    2. 'ect' → logprob: -1.9838721752166748
    3. ' =' → logprob: -2.858872175216675
    4. '_' → logprob: -3.608872175216675
    5. '_prob' → logprob: -3.608872175216675
    6. 'ects' → logprob: -3.858872175216675
    7. '=' → logprob: -4.733871936798096
    8. '=[]' → logprob: -5.983871936798096
    9. '[' → logprob: -6.733871936798096
    10. 'anded' → logprob: -6.858871936798096

Token 122: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.43204793334007263
    2. '[' → logprob: -1.057047963142395
    3. '[N' → logprob: -6.6820478439331055
    4. '0' → logprob: -7.0570478439331055
    5. '[-' → logprob: -8.557047843933105
    6. '[M' → logprob: -8.682047843933105
    7. '[out' → logprob: -8.807047843933105
    8. ' ' → logprob: -8.932047843933105
    9. ' [-' → logprob: -9.307047843933105
    10. '[int' → logprob: -9.557047843933105

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02897907979786396
    2. 'float' → logprob: -4.278979301452637
    3. ' ' → logprob: -5.403979301452637
    4. '1' → logprob: -5.528979301452637
    5. '-' → logprob: -6.153979301452637
    6. '[' → logprob: -6.653979301452637
    7. ' float' → logprob: -7.153979301452637
    8. ' [' → logprob: -7.778979301452637
    9. '[N' → logprob: -8.778979301452637
    10. ' -' → logprob: -8.903979301452637

Token 124: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6969135403633118
    2. 'for' → logprob: -0.6969135403633118
    3. '(N' → logprob: -6.071913719177246
    4. ']' → logprob: -6.946913719177246
    5. '(' → logprob: -9.196913719177246
    6. ' ' → logprob: -9.321913719177246
    7. '   ' → logprob: -9.321913719177246
    8. '	for' → logprob: -9.696913719177246
    9. ')' → logprob: -9.946913719177246
    10. ' (' → logprob: -10.571913719177246

Token 125: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01815556176006794
    2. '(N' → logprob: -4.018155574798584
    3. ' N' → logprob: -12.768155097961426
    4. '(' → logprob: -13.143155097961426
    5. '   ' → logprob: -14.768155097961426
    6. '	N' → logprob: -15.018155097961426
    7. ' (' → logprob: -17.393156051635742
    8. '
' → logprob: -17.893156051635742
    9. '_N' → logprob: -18.018156051635742
    10. '[N' → logprob: -18.268156051635742

Token 126: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22480575740337372
    2. '   ' → logprob: -2.3498058319091797
    3. '<|end|>' → logprob: -2.3498058319091797
    4. ' for' → logprob: -5.34980583190918
    5. '    
' → logprob: -5.84980583190918
    6. ' 
' → logprob: -7.09980583190918
    7. 'for' → logprob: -7.09980583190918
    8. '  
' → logprob: -8.09980583190918
    9. ' ' → logprob: -8.84980583190918
    10. '<|end|>' → logprob: -8.97480583190918

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12467628717422485
    2. 'queue' → logprob: -3.24967622756958
    3. 'for' → logprob: -3.49967622756958
    4. '
' → logprob: -3.74967622756958
    5. 'prob' → logprob: -4.62467622756958
    6. 'stack' → logprob: -5.12467622756958
    7. ' for' → logprob: -6.24967622756958
    8. 'q' → logprob: -6.37467622756958
    9. 'import' → logprob: -6.99967622756958
    10. '    
' → logprob: -7.12467622756958

Token 128: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.7655660510063171
    2. 'queue' → logprob: -1.140566110610962
    3. 'for' → logprob: -2.640566110610962
    4. 'from' → logprob: -3.015566110610962
    5. 'q' → logprob: -3.265566110610962
    6. '   ' → logprob: -3.640566110610962
    7. 'stack' → logprob: -4.015565872192383
    8. 'import' → logprob: -5.515565872192383
    9. 'Q' → logprob: -6.640565872192383
    10. 'deque' → logprob: -7.015565872192383

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04137029871344566
    2. '[N' → logprob: -3.291370391845703
    3. '[-' → logprob: -5.791370391845703
    4. '[s' → logprob: -9.541370391845703
    5. '[M' → logprob: -9.666370391845703
    6. '[:]' → logprob: -10.791370391845703
    7. '[
' → logprob: -11.291370391845703
    8. ']' → logprob: -11.416370391845703
    9. '[len' → logprob: -11.541370391845703
    10. '[n' → logprob: -11.791370391845703

Token 130: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25273528695106506
    2. '0' → logprob: -1.5027352571487427
    3. '1' → logprob: -8.377735137939453
    4. '[N' → logprob: -9.252735137939453
    5. '(N' → logprob: -9.377735137939453
    6. '-' → logprob: -9.502735137939453
    7. 's' → logprob: -9.877735137939453
    8. ' N' → logprob: -10.002735137939453
    9. ']' → logprob: -10.127735137939453
    10. 't' → logprob: -10.502735137939453

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010164948180317879
    2. ' ]' → logprob: -7.126016616821289
    3. ']=' → logprob: -8.501016616821289
    4. '=' → logprob: -12.376016616821289
    5. ' =' → logprob: -13.376016616821289
    6. ' ' → logprob: -14.251016616821289
    7. ']+=' → logprob: -14.251016616821289
    8. ')' → logprob: -14.751016616821289
    9. ']
' → logprob: -15.751016616821289
    10. '[' → logprob: -15.876016616821289

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11282485723495483
    2. ' =' → logprob: -2.2378249168395996
    3. '+=' → logprob: -13.737824440002441
    4. ' ' → logprob: -14.612824440002441
    5. ',' → logprob: -14.737824440002441
    6. ' +=' → logprob: -15.362824440002441
    7. '.' → logprob: -15.862824440002441
    8. '[' → logprob: -16.237825393676758
    9. ']=' → logprob: -16.862825393676758
    10. '.=' → logprob: -16.862825393676758

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -9.75006103515625
    3. '   ' → logprob: -13.50006103515625
    4. '  ' → logprob: -15.12506103515625
    5. 'Fraction' → logprob: -15.68756103515625
    6. '0' → logprob: -16.00006103515625
    7. '100' → logprob: -16.18756103515625
    8. 'Decimal' → logprob: -16.37506103515625
    9. '    ' → logprob: -16.75006103515625
    10. '(' → logprob: -17.18756103515625

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.897412822581828e-05
    2. '100' → logprob: -10.000068664550781
    3. '10' → logprob: -11.750068664550781
    4. 'Fraction' → logprob: -12.625068664550781
    5. ' ' → logprob: -13.000068664550781
    6. 'float' → logprob: -13.125068664550781
    7. '0' → logprob: -13.750068664550781
    8. 'Decimal' → logprob: -14.437568664550781
    9. '(' → logprob: -14.437568664550781
    10. '   ' → logprob: -14.562568664550781

Token 135: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008382661268115044
    2. '<|end|>' → logprob: -4.883382797241211
    3. ' 
' → logprob: -8.383382797241211
    4. '\n' → logprob: -9.008382797241211
    5. '  
' → logprob: -9.133382797241211
    6. '    
' → logprob: -9.383382797241211
    7. '	
' → logprob: -10.258382797241211
    8. '' → logprob: -10.258382797241211
    9. '<|end|>' → logprob: -10.508382797241211
    10. ' ' → logprob: -10.633382797241211

Token 136: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5160831212997437
    2. 'queue' → logprob: -1.7660831212997437
    3. '   ' → logprob: -2.391083240509033
    4. ' for' → logprob: -3.391083240509033
    5. '
' → logprob: -3.391083240509033
    6. 'stack' → logprob: -3.641083240509033
    7. 'from' → logprob: -4.516083240509033
    8. 'q' → logprob: -4.641083240509033
    9. 'import' → logprob: -4.766083240509033
    10. 'while' → logprob: -5.141083240509033

Token 137: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6634349226951599
    2. 'for' → logprob: -1.6634349822998047
    3. 'queue' → logprob: -1.9134349822998047
    4. 'stack' → logprob: -2.2884349822998047
    5. 'import' → logprob: -3.5384349822998047
    6. 'q' → logprob: -4.788434982299805
    7. 'while' → logprob: -5.163434982299805
    8. 'order' → logprob: -7.163434982299805
    9. 'Q' → logprob: -7.413434982299805
    10. 'que' → logprob: -7.788434982299805

Token 138: ' Style' (ID: 17602)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4860922396183014
    2. 'queue' → logprob: -1.986092209815979
    3. 'import' → logprob: -2.2360923290252686
    4. 'for' → logprob: -2.6110923290252686
    5. 'stack' → logprob: -3.6110923290252686
    6. 'while' → logprob: -3.8610923290252686
    7. 'q' → logprob: -5.1110920906066895
    8. ' from' → logprob: -5.8610920906066895
    9. ' queue' → logprob: -6.3610920906066895
    10. 'to' → logprob: -6.8610920906066895

Token 139: ' for' (ID: 395)
  Prédit: ' functional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functional' → logprob: -0.20483088493347168
    2. 'functional' → logprob: -2.2048308849334717
    3. 'de' → logprob: -3.7048308849334717
    4. ' python' → logprob: -5.079831123352051
    5. ' bfs' → logprob: -5.204831123352051
    6. ' dynamic' → logprob: -5.329831123352051
    7. ' declar' → logprob: -5.829831123352051
    8. 'python' → logprob: -6.329831123352051
    9. ' while' → logprob: -6.329831123352051
    10. ' BFS' → logprob: -6.454831123352051

Token 140: '/' (ID: 14)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6364400386810303
    2. ' node' → logprob: -1.1364400386810303
    3. ' neighbor' → logprob: -3.1364400386810303
    4. ' _' → logprob: -3.5114400386810303
    5. 'i' → logprob: -4.261440277099609
    6. ' t' → logprob: -4.511440277099609
    7. ' v' → logprob: -5.011440277099609
    8. ' s' → logprob: -5.136440277099609
    9. ' n' → logprob: -5.386440277099609
    10. 'neighbor' → logprob: -5.511440277099609

Token 141: 'while' (ID: 7032)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.455378770828247
    2. ' _' → logprob: -1.580378770828247
    3. '_' → logprob: -1.955378770828247
    4. ' ' → logprob: -1.955378770828247
    5. ' each' → logprob: -2.330378770828247
    6. 'each' → logprob: -2.455378770828247
    7. 'i' → logprob: -3.705378770828247
    8. ' while' → logprob: -3.830378770828247
    9. ' in' → logprob: -3.830378770828247
    10. 'e' → logprob: -4.705378532409668

Token 142: ' mél' (ID: 50838)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5112659931182861
    2. ' i' → logprob: -1.6362659931182861
    3. ' loop' → logprob: -1.8862659931182861
    4. 'i' → logprob: -1.8862659931182861
    5. 'for' → logprob: -2.261265993118286
    6. '<|end|>' → logprob: -3.136265993118286
    7. 's' → logprob: -3.511265993118286
    8. 'loop' → logprob: -3.886265993118286
    9. ' loops' → logprob: -3.886265993118286
    10. ' ' → logprob: -4.386265754699707

Token 143: 'angé' (ID: 119992)
  Prédit: 'angé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angé' → logprob: -0.10497824102640152
    2. 'ang' → logprob: -2.354978322982788
    3. 'ange' → logprob: -5.854978084564209
    4. 'anged' → logprob: -7.604978084564209
    5. 'é' → logprob: -7.854978084564209
    6. 'e' → logprob: -7.979978084564209
    7. '   ' → logprob: -8.979978561401367
    8. '```' → logprob: -10.104978561401367
    9. 'eng' → logprob: -10.167478561401367
    10. 'an' → logprob: -10.292478561401367

Token 144: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9198254346847534
    2. 'for' → logprob: -1.2948254346847534
    3. 'queue' → logprob: -2.419825553894043
    4. ' for' → logprob: -2.669825553894043
    5. 'while' → logprob: -2.669825553894043
    6. ' i' → logprob: -3.419825553894043
    7. 'q' → logprob: -3.794825553894043
    8. ' queue' → logprob: -4.294825553894043
    9. ' while' → logprob: -4.669825553894043
    10. '
' → logprob: -5.419825553894043

Token 145: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.2080156803131104
    2. '   ' → logprob: -1.4580156803131104
    3. 'while' → logprob: -1.8330156803131104
    4. ' queue' → logprob: -2.3330156803131104
    5. 'i' → logprob: -3.0830156803131104
    6. 'stack' → logprob: -3.0830156803131104
    7. 'q' → logprob: -3.2080156803131104
    8. 'for' → logprob: -3.9580156803131104
    9. ' while' → logprob: -4.083015441894531
    10. ' i' → logprob: -4.333015441894531

Token 146: ' idx' (ID: 14016)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9096537232398987
    2. 'while' → logprob: -1.534653663635254
    3. 'q' → logprob: -2.159653663635254
    4. 'from' → logprob: -2.659653663635254
    5. 'for' → logprob: -2.659653663635254
    6. 'stack' → logprob: -3.034653663635254
    7. 'import' → logprob: -3.534653663635254
    8. ' queue' → logprob: -4.034653663635254
    9. '   ' → logprob: -5.159653663635254
    10. 'i' → logprob: -5.409653663635254

Token 147: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025986621156334877
    2. '=' → logprob: -4.025986671447754
    3. 's' → logprob: -4.900986671447754
    4. '_queue' → logprob: -9.150986671447754
    5. ',' → logprob: -9.400986671447754
    6. 'es' → logprob: -9.525986671447754
    7. ' ' → logprob: -10.775986671447754
    8. 'queue' → logprob: -11.400986671447754
    9. '_to' → logprob: -11.525986671447754
    10. 'x' → logprob: -11.775986671447754

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06337365508079529
    2. 'N' → logprob: -2.938373565673828
    3. ' ' → logprob: -5.563373565673828
    4. '[' → logprob: -6.438373565673828
    5. '[N' → logprob: -6.563373565673828
    6. '[]' → logprob: -7.438373565673828
    7. ' N' → logprob: -7.563373565673828
    8. '-' → logprob: -8.688373565673828
    9. 'out' → logprob: -9.688373565673828
    10. 'deque' → logprob: -10.063373565673828

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010842557530850172
    2. '<|end|>' → logprob: -7.626084327697754
    3. ' while' → logprob: -8.376084327697754
    4. ' 
' → logprob: -8.751084327697754
    5. 'while' → logprob: -9.501084327697754
    6. '  
' → logprob: -10.376084327697754
    7. '    
' → logprob: -10.751084327697754
    8. '

' → logprob: -10.751084327697754
    9. '	while' → logprob: -11.501084327697754
    10. '
' → logprob: -11.626084327697754

Token 150: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010854477295652032
    2. ' while' → logprob: -8.00108528137207
    3. '<|end|>' → logprob: -8.12608528137207
    4. 'while' → logprob: -8.62608528137207
    5. ' 
' → logprob: -8.62608528137207
    6. '

' → logprob: -10.75108528137207
    7. '  
' → logprob: -10.87608528137207
    8. '
' → logprob: -11.50108528137207
    9. '    
' → logprob: -11.50108528137207
    10. '	while' → logprob: -12.00108528137207

Token 151: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0011901067337021232
    2. ' while' → logprob: -6.751190185546875
    3. '
' → logprob: -11.001190185546875
    4. '   ' → logprob: -13.501190185546875
    5. '	while' → logprob: -14.001190185546875
    6. 'for' → logprob: -15.251190185546875
    7. 'w' → logprob: -16.001190185546875
    8. 'wh' → logprob: -16.251190185546875
    9. 'import' → logprob: -16.751190185546875
    10. 'While' → logprob: -16.751190185546875

Token 152: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.019481368362903595
    2. 'idx' → logprob: -4.394481182098389
    3. ' prob' → logprob: -6.394481182098389
    4. ' True' → logprob: -6.394481182098389
    5. '(idx' → logprob: -6.769481182098389
    6. ' out' → logprob: -7.519481182098389
    7. 'prob' → logprob: -7.769481182098389
    8. ' any' → logprob: -8.144481658935547
    9. 'True' → logprob: -8.144481658935547
    10. ' ' → logprob: -8.269481658935547

Token 153: '<N' (ID: 60262)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8575414419174194
    2. ' <' → logprob: -0.9825414419174194
    3. '<N' → logprob: -1.6075414419174194
    4. '<len' → logprob: -7.357541561126709
    5. '<n' → logprob: -8.10754108428955
    6. ' ' → logprob: -10.23254108428955
    7. '<M' → logprob: -11.23254108428955
    8. '!=' → logprob: -11.48254108428955
    9. 'N' → logprob: -11.85754108428955
    10. '<=' → logprob: -12.23254108428955

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3841616213321686
    2. ' and' → logprob: -1.2591615915298462
    3. 'and' → logprob: -3.6341617107391357
    4. ':
' → logprob: -4.759161472320557
    5. ' :' → logprob: -10.384161949157715
    6. '   ' → logprob: -10.759161949157715
    7. ' or' → logprob: -11.009161949157715
    8. ':

' → logprob: -11.384161949157715
    9. '	and' → logprob: -12.009161949157715
    10. ',' → logprob: -12.884161949157715

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08828063309192657
    2. 'if' → logprob: -2.58828067779541
    3. '   ' → logprob: -5.21328067779541
    4. 'for' → logprob: -6.33828067779541
    5. ' if' → logprob: -6.46328067779541
    6. 'node' → logprob: -8.96328067779541
    7. ' for' → logprob: -9.46328067779541
    8. 'cur' → logprob: -9.71328067779541
    9. 'current' → logprob: -10.08828067779541
    10. '	if' → logprob: -10.33828067779541

Token 156: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6542714238166809
    2. 'if' → logprob: -1.2792713642120361
    3. 'u' → logprob: -2.404271364212036
    4. 'for' → logprob: -3.029271364212036
    5. 'node' → logprob: -4.404271602630615
    6. 's' → logprob: -4.529271602630615
    7. 'i' → logprob: -4.529271602630615
    8. 'cur' → logprob: -4.904271602630615
    9. 'v' → logprob: -5.029271602630615
    10. ' if' → logprob: -5.154271602630615

Token 157: ' =' (ID: 314)
  Prédit: 'rob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rob' → logprob: -0.07450312376022339
    2. ' =' → logprob: -3.324503183364868
    3. '=' → logprob: -3.949503183364868
    4. 'r' → logprob: -4.324502944946289
    5. 'prob' → logprob: -6.699502944946289
    6. 'op' → logprob: -7.449502944946289
    7. 'ob' → logprob: -7.949502944946289
    8. 'p' → logprob: -8.074502944946289
    9. 't' → logprob: -9.324502944946289
    10. 'ro' → logprob: -9.574502944946289

Token 158: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -2.522638169466518e-05
    2. ' prob' → logprob: -11.000024795532227
    3. 'idx' → logprob: -13.375024795532227
    4. '0' → logprob: -13.500024795532227
    5. 'neighbors' → logprob: -13.500024795532227
    6. 'pro' → logprob: -13.750024795532227
    7. '(prob' → logprob: -13.875024795532227
    8. '   ' → logprob: -14.125024795532227
    9. '_prob' → logprob: -15.000024795532227
    10. 'pop' → logprob: -15.375024795532227

Token 159: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -13.125004768371582
    3. 'idx' → logprob: -13.375004768371582
    4. '[id' → logprob: -14.625004768371582
    5. '[index' → logprob: -16.0000057220459
    6. '][' → logprob: -16.2500057220459
    7. ' [' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.3750057220459
    9. '```' → logprob: -16.5000057220459
    10. ' idx' → logprob: -16.6250057220459

Token 160: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006900905631482601
    2. ']
' → logprob: -5.006900787353516
    3. ']*' → logprob: -9.506900787353516
    4. ']/' → logprob: -9.631900787353516
    5. ' ]' → logprob: -11.381900787353516
    6. '];' → logprob: -11.381900787353516
    7. ']>' → logprob: -11.756900787353516
    8. ']
' → logprob: -11.881900787353516
    9. ']

' → logprob: -13.006900787353516
    10. ']+' → logprob: -13.756900787353516

Token 161: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6796088814735413
    2. 'for' → logprob: -1.0546088218688965
    3. '       ' → logprob: -2.3046088218688965
    4. '   ' → logprob: -3.8046088218688965
    5. 'e' → logprob: -4.4296088218688965
    6. ' for' → logprob: -6.4296088218688965
    7. 'l' → logprob: -6.6796088218688965
    8. 'out' → logprob: -6.6796088218688965
    9. ' if' → logprob: -6.8046088218688965
    10. 'exp' → logprob: -6.8046088218688965

Token 162: ' e' (ID: 319)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5302954912185669
    2. 'for' → logprob: -1.030295491218567
    3. 'out' → logprob: -4.030295372009277
    4. '       ' → logprob: -5.280295372009277
    5. 'neighbors' → logprob: -5.405295372009277
    6. 'prob' → logprob: -5.530295372009277
    7. 'e' (adapté à ' e') → logprob: -5.655295372009277
    8. 'd' → logprob: -5.905295372009277
    9. 'l' → logprob: -6.030295372009277
    10. 's' → logprob: -6.155295372009277

Token 163: ' =' (ID: 314)
  Prédit: 'xp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xp' → logprob: -0.848156750202179
    2. 'x' → logprob: -1.2231566905975342
    3. '=' → logprob: -1.7231566905975342
    4. ' =' → logprob: -2.348156690597534
    5. 'p' → logprob: -6.223156929016113
    6. '+=' → logprob: -7.473156929016113
    7. ' +=' → logprob: -9.098156929016113
    8. 'px' → logprob: -9.223156929016113
    9. '=x' → logprob: -9.473156929016113
    10. 'f' → logprob: -9.598156929016113

Token 164: ' exp' (ID: 2794)
  Prédit: ' exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exp' → logprob: -0.3485364615917206
    2. 'exp' → logprob: -1.223536491394043
    3. '       ' → logprob: -9.848536491394043
    4. '   ' → logprob: -10.973536491394043
    5. '	exp' → logprob: -12.223536491394043
    6. '    ' → logprob: -12.598536491394043
    7. '        ' → logprob: -12.723536491394043
    8. ' ' → logprob: -13.098536491394043
    9. '
' → logprob: -13.223536491394043
    10. 'prob' → logprob: -13.598536491394043

Token 165: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.6537622034084052e-05
    2. '[' → logprob: -11.25002670288086
    3. 'idx' → logprob: -11.50002670288086
    4. '[id' → logprob: -13.75002670288086
    5. 's' → logprob: -14.00002670288086
    6. '[
' → logprob: -15.12502670288086
    7. '[int' → logprob: -15.62502670288086
    8. '[index' → logprob: -15.75002670288086
    9. '[s' → logprob: -15.75002670288086
    10. ' idx' → logprob: -15.75002670288086

Token 166: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38749709725379944
    2. ']
' → logprob: -1.137497067451477
    3. ']
' → logprob: -8.387496948242188
    4. ']+' → logprob: -8.637496948242188
    5. '       ' → logprob: -9.262496948242188
    6. ']

' → logprob: -9.512496948242188
    7. '   ' → logprob: -11.137496948242188
    8. '
' → logprob: -11.887496948242188
    9. ']/' → logprob: -12.012496948242188
    10. ']*' → logprob: -12.137496948242188

Token 167: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10480821132659912
    2. 'for' → logprob: -2.7298083305358887
    3. '   ' → logprob: -3.4798083305358887
    4. 'out' → logprob: -6.979808330535889
    5. 'neighbors' → logprob: -7.354808330535889
    6. ' if' → logprob: -7.479808330535889
    7. 'count' → logprob: -8.47980785369873
    8. '       ' → logprob: -8.72980785369873
    9. 'children' → logprob: -8.85480785369873
    10. 'i' → logprob: -8.85480785369873

Token 168: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7319731712341309
    2. 'if' → logprob: -1.1069731712341309
    3. '       ' → logprob: -2.481973171234131
    4. 'd' (adapté à ' d') → logprob: -3.106973171234131
    5. 'out' → logprob: -3.856973171234131
    6. ' for' → logprob: -4.606973171234131
    7. 'l' → logprob: -5.356973171234131
    8. 'c' → logprob: -5.356973171234131
    9. ' if' → logprob: -5.481973171234131
    10. 'k' → logprob: -6.106973171234131

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23812298476696014
    2. '=' → logprob: -1.6131229400634766
    3. 'eg' → logprob: -4.863122940063477
    4. 'f' → logprob: -6.988122940063477
    5. 'e' → logprob: -7.113122940063477
    6. '=len' → logprob: -7.738122940063477
    7. '=f' → logprob: -7.863122940063477
    8. '   ' → logprob: -7.863122940063477
    9. 'x' → logprob: -7.988122940063477
    10. '=int' → logprob: -8.363122940063477

Token 170: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.003040101146325469
    2. ' out' → logprob: -6.003040313720703
    3. 'len' → logprob: -7.503040313720703
    4. 'max' → logprob: -12.253040313720703
    5. ' len' → logprob: -12.378040313720703
    6. ' ' → logprob: -14.003040313720703
    7. '0' → logprob: -14.128040313720703
    8. '   ' → logprob: -14.253040313720703
    9. '	out' → logprob: -14.753040313720703
    10. '(out' → logprob: -15.753040313720703

Token 171: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5048530030981055e-06
    2. '[idx' → logprob: -14.000001907348633
    3. 'idx' → logprob: -15.500001907348633
    4. '[' → logprob: -15.875001907348633
    5. 'д' → logprob: -16.250001907348633
    6. '[s' → logprob: -16.250001907348633
    7. '```' → logprob: -16.500001907348633
    8. 's' → logprob: -17.375001907348633
    9. 't' → logprob: -17.375001907348633
    10. ' d' → logprob: -17.375001907348633

Token 172: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.531315314830863e-06
    2. '[s' → logprob: -12.875003814697266
    3. 'idx' → logprob: -15.125003814697266
    4. 's' → logprob: -15.375003814697266
    5. '[' → logprob: -15.750003814697266
    6. ' idx' → logprob: -16.500003814697266
    7. '[id' → logprob: -16.625003814697266
    8. ' [' → logprob: -17.250003814697266
    9. '```' → logprob: -17.625003814697266
    10. '[index' → logprob: -17.875003814697266

Token 173: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6112242937088013
    2. ']' → logprob: -1.1112242937088013
    3. ')
' → logprob: -2.4862241744995117
    4. ')' → logprob: -3.1112241744995117
    5. ']

' → logprob: -8.861224174499512
    6. ')]' → logprob: -10.111224174499512
    7. '])' → logprob: -10.236224174499512
    8. '])
' → logprob: -10.486224174499512
    9. ']
' → logprob: -10.611224174499512
    10. '
' → logprob: -10.736224174499512

Token 174: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8352165222167969
    2. ' if' → logprob: -1.4602165222167969
    3. '
' → logprob: -1.8352165222167969
    4. '       ' → logprob: -2.085216522216797
    5. '<|end|>' → logprob: -3.585216522216797
    6. '   ' → logprob: -4.210216522216797
    7. '        
' → logprob: -6.085216522216797
    8. '	if' → logprob: -6.335216522216797
    9. '    
' → logprob: -6.960216522216797
    10. '\n' → logprob: -7.085216522216797

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023155689239501953
    2. ' if' → logprob: -4.398155689239502
    3. '   ' → logprob: -4.898155689239502
    4. 'i' → logprob: -6.398155689239502
    5. '       ' → logprob: -7.523155689239502
    6. '<|end|>' → logprob: -8.398155212402344
    7. '	if' → logprob: -8.523155212402344
    8. 'for' → logprob: -8.773155212402344
    9. '
' → logprob: -9.648155212402344
    10. ' 
' → logprob: -10.273155212402344

Token 176: ' p' (ID: 275)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.038327883929014206
    2. 'd' → logprob: -3.288327932357788
    3. ' ' → logprob: -8.788328170776367
    4. ' not' → logprob: -9.788328170776367
    5. '   ' → logprob: -10.663328170776367
    6. '  ' → logprob: -10.663328170776367
    7. ' p' → logprob: -11.913328170776367
    8. ' ' → logprob: -12.413328170776367
    9. '	d' → logprob: -12.725828170776367
    10. '>' → logprob: -13.038328170776367

Token 177: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0676542520523071
    2. ' >' → logprob: -1.0676542520523071
    3. '>' → logprob: -1.8176542520523071
    4. '==' → logprob: -2.0676541328430176
    5. ' !=' → logprob: -4.192654132843018
    6. '!=' → logprob: -5.567654132843018
    7. ':' → logprob: -6.317654132843018
    8. ' and' → logprob: -6.692654132843018
    9. '.' → logprob: -8.067654609680176
    10. ' ' → logprob: -8.567654609680176

Token 178: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6940447092056274
    2. ' and' → logprob: -1.5690447092056274
    3. '       ' → logprob: -2.444044589996338
    4. ' if' → logprob: -2.444044589996338
    5. ' for' → logprob: -3.069044589996338
    6. '<|end|>' → logprob: -3.569044589996338
    7. '   ' → logprob: -4.694044589996338
    8. ',' → logprob: -5.194044589996338
    9. '<|end|>' → logprob: -5.569044589996338
    10. '
' → logprob: -5.819044589996338

Token 179: ' m' (ID: 284)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6378251314163208
    2. 'for' → logprob: -1.1378251314163208
    3. '       ' → logprob: -2.7628250122070312
    4. ' if' → logprob: -3.1378250122070312
    5. 'if' → logprob: -3.5128250122070312
    6. 'prob' → logprob: -5.512825012207031
    7. 's' → logprob: -6.762825012207031
    8. 'next' → logprob: -7.012825012207031
    9. 'e' → logprob: -7.137825012207031
    10. '           ' → logprob: -7.262825012207031

Token 180: ' =' (ID: 314)
  Prédit: 'ean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ean' → logprob: -0.6756852269172668
    2. '=' → logprob: -2.050685167312622
    3. 'for' → logprob: -2.300685167312622
    4. ' =' → logprob: -2.300685167312622
    5. ' for' → logprob: -3.425685167312622
    6. 'e' → logprob: -3.425685167312622
    7. 'x' → logprob: -3.925685167312622
    8. 'f' → logprob: -4.425685405731201
    9. 'u' → logprob: -4.550685405731201
    10. 'ax' → logprob: -4.675685405731201

Token 181: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.9959653615951538
    2. 'e' → logprob: -1.4959653615951538
    3. ' p' → logprob: -2.1209654808044434
    4. ' ' → logprob: -2.6209654808044434
    5. 'p' → logprob: -2.7459654808044434
    6. '1' → logprob: -2.8709654808044434
    7. ' (' → logprob: -3.2459654808044434
    8. ' d' → logprob: -3.7459654808044434
    9. 'd' → logprob: -3.9959654808044434
    10. '(' → logprob: -5.370965480804443

Token 182: '/p' (ID: 8138)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.33476513624191284
    2. '/d' → logprob: -2.2097651958465576
    3. '+d' → logprob: -2.4597651958465576
    4. ' +' → logprob: -2.8347651958465576
    5. '/' → logprob: -4.3347649574279785
    6. ' /' → logprob: -5.0847649574279785
    7. 'd' → logprob: -5.4597649574279785
    8. '+
' → logprob: -6.8347649574279785
    9. '+p' → logprob: -7.3347649574279785
    10. 'p' → logprob: -7.3347649574279785

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3556887209415436
    2. ' 
' → logprob: -1.4806886911392212
    3. ' if' → logprob: -4.105688571929932
    4. '+' → logprob: -4.230688571929932
    5. '        
' → logprob: -5.480688571929932
    6. '
' → logprob: -5.730688571929932
    7. '*' → logprob: -5.730688571929932
    8. 'if' → logprob: -5.855688571929932
    9. ' *' → logprob: -5.980688571929932
    10. ' for' → logprob: -5.980688571929932

Token 184: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4975149631500244
    2. ' 
' → logprob: -1.7475149631500244
    3. '+' → logprob: -1.8725149631500244
    4. ' if' → logprob: -4.122514724731445
    5. ' +' → logprob: -4.997514724731445
    6. '*' → logprob: -5.122514724731445
    7. '           ' → logprob: -5.122514724731445
    8. '       ' → logprob: -5.497514724731445
    9. '        
' → logprob: -5.622514724731445
    10. '
' → logprob: -5.747514724731445

Token 185: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.190097451210022
    2. 'if' → logprob: -1.315097451210022
    3. ' for' → logprob: -1.565097451210022
    4. ' if' → logprob: -1.565097451210022
    5. '       ' → logprob: -6.065097332000732
    6. 'i' → logprob: -7.565097332000732
    7. 'r' → logprob: -7.940097332000732
    8. 's' → logprob: -7.940097332000732
    9. 'prob' → logprob: -7.940097332000732
    10. 'j' → logprob: -8.06509780883789

Token 186: ' j' (ID: 441)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -1.524818778038025
    2. 'v' → logprob: -1.899818778038025
    3. 'x' → logprob: -2.2748188972473145
    4. 'w' → logprob: -2.7748188972473145
    5. ' v' → logprob: -2.7748188972473145
    6. 'u' → logprob: -2.7748188972473145
    7. 'n' → logprob: -2.7748188972473145
    8. 'nx' → logprob: -3.0248188972473145
    9. 'j' → logprob: -3.5248188972473145
    10. ' u' → logprob: -3.8998188972473145

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016555791720747948
    2. 'in' → logprob: -4.1415557861328125
    3. ' ' → logprob: -7.6415557861328125
    4. '	in' → logprob: -10.641555786132812
    5. '  ' → logprob: -12.016555786132812
    6. ' ' → logprob: -12.516555786132812
    7. ',' → logprob: -13.891555786132812
    8. 's' → logprob: -14.016555786132812
    9. '_in' → logprob: -14.391555786132812
    10. ' i' → logprob: -14.516555786132812

Token 188: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.2533605992794037
    2. ' neighbors' → logprob: -1.503360629081726
    3. ' range' → logprob: -7.378360748291016
    4. 'range' → logprob: -7.753360748291016
    5. ' parents' → logprob: -8.628360748291016
    6. 'ne' → logprob: -9.378360748291016
    7. 'parents' → logprob: -9.503360748291016
    8. ' ' → logprob: -11.753360748291016
    9. '(ne' → logprob: -11.753360748291016
    10. 'neighbor' → logprob: -12.253360748291016

Token 189: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00016539888747502118
    2. '[' → logprob: -9.125164985656738
    3. '[s' → logprob: -10.750164985656738
    4. '[j' → logprob: -11.000164985656738
    5. ' [' → logprob: -11.500164985656738
    6. 'idx' → logprob: -13.375164985656738
    7. '[index' → logprob: -13.500164985656738
    8. '[i' → logprob: -13.625164985656738
    9. '[id' → logprob: -14.000164985656738
    10. ' idx' → logprob: -14.750164985656738

Token 190: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0048275114968419075
    2. ']' → logprob: -5.379827499389648
    3. ']:
' → logprob: -9.254827499389648
    4. ':' → logprob: -9.754827499389648
    5. '):' → logprob: -11.004827499389648
    6. ' ]' → logprob: -12.254827499389648
    7. ']>' → logprob: -12.254827499389648
    8. '],' → logprob: -12.379827499389648
    9. '"]:' → logprob: -12.629827499389648
    10. ']:
' → logprob: -12.754827499389648

Token 191: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004005742259323597
    2. 'prob' → logprob: -5.7540059089660645
    3. '           ' → logprob: -7.6290059089660645
    4. ':' → logprob: -9.754005432128906
    5. ' if' → logprob: -10.004005432128906
    6. ' prob' → logprob: -10.379005432128906
    7. '<|end|>' → logprob: -10.629005432128906
    8. 'if' → logprob: -10.754005432128906
    9. '                
' → logprob: -10.754005432128906
    10. '                   ' → logprob: -10.754005432128906

Token 192: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -0.5549018383026123
    2. '               ' → logprob: -0.9299018383026123
    3. '                   ' → logprob: -4.554902076721191
    4. ' prob' → logprob: -4.554902076721191
    5. '           ' → logprob: -4.929902076721191
    6. ' if' → logprob: -7.554902076721191
    7. 'p' → logprob: -7.804902076721191
    8. 'if' → logprob: -8.179902076721191
    9. '.' → logprob: -8.304902076721191
    10. ':' → logprob: -8.554902076721191

Token 193: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011886836728081107
    2. '][' → logprob: -7.0011887550354
    3. '[' → logprob: -8.376188278198242
    4. 'j' → logprob: -11.376188278198242
    5. '```' → logprob: -12.001188278198242
    6. ' [' → logprob: -12.376188278198242
    7. ')[' → logprob: -12.501188278198242
    8. '[
' → logprob: -12.626188278198242
    9. '[s' → logprob: -12.876188278198242
    10. '[i' → logprob: -13.126188278198242

Token 194: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.579548180103302
    2. ']' → logprob: -0.829548180103302
    3. ' ]' → logprob: -6.329548358917236
    4. ' +=' → logprob: -7.079548358917236
    5. '+=' → logprob: -7.454548358917236
    6. ']+' → logprob: -7.954548358917236
    7. ')' → logprob: -10.829547882080078
    8. '+' → logprob: -10.954547882080078
    9. '    ' → logprob: -12.829547882080078
    10. '```' → logprob: -13.204547882080078

Token 195: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04332675412297249
    2. ' +=' → logprob: -3.1683268547058105
    3. '=' → logprob: -8.668326377868652
    4. ']+=' → logprob: -9.293326377868652
    5. '+' → logprob: -10.293326377868652
    6. '+=(' → logprob: -11.918326377868652
    7. ' =' → logprob: -12.293326377868652
    8. '    ' → logprob: -12.668326377868652
    9. '       ' → logprob: -13.168326377868652
    10. ')' → logprob: -13.168326377868652

Token 196: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08058250695466995
    2. ' p' → logprob: -2.580582618713379
    3. 'prob' → logprob: -6.580582618713379
    4. '(p' → logprob: -9.455582618713379
    5. ' (' → logprob: -10.205582618713379
    6. '               ' → logprob: -10.580582618713379
    7. '   ' → logprob: -10.580582618713379
    8. '(' → logprob: -10.580582618713379
    9. '(prob' → logprob: -10.830582618713379
    10. ' prob' → logprob: -11.080582618713379

Token 197: '/d' (ID: 6662)
  Prédit: '/d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.0052248639985919
    2. '/' → logprob: -6.380224704742432
    3. 'd' → logprob: -6.380224704742432
    4. '/out' → logprob: -6.505224704742432
    5. ' /' → logprob: -8.25522518157959
    6. '*d' → logprob: -10.50522518157959
    7. 'out' → logprob: -11.63022518157959
    8. '*out' → logprob: -12.25522518157959
    9. '()/' → logprob: -12.63022518157959
    10. '               ' → logprob: -12.75522518157959

Token 198: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006743087433278561
    2. '       ' → logprob: -7.750674247741699
    3. '           ' → logprob: -8.7506742477417
    4. 'exp' → logprob: -10.1256742477417
    5. '   ' → logprob: -11.8756742477417
    6. '<|end|>' → logprob: -12.0006742477417
    7. 'prob' → logprob: -12.0006742477417
    8. '
' → logprob: -12.1256742477417
    9. '                   ' → logprob: -12.2506742477417
    10. ',' → logprob: -12.3756742477417

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022418468724936247
    2. '<|end|>' → logprob: -6.377241611480713
    3. '
' → logprob: -7.752241611480713
    4. '           ' → logprob: -10.627242088317871
    5. 'exp' → logprob: -10.877242088317871
    6. '                
' → logprob: -11.002242088317871
    7. '<|end|>' → logprob: -11.002242088317871
    8. '              ' → logprob: -12.002242088317871
    9. '       ' → logprob: -12.127242088317871
    10. 'e' → logprob: -12.627242088317871

Token 200: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' (adapté à ' exp') → logprob: -0.0008983621373772621
    2. ' exp' → logprob: -7.250898361206055
    3. '               ' → logprob: -9.375898361206055
    4. '           ' → logprob: -10.000898361206055
    5. '   ' → logprob: -10.625898361206055
    6. '       ' → logprob: -11.500898361206055
    7. '                   ' → logprob: -12.125898361206055
    8. ' ' → logprob: -12.250898361206055
    9. 'e' → logprob: -12.375898361206055
    10. '
' → logprob: -13.375898361206055

Token 201: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.6656825866666622e-05
    2. 'j' → logprob: -11.00002670288086
    3. '[' → logprob: -12.37502670288086
    4. '][' → logprob: -13.87502670288086
    5. ']' → logprob: -14.12502670288086
    6. '[i' → logprob: -14.12502670288086
    7. '```' → logprob: -14.37502670288086
    8. ' [' → logprob: -14.50002670288086
    9. '   ' → logprob: -15.50002670288086
    10. '[idx' → logprob: -15.50002670288086

Token 202: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18196040391921997
    2. '+=' → logprob: -1.8069603443145752
    3. ']+=' → logprob: -6.306960582733154
    4. ']' → logprob: -8.681960105895996
    5. '+' → logprob: -9.806960105895996
    6. '+=(' → logprob: -10.181960105895996
    7. ')' → logprob: -10.306960105895996
    8. ' ]' → logprob: -10.431960105895996
    9. '    ' → logprob: -10.806960105895996
    10. ' ' → logprob: -11.681960105895996

Token 203: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3871077299118042
    2. ' +=' → logprob: -1.1371077299118042
    3. '+' → logprob: -9.012107849121094
    4. '+=(' → logprob: -9.762107849121094
    5. ']+=' → logprob: -10.387107849121094
    6. '=' → logprob: -11.637107849121094
    7. ' +' → logprob: -12.137107849121094
    8. '+='' → logprob: -12.387107849121094
    9. '   ' → logprob: -13.762107849121094
    10. ' ' → logprob: -13.762107849121094

Token 204: ' p' (ID: 275)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4784031808376312
    2. '(m' → logprob: -2.103403091430664
    3. '(e' → logprob: -2.228403091430664
    4. ' e' → logprob: -3.353403091430664
    5. 'exp' → logprob: -3.603403091430664
    6. ' (' → logprob: -3.728403091430664
    7. 'm' → logprob: -3.728403091430664
    8. '(p' → logprob: -4.478403091430664
    9. '(' → logprob: -4.728403091430664
    10. '(exp' → logprob: -5.353403091430664

Token 205: '*(' (ID: 14793)
  Prédit: '/d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.08654661476612091
    2. '*' → logprob: -2.7115466594696045
    3. '*(' → logprob: -4.836546421051025
    4. '*d' → logprob: -5.086546421051025
    5. '*m' → logprob: -6.336546421051025
    6. ' *' → logprob: -8.086546897888184
    7. 'm' → logprob: -8.711546897888184
    8. '*j' → logprob: -10.461546897888184
    9. '/' → logprob: -11.086546897888184
    10. '*p' → logprob: -11.336546897888184

Token 206: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5319481492042542
    2. '1' → logprob: -1.2819480895996094
    3. '(m' → logprob: -2.6569480895996094
    4. '(' → logprob: -2.7819480895996094
    5. ' m' → logprob: -7.281948089599609
    6. ' (' → logprob: -7.656948089599609
    7. ')' → logprob: -8.40694808959961
    8. ' ' → logprob: -8.65694808959961
    9. '*(' → logprob: -8.65694808959961
    10. '
' → logprob: -8.78194808959961

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001982640940696001
    2. ' +' → logprob: -6.251982688903809
    3. ')+' → logprob: -10.376982688903809
    4. ')' → logprob: -11.751982688903809
    5. '1' → logprob: -12.626982688903809
    6. '+)' → logprob: -12.751982688903809
    7. '+j' → logprob: -13.501982688903809
    8. '+
' → logprob: -13.876982688903809
    9. '+(' → logprob: -14.126982688903809
    10. '()+' → logprob: -14.126982688903809

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000275040598353371
    2. ' ' → logprob: -8.375274658203125
    3. '
' → logprob: -11.125274658203125
    4. '   ' → logprob: -11.687774658203125
    5. '+' → logprob: -12.812774658203125
    6. '```' → logprob: -13.187774658203125
    7. '2' → logprob: -13.250274658203125
    8. '  ' → logprob: -13.437774658203125
    9. '(' → logprob: -13.562774658203125
    10. '           ' → logprob: -13.750274658203125

Token 209: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16880717873573303
    2. ')/' → logprob: -2.5438072681427
    3. '/d' → logprob: -2.6688072681427
    4. ' )' → logprob: -5.043807029724121
    5. '/' → logprob: -7.918807029724121
    6. ')
' → logprob: -8.418807029724121
    7. ' /' → logprob: -8.543807029724121
    8. ')d' → logprob: -10.293807029724121
    9. ')/(' → logprob: -10.543807029724121
    10. ')*' → logprob: -10.918807029724121

Token 210: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.246537173457909e-06
    2. ' d' → logprob: -13.000003814697266
    3. 'out' → logprob: -13.375003814697266
    4. '   ' → logprob: -16.000003814697266
    5. '/' → logprob: -16.000003814697266
    6. ' out' → logprob: -16.500003814697266
    7. '
' → logprob: -17.750003814697266
    8. ' ' → logprob: -18.125003814697266
    9. '	d' → logprob: -18.375003814697266
    10. '  ' → logprob: -18.500003814697266

Token 211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018358182162046432
    2. '
' → logprob: -4.14335823059082
    3. '           ' → logprob: -6.26835823059082
    4. '        
' → logprob: -8.51835823059082
    5. 'idx' → logprob: -9.14335823059082
    6. '   ' → logprob: -10.26835823059082
    7. '
' → logprob: -10.89335823059082
    8. '            
' → logprob: -11.14335823059082
    9. '    
' → logprob: -11.51835823059082
    10. '<|end|>' → logprob: -11.51835823059082

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005736560095101595
    2. '
' → logprob: -5.380736351013184
    3. '           ' → logprob: -7.380736351013184
    4. 'idx' → logprob: -8.505736351013184
    5. '        
' → logprob: -8.880736351013184
    6. ' idx' → logprob: -9.380736351013184
    7. '   ' → logprob: -10.755736351013184
    8. '<|end|>' → logprob: -11.630736351013184
    9. '    
' → logprob: -11.755736351013184
    10. '      ' → logprob: -12.130736351013184

Token 213: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0835188552737236
    2. '       ' → logprob: -2.5835187435150146
    3. 'idx' (adapté à ' idx') → logprob: -5.458518981933594
    4. ' idx' → logprob: -8.083518981933594
    5. '
' → logprob: -10.833518981933594
    6. '	idx' → logprob: -11.833518981933594
    7. '    
' → logprob: -11.958518981933594
    8. '  ' → logprob: -12.083518981933594
    9. ' ' → logprob: -12.583518981933594
    10. 'index' → logprob: -13.333518981933594

Token 214: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023514846339821815
    2. ' +=' → logprob: -3.773514747619629
    3. '+' → logprob: -8.273514747619629
    4. '=' → logprob: -11.398514747619629
    5. '+="' → logprob: -13.898514747619629
    6. ']+=' → logprob: -14.398514747619629
    7. '++' → logprob: -14.648514747619629
    8. '+='' → logprob: -14.773514747619629
    9. '<|end|>' → logprob: -15.523514747619629
    10. ' ' → logprob: -16.148515701293945

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.125015258789062
    4. '```' → logprob: -18.250015258789062
    5. '１' → logprob: -20.750015258789062
    6. '  ' → logprob: -21.375015258789062
    7. '`' → logprob: -22.250015258789062
    8. '۱' → logprob: -22.312515258789062
    9. '
' → logprob: -22.812515258789062
    10. '       ' → logprob: -23.250015258789062

Token 216: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2158345878124237
    2. '<|end|>' → logprob: -2.215834617614746
    3. 'main' → logprob: -3.215834617614746
    4. 'print' → logprob: -3.715834617614746
    5. 'return' → logprob: -5.465834617614746
    6. '#' → logprob: -5.465834617614746
    7. '
' → logprob: -5.465834617614746
    8. 'for' → logprob: -5.965834617614746
    9. ' if' → logprob: -6.840834617614746
    10. 'import' → logprob: -7.215834617614746

Token 217: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33183446526527405
    2. 'print' → logprob: -1.4568344354629517
    3. 'if' → logprob: -3.081834554672241
    4. 'for' → logprob: -6.206834316253662
    5. '   ' → logprob: -7.831834316253662
    6. '<|end|>' → logprob: -8.45683479309082
    7. '

' → logprob: -8.58183479309082
    8. '    
' → logprob: -8.83183479309082
    9. 'return' → logprob: -8.83183479309082
    10. '
' → logprob: -9.33183479309082

Token 218: ' pr' (ID: 550)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011178308632224798
    2. 'for' → logprob: -8.001117706298828
    3. 'if' → logprob: -8.251117706298828
    4. ' print' → logprob: -8.251117706298828
    5. '   ' → logprob: -8.501117706298828
    6. 'return' → logprob: -10.251117706298828
    7. '#' → logprob: -12.126117706298828
    8. ' for' → logprob: -12.376117706298828
    9. ' if' → logprob: -13.376117706298828
    10. '#print' → logprob: -13.501117706298828

Token 219: ' =' (ID: 314)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.3134562075138092
    2. 'int' → logprob: -1.3134561777114868
    3. '   ' → logprob: -9.938456535339355
    4. '#' → logprob: -10.563456535339355
    5. '[' → logprob: -11.438456535339355
    6. '```' → logprob: -11.438456535339355
    7. '
' → logprob: -11.563456535339355
    8. 'o' → logprob: -11.563456535339355
    9. 'obl' → logprob: -11.563456535339355
    10. 'oc' → logprob: -11.813456535339355

Token 220: ' [' (ID: 723)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.3268902599811554
    2. ' prob' → logprob: -2.201890230178833
    3. 'max' → logprob: -2.826890230178833
    4. 'exp' → logprob: -3.201890230178833
    5. ' max' → logprob: -3.701890230178833
    6. ' exp' → logprob: -4.076890468597412
    7. 'sum' → logprob: -4.201890468597412
    8. '1' → logprob: -4.951890468597412
    9. ' sum' → logprob: -6.201890468597412
    10. '(prob' → logprob: -7.576890468597412

Token 221: '0' (ID: 15)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.8226803541183472
    2. 'p' → logprob: -2.3226804733276367
    3. 'exp' → logprob: -2.8226804733276367
    4. 'round' → logprob: -2.8226804733276367
    5. 'f' → logprob: -3.0726804733276367
    6. '(' → logprob: -3.1976804733276367
    7. 'x' → logprob: -3.3226804733276367
    8. 'str' → logprob: -3.4476804733276367
    9. '(prob' → logprob: -3.5726804733276367
    10. 'float' → logprob: -3.8226804733276367

Token 222: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6081394553184509
    2. 'for' → logprob: -1.4831395149230957
    3. ']*' → logprob: -1.9831395149230957
    4. ' for' → logprob: -2.6081395149230957
    5. ']+' → logprob: -5.608139514923096
    6. '/N' → logprob: -5.733139514923096
    7. ']*(' → logprob: -5.858139514923096
    8. ')' → logprob: -6.358139514923096
    9. '.' → logprob: -6.608139514923096
    10. ',' → logprob: -6.858139514923096

Token 223: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.065608562901616e-05
    2. '(N' → logprob: -9.875081062316895
    3. 'len' → logprob: -11.625081062316895
    4. ' N' → logprob: -11.750081062316895
    5. '(' → logprob: -12.250081062316895
    6. 'n' → logprob: -12.750081062316895
    7. '   ' → logprob: -13.875081062316895
    8. ' ' → logprob: -13.875081062316895
    9. '1' → logprob: -14.750081062316895
    10. 'M' → logprob: -15.125081062316895

Token 224: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018834184855222702
    2. '<|end|>' → logprob: -4.393834114074707
    3. '   ' → logprob: -6.018834114074707
    4. 'for' → logprob: -6.893834114074707
    5. 'pr' → logprob: -7.643834114074707
    6. ' 
' → logprob: -7.768834114074707
    7. ' for' → logprob: -7.768834114074707
    8. '[' → logprob: -8.393834114074707
    9. '  
' → logprob: -8.393834114074707
    10. ')' → logprob: -8.393834114074707

Token 225: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10600601881742477
    2. 'pr' → logprob: -3.106005907058716
    3. 'print' → logprob: -3.481005907058716
    4. '   ' → logprob: -3.856005907058716
    5. '
' → logprob: -5.731006145477295
    6. ' for' → logprob: -7.856006145477295
    7. 'prob' → logprob: -9.231005668640137
    8. 'total' → logprob: -10.231005668640137
    9. '<|end|>' → logprob: -10.981005668640137
    10. 'result' → logprob: -11.106005668640137

Token 226: ' er' (ID: 1111)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1472623646259308
    2. 'pr' → logprob: -2.0222623348236084
    3. 'max' → logprob: -7.1472625732421875
    4. 'total' → logprob: -7.8972625732421875
    5. 'best' → logprob: -8.397262573242188
    6. 'prob' → logprob: -8.397262573242188
    7. 'import' → logprob: -8.647262573242188
    8. 'inv' → logprob: -8.647262573242188
    9. 'p' → logprob: -8.772262573242188
    10. 'sum' → logprob: -8.897262573242188

Token 227: ' =' (ID: 314)
  Prédit: 'ror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ror' → logprob: -0.6784371137619019
    2. '=[' → logprob: -2.3034372329711914
    3. '=' → logprob: -2.4284372329711914
    4. 'orr' → logprob: -2.6784372329711914
    5. ' =' → logprob: -2.6784372329711914
    6. 'r' → logprob: -2.8034372329711914
    7. 'or' → logprob: -3.0534372329711914
    8. '[' → logprob: -3.4284372329711914
    9. 'ro' → logprob: -4.553437232971191
    10. 'pr' → logprob: -5.553437232971191

Token 228: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.035216569900512695
    2. ' [' → logprob: -4.035216331481934
    3. '[N' → logprob: -4.285216331481934
    4. '[-' → logprob: -7.410216331481934
    5. 'exp' → logprob: -7.535216331481934
    6. '[e' → logprob: -7.910216331481934
    7. '[max' → logprob: -8.160216331481934
    8. '0' → logprob: -8.410216331481934
    9. '[n' → logprob: -8.535216331481934
    10. 'prob' → logprob: -8.785216331481934

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015612851129844785
    2. 'N' → logprob: -7.001561164855957
    3. 'float' → logprob: -7.626561164855957
    4. '1' → logprob: -9.376561164855957
    5. ']' → logprob: -11.126561164855957
    6. ' ' → logprob: -11.376561164855957
    7. '-' → logprob: -12.126561164855957
    8. 'None' → logprob: -12.251561164855957
    9. '   ' → logprob: -12.376561164855957
    10. 'max' → logprob: -12.626561164855957

Token 230: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0006403613369911909
    2. ']' → logprob: -7.375640392303467
    3. '*N' → logprob: -12.375639915466309
    4. 'for' → logprob: -13.000639915466309
    5. ']+' → logprob: -13.250639915466309
    6. ' ]' → logprob: -13.250639915466309
    7. ' for' → logprob: -13.625639915466309
    8. ']*(' → logprob: -13.625639915466309
    9. ')*' → logprob: -15.000639915466309
    10. 'N' → logprob: -15.125639915466309

Token 231: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.341087570646778e-05
    2. '(N' → logprob: -9.375093460083008
    3. '(' → logprob: -12.625093460083008
    4. 'range' → logprob: -13.500093460083008
    5. ' N' → logprob: -14.000093460083008
    6. 'len' → logprob: -14.125093460083008
    7. '[N' → logprob: -14.250093460083008
    8. 'n' → logprob: -14.500093460083008
    9. '[' → logprob: -15.750093460083008
    10. '(len' → logprob: -15.875093460083008

Token 232: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4907475411891937
    2. 'pr' → logprob: -0.9907475709915161
    3. '   ' → logprob: -4.240747451782227
    4. 'idx' → logprob: -6.865747451782227
    5. '
' → logprob: -7.240747451782227
    6. ' for' → logprob: -9.240747451782227
    7. 'import' → logprob: -9.365747451782227
    8. 'er' → logprob: -9.865747451782227
    9. 'from' → logprob: -10.365747451782227
    10. 'print' → logprob: -10.615747451782227

Token 233: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40174490213394165
    2. 'pr' → logprob: -1.6517448425292969
    3. '   ' → logprob: -2.026744842529297
    4. 'idx' → logprob: -5.026744842529297
    5. 'import' → logprob: -8.276744842529297
    6. 'er' → logprob: -9.401744842529297
    7. ' for' → logprob: -9.401744842529297
    8. 'print' → logprob: -9.526744842529297
    9. '
' → logprob: -10.026744842529297
    10. 'from' → logprob: -10.276744842529297

Token 234: ' pr' (ID: 550)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3397853970527649
    2. 'pr' (adapté à ' pr') → logprob: -1.3397853374481201
    3. 'idx' → logprob: -3.83978533744812
    4. '   ' → logprob: -6.964785575866699
    5. 'from' → logprob: -7.214785575866699
    6. 'er' → logprob: -7.214785575866699
    7. 'import' → logprob: -7.214785575866699
    8. 'rev' → logprob: -8.3397855758667
    9. 'i' → logprob: -8.4647855758667
    10. 'p' → logprob: -8.5897855758667

Token 235: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009998777881264687
    2. '[-' → logprob: -5.259998798370361
    3. '[:]' → logprob: -5.634998798370361
    4. '[N' → logprob: -8.009998321533203
    5. '=' → logprob: -8.259998321533203
    6. '[:' → logprob: -8.634998321533203
    7. ',' → logprob: -8.884998321533203
    8. '[::-' → logprob: -9.259998321533203
    9. ' =' → logprob: -9.384998321533203
    10. ' [' → logprob: -10.509998321533203

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2631987929344177
    2. ']' → logprob: -1.7631988525390625
    3. ']=' → logprob: -2.8881988525390625
    4. '=' → logprob: -5.5131988525390625
    5. ']+=' → logprob: -9.763198852539062
    6. ']=-' → logprob: -10.638198852539062
    7. ' =' → logprob: -10.888198852539062
    8. '-' → logprob: -10.888198852539062
    9. ' ]' → logprob: -11.013198852539062
    10. ')=' → logprob: -11.013198852539062

Token 237: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13386423885822296
    2. '=' → logprob: -2.508864164352417
    3. ']=' → logprob: -3.133864164352417
    4. ' =' → logprob: -8.008864402770996
    5. ' ]' → logprob: -11.008864402770996
    6. ']+=' → logprob: -11.383864402770996
    7. '],' → logprob: -11.883864402770996
    8. ',' → logprob: -12.508864402770996
    9. ')' → logprob: -13.258864402770996
    10. ']==' → logprob: -13.758864402770996

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038054123520851135
    2. ' =' → logprob: -3.2880542278289795
    3. '+=' → logprob: -11.788054466247559
    4. ',' → logprob: -12.913054466247559
    5. ' +=' → logprob: -14.038054466247559
    6. ' ' → logprob: -14.913054466247559
    7. '   ' → logprob: -15.163054466247559
    8. '=
' → logprob: -15.788054466247559
    9. '=True' → logprob: -16.038053512573242
    10. '=int' → logprob: -16.163053512573242

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. ' ' → logprob: -10.50003433227539
    3. 'prob' → logprob: -12.37503433227539
    4. '   ' → logprob: -13.25003433227539
    5. '[' → logprob: -16.18753433227539
    6. '0' → logprob: -16.50003433227539
    7. '  ' → logprob: -17.25003433227539
    8. 'pro' → logprob: -17.50003433227539
    9. '    ' → logprob: -17.93753433227539
    10. '`' → logprob: -18.00003433227539

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015169414109550416
    2. 'prob' → logprob: -9.000151634216309
    3. ' ' → logprob: -10.625151634216309
    4. '   ' → logprob: -13.000151634216309
    5. '0' → logprob: -15.000151634216309
    6. '  ' → logprob: -15.437651634216309
    7. 'pro' → logprob: -16.000152587890625
    8. ' prob' → logprob: -16.125152587890625
    9. '(prob' → logprob: -16.125152587890625
    10. '[' → logprob: -16.562652587890625

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2596757411956787
    2. '   ' → logprob: -1.2596757411956787
    3. 'er' → logprob: -1.2596757411956787
    4. 'for' → logprob: -2.2596757411956787
    5. ' for' → logprob: -3.2596757411956787
    6. 'exp' → logprob: -6.634675979614258
    7. '```' → logprob: -6.884675979614258
    8. 'e' → logprob: -7.259675979614258
    9. '<|end|>' → logprob: -7.884675979614258
    10. ' er' → logprob: -8.134675979614258

Token 242: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07952095568180084
    2. '<|end|>' → logprob: -2.5795209407806396
    3. '

' → logprob: -8.329521179199219
    4. '   ' → logprob: -8.704521179199219
    5. '<|end|>' → logprob: -9.579521179199219
    6. 'er' → logprob: -9.704521179199219
    7. '```' → logprob: -10.579521179199219
    8. ' er' → logprob: -11.454521179199219
    9. '    
' → logprob: -11.829521179199219
    10. '
' → logprob: -11.829521179199219

Token 243: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.024304231628775597
    2. 'for' → logprob: -3.899304151535034
    3. '   ' → logprob: -6.399304389953613
    4. 'rev' → logprob: -6.524304389953613
    5. '```' → logprob: -8.899304389953613
    6. 'i' → logprob: -9.149304389953613
    7. 'while' → logprob: -9.524304389953613
    8. 'reverse' → logprob: -9.774304389953613
    9. '
' → logprob: -10.024304389953613
    10. ' idx' → logprob: -10.399304389953613

Token 244: ' reverse' (ID: 18199)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2989252507686615
    2. 'for' → logprob: -1.4239252805709839
    3. 'rev' → logprob: -5.048925399780273
    4. ' for' → logprob: -5.298925399780273
    5. ' idx' → logprob: -6.048925399780273
    6. 'from' → logprob: -7.298925399780273
    7. 'j' → logprob: -7.298925399780273
    8. 'while' → logprob: -7.423925399780273
    9. 'reverse' → logprob: -7.673925399780273
    10. 'i' → logprob: -7.673925399780273

Token 245: ' avec' (ID: 3937)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4821472465991974
    2. ' idx' → logprob: -1.232147216796875
    3. ' for' → logprob: -2.982147216796875
    4. 'for' → logprob: -3.232147216796875
    5. '_idx' → logprob: -8.482147216796875
    6. 'i' → logprob: -8.857147216796875
    7. ' i' → logprob: -9.857147216796875
    8. 'while' → logprob: -9.982147216796875
    9. ' range' → logprob: -10.357147216796875
    10. ' while' → logprob: -10.357147216796875

Token 246: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.942947506904602
    2. ' for' → logprob: -1.567947506904602
    3. ' range' → logprob: -1.817947506904602
    4. 'range' → logprob: -1.942947506904602
    5. 'neighbors' → logprob: -3.9429473876953125
    6. ' idx' → logprob: -4.0679473876953125
    7. 'idx' → logprob: -4.3179473876953125
    8. 're' → logprob: -4.4429473876953125
    9. 'while' → logprob: -4.6929473876953125
    10. ' while' → logprob: -4.6929473876953125

Token 247: 'ation' (ID: 387)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7616263628005981
    2. ' =' → logprob: -1.2616263628005981
    3. 'idx' → logprob: -1.8866263628005981
    4. 'for' → logprob: -3.0116262435913086
    5. ' for' → logprob: -3.5116262435913086
    6. ' idx' → logprob: -4.511626243591309
    7. 'range' → logprob: -6.261626243591309
    8. '=-' → logprob: -6.636626243591309
    9. 'd' → logprob: -6.886626243591309
    10. ' range' → logprob: -7.511626243591309

Token 248: ' à' (ID: 1221)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6044795513153076
    2. ' for' → logprob: -1.4794795513153076
    3. 'for' → logprob: -2.1044795513153076
    4. ' idx' → logprob: -3.1044795513153076
    5. ' =' → logprob: -3.4794795513153076
    6. '=' → logprob: -3.9794795513153076
    7. '   ' → logprob: -5.229479789733887
    8. 'i' → logprob: -7.104479789733887
    9. 'rev' → logprob: -7.479479789733887
    10. ' i' → logprob: -7.854479789733887

Token 249: ' la' (ID: 557)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5101941823959351
    2. 'N' → logprob: -2.3851943016052246
    3. '1' → logprob: -2.3851943016052246
    4. '0' → logprob: -2.5101943016052246
    5. 'len' → logprob: -2.6351943016052246
    6. '-N' → logprob: -3.1351943016052246
    7. 'l' → logprob: -5.385194301605225
    8. '-n' → logprob: -5.760194301605225
    9. ' -' → logprob: -5.885194301605225
    10. '-l' → logprob: -5.885194301605225

Token 250: ' C' (ID: 363)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9119936227798462
    2. 'N' → logprob: -0.9119936227798462
    3. '1' → logprob: -1.7869936227798462
    4. 'len' → logprob: -4.536993503570557
    5. '0' → logprob: -4.786993503570557
    6. 'n' → logprob: -6.036993503570557
    7. 'part' → logprob: -6.411993503570557
    8. '-N' → logprob: -6.786993503570557
    9. 'from' → logprob: -7.536993503570557
    10. 'fin' → logprob: -7.786993503570557

Token 251: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35227325558662415
    2. ' for' → logprob: -1.2272732257843018
    3. '-' → logprob: -6.477273464202881
    4. ' N' → logprob: -8.102272987365723
    5. 'N' → logprob: -8.352272987365723
    6. '
' → logprob: -8.602272987365723
    7. 'range' → logprob: -8.602272987365723
    8. ' ' → logprob: -8.977272987365723
    9. 'idx' → logprob: -8.977272987365723
    10. '=' → logprob: -8.977272987365723

Token 252: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.430011123418808
    2. ' for' → logprob: -1.0550111532211304
    3. 'idx' → logprob: -7.18001127243042
    4. 'i' → logprob: -9.055010795593262
    5. '
' → logprob: -9.430010795593262
    6. '```' → logprob: -9.805010795593262
    7. 'x' → logprob: -10.055010795593262
    8. ' idx' → logprob: -10.055010795593262
    9. 'or' → logprob: -10.430010795593262
    10. ' =' → logprob: -10.680010795593262

Token 253: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004803430289030075
    2. ' for' → logprob: -5.379803657531738
    3. 'i' → logprob: -8.629803657531738
    4. ' i' → logprob: -13.129803657531738
    5. 'idx' → logprob: -13.879803657531738
    6. '```' → logprob: -14.629803657531738
    7. '   ' → logprob: -14.754803657531738
    8. '
' → logprob: -14.879803657531738
    9. 'from' → logprob: -15.629803657531738
    10. '	for' → logprob: -15.754803657531738

Token 254: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3652999699115753
    2. 'i' → logprob: -1.240299940109253
    3. ' idx' → logprob: -4.490300178527832
    4. 'idx' → logprob: -5.490300178527832
    5. 'k' → logprob: -8.115300178527832
    6. 'x' → logprob: -8.490300178527832
    7. ' k' → logprob: -8.615300178527832
    8. ' j' → logprob: -8.865300178527832
    9. 'j' → logprob: -9.115300178527832
    10. ' x' → logprob: -9.615300178527832

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10027135908603668
    2. 'in' → logprob: -2.350271463394165
    3. ' ' → logprob: -10.225271224975586
    4. 'range' → logprob: -10.850271224975586
    5. '  ' → logprob: -12.225271224975586
    6. ' range' → logprob: -14.100271224975586
    7. '   ' → logprob: -14.350271224975586
    8. '	in' → logprob: -14.475271224975586
    9. ' reversed' → logprob: -14.475271224975586
    10. '```' → logprob: -14.850271224975586

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007737346924841404
    2. ' range' → logprob: -4.882737159729004
    3. 're' → logprob: -9.007737159729004
    4. ' reversed' → logprob: -12.882737159729004
    5. '   ' → logprob: -13.757737159729004
    6. ' ' → logprob: -13.882737159729004
    7. 'rang' → logprob: -14.132737159729004
    8. ' xrange' → logprob: -14.257737159729004
    9. '(range' → logprob: -14.382737159729004
    10. '  ' → logprob: -14.382737159729004

Token 257: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00015598179015796632
    2. 'N' → logprob: -8.87515640258789
    3. '(' → logprob: -11.75015640258789
    4. '(len' → logprob: -12.00015640258789
    5. '(n' → logprob: -14.62515640258789
    6. '   ' → logprob: -14.75015640258789
    7. ' (' → logprob: -14.75015640258789
    8. '(-' → logprob: -15.00015640258789
    9. '	N' → logprob: -15.75015640258789
    10. ' N' → logprob: -16.25015640258789

Token 258: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004306692280806601
    2. ' -' → logprob: -7.750430583953857
    3. ' ' → logprob: -17.250431060791016
    4. '   ' → logprob: -18.000431060791016
    5. '  ' → logprob: -18.625431060791016
    6. '−' → logprob: -19.750431060791016
    7. ')-' → logprob: -19.875431060791016
    8. '```' → logprob: -20.125431060791016
    9. '-
' → logprob: -20.625431060791016
    10. '+' → logprob: -21.125431060791016

Token 259: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010530536528676748
    2. '1' → logprob: -6.8760528564453125
    3. '-' → logprob: -11.251052856445312
    4. ' ' → logprob: -12.001052856445312
    5. '   ' → logprob: -15.126052856445312
    6. '
' → logprob: -15.251052856445312
    7. '  ' → logprob: -15.626052856445312
    8. '3' → logprob: -15.876052856445312
    9. '```' → logprob: -16.501052856445312
    10. ' -' → logprob: -16.626052856445312

Token 260: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005965884309262037
    2. ' -' → logprob: -5.130965709686279
    3. ',' → logprob: -10.380966186523438
    4. ' ' → logprob: -13.005966186523438
    5. ',-' → logprob: -14.005966186523438
    6. '   ' → logprob: -14.130966186523438
    7. '2' → logprob: -14.130966186523438
    8. '1' → logprob: -14.255966186523438
    9. ' ,' → logprob: -14.505966186523438
    10. '
' → logprob: -16.005966186523438

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '2' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.250007629394531
    4. '-' → logprob: -17.62500762939453
    5. '   ' → logprob: -18.00000762939453
    6. ' -' → logprob: -18.37500762939453
    7. '0' → logprob: -18.37500762939453
    8. '
' → logprob: -18.62500762939453
    9. '

' → logprob: -18.75000762939453
    10. 'len' → logprob: -18.87500762939453

Token 262: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.6113311052322388
    2. '-' → logprob: -1.3613311052322388
    3. ',' → logprob: -1.6113311052322388
    4. '1' → logprob: -7.361330986022949
    5. ' -' → logprob: -7.861330986022949
    6. ' ,-' → logprob: -8.11133098602295
    7. ' ,' → logprob: -9.36133098602295
    8. '   ' → logprob: -10.86133098602295
    9. ' ' → logprob: -13.61133098602295
    10. '```' → logprob: -13.73633098602295

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.750003814697266
    3. '2' → logprob: -15.375003814697266
    4. '   ' → logprob: -15.812503814697266
    5. '```' → logprob: -15.937503814697266
    6. '１' → logprob: -16.312503814697266
    7. '
' → logprob: -16.437503814697266
    8. '۱' → logprob: -16.687503814697266
    9. '১' → logprob: -17.000003814697266
    10. ',' → logprob: -17.250003814697266

Token 264: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03854585066437721
    2. '):' → logprob: -3.913545846939087
    3. '):
' → logprob: -4.163546085357666
    4. ',-' → logprob: -6.913546085357666
    5. ' -' → logprob: -7.538546085357666
    6. '   ' → logprob: -7.538546085357666
    7. '):-' → logprob: -9.038545608520508
    8. ')' → logprob: -9.913545608520508
    9. ',' → logprob: -11.038545608520508
    10. '  ' → logprob: -11.663545608520508

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018985291244462132
    2. '   ' → logprob: -7.001898765563965
    3. ' if' → logprob: -7.876898765563965
    4. 's' → logprob: -8.626898765563965
    5. ' s' → logprob: -8.751898765563965
    6. ' for' → logprob: -9.501898765563965
    7. 'd' → logprob: -10.126898765563965
    8. ' j' → logprob: -10.251898765563965
    9. '    ' → logprob: -10.626898765563965
    10. 'if' → logprob: -10.876898765563965

Token 266: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21299070119857788
    2. ' for' → logprob: -2.5879907608032227
    3. 'p' (adapté à ' p') → logprob: -2.7129907608032227
    4. 'd' → logprob: -4.337990760803223
    5. 'if' → logprob: -4.462990760803223
    6. '       ' → logprob: -4.837990760803223
    7. '           ' → logprob: -4.837990760803223
    8. ' p' → logprob: -5.337990760803223
    9. '   ' → logprob: -6.587990760803223
    10. ' if' → logprob: -6.837990760803223

Token 267: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03814098238945007
    2. ' =' → logprob: -3.2881410121917725
    3. '=p' → logprob: -9.413141250610352
    4. 'p' → logprob: -11.413141250610352
    5. '=i' → logprob: -12.913141250610352
    6. ',' → logprob: -13.288141250610352
    7. ',p' → logprob: -14.788141250610352
    8. 'i' → logprob: -14.788141250610352
    9. 'v' → logprob: -15.038141250610352
    10. '   ' → logprob: -15.038141250610352

Token 268: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.3869388997554779
    2. ' pr' → logprob: -1.1369389295578003
    3. '   ' → logprob: -10.13693904876709
    4. '	pr' → logprob: -10.63693904876709
    5. '(pr' → logprob: -13.76193904876709
    6. 'er' → logprob: -13.88693904876709
    7. 'pro' → logprob: -14.13693904876709
    8. '       ' → logprob: -15.38693904876709
    9. '_pr' → logprob: -15.76193904876709
    10. ' ' → logprob: -15.88693904876709

Token 269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -14.000001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '[idx' → logprob: -15.500001907348633
    5. ' [' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '[j' → logprob: -16.875001907348633
    8. 's' → logprob: -17.750001907348633
    9. '[p' → logprob: -17.750001907348633
    10. '=' → logprob: -17.750001907348633

Token 270: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.025748135522007942
    2. ']' → logprob: -3.7757482528686523
    3. ')
' → logprob: -6.025748252868652
    4. ')' → logprob: -9.900748252868652
    5. ']
' → logprob: -10.525748252868652
    6. '       ' → logprob: -13.150748252868652
    7. ' ]
' → logprob: -13.650748252868652
    8. '])
' → logprob: -14.025748252868652
    9. ']

' → logprob: -14.275748252868652
    10. '   ' → logprob: -14.775748252868652

Token 271: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.01733098365366459
    2. ' e' → logprob: -4.267331123352051
    3. '       ' → logprob: -5.767331123352051
    4. '   ' → logprob: -11.39233112335205
    5. 'if' → logprob: -11.64233112335205
    6. '           ' → logprob: -12.39233112335205
    7. ' if' → logprob: -12.89233112335205
    8. '	e' → logprob: -12.89233112335205
    9. ' ' → logprob: -13.76733112335205
    10. 'for' → logprob: -14.14233112335205

Token 272: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.00047142591211013496
    2. '       ' → logprob: -8.375471115112305
    3. 'd' → logprob: -8.875471115112305
    4. ' e' → logprob: -9.375471115112305
    5. '   ' → logprob: -11.875471115112305
    6. 'if' → logprob: -12.625471115112305
    7. '           ' → logprob: -12.625471115112305
    8. 'r' → logprob: -14.125471115112305
    9. '        ' → logprob: -15.125471115112305
    10. 'for' → logprob: -15.125471115112305

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193166732788086
    2. ' =' → logprob: -1.5019316673278809
    3. '=e' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.126932144165039
    5. '   ' → logprob: -15.376932144165039
    6. '=i' → logprob: -15.501932144165039
    7. ',' → logprob: -15.751932144165039
    8. 'e' → logprob: -16.37693214416504
    9. '=
' → logprob: -16.37693214416504
    10. '=p' → logprob: -16.75193214416504

Token 274: ' er' (ID: 1111)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0002614550176076591
    2. ' er' → logprob: -8.250261306762695
    3. 'ern' → logprob: -16.250261306762695
    4. '   ' → logprob: -16.750261306762695
    5. 'pr' → logprob: -17.750261306762695
    6. 'erm' → logprob: -18.375261306762695
    7. '       ' → logprob: -19.125261306762695
    8. 'erb' → logprob: -19.125261306762695
    9. 'ER' → logprob: -19.375261306762695
    10. ' ' → logprob: -20.000261306762695

Token 275: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -16.625
    4. '[idx' → logprob: -17.625
    5. '```' → logprob: -18.125
    6. '[I' → logprob: -18.875
    7. '[j' → logprob: -19.0
    8. '[
' → logprob: -19.125
    9. 's' → logprob: -19.375
    10. '
' → logprob: -19.875

Token 276: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4297691583633423
    2. ']
' → logprob: -1.0547691583633423
    3. '       ' → logprob: -6.929769039154053
    4. ']
' → logprob: -10.304769515991211
    5. ')' → logprob: -11.054769515991211
    6. ')
' → logprob: -12.054769515991211
    7. '<|end|>' → logprob: -12.304769515991211
    8. ']

' → logprob: -12.304769515991211
    9. 'd' → logprob: -12.929769515991211
    10. '   ' → logprob: -13.179769515991211

Token 277: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6044872403144836
    2. '       ' → logprob: -0.8544872403144836
    3. ' d' → logprob: -3.604487180709839
    4. '   ' → logprob: -8.229487419128418
    5. 'out' → logprob: -8.854487419128418
    6. 's' → logprob: -9.104487419128418
    7. 'for' → logprob: -9.229487419128418
    8. ' for' → logprob: -9.854487419128418
    9. ' out' → logprob: -9.979487419128418
    10. '```' → logprob: -10.229487419128418

Token 278: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0364115945994854
    2. 'for' → logprob: -3.9114115238189697
    3. '       ' → logprob: -4.536411762237549
    4. 'out' → logprob: -6.911411762237549
    5. 'parents' → logprob: -6.911411762237549
    6. ' for' → logprob: -7.036411762237549
    7. 'if' (adapté à ' if') → logprob: -7.161411762237549
    8. ' d' → logprob: -7.286411762237549
    9. 'neighbors' → logprob: -8.53641128540039
    10. '   ' → logprob: -8.91141128540039

Token 279: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008055794751271605
    2. ' p' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.125805854797363
    4. 'pr' → logprob: -15.125805854797363
    5. ' ' → logprob: -16.750804901123047
    6. 'i' → logprob: -17.500804901123047
    7. '       ' → logprob: -17.813304901123047
    8. 'e' → logprob: -18.188304901123047
    9. '           ' → logprob: -18.313304901123047
    10. ' not' → logprob: -18.500804901123047

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03419848531484604
    2. ':
' → logprob: -4.03419828414917
    3. '>' → logprob: -4.40919828414917
    4. '==' → logprob: -6.03419828414917
    5. ' and' → logprob: -8.159198760986328
    6. ' ==' → logprob: -8.159198760986328
    7. '!=' → logprob: -8.284198760986328
    8. '<|end|>' → logprob: -8.534198760986328
    9. ' >' → logprob: -9.659198760986328
    10. ' !=' → logprob: -9.909198760986328

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30456241965293884
    2. 'd' → logprob: -1.4295624494552612
    3. ' d' → logprob: -4.929562568664551
    4. 'm' → logprob: -5.179562568664551
    5. ' for' → logprob: -5.304562568664551
    6. 'for' → logprob: -5.804562568664551
    7. 's' → logprob: -7.929562568664551
    8. ' m' → logprob: -8.30456256866455
    9. 'j' → logprob: -8.30456256866455
    10. 'n' → logprob: -8.92956256866455

Token 282: ' m' (ID: 284)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07739615440368652
    2. ' d' → logprob: -2.8273961544036865
    3. '               ' → logprob: -5.327396392822266
    4. 'for' → logprob: -5.577396392822266
    5. ' for' → logprob: -5.702396392822266
    6. 'k' → logprob: -7.577396392822266
    7. 'j' → logprob: -8.202396392822266
    8. '           ' → logprob: -8.202396392822266
    9. 'dp' → logprob: -8.202396392822266
    10. 'q' → logprob: -8.577396392822266

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10059946030378342
    2. '=' → logprob: -2.350599527359009
    3. '=m' → logprob: -8.22559928894043
    4. '           ' → logprob: -10.22559928894043
    5. '=(' → logprob: -10.72559928894043
    6. '=d' → logprob: -11.35059928894043
    7. '=e' → logprob: -11.72559928894043
    8. ' ' → logprob: -11.85059928894043
    9. '=p' → logprob: -11.97559928894043
    10. '   ' → logprob: -11.97559928894043

Token 284: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04865765571594238
    2. ' e' → logprob: -3.0486576557159424
    3. '   ' → logprob: -10.173657417297363
    4. ' ' → logprob: -11.048657417297363
    5. '(e' → logprob: -12.548657417297363
    6. ' (' → logprob: -12.923657417297363
    7. '
' → logprob: -13.548657417297363
    8. '           ' → logprob: -13.673657417297363
    9. '1' → logprob: -13.673657417297363
    10. '0' → logprob: -13.798657417297363

Token 285: '/p' (ID: 8138)
  Prédit: '/p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/p' → logprob: -0.002140028402209282
    2. '/' → logprob: -6.627140045166016
    3. ' /' → logprob: -7.377140045166016
    4. 'p' → logprob: -8.627140045166016
    5. '/pr' → logprob: -12.627140045166016
    6. '/
' → logprob: -13.127140045166016
    7. '/(' → logprob: -13.877140045166016
    8. '/pi' → logprob: -14.127140045166016
    9. '(p' → logprob: -15.377140045166016
    10. '[p' → logprob: -15.377140045166016

Token 286: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10699065029621124
    2. 'for' → logprob: -2.8569905757904053
    3. ' for' → logprob: -3.2319905757904053
    4. 'd' → logprob: -5.856990814208984
    5. '
' → logprob: -7.356990814208984
    6. '            
' → logprob: -7.981990814208984
    7. '```' → logprob: -8.356990814208984
    8. '               ' → logprob: -8.606990814208984
    9. '       ' → logprob: -9.106990814208984
    10. '            ' → logprob: -10.356990814208984

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9595163464546204
    2. 'd' → logprob: -1.2095162868499756
    3. 'for' → logprob: -1.5845162868499756
    4. ' for' → logprob: -2.2095162868499756
    5. '       ' → logprob: -6.459516525268555
    6. ' d' → logprob: -6.709516525268555
    7. '               ' → logprob: -8.084516525268555
    8. '   ' → logprob: -8.459516525268555
    9. '```' → logprob: -8.834516525268555
    10. '            
' → logprob: -9.334516525268555

Token 288: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.29622799158096313
    2. 'for' (adapté à ' for') → logprob: -1.4212279319763184
    3. ' for' → logprob: -4.921227931976318
    4. 'c' → logprob: -5.796227931976318
    5. '               ' → logprob: -6.171227931976318
    6. ' d' → logprob: -6.671227931976318
    7. '           ' → logprob: -7.296227931976318
    8. 'l' → logprob: -8.671228408813477
    9. 'k' → logprob: -8.796228408813477
    10. '   ' → logprob: -9.296228408813477

Token 289: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22717848420143127
    2. 'k' → logprob: -2.1021785736083984
    3. 'x' → logprob: -3.6021785736083984
    4. 'v' → logprob: -3.8521785736083984
    5. 's' → logprob: -4.602178573608398
    6. ' j' → logprob: -4.977178573608398
    7. 'f' → logprob: -5.352178573608398
    8. 'u' → logprob: -5.477178573608398
    9. 'p' → logprob: -6.227178573608398
    10. ' k' → logprob: -7.227178573608398

Token 290: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4752079248428345
    2. 'in' → logprob: -0.9752079248428345
    3. 'parents' → logprob: -8.100208282470703
    4. 'j' → logprob: -8.350208282470703
    5. 'parent' → logprob: -8.975208282470703
    6. 's' → logprob: -9.225208282470703
    7. '           ' → logprob: -9.225208282470703
    8. '               ' → logprob: -9.850208282470703
    9. '   ' → logprob: -10.100208282470703
    10. 'import' → logprob: -10.850208282470703

Token 291: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.011588606983423233
    2. ' parents' → logprob: -4.7615885734558105
    3. '   ' → logprob: -6.5115885734558105
    4. '
' → logprob: -7.2615885734558105
    5. '  ' → logprob: -8.761589050292969
    6. '.parents' → logprob: -9.386589050292969
    7. ' in' → logprob: -9.636589050292969
    8. 'in' → logprob: -10.011589050292969
    9. '           ' → logprob: -10.136589050292969
    10. '[' → logprob: -10.136589050292969

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.500000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[j' → logprob: -15.500000953674316
    5. 'i' → logprob: -16.000001907348633
    6. '[idx' → logprob: -16.500001907348633
    7. '[I' → logprob: -17.375001907348633
    8. '[
' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '[index' → logprob: -19.000001907348633

Token 293: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.31427934765815735
    2. ']:' → logprob: -1.314279317855835
    3. ']' → logprob: -8.189279556274414
    4. ':' → logprob: -8.564279556274414
    5. ':
' → logprob: -8.689279556274414
    6. '           ' → logprob: -9.064279556274414
    7. ']:
' → logprob: -9.189279556274414
    8. '               ' → logprob: -9.939279556274414
    9. ']:

' → logprob: -10.189279556274414
    10. '       ' → logprob: -10.689279556274414

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002448893792461604
    2. '           ' → logprob: -10.000245094299316
    3. '```' → logprob: -10.125245094299316
    4. '<|end|>' → logprob: -10.125245094299316
    5. 'pr' → logprob: -10.750245094299316
    6. ' pr' → logprob: -11.000245094299316
    7. '       ' → logprob: -11.250245094299316
    8. '              ' → logprob: -11.250245094299316
    9. '                
' → logprob: -11.375245094299316
    10. '                   ' → logprob: -11.875245094299316

Token 295: ' pr' (ID: 550)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' (adapté à ' pr') → logprob: -0.9470974802970886
    2. '               ' → logprob: -1.0720975399017334
    3. ' pr' → logprob: -1.4470975399017334
    4. '                   ' → logprob: -3.5720975399017334
    5. '           ' → logprob: -5.322097301483154
    6. '   ' → logprob: -7.197097301483154
    7. '       ' → logprob: -8.197097778320312
    8. '```' → logprob: -8.572097778320312
    9. '                       ' → logprob: -9.322097778320312
    10. 'p' → logprob: -9.572097778320312

Token 296: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00010223194840364158
    2. 'j' → logprob: -9.375102043151855
    3. '[' → logprob: -11.625102043151855
    4. '][' → logprob: -12.750102043151855
    5. '               ' → logprob: -13.875102043151855
    6. '```' → logprob: -14.250102043151855
    7. '[s' → logprob: -14.375102043151855
    8. ' [' → logprob: -14.500102043151855
    9. ']' → logprob: -15.000102043151855
    10. '                   ' → logprob: -15.250102043151855

Token 297: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.049473848193883896
    2. ' +=' → logprob: -3.174473762512207
    3. ']+=' → logprob: -5.049473762512207
    4. '           ' → logprob: -11.674473762512207
    5. '            ' → logprob: -11.799473762512207
    6. '+=(' → logprob: -12.549473762512207
    7. '        ' → logprob: -12.674473762512207
    8. ']' → logprob: -12.924473762512207
    9. '               ' → logprob: -12.924473762512207
    10. ')' → logprob: -13.299473762512207

Token 298: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.002233640057966113
    2. ' +=' → logprob: -6.127233505249023
    3. ']+=' → logprob: -10.002233505249023
    4. '+' → logprob: -13.877233505249023
    5. '           ' → logprob: -14.252233505249023
    6. '+=(' → logprob: -14.752233505249023
    7. '       ' → logprob: -15.252233505249023
    8. '>' → logprob: -15.377233505249023
    9. '          ' → logprob: -15.502233505249023
    10. '        ' → logprob: -15.502233505249023

Token 299: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002478273818269372
    2. ' p' → logprob: -6.002478122711182
    3. '   ' → logprob: -13.75247859954834
    4. 'pr' → logprob: -14.62747859954834
    5. ' ' → logprob: -15.25247859954834
    6. '           ' → logprob: -16.002477645874023
    7. '0' → logprob: -16.439977645874023
    8. '       ' → logprob: -16.502477645874023
    9. '(p' → logprob: -16.564977645874023
    10. 'prob' → logprob: -16.689977645874023

Token 300: '/out' (ID: 91234)
  Prédit: '/out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/out' → logprob: -0.006438722368329763
    2. '/' → logprob: -5.131438732147217
    3. '/d' → logprob: -8.006438255310059
    4. ' /' → logprob: -9.006438255310059
    5. '/(' → logprob: -10.256438255310059
    6. '*out' → logprob: -11.506438255310059
    7. 'out' → logprob: -13.256438255310059
    8. '               ' → logprob: -13.756438255310059
    9. '/ou' → logprob: -13.881438255310059
    10. '/pr' → logprob: -14.006438255310059

Token 301: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0280383548888494e-06
    2. 's' → logprob: -15.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. 'j' → logprob: -16.250001907348633
    5. ' d' → logprob: -16.625001907348633
    6. '[out' → logprob: -17.062501907348633
    7. 'o' → logprob: -17.125001907348633
    8. '[' → logprob: -17.250001907348633
    9. 'д' → logprob: -17.250001907348633
    10. 'deg' → logprob: -17.375001907348633

Token 302: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8624639324116288e-06
    2. 'j' → logprob: -13.250001907348633
    3. '[i' → logprob: -17.500001907348633
    4. 's' → logprob: -17.750001907348633
    5. '[' → logprob: -18.125001907348633
    6. '(j' → logprob: -19.250001907348633
    7. '```' → logprob: -19.250001907348633
    8. '[
' → logprob: -20.750001907348633
    9. '[s' → logprob: -21.000001907348633
    10. '[js' → logprob: -21.625001907348633

Token 303: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018170286202803254
    2. ' ]' → logprob: -7.001817226409912
    3. ']
' → logprob: -7.126817226409912
    4. '<|end|>' → logprob: -10.126816749572754
    5. ')' → logprob: -10.251816749572754
    6. '               ' → logprob: -11.876816749572754
    7. '[j' → logprob: -12.376816749572754
    8. ']

' → logprob: -12.626816749572754
    9. ' ]
' → logprob: -13.001816749572754
    10. '+' → logprob: -13.501816749572754

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.064379021525383
    2. 'er' → logprob: -2.8143789768218994
    3. ' er' → logprob: -6.6893792152404785
    4. '           ' → logprob: -6.9393792152404785
    5. '              ' → logprob: -9.56437873840332
    6. '       ' → logprob: -9.81437873840332
    7. '                   ' → logprob: -10.56437873840332
    8. '   ' → logprob: -11.68937873840332
    9. '             ' → logprob: -12.18937873840332
    10. '                ' → logprob: -12.31437873840332

Token 305: ' er' (ID: 1111)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' (adapté à ' er') → logprob: -4.320199877838604e-07
    2. ' er' → logprob: -15.0
    3. 'ER' → logprob: -20.625
    4. '   ' → logprob: -21.125
    5. 'e' → logprob: -21.375
    6. '(er' → logprob: -21.375
    7. 'erk' → logprob: -22.625
    8. 'ern' → logprob: -22.75
    9. '-er' → logprob: -23.0
    10. '       ' → logprob: -23.125

Token 306: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.790129555156454e-05
    2. 'j' → logprob: -9.625067710876465
    3. ' [' → logprob: -14.750067710876465
    4. '[' → logprob: -15.000067710876465
    5. '   ' → logprob: -15.500067710876465
    6. '
' → logprob: -15.625067710876465
    7. ' j' → logprob: -15.875067710876465
    8. '	j' → logprob: -16.00006866455078
    9. '+j' → logprob: -16.12506866455078
    10. '[
' → logprob: -16.25006866455078

Token 307: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4090118408203125
    2. '+=' → logprob: -1.4090118408203125
    3. ']+=' → logprob: -2.4090118408203125
    4. ']' → logprob: -6.7840118408203125
    5. '+=(' → logprob: -9.284011840820312
    6. ' ]' → logprob: -10.034011840820312
    7. '+' → logprob: -10.034011840820312
    8. '+='' → logprob: -10.409011840820312
    9. ']+' → logprob: -11.284011840820312
    10. ' ' → logprob: -11.534011840820312

Token 308: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01818014681339264
    2. ' +=' → logprob: -4.0181803703308105
    3. ']+=' → logprob: -11.268179893493652
    4. '+=(' → logprob: -11.643179893493652
    5. '+' → logprob: -11.768179893493652
    6. '+='' → logprob: -15.143179893493652
    7. '   ' → logprob: -15.268179893493652
    8. '=' → logprob: -15.768179893493652
    9. '+="' → logprob: -16.39318084716797
    10. ' ' → logprob: -17.01818084716797

Token 309: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043010830879211426
    2. ' p' → logprob: -3.168010711669922
    3. '   ' → logprob: -12.668010711669922
    4. ' ' → logprob: -12.918010711669922
    5. ' (' → logprob: -13.668010711669922
    6. 'pr' → logprob: -13.668010711669922
    7. '(p' → logprob: -13.918010711669922
    8. '(' → logprob: -14.418010711669922
    9. '  ' → logprob: -15.355510711669922
    10. '           ' → logprob: -15.730510711669922

Token 310: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.00027063372544944286
    2. '*' → logprob: -8.25027084350586
    3. '*((' → logprob: -11.87527084350586
    4. ' *' → logprob: -13.75027084350586
    5. '*m' → logprob: -14.50027084350586
    6. '(m' → logprob: -14.62527084350586
    7. ' *(' → logprob: -14.75027084350586
    8. '**' → logprob: -19.00027084350586
    9. ']*(' → logprob: -19.37527084350586
    10. '*(-' → logprob: -19.50027084350586

Token 311: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1799081563949585
    2. '(m' → logprob: -1.8049081563949585
    3. ' m' → logprob: -9.42990779876709
    4. ' (' → logprob: -10.05490779876709
    5. '1' → logprob: -11.55490779876709
    6. '(' → logprob: -11.80490779876709
    7. '
' → logprob: -11.92990779876709
    8. '	m' → logprob: -12.80490779876709
    9. ')' → logprob: -13.05490779876709
    10. '   ' → logprob: -13.05490779876709

Token 312: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015908108616713434
    2. ' +' → logprob: -8.87515926361084
    3. '+
' → logprob: -11.12515926361084
    4. '+)' → logprob: -13.50015926361084
    5. ')+' → logprob: -14.25015926361084
    6. '+

' → logprob: -15.00015926361084
    7. '<|end|>' → logprob: -15.25015926361084
    8. '+j' → logprob: -15.62515926361084
    9. '```' → logprob: -15.62515926361084
    10. '[' → logprob: -15.62515926361084

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.625012397766113
    3. '+' → logprob: -13.000012397766113
    4. '   ' → logprob: -15.500012397766113
    5. ')' → logprob: -15.750012397766113
    6. '```' → logprob: -16.375011444091797
    7. '[' → logprob: -16.750011444091797
    8. '-' → logprob: -16.875011444091797
    9. '
' → logprob: -17.000011444091797
    10. '       ' → logprob: -17.500011444091797

Token 314: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.0038121880497783422
    2. '/out' → logprob: -5.628812313079834
    3. ' /' → logprob: -9.378811836242676
    4. ')' → logprob: -9.378811836242676
    5. ' )' → logprob: -10.628811836242676
    6. '/' → logprob: -11.878811836242676
    7. ')/(' → logprob: -12.628811836242676
    8. ']/' → logprob: -12.753811836242676
    9. '   ' → logprob: -13.378811836242676
    10. '  ' → logprob: -14.128811836242676

Token 315: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0005542247672565281
    2. ' out' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.875554084777832
    4. '(out' → logprob: -15.250554084777832
    5. ' ' → logprob: -15.750554084777832
    6. '	out' → logprob: -15.750554084777832
    7. '_out' → logprob: -16.62555503845215
    8. '  ' → logprob: -16.75055503845215
    9. '[out' → logprob: -16.87555503845215
    10. '*out' → logprob: -17.75055503845215

Token 316: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.796184723294573e-06
    2. 'j' → logprob: -13.375005722045898
    3. '[j' → logprob: -13.375005722045898
    4. 'out' → logprob: -13.500005722045898
    5. 'д' → logprob: -14.750005722045898
    6. '[' → logprob: -15.875005722045898
    7. ' d' → logprob: -15.875005722045898
    8. '   ' → logprob: -16.5625057220459
    9. 'of' → logprob: -16.8750057220459
    10. 's' → logprob: -17.2500057220459

Token 317: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -15.25
    3. '[s' → logprob: -17.75
    4. '[' → logprob: -18.0
    5. '[js' → logprob: -18.75
    6. '[i' → logprob: -19.125
    7. '_j' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. ' [' → logprob: -21.25
    10. 's' → logprob: -21.5

Token 318: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005203401204198599
    2. '<|end|>' → logprob: -6.0052032470703125
    3. ')' → logprob: -6.1302032470703125
    4. ']
' → logprob: -7.6302032470703125
    5. '```' → logprob: -11.255203247070312
    6. ' ]' → logprob: -11.505203247070312
    7. '}' → logprob: -11.630203247070312
    8. '               ' → logprob: -11.880203247070312
    9. '<|end|>' → logprob: -12.630203247070312
    10. '])' → logprob: -12.880203247070312

Token 319: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01730566844344139
    2. '   ' → logprob: -4.892305850982666
    3. 'return' → logprob: -4.892305850982666
    4. '
' → logprob: -6.392305850982666
    5. 'for' → logprob: -9.142305374145508
    6. ' print' → logprob: -9.267305374145508
    7. 'if' → logprob: -9.392305374145508
    8. '    
' → logprob: -9.392305374145508
    9. 'import' → logprob: -10.142305374145508
    10. 'result' (adapté à ' result') → logprob: -11.392305374145508

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008794081397354603
    2. '=' → logprob: -4.88379430770874
    3. '[' → logprob: -7.13379430770874
    4. ' ' → logprob: -8.758793830871582
    5. ' =[' → logprob: -9.633793830871582
    6. '_' → logprob: -10.258793830871582
    7. '[:]' → logprob: -10.383793830871582
    8. '()' → logprob: -10.508793830871582
    9. '   ' → logprob: -10.633793830871582
    10. '[]' → logprob: -11.008793830871582

Token 322: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.46112632751464844
    2. ' exp' → logprob: -1.0861263275146484
    3. 'er' → logprob: -3.9611263275146484
    4. ' er' → logprob: -4.461126327514648
    5. 'round' → logprob: -7.711126327514648
    6. ' ' → logprob: -8.961126327514648
    7. 'float' → logprob: -9.211126327514648
    8. 'prob' → logprob: -9.586126327514648
    9. 'pr' → logprob: -9.836126327514648
    10. 'int' → logprob: -9.961126327514648

Token 323: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25554412603378296
    2. '[' → logprob: -1.5055441856384277
    3. '[N' → logprob: -5.630544185638428
    4. '[end' → logprob: -12.63054370880127
    5. '[i' → logprob: -12.88054370880127
    6. '[target' → logprob: -13.75554370880127
    7. '[s' → logprob: -13.75554370880127
    8. '[n' → logprob: -14.00554370880127
    9. '[len' → logprob: -14.00554370880127
    10. ' [-' → logprob: -14.13054370880127

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. ']' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '```' → logprob: -16.875003814697266
    6. ')' → logprob: -17.437503814697266
    7. '-' → logprob: -17.625003814697266
    8. ',' → logprob: -18.375003814697266
    9. '
' → logprob: -18.375003814697266
    10. '       ' → logprob: -18.812503814697266

Token 325: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007438258733600378
    2. ' ]' → logprob: -5.1324381828308105
    3. ')' → logprob: -7.3824381828308105
    4. '<|end|>' → logprob: -7.8824381828308105
    5. ']
' → logprob: -8.632438659667969
    6. '[' → logprob: -9.882438659667969
    7. ')]' → logprob: -10.007438659667969
    8. '<|end|>' → logprob: -10.257438659667969
    9. '])' → logprob: -10.382438659667969
    10. ']+' → logprob: -10.632438659667969

Token 326: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7058919668197632
    2. '   ' → logprob: -0.7058919668197632
    3. '<|end|>' → logprob: -5.205892086029053
    4. 'return' → logprob: -5.330892086029053
    5. '    
' → logprob: -6.955892086029053
    6. ' return' → logprob: -7.330892086029053
    7. 'print' → logprob: -7.455892086029053
    8. ' 
' → logprob: -10.455891609191895
    9. '\n' → logprob: -10.580891609191895
    10. '
' → logprob: -11.205891609191895

Token 327: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703290283679962
    2. 'print' → logprob: -1.5203289985656738
    3. 'return' → logprob: -4.020328998565674
    4. '    
' → logprob: -8.895329475402832
    5. '
' → logprob: -9.895329475402832
    6. ' return' → logprob: -10.020329475402832
    7. ' print' → logprob: -10.520329475402832
    8. 'if' → logprob: -12.020329475402832
    9. '```' → logprob: -12.020329475402832
    10. '	return' → logprob: -13.270329475402832

Token 328: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6715074777603149
    2. 'i' → logprob: -0.9215074777603149
    3. ' j' → logprob: -3.5465073585510254
    4. 'j' → logprob: -4.046507358551025
    5. ' p' → logprob: -4.421507358551025
    6. 'x' → logprob: -4.921507358551025
    7. ' x' → logprob: -5.046507358551025
    8. 'p' → logprob: -5.171507358551025
    9. '_' → logprob: -6.296507358551025
    10. '(i' → logprob: -6.421507358551025

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1013980358839035
    2. 'in' → logprob: -2.47639799118042
    3. ',' → logprob: -4.47639799118042
    4. ' ' → logprob: -7.47639799118042
    5. ' ,' → logprob: -8.726398468017578
    6. '   ' → logprob: -9.726398468017578
    7. ',k' → logprob: -9.851398468017578
    8. '  ' → logprob: -9.976398468017578
    9. ',in' → logprob: -10.351398468017578
    10. ' i' → logprob: -11.101398468017578

Token 330: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.330768346786499
    2. 'range' → logprob: -1.330768346786499
    3. ' parents' → logprob: -5.205768585205078
    4. 'neighbors' → logprob: -5.455768585205078
    5. ' neighbors' → logprob: -5.830768585205078
    6. 'parents' → logprob: -6.080768585205078
    7. ' pr' → logprob: -6.330768585205078
    8. 'pr' → logprob: -8.330768585205078
    9. '[' → logprob: -9.330768585205078
    10. '(range' → logprob: -10.080768585205078

Token 331: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.29585376381874084
    2. '(' → logprob: -1.4208537340164185
    3. 'N' → logprob: -4.420853614807129
    4. '(len' → logprob: -6.920853614807129
    5. '1' → logprob: -7.295853614807129
    6. 'out' → logprob: -8.045853614807129
    7. 'len' → logprob: -8.295853614807129
    8. '   ' → logprob: -8.545853614807129
    9. '(out' → logprob: -9.795853614807129
    10. 'result' → logprob: -10.545853614807129

Token 332: '-' (ID: 12)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012672333978116512
    2. '-' → logprob: -5.012672424316406
    3. '):' → logprob: -5.262672424316406
    4. '   ' → logprob: -7.387672424316406
    5. ')' → logprob: -9.887672424316406
    6. '):
' → logprob: -10.012672424316406
    7. ' -' → logprob: -10.762672424316406
    8. ' ):
' → logprob: -11.887672424316406
    9. ' ' → logprob: -12.137672424316406
    10. '       ' → logprob: -13.137672424316406

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013452880375552922
    2. ' ' → logprob: -9.000134468078613
    3. '2' → logprob: -11.625134468078613
    4. '   ' → logprob: -13.875134468078613
    5. ')' → logprob: -15.000134468078613
    6. '0' → logprob: -15.500134468078613
    7. '```' → logprob: -15.625134468078613
    8. '-' → logprob: -16.25013542175293
    9. '  ' → logprob: -16.93763542175293
    10. 'len' → logprob: -17.06263542175293

Token 334: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28651949763298035
    2. '):
' → logprob: -1.7865195274353027
    3. ' -' → logprob: -2.6615195274353027
    4. '):' → logprob: -4.661519527435303
    5. '   ' → logprob: -7.036519527435303
    6. ' ):
' → logprob: -7.911519527435303
    7. ')' → logprob: -8.161519050598145
    8. ',' → logprob: -8.286519050598145
    9. ' ' → logprob: -8.786519050598145
    10. '):
' → logprob: -9.286519050598145

Token 335: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24807558953762054
    2. ' if' → logprob: -2.123075485229492
    3. '       ' → logprob: -2.373075485229492
    4. 'if' → logprob: -4.998075485229492
    5. ' result' → logprob: -9.873075485229492
    6. 'result' → logprob: -10.998075485229492
    7. '	if' → logprob: -11.748075485229492
    8. '<|end|>' → logprob: -12.998075485229492
    9. ',' → logprob: -13.623075485229492
    10. '	   ' → logprob: -13.748075485229492

Token 336: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4928876459598541
    2. '   ' → logprob: -1.6178876161575317
    3. '       ' → logprob: -2.2428877353668213
    4. 'result' → logprob: -2.4928877353668213
    5. ' if' → logprob: -6.492887496948242
    6. ' result' → logprob: -8.867887496948242
    7. 'prob' → logprob: -9.617887496948242
    8. ' ' → logprob: -9.867887496948242
    9. 'x' → logprob: -10.242887496948242
    10. 'for' → logprob: -10.742887496948242

Token 337: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.019093869253993034
    2. ' out' → logprob: -4.644093990325928
    3. 'prob' → logprob: -5.394093990325928
    4. 'neighbors' → logprob: -5.644093990325928
    5. '   ' → logprob: -8.14409351348877
    6. ' neighbors' → logprob: -8.26909351348877
    7. 'pr' → logprob: -8.64409351348877
    8. 'parents' → logprob: -8.89409351348877
    9. ' prob' → logprob: -9.14409351348877
    10. 'not' → logprob: -9.76909351348877

Token 338: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.2200749754119897e-06
    2. '[k' → logprob: -13.625001907348633
    3. 'k' → logprob: -14.000001907348633
    4. ' d' → logprob: -16.625001907348633
    5. 's' → logprob: -18.250001907348633
    6. 'o' → logprob: -19.000001907348633
    7. '[' → logprob: -19.125001907348633
    8. 't' → logprob: -19.500001907348633
    9. 'д' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633

Token 339: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.3782830137643032e-05
    2. '[' → logprob: -11.50001335144043
    3. 'k' → logprob: -13.12501335144043
    4. ' [' → logprob: -13.50001335144043
    5. '[s' → logprob: -16.37501335144043
    6. '[j' → logprob: -16.37501335144043
    7. '(k' → logprob: -17.00001335144043
    8. '[i' → logprob: -18.25001335144043
    9. ' k' → logprob: -18.25001335144043
    10. '{k' → logprob: -18.62501335144043

Token 340: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2254438400268555
    2. ')' → logprob: -1.4754438400268555
    3. ']==' → logprob: -1.7254438400268555
    4. ']>' → logprob: -1.8504438400268555
    5. ')>' → logprob: -2.3504438400268555
    6. ')==' → logprob: -3.9754438400268555
    7. '>' → logprob: -4.1004438400268555
    8. ']>=' → logprob: -6.1004438400268555
    9. ']!=' → logprob: -6.6004438400268555
    10. '==' → logprob: -6.6004438400268555

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009101390838623047
    2. '0' → logprob: -4.759101390838623
    3. ' ' → logprob: -7.759101390838623
    4. '   ' → logprob: -10.134101867675781
    5. '  ' → logprob: -11.884101867675781
    6. '2' → logprob: -12.134101867675781
    7. 'k' → logprob: -12.259101867675781
    8. '    ' → logprob: -13.509101867675781
    9. '     ' → logprob: -15.696601867675781
    10. '```' → logprob: -15.696601867675781

Token 342: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005397038068622351
    2. 'and' → logprob: -6.005396842956543
    3. ':' → logprob: -6.380396842956543
    4. ':
' → logprob: -6.755396842956543
    5. ' ' → logprob: -11.005396842956543
    6. '   ' → logprob: -11.130396842956543
    7. '       ' → logprob: -11.755396842956543
    8. ' :
' → logprob: -12.505396842956543
    9. ' :' → logprob: -12.880396842956543
    10. '           ' → logprob: -13.130396842956543

Token 343: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23237884044647217
    2. '
' → logprob: -1.7323788404464722
    3. '       ' → logprob: -4.232378959655762
    4. ' and' → logprob: -5.482378959655762
    5. 'result' → logprob: -5.732378959655762
    6. ' result' → logprob: -5.982378959655762
    7. '   ' → logprob: -6.732378959655762
    8. '<|end|>' → logprob: -7.107378959655762
    9. '	       ' → logprob: -7.732378959655762
    10. ',' → logprob: -7.857378959655762

Token 344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13231627643108368
    2. '
' → logprob: -2.1323163509368896
    3. '        
' → logprob: -5.7573161125183105
    4. '   ' → logprob: -7.7573161125183105
    5. 'result' → logprob: -7.7573161125183105
    6. '
' → logprob: -8.007316589355469
    7. '    
' → logprob: -8.257316589355469
    8. '  
' → logprob: -8.632316589355469
    9. ' result' → logprob: -8.632316589355469
    10. '            
' → logprob: -9.382316589355469

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004316891543567181
    2. '
' → logprob: -5.754316806793213
    3. '        
' → logprob: -7.754316806793213
    4. 'result' → logprob: -8.004317283630371
    5. ' result' → logprob: -8.754317283630371
    6. '   ' → logprob: -9.504317283630371
    7. '    
' → logprob: -11.004317283630371
    8. '	' → logprob: -11.129317283630371
    9. ' if' → logprob: -11.129317283630371
    10. '           ' → logprob: -11.379317283630371

Token 346: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4240477085113525
    2. 'p' → logprob: -2.1740477085113525
    3. 'for' → logprob: -2.2990477085113525
    4. '       ' → logprob: -2.5490477085113525
    5. 'if' → logprob: -2.6740477085113525
    6. 's' → logprob: -3.0490477085113525
    7. 'm' → logprob: -3.2990477085113525
    8. 'res' → logprob: -3.5490477085113525
    9. 'x' → logprob: -3.9240477085113525
    10. 'out' → logprob: -4.049047470092773

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04619965702295303
    2. '=' → logprob: -3.2961995601654053
    3. '=k' → logprob: -5.921199798583984
    4. '   ' → logprob: -6.046199798583984
    5. 'k' → logprob: -7.546199798583984
    6. 'e' → logprob: -8.296199798583984
    7. ',' → logprob: -8.796199798583984
    8. '=L' → logprob: -8.796199798583984
    9. '=max' → logprob: -8.921199798583984
    10. 'eft' → logprob: -8.921199798583984

Token 348: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5506471395492554
    2. '[]
' → logprob: -1.5506471395492554
    3. 'len' → logprob: -1.9256471395492554
    4. '[]' → logprob: -2.425647258758545
    5. '[max' → logprob: -2.925647258758545
    6. 'out' → logprob: -2.925647258758545
    7. '[len' → logprob: -3.050647258758545
    8. 'max' → logprob: -3.550647258758545
    9. '0' → logprob: -3.550647258758545
    10. 'neighbors' → logprob: -3.550647258758545

Token 349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021057340200059116
    2. ' for' → logprob: -8.875210762023926
    3. 'for' → logprob: -9.750210762023926
    4. '   ' → logprob: -12.000210762023926
    5. '<|end|>' → logprob: -13.125210762023926
    6. '           ' → logprob: -13.500210762023926
    7. '	   ' → logprob: -14.375210762023926
    8. ',' → logprob: -14.375210762023926
    9. '	' → logprob: -15.250210762023926
    10. '	for' → logprob: -16.00020980834961

Token 350: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1842566728591919
    2. '       ' → logprob: -1.934256672859192
    3. 'p' (adapté à ' p') → logprob: -4.184256553649902
    4. ' for' → logprob: -6.059256553649902
    5. '   ' → logprob: -6.309256553649902
    6. 'prob' → logprob: -6.434256553649902
    7. 's' → logprob: -8.059256553649902
    8. 'out' → logprob: -8.309256553649902
    9. 'q' → logprob: -8.434256553649902
    10. 'd' → logprob: -8.559256553649902

Token 351: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04087698459625244
    2. ' =' → logprob: -3.290876865386963
    3. 'k' → logprob: -6.040876865386963
    4. '=k' → logprob: -8.290877342224121
    5. ',' → logprob: -10.040877342224121
    6. 'for' → logprob: -10.915877342224121
    7. '=L' → logprob: -11.165877342224121
    8. '   ' → logprob: -11.165877342224121
    9. '[k' → logprob: -11.665877342224121
    10. '=[' → logprob: -11.665877342224121

Token 352: 'prob' (ID: 29823)
  Prédit: 'prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.07227542251348495
    2. 'pr' → logprob: -2.822275400161743
    3. '0' → logprob: -5.197275638580322
    4. ' prob' → logprob: -5.697275638580322
    5. '1' → logprob: -7.572275638580322
    6. 'exp' → logprob: -8.322275161743164
    7. ' pr' → logprob: -8.697275161743164
    8. '   ' → logprob: -9.322275161743164
    9. '(prob' → logprob: -9.947275161743164
    10. ' ' → logprob: -10.072275161743164

Token 353: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.125020027160645
    3. 'k' → logprob: -13.625020027160645
    4. '[p' → logprob: -13.875020027160645
    5. ' [' → logprob: -14.000020027160645
    6. '       ' → logprob: -14.625020027160645
    7. '[j' → logprob: -14.750020027160645
    8. '[i' → logprob: -15.250020027160645
    9. '   ' → logprob: -16.000019073486328
    10. '[n' → logprob: -16.250019073486328

Token 354: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.31339356303215027
    2. ']' → logprob: -1.3133935928344727
    3. ']
' → logprob: -9.938393592834473
    4. ']*' → logprob: -9.938393592834473
    5. ']/' → logprob: -11.313393592834473
    6. ']+' → logprob: -11.563393592834473
    7. ']

' → logprob: -12.188393592834473
    8. '];' → logprob: -12.688393592834473
    9. ' ]
' → logprob: -13.938393592834473
    10. '   ' → logprob: -14.188393592834473

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004748503211885691
    2. 'e' → logprob: -5.504748344421387
    3. ',' → logprob: -8.379748344421387
    4. ' e' → logprob: -8.504748344421387
    5. '   ' → logprob: -9.629748344421387
    6. 't' → logprob: -10.254748344421387
    7. ',e' → logprob: -10.504748344421387
    8. 'd' → logprob: -10.629748344421387
    9. '	' → logprob: -11.129748344421387
    10. 'l' → logprob: -11.129748344421387

Token 356: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0210381131619215
    2. 'm' → logprob: -4.271038055419922
    3. 'for' → logprob: -5.396038055419922
    4. 'l' → logprob: -6.771038055419922
    5. '       ' → logprob: -7.396038055419922
    6. 'L' → logprob: -8.146038055419922
    7. 'if' → logprob: -10.021038055419922
    8. 'result' → logprob: -10.021038055419922
    9. 'r' → logprob: -10.521038055419922
    10. 's' → logprob: -10.771038055419922

Token 357: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005837726057507098
    2. ' =' → logprob: -7.500583648681641
    3. '=e' → logprob: -10.62558364868164
    4. '=int' → logprob: -13.62558364868164
    5. '=result' → logprob: -14.12558364868164
    6. '=edge' → logprob: -14.25058364868164
    7. 'exp' → logprob: -14.75058364868164
    8. '=en' → logprob: -14.75058364868164
    9. 'er' → logprob: -15.25058364868164
    10. '=
' → logprob: -15.37558364868164

Token 358: 'exp' (ID: 8067)
  Prédit: 'exp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -0.00016110755677800626
    2. ' exp' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.500161170959473
    4. 'er' → logprob: -15.375161170959473
    5. ' ' → logprob: -15.750161170959473
    6. '  ' → logprob: -15.875161170959473
    7. '	exp' → logprob: -15.875161170959473
    8. '       ' → logprob: -16.000160217285156
    9. 'expr' → logprob: -16.000160217285156
    10. 'ex' → logprob: -16.000160217285156

Token 359: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00014251544780563563
    2. 'k' → logprob: -8.875142097473145
    3. '[' → logprob: -13.375142097473145
    4. '       ' → logprob: -15.875142097473145
    5. '{k' → logprob: -15.875142097473145
    6. '   ' → logprob: -16.00014305114746
    7. '[
' → logprob: -16.12514305114746
    8. ',k' → logprob: -16.50014305114746
    9. '```' → logprob: -16.50014305114746
    10. '(k' → logprob: -16.62514305114746

Token 360: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20227833092212677
    2. ']' → logprob: -1.7022783756256104
    3. '       ' → logprob: -7.327278137207031
    4. ']
' → logprob: -8.702278137207031
    5. '   ' → logprob: -11.202278137207031
    6. '-' → logprob: -11.452278137207031
    7. ']

' → logprob: -12.452278137207031
    8. ' ]
' → logprob: -12.702278137207031
    9. 'p' → logprob: -13.327278137207031
    10. '']
' → logprob: -13.452278137207031

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001532401074655354
    2. ',' → logprob: -9.875153541564941
    3. 'd' → logprob: -11.000153541564941
    4. ' for' → logprob: -11.125153541564941
    5. 'L' → logprob: -11.500153541564941
    6. '   ' → logprob: -11.625153541564941
    7. '<|end|>' → logprob: -11.750153541564941
    8. ' L' → logprob: -11.875153541564941
    9. 'for' → logprob: -12.250153541564941
    10. 'n' → logprob: -12.375153541564941

Token 362: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46909475326538086
    2. 'for' → logprob: -1.3440947532653809
    3. 'm' → logprob: -2.719094753265381
    4. 'd' (adapté à ' d') → logprob: -3.469094753265381
    5. 'l' → logprob: -4.594094753265381
    6. ' for' → logprob: -5.719094753265381
    7. 'L' → logprob: -7.219094753265381
    8. 'if' → logprob: -8.219095230102539
    9. 'n' → logprob: -8.344095230102539
    10. '   ' → logprob: -8.344095230102539

Token 363: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020550761371850967
    2. ' =' → logprob: -3.8955507278442383
    3. '=int' → logprob: -13.270550727844238
    4. '=o' → logprob: -13.645550727844238
    5. '=
' → logprob: -14.020550727844238
    6. ' ' → logprob: -14.145550727844238
    7. '   ' → logprob: -14.520550727844238
    8. ',out' → logprob: -14.895550727844238
    9. '=os' → logprob: -15.020550727844238
    10. '  ' → logprob: -15.270550727844238

Token 364: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.0009337326046079397
    2. ' out' → logprob: -7.000933647155762
    3. 'len' → logprob: -11.125933647155762
    4. '   ' → logprob: -13.125933647155762
    5. ' ' → logprob: -13.750933647155762
    6. '(out' → logprob: -13.750933647155762
    7. '	out' → logprob: -14.250933647155762
    8. 'max' → logprob: -14.375933647155762
    9. '[out' → logprob: -14.500933647155762
    10. '
' → logprob: -14.750933647155762

Token 365: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007131471065804362
    2. '[k' → logprob: -7.250713348388672
    3. 'k' → logprob: -12.750713348388672
    4. '[' → logprob: -15.750713348388672
    5. ' d' → logprob: -17.375713348388672
    6. '[d' → logprob: -17.500713348388672
    7. 't' → logprob: -18.500713348388672
    8. '[
' → logprob: -18.500713348388672
    9. '[key' → logprob: -18.625713348388672
    10. ' [' → logprob: -18.750713348388672

Token 366: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.0280383548888494e-06
    2. 'k' → logprob: -14.125000953674316
    3. '[' → logprob: -16.125001907348633
    4. '=k' → logprob: -17.000001907348633
    5. '[j' → logprob: -18.125001907348633
    6. ' [' → logprob: -18.250001907348633
    7. ',k' → logprob: -18.375001907348633
    8. '[i' → logprob: -18.500001907348633
    9. '(k' → logprob: -18.625001907348633
    10. '[s' → logprob: -18.875001907348633

Token 367: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3876686990261078
    2. ']' → logprob: -1.1376687288284302
    3. ']

' → logprob: -8.01266860961914
    4. ']+' → logprob: -8.13766860961914
    5. ']-' → logprob: -9.01266860961914
    6. ']
' → logprob: -10.76266860961914
    7. '       ' → logprob: -11.01266860961914
    8. '-' → logprob: -12.26266860961914
    9. ']>' → logprob: -13.13766860961914
    10. ']==' → logprob: -13.63766860961914

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013421354815363884
    2. '+' → logprob: -7.251342296600342
    3. '
' → logprob: -9.001341819763184
    4. ',' → logprob: -9.001341819763184
    5. '<|end|>' → logprob: -9.376341819763184
    6. '   ' → logprob: -10.001341819763184
    7. '        
' → logprob: -10.126341819763184
    8. ' for' → logprob: -10.251341819763184
    9. 'for' → logprob: -10.376341819763184
    10. ' L' → logprob: -10.626341819763184

Token 369: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17602968215942383
    2. ' for' → logprob: -2.676029682159424
    3. 'for' (adapté à ' for') → logprob: -3.051029682159424
    4. ' L' → logprob: -3.801029682159424
    5. 'L' → logprob: -4.051029682159424
    6. 'if' → logprob: -6.551029682159424
    7. ' if' → logprob: -6.676029682159424
    8. 'p' → logprob: -8.051029205322266
    9. '
' → logprob: -8.551029205322266
    10. 'n' → logprob: -8.676029205322266

Token 370: ' v' (ID: 323)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.43008407950401306
    2. ' j' → logprob: -1.0550841093063354
    3. 'neighbor' → logprob: -8.180084228515625
    4. 'x' → logprob: -8.805084228515625
    5. 'v' → logprob: -8.930084228515625
    6. ' v' → logprob: -9.305084228515625
    7. 'neighbors' → logprob: -9.305084228515625
    8. 'i' → logprob: -9.305084228515625
    9. ' x' → logprob: -9.430084228515625
    10. ' neighbor' → logprob: -9.680084228515625

Token 371: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3133963346481323
    2. ' in' → logprob: -1.3133963346481323
    3. '	in' → logprob: -9.813396453857422
    4. ' ' → logprob: -10.313396453857422
    5. '  ' → logprob: -11.188396453857422
    6. '   ' → logprob: -11.813396453857422
    7. 'v' → logprob: -12.063396453857422
    8. ',' → logprob: -12.438396453857422
    9. '    ' → logprob: -12.938396453857422
    10. ')' → logprob: -13.063396453857422

Token 372: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.003022156422957778
    2. 'parents' → logprob: -6.378022193908691
    3. ' neighbors' → logprob: -6.753022193908691
    4. 'range' → logprob: -9.378022193908691
    5. ' parents' → logprob: -11.003022193908691
    6. 'children' → logprob: -11.628022193908691
    7. 'out' → logprob: -12.003022193908691
    8. '[' → logprob: -12.003022193908691
    9. '(ne' → logprob: -12.003022193908691
    10. 'ne' → logprob: -12.003022193908691

Token 373: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.511406809295295e-06
    2. '[idx' → logprob: -12.125006675720215
    3. 'k' → logprob: -14.375006675720215
    4. '[' → logprob: -15.125006675720215
    5. ' [' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '[i' → logprob: -18.1250057220459
    8. 'idx' → logprob: -18.1250057220459
    9. '[
' → logprob: -18.3750057220459
    10. '       ' → logprob: -18.3750057220459

Token 374: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.30882617831230164
    2. ']:
' → logprob: -1.933826208114624
    3. '[k' → logprob: -2.183826208114624
    4. ']' → logprob: -5.683825969696045
    5. 'k' → logprob: -6.183825969696045
    6. ':' → logprob: -6.558825969696045
    7. '][' → logprob: -7.808825969696045
    8. '       ' → logprob: -8.183826446533203
    9. '   ' → logprob: -8.558826446533203
    10. '[' → logprob: -9.183826446533203

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011574854142963886
    2. ' L' → logprob: -7.376157283782959
    3. '               ' → logprob: -9.376157760620117
    4. '	       ' → logprob: -9.376157760620117
    5. '   ' → logprob: -9.501157760620117
    6. 'L' → logprob: -9.876157760620117
    7. '       ' → logprob: -10.126157760620117
    8. '+' → logprob: -10.251157760620117
    9. '          ' → logprob: -10.376157760620117
    10. ' if' → logprob: -10.626157760620117

Token 376: ' val' (ID: 1459)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8583542704582214
    2. ' L' → logprob: -0.8583542704582214
    3. 'L' → logprob: -2.483354330062866
    4. ' p' → logprob: -3.483354330062866
    5. 'p' → logprob: -4.108354091644287
    6. ' if' → logprob: -4.358354091644287
    7. '               ' → logprob: -5.858354091644287
    8. 'if' → logprob: -6.733354091644287
    9. '   ' → logprob: -6.983354091644287
    10. '            ' → logprob: -7.108354091644287

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5893899202346802
    2. '=' → logprob: -0.8393899202346802
    3. 's' → logprob: -6.214389801025391
    4. 'ue' → logprob: -6.589389801025391
    5. '   ' → logprob: -6.589389801025391
    6. '=[]' → logprob: -6.589389801025391
    7. '=v' → logprob: -6.589389801025391
    8. '=p' → logprob: -6.964389801025391
    9. 'ues' → logprob: -7.089389801025391
    10. '=[' → logprob: -7.464389801025391

Token 378: ' e' (ID: 319)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7087730765342712
    2. 'prob' → logprob: -2.083773136138916
    3. '(prob' → logprob: -2.208773136138916
    4. 'p' → logprob: -2.333773136138916
    5. ' (' → logprob: -2.333773136138916
    6. '(e' → logprob: -3.583773136138916
    7. ' p' → logprob: -4.083773136138916
    8. ' prob' → logprob: -4.458773136138916
    9. 'e' → logprob: -4.958773136138916
    10. '(' → logprob: -5.208773136138916

Token 379: '*' (ID: 9)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5850398540496826
    2. '-p' → logprob: -1.5850398540496826
    3. '-' → logprob: -1.9600398540496826
    4. '*p' → logprob: -3.5850398540496826
    5. '+' → logprob: -4.085040092468262
    6. '-v' → logprob: -4.835040092468262
    7. '/p' → logprob: -4.835040092468262
    8. '-e' → logprob: -4.960040092468262
    9. '-val' → logprob: -5.210040092468262
    10. '*(' → logprob: -5.210040092468262

Token 380: 'pr' (ID: 638)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05667770653963089
    2. 'prob' → logprob: -3.68167781829834
    3. '(prob' → logprob: -5.18167781829834
    4. '(p' → logprob: -5.18167781829834
    5. ' p' → logprob: -5.68167781829834
    6. 'd' → logprob: -5.80667781829834
    7. '(v' → logprob: -6.05667781829834
    8. '+' → logprob: -6.55667781829834
    9. 'out' → logprob: -6.80667781829834
    10. 'v' → logprob: -6.93167781829834

Token 381: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002932750794570893
    2. 'v' → logprob: -8.250293731689453
    3. '[val' → logprob: -10.375293731689453
    4. '[' → logprob: -15.000293731689453
    5. '[k' → logprob: -15.875293731689453
    6. ' v' → logprob: -16.375293731689453
    7. '[u' → logprob: -17.000293731689453
    8. '(v' → logprob: -17.125293731689453
    9. '<v' → logprob: -17.375293731689453
    10. '[j' → logprob: -17.750293731689453

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8163776993751526
    2. '[v' → logprob: -1.5663776397705078
    3. ']+' → logprob: -1.9413776397705078
    4. ']-' → logprob: -2.941377639770508
    5. ']/' → logprob: -3.066377639770508
    6. '+' → logprob: -3.941377639770508
    7. ']*' → logprob: -3.941377639770508
    8. '[k' → logprob: -4.191377639770508
    9. '[val' → logprob: -4.691377639770508
    10. '[p' → logprob: -5.566377639770508

Token 383: ' +' (ID: 659)
  Prédit: '/d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.5431706309318542
    2. '/p' → logprob: -1.668170690536499
    3. '+' → logprob: -2.418170690536499
    4. '           ' → logprob: -3.543170690536499
    5. '*p' → logprob: -3.918170690536499
    6. ' -' → logprob: -4.16817045211792
    7. ' +' → logprob: -4.16817045211792
    8. '*d' → logprob: -4.16817045211792
    9. '          ' → logprob: -4.79317045211792
    10. '               ' → logprob: -5.29317045211792

Token 384: ' er' (ID: 1111)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014172090217471123
    2. ' p' → logprob: -5.139172077178955
    3. '(p' → logprob: -5.264172077178955
    4. 'prob' → logprob: -6.764172077178955
    5. ' (' → logprob: -7.264172077178955
    6. '(' → logprob: -7.639172077178955
    7. ' ' → logprob: -8.764172554016113
    8. 'e' → logprob: -9.389172554016113
    9. '(prob' → logprob: -9.389172554016113
    10. '   ' → logprob: -9.764172554016113

Token 385: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.77627644513268e-06
    2. '[k' → logprob: -12.375008583068848
    3. 'v' → logprob: -12.625008583068848
    4. '[val' → logprob: -14.750008583068848
    5. '[' → logprob: -14.875008583068848
    6. '[j' → logprob: -15.875008583068848
    7. '	v' → logprob: -16.000009536743164
    8. ' [' → logprob: -16.875009536743164
    9. '```' → logprob: -18.000009536743164
    10. '<v' → logprob: -18.125009536743164

Token 386: ']*' (ID: 18579)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9319031238555908
    2. '-' → logprob: -1.1819031238555908
    3. '-p' → logprob: -2.556903123855591
    4. ')/(' → logprob: -2.681903123855591
    5. '-val' → logprob: -3.431903123855591
    6. ')/' → logprob: -4.181902885437012
    7. '-v' → logprob: -4.681902885437012
    8. '[v' → logprob: -4.681902885437012
    9. '-k' → logprob: -4.806902885437012
    10. ')' → logprob: -5.181902885437012

Token 387: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001366744691040367
    2. ' p' → logprob: -9.125136375427246
    3. 'prob' → logprob: -12.000136375427246
    4. '<|end|>' → logprob: -12.000136375427246
    5. '   ' → logprob: -12.875136375427246
    6. 'd' → logprob: -13.000136375427246
    7. '           ' → logprob: -13.500136375427246
    8. ' ' → logprob: -13.625136375427246
    9. '  ' → logprob: -13.750136375427246
    10. '(p' → logprob: -13.750136375427246

Token 388: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7517916560173035
    2. '-' → logprob: -1.0017917156219482
    3. '-d' → logprob: -2.1267917156219482
    4. '           ' → logprob: -4.001791477203369
    5. '-val' → logprob: -4.501791477203369
    6. '-e' → logprob: -6.251791477203369
    7. '          ' → logprob: -6.876791477203369
    8. '/d' → logprob: -6.876791477203369
    9. '-p' → logprob: -6.876791477203369
    10. '-v' → logprob: -7.001791477203369

Token 389: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009461980313062668
    2. ' p' → logprob: -4.759461879730225
    3. 'prob' → logprob: -7.759461879730225
    4. 'pr' → logprob: -8.884462356567383
    5. '(p' → logprob: -9.134462356567383
    6. ' (' → logprob: -10.259462356567383
    7. 'e' → logprob: -10.759462356567383
    8. '(' → logprob: -11.009462356567383
    9. '2' → logprob: -11.259462356567383
    10. '1' → logprob: -11.259462356567383

Token 390: '*' (ID: 9)
  Prédit: '*d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*d' → logprob: -0.30682793259620667
    2. '*(' → logprob: -2.181828022003174
    3. '*' → logprob: -2.556828022003174
    4. '/d' → logprob: -3.306828022003174
    5. '*v' → logprob: -3.431828022003174
    6. '*(-' → logprob: -6.306828022003174
    7. '<|end|>' → logprob: -7.056828022003174
    8. '*m' → logprob: -7.556828022003174
    9. ' *' → logprob: -8.056827545166016
    10. '*p' → logprob: -8.181827545166016

Token 391: 'pr' (ID: 638)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 392: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.004190467763692141
    2. '[k' → logprob: -5.504190444946289
    3. '[' → logprob: -9.754190444946289
    4. 'v' → logprob: -9.879190444946289
    5. '[j' → logprob: -14.004190444946289
    6. 'k' → logprob: -14.254190444946289
    7. ' v' → logprob: -15.004190444946289
    8. '[
' → logprob: -15.129190444946289
    9. '[val' → logprob: -15.129190444946289
    10. '[u' → logprob: -15.254190444946289

Token 393: ']
' (ID: 1592)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -1.012014389038086
    2. ')' → logprob: -1.762014389038086
    3. '*' → logprob: -2.887014389038086
    4. ' -' → logprob: -3.012014389038086
    5. ')*' → logprob: -3.012014389038086
    6. '*(-' → logprob: -3.137014389038086
    7. '-' → logprob: -3.137014389038086
    8. ' )' → logprob: -3.262014389038086
    9. '*v' → logprob: -3.262014389038086
    10. '+' → logprob: -3.512014389038086

Token 394: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005165747134014964
    2. ',' → logprob: -8.500516891479492
    3. '		' → logprob: -9.250516891479492
    4. '	       ' → logprob: -10.000516891479492
    5. '               ' → logprob: -10.750516891479492
    6. '*' → logprob: -10.875516891479492
    7. '<|end|>' → logprob: -10.875516891479492
    8. ' L' → logprob: -11.250516891479492
    9. '          ' → logprob: -11.250516891479492
    10. ')' → logprob: -11.250516891479492

Token 395: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.04315231367945671
    2. ')' → logprob: -3.918152332305908
    3. '[' → logprob: -5.293152332305908
    4. 'L' (adapté à ' L') → logprob: -5.543152332305908
    5. ' ' → logprob: -5.793152332305908
    6. ' )' → logprob: -6.043152332305908
    7. '<|end|>' → logprob: -6.168152332305908
    8. '           ' → logprob: -6.543152332305908
    9. '+' → logprob: -7.293152332305908
    10. ''' → logprob: -7.668152332305908

Token 396: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07901239395141602
    2. '.' → logprob: -2.579012393951416
    3. '+=' → logprob: -9.579011917114258
    4. ' +=' → logprob: -10.454011917114258
    5. ' .' → logprob: -11.079011917114258
    6. '.app' → logprob: -12.829011917114258
    7. '.=' → logprob: -13.204011917114258
    8. '=' → logprob: -13.829011917114258
    9. '+' → logprob: -14.079011917114258
    10. 'append' → logprob: -14.329011917114258

Token 397: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.013407616876065731
    2. '(' → logprob: -5.0134077072143555
    3. '((' → logprob: -5.0134077072143555
    4. '(
' → logprob: -11.763407707214355
    5. 'val' → logprob: -11.763407707214355
    6. '(v' → logprob: -13.138407707214355
    7. '(max' → logprob: -14.263407707214355
    8. ' (' → logprob: -14.388407707214355
    9. ' val' → logprob: -14.888407707214355
    10. '(float' → logprob: -14.888407707214355

Token 398: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007255550008267164
    2. ')
' → logprob: -5.132255554199219
    3. '       ' → logprob: -7.132255554199219
    4. '           ' → logprob: -8.382255554199219
    5. ' )' → logprob: -8.757255554199219
    6. ')
' → logprob: -10.382255554199219
    7. '<|end|>' → logprob: -10.632255554199219
    8. '+' → logprob: -11.007255554199219
    9. '               ' → logprob: -11.757255554199219
    10. ' )
' → logprob: -11.882255554199219

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22415517270565033
    2. '<|end|>' → logprob: -1.7241551876068115
    3. '
' → logprob: -4.349154949188232
    4. ',' → logprob: -5.099154949188232
    5. '        
' → logprob: -6.849154949188232
    6. '<|end|>' → logprob: -7.099154949188232
    7. ')' → logprob: -7.224154949188232
    8. '           ' → logprob: -8.34915542602539
    9. ',
' → logprob: -8.47415542602539
    10. '```' → logprob: -10.34915542602539

Token 400: ' tot' (ID: 2417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3280247747898102
    2. 'L' → logprob: -1.8280247449874878
    3. ' L' → logprob: -2.7030248641967773
    4. '<|end|>' → logprob: -3.5780248641967773
    5. '   ' → logprob: -4.828024864196777
    6. 'import' → logprob: -5.578024864196777
    7. ' if' → logprob: -6.578024864196777
    8. '#' → logprob: -6.703024864196777
    9. ')' → logprob: -6.953024864196777
    10. 'from' → logprob: -7.078024864196777

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15062354505062103
    2. 'al' → logprob: -2.4006235599517822
    3. '=' → logprob: -3.0256235599517822
    4. '=sum' → logprob: -7.775623321533203
    5. 'a' → logprob: -9.275623321533203
    6. 'val' → logprob: -10.400623321533203
    7. 'l' → logprob: -11.275623321533203
    8. 'sum' → logprob: -11.400623321533203
    9. ' +=' → logprob: -11.650623321533203
    10. '=len' → logprob: -11.900623321533203

Token 402: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.010718470439314842
    2. 'max' → logprob: -5.13571834564209
    3. ' sum' → logprob: -5.38571834564209
    4. '0' → logprob: -9.13571834564209
    5. ' max' → logprob: -9.76071834564209
    6. 'prob' → logprob: -12.13571834564209
    7. 'min' → logprob: -12.38571834564209
    8. 'float' → logprob: -12.38571834564209
    9. '(sum' → logprob: -12.76071834564209
    10. ' ' → logprob: -12.88571834564209

Token 403: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.27099974633893e-05
    2. '(' → logprob: -11.375012397766113
    3. '(
' → logprob: -14.000012397766113
    4. '(val' → logprob: -15.375012397766113
    5. 'L' → logprob: -16.25001335144043
    6. ' (' → logprob: -17.37501335144043
    7. '([' → logprob: -17.62501335144043
    8. 'val' → logprob: -18.87501335144043
    9. '(l' → logprob: -19.00001335144043
    10. '((' → logprob: -19.37501335144043

Token 404: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42074450850486755
    2. ')
' → logprob: -1.17074453830719
    3. ' -' → logprob: -4.2957444190979
    4. '       ' → logprob: -5.0457444190979
    5. '-' → logprob: -5.1707444190979
    6. '+' → logprob: -5.4207444190979
    7. ' +' → logprob: -6.4207444190979
    8. ' )
' → logprob: -7.5457444190979
    9. ' )' → logprob: -7.9207444190979
    10. '
' → logprob: -8.545744895935059

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009062051773071289
    2. '<|end|>' → logprob: -4.759061813354492
    3. ',' → logprob: -8.384061813354492
    4. ' if' → logprob: -9.134061813354492
    5. '        
' → logprob: -10.259061813354492
    6. '<|end|>' → logprob: -10.884061813354492
    7. ')' → logprob: -11.259061813354492
    8. '
' → logprob: -12.009061813354492
    9. '   ' → logprob: -12.384061813354492
    10. '```' → logprob: -12.509061813354492

Token 406: ' v' (ID: 323)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46558141708374023
    2. '       ' → logprob: -1.0905814170837402
    3. ' if' → logprob: -3.8405814170837402
    4. 'result' → logprob: -4.46558141708374
    5. 'max' → logprob: -6.46558141708374
    6. 'diff' → logprob: -7.34058141708374
    7. 'best' → logprob: -8.215581893920898
    8. '+' → logprob: -8.840581893920898
    9. 'rest' → logprob: -9.215581893920898
    10. 'val' → logprob: -9.715581893920898

Token 407: '2' (ID: 17)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.10995803773403168
    2. ' =' → logprob: -2.7349579334259033
    3. '=' → logprob: -3.9849579334259033
    4. 'a' → logprob: -4.859958171844482
    5. 'alue' → logprob: -4.984958171844482
    6. 'ar' → logprob: -5.734958171844482
    7. 'alu' → logprob: -8.109957695007324
    8. 'for' → logprob: -8.484957695007324
    9. 'alid' → logprob: -8.609957695007324
    10. 'v' → logprob: -8.984957695007324

Token 408: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.6286115646362305
    2. ' =' → logprob: -1.1286115646362305
    3. '=' → logprob: -2.6286115646362305
    4. ',' → logprob: -3.0036115646362305
    5. 'als' → logprob: -5.0036115646362305
    6. 'a' → logprob: -5.1286115646362305
    7. 's' → logprob: -6.1286115646362305
    8. ',_' → logprob: -7.3786115646362305
    9. '=max' → logprob: -7.6286115646362305
    10. 'alid' → logprob: -7.6286115646362305

Token 409: ' exp' (ID: 2794)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07587156444787979
    2. '0' → logprob: -3.200871467590332
    3. 'float' → logprob: -4.700871467590332
    4. 'min' → logprob: -5.200871467590332
    5. '-' → logprob: -5.450871467590332
    6. ' max' → logprob: -5.450871467590332
    7. 'tot' → logprob: -6.450871467590332
    8. '1' → logprob: -6.575871467590332
    9. 'result' → logprob: -6.700871467590332
    10. '(max' → logprob: -6.825871467590332

Token 410: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0015585471410304308
    2. '[:-' → logprob: -6.751558780670166
    3. '[' → logprob: -8.501558303833008
    4. '[k' → logprob: -9.376558303833008
    5. '[v' → logprob: -10.376558303833008
    6. '[:]' → logprob: -10.626558303833008
    7. '[:' → logprob: -11.251558303833008
    8. '-' → logprob: -11.626558303833008
    9. ' [-' → logprob: -11.876558303833008
    10. ')' → logprob: -12.251558303833008

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.50000286102295
    3. '-' → logprob: -14.25000286102295
    4. ']' → logprob: -15.18750286102295
    5. '2' → logprob: -15.62500286102295
    6. '   ' → logprob: -15.87500286102295
    7. '```' → logprob: -16.125003814697266
    8. ' -' → logprob: -16.437503814697266
    9. '(' → logprob: -16.437503814697266
    10. '
' → logprob: -17.187503814697266

Token 412: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1881738007068634
    2. '-' → logprob: -1.938173770904541
    3. '+' → logprob: -4.438173770904541
    4. ' +' → logprob: -4.938173770904541
    5. '-v' → logprob: -5.438173770904541
    6. '*' → logprob: -6.688173770904541
    7. '
' → logprob: -7.063173770904541
    8. ')' → logprob: -8.3131742477417
    9. '       ' → logprob: -8.4381742477417
    10. '-s' → logprob: -8.5631742477417

Token 413: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9849274158477783
    2. '       ' → logprob: -1.9849274158477783
    3. '+' → logprob: -2.4849274158477783
    4. '*' → logprob: -2.4849274158477783
    5. ' if' → logprob: -3.2349274158477783
    6. 'max' → logprob: -3.2349274158477783
    7. ' +' → logprob: -3.3599274158477783
    8. ' -' → logprob: -3.6099274158477783
    9. ' =' → logprob: -3.8599274158477783
    10. '=' → logprob: -3.8599274158477783

Token 414: ' tot' (ID: 2417)
  Prédit: 'tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -1.0502923727035522
    2. '(p' → logprob: -1.9252923727035522
    3. 'max' → logprob: -1.9252923727035522
    4. 'p' → logprob: -2.425292491912842
    5. '(prob' → logprob: -2.675292491912842
    6. 'prob' → logprob: -2.800292491912842
    7. '(t' → logprob: -3.550292491912842
    8. ' tot' → logprob: -3.675292491912842
    9. '(max' → logprob: -4.175292491912842
    10. '(e' → logprob: -4.300292491912842

Token 415: '/d' (ID: 6662)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5790196061134338
    2. '+' → logprob: -1.204019546508789
    3. ' +' → logprob: -2.079019546508789
    4. '
' → logprob: -4.704019546508789
    5. ' if' → logprob: -5.954019546508789
    6. ' /' → logprob: -7.204019546508789
    7. '/' → logprob: -7.329019546508789
    8. ')' → logprob: -8.329019546508789
    9. 'if' → logprob: -8.704019546508789
    10. '+
' → logprob: -8.704019546508789

Token 416: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6032229065895081
    2. '+' → logprob: -0.9782229065895081
    3. ' +' → logprob: -2.9782228469848633
    4. '
' → logprob: -3.8532228469848633
    5. ' if' → logprob: -6.603222846984863
    6. '<|end|>' → logprob: -6.853222846984863
    7. '+
' → logprob: -7.103222846984863
    8. '           ' → logprob: -8.353222846984863
    9. '*' → logprob: -8.603222846984863
    10. 'if' → logprob: -8.978222846984863

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003775264194700867
    2. ' if' → logprob: -8.375377655029297
    3. '+' → logprob: -9.750377655029297
    4. '   ' → logprob: -10.500377655029297
    5. 'if' → logprob: -10.625377655029297
    6. ',' → logprob: -11.875377655029297
    7. '        
' → logprob: -11.875377655029297
    8. ' +' → logprob: -12.000377655029297
    9. '<|end|>' → logprob: -12.250377655029297
    10. '           ' → logprob: -12.875377655029297

Token 418: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19203566014766693
    2. 'result' → logprob: -2.692035675048828
    3. 'print' → logprob: -3.067035675048828
    4. 'if' → logprob: -3.817035675048828
    5. ' if' → logprob: -4.317035675048828
    6. '   ' → logprob: -5.067035675048828
    7. 'v' → logprob: -5.317035675048828
    8. ')' → logprob: -5.567035675048828
    9. '<|end|>' → logprob: -5.942035675048828
    10. ' result' → logprob: -6.067035675048828

Token 419: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22514615952968597
    2. 'v' → logprob: -2.6001460552215576
    3. ' val' → logprob: -2.7251460552215576
    4. ' j' → logprob: -3.2251460552215576
    5. ' i' → logprob: -5.600146293640137
    6. 'j' → logprob: -5.725146293640137
    7. ' x' → logprob: -5.850146293640137
    8. ' idx' → logprob: -5.850146293640137
    9. ' w' → logprob: -6.225146293640137
    10. 'val' → logprob: -6.350146293640137

Token 420: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08909758925437927
    2. 'in' → logprob: -2.464097499847412
    3. '2' → logprob: -9.58909797668457
    4. 's' → logprob: -10.58909797668457
    5. ' ' → logprob: -11.46409797668457
    6. '  ' → logprob: -11.71409797668457
    7. 'L' → logprob: -11.71409797668457
    8. '_in' → logprob: -11.96409797668457
    9. '   ' → logprob: -12.08909797668457
    10. 'v' → logprob: -12.33909797668457

Token 421: ' L' (ID: 451)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.20196276903152466
    2. 'L' → logprob: -1.8269627094268799
    3. ' neighbors' → logprob: -4.451962947845459
    4. ' L' → logprob: -5.201962947845459
    5. 'range' → logprob: -5.576962947845459
    6. ' range' → logprob: -7.076962947845459
    7. 'neighbor' → logprob: -9.7019624710083
    8. 'ne' → logprob: -10.4519624710083
    9. '_neighbors' → logprob: -11.6394624710083
    10. '(L' → logprob: -11.6394624710083

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002534521510824561
    2. ':
' → logprob: -6.00253438949585
    3. '   ' → logprob: -11.002534866333008
    4. '       ' → logprob: -11.252534866333008
    5. ' :' → logprob: -11.752534866333008
    6. '[:-' → logprob: -12.252534866333008
    7. '           ' → logprob: -13.127534866333008
    8. '[:]' → logprob: -13.127534866333008
    9. '<|end|>' → logprob: -13.377534866333008
    10. '=' → logprob: -13.627534866333008

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0738137885928154
    2. ' if' → logprob: -3.0738136768341064
    3. '       ' → logprob: -4.3238139152526855
    4. 'if' → logprob: -5.6988139152526855
    5. '<|end|>' → logprob: -6.0738139152526855
    6. '   ' → logprob: -6.3238139152526855
    7. '	       ' → logprob: -6.5738139152526855
    8. '+' → logprob: -7.1988139152526855
    9. 'v' → logprob: -7.1988139152526855
    10. ' v' → logprob: -7.5738139152526855

Token 424: ' candidate' (ID: 17098)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4893133342266083
    2. '           ' → logprob: -1.1143133640289307
    3. 'if' → logprob: -2.9893133640289307
    4. '               ' → logprob: -5.364313125610352
    5. 'v' → logprob: -6.364313125610352
    6. ' v' → logprob: -6.489313125610352
    7. '   ' → logprob: -8.114313125610352
    8. '       ' → logprob: -8.739313125610352
    9. '	       ' → logprob: -10.489313125610352
    10. '	if' → logprob: -10.614313125610352

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25502264499664307
    2. '=' → logprob: -1.505022644996643
    3. ' >' → logprob: -6.7550225257873535
    4. '>' → logprob: -8.130023002624512
    5. ',' → logprob: -8.630023002624512
    6. '<|end|>' → logprob: -8.630023002624512
    7. '=v' → logprob: -9.130023002624512
    8. ' +=' → logprob: -9.255023002624512
    9. '==' → logprob: -9.255023002624512
    10. '=max' → logprob: -9.380023002624512

Token 426: ' v' (ID: 323)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18425440788269043
    2. 'exp' → logprob: -2.8092544078826904
    3. ' e' → logprob: -3.0592544078826904
    4. '(e' → logprob: -3.8092544078826904
    5. 'result' → logprob: -4.1842546463012695
    6. 'v' → logprob: -4.6842546463012695
    7. '           ' → logprob: -5.3092546463012695
    8. ' exp' → logprob: -6.0592546463012695
    9. '(v' → logprob: -6.5592546463012695
    10. '(exp' → logprob: -6.8092546463012695

Token 427: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1126199960708618
    2. ' if' → logprob: -1.7376199960708618
    3. ' -' → logprob: -1.9876199960708618
    4. ' /' → logprob: -2.6126198768615723
    5. '/v' → logprob: -2.6126198768615723
    6. '-' → logprob: -2.7376198768615723
    7. ' +' → logprob: -3.1126198768615723
    8. '/' → logprob: -3.4876198768615723
    9. ' >' → logprob: -3.9876198768615723
    10. '>' → logprob: -4.487619876861572

Token 428: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6571730971336365
    2. ' -' → logprob: -1.6571731567382812
    3. ' +' → logprob: -1.9071731567382812
    4. '-' → logprob: -2.1571731567382812
    5. '*' → logprob: -4.532173156738281
    6. '/v' → logprob: -5.282173156738281
    7. '>' → logprob: -5.782173156738281
    8. ' *' → logprob: -6.157173156738281
    9. ' >' → logprob: -7.157173156738281
    10. ' if' → logprob: -7.407173156738281

Token 429: ' (' (ID: 350)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.11657097190618515
    2. ' v' → logprob: -3.2415709495544434
    3. 'val' → logprob: -3.6165709495544434
    4. '(v' → logprob: -3.9915709495544434
    5. 'tot' → logprob: -4.491570949554443
    6. ' tot' → logprob: -5.116570949554443
    7. ' (' → logprob: -5.866570949554443
    8. ' val' → logprob: -6.241570949554443
    9. 'exp' → logprob: -6.616570949554443
    10. '(' → logprob: -8.116571426391602

Token 430: 'tot' (ID: 25645)
  Prédit: 'tot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tot' → logprob: -0.5579650402069092
    2. 'v' → logprob: -1.1829650402069092
    3. ' tot' → logprob: -3.432965040206909
    4. 'exp' → logprob: -3.557965040206909
    5. 'val' → logprob: -3.682965040206909
    6. '(v' → logprob: -4.057965278625488
    7. 'e' → logprob: -4.932965278625488
    8. ' v' → logprob: -5.807965278625488
    9. '(e' → logprob: -6.557965278625488
    10. '(exp' → logprob: -6.807965278625488

Token 431: '-v' (ID: 9827)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12392112612724304
    2. '-' → logprob: -2.6239211559295654
    3. '-v' → logprob: -3.1239211559295654
    4. ' ' → logprob: -10.623921394348145
    5. '   ' → logprob: -12.498921394348145
    6. '-p' → logprob: -12.623921394348145
    7. '-val' → logprob: -12.873921394348145
    8. '-t' → logprob: -13.248921394348145
    9. ' -
' → logprob: -13.373921394348145
    10. '  ' → logprob: -13.498921394348145

Token 432: ')/(' (ID: 60504)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.031688231974840164
    2. ')' → logprob: -3.5316882133483887
    3. ' )' → logprob: -6.531688213348389
    4. ')*' → logprob: -8.656688690185547
    5. ')/(' → logprob: -8.781688690185547
    6. ')v' → logprob: -9.781688690185547
    7. 'v' → logprob: -10.281688690185547
    8. '[v' → logprob: -10.531688690185547
    9. '*v' → logprob: -11.406688690185547
    10. ' ' → logprob: -12.156688690185547

Token 433: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004216170927975327
    2. '(d' → logprob: -7.875421524047852
    3. ' d' → logprob: -10.500421524047852
    4. '   ' → logprob: -12.250421524047852
    5. '
' → logprob: -13.125421524047852
    6. 'tot' → logprob: -13.375421524047852
    7. 'out' → logprob: -14.000421524047852
    8. ' ' → logprob: -14.125421524047852
    9. '  ' → logprob: -14.250421524047852
    10. ' (' → logprob: -14.375421524047852

Token 434: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08523954451084137
    2. ' -' → logprob: -2.5852396488189697
    3. ')' → logprob: -5.085239410400391
    4. '[k' → logprob: -9.46023941040039
    5. '[v' → logprob: -10.21023941040039
    6. '   ' → logprob: -12.58523941040039
    7. ' )' → logprob: -12.71023941040039
    8. '[-' → logprob: -12.96023941040039
    9. '[d' → logprob: -12.96023941040039
    10. 'd' → logprob: -13.21023941040039

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.000011444091797
    4. '
' → logprob: -16.875011444091797
    5. '  ' → logprob: -17.375011444091797
    6. ')' → logprob: -18.125011444091797
    7. '2' → logprob: -18.125011444091797
    8. 'k' → logprob: -18.125011444091797
    9. '```' → logprob: -18.812511444091797
    10. '{' → logprob: -19.250011444091797

Token 436: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.29987233877182007
    2. ')' → logprob: -2.049872398376465
    3. '           ' → logprob: -2.049872398376465
    4. ')
' → logprob: -7.674872398376465
    5. ' )
' → logprob: -8.174872398376465
    6. '       ' → logprob: -8.299872398376465
    7. ']
' → logprob: -8.674872398376465
    8. ']' → logprob: -9.299872398376465
    9. '               ' → logprob: -9.674872398376465
    10. ')*' → logprob: -9.674872398376465

Token 437: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.2994620242971e-06
    2. '       ' → logprob: -12.500008583068848
    3. '<|end|>' → logprob: -13.750008583068848
    4. '               ' → logprob: -13.875008583068848
    5. 'if' → logprob: -14.125008583068848
    6. ' if' → logprob: -14.625008583068848
    7. '   ' → logprob: -14.875008583068848
    8. '	       ' → logprob: -15.000008583068848
    9. ',' → logprob: -15.625008583068848
    10. '```' → logprob: -16.12500762939453

Token 438: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6998656988143921
    2. 'if' (adapté à ' if') → logprob: -0.6998656988143921
    3. ' if' → logprob: -5.574865818023682
    4. '       ' → logprob: -5.949865818023682
    5. 'result' → logprob: -8.324865341186523
    6. '   ' → logprob: -11.324865341186523
    7. '	       ' → logprob: -11.324865341186523
    8. '	if' → logprob: -11.699865341186523
    9. '               ' → logprob: -12.324865341186523
    10. '		' → logprob: -12.699865341186523

Token 439: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.038100700825452805
    2. ' candidate' → logprob: -3.2881007194519043
    3. '(candidate' → logprob: -10.038100242614746
    4. 'result' → logprob: -11.538100242614746
    5. 'c' → logprob: -12.913100242614746
    6. '   ' → logprob: -13.663100242614746
    7. ' candidat' → logprob: -14.413100242614746
    8. ' result' → logprob: -15.163100242614746
    9. '_candidate' → logprob: -15.163100242614746
    10. 'not' → logprob: -15.413100242614746

Token 440: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5761542320251465
    2. ' >' → logprob: -0.8261542320251465
    3. '<' → logprob: -9.076154708862305
    4. ' <' → logprob: -9.951154708862305
    5. ' >
' → logprob: -10.701154708862305
    6. '>
' → logprob: -10.951154708862305
    7. '           ' → logprob: -12.701154708862305
    8. ')>' → logprob: -13.326154708862305
    9. ')' → logprob: -13.826154708862305
    10. ' ' → logprob: -13.951154708862305

Token 441: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0004996551433578134
    2. ' result' → logprob: -7.625499725341797
    3. '       ' → logprob: -12.125499725341797
    4. '           ' → logprob: -12.500499725341797
    5. '   ' → logprob: -13.375499725341797
    6. '	result' → logprob: -15.125499725341797
    7. '
' → logprob: -15.375499725341797
    8. '(result' → logprob: -16.750499725341797
    9. '  ' → logprob: -17.250499725341797
    10. '0' → logprob: -17.250499725341797

Token 442: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5320548415184021
    2. ':' → logprob: -0.9070548415184021
    3. '           ' → logprob: -4.907054901123047
    4. '               ' → logprob: -6.907054901123047
    5. '):
' → logprob: -8.407054901123047
    6. ' :
' → logprob: -9.157054901123047
    7. '       ' → logprob: -9.782054901123047
    8. ' and' → logprob: -10.657054901123047
    9. ' :' → logprob: -11.282054901123047
    10. '          ' → logprob: -11.407054901123047

Token 443: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06792222708463669
    2. '           ' → logprob: -2.8179221153259277
    3. ' result' → logprob: -5.317922115325928
    4. 'result' → logprob: -7.067922115325928
    5. '   ' → logprob: -9.692922592163086
    6. '                   ' → logprob: -10.317922592163086
    7. '	       ' → logprob: -10.817922592163086
    8. '              ' → logprob: -11.192922592163086
    9. '       ' → logprob: -11.317922592163086
    10. '                       ' → logprob: -11.942922592163086

Token 444: ' result' (ID: 1534)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1044822558760643
    2. ' result' → logprob: -2.8544821739196777
    3. 'result' (adapté à ' result') → logprob: -3.2294821739196777
    4. '                   ' → logprob: -7.104482173919678
    5. '                ' → logprob: -7.604482173919678
    6. '                       ' → logprob: -8.354482650756836
    7. '           ' → logprob: -8.854482650756836
    8. '	result' → logprob: -9.854482650756836
    9. '   ' → logprob: -9.979482650756836
    10. '			' → logprob: -10.229482650756836

Token 445: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.393150329589844
    4. '	' → logprob: -15.643150329589844
    5. '    ' → logprob: -16.768150329589844
    6. ' ' → logprob: -17.268150329589844
    7. '           ' → logprob: -17.268150329589844
    8. ' =
' → logprob: -17.268150329589844
    9. '=c' → logprob: -18.143150329589844
    10. '               ' → logprob: -18.143150329589844

Token 446: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.02975083328783512
    2. ' candidate' → logprob: -3.5297508239746094
    3. 'c' → logprob: -15.90475082397461
    4. ' candidat' → logprob: -16.15475082397461
    5. '(candidate' → logprob: -16.40475082397461
    6. '_candidate' → logprob: -17.27975082397461
    7. ' candidato' → logprob: -19.15475082397461
    8. '           ' → logprob: -19.27975082397461
    9. 'cand' → logprob: -19.52975082397461
    10. '               ' → logprob: -19.65475082397461

Token 447: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13495109975337982
    2. ')' → logprob: -2.634951114654541
    3. '       ' → logprob: -4.259951114654541
    4. '<|end|>' → logprob: -4.259951114654541
    5. '
' → logprob: -4.509951114654541
    6. 'print' → logprob: -5.384951114654541
    7. '    
' → logprob: -5.759951114654541
    8. 'return' → logprob: -6.509951114654541
    9. '\n' → logprob: -7.009951114654541
    10. ' return' → logprob: -7.134951114654541

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.260623574256897
    2. ')' → logprob: -1.510623574256897
    3. '<|end|>' → logprob: -5.135623455047607
    4. 'return' → logprob: -7.260623455047607
    5. ' return' → logprob: -8.135623931884766
    6. '    
' → logprob: -8.135623931884766
    7. ':return' → logprob: -8.260623931884766
    8. ']' → logprob: -8.635623931884766
    9. ' )' → logprob: -8.760623931884766
    10. '
' → logprob: -9.010623931884766

Token 449: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006332091288641095
    2. ' print' → logprob: -7.875633239746094
    3. ')' → logprob: -9.250633239746094
    4. 'return' → logprob: -9.250633239746094
    5. '   ' → logprob: -9.750633239746094
    6. 'pr' → logprob: -14.250633239746094
    7. ' return' → logprob: -14.500633239746094
    8. '```' → logprob: -14.750633239746094
    9. '
' → logprob: -15.375633239746094
    10. '    
' → logprob: -15.875633239746094

Token 450: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0622403621673584
    2. '(' → logprob: -2.8122403621673584
    3. '(round' → logprob: -8.812240600585938
    4. '(int' → logprob: -9.812240600585938
    5. '()' → logprob: -9.937240600585938
    6. 'result' → logprob: -11.687240600585938
    7. '(
' → logprob: -12.187240600585938
    8. ' (' → logprob: -12.937240600585938
    9. '(f' → logprob: -13.187240600585938
    10. '(float' → logprob: -14.562240600585938

Token 451: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1093578804284334e-05
    2. ' )' → logprob: -10.125051498413086
    3. '+' → logprob: -12.125051498413086
    4. ')
' → logprob: -12.750051498413086
    5. '()' → logprob: -14.125051498413086
    6. '())' → logprob: -14.375051498413086
    7. ')#' → logprob: -15.375051498413086
    8. ')`' → logprob: -15.750051498413086
    9. '   ' → logprob: -16.000051498413086
    10. '*' → logprob: -16.125051498413086

Token 452: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 451
Tokens correctement prédits (1ère position, stricte): 192
Tokens correctement prédits (1ère position, avec adaptation): 207
Tokens correctement prédits (top 10): 364
Précision stricte (1ère position): 42.57%
Précision adaptée (1ère position): 45.90%
Précision (top 10): 80.71%
================================================================================
