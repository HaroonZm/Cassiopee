================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def yakusu(n):
    lower_divisors, upper_divisors = [], []
    i = 1
    while i*i <= n:
        if n % i == 0:
            lower_divisors.append(i)
            if i != n // i:
                upper_divisors.append(n//i)
        i += 1
    return lower_divisors + upper_divisors[::-1]
N, K = map(int, input().split())
L = list(map(int, input().split()))
a = sum(L)
R = yakusu(a)[::-1]
for i in range(len(R)):
    add = 0
    minus = 0
    s = R[i]
    A = []
    B = []
    for j in range(N):
        k = L[j]
        a = k % s
        b = s - a
        if a > b:
            add += b
            B.append(b)
        elif a < b:
            minus += a
            A.append(a)
        else:
            add += a
            B.append(a)
    A = sorted(A)
    B = sorted(B)
    if minus == add:
        d = minus
        if d <= K:
            print(s)
            exit()
    elif minus > add:
        q = (minus - add) // s
        d = sum(A[:len(A)-q])
        if d <= K:
            print(s)
            exit()
    else:
        q = (add - minus) // s
        d = sum(B[:len(B)-q])
        if d <= K:
            print(s)
            exit()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' yak' (ID: 16000)
  → Token d'amorce (pas de prédiction)

Token 2: 'usu' (ID: 21118)
  → Token d'amorce (pas de prédiction)

Token 3: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005573204252868891
    2. '_' → logprob: -7.7505574226379395
    3. ' (' → logprob: -9.875556945800781
    4. '(a' → logprob: -10.625556945800781
    5. '(
' → logprob: -10.875556945800781
    6. '(n' → logprob: -12.625556945800781
    7. '(_' → logprob: -12.625556945800781
    8. '_(' → logprob: -12.625556945800781
    9. '(x' → logprob: -13.000556945800781
    10. '((' → logprob: -13.125556945800781

Token 4: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6958800554275513
    2. '):' → logprob: -0.6958800554275513
    3. ',' → logprob: -7.195879936218262
    4. ':' → logprob: -7.445879936218262
    5. '_' → logprob: -8.070879936218262
    6. 'u' → logprob: -8.570879936218262
    7. 'a' → logprob: -8.820879936218262
    8. '*' → logprob: -9.320879936218262
    9. 's' → logprob: -9.570879936218262
    10. ')：' → logprob: -9.695879936218262

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23587389290332794
    2. ':' → logprob: -1.6108739376068115
    3. '```' → logprob: -4.860873699188232
    4. '	if' → logprob: -6.485873699188232
    5. ' if' → logprob: -7.985873699188232
    6. '``' → logprob: -8.98587417602539
    7. '       ' → logprob: -9.48587417602539
    8. ' ' → logprob: -9.48587417602539
    9. ':
' → logprob: -9.61087417602539
    10. '    
' → logprob: -9.73587417602539

Token 6: ' lower' (ID: 6931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10044669359922409
    2. ' ' → logprob: -3.4754467010498047
    3. ' if' → logprob: -3.6004467010498047
    4. '```' → logprob: -4.100446701049805
    5. '`' → logprob: -5.225446701049805
    6. ''' → logprob: -5.225446701049805
    7. '"' → logprob: -6.100446701049805
    8. '``' → logprob: -6.225446701049805
    9. '    ' → logprob: -6.350446701049805
    10. '\t' → logprob: -7.475446701049805

Token 7: '_div' (ID: 36926)
  Prédit: '_bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.20303429663181305
    2. '_' → logprob: -1.8280342817306519
    3. '=' → logprob: -4.453034400939941
    4. ' =' → logprob: -5.328034400939941
    5. '(' → logprob: -6.578034400939941
    6. 'bound' → logprob: -6.953034400939941
    7. '_limit' → logprob: -7.203034400939941
    8. ')' → logprob: -7.203034400939941
    9. '()' → logprob: -7.578034400939941
    10. ' ' → logprob: -7.828034400939941

Token 8: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3646447956562042
    2. '=' → logprob: -1.8646447658538818
    3. 'isor' → logprob: -2.489644765853882
    4. ' =' → logprob: -3.364644765853882
    5. '_' → logprob: -4.364645004272461
    6. 's' → logprob: -4.739645004272461
    7. 'iders' → logprob: -5.864645004272461
    8. '```' → logprob: -6.364645004272461
    9. 'isible' → logprob: -6.489645004272461
    10. '_id' → logprob: -6.989645004272461

Token 9: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3514781892299652
    2. 'ors' → logprob: -1.2264782190322876
    3. '=' → logprob: -6.101478099822998
    4. '```' → logprob: -7.976478099822998
    5. ' =' → logprob: -8.601478576660156
    6. '   ' → logprob: -9.851478576660156
    7. 'o' → logprob: -10.226478576660156
    8. ' or' → logprob: -10.851478576660156
    9. 'er' → logprob: -10.976478576660156
    10. 's' → logprob: -11.476478576660156

Token 10: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23116937279701233
    2. ' =' → logprob: -1.60616934299469
    3. '(' → logprob: -6.1061692237854
    4. ',' → logprob: -6.7311692237854
    5. '_' → logprob: -7.1061692237854
    6. 's' → logprob: -7.8561692237854
    7. '   ' → logprob: -7.8561692237854
    8. '=[]' → logprob: -8.731169700622559
    9. '```' → logprob: -9.231169700622559
    10. '_=' → logprob: -9.356169700622559

Token 11: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.24872717261314392
    2. 'upper' → logprob: -1.7487272024154663
    3. '[]' → logprob: -3.4987270832061768
    4. ' []' → logprob: -4.248727321624756
    5. '=' → logprob: -7.248727321624756
    6. ' =' → logprob: -8.373726844787598
    7. '=[]' → logprob: -8.748726844787598
    8. '[' → logprob: -8.998726844787598
    9. '_upper' → logprob: -9.248726844787598
    10. ' [' → logprob: -9.498726844787598

Token 12: '_div' (ID: 36926)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44278019666671753
    2. '=' → logprob: -2.1927802562713623
    3. 's' → logprob: -2.1927802562713623
    4. '_' → logprob: -2.1927802562713623
    5. '_div' → logprob: -4.067780017852783
    6. ',' → logprob: -5.942780017852783
    7. '_s' → logprob: -7.067780017852783
    8. ')' → logprob: -7.192780017852783
    9. ' ' → logprob: -7.942780017852783
    10. '_=' → logprob: -8.442780494689941

Token 13: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5004610419273376
    2. 'is' → logprob: -1.7504611015319824
    3. '=' → logprob: -2.0004611015319824
    4. '=[]' → logprob: -2.6254611015319824
    5. ' =' → logprob: -5.500461101531982
    6. '=s' → logprob: -6.500461101531982
    7. 'isible' → logprob: -7.000461101531982
    8. ',' → logprob: -7.125461101531982
    9. '=None' → logprob: -7.125461101531982
    10. '=_' → logprob: -7.250461101531982

Token 14: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.00045926711754873395
    2. 'or' → logprob: -7.75045919418335
    3. '=' → logprob: -11.500459671020508
    4. '```' → logprob: -12.250459671020508
    5. 'orz' → logprob: -12.750459671020508
    6. 'iors' → logprob: -13.625459671020508
    7. 'ectors' → logprob: -14.000459671020508
    8. 'ons' → logprob: -14.125459671020508
    9. 'orsi' → logprob: -14.250459671020508
    10. 'ores' → logprob: -14.250459671020508

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016061700880527496
    2. '=' → logprob: -4.141061782836914
    3. ',' → logprob: -11.016061782836914
    4. ' ' → logprob: -11.766061782836914
    5. '=[]' → logprob: -13.266061782836914
    6. '   ' → logprob: -15.016061782836914
    7. '=[],' → logprob: -15.016061782836914
    8. ' ,' → logprob: -15.516061782836914
    9. ')' → logprob: -16.141061782836914
    10. ' =
' → logprob: -16.266061782836914

Token 16: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.466993510723114
    2. ' [],' → logprob: -1.0919935703277588
    3. '([],' → logprob: -4.34199333190918
    4. '[' → logprob: -4.46699333190918
    5. '[]' → logprob: -4.84199333190918
    6. ' [' → logprob: -6.59199333190918
    7. ' []' → logprob: -7.09199333190918
    8. ' (' → logprob: -7.46699333190918
    9. ' ' → logprob: -7.46699333190918
    10. '[n' → logprob: -7.96699333190918

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47412803769111633
    2. ' []' → logprob: -0.974128007888794
    3. '[' → logprob: -11.349127769470215
    4. '[]}' → logprob: -11.349127769470215
    5. '[n' → logprob: -11.724127769470215
    6. '[],' → logprob: -12.224127769470215
    7. '[]
' → logprob: -13.099127769470215
    8. '[]>' → logprob: -13.349127769470215
    9. ' [],' → logprob: -13.349127769470215
    10. ' ' → logprob: -13.349127769470215

Token 18: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.886958658695221
    2. '   ' → logprob: -0.886958658695221
    3. '```' → logprob: -2.761958599090576
    4. '    
' → logprob: -4.011958599090576
    5. ':
' → logprob: -4.261958599090576
    6. '\' → logprob: -4.261958599090576
    7. ' ' → logprob: -4.261958599090576
    8. ' for' → logprob: -4.511958599090576
    9. '<|end|>' → logprob: -4.886958599090576
    10. '\n' → logprob: -4.886958599090576

Token 19: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5909854173660278
    2. 'for' → logprob: -1.0909854173660278
    3. '   ' → logprob: -2.2159852981567383
    4. '```' → logprob: -7.840985298156738
    5. ' ' → logprob: -8.090985298156738
    6. '    
' → logprob: -8.340985298156738
    7. '    ' → logprob: -8.590985298156738
    8. '`' → logprob: -10.340985298156738
    9. '\n' → logprob: -11.215985298156738
    10. '\' → logprob: -11.340985298156738

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12380959838628769
    2. '=' → logprob: -2.373809576034546
    3. 'n' → logprob: -4.748809814453125
    4. 'f' → logprob: -4.998809814453125
    5. ' ' → logprob: -5.498809814453125
    6. ' n' → logprob: -6.373809814453125
    7. 's' → logprob: -7.623809814453125
    8. ' f' → logprob: -7.873809814453125
    9. 'nt' → logprob: -7.998809814453125
    10. ' +=' → logprob: -8.123809814453125

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4411573112010956
    2. '1' → logprob: -1.191157341003418
    3. '2' → logprob: -2.941157341003418
    4. '   ' → logprob: -11.691157341003418
    5. '0' → logprob: -11.816157341003418
    6. 'n' → logprob: -11.941157341003418
    7. ' n' → logprob: -12.191157341003418
    8. '  ' → logprob: -13.191157341003418
    9. '    ' → logprob: -13.816157341003418
    10. ' ' → logprob: -14.003657341003418

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034706491976976395
    2. '2' → logprob: -3.6597065925598145
    3. ' ' → logprob: -4.7847065925598145
    4. '0' → logprob: -12.034706115722656
    5. 'n' → logprob: -12.534706115722656
    6. '   ' → logprob: -13.284706115722656
    7. '  ' → logprob: -13.659706115722656
    8. 'int' → logprob: -14.284706115722656
    9. '    ' → logprob: -15.284706115722656
    10. '3' → logprob: -15.597206115722656

Token 23: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8367345333099365
    2. ' while' → logprob: -1.0867345333099365
    3. '<|end|>' → logprob: -2.4617345333099365
    4. '   ' → logprob: -3.0867345333099365
    5. '    ' → logprob: -3.5867345333099365
    6. '  ' → logprob: -4.336734771728516
    7. 'while' → logprob: -4.336734771728516
    8. ':' → logprob: -4.586734771728516
    9. ',' → logprob: -4.836734771728516
    10. '<|end|>' → logprob: -5.586734771728516

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8729661107063293
    2. '   ' → logprob: -1.2479660511016846
    3. ' while' → logprob: -2.1229660511016846
    4. '    ' → logprob: -2.4979660511016846
    5. '  ' → logprob: -3.6229660511016846
    6. '<|end|>' → logprob: -3.7479660511016846
    7. 'while' → logprob: -4.872966289520264
    8. ',' → logprob: -4.997966289520264
    9. ':' → logprob: -5.372966289520264
    10. ' ,' → logprob: -5.622966289520264

Token 25: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.17473186552524567
    2. ' ' → logprob: -2.049731969833374
    3. 'while' (adapté à ' while') → logprob: -4.174731731414795
    4. '    ' → logprob: -4.799731731414795
    5. '   ' → logprob: -5.174731731414795
    6. '  ' → logprob: -7.174731731414795
    7. ' i' → logprob: -7.549731731414795
    8. '	while' → logprob: -8.049732208251953
    9. ' ,' → logprob: -9.674732208251953
    10. 'i' → logprob: -9.799732208251953

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011287491768598557
    2. 'i' → logprob: -4.511287689208984
    3. ' ' → logprob: -8.636287689208984
    4. ' (' → logprob: -10.511287689208984
    5. '(i' → logprob: -11.136287689208984
    6. ' ' → logprob: -11.761287689208984
    7. '	i' → logprob: -12.261287689208984
    8. '(' → logprob: -12.386287689208984
    9. ' n' → logprob: -13.261287689208984
    10. '  ' → logprob: -15.011287689208984

Token 27: '*i' (ID: 51147)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.45921191573143005
    2. '*' → logprob: -1.9592119455337524
    3. ' <=' → logprob: -2.084211826324463
    4. '*i' → logprob: -2.709211826324463
    5. '<=' → logprob: -3.334211826324463
    6. ' ' → logprob: -7.834211826324463
    7. '**' → logprob: -8.959212303161621
    8. 'i' → logprob: -10.084212303161621
    9. ' i' → logprob: -10.584212303161621
    10. ' **' → logprob: -11.959212303161621

Token 28: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06207680702209473
    2. '<=' → logprob: -2.8120768070220947
    3. ' <' → logprob: -10.062076568603516
    4. '<' → logprob: -10.187076568603516
    5. ' ' → logprob: -11.187076568603516
    6. '<|end|>' → logprob: -12.062076568603516
    7. ']<=' → logprob: -13.437076568603516
    8. ')<=' → logprob: -13.437076568603516
    9. '<|end|>' → logprob: -13.687076568603516
    10. ' <=",' → logprob: -13.937076568603516

Token 29: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759456157684326
    2. ' n' → logprob: -0.8259456157684326
    3. '	n' → logprob: -12.700945854187012
    4. ' ' → logprob: -12.950945854187012
    5. ' ' → logprob: -15.200945854187012
    6. '```' → logprob: -15.575945854187012
    7. '   ' → logprob: -16.075944900512695
    8. ')n' → logprob: -16.888444900512695
    9. '_n' → logprob: -17.013444900512695
    10. '  ' → logprob: -17.763444900512695

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012035658583045006
    2. ' :' → logprob: -6.751203536987305
    3. ':**' → logprob: -10.876203536987305
    4. '):' → logprob: -11.876203536987305
    5. ':
' → logprob: -12.501203536987305
    6. ':i' → logprob: -13.876203536987305
    7. '：' → logprob: -14.501203536987305
    8. ' and' → logprob: -14.501203536987305
    9. '():' → logprob: -15.001203536987305
    10. ':return' → logprob: -15.251203536987305

Token 31: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06237969547510147
    2. ' :' → logprob: -2.9373795986175537
    3. '    ' → logprob: -6.062379837036133
    4. '   ' → logprob: -6.437379837036133
    5. '       ' → logprob: -6.812379837036133
    6. ':
' → logprob: -7.312379837036133
    7. '):' → logprob: -7.437379837036133
    8. ' ' → logprob: -7.937379837036133
    9. ' :
' → logprob: -8.312379837036133
    10. '<|end|>' → logprob: -8.937379837036133

Token 32: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24163943529129028
    2. ' :' → logprob: -2.8666393756866455
    3. '<|end|>' → logprob: -2.8666393756866455
    4. '    ' → logprob: -3.2416393756866455
    5. ':' → logprob: -3.2416393756866455
    6. '       ' → logprob: -5.366639614105225
    7. '<|end|>' → logprob: -5.616639614105225
    8. '   ' → logprob: -5.616639614105225
    9. '  ' → logprob: -6.241639614105225
    10. ' if' → logprob: -6.366639614105225

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0008105786982923746
    2. 'n' → logprob: -7.125810623168945
    3. ' (' → logprob: -12.375810623168945
    4. ' ' → logprob: -14.000810623168945
    5. '(n' → logprob: -14.125810623168945
    6. '	n' → logprob: -15.500810623168945
    7. ' ' → logprob: -16.875810623168945
    8. '(' → logprob: -17.000810623168945
    9. '_n' → logprob: -17.500810623168945
    10. ' not' → logprob: -17.875810623168945

Token 34: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12728631496429443
    2. '%' → logprob: -2.127286434173584
    3. '%i' → logprob: -8.002285957336426
    4. ' ' → logprob: -10.752285957336426
    5. ' ' → logprob: -13.502285957336426
    6. '%e' → logprob: -15.752285957336426
    7. '%x' → logprob: -16.002286911010742
    8. '％' → logprob: -16.627286911010742
    9. ' %
' → logprob: -16.627286911010742
    10. '%c' → logprob: -17.127286911010742

Token 35: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20149970054626465
    2. 'i' → logprob: -1.7014997005462646
    3. '	i' → logprob: -10.076499938964844
    4. ' ' → logprob: -10.201499938964844
    5. '<|end|>' → logprob: -12.951499938964844
    6. ' ' → logprob: -13.201499938964844
    7. '```' → logprob: -14.701499938964844
    8. '<|end|>' → logprob: -14.701499938964844
    9. '  ' → logprob: -14.951499938964844
    10. ' ‌' → logprob: -14.951499938964844

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062014851719141006
    2. '==' → logprob: -2.8120148181915283
    3. ' ' → logprob: -10.81201457977295
    4. '=' → logprob: -11.56201457977295
    5. ')==' → logprob: -12.18701457977295
    6. ' =' → logprob: -12.31201457977295
    7. ')' → logprob: -12.81201457977295
    8. '===' → logprob: -13.68701457977295
    9. '<|end|>' → logprob: -14.18701457977295
    10. ' ===' → logprob: -14.43701457977295

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868740200996399
    2. ' ' → logprob: -1.1368739604949951
    3. ' ' → logprob: -12.761874198913574
    4. '   ' → logprob: -17.136873245239258
    5. '۰' → logprob: -17.761873245239258
    6. '  ' → logprob: -17.886873245239258
    7. '```' → logprob: -18.511873245239258
    8. '=' → logprob: -18.636873245239258
    9. '<|end|>' → logprob: -18.636873245239258
    10. ' ' → logprob: -18.699373245239258

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.376171112060547
    4. '  ' → logprob: -17.813671112060547
    5. '۰' → logprob: -17.938671112060547
    6. '   ' → logprob: -17.938671112060547
    7. ' ' → logprob: -18.938671112060547
    8. '０' → logprob: -19.001171112060547
    9. '```' → logprob: -19.188671112060547
    10. '	' → logprob: -19.376171112060547

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010115911572938785
    2. '):' → logprob: -10.125101089477539
    3. ' :' → logprob: -10.250101089477539
    4. ':
' → logprob: -11.000101089477539
    5. ':**' → logprob: -12.125101089477539
    6. ' and' → logprob: -13.250101089477539
    7. ':return' → logprob: -14.750101089477539
    8. '       ' → logprob: -15.375101089477539
    9. ':

' → logprob: -15.625101089477539
    10. 'and' → logprob: -16.00010108947754

Token 40: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18832558393478394
    2. '       ' → logprob: -1.9383256435394287
    3. '        ' → logprob: -3.9383256435394287
    4. ' ' → logprob: -6.18832540512085
    5. '        
' → logprob: -6.31332540512085
    6. '<|end|>' → logprob: -7.18832540512085
    7. '            ' → logprob: -7.56332540512085
    8. ' lower' → logprob: -7.68832540512085
    9. '            
' → logprob: -7.93832540512085
    10. '   ' → logprob: -7.93832540512085

Token 41: ' lower' (ID: 6931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6458159685134888
    2. ' lower' → logprob: -0.7708159685134888
    3. 'lower' (adapté à ' lower') → logprob: -4.520815849304199
    4. '               ' → logprob: -6.645815849304199
    5. '       ' → logprob: -8.1458158493042
    6. ' if' → logprob: -8.5208158493042
    7. '            ' → logprob: -8.6458158493042
    8. '   ' → logprob: -9.7708158493042
    9. ' ' → logprob: -9.8958158493042
    10. '        ' → logprob: -10.1458158493042

Token 42: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -7.896309739408025e-07
    2. 'div' → logprob: -15.375000953674316
    3. ' _' → logprob: -16.0
    4. '_DIV' → logprob: -16.125
    5. ' див' → logprob: -16.375
    6. '_def' → logprob: -16.625
    7. '<div' → logprob: -17.125
    8. '_' → logprob: -18.125
    9. ' divis' → logprob: -18.625
    10. '.append' → logprob: -18.75

Token 43: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0007399422465823591
    2. 's' → logprob: -7.875740051269531
    3. 'isi' → logprob: -9.250740051269531
    4. 'itors' → logprob: -9.750740051269531
    5. 'ectors' → logprob: -10.000740051269531
    6. 'ors' → logprob: -10.125740051269531
    7. 'isor' → logprob: -10.875740051269531
    8. 'iors' → logprob: -10.875740051269531
    9. '   ' → logprob: -11.375740051269531
    10. 'istors' → logprob: -11.375740051269531

Token 44: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.279862642288208
    2. 's' → logprob: -1.529862642288208
    3. 'tors' → logprob: -4.654862403869629
    4. 'ators' → logprob: -5.029862403869629
    5. '   ' → logprob: -5.529862403869629
    6. 'rors' → logprob: -6.279862403869629
    7. 'itors' → logprob: -7.529862403869629
    8. ' ' → logprob: -7.654862403869629
    9. 'ctors' → logprob: -7.779862403869629
    10. '[' → logprob: -7.779862403869629

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.28123411536216736
    2. '.' → logprob: -1.4062341451644897
    3. ' .' → logprob: -10.781233787536621
    4. '.setdefault' → logprob: -11.406233787536621
    5. '.Append' → logprob: -11.406233787536621
    6. '.extend' → logprob: -12.031233787536621
    7. 'append' → logprob: -12.156233787536621
    8. '.py' → logprob: -12.281233787536621
    9. '.add' → logprob: -12.406233787536621
    10. '.push' → logprob: -12.781233787536621

Token 46: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0019307781476527452
    2. '(' → logprob: -6.2519307136535645
    3. '(
' → logprob: -13.626931190490723
    4. '(n' → logprob: -14.126931190490723
    5. '(

' → logprob: -16.001930236816406
    6. ' (' → logprob: -16.751930236816406
    7. '(I' → logprob: -18.376930236816406
    8. '((' → logprob: -18.501930236816406
    9. '(ii' → logprob: -19.001930236816406
    10. '(a' → logprob: -19.751930236816406

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008201113669201732
    2. ')
' → logprob: -7.125820159912109
    3. '           ' → logprob: -11.37582015991211
    4. ')
' → logprob: -14.00082015991211
    5. '),' → logprob: -14.25082015991211
    6. ' )' → logprob: -14.25082015991211
    7. '       ' → logprob: -14.37582015991211
    8. ')

' → logprob: -14.75082015991211
    9. '               ' → logprob: -15.00082015991211
    10. ')`' → logprob: -15.12582015991211

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4441644549369812
    2. '            
' → logprob: -1.069164514541626
    3. '        
' → logprob: -5.069164276123047
    4. '    
' → logprob: -6.319164276123047
    5. '
' → logprob: -6.569164276123047
    6. '            ' → logprob: -6.819164276123047
    7. '       ' → logprob: -7.319164276123047
    8. '\n' → logprob: -7.319164276123047
    9. ' 
' → logprob: -7.569164276123047
    10. '        ' → logprob: -8.194164276123047

Token 49: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31447234749794006
    2. ' if' → logprob: -1.3144723176956177
    3. '           ' → logprob: -7.064472198486328
    4. 'upper' → logprob: -8.564472198486328
    5. ' upper' → logprob: -9.564472198486328
    6. '            ' → logprob: -10.189472198486328
    7. ' ' → logprob: -10.314472198486328
    8. ' ' → logprob: -12.064472198486328
    9. '   ' → logprob: -12.564472198486328
    10. '```' → logprob: -12.814472198486328

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07930734008550644
    2. 'i' → logprob: -2.5793073177337646
    3. ' n' → logprob: -8.704307556152344
    4. ' ' → logprob: -9.079307556152344
    5. 'n' → logprob: -9.829307556152344
    6. ' ' → logprob: -10.079307556152344
    7. '   ' → logprob: -11.454307556152344
    8. '	i' → logprob: -11.454307556152344
    9. '(i' → logprob: -12.329307556152344
    10. ' (' → logprob: -12.454307556152344

Token 51: ' !=' (ID: 1666)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5440947413444519
    2. '!=' → logprob: -1.5440948009490967
    3. ' !=' → logprob: -2.1690948009490967
    4. '*i' → logprob: -2.4190948009490967
    5. ' *' → logprob: -5.919094562530518
    6. ' ' → logprob: -9.669095039367676
    7. '**' → logprob: -10.544095039367676
    8. '!==' → logprob: -10.794095039367676
    9. ' i' → logprob: -11.669095039367676
    10. '	' → logprob: -12.294095039367676

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1270633488893509
    2. 'n' → logprob: -2.127063274383545
    3. ' ' → logprob: -9.127063751220703
    4. '	n' → logprob: -11.127063751220703
    5. '(n' → logprob: -12.127063751220703
    6. '1' → logprob: -12.502063751220703
    7. '  ' → logprob: -14.127063751220703
    8. ' ' → logprob: -14.252063751220703
    9. '    ' → logprob: -14.377063751220703
    10. ' (' → logprob: -14.877063751220703

Token 53: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.04797045513987541
    2. ' //' → logprob: -3.1729705333709717
    3. '/i' → logprob: -5.922970294952393
    4. '/' → logprob: -6.172970294952393
    5. ' /' → logprob: -9.04797077178955
    6. ' ' → logprob: -9.67297077178955
    7. '```' → logprob: -12.29797077178955
    8. ' ' → logprob: -12.42297077178955
    9. '//=' → logprob: -13.17297077178955
    10. '/I' → logprob: -14.42297077178955

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010354298865422606
    2. ' i' → logprob: -6.876035213470459
    3. '	i' → logprob: -13.501035690307617
    4. ' ' → logprob: -14.376035690307617
    5. '   ' → logprob: -14.501035690307617
    6. '  ' → logprob: -16.251035690307617
    7. ' ' → logprob: -17.626035690307617
    8. '```' → logprob: -17.751035690307617
    9. '    ' → logprob: -17.876035690307617
    10. '<|end|>' → logprob: -18.001035690307617

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007164848502725363
    2. ':
' → logprob: -7.500716686248779
    3. ' :' → logprob: -9.375716209411621
    4. '):' → logprob: -9.750716209411621
    5. ' and' → logprob: -12.625716209411621
    6. '           ' → logprob: -12.750716209411621
    7. '):
' → logprob: -13.125716209411621
    8. '   ' → logprob: -13.250716209411621
    9. ':

' → logprob: -13.250716209411621
    10. '       ' → logprob: -13.500716209411621

Token 56: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007460273336619139
    2. '           ' → logprob: -5.007460117340088
    3. '            ' → logprob: -8.132460594177246
    4. '                
' → logprob: -8.757460594177246
    5. ' upper' → logprob: -9.632460594177246
    6. '              ' → logprob: -10.132460594177246
    7. '                ' → logprob: -10.132460594177246
    8. ' ' → logprob: -10.382460594177246
    9. '             ' → logprob: -10.757460594177246
    10. ' lower' → logprob: -10.882460594177246

Token 57: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.010359043255448341
    2. 'upper' (adapté à ' upper') → logprob: -4.635358810424805
    3. '               ' → logprob: -7.760358810424805
    4. ' lower' → logprob: -9.385358810424805
    5. '            ' → logprob: -10.760358810424805
    6. '                ' → logprob: -10.760358810424805
    7. ' ' → logprob: -11.010358810424805
    8. '_upper' → logprob: -11.510358810424805
    9. ' ' → logprob: -12.135358810424805
    10. '.upper' → logprob: -12.885358810424805

Token 58: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -4.008129963040119e-06
    2. 'div' → logprob: -13.000003814697266
    3. '_' → logprob: -15.125003814697266
    4. ' _' → logprob: -15.500003814697266
    5. '_de' → logprob: -15.750003814697266
    6. '_def' → logprob: -15.875003814697266
    7. '<div' → logprob: -15.875003814697266
    8. '._' → logprob: -16.375003814697266
    9. '_DIV' → logprob: -16.375003814697266
    10. 'Div' → logprob: -16.875003814697266

Token 59: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004989320412278175
    2. 's' → logprob: -5.754989147186279
    3. '_div' → logprob: -7.254989147186279
    4. 'div' → logprob: -7.379989147186279
    5. 'itors' → logprob: -8.504989624023438
    6. 'ors' → logprob: -8.879989624023438
    7. '   ' → logprob: -10.879989624023438
    8. 'isi' → logprob: -11.004989624023438
    9. 'vis' → logprob: -11.004989624023438
    10. '               ' → logprob: -11.754989624023438

Token 60: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0006976616568863392
    2. 's' → logprob: -7.500697612762451
    3. '   ' → logprob: -10.50069808959961
    4. 'div' → logprob: -10.62569808959961
    5. 'tors' → logprob: -10.75069808959961
    6. 'ators' → logprob: -11.12569808959961
    7. 'rs' → logprob: -11.62569808959961
    8. '       ' → logprob: -12.25069808959961
    9. 'rors' → logprob: -12.25069808959961
    10. '               ' → logprob: -12.25069808959961

Token 61: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01112587470561266
    2. '.' → logprob: -4.5111260414123535
    3. '.app' → logprob: -10.386125564575195
    4. '.ap' → logprob: -11.636125564575195
    5. '.setdefault' → logprob: -11.761125564575195
    6. ' .' → logprob: -11.886125564575195
    7. '.py' → logprob: -12.386125564575195
    8. '.insert' → logprob: -12.511125564575195
    9. '.Append' → logprob: -12.636125564575195
    10. ').' → logprob: -13.011125564575195

Token 62: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003177952254191041
    2. '(' → logprob: -5.753178119659424
    3. '(
' → logprob: -15.878177642822266
    4. '((' → logprob: -16.503177642822266
    5. ' (' → logprob: -17.878177642822266
    6. '(

' → logprob: -18.003177642822266
    7. 'n' → logprob: -18.628177642822266
    8. '()' → logprob: -20.878177642822266
    9. '(N' → logprob: -20.878177642822266
    10. '(i' → logprob: -21.128177642822266

Token 63: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.2261829525232315
    2. ' //' → logprob: -1.6011829376220703
    3. '/i' → logprob: -7.60118293762207
    4. '/' → logprob: -8.60118293762207
    5. ' /' → logprob: -9.72618293762207
    6. ' ' → logprob: -10.85118293762207
    7. '//=' → logprob: -13.22618293762207
    8. '`' → logprob: -14.10118293762207
    9. ')' → logprob: -14.10118293762207
    10. '   ' → logprob: -14.35118293762207

Token 64: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017024369444698095
    2. ' i' → logprob: -6.376702308654785
    3. '	i' → logprob: -15.501702308654785
    4. '   ' → logprob: -16.5017032623291
    5. ' ' → logprob: -16.8767032623291
    6. '_i' → logprob: -18.2517032623291
    7. '  ' → logprob: -18.8767032623291
    8. ')' → logprob: -19.3767032623291
    9. ')i' → logprob: -19.6267032623291
    10. '    ' → logprob: -19.7517032623291

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0820062905550003
    2. ')
' → logprob: -2.5820062160491943
    3. '       ' → logprob: -5.832006454467773
    4. ')
' → logprob: -9.707006454467773
    5. '   ' → logprob: -9.832006454467773
    6. ')

' → logprob: -10.332006454467773
    7. '           ' → logprob: -10.832006454467773
    8. ' )' → logprob: -12.082006454467773
    9. ' )
' → logprob: -13.832006454467773
    10. ')`
' → logprob: -13.957006454467773

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038494786713272333
    2. '
' → logprob: -5.628849506378174
    3. '        
' → logprob: -8.628849029541016
    4. '   ' → logprob: -9.878849029541016
    5. '
' → logprob: -11.628849029541016
    6. '<|end|>' → logprob: -12.878849029541016
    7. '            
' → logprob: -13.253849029541016
    8. '    ' → logprob: -14.128849029541016
    9. '<|end|>' → logprob: -14.128849029541016
    10. '    
' → logprob: -14.253849029541016

Token 67: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3959362208843231
    2. '   ' → logprob: -1.1459362506866455
    3. ' i' → logprob: -4.895936012268066
    4. 'i' (adapté à ' i') → logprob: -7.270936012268066
    5. '
' → logprob: -7.645936012268066
    6. '    ' → logprob: -8.770936012268066
    7. '    
' → logprob: -9.520936012268066
    8. ' ' → logprob: -10.270936012268066
    9. '        
' → logprob: -10.395936012268066
    10. '  ' → logprob: -11.020936012268066

Token 68: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5551611185073853
    2. '+=' → logprob: -1.4301611185073853
    3. ' +=' → logprob: -1.6801611185073853
    4. ' +' → logprob: -8.430161476135254
    5. '=' → logprob: -9.305161476135254
    6. '++' → logprob: -10.430161476135254
    7. ' ' → logprob: -10.930161476135254
    8. '1' → logprob: -10.930161476135254
    9. '+='' → logprob: -11.555161476135254
    10. '+="' → logprob: -12.680161476135254

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.251502990722656
    4. '```' → logprob: -19.251502990722656
    5. '2' → logprob: -20.751502990722656
    6. '    ' → logprob: -21.376502990722656
    7. ' ' → logprob: -21.501502990722656
    8. '１' → logprob: -21.626502990722656
    9. '  ' → logprob: -21.751502990722656
    10. '0' → logprob: -22.751502990722656

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.625001907348633
    5. '  ' → logprob: -19.000001907348633
    6. '１' → logprob: -20.437501907348633
    7. '
' → logprob: -20.625001907348633
    8. '2' → logprob: -20.875001907348633
    9. '    ' → logprob: -21.187501907348633
    10. '       ' → logprob: -21.250001907348633

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04046870768070221
    2. 'return' → logprob: -3.915468692779541
    3. ' return' → logprob: -4.415468692779541
    4. '\n' → logprob: -5.415468692779541
    5. ' ' → logprob: -7.165468692779541
    6. '    
' → logprob: -7.290468692779541
    7. '
' → logprob: -7.290468692779541
    8. '\' → logprob: -8.1654691696167
    9. ',' → logprob: -9.2904691696167
    10. '    ' → logprob: -9.2904691696167

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005538671393878758
    2. ' return' → logprob: -8.500554084777832
    3. 'return' → logprob: -8.625554084777832
    4. ' ' → logprob: -9.125554084777832
    5. '    
' → logprob: -10.875554084777832
    6. '    ' → logprob: -11.125554084777832
    7. '  ' → logprob: -11.375554084777832
    8. '
' → logprob: -12.375554084777832
    9. ',' → logprob: -12.875554084777832
    10. ')' → logprob: -13.250554084777832

Token 73: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6107779145240784
    2. ' return' → logprob: -0.9857779145240784
    3. '   ' → logprob: -2.4857778549194336
    4. ' ' → logprob: -7.610777854919434
    5. 'lower' → logprob: -9.860777854919434
    6. '    ' → logprob: -10.110777854919434
    7. 'upper' → logprob: -11.235777854919434
    8. '    
' → logprob: -11.485777854919434
    9. '	return' → logprob: -11.610777854919434
    10. 'reverse' → logprob: -12.235777854919434

Token 74: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.0621865950524807
    2. 'lower' → logprob: -2.8121864795684814
    3. ' ' → logprob: -8.562186241149902
    4. ' ' → logprob: -11.437186241149902
    5. ' [' → logprob: -12.562186241149902
    6. '[' → logprob: -12.812186241149902
    7. '(lower' → logprob: -12.937186241149902
    8. ' sorted' → logprob: -13.312186241149902
    9. '.lower' → logprob: -13.312186241149902
    10. ' list' → logprob: -13.312186241149902

Token 75: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.250015258789062
    3. '_lower' → logprob: -13.500015258789062
    4. 's' → logprob: -15.250015258789062
    5. 'div' → logprob: -15.375015258789062
    6. '_def' → logprob: -15.750015258789062
    7. '_DIV' → logprob: -15.875015258789062
    8. '_de' → logprob: -16.750015258789062
    9. '_dis' → logprob: -16.875015258789062
    10. '\' → logprob: -17.000015258789062

Token 76: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0008327359100803733
    2. 's' → logprob: -7.125832557678223
    3. 'ectors' → logprob: -12.375832557678223
    4. 'itors' → logprob: -12.625832557678223
    5. 'ors' → logprob: -13.000832557678223
    6. '   ' → logprob: -13.125832557678223
    7. 'isible' → logprob: -13.250832557678223
    8. 'isi' → logprob: -13.500832557678223
    9. '```' → logprob: -13.750832557678223
    10. '_is' → logprob: -13.875832557678223

Token 77: 'ors' (ID: 914)
  Prédit: 'tors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tors' → logprob: -0.15118612349033356
    2. 'ors' → logprob: -2.026186227798462
    3. 's' → logprob: -5.401185989379883
    4. 't' → logprob: -6.276185989379883
    5. 'vors' → logprob: -7.776185989379883
    6. 'm' → logprob: -7.901185989379883
    7. 'rors' → logprob: -8.151185989379883
    8. 'ators' → logprob: -8.276185989379883
    9. 'v' → logprob: -8.901185989379883
    10. 'n' → logprob: -9.776185989379883

Token 78: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048606667667627335
    2. ' +' → logprob: -3.0486066341400146
    3. '[::-' → logprob: -11.048606872558594
    4. '+[' → logprob: -13.173606872558594
    5. '[' → logprob: -14.673606872558594
    6. '   ' → logprob: -15.048606872558594
    7. '＋' → logprob: -15.423606872558594
    8. '+k' → logprob: -15.673606872558594
    9. '[:-' → logprob: -16.548606872558594
    10. ' plus' → logprob: -16.923606872558594

Token 79: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.003552439156919718
    2. ' upper' → logprob: -5.753552436828613
    3. 'list' → logprob: -8.003552436828613
    4. ' list' → logprob: -10.253552436828613
    5. 're' → logprob: -12.378552436828613
    6. ' ' → logprob: -15.003552436828613
    7. '   ' → logprob: -15.253552436828613
    8. '[' → logprob: -16.25355339050293
    9. '[::-' → logprob: -16.37855339050293
    10. 'uppercase' → logprob: -16.87855339050293

Token 80: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.023293538717553e-05
    2. '_' → logprob: -10.500030517578125
    3. '_dis' → logprob: -14.875030517578125
    4. '_d' → logprob: -14.875030517578125
    5. 'r' → logprob: -15.000030517578125
    6. '_de' → logprob: -15.125030517578125
    7. 'div' → logprob: -15.375030517578125
    8. '_des' → logprob: -15.500030517578125
    9. '_di' → logprob: -15.500030517578125
    10. '_dist' → logprob: -16.125030517578125

Token 81: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.020545978099107742
    2. 'ors' → logprob: -4.395545959472656
    3. 's' → logprob: -5.145545959472656
    4. '_div' → logprob: -6.395545959472656
    5. 'itors' → logprob: -9.020545959472656
    6. 'rs' → logprob: -9.270545959472656
    7. 'tors' → logprob: -9.645545959472656
    8. 'ectors' → logprob: -9.895545959472656
    9. 'ers' → logprob: -10.145545959472656
    10. 'div' → logprob: -10.895545959472656

Token 82: 'ors' (ID: 914)
  Prédit: 'tors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tors' → logprob: -0.17277224361896515
    2. 'ors' → logprob: -1.9227722883224487
    3. 'ators' → logprob: -6.047772407531738
    4. 't' → logprob: -6.172772407531738
    5. 's' → logprob: -6.297772407531738
    6. 'itors' → logprob: -6.547772407531738
    7. 'rs' → logprob: -6.797772407531738
    8. 'upper' → logprob: -7.422772407531738
    9. 'st' → logprob: -8.047772407531738
    10. 'ze' → logprob: -8.172772407531738

Token 83: '[::-' (ID: 159890)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5784667730331421
    2. '[' → logprob: -1.453466773033142
    3. '<|end|>' → logprob: -2.4534668922424316
    4. ')' → logprob: -2.8284668922424316
    5. ' ' → logprob: -4.328466892242432
    6. '```' → logprob: -4.453466892242432
    7. '#' → logprob: -4.578466892242432
    8. '\n' → logprob: -5.203466892242432
    9. '
' → logprob: -5.203466892242432
    10. '(
' → logprob: -5.453466892242432

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018837466835975647
    2. ']' → logprob: -5.3938374519348145
    3. 'ed' → logprob: -5.3938374519348145
    4. '-' → logprob: -5.8938374519348145
    5. 's' → logprob: -6.0188374519348145
    6. 'se' → logprob: -6.2688374519348145
    7. 'er' → logprob: -7.6438374519348145
    8. 'erse' → logprob: -7.7688374519348145
    9. 't' → logprob: -8.643837928771973
    10. 'ex' → logprob: -9.018837928771973

Token 85: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001600347168277949
    2. ']' → logprob: -8.750160217285156
    3. '）' → logprob: -14.125160217285156
    4. ' )' → logprob: -14.625160217285156
    5. '])' → logprob: -15.500160217285156
    6. ')]' → logprob: -16.000160217285156
    7. '}' → logprob: -17.500160217285156
    8. ')
' → logprob: -17.500160217285156
    9. '[' → logprob: -17.750160217285156
    10. ')`' → logprob: -18.125160217285156

Token 86: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0667582750320435
    2. '<|end|>' → logprob: -1.3167582750320435
    3. '#' → logprob: -1.9417582750320435
    4. '```' → logprob: -2.691758155822754
    5. ')' → logprob: -3.191758155822754
    6. '[' → logprob: -3.191758155822754
    7. '
' → logprob: -3.816758155822754
    8. '\n' → logprob: -4.566758155822754
    9. ' ' → logprob: -4.816758155822754
    10. 'n' → logprob: -4.941758155822754

Token 87: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4638792276382446
    2. '[' → logprob: -1.4638792276382446
    3. '=' → logprob: -1.4638792276382446
    4. '(' → logprob: -1.7138792276382446
    5. ' =' → logprob: -2.463879108428955
    6. ' ' → logprob: -4.963879108428955
    7. ':' → logprob: -5.088879108428955
    8. '.' → logprob: -5.213879108428955
    9. '_' → logprob: -5.338879108428955
    10. ',' → logprob: -5.838879108428955

Token 88: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7816258668899536
    2. 'M' → logprob: -1.6566258668899536
    3. ' K' → logprob: -1.7816258668899536
    4. ' M' → logprob: -2.406625747680664
    5. ' ' → logprob: -3.656625747680664
    6. 'a' → logprob: -3.906625747680664
    7. 'k' → logprob: -4.531625747680664
    8. ' =' → logprob: -4.781625747680664
    9. 'x' → logprob: -5.281625747680664
    10. 'n' → logprob: -5.281625747680664

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4293307065963745
    2. '=' → logprob: -1.0543307065963745
    3. ',' → logprob: -7.679330825805664
    4. ' ' → logprob: -8.804330825805664
    5. '=input' → logprob: -11.679330825805664
    6. ' =
' → logprob: -12.679330825805664
    7. '[' → logprob: -13.929330825805664
    8. ' ,' → logprob: -14.054330825805664
    9. '.' → logprob: -14.429330825805664
    10. ' =
' → logprob: -14.804330825805664

Token 90: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2562903165817261
    2. 'map' → logprob: -1.506290316581726
    3. ' list' → logprob: -6.506290435791016
    4. ' ' → logprob: -6.756290435791016
    5. 'list' → logprob: -7.631290435791016
    6. ' input' → logprob: -7.881290435791016
    7. 'input' → logprob: -8.131290435791016
    8. '10' → logprob: -8.506290435791016
    9. '5' → logprob: -9.756290435791016
    10. 'int' → logprob: -10.006290435791016

Token 91: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12736858427524567
    2. '(' → logprob: -2.127368688583374
    3. '(input' → logprob: -8.002368927001953
    4. '(str' → logprob: -9.502368927001953
    5. '(lambda' → logprob: -11.502368927001953
    6. '(in' → logprob: -12.252368927001953
    7. '(list' → logprob: -12.502368927001953
    8. 'int' → logprob: -13.127368927001953
    9. '(
' → logprob: -13.252368927001953
    10. '(eval' → logprob: -13.752368927001953

Token 92: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.45416250824928284
    2. '(' → logprob: -1.0791624784469604
    3. '(int' → logprob: -3.70416259765625
    4. ')' → logprob: -8.95416259765625
    5. 'input' → logprob: -9.07916259765625
    6. '(str' → logprob: -9.32916259765625
    7. ' (' → logprob: -9.95416259765625
    8. ',input' → logprob: -9.95416259765625
    9. ' input' → logprob: -10.45416259765625
    10. '(
' → logprob: -11.07916259765625

Token 93: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151111900806427
    2. ' input' → logprob: -4.01815128326416
    3. 'int' → logprob: -14.64315128326416
    4. ' ' → logprob: -15.14315128326416
    5. '(input' → logprob: -15.39315128326416
    6. '   ' → logprob: -16.018150329589844
    7. 'str' → logprob: -16.893150329589844
    8. '<input' → logprob: -17.518150329589844
    9. '=input' → logprob: -17.643150329589844
    10. '	input' → logprob: -17.893150329589844

Token 94: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4817937910556793
    2. '()' → logprob: -1.106793761253357
    3. '())' → logprob: -3.9817938804626465
    4. '('' → logprob: -4.2317938804626465
    5. '().' → logprob: -4.4817938804626465
    6. '());' → logprob: -6.7317938804626465
    7. '(()' → logprob: -6.7317938804626465
    8. '(),' → logprob: -7.1067938804626465
    9. '("("' → logprob: -7.2317938804626465
    10. '()(' → logprob: -7.3567938804626465

Token 95: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001329791557509452
    2. 'strip' → logprob: -9.00013256072998
    3. ')' → logprob: -11.75013256072998
    4. 'rstrip' → logprob: -14.62513256072998
    5. ' split' → logprob: -14.75013256072998
    6. '(split' → logprob: -15.00013256072998
    7. 'spl' → logprob: -15.75013256072998
    8. '().' → logprob: -16.625133514404297
    9. 'read' → logprob: -16.625133514404297
    10. '())' → logprob: -16.750133514404297

Token 96: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12038427591323853
    2. '())' → logprob: -2.2453842163085938
    3. '()' → logprob: -5.120384216308594
    4. '(' → logprob: -6.995384216308594
    5. '('' → logprob: -7.745384216308594
    6. '))' → logprob: -9.245384216308594
    7. '("' → logprob: -11.245384216308594
    8. '(','' → logprob: -11.370384216308594
    9. ')`' → logprob: -11.370384216308594
    10. ')")' → logprob: -11.745384216308594

Token 97: 'L' (ID: 43)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.18303227424621582
    2. 'd' → logprob: -2.183032274246216
    3. 'print' → logprob: -3.683032274246216
    4. 'a' → logprob: -4.183032035827637
    5. 'ans' → logprob: -5.183032035827637
    6. 'yak' → logprob: -6.058032035827637
    7. 'result' → logprob: -6.558032035827637
    8. 'arr' → logprob: -7.183032035827637
    9. 'answer' → logprob: -7.308032035827637
    10. 'A' → logprob: -7.308032035827637

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7064408659934998
    2. ' =' → logprob: -0.7064408659934998
    3. 'ist' → logprob: -4.4564409255981445
    4. '=[]' → logprob: -7.4564409255981445
    5. 'ines' → logprob: -9.081440925598145
    6. 'ists' → logprob: -9.206440925598145
    7. 's' → logprob: -9.206440925598145
    8. '[' → logprob: -9.706440925598145
    9. ',' → logprob: -9.706440925598145
    10. 'e' → logprob: -9.831440925598145

Token 99: ' list' (ID: 1562)
  Prédit: 'yak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yak' → logprob: -0.029691126197576523
    2. ' yak' → logprob: -3.654691219329834
    3. 'list' → logprob: -6.154691219329834
    4. 'sorted' → logprob: -7.779691219329834
    5. ' list' → logprob: -8.404690742492676
    6. 'ak' → logprob: -8.904690742492676
    7. '[' → logprob: -9.154690742492676
    8. '[]' → logprob: -9.279690742492676
    9. 'yam' → logprob: -10.154690742492676
    10. ' sorted' → logprob: -10.154690742492676

Token 100: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.18319100141525269
    2. '(' → logprob: -1.8081910610198975
    3. '(range' → logprob: -6.808190822601318
    4. '()' → logprob: -7.183190822601318
    5. '(y' → logprob: -7.558190822601318
    6. '(input' → logprob: -7.933190822601318
    7. '(int' → logprob: -8.058191299438477
    8. '(s' → logprob: -9.558191299438477
    9. '(eval' → logprob: -9.808191299438477
    10. '(filter' → logprob: -10.558191299438477

Token 101: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009601775673218071
    2. '(' → logprob: -7.000960350036621
    3. '(input' → logprob: -10.125960350036621
    4. 'int' → logprob: -12.250960350036621
    5. '```' → logprob: -14.000960350036621
    6. '(list' → logprob: -14.250960350036621
    7. '<int' → logprob: -14.625960350036621
    8. '[int' → logprob: -14.750960350036621
    9. ' (' → logprob: -14.750960350036621
    10. ',int' → logprob: -15.000960350036621

Token 102: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.026171403005719185
    2. '(' → logprob: -4.1511712074279785
    3. ',input' → logprob: -4.6511712074279785
    4. ',' → logprob: -8.026171684265137
    5. '(),' → logprob: -10.026171684265137
    6. ' (' → logprob: -10.401171684265137
    7. '(int' → logprob: -10.401171684265137
    8. 'input' → logprob: -10.526171684265137
    9. '=input' → logprob: -11.026171684265137
    10. '(
' → logprob: -11.651171684265137

Token 103: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245826363563538
    2. ' input' → logprob: -3.7732458114624023
    3. '(input' → logprob: -15.773245811462402
    4. ' ' → logprob: -15.898245811462402
    5. '=input' → logprob: -17.89824676513672
    6. '	input' → logprob: -18.02324676513672
    7. '<input' → logprob: -18.02324676513672
    8. ',input' → logprob: -18.14824676513672
    9. ')' → logprob: -18.77324676513672
    10. '_input' → logprob: -19.14824676513672

Token 104: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014072739577386528
    2. '()' → logprob: -9.000141143798828
    3. '(' → logprob: -12.000141143798828
    4. '(.' → logprob: -12.000141143798828
    5. ' ().' → logprob: -12.500141143798828
    6. '.' → logprob: -13.875141143798828
    7. '()
' → logprob: -16.500141143798828
    8. '())' → logprob: -16.875141143798828
    9. ')' → logprob: -17.125141143798828
    10. ' .' → logprob: -17.625141143798828

Token 105: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.696889623621246e-06
    2. 'strip' → logprob: -13.25000286102295
    3. ' split' → logprob: -14.12500286102295
    4. 'rstrip' → logprob: -16.000001907348633
    5. '(split' → logprob: -17.500001907348633
    6. 'spl' → logprob: -18.750001907348633
    7. '.split' → logprob: -19.125001907348633
    8. 'plit' → logprob: -19.750001907348633
    9. 'read' → logprob: -20.250001907348633
    10. 's' → logprob: -20.500001907348633

Token 106: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01369045116007328
    2. '()' → logprob: -4.76369047164917
    3. '())' → logprob: -5.38869047164917
    4. '(' → logprob: -8.263689994812012
    5. '))' → logprob: -8.888689994812012
    6. '()));' → logprob: -10.138689994812012
    7. '()))
' → logprob: -10.263689994812012
    8. '().' → logprob: -12.138689994812012
    9. '())))' → logprob: -12.138689994812012
    10. '());' → logprob: -12.263689994812012

Token 107: 'a' (ID: 64)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2131506204605103
    2. 'L' → logprob: -1.5881506204605103
    3. 'yak' → logprob: -1.8381506204605103
    4. 'div' → logprob: -2.5881505012512207
    5. 'result' → logprob: -3.3381505012512207
    6. 'count' → logprob: -3.4631505012512207
    7. 'd' → logprob: -3.7131505012512207
    8. 'answer' → logprob: -3.9631505012512207
    9. 'total' → logprob: -4.088150501251221
    10. 'dp' → logprob: -4.088150501251221

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016383890062570572
    2. '=' → logprob: -4.266384124755859
    3. '_' → logprob: -6.891384124755859
    4. ' ' → logprob: -8.14138412475586
    5. '[' → logprob: -8.51638412475586
    6. 's' → logprob: -8.64138412475586
    7. '_sum' → logprob: -10.01638412475586
    8. 'K' → logprob: -10.14138412475586
    9. '_counts' → logprob: -10.26638412475586
    10. '_sorted' → logprob: -10.26638412475586

Token 109: ' sum' (ID: 4215)
  Prédit: 'yak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yak' → logprob: -0.2581668198108673
    2. '[]' → logprob: -2.383166790008545
    3. ' yak' → logprob: -2.383166790008545
    4. '0' → logprob: -4.758166790008545
    5. ' []' → logprob: -4.758166790008545
    6. '[' → logprob: -5.133166790008545
    7. 'sum' → logprob: -5.258166790008545
    8. 'sorted' → logprob: -5.258166790008545
    9. 'L' → logprob: -6.258166790008545
    10. ' [' → logprob: -6.383166790008545

Token 110: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.2467503398656845
    2. '(' → logprob: -1.7467503547668457
    3. '([' → logprob: -3.1217503547668457
    4. '(
' → logprob: -9.496749877929688
    5. '(a' → logprob: -10.121749877929688
    6. '([
' → logprob: -10.371749877929688
    7. '(l' → logprob: -11.121749877929688
    8. '((' → logprob: -11.246749877929688
    9. '([]' → logprob: -11.371749877929688
    10. '(i' → logprob: -11.371749877929688

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46065962314605713
    2. '[:' → logprob: -1.0856596231460571
    3. '[' → logprob: -3.5856595039367676
    4. ' )' → logprob: -6.335659503936768
    5. '(' → logprob: -7.335659503936768
    6. '())' → logprob: -7.960659503936768
    7. '[:-' → logprob: -8.585659980773926
    8. '[-' → logprob: -8.835659980773926
    9. '[::-' → logprob: -9.585659980773926
    10. '[N' → logprob: -9.585659980773926

Token 112: 'R' (ID: 49)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.852742612361908
    2. 'for' → logprob: -1.3527426719665527
    3. 'ans' → logprob: -2.3527426719665527
    4. 'yak' → logprob: -3.2277426719665527
    5. 'div' → logprob: -3.3527426719665527
    6. 'a' → logprob: -3.4777426719665527
    7. 'count' → logprob: -3.7277426719665527
    8. 'print' → logprob: -3.9777426719665527
    9. 'answer' → logprob: -4.602742671966553
    10. 'b' → logprob: -4.727742671966553

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010380996391177177
    2. '=' → logprob: -4.63538122177124
    3. ' ' → logprob: -8.260380744934082
    4. 'e' → logprob: -9.760380744934082
    5. 'ange' → logprob: -10.010380744934082
    6. 'ight' → logprob: -10.010380744934082
    7. ',' → logprob: -10.135380744934082
    8. '=[]' → logprob: -10.385380744934082
    9. 'a' → logprob: -10.635380744934082
    10. ' =
' → logprob: -10.885380744934082

Token 114: ' yak' (ID: 16000)
  Prédit: 'yak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yak' → logprob: -0.11591681838035583
    2. ' yak' → logprob: -2.6159167289733887
    3. '[]' → logprob: -4.740916728973389
    4. '[a' → logprob: -5.115916728973389
    5. 'a' → logprob: -5.115916728973389
    6. 'sorted' → logprob: -5.865916728973389
    7. ' [' → logprob: -6.240916728973389
    8. '[' → logprob: -6.240916728973389
    9. ' sorted' → logprob: -6.490916728973389
    10. '[]
' → logprob: -6.615916728973389

Token 115: 'usu' (ID: 21118)
  Prédit: 'usu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usu' → logprob: -0.05655626207590103
    2. 'su' → logprob: -2.931556224822998
    3. 's' → logprob: -7.556556224822998
    4. 'a' → logprob: -7.931556224822998
    5. 'osu' → logprob: -8.306556701660156
    6. 'sus' → logprob: -8.556556701660156
    7. 'asu' → logprob: -8.931556701660156
    8. 'す' → logprob: -9.306556701660156
    9. 'us' → logprob: -11.056556701660156
    10. 'isu' → logprob: -11.181556701660156

Token 116: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.16028352081775665
    2. '(' → logprob: -1.9102835655212402
    3. '(
' → logprob: -9.910283088684082
    4. '(A' → logprob: -13.410283088684082
    5. '((' → logprob: -13.535283088684082
    6. '(N' → logprob: -13.535283088684082
    7. '(

' → logprob: -13.785283088684082
    8. ' (' → logprob: -14.035283088684082
    9. '(n' → logprob: -14.160283088684082
    10. 'a' → logprob: -14.285283088684082

Token 117: ')[' (ID: 13637)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005673271603882313
    2. ')
' → logprob: -5.755673408508301
    3. '(K' → logprob: -6.880673408508301
    4. 'K' → logprob: -7.130673408508301
    5. ',K' → logprob: -8.3806734085083
    6. '(' → logprob: -8.7556734085083
    7. ')[' → logprob: -9.3806734085083
    8. ',' → logprob: -9.7556734085083
    9. '[K' → logprob: -10.1306734085083
    10. '[' → logprob: -10.7556734085083

Token 118: '::-' (ID: 96612)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.05783620476722717
    2. '-' → logprob: -2.9328362941741943
    3. '-K' → logprob: -5.932836055755615
    4. ' -' → logprob: -9.557836532592773
    5. ' K' → logprob: -9.682836532592773
    6. '0' → logprob: -9.932836532592773
    7. 'len' → logprob: -10.932836532592773
    8. ':' → logprob: -10.932836532592773
    9. '-(' → logprob: -11.307836532592773
    10. '   ' → logprob: -11.307836532592773

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026860725483857095
    2. '-' → logprob: -8.250268936157227
    3. ']' → logprob: -12.750268936157227
    4. '])' → logprob: -13.625268936157227
    5. '```' → logprob: -14.000268936157227
    6. ' ' → logprob: -14.375268936157227
    7. '::-' → logprob: -14.625268936157227
    8. '2' → logprob: -15.125268936157227
    9. ')' → logprob: -15.375268936157227
    10. 'None' → logprob: -15.625268936157227

Token 120: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010490043787285686
    2. ')' → logprob: -7.376049041748047
    3. ']
' → logprob: -8.251049041748047
    4. '[' → logprob: -9.001049041748047
    5. '][' → logprob: -11.001049041748047
    6. ' ]' → logprob: -12.001049041748047
    7. '<|end|>' → logprob: -12.376049041748047
    8. ']

' → logprob: -13.251049041748047
    9. '])' → logprob: -13.376049041748047
    10. '[
' → logprob: -13.501049041748047

Token 121: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1329190880060196
    2. 'if' → logprob: -2.2579190731048584
    3. 'for' → logprob: -4.2579193115234375
    4. 'i' → logprob: -6.2579193115234375
    5. '[' → logprob: -6.6329193115234375
    6. 'K' → logprob: -7.0079193115234375
    7. 'idx' → logprob: -7.3829193115234375
    8. 'index' → logprob: -7.8829193115234375
    9. 'pr' → logprob: -9.382919311523438
    10. 'r' → logprob: -9.382919311523438

Token 122: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7058079242706299
    2. ' r' → logprob: -1.0808079242706299
    3. ' x' → logprob: -2.83080792427063
    4. ' d' → logprob: -2.95580792427063
    5. ' k' → logprob: -3.33080792427063
    6. 'i' → logprob: -4.580807685852051
    7. 'r' → logprob: -5.330807685852051
    8. 'x' → logprob: -6.580807685852051
    9. 'k' → logprob: -6.705807685852051
    10. 'd' → logprob: -6.955807685852051

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0637013167142868
    2. 'in' → logprob: -2.8137013912200928
    3. ' ' → logprob: -6.438701152801514
    4. 'n' → logprob: -10.313701629638672
    5. '  ' → logprob: -10.313701629638672
    6. 'range' → logprob: -11.313701629638672
    7. '_' → logprob: -11.688701629638672
    8. ' range' → logprob: -11.813701629638672
    9. ',' → logprob: -11.938701629638672
    10. ' n' → logprob: -12.188701629638672

Token 124: ' range' (ID: 3352)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.624676525592804
    2. 'range' → logprob: -1.2496764659881592
    3. ' range' → logprob: -1.7496764659881592
    4. ' R' → logprob: -5.499676704406738
    5. 'Range' → logprob: -10.999676704406738
    6. '	range' → logprob: -11.749676704406738
    7. 'L' → logprob: -12.249676704406738
    8. '(range' → logprob: -12.374676704406738
    9. '   ' → logprob: -12.374676704406738
    10. 'rang' → logprob: -12.999676704406738

Token 125: '(len' (ID: 14990)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.06348799914121628
    2. '(len' → logprob: -2.938488006591797
    3. '(' → logprob: -4.813488006591797
    4. '(N' → logprob: -7.813488006591797
    5. '(k' → logprob: -10.938488006591797
    6. ' (' → logprob: -11.313488006591797
    7. '((' → logprob: -12.688488006591797
    8. 'K' → logprob: -12.813488006591797
    9. ' K' → logprob: -13.563488006591797
    10. '(min' → logprob: -13.563488006591797

Token 126: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.4855663721391466e-05
    2. '(L' → logprob: -11.500015258789062
    3. '(' → logprob: -12.750015258789062
    4. '(K' → logprob: -13.625015258789062
    5. ' (' → logprob: -15.375015258789062
    6. '(r' → logprob: -15.750015258789062
    7. 'R' → logprob: -16.250015258789062
    8. '(D' → logprob: -16.625015258789062
    9. '(A' → logprob: -17.250015258789062
    10. '(a' → logprob: -17.750015258789062

Token 127: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026042481884360313
    2. '):
' → logprob: -3.9010424613952637
    3. ')):' → logprob: -5.276042461395264
    4. ')):
' → logprob: -8.276042938232422
    5. ' ):' → logprob: -9.276042938232422
    6. ')' → logprob: -12.026042938232422
    7. '))' → logprob: -12.151042938232422
    8. '):
' → logprob: -12.651042938232422
    9. ':' → logprob: -12.901042938232422
    10. ' ' → logprob: -13.526042938232422

Token 128: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5862929821014404
    2. '   ' → logprob: -0.8362929821014404
    3. ' if' → logprob: -5.0862932205200195
    4. ':
' → logprob: -6.0862932205200195
    5. '       ' → logprob: -7.4612932205200195
    6. '<|end|>' → logprob: -7.5862932205200195
    7. ' ' → logprob: -8.46129322052002
    8. ',' → logprob: -9.08629322052002
    9. '    
' → logprob: -9.71129322052002
    10. 'if' → logprob: -9.83629322052002

Token 129: ' add' (ID: 1147)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12647376954555511
    2. ' if' → logprob: -2.2514736652374268
    3. 'if' → logprob: -5.126473903656006
    4. '       ' → logprob: -5.876473903656006
    5. '<|end|>' → logprob: -6.126473903656006
    6. ' ' → logprob: -6.251473903656006
    7. '  ' → logprob: -8.626473426818848
    8. '    ' → logprob: -8.876473426818848
    9. '	if' → logprob: -9.251473426818848
    10. '    
' → logprob: -9.376473426818848

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5360255241394043
    2. '   ' → logprob: -2.1610255241394043
    3. '(' → logprob: -2.2860255241394043
    4. 'if' → logprob: -2.7860255241394043
    5. '=' → logprob: -3.1610255241394043
    6. ' if' → logprob: -3.1610255241394043
    7. ' +=' → logprob: -4.411025524139404
    8. ' ' → logprob: -4.786025524139404
    9. 's' → logprob: -5.036025524139404
    10. '    ' → logprob: -5.161025524139404

Token 131: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7798764109611511
    2. 'K' → logprob: -1.654876470565796
    3. 'a' → logprob: -2.029876470565796
    4. '0' → logprob: -2.154876470565796
    5. 'N' → logprob: -3.279876470565796
    6. 'L' → logprob: -4.279876232147217
    7. ' R' → logprob: -4.404876232147217
    8. ' K' → logprob: -5.029876232147217
    9. ' ' → logprob: -5.529876232147217
    10. 'max' → logprob: -5.654876232147217

Token 132: '0' (ID: 15)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3652796447277069
    2. 'K' → logprob: -1.7402796745300293
    3. 'a' → logprob: -2.6152796745300293
    4. 'N' → logprob: -3.6152796745300293
    5. '0' → logprob: -4.490279674530029
    6. '(R' → logprob: -5.615279674530029
    7. 'abs' → logprob: -5.740279674530029
    8. 'sum' → logprob: -5.990279674530029
    9. 'i' → logprob: -6.365279674530029
    10. 'L' → logprob: -6.740279674530029

Token 133: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2729399800300598
    2. '   ' → logprob: -1.522939920425415
    3. '<|end|>' → logprob: -4.647940158843994
    4. '    
' → logprob: -5.147940158843994
    5. ' if' → logprob: -6.522940158843994
    6. ' for' → logprob: -7.147940158843994
    7. 'for' → logprob: -7.272940158843994
    8. ' 
' → logprob: -7.522940158843994
    9. '    ' → logprob: -7.897940158843994
    10. '  
' → logprob: -8.397939682006836

Token 135: ' minus' (ID: 40335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1475188285112381
    2. 'if' → logprob: -2.7725188732147217
    3. 'while' → logprob: -3.2725188732147217
    4. ' for' → logprob: -4.022518634796143
    5. '   ' → logprob: -4.272518634796143
    6. ' if' → logprob: -6.522518634796143
    7. 'i' → logprob: -6.647518634796143
    8. ' while' → logprob: -6.772518634796143
    9. 'range' → logprob: -8.6475191116333
    10. 'j' → logprob: -9.0225191116333

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47879526019096375
    2. '=' → logprob: -0.9787952899932861
    3. '_' → logprob: -5.478795051574707
    4. ' ' → logprob: -8.478795051574707
    5. ',' → logprob: -8.978795051574707
    6. '   ' → logprob: -10.103795051574707
    7. 'for' → logprob: -10.603795051574707
    8. '  ' → logprob: -11.228795051574707
    9. '    ' → logprob: -11.228795051574707
    10. '<|end|>' → logprob: -11.228795051574707

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39139771461486816
    2. ' ' → logprob: -1.1413977146148682
    3. 'a' → logprob: -7.016397476196289
    4. ' K' → logprob: -7.141397476196289
    5. ' a' → logprob: -7.391397476196289
    6. '1' → logprob: -8.016397476196289
    7. ' sum' → logprob: -8.141397476196289
    8. ' i' → logprob: -8.266397476196289
    9. '10' → logprob: -8.516397476196289
    10. 'sum' → logprob: -8.641397476196289

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011493867496028543
    2. 'float' → logprob: -7.7511491775512695
    3. 'a' → logprob: -8.87614917755127
    4. ' ' → logprob: -9.12614917755127
    5. 'R' → logprob: -9.37614917755127
    6. 'sum' → logprob: -9.62614917755127
    7. '[]' → logprob: -9.87614917755127
    8. 'False' → logprob: -10.12614917755127
    9. 'i' → logprob: -10.37614917755127
    10. 'abs' → logprob: -10.50114917755127

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3577854037284851
    2. '   ' → logprob: -1.3577854633331299
    3. '<|end|>' → logprob: -3.35778546333313
    4. '    
' → logprob: -5.607785224914551
    5. '
' → logprob: -6.232785224914551
    6. '  
' → logprob: -7.107785224914551
    7. ' 
' → logprob: -7.607785224914551
    8. ' for' → logprob: -7.857785224914551
    9. '<|end|>' → logprob: -7.857785224914551
    10. '    ' → logprob: -8.60778522491455

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020440327934920788
    2. '<|end|>' → logprob: -7.002044200897217
    3. ' for' → logprob: -7.502044200897217
    4. '
' → logprob: -8.752043724060059
    5. '    
' → logprob: -9.252043724060059
    6. ' ' → logprob: -9.252043724060059
    7. '    ' → logprob: -9.377043724060059
    8. 'for' → logprob: -10.252043724060059
    9. '  ' → logprob: -10.377043724060059
    10. '	for' → logprob: -10.627043724060059

Token 141: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4560788571834564
    2. '   ' → logprob: -1.5810788869857788
    3. ' for' → logprob: -1.8310788869857788
    4. '	for' → logprob: -9.08107852935791
    5. '    ' → logprob: -10.33107852935791
    6. ' ' → logprob: -10.58107852935791
    7. 'if' → logprob: -11.33107852935791
    8. '  ' → logprob: -11.58107852935791
    9. 'while' → logprob: -11.70607852935791
    10. '       ' → logprob: -12.08107852935791

Token 142: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.8890439867973328
    2. '=' → logprob: -1.1390440464019775
    3. ' =' → logprob: -1.6390440464019775
    4. ' ' → logprob: -3.6390440464019775
    5. 'for' → logprob: -3.6390440464019775
    6. ' for' → logprob: -4.764043807983398
    7. '   ' → logprob: -5.264043807983398
    8. '    ' → logprob: -6.889043807983398
    9. 'ize' → logprob: -7.139043807983398
    10. '  ' → logprob: -7.264043807983398

Token 143: ' R' (ID: 460)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13005299866199493
    2. 'sum' → logprob: -3.3800530433654785
    3. 'R' → logprob: -3.5050530433654785
    4. 'a' → logprob: -3.6300530433654785
    5. 'L' → logprob: -4.5050530433654785
    6. ' ' → logprob: -5.7550530433654785
    7. '""' → logprob: -5.7550530433654785
    8. 'N' → logprob: -5.7550530433654785
    9. 'K' → logprob: -6.0050530433654785
    10. '"' → logprob: -6.6300530433654785

Token 144: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.327856630785391e-05
    2. '[' → logprob: -9.500082969665527
    3. ' [' → logprob: -12.625082969665527
    4. '[len' → logprob: -13.125082969665527
    5. 'i' → logprob: -13.625082969665527
    6. '[n' → logprob: -14.750082969665527
    7. '[-' → logprob: -15.500082969665527
    8. '[s' → logprob: -15.875082969665527
    9. '[N' → logprob: -15.875082969665527
    10. '[I' → logprob: -16.000083923339844

Token 145: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022742539644241333
    2. ']
' → logprob: -3.897742509841919
    3. '])' → logprob: -6.397742748260498
    4. ')]' → logprob: -8.52274227142334
    5. ')' → logprob: -8.77274227142334
    6. ']
' → logprob: -9.77274227142334
    7. ':]' → logprob: -10.77274227142334
    8. '   ' → logprob: -10.89774227142334
    9. ' ]' → logprob: -11.02274227142334
    10. ']

' → logprob: -11.02274227142334

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003448968520388007
    2. '
' → logprob: -6.253448963165283
    3. '    
' → logprob: -7.128448963165283
    4. ' for' → logprob: -8.003449440002441
    5. 'for' → logprob: -8.378449440002441
    6. '<|end|>' → logprob: -10.128449440002441
    7. '	for' → logprob: -10.253449440002441
    8. ',' → logprob: -10.878449440002441
    9. '  
' → logprob: -11.503449440002441
    10. '       ' → logprob: -11.878449440002441

Token 147: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011907290667295456
    2. ' for' → logprob: -4.51190710067749
    3. '   ' → logprob: -7.76190710067749
    4. 'mod' → logprob: -8.886907577514648
    5. 'if' → logprob: -9.386907577514648
    6. 'j' → logprob: -9.636907577514648
    7. 'flag' → logprob: -10.136907577514648
    8. 'b' → logprob: -10.886907577514648
    9. 'm' → logprob: -11.386907577514648
    10. 'valid' → logprob: -11.636907577514648

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2601822018623352
    2. '=' → logprob: -1.8851821422576904
    3. 'for' → logprob: -2.7601821422576904
    4. ' for' → logprob: -5.7601823806762695
    5. '   ' → logprob: -6.6351823806762695
    6. '_' → logprob: -7.1351823806762695
    7. 'll' → logprob: -7.1351823806762695
    8. ',' → logprob: -7.3851823806762695
    9. '=[]' → logprob: -7.5101823806762695
    10. ' +=' → logprob: -7.6351823806762695

Token 149: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7322819828987122
    2. '[]' → logprob: -1.4822819232940674
    3. '[L' → logprob: -1.7322819232940674
    4. ' [' → logprob: -3.1072819232940674
    5. '[len' → logprob: -4.1072821617126465
    6. '[a' → logprob: -4.4822821617126465
    7. 'L' → logprob: -4.4822821617126465
    8. '0' → logprob: -4.6072821617126465
    9. '[s' → logprob: -5.8572821617126465
    10. '[max' → logprob: -5.8572821617126465

Token 150: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39753109216690063
    2. ' for' → logprob: -1.1475310325622559
    3. '<|end|>' → logprob: -4.772531032562256
    4. '   ' → logprob: -6.272531032562256
    5. '	for' → logprob: -8.772531509399414
    6. ' ' → logprob: -9.522531509399414
    7. '<|end|>' → logprob: -11.772531509399414
    8. '[' → logprob: -12.272531509399414
    9. '    ' → logprob: -12.897531509399414
    10. ')' → logprob: -12.897531509399414

Token 151: ' B' (ID: 418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001239196863025427
    2. ' for' → logprob: -9.000123977661133
    3. '[' → logprob: -15.625123977661133
    4. '	for' → logprob: -15.875123977661133
    5. '   ' → logprob: -16.500123977661133
    6. 'while' → logprob: -17.500123977661133
    7. '<|end|>' → logprob: -17.875123977661133
    8. ')' → logprob: -18.375123977661133
    9. ' ' → logprob: -18.750123977661133
    10. 'j' → logprob: -18.875123977661133

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22590328752994537
    2. '=' → logprob: -1.6009032726287842
    3. '=[]' → logprob: -8.475903511047363
    4. ',' → logprob: -9.475903511047363
    5. '.append' → logprob: -9.600903511047363
    6. '<|end|>' → logprob: -10.100903511047363
    7. '[' → logprob: -10.975903511047363
    8. ')' → logprob: -11.350903511047363
    9. '[]' → logprob: -11.475903511047363
    10. 'for' → logprob: -11.725903511047363

Token 153: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.009230153635144234
    2. ' []' → logprob: -4.759230136871338
    3. '[]
' → logprob: -7.884230136871338
    4. '[' → logprob: -9.134230613708496
    5. '[]}' → logprob: -10.009230613708496
    6. '0' → logprob: -10.384230613708496
    7. 'L' → logprob: -10.759230613708496
    8. 'list' → logprob: -11.759230613708496
    9. '[]

' → logprob: -12.259230613708496
    10. '[],' → logprob: -12.259230613708496

Token 154: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4178590476512909
    2. ' for' → logprob: -1.1678590774536133
    3. '   ' → logprob: -3.5428590774536133
    4. '<|end|>' → logprob: -6.542859077453613
    5. '	for' → logprob: -9.292859077453613
    6. ' ' → logprob: -11.292859077453613
    7. '
' → logprob: -11.917859077453613
    8. '<|end|>' → logprob: -12.292859077453613
    9. 'if' → logprob: -12.542859077453613
    10. ')' → logprob: -12.917859077453613

Token 155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002627662615850568
    2. ' for' → logprob: -8.250263214111328
    3. '<|end|>' → logprob: -14.125263214111328
    4. '	for' → logprob: -15.500263214111328
    5. 'while' → logprob: -15.875263214111328
    6. '   ' → logprob: -16.000263214111328
    7. 'j' → logprob: -16.125263214111328
    8. 'if' → logprob: -16.750263214111328
    9. ')' → logprob: -17.000263214111328
    10. ' ' → logprob: -17.250263214111328

Token 156: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16235683858394623
    2. 'x' → logprob: -2.5373568534851074
    3. ' j' → logprob: -3.2873568534851074
    4. 'v' → logprob: -4.412356853485107
    5. 'l' → logprob: -4.537356853485107
    6. 'num' → logprob: -6.287356853485107
    7. ' x' → logprob: -6.412356853485107
    8. 'e' → logprob: -6.662356853485107
    9. 'a' → logprob: -6.787356853485107
    10. 'L' → logprob: -6.787356853485107

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807638958096504
    2. 'in' → logprob: -3.288076400756836
    3. ' ' → logprob: -10.413076400756836
    4. '  ' → logprob: -13.788076400756836
    5. '    ' → logprob: -13.913076400756836
    6. '	in' → logprob: -14.288076400756836
    7. 'range' → logprob: -14.288076400756836
    8. '   ' → logprob: -14.413076400756836
    9. ',' → logprob: -14.663076400756836
    10. ' ,' → logprob: -15.788076400756836

Token 158: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3492027521133423
    2. 'range' → logprob: -1.2242027521133423
    3. 'L' → logprob: -7.474202632904053
    4. ' L' → logprob: -8.724203109741211
    5. '(range' → logprob: -11.099203109741211
    6. '	range' → logprob: -12.599203109741211
    7. ' ' → logprob: -13.224203109741211
    8. 'Range' → logprob: -13.849203109741211
    9. '   ' → logprob: -14.099203109741211
    10. '  ' → logprob: -14.224203109741211

Token 159: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.3620014786720276
    2. '(N' → logprob: -1.2370014190673828
    3. '(K' → logprob: -4.487001419067383
    4. 'len' → logprob: -6.612001419067383
    5. '(' → logprob: -7.362001419067383
    6. '(n' → logprob: -9.237001419067383
    7. 'N' → logprob: -10.112001419067383
    8. '   ' → logprob: -10.737001419067383
    9. ' len' → logprob: -11.237001419067383
    10. ' (' → logprob: -11.362001419067383

Token 160: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07035195827484131
    2. '):
' → logprob: -2.695352077484131
    3. ':' → logprob: -8.445351600646973
    4. '   ' → logprob: -9.320351600646973
    5. ')' → logprob: -10.695351600646973
    6. '):
' → logprob: -10.695351600646973
    7. '+' → logprob: -11.195351600646973
    8. '):

' → logprob: -11.320351600646973
    9. ' ):' → logprob: -11.695351600646973
    10. '       ' → logprob: -11.820351600646973

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006458374671638012
    2. '<|end|>' → logprob: -5.256458282470703
    3. ' if' → logprob: -8.006458282470703
    4. '
' → logprob: -8.256458282470703
    5. ':' → logprob: -8.881458282470703
    6. ',' → logprob: -8.881458282470703
    7. '<|end|>' → logprob: -8.881458282470703
    8. 'if' → logprob: -9.631458282470703
    9. '        
' → logprob: -10.881458282470703
    10. '```' → logprob: -11.131458282470703

Token 162: ' k' (ID: 372)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1906352937221527
    2. 'if' → logprob: -1.815635323524475
    3. ' x' → logprob: -5.3156352043151855
    4. '       ' → logprob: -6.8156352043151855
    5. '    ' → logprob: -6.9406352043151855
    6. '   ' → logprob: -7.4406352043151855
    7. 'x' → logprob: -7.4406352043151855
    8. ' A' → logprob: -7.5656352043151855
    9. 'mod' → logprob: -7.5656352043151855
    10. ' mod' → logprob: -7.8156352043151855

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871181905269623
    2. '=' → logprob: -1.1371182203292847
    3. ' ' → logprob: -9.387118339538574
    4. ',' → logprob: -10.387118339538574
    5. '%' → logprob: -10.762118339538574
    6. '   ' → logprob: -11.137118339538574
    7. '    ' → logprob: -11.512118339538574
    8. '%=' → logprob: -11.887118339538574
    9. ' %=' → logprob: -12.012118339538574
    10. ')' → logprob: -12.012118339538574

Token 164: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00021760274830739945
    2. ' L' → logprob: -8.62521743774414
    3. '(L' → logprob: -11.25021743774414
    4. '   ' → logprob: -11.75021743774414
    5. 'R' → logprob: -12.00021743774414
    6. 's' → logprob: -12.75021743774414
    7. 'j' → logprob: -13.25021743774414
    8. '	L' → logprob: -13.75021743774414
    9. '(' → logprob: -13.87521743774414
    10. 'a' → logprob: -14.12521743774414

Token 165: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.5776860184123507e-06
    2. 'j' → logprob: -13.50000286102295
    3. '[' → logprob: -13.75000286102295
    4. '
' → logprob: -16.875001907348633
    5. ' [' → logprob: -17.250001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.375001907348633
    8. ',j' → logprob: -18.625001907348633
    9. '[i' → logprob: -18.625001907348633
    10. '	j' → logprob: -19.000001907348633

Token 166: ']
' (ID: 1592)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.46396246552467346
    2. ' %' → logprob: -1.088962435722351
    3. ')' → logprob: -3.7139625549316406
    4. '%s' → logprob: -4.713962554931641
    5. ']' → logprob: -8.08896255493164
    6. ' ' → logprob: -8.08896255493164
    7. 's' → logprob: -8.21396255493164
    8. ' s' → logprob: -9.08896255493164
    9. ' ' → logprob: -9.58896255493164
    10. ')%' → logprob: -9.96396255493164

Token 167: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16137686371803284
    2. '%' → logprob: -1.9113768339157104
    3. '       ' → logprob: -7.036376953125
    4. '<|end|>' → logprob: -9.786376953125
    5. '%A' → logprob: -9.911376953125
    6. ')' → logprob: -10.286376953125
    7. '%i' → logprob: -11.036376953125
    8. '%b' → logprob: -11.036376953125
    9. '%e' → logprob: -11.036376953125
    10. '%s' → logprob: -11.661376953125

Token 168: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3760339617729187
    2. 'r' → logprob: -2.1260340213775635
    3. ' if' → logprob: -3.0010340213775635
    4. 'k' → logprob: -3.1260340213775635
    5. 'A' → logprob: -3.6260340213775635
    6. 'mod' → logprob: -3.8760340213775635
    7. '%' → logprob: -4.251033782958984
    8. ' r' → logprob: -4.876033782958984
    9. ' A' → logprob: -5.126033782958984
    10. ' k' → logprob: -5.126033782958984

Token 169: ' =' (ID: 314)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.9352798461914062
    2. ' %=' → logprob: -2.0602798461914062
    3. '%=' → logprob: -2.0602798461914062
    4. '%' → logprob: -2.1852798461914062
    5. 'bs' → logprob: -2.1852798461914062
    6. 'b' → logprob: -2.1852798461914062
    7. ' =' → logprob: -2.1852798461914062
    8. ' %' → logprob: -3.3102798461914062
    9. '=' → logprob: -3.3102798461914062
    10. '%b' → logprob: -3.6852798461914062

Token 170: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005172328092157841
    2. ' k' → logprob: -5.505172252655029
    3. '(k' → logprob: -7.255172252655029
    4. 'L' → logprob: -9.005172729492188
    5. 's' → logprob: -9.505172729492188
    6. 'j' → logprob: -10.255172729492188
    7. ' (' → logprob: -10.380172729492188
    8. '(' → logprob: -10.380172729492188
    9. '(L' → logprob: -11.380172729492188
    10. 'abs' → logprob: -11.380172729492188

Token 171: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6410002708435059
    2. '%' → logprob: -0.8910002708435059
    3. '%s' → logprob: -2.766000270843506
    4. '%i' → logprob: -10.266000747680664
    5. '%n' → logprob: -11.141000747680664
    6. '%d' → logprob: -12.016000747680664
    7. ' ' → logprob: -12.016000747680664
    8. '%c' → logprob: -12.141000747680664
    9. ' ' → logprob: -12.641000747680664
    10. '%e' → logprob: -13.141000747680664

Token 172: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010331686353310943
    2. ' s' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.251032829284668
    4. ' ' → logprob: -16.501033782958984
    5. 'S' → logprob: -17.501033782958984
    6. ' ' → logprob: -18.126033782958984
    7. '  ' → logprob: -18.126033782958984
    8. '`s' → logprob: -18.876033782958984
    9. '	s' → logprob: -19.001033782958984
    10. '    ' → logprob: -19.126033782958984

Token 173: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027512619271874428
    2. '       ' → logprob: -4.277512550354004
    3. '<|end|>' → logprob: -4.527512550354004
    4. 'if' → logprob: -6.902512550354004
    5. ' if' → logprob: -7.527512550354004
    6. '        
' → logprob: -7.902512550354004
    7. '   ' → logprob: -8.402512550354004
    8. '<|end|>' → logprob: -9.527512550354004
    9. '    
' → logprob: -10.152512550354004
    10. '
' → logprob: -10.152512550354004

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02212543599307537
    2. '
' → logprob: -4.397125244140625
    3. '<|end|>' → logprob: -4.772125244140625
    4. ',' → logprob: -7.522125244140625
    5. ' if' → logprob: -8.147125244140625
    6. 'if' → logprob: -9.522125244140625
    7. '        
' → logprob: -9.772125244140625
    8. '<|end|>' → logprob: -9.897125244140625
    9. ',
' → logprob: -10.772125244140625
    10. '
' → logprob: -11.397125244140625

Token 175: ' b' (ID: 287)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2054150551557541
    2. 'if' → logprob: -1.8304150104522705
    3. 'B' → logprob: -3.9554150104522705
    4. '   ' → logprob: -6.08041524887085
    5. ' if' → logprob: -6.20541524887085
    6. '       ' → logprob: -7.08041524887085
    7. 'add' → logprob: -7.70541524887085
    8. ' A' → logprob: -7.83041524887085
    9. 'b' (adapté à ' b') → logprob: -9.205414772033691
    10. 'a' → logprob: -10.955414772033691

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020555200055241585
    2. '=' → logprob: -3.895555257797241
    3. ' ' → logprob: -11.64555549621582
    4. ' +=' → logprob: -13.39555549621582
    5. ',' → logprob: -13.77055549621582
    6. ' =
' → logprob: -13.77055549621582
    7. '.' → logprob: -14.77055549621582
    8. '    ' → logprob: -15.89555549621582
    9. '  ' → logprob: -15.89555549621582
    10. '+=' → logprob: -16.14555549621582

Token 177: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17855790257453918
    2. '(s' → logprob: -2.928557872772217
    3. '(k' → logprob: -3.303557872772217
    4. ' s' → logprob: -3.428557872772217
    5. ' (' → logprob: -3.928557872772217
    6. '(' → logprob: -4.803557872772217
    7. 'k' → logprob: -5.428557872772217
    8. '(L' → logprob: -6.303557872772217
    9. '(a' → logprob: -6.678557872772217
    10. '(-' → logprob: -7.303557872772217

Token 178: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022534668445587
    2. ' -' → logprob: -1.9102253913879395
    3. '-a' → logprob: -14.410224914550781
    4. '-k' → logprob: -14.785224914550781
    5. '<|end|>' → logprob: -16.53522491455078
    6. 'a' → logprob: -16.91022491455078
    7. ' ' → logprob: -17.16022491455078
    8. '-
' → logprob: -17.78522491455078
    9. '
' → logprob: -17.78522491455078
    10. '‌' → logprob: -18.03522491455078

Token 179: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02975129522383213
    2. ' a' → logprob: -3.5297513008117676
    3. 'k' → logprob: -14.65475082397461
    4. '1' → logprob: -16.65475082397461
    5. ' ' → logprob: -16.65475082397461
    6. ' k' → logprob: -16.65475082397461
    7. '	a' → logprob: -17.77975082397461
    8. '(a' → logprob: -18.40475082397461
    9. 's' → logprob: -18.40475082397461
    10. '    ' → logprob: -18.90475082397461

Token 180: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005255456548184156
    2. ' if' → logprob: -6.380255222320557
    3. ',' → logprob: -6.505255222320557
    4. '
' → logprob: -7.005255222320557
    5. 'if' → logprob: -7.255255222320557
    6. '<|end|>' → logprob: -8.380255699157715
    7. '        
' → logprob: -9.255255699157715
    8. '   ' → logprob: -10.005255699157715
    9. '  
' → logprob: -11.380255699157715
    10. ' ' → logprob: -11.380255699157715

Token 182: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3274625837802887
    2. ' if' → logprob: -1.7024625539779663
    3. 'if' (adapté à ' if') → logprob: -3.077462673187256
    4. 'A' → logprob: -3.202462673187256
    5. ' A' → logprob: -5.202462673187256
    6. '   ' → logprob: -5.702462673187256
    7. '
' → logprob: -7.952462673187256
    8. ',' → logprob: -7.952462673187256
    9. '    ' → logprob: -9.202462196350098
    10. '           ' → logprob: -9.327462196350098

Token 183: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6692277193069458
    2. 'a' → logprob: -1.5442277193069458
    3. ' k' → logprob: -1.9192277193069458
    4. 'k' → logprob: -2.5442276000976562
    5. ' b' → logprob: -4.044227600097656
    6. ' L' → logprob: -4.169227600097656
    7. 'b' → logprob: -4.794227600097656
    8. 'L' → logprob: -5.294227600097656
    9. ' add' → logprob: -7.419227600097656
    10. ' ' → logprob: -7.544227600097656

Token 184: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11419998854398727
    2. ' ==' → logprob: -2.8641998767852783
    3. '<=' → logprob: -3.8641998767852783
    4. ' >' → logprob: -4.489200115203857
    5. ' <' → logprob: -4.614200115203857
    6. '==' → logprob: -5.489200115203857
    7. ' !=' → logprob: -5.864200115203857
    8. '>' → logprob: -7.239200115203857
    9. ':' → logprob: -7.864200115203857
    10. '<' → logprob: -8.2391996383667

Token 185: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08524831384420395
    2. '0' → logprob: -2.9602482318878174
    3. ' b' → logprob: -3.5852482318878174
    4. ' ' → logprob: -6.4602484703063965
    5. 'K' → logprob: -7.8352484703063965
    6. ' K' → logprob: -9.335247993469238
    7. 's' → logprob: -10.085247993469238
    8. '=' → logprob: -10.585247993469238
    9. 'k' → logprob: -11.210247993469238
    10. ' s' → logprob: -11.585247993469238

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034186739940196276
    2. ':
' → logprob: -5.878418445587158
    3. ' and' → logprob: -7.503418445587158
    4. '<|end|>' → logprob: -10.878418922424316
    5. ',' → logprob: -11.253418922424316
    6. 'and' → logprob: -11.753418922424316
    7. ' or' → logprob: -12.128418922424316
    8. ':

' → logprob: -12.753418922424316
    9. ' :' → logprob: -12.753418922424316
    10. '       ' → logprob: -12.878418922424316

Token 187: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26159071922302246
    2. '           ' → logprob: -2.1365907192230225
    3. ' A' → logprob: -2.8865907192230225
    4. 'A' → logprob: -3.3865907192230225
    5. ' add' → logprob: -5.136590957641602
    6. ' B' → logprob: -5.261590957641602
    7. '   ' → logprob: -6.011590957641602
    8. 'B' → logprob: -6.261590957641602
    9. '-' → logprob: -6.261590957641602
    10. 'add' → logprob: -6.511590957641602

Token 188: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.5922492146492004
    2. 'minus' → logprob: -1.7172491550445557
    3. '           ' → logprob: -1.8422491550445557
    4. 'A' → logprob: -3.5922491550445557
    5. ' add' → logprob: -3.7172491550445557
    6. '   ' → logprob: -4.467249393463135
    7. '       ' → logprob: -4.467249393463135
    8. ' minus' → logprob: -4.592249393463135
    9. 'plus' → logprob: -4.717249393463135
    10. 'B' → logprob: -4.717249393463135

Token 189: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007770478259772062
    2. '+=' → logprob: -4.882770538330078
    3. ' -=' → logprob: -10.007770538330078
    4. '  ' → logprob: -10.632770538330078
    5. '   ' → logprob: -10.632770538330078
    6. ' =' → logprob: -10.632770538330078
    7. ' ' → logprob: -11.382770538330078
    8. '    ' → logprob: -11.382770538330078
    9. ',' → logprob: -11.757770538330078
    10. '+' → logprob: -12.132770538330078

Token 190: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.40975096821784973
    2. 'a' → logprob: -1.1597509384155273
    3. ' b' → logprob: -4.159750938415527
    4. ' a' → logprob: -5.034750938415527
    5. 'k' → logprob: -8.159750938415527
    6. 's' → logprob: -9.784750938415527
    7. 'add' → logprob: -10.159750938415527
    8. '1' → logprob: -10.784750938415527
    9. ' k' → logprob: -11.159750938415527
    10. ' ' → logprob: -11.222250938415527

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2085934430360794
    2. '       ' → logprob: -2.0835933685302734
    3. '           ' → logprob: -2.8335933685302734
    4. ' 
' → logprob: -6.958593368530273
    5. '    
' → logprob: -7.083593368530273
    6. '  
' → logprob: -7.208593368530273
    7. 'else' → logprob: -7.208593368530273
    8. '
' → logprob: -7.833593368530273
    9. '            
' → logprob: -8.083593368530273
    10. ' else' → logprob: -8.208593368530273

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2541176676750183
    2. '       ' → logprob: -1.504117727279663
    3. 'else' → logprob: -7.129117488861084
    4. ' else' → logprob: -7.754117488861084
    5. '
' → logprob: -8.004117965698242
    6. '   ' → logprob: -8.254117965698242
    7. '               ' → logprob: -9.629117965698242
    8. ')' → logprob: -10.004117965698242
    9. ',' → logprob: -10.129117965698242
    10. 'B' → logprob: -10.379117965698242

Token 193: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.5367737412452698
    2. 'A' → logprob: -1.286773681640625
    3. 'minus' → logprob: -3.161773681640625
    4. ' B' → logprob: -3.286773681640625
    5. '           ' → logprob: -4.286773681640625
    6. '       ' → logprob: -4.411773681640625
    7. '   ' → logprob: -4.536773681640625
    8. ' A' → logprob: -4.661773681640625
    9. ' minus' → logprob: -4.786773681640625
    10. 'else' → logprob: -5.786773681640625

Token 194: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019388694781810045
    2. '.' → logprob: -6.251938819885254
    3. '.app' → logprob: -12.001938819885254
    4. ' .' → logprob: -13.126938819885254
    5. '.ap' → logprob: -13.626938819885254
    6. 'append' → logprob: -15.001938819885254
    7. '.extend' → logprob: -15.126938819885254
    8. '.add' → logprob: -15.876938819885254
    9. '<|end|>' → logprob: -16.25193977355957
    10. '.push' → logprob: -16.62693977355957

Token 195: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.8965626955032349
    2. '(k' → logprob: -0.8965626955032349
    3. 'b' → logprob: -2.1465625762939453
    4. '(j' → logprob: -3.1465625762939453
    5. '(s' → logprob: -5.021562576293945
    6. 'j' → logprob: -5.021562576293945
    7. '((' → logprob: -5.646562576293945
    8. 'k' → logprob: -5.771562576293945
    9. '(L' → logprob: -6.146562576293945
    10. '(a' → logprob: -7.021562576293945

Token 196: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16378365457057953
    2. ')' → logprob: -1.9137836694717407
    3. '       ' → logprob: -5.663783550262451
    4. ' )
' → logprob: -10.41378402709961
    5. ')
' → logprob: -10.53878402709961
    6. '   ' → logprob: -11.41378402709961
    7. ' )' → logprob: -11.91378402709961
    8. ')

' → logprob: -12.03878402709961
    9. '           ' → logprob: -13.41378402709961
    10. '),' → logprob: -15.03878402709961

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007619291078299284
    2. 'else' → logprob: -5.007619380950928
    3. ' else' → logprob: -7.507619380950928
    4. '           ' → logprob: -8.00761890411377
    5. '   ' → logprob: -12.25761890411377
    6. 'continue' → logprob: -12.38261890411377
    7. 'elif' → logprob: -13.00761890411377
    8. ')' → logprob: -13.25761890411377
    9. ',' → logprob: -13.38261890411377
    10. '<|end|>' → logprob: -13.63261890411377

Token 198: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6203266978263855
    2. '       ' → logprob: -1.1203267574310303
    3. ' else' → logprob: -1.9953267574310303
    4. 'elif' (adapté à ' elif') → logprob: -9.49532699584961
    5. ' elif' → logprob: -12.12032699584961
    6. '	else' → logprob: -12.49532699584961
    7. '   ' → logprob: -14.24532699584961
    8. '           ' → logprob: -14.37032699584961
    9. '<|end|>' → logprob: -14.49532699584961
    10. ',' → logprob: -14.87032699584961

Token 199: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38727447390556335
    2. ' a' → logprob: -1.1372745037078857
    3. ' b' → logprob: -8.762274742126465
    4. 'b' → logprob: -9.137274742126465
    5. ' add' → logprob: -10.012274742126465
    6. 'add' → logprob: -10.762274742126465
    7. '   ' → logprob: -11.137274742126465
    8. ' ' → logprob: -11.262274742126465
    9. 'else' → logprob: -12.012274742126465
    10. 'True' → logprob: -12.137274742126465

Token 200: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4822078347206116
    2. ' <' → logprob: -1.1072077751159668
    3. '>' → logprob: -3.232207775115967
    4. '<' → logprob: -4.982207775115967
    5. ' ==' → logprob: -6.107207775115967
    6. ':' → logprob: -6.232207775115967
    7. '==' → logprob: -7.357207775115967
    8. ' <=' → logprob: -7.357207775115967
    9. ' >=' → logprob: -8.857208251953125
    10. '<=' → logprob: -9.732208251953125

Token 201: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012621014378964901
    2. ' a' → logprob: -4.38762092590332
    3. 'b' → logprob: -9.76262092590332
    4. 'add' → logprob: -10.76262092590332
    5. ' add' → logprob: -11.38762092590332
    6. 's' → logprob: -12.01262092590332
    7. ' ' → logprob: -12.01262092590332
    8. ' b' → logprob: -12.38762092590332
    9. '=' → logprob: -13.26262092590332
    10. ' s' → logprob: -13.63762092590332

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20177944004535675
    2. ':
' → logprob: -1.7017794847488403
    3. '       ' → logprob: -8.57677936553955
    4. '           ' → logprob: -9.57677936553955
    5. ' and' → logprob: -9.95177936553955
    6. ' :
' → logprob: -10.95177936553955
    7. ' :' → logprob: -11.20177936553955
    8. ':
' → logprob: -11.45177936553955
    9. '):
' → logprob: -12.20177936553955
    10. ':

' → logprob: -12.45177936553955

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07482261955738068
    2. '       ' → logprob: -3.6998226642608643
    3. 'add' → logprob: -3.9498226642608643
    4. ' add' → logprob: -4.324822425842285
    5. '   ' → logprob: -4.949822425842285
    6. ':' → logprob: -5.699822425842285
    7. '          ' → logprob: -6.699822425842285
    8. ' ' → logprob: -7.074822425842285
    9. ':
' → logprob: -7.199822425842285
    10. '         ' → logprob: -7.699822425842285

Token 204: ' minus' (ID: 40335)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3171655535697937
    2. ' add' → logprob: -1.3171656131744385
    3. '   ' → logprob: -6.567165374755859
    4. ' minus' → logprob: -7.567165374755859
    5. 'minus' (adapté à ' minus') → logprob: -7.567165374755859
    6. '           ' → logprob: -7.692165374755859
    7. 'A' → logprob: -7.692165374755859
    8. '       ' → logprob: -8.94216537475586
    9. ' A' → logprob: -9.06716537475586
    10. ' ' → logprob: -10.06716537475586

Token 205: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020574938505887985
    2. '+=' → logprob: -3.8955750465393066
    3. ' -=' → logprob: -11.145574569702148
    4. '    ' → logprob: -12.020574569702148
    5. '   ' → logprob: -12.020574569702148
    6. ' ' → logprob: -13.645574569702148
    7. '=' → logprob: -13.645574569702148
    8. '       ' → logprob: -13.895574569702148
    9. ' =' → logprob: -14.020574569702148
    10. '        ' → logprob: -14.395574569702148

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04859009385108948
    2. ' a' → logprob: -3.0485901832580566
    3. '	a' → logprob: -13.173589706420898
    4. ' ' → logprob: -15.298589706420898
    5. '1' → logprob: -15.673589706420898
    6. '(a' → logprob: -16.5485897064209
    7. '0' → logprob: -16.6735897064209
    8. '_a' → logprob: -16.7985897064209
    9. '   ' → logprob: -16.9235897064209
    10. ')a' → logprob: -17.3610897064209

Token 207: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030085651203989983
    2. '       ' → logprob: -3.530085563659668
    3. ',' → logprob: -9.655085563659668
    4. '   ' → logprob: -9.780085563659668
    5. '<|end|>' → logprob: -9.780085563659668
    6. 'else' → logprob: -10.155085563659668
    7. '
' → logprob: -10.405085563659668
    8. ' else' → logprob: -10.530085563659668
    9. '               ' → logprob: -10.655085563659668
    10. '```' → logprob: -11.280085563659668

Token 208: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019691089168190956
    2. 'else' → logprob: -4.144690990447998
    3. ' else' → logprob: -5.644690990447998
    4. '           ' → logprob: -9.769691467285156
    5. '   ' → logprob: -10.769691467285156
    6. '<|end|>' → logprob: -11.394691467285156
    7. '      ' → logprob: -12.269691467285156
    8. ',' → logprob: -12.394691467285156
    9. 'elif' → logprob: -12.394691467285156
    10. '```' → logprob: -13.019691467285156

Token 209: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.018549518659710884
    2. ' A' → logprob: -4.01854944229126
    3. '   ' → logprob: -8.643549919128418
    4. '       ' → logprob: -9.268549919128418
    5. '           ' → logprob: -10.018549919128418
    6. '  ' → logprob: -10.268549919128418
    7. ' ' → logprob: -10.393549919128418
    8. '	A' → logprob: -12.393549919128418
    9. '    ' → logprob: -13.018549919128418
    10. 'B' → logprob: -13.143549919128418

Token 210: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5120287066092715e-05
    2. '.' → logprob: -10.500035285949707
    3. 'append' → logprob: -12.250035285949707
    4. ' .' → logprob: -13.375035285949707
    5. '.app' → logprob: -14.375035285949707
    6. 'Append' → logprob: -14.875035285949707
    7. 'appen' → logprob: -16.50003433227539
    8. '<|end|>' → logprob: -16.50003433227539
    9. '.ap' → logprob: -16.75003433227539
    10. ' append' → logprob: -16.87503433227539

Token 211: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.611323624383658e-05
    2. 'a' → logprob: -9.875065803527832
    3. '(' → logprob: -11.250065803527832
    4. '(k' → logprob: -14.500065803527832
    5. ' (' → logprob: -14.875065803527832
    6. '(
' → logprob: -15.125065803527832
    7. '(A' → logprob: -15.875065803527832
    8. '(-' → logprob: -16.12506675720215
    9. '(i' → logprob: -16.12506675720215
    10. '((' → logprob: -17.00006675720215

Token 212: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022453386336565018
    2. ')
' → logprob: -3.8974533081054688
    3. '       ' → logprob: -6.272453308105469
    4. ' )' → logprob: -12.147453308105469
    5. ')\
' → logprob: -13.147453308105469
    6. 'else' → logprob: -13.272453308105469
    7. ')
' → logprob: -13.272453308105469
    8. '<|end|>' → logprob: -13.522453308105469
    9. ')return' → logprob: -13.647453308105469
    10. '):
' → logprob: -13.647453308105469

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07658038288354874
    2. 'else' → logprob: -3.201580286026001
    3. ' else' → logprob: -3.701580286026001
    4. '<|end|>' → logprob: -4.82658052444458
    5. 'elif' → logprob: -9.576580047607422
    6. '   ' → logprob: -9.951580047607422
    7. '<|end|>' → logprob: -10.076580047607422
    8. '      ' → logprob: -10.326580047607422
    9. '	else' → logprob: -10.451580047607422
    10. ' elif' → logprob: -10.576580047607422

Token 214: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8128657341003418
    2. 'else' (adapté à ' else') → logprob: -0.8128657341003418
    3. ' else' → logprob: -2.187865734100342
    4. 'elif' → logprob: -8.1878662109375
    5. '   ' → logprob: -8.5628662109375
    6. '	else' → logprob: -9.6878662109375
    7. '    ' → logprob: -10.3128662109375
    8. '<|end|>' → logprob: -10.4378662109375
    9. ' elif' → logprob: -10.5628662109375
    10. '        ' → logprob: -10.8128662109375

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014320284128189087
    2. ':
' → logprob: -4.264320373535156
    3. '       ' → logprob: -9.264320373535156
    4. ' :' → logprob: -10.389320373535156
    5. '           ' → logprob: -11.389320373535156
    6. ' :
' → logprob: -11.764320373535156
    7. ':
' → logprob: -12.389320373535156
    8. ':

' → logprob: -13.139320373535156
    9. '<|end|>' → logprob: -13.264320373535156
    10. '   ' → logprob: -13.514320373535156

Token 216: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016048680990934372
    2. '           ' → logprob: -4.516048908233643
    3. ' pass' → logprob: -5.766048908233643
    4. '   ' → logprob: -7.391048908233643
    5. ' continue' → logprob: -7.391048908233643
    6. ' add' → logprob: -8.641048431396484
    7. '```' → logprob: -9.141048431396484
    8. 'pass' → logprob: -9.766048431396484
    9. 'continue' → logprob: -9.891048431396484
    10. ' A' → logprob: -10.391048431396484

Token 217: ' add' (ID: 1147)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01672731339931488
    2. 'if' → logprob: -5.141727447509766
    3. ' A' → logprob: -5.516727447509766
    4. '           ' → logprob: -5.516727447509766
    5. 'add' (adapté à ' add') → logprob: -6.891727447509766
    6. 'a' → logprob: -7.766727447509766
    7. '   ' → logprob: -7.891727447509766
    8. '       ' → logprob: -8.141727447509766
    9. 'pass' → logprob: -9.016727447509766
    10. ' if' → logprob: -9.016727447509766

Token 218: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.004158295225352049
    2. '+=' → logprob: -5.5041584968566895
    3. '.append' → logprob: -10.254158020019531
    4. ' ' → logprob: -11.504158020019531
    5. '    ' → logprob: -11.629158020019531
    6. ' =' → logprob: -12.379158020019531
    7. '=' → logprob: -12.754158020019531
    8. ' -=' → logprob: -13.004158020019531
    9. ',' → logprob: -13.129158020019531
    10. ' ,' → logprob: -13.379158020019531

Token 219: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5846723318099976
    2. 'b' → logprob: -0.8346723318099976
    3. '0' → logprob: -4.834672451019287
    4. ' b' → logprob: -7.959672451019287
    5. ' a' → logprob: -8.084671974182129
    6. 'min' → logprob: -10.459671974182129
    7. ' ' → logprob: -10.959671974182129
    8. 'B' → logprob: -11.084671974182129
    9. 's' → logprob: -11.584671974182129
    10. '1' → logprob: -11.959671974182129

Token 220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058661457151174545
    2. '<|end|>' → logprob: -3.058661460876465
    3. '
' → logprob: -4.683661460876465
    4. '<|end|>' → logprob: -8.058661460876465
    5. '       ' → logprob: -8.308661460876465
    6. ',' → logprob: -10.058661460876465
    7. '		' → logprob: -10.183661460876465
    8. '   ' → logprob: -10.308661460876465
    9. '          ' → logprob: -11.058661460876465
    10. '               ' → logprob: -11.183661460876465

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025460547767579556
    2. '<|end|>' → logprob: -6.3775458335876465
    3. '
' → logprob: -7.6275458335876465
    4. '       ' → logprob: -8.377546310424805
    5. '<|end|>' → logprob: -10.252546310424805
    6. '		' → logprob: -10.502546310424805
    7. '   ' → logprob: -11.002546310424805
    8. ',' → logprob: -11.127546310424805
    9. '	       ' → logprob: -11.877546310424805
    10. '               ' → logprob: -12.002546310424805

Token 222: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.282710462808609
    2. 'B' (adapté à ' B') → logprob: -1.4077104330062866
    3. ' A' → logprob: -6.782710552215576
    4. ' B' → logprob: -7.907710552215576
    5. '   ' → logprob: -10.657710075378418
    6. 'a' → logprob: -11.532710075378418
    7. 'add' → logprob: -11.907710075378418
    8. '           ' → logprob: -13.157710075378418
    9. ' ' → logprob: -13.407710075378418
    10. '0' → logprob: -13.782710075378418

Token 223: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.250014305114746
    3. 'append' → logprob: -14.625014305114746
    4. ' .' → logprob: -14.875014305114746
    5. '.app' → logprob: -16.62501335144043
    6. '.add' → logprob: -16.87501335144043
    7. '.extend' → logprob: -17.00001335144043
    8. '           ' → logprob: -18.25001335144043
    9. '<|end|>' → logprob: -18.37501335144043
    10. '.Append' → logprob: -19.00001335144043

Token 224: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29004353284835815
    2. 'b' → logprob: -1.540043592453003
    3. '(a' → logprob: -3.540043592453003
    4. '(b' → logprob: -5.165043354034424
    5. '0' → logprob: -6.290043354034424
    6. '(' → logprob: -7.665043354034424
    7. ' a' → logprob: -8.540043830871582
    8. ' b' → logprob: -8.915043830871582
    9. ' ' → logprob: -12.540043830871582
    10. ' (' → logprob: -12.665043830871582

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002367443637922406
    2. ')
' → logprob: -6.1273674964904785
    3. '       ' → logprob: -8.62736701965332
    4. ')return' → logprob: -14.75236701965332
    5. ')
' → logprob: -14.75236701965332
    6. ')

' → logprob: -14.87736701965332
    7. '<|end|>' → logprob: -15.00236701965332
    8. '           ' → logprob: -15.25236701965332
    9. ')\
' → logprob: -15.25236701965332
    10. ')#' → logprob: -15.50236701965332

Token 226: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6306633949279785
    2. ' if' → logprob: -1.2556633949279785
    3. '<|end|>' → logprob: -2.3806633949279785
    4. 'if' → logprob: -2.6306633949279785
    5. ' ' → logprob: -5.7556633949279785
    6. '       ' → logprob: -6.0056633949279785
    7. ')' → logprob: -6.1306633949279785
    8. ' for' → logprob: -6.1306633949279785
    9. '    ' → logprob: -6.2556633949279785
    10. '
' → logprob: -6.2556633949279785

Token 228: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.00017445837147533894
    2. '=' → logprob: -9.500174522399902
    3. '.' → logprob: -9.750174522399902
    4. ' =' → logprob: -11.125174522399902
    5. 'sort' → logprob: -11.375174522399902
    6. '.append' → logprob: -11.625174522399902
    7. ',' → logprob: -12.875174522399902
    8. '_sorted' → logprob: -13.500174522399902
    9. ' sort' → logprob: -14.250174522399902
    10. '.extend' → logprob: -14.500174522399902

Token 229: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0700656995177269
    2. ' sorted' → logprob: -2.69506573677063
    3. 'sum' → logprob: -9.57006549835205
    4. 'set' → logprob: -10.94506549835205
    5. 'A' → logprob: -11.19506549835205
    6. 'min' → logprob: -12.82006549835205
    7. ' ' → logprob: -12.94506549835205
    8. 'max' → logprob: -12.94506549835205
    9. 'list' → logprob: -13.07006549835205
    10. 'sort' → logprob: -13.07006549835205

Token 230: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.0020742492051795e-05
    2. '(' → logprob: -10.500049591064453
    3. 'A' → logprob: -11.375049591064453
    4. '()' → logprob: -11.500049591064453
    5. '(a' → logprob: -15.375049591064453
    6. '(
' → logprob: -15.500049591064453
    7. '([' → logprob: -15.625049591064453
    8. '((' → logprob: -16.625049591064453
    9. '(reverse' → logprob: -16.625049591064453
    10. '[A' → logprob: -16.875049591064453

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007631589658558369
    2. ')
' → logprob: -5.257631778717041
    3. ',' → logprob: -6.132631778717041
    4. ' )' → logprob: -8.632631301879883
    5. '())' → logprob: -11.257631301879883
    6. '[::-' → logprob: -11.882631301879883
    7. ' )
' → logprob: -12.257631301879883
    8. ')

' → logprob: -12.507631301879883
    9. ' ,' → logprob: -12.632631301879883
    10. '   ' → logprob: -12.632631301879883

Token 232: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -1.2000222206115723
    2. '   ' → logprob: -1.4500222206115723
    3. ' for' → logprob: -1.8250222206115723
    4. ' B' → logprob: -1.8250222206115723
    5. 'for' → logprob: -2.5750222206115723
    6. ' while' → logprob: -3.9500222206115723
    7. 'while' → logprob: -4.700022220611572
    8. ' add' → logprob: -5.200022220611572
    9. ' plus' → logprob: -5.200022220611572
    10. ' if' → logprob: -5.325022220611572

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31331878900527954
    2. ' =' → logprob: -1.3133187294006348
    3. '.sort' → logprob: -9.813319206237793
    4. 'sorted' → logprob: -13.688319206237793
    5. '_sorted' → logprob: -15.063319206237793
    6. 'sort' → logprob: -15.563319206237793
    7. '=
' → logprob: -16.188318252563477
    8. '<|end|>' → logprob: -16.188318252563477
    9. ' ' → logprob: -16.438318252563477
    10. ',' → logprob: -16.563318252563477

Token 235: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.004085758700966835
    2. ' sorted' → logprob: -5.504085540771484
    3. '(sorted' → logprob: -12.754085540771484
    4. ' ' → logprob: -13.754085540771484
    5. '[]' → logprob: -14.504085540771484
    6. 'B' → logprob: -14.754085540771484
    7. '   ' → logprob: -15.129085540771484
    8. 'A' → logprob: -15.254085540771484
    9. '[' → logprob: -15.254085540771484
    10. '.sorted' → logprob: -15.254085540771484

Token 236: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.572941179503687e-05
    2. '()' → logprob: -10.125045776367188
    3. '(' → logprob: -13.125045776367188
    4. 'B' → logprob: -13.500045776367188
    5. '(A' → logprob: -13.625045776367188
    6. '(reverse' → logprob: -14.500045776367188
    7. 'reverse' → logprob: -16.125045776367188
    8. '[B' → logprob: -16.250045776367188
    9. '(b' → logprob: -16.250045776367188
    10. '()
' → logprob: -16.750045776367188

Token 237: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08040410280227661
    2. ')
' → logprob: -2.580404043197632
    3. ',' → logprob: -6.580404281616211
    4. '[::-' → logprob: -10.205404281616211
    5. '   ' → logprob: -10.455404281616211
    6. '())' → logprob: -10.955404281616211
    7. '()' → logprob: -11.330404281616211
    8. ')

' → logprob: -12.080404281616211
    9. ')[' → logprob: -12.330404281616211
    10. ' )' → logprob: -12.330404281616211

Token 238: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2351924180984497
    2. ' for' → logprob: -1.4851924180984497
    3. 'for' → logprob: -2.11019229888916
    4. ' while' → logprob: -2.23519229888916
    5. 'while' → logprob: -2.86019229888916
    6. '   ' → logprob: -3.61019229888916
    7. ' if' → logprob: -3.98519229888916
    8. 'if' → logprob: -4.11019229888916
    9. 'm' → logprob: -4.11019229888916
    10. 'i' → logprob: -4.48519229888916

Token 239: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3774318993091583
    2. 'if' (adapté à ' if') → logprob: -1.627431869506836
    3. ' for' → logprob: -3.127431869506836
    4. 'diff' → logprob: -3.752431869506836
    5. 'while' → logprob: -3.877431869506836
    6. ' if' → logprob: -4.752431869506836
    7. 'm' → logprob: -5.502431869506836
    8. 'idx' → logprob: -6.002431869506836
    9. ' while' → logprob: -6.127431869506836
    10. 'a' → logprob: -6.252431869506836

Token 240: ' minus' (ID: 40335)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.028929855674505234
    2. ' minus' → logprob: -4.153929710388184
    3. 'add' → logprob: -5.153929710388184
    4. ' abs' → logprob: -6.403929710388184
    5. ' K' → logprob: -6.778929710388184
    6. ' min' → logprob: -7.028929710388184
    7. ' len' → logprob: -7.153929710388184
    8. 'minus' → logprob: -7.528929710388184
    9. ' A' → logprob: -7.778929710388184
    10. ' (' → logprob: -7.903929710388184

Token 241: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10309670120477676
    2. ' >' → logprob: -2.8530967235565186
    3. ' <' → logprob: -4.2280964851379395
    4. ' ==' → logprob: -4.8530964851379395
    5. ' >=' → logprob: -4.8530964851379395
    6. '<=' → logprob: -4.9780964851379395
    7. '>' → logprob: -6.7280964851379395
    8. ' !=' → logprob: -7.2280964851379395
    9. ' ' → logprob: -7.7280964851379395
    10. ' +' → logprob: -8.353096961975098

Token 242: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.027669060975313187
    2. '0' → logprob: -3.9026689529418945
    3. ' add' → logprob: -5.4026689529418945
    4. 'K' → logprob: -6.1526689529418945
    5. ' K' → logprob: -8.152668952941895
    6. ' ' → logprob: -8.777668952941895
    7. '   ' → logprob: -11.152668952941895
    8. '    ' → logprob: -12.527668952941895
    9. '  ' → logprob: -13.027668952941895
    10. '100' → logprob: -13.277668952941895

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3100137710571289
    2. ' and' → logprob: -2.060013771057129
    3. ' :' → logprob: -2.685013771057129
    4. ' or' → logprob: -2.685013771057129
    5. 'and' → logprob: -6.935013771057129
    6. '   ' → logprob: -8.060013771057129
    7. '    ' → logprob: -8.060013771057129
    8. '+' → logprob: -8.185013771057129
    9. ' ' → logprob: -8.685013771057129
    10. ' +' → logprob: -9.310013771057129

Token 244: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7562617063522339
    2. ' or' → logprob: -1.0062617063522339
    3. '       ' → logprob: -2.5062618255615234
    4. ':' → logprob: -3.1312618255615234
    5. ':
' → logprob: -3.3812618255615234
    6. '   ' → logprob: -5.506261825561523
    7. ' ==' → logprob: -7.381261825561523
    8. 'and' → logprob: -7.506261825561523
    9. '==' → logprob: -8.756261825561523
    10. 'or' → logprob: -9.256261825561523

Token 245: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5303861498832703
    2. ' print' → logprob: -1.030386209487915
    3. ' if' → logprob: -3.405386209487915
    4. '   ' → logprob: -4.405385971069336
    5. 'if' → logprob: -4.780385971069336
    6. ' for' → logprob: -8.030385971069336
    7. '       ' → logprob: -8.155385971069336
    8. 'for' → logprob: -8.655385971069336
    9. '    ' → logprob: -10.155385971069336
    10. '	print' → logprob: -10.530385971069336

Token 246: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2738780081272125
    2. ' =' → logprob: -2.3988780975341797
    3. 'ef' → logprob: -2.8988780975341797
    4. '=' → logprob: -3.6488780975341797
    5. 'iv' → logprob: -4.14887809753418
    6. 'o' → logprob: -4.77387809753418
    7. ' print' → logprob: -4.89887809753418
    8. 'el' → logprob: -5.27387809753418
    9. '[i' → logprob: -5.39887809753418
    10. '[:]' → logprob: -5.52387809753418

Token 247: ' minus' (ID: 40335)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5730384588241577
    2. ' R' → logprob: -1.5730384588241577
    3. 's' → logprob: -2.3230385780334473
    4. 'min' → logprob: -3.3230385780334473
    5. ' s' → logprob: -3.5730385780334473
    6. 'max' → logprob: -3.6980385780334473
    7. ' min' → logprob: -4.698038578033447
    8. 'minus' → logprob: -4.698038578033447
    9. ' max' → logprob: -4.823038578033447
    10. '0' → logprob: -5.823038578033447

Token 248: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07120437175035477
    2. '<|end|>' → logprob: -3.196204423904419
    3. '   ' → logprob: -3.821204423904419
    4. ' else' → logprob: -6.57120418548584
    5. ' elif' → logprob: -6.82120418548584
    6. '+' → logprob: -6.94620418548584
    7. ' +' → logprob: -7.32120418548584
    8. '<|end|>' → logprob: -7.57120418548584
    9. ',' → logprob: -8.44620418548584
    10. 'elif' → logprob: -8.44620418548584

Token 250: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6112253069877625
    2. ' if' → logprob: -1.7362253665924072
    3. 'print' → logprob: -2.3612253665924072
    4. '   ' → logprob: -2.4862253665924072
    5. '       ' → logprob: -2.6112253665924072
    6. ' print' → logprob: -4.986225128173828
    7. 'for' → logprob: -5.111225128173828
    8. ' break' → logprob: -5.361225128173828
    9. 'break' → logprob: -5.361225128173828
    10. 'elif' → logprob: -5.986225128173828

Token 251: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3493483364582062
    2. 'd' → logprob: -1.2243483066558838
    3. ' ' → logprob: -8.224348068237305
    4. ' K' → logprob: -9.599348068237305
    5. ' len' → logprob: -9.599348068237305
    6. '   ' → logprob: -10.036848068237305
    7. 'K' → logprob: -10.286848068237305
    8. ' max' → logprob: -10.349348068237305
    9. ' s' → logprob: -10.536848068237305
    10. ' add' → logprob: -10.661848068237305

Token 252: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.20546378195285797
    2. ' ==' → logprob: -2.3304638862609863
    3. ' <=' → logprob: -2.9554638862609863
    4. '>=' → logprob: -4.330463886260986
    5. '==' → logprob: -4.955463886260986
    6. ' *' → logprob: -5.205463886260986
    7. ' ' → logprob: -5.330463886260986
    8. '*' → logprob: -5.705463886260986
    9. '<=' → logprob: -6.705463886260986
    10. ' >' → logprob: -7.080463886260986

Token 253: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00043126524542458355
    2. ' K' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. ' ' → logprob: -15.625431060791016
    5. '	K' → logprob: -16.000431060791016
    6. '  ' → logprob: -16.500431060791016
    7. '
' → logprob: -17.000431060791016
    8. '    ' → logprob: -18.250431060791016
    9. 'k' → logprob: -18.625431060791016
    10. '

' → logprob: -18.875431060791016

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05520790070295334
    2. ':
' → logprob: -3.0552079677581787
    3. ' and' → logprob: -5.0552077293396
    4. ':return' → logprob: -10.055208206176758
    5. ' :' → logprob: -10.180208206176758
    6. '       ' → logprob: -10.305208206176758
    7. '   ' → logprob: -10.805208206176758
    8. 'and' → logprob: -11.055208206176758
    9. ' or' → logprob: -11.055208206176758
    10. '):' → logprob: -11.555208206176758

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014161395840346813
    2. '       ' → logprob: -5.014161586761475
    3. ' print' → logprob: -5.764161586761475
    4. ':
' → logprob: -6.764161586761475
    5. ':' → logprob: -6.764161586761475
    6. 'print' → logprob: -6.889161586761475
    7. ',' → logprob: -8.139161109924316
    8. ' and' → logprob: -8.139161109924316
    9. '               ' → logprob: -9.139161109924316
    10. ' break' → logprob: -10.014161109924316

Token 256: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005023594480007887
    2. ' print' → logprob: -5.75502347946167
    3. '       ' → logprob: -6.50502347946167
    4. '   ' → logprob: -8.005023956298828
    5. '           ' → logprob: -11.380023956298828
    6. '	print' → logprob: -12.880023956298828
    7. ' ' → logprob: -15.630023956298828
    8. '               ' → logprob: -16.255023956298828
    9. '    ' → logprob: -16.630023956298828
    10. '
' → logprob: -17.505023956298828

Token 257: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.011337227188050747
    2. '(R' → logprob: -4.5113372802734375
    3. 's' → logprob: -8.386337280273438
    4. '(' → logprob: -10.011337280273438
    5. '(r' → logprob: -11.886337280273438
    6. 'R' → logprob: -12.761337280273438
    7. '(str' → logprob: -13.761337280273438
    8. '(S' → logprob: -13.761337280273438
    9. '(d' → logprob: -14.136337280273438
    10. '   ' → logprob: -14.261337280273438

Token 258: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.010948546230793
    2. ')' → logprob: -4.635948657989502
    3. '           ' → logprob: -6.760948657989502
    4. ')
' → logprob: -10.760948181152344
    5. '               ' → logprob: -12.135948181152344
    6. '       ' → logprob: -12.635948181152344
    7. ')`
' → logprob: -13.510948181152344
    8. ',' → logprob: -13.760948181152344
    9. '   ' → logprob: -15.010948181152344
    10. ' )
' → logprob: -15.260948181152344

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014469034969806671
    2. '       ' → logprob: -4.264469146728516
    3. '   ' → logprob: -9.389469146728516
    4. '<|end|>' → logprob: -9.514469146728516
    5. '               ' → logprob: -9.639469146728516
    6. ',' → logprob: -10.639469146728516
    7. '		' → logprob: -10.889469146728516
    8. '<|end|>' → logprob: -12.139469146728516
    9. ' and' → logprob: -12.264469146728516
    10. '            
' → logprob: -12.264469146728516

Token 260: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0031856747809797525
    2. ' break' → logprob: -5.753185749053955
    3. '   ' → logprob: -12.628185272216797
    4. 'exit' (adapté à ' exit') → logprob: -12.753185272216797
    5. '	break' → logprob: -13.628185272216797
    6. '           ' → logprob: -14.753185272216797
    7. '       ' → logprob: -16.878185272216797
    8. '_break' → logprob: -17.253185272216797
    9. '```' → logprob: -17.878185272216797
    10. '
' → logprob: -18.128185272216797

Token 261: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007224413566291332
    2. '(' → logprob: -7.250722408294678
    3. '()
' → logprob: -11.375722885131836
    4. '()\' → logprob: -15.125722885131836
    5. ' ()' → logprob: -15.375722885131836
    6. '()(' → logprob: -16.375722885131836
    7. '()>' → logprob: -17.125722885131836
    8. '()`' → logprob: -17.125722885131836
    9. '()]' → logprob: -17.250722885131836
    10. '())' → logprob: -17.375722885131836

Token 262: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.283780038356781
    2. ' ' → logprob: -1.7837800979614258
    3. ' )' → logprob: -2.908780097961426
    4. '<|end|>' → logprob: -4.408780097961426
    5. '0' → logprob: -5.783780097961426
    6. '+' → logprob: -6.283780097961426
    7. 'd' → logprob: -6.783780097961426
    8. 'n' → logprob: -6.908780097961426
    9. '#' → logprob: -7.408780097961426
    10. ' 
' → logprob: -7.533780097961426

Token 263: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9313634037971497
    2. 'elif' (adapté à ' elif') → logprob: -1.3063633441925049
    3. '+' → logprob: -2.056363344192505
    4. 'if' → logprob: -2.681363344192505
    5. 'for' → logprob: -2.931363344192505
    6. ')' → logprob: -3.181363344192505
    7. '-' → logprob: -4.556363582611084
    8. ' ' → logprob: -5.056363582611084
    9. ' else' → logprob: -5.056363582611084
    10. 'd' → logprob: -5.056363582611084

Token 264: ' minus' (ID: 40335)
  Prédit: ' minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minus' → logprob: -0.6192141771316528
    2. ' add' → logprob: -0.9942141771316528
    3. 'minus' → logprob: -2.8692140579223633
    4. ' plus' → logprob: -3.8692140579223633
    5. 'add' → logprob: -4.744214057922363
    6. ' abs' → logprob: -5.619214057922363
    7. 'plus' → logprob: -7.494214057922363
    8. 'abs' → logprob: -7.869214057922363
    9. ' ' → logprob: -8.369214057922363
    10. ' min' → logprob: -8.744214057922363

Token 265: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5169417262077332
    2. ' <' → logprob: -1.141941785812378
    3. ' +' → logprob: -2.891941785812378
    4. ' ' → logprob: -4.641941547393799
    5. '+' → logprob: -4.891941547393799
    6. '>' → logprob: -5.141941547393799
    7. '<' → logprob: -5.891941547393799
    8. ' -' → logprob: -6.016941547393799
    9. '-' → logprob: -8.016942024230957
    10. '   ' → logprob: -8.641942024230957

Token 266: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2813880741596222
    2. 'add' → logprob: -1.4063880443572998
    3. '=' → logprob: -9.156388282775879
    4. ' ' → logprob: -9.406388282775879
    5. '	add' → logprob: -11.281388282775879
    6. '  ' → logprob: -11.406388282775879
    7. '   ' → logprob: -11.906388282775879
    8. '>' → logprob: -12.031388282775879
    9. '(add' → logprob: -12.406388282775879
    10. ')add' → logprob: -13.406388282775879

Token 267: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4292972981929779
    2. ':' → logprob: -1.0542973279953003
    3. ' and' → logprob: -7.80429744720459
    4. '   ' → logprob: -9.92929744720459
    5. ' :
' → logprob: -9.92929744720459
    6. '       ' → logprob: -10.05429744720459
    7. ':
' → logprob: -11.05429744720459
    8. ':

' → logprob: -11.42929744720459
    9. ' :' → logprob: -11.80429744720459
    10. 'and' → logprob: -12.05429744720459

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25129202008247375
    2. ':
' → logprob: -1.8762919902801514
    3. ':' → logprob: -2.7512919902801514
    4. '   ' → logprob: -6.2512922286987305
    5. ' for' → logprob: -7.1262922286987305
    6. ' and' → logprob: -7.5012922286987305
    7. '):
' → logprob: -7.7512922286987305
    8. 'd' → logprob: -8.25129222869873
    9. ',' → logprob: -8.50129222869873
    10. ' :
' → logprob: -8.62629222869873

Token 269: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4079551696777344
    2. ' for' → logprob: -1.9079551696777344
    3. ' l' → logprob: -2.5329551696777344
    4. ' A' → logprob: -2.9079551696777344
    5. '   ' → logprob: -3.0329551696777344
    6. 'A' → logprob: -3.1579551696777344
    7. ' d' → logprob: -3.4079551696777344
    8. 'left' → logprob: -3.4079551696777344
    9. 'l' → logprob: -3.7829551696777344
    10. 'd' → logprob: -3.7829551696777344

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040952586568892
    2. '=' → logprob: -6.129095077514648
    3. 'u' → logprob: -6.629095077514648
    4. ',' → logprob: -8.254095077514648
    5. '       ' → logprob: -8.879095077514648
    6. '   ' → logprob: -9.379095077514648
    7. 'ue' → logprob: -10.629095077514648
    8. 'A' → logprob: -11.129095077514648
    9. '1' → logprob: -11.629095077514648
    10. ' ' → logprob: -12.004095077514648

Token 271: ' (' (ID: 350)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.1941945552825928
    2. '0' → logprob: -1.3191945552825928
    3. 'minus' → logprob: -1.3191945552825928
    4. 'sorted' → logprob: -2.8191945552825928
    5. 'len' → logprob: -3.3191945552825928
    6. 'sum' → logprob: -4.069194793701172
    7. 'K' → logprob: -4.194194793701172
    8. '(' → logprob: -5.194194793701172
    9. 'min' → logprob: -5.319194793701172
    10. 'max' → logprob: -5.569194793701172

Token 272: 'minus' (ID: 80991)
  Prédit: 'minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.02639051526784897
    2. 'len' → logprob: -4.526390552520752
    3. ' minus' → logprob: -5.526390552520752
    4. '(' → logprob: -5.776390552520752
    5. '(len' → logprob: -6.526390552520752
    6. 'abs' → logprob: -6.901390552520752
    7. '(min' → logprob: -7.026390552520752
    8. ' (' → logprob: -7.151390552520752
    9. '(m' → logprob: -7.276390552520752
    10. 'bis' → logprob: -7.401390552520752

Token 273: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10033261030912399
    2. '-' → logprob: -2.350332498550415
    3. ')' → logprob: -9.725332260131836
    4. ' ' → logprob: -10.475332260131836
    5. ' minus' → logprob: -11.100332260131836
    6. ' ' → logprob: -12.350332260131836
    7. '   ' → logprob: -12.475332260131836
    8. ' )' → logprob: -12.975332260131836
    9. '+' → logprob: -13.225332260131836
    10. 'minus' → logprob: -13.225332260131836

Token 274: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.474183589220047
    2. ' add' → logprob: -0.9741835594177246
    3. '(add' → logprob: -9.724184036254883
    4. ' ' → logprob: -11.099184036254883
    5. ' (' → logprob: -11.599184036254883
    6. '(' → logprob: -11.849184036254883
    7. ' K' → logprob: -13.099184036254883
    8. 'sum' → logprob: -13.349184036254883
    9. '   ' → logprob: -13.474184036254883
    10. ')' → logprob: -13.474184036254883

Token 275: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1026291623711586
    2. ' +' → logprob: -2.4776291847229004
    3. '+' → logprob: -4.6026291847229
    4. ' )' → logprob: -6.3526291847229
    5. ')//' → logprob: -6.3526291847229
    6. ' -' → logprob: -10.852628707885742
    7. '   ' → logprob: -11.227628707885742
    8. ' ' → logprob: -11.352628707885742
    9. ')
' → logprob: -11.727628707885742
    10. '-' → logprob: -11.727628707885742

Token 276: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.15324190258979797
    2. '//' → logprob: -2.1532418727874756
    3. '#' → logprob: -4.278242111206055
    4. '   ' → logprob: -5.403242111206055
    5. ' #' → logprob: -6.028242111206055
    6. ' ' → logprob: -6.278242111206055
    7. '
' → logprob: -7.278242111206055
    8. ',' → logprob: -8.028242111206055
    9. '       ' → logprob: -8.028242111206055
    10. ')' → logprob: -8.153242111206055

Token 277: ' s' (ID: 265)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001281779957935214
    2. 's' → logprob: -6.87628173828125
    3. ' ' → logprob: -8.62628173828125
    4. '10' → logprob: -10.37628173828125
    5. 'K' → logprob: -10.87628173828125
    6. '9' → logprob: -11.75128173828125
    7. ' s' → logprob: -12.37628173828125
    8. '   ' → logprob: -13.00128173828125
    9. '1' → logprob: -13.75128173828125
    10. '(' → logprob: -13.75128173828125

Token 278: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3247852325439453
    2. '   ' → logprob: -2.0747852325439453
    3. ' for' → logprob: -2.3247852325439453
    4. 'for' → logprob: -3.1997852325439453
    5. '+' → logprob: -5.699785232543945
    6. '
' → logprob: -6.074785232543945
    7. ' +' → logprob: -6.199785232543945
    8. 'while' → logprob: -7.074785232543945
    9. ',' → logprob: -7.199785232543945
    10. ' while' → logprob: -7.574785232543945

Token 279: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.891375720500946
    2. 'for' → logprob: -1.2663757801055908
    3. ' for' → logprob: -1.7663757801055908
    4. '       ' → logprob: -2.266375780105591
    5. 'if' → logprob: -3.891375780105591
    6. 'A' → logprob: -5.516375541687012
    7. ' if' → logprob: -6.266375541687012
    8. 'd' → logprob: -7.266375541687012
    9. 'while' → logprob: -7.266375541687012
    10. '
' → logprob: -7.391375541687012

Token 280: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47636842727661133
    2. 'for' → logprob: -1.2263684272766113
    3. 'while' → logprob: -4.601368427276611
    4. 'import' → logprob: -4.601368427276611
    5. 'l' → logprob: -4.726368427276611
    6. 'left' → logprob: -4.726368427276611
    7. 'A' → logprob: -4.976368427276611
    8. '   ' → logprob: -5.226368427276611
    9. 'idx' → logprob: -5.601368427276611
    10. 'c' → logprob: -5.726368427276611

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02094017155468464
    2. '=' → logprob: -3.895940065383911
    3. ',' → logprob: -8.395939826965332
    4. '   ' → logprob: -10.270939826965332
    5. ' +=' → logprob: -10.520939826965332
    6. '    ' → logprob: -10.895939826965332
    7. ' <=' → logprob: -10.895939826965332
    8. ' ' → logprob: -11.145939826965332
    9. 's' → logprob: -11.520939826965332
    10. 'max' → logprob: -12.270939826965332

Token 282: ' sum' (ID: 4215)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -1.174515962600708
    2. ' minus' → logprob: -1.549515962600708
    3. ' add' → logprob: -1.924515962600708
    4. 'add' → logprob: -2.174515962600708
    5. 'sum' → logprob: -2.924515962600708
    6. 'min' → logprob: -3.299515962600708
    7. ' sum' → logprob: -3.424515962600708
    8. ' plus' → logprob: -4.174515724182129
    9. '0' → logprob: -4.174515724182129
    10. 'plus' → logprob: -4.299515724182129

Token 283: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5237520933151245
    2. '(B' → logprob: -0.8987520933151245
    3. '(sorted' → logprob: -7.898752212524414
    4. 'A' → logprob: -9.273752212524414
    5. '(' → logprob: -9.398752212524414
    6. '(a' → logprob: -10.398752212524414
    7. '([' → logprob: -10.898752212524414
    8. '(
' → logprob: -11.898752212524414
    9. 'B' → logprob: -12.148752212524414
    10. '((' → logprob: -12.773752212524414

Token 284: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.012168419547379017
    2. ')' → logprob: -5.2621684074401855
    3. '[-' → logprob: -5.6371684074401855
    4. '[q' → logprob: -5.8871684074401855
    5. '[:-' → logprob: -7.6371684074401855
    6. '[' → logprob: -10.137168884277344
    7. ')+' → logprob: -11.387168884277344
    8. ')
' → logprob: -11.637168884277344
    9. ')-' → logprob: -11.762168884277344
    10. '()' → logprob: -12.137168884277344

Token 285: 'len' (ID: 3303)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008881142712198198
    2. ' q' → logprob: -7.500888347625732
    3. '(' → logprob: -8.875887870788574
    4. 'K' → logprob: -9.375887870788574
    5. '(q' → logprob: -9.750887870788574
    6. 'len' → logprob: -11.000887870788574
    7. '-' → logprob: -12.125887870788574
    8. ' (' → logprob: -12.125887870788574
    9. '-q' → logprob: -12.250887870788574
    10. 'abs' → logprob: -12.375887870788574

Token 286: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.04977887496352196
    2. '(B' → logprob: -3.049778938293457
    3. 'A' → logprob: -6.799778938293457
    4. 'B' → logprob: -10.049778938293457
    5. '(' → logprob: -11.674778938293457
    6. '(R' → logprob: -11.924778938293457
    7. '(L' → logprob: -12.299778938293457
    8. '(a' → logprob: -12.924778938293457
    9. '(Q' → logprob: -13.049778938293457
    10. '(D' → logprob: -13.799778938293457

Token 287: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2809157967567444
    2. ')-' → logprob: -2.4059157371520996
    3. ')])' → logprob: -2.5309157371520996
    4. ')+' → logprob: -2.7809157371520996
    5. ' )' → logprob: -5.2809157371521
    6. ')])
' → logprob: -6.0309157371521
    7. ')]' → logprob: -6.9059157371521
    8. '+' → logprob: -6.9059157371521
    9. '-' → logprob: -7.5309157371521
    10. ' -' → logprob: -7.6559157371521

Token 288: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001171652227640152
    2. ' q' → logprob: -6.751171588897705
    3. '	q' → logprob: -15.126172065734863
    4. '(q' → logprob: -15.376172065734863
    5. ' ' → logprob: -15.751172065734863
    6. '1' → logprob: -15.876172065734863
    7. '   ' → logprob: -16.126171112060547
    8. '
' → logprob: -16.251171112060547
    9. ' (' → logprob: -16.376171112060547
    10. 'K' → logprob: -16.501171112060547

Token 289: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009039247408509254
    2. '])
' → logprob: -4.884039402008057
    3. ' ])' → logprob: -6.634039402008057
    4. '])+' → logprob: -9.759038925170898
    5. ' ])
' → logprob: -11.009038925170898
    6. '])-' → logprob: -11.509038925170898
    7. '])
' → logprob: -11.759038925170898
    8. '+' → logprob: -12.134038925170898
    9. ']' → logprob: -12.634038925170898
    10. '])

' → logprob: -13.134038925170898

Token 290: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12432283163070679
    2. ' if' → logprob: -2.4993228912353516
    3. 'if' (adapté à ' if') → logprob: -3.3743228912353516
    4. '   ' → logprob: -7.749322891235352
    5. '<|end|>' → logprob: -10.249322891235352
    6. '	if' → logprob: -10.749322891235352
    7. ' ' → logprob: -11.624322891235352
    8. ',' → logprob: -11.749322891235352
    9. ')' → logprob: -12.124322891235352
    10. '           ' → logprob: -12.249322891235352

Token 292: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3870062232017517
    2. ' d' → logprob: -1.1370062828063965
    3. '   ' → logprob: -9.887005805969238
    4. '       ' → logprob: -10.637005805969238
    5. ' ' → logprob: -11.262005805969238
    6. '    ' → logprob: -11.887005805969238
    7. '           ' → logprob: -12.012005805969238
    8. ' len' → logprob: -12.012005805969238
    9. 'len' → logprob: -12.512005805969238
    10. '(d' → logprob: -12.762005805969238

Token 293: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005234475247561932
    2. '<=' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.630234718322754
    4. ' ≤' → logprob: -15.630234718322754
    5. '<|end|>' → logprob: -16.380233764648438
    6. ')<=' → logprob: -16.505233764648438
    7. ' ==' → logprob: -17.005233764648438
    8. '   ' → logprob: -17.755233764648438
    9. '```' → logprob: -17.755233764648438
    10. ' ' → logprob: -18.005233764648438

Token 294: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005241702310740948
    2. ' K' → logprob: -5.255241870880127
    3. '   ' → logprob: -12.380241394042969
    4. ' ' → logprob: -13.005241394042969
    5. '    ' → logprob: -14.755241394042969
    6. '       ' → logprob: -14.880241394042969
    7. '  ' → logprob: -15.130241394042969
    8. '	K' → logprob: -15.255241394042969
    9. '           ' → logprob: -16.25524139404297
    10. ' ' → logprob: -16.75524139404297

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06218155473470688
    2. ':
' → logprob: -2.8121814727783203
    3. ' and' → logprob: -8.56218147277832
    4. '       ' → logprob: -11.81218147277832
    5. '           ' → logprob: -11.93718147277832
    6. '):' → logprob: -13.43718147277832
    7. 'and' → logprob: -13.56218147277832
    8. ':
' → logprob: -13.68718147277832
    9. '):
' → logprob: -13.93718147277832
    10. ':

' → logprob: -14.06218147277832

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12183094769716263
    2. ':
' → logprob: -2.371830940246582
    3. ':' → logprob: -3.996830940246582
    4. '       ' → logprob: -5.871830940246582
    5. '               ' → logprob: -9.371830940246582
    6. '):
' → logprob: -10.371830940246582
    7. ' and' → logprob: -11.121830940246582
    8. ' :
' → logprob: -11.121830940246582
    9. '```' → logprob: -11.246830940246582
    10. ',' → logprob: -11.621830940246582

Token 297: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2694203555583954
    2. ' print' → logprob: -2.0194203853607178
    3. '           ' → logprob: -2.2694203853607178
    4. '       ' → logprob: -9.769420623779297
    5. '   ' → logprob: -12.144420623779297
    6. '```' → logprob: -12.894420623779297
    7. ' ' → logprob: -13.269420623779297
    8. '               ' → logprob: -13.394420623779297
    9. '
' → logprob: -13.519420623779297
    10. '	print' → logprob: -13.644420623779297

Token 298: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011786778923124075
    2. 's' → logprob: -6.876178741455078
    3. '(' → logprob: -8.876178741455078
    4. ' s' → logprob: -12.126178741455078
    5. ' (' → logprob: -14.501178741455078
    6. '(
' → logprob: -15.751178741455078
    7. '(i' → logprob: -16.876178741455078
    8. '(S' → logprob: -18.501178741455078
    9. '```' → logprob: -19.501178741455078
    10. '((' → logprob: -19.626178741455078

Token 299: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06210773065686226
    2. ')' → logprob: -3.062107801437378
    3. '           ' → logprob: -4.312107563018799
    4. ')
' → logprob: -11.187108039855957
    5. '               ' → logprob: -12.687108039855957
    6. '       ' → logprob: -12.937108039855957
    7. ')

' → logprob: -13.812108039855957
    8. '')
' → logprob: -13.937108039855957
    9. ')`
' → logprob: -13.937108039855957
    10. '")
' → logprob: -15.187108039855957

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.978233846486546e-05
    2. 'exit' → logprob: -10.375049591064453
    3. '		' → logprob: -12.375049591064453
    4. '       ' → logprob: -13.000049591064453
    5. '            
' → logprob: -13.125049591064453
    6. '   ' → logprob: -13.125049591064453
    7. '```' → logprob: -13.375049591064453
    8. '
' → logprob: -13.500049591064453
    9. '	exit' → logprob: -14.000049591064453
    10. '<|end|>' → logprob: -14.000049591064453

Token 301: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.16078996658325195
    2. '           ' → logprob: -1.910789966583252
    3. ' exit' → logprob: -7.535789966583252
    4. '   ' → logprob: -10.785789489746094
    5. '       ' → logprob: -12.160789489746094
    6. '	exit' → logprob: -13.035789489746094
    7. '               ' → logprob: -13.785789489746094
    8. '.exit' → logprob: -14.535789489746094
    9. 'break' → logprob: -14.785789489746094
    10. ' ' → logprob: -14.785789489746094

Token 302: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.553032628493384e-05
    2. '()
' → logprob: -9.500075340270996
    3. '(' → logprob: -15.125075340270996
    4. '()`' → logprob: -16.000076293945312
    5. '()

' → logprob: -16.125076293945312
    6. '()\' → logprob: -16.250076293945312
    7. '())' → logprob: -16.625076293945312
    8. '()
' → logprob: -17.125076293945312
    9. '()]' → logprob: -18.375076293945312
    10. '()>' → logprob: -18.625076293945312

Token 303: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30185988545417786
    2. '   ' → logprob: -1.9268598556518555
    3. 'elif' → logprob: -2.6768598556518555
    4. 'else' → logprob: -3.4268598556518555
    5. 'for' → logprob: -5.5518598556518555
    6. '       ' → logprob: -5.6768598556518555
    7. '<|end|>' → logprob: -5.8018598556518555
    8. 'if' → logprob: -6.3018598556518555
    9. ')' → logprob: -7.8018598556518555
    10. '```' → logprob: -8.301859855651855

Token 304: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01652190461754799
    2. 'elif' → logprob: -4.26652193069458
    3. '   ' → logprob: -6.14152193069458
    4. ' else' → logprob: -8.516521453857422
    5. ' elif' → logprob: -12.766521453857422
    6. '```' → logprob: -14.891521453857422
    7. 'if' → logprob: -15.641521453857422
    8. ' ' → logprob: -15.891521453857422
    9. '	else' → logprob: -15.891521453857422
    10. '  ' → logprob: -16.641521453857422

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25248682498931885
    2. ':' → logprob: -1.5024868249893188
    3. '       ' → logprob: -8.127487182617188
    4. '   ' → logprob: -8.877487182617188
    5. ' :
' → logprob: -9.252487182617188
    6. ' :' → logprob: -11.127487182617188
    7. ':
' → logprob: -12.252487182617188
    8. ':

' → logprob: -13.377487182617188
    9. '    ' → logprob: -13.752487182617188
    10. '{
' → logprob: -13.752487182617188

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0244685411453247
    2. ' q' → logprob: -1.0244685411453247
    3. 'q' → logprob: -1.2744685411453247
    4. '   ' → logprob: -6.149468421936035
    5. ' p' → logprob: -9.274468421936035
    6. 'p' → logprob: -9.899468421936035
    7. '	q' → logprob: -10.274468421936035
    8. '           ' → logprob: -10.274468421936035
    9. ' ' → logprob: -10.649468421936035
    10. '```' → logprob: -10.774468421936035

Token 307: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.018442092463374138
    2. ' q' → logprob: -4.018442153930664
    3. 'p' → logprob: -8.393442153930664
    4. '       ' → logprob: -10.143442153930664
    5. ' p' → logprob: -11.643442153930664
    6. '   ' → logprob: -12.018442153930664
    7. 'r' → logprob: -12.393442153930664
    8. '           ' → logprob: -13.018442153930664
    9. '
' → logprob: -13.768442153930664
    10. '	q' → logprob: -14.268442153930664

Token 308: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ' =(' → logprob: -17.383615493774414
    4. '=(' → logprob: -18.383615493774414
    5. ',' → logprob: -19.383615493774414
    6. '＝' → logprob: -20.008615493774414
    7. ' ' → logprob: -20.133615493774414
    8. '   ' → logprob: -20.508615493774414
    9. ' ' → logprob: -20.758615493774414
    10. '```' → logprob: -21.133615493774414

Token 309: ' (' (ID: 350)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.013106105849146843
    2. '(' → logprob: -4.763105869293213
    3. ' (' → logprob: -5.513105869293213
    4. '(len' → logprob: -7.888105869293213
    5. '(abs' → logprob: -10.388106346130371
    6. '(min' → logprob: -11.638106346130371
    7. '(B' → logprob: -11.763106346130371
    8. '   ' → logprob: -12.138106346130371
    9. '(max' → logprob: -12.138106346130371
    10. '(int' → logprob: -12.763106346130371

Token 310: 'add' (ID: 964)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.875007629394531
    3. 'add' → logprob: -13.125007629394531
    4. '(' → logprob: -14.000007629394531
    5. '(len' → logprob: -14.000007629394531
    6. '   ' → logprob: -15.125007629394531
    7. '(ad' → logprob: -15.250007629394531
    8. '(abs' → logprob: -15.250007629394531
    9. '(Add' → logprob: -16.00000762939453
    10. '((' → logprob: -16.75000762939453

Token 311: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004621661268174648
    2. '-' → logprob: -5.379621505737305
    3. ' ' → logprob: -14.254621505737305
    4. ' -
' → logprob: -15.129621505737305
    5. ' ' → logprob: -16.254621505737305
    6. ')' → logprob: -16.379621505737305
    7. '   ' → logprob: -16.504621505737305
    8. ' minus' → logprob: -16.754621505737305
    9. 'minus' → logprob: -17.129621505737305
    10. ',' → logprob: -18.129621505737305

Token 312: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.00795001070946455
    2. ' minus' → logprob: -5.0079498291015625
    3. 'len' → logprob: -6.7579498291015625
    4. 'sum' → logprob: -10.507949829101562
    5. ' len' → logprob: -10.632949829101562
    6. '(len' → logprob: -11.132949829101562
    7. ' (' → logprob: -13.132949829101562
    8. '   ' → logprob: -13.507949829101562
    9. '(' → logprob: -14.382949829101562
    10. ' ' → logprob: -15.132949829101562

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004237600602209568
    2. ' )' → logprob: -5.504237651824951
    3. ')//' → logprob: -8.754237174987793
    4. '//' → logprob: -14.504237174987793
    5. ')
' → logprob: -15.504237174987793
    6. ' //' → logprob: -15.754237174987793
    7. '   ' → logprob: -15.879237174987793
    8. ' ' → logprob: -16.37923812866211
    9. '）' → logprob: -16.75423812866211
    10. ' ' → logprob: -17.00423812866211

Token 314: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.386911541223526
    2. ' //' → logprob: -1.1369115114212036
    3. '#' → logprob: -11.261911392211914
    4. ' ' → logprob: -11.511911392211914
    5. ')' → logprob: -11.761911392211914
    6. ')//' → logprob: -12.636911392211914
    7. '```' → logprob: -13.011911392211914
    8. '   ' → logprob: -13.511911392211914
    9. '
' → logprob: -13.761911392211914
    10. ' #' → logprob: -14.636911392211914

Token 315: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00014025058771949261
    2. ' s' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.375140190124512
    4. '2' → logprob: -16.125141143798828
    5. '
' → logprob: -17.500141143798828
    6. ' ' → logprob: -18.375141143798828
    7. '       ' → logprob: -18.625141143798828
    8. '  ' → logprob: -18.875141143798828
    9. '           ' → logprob: -19.250141143798828
    10. '`s' → logprob: -19.250141143798828

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13526330888271332
    2. 'd' → logprob: -2.260263204574585
    3. '
' → logprob: -3.885263204574585
    4. ' d' → logprob: -6.510263442993164
    5. '   ' → logprob: -9.385263442993164
    6. '	d' → logprob: -10.385263442993164
    7. '
' → logprob: -11.010263442993164
    8. ',d' → logprob: -12.010263442993164
    9. '        
' → logprob: -12.635263442993164
    10. '        ' → logprob: -12.635263442993164

Token 317: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010864471085369587
    2. '       ' → logprob: -5.1358642578125
    3. '   ' → logprob: -6.0108642578125
    4. ' d' → logprob: -6.0108642578125
    5. '
' → logprob: -11.5108642578125
    6. '	d' → logprob: -12.7608642578125
    7. '```' → logprob: -12.7608642578125
    8. ' ' → logprob: -14.1358642578125
    9. '           ' → logprob: -14.1358642578125
    10. '     ' → logprob: -14.2608642578125

Token 318: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00020389800192788243
    2. ' d' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.375204086303711
    4. '       ' → logprob: -16.12520408630371
    5. '
' → logprob: -17.12520408630371
    6. 'c' → logprob: -17.62520408630371
    7. '```' → logprob: -18.12520408630371
    8. 'e' → logprob: -18.37520408630371
    9. 'sum' → logprob: -18.75020408630371
    10. '	d' → logprob: -18.87520408630371

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022524237632751
    2. '=' → logprob: -1.91022527217865
    3. '=sum' → logprob: -14.035224914550781
    4. ' ' → logprob: -15.285224914550781
    5. '=
' → logprob: -17.03522491455078
    6. ' +=' → logprob: -17.28522491455078
    7. '  ' → logprob: -17.41022491455078
    8. '+=' → logprob: -17.41022491455078
    9. '   ' → logprob: -17.41022491455078
    10. ' =
' → logprob: -18.41022491455078

Token 320: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0028061794582754374
    2. ' sum' → logprob: -5.877806186676025
    3. '(sum' → logprob: -14.252805709838867
    4. '   ' → logprob: -15.627805709838867
    5. ' ' → logprob: -16.502805709838867
    6. '	sum' → logprob: -16.502805709838867
    7. '  ' → logprob: -16.627805709838867
    8. 'm' → logprob: -16.877805709838867
    9. 's' → logprob: -17.127805709838867
    10. '=sum' → logprob: -18.127805709838867

Token 321: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -3.333223139634356e-05
    2. '(A' → logprob: -10.375033378601074
    3. '(' → logprob: -13.250033378601074
    4. 'B' → logprob: -15.250033378601074
    5. 'A' → logprob: -17.750032424926758
    6. '(
' → logprob: -18.500032424926758
    7. ' (' → logprob: -19.000032424926758
    8. '	B' → logprob: -19.750032424926758
    9. '(C' → logprob: -19.875032424926758
    10. '(b' → logprob: -20.250032424926758

Token 322: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0005862758844159544
    2. '[:-' → logprob: -7.62558650970459
    3. '[q' → logprob: -9.37558650970459
    4. '[-' → logprob: -12.12558650970459
    5. '[' → logprob: -12.37558650970459
    6. '[len' → logprob: -12.62558650970459
    7. ' [:' → logprob: -15.25058650970459
    8. '[:]' → logprob: -16.250585556030273
    9. '[B' → logprob: -17.375585556030273
    10. '[::-' → logprob: -17.625585556030273

Token 323: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00024596223374828696
    2. '(len' → logprob: -8.750246047973633
    3. ' len' → logprob: -9.750246047973633
    4. 'q' → logprob: -10.500246047973633
    5. '(q' → logprob: -13.625246047973633
    6. 'max' → logprob: -15.250246047973633
    7. '[len' → logprob: -16.375246047973633
    8. '	len' → logprob: -16.875246047973633
    9. '   ' → logprob: -17.375246047973633
    10. '(' → logprob: -17.500246047973633

Token 324: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -2.1008713702030946e-06
    2. '(A' → logprob: -14.000001907348633
    3. '(' → logprob: -14.125001907348633
    4. 'B' → logprob: -15.875001907348633
    5. '(b' → logprob: -17.000001907348633
    6. '((' → logprob: -17.125001907348633
    7. '(R' → logprob: -17.250001907348633
    8. '
' → logprob: -17.250001907348633
    9. '(
' → logprob: -17.375001907348633
    10. '(add' → logprob: -17.375001907348633

Token 325: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.0033201880287379026
    2. ')' → logprob: -6.253320217132568
    3. ']-' → logprob: -8.37831974029541
    4. '[' → logprob: -8.62831974029541
    5. 'B' → logprob: -8.62831974029541
    6. '(B' → logprob: -8.87831974029541
    7. '[B' → logprob: -8.87831974029541
    8. ')]' → logprob: -9.12831974029541
    9. ' )' → logprob: -9.37831974029541
    10. '   ' → logprob: -9.87831974029541

Token 326: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003088871017098427
    2. 'B' → logprob: -8.125308990478516
    3. ' q' → logprob: -11.375308990478516
    4. ' B' → logprob: -14.375308990478516
    5. '	q' → logprob: -15.625308990478516
    6. '   ' → logprob: -15.875308990478516
    7. ' ' → logprob: -16.375308990478516
    8. '(q' → logprob: -16.375308990478516
    9. ')' → logprob: -16.500308990478516
    10. '(B' → logprob: -17.750308990478516

Token 327: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.25202202796936035
    2. '])' → logprob: -1.5020220279693604
    3. '])
' → logprob: -9.877021789550781
    4. ' ])
' → logprob: -10.502021789550781
    5. ' ])' → logprob: -12.627021789550781
    6. '])

' → logprob: -12.752021789550781
    7. '   ' → logprob: -13.252021789550781
    8. ')
' → logprob: -13.252021789550781
    9. ' ' → logprob: -13.627021789550781
    10. '       ' → logprob: -14.127021789550781

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08289898186922073
    2. '
' → logprob: -2.9578990936279297
    3. '<=' → logprob: -4.58289909362793
    4. 'if' → logprob: -5.33289909362793
    5. '```' → logprob: -5.33289909362793
    6. ' <=' → logprob: -5.45789909362793
    7. ' if' → logprob: -5.83289909362793
    8. '   ' → logprob: -8.33289909362793
    9. '
' → logprob: -9.33289909362793
    10. '           ' → logprob: -9.58289909362793

Token 329: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3870488107204437
    2. ' if' → logprob: -1.1370488405227661
    3. '       ' → logprob: -9.637048721313477
    4. '           ' → logprob: -9.887048721313477
    5. ' <=' → logprob: -10.887048721313477
    6. '<=' → logprob: -10.887048721313477
    7. '```' → logprob: -11.137048721313477
    8. '        ' → logprob: -13.262048721313477
    9. '   ' → logprob: -13.387048721313477
    10. '	if' → logprob: -13.512048721313477

Token 330: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4740816056728363
    2. ' d' → logprob: -0.9740816354751587
    3. '   ' → logprob: -13.599081993103027
    4. ' ' → logprob: -14.224081993103027
    5. '0' → logprob: -14.474081993103027
    6. '  ' → logprob: -14.474081993103027
    7. ' ' → logprob: -15.099081993103027
    8. ')d' → logprob: -15.724081993103027
    9. '	d' → logprob: -15.849081993103027
    10. '```' → logprob: -15.849081993103027

Token 331: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06213909387588501
    2. '<=' → logprob: -2.8121390342712402
    3. '>' → logprob: -9.312139511108398
    4. ' >' → logprob: -9.437139511108398
    5. '   ' → logprob: -13.937139511108398
    6. ' ' → logprob: -15.437139511108398
    7. '  ' → logprob: -15.562139511108398
    8. ')<=' → logprob: -17.1871395111084
    9. ' ≤' → logprob: -17.4371395111084
    10. ')' → logprob: -18.1871395111084

Token 332: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0031777136027812958
    2. ' K' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.003177642822266
    4. '   ' → logprob: -17.628177642822266
    5. '	K' → logprob: -18.878177642822266
    6. '       ' → logprob: -19.503177642822266
    7. '  ' → logprob: -20.128177642822266
    8. '           ' → logprob: -20.128177642822266
    9. '    ' → logprob: -20.753177642822266
    10. 'k' → logprob: -21.628177642822266

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4461813271045685
    2. ':
' → logprob: -1.071181297302246
    3. '           ' → logprob: -4.071181297302246
    4. '       ' → logprob: -9.321181297302246
    5. '          ' → logprob: -9.571181297302246
    6. '):
' → logprob: -10.821181297302246
    7. '   ' → logprob: -10.946181297302246
    8. '               ' → logprob: -11.071181297302246
    9. '         ' → logprob: -11.696181297302246
    10. ':

' → logprob: -11.821181297302246

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2028980553150177
    2. 'd' → logprob: -2.5778980255126953
    3. 'B' → logprob: -3.0778980255126953
    4. 'K' → logprob: -3.4528980255126953
    5. ' d' → logprob: -4.577898025512695
    6. ' B' → logprob: -4.952898025512695
    7. '       ' → logprob: -5.077898025512695
    8. ' K' → logprob: -5.827898025512695
    9. '   ' → logprob: -6.952898025512695
    10. '          ' → logprob: -7.327898025512695

Token 335: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.676292231422849e-05
    2. ' print' → logprob: -11.000017166137695
    3. '           ' → logprob: -23.625017166137695
    4. '   ' → logprob: -25.625017166137695
    5. '       ' → logprob: -26.000017166137695
    6. '```' → logprob: -26.250017166137695
    7. '	print' → logprob: -26.750017166137695
    8. ' ' → logprob: -26.875017166137695
    9. '  ' → logprob: -27.625017166137695
    10. 'break' → logprob: -27.750017166137695

Token 336: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000431861262768507
    2. '(' → logprob: -7.750432014465332
    3. 's' → logprob: -13.750432014465332
    4. '(
' → logprob: -16.750431060791016
    5. ' (' → logprob: -18.625431060791016
    6. '(i' → logprob: -19.750431060791016
    7. '((' → logprob: -20.250431060791016
    8. '('' → logprob: -20.375431060791016
    9. '(end' → logprob: -20.500431060791016
    10. '(ss' → logprob: -20.625431060791016

Token 337: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004220147617161274
    2. '           ' → logprob: -6.129220008850098
    3. ')' → logprob: -6.254220008850098
    4. '       ' → logprob: -9.254220008850098
    5. '               ' → logprob: -12.254220008850098
    6. '   ' → logprob: -12.254220008850098
    7. ')
' → logprob: -12.879220008850098
    8. ' )
' → logprob: -13.504220008850098
    9. '')
' → logprob: -15.129220008850098
    10. '         ' → logprob: -15.379220008850098

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034149899147450924
    2. '       ' → logprob: -6.628415107727051
    3. 'exit' → logprob: -6.878415107727051
    4. '   ' → logprob: -7.003415107727051
    5. '               ' → logprob: -9.25341510772705
    6. ' exit' → logprob: -11.62841510772705
    7. '	       ' → logprob: -11.75341510772705
    8. '          ' → logprob: -11.87841510772705
    9. 'print' → logprob: -12.00341510772705
    10. '	exit' → logprob: -12.12841510772705

Token 339: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -8.41866585687967e-06
    2. ' exit' → logprob: -11.875008583068848
    3. '           ' → logprob: -13.750008583068848
    4. '(exit' → logprob: -15.750008583068848
    5. '.exit' → logprob: -16.75000762939453
    6. '	exit' → logprob: -16.75000762939453
    7. '_exit' → logprob: -17.62500762939453
    8. '   ' → logprob: -18.12500762939453
    9. 'break' → logprob: -18.75000762939453
    10. 'return' → logprob: -19.00000762939453

Token 340: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.674858301877975e-05
    2. '()
' → logprob: -9.250096321105957
    3. '()\' → logprob: -15.375096321105957
    4. '()`' → logprob: -15.750096321105957
    5. '()

' → logprob: -16.250097274780273
    6. '(' → logprob: -16.875097274780273
    7. '()
' → logprob: -17.000097274780273
    8. '()<' → logprob: -17.250097274780273
    9. '()>' → logprob: -18.000097274780273
    10. ' ()' → logprob: -18.250097274780273


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 338
Tokens correctement prédits (1ère position, stricte): 143
Tokens correctement prédits (1ère position, avec adaptation): 160
Tokens correctement prédits (top 10): 296
Précision stricte (1ère position): 42.31%
Précision adaptée (1ère position): 47.34%
Précision (top 10): 87.57%
================================================================================
