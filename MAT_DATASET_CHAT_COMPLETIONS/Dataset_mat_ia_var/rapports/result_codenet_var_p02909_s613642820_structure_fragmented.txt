================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def is_sunny(s):
    return s == 'Sunny'

def is_cloudy(s):
    return s == 'Cloudy'

def get_next_weather(s):
    if is_sunny(s):
        return "Cloudy"
    elif is_cloudy(s):
        return "Rainy"
    else:
        return "Sunny"

def output_result(result):
    print(result)

def main():
    s = read_input()
    next_weather = get_next_weather(s)
    output_result(next_weather)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013885974884033203
    2. '():' → logprob: -4.513885974884033
    3. '_' → logprob: -6.388885974884033
    4. '(:' → logprob: -7.888885974884033
    5. '(_:' → logprob: -8.138885498046875
    6. '```' → logprob: -8.388885498046875
    7. ':' → logprob: -10.013885498046875
    8. '()' → logprob: -10.138885498046875
    9. '(_' → logprob: -10.388885498046875
    10. ' (' → logprob: -10.388885498046875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7243372797966003
    2. '\n' → logprob: -0.9743372797966003
    3. '\' → logprob: -2.599337339401245
    4. '   ' → logprob: -3.224337339401245
    5. ':' → logprob: -5.224337100982666
    6. '``' → logprob: -5.974337100982666
    7. ''\' → logprob: -5.974337100982666
    8. '    
' → logprob: -5.974337100982666
    9. '
' → logprob: -6.349337100982666
    10. 'newline' → logprob: -6.474337100982666

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2923567593097687
    2. ' input' → logprob: -1.7923567295074463
    3. 'input' → logprob: -2.7923567295074463
    4. '"' → logprob: -3.9173567295074463
    5. ''' → logprob: -6.417356967926025
    6. ' []' → logprob: -6.542356967926025
    7. '  ' → logprob: -6.667356967926025
    8. ' None' → logprob: -8.292356491088867
    9. ' "' → logprob: -8.417356491088867
    10. '(input' → logprob: -8.792356491088867

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003167979419231415
    2. '()' → logprob: -6.003168106079102
    3. ''' → logprob: -8.503168106079102
    4. '"' → logprob: -8.878168106079102
    5. '```' → logprob: -9.378168106079102
    6. '("("' → logprob: -9.628168106079102
    7. '('' → logprob: -9.753168106079102
    8. '(
' → logprob: -10.753168106079102
    9. ' ' → logprob: -11.128168106079102
    10. '`' → logprob: -11.253168106079102

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8191545009613037
    2. '(' → logprob: -2.3191545009613037
    3. '```' → logprob: -2.4441545009613037
    4. '<|end|>' → logprob: -2.6941545009613037
    5. 'def' → logprob: -2.9441545009613037
    6. '
' → logprob: -2.9441545009613037
    7. '#' → logprob: -3.3191545009613037
    8. '()' → logprob: -3.4441545009613037
    9. '.' → logprob: -3.6941545009613037
    10. '' → logprob: -4.069154739379883

Token 9: ' is' (ID: 382)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.1904078722000122
    2. ' calculate' → logprob: -1.1904078722000122
    3. ' write' → logprob: -1.4404078722000122
    4. ' main' → logprob: -2.5654077529907227
    5. ' read' → logprob: -3.8154077529907227
    6. ' compute' → logprob: -4.315407752990723
    7. ' space' → logprob: -4.815407752990723
    8. ' parse' → logprob: -5.190407752990723
    9. ' user' → logprob: -5.690407752990723
    10. ' ' → logprob: -5.815407752990723

Token 10: '_s' (ID: 1278)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.8623381853103638
    2. '_' → logprob: -1.3623381853103638
    3. '_pal' → logprob: -1.4873381853103638
    4. '_prime' → logprob: -3.112338066101074
    5. ' _' → logprob: -4.612338066101074
    6. '_space' → logprob: -4.987338066101074
    7. '_integer' → logprob: -5.237338066101074
    8. '_even' → logprob: -5.487338066101074
    9. '_digit' → logprob: -5.737338066101074
    10. '_numeric' → logprob: -6.237338066101074

Token 11: 'unny' (ID: 128423)
  Prédit: 'orted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orted' → logprob: -1.2401089668273926
    2. 'afe' → logprob: -1.9901089668273926
    3. 'even' → logprob: -2.6151089668273926
    4. 'ub' → logprob: -2.8651089668273926
    5. 'quare' → logprob: -3.1151089668273926
    6. 'tring' → logprob: -3.1151089668273926
    7. 't' → logprob: -3.2401089668273926
    8. 'pecial' → logprob: -3.4901089668273926
    9. 'm' → logprob: -3.7401089668273926
    10. '_even' → logprob: -3.7401089668273926

Token 12: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03160541504621506
    2. '():' → logprob: -3.7816054821014404
    3. '_' → logprob: -5.531605243682861
    4. '(_' → logprob: -6.406605243682861
    5. '(day' → logprob: -8.03160572052002
    6. '(_)' → logprob: -8.03160572052002
    7. '(:' → logprob: -8.03160572052002
    8. '_s' → logprob: -8.15660572052002
    9. '(_:' → logprob: -8.53160572052002
    10. ':' → logprob: -9.15660572052002

Token 13: '):
' (ID: 1883)
  Prédit: 'unny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.13478058576583862
    2. 'un' → logprob: -3.2597806453704834
    3. 'ky' → logprob: -3.8847806453704834
    4. '):' → logprob: -4.509780406951904
    5. 't' → logprob: -4.759780406951904
    6. ')' → logprob: -4.759780406951904
    7. 'e' → logprob: -5.384780406951904
    8. '():' → logprob: -5.634780406951904
    9. ':' → logprob: -5.759780406951904
    10. '_' → logprob: -6.259780406951904

Token 14: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.58368980884552
    2. 's' → logprob: -0.95868980884552
    3. '(s' → logprob: -3.2086896896362305
    4. ' ==' → logprob: -5.4586896896362305
    5. '   ' → logprob: -5.5836896896362305
    6. '(' → logprob: -5.7086896896362305
    7. ''s' → logprob: -6.3336896896362305
    8. ' ' → logprob: -6.7086896896362305
    9. '==' → logprob: -6.9586896896362305
    10. ':' → logprob: -6.9586896896362305

Token 15: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1577945351600647
    2. ' return' → logprob: -2.40779447555542
    3. 's' → logprob: -3.03279447555542
    4. 'return' (adapté à ' return') → logprob: -5.28279447555542
    5. '   ' → logprob: -6.65779447555542
    6. ''s' → logprob: -7.65779447555542
    7. '"' → logprob: -7.90779447555542
    8. ' "' → logprob: -8.782794952392578
    9. ''' → logprob: -8.907794952392578
    10. ' '' → logprob: -9.532794952392578

Token 16: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01323199924081564
    2. 's' → logprob: -4.513232231140137
    3. '"' → logprob: -7.513232231140137
    4. ''s' → logprob: -7.763232231140137
    5. ' "' → logprob: -7.888232231140137
    6. ''' → logprob: -7.888232231140137
    7. ' '' → logprob: -8.013232231140137
    8. ' ' → logprob: -9.513232231140137
    9. '"s' → logprob: -10.638232231140137
    10. ' True' → logprob: -11.263232231140137

Token 17: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8435060977935791
    2. ' ==' → logprob: -1.218506097793579
    3. '.lower' → logprob: -1.468506097793579
    4. '.' → logprob: -3.718506097793579
    5. ' in' → logprob: -4.718505859375
    6. '.startswith' → logprob: -5.468505859375
    7. '.endswith' → logprob: -6.468505859375
    8. ' .' → logprob: -6.718505859375
    9. '>' → logprob: -6.843505859375
    10. '.strip' → logprob: -7.218505859375

Token 18: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10918399691581726
    2. ''' → logprob: -2.9841840267181396
    3. ' "' → logprob: -2.9841840267181396
    4. ' '' → logprob: -6.3591837882995605
    5. ''s' → logprob: -7.7341837882995605
    6. ''S' → logprob: -9.859184265136719
    7. ' ' → logprob: -10.984184265136719
    8. ''"' → logprob: -11.609184265136719
    9. '"s' → logprob: -12.109184265136719
    10. '"I' → logprob: -12.484184265136719

Token 19: 'Sunny' (ID: 145166)
  Prédit: 'sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sun' → logprob: -0.009171206504106522
    2. 'Sunny' → logprob: -5.009171009063721
    3. 'yes' → logprob: -6.259171009063721
    4. 'SUN' → logprob: -8.634171485900879
    5. ' sunny' → logprob: -9.509171485900879
    6. ''s' → logprob: -9.634171485900879
    7. 'Yes' → logprob: -9.759171485900879
    8. 'YES' → logprob: -10.759171485900879
    9. 'y' → logprob: -10.884171485900879
    10. '晴' → logprob: -11.009171485900879

Token 20: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002584785979706794
    2. ''S' → logprob: -8.375258445739746
    3. '"' → logprob: -11.375258445739746
    4. ''s' → logprob: -11.625258445739746
    5. ''''' → logprob: -12.625258445739746
    6. '"'' → logprob: -13.875258445739746
    7. ')'' → logprob: -14.375258445739746
    8. '')' → logprob: -14.625258445739746
    9. ' '' → logprob: -14.750258445739746
    10. ''"' → logprob: -14.750258445739746

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06013523414731026
    2. '

' → logprob: -2.9351351261138916
    3. '
' → logprob: -5.935135364532471
    4. '\n' → logprob: -6.810135364532471
    5. '<|end|>' → logprob: -7.560135364532471
    6. '\' → logprob: -7.935135364532471
    7. 'd' → logprob: -9.310134887695312
    8. '```' → logprob: -9.310134887695312
    9. 'newline' → logprob: -9.310134887695312
    10. 'de' → logprob: -9.685134887695312

Token 22: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7710932493209839
    2. 'is' → logprob: -0.8960932493209839
    3. ' main' → logprob: -3.0210933685302734
    4. ' def' → logprob: -3.3960933685302734
    5. 'def' → logprob: -3.7710933685302734
    6. 'main' → logprob: -4.271093368530273
    7. ' rain' → logprob: -6.396093368530273
    8. ' get' → logprob: -6.521093368530273
    9. 'calculate' → logprob: -6.646093368530273
    10. 'rain' → logprob: -7.271093368530273

Token 23: '_cloud' (ID: 83382)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.8754106760025024
    2. ' Rain' → logprob: -0.8754106760025024
    3. ' rainy' → logprob: -3.375410556793213
    4. '_cloud' → logprob: -3.625410556793213
    5. 'Rain' → logprob: -3.875410556793213
    6. '_s' → logprob: -4.000410556793213
    7. ' rain' → logprob: -4.625410556793213
    8. ' Cloud' → logprob: -4.812910556793213
    9. ' R' → logprob: -4.937910556793213
    10. 'rain' → logprob: -5.062910556793213

Token 24: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1472419600977446e-06
    2. 'less' → logprob: -15.500000953674316
    3. ' y' → logprob: -15.500000953674316
    4. '```' → logprob: -15.500000953674316
    5. '(y' → logprob: -15.750000953674316
    6. '   ' → logprob: -16.125001907348633
    7. 'dy' → logprob: -16.750001907348633
    8. '[y' → logprob: -16.750001907348633
    9. 'ly' → logprob: -17.125001907348633
    10. 'Y' → logprob: -17.500001907348633

Token 25: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0036048211622983217
    2. '(' → logprob: -5.628604888916016
    3. ' (' → logprob: -13.253604888916016
    4. 's' → logprob: -13.253604888916016
    5. '_' → logprob: -14.378604888916016
    6. '_s' → logprob: -15.878604888916016
    7. '(S' → logprob: -16.128604888916016
    8. ' s' → logprob: -16.378604888916016
    9. ' ' → logprob: -16.503604888916016
    10. ')' → logprob: -16.878604888916016

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005718912463635206
    2. ')' → logprob: -5.38071870803833
    3. '):
' → logprob: -7.00571870803833
    4. ' ):' → logprob: -9.255719184875488
    5. '   ' → logprob: -11.005719184875488
    6. ')==' → logprob: -11.130719184875488
    7. ' s' → logprob: -11.380719184875488
    8. 's' → logprob: -11.505719184875488
    9. '(s' → logprob: -11.630719184875488
    10. '=' → logprob: -11.880719184875488

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5319443345069885
    2. ' s' → logprob: -1.1569442749023438
    3. 's' → logprob: -2.6569442749023438
    4. ' return' → logprob: -3.6569442749023438
    5. 'return' → logprob: -6.781944274902344
    6. '(s' → logprob: -7.031944274902344
    7. ' ' → logprob: -9.781944274902344
    8. '    ' → logprob: -10.531944274902344
    9. '  ' → logprob: -11.906944274902344
    10. '	s' → logprob: -12.906944274902344

Token 28: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2890355587005615
    2. ' return' → logprob: -1.4140355587005615
    3. 's' → logprob: -5.414035797119141
    4. '   ' → logprob: -6.164035797119141
    5. ' s' → logprob: -6.664035797119141
    6. ' ' → logprob: -11.28903579711914
    7. '(s' → logprob: -12.78903579711914
    8. '	return' → logprob: -13.03903579711914
    9. '  ' → logprob: -13.41403579711914
    10. '    ' → logprob: -14.28903579711914

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3484526574611664
    2. 's' → logprob: -1.2234526872634888
    3. '(s' → logprob: -12.3484525680542
    4. '   ' → logprob: -13.7234525680542
    5. ' ' → logprob: -13.7234525680542
    6. ''s' → logprob: -14.7234525680542
    7. '`s' → logprob: -15.0984525680542
    8. '	s' → logprob: -15.3484525680542
    9. ''' → logprob: -15.9734525680542
    10. ' '' → logprob: -16.098453521728516

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02317873202264309
    2. '==' → logprob: -4.523178577423096
    3. '.startswith' → logprob: -5.773178577423096
    4. ' !=' → logprob: -5.898178577423096
    5. '.' → logprob: -5.898178577423096
    6. ' ' → logprob: -6.773178577423096
    7. ' in' → logprob: -7.023178577423096
    8. '[' → logprob: -7.398178577423096
    9. ' .' → logprob: -7.773178577423096
    10. '.endswith' → logprob: -8.773179054260254

Token 31: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2255408763885498
    2. ' '' → logprob: -1.6005408763885498
    3. ' ' → logprob: -9.350541114807129
    4. ''S' → logprob: -10.350541114807129
    5. '"' → logprob: -12.100541114807129
    6. ' ' → logprob: -13.475541114807129
    7. ''s' → logprob: -13.600541114807129
    8. '`' → logprob: -15.100541114807129
    9. '  ' → logprob: -15.225541114807129
    10. ' "' → logprob: -15.225541114807129

Token 32: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.004629007540643215
    2. ''' → logprob: -5.379629135131836
    3. ' Cloud' → logprob: -13.254629135131836
    4. 'cloud' → logprob: -13.254629135131836
    5. ''C' → logprob: -13.379629135131836
    6. 'Sunny' → logprob: -13.504629135131836
    7. ''S' → logprob: -14.754629135131836
    8. '"' → logprob: -14.879629135131836
    9. ' cloudy' → logprob: -15.004629135131836
    10. '.Cloud' → logprob: -15.004629135131836

Token 33: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.088346359931165e-07
    2. 's' → logprob: -15.000000953674316
    3. ' y' → logprob: -15.125000953674316
    4. ''y' → logprob: -15.625000953674316
    5. ''' → logprob: -16.75
    6. 'Y' → logprob: -18.125
    7. ')' → logprob: -18.25
    8. '')' → logprob: -19.0
    9. '‘y' → logprob: -19.125
    10. ' '' → logprob: -19.25

Token 34: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -9.031157969729975e-05
    2. '')' → logprob: -9.375090599060059
    3. ')' → logprob: -13.625090599060059
    4. ')'' → logprob: -13.875090599060059
    5. '()' → logprob: -14.000090599060059
    6. ''''' → logprob: -14.250090599060059
    7. ''
' → logprob: -14.750090599060059
    8. ''s' → logprob: -15.125090599060059
    9. 's' → logprob: -15.125090599060059
    10. '"' → logprob: -15.375090599060059

Token 35: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011450992315076292
    2. 'd' → logprob: -9.625114440917969
    3. '```' → logprob: -11.000114440917969
    4. '\' → logprob: -11.250114440917969
    5. '

' → logprob: -11.625114440917969
    6. 'de' → logprob: -12.500114440917969
    7. '
' → logprob: -12.875114440917969
    8. '#' → logprob: -13.875114440917969
    9. '``' → logprob: -14.250114440917969
    10. ' def' → logprob: -15.500114440917969

Token 36: ' get' (ID: 717)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002505028620362282
    2. ' def' → logprob: -6.502504825592041
    3. 'is' → logprob: -7.502504825592041
    4. ' rain' → logprob: -8.2525053024292
    5. 'rain' → logprob: -9.8775053024292
    6. '```' → logprob: -10.2525053024292
    7. ' main' → logprob: -10.5025053024292
    8. 'def' → logprob: -10.5025053024292
    9. ' rainy' → logprob: -11.8775053024292
    10. '_is' → logprob: -12.2525053024292

Token 37: '_next' (ID: 25436)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.05895817652344704
    2. '_day' → logprob: -4.308958053588867
    3. '_temperature' → logprob: -4.433958053588867
    4. '_' → logprob: -4.683958053588867
    5. '_w' → logprob: -4.683958053588867
    6. '_r' → logprob: -5.933958053588867
    7. '_fore' → logprob: -6.058958053588867
    8. '_s' → logprob: -6.433958053588867
    9. '_status' → logprob: -6.683958053588867
    10. '_input' → logprob: -7.183958053588867

Token 38: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.8320373296737671
    2. '_day' → logprob: -1.332037329673767
    3. '_' → logprob: -1.707037329673767
    4. '_condition' → logprob: -3.5820374488830566
    5. '_state' → logprob: -3.5820374488830566
    6. '_status' → logprob: -3.8320374488830566
    7. '_s' → logprob: -3.9570374488830566
    8. '_token' → logprob: -5.707037448883057
    9. '_line' → logprob: -5.707037448883057
    10. '_word' → logprob: -5.832037448883057

Token 39: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010130131617188454
    2. '(s' → logprob: -5.010129928588867
    3. '("("' → logprob: -7.135129928588867
    4. '_' → logprob: -7.385129928588867
    5. '()' → logprob: -7.635129928588867
    6. '('' → logprob: -8.260129928588867
    7. '(_)' → logprob: -8.510129928588867
    8. '('_' → logprob: -8.760129928588867
    9. '(weather' → logprob: -9.260129928588867
    10. '_parent' → logprob: -9.885129928588867

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022712242789566517
    2. ')' → logprob: -6.2522711753845215
    3. '):
' → logprob: -8.50227165222168
    4. '_' → logprob: -9.50227165222168
    5. 's' → logprob: -11.37727165222168
    6. ' ):' → logprob: -11.50227165222168
    7. '   ' → logprob: -11.87727165222168
    8. '_s' → logprob: -12.37727165222168
    9. '_weather' → logprob: -12.37727165222168
    10. ',' → logprob: -12.50227165222168

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021035658195614815
    2. ' if' → logprob: -3.896035671234131
    3. 'if' → logprob: -8.396035194396973
    4. '    
' → logprob: -9.396035194396973
    5. '	if' → logprob: -9.896035194396973
    6. '"' → logprob: -10.521035194396973
    7. ''' → logprob: -10.896035194396973
    8. '   ' → logprob: -11.146035194396973
    9. ':' → logprob: -11.521035194396973
    10. ' return' → logprob: -11.771035194396973

Token 42: ' if' (ID: 538)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9908111095428467
    2. 'if' (adapté à ' if') → logprob: -1.1158111095428467
    3. '"' → logprob: -2.3658111095428467
    4. '   ' → logprob: -2.7408111095428467
    5. ' if' → logprob: -2.8658111095428467
    6. '{' → logprob: -3.4908111095428467
    7. ''s' → logprob: -3.6158111095428467
    8. '{
' → logprob: -4.615811347961426
    9. 'return' → logprob: -4.740811347961426
    10. ''S' → logprob: -5.365811347961426

Token 43: ' is' (ID: 382)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.17129391431808472
    2. ' is' → logprob: -1.9212939739227295
    3. 's' → logprob: -4.54629373550415
    4. 'is' → logprob: -8.421294212341309
    5. ' ' → logprob: -9.671294212341309
    6. ' ' → logprob: -9.796294212341309
    7. '_' → logprob: -10.671294212341309
    8. '_s' → logprob: -10.921294212341309
    9. '	s' → logprob: -12.733794212341309
    10. '  ' → logprob: -13.296294212341309

Token 44: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00544553529471159
    2. '_cloud' → logprob: -5.38044548034668
    3. '_' → logprob: -7.25544548034668
    4. ' _' → logprob: -9.13044548034668
    5. 'sun' → logprob: -13.25544548034668
    6. 'Sunny' → logprob: -13.75544548034668
    7. 'cloud' → logprob: -13.88044548034668
    8. ' Sunny' → logprob: -14.25544548034668
    9. '_S' → logprob: -14.38044548034668
    10. '__' → logprob: -14.38044548034668

Token 45: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.056009188294410706
    2. '_s' → logprob: -3.556009292602539
    3. '_un' → logprob: -3.681009292602539
    4. '_' → logprob: -7.681009292602539
    5. '_u' → logprob: -9.681009292602539
    6. '_n' → logprob: -9.931009292602539
    7. '_cloud' → logprob: -10.056009292602539
    8. '_uns' → logprob: -10.931009292602539
    9. 'un' → logprob: -11.181009292602539
    10. 'Sunny' → logprob: -11.806009292602539

Token 46: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.13234969973564148
    2. '(' → logprob: -2.132349729537964
    3. '('' → logprob: -5.257349491119385
    4. ' (' → logprob: -8.757349967956543
    5. '("' → logprob: -10.507349967956543
    6. '("("' → logprob: -12.132349967956543
    7. '((' → logprob: -13.632349967956543
    8. '()' → logprob: -13.757349967956543
    9. '(`' → logprob: -13.757349967956543
    10. '(S' → logprob: -14.007349967956543

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037845235783606768
    2. ' ):' → logprob: -6.003784656524658
    3. ')' → logprob: -6.753784656524658
    4. '):
' → logprob: -9.0037841796875
    5. ' )' → logprob: -11.5037841796875
    6. ':' → logprob: -12.1287841796875
    7. ' ):
' → logprob: -14.3787841796875
    8. '   ' → logprob: -14.8787841796875
    9. ' or' → logprob: -14.8787841796875
    10. ' ' → logprob: -15.0037841796875

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05820876732468605
    2. ' return' → logprob: -3.808208703994751
    3. ':' → logprob: -4.30820894241333
    4. '   ' → logprob: -4.55820894241333
    5. ':
' → logprob: -4.80820894241333
    6. 'return' → logprob: -7.05820894241333
    7. ' or' → logprob: -7.93320894241333
    8. ' :
' → logprob: -8.058208465576172
    9. ' :' → logprob: -8.433208465576172
    10. ':return' → logprob: -8.933208465576172

Token 49: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2016259729862213
    2. 'return' (adapté à ' return') → logprob: -1.826625943183899
    3. '       ' → logprob: -4.451625823974609
    4. '   ' → logprob: -5.826625823974609
    5. ' 
' → logprob: -5.826625823974609
    6. ''' → logprob: -6.076625823974609
    7. ' ' → logprob: -7.451625823974609
    8. '
' → logprob: -8.32662582397461
    9. ' '' → logprob: -8.82662582397461
    10. '    
' → logprob: -8.95162582397461

Token 50: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04888983443379402
    2. ' '' → logprob: -3.1738898754119873
    3. '"' → logprob: -5.673889636993408
    4. ''S' → logprob: -6.173889636993408
    5. ''s' → logprob: -8.423890113830566
    6. ' "' → logprob: -9.673890113830566
    7. ' ' → logprob: -10.798890113830566
    8. '  ' → logprob: -11.173890113830566
    9. '   ' → logprob: -12.048890113830566
    10. '['' → logprob: -12.298890113830566

Token 51: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.01291807834059
    2. 'Rain' → logprob: -4.512917995452881
    3. ''' → logprob: -7.137917995452881
    4. 'Sunny' → logprob: -7.387917995452881
    5. '"' → logprob: -8.137918472290039
    6. ' Cloud' → logprob: -9.387918472290039
    7. 'cloud' → logprob: -10.762918472290039
    8. 'C' → logprob: -12.387918472290039
    9. '['' → logprob: -12.512918472290039
    10. '`' → logprob: -12.512918472290039

Token 52: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.2200749754119897e-06
    2. ' y' → logprob: -13.500001907348633
    3. 'yd' → logprob: -15.250001907348633
    4. 'ly' → logprob: -15.500001907348633
    5. '	y' → logprob: -16.875001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '"' → logprob: -17.125001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'yy' → logprob: -17.750001907348633
    10. 's' → logprob: -17.750001907348633

Token 53: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000526107382029295
    2. '"
' → logprob: -7.875525951385498
    3. ' "' → logprob: -9.375526428222656
    4. '\n' → logprob: -10.000526428222656
    5. '"

' → logprob: -12.250526428222656
    6. '")' → logprob: -13.375526428222656
    7. '"`' → logprob: -13.875526428222656
    8. '"The' → logprob: -14.125526428222656
    9. '"\' → logprob: -14.125526428222656
    10. '"I' → logprob: -14.250526428222656

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037356484681367874
    2. '
' → logprob: -4.287356376647949
    3. '    
' → logprob: -4.662356376647949
    4. 'elif' → logprob: -5.162356376647949
    5. ' elif' → logprob: -5.537356376647949
    6. ' else' → logprob: -6.537356376647949
    7. '\n' → logprob: -6.787356376647949
    8. '	elif' → logprob: -7.662356376647949
    9. 'else' → logprob: -8.41235637664795
    10. '  
' → logprob: -9.16235637664795

Token 55: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.28558143973350525
    2. ' elif' → logprob: -2.160581350326538
    3. 'else' → logprob: -2.785581350326538
    4. ' else' → logprob: -3.660581350326538
    5. '   ' → logprob: -3.785581350326538
    6. '\n' → logprob: -4.785581588745117
    7. '
' → logprob: -4.910581588745117
    8. 'e' → logprob: -6.035581588745117
    9. '    
' → logprob: -6.285581588745117
    10. 'return' → logprob: -6.785581588745117

Token 56: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0023471000604331493
    2. ' ' → logprob: -6.377346992492676
    3. ' ' → logprob: -8.752346992492676
    4. ' space' → logprob: -8.877346992492676
    5. 'is' → logprob: -9.002346992492676
    6. 'space' → logprob: -9.127346992492676
    7. ' s' → logprob: -9.502346992492676
    8. 's' → logprob: -10.377346992492676
    9. '  ' → logprob: -12.627346992492676
    10. '_' → logprob: -14.502346992492676

Token 57: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -0.10038146376609802
    2. '_s' → logprob: -2.350381374359131
    3. '_' → logprob: -8.975381851196289
    4. 'cloud' → logprob: -10.600381851196289
    5. '_c' → logprob: -11.600381851196289
    6. '_cl' → logprob: -12.600381851196289
    7. ' _' → logprob: -12.725381851196289
    8. '_clear' → logprob: -13.100381851196289
    9. 'sun' → logprob: -13.350381851196289
    10. '__' → logprob: -13.975381851196289

Token 58: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00010211274639004841
    2. 'd' → logprob: -10.250102043151855
    3. 'dy' → logprob: -10.375102043151855
    4. 'yd' → logprob: -11.000102043151855
    5. 'udy' → logprob: -12.625102043151855
    6. ' y' → logprob: -13.250102043151855
    7. 'ly' → logprob: -13.250102043151855
    8. 'ed' → logprob: -13.375102043151855
    9. 'ud' → logprob: -13.500102043151855
    10. 'oud' → logprob: -14.125102043151855

Token 59: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -10.625028610229492
    3. ' (' → logprob: -12.500028610229492
    4. 's' → logprob: -15.000028610229492
    5. ' ' → logprob: -19.625028610229492
    6. '```' → logprob: -19.875028610229492
    7. '`s' → logprob: -20.250028610229492
    8. ' s' → logprob: -20.500028610229492
    9. ''(' → logprob: -20.625028610229492
    10. '`' → logprob: -21.125028610229492

Token 60: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00019197762594558299
    2. '):' → logprob: -8.875191688537598
    3. 's' → logprob: -10.375191688537598
    4. ')' → logprob: -11.250191688537598
    5. '(' → logprob: -12.375191688537598
    6. '):
' → logprob: -13.250191688537598
    7. ' (' → logprob: -13.875191688537598
    8. '   ' → logprob: -14.875191688537598
    9. ')(' → logprob: -15.750191688537598
    10. ')s' → logprob: -15.875191688537598

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4823629856109619
    2. '"' → logprob: -0.9823629856109619
    3. ' "' → logprob: -5.982362747192383
    4. ' return' → logprob: -6.232362747192383
    5. ''' → logprob: -6.732362747192383
    6. 'return' → logprob: -7.232362747192383
    7. '(' → logprob: -7.732362747192383
    8. '("' → logprob: -7.857362747192383
    9. '   ' → logprob: -8.607362747192383
    10. '           ' → logprob: -8.857362747192383

Token 62: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03653308004140854
    2. '       ' → logprob: -4.036532878875732
    3. 'return' (adapté à ' return') → logprob: -5.161532878875732
    4. ' return' → logprob: -5.411532878875732
    5. ' "' → logprob: -5.661532878875732
    6. '("' → logprob: -6.411532878875732
    7. '   ' → logprob: -6.786532878875732
    8. '           ' → logprob: -7.411532878875732
    9. ''' → logprob: -7.661532878875732
    10. ' ' → logprob: -8.53653335571289

Token 63: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07023662328720093
    2. ' "' → logprob: -2.6952366828918457
    3. ''' → logprob: -8.320236206054688
    4. ' ' → logprob: -10.945236206054688
    5. '("' → logprob: -11.570236206054688
    6. '(' → logprob: -11.820236206054688
    7. '"S' → logprob: -12.070236206054688
    8. ' '' → logprob: -12.195236206054688
    9. '"I' → logprob: -12.695236206054688
    10. ''S' → logprob: -13.570236206054688

Token 64: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -0.3948419988155365
    2. 'Sunny' → logprob: -1.3948420286178589
    3. '"' → logprob: -2.6448419094085693
    4. ''S' → logprob: -5.894842147827148
    5. ''' → logprob: -5.894842147827148
    6. 'Sun' → logprob: -7.019842147827148
    7. '"S' → logprob: -7.894842147827148
    8. 'Snow' → logprob: -9.144842147827148
    9. '   ' → logprob: -9.144842147827148
    10. '```' → logprob: -10.519842147827148

Token 65: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.054500666621607e-06
    2. '"' → logprob: -13.25000286102295
    3. ''y' → logprob: -14.62500286102295
    4. 'ny' → logprob: -14.75000286102295
    5. '```' → logprob: -16.250003814697266
    6. '	y' → logprob: -16.750003814697266
    7. 'yy' → logprob: -16.875003814697266
    8. ' y' → logprob: -17.250003814697266
    9. '"""' → logprob: -17.500003814697266
    10. 'yyy' → logprob: -17.875003814697266

Token 66: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007358975242823362
    2. '"
' → logprob: -5.257359027862549
    3. '   ' → logprob: -6.382359027862549
    4. '")' → logprob: -8.13235855102539
    5. '       ' → logprob: -9.88235855102539
    6. '```' → logprob: -10.88235855102539
    7. '()' → logprob: -11.50735855102539
    8. '
' → logprob: -11.50735855102539
    9. '\n' → logprob: -12.00735855102539
    10. 'return' → logprob: -12.13235855102539

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14486785233020782
    2. '
' → logprob: -2.0198678970336914
    3. '    
' → logprob: -6.519867897033691
    4. '<|end|>' → logprob: -8.519867897033691
    5. 'else' → logprob: -9.144867897033691
    6. ' else' → logprob: -9.519867897033691
    7. '```' → logprob: -9.769867897033691
    8. '  
' → logprob: -9.894867897033691
    9. 'return' → logprob: -10.269867897033691
    10. '       ' → logprob: -10.894867897033691

Token 68: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08900205790996552
    2. 'else' (adapté à ' else') → logprob: -2.8390021324157715
    3. ' else' → logprob: -3.7140021324157715
    4. '
' → logprob: -6.8390021324157715
    5. 'elif' → logprob: -7.8390021324157715
    6. '	else' → logprob: -8.089001655578613
    7. '    
' → logprob: -8.464001655578613
    8. '<|end|>' → logprob: -9.214001655578613
    9. 'return' → logprob: -9.839001655578613
    10. '       ' → logprob: -10.464001655578613

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48695385456085205
    2. ':
' → logprob: -0.986953854560852
    3. '       ' → logprob: -4.6119537353515625
    4. '   ' → logprob: -6.3619537353515625
    5. ':return' → logprob: -7.9869537353515625
    6. ' :
' → logprob: -8.236953735351562
    7. '    ' → logprob: -8.861953735351562
    8. '
' → logprob: -9.611953735351562
    9. ' :' → logprob: -9.611953735351562
    10. '        ' → logprob: -9.736953735351562

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24158035218715668
    2. '"' → logprob: -2.1165802478790283
    3. ' "' → logprob: -2.7415802478790283
    4. ' return' → logprob: -3.8665802478790283
    5. 'return' → logprob: -4.991580486297607
    6. '   ' → logprob: -6.866580486297607
    7. ' ' → logprob: -7.991580486297607
    8. ''' → logprob: -8.74158000946045
    9. '        ' → logprob: -9.24158000946045
    10. ' '' → logprob: -9.36658000946045

Token 71: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.52635657787323
    2. 'return' (adapté à ' return') → logprob: -0.90135657787323
    3. '       ' → logprob: -6.1513566970825195
    4. '"' → logprob: -6.9013566970825195
    5. ' "' → logprob: -10.65135669708252
    6. '   ' → logprob: -11.02635669708252
    7. ' ' → logprob: -11.15135669708252
    8. '	return' → logprob: -11.40135669708252
    9. '        ' → logprob: -12.65135669708252
    10. ' 
' → logprob: -12.90135669708252

Token 72: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003988523501902819
    2. ' "' → logprob: -5.628988742828369
    3. ''' → logprob: -8.003988265991211
    4. ' ' → logprob: -10.628988265991211
    5. ' '' → logprob: -11.128988265991211
    6. ' ' → logprob: -12.128988265991211
    7. '""' → logprob: -12.503988265991211
    8. '`' → logprob: -13.378988265991211
    9. ''s' → logprob: -13.753988265991211
    10. ''S' → logprob: -14.253988265991211

Token 73: 'Sunny' (ID: 145166)
  Prédit: 'Sunny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sunny' → logprob: -0.00024834630312398076
    2. 'Sun' → logprob: -9.000247955322266
    3. '"' → logprob: -9.375247955322266
    4. 'Rain' → logprob: -11.375247955322266
    5. 'Cloud' → logprob: -11.625247955322266
    6. ' Sunny' → logprob: -12.250247955322266
    7. ''S' → logprob: -12.375247955322266
    8. 'S' → logprob: -13.000247955322266
    9. '   ' → logprob: -13.625247955322266
    10. 'Snow' → logprob: -13.875247955322266

Token 74: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.32392441527918e-05
    2. '"
' → logprob: -10.250053405761719
    3. '")' → logprob: -11.500053405761719
    4. '```' → logprob: -12.125053405761719
    5. '\n' → logprob: -14.250053405761719
    6. ')' → logprob: -15.000053405761719
    7. ' "' → logprob: -15.375053405761719
    8. '"

' → logprob: -15.375053405761719
    9. ')"' → logprob: -15.750053405761719
    10. '()"' → logprob: -16.00005340576172

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10542140156030655
    2. '
' → logprob: -2.730421304702759
    3. 'weather' → logprob: -3.855421304702759
    4. 'n' → logprob: -5.855421543121338
    5. 's' → logprob: -6.105421543121338
    6. 'current' → logprob: -6.355421543121338
    7. 'state' → logprob: -6.480421543121338
    8. 'w' → logprob: -6.980421543121338
    9. '<|end|>' → logprob: -6.980421543121338
    10. '```' → logprob: -7.105421543121338

Token 76: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01695353537797928
    2. ' weather' → logprob: -4.641953468322754
    3. ' simulate' → logprob: -5.391953468322754
    4. ' predict' → logprob: -6.766953468322754
    5. ' forecast' → logprob: -7.766953468322754
    6. 'main' → logprob: -8.391953468322754
    7. ' def' → logprob: -8.516953468322754
    8. ' generate' → logprob: -8.766953468322754
    9. ' calculate' → logprob: -8.891953468322754
    10. 'simulate' → logprob: -9.141953468322754

Token 77: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08135086297988892
    2. '(s' → logprob: -3.706350803375244
    3. '_weather' → logprob: -3.831350803375244
    4. '_' → logprob: -3.956350803375244
    5. '()' → logprob: -5.206350803375244
    6. '(weather' → logprob: -5.581350803375244
    7. '_s' → logprob: -7.456350803375244
    8. '_output' → logprob: -7.581350803375244
    9. ')' → logprob: -7.706350803375244
    10. 's' → logprob: -8.331351280212402

Token 78: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.28640687465667725
    2. '(' → logprob: -1.4114068746566772
    3. '(s' → logprob: -5.786406993865967
    4. '()' → logprob: -6.411406993865967
    5. '("("' → logprob: -9.536406517028809
    6. ':' → logprob: -9.911406517028809
    7. ' ():' → logprob: -10.036406517028809
    8. '(output' → logprob: -10.161406517028809
    9. '(user' → logprob: -10.286406517028809
    10. '(":' → logprob: -10.411406517028809

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011074470356106758
    2. ')' → logprob: -4.511074542999268
    3. '):
' → logprob: -10.76107406616211
    4. ':' → logprob: -13.01107406616211
    5. ' ):' → logprob: -13.51107406616211
    6. '   ' → logprob: -14.13607406616211
    7. '):
' → logprob: -15.26107406616211
    8. '():' → logprob: -15.51107406616211
    9. '(' → logprob: -16.01107406616211
    10. ' ' → logprob: -16.13607406616211

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.47495681833243e-05
    2. 'print' → logprob: -11.000024795532227
    3. ' print' → logprob: -11.750024795532227
    4. '   ' → logprob: -16.625024795532227
    5. '    
' → logprob: -17.125024795532227
    6. '```' → logprob: -17.500024795532227
    7. '	print' → logprob: -19.000024795532227
    8. '       ' → logprob: -19.250024795532227
    9. '
' → logprob: -19.875024795532227
    10. '  ' → logprob: -20.250024795532227

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2747158110141754
    2. ' print' → logprob: -1.774715781211853
    3. '   ' → logprob: -2.6497159004211426
    4. '```' → logprob: -12.399715423583984
    5. 'pr' → logprob: -13.524715423583984
    6. '	print' → logprob: -14.024715423583984
    7. 'return' → logprob: -14.524715423583984
    8. ' ' → logprob: -14.774715423583984
    9. ' return' → logprob: -15.024715423583984
    10. '  ' → logprob: -15.399715423583984

Token 82: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.12695161998271942
    2. '(' → logprob: -2.1269516944885254
    3. '(f' → logprob: -11.251951217651367
    4. 'result' → logprob: -12.626951217651367
    5. '()' → logprob: -12.626951217651367
    6. ' (' → logprob: -13.501951217651367
    7. '('' → logprob: -14.501951217651367
    8. '(resultado' → logprob: -14.626951217651367
    9. '(results' → logprob: -15.251951217651367
    10. '((' → logprob: -15.251951217651367

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.375
    3. ' )' → logprob: -17.0
    4. ')`' → logprob: -19.0
    5. '))' → logprob: -19.125
    6. '')' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. '()' → logprob: -20.5
    9. '")' → logprob: -20.75
    10. ')

' → logprob: -21.125

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004220739938318729
    2. 'if' → logprob: -5.879220962524414
    3. '
' → logprob: -7.004220962524414
    4. 's' → logprob: -8.254220962524414
    5. '

' → logprob: -9.754220962524414
    6. 'weather' → logprob: -9.754220962524414
    7. 'n' → logprob: -10.004220962524414
    8. 'for' → logprob: -10.629220962524414
    9. '```' → logprob: -11.379220962524414
    10. '<|end|>' → logprob: -11.629220962524414

Token 85: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0008329743286594748
    2. ' weather' → logprob: -7.250833034515381
    3. 'main' → logprob: -9.625832557678223
    4. ' run' → logprob: -11.000832557678223
    5. ' process' → logprob: -11.625832557678223
    6. ' simulate' → logprob: -11.750832557678223
    7. ' solve' → logprob: -12.000832557678223
    8. ' predict' → logprob: -12.500832557678223
    9. ' forecast' → logprob: -12.625832557678223
    10. ' def' → logprob: -12.750832557678223

Token 86: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -11.250027656555176
    3. ' ():' → logprob: -11.750027656555176
    4. '()' → logprob: -12.250027656555176
    5. '():
' → logprob: -14.000027656555176
    6. '_' → logprob: -15.000027656555176
    7. '(:' → logprob: -15.250027656555176
    8. '(":' → logprob: -16.75002670288086
    9. ':' → logprob: -16.87502670288086
    10. '()>' → logprob: -17.75002670288086

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012238842435181141
    2. ' s' → logprob: -5.0122389793396
    3. ' current' → logprob: -6.0122389793396
    4. ' weather' → logprob: -6.2622389793396
    5. 's' → logprob: -7.2622389793396
    6. 'weather' → logprob: -8.387238502502441
    7. 'current' → logprob: -9.262238502502441
    8. ' day' → logprob: -9.887238502502441
    9. ' initial' → logprob: -10.387238502502441
    10. '```' → logprob: -11.262238502502441

Token 88: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -1.2641462087631226
    2. ' s' → logprob: -1.3891462087631226
    3. ' current' → logprob: -1.6391462087631226
    4. ' weather' → logprob: -1.8891462087631226
    5. 'weather' → logprob: -2.514146327972412
    6. 'current' → logprob: -3.764146327972412
    7. '   ' → logprob: -4.389146327972412
    8. ' day' → logprob: -5.639146327972412
    9. 'state' → logprob: -7.264146327972412
    10. ' state' → logprob: -8.014145851135254

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00034869377850554883
    2. '=' → logprob: -8.125349044799805
    3. ' ' → logprob: -9.875349044799805
    4. '_' → logprob: -14.625349044799805
    5. '  ' → logprob: -14.625349044799805
    6. ' =)' → logprob: -16.750349044799805
    7. '   ' → logprob: -17.000349044799805
    8. ',' → logprob: -17.375349044799805
    9. '=input' → logprob: -17.375349044799805
    10. ')' → logprob: -17.375349044799805

Token 90: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0015029559144750237
    2. 'read' → logprob: -6.501502990722656
    3. '	read' → logprob: -14.626502990722656
    4. ' ' → logprob: -16.376502990722656
    5. ' input' → logprob: -16.876502990722656
    6. '(read' → logprob: -17.251502990722656
    7. ' readline' → logprob: -19.376502990722656
    8. ' ' → logprob: -20.001502990722656
    9. '  ' → logprob: -20.001502990722656
    10. '_read' → logprob: -20.251502990722656

Token 91: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.813969957875088e-05
    2. '_' → logprob: -9.625067710876465
    3. ' _' → logprob: -14.375067710876465
    4. '_in' → logprob: -14.625067710876465
    5. '_inputs' → logprob: -14.750067710876465
    6. '_output' → logprob: -16.12506866455078
    7. '_Input' → logprob: -16.12506866455078
    8. '```' → logprob: -16.25006866455078
    9. '_line' → logprob: -16.75006866455078
    10. '_s' → logprob: -16.87506866455078

Token 92: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.7994282795116305e-05
    2. '()
' → logprob: -10.12504768371582
    3. '(' → logprob: -12.75004768371582
    4. ' ()' → logprob: -13.62504768371582
    5. '()

' → logprob: -13.62504768371582
    6. '()`' → logprob: -14.12504768371582
    7. '())' → logprob: -15.37504768371582
    8. '()
' → logprob: -15.62504768371582
    9. '()<' → logprob: -15.62504768371582
    10. '().' → logprob: -15.87504768371582

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5316122174263
    2. '   ' → logprob: -0.9066122174263
    3. '<|end|>' → logprob: -5.656612396240234
    4. '    
' → logprob: -6.531612396240234
    5. 's' → logprob: -7.406612396240234
    6. 'n' → logprob: -7.531612396240234
    7. '  
' → logprob: -7.906612396240234
    8. ' 
' → logprob: -7.906612396240234
    9. 'result' → logprob: -7.906612396240234
    10. '```' → logprob: -8.781612396240234

Token 94: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.6286652684211731
    2. ' next' → logprob: -1.3786652088165283
    3. 'result' → logprob: -2.1286652088165283
    4. 'n' → logprob: -3.1286652088165283
    5. ' result' → logprob: -3.2536652088165283
    6. ' nxt' → logprob: -5.378665447235107
    7. ' n' → logprob: -5.878665447235107
    8. '   ' → logprob: -6.378665447235107
    9. 'weather' → logprob: -6.878665447235107
    10. ' weather' → logprob: -7.128665447235107

Token 95: '_weather' (ID: 170154)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1813068836927414
    2. '_weather' → logprob: -1.8063068389892578
    3. '_w' → logprob: -7.556306838989258
    4. '_s' → logprob: -7.556306838989258
    5. '_we' → logprob: -8.931306838989258
    6. ' _' → logprob: -9.056306838989258
    7. '_temperature' → logprob: -10.306306838989258
    8. '_day' → logprob: -10.806306838989258
    9. '_user' → logprob: -10.931306838989258
    10. '_week' → logprob: -11.306306838989258

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044375136494636536
    2. '=' → logprob: -3.16937518119812
    3. ' ' → logprob: -7.044374942779541
    4. '(' → logprob: -7.919374942779541
    5. '_' → logprob: -9.5443754196167
    6. ')' → logprob: -10.6693754196167
    7. '(s' → logprob: -11.1693754196167
    8. '()' → logprob: -11.4193754196167
    9. '   ' → logprob: -11.5443754196167
    10. 's' → logprob: -12.4193754196167

Token 97: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.005234952084720135
    2. 'get' → logprob: -5.255234718322754
    3. '(get' → logprob: -14.630234718322754
    4. '_get' → logprob: -14.880234718322754
    5. '	get' → logprob: -15.880234718322754
    6. '=get' → logprob: -16.13023567199707
    7. ' ' → logprob: -17.00523567199707
    8. '[get' → logprob: -17.25523567199707
    9. ' g' → logprob: -17.75523567199707
    10. '.get' → logprob: -18.13023567199707

Token 98: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.0009244420798495412
    2. '_' → logprob: -7.000924587249756
    3. '_n' → logprob: -12.125924110412598
    4. '_get' → logprob: -12.500924110412598
    5. ' _' → logprob: -13.000924110412598
    6. '_NEXT' → logprob: -15.250924110412598
    7. ')_' → logprob: -15.250924110412598
    8. '__' → logprob: -15.375924110412598
    9. '_weather' → logprob: -15.500924110412598
    10. '_ne' → logprob: -16.750925064086914

Token 99: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.00027063372544944286
    2. '_' → logprob: -8.25027084350586
    3. '_we' → logprob: -12.12527084350586
    4. '_w' → logprob: -13.25027084350586
    5. '_next' → logprob: -14.00027084350586
    6. ' _' → logprob: -14.25027084350586
    7. '_weapon' → logprob: -15.87527084350586
    8. '_week' → logprob: -15.87527084350586
    9. '_water' → logprob: -16.75027084350586
    10. '"_' → logprob: -17.25027084350586

Token 100: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -15.125059127807617
    4. '(next' → logprob: -16.625059127807617
    5. '(
' → logprob: -19.000059127807617
    6. 's' → logprob: -19.250059127807617
    7. '(n' → logprob: -19.500059127807617
    8. ' ' → logprob: -19.875059127807617
    9. '(ss' → logprob: -20.625059127807617
    10. '(f' → logprob: -21.000059127807617

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02326062321662903
    2. ')
' → logprob: -3.7732605934143066
    3. '   ' → logprob: -11.273261070251465
    4. ')
' → logprob: -13.148261070251465
    5. ' )' → logprob: -15.148261070251465
    6. ' ' → logprob: -16.52326011657715
    7. ' )
' → logprob: -16.77326011657715
    8. ')

' → logprob: -16.77326011657715
    9. ')`
' → logprob: -18.64826011657715
    10. '),' → logprob: -19.14826011657715

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3527015149593353
    2. '
' → logprob: -1.2277015447616577
    3. '    
' → logprob: -6.352701663970947
    4. 'output' → logprob: -6.352701663970947
    5. ' output' → logprob: -8.352701187133789
    6. ' 
' → logprob: -8.977701187133789
    7. '  
' → logprob: -9.102701187133789
    8. ')' → logprob: -9.727701187133789
    9. '
' → logprob: -10.102701187133789
    10. '\n' → logprob: -10.227701187133789

Token 103: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.003290471388027072
    2. ' output' → logprob: -5.75329065322876
    3. '   ' → logprob: -9.128290176391602
    4. '	output' → logprob: -13.253290176391602
    5. '
' → logprob: -13.503290176391602
    6. '(output' → logprob: -15.003290176391602
    7. '_output' → logprob: -15.378290176391602
    8. ' ' → logprob: -16.1282901763916
    9. '$output' → logprob: -16.2532901763916
    10. '.output' → logprob: -16.3782901763916

Token 104: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.125000953674316
    3. '_results' → logprob: -15.750000953674316
    4. '_output' → logprob: -16.375
    5. ' _' → logprob: -16.75
    6. '_Result' → logprob: -16.75
    7. '_res' → logprob: -17.125
    8. '_RESULT' → logprob: -17.25
    9. 'result' → logprob: -19.125
    10. '```' → logprob: -19.375

Token 105: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.008618474006652832
    2. '(' → logprob: -4.758618354797363
    3. ' (' → logprob: -13.133618354797363
    4. '(
' → logprob: -14.758618354797363
    5. '(not' → logprob: -14.883618354797363
    6. '(n' → logprob: -14.883618354797363
    7. ' ' → logprob: -15.758618354797363
    8. '('' → logprob: -16.50861930847168
    9. '(parent' → logprob: -16.50861930847168
    10. '("("' → logprob: -16.50861930847168

Token 106: '_weather' (ID: 170154)
  Prédit: '_weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -1.9361264946837764e-07
    2. '_we' → logprob: -15.875
    3. '_' → logprob: -17.75
    4. '_weapon' → logprob: -18.625
    5. '_w' → logprob: -18.75
    6. 'weather' → logprob: -19.25
    7. '_water' → logprob: -20.125
    8. '_week' → logprob: -20.125
    9. 'Weather' → logprob: -20.375
    10. '(weather' → logprob: -20.5

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.250004768371582
    3. ' )' → logprob: -16.2500057220459
    4. '()' → logprob: -17.0000057220459
    5. ')

' → logprob: -17.6250057220459
    6. '())' → logprob: -18.3750057220459
    7. '))' → logprob: -19.0000057220459
    8. '   ' → logprob: -19.2500057220459
    9. ')`' → logprob: -19.2500057220459
    10. '`)' → logprob: -19.3750057220459

Token 108: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19363996386528015
    2. '
' → logprob: -1.9436399936676025
    3. '\n' → logprob: -3.6936399936676025
    4. '<|end|>' → logprob: -5.818639755249023
    5. '_' → logprob: -6.943639755249023
    6. '\' → logprob: -6.943639755249023
    7. '```' → logprob: -7.068639755249023
    8. 'main' → logprob: -7.193639755249023
    9. ' if' → logprob: -7.568639755249023
    10. '#' → logprob: -8.068639755249023

Token 109: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017147827020380646
    2. '(' → logprob: -9.125171661376953
    3. '()
' → logprob: -9.750171661376953
    4. '()

' → logprob: -13.875171661376953
    5. ' ()' → logprob: -14.000171661376953
    6. '()`' → logprob: -14.125171661376953
    7. '();' → logprob: -14.750171661376953
    8. '(
' → logprob: -14.875171661376953
    9. '()<' → logprob: -15.625171661376953
    10. '()\' → logprob: -15.875171661376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 47.66%
Précision adaptée (1ère position): 53.27%
Précision (top 10): 86.92%
================================================================================
