================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def precompute_factorials(max_n, mod):
    factorial = [1] * (max_n + 1)
    for idx in range(2, max_n + 1):
        factorial[idx] = factorial[idx - 1] * idx % mod
    return factorial

def precompute_inverse_factorials(factorial, mod):
    max_idx = len(factorial) - 1
    inv_factorial = list(factorial)
    inv_factorial[max_idx] = pow(factorial[max_idx], mod - 2, mod)
    for idx in range(max_idx - 1, -1, -1):
        inv_factorial[idx] = inv_factorial[idx + 1] * (idx + 1) % mod
    return inv_factorial

def compute_binomial_coefficient(factorial, inv_factorial, n_val, r_val, mod):
    return factorial[n_val] * inv_factorial[r_val] % mod * inv_factorial[n_val - r_val] % mod

input_n, input_a, input_b, input_k = map(int, input().split())
mod_const = 998244353
factorial_arr = precompute_factorials(input_n, mod_const)
inv_factorial_arr = precompute_inverse_factorials(factorial_arr, mod_const)
result_counter = 0
for trial_a in range(min(input_n + 1, input_k // input_a + 1)):
    total_a = input_a * trial_a
    if total_a > input_k:
        continue
    remainder_b = input_k - total_a
    if remainder_b % input_b != 0:
        continue
    trial_b = remainder_b // input_b
    if trial_b > input_n:
        continue
    combinations_a = compute_binomial_coefficient(factorial_arr, inv_factorial_arr, input_n, trial_a, mod_const)
    combinations_b = compute_binomial_coefficient(factorial_arr, inv_factorial_arr, input_n, trial_b, mod_const)
    result_counter = (result_counter + combinations_a * combinations_b) % mod_const
print(result_counter)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' pre' (ID: 876)
  → Token d'amorce (pas de prédiction)

Token 2: 'compute' (ID: 54521)
  → Token d'amorce (pas de prédiction)

Token 3: '_factor' (ID: 43757)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0018441593274474144
    2. '(' → logprob: -6.6268439292907715
    3. '_s' → logprob: -8.87684440612793
    4. '```' → logprob: -9.75184440612793
    5. 'def' → logprob: -10.12684440612793
    6. '_values' → logprob: -10.50184440612793
    7. '_(' → logprob: -10.87684440612793
    8. '(_' → logprob: -10.87684440612793
    9. '_:' → logprob: -11.12684440612793
    10. '_p' → logprob: -11.62684440612793

Token 4: 'ials' (ID: 16596)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0646790936589241
    2. '_' → logprob: -2.8146791458129883
    3. '_s' → logprob: -6.439679145812988
    4. '```' → logprob: -7.814679145812988
    5. 'izers' → logprob: -9.064679145812988
    6. 'ization' → logprob: -9.439679145812988
    7. 'ials' → logprob: -9.689679145812988
    8. 'izer' → logprob: -9.814679145812988
    9. 'z' → logprob: -9.939679145812988
    10. '_size' → logprob: -10.439679145812988

Token 5: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07946303486824036
    2. '_' → logprob: -2.829463005065918
    3. '_:' → logprob: -4.954463005065918
    4. '(:' → logprob: -5.579463005065918
    5. '```' → logprob: -5.954463005065918
    6. '(_:' → logprob: -6.704463005065918
    7. '():' → logprob: -6.704463005065918
    8. '(_' → logprob: -7.329463005065918
    9. ':' → logprob: -8.329463005065918
    10. '(n' → logprob: -9.204463005065918

Token 6: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4623848497867584
    2. '_factor' → logprob: -1.212384819984436
    3. '_n' → logprob: -3.0873849391937256
    4. '_value' → logprob: -4.9623847007751465
    5. '):' → logprob: -5.3373847007751465
    6. ')_' → logprob: -5.7123847007751465
    7. '_number' → logprob: -5.8373847007751465
    8. '_size' → logprob: -5.8373847007751465
    9. '_)' → logprob: -6.2123847007751465
    10. ')' → logprob: -7.2123847007751465

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002194755943492055
    2. ':' → logprob: -6.252194881439209
    3. ')' → logprob: -8.87719440460205
    4. '```' → logprob: -10.25219440460205
    5. ''):' → logprob: -10.50219440460205
    6. '):
' → logprob: -10.87719440460205
    7. ' ):' → logprob: -11.62719440460205
    8. ',' → logprob: -11.87719440460205
    9. '**' → logprob: -12.25219440460205
    10. '():' → logprob: -12.37719440460205

Token 8: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9872852563858032
    2. ' mod' → logprob: -1.1122852563858032
    3. ' max' → logprob: -2.4872851371765137
    4. ' cache' → logprob: -2.8622851371765137
    5. ' modulus' → logprob: -3.3622851371765137
    6. 'max' → logprob: -3.4872851371765137
    7. 'factor' → logprob: -3.6122851371765137
    8. 'cache' → logprob: -4.237285137176514
    9. '):' → logprob: -4.362285137176514
    10. ' factorial' → logprob: -4.362285137176514

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012489237124100327
    2. ':' → logprob: -6.876248836517334
    3. ')' → logprob: -8.501249313354492
    4. ''):' → logprob: -11.876249313354492
    5. '```' → logprob: -13.376249313354492
    6. '):
' → logprob: -13.501249313354492
    7. '**' → logprob: -14.501249313354492
    8. '"):' → logprob: -14.751249313354492
    9. '`:' → logprob: -14.876249313354492
    10. ' ):' → logprob: -15.001249313354492

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008204689365811646
    2. '   ' → logprob: -8.25082015991211
    3. '():' → logprob: -8.50082015991211
    4. '```' → logprob: -8.50082015991211
    5. '`:' → logprob: -9.87582015991211
    6. '':' → logprob: -10.62582015991211
    7. '":' → logprob: -10.75082015991211
    8. '):' → logprob: -11.25082015991211
    9. '_:' → logprob: -11.37582015991211
    10. ' :' → logprob: -12.00082015991211

Token 11: ' factorial' (ID: 111204)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09660070389509201
    2. '```' → logprob: -2.4716007709503174
    3. '``' → logprob: -6.221600532531738
    4. ' factorial' → logprob: -6.346600532531738
    5. 'f' → logprob: -6.721600532531738
    6. 'factor' → logprob: -6.721600532531738
    7. '       ' → logprob: -8.346600532531738
    8. 'fact' → logprob: -8.346600532531738
    9. '    
' → logprob: -8.471600532531738
    10. '_factor' → logprob: -8.721600532531738

Token 12: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011434458196163177
    2. '_s' → logprob: -4.511434555053711
    3. '_' → logprob: -8.261434555053711
    4. '(s' → logprob: -9.511434555053711
    5. '[s' → logprob: -10.636434555053711
    6. '[' → logprob: -11.511434555053711
    7. ' s' → logprob: -12.136434555053711
    8. '```' → logprob: -12.511434555053711
    9. '(' → logprob: -13.011434555053711
    10. ')' → logprob: -13.261434555053711

Token 13: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759813785552979
    2. '[' → logprob: -0.8259813785552979
    3. '1' → logprob: -10.450981140136719
    4. ' ' → logprob: -11.325981140136719
    5. '   ' → logprob: -14.950981140136719
    6. '[int' → logprob: -15.450981140136719
    7. '[n' → logprob: -16.70098114013672
    8. '```' → logprob: -16.70098114013672
    9. '[f' → logprob: -16.82598114013672
    10. ' ' → logprob: -17.07598114013672

Token 14: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -14.125003814697266
    4. '```' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.500003814697266
    6. ']' → logprob: -18.125003814697266
    7. '`' → logprob: -18.750003814697266
    8. '[' → logprob: -19.500003814697266
    9. ')' → logprob: -19.625003814697266
    10. '  ' → logprob: -19.875003814697266

Token 15: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43548229336738586
    2. ',' → logprob: -1.0604822635650635
    3. ' for' → logprob: -5.185482501983643
    4. ' ]' → logprob: -7.185482501983643
    5. 'for' → logprob: -9.310482025146484
    6. ',
' → logprob: -9.560482025146484
    7. ')' → logprob: -9.685482025146484
    8. ']*' → logprob: -9.810482025146484
    9. '   ' → logprob: -10.310482025146484
    10. ' ,' → logprob: -11.185482025146484

Token 16: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8407844305038452
    2. '[' → logprob: -1.2157844305038452
    3. ' for' → logprob: -1.8407844305038452
    4. 'for' → logprob: -2.9657845497131348
    5. '```' → logprob: -3.3407845497131348
    6. ']' → logprob: -5.090784549713135
    7. ')' → logprob: -5.465784549713135
    8. ',
' → logprob: -5.590784549713135
    9. '(' → logprob: -5.590784549713135
    10. '*' → logprob: -6.465784549713135

Token 17: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.007610413245856762
    2. ' (' → logprob: -4.882610321044922
    3. ' max' → logprob: -13.257610321044922
    4. '(' → logprob: -14.257610321044922
    5. '[max' → logprob: -14.257610321044922
    6. 'max' → logprob: -14.632610321044922
    7. '(len' → logprob: -15.757610321044922
    8. '(min' → logprob: -15.882610321044922
    9. '(m' → logprob: -16.507610321044922
    10. ' ' → logprob: -16.507610321044922

Token 18: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.841743303695694e-05
    2. ' max' → logprob: -9.25009822845459
    3. '(max' → logprob: -13.00009822845459
    4. '   ' → logprob: -18.125099182128906
    5. '	max' → logprob: -19.500099182128906
    6. ',max' → logprob: -19.625099182128906
    7. '[max' → logprob: -19.625099182128906
    8. 'n' → logprob: -19.875099182128906
    9. ' ' → logprob: -20.125099182128906
    10. '```' → logprob: -20.125099182128906

Token 19: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. ' _' → logprob: -15.875000953674316
    5. '+' → logprob: -16.500001907348633
    6. '_N' → logprob: -16.875001907348633
    7. '\' → logprob: -17.375001907348633
    8. ')_' → logprob: -17.875001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '_a' → logprob: -18.250001907348633

Token 20: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029752805829048157
    2. ' +' → logprob: -3.529752731323242
    3. ')' → logprob: -14.404752731323242
    4. '_' → logprob: -14.779752731323242
    5. '_plus' → logprob: -14.779752731323242
    6. '+
' → logprob: -15.029752731323242
    7. ' ' → logprob: -15.029752731323242
    8. ' plus' → logprob: -16.279752731323242
    9. '＋' → logprob: -16.654752731323242
    10. '+)' → logprob: -17.029752731323242

Token 21: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00360019039362669
    2. ' ' → logprob: -5.628600120544434
    3. '```' → logprob: -16.37860107421875
    4. '2' → logprob: -16.87860107421875
    5. '   ' → logprob: -17.75360107421875
    6. '7' → logprob: -18.37860107421875
    7. ')' → logprob: -18.87860107421875
    8. ' ' → logprob: -19.12860107421875
    9. '  ' → logprob: -19.25360107421875
    10. '`' → logprob: -20.25360107421875

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ')' → logprob: -19.000001907348633
    4. '```' → logprob: -19.875001907348633
    5. '2' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '１' → logprob: -21.250001907348633
    8. '`' → logprob: -21.750001907348633
    9. '۱' → logprob: -22.250001907348633
    10. '  ' → logprob: -22.875001907348633

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0219828002154827e-05
    2. ')
' → logprob: -11.500020027160645
    3. ' )' → logprob: -11.625020027160645
    4. ']' → logprob: -14.750020027160645
    5. '   ' → logprob: -15.125020027160645
    6. '`)' → logprob: -15.750020027160645
    7. '[' → logprob: -16.62502098083496
    8. '```' → logprob: -16.62502098083496
    9. '）' → logprob: -17.25002098083496
    10. '')' → logprob: -17.37502098083496

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41795963048934937
    2. ' for' → logprob: -1.9179596900939941
    3. 'for' → logprob: -2.042959690093994
    4. '
' → logprob: -2.792959690093994
    5. '```' → logprob: -6.292959690093994
    6. '    
' → logprob: -6.667959690093994
    7. '\n' → logprob: -8.167959213256836
    8. 'newline' → logprob: -9.042959213256836
    9. '	for' → logprob: -9.417959213256836
    10. '[' → logprob: -10.167959213256836

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.40995609760284424
    2. ' for' → logprob: -1.4099560976028442
    3. '   ' → logprob: -2.4099559783935547
    4. '
' → logprob: -6.284955978393555
    5. '```' → logprob: -8.534955978393555
    6. '\n' → logprob: -8.909955978393555
    7. '    
' → logprob: -9.159955978393555
    8. ' ' → logprob: -11.034955978393555
    9. ' 
' → logprob: -11.659955978393555
    10. '	for' → logprob: -12.034955978393555

Token 26: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01352393627166748
    2. 'i' → logprob: -4.888524055480957
    3. ' ' → logprob: -5.138524055480957
    4. '_' → logprob: -10.513524055480957
    5. ' _' → logprob: -12.513524055480957
    6. ' ‌' → logprob: -13.888524055480957
    7. ' ' → logprob: -14.388524055480957
    8. '	i' → logprob: -15.013524055480957
    9. ' `' → logprob: -15.638524055480957
    10. ')' → logprob: -15.763524055480957

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005487025715410709
    2. 'in' → logprob: -5.255486965179443
    3. ' ' → logprob: -8.505487442016602
    4. '  ' → logprob: -11.005487442016602
    5. ' i' → logprob: -11.755487442016602
    6. '   ' → logprob: -11.880487442016602
    7. '	in' → logprob: -11.880487442016602
    8. ',' → logprob: -13.005487442016602
    9. '_' → logprob: -13.130487442016602
    10. '_in' → logprob: -13.505487442016602

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029757322743535042
    2. 'range' → logprob: -3.529757261276245
    3. ' ' → logprob: -12.154757499694824
    4. '	range' → logprob: -14.029757499694824
    5. '1' → logprob: -15.154757499694824
    6. '(range' → logprob: -15.529757499694824
    7. ' in' → logprob: -15.654757499694824
    8. ' xrange' → logprob: -16.154756546020508
    9. '   ' → logprob: -17.154756546020508
    10. '_range' → logprob: -17.154756546020508

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006351164192892611
    2. ' (' → logprob: -7.875635147094727
    3. '1' → logprob: -8.375635147094727
    4. ' ' → logprob: -11.000635147094727
    5. '2' → logprob: -12.000635147094727
    6. '   ' → logprob: -14.625635147094727
    7. '(len' → logprob: -14.625635147094727
    8. '(max' → logprob: -15.625635147094727
    9. ')' → logprob: -15.750635147094727
    10. '```' → logprob: -15.875635147094727

Token 30: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003995884675532579
    2. '2' → logprob: -5.878995895385742
    3. ' ' → logprob: -7.128995895385742
    4. 'max' → logprob: -8.253995895385742
    5. '   ' → logprob: -9.128995895385742
    6. ' max' → logprob: -11.003995895385742
    7. '0' → logprob: -12.878995895385742
    8. ')' → logprob: -15.378995895385742
    9. '```' → logprob: -15.503995895385742
    10. '  ' → logprob: -15.878995895385742

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007654307410120964
    2. ' ,' → logprob: -4.882654190063477
    3. ',max' → logprob: -10.757654190063477
    4. '   ' → logprob: -11.257654190063477
    5. ' ' → logprob: -12.632654190063477
    6. '):' → logprob: -12.882654190063477
    7. ')' → logprob: -12.882654190063477
    8. ',len' → logprob: -13.132654190063477
    9. '    ' → logprob: -14.257654190063477
    10. ' ):' → logprob: -14.257654190063477

Token 32: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20141421258449554
    2. 'max' → logprob: -1.7014142274856567
    3. '	max' → logprob: -15.076414108276367
    4. 'len' → logprob: -15.201414108276367
    5. '(max' → logprob: -15.326414108276367
    6. ' len' → logprob: -16.576414108276367
    7. ' maxlength' → logprob: -17.576414108276367
    8. ' ' → logprob: -17.701414108276367
    9. '_max' → logprob: -17.951414108276367
    10. ',max' → logprob: -18.326414108276367

Token 33: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. ' _' → logprob: -15.125000953674316
    4. '```' → logprob: -16.5
    5. ')_' → logprob: -17.0
    6. ')' → logprob: -17.125
    7. '_i' → logprob: -17.375
    8. '_N' → logprob: -18.125
    9. '   ' → logprob: -18.75
    10. '-_' → logprob: -19.125

Token 34: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193464756011963
    2. '+' → logprob: -1.5019346475601196
    3. ' ' → logprob: -12.251935005187988
    4. ')' → logprob: -15.251935005187988
    5. '   ' → logprob: -15.501935005187988
    6. ' ' → logprob: -16.001934051513672
    7. ' +
' → logprob: -16.251934051513672
    8. ' )' → logprob: -17.876934051513672
    9. '    ' → logprob: -18.376934051513672
    10. '＋' → logprob: -18.376934051513672

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007608278188854456
    2. ' ' → logprob: -4.882608413696289
    3. '   ' → logprob: -13.882608413696289
    4. '```' → logprob: -14.007608413696289
    5. ')' → logprob: -15.007608413696289
    6. '  ' → logprob: -17.50760841369629
    7. ' ' → logprob: -17.50760841369629
    8. '_' → logprob: -18.13260841369629
    9. '۱' → logprob: -18.13260841369629
    10. '2' → logprob: -18.38260841369629

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '```' → logprob: -16.125003814697266
    4. '   ' → logprob: -17.250003814697266
    5. ')' → logprob: -17.875003814697266
    6. '2' → logprob: -18.250003814697266
    7. '+' → logprob: -19.437503814697266
    8. '۱' → logprob: -19.812503814697266
    9. '):
' → logprob: -20.000003814697266
    10. '-' → logprob: -20.125003814697266

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022166306152939796
    2. ')' → logprob: -6.752216815948486
    3. ':' → logprob: -6.877216815948486
    4. ' ):' → logprob: -11.377216339111328
    5. '):
' → logprob: -13.127216339111328
    6. '   ' → logprob: -14.752216339111328
    7. ',' → logprob: -15.252216339111328
    8. ']:' → logprob: -15.627216339111328
    9. ' ' → logprob: -16.377216339111328
    10. '():' → logprob: -16.502216339111328

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0421430766582489
    2. '    ' → logprob: -4.042142868041992
    3. '   ' → logprob: -4.792142868041992
    4. ' factorial' → logprob: -5.292142868041992
    5. ':' → logprob: -5.792142868041992
    6. 'factor' → logprob: -5.917142868041992
    7. '     
' → logprob: -7.167142868041992
    8. ' 
' → logprob: -7.292142868041992
    9. '        
' → logprob: -7.417142868041992
    10. ' ' → logprob: -7.917142868041992

Token 39: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.013524998910725117
    2. 'factor' → logprob: -4.388525009155273
    3. '   ' → logprob: -7.763525009155273
    4. ' factor' → logprob: -8.263525009155273
    5. '    ' → logprob: -8.763525009155273
    6. '    
' → logprob: -10.388525009155273
    7. '_factor' → logprob: -10.513525009155273
    8. ' ' → logprob: -10.763525009155273
    9. '       ' → logprob: -11.138525009155273
    10. '     
' → logprob: -11.263525009155273

Token 40: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.007613963447511196
    2. '[' → logprob: -4.8826141357421875
    3. '[i' → logprob: -13.257614135742188
    4. '```' → logprob: -13.507614135742188
    5. ' [' → logprob: -13.632614135742188
    6. '[...]' → logprob: -14.132614135742188
    7. '[index' → logprob: -14.757614135742188
    8. '[token' → logprob: -15.257614135742188
    9. '\[' → logprob: -15.257614135742188
    10. '   ' → logprob: -15.507614135742188

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0363617017865181
    2. '=' → logprob: -4.0363616943359375
    3. ' =' → logprob: -4.4113616943359375
    4. ' ]' → logprob: -5.4113616943359375
    5. ' ' → logprob: -7.0363616943359375
    6. ')' → logprob: -7.7863616943359375
    7. ']=' → logprob: -9.161361694335938
    8. '*' → logprob: -11.036361694335938
    9. '    ' → logprob: -12.161361694335938
    10. ' *=' → logprob: -12.536361694335938

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01604633405804634
    2. ' =' → logprob: -4.141046524047852
    3. '*=' → logprob: -11.766046524047852
    4. ' *=' → logprob: -12.641046524047852
    5. '*' → logprob: -14.891046524047852
    6. '=

' → logprob: -15.516046524047852
    7. ' ' → logprob: -15.641046524047852
    8. ']' → logprob: -16.64104652404785
    9. ']=' → logprob: -16.64104652404785
    10. '```' → logprob: -16.76604652404785

Token 43: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7005897760391235
    2. '(f' → logprob: -1.0755897760391235
    3. ' factorial' → logprob: -1.9505897760391235
    4. ' (' → logprob: -3.950589656829834
    5. 'fact' → logprob: -7.950589656829834
    6. '   ' → logprob: -8.075590133666992
    7. ' factor' → logprob: -8.200590133666992
    8. ' ' → logprob: -9.700590133666992
    9. '(' → logprob: -9.950590133666992
    10. '.factor' → logprob: -10.450590133666992

Token 44: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.79811754100956e-05
    2. '[' → logprob: -10.625038146972656
    3. 'idx' → logprob: -11.625038146972656
    4. ' idx' → logprob: -13.875038146972656
    5. '```' → logprob: -13.875038146972656
    6. '	idx' → logprob: -14.625038146972656
    7. '[
' → logprob: -14.625038146972656
    8. ' [' → logprob: -14.750038146972656
    9. '[i' → logprob: -15.500038146972656
    10. '(idx' → logprob: -15.625038146972656

Token 45: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012519190087914467
    2. ' -' → logprob: -4.387519359588623
    3. '[idx' → logprob: -12.137518882751465
    4. '[-' → logprob: -13.012518882751465
    5. '   ' → logprob: -14.012518882751465
    6. 'idx' → logprob: -15.012518882751465
    7. ' ' → logprob: -15.262518882751465
    8. '−' → logprob: -15.887518882751465
    9. '1' → logprob: -16.01251983642578
    10. '```' → logprob: -16.01251983642578

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.12603187561035
    4. '```' → logprob: -18.75103187561035
    5. '    ' → logprob: -19.00103187561035
    6. ' ' → logprob: -19.87603187561035
    7. '  ' → logprob: -19.87603187561035
    8. '１' → logprob: -20.37603187561035
    9. '	' → logprob: -20.50103187561035
    10. '<|end|>' → logprob: -20.75103187561035

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -18.750003814697266
    5. '<|end|>' → logprob: -19.375003814697266
    6. '  ' → logprob: -19.750003814697266
    7. '১' → logprob: -20.250003814697266
    8. '    ' → logprob: -20.375003814697266
    9. '۱' → logprob: -20.375003814697266
    10. '१' → logprob: -20.500003814697266

Token 48: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2268388569355011
    2. '*' → logprob: -1.6018388271331787
    3. ')' → logprob: -6.726839065551758
    4. ' ' → logprob: -9.101839065551758
    5. ']' → logprob: -9.351839065551758
    6. '`' → logprob: -11.351839065551758
    7. ' ' → logprob: -12.351839065551758
    8. '```' → logprob: -12.976839065551758
    9. '}' → logprob: -13.101839065551758
    10. ' `' → logprob: -13.601839065551758

Token 49: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11284733563661575
    2. ' *' → logprob: -2.237847328186035
    3. '   ' → logprob: -11.987847328186035
    4. '`' → logprob: -11.987847328186035
    5. ' ' → logprob: -12.487847328186035
    6. '**' → logprob: -12.487847328186035
    7. '```' → logprob: -13.237847328186035
    8. '  ' → logprob: -14.612847328186035
    9. '*
' → logprob: -14.612847328186035
    10. '    ' → logprob: -14.987847328186035

Token 50: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.3134217858314514
    2. 'idx' → logprob: -1.3134217262268066
    3. '(idx' → logprob: -9.563422203063965
    4. '	idx' → logprob: -10.188422203063965
    5. 'mod' → logprob: -11.063422203063965
    6. '[idx' → logprob: -11.688422203063965
    7. ' ' → logprob: -11.813422203063965
    8. ' mod' → logprob: -11.938422203063965
    9. '```' → logprob: -12.813422203063965
    10. '_idx' → logprob: -12.813422203063965

Token 51: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10024376213550568
    2. '%' → logprob: -2.3502438068389893
    3. ' ' → logprob: -10.72524356842041
    4. ' %
' → logprob: -12.35024356842041
    5. '%n' → logprob: -13.10024356842041
    6. ' %=' → logprob: -13.22524356842041
    7. ' ' → logprob: -13.47524356842041
    8. ' %#' → logprob: -14.10024356842041
    9. ')' → logprob: -14.22524356842041
    10. ')%' → logprob: -14.22524356842041

Token 52: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07946810871362686
    2. 'mod' → logprob: -2.579468011856079
    3. ' ' → logprob: -7.829468250274658
    4. ' ' → logprob: -8.9544677734375
    5. '(mod' → logprob: -10.7044677734375
    6. '	mod' → logprob: -12.0794677734375
    7. ' modul' → logprob: -12.8294677734375
    8. 'space' → logprob: -12.9544677734375
    9. '_mod' → logprob: -13.2044677734375
    10. ''' → logprob: -13.2044677734375

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5340151786804199
    2. '   ' → logprob: -0.9090151786804199
    3. '\n' → logprob: -5.65901517868042
    4. '    
' → logprob: -6.28401517868042
    5. '```' → logprob: -6.78401517868042
    6. ' 
' → logprob: -7.03401517868042
    7. '<|end|>' → logprob: -7.03401517868042
    8. 'return' → logprob: -7.15901517868042
    9. ' return' → logprob: -7.53401517868042
    10. '  
' → logprob: -8.034015655517578

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08529636263847351
    2. '
' → logprob: -2.585296392440796
    3. '    
' → logprob: -6.585296154022217
    4. '\n' → logprob: -6.835296154022217
    5. '```' → logprob: -7.085296154022217
    6. '<|end|>' → logprob: -7.210296154022217
    7. 'return' → logprob: -7.335296154022217
    8. ' return' → logprob: -7.835296154022217
    9. ' ' → logprob: -7.835296154022217
    10. ' 
' → logprob: -8.585296630859375

Token 55: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09247533977031708
    2. '
' → logprob: -3.342475414276123
    3. 'return' (adapté à ' return') → logprob: -3.842475414276123
    4. ' return' → logprob: -4.592475414276123
    5. '```' → logprob: -5.092475414276123
    6. '\n' → logprob: -5.467475414276123
    7. '    
' → logprob: -6.092475414276123
    8. ' ' → logprob: -6.342475414276123
    9. '	return' → logprob: -6.342475414276123
    10. '<|end|>' → logprob: -6.467475414276123

Token 56: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.018155328929424286
    2. 'factor' → logprob: -4.018155097961426
    3. ' ' → logprob: -12.643155097961426
    4. ' factor' → logprob: -13.393155097961426
    5. '_factor' → logprob: -15.018155097961426
    6. 'fact' → logprob: -15.768155097961426
    7. ' ' → logprob: -16.643156051635742
    8. '.factor' → logprob: -17.268156051635742
    9. '​' → logprob: -18.143156051635742
    10. '-factor' → logprob: -18.393156051635742

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6206026673316956
    2. '<|end|>' → logprob: -0.9956026673316956
    3. '```' → logprob: -2.995602607727051
    4. '

' → logprob: -4.245602607727051
    5. '#' → logprob: -4.745602607727051
    6. 'def' → logprob: -4.870602607727051
    7. '\n' → logprob: -5.620602607727051
    8. '[' → logprob: -6.245602607727051
    9. 'newline' → logprob: -6.370602607727051
    10. '\' → logprob: -6.745602607727051

Token 58: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07083506882190704
    2. '```' → logprob: -3.6958351135253906
    3. '

' → logprob: -3.9458351135253906
    4. '<|end|>' → logprob: -4.570835113525391
    5. 'def' → logprob: -4.820835113525391
    6. '#' → logprob: -5.945835113525391
    7. '[' → logprob: -7.195835113525391
    8. '' → logprob: -7.320835113525391
    9. '_' → logprob: -8.19583511352539
    10. '\' → logprob: -8.57083511352539

Token 59: ' pre' (ID: 876)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01766681671142578
    2. ' space' → logprob: -4.267666816711426
    3. ' compute' → logprob: -7.267666816711426
    4. ' pre' → logprob: -7.392666816711426
    5. ' calculate' → logprob: -7.642666816711426
    6. ' factorial' → logprob: -7.642666816711426
    7. '_' → logprob: -7.767666816711426
    8. ' ' → logprob: -8.392666816711426
    9. ' modular' → logprob: -9.642666816711426
    10. ' inverse' → logprob: -9.767666816711426

Token 60: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0032467509154230356
    2. 'dict' → logprob: -6.753246784210205
    3. 'computed' → logprob: -7.253246784210205
    4. 'serve' → logprob: -7.628246784210205
    5. 'd' → logprob: -8.378246307373047
    6. 'fix' → logprob: -8.628246307373047
    7. '_compute' → logprob: -8.628246307373047
    8. 'sum' → logprob: -9.503246307373047
    9. 'c' → logprob: -10.003246307373047
    10. '_' → logprob: -10.003246307373047

Token 61: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.14561910927295685
    2. '_in' → logprob: -2.7706191539764404
    3. '_inv' → logprob: -2.8956191539764404
    4. '_factor' → logprob: -4.770618915557861
    5. '_' → logprob: -5.020618915557861
    6. '_mod' → logprob: -6.270618915557861
    7. '_pow' → logprob: -9.27061939239502
    8. '_power' → logprob: -9.64561939239502
    9. '_ex' → logprob: -9.89561939239502
    10. '_comb' → logprob: -9.89561939239502

Token 62: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -8.149051427608356e-05
    2. '_' → logprob: -10.375081062316895
    3. '_mod' → logprob: -10.875081062316895
    4. 'factor' → logprob: -11.125081062316895
    5. '_fact' → logprob: -11.375081062316895
    6. ' factorial' → logprob: -13.250081062316895
    7. '_fac' → logprob: -14.125081062316895
    8. '_f' → logprob: -14.625081062316895
    9. 'Factor' → logprob: -14.625081062316895
    10. 's' → logprob: -15.000081062316895

Token 63: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -1.1637164789135568e-05
    2. 'als' → logprob: -11.625011444091797
    3. 'ial' → logprob: -13.125011444091797
    4. 'ails' → logprob: -15.375011444091797
    5. '```' → logprob: -15.500011444091797
    6. '[' → logprob: -16.750011444091797
    7. 'icals' → logprob: -17.375011444091797
    8. '   ' → logprob: -17.750011444091797
    9. '**' → logprob: -17.875011444091797
    10. '``' → logprob: -18.000011444091797

Token 64: '(f' (ID: 1526)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.16072508692741394
    2. '(' → logprob: -1.9107251167297363
    3. ' (' → logprob: -7.660725116729736
    4. '(next' → logprob: -12.160724639892578
    5. '```' → logprob: -12.535724639892578
    6. '(mod' → logprob: -13.160724639892578
    7. '("("' → logprob: -13.410724639892578
    8. '(def' → logprob: -13.410724639892578
    9. '(num' → logprob: -13.785724639892578
    10. '(m' → logprob: -13.785724639892578

Token 65: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.024354854598641396
    2. 'a' → logprob: -5.024354934692383
    3. 'act' → logprob: -5.274354934692383
    4. 'unction' → logprob: -5.649354934692383
    5. '_' → logprob: -6.274354934692383
    6. ')' → logprob: -6.399354934692383
    7. 'ac' → logprob: -6.774354934692383
    8. '_factor' → logprob: -7.149354934692383
    9. 'actory' → logprob: -7.399354934692383
    10. 'acto' → logprob: -8.024354934692383

Token 66: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.016090091317892075
    2. 'ial' → logprob: -4.141089916229248
    3. 'als' → logprob: -10.141090393066406
    4. '```' → logprob: -12.141090393066406
    5. 'al' → logprob: -12.891090393066406
    6. '_' → logprob: -12.891090393066406
    7. 'ialize' → logprob: -13.516090393066406
    8. 's' → logprob: -13.766090393066406
    9. 'i' → logprob: -14.141090393066406
    10. 'orial' → logprob: -14.516090393066406

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.157039049663581e-05
    2. '):' → logprob: -10.500051498413086
    3. ' ,' → logprob: -10.750051498413086
    4. ',max' → logprob: -13.875051498413086
    5. ')' → logprob: -14.250051498413086
    6. ',f' → logprob: -15.625051498413086
    7. 's' → logprob: -16.125051498413086
    8. ',size' → logprob: -16.375051498413086
    9. '‌,' → logprob: -16.500051498413086
    10. ',int' → logprob: -16.625051498413086

Token 68: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0020071491599082947
    2. 'mod' → logprob: -7.002007007598877
    3. ' max' → logprob: -7.002007007598877
    4. ')' → logprob: -9.627007484436035
    5. ',' → logprob: -10.627007484436035
    6. ' ' → logprob: -11.002007484436035
    7. ' n' → logprob: -11.377007484436035
    8. ' )' → logprob: -11.627007484436035
    9. ' def' → logprob: -12.127007484436035
    10. ' modulus' → logprob: -12.127007484436035

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004941754741594195
    2. ':' → logprob: -7.750494003295898
    3. ')' → logprob: -9.875494003295898
    4. ' ):' → logprob: -12.000494003295898
    5. ',' → logprob: -13.125494003295898
    6. '):
' → logprob: -14.250494003295898
    7. ']:' → logprob: -14.750494003295898
    8. ':**' → logprob: -14.750494003295898
    9. '>:' → logprob: -14.875494003295898
    10. ''):' → logprob: -15.125494003295898

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27695509791374207
    2. ' inverse' → logprob: -1.5269551277160645
    3. 'inverse' → logprob: -4.1519551277160645
    4. '    ' → logprob: -5.1519551277160645
    5. '_inverse' → logprob: -7.0269551277160645
    6. '```' → logprob: -7.9019551277160645
    7. '<|end|>' → logprob: -8.026954650878906
    8. 'Inverse' → logprob: -8.151954650878906
    9. '[' → logprob: -8.276954650878906
    10. ' factorial' → logprob: -8.651954650878906

Token 71: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6972190141677856
    2. ' inv' → logprob: -1.5722190141677856
    3. ' inverse' → logprob: -1.9472190141677856
    4. ' n' → logprob: -2.072218894958496
    5. 'inverse' → logprob: -4.322218894958496
    6. 'inv' → logprob: -4.947218894958496
    7. 'n' → logprob: -6.072218894958496
    8. '    ' → logprob: -6.447218894958496
    9. '```' → logprob: -7.447218894958496
    10. ' size' → logprob: -7.447218894958496

Token 72: '_idx' (ID: 15257)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00038777425652369857
    2. '_' → logprob: -7.875387668609619
    3. '_factor' → logprob: -12.125388145446777
    4. '_f' → logprob: -13.750388145446777
    5. '_N' → logprob: -14.750388145446777
    6. ' _' → logprob: -14.875388145446777
    7. '```' → logprob: -16.25038719177246
    8. '\' → logprob: -16.37538719177246
    9. '_i' → logprob: -16.87538719177246
    10. ')_' → logprob: -17.00038719177246

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004087066277861595
    2. '=' → logprob: -5.504086971282959
    3. '  ' → logprob: -13.004087448120117
    4. ')' → logprob: -13.254087448120117
    5. 's' → logprob: -13.629087448120117
    6. '   ' → logprob: -14.004087448120117
    7. ',' → logprob: -14.129087448120117
    8. ' ' → logprob: -14.379087448120117
    9. '_' → logprob: -14.504087448120117
    10. ' =
' → logprob: -14.754087448120117

Token 74: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.006724129430949688
    2. 'len' → logprob: -5.0067243576049805
    3. '[len' → logprob: -12.13172435760498
    4. '(len' → logprob: -12.88172435760498
    5. '=len' → logprob: -14.38172435760498
    6. '	len' → logprob: -15.25672435760498
    7. ',len' → logprob: -17.131723403930664
    8. '<len' → logprob: -17.631723403930664
    9. '   ' → logprob: -17.881723403930664
    10. 'leni' → logprob: -18.506723403930664

Token 75: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0007107630372047424
    2. '(' → logprob: -7.250710964202881
    3. 'factor' → logprob: -14.875710487365723
    4. ' (' → logprob: -15.625710487365723
    5. ' factorial' → logprob: -15.625710487365723
    6. '(
' → logprob: -17.00071144104004
    7. ')' → logprob: -17.12571144104004
    8. 'f' → logprob: -18.12571144104004
    9. '(F' → logprob: -18.75071144104004
    10. '(function' → logprob: -18.87571144104004

Token 76: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.0009181279456242919
    2. 'factor' → logprob: -7.125917911529541
    3. 'act' → logprob: -9.2509183883667
    4. '_factor' → logprob: -11.2509183883667
    5. '```' → logprob: -14.1259183883667
    6. ' factorial' → logprob: -14.5009183883667
    7. 'actoring' → logprob: -14.5009183883667
    8. '   ' → logprob: -14.5009183883667
    9. 'ac' → logprob: -14.8759183883667
    10. 'a' → logprob: -15.1259183883667

Token 77: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.01204864215105772
    2. 'al' → logprob: -4.637048721313477
    3. 'factor' → logprob: -7.137048721313477
    4. 'ials' → logprob: -7.262048721313477
    5. '   ' → logprob: -8.012048721313477
    6. ' factorial' → logprob: -9.137048721313477
    7. '  ' → logprob: -9.387048721313477
    8. '    ' → logprob: -9.762048721313477
    9. '           ' → logprob: -9.887048721313477
    10. '       ' → logprob: -10.512048721313477

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.507972572464496e-05
    2. ')-' → logprob: -10.00009536743164
    3. ' )' → logprob: -10.25009536743164
    4. '   ' → logprob: -12.12509536743164
    5. '-' → logprob: -12.62509536743164
    6. ' -' → logprob: -12.62509536743164
    7. 'def' → logprob: -14.62509536743164
    8. '`)' → logprob: -14.62509536743164
    9. '-)' → logprob: -15.00009536743164
    10. '')' → logprob: -15.00009536743164

Token 79: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07927761226892471
    2. '-' → logprob: -2.579277515411377
    3. ' ' → logprob: -8.079277992248535
    4. '   ' → logprob: -9.579277992248535
    5. ')' → logprob: -12.079277992248535
    6. 'def' → logprob: -13.954277992248535
    7. '  ' → logprob: -13.954277992248535
    8. '```' → logprob: -14.579277992248535
    9. '<|end|>' → logprob: -15.329277992248535
    10. '[' → logprob: -16.20427703857422

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.500009536743164
    4. '```' → logprob: -16.625009536743164
    5. '   ' → logprob: -18.125009536743164
    6. '
' → logprob: -19.875009536743164
    7. '１' → logprob: -19.875009536743164
    8. '۱' → logprob: -20.250009536743164
    9. '  ' → logprob: -20.375009536743164
    10. '

' → logprob: -20.375009536743164

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -14.250003814697266
    4. '```' → logprob: -15.375003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '2' → logprob: -17.500003814697266
    7. '۱' → logprob: -18.937503814697266
    8. '<|end|>' → logprob: -19.312503814697266
    9. '১' → logprob: -19.375003814697266
    10. '１' → logprob: -19.687503814697266

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.035406213253736496
    2. '   ' → logprob: -3.7854061126708984
    3. '    
' → logprob: -4.910406112670898
    4. '```' → logprob: -6.660406112670898
    5. ' 
' → logprob: -7.035406112670898
    6. '
' → logprob: -7.410406112670898
    7. '<|end|>' → logprob: -7.660406112670898
    8. '   
' → logprob: -7.910406112670898
    9. '  
' → logprob: -7.910406112670898
    10. '' → logprob: -8.410406112670898

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006675214972347021
    2. '    
' → logprob: -8.000667572021484
    3. '
' → logprob: -8.250667572021484
    4. 'inverse' → logprob: -10.500667572021484
    5. '```' → logprob: -10.875667572021484
    6. ',' → logprob: -11.750667572021484
    7. '   
' → logprob: -12.625667572021484
    8. ' inverse' → logprob: -13.500667572021484
    9. '    ' → logprob: -13.500667572021484
    10. '

' → logprob: -13.625667572021484

Token 84: ' inv' (ID: 1827)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40904557704925537
    2. 'inv' (adapté à ' inv') → logprob: -1.4090455770492554
    3. 'inverse' → logprob: -2.659045696258545
    4. ' inv' → logprob: -4.034045696258545
    5. ' inverse' → logprob: -5.909045696258545
    6. 'in' → logprob: -7.284045696258545
    7. '    
' → logprob: -9.159045219421387
    8. '    ' → logprob: -10.659045219421387
    9. '  ' → logprob: -11.034045219421387
    10. '```' → logprob: -11.159045219421387

Token 85: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0018361835973337293
    2. '_fact' → logprob: -6.37683629989624
    3. '_inverse' → logprob: -9.751835823059082
    4. '_' → logprob: -10.626835823059082
    5. ' =' → logprob: -10.876835823059082
    6. '_fac' → logprob: -11.251835823059082
    7. 'factor' → logprob: -11.751835823059082
    8. '_inv' → logprob: -12.001835823059082
    9. 'fact' → logprob: -13.501835823059082
    10. '=' → logprob: -14.001835823059082

Token 86: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.04506581649184227
    2. 'ial' → logprob: -3.1700658798217773
    3. 'als' → logprob: -6.670065879821777
    4. 's' → logprob: -8.170065879821777
    5. 'al' → logprob: -8.295065879821777
    6. '```' → logprob: -9.295065879821777
    7. '[' → logprob: -9.795065879821777
    8. '   ' → logprob: -9.920065879821777
    9. ' =' → logprob: -11.795065879821777
    10. '_' → logprob: -11.795065879821777

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009427884360775352
    2. '=' → logprob: -7.125942707061768
    3. 's' → logprob: -9.500943183898926
    4. '[' → logprob: -10.250943183898926
    5. ' ' → logprob: -10.625943183898926
    6. ' =[' → logprob: -12.875943183898926
    7. '  ' → logprob: -14.500943183898926
    8. ')' → logprob: -15.500943183898926
    9. '   ' → logprob: -15.750943183898926
    10. ']' → logprob: -16.12594223022461

Token 88: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.38687965273857117
    2. '[' → logprob: -1.1368796825408936
    3. ' ' → logprob: -11.886879920959473
    4. '[len' → logprob: -14.886879920959473
    5. ' ' → logprob: -15.136879920959473
    6. '[f' → logprob: -15.886879920959473
    7. '[int' → logprob: -15.886879920959473
    8. '[n' → logprob: -16.136878967285156
    9. '   ' → logprob: -16.886878967285156
    10. '[max' → logprob: -17.261878967285156

Token 89: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5968153476715088
    2. '([' → logprob: -1.0968153476715088
    3. '(f' → logprob: -2.596815347671509
    4. '(range' → logprob: -3.346815347671509
    5. '(
' → logprob: -6.47181510925293
    6. '[' → logprob: -7.22181510925293
    7. ')' → logprob: -7.72181510925293
    8. '()' → logprob: -7.84681510925293
    9. '=[' → logprob: -7.97181510925293
    10. ' =' → logprob: -7.97181510925293

Token 90: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.5843633413314819
    2. '[' → logprob: -1.584363341331482
    3. '_' → logprob: -2.4593634605407715
    4. ')' → logprob: -2.4593634605407715
    5. 'ac' → logprob: -3.5843634605407715
    6. '(' → logprob: -4.7093634605407715
    7. '_factor' → logprob: -5.3343634605407715
    8. 'actory' → logprob: -5.4593634605407715
    9. 'a' → logprob: -5.5843634605407715
    10. '   ' → logprob: -6.2093634605407715

Token 91: 'ial' (ID: 563)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5206087827682495
    2. '_' → logprob: -1.2706087827682495
    3. ')' → logprob: -2.520608901977539
    4. '_factor' → logprob: -3.770608901977539
    5. '(' → logprob: -5.270608901977539
    6. ']' → logprob: -5.895608901977539
    7. '[
' → logprob: -6.020608901977539
    8. '_[' → logprob: -6.145608901977539
    9. ')_' → logprob: -6.645608901977539
    10. '   ' → logprob: -7.020608901977539

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012490430381149054
    2. '[::-' → logprob: -7.001248836517334
    3. ')
' → logprob: -8.501249313354492
    4. ' )' → logprob: -10.376249313354492
    5. ')
' → logprob: -11.126249313354492
    6. '[:]' → logprob: -11.126249313354492
    7. '```' → logprob: -11.126249313354492
    8. '[' → logprob: -12.001249313354492
    9. ')

' → logprob: -12.251249313354492
    10. '(' → logprob: -12.376249313354492

Token 93: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07062637805938721
    2. '[' → logprob: -4.070626258850098
    3. '
' → logprob: -4.320626258850098
    4. ' 
' → logprob: -4.570626258850098
    5. '' → logprob: -5.320626258850098
    6. '  
' → logprob: -5.320626258850098
    7. '   ' → logprob: -6.070626258850098
    8. '   
' → logprob: -6.320626258850098
    9. '    
' → logprob: -6.320626258850098
    10. '[:]' → logprob: -6.445626258850098

Token 94: ' inv' (ID: 1827)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25659260153770447
    2. '[' → logprob: -1.7565926313400269
    3. '[-' → logprob: -4.006592750549316
    4. '
' → logprob: -4.506592750549316
    5. '[
' → logprob: -5.631592750549316
    6. '   ' → logprob: -5.631592750549316
    7. '' → logprob: -6.006592750549316
    8. '[:]' → logprob: -6.006592750549316
    9. '  
' → logprob: -6.506592750549316
    10. '[::-' → logprob: -6.756592750549316

Token 95: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0069539425894618034
    2. '_' → logprob: -5.256953716278076
    3. '[' → logprob: -7.256953716278076
    4. '[_' → logprob: -8.381954193115234
    5. '_fac' → logprob: -8.631954193115234
    6. '_fact' → logprob: -8.756954193115234
    7. ' _' → logprob: -9.256954193115234
    8. '
' → logprob: -10.131954193115234
    9. '```' → logprob: -10.131954193115234
    10. '   ' → logprob: -10.256954193115234

Token 96: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.07741601020097733
    2. 'atorial' → logprob: -3.077415943145752
    3. 'ial' → logprob: -4.327415943145752
    4. 'actor' → logprob: -4.577415943145752
    5. '_factor' → logprob: -6.702415943145752
    6. 'cial' → logprob: -6.827415943145752
    7. '[' → logprob: -7.202415943145752
    8. 'ator' → logprob: -7.577415943145752
    9. ' factorial' → logprob: -7.702415943145752
    10. '_al' → logprob: -8.70241641998291

Token 97: '[max' (ID: 84690)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.48488539457321167
    2. '[' → logprob: -0.9848853945732117
    3. '[max' → logprob: -5.359885215759277
    4. '[:]' → logprob: -5.609885215759277
    5. '[len' → logprob: -6.734885215759277
    6. ' ' → logprob: -8.234885215759277
    7. '```' → logprob: -8.484885215759277
    8. '[::-' → logprob: -8.734885215759277
    9. '   ' → logprob: -8.984885215759277
    10. ' =' → logprob: -9.234885215759277

Token 98: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.273621405242011e-05
    2. '_' → logprob: -11.000032424926758
    3. '_idxs' → logprob: -12.125032424926758
    4. '_IDX' → logprob: -12.500032424926758
    5. '_i' → logprob: -12.875032424926758
    6. '_x' → logprob: -14.125032424926758
    7. '_factor' → logprob: -14.375032424926758
    8. '_id' → logprob: -14.500032424926758
    9. '	idx' → logprob: -14.625032424926758
    10. '_ix' → logprob: -14.875032424926758

Token 99: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5281476974487305
    2. ']' → logprob: -1.0281476974487305
    3. ' )' → logprob: -3.9031476974487305
    4. ' ]' → logprob: -3.9031476974487305
    5. ' ' → logprob: -5.2781476974487305
    6. '**' → logprob: -5.6531476974487305
    7. ' =' → logprob: -7.1531476974487305
    8. '=' → logprob: -7.2781476974487305
    9. '-' → logprob: -7.9031476974487305
    10. '   ' → logprob: -8.40314769744873

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009670860134065151
    2. '=' → logprob: -4.759670734405518
    3. ' ' → logprob: -7.009670734405518
    4. ' ^=' → logprob: -10.384671211242676
    5. ')' → logprob: -10.884671211242676
    6. '**' → logprob: -11.009671211242676
    7. ' =
' → logprob: -11.134671211242676
    8. ' **' → logprob: -11.509671211242676
    9. '<|end|>' → logprob: -11.634671211242676
    10. 'pow' → logprob: -11.759671211242676

Token 101: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3869066536426544
    2. ' pow' → logprob: -1.136906623840332
    3. '1' → logprob: -11.011906623840332
    4. '(pow' → logprob: -11.011906623840332
    5. '   ' → logprob: -13.386906623840332
    6. ' ' → logprob: -14.761906623840332
    7. '_pow' → logprob: -14.886906623840332
    8. 'p' → logprob: -16.01190757751465
    9. 'Pow' → logprob: -16.01190757751465
    10. '.pow' → logprob: -16.63690757751465

Token 102: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3869307041168213
    2. '(' → logprob: -1.1369307041168213
    3. '(
' → logprob: -10.386930465698242
    4. '(inv' → logprob: -10.886930465698242
    5. '(

' → logprob: -12.761930465698242
    6. ' (' → logprob: -13.636930465698242
    7. '(fi' → logprob: -14.261930465698242
    8. '```' → logprob: -14.511930465698242
    9. '(F' → logprob: -14.886930465698242
    10. 'factor' → logprob: -15.136930465698242

Token 103: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.01181940920650959
    2. 'factor' → logprob: -4.511819362640381
    3. '_factor' → logprob: -7.386819362640381
    4. 'act' → logprob: -9.511819839477539
    5. ' factorial' → logprob: -10.636819839477539
    6. '   ' → logprob: -10.886819839477539
    7. '```' → logprob: -11.636819839477539
    8. 'a' → logprob: -12.386819839477539
    9. '-factor' → logprob: -12.511819839477539
    10. ')' → logprob: -12.636819839477539

Token 104: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.3647153377532959
    2. '_factor' → logprob: -1.864715337753296
    3. 'ial' → logprob: -1.989715337753296
    4. 'factor' → logprob: -4.739715576171875
    5. ')' → logprob: -6.739715576171875
    6. ' factorial' → logprob: -6.864715576171875
    7. 'rial' → logprob: -7.864715576171875
    8. 'l' → logprob: -7.989715576171875
    9. ',' → logprob: -8.114715576171875
    10. '[' → logprob: -8.114715576171875

Token 105: '[max' (ID: 84690)
  Prédit: '[max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -0.006429006345570087
    2. '[-' → logprob: -5.131429195404053
    3. '[' → logprob: -7.631429195404053
    4. '[
' → logprob: -12.131428718566895
    5. '(max' → logprob: -12.881428718566895
    6. '```' → logprob: -12.881428718566895
    7. ')' → logprob: -13.256428718566895
    8. ',max' → logprob: -13.631428718566895
    9. '[len' → logprob: -14.381428718566895
    10. ',' → logprob: -15.131428718566895

Token 106: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.319370302458992e-06
    2. 'idx' → logprob: -12.250005722045898
    3. '_factor' → logprob: -15.875005722045898
    4. '_idxs' → logprob: -16.3750057220459
    5. '	idx' → logprob: -16.5000057220459
    6. '_' → logprob: -16.8750057220459
    7. '_IDX' → logprob: -17.1250057220459
    8. 'Idx' → logprob: -17.6250057220459
    9. '_i' → logprob: -17.8750057220459
    10. '_index' → logprob: -18.7500057220459

Token 107: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.611323624383658e-05
    2. ' ,' → logprob: -10.000065803527832
    3. '`,' → logprob: -11.750065803527832
    4. '   ' → logprob: -12.375065803527832
    5. ')' → logprob: -13.500065803527832
    6. ',
' → logprob: -13.500065803527832
    7. ' ' → logprob: -13.875065803527832
    8. '```' → logprob: -14.250065803527832
    9. '	' → logprob: -14.375065803527832
    10. '‌,' → logprob: -14.625065803527832

Token 108: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.061909083276987076
    2. 'mod' → logprob: -3.5619091987609863
    3. ' -' → logprob: -3.9369091987609863
    4. '-' → logprob: -4.436909198760986
    5. '	mod' → logprob: -8.936908721923828
    6. ' ' → logprob: -9.561908721923828
    7. '-mod' → logprob: -10.561908721923828
    8. '(mod' → logprob: -10.686908721923828
    9. '   ' → logprob: -10.811908721923828
    10. '  ' → logprob: -11.686908721923828

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067154900170862675
    2. ' -' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.631715774536133
    4. '```' → logprob: -18.256715774536133
    5. ' ' → logprob: -19.631715774536133
    6. ')' → logprob: -19.756715774536133
    7. '−' → logprob: -19.756715774536133
    8. '–' → logprob: -19.881715774536133
    9. '  ' → logprob: -20.006715774536133
    10. '<|end|>' → logprob: -20.319215774536133

Token 110: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '-' → logprob: -14.625045776367188
    4. '۲' → logprob: -16.625045776367188
    5. '```' → logprob: -16.625045776367188
    6. '２' → logprob: -17.312545776367188
    7. ' -' → logprob: -17.312545776367188
    8. '  ' → logprob: -17.750045776367188
    9. '   ' → logprob: -17.875045776367188
    10. ')' → logprob: -17.875045776367188

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۲' → logprob: -15.875004768371582
    4. '２' → logprob: -16.5000057220459
    5. '

' → logprob: -17.2500057220459
    6. '```' → logprob: -17.3125057220459
    7. '-' → logprob: -17.7500057220459
    8. '₂' → logprob: -17.8125057220459
    9. '٢' → logprob: -18.0625057220459
    10. '  ' → logprob: -18.1250057220459

Token 112: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3488095998764038
    2. ',' → logprob: -1.2238095998764038
    3. '   ' → logprob: -9.348809242248535
    4. ' ' → logprob: -9.473809242248535
    5. ',
' → logprob: -9.473809242248535
    6. ' )' → logprob: -9.973809242248535
    7. ')
' → logprob: -10.223809242248535
    8. ' ,' → logprob: -10.723809242248535
    9. '	' → logprob: -12.973809242248535
    10. '```' → logprob: -12.973809242248535

Token 113: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.007002955302596092
    2. 'mod' → logprob: -5.132002830505371
    3. ')' → logprob: -6.882002830505371
    4. ' )' → logprob: -10.757002830505371
    5. '	mod' → logprob: -11.257002830505371
    6. ' 
' → logprob: -12.132002830505371
    7. '(mod' → logprob: -13.007002830505371
    8. '```' → logprob: -13.382002830505371
    9. ' ' → logprob: -13.507002830505371
    10. '_mod' → logprob: -14.382002830505371

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003187339985743165
    2. ')
' → logprob: -5.75318717956543
    3. ' )' → logprob: -12.37818717956543
    4. ')
' → logprob: -12.87818717956543
    5. '   ' → logprob: -13.87818717956543
    6. ')

' → logprob: -14.12818717956543
    7. ' ' → logprob: -14.75318717956543
    8. ')`' → logprob: -14.87818717956543
    9. ')\' → logprob: -15.87818717956543
    10. ' )
' → logprob: -17.12818717956543

Token 115: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01272306963801384
    2. '   ' → logprob: -4.512722969055176
    3. '    
' → logprob: -7.387722969055176
    4. '  
' → logprob: -8.137722969055176
    5. ' 
' → logprob: -8.512722969055176
    6. '\n' → logprob: -8.637722969055176
    7. ' for' → logprob: -9.012722969055176
    8. '
' → logprob: -9.762722969055176
    9. '' → logprob: -9.887722969055176
    10. '   
' → logprob: -10.387722969055176

Token 116: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00033034008811227977
    2. '   ' → logprob: -8.375329971313477
    3. '
' → logprob: -10.125329971313477
    4. '    
' → logprob: -10.375329971313477
    5. '\n' → logprob: -11.250329971313477
    6. '  
' → logprob: -12.250329971313477
    7. ' 
' → logprob: -12.750329971313477
    8. ' for' → logprob: -12.750329971313477
    9. '   
' → logprob: -13.500329971313477
    10. '

' → logprob: -13.625329971313477

Token 117: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.16938398778438568
    2. ' ' → logprob: -2.169384002685547
    3. ' max' → logprob: -3.419384002685547
    4. ' i' → logprob: -4.919384002685547
    5. ' _' → logprob: -6.919384002685547
    6. 'idx' → logprob: -8.294384002685547
    7. ' range' → logprob: -8.919384002685547
    8. 'max' → logprob: -10.044384002685547
    9. '	idx' → logprob: -10.669384002685547
    10. ' in' → logprob: -10.919384002685547

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013851166004315019
    2. ' ' → logprob: -6.87638521194458
    3. 'in' → logprob: -8.001384735107422
    4. '  ' → logprob: -11.876384735107422
    5. '   ' → logprob: -12.251384735107422
    6. ' i' → logprob: -13.876384735107422
    7. ' =' → logprob: -14.001384735107422
    8. '	in' → logprob: -14.126384735107422
    9. 'range' → logprob: -14.626384735107422
    10. '[::-' → logprob: -15.001384735107422

Token 119: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005055502522736788
    2. 'range' → logprob: -5.5050554275512695
    3. ' ' → logprob: -7.6300554275512695
    4. ' reversed' → logprob: -7.6300554275512695
    5. 're' → logprob: -13.13005542755127
    6. '	range' → logprob: -14.00505542755127
    7. '  ' → logprob: -14.50505542755127
    8. ' reverse' → logprob: -14.63005542755127
    9. ' max' → logprob: -14.63005542755127
    10. ' xrange' → logprob: -14.88005542755127

Token 120: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.000307575857732445
    2. '(' → logprob: -8.1253080368042
    3. ' (' → logprob: -11.6253080368042
    4. 'max' → logprob: -13.5003080368042
    5. '[max' → logprob: -14.8753080368042
    6. ' max' → logprob: -15.5003080368042
    7. '   ' → logprob: -15.8753080368042
    8. '(
' → logprob: -16.125307083129883
    9. '	max' → logprob: -16.125307083129883
    10. ' ' → logprob: -16.250307083129883

Token 121: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.6240566083070007e-06
    2. 'x' → logprob: -14.750001907348633
    3. '_ix' → logprob: -14.750001907348633
    4. '_x' → logprob: -15.500001907348633
    5. 'idx' → logprob: -15.875001907348633
    6. '_idxs' → logprob: -16.000001907348633
    7. '-' → logprob: -16.500001907348633
    8. '_IDX' → logprob: -16.500001907348633
    9. '_dx' → logprob: -17.875001907348633
    10. '_' → logprob: -18.000001907348633

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47470980882644653
    2. '-' → logprob: -0.9747098088264465
    3. ' ,' → logprob: -7.724709987640381
    4. ',' → logprob: -8.724709510803223
    5. ' ' → logprob: -10.724709510803223
    6. ',-' → logprob: -13.224709510803223
    7. ' -,' → logprob: -13.224709510803223
    8. '-,' → logprob: -13.349709510803223
    9. ' ,-' → logprob: -14.849709510803223
    10. '	' → logprob: -15.224709510803223

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -16.000059127807617
    4. '<|end|>' → logprob: -16.500059127807617
    5. '   ' → logprob: -16.750059127807617
    6. '
' → logprob: -17.000059127807617
    7. '  ' → logprob: -17.000059127807617
    8. '0' → logprob: -17.375059127807617
    9. '۱' → logprob: -17.750059127807617
    10. '‌' → logprob: -18.250059127807617

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '
' → logprob: -18.0
    4. '```' → logprob: -18.0
    5. '0' → logprob: -18.375
    6. '<|end|>' → logprob: -19.5
    7. '۱' → logprob: -19.75
    8. '

' → logprob: -20.25
    9. '১' → logprob: -20.375
    10. '2' → logprob: -20.4375

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007635258603841066
    2. ' ,' → logprob: -4.882635116577148
    3. ',-' → logprob: -11.257635116577148
    4. ',
' → logprob: -12.007635116577148
    5. '   ' → logprob: -12.382635116577148
    6. ' ' → logprob: -13.882635116577148
    7. ' ,-' → logprob: -13.882635116577148
    8. '‌,' → logprob: -14.007635116577148
    9. '0' → logprob: -14.132635116577148
    10. ',:,' → logprob: -15.007635116577148

Token 126: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18626005947589874
    2. '-' → logprob: -2.1862599849700928
    3. ' ' → logprob: -3.3112599849700928
    4. '0' → logprob: -3.9362599849700928
    5. '    ' → logprob: -7.186260223388672
    6. '   ' → logprob: -7.936260223388672
    7. '	' → logprob: -8.686260223388672
    8. '1' → logprob: -8.936260223388672
    9. '  ' → logprob: -9.186260223388672
    10. '<|end|>' → logprob: -10.686260223388672

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. ',' → logprob: -15.375009536743164
    4. '   ' → logprob: -16.125009536743164
    5. ':' → logprob: -16.250009536743164
    6. '```' → logprob: -16.250009536743164
    7. '<|end|>' → logprob: -17.750009536743164
    8. '  ' → logprob: -18.312509536743164
    9. '
' → logprob: -18.500009536743164
    10. '2' → logprob: -18.562509536743164

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016658965032547712
    2. ',-' → logprob: -6.501666069030762
    3. '-' → logprob: -9.001666069030762
    4. ' ,' → logprob: -10.751666069030762
    5. ' -' → logprob: -11.376666069030762
    6. ' ,-' → logprob: -12.251666069030762
    7. '   ' → logprob: -13.626666069030762
    8. ',
' → logprob: -14.251666069030762
    9. '1' → logprob: -15.126666069030762
    10. '```' → logprob: -16.126665115356445

Token 129: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1428331732749939
    2. ' -' → logprob: -2.0178332328796387
    3. ' ' → logprob: -9.76783275604248
    4. ',-' → logprob: -10.51783275604248
    5. ',' → logprob: -10.76783275604248
    6. '   ' → logprob: -10.76783275604248
    7. '  ' → logprob: -11.64283275604248
    8. '	' → logprob: -11.76783275604248
    9. ')' → logprob: -12.39283275604248
    10. '):
' → logprob: -12.51783275604248

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.500001907348633
    4. ')' → logprob: -17.750001907348633
    5. ',' → logprob: -19.000001907348633
    6. '  ' → logprob: -19.250001907348633
    7. '```' → logprob: -19.750001907348633
    8. '
' → logprob: -20.500001907348633
    9. '):
' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -21.000001907348633

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1726069450378418
    2. ',' → logprob: -2.047606945037842
    3. '):
' → logprob: -3.797606945037842
    4. ':' → logprob: -5.172606945037842
    5. '   ' → logprob: -7.422606945037842
    6. ')' → logprob: -8.297607421875
    7. '-' → logprob: -8.797607421875
    8. ' ):' → logprob: -8.797607421875
    9. ',-' → logprob: -9.547607421875
    10. ' ,' → logprob: -9.922607421875

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10859982669353485
    2. ':' → logprob: -2.858599901199341
    3. '   ' → logprob: -3.608599901199341
    4. '):' → logprob: -4.608599662780762
    5. ')' → logprob: -5.858599662780762
    6. '    ' → logprob: -6.108599662780762
    7. ' ' → logprob: -6.608599662780762
    8. '	' → logprob: -7.983599662780762
    9. '):
' → logprob: -8.483599662780762
    10. '`' → logprob: -8.858599662780762

Token 133: ' inv' (ID: 1827)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7027841210365295
    2. ' ' → logprob: -1.2027840614318848
    3. ''' → logprob: -3.0777840614318848
    4. ' inv' → logprob: -3.3277840614318848
    5. '    
' → logprob: -3.4527840614318848
    6. '     
' → logprob: -3.9527840614318848
    7. '    ' → logprob: -4.327784061431885
    8. '"' → logprob: -4.452784061431885
    9. '   ' → logprob: -4.577784061431885
    10. 'inv' (adapté à ' inv') → logprob: -4.952784061431885

Token 134: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.500015258789062
    3. '_fact' → logprob: -13.125015258789062
    4. '_fac' → logprob: -14.000015258789062
    5. '
' → logprob: -15.000015258789062
    6. '```' → logprob: -15.250015258789062
    7. '_factory' → logprob: -15.250015258789062
    8. '   ' → logprob: -15.500015258789062
    9. ' _' → logprob: -15.500015258789062
    10. 'factor' → logprob: -15.875015258789062

Token 135: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.2592320144176483
    2. 'al' → logprob: -1.6342320442199707
    3. 'orial' → logprob: -4.384232044219971
    4. 'atorial' → logprob: -4.634232044219971
    5. '_factor' → logprob: -5.384232044219971
    6. '_' → logprob: -6.134232044219971
    7. 'rial' → logprob: -6.759232044219971
    8. 'cial' → logprob: -7.134232044219971
    9. 'arial' → logprob: -7.759232044219971
    10. '[' → logprob: -7.884232044219971

Token 136: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.012574403546750546
    2. '[' → logprob: -4.387574195861816
    3. '[
' → logprob: -11.512574195861816
    4. '```' → logprob: -11.637574195861816
    5. '[max' → logprob: -12.637574195861816
    6. '[token' → logprob: -12.762574195861816
    7. '[index' → logprob: -12.887574195861816
    8. ' [' → logprob: -12.887574195861816
    9. ''[' → logprob: -13.012574195861816
    10. '`' → logprob: -13.137574195861816

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20349687337875366
    2. ')' → logprob: -2.0784969329833984
    3. '=' → logprob: -3.4534969329833984
    4. ' =' → logprob: -3.7034969329833984
    5. ']=' → logprob: -7.078496932983398
    6. ' ]' → logprob: -7.328496932983398
    7. ')=' → logprob: -7.953496932983398
    8. ' ' → logprob: -7.953496932983398
    9. ' )' → logprob: -8.453496932983398
    10. 's' → logprob: -9.203496932983398

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42871424555778503
    2. '=' → logprob: -1.0537142753601074
    3. ' *=' → logprob: -12.42871379852295
    4. ' ' → logprob: -12.92871379852295
    5. ')' → logprob: -13.42871379852295
    6. ' =
' → logprob: -13.92871379852295
    7. 's' → logprob: -14.05371379852295
    8. '"' → logprob: -14.42871379852295
    9. '=

' → logprob: -14.42871379852295
    10. '*=' → logprob: -14.55371379852295

Token 139: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.5906727313995361
    2. ' inv' → logprob: -0.9656727313995361
    3. '(inv' → logprob: -2.965672731399536
    4. ' (' → logprob: -4.340672492980957
    5. '(' → logprob: -7.715672492980957
    6. '(in' → logprob: -8.965672492980957
    7. '   ' → logprob: -10.090672492980957
    8. 'in' → logprob: -10.465672492980957
    9. '_inv' → logprob: -10.590672492980957
    10. ' ' → logprob: -10.965672492980957

Token 140: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0002584785979706794
    2. '_' → logprob: -8.375258445739746
    3. '_fact' → logprob: -11.625258445739746
    4. ' _' → logprob: -12.625258445739746
    5. 'factor' → logprob: -12.875258445739746
    6. 'o' → logprob: -13.125258445739746
    7. '_f' → logprob: -13.250258445739746
    8. '_fac' → logprob: -13.375258445739746
    9. '   ' → logprob: -13.875258445739746
    10. 'or' → logprob: -14.500258445739746

Token 141: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.5460377931594849
    2. 'al' → logprob: -2.0460376739501953
    3. 'cial' → logprob: -2.1710376739501953
    4. '_factor' → logprob: -2.6710376739501953
    5. '_' → logprob: -3.0460376739501953
    6. '[' → logprob: -4.171037673950195
    7. 'atorial' → logprob: -5.171037673950195
    8. 'orial' → logprob: -5.421037673950195
    9. '   ' → logprob: -5.546037673950195
    10. ' ial' → logprob: -5.546037673950195

Token 142: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0019461298361420631
    2. '[' → logprob: -6.251945972442627
    3. '[
' → logprob: -12.001946449279785
    4. 'idx' → logprob: -12.126946449279785
    5. '[next' → logprob: -13.501946449279785
    6. '[id' → logprob: -13.751946449279785
    7. ' [' → logprob: -14.126946449279785
    8. '[i' → logprob: -15.001946449279785
    9. '[int' → logprob: -15.126946449279785
    10. '[index' → logprob: -15.126946449279785

Token 143: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2322797179222107
    2. '[idx' → logprob: -1.7322797775268555
    3. '[' → logprob: -4.1072797775268555
    4. ' +' → logprob: -4.4822797775268555
    5. 'idx' → logprob: -6.4822797775268555
    6. '   ' → logprob: -8.232279777526855
    7. ']' → logprob: -8.732279777526855
    8. ' ' → logprob: -8.982279777526855
    9. 'x' → logprob: -9.232279777526855
    10. '1' → logprob: -9.357279777526855

Token 144: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015171191189438105
    2. ' ' → logprob: -6.501517295837402
    3. '   ' → logprob: -11.626517295837402
    4. '```' → logprob: -13.251517295837402
    5. '  ' → logprob: -14.251517295837402
    6. ']' → logprob: -14.251517295837402
    7. '<|end|>' → logprob: -14.626517295837402
    8. '    ' → logprob: -15.126517295837402
    9. '
' → logprob: -15.251517295837402
    10. ')' → logprob: -15.376517295837402

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001645644661039114
    2. ' ' → logprob: -8.750164985656738
    3. 'factor' → logprob: -13.000164985656738
    4. 'idx' → logprob: -14.000164985656738
    5. ')' → logprob: -14.125164985656738
    6. ']' → logprob: -14.500164985656738
    7. '   ' → logprob: -14.750164985656738
    8. '  ' → logprob: -15.375164985656738
    9. '```' → logprob: -15.375164985656738
    10. '<|end|>' → logprob: -15.500164985656738

Token 146: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1537414789199829
    2. '*' → logprob: -2.4037413597106934
    3. ')' → logprob: -3.0287413597106934
    4. '`' → logprob: -6.528741359710693
    5. ' ' → logprob: -7.153741359710693
    6. '   ' → logprob: -7.528741359710693
    7. '```' → logprob: -8.778741836547852
    8. '	' → logprob: -8.903741836547852
    9. ')*' → logprob: -8.903741836547852
    10. '"' → logprob: -9.278741836547852

Token 147: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6399092674255371
    2. '*' → logprob: -0.7649092674255371
    3. '`' → logprob: -5.014909267425537
    4. '```' → logprob: -8.889909744262695
    5. ' ' → logprob: -9.014909744262695
    6. '<|end|>' → logprob: -9.389909744262695
    7. ' `' → logprob: -9.514909744262695
    8. '"' → logprob: -10.014909744262695
    9. ''*' → logprob: -10.014909744262695
    10. '**' → logprob: -10.514909744262695

Token 148: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.4768657088279724
    2. ' (' → logprob: -0.9768657088279724
    3. '(' → logprob: -5.976865768432617
    4. 'idx' → logprob: -9.476865768432617
    5. ' idx' → logprob: -9.601865768432617
    6. '[idx' → logprob: -9.726865768432617
    7. '(
' → logprob: -11.601865768432617
    8. '(index' → logprob: -11.851865768432617
    9. ' ' → logprob: -11.976865768432617
    10. '   ' → logprob: -12.226865768432617

Token 149: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0004732102679554373
    2. ' idx' → logprob: -8.250473022460938
    3. '(idx' → logprob: -8.500473022460938
    4. '	idx' → logprob: -12.125473022460938
    5. '[idx' → logprob: -12.750473022460938
    6. '   ' → logprob: -16.375473022460938
    7. '_idx' → logprob: -16.625473022460938
    8. 'id' → logprob: -17.375473022460938
    9. ' (' → logprob: -17.750473022460938
    10. 'index' → logprob: -18.375473022460938

Token 150: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07892801612615585
    2. ' +' → logprob: -2.578927993774414
    3. '+
' → logprob: -10.703927993774414
    4. ' +
' → logprob: -11.328927993774414
    5. ' ' → logprob: -13.328927993774414
    6. '1' → logprob: -13.578927993774414
    7. '
' → logprob: -15.453927993774414
    8. ' 
' → logprob: -15.578927993774414
    9. '＋' → logprob: -15.828927993774414
    10. ' +
' → logprob: -16.203927993774414

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009148012613877654
    2. ' ' → logprob: -7.000914573669434
    3. ')' → logprob: -13.125914573669434
    4. '```' → logprob: -14.625914573669434
    5. '   ' → logprob: -14.875914573669434
    6. '  ' → logprob: -16.12591552734375
    7. ' 
' → logprob: -16.50091552734375
    8. '`' → logprob: -16.62591552734375
    9. '
' → logprob: -16.87591552734375
    10. '    ' → logprob: -17.50091552734375

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.500011444091797
    3. ')' → logprob: -14.625011444091797
    4. '```' → logprob: -15.875011444091797
    5. '   ' → logprob: -16.000011444091797
    6. '  ' → logprob: -17.250011444091797
    7. '
' → logprob: -17.625011444091797
    8. '`' → logprob: -18.000011444091797
    9. '    ' → logprob: -18.875011444091797
    10. '１' → logprob: -18.875011444091797

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031840058509260416
    2. ' )' → logprob: -5.753183841705322
    3. ')%' → logprob: -12.50318431854248
    4. ' %' → logprob: -14.12818431854248
    5. ' ' → logprob: -14.25318431854248
    6. '%' → logprob: -15.00318431854248
    7. ')
' → logprob: -15.25318431854248
    8. '   ' → logprob: -15.75318431854248
    9. ']' → logprob: -16.003183364868164
    10. '}' → logprob: -16.128183364868164

Token 154: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.002915788209065795
    2. '%' → logprob: -5.877915859222412
    3. ' ' → logprob: -10.002915382385254
    4. ')' → logprob: -10.502915382385254
    5. '	' → logprob: -11.502915382385254
    6. '
' → logprob: -11.752915382385254
    7. ' ' → logprob: -11.877915382385254
    8. '`' → logprob: -12.752915382385254
    9. ' 
' → logprob: -12.877915382385254
    10. ' %
' → logprob: -13.502915382385254

Token 155: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.11226370185613632
    2. 'mod' → logprob: -2.6122636795043945
    3. ' ' → logprob: -3.4872636795043945
    4. ''' → logprob: -7.2372636795043945
    5. '"' → logprob: -7.7372636795043945
    6. ' ' → logprob: -7.9872636795043945
    7. '`' → logprob: -8.362263679504395
    8. '```' → logprob: -8.362263679504395
    9. ' 
' → logprob: -9.362263679504395
    10. '	mod' → logprob: -10.612263679504395

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09981200098991394
    2. '   ' → logprob: -2.4748120307922363
    3. ' return' → logprob: -5.849812030792236
    4. '	return' → logprob: -6.099812030792236
    5. '    
' → logprob: -6.724812030792236
    6. ' 
' → logprob: -6.724812030792236
    7. 'return' → logprob: -6.849812030792236
    8. '\n' → logprob: -6.974812030792236
    9. '  
' → logprob: -7.599812030792236
    10. '
' → logprob: -8.349811553955078

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013534403406083584
    2. '
' → logprob: -4.5135345458984375
    3. 'return' → logprob: -7.2635345458984375
    4. ' return' → logprob: -7.3885345458984375
    5. '    
' → logprob: -7.5135345458984375
    6. '	return' → logprob: -7.6385345458984375
    7. ' 
' → logprob: -9.888534545898438
    8. '	
' → logprob: -10.513534545898438
    9. '  
' → logprob: -11.138534545898438
    10. '' → logprob: -11.513534545898438

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026840100064873695
    2. '   ' → logprob: -3.7768402099609375
    3. ' return' → logprob: -5.9018402099609375
    4. '
' → logprob: -7.5268402099609375
    5. '	return' → logprob: -8.526840209960938
    6. '```' → logprob: -9.776840209960938
    7. '    
' → logprob: -10.151840209960938
    8. ' ' → logprob: -11.651840209960938
    9. ':return' → logprob: -12.276840209960938
    10. ' 
' → logprob: -13.151840209960938

Token 159: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.07892151176929474
    2. 'inv' → logprob: -2.5789215564727783
    3. '(inv' → logprob: -10.8289213180542
    4. '_inv' → logprob: -11.5789213180542
    5. ' inverse' → logprob: -13.9539213180542
    6. 'inverse' → logprob: -14.2039213180542
    7. ' ' → logprob: -15.0789213180542
    8. 'in' → logprob: -15.5789213180542
    9. ' invi' → logprob: -15.5789213180542
    10. ' ' → logprob: -15.8289213180542

Token 160: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0002570481738075614
    2. '_' → logprob: -8.50025749206543
    3. '_fac' → logprob: -10.87525749206543
    4. '_fact' → logprob: -11.00025749206543
    5. '_f' → logprob: -11.50025749206543
    6. '_factory' → logprob: -13.12525749206543
    7. '_floor' → logprob: -14.62525749206543
    8. 'factor' → logprob: -14.87525749206543
    9. '_variable' → logprob: -15.00025749206543
    10. '```' → logprob: -15.25025749206543

Token 161: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7683903574943542
    2. 'ial' → logprob: -0.7683903574943542
    3. '_' → logprob: -3.768390417098999
    4. 'cial' → logprob: -4.01839017868042
    5. '_factor' → logprob: -4.76839017868042
    6. 't' → logprob: -5.01839017868042
    7. 'als' → logprob: -5.26839017868042
    8. 'ials' → logprob: -5.39339017868042
    9. '_al' → logprob: -6.51839017868042
    10. '_t' → logprob: -6.51839017868042

Token 162: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1172170639038086
    2. '<|end|>' → logprob: -2.2422170639038086
    3. '```' → logprob: -6.492217063903809
    4. '

' → logprob: -6.742217063903809
    5. '\n' → logprob: -6.992217063903809
    6. 'def' → logprob: -8.367217063903809
    7. '  
' → logprob: -9.117217063903809
    8. 'newline' → logprob: -9.367217063903809
    9. '<|end|>' → logprob: -9.367217063903809
    10. ' 
' → logprob: -9.492217063903809

Token 163: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28626498579978943
    2. '
' → logprob: -1.5362650156021118
    3. 'def' → logprob: -3.4112648963928223
    4. '
' → logprob: -8.28626537322998
    5. '```' → logprob: -8.66126537322998
    6. 'd' → logprob: -9.78626537322998
    7. '<|end|>' → logprob: -10.03626537322998
    8. '\n' → logprob: -10.03626537322998
    9. ' def' → logprob: -10.16126537322998
    10. '


' → logprob: -10.66126537322998

Token 164: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.8445773720741272
    2. ' bin' → logprob: -1.3445773124694824
    3. ' n' → logprob: -1.5945773124694824
    4. ' factorial' → logprob: -3.5945773124694824
    5. ' combine' → logprob: -3.9695773124694824
    6. ' mod' → logprob: -4.219577312469482
    7. ' comb' → logprob: -4.344577312469482
    8. ' ' → logprob: -4.469577312469482
    9. ' calculate' → logprob: -4.969577312469482
    10. ' combination' → logprob: -5.344577312469482

Token 165: '_bin' (ID: 53631)
  Prédit: '_comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.2848551869392395
    2. '_factor' → logprob: -2.0348551273345947
    3. '_bin' → logprob: -2.9098551273345947
    4. '_com' → logprob: -3.1598551273345947
    5. '_' → logprob: -4.034855365753174
    6. '_combo' → logprob: -7.159855365753174
    7. '(' → logprob: -7.909855365753174
    8. '_n' → logprob: -7.909855365753174
    9. '_co' → logprob: -8.659854888916016
    10. '_choose' → logprob: -9.534854888916016

Token 166: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.008429350331425667
    2. 'om' → logprob: -5.008429527282715
    3. '_' → logprob: -6.508429527282715
    4. '_coeff' → logprob: -9.258429527282715
    5. 'o' → logprob: -9.508429527282715
    6. '_coef' → logprob: -10.758429527282715
    7. 'omia' → logprob: -11.633429527282715
    8. 'omp' → logprob: -12.383429527282715
    9. ''om' → logprob: -12.883429527282715
    10. '_op' → logprob: -13.133429527282715

Token 167: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.05145180597901344
    2. '_coeff' → logprob: -3.3014519214630127
    3. '(' → logprob: -4.676451683044434
    4. '_coef' → logprob: -6.051451683044434
    5. '_' → logprob: -7.051451683044434
    6. '(_' → logprob: -7.551451683044434
    7. '_factor' → logprob: -8.426451683044434
    8. '_constant' → logprob: -12.176451683044434
    9. ' coefficient' → logprob: -12.676451683044434
    10. 'Coefficient' → logprob: -12.676451683044434

Token 168: 'efficient' (ID: 76593)
  Prédit: 'efficient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'efficient' → logprob: -0.1746639758348465
    2. 'eff' → logprob: -1.92466402053833
    3. 'ef' → logprob: -4.29966402053833
    4. 'def' → logprob: -8.299663543701172
    5. '   ' → logprob: -8.799663543701172
    6. '  ' → logprob: -9.424663543701172
    7. 'e' → logprob: -9.674663543701172
    8. '``' → logprob: -9.924663543701172
    9. 'fficient' → logprob: -10.299663543701172
    10. '```' → logprob: -10.799663543701172

Token 169: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025395924225449562
    2. '(n' → logprob: -3.7753958702087402
    3. '(max' → logprob: -6.15039587020874
    4. ' (' → logprob: -12.525396347045898
    5. '(num' → logprob: -13.150396347045898
    6. '(f' → logprob: -13.150396347045898
    7. '(
' → logprob: -13.525396347045898
    8. '(N' → logprob: -14.025396347045898
    9. '((' → logprob: -14.275396347045898
    10. '(k' → logprob: -14.525396347045898

Token 170: 'actor' (ID: 8428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23853373527526855
    2. 'u' → logprob: -1.9885337352752686
    3. 'o' → logprob: -3.7385337352752686
    4. '(u' → logprob: -4.613533973693848
    5. '(' → logprob: -4.738533973693848
    6. '(a' → logprob: -4.988533973693848
    7. 'i' → logprob: -5.113533973693848
    8. '_' → logprob: -5.488533973693848
    9. 'actor' → logprob: -5.738533973693848
    10. 'unction' → logprob: -5.988533973693848

Token 171: 'ial' (ID: 563)
  Prédit: 'omial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.5384029746055603
    2. 'ial' → logprob: -0.9134029746055603
    3. '_factor' → logprob: -5.413403034210205
    4. '[' → logprob: -6.163403034210205
    5. '_' → logprob: -6.413403034210205
    6. ',' → logprob: -6.663403034210205
    7. ')' → logprob: -6.913403034210205
    8. '```' → logprob: -6.913403034210205
    9. '(' → logprob: -7.288403034210205
    10. 'om' → logprob: -7.788403034210205

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019388488726690412
    2. ',f' → logprob: -9.00019359588623
    3. ' ,' → logprob: -10.12519359588623
    4. 's' → logprob: -11.00019359588623
    5. '(' → logprob: -12.62519359588623
    6. ')' → logprob: -13.50019359588623
    7. '[' → logprob: -13.62519359588623
    8. ',
' → logprob: -13.75019359588623
    9. ',n' → logprob: -14.00019359588623
    10. ',max' → logprob: -14.25019359588623

Token 173: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.4332076609134674
    2. 'inv' → logprob: -1.058207631111145
    3. 'inverse' → logprob: -6.3082075119018555
    4. ' inverse' → logprob: -6.5582075119018555
    5. '_inv' → logprob: -6.8082075119018555
    6. '_inverse' → logprob: -10.183207511901855
    7. ',' → logprob: -10.558207511901855
    8. ' 
' → logprob: -10.933207511901855
    9. '(inv' → logprob: -11.308207511901855
    10. ' ' → logprob: -11.683207511901855

Token 174: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.11292804032564163
    2. '_' → logprob: -2.2379281520843506
    3. '_f' → logprob: -9.86292839050293
    4. '_factory' → logprob: -11.36292839050293
    5. ')_' → logprob: -11.86292839050293
    6. ' _' → logprob: -12.48792839050293
    7. '```' → logprob: -12.61292839050293
    8. '_
' → logprob: -12.98792839050293
    9. '_fact' → logprob: -13.48792839050293
    10. '_fac' → logprob: -13.61292839050293

Token 175: 'ial' (ID: 563)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -1.3598670959472656
    2. ',' → logprob: -1.6098670959472656
    3. '_' → logprob: -1.6098670959472656
    4. 'al' → logprob: -2.6098670959472656
    5. '_,' → logprob: -2.6098670959472656
    6. 'atorial' → logprob: -2.7348670959472656
    7. 's' → logprob: -3.7348670959472656
    8. 'ial' → logprob: -3.8598670959472656
    9. ',_' → logprob: -3.9848670959472656
    10. 'icients' → logprob: -4.234867095947266

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.630610641877865e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',max' → logprob: -14.250006675720215
    4. ',n' → logprob: -15.375006675720215
    5. ')' → logprob: -15.875006675720215
    6. 's' → logprob: -17.0000057220459
    7. ',num' → logprob: -17.5000057220459
    8. ' ' → logprob: -17.5000057220459
    9. ',f' → logprob: -17.6250057220459
    10. ',

' → logprob: -17.6250057220459

Token 177: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.34881436824798584
    2. 'n' → logprob: -1.2238143682479858
    3. '   ' → logprob: -8.973814010620117
    4. '    ' → logprob: -9.598814010620117
    5. ' max' → logprob: -9.598814010620117
    6. 'max' → logprob: -10.098814010620117
    7. ' ' → logprob: -11.223814010620117
    8. 'k' → logprob: -11.473814010620117
    9. ' k' → logprob: -11.598814010620117
    10. '```' → logprob: -12.223814010620117

Token 178: '_val' (ID: 13694)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038384052459150553
    2. ' ,' → logprob: -7.8753838539123535
    3. ',
' → logprob: -14.000383377075195
    4. ' ' → logprob: -14.500383377075195
    5. ',n' → logprob: -14.500383377075195
    6. '‌,' → logprob: -14.750383377075195
    7. ')' → logprob: -14.875383377075195
    8. ',k' → logprob: -15.625383377075195
    9. 's' → logprob: -15.875383377075195
    10. ',

' → logprob: -15.875383377075195

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004965558764524758
    2. ' ,' → logprob: -7.6254963874816895
    3. ',n' → logprob: -13.250496864318848
    4. ')' → logprob: -13.375496864318848
    5. ' ' → logprob: -13.375496864318848
    6. '_,' → logprob: -13.500496864318848
    7. ',
' → logprob: -13.875496864318848
    8. 's' → logprob: -14.875496864318848
    9. ',

' → logprob: -16.00049591064453
    10. '1' → logprob: -16.25049591064453

Token 180: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6743009686470032
    2. ' k' → logprob: -0.9243009686470032
    3. ' r' → logprob: -2.7993009090423584
    4. 'r' → logprob: -3.4243009090423584
    5. ' ' → logprob: -9.049301147460938
    6. ' n' → logprob: -10.799301147460938
    7. ' m' → logprob: -10.924301147460938
    8. 'm' → logprob: -10.924301147460938
    9. '    ' → logprob: -11.049301147460938
    10. '```' → logprob: -11.299301147460938

Token 181: '_val' (ID: 13694)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6146581172943115
    2. '_val' → logprob: -1.8646581172943115
    3. '_' → logprob: -1.9896581172943115
    4. ')' → logprob: -2.4896581172943115
    5. ' ):' → logprob: -2.8646581172943115
    6. ' ' → logprob: -3.9896581172943115
    7. '   ' → logprob: -6.114658355712891
    8. ',' → logprob: -6.614658355712891
    9. ' )' → logprob: -6.739658355712891
    10. ')_' → logprob: -7.114658355712891

Token 182: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04550659656524658
    2. ',' → logprob: -3.545506477355957
    3. ')' → logprob: -4.170506477355957
    4. ' ):' → logprob: -9.045506477355957
    5. '):
' → logprob: -10.295506477355957
    6. ':' → logprob: -10.795506477355957
    7. ' ' → logprob: -12.295506477355957
    8. '   ' → logprob: -12.795506477355957
    9. ' ,' → logprob: -13.170506477355957
    10. ' )' → logprob: -13.545506477355957

Token 183: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.0022556488402187824
    2. 'mod' → logprob: -6.252255439758301
    3. ' ' → logprob: -8.3772554397583
    4. ' m' → logprob: -10.0022554397583
    5. '   ' → logprob: -11.2522554397583
    6. '    ' → logprob: -11.3772554397583
    7. ')' → logprob: -12.1272554397583
    8. ',' → logprob: -12.7522554397583
    9. '	mod' → logprob: -12.7522554397583
    10. ' )' → logprob: -13.3772554397583

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004663065075874329
    2. ')' → logprob: -5.379662990570068
    3. '):
' → logprob: -11.129663467407227
    4. ':' → logprob: -11.254663467407227
    5. ' ):' → logprob: -11.254663467407227
    6. ' ' → logprob: -13.879663467407227
    7. ',' → logprob: -15.379663467407227
    8. '   ' → logprob: -15.629663467407227
    9. ')：' → logprob: -16.004663467407227
    10. '=' → logprob: -16.129663467407227

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11191383004188538
    2. ':' → logprob: -2.7369139194488525
    3. '(' → logprob: -4.111913681030273
    4. ')' → logprob: -4.611913681030273
    5. ' ' → logprob: -5.361913681030273
    6. ' 
' → logprob: -5.986913681030273
    7. '    
' → logprob: -6.486913681030273
    8. '    ' → logprob: -6.736913681030273
    9. '<|end|>' → logprob: -6.861913681030273
    10. '):' → logprob: -7.236913681030273

Token 186: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13416114449501038
    2. ' ' → logprob: -3.1341612339019775
    3. ')' → logprob: -3.5091612339019775
    4. ':' → logprob: -4.009160995483398
    5. '    ' → logprob: -5.134160995483398
    6. '(' → logprob: -5.134160995483398
    7. ' return' → logprob: -5.509160995483398
    8. ' 
' → logprob: -5.509160995483398
    9. 'n' → logprob: -5.884160995483398
    10. ' if' → logprob: -5.884160995483398

Token 187: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7036389112472534
    2. ' factorial' → logprob: -0.8286389112472534
    3. ' (' → logprob: -2.953639030456543
    4. '(f' → logprob: -4.453639030456543
    5. ' factor' → logprob: -5.953639030456543
    6. '(' → logprob: -6.953639030456543
    7. '   ' → logprob: -7.828639030456543
    8. 'fact' → logprob: -7.953639030456543
    9. ' ' → logprob: -8.578639030456543
    10. '(
' → logprob: -9.828639030456543

Token 188: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.625009536743164
    3. '[r' → logprob: -14.500009536743164
    4. ' [' → logprob: -16.375009536743164
    5. '[
' → logprob: -16.750009536743164
    6. 'n' → logprob: -18.500009536743164
    7. '[N' → logprob: -18.875009536743164
    8. '[val' → logprob: -19.250009536743164
    9. '\[' → logprob: -19.500009536743164
    10. '```' → logprob: -19.500009536743164

Token 189: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -8.97155623533763e-05
    2. ' _' → logprob: -9.750089645385742
    3. '_' → logprob: -11.500089645385742
    4. '[_' → logprob: -12.375089645385742
    5. '_va' → logprob: -12.375089645385742
    6. ']_' → logprob: -13.250089645385742
    7. '[val' → logprob: -13.500089645385742
    8. 'val' → logprob: -13.750089645385742
    9. '_VAL' → logprob: -13.750089645385742
    10. ')_' → logprob: -14.000089645385742

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.037835580878891e-05
    2. ' ]' → logprob: -10.62505054473877
    3. ']*' → logprob: -10.62505054473877
    4. '   ' → logprob: -14.62505054473877
    5. ']
' → logprob: -14.75005054473877
    6. '*' → logprob: -15.75005054473877
    7. ' *' → logprob: -16.125049591064453
    8. ')' → logprob: -16.250049591064453
    9. ' ' → logprob: -16.375049591064453
    10. '']' → logprob: -16.625049591064453

Token 191: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1608857661485672
    2. '*' → logprob: -1.9108858108520508
    3. '   ' → logprob: -7.910885810852051
    4. ' ' → logprob: -8.66088581085205
    5. '`' → logprob: -10.66088581085205
    6. '    ' → logprob: -11.03588581085205
    7. ' *
' → logprob: -11.16088581085205
    8. '```' → logprob: -11.28588581085205
    9. '**' → logprob: -11.53588581085205
    10. '  ' → logprob: -11.66088581085205

Token 192: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.11380250006914139
    2. ' inv' → logprob: -2.238802433013916
    3. '(inv' → logprob: -6.988802433013916
    4. '_inv' → logprob: -10.488802909851074
    5. 'inverse' → logprob: -10.988802909851074
    6. ' ' → logprob: -12.488802909851074
    7. ' ' → logprob: -13.363802909851074
    8. ' inverse' → logprob: -13.738802909851074
    9. '.inv' → logprob: -13.863802909851074
    10. 'in' → logprob: -13.988802909851074

Token 193: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -3.2617008400848135e-05
    2. '_' → logprob: -11.375032424926758
    3. '_fac' → logprob: -11.500032424926758
    4. '_fact' → logprob: -12.625032424926758
    5. '*_' → logprob: -13.875032424926758
    6. '_factory' → logprob: -14.125032424926758
    7. '_val' → logprob: -14.250032424926758
    8. '```' → logprob: -14.375032424926758
    9. ')_' → logprob: -14.500032424926758
    10. '_FACTOR' → logprob: -14.625032424926758

Token 194: 'ial' (ID: 563)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.01912473700940609
    2. 'ial' → logprob: -4.894124507904053
    3. '_' → logprob: -5.269124507904053
    4. 'cial' → logprob: -5.894124507904053
    5. 'atorial' → logprob: -6.019124507904053
    6. 'al' → logprob: -8.019124984741211
    7. 'factor' → logprob: -8.394124984741211
    8. ' factorial' → logprob: -8.644124984741211
    9. '_of' → logprob: -9.519124984741211
    10. 'actor' → logprob: -10.769124984741211

Token 195: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.5048530030981055e-06
    2. 'r' → logprob: -14.250001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[n' → logprob: -15.375001907348633
    5. '	r' → logprob: -19.000001907348633
    6. '```' → logprob: -19.625001907348633
    7. '[
' → logprob: -19.875001907348633
    8. ' [' → logprob: -20.000001907348633
    9. '(r' → logprob: -20.625001907348633
    10. '   ' → logprob: -21.000001907348633

Token 196: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.375001907348633
    3. ' _' → logprob: -15.375001907348633
    4. ')_' → logprob: -15.625001907348633
    5. '_r' → logprob: -15.750001907348633
    6. '[val' → logprob: -16.625001907348633
    7. '_VAL' → logprob: -16.875001907348633
    8. '_v' → logprob: -17.000001907348633
    9. ']_' → logprob: -17.125001907348633
    10. '_va' → logprob: -17.125001907348633

Token 197: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008629843359813094
    2. ' ]' → logprob: -7.125863075256348
    3. '']' → logprob: -10.625863075256348
    4. '}' → logprob: -11.125863075256348
    5. ']*' → logprob: -12.375863075256348
    6. '"]' → logprob: -12.750863075256348
    7. '[' → logprob: -13.125863075256348
    8. '<|end|>' → logprob: -13.125863075256348
    9. '*' → logprob: -13.375863075256348
    10. ')' → logprob: -13.500863075256348

Token 198: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04107402637600899
    2. '*' → logprob: -4.416073799133301
    3. ' ' → logprob: -5.041073799133301
    4. '[' → logprob: -5.291073799133301
    5. '<|end|>' → logprob: -5.291073799133301
    6. '   ' → logprob: -5.541073799133301
    7. '    ' → logprob: -6.041073799133301
    8. '%' → logprob: -7.041073799133301
    9. '`' → logprob: -7.041073799133301
    10. ')' → logprob: -7.166073799133301

Token 199: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07937583327293396
    2. 'mod' → logprob: -2.579375743865967
    3. '`' → logprob: -9.079376220703125
    4. ' ' → logprob: -9.454376220703125
    5. ' ' → logprob: -9.579376220703125
    6. '(mod' → logprob: -9.579376220703125
    7. '```' → logprob: -10.079376220703125
    8. '"' → logprob: -10.329376220703125
    9. ''' → logprob: -10.329376220703125
    10. '	mod' → logprob: -10.954376220703125

Token 200: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3141874074935913
    2. '*' → logprob: -1.3141874074935913
    3. '   ' → logprob: -7.564187526702881
    4. '<|end|>' → logprob: -8.064187049865723
    5. ' ' → logprob: -10.189187049865723
    6. '  ' → logprob: -11.064187049865723
    7. ')' → logprob: -11.439187049865723
    8. ' ' → logprob: -12.564187049865723
    9. '```' → logprob: -12.939187049865723
    10. 'def' → logprob: -12.939187049865723

Token 201: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.003714569378644228
    2. ' inv' → logprob: -5.628714561462402
    3. '(inv' → logprob: -9.128714561462402
    4. '_inv' → logprob: -12.628714561462402
    5. 'in' → logprob: -14.128714561462402
    6. '```' → logprob: -14.503714561462402
    7. ' ' → logprob: -15.003714561462402
    8. '   ' → logprob: -15.253714561462402
    9. 'inf' → logprob: -15.503714561462402
    10. '<|end|>' → logprob: -15.628714561462402

Token 202: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -1.843177233240567e-05
    2. ' _' → logprob: -12.375018119812012
    3. '_fac' → logprob: -13.125018119812012
    4. '_' → logprob: -13.375018119812012
    5. '"_' → logprob: -13.375018119812012
    6. '_fact' → logprob: -13.750018119812012
    7. '```' → logprob: -13.875018119812012
    8. ''_' → logprob: -14.000018119812012
    9. ')_' → logprob: -14.125018119812012
    10. '_factory' → logprob: -14.375018119812012

Token 203: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.061051078140735626
    2. '_factor' → logprob: -3.6860511302948
    3. 'atorial' → logprob: -3.9360511302948
    4. '_' → logprob: -5.186050891876221
    5. 'omial' → logprob: -5.811050891876221
    6. 'cial' → logprob: -6.436050891876221
    7. '_of' → logprob: -6.561050891876221
    8. 'al' → logprob: -7.186050891876221
    9. 'orial' → logprob: -7.686050891876221
    10. 'acial' → logprob: -8.061051368713379

Token 204: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. '[
' → logprob: -14.625000953674316
    3. '[' → logprob: -15.000000953674316
    4. '```' → logprob: -16.875001907348633
    5. 'n' → logprob: -17.250001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '\[' → logprob: -19.375001907348633
    8. '`' → logprob: -19.500001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '(n' → logprob: -19.750001907348633

Token 205: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -2.9040898880339228e-05
    2. 'val' → logprob: -10.500028610229492
    3. 'Val' → logprob: -14.250028610229492
    4. '_' → logprob: -15.125028610229492
    5. '_VAL' → logprob: -15.250028610229492
    6. '-val' → logprob: -15.750028610229492
    7. '[val' → logprob: -17.000028610229492
    8. '-_' → logprob: -17.500028610229492
    9. '_n' → logprob: -17.750028610229492
    10. '```' → logprob: -18.000028610229492

Token 206: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8621745109558105
    2. '-r' → logprob: -0.8621745109558105
    3. '-' → logprob: -1.8621745109558105
    4. '[' → logprob: -9.362174987792969
    5. '[r' → logprob: -9.862174987792969
    6. ' ' → logprob: -11.362174987792969
    7. '   ' → logprob: -11.487174987792969
    8. ']' → logprob: -12.362174987792969
    9. '-ra' → logprob: -12.862174987792969
    10. '	' → logprob: -12.987174987792969

Token 207: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.860340752406046e-05
    2. ' r' → logprob: -9.7500581741333
    3. '	r' → logprob: -15.5000581741333
    4. ' ' → logprob: -16.875059127807617
    5. '   ' → logprob: -17.375059127807617
    6. '_r' → logprob: -18.125059127807617
    7. '<|end|>' → logprob: -19.125059127807617
    8. '  ' → logprob: -19.625059127807617
    9. 'р' → logprob: -20.750059127807617
    10. '$r' → logprob: -21.375059127807617

Token 208: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -3.845798710244708e-05
    2. '_' → logprob: -10.250038146972656
    3. '_v' → logprob: -13.875038146972656
    4. ' _' → logprob: -14.250038146972656
    5. 'val' → logprob: -14.500038146972656
    6. '_va' → logprob: -15.500038146972656
    7. '_VAL' → logprob: -15.750038146972656
    8. '_]' → logprob: -16.000038146972656
    9. '_r' → logprob: -16.625038146972656
    10. 'Val' → logprob: -16.625038146972656

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022249009634833783
    2. ' ]' → logprob: -8.875222206115723
    3. '}' → logprob: -9.875222206115723
    4. ']%' → logprob: -10.875222206115723
    5. '']' → logprob: -11.750222206115723
    6. '"]' → logprob: -13.250222206115723
    7. ')' → logprob: -13.500222206115723
    8. ']
' → logprob: -15.000222206115723
    9. '`]' → logprob: -15.125222206115723
    10. '%' → logprob: -15.875222206115723

Token 210: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.027514010667800903
    2. '%' → logprob: -3.6525139808654785
    3. ' ' → logprob: -7.1525139808654785
    4. '`' → logprob: -8.527514457702637
    5. ' mod' → logprob: -9.902514457702637
    6. ' ' → logprob: -10.277514457702637
    7. ' %
' → logprob: -10.527514457702637
    8. '```' → logprob: -10.652514457702637
    9. ')' → logprob: -10.777514457702637
    10. ''' → logprob: -10.902514457702637

Token 211: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.12816914916038513
    2. 'mod' → logprob: -2.128169059753418
    3. ' ' → logprob: -7.128169059753418
    4. '```' → logprob: -8.753169059753418
    5. '`' → logprob: -9.003169059753418
    6. ''' → logprob: -9.753169059753418
    7. ' ' → logprob: -10.253169059753418
    8. '(mod' → logprob: -10.878169059753418
    9. '"' → logprob: -11.253169059753418
    10. '	mod' → logprob: -11.878169059753418

Token 212: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05456976965069771
    2. '\n' → logprob: -3.179569721221924
    3. '<|end|>' → logprob: -5.804569721221924
    4. 'def' → logprob: -6.304569721221924
    5. '(' → logprob: -6.304569721221924
    6. '```' → logprob: -6.804569721221924
    7. '\' → logprob: -6.929569721221924
    8. '#' → logprob: -7.179569721221924
    9. '

' → logprob: -7.554569721221924
    10. 'n' → logprob: -7.804569721221924

Token 214: '_n' (ID: 2170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.502718448638916
    2. '_' → logprob: -1.502718448638916
    3. '()' → logprob: -2.377718448638916
    4. '_data' → logprob: -3.377718448638916
    5. ' =' → logprob: -4.252718448638916
    6. '_line' → logprob: -5.127718448638916
    7. '[' → logprob: -5.377718448638916
    8. '_text' → logprob: -5.877718448638916
    9. '_str' → logprob: -6.002718448638916
    10. 's' → logprob: -6.002718448638916

Token 215: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24074065685272217
    2. '=' → logprob: -2.6157407760620117
    3. '_' → logprob: -2.8657407760620117
    4. '(' → logprob: -3.1157407760620117
    5. '()' → logprob: -4.240740776062012
    6. ' ' → logprob: -4.240740776062012
    7. ')' → logprob: -5.240740776062012
    8. 's' → logprob: -6.990740776062012
    9. '  ' → logprob: -6.990740776062012
    10. ',' → logprob: -7.615740776062012

Token 216: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11329299956560135
    2. ' input' → logprob: -2.238292932510376
    3. ' ' → logprob: -8.488292694091797
    4. '<|end|>' → logprob: -9.363292694091797
    5. '=input' → logprob: -9.488292694091797
    6. ',input' → logprob: -10.613292694091797
    7. ' =' → logprob: -10.863292694091797
    8. 'space' → logprob: -10.988292694091797
    9. ' 
' → logprob: -11.488292694091797
    10. '_input' → logprob: -12.113292694091797

Token 217: '_a' (ID: 10852)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.4814353883266449
    2. '_r' → logprob: -1.1064354181289673
    3. '_m' → logprob: -2.9814352989196777
    4. '_' → logprob: -7.981435298919678
    5. '_p' → logprob: -9.731435775756836
    6. '_v' → logprob: -10.106435775756836
    7. 'k' → logprob: -10.231435775756836
    8. '_t' → logprob: -10.356435775756836
    9. '_x' → logprob: -10.606435775756836
    10. '_q' → logprob: -10.856435775756836

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4332401156425476
    2. '=' → logprob: -1.4332401752471924
    3. ' =' → logprob: -2.1832401752471924
    4. ' ,' → logprob: -8.808239936828613
    5. ',input' → logprob: -9.058239936828613
    6. '=input' → logprob: -9.433239936828613
    7. ' ' → logprob: -11.308239936828613
    8. '_' → logprob: -11.433239936828613
    9. '_input' → logprob: -12.558239936828613
    10. 'a' → logprob: -13.433239936828613

Token 219: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142541825771332
    2. ' input' → logprob: -1.7014254331588745
    3. ',input' → logprob: -12.451425552368164
    4. '=input' → logprob: -12.701425552368164
    5. ' =' → logprob: -13.451425552368164
    6. ',' → logprob: -13.576425552368164
    7. '_input' → logprob: -13.826425552368164
    8. '=' → logprob: -14.576425552368164
    9. ' ' → logprob: -15.201425552368164
    10. '
' → logprob: -16.326425552368164

Token 220: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.025990109890699387
    2. '_k' → logprob: -4.275990009307861
    3. '_m' → logprob: -5.525990009307861
    4. '_c' → logprob: -5.900990009307861
    5. '_r' → logprob: -6.525990009307861
    6. '_d' → logprob: -6.650990009307861
    7. 'b' → logprob: -7.775990009307861
    8. '_t' → logprob: -8.02599048614502
    9. '_p' → logprob: -8.27599048614502
    10. '_s' → logprob: -8.40099048614502

Token 221: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5124998092651367
    2. ' =' → logprob: -1.2624998092651367
    3. ',' → logprob: -2.1374998092651367
    4. '=input' → logprob: -9.262499809265137
    5. ',input' → logprob: -11.762499809265137
    6. ' ,' → logprob: -13.137499809265137
    7. ' =
' → logprob: -14.262499809265137
    8. 'input' → logprob: -14.512499809265137
    9. ' ' → logprob: -14.637499809265137
    10. '_' → logprob: -15.137499809265137

Token 222: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.040175020694732666
    2. ' input' → logprob: -3.665174961090088
    3. 'mod' → logprob: -4.290174961090088
    4. ' mod' → logprob: -9.665175437927246
    5. '=input' → logprob: -11.915175437927246
    6. ' ' → logprob: -13.790175437927246
    7. ' =' → logprob: -13.790175437927246
    8. 'MOD' → logprob: -13.915175437927246
    9. 'm' → logprob: -14.290175437927246
    10. '=' → logprob: -14.415175437927246

Token 223: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.9745780825614929
    2. '_c' → logprob: -1.2245781421661377
    3. '_m' → logprob: -1.3495781421661377
    4. '_x' → logprob: -3.7245781421661377
    5. '_mod' → logprob: -4.349577903747559
    6. '_' → logprob: -4.474577903747559
    7. '_n' → logprob: -4.849577903747559
    8. '_t' → logprob: -4.974577903747559
    9. '_d' → logprob: -6.724577903747559
    10. '_p' → logprob: -6.974577903747559

Token 224: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410476207733154
    2. ' =' → logprob: -0.9741047620773315
    3. ',' → logprob: -10.724104881286621
    4. '=input' → logprob: -12.349104881286621
    5. ' ' → logprob: -14.224104881286621
    6. ' =
' → logprob: -15.349104881286621
    7. '=
' → logprob: -16.224103927612305
    8. '=int' → logprob: -16.599103927612305
    9. 'input' → logprob: -16.599103927612305
    10. '=

' → logprob: -16.849103927612305

Token 225: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0031813981477171183
    2. ' map' → logprob: -5.753181457519531
    3. 'list' → logprob: -13.253181457519531
    4. '[' → logprob: -14.003181457519531
    5. '	map' → logprob: -14.503181457519531
    6. '(map' → logprob: -14.628181457519531
    7. 'input' → logprob: -16.37818145751953
    8. 'm' → logprob: -16.50318145751953
    9. ' ' → logprob: -17.37818145751953
    10. 'tuple' → logprob: -17.62818145751953

Token 226: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002021070569753647
    2. 'int' → logprob: -6.502020835876465
    3. '(' → logprob: -7.627020835876465
    4. '(input' → logprob: -10.627020835876465
    5. 'input' → logprob: -12.877020835876465
    6. '<int' → logprob: -13.502020835876465
    7. '(
' → logprob: -13.627020835876465
    8. ' int' → logprob: -14.252020835876465
    9. '(str' → logprob: -14.877020835876465
    10. '[int' → logprob: -15.252020835876465

Token 227: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4796486496925354
    2. '(input' → logprob: -0.9796486496925354
    3. ',input' → logprob: -5.604648590087891
    4. ')' → logprob: -6.729648590087891
    5. ' input' → logprob: -7.854648590087891
    6. '(' → logprob: -8.97964859008789
    7. '   ' → logprob: -9.97964859008789
    8. ',' → logprob: -10.60464859008789
    9. ')(' → logprob: -10.60464859008789
    10. '=input' → logprob: -10.72964859008789

Token 228: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001234428636962548
    2. ' input' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.625123977661133
    4. '(input' → logprob: -20.250123977661133
    5. '=input' → logprob: -20.875123977661133
    6. 'open' → logprob: -21.000123977661133
    7. '	input' → logprob: -21.000123977661133
    8. ' ' → logprob: -21.875123977661133
    9. ',input' → logprob: -21.875123977661133
    10. '<input' → logprob: -22.125123977661133

Token 229: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014048899174667895
    2. '()' → logprob: -8.875140190124512
    3. ' ().' → logprob: -14.750140190124512
    4. '()
' → logprob: -16.250141143798828
    5. '(' → logprob: -16.500141143798828
    6. '())' → logprob: -17.625141143798828
    7. '("").' → logprob: -18.000141143798828
    8. '()`' → logprob: -18.375141143798828
    9. '('').' → logprob: -18.625141143798828
    10. '().__' → logprob: -18.875141143798828

Token 230: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015991552209015936
    2. 'strip' → logprob: -8.750160217285156
    3. 'rstrip' → logprob: -14.125160217285156
    4. ' split' → logprob: -14.625160217285156
    5. '(split' → logprob: -15.625160217285156
    6. 'spl' → logprob: -17.125160217285156
    7. '().' → logprob: -18.000160217285156
    8. 'read' → logprob: -18.875160217285156
    9. '_split' → logprob: -19.375160217285156
    10. '.split' → logprob: -19.625160217285156

Token 231: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0572127066552639
    2. '()' → logprob: -3.9322125911712646
    3. '('' → logprob: -4.057212829589844
    4. ')' → logprob: -4.682212829589844
    5. '(' → logprob: -4.807212829589844
    6. '(','' → logprob: -6.932212829589844
    7. '(',' → logprob: -9.557212829589844
    8. '("' → logprob: -9.682212829589844
    9. '(),' → logprob: -9.932212829589844
    10. '()))' → logprob: -10.182212829589844

Token 232: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.048888809978961945
    2. 'MOD' → logprob: -3.173888921737671
    3. 'factor' → logprob: -5.173888683319092
    4. 'max' → logprob: -8.92388916015625
    5. ' mod' → logprob: -10.29888916015625
    6. 'fact' → logprob: -10.92388916015625
    7. 'MAX' → logprob: -12.04888916015625
    8. 'M' → logprob: -12.04888916015625
    9. '```' → logprob: -12.67388916015625
    10. ' MOD' → logprob: -13.29888916015625

Token 233: '_const' (ID: 27511)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007608397863805294
    2. '=' → logprob: -4.882608413696289
    3. ',' → logprob: -13.507608413696289
    4. ' =
' → logprob: -14.382608413696289
    5. ' ' → logprob: -15.632608413696289
    6. ' =)' → logprob: -17.00760841369629
    7. ')' → logprob: -17.13260841369629
    8. ' ,' → logprob: -17.25760841369629
    9. ' ='' → logprob: -17.88260841369629
    10. '_' → logprob: -17.88260841369629

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143312215805054
    2. ' =' → logprob: -1.7014331817626953
    3. ' ' → logprob: -11.076433181762695
    4. '  ' → logprob: -13.576433181762695
    5. '   ' → logprob: -13.701433181762695
    6. ' ' → logprob: -14.826433181762695
    7. ',' → logprob: -14.826433181762695
    8. '=

' → logprob: -15.201433181762695
    9. 'ar' → logprob: -15.826433181762695
    10. '```' → logprob: -15.951433181762695

Token 235: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06212979927659035
    2. '100' → logprob: -2.8121297359466553
    3. '998' → logprob: -8.937129974365234
    4. ' ' → logprob: -10.937129974365234
    5. '1' → logprob: -11.312129974365234
    6. '(' → logprob: -14.562129974365234
    7. '１０' → logprob: -15.812129974365234
    8. '   ' → logprob: -17.437129974365234
    9. '１００' → logprob: -18.062129974365234
    10. '=' → logprob: -18.187129974365234

Token 236: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1272163987159729
    2. '100' → logprob: -2.127216339111328
    3. '998' → logprob: -8.252216339111328
    4. '1' → logprob: -10.627216339111328
    5. '(' → logprob: -13.002216339111328
    6. ' ' → logprob: -14.252216339111328
    7. '１０' → logprob: -15.127216339111328
    8. '１００' → logprob: -16.752216339111328
    9. '   ' → logprob: -17.002216339111328
    10. '=' → logprob: -17.127216339111328

Token 237: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -5.9153885558771435e-06
    2. '243' → logprob: -13.500005722045898
    3. '247' → logprob: -13.750005722045898
    4. '245' → logprob: -13.875005722045898
    5. '254' → logprob: -14.125005722045898
    6. '457' → logprob: -14.625005722045898
    7. '_' → logprob: -15.375005722045898
    8. '444' → logprob: -15.875005722045898
    9. '```' → logprob: -15.875005722045898
    10. '2' → logprob: -16.3750057220459

Token 238: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00022368213103618473
    2. '853' → logprob: -8.750224113464355
    3. '357' → logprob: -9.875224113464355
    4. '857' → logprob: -11.500224113464355
    5. '3' → logprob: -12.625224113464355
    6. '35' → logprob: -15.250224113464355
    7. 'c' → logprob: -17.75022315979004
    8. '```' → logprob: -17.87522315979004
    9. '7' → logprob: -18.25022315979004
    10. '355' → logprob: -18.25022315979004

Token 239: '
' (ID: 198)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0017693048575893044
    2. 'fact' → logprob: -6.376769542694092
    3. 'max' → logprob: -10.251769065856934
    4. ')' → logprob: -11.876769065856934
    5. 'fac' → logprob: -11.876769065856934
    6. '```' → logprob: -12.376769065856934
    7. ' factorial' → logprob: -13.001769065856934
    8. '
' → logprob: -13.001769065856934
    9. '_factor' → logprob: -13.626769065856934
    10. 'result' → logprob: -13.626769065856934

Token 240: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.011899164877831936
    2. 'fact' → logprob: -4.511898994445801
    3. 'input' → logprob: -8.2618989944458
    4. 'max' → logprob: -8.3868989944458
    5. 'result' → logprob: -9.2618989944458
    6. 'dp' → logprob: -9.7618989944458
    7. 'fac' → logprob: -10.0118989944458
    8. 'total' → logprob: -10.2618989944458
    9. ' factorial' → logprob: -10.7618989944458
    10. 'answer' → logprob: -10.8868989944458

Token 241: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0031827057246118784
    2. 'ials' → logprob: -5.753182888031006
    3. '=' → logprob: -13.253182411193848
    4. 'ialize' → logprob: -13.628182411193848
    5. '   ' → logprob: -14.503182411193848
    6. ' =' → logprob: -14.503182411193848
    7. '```' → logprob: -14.503182411193848
    8. '_' → logprob: -15.628182411193848
    9. '  ' → logprob: -15.878182411193848
    10. '    ' → logprob: -16.378183364868164

Token 242: '_arr' (ID: 25121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011075885966420174
    2. '=' → logprob: -4.511075973510742
    3. ',' → logprob: -10.511075973510742
    4. 's' → logprob: -14.261075973510742
    5. '=f' → logprob: -16.636075973510742
    6. ' ' → logprob: -16.636075973510742
    7. '  ' → logprob: -17.761075973510742
    8. '_factor' → logprob: -18.011075973510742
    9. '＝' → logprob: -18.511075973510742
    10. ' ,' → logprob: -18.636075973510742

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150260627269745
    2. '=' → logprob: -1.7015025615692139
    3. ',' → logprob: -9.326502799987793
    4. 's' → logprob: -15.826502799987793
    5. ' ' → logprob: -16.701501846313477
    6. '  ' → logprob: -17.326501846313477
    7. '＝' → logprob: -17.451501846313477
    8. ')' → logprob: -17.576501846313477
    9. '=f' → logprob: -18.076501846313477
    10. ' ,' → logprob: -18.826501846313477

Token 244: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.47407710552215576
    2. 'pre' → logprob: -0.9740771055221558
    3. '(pre' → logprob: -17.099077224731445
    4. '	pre' → logprob: -17.724077224731445
    5. '   ' → logprob: -19.849077224731445
    6. ' ' → logprob: -20.224077224731445
    7. '_pre' → logprob: -20.974077224731445
    8. '  ' → logprob: -21.474077224731445
    9. '.pre' → logprob: -22.474077224731445
    10. 'preh' → logprob: -22.599077224731445

Token 245: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -4.320199877838604e-07
    2. 'computer' → logprob: -16.25
    3. 'comput' → logprob: -16.25
    4. 'computed' → logprob: -16.5
    5. ' compute' → logprob: -17.5
    6. 'com' → logprob: -18.0
    7. 'count' → logprob: -18.25
    8. '_compute' → logprob: -18.375
    9. '```' → logprob: -18.875
    10. '.compute' → logprob: -19.125

Token 246: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -5.512236498361744e-07
    2. '_fact' → logprob: -15.250000953674316
    3. '_' → logprob: -16.125
    4. '_factory' → logprob: -16.875
    5. '_f' → logprob: -17.125
    6. '_fac' → logprob: -17.25
    7. '```' → logprob: -17.75
    8. 'factor' → logprob: -18.125
    9. '"_' → logprob: -19.75
    10. '\' → logprob: -19.875

Token 247: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.5760030150413513
    2. 'als' → logprob: -0.8260030150413513
    3. 'ial' → logprob: -10.826003074645996
    4. 'al' → logprob: -11.076003074645996
    5. '_' → logprob: -11.201003074645996
    6. 'ls' → logprob: -13.076003074645996
    7. 'ols' → logprob: -13.451003074645996
    8. '```' → logprob: -13.576003074645996
    9. 's' → logprob: -13.701003074645996
    10. '_factor' → logprob: -13.826003074645996

Token 248: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008690795861184597
    2. '(' → logprob: -4.75869083404541
    3. '(max' → logprob: -9.50869083404541
    4. 'input' → logprob: -13.75869083404541
    5. ' (' → logprob: -14.50869083404541
    6. '<input' → logprob: -16.008689880371094
    7. '(
' → logprob: -16.008689880371094
    8. '[input' → logprob: -16.758689880371094
    9. ' input' → logprob: -16.883689880371094
    10. '=input' → logprob: -17.008689880371094

Token 249: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. '_k' → logprob: -15.75
    3. '_' → logprob: -16.625
    4. ' _' → logprob: -19.625
    5. '_i' → logprob: -19.625
    6. '_
' → logprob: -19.875
    7. '_a' → logprob: -20.75
    8. '_max' → logprob: -21.25
    9. '\' → logprob: -21.5
    10. '
' → logprob: -21.75

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015741224342491478
    2. ')' → logprob: -8.875157356262207
    3. ' ,' → logprob: -11.125157356262207
    4. ',
' → logprob: -14.250157356262207
    5. ',input' → logprob: -14.500157356262207
    6. '```' → logprob: -15.000157356262207
    7. ',)' → logprob: -15.125157356262207
    8. '<|end|>' → logprob: -15.375157356262207
    9. ' ' → logprob: -15.625157356262207
    10. ',module' → logprob: -15.875157356262207

Token 251: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2519291639328003
    2. ' mod' → logprob: -1.5019291639328003
    3. '	mod' → logprob: -16.501928329467773
    4. '(mod' → logprob: -17.876928329467773
    5. ' мод' → logprob: -19.001928329467773
    6. ' ' → logprob: -19.626928329467773
    7. '_mod' → logprob: -20.001928329467773
    8. ')' → logprob: -20.626928329467773
    9. '
' → logprob: -20.626928329467773
    10. ' ' → logprob: -20.751928329467773

Token 252: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -1.0445127372804563e-05
    2. 'const' → logprob: -11.50001049041748
    3. '_consts' → logprob: -16.125009536743164
    4. '_CONST' → logprob: -16.375009536743164
    5. '_constant' → logprob: -18.250009536743164
    6. 'Const' → logprob: -19.000009536743164
    7. ')' → logprob: -19.125009536743164
    8. ' const' → logprob: -19.125009536743164
    9. '_mod' → logprob: -19.250009536743164
    10. '_cons' → logprob: -19.250009536743164

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052354102954268456
    2. ')
' → logprob: -5.255235195159912
    3. ')
' → logprob: -13.63023567199707
    4. ' )' → logprob: -15.13023567199707
    5. ')

' → logprob: -16.00523567199707
    6. '),' → logprob: -17.38023567199707
    7. ')#' → logprob: -18.13023567199707
    8. ' )
' → logprob: -18.50523567199707
    9. '```' → logprob: -18.88023567199707
    10. '#' → logprob: -19.13023567199707

Token 254: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.6312321753939614e-05
    2. 'inverse' → logprob: -10.250036239624023
    3. ' inv' → logprob: -14.000036239624023
    4. '```' → logprob: -18.250036239624023
    5. '(inv' → logprob: -18.750036239624023
    6. '_inv' → logprob: -18.750036239624023
    7. 'invert' → logprob: -19.375036239624023
    8. '.inv' → logprob: -20.375036239624023
    9. 'factor' → logprob: -20.750036239624023
    10. 'inf' → logprob: -20.875036239624023

Token 255: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.125008583068848
    3. '```' → logprob: -13.125008583068848
    4. '_fact' → logprob: -15.000008583068848
    5. '_factory' → logprob: -15.875008583068848
    6. ' _' → logprob: -16.00000762939453
    7. '
' → logprob: -16.37500762939453
    8. '\' → logprob: -16.50000762939453
    9. '_inverse' → logprob: -16.50000762939453
    10. '_fac' → logprob: -17.00000762939453

Token 256: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.31857728958129883
    2. 'al' → logprob: -1.3185772895812988
    3. '_factor' → logprob: -5.943577289581299
    4. 'atorial' → logprob: -6.943577289581299
    5. '_' → logprob: -7.443577289581299
    6. '_arr' → logprob: -7.693577289581299
    7. 'orial' → logprob: -8.31857681274414
    8. '_al' → logprob: -8.94357681274414
    9. 'ials' → logprob: -9.69357681274414
    10. 'cial' → logprob: -9.69357681274414

Token 257: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -9.610702363715973e-06
    2. ' =' → logprob: -12.125009536743164
    3. '=' → logprob: -13.250009536743164
    4. '_' → logprob: -13.875009536743164
    5. '=_' → logprob: -14.375009536743164
    6. '_array' → logprob: -14.875009536743164
    7. 'arr' → logprob: -15.375009536743164
    8. ' _' → logprob: -16.750009536743164
    9. 's' → logprob: -17.125009536743164
    10. ' ' → logprob: -17.250009536743164

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967913061380386
    2. '=' → logprob: -2.8119678497314453
    3. ',' → logprob: -15.561967849731445
    4. '_' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.561967849731445
    6. ')' → logprob: -18.686967849731445
    7. ' =
' → logprob: -18.811967849731445
    8. '  ' → logprob: -18.936967849731445
    9. '_=' → logprob: -19.061967849731445
    10. '＝' → logprob: -19.311967849731445

Token 259: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.25192928314208984
    2. 'pre' → logprob: -1.5019292831420898
    3. '(pre' → logprob: -16.001930236816406
    4. '	pre' → logprob: -16.376930236816406
    5. '_pre' → logprob: -18.001930236816406
    6. ' ' → logprob: -18.751930236816406
    7. ' ' → logprob: -19.251930236816406
    8. ' prec' → logprob: -19.626930236816406
    9. '.pre' → logprob: -19.751930236816406
    10. 'preh' → logprob: -20.001930236816406

Token 260: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -6.52788148727268e-05
    2. 'com' → logprob: -10.750064849853516
    3. 'computed' → logprob: -11.125064849853516
    4. 'computer' → logprob: -11.375064849853516
    5. 'factor' → logprob: -11.500064849853516
    6. 'comput' → logprob: -12.500064849853516
    7. 'count' → logprob: -14.000064849853516
    8. 'const' → logprob: -14.000064849853516
    9. 'calculate' → logprob: -14.250064849853516
    10. '_compute' → logprob: -14.625064849853516

Token 261: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.1602552980184555
    2. '_factor' → logprob: -1.9102553129196167
    3. 'inverse' → logprob: -10.410255432128906
    4. 'factor' → logprob: -14.910255432128906
    5. '_inv' → logprob: -14.910255432128906
    6. '_in' → logprob: -15.035255432128906
    7. '_' → logprob: -17.660255432128906
    8. 'Inverse' → logprob: -17.910255432128906
    9. '_reverse' → logprob: -18.535255432128906
    10. 'in' → logprob: -18.660255432128906

Token 262: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00010902655776590109
    2. 'factor' → logprob: -9.12510871887207
    3. 'Factor' → logprob: -16.87510871887207
    4. ' factorial' → logprob: -17.37510871887207
    5. '_fact' → logprob: -18.12510871887207
    6. '_' → logprob: -18.75010871887207
    7. '```' → logprob: -18.75010871887207
    8. '_FACTOR' → logprob: -20.37510871887207
    9. '.factor' → logprob: -20.75010871887207
    10. 'f' → logprob: -21.12510871887207

Token 263: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.0008140355930663645
    2. 'als' → logprob: -7.125813961029053
    3. 'c' → logprob: -12.500814437866211
    4. 'ial' → logprob: -12.875814437866211
    5. '[' → logprob: -14.250814437866211
    6. 't' → logprob: -14.500814437866211
    7. '_' → logprob: -15.125814437866211
    8. 'icals' → logprob: -15.250814437866211
    9. '```' → logprob: -15.375814437866211
    10. '   ' → logprob: -15.750814437866211

Token 264: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. 'factor' → logprob: -17.5
    4. ' (' → logprob: -18.375
    5. '(
' → logprob: -19.5
    6. ' factorial' → logprob: -19.75
    7. '(F' → logprob: -20.125
    8. '(function' → logprob: -20.5
    9. '```' → logprob: -20.5
    10. '(factory' → logprob: -20.625

Token 265: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.018259631469845772
    2. 'factor' → logprob: -4.018259525299072
    3. 'ctor' → logprob: -9.64326000213623
    4. 'act' → logprob: -10.51826000213623
    5. '_factor' → logprob: -11.51826000213623
    6. 'atorial' → logprob: -12.39326000213623
    7. ' factorial' → logprob: -13.39326000213623
    8. 'ator' → logprob: -14.14326000213623
    9. 'or' → logprob: -14.89326000213623
    10. '```' → logprob: -15.26826000213623

Token 266: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0001317871210630983
    2. 'al' → logprob: -9.000131607055664
    3. ' factorial' → logprob: -12.375131607055664
    4. 'orial' → logprob: -12.875131607055664
    5. '_factor' → logprob: -14.875131607055664
    6. 'omial' → logprob: -15.000131607055664
    7. 'ials' → logprob: -15.125131607055664
    8. 'factor' → logprob: -15.250131607055664
    9. 'rial' → logprob: -15.625131607055664
    10. 'ialize' → logprob: -16.875131607055664

Token 267: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0008839531801640987
    2. 'arr' → logprob: -7.375884056091309
    3. '_factor' → logprob: -9.125884056091309
    4. 'factor' → logprob: -9.500884056091309
    5. '(f' → logprob: -9.875884056091309
    6. 'Arr' → logprob: -11.250884056091309
    7. ')' → logprob: -12.750884056091309
    8. '(arr' → logprob: -13.625884056091309
    9. 's' → logprob: -13.750884056091309
    10. ' factorial' → logprob: -13.750884056091309

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.125001907348633
    3. ')' → logprob: -16.375001907348633
    4. ',
' → logprob: -17.250001907348633
    5. ',module' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.625001907348633
    7. 'mod' → logprob: -19.375001907348633
    8. '```' → logprob: -19.750001907348633
    9. '‌,' → logprob: -20.250001907348633
    10. ' ' → logprob: -20.750001907348633

Token 269: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.627176768844947e-05
    2. ' mod' → logprob: -9.250096321105957
    3. '	mod' → logprob: -17.25009536743164
    4. ' ' → logprob: -18.75009536743164
    5. '(mod' → logprob: -19.25009536743164
    6. '   ' → logprob: -19.25009536743164
    7. '```' → logprob: -19.75009536743164
    8. '
' → logprob: -20.12509536743164
    9. 'moder' → logprob: -20.37509536743164
    10. ')' → logprob: -20.75009536743164

Token 270: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.004103927407413721
    2. 'const' → logprob: -5.754104137420654
    3. ')' → logprob: -7.629104137420654
    4. '_arr' → logprob: -7.879104137420654
    5. '_consts' → logprob: -10.754103660583496
    6. ',' → logprob: -11.379103660583496
    7. '```' → logprob: -11.754103660583496
    8. '_CONST' → logprob: -12.379103660583496
    9. '_)' → logprob: -12.504103660583496
    10. ')_' → logprob: -13.004103660583496

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.500000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')`' → logprob: -19.125
    5. ')

' → logprob: -19.5
    6. '),' → logprob: -19.5
    7. '[' → logprob: -19.875
    8. '))' → logprob: -19.875
    9. ')
' → logprob: -20.0
    10. ')#' → logprob: -20.125

Token 272: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04253605008125305
    2. 'total' → logprob: -3.6675360202789307
    3. 'answer' → logprob: -4.41753625869751
    4. 'ans' → logprob: -6.91753625869751
    5. 'dp' → logprob: -7.04253625869751
    6. 'res' → logprob: -7.16753625869751
    7. 'count' → logprob: -7.79253625869751
    8. 'ways' → logprob: -7.79253625869751
    9. 'valid' → logprob: -9.042535781860352
    10. 'results' → logprob: -9.167535781860352

Token 273: '_counter' (ID: 35419)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16298779845237732
    2. '_' → logprob: -2.03798770904541
    3. '=' → logprob: -3.91298770904541
    4. ' ' → logprob: -9.91298770904541
    5. '_=' → logprob: -10.28798770904541
    6. ' _' → logprob: -11.78798770904541
    7. '```' → logprob: -11.91298770904541
    8. ',' → logprob: -12.41298770904541
    9. ')' → logprob: -12.41298770904541
    10. 's' → logprob: -12.91298770904541

Token 274: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016067449003458023
    2. '=' → logprob: -4.1410675048828125
    3. ' ' → logprob: -10.766067504882812
    4. '_' → logprob: -11.766067504882812
    5. 's' → logprob: -13.266067504882812
    6. '  ' → logprob: -13.891067504882812
    7. ' =
' → logprob: -14.516067504882812
    8. ',' → logprob: -15.016067504882812
    9. ' +=' → logprob: -16.016067504882812
    10. ' =)' → logprob: -16.016067504882812

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022320532298181206
    2. ' ' → logprob: -8.625223159790039
    3. '1' → logprob: -10.625223159790039
    4. '[' → logprob: -11.250223159790039
    5. '(' → logprob: -13.500223159790039
    6. ' [' → logprob: -14.125223159790039
    7. '{}' → logprob: -14.250223159790039
    8. '{' → logprob: -14.250223159790039
    9. 'pow' → logprob: -14.562723159790039
    10. '[]' → logprob: -14.625223159790039

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006348780007101595
    2. '[' → logprob: -7.625634670257568
    3. '1' → logprob: -9.625635147094727
    4. '{}' → logprob: -10.375635147094727
    5. '{' → logprob: -11.125635147094727
    6. ' ' → logprob: -11.875635147094727
    7. '(' → logprob: -11.875635147094727
    8. 'pow' → logprob: -12.750635147094727
    9. 'factor' → logprob: -13.125635147094727
    10. '{}
' → logprob: -13.375635147094727

Token 277: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42722460627555847
    2. ' for' → logprob: -1.5522246360778809
    3. '
' → logprob: -2.052224636077881
    4. ' 
' → logprob: -5.802224636077881
    5. '\n' → logprob: -6.052224636077881
    6. '<|end|>' → logprob: -6.802224636077881
    7. '' → logprob: -8.552224159240723
    8. '```' → logprob: -8.677224159240723
    9. ' ' → logprob: -9.052224159240723
    10. '\' → logprob: -9.052224159240723

Token 278: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036770363803952932
    2. 'i' → logprob: -5.753676891326904
    3. ' for' → logprob: -7.753676891326904
    4. 'n' → logprob: -10.753677368164062
    5. 'f' → logprob: -10.753677368164062
    6. 'a' → logprob: -12.378677368164062
    7. 'x' → logprob: -12.878677368164062
    8. 'r' → logprob: -12.878677368164062
    9. 'current' → logprob: -13.003677368164062
    10. 'step' → logprob: -13.003677368164062

Token 279: ' trial' (ID: 11791)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5677283406257629
    2. 'x' → logprob: -0.9427283406257629
    3. 'a' → logprob: -4.192728519439697
    4. ' i' → logprob: -5.067728519439697
    5. ' x' → logprob: -5.692728519439697
    6. 'current' → logprob: -5.942728519439697
    7. 'k' → logprob: -6.192728519439697
    8. 'value' → logprob: -6.442728519439697
    9. 'count' → logprob: -6.567728519439697
    10. 'num' → logprob: -6.817728519439697

Token 280: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4127265512943268
    2. ' in' → logprob: -1.2877265214920044
    3. '_i' → logprob: -3.787726640701294
    4. ' _' → logprob: -3.912726640701294
    5. '_a' → logprob: -5.287726402282715
    6. ' i' → logprob: -5.287726402282715
    7. 'in' → logprob: -5.787726402282715
    8. '_val' → logprob: -6.162726402282715
    9. '_in' → logprob: -6.787726402282715
    10. '_input' → logprob: -7.162726402282715

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1437656134366989
    2. 'in' → logprob: -2.018765687942505
    3. ' ' → logprob: -8.018765449523926
    4. ',' → logprob: -8.393765449523926
    5. '_' → logprob: -8.643765449523926
    6. 'range' → logprob: -8.643765449523926
    7. '1' → logprob: -10.518765449523926
    8. 'a' → logprob: -10.518765449523926
    9. '_in' → logprob: -10.643765449523926
    10. 'n' → logprob: -10.643765449523926

Token 282: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.500553131103516
    4. '0' → logprob: -18.500553131103516
    5. '(range' → logprob: -18.625553131103516
    6. '	range' → logprob: -18.750553131103516
    7. '   ' → logprob: -18.875553131103516
    8. 'r' → logprob: -19.375553131103516
    9. 'rang' → logprob: -19.625553131103516
    10. '  ' → logprob: -19.750553131103516

Token 283: '(min' (ID: 26035)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006096942350268364
    2. '(' → logprob: -5.256096839904785
    3. '(max' → logprob: -7.131096839904785
    4. '(min' → logprob: -9.756096839904785
    5. '((' → logprob: -12.631096839904785
    6. 'input' → logprob: -14.256096839904785
    7. '0' → logprob: -14.631096839904785
    8. '(in' → logprob: -15.256096839904785
    9. '[input' → logprob: -16.6310977935791
    10. '(i' → logprob: -17.2560977935791

Token 284: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.875006675720215
    3. '(k' → logprob: -13.000006675720215
    4. 'input' → logprob: -13.750006675720215
    5. '((' → logprob: -15.000006675720215
    6. ' (' → logprob: -16.0000057220459
    7. ',input' → logprob: -16.0000057220459
    8. '(in' → logprob: -16.3750057220459
    9. ' input' → logprob: -17.2500057220459
    10. '(max' → logprob: -17.6250057220459

Token 285: '_n' (ID: 2170)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.6686474084854126
    2. '(input' → logprob: -0.7936474084854126
    3. '(k' → logprob: -3.418647289276123
    4. '_a' → logprob: -6.043647289276123
    5. 'k' → logprob: -8.918647766113281
    6. '(' → logprob: -9.543647766113281
    7. '(a' → logprob: -10.293647766113281
    8. '_b' → logprob: -11.918647766113281
    9. 'a' → logprob: -12.168647766113281
    10. ' (' → logprob: -12.293647766113281

Token 286: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06746089458465576
    2. ',input' → logprob: -2.9424610137939453
    3. ' ,' → logprob: -4.942461013793945
    4. '(input' → logprob: -5.442461013793945
    5. '+' → logprob: -8.067461013793945
    6. ' //' → logprob: -8.317461013793945
    7. '//' → logprob: -8.817461013793945
    8. ' +' → logprob: -9.067461013793945
    9. 'input' → logprob: -9.567461013793945
    10. ' (' → logprob: -10.067461013793945

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022246576845645905
    2. 'input' → logprob: -4.522246360778809
    3. ',' → logprob: -5.272246360778809
    4. ' ' → logprob: -6.022246360778809
    5. '(input' → logprob: -6.522246360778809
    6. ' input' → logprob: -6.772246360778809
    7. '(' → logprob: -7.522246360778809
    8. ',input' → logprob: -8.147246360778809
    9. 'k' → logprob: -10.522246360778809
    10. ' (' → logprob: -10.772246360778809

Token 288: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0025194191839545965
    2. '1' → logprob: -6.877519607543945
    3. '(input' → logprob: -6.877519607543945
    4. ' input' → logprob: -7.877519607543945
    5. 'k' → logprob: -10.127519607543945
    6. ',input' → logprob: -11.002519607543945
    7. '(' → logprob: -12.627519607543945
    8. '<input' → logprob: -13.252519607543945
    9. ' ' → logprob: -13.252519607543945
    10. '   ' → logprob: -13.377519607543945

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011282301507890224
    2. ' ,' → logprob: -4.636282444000244
    3. ',input' → logprob: -6.511282444000244
    4. ',
' → logprob: -11.386281967163086
    5. '),' → logprob: -12.011281967163086
    6. ')' → logprob: -12.261281967163086
    7. '
' → logprob: -12.636281967163086
    8. 'input' → logprob: -12.636281967163086
    9. ' ' → logprob: -13.386281967163086
    10. '

' → logprob: -13.761281967163086

Token 290: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012755312956869602
    2. ' input' → logprob: -4.387755393981934
    3. '(input' → logprob: -8.387755393981934
    4. '   ' → logprob: -12.637755393981934
    5. ' (' → logprob: -12.762755393981934
    6. ',input' → logprob: -12.762755393981934
    7. 'k' → logprob: -13.012755393981934
    8. ' ' → logprob: -13.512755393981934
    9. '100' → logprob: -13.887755393981934
    10. '  ' → logprob: -14.137755393981934

Token 291: '_k' (ID: 11637)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6727868318557739
    2. '_k' → logprob: -0.7977868318557739
    3. '_b' → logprob: -3.2977867126464844
    4. '//' → logprob: -7.297786712646484
    5. 'a' → logprob: -7.672786712646484
    6. ' //' → logprob: -8.297786712646484
    7. 'k' → logprob: -8.422786712646484
    8. '
' → logprob: -8.797786712646484
    9. '_i' → logprob: -9.672786712646484
    10. ' ' → logprob: -9.797786712646484

Token 292: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.1798996925354004
    2. ' +' → logprob: -1.1798996925354004
    3. '+' → logprob: -1.3048996925354004
    4. '//' → logprob: -2.1798996925354004
    5. ' ' → logprob: -7.1798996925354
    6. ')' → logprob: -8.304899215698242
    7. '   ' → logprob: -10.054899215698242
    8. '
' → logprob: -11.429899215698242
    9. ')+' → logprob: -11.554899215698242
    10. '-' → logprob: -11.804899215698242

Token 293: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012448744382709265
    2. ' input' → logprob: -6.751245021820068
    3. '1' → logprob: -10.75124454498291
    4. '
' → logprob: -11.37624454498291
    5. '(input' → logprob: -11.37624454498291
    6. 'trial' → logprob: -12.00124454498291
    7. ' ' → logprob: -12.50124454498291
    8. '=input' → logprob: -12.62624454498291
    9. '[input' → logprob: -12.87624454498291
    10. '<input' → logprob: -13.00124454498291

Token 294: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1603374481201172
    2. 'a' → logprob: -1.9103374481201172
    3. '_b' → logprob: -9.410337448120117
    4. 'input' → logprob: -11.160337448120117
    5. 'b' → logprob: -11.410337448120117
    6. '	a' → logprob: -13.535337448120117
    7. '#a' → logprob: -14.285337448120117
    8. ' a' → logprob: -14.410337448120117
    9. 'A' → logprob: -14.410337448120117
    10. ''a' → logprob: -14.660337448120117

Token 295: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6942451000213623
    2. ' +' → logprob: -0.6942451000213623
    3. ')' → logprob: -7.694245338439941
    4. ')):' → logprob: -8.319245338439941
    5. ' ' → logprob: -8.444245338439941
    6. ')):
' → logprob: -10.194245338439941
    7. ')+' → logprob: -10.319245338439941
    8. '   ' → logprob: -10.444245338439941
    9. '):' → logprob: -10.444245338439941
    10. '))' → logprob: -11.319245338439941

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '2' → logprob: -15.625035285949707
    4. '   ' → logprob: -16.125036239624023
    5. '
' → logprob: -17.375036239624023
    6. '  ' → logprob: -17.375036239624023
    7. ')' → logprob: -17.625036239624023
    8. '

' → logprob: -18.125036239624023
    9. '```' → logprob: -18.375036239624023
    10. '(' → logprob: -19.125036239624023

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -9.375085830688477
    3. '2' → logprob: -13.875085830688477
    4. '   ' → logprob: -15.125085830688477
    5. '  ' → logprob: -16.750085830688477
    6. ')' → logprob: -17.625085830688477
    7. '
' → logprob: -18.312585830688477
    8. '    ' → logprob: -18.375085830688477
    9. '	' → logprob: -18.437585830688477
    10. '```' → logprob: -18.687585830688477

Token 298: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007250601192936301
    2. ')' → logprob: -7.500725269317627
    3. '):
' → logprob: -8.875724792480469
    4. ' ):' → logprob: -10.875724792480469
    5. ')):' → logprob: -11.750724792480469
    6. ':' → logprob: -12.250724792480469
    7. '):
' → logprob: -15.750724792480469
    8. ')：' → logprob: -16.12572479248047
    9. '):

' → logprob: -16.50072479248047
    10. '   ' → logprob: -16.50072479248047

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.562269389629364
    2. ':' → logprob: -1.0622694492340088
    3. ' ' → logprob: -2.812269449234009
    4. ' if' → logprob: -4.68726921081543
    5. ' :' → logprob: -5.31226921081543
    6. '    ' → logprob: -5.56226921081543
    7. ' for' → logprob: -6.18726921081543
    8. '\t' → logprob: -6.81226921081543
    9. ':
' → logprob: -7.18726921081543
    10. ' 
' → logprob: -7.56226921081543

Token 300: ' total' (ID: 3609)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6868005990982056
    2. 'trial' → logprob: -0.8118005990982056
    3. 'if' → logprob: -4.061800479888916
    4. 'rem' → logprob: -4.436800479888916
    5. '   ' → logprob: -4.686800479888916
    6. 'remain' → logprob: -5.061800479888916
    7. 'rest' → logprob: -5.936800479888916
    8. 're' → logprob: -6.061800479888916
    9. 'res' → logprob: -7.561800479888916
    10. ' remaining' → logprob: -7.936800479888916

Token 301: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.009380138479173183
    2. '_c' → logprob: -5.384380340576172
    3. '_a' → logprob: -5.634380340576172
    4. '_remaining' → logprob: -7.634380340576172
    5. 'b' → logprob: -9.009380340576172
    6. '_trials' → logprob: -9.634380340576172
    7. '_trial' → logprob: -9.634380340576172
    8. '_sum' → logprob: -9.884380340576172
    9. ' =' → logprob: -10.134380340576172
    10. '_k' → logprob: -10.134380340576172

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20874863862991333
    2. '=' → logprob: -1.7087485790252686
    3. '_count' → logprob: -6.208748817443848
    4. '_times' → logprob: -7.083748817443848
    5. '_' → logprob: -7.208748817443848
    6. '_points' → logprob: -7.333748817443848
    7. '_used' → logprob: -7.583748817443848
    8. '_remaining' → logprob: -7.583748817443848
    9. '_val' → logprob: -7.958748817443848
    10. '_b' → logprob: -7.958748817443848

Token 303: ' input' (ID: 3422)
  Prédit: 'trial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trial' → logprob: -0.14555718004703522
    2. 'input' → logprob: -2.395557165145874
    3. ' trial' → logprob: -3.270557165145874
    4. ' input' → logprob: -5.145557403564453
    5. '   ' → logprob: -7.895557403564453
    6. 'tr' → logprob: -10.020557403564453
    7. '  ' → logprob: -10.770557403564453
    8. ' ' → logprob: -11.145557403564453
    9. '
' → logprob: -11.270557403564453
    10. '(input' → logprob: -11.645557403564453

Token 304: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.39280974864959717
    2. '_n' → logprob: -1.2678097486495972
    3. 'a' → logprob: -4.017809867858887
    4. '_b' → logprob: -4.017809867858887
    5. '_k' → logprob: -5.017809867858887
    6. 'n' → logprob: -7.767809867858887
    7. 'b' → logprob: -8.892809867858887
    8. 'k' → logprob: -9.142809867858887
    9. ' ' → logprob: -10.767809867858887
    10. ' a' → logprob: -11.517809867858887

Token 305: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04300319775938988
    2. '*' → logprob: -3.1680030822753906
    3. '
' → logprob: -13.66800308227539
    4. ' ' → logprob: -14.04300308227539
    5. ' ' → logprob: -14.41800308227539
    6. 'trial' → logprob: -14.91800308227539
    7. '*t' → logprob: -15.04300308227539
    8. '

' → logprob: -16.04300308227539
    9. '*object' → logprob: -16.04300308227539
    10. '   ' → logprob: -16.16800308227539

Token 306: ' trial' (ID: 11791)
  Prédit: 'trial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trial' → logprob: -0.00043102685594931245
    2. ' trial' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. 'trail' → logprob: -15.750431060791016
    5. 'tr' → logprob: -17.125431060791016
    6. ' ' → logprob: -19.000431060791016
    7. '_trial' → logprob: -19.000431060791016
    8. 'tri' → logprob: -19.250431060791016
    9. 'trade' → logprob: -19.750431060791016
    10. '  ' → logprob: -20.125431060791016

Token 307: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.6047699318733066e-05
    2. 'a' → logprob: -11.125016212463379
    3. '_' → logprob: -13.625016212463379
    4. 's' → logprob: -16.750015258789062
    5. '_
' → logprob: -18.375015258789062
    6. '_b' → logprob: -18.750015258789062
    7. 'а' → logprob: -18.875015258789062
    8. ' _' → logprob: -19.000015258789062
    9. '```' → logprob: -19.000015258789062
    10. '\' → logprob: -19.500015258789062

Token 308: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.735645055770874
    2. ' 
' → logprob: -1.485645055770874
    3. '   ' → logprob: -1.985645055770874
    4. '    
' → logprob: -2.860645055770874
    5. ' if' → logprob: -3.110645055770874
    6. '   
' → logprob: -4.110645294189453
    7. '  
' → logprob: -4.110645294189453
    8. ',' → logprob: -4.735645294189453
    9. ' for' → logprob: -5.110645294189453
    10. 'if' → logprob: -5.735645294189453

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04414157569408417
    2. '    
' → logprob: -4.16914176940918
    3. '
' → logprob: -4.41914176940918
    4. ' if' → logprob: -5.16914176940918
    5. 'if' → logprob: -5.54414176940918
    6. '   
' → logprob: -6.29414176940918
    7. ' 
' → logprob: -6.41914176940918
    8. ',' → logprob: -7.16914176940918
    9. 'for' → logprob: -7.91914176940918
    10. ' for' → logprob: -8.16914176940918

Token 310: ' if' (ID: 538)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.5613936185836792
    2. 'if' (adapté à ' if') → logprob: -0.9363936185836792
    3. 'rem' → logprob: -4.436393737792969
    4. 'remain' → logprob: -4.561393737792969
    5. 'trial' → logprob: -5.311393737792969
    6. '   ' → logprob: -5.686393737792969
    7. 'rest' → logprob: -6.186393737792969
    8. 'for' → logprob: -6.436393737792969
    9. ' if' → logprob: -7.061393737792969
    10. 'max' → logprob: -7.186393737792969

Token 311: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.049095623195171356
    2. ' total' → logprob: -3.049095630645752
    3. '(total' → logprob: -8.174095153808594
    4. 'input' → logprob: -8.674095153808594
    5. '   ' → logprob: -10.549095153808594
    6. ' input' → logprob: -11.049095153808594
    7. ' (' → logprob: -11.924095153808594
    8. 'k' → logprob: -13.049095153808594
    9. '(input' → logprob: -13.799095153808594
    10. ' ' → logprob: -14.049095153808594

Token 312: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00023679454170633107
    2. '_b' → logprob: -9.250236511230469
    3. 'a' → logprob: -9.750236511230469
    4. '_' → logprob: -9.875236511230469
    5. '>' → logprob: -11.125236511230469
    6. '```' → logprob: -12.625236511230469
    7. '+' → logprob: -13.000236511230469
    8. ' _' → logprob: -13.625236511230469
    9. '>a' → logprob: -14.000236511230469
    10. '\' → logprob: -14.000236511230469

Token 313: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06622420996427536
    2. ' >' → logprob: -2.8162240982055664
    3. '<=' → logprob: -5.566224098205566
    4. ' <=' → logprob: -8.066224098205566
    5. '==' → logprob: -9.441224098205566
    6. '+' → logprob: -11.566224098205566
    7. ' ==' → logprob: -12.566224098205566
    8. '">' → logprob: -12.816224098205566
    9. '=' → logprob: -13.566224098205566
    10. '<|end|>' → logprob: -13.566224098205566

Token 314: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.4121114822482923e-06
    2. ' input' → logprob: -12.625003814697266
    3. '	input' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.125003814697266
    5. 'import' → logprob: -19.125003814697266
    6. 'int' → logprob: -19.375003814697266
    7. '=input' → logprob: -19.625003814697266
    8. '<input' → logprob: -19.875003814697266
    9. '(input' → logprob: -20.250003814697266
    10. 'inp' → logprob: -20.875003814697266

Token 315: '_k' (ID: 11637)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.981667537620524e-06
    2. '_k' → logprob: -13.875001907348633
    3. '_' → logprob: -14.125001907348633
    4. 'n' → logprob: -16.250001907348633
    5. ' _' → logprob: -16.250001907348633
    6. '```' → logprob: -18.000001907348633
    7. '_
' → logprob: -18.375001907348633
    8. 'a' → logprob: -18.750001907348633
    9. '\' → logprob: -18.875001907348633
    10. '
' → logprob: -18.875001907348633

Token 316: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010215804912149906
    2. ':
' → logprob: -4.760215759277344
    3. ' or' → logprob: -6.760215759277344
    4. '   ' → logprob: -7.760215759277344
    5. '       ' → logprob: -11.885215759277344
    6. ':return' → logprob: -13.010215759277344
    7. ' :' → logprob: -13.260215759277344
    8. ' ' → logprob: -14.135215759277344
    9. ':
' → logprob: -14.385215759277344
    10. 'or' → logprob: -14.760215759277344

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043972869752906263
    2. '   ' → logprob: -8.125439643859863
    3. ' continue' → logprob: -9.625439643859863
    4. ',' → logprob: -10.625439643859863
    5. '	' → logprob: -11.375439643859863
    6. 'continue' → logprob: -11.625439643859863
    7. '           ' → logprob: -12.000439643859863
    8. '	continue' → logprob: -12.250439643859863
    9. ':' → logprob: -12.375439643859863
    10. '
' → logprob: -12.625439643859863

Token 318: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.22705091536045074
    2. '   ' → logprob: -1.9770509004592896
    3. ' break' → logprob: -3.227051019668579
    4. '       ' → logprob: -3.727051019668579
    5. '	break' → logprob: -7.22705078125
    6. '
' → logprob: -9.60205078125
    7. '           ' → logprob: -10.22705078125
    8. 'continue' (adapté à ' continue') → logprob: -10.47705078125
    9. '    
' → logprob: -10.97705078125
    10. '    ' → logprob: -11.60205078125

Token 319: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010229965671896935
    2. '    
' → logprob: -4.63523006439209
    3. '
' → logprob: -7.76023006439209
    4. '  
' → logprob: -11.26023006439209
    5. '   
' → logprob: -11.63523006439209
    6. '<|end|>' → logprob: -12.13523006439209
    7. '        
' → logprob: -12.26023006439209
    8. ' 
' → logprob: -12.38523006439209
    9. '   ' → logprob: -13.38523006439209
    10. '\t' → logprob: -13.51023006439209

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28164932131767273
    2. 'for' → logprob: -1.5316493511199951
    3. ' for' → logprob: -4.156649112701416
    4. '    
' → logprob: -4.656649112701416
    5. '
' → logprob: -5.656649112701416
    6. ' 
' → logprob: -7.906649112701416
    7. '  
' → logprob: -9.781649589538574
    8. '   
' → logprob: -9.906649589538574
    9. ')' → logprob: -10.281649589538574
    10. ' ' → logprob: -10.406649589538574

Token 321: ' remainder' (ID: 47056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02995249815285206
    2. 'trial' → logprob: -3.6549525260925293
    3. ' trial' → logprob: -6.654952526092529
    4. 'remaining' → logprob: -7.029952526092529
    5. 'for' → logprob: -7.529952526092529
    6. 'rest' → logprob: -8.154952049255371
    7. '    
' → logprob: -8.904952049255371
    8. ' for' → logprob: -9.029952049255371
    9. ' ' → logprob: -9.404952049255371
    10. '  ' → logprob: -9.529952049255371

Token 322: '_b' (ID: 1535)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1969621330499649
    2. '_b' → logprob: -2.5719621181488037
    3. '_k' → logprob: -2.8219621181488037
    4. '=' → logprob: -3.1969621181488037
    5. '_c' → logprob: -6.696962356567383
    6. '_' → logprob: -8.071962356567383
    7. '   ' → logprob: -8.321962356567383
    8. ' ' → logprob: -9.696962356567383
    9. '_for' → logprob: -10.696962356567383
    10. '_val' → logprob: -10.821962356567383

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313262403011322
    2. ' =' → logprob: -1.3132624626159668
    3. ' ' → logprob: -15.688261985778809
    4. '=int' → logprob: -15.688261985778809
    5. '=input' → logprob: -16.438262939453125
    6. ',' → logprob: -16.563262939453125
    7. '   ' → logprob: -16.688262939453125
    8. '_' → logprob: -17.188262939453125
    9. '=
' → logprob: -17.563262939453125
    10. '＝' → logprob: -17.688262939453125

Token 324: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02382732182741165
    2. ' input' → logprob: -4.27382755279541
    3. '(input' → logprob: -4.64882755279541
    4. ' (' → logprob: -10.52382755279541
    5. '(' → logprob: -11.27382755279541
    6. 'k' → logprob: -13.52382755279541
    7. '<input' → logprob: -13.89882755279541
    8. '	input' → logprob: -14.39882755279541
    9. '   ' → logprob: -15.02382755279541
    10. '[input' → logprob: -15.14882755279541

Token 325: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0005311102140694857
    2. '_b' → logprob: -7.625531196594238
    3. 'k' → logprob: -10.250531196594238
    4. '_n' → logprob: -13.000531196594238
    5. '
' → logprob: -13.250531196594238
    6. '_' → logprob: -13.500531196594238
    7. 'b' → logprob: -14.625531196594238
    8. 'const' → logprob: -15.500531196594238
    9. '_j' → logprob: -15.750531196594238
    10. 'from' → logprob: -16.000530242919922

Token 326: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269330382347107
    2. ' -' → logprob: -2.1269330978393555
    3. '-input' → logprob: -13.626933097839355
    4. '-variable' → logprob: -14.126933097839355
    5. ' ' → logprob: -14.501933097839355
    6. '-terminal' → logprob: -15.126933097839355
    7. '-content' → logprob: -15.376933097839355
    8. '-k' → logprob: -15.501933097839355
    9. '-t' → logprob: -15.876933097839355
    10. '-code' → logprob: -15.876933097839355

Token 327: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00029852005536668
    2. ' total' → logprob: -8.125298500061035
    3. 'input' → logprob: -13.250298500061035
    4. 'trial' → logprob: -15.000298500061035
    5. '   ' → logprob: -15.375298500061035
    6. '(total' → logprob: -16.50029945373535
    7. '	total' → logprob: -18.00029945373535
    8. ' ' → logprob: -18.12529945373535
    9. '
' → logprob: -18.25029945373535
    10. '
' → logprob: -18.37529945373535

Token 328: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.10033617168664932
    2. '_a' → logprob: -2.3503360748291016
    3. 'a' → logprob: -9.350336074829102
    4. 'b' → logprob: -10.600336074829102
    5. '_' → logprob: -10.975336074829102
    6. 's' → logprob: -16.4753360748291
    7. '   ' → logprob: -16.7253360748291
    8. ' _' → logprob: -16.9753360748291
    9. '\' → logprob: -17.3503360748291
    10. '"_' → logprob: -17.5378360748291

Token 329: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2905954122543335
    2. '
' → logprob: -1.4155954122543335
    3. '    
' → logprob: -5.415595531463623
    4. ' if' → logprob: -5.665595531463623
    5. 'if' → logprob: -7.040595531463623
    6. '  
' → logprob: -8.165595054626465
    7. ' 
' → logprob: -9.040595054626465
    8. '<|end|>' → logprob: -10.040595054626465
    9. ',' → logprob: -10.165595054626465
    10. '   
' → logprob: -10.290595054626465

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028042374178767204
    2. 'if' → logprob: -3.6530423164367676
    3. 'trial' → logprob: -6.403042316436768
    4. 'for' → logprob: -10.028042793273926
    5. ' if' → logprob: -10.653042793273926
    6. ' trial' → logprob: -11.653042793273926
    7. '    
' → logprob: -13.278042793273926
    8. '       ' → logprob: -13.528042793273926
    9. 'tr' → logprob: -14.403042793273926
    10. '   ' → logprob: -14.778042793273926

Token 331: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0019362468738108873
    2. '   ' → logprob: -6.251936435699463
    3. ' if' → logprob: -12.126935958862305
    4. '    
' → logprob: -14.001935958862305
    5. '```' → logprob: -14.001935958862305
    6. 'trial' → logprob: -15.251935958862305
    7. 'for' → logprob: -16.001935958862305
    8. '	if' → logprob: -17.001935958862305
    9. 'import' → logprob: -17.001935958862305
    10. '#' → logprob: -17.126935958862305

Token 332: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.006731122732162476
    2. ' remainder' → logprob: -5.006731033325195
    3. ' re' → logprob: -12.506731033325195
    4. 'input' → logprob: -12.756731033325195
    5. '	re' → logprob: -12.881731033325195
    6. 'r' → logprob: -12.881731033325195
    7. '(re' → logprob: -13.756731033325195
    8. '   ' → logprob: -13.881731033325195
    9. 'b' → logprob: -14.506731033325195
    10. ' ' → logprob: -14.881731033325195

Token 333: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.927930654550437e-05
    2. '_' → logprob: -10.750029563903809
    3. '%' → logprob: -11.875029563903809
    4. '%b' → logprob: -14.750029563903809
    5. '_%' → logprob: -15.875029563903809
    6. ' %' → logprob: -16.000028610229492
    7. '_a' → logprob: -16.500028610229492
    8. 'b' → logprob: -17.375028610229492
    9. '_
' → logprob: -17.625028610229492
    10. '
' → logprob: -17.750028610229492

Token 334: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.008645651862025261
    2. ' %' → logprob: -4.758645534515381
    3. '%b' → logprob: -11.008646011352539
    4. '<' → logprob: -11.883646011352539
    5. '%s' → logprob: -13.008646011352539
    6. '%c' → logprob: -13.758646011352539
    7. '%i' → logprob: -14.008646011352539
    8. '>=' → logprob: -14.008646011352539
    9. '%d' → logprob: -14.383646011352539
    10. '%B' → logprob: -14.508646011352539

Token 335: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.306760805164231e-05
    2. ' input' → logprob: -11.25001335144043
    3. '=input' → logprob: -17.37501335144043
    4. '<input' → logprob: -17.75001335144043
    5. '[input' → logprob: -19.50001335144043
    6. 'int' → logprob: -19.62501335144043
    7. ',input' → logprob: -20.62501335144043
    8. '
' → logprob: -20.87501335144043
    9. '(input' → logprob: -21.00001335144043
    10. '	input' → logprob: -21.00001335144043

Token 336: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.7432603272027336e-06
    2. 'b' → logprob: -13.500001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_a' → logprob: -16.500001907348633
    5. '_B' → logprob: -17.875001907348633
    6. ' _' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '	b' → logprob: -20.000001907348633
    9. 'a' → logprob: -21.125001907348633
    10. '_
' → logprob: -21.375001907348633

Token 337: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7017137408256531
    2. '==' → logprob: -1.4517138004302979
    3. ' !=' → logprob: -1.4517138004302979
    4. ' ==' → logprob: -3.326713800430298
    5. '=' → logprob: -12.201713562011719
    6. ':' → logprob: -12.576713562011719
    7. ')!=' → logprob: -12.701713562011719
    8. '==
' → logprob: -13.326713562011719
    9. '!==' → logprob: -13.701713562011719
    10. ' ' → logprob: -14.451713562011719

Token 338: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.250059127807617
    4. '
' → logprob: -19.625059127807617
    5. '۰' → logprob: -19.625059127807617
    6. '  ' → logprob: -19.625059127807617
    7. ' ' → logprob: -20.250059127807617
    8. '1' → logprob: -20.375059127807617
    9. '  ' → logprob: -20.625059127807617
    10. '=' → logprob: -21.125059127807617

Token 339: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.00002098083496
    4. '۰' → logprob: -19.12502098083496
    5. '  ' → logprob: -19.62502098083496
    6. ' ' → logprob: -20.87502098083496
    7. '  ' → logprob: -20.87502098083496
    8. '
' → logprob: -21.25002098083496
    9. '=' → logprob: -21.25002098083496
    10. '1' → logprob: -21.25002098083496

Token 340: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001755383680574596
    2. ' and' → logprob: -6.626755237579346
    3. ':
' → logprob: -8.376755714416504
    4. 'and' → logprob: -8.876755714416504
    5. ' :' → logprob: -10.876755714416504
    6. '=' → logprob: -11.001755714416504
    7. ' or' → logprob: -11.626755714416504
    8. '==' → logprob: -12.001755714416504
    9. '   ' → logprob: -12.626755714416504
    10. ':return' → logprob: -13.501755714416504

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002655079588294029
    2. ' continue' → logprob: -8.750265121459961
    3. '   ' → logprob: -9.500265121459961
    4. '           ' → logprob: -11.875265121459961
    5. '    ' → logprob: -12.000265121459961
    6. 'continue' → logprob: -12.250265121459961
    7. '	continue' → logprob: -12.375265121459961
    8. '```' → logprob: -13.125265121459961
    9. '        
' → logprob: -13.375265121459961
    10. '    ' → logprob: -14.375265121459961

Token 342: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.11475952714681625
    2. '   ' → logprob: -2.6147594451904297
    3. ' continue' → logprob: -3.6147594451904297
    4. '       ' → logprob: -4.86475944519043
    5. '           ' → logprob: -7.86475944519043
    6. '	continue' → logprob: -8.48975944519043
    7. ' ' → logprob: -12.61475944519043
    8. '               ' → logprob: -13.73975944519043
    9. '```' → logprob: -13.73975944519043
    10. '     ' → logprob: -14.23975944519043

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006088054273277521
    2. '    
' → logprob: -5.2560882568359375
    3. '
' → logprob: -7.1310882568359375
    4. '   
' → logprob: -11.131088256835938
    5. 'b' → logprob: -11.506088256835938
    6. ' 
' → logprob: -11.881088256835938
    7. '  
' → logprob: -11.881088256835938
    8. ' trial' → logprob: -12.631088256835938
    9. '        
' → logprob: -12.881088256835938
    10. '     
' → logprob: -13.131088256835938

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007764920126646757
    2. ' trial' → logprob: -5.00776481628418
    3. '    
' → logprob: -7.50776481628418
    4. 'trial' → logprob: -8.75776481628418
    5. ' for' → logprob: -9.63276481628418
    6. '    ' → logprob: -9.63276481628418
    7. 'b' → logprob: -9.88276481628418
    8. '   ' → logprob: -10.50776481628418
    9. ' b' → logprob: -10.75776481628418
    10. ' count' → logprob: -10.75776481628418

Token 345: ' trial' (ID: 11791)
  Prédit: 'trial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trial' (adapté à ' trial') → logprob: -0.01448313519358635
    2. ' trial' → logprob: -4.6394829750061035
    3. 'count' → logprob: -5.5144829750061035
    4. '   ' → logprob: -7.8894829750061035
    5. 'num' → logprob: -9.014483451843262
    6. 'tr' → logprob: -10.514483451843262
    7. '    
' → logprob: -10.764483451843262
    8. 'trip' → logprob: -11.014483451843262
    9. ' count' → logprob: -11.139483451843262
    10. 'total' → logprob: -11.639483451843262

Token 346: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. 'b' → logprob: -16.375
    3. '_' → logprob: -17.25
    4. '_a' → logprob: -19.625
    5. '	b' → logprob: -20.375
    6. '   ' → logprob: -20.5
    7. '_c' → logprob: -21.125
    8. '```' → logprob: -21.375
    9. '__' → logprob: -21.625
    10. '=' → logprob: -22.0

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. '=int' → logprob: -15.186968803405762
    4. ' ' → logprob: -15.311968803405762
    5. ',' → logprob: -16.061967849731445
    6. '＝' → logprob: -17.186967849731445
    7. ')' → logprob: -17.811967849731445
    8. ' =)' → logprob: -17.936967849731445
    9. ' =
' → logprob: -18.061967849731445
    10. '```' → logprob: -18.436967849731445

Token 348: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.3132723271846771
    2. 're' → logprob: -1.3132723569869995
    3. ' re' → logprob: -12.063272476196289
    4. '	re' → logprob: -12.688272476196289
    5. '(re' → logprob: -14.438272476196289
    6. '   ' → logprob: -14.688272476196289
    7. 'rema' → logprob: -15.188272476196289
    8. 'rest' → logprob: -15.188272476196289
    9. 'r' → logprob: -15.813272476196289
    10. 'rem' → logprob: -17.18827247619629

Token 349: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. '_a' → logprob: -16.75
    3. 'b' → logprob: -17.5
    4. '_' → logprob: -18.5
    5. '\' → logprob: -20.375
    6. '_B' → logprob: -20.5
    7. '   ' → logprob: -20.5
    8. '	b' → logprob: -20.75
    9. ' _' → logprob: -21.125
    10. '       ' → logprob: -21.125

Token 350: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.11291473358869553
    2. ' //' → logprob: -2.237914800643921
    3. '//=' → logprob: -9.3629150390625
    4. '   ' → logprob: -12.8629150390625
    5. '```' → logprob: -13.8629150390625
    6. ' ' → logprob: -14.6129150390625
    7. '=' → logprob: -14.7379150390625
    8. '    
' → logprob: -14.9879150390625
    9. '
' → logprob: -15.1129150390625
    10. '#' → logprob: -15.1129150390625

Token 351: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.7697225252486533e-06
    2. ' input' → logprob: -12.500003814697266
    3. 'b' → logprob: -19.375003814697266
    4. '<input' → logprob: -22.125003814697266
    5. 'user' → logprob: -22.375003814697266
    6. '   ' → logprob: -22.375003814697266
    7. '(input' → logprob: -22.500003814697266
    8. '[input' → logprob: -22.750003814697266
    9. '=input' → logprob: -23.375003814697266
    10. 'int' → logprob: -23.625003814697266

Token 352: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.836499985889532e-05
    2. 'b' → logprob: -9.7500581741333
    3. '_a' → logprob: -19.250059127807617
    4. '_' → logprob: -19.750059127807617
    5. '_B' → logprob: -20.625059127807617
    6. 'a' → logprob: -20.750059127807617
    7. ' ' → logprob: -21.750059127807617
    8. ' b' → logprob: -21.750059127807617
    9. 'B' → logprob: -21.750059127807617
    10. '```' → logprob: -21.875059127807617

Token 353: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017495537176728249
    2. '    
' → logprob: -6.626749515533447
    3. '
' → logprob: -8.876749992370605
    4. ' if' → logprob: -9.001749992370605
    5. 'if' → logprob: -9.126749992370605
    6. '   
' → logprob: -11.001749992370605
    7. 'result' → logprob: -11.126749992370605
    8. '  
' → logprob: -12.251749992370605
    9. ',' → logprob: -12.751749992370605
    10. '<|end|>' → logprob: -12.876749992370605

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010893125087022781
    2. ' if' → logprob: -4.76089334487915
    3. 'if' → logprob: -6.63589334487915
    4. '<|end|>' → logprob: -7.26089334487915
    5. '    
' → logprob: -9.385892868041992
    6. '
' → logprob: -9.760892868041992
    7. ',' → logprob: -10.635892868041992
    8. '```' → logprob: -10.885892868041992
    9. '    ' → logprob: -11.010892868041992
    10. ')' → logprob: -11.260892868041992

Token 355: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0015556862344965339
    2. ' if' → logprob: -6.501555919647217
    3. '   ' → logprob: -9.876555442810059
    4. '```' → logprob: -13.376555442810059
    5. '
' → logprob: -16.001556396484375
    6. '    
' → logprob: -16.251556396484375
    7. '``' → logprob: -17.251556396484375
    8. ' ' → logprob: -17.251556396484375
    9. '	if' → logprob: -17.501556396484375
    10. 'result' → logprob: -18.126556396484375

Token 356: ' trial' (ID: 11791)
  Prédit: ' trial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trial' → logprob: -0.12696129083633423
    2. 'trial' → logprob: -2.1269612312316895
    3. '0' → logprob: -10.626961708068848
    4. '1' → logprob: -12.626961708068848
    5. 'Trial' → logprob: -13.251961708068848
    6. ' ' → logprob: -13.251961708068848
    7. ' input' → logprob: -14.751961708068848
    8. '_trial' → logprob: -14.751961708068848
    9. 'tr' → logprob: -15.001961708068848
    10. '   ' → logprob: -15.126961708068848

Token 357: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03805491328239441
    2. '_a' → logprob: -3.288054943084717
    3. 'a' → logprob: -11.663054466247559
    4. 'b' → logprob: -12.413054466247559
    5. '_' → logprob: -14.038054466247559
    6. '	b' → logprob: -18.663055419921875
    7. '_
' → logprob: -19.663055419921875
    8. '```' → logprob: -20.100555419921875
    9. 's' → logprob: -20.600555419921875
    10. '_x' → logprob: -20.600555419921875

Token 358: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.48465386033058167
    2. '>' → logprob: -0.9846538305282593
    3. ' <=' → logprob: -4.984653949737549
    4. '<=' → logprob: -5.609653949737549
    5. '<' → logprob: -11.98465347290039
    6. '>=' → logprob: -12.10965347290039
    7. ' <' → logprob: -13.23465347290039
    8. ' >=' → logprob: -13.48465347290039
    9. ' ' → logprob: -14.73465347290039
    10. '>#' → logprob: -15.73465347290039

Token 359: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012403888104017824
    2. ' input' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.875123977661133
    4. '	input' → logprob: -16.625123977661133
    5. '=input' → logprob: -16.875123977661133
    6. '<input' → logprob: -17.875123977661133
    7. '<|end|>' → logprob: -18.250123977661133
    8. '(input' → logprob: -18.500123977661133
    9. ',input' → logprob: -18.625123977661133
    10. ' ' → logprob: -18.625123977661133

Token 360: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.125
    3. '_' → logprob: -18.25
    4. '<|end|>' → logprob: -18.75
    5. '_b' → logprob: -19.0
    6. '[' → logprob: -19.25
    7. '```' → logprob: -19.875
    8. ')' → logprob: -20.625
    9. '-n' → logprob: -20.75
    10. '_j' → logprob: -21.0

Token 361: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.582983136177063
    2. ':' → logprob: -0.832983136177063
    3. ':
' → logprob: -5.082983016967773
    4. '   ' → logprob: -7.582983016967773
    5. 'or' → logprob: -8.332983016967773
    6. '       ' → logprob: -10.082983016967773
    7. ' ' → logprob: -11.957983016967773
    8. ' :' → logprob: -11.957983016967773
    9. '    ' → logprob: -12.582983016967773
    10. '	or' → logprob: -12.707983016967773

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009792448952794075
    2. ':' → logprob: -4.759792327880859
    3. ':
' → logprob: -7.134792327880859
    4. '   ' → logprob: -8.50979232788086
    5. ' or' → logprob: -9.25979232788086
    6. ' continue' → logprob: -9.63479232788086
    7. ' and' → logprob: -12.38479232788086
    8. 'continue' → logprob: -12.50979232788086
    9. ',' → logprob: -12.88479232788086
    10. '           ' → logprob: -13.13479232788086

Token 363: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0547918900847435
    2. ' continue' → logprob: -3.0547919273376465
    3. 'continue' (adapté à ' continue') → logprob: -5.1797919273376465
    4. '       ' → logprob: -7.5547919273376465
    5. '	continue' → logprob: -10.804791450500488
    6. ' break' → logprob: -12.304791450500488
    7. '    ' → logprob: -12.929791450500488
    8. '```' → logprob: -12.929791450500488
    9. ' ' → logprob: -13.804791450500488
    10. '  ' → logprob: -14.429791450500488

Token 364: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16198696196079254
    2. ':' → logprob: -1.9119869470596313
    3. '       ' → logprob: -7.161986827850342
    4. '```' → logprob: -7.911986827850342
    5. ':
' → logprob: -8.6619873046875
    6. ',' → logprob: -9.6619873046875
    7. ')' → logprob: -9.7869873046875
    8. ' and' → logprob: -9.9119873046875
    9. '    
' → logprob: -10.0369873046875
    10. '):' → logprob: -10.0369873046875

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00035536551149562
    2. 'result' → logprob: -9.00035572052002
    3. '```' → logprob: -9.25035572052002
    4. ' result' → logprob: -9.87535572052002
    5. '    
' → logprob: -10.12535572052002
    6. '<|end|>' → logprob: -11.62535572052002
    7. '
' → logprob: -11.75035572052002
    8. ')' → logprob: -12.12535572052002
    9. '	result' → logprob: -12.25035572052002
    10. '(result' → logprob: -12.25035572052002

Token 366: ' combinations' (ID: 43835)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09105498343706131
    2. '   ' → logprob: -2.466054916381836
    3. '    
' → logprob: -6.716054916381836
    4. ' result' → logprob: -7.466054916381836
    5. '
' → logprob: -8.841054916381836
    6. 'res' → logprob: -9.716054916381836
    7. 'comb' → logprob: -10.841054916381836
    8. 'count' → logprob: -11.216054916381836
    9. '```' → logprob: -11.341054916381836
    10. '	result' → logprob: -11.591054916381836

Token 367: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01867109350860119
    2. '=' → logprob: -4.643671035766602
    3. '_a' → logprob: -4.893671035766602
    4. '_' → logprob: -7.143671035766602
    5. '_result' → logprob: -8.268671035766602
    6. '_count' → logprob: -8.643671035766602
    7. 'a' → logprob: -10.518671035766602
    8. '   ' → logprob: -11.143671035766602
    9. '_val' → logprob: -11.143671035766602
    10. '_for' → logprob: -11.143671035766602

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003605416975915432
    2. '=' → logprob: -5.628605365753174
    3. ' ' → logprob: -12.378605842590332
    4. ' +=' → logprob: -14.003605842590332
    5. ' =
' → logprob: -15.878605842590332
    6. '_' → logprob: -16.628604888916016
    7. '  ' → logprob: -17.378604888916016
    8. ',' → logprob: -17.628604888916016
    9. ' ' → logprob: -17.878604888916016
    10. '   ' → logprob: -18.003604888916016

Token 369: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.03804677724838257
    2. ' compute' → logprob: -3.2880468368530273
    3. 'factor' → logprob: -12.538046836853027
    4. ' factorial' → logprob: -14.163046836853027
    5. 'com' → logprob: -14.663046836853027
    6. 'calculate' → logprob: -14.788046836853027
    7. 'computer' → logprob: -16.03804588317871
    8. '(com' → logprob: -16.53804588317871
    9. 'comput' → logprob: -17.41304588317871
    10. 'computed' → logprob: -17.53804588317871

Token 370: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.00021271906734909862
    2. '(f' → logprob: -9.125212669372559
    3. 'bin' → logprob: -9.500212669372559
    4. '_factor' → logprob: -10.500212669372559
    5. '(bin' → logprob: -14.875212669372559
    6. '_' → logprob: -15.375212669372559
    7. '_b' → logprob: -15.625212669372559
    8. '(' → logprob: -15.750212669372559
    9. '_binary' → logprob: -16.000213623046875
    10. '_(' → logprob: -16.125213623046875

Token 371: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -2.5776860184123507e-06
    2. 'om' → logprob: -13.37500286102295
    3. '[' → logprob: -15.62500286102295
    4. '(' → logprob: -15.62500286102295
    5. '```' → logprob: -15.62500286102295
    6. 'omal' → logprob: -16.375001907348633
    7. 'omia' → logprob: -16.375001907348633
    8. 'ary' → logprob: -16.500001907348633
    9. '
' → logprob: -17.375001907348633
    10. 'imal' → logprob: -17.625001907348633

Token 372: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -3.404745439183898e-05
    2. '_coeff' → logprob: -10.87503433227539
    3. '_factor' → logprob: -11.75003433227539
    4. 'co' → logprob: -12.62503433227539
    5. '_coef' → logprob: -13.75003433227539
    6. '(f' → logprob: -14.37503433227539
    7. '```' → logprob: -14.37503433227539
    8. '(co' → logprob: -15.00003433227539
    9. '`' → logprob: -15.25003433227539
    10. 'Coefficient' → logprob: -15.75003433227539

Token 373: 'efficient' (ID: 76593)
  Prédit: 'fficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fficient' → logprob: -0.0022364973556250334
    2. 'efficient' → logprob: -6.127236366271973
    3. 'ff' → logprob: -10.752236366271973
    4. 'fficients' → logprob: -10.752236366271973
    5. 'icient' → logprob: -12.627236366271973
    6. 'cient' → logprob: -12.752236366271973
    7. 'ffic' → logprob: -14.252236366271973
    8. '```' → logprob: -14.877236366271973
    9. 'off' → logprob: -15.002236366271973
    10. 'coeff' → logprob: -15.877236366271973

Token 374: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.624555291840807e-05
    2. '(' → logprob: -9.500076293945312
    3. '(
' → logprob: -14.000076293945312
    4. 'factor' → logprob: -14.500076293945312
    5. ' factorial' → logprob: -18.375076293945312
    6. '<|end|>' → logprob: -18.500076293945312
    7. '_factor' → logprob: -18.750076293945312
    8. '```' → logprob: -19.000076293945312
    9. '.factor' → logprob: -19.000076293945312
    10. '(`' → logprob: -19.375076293945312

Token 375: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -3.953082341467962e-05
    2. 'factor' → logprob: -10.250039100646973
    3. 'act' → logprob: -12.750039100646973
    4. 'ctor' → logprob: -14.125039100646973
    5. '```' → logprob: -15.375039100646973
    6. 'atorial' → logprob: -16.12504005432129
    7. 'actory' → logprob: -16.87504005432129
    8. 'ac' → logprob: -17.75004005432129
    9. 'ator' → logprob: -17.75004005432129
    10. '_factor' → logprob: -18.00004005432129

Token 376: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -3.531315314830863e-06
    2. 'orial' → logprob: -13.375003814697266
    3. 'actor' → logprob: -14.750003814697266
    4. 'al' → logprob: -15.000003814697266
    5. 'ials' → logprob: -15.000003814697266
    6. '_factor' → logprob: -15.000003814697266
    7. 'rial' → logprob: -15.750003814697266
    8. 'ialist' → logprob: -15.750003814697266
    9. 'omial' → logprob: -16.625003814697266
    10. 'factor' → logprob: -17.000003814697266

Token 377: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0030671951826661825
    2. '(f' → logprob: -5.8780670166015625
    3. 'arr' → logprob: -9.003067016601562
    4. ',' → logprob: -9.878067016601562
    5. 'Arr' → logprob: -10.128067016601562
    6. ',f' → logprob: -11.128067016601562
    7. '[f' → logprob: -11.878067016601562
    8. ')' → logprob: -12.378067016601562
    9. '_,' → logprob: -12.628067016601562
    10. '_factor' → logprob: -12.878067016601562

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.87501049041748
    3. ',f' → logprob: -13.12501049041748
    4. ',
' → logprob: -14.12501049041748
    5. ',input' → logprob: -15.62501049041748
    6. ',

' → logprob: -16.375009536743164
    7. '[' → logprob: -16.500009536743164
    8. '```' → logprob: -16.875009536743164
    9. '(' → logprob: -17.250009536743164
    10. '<|end|>' → logprob: -17.375009536743164

Token 379: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0009122979827225208
    2. ' inv' → logprob: -7.000912189483643
    3. '(inv' → logprob: -14.5009126663208
    4. 'inverse' → logprob: -16.000911712646484
    5. '
' → logprob: -16.375911712646484
    6. '_inv' → logprob: -16.875911712646484
    7. '.inv' → logprob: -17.375911712646484
    8. ' ' → logprob: -18.250911712646484
    9. 'inf' → logprob: -18.625911712646484
    10. '```' → logprob: -19.000911712646484

Token 380: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -4.320199877838604e-07
    2. 'factor' → logprob: -14.875
    3. '_fact' → logprob: -18.125
    4. '```' → logprob: -18.125
    5. '_inverse' → logprob: -18.625
    6. '_' → logprob: -19.0
    7. '_FACTOR' → logprob: -19.125
    8. '_f' → logprob: -19.25
    9. ' factorial' → logprob: -19.375
    10. '_fac' → logprob: -19.625

Token 381: 'ial' (ID: 563)
  Prédit: 'orial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orial' → logprob: -0.49157461524009705
    2. 'ial' → logprob: -0.9915746450424194
    3. 'actor' → logprob: -4.366574764251709
    4. 'atorial' → logprob: -5.866574764251709
    5. '_factor' → logprob: -7.241574764251709
    6. 'ials' → logprob: -7.741574764251709
    7. '_arr' → logprob: -8.86657428741455
    8. 'rial' → logprob: -8.99157428741455
    9. 'ctor' → logprob: -9.36657428741455
    10. 'ional' → logprob: -9.99157428741455

Token 382: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.30767473578453064
    2. 'arr' → logprob: -1.682674765586853
    3. ',' → logprob: -2.5576746463775635
    4. '_,' → logprob: -8.432674407958984
    5. 's' → logprob: -8.682674407958984
    6. '_inv' → logprob: -8.807674407958984
    7. 'a' → logprob: -8.932674407958984
    8. ')' → logprob: -9.307674407958984
    9. 'inv' → logprob: -9.307674407958984
    10. '[' → logprob: -9.557674407958984

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.946405094116926e-05
    2. ',input' → logprob: -9.750079154968262
    3. ' ,' → logprob: -11.375079154968262
    4. ',f' → logprob: -11.750079154968262
    5. ',
' → logprob: -14.750079154968262
    6. ',result' → logprob: -15.125079154968262
    7. ',n' → logprob: -16.250080108642578
    8. '[' → logprob: -16.375080108642578
    9. ',int' → logprob: -16.375080108642578
    10. 'factor' → logprob: -16.625080108642578

Token 384: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3306015716807451e-05
    2. ' input' → logprob: -11.25001335144043
    3. 'n' → logprob: -15.37501335144043
    4. '
' → logprob: -16.50001335144043
    5. '(input' → logprob: -18.12501335144043
    6. '[input' → logprob: -18.12501335144043
    7. '   ' → logprob: -18.25001335144043
    8. '<input' → logprob: -18.37501335144043
    9. '	input' → logprob: -19.50001335144043
    10. '=input' → logprob: -19.87501335144043

Token 385: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.750000953674316
    3. '```' → logprob: -16.25
    4. 'a' → logprob: -16.75
    5. '[' → logprob: -17.5
    6. '   ' → logprob: -17.625
    7. '_' → logprob: -17.875
    8. '_a' → logprob: -18.125
    9. '
' → logprob: -18.375
    10. '_,' → logprob: -18.5

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3213025744771585e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',tr' → logprob: -13.500033378601074
    4. ' trial' → logprob: -16.000032424926758
    5. ',
' → logprob: -16.000032424926758
    6. ' ' → logprob: -17.125032424926758
    7. ')' → logprob: -17.125032424926758
    8. 'trial' → logprob: -17.125032424926758
    9. ',t' → logprob: -17.250032424926758
    10. '   ' → logprob: -17.375032424926758

Token 387: ' trial' (ID: 11791)
  Prédit: 'trial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trial' → logprob: -0.0002613358374219388
    2. ' trial' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.500261306762695
    4. 'trail' → logprob: -18.000261306762695
    5. '_trial' → logprob: -18.625261306762695
    6. 'Trial' → logprob: -19.750261306762695
    7. '
' → logprob: -20.250261306762695
    8. ' ' → logprob: -20.625261306762695
    9. '  ' → logprob: -21.000261306762695
    10. 'train' → logprob: -21.125261306762695

Token 388: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00023083435371518135
    2. 'a' → logprob: -8.37523078918457
    3. '_b' → logprob: -15.37523078918457
    4. '_' → logprob: -17.75023078918457
    5. 'а' → logprob: -18.12523078918457
    6. '```' → logprob: -19.12523078918457
    7. ')' → logprob: -19.25023078918457
    8. '­a' → logprob: -19.37523078918457
    9. ' a' → logprob: -19.50023078918457
    10. '	a' → logprob: -19.75023078918457

Token 389: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014209816232323647
    2. ',' → logprob: -4.264209747314453
    3. ' )' → logprob: -10.889209747314453
    4. ')
' → logprob: -11.014209747314453
    5. '   ' → logprob: -12.514209747314453
    6. ')*' → logprob: -12.639209747314453
    7. ',)' → logprob: -13.139209747314453
    8. '```' → logprob: -14.889209747314453
    9. '),' → logprob: -15.139209747314453
    10. ' ' → logprob: -15.139209747314453

Token 390: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.686778503237292e-05
    2. ' mod' → logprob: -9.250097274780273
    3. '998' → logprob: -14.750097274780273
    4. '
' → logprob: -15.875097274780273
    5. '	mod' → logprob: -16.000097274780273
    6. '   ' → logprob: -16.875097274780273
    7. ')' → logprob: -17.500097274780273
    8. 'moder' → logprob: -18.000097274780273
    9. '```' → logprob: -18.000097274780273
    10. '_mod' → logprob: -18.625097274780273

Token 391: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -4.008129963040119e-06
    2. 'const' → logprob: -12.750003814697266
    3. ')' → logprob: -14.250003814697266
    4. '_CONST' → logprob: -16.125003814697266
    5. '_consts' → logprob: -16.750003814697266
    6. '_cont' → logprob: -16.875003814697266
    7. '_)' → logprob: -17.000003814697266
    8. ' const' → logprob: -17.125003814697266
    9. 'Const' → logprob: -17.250003814697266
    10. ',' → logprob: -17.375003814697266

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010687739122658968
    2. ')
' → logprob: -6.876068592071533
    3. '   ' → logprob: -10.501069068908691
    4. ')*' → logprob: -12.501069068908691
    5. ' )' → logprob: -13.126069068908691
    6. ')
' → logprob: -13.876069068908691
    7. ',' → logprob: -13.876069068908691
    8. ')

' → logprob: -15.376069068908691
    9. '```' → logprob: -15.751069068908691
    10. ' ' → logprob: -15.876069068908691

Token 393: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2576524019241333
    2. '   ' → logprob: -2.1326522827148438
    3. ' result' → logprob: -3.5076522827148438
    4. 'com' → logprob: -3.6326522827148438
    5. '```' → logprob: -4.507652282714844
    6. '<|end|>' → logprob: -4.507652282714844
    7. ' ' → logprob: -4.882652282714844
    8. ' combinations' → logprob: -5.507652282714844
    9. '[' → logprob: -6.007652282714844
    10. '    
' → logprob: -6.007652282714844

Token 394: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.018215147778391838
    2. ' combinations' → logprob: -4.018215179443359
    3. 'result' → logprob: -10.01821517944336
    4. '   ' → logprob: -12.14321517944336
    5. ' com' → logprob: -12.51821517944336
    6. '+' → logprob: -12.89321517944336
    7. 'comb' → logprob: -13.14321517944336
    8. '(com' → logprob: -13.51821517944336
    9. '	com' → logprob: -13.89321517944336
    10. ' result' → logprob: -13.89321517944336

Token 395: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -11.75001049041748
    3. 'b' → logprob: -13.62501049041748
    4. '```' → logprob: -14.12501049041748
    5. '=' → logprob: -15.75001049041748
    6. '_=' → logprob: -16.000009536743164
    7. ' _' → logprob: -17.000009536743164
    8. '_
' → logprob: -17.500009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '	b' → logprob: -18.000009536743164

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. ' +=' → logprob: -15.663042068481445
    4. ' ' → logprob: -16.913042068481445
    5. '   ' → logprob: -18.163042068481445
    6. ',' → logprob: -18.163042068481445
    7. ' ' → logprob: -18.663042068481445
    8. ' *=' → logprob: -18.788042068481445
    9. '  ' → logprob: -18.913042068481445
    10. '	' → logprob: -18.913042068481445

Token 397: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.061967797577381134
    2. 'compute' → logprob: -2.8119678497314453
    3. 'com' → logprob: -16.436967849731445
    4. '.compute' → logprob: -17.186967849731445
    5. '(com' → logprob: -17.311967849731445
    6. ' ' → logprob: -17.561967849731445
    7. '	com' → logprob: -17.811967849731445
    8. '_compute' → logprob: -17.811967849731445
    9. ' ' → logprob: -18.936967849731445
    10. 'computer' → logprob: -19.311967849731445

Token 398: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -2.935296834039036e-06
    2. 'bin' → logprob: -13.37500286102295
    3. '```' → logprob: -14.25000286102295
    4. '_' → logprob: -15.25000286102295
    5. '_factor' → logprob: -15.37500286102295
    6. '_b' → logprob: -16.000003814697266
    7. 'Bin' → logprob: -17.000003814697266
    8. '_bit' → logprob: -17.875003814697266
    9. ' bin' → logprob: -18.000003814697266
    10. '\' → logprob: -18.125003814697266

Token 399: 'omial' (ID: 42600)
  Prédit: 'omial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omial' → logprob: -0.0001980570232262835
    2. '_factor' → logprob: -9.125198364257812
    3. 'om' → logprob: -9.375198364257812
    4. 'ial' → logprob: -13.875198364257812
    5. 'atorial' → logprob: -14.375198364257812
    6. '_coeff' → logprob: -14.375198364257812
    7. 'al' → logprob: -14.750198364257812
    8. 'imal' → logprob: -14.875198364257812
    9. '_co' → logprob: -16.000198364257812
    10. 'inal' → logprob: -16.125198364257812

Token 400: '_co' (ID: 21102)
  Prédit: '_co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_co' → logprob: -0.00028016636497341096
    2. '_factor' → logprob: -8.500280380249023
    3. '_coeff' → logprob: -9.750280380249023
    4. 'co' → logprob: -12.375280380249023
    5. '(arr' → logprob: -12.875280380249023
    6. '_counter' → logprob: -13.250280380249023
    7. '_arr' → logprob: -13.375280380249023
    8. 'arr' → logprob: -13.375280380249023
    9. '_coef' → logprob: -13.500280380249023
    10. '\' → logprob: -13.750280380249023

Token 401: 'efficient' (ID: 76593)
  Prédit: 'fficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fficient' → logprob: -0.04365978762507439
    2. 'efficient' → logprob: -3.1686596870422363
    3. '_factor' → logprob: -7.918659687042236
    4. 'ff' → logprob: -9.043660163879395
    5. 'fficients' → logprob: -9.918660163879395
    6. '_co' → logprob: -10.293660163879395
    7. 'cient' → logprob: -11.293660163879395
    8. 'ffic' → logprob: -11.543660163879395
    9. 'off' → logprob: -11.668660163879395
    10. 'f' → logprob: -11.668660163879395

Token 402: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -15.500075340270996
    4. 'factor' → logprob: -17.37507438659668
    5. ' factorial' → logprob: -18.75007438659668
    6. '```' → logprob: -18.75007438659668
    7. ' (' → logprob: -19.25007438659668
    8. '(`' → logprob: -20.00007438659668
    9. '	f' → logprob: -20.62507438659668
    10. '_factor' → logprob: -20.75007438659668

Token 403: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.10024819523096085
    2. 'factor' → logprob: -2.350248098373413
    3. '_factor' → logprob: -10.600248336791992
    4. ' factorial' → logprob: -11.725248336791992
    5. 'act' → logprob: -12.600248336791992
    6. '(f' → logprob: -12.975248336791992
    7. '.factor' → logprob: -13.475248336791992
    8. '-factor' → logprob: -15.100248336791992
    9. '```' → logprob: -15.100248336791992
    10. 'actoring' → logprob: -16.475248336791992

Token 404: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.00487958500161767
    2. 'actor' → logprob: -6.004879474639893
    3. 'arr' → logprob: -7.254879474639893
    4. '_arr' → logprob: -7.504879474639893
    5. '_factor' → logprob: -8.00487995147705
    6. 'al' → logprob: -8.12987995147705
    7. 'orial' → logprob: -8.62987995147705
    8. 'ior' → logprob: -8.62987995147705
    9. 'atorial' → logprob: -9.75487995147705
    10. 'rial' → logprob: -10.25487995147705

Token 405: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -6.754368223482743e-05
    2. 'arr' → logprob: -9.625067710876465
    3. '[' → logprob: -14.375067710876465
    4. '[arr' → logprob: -14.875067710876465
    5. 'Arr' → logprob: -15.500067710876465
    6. '	arr' → logprob: -15.625067710876465
    7. '_,' → logprob: -16.50006675720215
    8. ',' → logprob: -16.50006675720215
    9. '(arr' → logprob: -16.87506675720215
    10. '[
' → logprob: -17.37506675720215

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ',
' → logprob: -14.625000953674316
    3. ' ,' → logprob: -15.375000953674316
    4. ',f' → logprob: -17.25
    5. ')' → logprob: -17.875
    6. '[' → logprob: -18.5
    7. ',

' → logprob: -18.875
    8. ',
' → logprob: -19.0
    9. '```' → logprob: -19.375
    10. '(' → logprob: -19.625

Token 407: ' inv' (ID: 1827)
  Prédit: ' inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inv' → logprob: -0.5759441256523132
    2. 'inv' → logprob: -0.8259441256523132
    3. '(inv' → logprob: -12.575943946838379
    4. '   ' → logprob: -15.200943946838379
    5. '_inv' → logprob: -15.200943946838379
    6. '.inv' → logprob: -15.200943946838379
    7. ' ' → logprob: -16.075944900512695
    8. 'inverse' → logprob: -16.575944900512695
    9. '
' → logprob: -16.825944900512695
    10. '```' → logprob: -17.200944900512695

Token 408: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.00042864278657361865
    2. 'factor' → logprob: -7.875428676605225
    3. 'val' → logprob: -11.500428199768066
    4. 'b' → logprob: -11.750428199768066
    5. 'n' → logprob: -11.750428199768066
    6. '_b' → logprob: -11.750428199768066
    7. '_n' → logprob: -12.500428199768066
    8. '_val' → logprob: -12.625428199768066
    9. '_inverse' → logprob: -13.625428199768066
    10. '_f' → logprob: -13.875428199768066

Token 409: 'ial' (ID: 563)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.5542512536048889
    2. 'arr' → logprob: -1.4292511940002441
    3. 'atorial' → logprob: -2.804251194000244
    4. 'ial' → logprob: -2.929251194000244
    5. 'orial' → logprob: -3.304251194000244
    6. 'actor' → logprob: -3.554251194000244
    7. 'al' → logprob: -6.554251194000244
    8. 'ator' → logprob: -6.554251194000244
    9. 'ior' → logprob: -6.679251194000244
    10. '_factor' → logprob: -7.179251194000244

Token 410: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.03805079311132431
    2. 'arr' → logprob: -3.288050889968872
    3. '_inv' → logprob: -13.038050651550293
    4. ',' → logprob: -13.038050651550293
    5. 'Arr' → logprob: -13.288050651550293
    6. 'inv' → logprob: -13.788050651550293
    7. 'input' → logprob: -14.788050651550293
    8. 'b' → logprob: -15.038050651550293
    9. 'n' → logprob: -15.163050651550293
    10. ' arr' → logprob: -15.288050651550293

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002979240380227566
    2. ',input' → logprob: -8.125297546386719
    3. ' ,' → logprob: -13.875297546386719
    4. '(input' → logprob: -15.375297546386719
    5. ',
' → logprob: -15.375297546386719
    6. '[input' → logprob: -15.500297546386719
    7. '   ' → logprob: -15.750297546386719
    8. 'input' → logprob: -15.750297546386719
    9. '=input' → logprob: -16.25029754638672
    10. '```' → logprob: -18.37529754638672

Token 412: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0052342405542731285
    2. ' input' → logprob: -5.255234241485596
    3. '(input' → logprob: -14.880233764648438
    4. '[input' → logprob: -16.880233764648438
    5. '=input' → logprob: -18.130233764648438
    6. ',input' → logprob: -18.255233764648438
    7. 'factor' → logprob: -18.630233764648438
    8. '   ' → logprob: -18.630233764648438
    9. 'Input' → logprob: -18.880233764648438
    10. '	input' → logprob: -19.005233764648438

Token 413: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: 0.0
    2. '_,' → logprob: -17.375
    3. '_' → logprob: -17.625
    4. '_b' → logprob: -18.25
    5. '```' → logprob: -20.125
    6. '_k' → logprob: -20.75
    7. ',' → logprob: -20.75
    8. '_a' → logprob: -21.5
    9. ' _' → logprob: -21.875
    10. '_
' → logprob: -22.375

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',tr' → logprob: -14.125014305114746
    4. ',
' → logprob: -15.375014305114746
    5. '   ' → logprob: -17.00001335144043
    6. ')' → logprob: -17.62501335144043
    7. '<|end|>' → logprob: -19.00001335144043
    8. '[' → logprob: -19.00001335144043
    9. '```' → logprob: -19.12501335144043
    10. '),' → logprob: -19.75001335144043

Token 415: ' trial' (ID: 11791)
  Prédit: 'trial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trial' → logprob: -0.0019288709154352546
    2. ' trial' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.751928329467773
    4. '_trial' → logprob: -16.876928329467773
    5. 'trail' → logprob: -17.751928329467773
    6. 'Trial' → logprob: -18.001928329467773
    7. 'tr' → logprob: -18.126928329467773
    8. '  ' → logprob: -19.751928329467773
    9. ' ' → logprob: -19.876928329467773
    10. 'trip' → logprob: -20.001928329467773

Token 416: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: 0.0
    2. 'b' → logprob: -17.25
    3. '	b' → logprob: -20.5
    4. '_a' → logprob: -20.875
    5. '-b' → logprob: -22.75
    6. '\' → logprob: -23.125
    7. '_' → logprob: -23.75
    8. '_B' → logprob: -24.0
    9. '```' → logprob: -24.25
    10. 'б' → logprob: -24.75

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.553032628493384e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',
' → logprob: -15.750075340270996
    4. '```' → logprob: -16.125076293945312
    5. '   ' → logprob: -16.250076293945312
    6. ')' → logprob: -16.750076293945312
    7. '`,' → logprob: -16.750076293945312
    8. '	' → logprob: -17.750076293945312
    9. '),' → logprob: -18.375076293945312
    10. ' ' → logprob: -18.500076293945312

Token 418: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0024756586644798517
    2. ' mod' → logprob: -6.002475738525391
    3. '	mod' → logprob: -18.25247573852539
    4. '(mod' → logprob: -19.25247573852539
    5. '_mod' → logprob: -21.62747573852539
    6. ' ' → logprob: -21.75247573852539
    7. '.mod' → logprob: -22.12747573852539
    8. ' мод' → logprob: -22.75247573852539
    9. '```' → logprob: -24.00247573852539
    10. '   ' → logprob: -24.12747573852539

Token 419: '_const' (ID: 27511)
  Prédit: '_const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_const' → logprob: -0.004629838280379772
    2. 'const' → logprob: -5.379629611968994
    3. 'b' → logprob: -12.379630088806152
    4. '_CONST' → logprob: -12.879630088806152
    5. '_consts' → logprob: -13.754630088806152
    6. ' const' → logprob: -14.004630088806152
    7. 'Const' → logprob: -14.629630088806152
    8. 'a' → logprob: -16.004629135131836
    9. '.const' → logprob: -16.379629135131836
    10. '```' → logprob: -16.379629135131836

Token 420: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25569960474967957
    2. '   ' → logprob: -1.880699634552002
    3. ')' → logprob: -2.630699634552002
    4. ',
' → logprob: -8.130699157714844
    5. ')
' → logprob: -8.255699157714844
    6. ',result' → logprob: -8.505699157714844
    7. '%' → logprob: -9.755699157714844
    8. '
' → logprob: -10.005699157714844
    9. ' ,' → logprob: -10.005699157714844
    10. ' ' → logprob: -10.130699157714844

Token 421: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.023867834359407425
    2. '   ' → logprob: -4.023867607116699
    3. ' result' → logprob: -5.898867607116699
    4. '```' → logprob: -5.898867607116699
    5. '	result' → logprob: -9.5238676071167
    6. '
' → logprob: -9.6488676071167
    7. '``' → logprob: -10.3988676071167
    8. '    
' → logprob: -10.8988676071167
    9. '  
' → logprob: -12.3988676071167
    10. '+' → logprob: -12.3988676071167

Token 422: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -4.961759259458631e-06
    2. ' result' → logprob: -12.500004768371582
    3. '   ' → logprob: -13.750004768371582
    4. '```' → logprob: -15.750004768371582
    5. '
' → logprob: -17.7500057220459
    6. '	result' → logprob: -18.0000057220459
    7. '_result' → logprob: -18.1250057220459
    8. '``' → logprob: -19.2500057220459
    9. '(result' → logprob: -19.8750057220459
    10. '    
' → logprob: -20.3750057220459

Token 423: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.500001907348633
    3. '_count' → logprob: -15.625001907348633
    4. '_result' → logprob: -15.750001907348633
    5. '_c' → logprob: -16.500001907348633
    6. '_COUNTER' → logprob: -18.000001907348633
    7. ' _' → logprob: -18.125001907348633
    8. 'Counter' → logprob: -18.250001907348633
    9. '\' → logprob: -18.875001907348633
    10. 'counter' → logprob: -19.125001907348633

Token 424: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10451693832874298
    2. ' +=' → logprob: -2.3545169830322266
    3. '=' → logprob: -5.479516983032227
    4. ' =' → logprob: -9.104516983032227
    5. '   ' → logprob: -12.479516983032227
    6. '+' → logprob: -12.604516983032227
    7. '```' → logprob: -12.854516983032227
    8. ']+=' → logprob: -12.979516983032227
    9. '+=(' → logprob: -12.979516983032227
    10. '%=' → logprob: -13.479516983032227

Token 425: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00016301481809932739
    2. ' (' → logprob: -8.875163078308105
    3. '(res' → logprob: -11.875163078308105
    4. '   ' → logprob: -12.125163078308105
    5. '(' → logprob: -12.125163078308105
    6. '(results' → logprob: -12.375163078308105
    7. '(Result' → logprob: -15.125163078308105
    8. '(response' → logprob: -15.375163078308105
    9. '(resultado' → logprob: -15.750163078308105
    10. '(ret' → logprob: -16.12516212463379

Token 426: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.9795445849886164e-05
    2. '(result' → logprob: -9.750060081481934
    3. ' result' → logprob: -13.500060081481934
    4. '   ' → logprob: -20.125059127807617
    5. '[result' → logprob: -20.375059127807617
    6. '	result' → logprob: -21.125059127807617
    7. '$result' → logprob: -21.625059127807617
    8. '_result' → logprob: -22.000059127807617
    9. '=result' → logprob: -22.125059127807617
    10. '.result' → logprob: -22.375059127807617

Token 427: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.1472419600977446e-06
    2. 'counter' → logprob: -13.875000953674316
    3. 'Counter' → logprob: -15.625000953674316
    4. '_result' → logprob: -18.375001907348633
    5. '_COUNTER' → logprob: -19.125001907348633
    6. '_' → logprob: -19.375001907348633
    7. ' counter' → logprob: -20.125001907348633
    8. '_c' → logprob: -20.250001907348633
    9. 'ounter' → logprob: -20.500001907348633
    10. '	counter' → logprob: -21.000001907348633

Token 428: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020667314529419
    2. '+' → logprob: -2.3502066135406494
    3. ' ' → logprob: -16.85020637512207
    4. '＋' → logprob: -17.97520637512207
    5. ' +
' → logprob: -18.35020637512207
    6. '+c' → logprob: -18.97520637512207
    7. ' +
' → logprob: -19.35020637512207
    8. '+r' → logprob: -19.47520637512207
    9. '+b' → logprob: -20.22520637512207
    10. '+s' → logprob: -20.22520637512207

Token 429: ' combinations' (ID: 43835)
  Prédit: ' combinations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -0.20189060270786285
    2. 'com' → logprob: -1.7018905878067017
    3. '(com' → logprob: -7.701890468597412
    4. 'comb' → logprob: -10.82689094543457
    5. '   ' → logprob: -13.07689094543457
    6. ' combin' → logprob: -13.95189094543457
    7. ' com' → logprob: -13.95189094543457
    8. '	com' → logprob: -14.95189094543457
    9. ' (' → logprob: -15.57689094543457
    10. ' ' → logprob: -15.57689094543457

Token 430: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.981667537620524e-06
    2. '_b' → logprob: -13.250001907348633
    3. '_' → logprob: -16.125001907348633
    4. 'a' → logprob: -17.250001907348633
    5. '_c' → logprob: -20.250001907348633
    6. 's' → logprob: -20.750001907348633
    7. '_i' → logprob: -21.625001907348633
    8. ' _' → logprob: -21.750001907348633
    9. '_s' → logprob: -21.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 431: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014540718868374825
    2. '*' → logprob: -4.264540672302246
    3. ')' → logprob: -7.889540672302246
    4. ' ' → logprob: -14.139540672302246
    5. '   ' → logprob: -14.264540672302246
    6. ' ' → logprob: -14.764540672302246
    7. '*object' → logprob: -15.014540672302246
    8. ' )' → logprob: -15.639540672302246
    9. ' *
' → logprob: -16.014541625976562
    10. '*)' → logprob: -16.139541625976562

Token 432: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.008617172949016094
    2. ' combinations' → logprob: -4.758617401123047
    3. 'comb' → logprob: -13.758617401123047
    4. '(com' → logprob: -14.258617401123047
    5. '	com' → logprob: -14.383617401123047
    6. ' com' → logprob: -15.258617401123047
    7. ' combin' → logprob: -16.258617401123047
    8. '_com' → logprob: -16.633617401123047
    9. 'combined' → logprob: -17.508617401123047
    10. '   ' → logprob: -18.633617401123047

Token 433: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.9361264946837764e-07
    2. 'b' → logprob: -17.125
    3. '_counter' → logprob: -18.125
    4. '_' → logprob: -18.5
    5. 's' → logprob: -19.625
    6. '_B' → logprob: -20.375
    7. '	b' → logprob: -20.875
    8. 'counter' → logprob: -21.0
    9. '_a' → logprob: -21.125
    10. '-b' → logprob: -21.375

Token 434: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ' )' → logprob: -11.250022888183594
    3. ')%' → logprob: -11.500022888183594
    4. '%' → logprob: -16.625022888183594
    5. ' %' → logprob: -18.500022888183594
    6. '   ' → logprob: -18.625022888183594
    7. '）' → logprob: -19.250022888183594
    8. ' ' → logprob: -20.000022888183594
    9. '```' → logprob: -20.500022888183594
    10. ')
' → logprob: -20.500022888183594

Token 435: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.029759978875517845
    2. ' %' → logprob: -3.5297598838806152
    3. ')' → logprob: -11.904760360717773
    4. ')%' → logprob: -13.404760360717773
    5. '```' → logprob: -14.779760360717773
    6. '
' → logprob: -15.279760360717773
    7. '%c' → logprob: -16.029760360717773
    8. '   ' → logprob: -16.154760360717773
    9. ' ' → logprob: -16.404760360717773
    10. '%n' → logprob: -16.654760360717773

Token 436: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.5491004129871726e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -18.625045776367188
    4. '998' → logprob: -20.750045776367188
    5. '```' → logprob: -20.875045776367188
    6. '	mod' → logprob: -21.250045776367188
    7. ' ' → logprob: -22.125045776367188
    8. '
' → logprob: -22.625045776367188
    9. '999' → logprob: -22.875045776367188
    10. ' мод' → logprob: -23.125045776367188

Token 437: '_const' (ID: 27511)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00846587959676981
    2. '
' → logprob: -4.883465766906738
    3. '\n' → logprob: -7.633465766906738
    4. '```' → logprob: -8.883465766906738
    5. ' print' → logprob: -9.133465766906738
    6. ' 
' → logprob: -9.883465766906738
    7. '(print' → logprob: -10.008465766906738
    8. '#print' → logprob: -12.008465766906738
    9. '    
' → logprob: -12.133465766906738
    10. '
' → logprob: -12.383465766906738

Token 438: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006716674659401178
    2. '
' → logprob: -5.006716728210449
    3. ' print' → logprob: -14.50671672821045
    4. '```' → logprob: -14.75671672821045
    5. '  
' → logprob: -16.006715774536133
    6. ' 
' → logprob: -16.006715774536133
    7. '
' → logprob: -16.131715774536133
    8. '

' → logprob: -17.256715774536133
    9. '    
' → logprob: -17.631715774536133
    10. '(print' → logprob: -18.006715774536133

Token 439: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011546355381142348
    2. '
' → logprob: -9.250115394592285
    3. '```' → logprob: -10.875115394592285
    4. '``' → logprob: -15.875115394592285
    5. ' print' → logprob: -16.2501163482666
    6. '  
' → logprob: -17.0001163482666
    7. '    
' → logprob: -17.8751163482666
    8. '#print' → logprob: -18.0001163482666
    9. '\n' → logprob: -18.7501163482666
    10. '\' → logprob: -18.8751163482666

Token 440: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0004913145676255226
    2. '(' → logprob: -7.625491142272949
    3. '(res' → logprob: -13.25049114227295
    4. 'result' → logprob: -14.25049114227295
    5. '(results' → logprob: -15.00049114227295
    6. ' (' → logprob: -15.62549114227295
    7. '(resultado' → logprob: -15.87549114227295
    8. '(Result' → logprob: -16.875492095947266
    9. '(f' → logprob: -16.875492095947266
    10. '((' → logprob: -17.125492095947266

Token 441: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -1.9361264946837764e-07
    2. '_c' → logprob: -17.0
    3. ')_' → logprob: -17.375
    4. '_controller' → logprob: -17.75
    5. '_count' → logprob: -17.875
    6. '_' → logprob: -18.0
    7. '_result' → logprob: -18.75
    8. '_COUNTER' → logprob: -19.0
    9. 'counter' → logprob: -19.375
    10. '_co' → logprob: -19.5

Token 442: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.0033853515051305e-05
    2. '()' → logprob: -10.000060081481934
    3. '```' → logprob: -12.250060081481934
    4. '())' → logprob: -12.625060081481934
    5. '(' → logprob: -12.875060081481934
    6. ' )' → logprob: -13.250060081481934
    7. '`)' → logprob: -14.625060081481934
    8. '
' → logprob: -15.000060081481934
    9. ')
' → logprob: -15.125060081481934
    10. '\n' → logprob: -15.625060081481934


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 440
Tokens correctement prédits (1ère position, stricte): 245
Tokens correctement prédits (1ère position, avec adaptation): 252
Tokens correctement prédits (top 10): 409
Précision stricte (1ère position): 55.68%
Précision adaptée (1ère position): 57.27%
Précision (top 10): 92.95%
================================================================================
