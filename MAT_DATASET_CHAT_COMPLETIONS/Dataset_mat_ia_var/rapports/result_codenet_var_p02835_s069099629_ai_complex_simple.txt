================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add, mul

a = list(map(lambda x: int(''.join(reversed(x[::-1]))), input().split()))
print((lambda x: ['win', 'bust'][int(x >= 22)])(reduce(add, (lambda y: [*y])(a), 0)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02172495238482952
    2. '(lambda' → logprob: -4.646725177764893
    3. ',' → logprob: -5.771725177764893
    4. '.' → logprob: -6.021725177764893
    5. '\' → logprob: -6.021725177764893
    6. ' (' → logprob: -6.396725177764893
    7. '```' → logprob: -7.396725177764893
    8. '(
' → logprob: -8.521724700927734
    9. ' ' → logprob: -8.521724700927734
    10. '\(' → logprob: -8.646724700927734

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029225829988718033
    2. '\' → logprob: -4.154225826263428
    3. 'def' → logprob: -5.029225826263428
    4. '(
' → logprob: -5.904225826263428
    5. '(lambda' → logprob: -6.529225826263428
    6. ',' → logprob: -7.529225826263428
    7. '\n' → logprob: -7.779225826263428
    8. '```' → logprob: -7.904225826263428
    9. '\(' → logprob: -8.404226303100586
    10. '`' → logprob: -9.154226303100586

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02191914990544319
    2. 'import' → logprob: -3.8969192504882812
    3. ' ' → logprob: -7.146919250488281
    4. '.' → logprob: -7.521919250488281
    5. ' .' → logprob: -11.021919250488281
    6. '.import' → logprob: -11.271919250488281
    7. '	import' → logprob: -11.771919250488281
    8. '<|end|>' → logprob: -12.396919250488281
    9. '_import' → logprob: -13.271919250488281
    10. '-import' → logprob: -14.021919250488281

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2564718425273895
    2. '\' → logprob: -2.631471872329712
    3. '(
' → logprob: -3.256471872329712
    4. '\n' → logprob: -3.256471872329712
    5. ',' → logprob: -3.756471872329712
    6. '#' → logprob: -4.631471633911133
    7. ' ' → logprob: -5.131471633911133
    8. 'def' → logprob: -5.131471633911133
    9. ')' → logprob: -5.506471633911133
    10. '
' → logprob: -5.756471633911133

Token 10: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.6505505442619324
    2. 'mul' → logprob: -0.7755505442619324
    3. ' sub' → logprob: -4.775550365447998
    4. 'sub' → logprob: -4.775550365447998
    5. '```' → logprob: -8.775550842285156
    6. 'getitem' → logprob: -8.900550842285156
    7. ' i' → logprob: -9.025550842285156
    8. 'item' → logprob: -9.150550842285156
    9. ' ' → logprob: -9.400550842285156
    10. 'i' → logprob: -9.650550842285156

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007522154599428177
    2. '(
' → logprob: -5.507522106170654
    3. ',' → logprob: -6.632522106170654
    4. '\' → logprob: -7.382522106170654
    5. 'def' → logprob: -8.132522583007812
    6. '\(' → logprob: -8.132522583007812
    7. '.' → logprob: -8.382522583007812
    8. '#' → logprob: -8.507522583007812
    9. '```' → logprob: -9.257522583007812
    10. '`' → logprob: -9.382522583007812

Token 12: 'a' (ID: 64)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0131213665008545
    2. '#' → logprob: -1.1381213665008545
    3. '`' → logprob: -2.8881213665008545
    4. '(' → logprob: -3.0131213665008545
    5. 'a' → logprob: -3.2631213665008545
    6. '\' → logprob: -3.2631213665008545
    7. 'def' → logprob: -3.3881213665008545
    8. '```' → logprob: -3.8881213665008545
    9. ',' → logprob: -4.013121604919434
    10. 'print' → logprob: -4.388121604919434

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4331755638122559
    2. '[' → logprob: -1.6831755638122559
    3. 'r' → logprob: -2.308175563812256
    4. 'd' → logprob: -2.433175563812256
    5. '=' → logprob: -2.808175563812256
    6. '(' → logprob: -2.808175563812256
    7. ',' → logprob: -2.933175563812256
    8. ' =' → logprob: -3.058175563812256
    9. 'dd' → logprob: -3.183175563812256
    10. ' ' → logprob: -3.183175563812256

Token 14: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3206576406955719
    2. '[' → logprob: -1.3206576108932495
    3. ' []' → logprob: -6.320657730102539
    4. '[]' → logprob: -6.320657730102539
    5. ' ' → logprob: -6.570657730102539
    6. 'range' → logprob: -7.320657730102539
    7. ' range' → logprob: -7.570657730102539
    8. '0' → logprob: -8.320657730102539
    9. '[int' → logprob: -8.445657730102539
    10. '1' → logprob: -8.570657730102539

Token 15: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060588497668504715
    2. '(range' → logprob: -3.3105885982513428
    3. '(a' → logprob: -4.685588359832764
    4. '<|end|>' → logprob: -5.685588359832764
    5. '[' → logprob: -5.810588359832764
    6. '```' → logprob: -6.560588359832764
    7. 'a' → logprob: -6.810588359832764
    8. '(filter' → logprob: -6.935588359832764
    9. '(chain' → logprob: -7.435588359832764
    10. '(map' → logprob: -7.810588359832764

Token 16: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09353874623775482
    2. '(lambda' → logprob: -2.468538761138916
    3. '(int' → logprob: -5.718538761138916
    4. ')' → logprob: -7.968538761138916
    5. '(str' → logprob: -7.968538761138916
    6. '(add' → logprob: -8.718538284301758
    7. ' (' → logprob: -8.718538284301758
    8. '<|end|>' → logprob: -10.218538284301758
    9. '(len' → logprob: -10.593538284301758
    10. '(abs' → logprob: -10.593538284301758

Token 17: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.002383376471698284
    2. 'x' → logprob: -6.252383232116699
    3. ' ' → logprob: -7.752383232116699
    4. ' ,' → logprob: -11.7523832321167
    5. ' i' → logprob: -12.1273832321167
    6. ' n' → logprob: -12.5023832321167
    7. ' s' → logprob: -12.6273832321167
    8. ' a' → logprob: -13.3773832321167
    9. 's' → logprob: -14.5023832321167
    10. ',' → logprob: -14.7523832321167

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009593291208148003
    2. ' :' → logprob: -4.759593486785889
    3. ',' → logprob: -7.259593486785889
    4. ' x' → logprob: -9.00959300994873
    5. ':x' → logprob: -9.50959300994873
    6. ' ,' → logprob: -10.13459300994873
    7. 'x' → logprob: -10.50959300994873
    8. ',x' → logprob: -13.38459300994873
    9. ':int' → logprob: -13.50959300994873
    10. 'a' → logprob: -14.00959300994873

Token 19: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14346098899841309
    2. 'x' → logprob: -2.018460988998413
    3. ' add' → logprob: -7.393461227416992
    4. 'add' → logprob: -9.893461227416992
    5. ' ' → logprob: -10.268461227416992
    6. 'mul' → logprob: -10.393461227416992
    7. ' mul' → logprob: -10.768461227416992
    8. ' a' → logprob: -12.393461227416992
    9. 'a' → logprob: -12.643461227416992
    10. 'pow' → logprob: -12.768461227416992

Token 20: '('' (ID: 706)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16087044775485992
    2. '(' → logprob: -1.9108704328536987
    3. ',' → logprob: -8.410870552062988
    4. ')' → logprob: -8.910870552062988
    5. ' ' → logprob: -9.285870552062988
    6. ' (' → logprob: -10.035870552062988
    7. '('' → logprob: -10.660870552062988
    8. '(','' → logprob: -10.910870552062988
    9. 'x' → logprob: -11.160870552062988
    10. '(input' → logprob: -11.285870552062988

Token 21: ''.' (ID: 6120)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.507420539855957
    2. 'x' → logprob: -2.257420539855957
    3. '0' → logprob: -2.382420539855957
    4. '3' → logprob: -2.757420539855957
    5. '2' → logprob: -2.882420539855957
    6. '(x' → logprob: -3.882420539855957
    7. '5' → logprob: -4.257420539855957
    8. '4' → logprob: -4.632420539855957
    9. ' ' → logprob: -5.007420539855957
    10. '7' → logprob: -5.132420539855957

Token 22: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.17544829845428467
    2. 'str' → logprob: -2.800448417663574
    3. 'split' → logprob: -3.050448417663574
    4. 'strip' → logprob: -4.050448417663574
    5. 'format' → logprob: -4.550448417663574
    6. 'isdigit' → logprob: -4.550448417663574
    7. 'x' → logprob: -4.800448417663574
    8. 'digits' → logprob: -6.425448417663574
    9. 'digit' → logprob: -7.050448417663574
    10. 'repr' → logprob: -7.300448417663574

Token 23: '(re' (ID: 8178)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44922804832458496
    2. '(x' → logprob: -1.074228048324585
    3. 'map' → logprob: -5.074228286743164
    4. '(map' → logprob: -5.074228286743164
    5. '[x' → logprob: -6.074228286743164
    6. '(['' → logprob: -6.324228286743164
    7. '(' → logprob: -7.699228286743164
    8. '(str' → logprob: -7.949228286743164
    9. 'str' → logprob: -7.949228286743164
    10. 'filter' → logprob: -8.074228286743164

Token 24: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.05702333152294159
    2. '.findall' → logprob: -3.557023286819458
    3. 'verse' → logprob: -4.057023525238037
    4. 'duce' → logprob: -5.307023525238037
    5. 'v' → logprob: -6.307023525238037
    6. 'duced' → logprob: -7.057023525238037
    7. '[' → logprob: -7.182023525238037
    8. 'd' → logprob: -8.432023048400879
    9. '.split' → logprob: -8.432023048400879
    10. 'pr' → logprob: -8.807023048400879

Token 25: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1560518890619278
    2. '(str' → logprob: -2.0310518741607666
    3. '(list' → logprob: -4.656052112579346
    4. '(' → logprob: -6.156052112579346
    5. 'str' → logprob: -7.531052112579346
    6. 'x' → logprob: -7.531052112579346
    7. '(s' → logprob: -7.906052112579346
    8. '(a' → logprob: -9.656051635742188
    9. '((' → logprob: -9.656051635742188
    10. 'list' → logprob: -10.031051635742188

Token 26: '[::-' (ID: 159890)
  Prédit: '))),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))),' → logprob: -0.02336159534752369
    2. ')))),' → logprob: -4.023361682891846
    3. ')),' → logprob: -5.773361682891846
    4. '))' → logprob: -6.898361682891846
    5. '))))' → logprob: -7.773361682891846
    6. ')))' → logprob: -8.523361206054688
    7. '))),
' → logprob: -8.773361206054688
    8. '[::-' → logprob: -9.273361206054688
    9. ')))))
' → logprob: -10.023361206054688
    10. ''))' → logprob: -10.273361206054688

Token 27: '1' (ID: 16)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.2659721374511719
    2. 'sed' → logprob: -2.890972137451172
    3. 'SE' → logprob: -3.890972137451172
    4. 's' → logprob: -3.890972137451172
    5. '1' → logprob: -4.015972137451172
    6. 'es' → logprob: -4.265972137451172
    7. 'sa' → logprob: -4.640972137451172
    8. 'sel' → logprob: -4.890972137451172
    9. 'sea' → logprob: -5.390972137451172
    10. 'erse' → logprob: -5.453472137451172

Token 28: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.014517096802592278
    2. '[' → logprob: -4.764517307281494
    3. '])))' → logprob: -6.264517307281494
    4. '[::-' → logprob: -6.889517307281494
    5. '[:-' → logprob: -7.389517307281494
    6. ']' → logprob: -7.639517307281494
    7. '][' → logprob: -8.264516830444336
    8. '])),' → logprob: -8.389516830444336
    9. '))' → logprob: -8.764516830444336
    10. ' ]' → logprob: -8.889516830444336

Token 29: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03309643268585205
    2. ')' → logprob: -3.7830963134765625
    3. ')))' → logprob: -4.9080963134765625
    4. '[' → logprob: -7.5330963134765625
    5. ',' → logprob: -8.158096313476562
    6. '[x' → logprob: -8.283096313476562
    7. ')),' → logprob: -8.533096313476562
    8. '   ' → logprob: -9.033096313476562
    9. ''),' → logprob: -9.158096313476562
    10. '))' → logprob: -9.158096313476562

Token 30: ' input' (ID: 3422)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.18962612748146057
    2. ' ['' → logprob: -2.4396262168884277
    3. '["' → logprob: -3.6896262168884277
    4. 'input' → logprob: -4.314626216888428
    5. 'a' → logprob: -4.689626216888428
    6. '[' → logprob: -5.439626216888428
    7. 'str' → logprob: -5.439626216888428
    8. 'map' → logprob: -5.564626216888428
    9. '[['' → logprob: -5.564626216888428
    10. ' input' → logprob: -5.689626216888428

Token 31: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0595762729644775
    2. '()))' → logprob: -1.0595762729644775
    3. '()' → logprob: -1.9345762729644775
    4. '(' → logprob: -2.3095762729644775
    5. '())))' → logprob: -3.4345762729644775
    6. '().' → logprob: -4.184576034545898
    7. ')))' → logprob: -5.434576034545898
    8. ')' → logprob: -5.559576034545898
    9. '))' → logprob: -6.184576034545898
    10. '()));' → logprob: -6.309576034545898

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008731930516660213
    2. 'strip' → logprob: -4.758731842041016
    3. ' split' → logprob: -9.633731842041016
    4. 'rstrip' → logprob: -10.258731842041016
    5. 'replace' → logprob: -11.508731842041016
    6. 'read' → logprob: -12.633731842041016
    7. 'spl' → logprob: -13.758731842041016
    8. ' ' → logprob: -14.258731842041016
    9. '```' → logprob: -14.758731842041016
    10. ' strip' → logprob: -15.008731842041016

Token 33: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7274367213249207
    2. '())' → logprob: -1.6024367809295654
    3. '()' → logprob: -2.2274367809295654
    4. '())))' → logprob: -2.2274367809295654
    5. ')))' → logprob: -3.2274367809295654
    6. '(' → logprob: -3.4774367809295654
    7. '))' → logprob: -4.102436542510986
    8. ')' → logprob: -4.602436542510986
    9. '('' → logprob: -6.852436542510986
    10. '())))
' → logprob: -7.727436542510986

Token 34: 'print' (ID: 1598)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8716168999671936
    2. '())' → logprob: -1.2466168403625488
    3. '(' → logprob: -2.121616840362549
    4. '))' → logprob: -2.871616840362549
    5. '()' → logprob: -2.871616840362549
    6. ')' → logprob: -3.121616840362549
    7. '[' → logprob: -4.621616840362549
    8. '()))
' → logprob: -6.121616840362549
    9. '()
' → logprob: -6.621616840362549
    10. '()[' → logprob: -6.996616840362549

Token 35: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014621071517467499
    2. '(sum' → logprob: -4.639621257781982
    3. '(a' → logprob: -5.889621257781982
    4. '('' → logprob: -7.264621257781982
    5. '(max' → logprob: -8.264620780944824
    6. '("("' → logprob: -8.514620780944824
    7. '((' → logprob: -8.639620780944824
    8. '(len' → logprob: -8.764620780944824
    9. '(list' → logprob: -9.014620780944824
    10. '(re' → logprob: -9.389620780944824

Token 36: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.03730376437306404
    2. ' reduce' → logprob: -3.7873036861419678
    3. 'a' → logprob: -5.037303924560547
    4. 'mul' → logprob: -5.287303924560547
    5. 'sum' → logprob: -7.037303924560547
    6. 'add' → logprob: -7.662303924560547
    7. 'max' → logprob: -7.912303924560547
    8. ' a' → logprob: -8.912303924560547
    9. ')' → logprob: -9.537303924560547
    10. ' ' → logprob: -9.662303924560547

Token 37: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0346791744232178
    2. 'a' → logprob: -1.1596791744232178
    3. ' x' → logprob: -1.5346791744232178
    4. ' a' → logprob: -2.4096791744232178
    5. 'lambda' → logprob: -5.284679412841797
    6. 'reduce' → logprob: -5.409679412841797
    7. 'n' → logprob: -5.534679412841797
    8. ' n' → logprob: -5.659679412841797
    9. ' lambda' → logprob: -6.159679412841797
    10. ' reduce' → logprob: -6.409679412841797

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011563860811293125
    2. ' :' → logprob: -4.511563777923584
    3. 'a' → logprob: -9.136564254760742
    4. ',' → logprob: -9.761564254760742
    5. ':list' → logprob: -9.886564254760742
    6. '[' → logprob: -10.011564254760742
    7. 'x' → logprob: -10.261564254760742
    8. ':x' → logprob: -10.386564254760742
    9. '=' → logprob: -10.386564254760742
    10. 'reduce' → logprob: -10.636564254760742

Token 39: ' ['' (ID: 5140)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.29421260952949524
    2. ' reduce' → logprob: -1.4192125797271729
    3. 'mul' → logprob: -5.044212818145752
    4. ' mul' → logprob: -6.419212818145752
    5. ' add' → logprob: -7.294212818145752
    6. ' x' → logprob: -7.544212818145752
    7. 'x' → logprob: -7.544212818145752
    8. 'add' → logprob: -7.544212818145752
    9. ' ' → logprob: -8.169212341308594
    10. ' str' → logprob: -8.419212341308594

Token 40: 'win' (ID: 11668)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.2890528440475464
    2. 'mul' → logprob: -1.9140528440475464
    3. ''' → logprob: -2.039052963256836
    4. 'str' → logprob: -2.039052963256836
    5. 'x' → logprob: -2.664052963256836
    6. '0' → logprob: -2.789052963256836
    7. 'sum' → logprob: -3.539052963256836
    8. 'add' → logprob: -3.664052963256836
    9. ''.' → logprob: -3.789052963256836
    10. '1' → logprob: -4.164052963256836

Token 41: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05655435100197792
    2. '',' → logprob: -3.6815543174743652
    3. '','' → logprob: -4.556554317474365
    4. 'ner' → logprob: -4.931554317474365
    5. '']' → logprob: -5.306554317474365
    6. 'er' → logprob: -5.806554317474365
    7. '\n' → logprob: -7.181554317474365
    8. 'ning' → logprob: -7.181554317474365
    9. ''er' → logprob: -8.306554794311523
    10. ' '' → logprob: -8.556554794311523

Token 42: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1654658168554306
    2. ' '' → logprob: -1.9154658317565918
    3. ''d' → logprob: -6.415465831756592
    4. ''t' → logprob: -6.540465831756592
    5. ''s' → logprob: -7.665465831756592
    6. '"' → logprob: -8.040465354919434
    7. '['' → logprob: -8.540465354919434
    8. ''w' → logprob: -8.790465354919434
    9. ''ok' → logprob: -9.040465354919434
    10. ''l' → logprob: -9.165465354919434

Token 43: 'b' (ID: 65)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.24553605914115906
    2. 'loss' → logprob: -2.4955360889434814
    3. 'draw' → logprob: -3.3705360889434814
    4. ''' → logprob: -3.4955360889434814
    5. 'win' → logprob: -3.7455360889434814
    6. ' lose' → logprob: -3.7455360889434814
    7. 'tie' → logprob: -4.995535850524902
    8. 'fail' → logprob: -5.620535850524902
    9. ''d' → logprob: -6.120535850524902
    10. ' '' → logprob: -6.120535850524902

Token 44: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.9928073883056641
    2. 'lack' → logprob: -1.117807388305664
    3. 'at' → logprob: -3.492807388305664
    4. 'reak' → logprob: -3.617807388305664
    5. 'ob' → logprob: -3.742807388305664
    6. 'est' → logprob: -3.742807388305664
    7. 'y' → logprob: -3.742807388305664
    8. 'ye' → logprob: -3.992807388305664
    9. 'ase' → logprob: -3.992807388305664
    10. 'ox' → logprob: -4.617807388305664

Token 45: ''][' (ID: 22110)
  Prédit: '']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''][' → logprob: -0.006289352662861347
    2. '',' → logprob: -6.131289482116699
    3. '']' → logprob: -6.881289482116699
    4. ''' → logprob: -6.881289482116699
    5. '']['' → logprob: -7.381289482116699
    6. ''])[' → logprob: -7.381289482116699
    7. ''[' → logprob: -8.3812894821167
    8. 'a' → logprob: -8.7562894821167
    9. ''])' → logprob: -9.0062894821167
    10. '')[' → logprob: -9.1312894821167

Token 46: 'int' (ID: 491)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15734343230724335
    2. 'sum' → logprob: -2.9073433876037598
    3. ' x' → logprob: -3.9073433876037598
    4. 'int' → logprob: -3.9073433876037598
    5. 'any' → logprob: -4.15734338760376
    6. '(x' → logprob: -5.28234338760376
    7. '0' → logprob: -5.40734338760376
    8. '1' → logprob: -5.65734338760376
    9. 'not' → logprob: -5.65734338760376
    10. '(' → logprob: -5.78234338760376

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10362762957811356
    2. '(sum' → logprob: -3.3536276817321777
    3. '(m' → logprob: -3.6036276817321777
    4. '((' → logprob: -4.228627681732178
    5. '(' → logprob: -4.853627681732178
    6. 'x' → logprob: -5.103627681732178
    7. '(not' → logprob: -5.978627681732178
    8. '(str' → logprob: -6.728627681732178
    9. '(a' → logprob: -7.103627681732178
    10. '('' → logprob: -7.478627681732178

Token 48: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1861124187707901
    2. ' >' → logprob: -2.061112403869629
    3. '>=' → logprob: -4.311112403869629
    4. '>x' → logprob: -4.936112403869629
    5. ' >=' → logprob: -5.186112403869629
    6. '[' → logprob: -5.936112403869629
    7. ')' → logprob: -6.061112403869629
    8. ')>' → logprob: -6.561112403869629
    9. ' ' → logprob: -6.686112403869629
    10. '<' → logprob: -6.686112403869629

Token 49: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.07063570618629456
    2. '21' → logprob: -3.0706357955932617
    3. '100' → logprob: -4.820635795593262
    4. '10' → logprob: -5.445635795593262
    5. '23' → logprob: -6.445635795593262
    6. '20' → logprob: -6.820635795593262
    7. '7' → logprob: -7.195635795593262
    8. ' ' → logprob: -7.695635795593262
    9. '5' → logprob: -8.070635795593262
    10. '18' → logprob: -8.070635795593262

Token 50: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.3841274082660675
    2. '21' → logprob: -1.2591273784637451
    3. '10' → logprob: -4.634127616882324
    4. '20' → logprob: -5.384127616882324
    5. '12' → logprob: -5.384127616882324
    6. '100' → logprob: -5.634127616882324
    7. '23' → logprob: -6.509127616882324
    8. '7' → logprob: -6.884127616882324
    9. '4' → logprob: -7.384127616882324
    10. '5' → logprob: -7.384127616882324

Token 51: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.09647460281848907
    2. ')]' → logprob: -2.5964746475219727
    3. ')' → logprob: -4.221474647521973
    4. '])' → logprob: -6.721474647521973
    5. ')],' → logprob: -7.971474647521973
    6. ' )' → logprob: -8.096474647521973
    7. ')])
' → logprob: -8.221474647521973
    8. ')])

' → logprob: -8.846474647521973
    9. ')][' → logprob: -9.471474647521973
    10. ']))' → logprob: -9.596474647521973

Token 52: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7858222723007202
    2. '(sum' → logprob: -1.4108222723007202
    3. '(re' → logprob: -1.6608222723007202
    4. '(' → logprob: -2.9108223915100098
    5. '(add' → logprob: -3.0358223915100098
    6. 'a' → logprob: -5.78582239151001
    7. '(m' → logprob: -6.28582239151001
    8. '((' → logprob: -7.03582239151001
    9. '(max' → logprob: -7.28582239151001
    10. '(int' → logprob: -8.285821914672852

Token 53: 'reduce' (ID: 49119)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5458892583847046
    2. 'a' → logprob: -1.5458892583847046
    3. 'reduce' → logprob: -1.6708892583847046
    4. ' sum' → logprob: -4.420889377593994
    5. ' reduce' → logprob: -5.545889377593994
    6. ' a' → logprob: -6.420889377593994
    7. 'add' → logprob: -7.295889377593994
    8. '(sum' → logprob: -7.545889377593994
    9. 're' → logprob: -8.045888900756836
    10. ')' → logprob: -9.170888900756836

Token 54: '(add' (ID: 40159)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.7713240385055542
    2. '(add' → logprob: -1.1463240385055542
    3. '(' → logprob: -1.5213240385055542
    4. '(lambda' → logprob: -6.896324157714844
    5. '(
' → logprob: -8.771324157714844
    6. ')' → logprob: -9.646324157714844
    7. '(operator' → logprob: -10.146324157714844
    8. 'add' → logprob: -10.396324157714844
    9. '(+' → logprob: -11.146324157714844
    10. ' (' → logprob: -11.271324157714844

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019730595871806145
    2. ',a' → logprob: -4.144730567932129
    3. 'a' → logprob: -6.394730567932129
    4. '(a' → logprob: -6.769730567932129
    5. ' ,' → logprob: -7.769730567932129
    6. ',m' → logprob: -8.519730567932129
    7. '(' → logprob: -8.894730567932129
    8. ',(' → logprob: -10.144730567932129
    9. ' a' → logprob: -10.269730567932129
    10. '(),' → logprob: -11.769730567932129

Token 56: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3869963586330414
    2. ' a' → logprob: -1.1369963884353638
    3. '(a' → logprob: -9.761996269226074
    4. ')a' → logprob: -11.386996269226074
    5. ',a' → logprob: -11.511996269226074
    6. '[a' → logprob: -11.824496269226074
    7. '	a' → logprob: -12.011996269226074
    8. ' ' → logprob: -12.386996269226074
    9. ')' → logprob: -12.636996269226074
    10. '>a' → logprob: -12.699496269226074

Token 57: 'lambda' (ID: 35280)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18167464435100555
    2. 'map' → logprob: -2.0566747188568115
    3. 'mul' → logprob: -4.556674480438232
    4. '(map' → logprob: -5.181674480438232
    5. 'list' → logprob: -5.806674480438232
    6. '(a' → logprob: -5.806674480438232
    7. '[' → logprob: -5.931674480438232
    8. 'x' → logprob: -6.056674480438232
    9. 'i' → logprob: -6.181674480438232
    10. '[a' → logprob: -6.431674480438232

Token 58: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.908854603767395
    2. 'a' → logprob: -1.783854603767395
    3. 'lambda' → logprob: -2.0338544845581055
    4. ' x' → logprob: -2.2838544845581055
    5. '(lambda' → logprob: -2.5338544845581055
    6. ' lambda' → logprob: -2.9088544845581055
    7. ' a' → logprob: -4.1588544845581055
    8. 'map' → logprob: -4.4088544845581055
    9. ' map' → logprob: -4.7838544845581055
    10. ' (' → logprob: -4.9088544845581055

Token 59: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12769262492656708
    2. '(x' → logprob: -3.752692699432373
    3. '(a' → logprob: -3.877692699432373
    4. 'a' → logprob: -4.627692699432373
    5. '(lambda' → logprob: -4.752692699432373
    6. ':x' → logprob: -4.752692699432373
    7. '(y' → logprob: -4.877692699432373
    8. 'x' → logprob: -5.127692699432373
    9. ':a' → logprob: -5.127692699432373
    10. ':y' → logprob: -5.502692699432373

Token 60: ' [' (ID: 723)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.9521117210388184
    2. '[' → logprob: -2.0771117210388184
    3. ' y' → logprob: -2.0771117210388184
    4. ' [' → logprob: -2.4521117210388184
    5. 'map' → logprob: -2.5771117210388184
    6. ' map' → logprob: -2.8271117210388184
    7. 'a' → logprob: -3.3271117210388184
    8. 'y' → logprob: -3.3271117210388184
    9. 'list' → logprob: -3.3271117210388184
    10. ' (' → logprob: -3.7021117210388184

Token 61: '*' (ID: 9)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.5547126531600952
    2. 'y' → logprob: -1.8047126531600952
    3. 'int' → logprob: -2.1797127723693848
    4. 'x' → logprob: -3.6797127723693848
    5. 'reduce' → logprob: -4.054712772369385
    6. 'sum' → logprob: -4.179712772369385
    7. '1' → logprob: -4.429712772369385
    8. '(y' → logprob: -4.679712772369385
    9. 'len' → logprob: -4.929712772369385
    10. '0' → logprob: -4.929712772369385

Token 62: 'y' (ID: 88)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14773644506931305
    2. 'str' → logprob: -3.1477365493774414
    3. '(map' → logprob: -3.2727365493774414
    4. 'y' → logprob: -3.7727365493774414
    5. 'filter' → logprob: -4.397736549377441
    6. 'range' → logprob: -4.647736549377441
    7. '(str' → logprob: -5.522736549377441
    8. '(y' → logprob: -6.272736549377441
    9. 're' → logprob: -7.147736549377441
    10. '(re' → logprob: -7.397736549377441

Token 63: '])(' (ID: 164063)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0319230556488037
    2. '(map' → logprob: -1.7819230556488037
    3. '(y' → logprob: -1.7819230556488037
    4. '(str' → logprob: -2.2819230556488037
    5. '(x' → logprob: -3.5319230556488037
    6. '(a' → logprob: -3.7819230556488037
    7. ']))' → logprob: -3.9069230556488037
    8. '[::-' → logprob: -4.031923294067383
    9. '(div' → logprob: -4.656923294067383
    10. '(' → logprob: -4.781923294067383

Token 64: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004904619418084621
    2. ' a' → logprob: -6.129904747009277
    3. '(a' → logprob: -7.129904747009277
    4. 'map' → logprob: -7.254904747009277
    5. '[a' → logprob: -8.004904747009277
    6. '[' → logprob: -8.629904747009277
    7. 're' → logprob: -8.879904747009277
    8. 'list' → logprob: -9.379904747009277
    9. '(map' → logprob: -9.504904747009277
    10. '   ' → logprob: -10.379904747009277

Token 65: '),' (ID: 936)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.05285083130002022
    2. ')))' → logprob: -3.4278507232666016
    3. '))' → logprob: -4.302850723266602
    4. ')' → logprob: -5.427850723266602
    5. '))))
' → logprob: -7.677850723266602
    6. ')))))
' → logprob: -8.427850723266602
    7. '))))

' → logprob: -8.677850723266602
    8. '),' → logprob: -9.177850723266602
    9. ')))),' → logprob: -9.677850723266602
    10. ' ))' → logprob: -11.177850723266602

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03202297165989876
    2. ' ' → logprob: -4.032022953033447
    3. '[]' → logprob: -5.282022953033447
    4. 'mul' → logprob: -5.407022953033447
    5. '[' → logprob: -6.532022953033447
    6. ')))' → logprob: -7.282022953033447
    7. '1' → logprob: -8.157023429870605
    8. ' []' → logprob: -8.157023429870605
    9. ')' → logprob: -8.407023429870605
    10. '))' → logprob: -8.532023429870605

Token 67: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4222033619880676
    2. '[' → logprob: -1.4222033023834229
    3. '0' → logprob: -2.422203302383423
    4. ')))' → logprob: -5.172203540802002
    5. 'a' → logprob: -6.297203540802002
    6. '[])' → logprob: -6.422203540802002
    7. ' []' → logprob: -7.047203540802002
    8. ' ' → logprob: -7.797203540802002
    9. '[a' → logprob: -7.797203540802002
    10. '())))' → logprob: -7.797203540802002

Token 68: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.02679390460252762
    2. ')' → logprob: -4.276793956756592
    3. '))' → logprob: -4.401793956756592
    4. '))))' → logprob: -8.151793479919434
    5. ')))
' → logprob: -12.526793479919434
    6. ' ' → logprob: -14.276793479919434
    7. ')))

' → logprob: -14.651793479919434
    8. '),' → logprob: -14.651793479919434
    9. ')));' → logprob: -14.901793479919434
    10. ')
' → logprob: -15.151793479919434


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 33.33%
Précision (top 10): 71.21%
================================================================================
