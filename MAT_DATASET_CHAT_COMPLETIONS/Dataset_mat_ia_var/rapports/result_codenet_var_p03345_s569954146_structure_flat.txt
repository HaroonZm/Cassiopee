================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B, C, K = map(int, input().split())
if K % 2 == 1:
    print(B - A)
else:
    print(A - B)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5223684310913086
    2. '+' → logprob: -2.0223684310913086
    3. ';' → logprob: -2.5223684310913086
    4. ',' → logprob: -3.0223684310913086
    5. ')' → logprob: -3.3973684310913086
    6. '.' → logprob: -3.3973684310913086
    7. 'C' → logprob: -3.7723684310913086
    8. '<|end|>' → logprob: -4.022368431091309
    9. '[' → logprob: -4.147368431091309
    10. ':' → logprob: -4.772368431091309

Token 4: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5879690051078796
    2. ',' → logprob: -1.3379690647125244
    3. ' =' → logprob: -2.0879690647125244
    4. 'C' → logprob: -2.9629690647125244
    5. ',C' → logprob: -6.087968826293945
    6. ')' → logprob: -6.462968826293945
    7. '.' → logprob: -7.337968826293945
    8. ' C' → logprob: -7.587968826293945
    9. ' ' → logprob: -7.587968826293945
    10. '=C' → logprob: -7.837968826293945

Token 5: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9299484491348267
    2. 'D' → logprob: -1.0549484491348267
    3. ',' → logprob: -2.554948329925537
    4. ';' → logprob: -2.929948329925537
    5. '=' → logprob: -3.179948329925537
    6. '(' → logprob: -3.429948329925537
    7. '<|end|>' → logprob: -4.179948329925537
    8. '[' → logprob: -4.429948329925537
    9. '+' → logprob: -5.304948329925537
    10. '.' → logprob: -5.429948329925537

Token 6: ' K' (ID: 658)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.558697521686554
    2. 'D' → logprob: -1.3086974620819092
    3. ',' → logprob: -2.433697462081909
    4. ' =' → logprob: -3.433697462081909
    5. ';' → logprob: -4.433697700500488
    6. ')' → logprob: -4.683697700500488
    7. '.' → logprob: -5.183697700500488
    8. ',D' → logprob: -5.558697700500488
    9. ':' → logprob: -6.058697700500488
    10. '(' → logprob: -6.933697700500488

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04587884619832039
    2. ' =' → logprob: -3.7958788871765137
    3. ')' → logprob: -5.295878887176514
    4. '(' → logprob: -5.420878887176514
    5. ';' → logprob: -5.795878887176514
    6. '[' → logprob: -5.795878887176514
    7. '+' → logprob: -5.795878887176514
    8. '.' → logprob: -6.545878887176514
    9. ',' → logprob: -6.795878887176514
    10. '```' → logprob: -8.170878410339355

Token 8: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8291592597961426
    2. 'map' → logprob: -1.4541592597961426
    3. ' ' → logprob: -2.2041592597961426
    4. ' map' → logprob: -2.4541592597961426
    5. '10' → logprob: -2.5791592597961426
    6. '1' → logprob: -4.454159259796143
    7. 'input' → logprob: -4.704159259796143
    8. '5' → logprob: -5.079159259796143
    9. ' [' → logprob: -5.704159259796143
    10. 'A' → logprob: -5.829159259796143

Token 9: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18927647173404694
    2. '<|end|>' → logprob: -2.1892764568328857
    3. '(lambda' → logprob: -2.9392764568328857
    4. '(int' → logprob: -6.314276695251465
    5. '```' → logprob: -6.314276695251465
    6. ')' → logprob: -6.939276695251465
    7. '<|end|>' → logprob: -7.189276695251465
    8. '(user' → logprob: -8.189276695251465
    9. '(token' → logprob: -8.314276695251465
    10. 'user' → logprob: -8.439276695251465

Token 10: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1266048550605774
    2. '(' → logprob: -3.3766047954559326
    3. '<|end|>' → logprob: -3.3766047954559326
    4. '(input' → logprob: -3.8766047954559326
    5. '`)' → logprob: -5.001605033874512
    6. '<|end|>' → logprob: -5.126605033874512
    7. '(user' → logprob: -5.501605033874512
    8. '(token' → logprob: -5.876605033874512
    9. ')(' → logprob: -6.001605033874512
    10. '```' → logprob: -6.001605033874512

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011965400772169232
    2. ' input' → logprob: -6.751196384429932
    3. '(input' → logprob: -11.00119686126709
    4. ')' → logprob: -11.62619686126709
    5. ',input' → logprob: -14.50119686126709
    6. '=input' → logprob: -16.876195907592773
    7. '```' → logprob: -17.126195907592773
    8. '<input' → logprob: -17.126195907592773
    9. '_input' → logprob: -17.626195907592773
    10. '[input' → logprob: -17.626195907592773

Token 12: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7519769072532654
    2. '())' → logprob: -1.0019769668579102
    3. '()' → logprob: -2.12697696685791
    4. '(' → logprob: -4.25197696685791
    5. '<|end|>' → logprob: -5.37697696685791
    6. '(()' → logprob: -5.75197696685791
    7. '(""))' → logprob: -6.00197696685791
    8. '```' → logprob: -6.25197696685791
    9. '`()' → logprob: -6.50197696685791
    10. '<|end|>' → logprob: -6.75197696685791

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000354769523255527
    2. 'strip' → logprob: -8.250354766845703
    3. ')' → logprob: -9.500354766845703
    4. 'rstrip' → logprob: -11.500354766845703
    5. 'read' → logprob: -12.625354766845703
    6. ' split' → logprob: -13.000354766845703
    7. '(split' → logprob: -13.500354766845703
    8. 'spl' → logprob: -14.375354766845703
    9. '```' → logprob: -14.875354766845703
    10. 's' → logprob: -16.000354766845703

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14780113101005554
    2. '())' → logprob: -2.022801160812378
    3. '))' → logprob: -5.897800922393799
    4. '()' → logprob: -6.397800922393799
    5. '`)' → logprob: -7.897800922393799
    6. '()))' → logprob: -9.522801399230957
    7. '(' → logprob: -9.647801399230957
    8. ')`' → logprob: -10.147801399230957
    9. '```' → logprob: -10.647801399230957
    10. '('' → logprob: -11.147801399230957

Token 15: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6560205817222595
    2. '#' → logprob: -2.1560206413269043
    3. 'if' → logprob: -2.1560206413269043
    4. '*' → logprob: -2.7810206413269043
    5. '+
' → logprob: -3.5310206413269043
    6. '
' → logprob: -3.7810206413269043
    7. ',' → logprob: -3.9060206413269043
    8. ':' → logprob: -4.156020641326904
    9. '\n' → logprob: -4.281020641326904
    10. ')' → logprob: -4.281020641326904

Token 16: ' K' (ID: 658)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.03866192325949669
    2. 'A' → logprob: -3.5386619567871094
    3. ' ' → logprob: -5.163661956787109
    4. ' K' → logprob: -6.163661956787109
    5. ' B' → logprob: -7.288661956787109
    6. 'K' → logprob: -9.03866195678711
    7. ' C' → logprob: -9.53866195678711
    8. 'B' → logprob: -10.16366195678711
    9. ' a' → logprob: -10.41366195678711
    10. 'C' → logprob: -10.91366195678711

Token 17: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03664547950029373
    2. ' ==' → logprob: -3.9116454124450684
    3. ' <=' → logprob: -5.036645412445068
    4. '>' → logprob: -5.411645412445068
    5. ' <' → logprob: -6.161645412445068
    6. ' >=' → logprob: -6.411645412445068
    7. '==' → logprob: -7.661645412445068
    8. ' ' → logprob: -7.786645412445068
    9. ' !=' → logprob: -8.536645889282227
    10. '<' → logprob: -10.286645889282227

Token 18: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.708725094795227
    2. '2' → logprob: -0.833725094795227
    3. ' A' → logprob: -2.9587249755859375
    4. ' ' → logprob: -4.3337249755859375
    5. 'B' → logprob: -5.9587249755859375
    6. '3' → logprob: -6.2087249755859375
    7. '4' → logprob: -6.2087249755859375
    8. 'C' → logprob: -6.9587249755859375
    9. '(A' → logprob: -8.208724975585938
    10. ' B' → logprob: -8.833724975585938

Token 19: '2' (ID: 17)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05752956494688988
    2. '2' → logprob: -3.1825294494628906
    3. '3' → logprob: -5.057529449462891
    4. 'C' → logprob: -5.057529449462891
    5. 'B' → logprob: -7.307529449462891
    6. '4' → logprob: -7.807529449462891
    7. '(A' → logprob: -8.30752944946289
    8. ' A' → logprob: -8.93252944946289
    9. 'min' → logprob: -9.68252944946289
    10. 'a' → logprob: -10.05752944946289

Token 20: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04779454693198204
    2. '==' → logprob: -3.1727945804595947
    3. ' !=' → logprob: -5.922794342041016
    4. ':' → logprob: -6.297794342041016
    5. ' :' → logprob: -9.297794342041016
    6. '!=' → logprob: -9.422794342041016
    7. '=' → logprob: -10.047794342041016
    8. ' =' → logprob: -10.672794342041016
    9. ' ' → logprob: -11.047794342041016
    10. '>' → logprob: -12.547794342041016

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04915441945195198
    2. ' ' → logprob: -3.42415452003479
    3. '1' → logprob: -4.174154281616211
    4. '2' → logprob: -14.924154281616211
    5. '```' → logprob: -15.236654281616211
    6. 'A' → logprob: -15.861654281616211
    7. '  ' → logprob: -17.17415428161621
    8. ' A' → logprob: -17.36165428161621
    9. '3' → logprob: -17.67415428161621
    10. '   ' → logprob: -17.73665428161621

Token 22: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018480245023965836
    2. '1' → logprob: -4.01848030090332
    3. ' ' → logprob: -8.01848030090332
    4. 'A' → logprob: -15.20598030090332
    5. '2' → logprob: -15.26848030090332
    6. '```' → logprob: -15.33098030090332
    7. '  ' → logprob: -17.39348030090332
    8. ')' → logprob: -17.58098030090332
    9. 'K' → logprob: -17.95598030090332
    10. '

' → logprob: -17.95598030090332

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010409059468656778
    2. ' :' → logprob: -6.876040935516357
    3. ':
' → logprob: -12.1260404586792
    4. '):' → logprob: -14.2510404586792
    5. ':**' → logprob: -14.7510404586792
    6. '>' → logprob: -15.0010404586792
    7. ' and' → logprob: -15.6260404586792
    8. ' :
' → logprob: -15.8760404586792
    9. '>:' → logprob: -16.126041412353516
    10. ':return' → logprob: -16.251041412353516

Token 24: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9108167886734009
    2. ' ' → logprob: -1.0358167886734009
    3. ' :' → logprob: -2.6608166694641113
    4. ' print' → logprob: -3.0358166694641113
    5. '   ' → logprob: -4.035816669464111
    6. 'print' → logprob: -4.035816669464111
    7. ' 
' → logprob: -4.410816669464111
    8. ' :
' → logprob: -4.785816669464111
    9. ':
' → logprob: -4.910816669464111
    10. ' ,' → logprob: -4.910816669464111

Token 25: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4190475046634674
    2. 'print' (adapté à ' print') → logprob: -1.419047474861145
    3. ' ' → logprob: -2.4190475940704346
    4. ' A' → logprob: -5.2940473556518555
    5. 'A' → logprob: -6.6690473556518555
    6. '    ' → logprob: -6.7940473556518555
    7. ' if' → logprob: -7.5440473556518555
    8. ')' → logprob: -7.5440473556518555
    9. '   ' → logprob: -7.7940473556518555
    10. ' (' → logprob: -7.7940473556518555

Token 26: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7053956389427185
    2. '(A' → logprob: -0.8303956389427185
    3. '('' → logprob: -3.3303956985473633
    4. '("' → logprob: -3.7053956985473633
    5. '(B' → logprob: -5.580395698547363
    6. '()' → logprob: -6.580395698547363
    7. '((' → logprob: -6.705395698547363
    8. '(max' → logprob: -6.705395698547363
    9. '(f' → logprob: -6.830395698547363
    10. '(C' → logprob: -8.080395698547363

Token 27: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00143083231523633
    2. ' )' → logprob: -6.751430988311768
    3. '+' → logprob: -9.50143051147461
    4. ' +' → logprob: -9.62643051147461
    5. ',' → logprob: -9.87643051147461
    6. '*' → logprob: -10.37643051147461
    7. ')#' → logprob: -12.25143051147461
    8. '))' → logprob: -12.37643051147461
    9. ' ' → logprob: -12.50143051147461
    10. '**' → logprob: -12.75143051147461

Token 28: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014553279615938663
    2. ' A' → logprob: -4.264553070068359
    3. 'C' → logprob: -8.63955307006836
    4. ' ' → logprob: -8.76455307006836
    5. '	A' → logprob: -10.76455307006836
    6. '1' → logprob: -11.63955307006836
    7. '  ' → logprob: -12.01455307006836
    8. ')' → logprob: -12.38955307006836
    9. '   ' → logprob: -12.51455307006836
    10. 'B' → logprob: -12.51455307006836

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0803966224193573
    2. '+' → logprob: -2.9553966522216797
    3. ' +' → logprob: -3.7053966522216797
    4. ' )' → logprob: -8.08039665222168
    5. '+)' → logprob: -9.70539665222168
    6. ')
' → logprob: -9.70539665222168
    7. '+C' → logprob: -9.95539665222168
    8. '))' → logprob: -10.45539665222168
    9. ')+' → logprob: -11.08039665222168
    10. '*' → logprob: -11.08039665222168

Token 30: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.022520998492836952
    2. 'elif' → logprob: -4.147521018981934
    3. ' else' → logprob: -5.897521018981934
    4. '<|end|>' → logprob: -6.147521018981934
    5. '+' → logprob: -6.772521018981934
    6. '```' → logprob: -9.147521018981934
    7. ' elif' → logprob: -9.647521018981934
    8. '_else' → logprob: -10.022521018981934
    9. ')' → logprob: -10.147521018981934
    10. 'Else' → logprob: -10.272521018981934

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024834630312398076
    2. ':
' → logprob: -8.375247955322266
    3. '   ' → logprob: -11.500247955322266
    4. '):' → logprob: -12.625247955322266
    5. ' :' → logprob: -13.500247955322266
    6. ',' → logprob: -13.750247955322266
    7. '<|end|>' → logprob: -15.250247955322266
    8. ':
' → logprob: -15.375247955322266
    9. '>:' → logprob: -15.500247955322266
    10. ':

' → logprob: -15.875247955322266

Token 32: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.9237951636314392
    2. '   ' → logprob: -0.9237951636314392
    3. 'A' → logprob: -1.798795223236084
    4. 'B' → logprob: -4.173795223236084
    5. ' ' → logprob: -4.798795223236084
    6. 'print' → logprob: -5.298795223236084
    7. ' A' → logprob: -5.423795223236084
    8. ' C' → logprob: -6.048795223236084
    9. '(A' → logprob: -6.548795223236084
    10. '  ' → logprob: -6.798795223236084

Token 33: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.22027550637722015
    2. 'C' → logprob: -1.8452755212783813
    3. 'A' → logprob: -3.470275402069092
    4. ' print' → logprob: -5.720275402069092
    5. ' ' → logprob: -6.470275402069092
    6. '0' → logprob: -6.595275402069092
    7. '   ' → logprob: -7.345275402069092
    8. ' C' → logprob: -7.470275402069092
    9. ' A' → logprob: -7.720275402069092
    10. 'B' → logprob: -8.22027587890625

Token 34: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6204310655593872
    2. '(C' → logprob: -0.8704310655593872
    3. '(A' → logprob: -3.6204309463500977
    4. '(B' → logprob: -4.245430946350098
    5. '(K' → logprob: -6.745430946350098
    6. '((' → logprob: -7.120430946350098
    7. '(abs' → logprob: -8.870430946350098
    8. '()' → logprob: -9.120430946350098
    9. ' (' → logprob: -10.120430946350098
    10. '('' → logprob: -10.245430946350098

Token 35: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18318651616573334
    2. '-' → logprob: -2.4331865310668945
    3. ')' → logprob: -2.5581865310668945
    4. '+' → logprob: -6.9331865310668945
    5. '-B' → logprob: -7.4331865310668945
    6. ' +' → logprob: -7.5581865310668945
    7. '-C' → logprob: -10.058186531066895
    8. '<|end|>' → logprob: -11.683186531066895
    9. '-)' → logprob: -11.683186531066895
    10. ' )' → logprob: -11.933186531066895

Token 36: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.012232366017997265
    2. ' B' → logprob: -4.762232303619385
    3. 'C' → logprob: -5.637232303619385
    4. ' C' → logprob: -10.012232780456543
    5. ' ' → logprob: -13.762232780456543
    6. '	B' → logprob: -13.887232780456543
    7. '   ' → logprob: -14.262232780456543
    8. '  ' → logprob: -14.512232780456543
    9. '>B' → logprob: -15.887232780456543
    10. '-B' → logprob: -15.887232780456543

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.750000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')
' → logprob: -16.375001907348633
    5. '+' → logprob: -16.625001907348633
    6. ')`' → logprob: -16.750001907348633
    7. '`)' → logprob: -17.000001907348633
    8. '())' → logprob: -17.375001907348633
    9. '```' → logprob: -17.750001907348633
    10. '()' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 17.14%
Précision adaptée (1ère position): 20.00%
Précision (top 10): 82.86%
================================================================================
