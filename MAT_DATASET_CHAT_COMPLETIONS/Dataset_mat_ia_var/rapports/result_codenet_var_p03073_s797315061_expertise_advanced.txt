================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import pairwise

def min_changes(s: str) -> int:
    s = list(s)
    count = 0
    for i, (a, b) in enumerate(pairwise(s), start=1):
        if a == b:
            count += 1
            s[i] = '1' if a == '0' else '0'
    return count

print(min_changes(input()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' pair' (ID: 10610)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1645996570587158
    2. 'product' → logprob: -1.4145996570587158
    3. 'per' → logprob: -1.7895996570587158
    4. 'count' → logprob: -2.039599657058716
    5. 'cycle' → logprob: -2.664599657058716
    6. 'group' → logprob: -3.289599657058716
    7. 'chain' → logprob: -3.414599657058716
    8. 'acc' → logprob: -6.039599418640137
    9. 'is' → logprob: -6.539599418640137
    10. 'zip' → logprob: -6.914599418640137

Token 4: 'wise' (ID: 7480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.180258191714529e-06
    2. 'tools' → logprob: -12.375008583068848
    3. 'wise' → logprob: -13.250008583068848
    4. ' s' → logprob: -13.750008583068848
    5. '_s' → logprob: -15.000008583068848
    6. 'sl' → logprob: -15.625008583068848
    7. 'sv' → logprob: -16.00000762939453
    8. 'ertools' → logprob: -16.75000762939453
    9. 'sd' → logprob: -16.87500762939453
    10. 'sle' → logprob: -17.00000762939453

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014657003339380026
    2. '(
' → logprob: -6.626465797424316
    3. '\(' → logprob: -9.376465797424316
    4. '()' → logprob: -11.126465797424316
    5. '\n' → logprob: -11.376465797424316
    6. '(

' → logprob: -11.876465797424316
    7. '`' → logprob: -12.376465797424316
    8. '\' → logprob: -12.751465797424316
    9. '```' → logprob: -12.876465797424316
    10. '(
' → logprob: -13.251465797424316

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004197713453322649
    2. '(
' → logprob: -5.504197597503662
    3. '()' → logprob: -10.37919807434082
    4. '\(' → logprob: -10.50419807434082
    5. '\n' → logprob: -11.00419807434082
    6. '(

' → logprob: -11.37919807434082
    7. '\' → logprob: -12.50419807434082
    8. '```' → logprob: -12.62919807434082
    9. '`' → logprob: -12.75419807434082
    10. '(
' → logprob: -12.75419807434082

Token 7: ' min' (ID: 1349)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0009757821680977941
    2. ' pair' → logprob: -8.000975608825684
    3. ' ' → logprob: -8.750975608825684
    4. '_' → logprob: -9.125975608825684
    5. ' space' → logprob: -9.125975608825684
    6. ' process' → logprob: -9.625975608825684
    7. ' add' → logprob: -10.750975608825684
    8. ' _' → logprob: -10.750975608825684
    9. ' find' → logprob: -11.000975608825684
    10. ' my' → logprob: -11.375975608825684

Token 8: '_changes' (ID: 119201)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7570481300354004
    2. '_' → logprob: -1.0070481300354004
    3. 'imum' → logprob: -2.3820481300354004
    4. '(_' → logprob: -3.1320481300354004
    5. '_pair' → logprob: -4.7570481300354
    6. '(_)' → logprob: -5.1320481300354
    7. 'imal' → logprob: -6.0070481300354
    8. ' _' → logprob: -6.5070481300354
    9. '(
' → logprob: -7.1320481300354
    10. '_word' → logprob: -7.3820481300354

Token 9: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03781791403889656
    2. '_' → logprob: -3.41281795501709
    3. '_to' → logprob: -6.16281795501709
    4. '(_' → logprob: -7.78781795501709
    5. '_for' → logprob: -8.41281795501709
    6. '(_:' → logprob: -9.28781795501709
    7. '_token' → logprob: -9.41281795501709
    8. '_between' → logprob: -9.41281795501709
    9. '_(' → logprob: -9.78781795501709
    10. '_pairs' → logprob: -9.91281795501709

Token 10: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03813386708498001
    2. ':' → logprob: -3.4131338596343994
    3. ')' → logprob: -5.7881340980529785
    4. '):
' → logprob: -6.9131340980529785
    5. ',' → logprob: -9.03813362121582
    6. ' ):' → logprob: -9.28813362121582
    7. '[' → logprob: -9.53813362121582
    8. 's' → logprob: -10.16313362121582
    9. ' :' → logprob: -10.28813362121582
    10. '):

' → logprob: -11.28813362121582

Token 11: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.018173707649111748
    2. 'str' → logprob: -4.018173694610596
    3. ')' → logprob: -11.393174171447754
    4. 's' → logprob: -12.643174171447754
    5. '[str' → logprob: -12.643174171447754
    6. ':str' → logprob: -13.143174171447754
    7. ' ' → logprob: -13.643174171447754
    8. ' )' → logprob: -14.018174171447754
    9. ' s' → logprob: -14.768174171447754
    10. '	str' → logprob: -14.768174171447754

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04908790439367294
    2. '):' → logprob: -3.0490880012512207
    3. '   ' → logprob: -8.924087524414062
    4. ',' → logprob: -8.924087524414062
    5. ')->' → logprob: -9.549087524414062
    6. '):
' → logprob: -9.924087524414062
    7. ':' → logprob: -10.174087524414062
    8. '[' → logprob: -10.924087524414062
    9. ')>' → logprob: -11.424087524414062
    10. ' )' → logprob: -11.549087524414062

Token 13: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015640194760635495
    2. ':return' → logprob: -7.126564025878906
    3. '->' → logprob: -7.626564025878906
    4. '():' → logprob: -10.126564025878906
    5. ':def' → logprob: -10.376564025878906
    6. ':void' → logprob: -10.376564025878906
    7. '   ' → logprob: -10.501564025878906
    8. ' ->' → logprob: -10.751564025878906
    9. '[:]' → logprob: -11.001564025878906
    10. ')->' → logprob: -11.126564025878906

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14485034346580505
    2. 'int' → logprob: -2.019850254058838
    3. ' str' → logprob: -6.144850254058838
    4. 'str' → logprob: -11.394850730895996
    5. '[int' → logprob: -12.269850730895996
    6. ' None' → logprob: -12.519850730895996
    7. ' list' → logprob: -13.019850730895996
    8. '<int' → logprob: -13.519850730895996
    9. '   ' → logprob: -14.019850730895996
    10. ' ' → logprob: -14.144850730895996

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.1054253011243418e-05
    2. ':return' → logprob: -11.500020980834961
    3. ':
' → logprob: -12.125020980834961
    4. '):' → logprob: -13.375020980834961
    5. '():' → logprob: -13.500020980834961
    6. ':def' → logprob: -14.250020980834961
    7. '   ' → logprob: -14.500020980834961
    8. ' :' → logprob: -14.500020980834961
    9. ':**' → logprob: -15.500020980834961
    10. '':' → logprob: -16.00002098083496

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017954541370272636
    2. ':' → logprob: -4.892954349517822
    3. '```' → logprob: -5.017954349517822
    4. ':
' → logprob: -6.142954349517822
    5. ' :' → logprob: -8.64295482635498
    6. '    
' → logprob: -8.76795482635498
    7. '    ' → logprob: -8.76795482635498
    8. 'result' → logprob: -9.01795482635498
    9. 'count' → logprob: -9.26795482635498
    10. ' ' → logprob: -9.39295482635498

Token 17: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7218769788742065
    2. ' return' → logprob: -1.3468769788742065
    3. 'return' → logprob: -2.971877098083496
    4. 'count' → logprob: -3.346877098083496
    5. ' n' → logprob: -3.471877098083496
    6. '```' → logprob: -3.471877098083496
    7. ' count' → logprob: -3.596877098083496
    8. ' changes' → logprob: -4.096877098083496
    9. 'n' → logprob: -4.096877098083496
    10. 'changes' → logprob: -4.971877098083496

Token 18: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2123812735080719
    2. ' =' → logprob: -2.212381362915039
    3. '.' → logprob: -3.462381362915039
    4. '[:]' → logprob: -3.712381362915039
    5. '=' → logprob: -4.212381362915039
    6. '.count' → logprob: -5.712381362915039
    7. '[]' → logprob: -6.962381362915039
    8. ':' → logprob: -7.212381362915039
    9. '   ' → logprob: -7.337381362915039
    10. ' ' → logprob: -7.462381362915039

Token 19: ' list' (ID: 1562)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6544402241706848
    2. ' list' → logprob: -0.9044402241706848
    3. 's' → logprob: -2.90444016456604
    4. 'list' → logprob: -4.029440402984619
    5. ' sorted' → logprob: -7.029440402984619
    6. ' '' → logprob: -7.904440402984619
    7. 'sorted' → logprob: -8.029439926147461
    8. ' [' → logprob: -8.154439926147461
    9. '"' → logprob: -8.654439926147461
    10. ''s' → logprob: -8.779439926147461

Token 20: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000714935187716037
    2. '(' → logprob: -7.2507147789001465
    3. 's' → logprob: -13.125715255737305
    4. '('' → logprob: -13.250715255737305
    5. '("("' → logprob: -15.000715255737305
    6. '((' → logprob: -15.125715255737305
    7. ' (' → logprob: -15.875715255737305
    8. '```' → logprob: -16.625715255737305
    9. '(str' → logprob: -16.750715255737305
    10. '(`' → logprob: -16.750715255737305

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001483564410591498
    2. '())' → logprob: -9.00014877319336
    3. '()' → logprob: -11.37514877319336
    4. '(' → logprob: -12.87514877319336
    5. ' )' → logprob: -13.00014877319336
    6. ')
' → logprob: -13.00014877319336
    7. '))' → logprob: -13.25014877319336
    8. '   ' → logprob: -13.62514877319336
    9. '[' → logprob: -14.62514877319336
    10. ')s' → logprob: -14.75014877319336

Token 22: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6360822916030884
    2. '   ' → logprob: -1.5110822916030884
    3. '
' → logprob: -2.511082172393799
    4. 'for' → logprob: -2.886082172393799
    5. ' for' → logprob: -3.761082172393799
    6. 'n' → logprob: -4.011082172393799
    7. '\n' → logprob: -4.261082172393799
    8. ':' → logprob: -4.511082172393799
    9. '\' → logprob: -4.511082172393799
    10. '[' → logprob: -4.636082172393799

Token 23: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03410216420888901
    2. 'for' → logprob: -3.534102201461792
    3. ' n' → logprob: -6.034101963043213
    4. '   ' → logprob: -6.784101963043213
    5. ' i' → logprob: -7.659101963043213
    6. 'n' → logprob: -8.659102439880371
    7. '```' → logprob: -9.534102439880371
    8. ' ' → logprob: -9.659102439880371
    9. 'i' → logprob: -11.909102439880371
    10. ' length' → logprob: -12.284102439880371

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7391314506530762
    2. '=' → logprob: -0.8641314506530762
    3. '(' → logprob: -2.864131450653076
    4. ' ' → logprob: -3.864131450653076
    5. '_' → logprob: -4.239131450653076
    6. ')' → logprob: -5.489131450653076
    7. '<|end|>' → logprob: -6.489131450653076
    8. ' +=' → logprob: -7.239131450653076
    9. 's' → logprob: -7.989131450653076
    10. '  ' → logprob: -8.114131927490234

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38690268993377686
    2. '0' → logprob: -1.1369026899337769
    3. '1' → logprob: -10.386902809143066
    4. ' s' → logprob: -14.886902809143066
    5. '2' → logprob: -15.636902809143066
    6. ' ' → logprob: -16.38690185546875
    7. 's' → logprob: -16.57440185546875
    8. ' len' → logprob: -16.63690185546875
    9. '   ' → logprob: -17.38690185546875
    10. '4' → logprob: -17.69940185546875

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041011967696249485
    2. ' ' → logprob: -5.504101276397705
    3. '1' → logprob: -10.754100799560547
    4. 'len' → logprob: -14.504100799560547
    5. '   ' → logprob: -15.129100799560547
    6. '2' → logprob: -15.691600799560547
    7. ' len' → logprob: -16.129100799560547
    8. 'sum' → logprob: -16.379100799560547
    9. 's' → logprob: -16.941600799560547
    10. '  ' → logprob: -17.379100799560547

Token 27: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4755890667438507
    2. '
' → logprob: -1.8505890369415283
    3. '<|end|>' → logprob: -2.4755890369415283
    4. 'for' → logprob: -2.6005890369415283
    5. '   ' → logprob: -3.1005890369415283
    6. ' ' → logprob: -5.100589275360107
    7. '<|end|>' → logprob: -5.600589275360107
    8. '    
' → logprob: -6.225589275360107
    9. '\n' → logprob: -6.350589275360107
    10. ' 
' → logprob: -6.725589275360107

Token 28: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4876284897327423
    2. '   ' → logprob: -1.61262845993042
    3. '\n' → logprob: -2.98762845993042
    4. '
' → logprob: -3.36262845993042
    5. ' ' → logprob: -3.48762845993042
    6. 'for' → logprob: -3.48762845993042
    7. 'n' → logprob: -4.61262845993042
    8. ' 
' → logprob: -4.73762845993042
    9. '<|end|>' → logprob: -4.73762845993042
    10. '    
' → logprob: -5.48762845993042

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6932950019836426
    2. 'for' (adapté à ' for') → logprob: -0.6932950019836426
    3. 'n' → logprob: -9.193294525146484
    4. ' ' → logprob: -10.693294525146484
    5. '   ' → logprob: -11.068294525146484
    6. ' n' → logprob: -13.068294525146484
    7. ' 
' → logprob: -13.568294525146484
    8. 'i' → logprob: -13.693294525146484
    9. '\n' → logprob: -14.693294525146484
    10. '	for' → logprob: -14.693294525146484

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.059228863567113876
    2. 'i' → logprob: -2.9342288970947266
    3. ' a' → logprob: -6.059228897094727
    4. 'a' → logprob: -7.184228897094727
    5. ' c' → logprob: -8.059228897094727
    6. ' ' → logprob: -8.309228897094727
    7. ' _' → logprob: -8.809228897094727
    8. '(i' → logprob: -9.184228897094727
    9. '   ' → logprob: -9.309228897094727
    10. ' pair' → logprob: -9.559228897094727

Token 31: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07394144684076309
    2. ',' → logprob: -3.323941469192505
    3. 'in' → logprob: -3.573941469192505
    4. ' ' → logprob: -4.948941230773926
    5. ' ,' → logprob: -9.698941230773926
    6. '  ' → logprob: -11.073941230773926
    7. 'n' → logprob: -11.573941230773926
    8. '+' → logprob: -11.573941230773926
    9. ')' → logprob: -11.948941230773926
    10. ',n' → logprob: -12.198941230773926

Token 32: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6088757514953613
    2. '(j' → logprob: -1.9838757514953613
    3. 'c' → logprob: -2.2338757514953613
    4. ' (' → logprob: -3.2338757514953613
    5. '_' → logprob: -3.4838757514953613
    6. '(x' → logprob: -3.8588757514953613
    7. '(ch' → logprob: -3.9838757514953613
    8. '(a' → logprob: -4.108875751495361
    9. '(_,' → logprob: -4.608875751495361
    10. '(char' → logprob: -4.733875751495361

Token 33: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012130742892622948
    2. 'x' → logprob: -4.6371307373046875
    3. 'c' → logprob: -6.3871307373046875
    4. 'prev' → logprob: -7.3871307373046875
    5. 'current' → logprob: -10.887130737304688
    6. ' a' → logprob: -11.012130737304688
    7. 'first' → logprob: -11.137130737304688
    8. '   ' → logprob: -11.762130737304688
    9. 'curr' → logprob: -13.262130737304688
    10. 'previous' → logprob: -13.387130737304688

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ',b' → logprob: -10.750025749206543
    3. ' ,' → logprob: -12.500025749206543
    4. 'b' → logprob: -15.500025749206543
    5. 's' → logprob: -17.000024795532227
    6. '‌,' → logprob: -17.000024795532227
    7. ',)' → logprob: -17.375024795532227
    8. '<|end|>' → logprob: -17.625024795532227
    9. ',
' → logprob: -17.875024795532227
    10. '```' → logprob: -18.125024795532227

Token 35: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009137284359894693
    2. ' b' → logprob: -7.000913619995117
    3. '<|end|>' → logprob: -13.250913619995117
    4. ')b' → logprob: -14.875913619995117
    5. ')' → logprob: -16.250913619995117
    6. ' ' → logprob: -17.500913619995117
    7. '<|end|>' → logprob: -17.750913619995117
    8. '_b' → logprob: -19.625913619995117
    9. 'i' → logprob: -19.750913619995117
    10. '	b' → logprob: -19.875913619995117

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ' )' → logprob: -10.625027656555176
    3. 'in' → logprob: -13.250027656555176
    4. ' in' → logprob: -13.750027656555176
    5. ')
' → logprob: -16.000028610229492
    6. '   ' → logprob: -16.125028610229492
    7. ' ' → logprob: -16.250028610229492
    8. '),' → logprob: -16.375028610229492
    9. ')`' → logprob: -16.375028610229492
    10. '`)' → logprob: -16.750028610229492

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014291969127953053
    2. 'in' → logprob: -4.264291763305664
    3. ')' → logprob: -9.139291763305664
    4. ' ' → logprob: -11.014291763305664
    5. '<|end|>' → logprob: -13.639291763305664
    6. ' )' → logprob: -13.889291763305664
    7. '   ' → logprob: -14.764291763305664
    8. '    ' → logprob: -14.889291763305664
    9. '  ' → logprob: -15.014291763305664
    10. '	in' → logprob: -15.139291763305664

Token 38: ' enumerate' (ID: 29671)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.03029962256550789
    2. ' enumerate' → logprob: -3.530299663543701
    3. 'pair' → logprob: -8.155299186706543
    4. 'enumer' → logprob: -8.405299186706543
    5. '(pair' → logprob: -10.780299186706543
    6. ')' → logprob: -12.405299186706543
    7. '<pair' → logprob: -12.655299186706543
    8. ' enumer' → logprob: -13.405299186706543
    9. ' continue' → logprob: -13.405299186706543
    10. ' ' → logprob: -13.530299186706543

Token 39: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.032181013375520706
    2. ' pair' → logprob: -3.5321810245513916
    3. 'pair' → logprob: -6.1571807861328125
    4. '(' → logprob: -8.282180786132812
    5. ')' → logprob: -10.282180786132812
    6. '<pair' → logprob: -11.532180786132812
    7. '_pair' → logprob: -12.407180786132812
    8. ' (' → logprob: -12.532180786132812
    9. '   ' → logprob: -13.157180786132812
    10. ' ' → logprob: -13.782180786132812

Token 40: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -12.750005722045898
    3. '-wise' → logprob: -14.000005722045898
    4. 'w' → logprob: -14.125005722045898
    5. ' wise' → logprob: -15.500005722045898
    6. 's' → logprob: -15.875005722045898
    7. '```' → logprob: -16.3750057220459
    8. '))' → logprob: -16.7500057220459
    9. '   ' → logprob: -16.7500057220459
    10. 'way' → logprob: -16.8750057220459

Token 41: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007232757634483278
    2. 's' → logprob: -8.125722885131836
    3. ')' → logprob: -8.250722885131836
    4. ')(' → logprob: -9.250722885131836
    5. '(' → logprob: -10.500722885131836
    6. ')s' → logprob: -10.750722885131836
    7. ' (' → logprob: -11.125722885131836
    8. ' s' → logprob: -12.875722885131836
    9. '   ' → logprob: -13.750722885131836
    10. ' )' → logprob: -14.250722885131836

Token 42: '),' (ID: 936)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.007598349824547768
    2. '))' → logprob: -5.507598400115967
    3. ')):
' → logprob: -5.882598400115967
    4. '):' → logprob: -7.882598400115967
    5. ')):
' → logprob: -9.132597923278809
    6. '   ' → logprob: -9.132597923278809
    7. ':' → logprob: -10.257597923278809
    8. ')' → logprob: -10.382597923278809
    9. '()))' → logprob: -10.757597923278809
    10. ' ' → logprob: -11.007597923278809

Token 43: ' start' (ID: 1604)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.057306256145238876
    2. ')' → logprob: -3.3073062896728516
    3. ' ):' → logprob: -4.182306289672852
    4. '):
' → logprob: -6.682306289672852
    5. ' ' → logprob: -6.807306289672852
    6. 'start' → logprob: -8.057306289672852
    7. 'if' → logprob: -8.432306289672852
    8. '1' → logprob: -8.932306289672852
    9. ' start' → logprob: -8.932306289672852
    10. '```' → logprob: -9.057306289672852

Token 44: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.875000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' =' → logprob: -16.875
    5. ')=' → logprob: -17.875
    6. ')' → logprob: -17.875
    7. '=len' → logprob: -18.25
    8. '=}' → logprob: -18.875
    9. '=
' → logprob: -19.375
    10. '=int' → logprob: -19.375

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010411443654447794
    2. '0' → logprob: -6.876040935516357
    3. ' ' → logprob: -11.751041412353516
    4. '2' → logprob: -15.626041412353516
    5. '-' → logprob: -16.501041412353516
    6. '   ' → logprob: -16.626041412353516
    7. 'i' → logprob: -16.876041412353516
    8. ')' → logprob: -17.126041412353516
    9. '```' → logprob: -18.001041412353516
    10. '3' → logprob: -18.938541412353516

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01868654042482376
    2. ':' → logprob: -4.518686771392822
    3. '):
' → logprob: -4.893686771392822
    4. '   ' → logprob: -10.268686294555664
    5. ' ):' → logprob: -10.393686294555664
    6. ')' → logprob: -10.643686294555664
    7. '):
' → logprob: -10.768686294555664
    8. ' ' → logprob: -13.768686294555664
    9. '       ' → logprob: -13.893686294555664
    10. '():' → logprob: -14.268686294555664

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008004531264305115
    2. '<|end|>' → logprob: -5.383004665374756
    3. ':' → logprob: -6.383004665374756
    4. '    ' → logprob: -7.258004665374756
    5. '        ' → logprob: -7.758004665374756
    6. ' ' → logprob: -8.508004188537598
    7. '   ' → logprob: -9.258004188537598
    8. '<|end|>' → logprob: -9.883004188537598
    9. '      ' → logprob: -10.008004188537598
    10. '        
' → logprob: -10.008004188537598

Token 48: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2667689621448517
    2. ' if' → logprob: -1.8917689323425293
    3. ' ' → logprob: -3.2667689323425293
    4. '    ' → logprob: -4.391768932342529
    5. '<|end|>' → logprob: -4.516768932342529
    6. '        ' → logprob: -4.641768932342529
    7. '   ' → logprob: -5.266768932342529
    8. '           ' → logprob: -6.016768932342529
    9. '```' → logprob: -6.391768932342529
    10. 'if' (adapté à ' if') → logprob: -6.516768932342529

Token 49: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.474099338054657
    2. 'a' → logprob: -0.974099338054657
    3. '    ' → logprob: -11.849099159240723
    4. 'b' → logprob: -11.849099159240723
    5. ' b' → logprob: -12.724099159240723
    6. ' ' → logprob: -13.474099159240723
    7. 's' → logprob: -13.849099159240723
    8. '	a' → logprob: -14.224099159240723
    9. '   ' → logprob: -14.474099159240723
    10. '(a' → logprob: -14.974099159240723

Token 50: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.34848397970199585
    2. '==' → logprob: -1.2234840393066406
    3. '=' → logprob: -10.47348403930664
    4. ' ' → logprob: -12.59848403930664
    5. '===' → logprob: -12.72348403930664
    6. ')' → logprob: -13.34848403930664
    7. ')==' → logprob: -14.34848403930664
    8. '!=' → logprob: -14.59848403930664
    9. ' !=' → logprob: -14.97348403930664
    10. ' =' → logprob: -15.34848403930664

Token 51: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05491185188293457
    2. ' b' → logprob: -2.9299118518829346
    3. ''' → logprob: -11.304911613464355
    4. ' ' → logprob: -11.679911613464355
    5. ''b' → logprob: -12.929911613464355
    6. ' '' → logprob: -13.304911613464355
    7. 's' → logprob: -13.679911613464355
    8. 'a' → logprob: -13.804911613464355
    9. ' s' → logprob: -14.054911613464355
    10. ' a' → logprob: -14.929911613464355

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008306166157126427
    2. ':
' → logprob: -4.88330602645874
    3. '):' → logprob: -7.88330602645874
    4. ' and' → logprob: -8.633306503295898
    5. '):
' → logprob: -9.758306503295898
    6. '       ' → logprob: -10.633306503295898
    7. 'and' → logprob: -10.758306503295898
    8. ')' → logprob: -10.883306503295898
    9. ' :' → logprob: -12.258306503295898
    10. ',' → logprob: -12.758306503295898

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4968133866786957
    2. '       ' → logprob: -1.246813416481018
    3. 's' → logprob: -2.7468132972717285
    4. ' s' → logprob: -3.2468132972717285
    5. '```' → logprob: -8.496813774108887
    6. '   ' → logprob: -9.121813774108887
    7. '
' → logprob: -9.246813774108887
    8. '        
' → logprob: -9.371813774108887
    9. ',' → logprob: -9.746813774108887
    10. '<|end|>' → logprob: -9.871813774108887

Token 54: ' count' (ID: 3605)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16265647113323212
    2. 's' → logprob: -2.162656545639038
    3. '       ' → logprob: -3.412656545639038
    4. ' if' → logprob: -7.162656307220459
    5. '           ' → logprob: -7.287656307220459
    6. '   ' → logprob: -8.412656784057617
    7. '               ' → logprob: -9.162656784057617
    8. 'if' → logprob: -10.162656784057617
    9. ' count' → logprob: -10.537656784057617
    10. '```' → logprob: -10.662656784057617

Token 55: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0002655079588294029
    2. '+=' → logprob: -8.250265121459961
    3. ' +' → logprob: -13.750265121459961
    4. ' =' → logprob: -13.875265121459961
    5. ' ' → logprob: -14.250265121459961
    6. '    ' → logprob: -14.500265121459961
    7. '+' → logprob: -15.125265121459961
    8. ' -=' → logprob: -15.250265121459961
    9. ']+=' → logprob: -16.62526512145996
    10. '<|end|>' → logprob: -16.75026512145996

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004079112783074379
    2. ' ' → logprob: -5.504079341888428
    3. '2' → logprob: -15.00407886505127
    4. '   ' → logprob: -17.379079818725586
    5. '3' → logprob: -17.504079818725586
    6. '0' → logprob: -17.566579818725586
    7. '-' → logprob: -18.129079818725586
    8. ' (' → logprob: -18.129079818725586
    9. '  ' → logprob: -18.191579818725586
    10. '(' → logprob: -18.379079818725586

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '2' → logprob: -15.000028610229492
    4. '0' → logprob: -16.562528610229492
    5. 's' → logprob: -17.000028610229492
    6. '-' → logprob: -17.125028610229492
    7. '(' → logprob: -17.375028610229492
    8. '3' → logprob: -17.687528610229492
    9. 'int' → logprob: -18.375028610229492
    10. 'len' → logprob: -18.562528610229492

Token 58: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09494249522686005
    2. '   ' → logprob: -3.219942569732666
    3. '       ' → logprob: -3.469942569732666
    4. 's' → logprob: -4.719942569732666
    5. ' s' → logprob: -4.719942569732666
    6. ',' → logprob: -7.469942569732666
    7. '    
' → logprob: -8.594942092895508
    8. '```' → logprob: -8.719942092895508
    9. '        
' → logprob: -9.344942092895508
    10. '
' → logprob: -9.344942092895508

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2597489356994629
    2. '       ' → logprob: -1.509748935699463
    3. '   ' → logprob: -5.259748935699463
    4. 's' → logprob: -7.634748935699463
    5. ' s' → logprob: -7.884748935699463
    6. ',' → logprob: -8.009748458862305
    7. '        
' → logprob: -8.009748458862305
    8. '```' → logprob: -8.259748458862305
    9. '    
' → logprob: -8.634748458862305
    10. '            
' → logprob: -9.509748458862305

Token 60: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.02389693073928356
    2. ' s' → logprob: -4.14889669418335
    3. '           ' → logprob: -4.89889669418335
    4. 'if' → logprob: -8.523897171020508
    5. ' if' → logprob: -9.648897171020508
    6. '       ' → logprob: -10.023897171020508
    7. '   ' → logprob: -10.523897171020508
    8. 'i' → logprob: -11.023897171020508
    9. '               ' → logprob: -11.023897171020508
    10. ' i' → logprob: -13.523897171020508

Token 61: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. '[I' → logprob: -16.125
    4. '[s' → logprob: -17.75
    5. 'i' → logprob: -17.875
    6. '[max' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. '[index' → logprob: -18.625
    9. '.insert' → logprob: -19.25
    10. '[j' → logprob: -19.25

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001227276516146958
    2. ' ]' → logprob: -9.750123023986816
    3. '+' → logprob: -10.750123023986816
    4. ']+=' → logprob: -10.875123023986816
    5. ']=' → logprob: -11.000123023986816
    6. '-' → logprob: -13.375123023986816
    7. '']' → logprob: -13.500123023986816
    8. '[' → logprob: -14.250123023986816
    9. 's' → logprob: -14.500123023986816
    10. ' ' → logprob: -14.750123023986816

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40001729130744934
    2. ' =' → logprob: -1.150017261505127
    3. '+=' → logprob: -4.900017261505127
    4. ' +=' → logprob: -6.275017261505127
    5. ']' → logprob: -6.650017261505127
    6. '[' → logprob: -7.025017261505127
    7. '+' → logprob: -8.025017738342285
    8. ']+=' → logprob: -8.150017738342285
    9. ' ' → logprob: -8.275017738342285
    10. '+='' → logprob: -9.275017738342285

Token 64: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3294185400009155
    2. ''a' → logprob: -2.579418659210205
    3. ''#' → logprob: -2.954418659210205
    4. ''x' → logprob: -3.079418659210205
    5. '"' → logprob: -3.204418659210205
    6. 'None' → logprob: -3.579418659210205
    7. ''*' → logprob: -4.329418659210205
    8. '"x' → logprob: -5.454418659210205
    9. ''_' → logprob: -5.704418659210205
    10. 'chr' → logprob: -5.829418659210205

Token 65: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.662538468837738
    2. ''' → logprob: -1.1625385284423828
    3. '#' → logprob: -3.537538528442383
    4. '0' → logprob: -3.662538528442383
    5. ''a' → logprob: -3.662538528442383
    6. ''#' → logprob: -3.662538528442383
    7. '_' → logprob: -4.037538528442383
    8. 'A' → logprob: -4.537538528442383
    9. ''*' → logprob: -5.162538528442383
    10. '?' → logprob: -5.287538528442383

Token 66: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.9424725148128346e-05
    2. '0' → logprob: -10.625049591064453
    3. '2' → logprob: -11.625049591064453
    4. '9' → logprob: -12.500049591064453
    5. '6' → logprob: -12.875049591064453
    6. '"' → logprob: -13.000049591064453
    7. '1' → logprob: -13.250049591064453
    8. '7' → logprob: -13.750049591064453
    9. ''
' → logprob: -13.875049591064453
    10. '3' → logprob: -14.125049591064453

Token 67: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.16557887196540833
    2. 's' → logprob: -2.040578842163086
    3. 'a' → logprob: -4.415578842163086
    4. ' a' → logprob: -4.665578842163086
    5. ' b' → logprob: -7.415578842163086
    6. 'b' → logprob: -7.540578842163086
    7. ' ' → logprob: -12.165578842163086
    8. '	s' → logprob: -14.165578842163086
    9. ''s' → logprob: -14.665578842163086
    10. ''a' → logprob: -14.665578842163086

Token 69: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31629979610443115
    2. ' ==' → logprob: -1.3162997961044312
    3. '0' → logprob: -6.316299915313721
    4. '=' → logprob: -7.441299915313721
    5. '!=' → logprob: -8.191299438476562
    6. ' !=' → logprob: -8.941299438476562
    7. '=='' → logprob: -9.066299438476562
    8. ' ' → logprob: -9.566299438476562
    9. '```' → logprob: -12.066299438476562
    10. ' =='' → logprob: -12.191299438476562

Token 70: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0035488775465637445
    2. '0' → logprob: -5.753549098968506
    3. ' '' → logprob: -8.128548622131348
    4. '"' → logprob: -9.753548622131348
    5. ' ' → logprob: -12.003548622131348
    6. ''s' → logprob: -12.253548622131348
    7. 's' → logprob: -13.128548622131348
    8. 'a' → logprob: -13.628548622131348
    9. ''a' → logprob: -13.753548622131348
    10. ' s' → logprob: -14.378548622131348

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. '1' → logprob: -11.750011444091797
    3. '9' → logprob: -13.000011444091797
    4. 'a' → logprob: -14.250011444091797
    5. '2' → logprob: -15.375011444091797
    6. '4' → logprob: -16.500011444091797
    7. ''' → logprob: -16.875011444091797
    8. 'o' → logprob: -17.437511444091797
    9. '6' → logprob: -17.500011444091797
    10. '3' → logprob: -17.937511444091797

Token 72: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.231182826217264e-05
    2. 'else' → logprob: -10.250072479248047
    3. '0' → logprob: -10.500072479248047
    4. ' else' → logprob: -12.625072479248047
    5. '"' → logprob: -13.125072479248047
    6. '2' → logprob: -13.375072479248047
    7. '1' → logprob: -13.625072479248047
    8. ''s' → logprob: -14.750072479248047
    9. ''e' → logprob: -15.125072479248047
    10. '3' → logprob: -16.250072479248047

Token 73: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3132847249507904
    2. 'else' → logprob: -1.3132847547531128
    3. '	else' → logprob: -11.188284873962402
    4. ''' → logprob: -12.438284873962402
    5. '_else' → logprob: -13.688284873962402
    6. '```' → logprob: -13.938284873962402
    7. 's' → logprob: -14.063284873962402
    8. 'e' → logprob: -14.188284873962402
    9. ' ' → logprob: -14.563284873962402
    10. ''s' → logprob: -15.313284873962402

Token 74: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2519458532333374
    2. ' '' → logprob: -1.5019458532333374
    3. ' ' → logprob: -12.001945495605469
    4. '"' → logprob: -12.126945495605469
    5. ' ' → logprob: -13.001945495605469
    6. '0' → logprob: -13.376945495605469
    7. '('' → logprob: -14.751945495605469
    8. '`' → logprob: -15.689445495605469
    9. ''s' → logprob: -16.31444549560547
    10. ''a' → logprob: -16.56444549560547

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859815910458565
    2. ''' → logprob: -3.048598051071167
    3. ' '' → logprob: -11.673598289489746
    4. ' ' → logprob: -13.548598289489746
    5. '"' → logprob: -14.298598289489746
    6. '1' → logprob: -16.17359733581543
    7. ''s' → logprob: -16.79859733581543
    8. '`' → logprob: -17.17359733581543
    9. '   ' → logprob: -17.54859733581543
    10. '_' → logprob: -17.67359733581543

Token 76: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.547789674485102e-05
    2. '')' → logprob: -10.500035285949707
    3. ''
' → logprob: -12.625035285949707
    4. '"' → logprob: -13.250035285949707
    5. '<|end|>' → logprob: -13.250035285949707
    6. ')' → logprob: -15.625035285949707
    7. ''''' → logprob: -15.750035285949707
    8. '```' → logprob: -15.875035285949707
    9. '']' → logprob: -16.500036239624023
    10. ''"' → logprob: -16.750036239624023

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006780040566809475
    2. '<|end|>' → logprob: -7.750678062438965
    3. ' return' → logprob: -9.125678062438965
    4. '	return' → logprob: -10.125678062438965
    5. 'return' → logprob: -10.875678062438965
    6. '       ' → logprob: -10.875678062438965
    7. '```' → logprob: -11.000678062438965
    8. '\n' → logprob: -11.250678062438965
    9. '    
' → logprob: -11.625678062438965
    10. '\' → logprob: -11.625678062438965

Token 78: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1160719022154808
    2. '<|end|>' → logprob: -3.116071939468384
    3. '
' → logprob: -3.866071939468384
    4. ' return' → logprob: -4.241071701049805
    5. '\' → logprob: -4.866071701049805
    6. '\n' → logprob: -4.991071701049805
    7. 'return' (adapté à ' return') → logprob: -5.116071701049805
    8. '	return' → logprob: -5.866071701049805
    9. '```' → logprob: -6.116071701049805
    10. '#' → logprob: -7.116071701049805

Token 79: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1269282102584839
    2. ' count' → logprob: -2.1269283294677734
    3. '(count' → logprob: -16.501928329467773
    4. '	count' → logprob: -16.876928329467773
    5. '[count' → logprob: -17.501928329467773
    6. '<count' → logprob: -18.501928329467773
    7. 'counts' → logprob: -18.626928329467773
    8. '$count' → logprob: -18.876928329467773
    9. '=count' → logprob: -20.501928329467773
    10. ',count' → logprob: -20.626928329467773

Token 80: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029724227264523506
    2. '(min' → logprob: -3.77972412109375
    3. '(print' → logprob: -5.40472412109375
    4. '('' → logprob: -6.27972412109375
    5. '("' → logprob: -10.90472412109375
    6. '("("' → logprob: -11.02972412109375
    7. '((' → logprob: -11.65472412109375
    8. '(len' → logprob: -11.65472412109375
    9. '(s' → logprob: -11.65472412109375
    10. '(`' → logprob: -12.27972412109375

Token 83: '_changes' (ID: 119201)
  Prédit: '_changes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_changes' → logprob: -2.45848218582978e-06
    2. '_ch' → logprob: -13.12500286102295
    3. '_' → logprob: -15.37500286102295
    4. '_change' → logprob: -15.75000286102295
    5. ')_' → logprob: -17.625001907348633
    6. ')' → logprob: -17.750001907348633
    7. 'Changes' → logprob: -17.875001907348633
    8. '_changed' → logprob: -19.000001907348633
    9. '_c' → logprob: -19.125001907348633
    10. 'changes' → logprob: -19.375001907348633

Token 84: '(input' (ID: 10054)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7838472127914429
    2. '('' → logprob: -1.0338472127914429
    3. '(' → logprob: -1.7838472127914429
    4. '("("' → logprob: -4.033847332000732
    5. '("(' → logprob: -6.908847332000732
    6. '("")' → logprob: -8.033846855163574
    7. '()' → logprob: -8.283846855163574
    8. '(s' → logprob: -8.408846855163574
    9. '('(' → logprob: -10.033846855163574
    10. '(""))' → logprob: -10.033846855163574

Token 85: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4787645936012268
    2. '())' → logprob: -1.228764533996582
    3. '(' → logprob: -3.228764533996582
    4. '()' → logprob: -3.228764533996582
    5. '(()' → logprob: -5.478764533996582
    6. '('' → logprob: -6.353764533996582
    7. '("' → logprob: -7.103764533996582
    8. '(""))' → logprob: -7.353764533996582
    9. '("("' → logprob: -7.978764533996582
    10. '()));' → logprob: -8.478764533996582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 43.37%
Précision adaptée (1ère position): 44.58%
Précision (top 10): 81.93%
================================================================================
