================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, K, C = map(int, input().split())
S = input()
l = [0]*K
i = 0
j = 0
while j < K:
    while S[i] == "x":
        i += 1
    l[j] = i
    i += C+1
    j += 1
r = [0]*K
i = N-1
j = K-1
while j >= 0:
    while S[i] == "x":
        i -= 1
    r[j] = i
    i -= C+1
    j -= 1
ii = 0
while ii < K:
    if l[ii] == r[ii]:
        print(l[ii]+1)
    ii += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' K' (ID: 658)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00409371592104435
    2. ' =' → logprob: -5.629093647003174
    3. ',' → logprob: -8.254094123840332
    4. '```' → logprob: -9.004094123840332
    5. '+' → logprob: -10.379094123840332
    6. '[' → logprob: -11.254094123840332
    7. '*' → logprob: -11.379094123840332
    8. ':' → logprob: -11.379094123840332
    9. '.' → logprob: -11.754094123840332
    10. ')' → logprob: -11.879094123840332

Token 4: ' C' (ID: 363)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02515450119972229
    2. ' =' → logprob: -3.7751545906066895
    3. ',' → logprob: -6.2751545906066895
    4. ')' → logprob: -11.275154113769531
    5. '.' → logprob: -12.900154113769531
    6. ';' → logprob: -13.150154113769531
    7. '=int' → logprob: -13.650154113769531
    8. '=input' → logprob: -13.775154113769531
    9. '=
' → logprob: -13.900154113769531
    10. '_' → logprob: -13.900154113769531

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002279434585943818
    2. ' =' → logprob: -6.127279281616211
    3. ',' → logprob: -9.627279281616211
    4. '```' → logprob: -11.252279281616211
    5. '_' → logprob: -12.877279281616211
    6. ':' → logprob: -13.002279281616211
    7. ')' → logprob: -13.127279281616211
    8. '.' → logprob: -13.252279281616211
    9. '[' → logprob: -13.627279281616211
    10. ';' → logprob: -13.752279281616211

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.18143624067306519
    2. 'map' → logprob: -1.80643630027771
    3. ' ' → logprob: -7.681436061859131
    4. 'input' → logprob: -7.931436061859131
    5. ' input' → logprob: -8.306436538696289
    6. '0' → logprob: -8.306436538696289
    7. ' list' → logprob: -8.556436538696289
    8. ' [' → logprob: -9.306436538696289
    9. 'list' → logprob: -9.931436538696289
    10. '10' → logprob: -11.431436538696289

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08208546787500381
    2. '<|end|>' → logprob: -3.207085371017456
    3. '(int' → logprob: -3.707085371017456
    4. '(lambda' → logprob: -4.832085609436035
    5. '```' → logprob: -6.832085609436035
    6. '<|end|>' → logprob: -7.082085609436035
    7. ')' → logprob: -7.082085609436035
    8. '(user' → logprob: -7.207085609436035
    9. '(str' → logprob: -8.082085609436035
    10. '(input' → logprob: -8.207085609436035

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5517186522483826
    2. '(input' → logprob: -0.9267186522483826
    3. ')' → logprob: -4.051718711853027
    4. '(int' → logprob: -5.426718711853027
    5. '(str' → logprob: -5.426718711853027
    6. '(user' → logprob: -7.051718711853027
    7. 'input' → logprob: -8.926718711853027
    8. '```' → logprob: -8.926718711853027
    9. '(range' → logprob: -9.551718711853027
    10. '`)' → logprob: -9.926718711853027

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2520982027053833
    2. ' input' → logprob: -1.5020982027053833
    3. '(input' → logprob: -9.127098083496094
    4. ')' → logprob: -9.752098083496094
    5. ',input' → logprob: -14.377098083496094
    6. ' ' → logprob: -14.627098083496094
    7. '<input' → logprob: -15.377098083496094
    8. '=input' → logprob: -15.627098083496094
    9. 'stdin' → logprob: -15.627098083496094
    10. ' )' → logprob: -15.752098083496094

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1870158463716507
    2. '())' → logprob: -2.6870157718658447
    3. ')' → logprob: -3.0620157718658447
    4. '().' → logprob: -3.5620157718658447
    5. '(' → logprob: -3.6870157718658447
    6. '`()' → logprob: -8.062015533447266
    7. '()>' → logprob: -8.437015533447266
    8. '();)' → logprob: -8.437015533447266
    9. '()`' → logprob: -8.687015533447266
    10. '(input' → logprob: -8.937015533447266

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0012149984249845147
    2. 'strip' → logprob: -6.751214981079102
    3. 'rstrip' → logprob: -10.126214981079102
    4. ' split' → logprob: -12.626214981079102
    5. '(split' → logprob: -14.501214981079102
    6. 'read' → logprob: -14.876214981079102
    7. 'spl' → logprob: -15.001214981079102
    8. ')' → logprob: -15.251214981079102
    9. '```' → logprob: -17.2512149810791
    10. 'replace' → logprob: -17.2512149810791

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061420840211212635
    2. '())' → logprob: -5.5061421394348145
    3. '))' → logprob: -6.3811421394348145
    4. '()' → logprob: -8.756141662597656
    5. '`)' → logprob: -9.256141662597656
    6. '(' → logprob: -9.881141662597656
    7. '```' → logprob: -11.631141662597656
    8. ')))' → logprob: -11.631141662597656
    9. ')`' → logprob: -11.881141662597656
    10. ' )' → logprob: -12.006141662597656

Token 13: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4007850885391235
    2. '\n' → logprob: -1.7757850885391235
    3. 'a' → logprob: -2.025784969329834
    4. '#' → logprob: -2.150784969329834
    5. 'for' → logprob: -2.525784969329834
    6. '`' → logprob: -3.275784969329834
    7. '```' → logprob: -3.400784969329834
    8. 'x' → logprob: -3.775784969329834
    9. ' ' → logprob: -4.150784969329834
    10. ')' → logprob: -4.150784969329834

Token 14: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9143761396408081
    2. '[' → logprob: -1.039376139640808
    3. '=' → logprob: -1.664376139640808
    4. ' =' → logprob: -3.0393762588500977
    5. '_' → logprob: -6.164376258850098
    6. '=input' → logprob: -6.914376258850098
    7. '[:' → logprob: -7.039376258850098
    8. '[:]' → logprob: -7.164376258850098
    9. '[input' → logprob: -7.289376258850098
    10. ')' → logprob: -7.539376258850098

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47422629594802856
    2. ' input' → logprob: -0.9742262959480286
    3. 'list' → logprob: -9.474225997924805
    4. ' list' → logprob: -9.724225997924805
    5. '[input' → logprob: -12.849225997924805
    6. ' ' → logprob: -13.224225997924805
    7. '"' → logprob: -13.724225997924805
    8. '=input' → logprob: -13.849225997924805
    9. '(input' → logprob: -13.974225997924805
    10. 'int' → logprob: -14.224225997924805

Token 16: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25240710377693176
    2. '(' → logprob: -1.5024070739746094
    3. ')' → logprob: -9.00240707397461
    4. '('' → logprob: -9.50240707397461
    5. '().' → logprob: -9.87740707397461
    6. '```' → logprob: -10.12740707397461
    7. ' ()' → logprob: -10.37740707397461
    8. '.' → logprob: -10.50240707397461
    9. ''' → logprob: -10.87740707397461
    10. '"' → logprob: -11.50240707397461

Token 17: 'l' (ID: 75)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0561091899871826
    2. 'count' → logprob: -1.3061091899871826
    3. 'result' → logprob: -1.3061091899871826
    4. 'd' → logprob: -3.0561091899871826
    5. 'counts' → logprob: -3.8061091899871826
    6. 'for' → logprob: -4.556109428405762
    7. 'ans' → logprob: -5.181109428405762
    8. 'answer' → logprob: -5.181109428405762
    9. 'c' → logprob: -5.556109428405762
    10. 'freq' → logprob: -6.306109428405762

Token 18: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1971968710422516
    2. 'en' → logprob: -1.9471968412399292
    3. 'eft' → logprob: -4.322196960449219
    4. ' =' → logprob: -4.447196960449219
    5. '=' → logprob: -5.322196960449219
    6. 'i' → logprob: -5.947196960449219
    7. '_e' → logprob: -7.072196960449219
    8. 'ength' → logprob: -7.322196960449219
    9. 'et' → logprob: -7.697196960449219
    10. 'o' → logprob: -7.822196960449219

Token 19: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2260412871837616
    2. '[]' → logprob: -2.351041316986084
    3. ' ' → logprob: -2.976041316986084
    4. ' []' → logprob: -3.601041316986084
    5. '[' → logprob: -3.726041316986084
    6. 'len' → logprob: -6.601041316986084
    7. ' [' → logprob: -6.726041316986084
    8. '1' → logprob: -7.476041316986084
    9. '[len' → logprob: -7.601041316986084
    10. 'l' → logprob: -9.351040840148926

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062150973826646805
    2. 'S' → logprob: -3.1871509552001953
    3. ']' → logprob: -4.812150955200195
    4. 'int' → logprob: -5.187150955200195
    5. 'c' → logprob: -6.937150955200195
    6. 's' → logprob: -7.437150955200195
    7. '1' → logprob: -7.562150955200195
    8. ''S' → logprob: -7.562150955200195
    9. 'i' → logprob: -7.687150955200195
    10. '[]' → logprob: -8.187150955200195

Token 21: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00762082589790225
    2. ' ]' → logprob: -5.132620811462402
    3. ',' → logprob: -6.507620811462402
    4. ']*' → logprob: -9.507620811462402
    5. ' for' → logprob: -10.132620811462402
    6. ')]' → logprob: -10.257620811462402
    7. ')' → logprob: -10.507620811462402
    8. ' ' → logprob: -12.132620811462402
    9. ' ,' → logprob: -12.132620811462402
    10. 'for' → logprob: -12.882620811462402

Token 22: 'K' (ID: 42)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6935173869132996
    2. '(N' → logprob: -1.1935174465179443
    3. '(' → logprob: -2.5685174465179443
    4. '100' → logprob: -3.3185174465179443
    5. '26' → logprob: -3.6935174465179443
    6. '(K' → logprob: -4.193517208099365
    7. 'K' → logprob: -4.318517208099365
    8. '10' → logprob: -4.318517208099365
    9. '101' → logprob: -5.443517208099365
    10. ' (' → logprob: -5.693517208099365

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1444456577301025
    2. ' ' → logprob: -1.2694456577301025
    3. ' 
' → logprob: -1.3944456577301025
    4. 'for' → logprob: -2.3944456577301025
    5. '<|end|>' → logprob: -3.6444456577301025
    6. ' for' → logprob: -4.019445419311523
    7. 'i' → logprob: -6.144445419311523
    8. '
' → logprob: -6.519445419311523
    9. ')' → logprob: -6.519445419311523
    10. '=' → logprob: -6.644445419311523

Token 24: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023585401475429535
    2. ' for' → logprob: -4.523585319519043
    3. 'i' → logprob: -5.398585319519043
    4. 'count' → logprob: -5.773585319519043
    5. 'f' → logprob: -6.898585319519043
    6. 's' → logprob: -7.148585319519043
    7. 'c' → logprob: -7.398585319519043
    8. 'l' → logprob: -8.148585319519043
    9. 'r' → logprob: -8.523585319519043
    10. 'd' → logprob: -8.648585319519043

Token 25: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.744932234287262
    2. '=' → logprob: -0.994932234287262
    3. 'f' → logprob: -2.619932174682617
    4. '+' → logprob: -3.244932174682617
    5. ' =' → logprob: -3.619932174682617
    6. 'nd' → logprob: -4.994932174682617
    7. ' +=' → logprob: -5.619932174682617
    8. ' ' → logprob: -6.369932174682617
    9. ' n' → logprob: -6.619932174682617
    10. '+=' → logprob: -7.244932174682617

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04326910153031349
    2. ' ' → logprob: -3.168269157409668
    3. '1' → logprob: -8.293269157409668
    4. ' K' → logprob: -12.043269157409668
    5. 'K' → logprob: -12.293269157409668
    6. '2' → logprob: -13.168269157409668
    7. 'N' → logprob: -13.293269157409668
    8. ' N' → logprob: -13.668269157409668
    9. '(' → logprob: -14.355769157409668
    10. '[' → logprob: -14.918269157409668

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009514793055132031
    2. ' ' → logprob: -7.500951290130615
    3. '1' → logprob: -8.250951766967773
    4. 'N' → logprob: -9.250951766967773
    5. 'K' → logprob: -11.000951766967773
    6. '(' → logprob: -11.500951766967773
    7. '2' → logprob: -11.750951766967773
    8. ' N' → logprob: -13.375951766967773
    9. '-' → logprob: -13.500951766967773
    10. ' K' → logprob: -14.125951766967773

Token 28: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2963775396347046
    2. ' while' → logprob: -2.296377658843994
    3. '<|end|>' → logprob: -2.546377658843994
    4. ' ' → logprob: -2.671377658843994
    5. '
' → logprob: -6.671377658843994
    6. ')' → logprob: -6.921377658843994
    7. '<|end|>' → logprob: -7.046377658843994
    8. ' 
' → logprob: -7.046377658843994
    9. ',' → logprob: -7.421377658843994
    10. '+' → logprob: -7.421377658843994

Token 29: 'j' (ID: 73)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.060880597680807114
    2. ' while' → logprob: -2.935880661010742
    3. '```' → logprob: -6.060880661010742
    4. ' ' → logprob: -6.935880661010742
    5. 'w' → logprob: -7.060880661010742
    6. 's' → logprob: -7.810880661010742
    7. 'n' → logprob: -8.685880661010742
    8. '<|end|>' → logprob: -8.810880661010742
    9. ',' → logprob: -9.435880661010742
    10. 'j' → logprob: -9.435880661010742

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027362078428268433
    2. '=' → logprob: -3.652362108230591
    3. ' ' → logprob: -7.527361869812012
    4. ' +=' → logprob: -8.277361869812012
    5. '+' → logprob: -8.652361869812012
    6. ' +' → logprob: -10.277361869812012
    7. '<|end|>' → logprob: -11.527361869812012
    8. ' ==' → logprob: -11.777361869812012
    9. ' ,' → logprob: -11.902361869812012
    10. ')' → logprob: -12.027361869812012

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6354142427444458
    2. '0' → logprob: -0.7604142427444458
    3. ' N' → logprob: -6.635414123535156
    4. ' i' → logprob: -7.510414123535156
    5. 'N' → logprob: -7.885414123535156
    6. ' K' → logprob: -8.135414123535156
    7. 'i' → logprob: -9.010414123535156
    8. '1' → logprob: -9.635414123535156
    9. 'K' → logprob: -9.885414123535156
    10. 'len' → logprob: -11.760414123535156

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000651793903671205
    2. ' ' → logprob: -7.625651836395264
    3. 'i' → logprob: -8.875651359558105
    4. '1' → logprob: -11.375651359558105
    5. 'N' → logprob: -12.250651359558105
    6. ' i' → logprob: -12.500651359558105
    7. 'K' → logprob: -13.500651359558105
    8. '-' → logprob: -13.625651359558105
    9. 'l' → logprob: -15.750651359558105
    10. '(' → logprob: -15.750651359558105

Token 33: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032554011791944504
    2. ' while' → logprob: -3.9075539112091064
    3. 'while' → logprob: -4.9075541496276855
    4. ' 
' → logprob: -5.6575541496276855
    5. '<|end|>' → logprob: -7.9075541496276855
    6. 'n' → logprob: -9.407553672790527
    7. ' ,' → logprob: -9.657553672790527
    8. ',' → logprob: -9.782553672790527
    9. '
' → logprob: -9.907553672790527
    10. ' max' → logprob: -10.407553672790527

Token 34: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.434721440076828
    2. ' while' → logprob: -1.5597214698791504
    3. 'while' → logprob: -2.0597214698791504
    4. 'max' → logprob: -5.68472146987915
    5. 'for' → logprob: -5.93472146987915
    6. 'count' → logprob: -6.05972146987915
    7. ' for' → logprob: -6.18472146987915
    8. ' max' → logprob: -6.93472146987915
    9. ' 
' → logprob: -7.43472146987915
    10. ' count' → logprob: -8.184720993041992

Token 35: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.671012282371521
    2. ' i' → logprob: -1.046012282371521
    3. 'j' → logprob: -2.1710124015808105
    4. 'i' → logprob: -3.7960124015808105
    5. ' ' → logprob: -7.0460124015808105
    6. ' N' → logprob: -10.296011924743652
    7. 'N' → logprob: -11.921011924743652
    8. ' S' → logprob: -12.171011924743652
    9. ' True' → logprob: -12.421011924743652
    10. ' (' → logprob: -12.546011924743652

Token 36: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.057628266513347626
    2. '<' → logprob: -2.9326281547546387
    3. '<N' → logprob: -5.932628154754639
    4. '<K' → logprob: -9.807628631591797
    5. ' ' → logprob: -10.682628631591797
    6. '<n' → logprob: -12.307628631591797
    7. '<len' → logprob: -12.932628631591797
    8. ' -' → logprob: -13.682628631591797
    9. 'N' → logprob: -14.557628631591797
    10. '<size' → logprob: -14.807628631591797

Token 37: ' K' (ID: 658)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011301392689347267
    2. ' N' → logprob: -4.511301517486572
    3. 'K' → logprob: -8.886301040649414
    4. ' ' → logprob: -9.386301040649414
    5. 'len' → logprob: -11.011301040649414
    6. ' len' → logprob: -12.511301040649414
    7. ' K' → logprob: -12.886301040649414
    8. 'n' → logprob: -12.886301040649414
    9. 'C' → logprob: -13.261301040649414
    10. '  ' → logprob: -13.511301040649414

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07416404783725739
    2. ' :' → logprob: -2.6991641521453857
    3. ' and' → logprob: -5.699163913726807
    4. ' ' → logprob: -7.949163913726807
    5. '):' → logprob: -8.574164390563965
    6. ')' → logprob: -9.699164390563965
    7. ':
' → logprob: -9.949164390563965
    8. 'and' → logprob: -10.074164390563965
    9. '>' → logprob: -10.574164390563965
    10. '+' → logprob: -10.574164390563965

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6427506804466248
    2. '   ' → logprob: -1.6427507400512695
    3. ':' → logprob: -2.5177507400512695
    4. ' and' → logprob: -3.2677507400512695
    5. ' :' → logprob: -3.3927507400512695
    6. '    ' → logprob: -3.5177507400512695
    7. ' if' → logprob: -3.6427507400512695
    8. '<|end|>' → logprob: -4.1427507400512695
    9. '+' → logprob: -4.2677507400512695
    10. ' :
' → logprob: -5.0177507400512695

Token 40: ' while' (ID: 2049)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7888369560241699
    2. ' if' → logprob: -1.41383695602417
    3. ' l' → logprob: -1.66383695602417
    4. 'if' → logprob: -2.53883695602417
    5. '   ' → logprob: -4.28883695602417
    6. ' ' → logprob: -5.16383695602417
    7. '    ' → logprob: -5.78883695602417
    8. 'j' → logprob: -6.03883695602417
    9. ' j' → logprob: -6.16383695602417
    10. 's' → logprob: -6.28883695602417

Token 41: ' S' (ID: 336)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4126249849796295
    2. ' i' → logprob: -1.1626249551773071
    3. 'j' → logprob: -4.662624835968018
    4. 'l' → logprob: -5.287624835968018
    5. ' j' → logprob: -5.412624835968018
    6. ' l' → logprob: -6.037624835968018
    7. 'S' → logprob: -6.412624835968018
    8. ' S' → logprob: -6.912624835968018
    9. ' ' → logprob: -7.412624835968018
    10. 'N' → logprob: -8.287625312805176

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01625383272767067
    2. '[j' → logprob: -4.14125394821167
    3. '[' → logprob: -8.891253471374512
    4. '[l' → logprob: -9.891253471374512
    5. 'i' → logprob: -12.266253471374512
    6. '[I' → logprob: -12.641253471374512
    7. '[C' → logprob: -12.766253471374512
    8. '.count' → logprob: -13.391253471374512
    9. '==' → logprob: -13.391253471374512
    10. ' [' → logprob: -13.516253471374512

Token 43: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03198694810271263
    2. ']!=' → logprob: -3.656986951828003
    3. '!=' → logprob: -6.531986713409424
    4. ']==' → logprob: -6.656986713409424
    5. '+' → logprob: -7.156986713409424
    6. ' ]' → logprob: -7.906986713409424
    7. '+j' → logprob: -7.906986713409424
    8. '[j' → logprob: -8.031987190246582
    9. '[' → logprob: -8.281987190246582
    10. ' !=' → logprob: -8.406987190246582

Token 44: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.23185096681118011
    2. ' !=' → logprob: -1.6068509817123413
    3. '==' → logprob: -5.356851100921631
    4. ' ==' → logprob: -7.106851100921631
    5. '[' → logprob: -8.356850624084473
    6. ' ' → logprob: -8.856850624084473
    7. '<' → logprob: -9.106850624084473
    8. '!='' → logprob: -9.731850624084473
    9. '.' → logprob: -9.856850624084473
    10. ']!=' → logprob: -9.981850624084473

Token 45: ' "' (ID: 392)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.35180553793907166
    2. ''' → logprob: -1.726805567741394
    3. ''S' → logprob: -2.8518054485321045
    4. 'C' → logprob: -3.7268054485321045
    5. ''C' → logprob: -3.8518054485321045
    6. ''.' → logprob: -4.976805686950684
    7. ''#' → logprob: -5.726805686950684
    8. '')' → logprob: -6.976805686950684
    9. ''?' → logprob: -7.601805686950684
    10. ''l' → logprob: -7.726805686950684

Token 46: 'x' (ID: 87)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1626569777727127
    2. '?' → logprob: -3.0376570224761963
    3. ''' → logprob: -3.7876570224761963
    4. '0' → logprob: -4.287656784057617
    5. '_' → logprob: -4.662656784057617
    6. 'a' → logprob: -4.662656784057617
    7. '"' → logprob: -4.787656784057617
    8. '#' → logprob: -4.912656784057617
    9. '1' → logprob: -5.537656784057617
    10. '*' → logprob: -5.537656784057617

Token 47: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.354748010635376
    2. '":' → logprob: -1.229748010635376
    3. ' "' → logprob: -5.479747772216797
    4. ' ":' → logprob: -6.479747772216797
    5. '":
' → logprob: -9.104747772216797
    6. '"x' → logprob: -9.229747772216797
    7. '\n' → logprob: -9.729747772216797
    8. 'x' → logprob: -9.979747772216797
    9. ':' → logprob: -10.479747772216797
    10. ' and' → logprob: -10.604747772216797

Token 48: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7270019054412842
    2. ' and' → logprob: -1.1020019054412842
    3. 'i' → logprob: -2.477001905441284
    4. '   ' → logprob: -2.602001905441284
    5. ' ' → logprob: -4.602002143859863
    6. '       ' → logprob: -5.227002143859863
    7. '    ' → logprob: -5.727002143859863
    8. 'x' → logprob: -6.227002143859863
    9. 'and' → logprob: -6.227002143859863
    10. ' x' → logprob: -6.352002143859863

Token 49: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.07058338075876236
    2. ' i' → logprob: -2.6955833435058594
    3. '   ' → logprob: -7.820583343505859
    4. '    ' → logprob: -9.44558334350586
    5. ' ' → logprob: -9.82058334350586
    6. '       ' → logprob: -10.19558334350586
    7. '```' → logprob: -10.82058334350586
    8. '<|end|>' → logprob: -11.32058334350586
    9. ' 
' → logprob: -11.57058334350586
    10. '	i' → logprob: -11.82058334350586

Token 50: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29506435990333557
    2. '+=' → logprob: -1.4200643301010132
    3. ' +=' → logprob: -4.295064449310303
    4. ' +' → logprob: -8.795063972473145
    5. '++' → logprob: -11.420063972473145
    6. '=' → logprob: -12.795063972473145
    7. ' ' → logprob: -13.045063972473145
    8. '+='' → logprob: -13.045063972473145
    9. '+)' → logprob: -13.170063972473145
    10. '+i' → logprob: -13.420063972473145

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.000335693359375
    4. '  ' → logprob: -16.875335693359375
    5. '```' → logprob: -17.125335693359375
    6. '2' → logprob: -17.500335693359375
    7. '0' → logprob: -18.750335693359375
    8. '<|end|>' → logprob: -18.812835693359375
    9. ' ' → logprob: -18.937835693359375
    10. '3' → logprob: -19.187835693359375

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -15.687519073486328
    4. '   ' → logprob: -16.687519073486328
    5. '<|end|>' → logprob: -17.250019073486328
    6. '2' → logprob: -17.437519073486328
    7. '  ' → logprob: -17.875019073486328
    8. 's' → logprob: -17.937519073486328
    9. 'x' → logprob: -18.375019073486328
    10. 'a' → logprob: -18.437519073486328

Token 53: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5980584025382996
    2. '   ' → logprob: -1.3480584621429443
    3. '       ' → logprob: -2.7230584621429443
    4. 'j' → logprob: -2.9730584621429443
    5. ' ' → logprob: -3.8480584621429443
    6. ' i' → logprob: -3.9730584621429443
    7. 'l' → logprob: -3.9730584621429443
    8. '    ' → logprob: -5.473058223724365
    9. 'if' → logprob: -6.473058223724365
    10. '  ' → logprob: -6.598058223724365

Token 54: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.690405011177063
    2. '   ' → logprob: -0.940405011177063
    3. 'i' → logprob: -2.6904048919677734
    4. ' ' → logprob: -4.190404891967773
    5. 'l' → logprob: -4.690404891967773
    6. 'j' → logprob: -5.315404891967773
    7. ' i' → logprob: -5.815404891967773
    8. '    ' → logprob: -6.440404891967773
    9. '  ' → logprob: -6.690404891967773
    10. '<|end|>' → logprob: -6.815404891967773

Token 55: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.027190860360860825
    2. '   ' → logprob: -4.902190685272217
    3. 'if' → logprob: -5.152190685272217
    4. 'i' → logprob: -5.402190685272217
    5. ' l' → logprob: -5.402190685272217
    6. ' if' → logprob: -6.527190685272217
    7. 'j' → logprob: -6.527190685272217
    8. ' ' → logprob: -7.152190685272217
    9. '    ' → logprob: -8.402191162109375
    10. '  ' → logprob: -8.652191162109375

Token 56: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09618911892175674
    2. '[j' → logprob: -2.471189022064209
    3. '[' → logprob: -4.971189022064209
    4. '[l' → logprob: -8.221189498901367
    5. '[I' → logprob: -13.096189498901367
    6. '[x' → logprob: -13.346189498901367
    7. '```' → logprob: -13.471189498901367
    8. ' [' → logprob: -13.471189498901367
    9. '\[' → logprob: -13.596189498901367
    10. ' ' → logprob: -13.721189498901367

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0073951915837824345
    2. ']+=' → logprob: -5.632395267486572
    3. ' ]' → logprob: -6.257395267486572
    4. ']=' → logprob: -6.632395267486572
    5. '=' → logprob: -8.132394790649414
    6. ' +=' → logprob: -9.132394790649414
    7. ' =' → logprob: -9.507394790649414
    8. '+=' → logprob: -10.132394790649414
    9. '[' → logprob: -11.632394790649414
    10. ')' → logprob: -11.882394790649414

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773385763168335
    2. '=' → logprob: -0.8273385763168335
    3. ' +=' → logprob: -6.827338695526123
    4. '+=' → logprob: -8.077338218688965
    5. ' ' → logprob: -14.077338218688965
    6. ' |=' → logprob: -14.452338218688965
    7. '=i' → logprob: -14.577338218688965
    8. '＝' → logprob: -14.952338218688965
    9. '=int' → logprob: -15.077338218688965
    10. '+' → logprob: -15.452338218688965

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09635757654905319
    2. ' i' → logprob: -2.471357583999634
    3. 'S' → logprob: -5.096357345581055
    4. ' S' → logprob: -6.971357345581055
    5. ' ' → logprob: -8.721357345581055
    6. '0' → logprob: -10.471357345581055
    7. '1' → logprob: -10.471357345581055
    8. 'N' → logprob: -11.096357345581055
    9. 'j' → logprob: -11.096357345581055
    10. 's' → logprob: -11.096357345581055

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8753469586372375
    2. 'i' → logprob: -1.2503468990325928
    3. '<|end|>' → logprob: -1.7503468990325928
    4. '+' → logprob: -2.7503468990325928
    5. ' ' → logprob: -3.7503468990325928
    6. ' i' → logprob: -4.375347137451172
    7. '  ' → logprob: -5.125347137451172
    8. '<|end|>' → logprob: -5.250347137451172
    9. '```' → logprob: -5.875347137451172
    10. '    ' → logprob: -6.375347137451172

Token 61: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015148617094382644
    2. '   ' → logprob: -7.376514911651611
    3. '<|end|>' → logprob: -7.751514911651611
    4. 'j' → logprob: -8.751514434814453
    5. ' i' → logprob: -8.751514434814453
    6. '```' → logprob: -9.626514434814453
    7. '+' → logprob: -10.501514434814453
    8. '	i' → logprob: -11.376514434814453
    9. '<|end|>' → logprob: -11.626514434814453
    10. ' ' → logprob: -12.251514434814453

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0016622049733996391
    2. 'j' → logprob: -6.751662254333496
    3. ' i' → logprob: -7.751662254333496
    4. '   ' → logprob: -10.001662254333496
    5. '```' → logprob: -11.751662254333496
    6. ' j' → logprob: -12.751662254333496
    7. 'if' → logprob: -13.376662254333496
    8. '	i' → logprob: -14.001662254333496
    9. ' ' → logprob: -14.251662254333496
    10. '``' → logprob: -14.751662254333496

Token 63: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.751304030418396
    2. '+=' → logprob: -0.751304030418396
    3. ' +=' → logprob: -2.8763041496276855
    4. '=' → logprob: -9.126303672790527
    5. ' +' → logprob: -11.251303672790527
    6. '<|end|>' → logprob: -11.501303672790527
    7. ' ' → logprob: -12.126303672790527
    8. '++' → logprob: -12.251303672790527
    9. '+='' → logprob: -12.251303672790527
    10. '+="' → logprob: -13.001303672790527

Token 64: ' C' (ID: 363)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006140188314020634
    2. ' ' → logprob: -5.131140232086182
    3. '2' → logprob: -8.881139755249023
    4. 'K' → logprob: -10.756139755249023
    5. 'C' → logprob: -10.881139755249023
    6. ' C' → logprob: -11.756139755249023
    7. 'N' → logprob: -12.131139755249023
    8. ' K' → logprob: -12.256139755249023
    9. '7' → logprob: -13.068639755249023
    10. '3' → logprob: -13.506139755249023

Token 65: '+' (ID: 10)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7128463983535767
    2. '   ' → logprob: -1.7128463983535767
    3. '```' → logprob: -2.212846279144287
    4. '+' → logprob: -2.587846279144287
    5. '<|end|>' → logprob: -3.087846279144287
    6. ' j' → logprob: -3.587846279144287
    7. '+j' → logprob: -3.962846279144287
    8. ' ' → logprob: -4.212846279144287
    9. '[j' → logprob: -4.462846279144287
    10. ',j' → logprob: -5.087846279144287

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015168882673606277
    2. '0' → logprob: -6.626516819000244
    3. ' ' → logprob: -8.626517295837402
    4. '+' → logprob: -12.376517295837402
    5. '2' → logprob: -13.376517295837402
    6. 'i' → logprob: -13.501517295837402
    7. 'l' → logprob: -13.751517295837402
    8. '<|end|>' → logprob: -14.001517295837402
    9. 'x' → logprob: -14.751517295837402
    10. '-' → logprob: -15.376517295837402

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08516247570514679
    2. 'j' → logprob: -3.210162401199341
    3. '
' → logprob: -4.33516263961792
    4. '```' → logprob: -4.83516263961792
    5. '<|end|>' → logprob: -5.21016263961792
    6. ' ' → logprob: -5.46016263961792
    7. '    
' → logprob: -5.58516263961792
    8. ' j' → logprob: -6.46016263961792
    9. '	j' → logprob: -6.46016263961792
    10. '  
' → logprob: -6.96016263961792

Token 68: '   ' (ID: 271)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.489944726228714
    2. '   ' → logprob: -0.9899446964263916
    3. '<|end|>' → logprob: -4.739944934844971
    4. ' ' → logprob: -6.239944934844971
    5. ' j' → logprob: -6.239944934844971
    6. '	j' → logprob: -7.364944934844971
    7. '  ' → logprob: -7.489944934844971
    8. ',j' → logprob: -7.864944934844971
    9. '[j' → logprob: -7.864944934844971
    10. '```' → logprob: -7.989944934844971

Token 69: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.002458533737808466
    2. '   ' → logprob: -6.252458572387695
    3. ' j' → logprob: -7.877458572387695
    4. '	j' → logprob: -9.377458572387695
    5. '```' → logprob: -10.002458572387695
    6. '[j' → logprob: -12.252458572387695
    7. '<|end|>' → logprob: -12.502458572387695
    8. ',j' → logprob: -12.752458572387695
    9. ' ' → logprob: -13.002458572387695
    10. '$j' → logprob: -13.002458572387695

Token 70: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.578919529914856
    2. '+=' → logprob: -0.828919529914856
    3. '+' → logprob: -5.828919410705566
    4. '=' → logprob: -10.828919410705566
    5. '++' → logprob: -12.328919410705566
    6. '<|end|>' → logprob: -12.828919410705566
    7. '+="' → logprob: -13.203919410705566
    8. '+='' → logprob: -13.203919410705566
    9. ' +' → logprob: -13.828919410705566
    10. '+++' → logprob: -13.828919410705566

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '```' → logprob: -16.50247573852539
    4. '0' → logprob: -17.25247573852539
    5. '１' → logprob: -17.37747573852539
    6. '۱' → logprob: -18.37747573852539
    7. '   ' → logprob: -18.68997573852539
    8. '<|end|>' → logprob: -18.81497573852539
    9. '+' → logprob: -18.87747573852539
    10. ' ' → logprob: -18.93997573852539

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.125003814697266
    4. '   ' → logprob: -19.625003814697266
    5. '１' → logprob: -19.750003814697266
    6. '+' → logprob: -20.625003814697266
    7. '۱' → logprob: -20.750003814697266
    8. '0' → logprob: -21.000003814697266
    9. '<|end|>' → logprob: -21.062503814697266
    10. '  ' → logprob: -21.187503814697266

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: 'r' (ID: 81)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' =' (ID: 314)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.11759591102600098
    2. '=' → logprob: -2.867595911026001
    3. ' =' → logprob: -3.492595911026001
    4. 'e' → logprob: -4.117595672607422
    5. 'ight' → logprob: -6.617595672607422
    6. '.' → logprob: -6.992595672607422
    7. 'etur' → logprob: -6.992595672607422
    8. ')' → logprob: -7.117595672607422
    9. 'ange' → logprob: -7.617595672607422
    10. 'a' → logprob: -7.867595672607422

Token 76: ' [' (ID: 723)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4373959004878998
    2. ' l' → logprob: -1.9373959302902222
    3. ' [' → logprob: -2.5623958110809326
    4. '[l' → logprob: -3.8123958110809326
    5. '[N' → logprob: -4.062396049499512
    6. '[' → logprob: -4.312396049499512
    7. '[i' → logprob: -4.437396049499512
    8. 'N' → logprob: -4.562396049499512
    9. 'i' → logprob: -4.562396049499512
    10. 'len' → logprob: -4.812396049499512

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03745925799012184
    2. ']' → logprob: -4.162459373474121
    3. 'l' → logprob: -4.912459373474121
    4. 'i' → logprob: -5.912459373474121
    5. 'N' → logprob: -5.912459373474121
    6. ' ' → logprob: -6.037459373474121
    7. 'K' → logprob: -6.287459373474121
    8. '-' → logprob: -6.787459373474121
    9. '100' → logprob: -7.912459373474121
    10. 'len' → logprob: -8.037459373474121

Token 78: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.018364503979682922
    2. ']' → logprob: -4.018364429473877
    3. ']*(' → logprob: -8.643364906311035
    4. ']+' → logprob: -11.268364906311035
    5. ' ]' → logprob: -11.268364906311035
    6. '*K' → logprob: -12.143364906311035
    7. '*' → logprob: -13.643364906311035
    8. ' for' → logprob: -14.143364906311035
    9. ' ' → logprob: -14.643364906311035
    10. 'for' → logprob: -14.768364906311035

Token 79: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.003522621700540185
    2. 'N' → logprob: -6.3785223960876465
    3. '(K' → logprob: -7.3785223960876465
    4. '(' → logprob: -7.6285223960876465
    5. 'j' → logprob: -8.253522872924805
    6. 'len' → logprob: -9.253522872924805
    7. ' K' → logprob: -9.753522872924805
    8. '(N' → logprob: -10.003522872924805
    9. '2' → logprob: -10.503522872924805
    10. ' ' → logprob: -10.503522872924805

Token 80: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04626419395208359
    2. 'j' → logprob: -3.296264171600342
    3. '<|end|>' → logprob: -5.546264171600342
    4. ' i' → logprob: -6.296264171600342
    5. '
' → logprob: -7.171264171600342
    6. 'l' → logprob: -7.421264171600342
    7. '```' → logprob: -7.921264171600342
    8. 'r' → logprob: -8.1712646484375
    9. ' j' → logprob: -9.7962646484375
    10. ' ' → logprob: -9.9212646484375

Token 81: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006361839361488819
    2. 'j' → logprob: -5.506361961364746
    3. 'K' → logprob: -7.131361961364746
    4. ' i' → logprob: -8.006361961364746
    5. 'l' → logprob: -8.131361961364746
    6. 'N' → logprob: -8.256361961364746
    7. '```' → logprob: -8.506361961364746
    8. 'r' → logprob: -8.631361961364746
    9. 'k' → logprob: -9.256361961364746
    10. 'n' → logprob: -10.506361961364746

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798839420080185
    2. '=' → logprob: -1.8048839569091797
    3. ' ' → logprob: -9.55488395690918
    4. ',' → logprob: -10.67988395690918
    5. '=j' → logprob: -11.80488395690918
    6. '=i' → logprob: -12.17988395690918
    7. 'n' → logprob: -12.67988395690918
    8. ' +=' → logprob: -12.67988395690918
    9. '=N' → logprob: -12.80488395690918
    10. 'f' → logprob: -12.80488395690918

Token 83: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026011480018496513
    2. ' N' → logprob: -4.0260114669799805
    3. '0' → logprob: -5.5260114669799805
    4. 'len' → logprob: -6.4010114669799805
    5. ' ' → logprob: -7.4010114669799805
    6. 'K' → logprob: -7.6510114669799805
    7. 'C' → logprob: -7.7760114669799805
    8. 'l' → logprob: -8.65101146697998
    9. ' len' → logprob: -9.40101146697998
    10. '1' → logprob: -9.65101146697998

Token 84: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025202499236911535
    2. ' -' → logprob: -6.0025200843811035
    3. '<|end|>' → logprob: -10.252520561218262
    4. ' ' → logprob: -12.627520561218262
    5. '-i' → logprob: -13.502520561218262
    6. '–' → logprob: -13.752520561218262
    7. '−' → logprob: -14.502520561218262
    8. '<|end|>' → logprob: -14.627520561218262
    9. '--' → logprob: -14.752520561218262
    10. '```' → logprob: -15.002520561218262

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.877503907773644e-05
    2. ' ' → logprob: -9.250099182128906
    3. 'K' → logprob: -13.750099182128906
    4. '2' → logprob: -14.875099182128906
    5. 'C' → logprob: -15.687599182128906
    6. 'j' → logprob: -15.750099182128906
    7. '```' → logprob: -15.750099182128906
    8. ' K' → logprob: -16.187599182128906
    9. '7' → logprob: -16.500099182128906
    10. '-' → logprob: -16.937599182128906

Token 86: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.024981509894132614
    2. '<|end|>' → logprob: -3.7749814987182617
    3. '
' → logprob: -6.524981498718262
    4. 'r' → logprob: -9.024981498718262
    5. 'while' → logprob: -9.524981498718262
    6. ' j' → logprob: -10.274981498718262
    7. '```' → logprob: -11.524981498718262
    8. '<|end|>' → logprob: -11.899981498718262
    9. ',j' → logprob: -12.524981498718262
    10. ';j' → logprob: -13.149981498718262

Token 87: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8193366486229934e-05
    2. ' j' → logprob: -12.125018119812012
    3. 'while' → logprob: -12.375018119812012
    4. '
' → logprob: -12.625018119812012
    5. '<|end|>' → logprob: -12.875018119812012
    6. 'for' → logprob: -13.750018119812012
    7. '0' → logprob: -14.250018119812012
    8. '```' → logprob: -15.500018119812012
    9. 'While' → logprob: -16.375019073486328
    10. 'k' → logprob: -16.375019073486328

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023310698568820953
    2. '=' → logprob: -3.773310661315918
    3. ' ' → logprob: -9.648310661315918
    4. ' =
' → logprob: -14.898310661315918
    5. '<|end|>' → logprob: -16.898311614990234
    6. 's' → logprob: -17.398311614990234
    7. ' K' → logprob: -17.585811614990234
    8. '=k' → logprob: -17.773311614990234
    9. '＝' → logprob: -17.898311614990234
    10. ')' → logprob: -18.023311614990234

Token 89: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3072853088378906
    2. ' K' → logprob: -1.4322853088378906
    3. '0' → logprob: -3.6822853088378906
    4. ' ' → logprob: -7.432285308837891
    5. '<|end|>' → logprob: -10.80728530883789
    6. 'k' → logprob: -11.80728530883789
    7. '1' → logprob: -12.93228530883789
    8. '>K' → logprob: -13.30728530883789
    9. '  ' → logprob: -13.55728530883789
    10. '7' → logprob: -13.80728530883789

Token 90: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.1689596148207784e-05
    2. ' -' → logprob: -10.000051498413086
    3. '<|end|>' → logprob: -12.125051498413086
    4. '-
' → logprob: -14.750051498413086
    5. '```' → logprob: -15.000051498413086
    6. '-j' → logprob: -16.375051498413086
    7. ')' → logprob: -17.500051498413086
    8. '-)' → logprob: -17.625051498413086
    9. '<|end|>' → logprob: -17.625051498413086
    10. ' ' → logprob: -18.000051498413086

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.250014305114746
    3. '2' → logprob: -14.875014305114746
    4. '```' → logprob: -15.562514305114746
    5. '0' → logprob: -16.00001335144043
    6. '   ' → logprob: -16.56251335144043
    7. '<|end|>' → logprob: -16.87501335144043
    8. '۱' → logprob: -17.18751335144043
    9. '  ' → logprob: -17.68751335144043
    10. '-' → logprob: -18.00001335144043

Token 92: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03080030344426632
    2. '<|end|>' → logprob: -3.7808003425598145
    3. ' while' → logprob: -5.1558003425598145
    4. '
' → logprob: -7.0308003425598145
    5. '```' → logprob: -7.4058003425598145
    6. 'While' → logprob: -9.530799865722656
    7. ':' → logprob: -9.780799865722656
    8. ':
' → logprob: -10.280799865722656
    9. '<|end|>' → logprob: -10.280799865722656
    10. '	while' → logprob: -11.530799865722656

Token 93: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00041267683263868093
    2. ' while' → logprob: -8.000412940979004
    3. '<|end|>' → logprob: -10.250412940979004
    4. 'While' → logprob: -10.750412940979004
    5. '```' → logprob: -11.375412940979004
    6. '
' → logprob: -11.875412940979004
    7. '	while' → logprob: -14.125412940979004
    8. 'hile' → logprob: -15.000412940979004
    9. '``' → logprob: -15.625412940979004
    10. ')' → logprob: -16.375411987304688

Token 94: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12706156075000763
    2. ' j' → logprob: -2.127061605453491
    3. 'i' → logprob: -9.37706184387207
    4. 'S' → logprob: -10.62706184387207
    5. ' i' → logprob: -11.00206184387207
    6. ' ' → logprob: -13.00206184387207
    7. ' S' → logprob: -13.12706184387207
    8. '   ' → logprob: -13.37706184387207
    9. '  ' → logprob: -15.00206184387207
    10. 'True' → logprob: -15.00206184387207

Token 95: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.030165698379278183
    2. '>' → logprob: -3.905165672302246
    3. ' >=' → logprob: -4.655165672302246
    4. ' >' → logprob: -9.780165672302246
    5. '>-' → logprob: -13.155165672302246
    6. '0' → logprob: -13.405165672302246
    7. ' ' → logprob: -13.405165672302246
    8. '≥' → logprob: -13.405165672302246
    9. '&gt' → logprob: -13.905165672302246
    10. '<' → logprob: -14.780165672302246

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615161292254925
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.508615493774414
    4. '1' → logprob: -17.321115493774414
    5. '  ' → logprob: -17.383615493774414
    6. ' ' → logprob: -17.758615493774414
    7. '۰' → logprob: -18.196115493774414
    8. '00' → logprob: -18.321115493774414
    9. '=' → logprob: -18.508615493774414
    10. '```' → logprob: -19.383615493774414

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -17.375295639038086
    4. '1' → logprob: -18.125295639038086
    5. '00' → logprob: -19.375295639038086
    6. '  ' → logprob: -20.000295639038086
    7. ' ' → logprob: -20.000295639038086
    8. '۰' → logprob: -20.125295639038086
    9. '=' → logprob: -20.937795639038086
    10. '<|end|>' → logprob: -20.937795639038086

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4750736355781555
    2. ':
' → logprob: -0.9750736355781555
    3. ' and' → logprob: -7.22507381439209
    4. ':

' → logprob: -9.35007381439209
    5. '   ' → logprob: -10.10007381439209
    6. 'and' → logprob: -10.10007381439209
    7. '):
' → logprob: -10.22507381439209
    8. ' :
' → logprob: -10.47507381439209
    9. ':
' → logprob: -11.60007381439209
    10. ' :' → logprob: -11.85007381439209

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01382190641015768
    2. 'while' → logprob: -4.513822078704834
    3. ' while' → logprob: -6.013822078704834
    4. ' ' → logprob: -9.013821601867676
    5. '	while' → logprob: -9.513821601867676
    6. '```' → logprob: -9.888821601867676
    7. 'if' → logprob: -10.263821601867676
    8. '  ' → logprob: -10.763821601867676
    9. '       ' → logprob: -12.013821601867676
    10. '<|end|>' → logprob: -12.138821601867676

Token 100: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2120894193649292
    2. 'while' (adapté à ' while') → logprob: -1.8370894193649292
    3. ' while' → logprob: -3.4620895385742188
    4. ' ' → logprob: -8.712089538574219
    5. '	while' → logprob: -8.712089538574219
    6. '```' → logprob: -10.212089538574219
    7. '  ' → logprob: -10.587089538574219
    8. 'if' → logprob: -10.712089538574219
    9. '       ' → logprob: -10.962089538574219
    10. '    ' → logprob: -12.087089538574219

Token 101: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.06996822357177734
    2. ' S' → logprob: -2.6949682235717773
    3. ' ' → logprob: -11.069968223571777
    4. '   ' → logprob: -11.319968223571777
    5. 'i' → logprob: -13.194968223571777
    6. ' i' → logprob: -14.319968223571777
    7. ' ' → logprob: -14.819968223571777
    8. '  ' → logprob: -14.944968223571777
    9. 's' → logprob: -15.319968223571777
    10. 'j' → logprob: -15.444968223571777

Token 102: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. '[j' → logprob: -12.500005722045898
    3. '[' → logprob: -13.375005722045898
    4. '[I' → logprob: -15.750005722045898
    5. 'i' → logprob: -16.1250057220459
    6. '```' → logprob: -16.5000057220459
    7. '[
' → logprob: -17.7500057220459
    8. ' [' → logprob: -18.0000057220459
    9. '[int' → logprob: -18.3750057220459
    10. '[N' → logprob: -18.3750057220459

Token 103: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.358448326587677
    2. '==' → logprob: -1.2334482669830322
    3. ']' → logprob: -4.733448505401611
    4. ']==' → logprob: -7.233448505401611
    5. ' ' → logprob: -8.483448028564453
    6. '=' → logprob: -9.733448028564453
    7. ')' → logprob: -10.108448028564453
    8. '"' → logprob: -10.733448028564453
    9. '   ' → logprob: -11.483448028564453
    10. ' !=' → logprob: -11.483448028564453

Token 104: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932249665260315
    2. ' ==' → logprob: -0.6932249665260315
    3. '=' → logprob: -10.443224906921387
    4. '=="' → logprob: -10.568224906921387
    5. '!=' → logprob: -12.193224906921387
    6. '==
' → logprob: -12.693224906921387
    7. ' !=' → logprob: -12.818224906921387
    8. ' ' → logprob: -12.818224906921387
    9. ']==' → logprob: -13.568224906921387
    10. '=='' → logprob: -13.693224906921387

Token 105: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4681544005870819
    2. '"x' → logprob: -1.4681544303894043
    3. ' "' → logprob: -1.9681544303894043
    4. ' ' → logprob: -5.968154430389404
    5. 'x' → logprob: -7.968154430389404
    6. ''x' → logprob: -8.343153953552246
    7. ''' → logprob: -8.468153953552246
    8. ' x' → logprob: -8.718153953552246
    9. '   ' → logprob: -9.468153953552246
    10. '  ' → logprob: -10.343153953552246

Token 106: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00028731857310049236
    2. '"x' → logprob: -8.875287055969238
    3. ''x' → logprob: -9.000287055969238
    4. ' x' → logprob: -11.250287055969238
    5. '"' → logprob: -12.375287055969238
    6. '```' → logprob: -13.250287055969238
    7. ''' → logprob: -13.500287055969238
    8. '.' → logprob: -14.250287055969238
    9. ' ' → logprob: -14.875287055969238
    10. '	x' → logprob: -15.062787055969238

Token 107: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5303032994270325
    2. ':' → logprob: -1.7803032398223877
    3. '":
' → logprob: -2.6553032398223877
    4. '":' → logprob: -2.7803032398223877
    5. '   ' → logprob: -3.0303032398223877
    6. '       ' → logprob: -3.5303032398223877
    7. '"' → logprob: -3.9053032398223877
    8. '):
' → logprob: -5.155303478240967
    9. '"):
' → logprob: -5.780303478240967
    10. '```' → logprob: -7.030303478240967

Token 108: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026607930194586515
    2. '       ' → logprob: -6.127660751342773
    3. 'i' → logprob: -8.377660751342773
    4. ' i' → logprob: -8.377660751342773
    5. '```' → logprob: -11.377660751342773
    6. '  ' → logprob: -13.752660751342773
    7. '<|end|>' → logprob: -14.127660751342773
    8. ' ' → logprob: -14.752660751342773
    9. '    ' → logprob: -14.877660751342773
    10. '    
' → logprob: -15.002660751342773

Token 109: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0065459092147648335
    2. ' i' → logprob: -5.5065460205078125
    3. '   ' → logprob: -6.0065460205078125
    4. '	i' → logprob: -14.006546020507812
    5. '```' → logprob: -14.756546020507812
    6. '       ' → logprob: -15.131546020507812
    7. '  ' → logprob: -15.756546020507812
    8. '_i' → logprob: -16.381546020507812
    9. ' ' → logprob: -16.756546020507812
    10. '
' → logprob: -16.756546020507812

Token 110: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.004070563241839409
    2. '-=' → logprob: -5.75407075881958
    3. '   ' → logprob: -8.004070281982422
    4. '-' → logprob: -8.129070281982422
    5. '    ' → logprob: -8.629070281982422
    6. ' <=' → logprob: -10.254070281982422
    7. ' +=' → logprob: -11.629070281982422
    8. '       ' → logprob: -11.754070281982422
    9. '```' → logprob: -11.879070281982422
    10. ' <' → logprob: -12.629070281982422

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.375075340270996
    4. '```' → logprob: -16.87507438659668
    5. '<|end|>' → logprob: -18.31257438659668
    6. '0' → logprob: -19.25007438659668
    7. '       ' → logprob: -19.68757438659668
    8. '۱' → logprob: -20.00007438659668
    9. '１' → logprob: -20.06257438659668
    10. '  ' → logprob: -20.12507438659668

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.875040054321289
    4. '```' → logprob: -17.06254005432129
    5. '<|end|>' → logprob: -17.81254005432129
    6. '  ' → logprob: -18.62504005432129
    7. '       ' → logprob: -18.75004005432129
    8. '0' → logprob: -18.81254005432129
    9. '2' → logprob: -19.00004005432129
    10. '
' → logprob: -19.00004005432129

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009206521324813366
    2. 'r' → logprob: -5.009206295013428
    3. ' r' → logprob: -6.884206295013428
    4. '
' → logprob: -7.134206295013428
    5. 'i' → logprob: -8.509206771850586
    6. '```' → logprob: -8.634206771850586
    7. ' ' → logprob: -9.384206771850586
    8. ' i' → logprob: -9.384206771850586
    9. '  ' → logprob: -9.509206771850586
    10. '       ' → logprob: -11.259206771850586

Token 114: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009015733376145363
    2. '   ' → logprob: -7.500901699066162
    3. ' r' → logprob: -8.000901222229004
    4. '```' → logprob: -11.875901222229004
    5. '
' → logprob: -12.500901222229004
    6. ' ' → logprob: -14.250901222229004
    7. '<|end|>' → logprob: -14.750901222229004
    8. ')' → logprob: -14.875901222229004
    9. ',' → logprob: -14.875901222229004
    10. '``' → logprob: -15.125901222229004

Token 115: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.00012654215970542282
    2. ' r' → logprob: -9.000126838684082
    3. '   ' → logprob: -13.000126838684082
    4. '```' → logprob: -14.375126838684082
    5. 'l' → logprob: -15.375126838684082
    6. '
' → logprob: -16.625125885009766
    7. '<|end|>' → logprob: -17.500125885009766
    8. '``' → logprob: -17.500125885009766
    9. ' ' → logprob: -18.000125885009766
    10. '[' → logprob: -18.750125885009766

Token 116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0001487140398239717
    2. '[' → logprob: -9.00014877319336
    3. '[r' → logprob: -11.00014877319336
    4. ' [' → logprob: -12.87514877319336
    5. '```' → logprob: -13.25014877319336
    6. '[i' → logprob: -13.50014877319336
    7. '\[' → logprob: -14.37514877319336
    8. '[js' → logprob: -14.62514877319336
    9. ' ' → logprob: -15.62514877319336
    10. '[l' → logprob: -15.62514877319336

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001981095178052783
    2. '=' → logprob: -6.501981258392334
    3. ']=' → logprob: -8.001980781555176
    4. ' ]' → logprob: -9.251980781555176
    5. ' =' → logprob: -10.001980781555176
    6. ')' → logprob: -13.626980781555176
    7. '   ' → logprob: -14.376980781555176
    8. ' ' → logprob: -15.626980781555176
    9. '']' → logprob: -15.751980781555176
    10. '`]' → logprob: -16.251981735229492

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.313262939453125
    4. '＝' → logprob: -16.688262939453125
    5. '=i' → logprob: -16.688262939453125
    6. '   ' → logprob: -17.563262939453125
    7. ')' → logprob: -18.313262939453125
    8. '=r' → logprob: -18.563262939453125
    9. '=

' → logprob: -18.688262939453125
    10. '.=' → logprob: -18.938262939453125

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02324652671813965
    2. ' i' → logprob: -3.7732465267181396
    3. '   ' → logprob: -14.648246765136719
    4. ' ' → logprob: -15.398246765136719
    5. '<|end|>' → logprob: -15.398246765136719
    6. '	i' → logprob: -16.27324676513672
    7. '  ' → logprob: -17.39824676513672
    8. '[i' → logprob: -18.02324676513672
    9. '    ' → logprob: -19.52324676513672
    10. '`' → logprob: -19.52324676513672

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47581204771995544
    2. 'i' → logprob: -0.9758120775222778
    3. ' i' → logprob: -6.850811958312988
    4. '```' → logprob: -7.350811958312988
    5. '``' → logprob: -10.850811958312988
    6. '	i' → logprob: -12.600811958312988
    7. ' ' → logprob: -12.850811958312988
    8. ',i' → logprob: -12.975811958312988
    9. '  ' → logprob: -13.225811958312988
    10. ',' → logprob: -13.725811958312988

Token 121: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3152385652065277
    2. '   ' → logprob: -1.31523859500885
    3. ' i' → logprob: -6.9402384757995605
    4. '```' → logprob: -6.9402384757995605
    5. '``' → logprob: -11.315238952636719
    6. ' ' → logprob: -12.190238952636719
    7. '  ' → logprob: -12.190238952636719
    8. '
' → logprob: -12.315238952636719
    9. ',i' → logprob: -12.440238952636719
    10. '	i' → logprob: -12.690238952636719

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.1756367712223437e-05
    2. ' i' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.375011444091797
    4. '
' → logprob: -18.500011444091797
    5. '	i' → logprob: -19.125011444091797
    6. '```' → logprob: -19.250011444091797
    7. ',i' → logprob: -20.000011444091797
    8. '    
' → logprob: -20.750011444091797
    9. '*i' → logprob: -21.500011444091797
    10. '-' → logprob: -21.500011444091797

Token 123: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10210426151752472
    2. ' -=' → logprob: -2.3521041870117188
    3. '=' → logprob: -6.477104187011719
    4. '-' → logprob: -8.227104187011719
    5. '   ' → logprob: -9.852104187011719
    6. ' =' → logprob: -10.977104187011719
    7. ' -' → logprob: -12.102104187011719
    8. '+=' → logprob: -12.102104187011719
    9. '```' → logprob: -12.852104187011719
    10. ' ' → logprob: -13.102104187011719

Token 124: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0034172474406659603
    2. ' C' → logprob: -5.753417015075684
    3. '(C' → logprob: -8.378417015075684
    4. '(' → logprob: -12.628417015075684
    5. ' (' → logprob: -12.753417015075684
    6. '1' → logprob: -13.378417015075684
    7. '   ' → logprob: -14.503417015075684
    8. '>C' → logprob: -14.878417015075684
    9. '	C' → logprob: -15.128417015075684
    10. '
' → logprob: -16.12841796875

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.183501293184236e-05
    2. '1' → logprob: -9.62507152557373
    3. ' +' → logprob: -12.37507152557373
    4. ' ' → logprob: -14.75007152557373
    5. '<|end|>' → logprob: -14.75007152557373
    6. '-' → logprob: -15.00007152557373
    7. '+
' → logprob: -16.125072479248047
    8. '0' → logprob: -16.500072479248047
    9. '```' → logprob: -16.750072479248047
    10. '+-' → logprob: -18.125072479248047

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '<|end|>' → logprob: -17.25
    4. '+' → logprob: -18.25
    5. '```' → logprob: -18.625
    6. '0' → logprob: -19.5
    7. '...' → logprob: -20.125
    8. '-' → logprob: -21.25
    9. '[' → logprob: -21.75
    10. '<|end|>' → logprob: -21.75

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005332539323717356
    2. 'j' → logprob: -5.2553324699401855
    3. ' j' → logprob: -9.630332946777344
    4. '```' → logprob: -10.505332946777344
    5. '	j' → logprob: -12.755332946777344
    6. ' ' → logprob: -13.630332946777344
    7. ',j' → logprob: -14.880332946777344
    8. '  ' → logprob: -15.005332946777344
    9. '``' → logprob: -15.505332946777344
    10. '       ' → logprob: -15.630332946777344

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04931669309735298
    2. 'j' → logprob: -3.049316644668579
    3. ' j' → logprob: -7.799316883087158
    4. '```' → logprob: -8.29931640625
    5. '	j' → logprob: -9.67431640625
    6. '``' → logprob: -13.17431640625
    7. ' ' → logprob: -13.54931640625
    8. ',j' → logprob: -13.79931640625
    9. '  ' → logprob: -14.17431640625
    10. '
' → logprob: -14.79931640625

Token 129: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.07938310503959656
    2. '   ' → logprob: -2.579383134841919
    3. ' j' → logprob: -7.82938289642334
    4. '```' → logprob: -9.57938289642334
    5. '	j' → logprob: -10.82938289642334
    6. '``' → logprob: -13.45438289642334
    7. '1' → logprob: -13.57938289642334
    8. ' ' → logprob: -13.70438289642334
    9. '
' → logprob: -14.45438289642334
    10. '    
' → logprob: -14.70438289642334

Token 130: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.01899830810725689
    2. '-=' → logprob: -4.018998146057129
    3. '-' → logprob: -7.268998146057129
    4. ' -' → logprob: -8.893998146057129
    5. '   ' → logprob: -12.018998146057129
    6. '    ' → logprob: -12.768998146057129
    7. ' +=' → logprob: -12.768998146057129
    8. ' ' → logprob: -13.393998146057129
    9. '[-' → logprob: -15.018998146057129
    10. '+=' → logprob: -15.643998146057129

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. '```' → logprob: -17.62603187561035
    4. '   ' → logprob: -18.06353187561035
    5. '0' → logprob: -18.37603187561035
    6. ' ' → logprob: -19.18853187561035
    7. '`' → logprob: -20.06353187561035
    8. '۱' → logprob: -20.18853187561035
    9. '１' → logprob: -20.25103187561035
    10. '
' → logprob: -20.37603187561035

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.125
    4. '0' → logprob: -21.125
    5. '۱' → logprob: -21.25
    6. '`' → logprob: -21.25
    7. '１' → logprob: -21.4375
    8. '   ' → logprob: -21.4375
    9. '
' → logprob: -21.625
    10. '2' → logprob: -22.125

Token 133: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.602763831615448
    2. 'while' → logprob: -1.4777638912200928
    3. 'k' → logprob: -2.7277638912200928
    4. 'diff' → logprob: -3.1027638912200928
    5. 'i' → logprob: -3.6027638912200928
    6. ' for' → logprob: -3.8527638912200928
    7. 'd' → logprob: -4.102763652801514
    8. 'if' → logprob: -4.602763652801514
    9. '```' → logprob: -4.727763652801514
    10. 'm' → logprob: -4.727763652801514

Token 134: 'ii' (ID: 3573)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6930844187736511
    2. 'for' → logprob: -1.318084478378296
    3. 'k' → logprob: -2.318084478378296
    4. 'i' → logprob: -3.068084478378296
    5. '```' → logprob: -3.693084478378296
    6. 'm' → logprob: -4.193084239959717
    7. 'j' → logprob: -4.568084239959717
    8. 'diff' → logprob: -4.568084239959717
    9. 'p' → logprob: -5.318084239959717
    10. 'l' → logprob: -5.443084239959717

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7164279222488403
    2. ' +=' → logprob: -1.2164279222488403
    3. '=' → logprob: -1.8414279222488403
    4. '+=' → logprob: -3.591427803039551
    5. ' ' → logprob: -4.716427803039551
    6. '+' → logprob: -4.841427803039551
    7. 'nd' → logprob: -6.216427803039551
    8. 'n' → logprob: -6.216427803039551
    9. '[' → logprob: -6.216427803039551
    10. 'f' → logprob: -6.341427803039551

Token 136: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011671196669340134
    2. ' ' → logprob: -4.63667106628418
    3. 'l' → logprob: -6.63667106628418
    4. '1' → logprob: -8.13667106628418
    5. ' l' → logprob: -8.63667106628418
    6. 'K' → logprob: -9.76167106628418
    7. 'j' → logprob: -10.51167106628418
    8. ' K' → logprob: -11.26167106628418
    9. '2' → logprob: -11.76167106628418
    10. 'i' → logprob: -12.01167106628418

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038872790173627436
    2. 'j' → logprob: -9.000389099121094
    3. ' ' → logprob: -9.375389099121094
    4. 'K' → logprob: -9.625389099121094
    5. 'l' → logprob: -9.750389099121094
    6. '1' → logprob: -10.125389099121094
    7. '-' → logprob: -13.125389099121094
    8. 'len' → logprob: -13.125389099121094
    9. 'max' → logprob: -13.250389099121094
    10. 'i' → logprob: -13.375389099121094

Token 138: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'while' (ID: 7032)
  Prédit: 'jj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jj' → logprob: -0.0009845776949077845
    2. ' jj' → logprob: -7.1259846687316895
    3. 'for' → logprob: -9.500984191894531
    4. 'j' → logprob: -10.125984191894531
    5. 'while' → logprob: -10.250984191894531
    6. 'kk' → logprob: -11.375984191894531
    7. 'ij' → logprob: -12.250984191894531
    8. '```' → logprob: -12.625984191894531
    9. 'jk' → logprob: -12.875984191894531
    10. ' for' → logprob: -13.250984191894531

Token 140: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.38728928565979004
    2. ' ii' → logprob: -1.13728928565979
    3. ' l' → logprob: -9.012289047241211
    4. 'l' → logprob: -9.137289047241211
    5. '(ii' → logprob: -9.637289047241211
    6. 'j' → logprob: -10.387289047241211
    7. 'jj' → logprob: -11.012289047241211
    8. ' j' → logprob: -11.262289047241211
    9. ' i' → logprob: -11.512289047241211
    10. ' ll' → logprob: -11.637289047241211

Token 141: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15185657143592834
    2. ' <=' → logprob: -2.0268566608428955
    3. '<' → logprob: -4.901856422424316
    4. '<=' → logprob: -6.901856422424316
    5. ' ' → logprob: -7.401856422424316
    6. '<K' → logprob: -9.526856422424316
    7. '<len' → logprob: -11.526856422424316
    8. '<N' → logprob: -12.651856422424316
    9. ' !=' → logprob: -13.651856422424316
    10. '<n' → logprob: -14.151856422424316

Token 142: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0005592276575043797
    2. ' K' → logprob: -7.500559329986572
    3. 'N' → logprob: -13.250558853149414
    4. ' ' → logprob: -13.375558853149414
    5. 'j' → logprob: -13.500558853149414
    6. 'len' → logprob: -14.875558853149414
    7. '(K' → logprob: -14.875558853149414
    8. '(' → logprob: -15.375558853149414
    9. '  ' → logprob: -16.000558853149414
    10. '   ' → logprob: -16.125558853149414

Token 143: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10486038029193878
    2. ':' → logprob: -3.104860305786133
    3. ':
' → logprob: -3.354860305786133
    4. 'and' → logprob: -4.229860305786133
    5. ' <' → logprob: -5.854860305786133
    6. '<' → logprob: -6.854860305786133
    7. '   ' → logprob: -7.979860305786133
    8. ' ' → logprob: -7.979860305786133
    9. ' :
' → logprob: -9.229860305786133
    10. '<len' → logprob: -9.229860305786133

Token 144: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5843574404716492
    2. '   ' → logprob: -0.9593574404716492
    3. ' if' → logprob: -2.834357500076294
    4. ' ' → logprob: -8.834357261657715
    5. '```' → logprob: -8.959357261657715
    6. 'ii' → logprob: -9.584357261657715
    7. '       ' → logprob: -9.834357261657715
    8. 'l' → logprob: -10.084357261657715
    9. '   ' → logprob: -10.334357261657715
    10. ' l' → logprob: -10.334357261657715

Token 145: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18022039532661438
    2. ' if' → logprob: -1.805220365524292
    3. '   ' → logprob: -8.430220603942871
    4. ' i' → logprob: -10.055220603942871
    5. 'i' → logprob: -10.305220603942871
    6. ' l' → logprob: -10.430220603942871
    7. 'l' → logprob: -10.430220603942871
    8. ' ' → logprob: -10.555220603942871
    9. 'print' → logprob: -10.930220603942871
    10. 'for' → logprob: -11.055220603942871

Token 146: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3761551082134247
    2. ' l' → logprob: -1.376155138015747
    3. 'r' → logprob: -3.001155138015747
    4. ' r' → logprob: -4.501154899597168
    5. ' ' → logprob: -10.376154899597168
    6. 'i' → logprob: -10.751154899597168
    7. ' ' → logprob: -11.001154899597168
    8. '   ' → logprob: -11.501154899597168
    9. 'ii' → logprob: -11.626154899597168
    10. ' i' → logprob: -11.751154899597168

Token 147: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -4.906711546937004e-05
    2. ' [' → logprob: -10.125048637390137
    3. '[' → logprob: -11.875048637390137
    4. '[i' → logprob: -14.125048637390137
    5. '[j' → logprob: -14.125048637390137
    6. ' ii' → logprob: -15.750048637390137
    7. 'ii' → logprob: -16.125049591064453
    8. '   ' → logprob: -17.125049591064453
    9. '[l' → logprob: -17.125049591064453
    10. '```' → logprob: -17.125049591064453

Token 148: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25805550813674927
    2. ' >' → logprob: -2.8830554485321045
    3. ' !=' → logprob: -3.0080554485321045
    4. ' >=' → logprob: -3.3830554485321045
    5. ' ==' → logprob: -3.5080554485321045
    6. '<' → logprob: -3.7580554485321045
    7. '>' → logprob: -4.008055686950684
    8. ' <=' → logprob: -5.008055686950684
    9. ' ' → logprob: -5.883055686950684
    10. '==' → logprob: -6.008055686950684

Token 149: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.33506959676742554
    2. '<' → logprob: -2.2100696563720703
    3. ' >=' → logprob: -2.7100696563720703
    4. '>=' → logprob: -3.5850696563720703
    5. ' ==' → logprob: -3.7100696563720703
    6. '==' → logprob: -4.08506965637207
    7. ' <=' → logprob: -4.46006965637207
    8. ' !=' → logprob: -4.96006965637207
    9. '<=' → logprob: -5.08506965637207
    10. ' ' → logprob: -5.21006965637207

Token 150: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004081959370523691
    2. ' r' → logprob: -5.504081726074219
    3. '   ' → logprob: -13.129081726074219
    4. ' ' → logprob: -13.629081726074219
    5. '  ' → logprob: -16.00408172607422
    6. '    ' → logprob: -16.62908172607422
    7. '0' → logprob: -16.62908172607422
    8. '	r' → logprob: -17.62908172607422
    9. ' 
' → logprob: -18.00408172607422
    10. '    
' → logprob: -18.00408172607422

Token 151: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -4.68022444692906e-05
    2. '[' → logprob: -10.750046730041504
    3. 'ii' → logprob: -10.750046730041504
    4. ' ii' → logprob: -13.250046730041504
    5. '(ii' → logprob: -13.875046730041504
    6. ' [' → logprob: -14.125046730041504
    7. '[i' → logprob: -15.750046730041504
    8. '   ' → logprob: -16.25004768371582
    9. '```' → logprob: -17.12504768371582
    10. '[int' → logprob: -17.12504768371582

Token 152: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6541116237640381
    2. ':' → logprob: -0.7791116237640381
    3. '):
' → logprob: -4.279111862182617
    4. ' ):' → logprob: -5.154111862182617
    5. ':
' → logprob: -7.404111862182617
    6. ' :' → logprob: -7.904111862182617
    7. ' ):
' → logprob: -8.279111862182617
    8. ']:' → logprob: -8.279111862182617
    9. ')' → logprob: -9.904111862182617
    10. '():' → logprob: -10.904111862182617

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028234198689460754
    2. ' break' → logprob: -6.377823352813721
    3. '   ' → logprob: -7.877823352813721
    4. ':
' → logprob: -8.627823829650879
    5. ' ii' → logprob: -8.752823829650879
    6. '\n' → logprob: -9.627823829650879
    7. 'break' → logprob: -9.752823829650879
    8. '	   ' → logprob: -10.252823829650879
    9. ':' → logprob: -10.377823829650879
    10. '	break' → logprob: -10.502823829650879

Token 154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3917304575443268
    2. ' print' → logprob: -1.2667304277420044
    3. ' break' → logprob: -4.266730308532715
    4. '   ' → logprob: -4.516730308532715
    5. 'break' → logprob: -4.516730308532715
    6. '       ' → logprob: -5.266730308532715
    7. ' ii' → logprob: -7.766730308532715
    8. 'ii' → logprob: -8.016730308532715
    9. ' l' → logprob: -9.141730308532715
    10. ' ' → logprob: -9.641730308532715

Token 155: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.007541903294622898
    2. 'l' → logprob: -5.382542133331299
    3. '(' → logprob: -5.882542133331299
    4. '(ii' → logprob: -9.75754165649414
    5. ' l' → logprob: -9.88254165649414
    6. '(ll' → logprob: -11.75754165649414
    7. ' (' → logprob: -12.25754165649414
    8. '("' → logprob: -12.50754165649414
    9. '(i' → logprob: -13.13254165649414
    10. '(r' → logprob: -14.38254165649414

Token 156: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.0004988207365386188
    2. 'ii' → logprob: -7.6254987716674805
    3. ' ii' → logprob: -12.37549877166748
    4. ')' → logprob: -12.75049877166748
    5. '[
' → logprob: -14.00049877166748
    6. '(ii' → logprob: -14.62549877166748
    7. '[i' → logprob: -14.62549877166748
    8. '[' → logprob: -14.62549877166748
    9. ')[' → logprob: -14.62549877166748
    10. ' [' → logprob: -15.12549877166748

Token 157: ']+' (ID: 15344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06131985783576965
    2. ')
' → logprob: -2.9363198280334473
    3. ' )' → logprob: -5.436319828033447
    4. '])' → logprob: -7.061319828033447
    5. ' )
' → logprob: -7.436319828033447
    6. '+' → logprob: -8.811320304870605
    7. ')+' → logprob: -9.186320304870605
    8. ',' → logprob: -9.311320304870605
    9. '])
' → logprob: -10.061320304870605
    10. '   ' → logprob: -10.311320304870605

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. ')' → logprob: -15.250158309936523
    4. '0' → logprob: -17.125158309936523
    5. '2' → logprob: -17.500158309936523
    6. '```' → logprob: -18.250158309936523
    7. '   ' → logprob: -18.875158309936523
    8. '+' → logprob: -19.000158309936523
    9. '
' → logprob: -19.125158309936523
    10. ')
' → logprob: -19.625158309936523

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43045172095298767
    2. ')
' → logprob: -1.05545175075531
    3. '       ' → logprob: -6.4304518699646
    4. ',' → logprob: -10.055451393127441
    5. ')
' → logprob: -10.180451393127441
    6. '   ' → logprob: -10.430451393127441
    7. ')`
' → logprob: -11.930451393127441
    8. ')return' → logprob: -12.430451393127441
    9. '           ' → logprob: -12.680451393127441
    10. ' )
' → logprob: -13.430451393127441

Token 160: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3910379409790039
    2. '   ' → logprob: -1.141037940979004
    3. 'ii' → logprob: -5.891037940979004
    4. 'else' → logprob: -7.391037940979004
    5. ' ii' → logprob: -8.016037940979004
    6. ' ' → logprob: -9.141037940979004
    7. '	' → logprob: -9.641037940979004
    8. ' else' → logprob: -9.891037940979004
    9. 'break' → logprob: -10.141037940979004
    10. ' break' → logprob: -10.516037940979004

Token 161: ' ii' (ID: 28354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5560106635093689
    2. '   ' → logprob: -1.4310107231140137
    3. 'ii' (adapté à ' ii') → logprob: -1.8060107231140137
    4. 'else' → logprob: -3.9310107231140137
    5. 'break' → logprob: -6.431010723114014
    6. ' ii' → logprob: -6.681010723114014
    7. ' else' → logprob: -8.806010246276855
    8. ' break' → logprob: -9.306010246276855
    9. '	' → logprob: -9.681010246276855
    10. '    ' → logprob: -9.931010246276855

Token 162: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47572779655456543
    2. ' +=' → logprob: -0.9757277965545654
    3. '+' → logprob: -6.4757280349731445
    4. '=' → logprob: -10.225728034973145
    5. '++' → logprob: -10.600728034973145
    6. '   ' → logprob: -10.850728034973145
    7. '==' → logprob: -10.975728034973145
    8. ' +' → logprob: -11.975728034973145
    9. ' ' → logprob: -13.975728034973145
    10. ' ==' → logprob: -14.225728034973145

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -18.625017166137695
    4. '   ' → logprob: -19.250017166137695
    5. '１' → logprob: -20.500017166137695
    6. '0' → logprob: -21.312517166137695
    7. '۱' → logprob: -21.562517166137695
    8. ' ' → logprob: -21.812517166137695
    9. '  ' → logprob: -21.937517166137695
    10. '2' → logprob: -22.062517166137695

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '１' → logprob: -19.750003814697266
    6. '+' → logprob: -21.125003814697266
    7. '  ' → logprob: -21.312503814697266
    8. '2' → logprob: -21.375003814697266
    9. '۱' → logprob: -21.437503814697266
    10. '१' → logprob: -22.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 162
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 32.72%
Précision adaptée (1ère position): 38.89%
Précision (top 10): 87.04%
================================================================================
