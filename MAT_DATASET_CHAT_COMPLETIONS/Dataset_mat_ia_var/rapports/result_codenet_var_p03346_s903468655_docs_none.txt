================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def input(): return sys.stdin.readline().strip()
def list2d(a, b, c): return [[c] * b for i in range(a)]
def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]
def list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]
def ceil(x, y=1): return int(-(-x // y))
def INT(): return int(input())
def MAP(): return map(int, input().split())
def LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]
def Yes(): print('Yes')
def No(): print('No')
def YES(): print('YES')
def NO(): print('NO')
sys.setrecursionlimit(10 ** 9)
INF = 10 ** 18
MOD = 10 ** 9 + 7

N = INT()
A = LIST(N)

B = [0] * N
for i, a in enumerate(A):
    B[a-1] = i

mx = cnt = 1
for i in range(N-1):
    if B[i] < B[i+1]:
        cnt += 1
    else:
        cnt = 1
    mx = max(mx, cnt)
print(N - mx)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023278674110770226
    2. ' main' → logprob: -5.148278713226318
    3. ' process' → logprob: -5.898278713226318
    4. ' space' → logprob: -6.023278713226318
    5. ' sys' → logprob: -6.273278713226318
    6. ' ' → logprob: -6.273278713226318
    7. '  ' → logprob: -7.023278713226318
    8. ' a' → logprob: -7.398278713226318
    9. ' function' → logprob: -7.398278713226318
    10. ' def' → logprob: -7.523278713226318

Token 5: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010993726318702102
    2. '_' → logprob: -7.001099586486816
    3. ' (' → logprob: -10.001099586486816
    4. '("("' → logprob: -10.251099586486816
    5. '('' → logprob: -10.751099586486816
    6. '("' → logprob: -11.626099586486816
    7. 's' → logprob: -11.626099586486816
    8. ')' → logprob: -11.876099586486816
    9. '(
' → logprob: -12.251099586486816
    10. '()' → logprob: -12.501099586486816

Token 6: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.035054512321949005
    2. ' sys' → logprob: -4.410054683685303
    3. ' 
' → logprob: -5.160054683685303
    4. '    ' → logprob: -5.660054683685303
    5. '  ' → logprob: -5.785054683685303
    6. '  
' → logprob: -6.160054683685303
    7. '<|end|>' → logprob: -6.285054683685303
    8. ''' → logprob: -6.410054683685303
    9. '    
' → logprob: -7.285054683685303
    10. '   ' → logprob: -7.285054683685303

Token 7: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.006849165540188551
    2. 'sys' → logprob: -5.25684928894043
    3. ' ' → logprob: -6.88184928894043
    4. ' input' → logprob: -7.75684928894043
    5. '""' → logprob: -10.25684928894043
    6. '  ' → logprob: -10.88184928894043
    7. 'input' → logprob: -11.25684928894043
    8. '''' → logprob: -11.25684928894043
    9. '"' → logprob: -11.38184928894043
    10. ' next' → logprob: -11.50684928894043

Token 8: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4352778196334839
    2. '.' → logprob: -1.0602778196334839
    3. '.readline' → logprob: -5.810277938842773
    4. '.argv' → logprob: -6.435277938842773
    5. '.stdout' → logprob: -7.310277938842773
    6. ' .' → logprob: -7.810277938842773
    7. '.exit' → logprob: -8.060277938842773
    8. '.input' → logprob: -8.435277938842773
    9. '.version' → logprob: -9.685277938842773
    10. '.stderr' → logprob: -10.310277938842773

Token 9: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.42950737476348877
    2. '.' → logprob: -1.1795073747634888
    3. '.read' → logprob: -3.179507255554199
    4. '.Read' → logprob: -9.9295072555542
    5. ' .' → logprob: -10.3045072555542
    6. 'read' → logprob: -10.8045072555542
    7. '.readlines' → logprob: -11.6795072555542
    8. '.write' → logprob: -11.8045072555542
    9. ' readline' → logprob: -12.3045072555542
    10. '.READ' → logprob: -12.5545072555542

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029964420944452286
    2. '().' → logprob: -4.654964447021484
    3. '(' → logprob: -5.029964447021484
    4. '()
' → logprob: -5.154964447021484
    5. '
' → logprob: -5.654964447021484
    6. '()\' → logprob: -5.779964447021484
    7. '(
' → logprob: -7.779964447021484
    8. '()

' → logprob: -7.779964447021484
    9. '```' → logprob: -9.904964447021484
    10. '()<' → logprob: -10.529964447021484

Token 11: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006725079845637083
    2. 'rstrip' → logprob: -5.006725311279297
    3. ' strip' → logprob: -11.631725311279297
    4. '_strip' → logprob: -14.381725311279297
    5. 'str' → logprob: -15.756725311279297
    6. '-strip' → logprob: -16.756725311279297
    7. 'split' → logprob: -17.131725311279297
    8. '```' → logprob: -17.256725311279297
    9. '(strip' → logprob: -17.381725311279297
    10. 'Strip' → logprob: -17.756725311279297

Token 12: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6634632349014282
    2. '()' → logprob: -0.7884632349014282
    3. '(
' → logprob: -4.788463115692139
    4. '\' → logprob: -5.163463115692139
    5. '\n' → logprob: -5.163463115692139
    6. '()
' → logprob: -5.538463115692139
    7. '```' → logprob: -6.663463115692139
    8. '
' → logprob: -6.913463115692139
    9. '(

' → logprob: -6.913463115692139
    10. '()\' → logprob: -7.538463115692139

Token 13: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5692779421806335
    2. '
' → logprob: -1.1942780017852783
    3. '\n' → logprob: -2.5692780017852783
    4. '<|end|>' → logprob: -4.569277763366699
    5. '```' → logprob: -4.944277763366699
    6. '#' → logprob: -4.944277763366699
    7. '\' → logprob: -5.069277763366699
    8. '' → logprob: -5.444277763366699
    9. '(' → logprob: -5.569277763366699
    10. 'def' → logprob: -5.819277763366699

Token 14: ' list' (ID: 1562)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07257535308599472
    2. ' print' → logprob: -2.947575330734253
    3. 'main' → logprob: -4.947575569152832
    4. ' output' → logprob: -5.447575569152832
    5. 'print' → logprob: -5.572575569152832
    6. 'output' → logprob: -6.822575569152832
    7. ' solve' → logprob: -7.822575569152832
    8. '_output' → logprob: -8.947575569152832
    9. '_print' → logprob: -8.947575569152832
    10. ' ' → logprob: -9.072575569152832

Token 15: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12171485275030136
    2. '_append' → logprob: -2.8717148303985596
    3. '(' → logprob: -4.371715068817139
    4. '()' → logprob: -5.121715068817139
    5. '=' → logprob: -5.371715068817139
    6. '_of' → logprob: -5.621715068817139
    7. '.append' → logprob: -5.746715068817139
    8. 'of' → logprob: -5.871715068817139
    9. ' comprehension' → logprob: -6.121715068817139
    10. '[:]' → logprob: -6.121715068817139

Token 16: 'd' (ID: 67)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.5078153610229492
    2. 'int' → logprob: -2.257815361022949
    3. 'dict' → logprob: -2.757815361022949
    4. 'str' → logprob: -3.007815361022949
    5. 'd' → logprob: -3.257815361022949
    6. 'array' → logprob: -3.257815361022949
    7. '_append' → logprob: -3.382815361022949
    8. 'tuple' → logprob: -4.507815361022949
    9. 'list' → logprob: -5.132815361022949
    10. '_to' → logprob: -5.257815361022949

Token 17: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07998534291982651
    2. '(n' → logprob: -2.5799853801727295
    3. '(length' → logprob: -8.579985618591309
    4. '(N' → logprob: -8.704985618591309
    5. '(dim' → logprob: -8.829985618591309
    6. '(len' → logprob: -9.829985618591309
    7. '(int' → logprob: -10.204985618591309
    8. '```' → logprob: -10.204985618591309
    9. '(lambda' → logprob: -10.454985618591309
    10. '(num' → logprob: -10.454985618591309

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03803069889545441
    2. ' ,' → logprob: -3.7880306243896484
    3. ',a' → logprob: -4.413030624389648
    4. ',b' → logprob: -6.038030624389648
    5. ',n' → logprob: -9.163030624389648
    6. ',l' → logprob: -11.288030624389648
    7. '(a' → logprob: -11.288030624389648
    8. ' ' → logprob: -11.538030624389648
    9. 'a' → logprob: -11.913030624389648
    10. ',size' → logprob: -12.663030624389648

Token 19: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00013452880375552922
    2. ' b' → logprob: -9.000134468078613
    3. '*b' → logprob: -12.375134468078613
    4. 'n' → logprob: -13.250134468078613
    5. ')' → logprob: -13.375134468078613
    6. '	b' → logprob: -14.000134468078613
    7. ')b' → logprob: -14.375134468078613
    8. ',b' → logprob: -14.750134468078613
    9. 'rows' → logprob: -15.125134468078613
    10. '):' → logprob: -15.250134468078613

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.875021934509277
    3. '):' → logprob: -12.875021934509277
    4. ',a' → logprob: -14.500021934509277
    5. ',int' → logprob: -17.500022888183594
    6. '‌,' → logprob: -18.000022888183594
    7. '，' → logprob: -18.750022888183594
    8. '),' → logprob: -18.750022888183594
    9. ')' → logprob: -19.250022888183594
    10. ',b' → logprob: -19.250022888183594

Token 21: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15230196714401245
    2. ' c' → logprob: -2.9023020267486572
    3. 'v' → logprob: -2.9023020267486572
    4. 'k' → logprob: -4.652301788330078
    5. '0' → logprob: -4.902301788330078
    6. 'fill' → logprob: -6.027301788330078
    7. 'None' → logprob: -6.027301788330078
    8. ' ' → logprob: -6.277301788330078
    9. ' v' → logprob: -6.527301788330078
    10. ' None' → logprob: -6.652301788330078

Token 22: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.360996485454962e-05
    2. ' ):' → logprob: -10.6250638961792
    3. '=' → logprob: -10.8750638961792
    4. ')' → logprob: -11.3750638961792
    5. '):
' → logprob: -11.8750638961792
    6. '=None' → logprob: -14.0000638961792
    7. '):
' → logprob: -15.2500638961792
    8. '):

' → logprob: -15.2500638961792
    9. ')=' → logprob: -15.5000638961792
    10. ':' → logprob: -16.000062942504883

Token 23: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03970688581466675
    2. '   ' → logprob: -3.2897069454193115
    3. 'return' → logprob: -7.289706707000732
    4. '	return' → logprob: -7.414706707000732
    5. ' ' → logprob: -8.16470718383789
    6. '    ' → logprob: -10.53970718383789
    7. ':return' → logprob: -10.53970718383789
    8. ' [' → logprob: -10.78970718383789
    9. ' ' → logprob: -11.78970718383789
    10. '  ' → logprob: -12.53970718383789

Token 24: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.011091803200542927
    2. ' [[' → logprob: -4.761091709136963
    3. '[' → logprob: -6.011091709136963
    4. ' [' → logprob: -10.761092185974121
    5. '[
' → logprob: -14.261092185974121
    6. '[a' → logprob: -14.511092185974121
    7. '[['' → logprob: -15.761092185974121
    8. ' ' → logprob: -16.511091232299805
    9. '[]' → logprob: -16.761091232299805
    10. '[c' → logprob: -17.136091232299805

Token 25: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.5716304410016164e-05
    2. ' c' → logprob: -10.250035285949707
    3. '	c' → logprob: -15.125035285949707
    4. ')c' → logprob: -18.625036239624023
    5. ' ' → logprob: -20.000036239624023
    6. 'с' → logprob: -20.375036239624023
    7. '%c' → logprob: -20.500036239624023
    8. '_c' → logprob: -20.875036239624023
    9. '   ' → logprob: -20.875036239624023
    10. '$c' → logprob: -21.000036239624023

Token 26: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5761137008666992
    2. 'for' → logprob: -0.8261137008666992
    3. ']' → logprob: -9.2011137008667
    4. '	for' → logprob: -9.7011137008667
    5. '   ' → logprob: -12.0761137008667
    6. ' ' → logprob: -12.9511137008667
    7. ']*' → logprob: -13.3261137008667
    8. ' ]' → logprob: -13.9511137008667
    9. '  ' → logprob: -14.7011137008667
    10. '    ' → logprob: -14.9511137008667

Token 27: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1269380897283554
    2. ' for' → logprob: -2.1269381046295166
    3. '	for' → logprob: -12.251937866210938
    4. ' ' → logprob: -13.001937866210938
    5. '   ' → logprob: -13.251937866210938
    6. ']' → logprob: -14.126937866210938
    7. '```' → logprob: -15.376937866210938
    8. '    ' → logprob: -16.376937866210938
    9. ']*' → logprob: -16.376937866210938
    10. '           ' → logprob: -17.626937866210938

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010092071170220152
    2. ' b' → logprob: -9.250101089477539
    3. 'a' → logprob: -12.250101089477539
    4. ' a' → logprob: -19.25010108947754
    5. '(b' → logprob: -19.37510108947754
    6. ' ' → logprob: -19.62510108947754
    7. '```' → logprob: -20.50010108947754
    8. '	b' → logprob: -20.62510108947754
    9. ')b' → logprob: -21.25010108947754
    10. '   ' → logprob: -21.37510108947754

Token 29: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2813664972782135
    2. 'for' → logprob: -1.4063664674758911
    3. ']' → logprob: -9.156366348266602
    4. ')' → logprob: -9.781366348266602
    5. '	for' → logprob: -10.156366348266602
    6. ' ' → logprob: -11.406366348266602
    7. '<|end|>' → logprob: -13.406366348266602
    8. '   ' → logprob: -14.281366348266602
    9. ' ]' → logprob: -14.406366348266602
    10. 'a' → logprob: -14.906366348266602

Token 30: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20508387684822083
    2. ' range' → logprob: -2.3300838470458984
    3. 'range' → logprob: -2.9550838470458984
    4. ' a' → logprob: -3.8300838470458984
    5. '_a' → logprob: -4.580083847045898
    6. '_' → logprob: -6.205083847045898
    7. '_range' → logprob: -7.705083847045898
    8. ' _' → logprob: -7.830083847045898
    9. '	range' → logprob: -8.205083847045898
    10. '<|end|>' → logprob: -8.205083847045898

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07004591822624207
    2. 'in' → logprob: -2.6950459480285645
    3. ' ' → logprob: -9.945045471191406
    4. 'range' → logprob: -10.320045471191406
    5. 'n' → logprob: -11.445045471191406
    6. '<|end|>' → logprob: -11.945045471191406
    7. '	in' → logprob: -12.820045471191406
    8. ' range' → logprob: -13.070045471191406
    9. '<|end|>' → logprob: -13.445045471191406
    10. '  ' → logprob: -13.570045471191406

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02976333536207676
    2. ' range' → logprob: -3.5297632217407227
    3. '	range' → logprob: -11.529763221740723
    4. 'a' → logprob: -14.029763221740723
    5. '(range' → logprob: -14.029763221740723
    6. 'ra' → logprob: -15.154763221740723
    7. ' ' → logprob: -15.404763221740723
    8. 'in' → logprob: -15.529763221740723
    9. 'ran' → logprob: -15.529763221740723
    10. '  ' → logprob: -16.27976417541504

Token 33: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005996193503960967
    2. '(' → logprob: -7.750599384307861
    3. 'a' → logprob: -8.75059986114502
    4. ' (' → logprob: -12.50059986114502
    5. ' a' → logprob: -12.62559986114502
    6. ')a' → logprob: -14.12559986114502
    7. '/a' → logprob: -14.25059986114502
    8. '	a' → logprob: -14.62559986114502
    9. '```' → logprob: -15.00059986114502
    10. ')' → logprob: -15.12559986114502

Token 34: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.3663626305060461e-05
    2. ')' → logprob: -11.50001335144043
    3. ']' → logprob: -12.75001335144043
    4. ' )' → logprob: -15.12501335144043
    5. '])' → logprob: -16.37501335144043
    6. ')])' → logprob: -16.50001335144043
    7. ')],' → logprob: -16.62501335144043
    8. '])]' → logprob: -16.87501335144043
    9. '')]' → logprob: -17.12501335144043
    10. ')]
' → logprob: -18.00001335144043

Token 35: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48660656809806824
    2. '

' → logprob: -1.6116065979003906
    3. 'def' → logprob: -1.7366065979003906
    4. '<|end|>' → logprob: -5.361606597900391
    5. '```' → logprob: -6.236606597900391
    6. '
' → logprob: -6.861606597900391
    7. '#' → logprob: -7.611606597900391
    8. '<|end|>' → logprob: -8.36160659790039
    9. ' 

' → logprob: -8.86160659790039
    10. '' → logprob: -9.11160659790039

Token 36: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.399516224861145
    2. 'list' → logprob: -1.774516224861145
    3. 'str' → logprob: -3.7745161056518555
    4. ' ' → logprob: -3.8995161056518555
    5. ' input' → logprob: -4.0245161056518555
    6. ' str' → logprob: -4.2745161056518555
    7. 'input' → logprob: -4.8995161056518555
    8. 'pow' → logprob: -4.8995161056518555
    9. ' math' → logprob: -5.0245161056518555
    10. '1' → logprob: -5.0245161056518555

Token 37: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00612621009349823
    2. '3' → logprob: -5.881126403808594
    3. '2' → logprob: -6.381126403808594
    4. '<|end|>' → logprob: -7.006126403808594
    5. '<|end|>' → logprob: -7.881126403808594
    6. 'a' → logprob: -9.631126403808594
    7. ' ' → logprob: -10.568626403808594
    8. '<int' → logprob: -10.818626403808594
    9. '(' → logprob: -10.818626403808594
    10. '_' → logprob: -10.943626403808594

Token 38: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -17.75
    3. '(d' → logprob: -19.0
    4. '	d' → logprob: -19.0
    5. 'д' → logprob: -19.25
    6. '_d' → logprob: -19.75
    7. 'def' → logprob: -20.625
    8. ')d' → logprob: -21.125
    9. '>d' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 39: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009138475870713592
    2. '(' → logprob: -7.000913619995117
    3. '(ai' → logprob: -14.125913619995117
    4. ' (' → logprob: -14.625913619995117
    5. '(A' → logprob: -15.125913619995117
    6. '<|end|>' → logprob: -15.125913619995117
    7. '<|end|>' → logprob: -16.750913619995117
    8. 'a' → logprob: -16.875913619995117
    9. '(user' → logprob: -17.125913619995117
    10. '```' → logprob: -17.375913619995117

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012201975914649665
    2. ' ,' → logprob: -9.2501220703125
    3. ',b' → logprob: -10.8751220703125
    4. ',c' → logprob: -13.1251220703125
    5. '<|end|>' → logprob: -13.2501220703125
    6. ')' → logprob: -13.3751220703125
    7. '，' → logprob: -14.6251220703125
    8. '(' → logprob: -15.5001220703125
    9. ',a' → logprob: -15.5001220703125
    10. '<|end|>' → logprob: -16.0001220703125

Token 41: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008614926598966122
    2. ' b' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.133614540100098
    4. '  ' → logprob: -16.633615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '    ' → logprob: -18.883615493774414
    7. '	b' → logprob: -18.883615493774414
    8. ',' → logprob: -18.883615493774414
    9. '(b' → logprob: -19.008615493774414
    10. '<|end|>' → logprob: -19.133615493774414

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028851060778833926
    2. ',c' → logprob: -8.250288963317871
    3. ' ,' → logprob: -10.625288963317871
    4. 'c' → logprob: -13.000288963317871
    5. ' c' → logprob: -15.125288963317871
    6. '，' → logprob: -16.125288009643555
    7. '<|end|>' → logprob: -16.125288009643555
    8. '‌,' → logprob: -16.750288009643555
    9. ')' → logprob: -16.875288009643555
    10. '```' → logprob: -17.375288009643555

Token 43: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01416398212313652
    2. ' c' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.264163970947266
    4. '  ' → logprob: -16.639163970947266
    5. ',c' → logprob: -16.639163970947266
    6. ')c' → logprob: -16.889163970947266
    7. '	c' → logprob: -17.139163970947266
    8. '   ' → logprob: -17.264163970947266
    9. ',' → logprob: -17.514163970947266
    10. '```' → logprob: -18.014163970947266

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.500012397766113
    3. ',c' → logprob: -13.750012397766113
    4. ',d' → logprob: -14.500012397766113
    5. 'c' → logprob: -16.500011444091797
    6. '```' → logprob: -17.000011444091797
    7. '),' → logprob: -17.500011444091797
    8. 'd' → logprob: -17.625011444091797
    9. ')' → logprob: -18.125011444091797
    10. ' c' → logprob: -18.250011444091797

Token 45: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0380435548722744
    2. ' d' → logprob: -3.28804349899292
    3. ' ' → logprob: -14.038043975830078
    4. '   ' → logprob: -14.538043975830078
    5. '  ' → logprob: -14.788043975830078
    6. '	d' → logprob: -14.788043975830078
    7. 'c' → logprob: -17.413043975830078
    8. '_d' → logprob: -17.538043975830078
    9. ')d' → logprob: -17.913043975830078
    10. 'def' → logprob: -18.288043975830078

Token 46: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00040755473310127854
    2. ' ):' → logprob: -7.875407695770264
    3. ']:' → logprob: -11.750407218933105
    4. '):
' → logprob: -12.125407218933105
    5. ':' → logprob: -12.375407218933105
    6. ')' → logprob: -12.375407218933105
    7. ',' → logprob: -12.875407218933105
    8. ' ' → logprob: -14.500407218933105
    9. '():' → logprob: -14.750407218933105
    10. '   ' → logprob: -15.000407218933105

Token 47: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.005011024884879589
    2. 'return' → logprob: -5.380011081695557
    3. ' [[' → logprob: -8.130010604858398
    4. '[[' → logprob: -9.755010604858398
    5. ' [' → logprob: -10.880010604858398
    6. '   ' → logprob: -12.005010604858398
    7. ' [[[' → logprob: -12.380010604858398
    8. ' def' → logprob: -13.755010604858398
    9. 'eturn' → logprob: -13.880010604858398
    10. 'def' → logprob: -14.005010604858398

Token 48: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -8.061054359131958e-06
    2. ' [[[' → logprob: -12.125007629394531
    3. ' [[' → logprob: -13.000007629394531
    4. '[' → logprob: -15.250007629394531
    5. '[list' → logprob: -16.00000762939453
    6. '[a' → logprob: -19.25000762939453
    7. '[['' → logprob: -19.75000762939453
    8. '([[' → logprob: -20.00000762939453
    9. ' ' → logprob: -20.62500762939453
    10. '```' → logprob: -21.00000762939453

Token 49: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.429896944202483e-05
    2. ' d' → logprob: -10.125043869018555
    3. 'c' → logprob: -12.375043869018555
    4. '	d' → logprob: -18.000043869018555
    5. '```' → logprob: -19.000043869018555
    6. ')d' → logprob: -19.250043869018555
    7. '  ' → logprob: -19.625043869018555
    8. ' ' → logprob: -19.625043869018555
    9. '   ' → logprob: -19.750043869018555
    10. '
' → logprob: -20.375043869018555

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012543321587145329
    2. ']*' → logprob: -4.637543201446533
    3. ' for' → logprob: -6.012543201446533
    4. ')' → logprob: -8.887543678283691
    5. ' ]' → logprob: -9.137543678283691
    6. '*' → logprob: -10.387543678283691
    7. 'for' → logprob: -10.512543678283691
    8. '}' → logprob: -11.637543678283691
    9. ' *' → logprob: -11.887543678283691
    10. ' ' → logprob: -11.887543678283691

Token 51: ' *' (ID: 425)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.8389771580696106
    2. ']' → logprob: -0.9639771580696106
    3. '*' → logprob: -2.088977098464966
    4. ' for' → logprob: -3.213977098464966
    5. ' *' → logprob: -4.213977336883545
    6. 'for' → logprob: -4.963977336883545
    7. ' ]' → logprob: -8.338976860046387
    8. ')' → logprob: -9.088976860046387
    9. ' ' → logprob: -9.088976860046387
    10. '   ' → logprob: -10.338976860046387

Token 52: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018422940047457814
    2. ' c' → logprob: -8.625184059143066
    3. '   ' → logprob: -13.250184059143066
    4. '	c' → logprob: -14.125184059143066
    5. ' ' → logprob: -14.625184059143066
    6. '  ' → logprob: -14.750184059143066
    7. '           ' → logprob: -15.000184059143066
    8. '               ' → logprob: -15.500184059143066
    9. '```' → logprob: -15.750184059143066
    10. '                   ' → logprob: -16.000185012817383

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008644120767712593
    2. 'for' → logprob: -4.758644104003906
    3. ']' → logprob: -10.883644104003906
    4. '	for' → logprob: -12.383644104003906
    5. ')' → logprob: -12.508644104003906
    6. ' ' → logprob: -13.133644104003906
    7. ' ]' → logprob: -14.133644104003906
    8. ' in' → logprob: -16.383644104003906
    9. ' ' → logprob: -17.133644104003906
    10. ' )' → logprob: -17.383644104003906

Token 54: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2847069501876831
    2. '_' → logprob: -1.534706950187683
    3. ' j' → logprob: -3.7847070693969727
    4. '_j' → logprob: -5.159707069396973
    5. ' _' → logprob: -6.409707069396973
    6. ' in' → logprob: -6.534707069396973
    7. 'i' → logprob: -8.409707069396973
    8. 'in' → logprob: -9.159707069396973
    9. '__' → logprob: -9.284707069396973
    10. 'k' → logprob: -9.534707069396973

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038080278784036636
    2. 'in' → logprob: -3.2880802154541016
    3. '<|end|>' → logprob: -10.538080215454102
    4. ' ' → logprob: -12.038080215454102
    5. 'range' → logprob: -12.913080215454102
    6. '	in' → logprob: -13.413080215454102
    7. '<|end|>' → logprob: -14.038080215454102
    8. 'In' → logprob: -14.163080215454102
    9. 's' → logprob: -15.413080215454102
    10. '_in' → logprob: -16.2880802154541

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '	range' → logprob: -17.625553131103516
    4. '(range' → logprob: -18.250553131103516
    5. 'in' → logprob: -18.625553131103516
    6. ' ' → logprob: -20.375553131103516
    7. '   ' → logprob: -20.500553131103516
    8. 'k' → logprob: -21.000553131103516
    9. '_range' → logprob: -21.125553131103516
    10. '```' → logprob: -21.375553131103516

Token 57: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.000556843588128686
    2. 'b' → logprob: -7.500556945800781
    3. '	b' → logprob: -12.500556945800781
    4. ')b' → logprob: -16.50055694580078
    5. '   ' → logprob: -16.75055694580078
    6. ' b' → logprob: -17.75055694580078
    7. '(' → logprob: -18.37555694580078
    8. ' (' → logprob: -18.37555694580078
    9. '  ' → logprob: -19.00055694580078
    10. '```' → logprob: -19.12555694580078

Token 58: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7007491588592529
    2. ')]' → logprob: -0.7007491588592529
    3. ']' → logprob: -4.950749397277832
    4. ')])' → logprob: -8.450749397277832
    5. ')],' → logprob: -8.450749397277832
    6. 'for' → logprob: -11.325749397277832
    7. ' )' → logprob: -11.575749397277832
    8. ' ' → logprob: -11.700749397277832
    9. ' for' → logprob: -11.950749397277832
    10. '])' → logprob: -12.075749397277832

Token 59: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4292095899581909
    2. 'for' → logprob: -1.054209589958191
    3. ')' → logprob: -8.05420970916748
    4. ' in' → logprob: -8.92920970916748
    5. ']' → logprob: -10.30420970916748
    6. '	for' → logprob: -11.55420970916748
    7. 'range' → logprob: -12.30420970916748
    8. 'in' → logprob: -12.42920970916748
    9. ' range' → logprob: -13.30420970916748
    10. '   ' → logprob: -13.67920970916748

Token 60: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002481842413544655
    2. ' i' → logprob: -6.002481937408447
    3. 'range' → logprob: -12.377481460571289
    4. ' range' → logprob: -13.127481460571289
    5. '_i' → logprob: -17.87748146057129
    6. 'I' → logprob: -18.00248146057129
    7. ' in' → logprob: -19.00248146057129
    8. '	i' → logprob: -19.12748146057129
    9. ' ' → logprob: -19.37748146057129
    10. 'a' → logprob: -20.37748146057129

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15000011026859283
    2. 'in' → logprob: -2.5250000953674316
    3. '(a' → logprob: -3.1500000953674316
    4. 'range' → logprob: -4.400000095367432
    5. '(range' → logprob: -5.775000095367432
    6. ' range' → logprob: -7.525000095367432
    7. '(' → logprob: -8.15000057220459
    8. ' (' → logprob: -9.52500057220459
    9. 'a' → logprob: -10.27500057220459
    10. '(in' → logprob: -10.52500057220459

Token 62: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693524360656738
    2. ' range' → logprob: -2.1269352436065674
    3. '(range' → logprob: -12.376935005187988
    4. 'a' → logprob: -13.001935005187988
    5. '	range' → logprob: -14.501935005187988
    6. ' xrange' → logprob: -16.251935958862305
    7. '_range' → logprob: -17.126935958862305
    8. ' a' → logprob: -17.251935958862305
    9. '(a' → logprob: -18.251935958862305
    10. '.range' → logprob: -18.626935958862305

Token 63: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00026264708139933646
    2. 'a' → logprob: -8.250262260437012
    3. '(' → logprob: -13.625262260437012
    4. ' a' → logprob: -16.750263214111328
    5. '	a' → logprob: -17.625263214111328
    6. ')a' → logprob: -17.750263214111328
    7. ' (' → logprob: -18.000263214111328
    8. '[a' → logprob: -18.250263214111328
    9. 'range' → logprob: -18.500263214111328
    10. '/a' → logprob: -18.500263214111328

Token 64: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0016891045961529016
    2. ']' → logprob: -6.5016889572143555
    3. ')' → logprob: -8.626688957214355
    4. ' ]' → logprob: -12.751688957214355
    5. ' )' → logprob: -13.501688957214355
    6. ')])' → logprob: -13.751688957214355
    7. '])]' → logprob: -14.251688957214355
    8. '])' → logprob: -15.126688957214355
    9. '   ' → logprob: -15.251688957214355
    10. ')],' → logprob: -15.376688957214355

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15589861571788788
    2. '
' → logprob: -3.0308985710144043
    3. '\' → logprob: -3.1558985710144043
    4. 'd' → logprob: -4.530898571014404
    5. '```' → logprob: -4.655898571014404
    6. '(' → logprob: -4.780898571014404
    7. '\n' → logprob: -5.155898571014404
    8. ' 
' → logprob: -5.780898571014404
    9. '(
' → logprob: -6.030898571014404
    10. '_' → logprob: -6.030898571014404

Token 66: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.00323807867243886
    2. '4' → logprob: -6.628238201141357
    3. 'list' → logprob: -6.753238201141357
    4. ' ' → logprob: -7.628238201141357
    5. '_list' → logprob: -9.0032377243042
    6. ' l' → logprob: -9.7532377243042
    7. '2' → logprob: -10.2532377243042
    8. ' input' → logprob: -11.2532377243042
    9. '  ' → logprob: -12.1282377243042
    10. '_' → logprob: -12.3782377243042

Token 67: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001963009126484394
    2. '4' → logprob: -6.251963138580322
    3. '<|end|>' → logprob: -10.751962661743164
    4. '1' → logprob: -11.876962661743164
    5. '```' → logprob: -12.876962661743164
    6. 'def' → logprob: -13.876962661743164
    7. '<|end|>' → logprob: -15.126962661743164
    8. '  ' → logprob: -15.626962661743164
    9. 'a' → logprob: -15.751962661743164
    10. 'd' → logprob: -15.939462661743164

Token 68: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.704273118884885e-07
    2. '_d' → logprob: -14.750000953674316
    3. 'a' → logprob: -15.750000953674316
    4. '(d' → logprob: -17.375
    5. 'def' → logprob: -17.375
    6. 'D' → logprob: -18.375
    7. ' d' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. '	d' → logprob: -19.0
    10. '>d' → logprob: -19.375

Token 69: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.08894731849431992
    2. '(' → logprob: -2.463947296142578
    3. '(A' → logprob: -13.088947296142578
    4. '(ai' → logprob: -13.588947296142578
    5. ' (' → logprob: -13.713947296142578
    6. '<|end|>' → logprob: -14.588947296142578
    7. 'a' → logprob: -15.088947296142578
    8. '(lambda' → logprob: -15.338947296142578
    9. '("("' → logprob: -15.588947296142578
    10. '```' → logprob: -15.588947296142578

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003541734768077731
    2. ',a' → logprob: -9.250353813171387
    3. ' ,' → logprob: -9.375353813171387
    4. '(' → logprob: -9.625353813171387
    5. '(a' → logprob: -9.625353813171387
    6. '<|end|>' → logprob: -11.000353813171387
    7. ')' → logprob: -11.250353813171387
    8. ',b' → logprob: -12.875353813171387
    9. 'a' → logprob: -13.000353813171387
    10. '_,' → logprob: -13.500353813171387

Token 71: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868713080883026
    2. ' b' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.761871337890625
    4. '   ' → logprob: -16.636871337890625
    5. '	b' → logprob: -17.386871337890625
    6. ',b' → logprob: -17.386871337890625
    7. '  ' → logprob: -18.011871337890625
    8. ',' → logprob: -18.511871337890625
    9. '```' → logprob: -19.011871337890625
    10. '    ' → logprob: -19.011871337890625

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004754751571454108
    2. ',c' → logprob: -7.7504754066467285
    3. ' ,' → logprob: -10.125475883483887
    4. '<|end|>' → logprob: -12.625475883483887
    5. 'c' → logprob: -14.750475883483887
    6. ')' → logprob: -15.375475883483887
    7. '‌,' → logprob: -15.875475883483887
    8. '，' → logprob: -15.875475883483887
    9. ',a' → logprob: -16.00047492980957
    10. ',C' → logprob: -16.50047492980957

Token 73: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.31326693296432495
    2. 'c' → logprob: -1.3132669925689697
    3. ',' → logprob: -12.68826675415039
    4. ' ' → logprob: -14.18826675415039
    5. ',c' → logprob: -14.18826675415039
    6. '<|end|>' → logprob: -15.06326675415039
    7. '	c' → logprob: -15.56326675415039
    8. '_c' → logprob: -16.68826675415039
    9. ')c' → logprob: -16.81326675415039
    10. '```' → logprob: -17.06326675415039

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.198043699143454e-05
    2. ' ,' → logprob: -9.500091552734375
    3. ',d' → logprob: -11.000091552734375
    4. ',b' → logprob: -16.125091552734375
    5. '，' → logprob: -16.375091552734375
    6. 'd' → logprob: -16.625091552734375
    7. ',a' → logprob: -16.875091552734375
    8. ')' → logprob: -17.625091552734375
    9. '<|end|>' → logprob: -17.750091552734375
    10. 's' → logprob: -17.875091552734375

Token 75: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25192928314208984
    2. 'd' → logprob: -1.5019292831420898
    3. ',d' → logprob: -16.126930236816406
    4. ' ' → logprob: -16.251930236816406
    5. ',' → logprob: -17.501930236816406
    6. ')d' → logprob: -17.751930236816406
    7. '<|end|>' → logprob: -18.876930236816406
    8. '	d' → logprob: -18.876930236816406
    9. '  ' → logprob: -19.876930236816406
    10. '>d' → logprob: -20.126930236816406

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ',e' → logprob: -9.875060081481934
    3. ' ,' → logprob: -11.750060081481934
    4. 'e' → logprob: -15.125060081481934
    5. ')' → logprob: -15.125060081481934
    6. ',a' → logprob: -16.37506103515625
    7. '，' → logprob: -16.50006103515625
    8. '),' → logprob: -17.50006103515625
    9. '```' → logprob: -17.50006103515625
    10. '‌,' → logprob: -17.75006103515625

Token 77: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31326231360435486
    2. ' e' → logprob: -1.3132623434066772
    3. ' ' → logprob: -14.813261985778809
    4. '	e' → logprob: -16.063262939453125
    5. '  ' → logprob: -16.688262939453125
    6. ')' → logprob: -17.063262939453125
    7. ')e' → logprob: -17.313262939453125
    8. '   ' → logprob: -17.563262939453125
    9. ',e' → logprob: -18.813262939453125
    10. 'ｅ' → logprob: -20.063262939453125

Token 78: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.8921695047756657e-05
    2. ' ):' → logprob: -11.125028610229492
    3. ')' → logprob: -12.125028610229492
    4. ',' → logprob: -12.375028610229492
    5. '):
' → logprob: -12.625028610229492
    6. ':' → logprob: -15.000028610229492
    7. ']:' → logprob: -15.875028610229492
    8. ' ' → logprob: -16.000028610229492
    9. '):

' → logprob: -16.125028610229492
    10. '）：' → logprob: -16.625028610229492

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.00031854258850216866
    2. 'return' → logprob: -8.50031852722168
    3. ' ' → logprob: -10.12531852722168
    4. ' ' → logprob: -10.37531852722168
    5. '<|end|>' → logprob: -10.87531852722168
    6. '	return' → logprob: -11.37531852722168
    7. ' [' → logprob: -13.25031852722168
    8. 'eturn' → logprob: -13.25031852722168
    9. ':return' → logprob: -13.25031852722168
    10. '    ' → logprob: -13.50031852722168

Token 80: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0012329687597230077
    2. ' [[' → logprob: -6.751233100891113
    3. '[list' → logprob: -9.876233100891113
    4. ' [[[' → logprob: -11.626233100891113
    5. '[' → logprob: -13.501233100891113
    6. '[a' → logprob: -14.251233100891113
    7. ' [' → logprob: -16.001232147216797
    8. '[['' → logprob: -16.376232147216797
    9. 'list' → logprob: -16.501232147216797
    10. ' list' → logprob: -17.501232147216797

Token 81: '[[' (ID: 26245)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.13046866655349731
    2. '[e' → logprob: -2.1304686069488525
    3. 'd' → logprob: -5.880468845367432
    4. '[c' → logprob: -8.005468368530273
    5. 'e' → logprob: -8.755468368530273
    6. ' [' → logprob: -8.880468368530273
    7. '[' → logprob: -9.630468368530273
    8. '[[' → logprob: -10.505468368530273
    9. '{' → logprob: -12.005468368530273
    10. '   ' → logprob: -12.755468368530273

Token 82: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.306760805164231e-05
    2. ' e' → logprob: -11.25001335144043
    3. '	e' → logprob: -18.25001335144043
    4. 'ｅ' → logprob: -19.00001335144043
    5. '
' → logprob: -19.87501335144043
    6. ''e' → logprob: -20.62501335144043
    7. ')e' → logprob: -21.00001335144043
    8. ' ' → logprob: -21.12501335144043
    9. '   ' → logprob: -21.12501335144043
    10. 'd' → logprob: -21.75001335144043

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.615255839889869e-05
    2. ']*' → logprob: -9.375096321105957
    3. ' ]' → logprob: -11.500096321105957
    4. '*' → logprob: -14.750096321105957
    5. '']' → logprob: -14.875096321105957
    6. ' *' → logprob: -15.750096321105957
    7. ')' → logprob: -15.875096321105957
    8. '"]' → logprob: -17.50009536743164
    9. ' for' → logprob: -17.50009536743164
    10. ' ' → logprob: -17.62509536743164

Token 84: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6821455359458923
    2. ' *' → logprob: -0.8071455359458923
    3. ']' → logprob: -3.557145595550537
    4. ']*' → logprob: -3.932145595550537
    5. ' ]' → logprob: -9.682145118713379
    6. ')' → logprob: -9.807145118713379
    7. ' ' → logprob: -9.932145118713379
    8. ' for' → logprob: -11.682145118713379
    9. ')*' → logprob: -12.057145118713379
    10. '```' → logprob: -12.432145118713379

Token 85: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003010233340319246
    2. ' d' → logprob: -8.500301361083984
    3. 'e' → logprob: -9.250301361083984
    4. '   ' → logprob: -14.625301361083984
    5. '  ' → logprob: -15.125301361083984
    6. ' ' → logprob: -15.375301361083984
    7. '```' → logprob: -16.000301361083984
    8. '	d' → logprob: -16.125301361083984
    9. 'c' → logprob: -16.500301361083984
    10. '(d' → logprob: -16.875301361083984

Token 86: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01653468608856201
    2. 'for' → logprob: -4.141534805297852
    3. ' ' → logprob: -7.766534805297852
    4. ')' → logprob: -9.641534805297852
    5. '<|end|>' → logprob: -12.266534805297852
    6. '	for' → logprob: -12.391534805297852
    7. ' ' → logprob: -13.891534805297852
    8. ' f' → logprob: -14.641534805297852
    9. ' )' → logprob: -15.016534805297852
    10. ']' → logprob: -15.141534805297852

Token 87: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8997737765312195
    2. ' i' → logprob: -1.3997738361358643
    3. 'k' → logprob: -1.5247738361358643
    4. ' k' → logprob: -2.7747738361358643
    5. 'j' → logprob: -3.5247738361358643
    6. ' j' → logprob: -4.024773597717285
    7. 'f' → logprob: -4.899773597717285
    8. ' f' → logprob: -5.024773597717285
    9. 'h' → logprob: -5.774773597717285
    10. ' h' → logprob: -6.899773597717285

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25208762288093567
    2. 'in' → logprob: -1.5020875930786133
    3. '<|end|>' → logprob: -8.877087593078613
    4. 'In' → logprob: -12.377087593078613
    5. '<|end|>' → logprob: -12.502087593078613
    6. ' ' → logprob: -12.502087593078613
    7. 'range' → logprob: -12.627087593078613
    8. '	in' → logprob: -13.752087593078613
    9. '_in' → logprob: -14.502087593078613
    10. 'I' → logprob: -15.252087593078613

Token 89: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868732452392578
    2. 'range' → logprob: -1.1368732452392578
    3. '	range' → logprob: -13.886873245239258
    4. '(range' → logprob: -14.636873245239258
    5. 'rang' → logprob: -15.136873245239258
    6. 'ran' → logprob: -15.886873245239258
    7. 'in' → logprob: -16.136873245239258
    8. '_range' → logprob: -16.511873245239258
    9. ' ' → logprob: -16.761873245239258
    10. 'e' → logprob: -16.886873245239258

Token 90: '(c' (ID: 2410)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.40815019607543945
    2. ' range' → logprob: -2.0331501960754395
    3. '(c' → logprob: -2.4081501960754395
    4. 'c' → logprob: -2.6581501960754395
    5. '(e' → logprob: -3.6581501960754395
    6. 'e' → logprob: -4.7831501960754395
    7. ' in' → logprob: -5.6581501960754395
    8. '(range' → logprob: -6.1581501960754395
    9. ' c' → logprob: -7.1581501960754395
    10. '(b' → logprob: -7.1581501960754395

Token 91: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036082904785871506
    2. ')]' → logprob: -3.4110829830169678
    3. ']' → logprob: -6.036082744598389
    4. ' )' → logprob: -10.536083221435547
    5. 'for' → logprob: -11.661083221435547
    6. ' ]' → logprob: -13.286083221435547
    7. ' for' → logprob: -13.286083221435547
    8. ' ' → logprob: -14.161083221435547
    9. ')])' → logprob: -14.161083221435547
    10. ')],' → logprob: -14.411083221435547

Token 92: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024758126586675644
    2. 'for' → logprob: -4.024758338928223
    3. ' in' → logprob: -5.024758338928223
    4. 'in' → logprob: -11.524758338928223
    5. '	for' → logprob: -13.024758338928223
    6. ' ' → logprob: -14.024758338928223
    7. ' range' → logprob: -16.024757385253906
    8. '    ' → logprob: -16.399757385253906
    9. '   ' → logprob: -17.399757385253906
    10. '<|end|>' → logprob: -17.524757385253906

Token 93: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759419798851013
    2. ' i' → logprob: -0.8259419798851013
    3. '	i' → logprob: -13.200942039489746
    4. '_i' → logprob: -14.450942039489746
    5. ' ' → logprob: -17.32594108581543
    6. 'k' → logprob: -17.57594108581543
    7. '_' → logprob: -18.32594108581543
    8. 'I' → logprob: -18.32594108581543
    9. '<|end|>' → logprob: -18.82594108581543
    10. ' ' → logprob: -19.57594108581543

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806202858686447
    2. 'in' → logprob: -3.28806209564209
    3. ' ' → logprob: -11.78806209564209
    4. 'range' → logprob: -12.03806209564209
    5. 'n' → logprob: -12.53806209564209
    6. '	in' → logprob: -13.66306209564209
    7. 'In' → logprob: -14.78806209564209
    8. '<|end|>' → logprob: -15.03806209564209
    9. 'd' → logprob: -15.16306209564209
    10. '  ' → logprob: -15.41306209564209

Token 95: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002477081725373864
    2. ' range' → logprob: -6.002477169036865
    3. '(range' → logprob: -13.502476692199707
    4. 'in' → logprob: -17.627477645874023
    5. '	range' → logprob: -18.627477645874023
    6. 'rang' → logprob: -20.127477645874023
    7. ' in' → logprob: -20.252477645874023
    8. 're' → logprob: -20.877477645874023
    9. 'ran' → logprob: -20.877477645874023
    10. '_range' → logprob: -20.877477645874023

Token 96: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005254268646240234
    2. 'b' → logprob: -5.25525426864624
    3. '	b' → logprob: -11.005254745483398
    4. ' (' → logprob: -13.005254745483398
    5. '(' → logprob: -14.130254745483398
    6. '   ' → logprob: -15.005254745483398
    7. ' b' → logprob: -15.005254745483398
    8. '(
' → logprob: -16.7552547454834
    9. '(d' → logprob: -17.0052547454834
    10. '```' → logprob: -17.1302547454834

Token 97: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.01914087124168873
    2. ')' → logprob: -4.019140720367432
    3. ']' → logprob: -7.019140720367432
    4. ' )' → logprob: -10.26914119720459
    5. ' ' → logprob: -10.39414119720459
    6. ' ]' → logprob: -11.39414119720459
    7. ')],' → logprob: -12.26914119720459
    8. ')])' → logprob: -12.89414119720459
    9. ')][' → logprob: -13.01914119720459
    10. '   ' → logprob: -13.14414119720459

Token 98: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5945751070976257
    2. ' in' → logprob: -1.0945751667022705
    3. 'for' → logprob: -2.2195751667022705
    4. 'in' → logprob: -5.594574928283691
    5. '<|end|>' → logprob: -7.219574928283691
    6. ')' → logprob: -8.469574928283691
    7. '	for' → logprob: -9.469574928283691
    8. ']' → logprob: -10.094574928283691
    9. ' ' → logprob: -10.219574928283691
    10. '   ' → logprob: -11.969574928283691

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002884521847590804
    2. 'i' → logprob: -5.877884387969971
    3. 'a' → logprob: -10.127884864807129
    4. ' a' → logprob: -10.502884864807129
    5. ' (' → logprob: -12.627884864807129
    6. ' range' → logprob: -13.127884864807129
    7. '(i' → logprob: -13.127884864807129
    8. '<|end|>' → logprob: -13.127884864807129
    9. 'range' → logprob: -13.627884864807129
    10. ' ' → logprob: -14.502884864807129

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019524158909916878
    2. 'in' → logprob: -4.019524097442627
    3. ' (' → logprob: -7.894524097442627
    4. '(' → logprob: -7.894524097442627
    5. '<|end|>' → logprob: -8.519524574279785
    6. '(range' → logprob: -8.769524574279785
    7. 'range' → logprob: -8.894524574279785
    8. ' range' → logprob: -9.144524574279785
    9. '(in' → logprob: -11.394524574279785
    10. ' ' → logprob: -11.894524574279785

Token 101: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27318519353866577
    2. 'range' → logprob: -1.5231852531433105
    3. 'a' → logprob: -4.0231852531433105
    4. ' a' → logprob: -5.7731852531433105
    5. '(a' → logprob: -11.148184776306152
    6. '(range' → logprob: -11.398184776306152
    7. ' (' → logprob: -15.773184776306152
    8. ' ' → logprob: -16.14818572998047
    9. ' xrange' → logprob: -16.64818572998047
    10. '	range' → logprob: -16.89818572998047

Token 102: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008155853138305247
    2. 'a' → logprob: -7.125815391540527
    3. ' (' → logprob: -12.375815391540527
    4. ' a' → logprob: -12.500815391540527
    5. '(' → logprob: -12.750815391540527
    6. '(
' → logprob: -15.750815391540527
    7. '	a' → logprob: -17.000816345214844
    8. '```' → logprob: -17.375816345214844
    9. ' ' → logprob: -18.000816345214844
    10. '   ' → logprob: -18.375816345214844

Token 103: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5772190093994141
    2. ')]' → logprob: -0.8272190093994141
    3. ')' → logprob: -6.702219009399414
    4. '])' → logprob: -9.952219009399414
    5. ')])' → logprob: -14.077219009399414
    6. ' ]' → logprob: -14.452219009399414
    7. '])]' → logprob: -14.452219009399414
    8. ']}' → logprob: -15.202219009399414
    9. ']]' → logprob: -15.452219009399414
    10. ']
' → logprob: -15.827219009399414

Token 104: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6399558782577515
    2. ' 
' → logprob: -1.8899558782577515
    3. '#' → logprob: -2.139955997467041
    4. ' ' → logprob: -3.264955997467041
    5. 'def' → logprob: -3.264955997467041
    6. '_' → logprob: -3.889955997467041
    7. '[' → logprob: -4.014955997467041
    8. '' → logprob: -4.139955997467041
    9. '(' → logprob: -4.264955997467041
    10. '  
' → logprob: -4.889955997467041

Token 105: ' ceil' (ID: 35964)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2610732913017273
    2. ' max' → logprob: -2.761073350906372
    3. ' input' → logprob: -3.136073350906372
    4. ' ' → logprob: -3.636073350906372
    5. ' main' → logprob: -4.011073112487793
    6. ' factorial' → logprob: -4.261073112487793
    7. ' sys' → logprob: -4.261073112487793
    8. ' int' → logprob: -4.886073112487793
    9. ' l' → logprob: -4.886073112487793
    10. '_' → logprob: -5.511073112487793

Token 106: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013111939188092947
    2. '_div' → logprob: -7.001311302185059
    3. ' (' → logprob: -8.751311302185059
    4. '(a' → logprob: -9.876311302185059
    5. '_' → logprob: -10.626311302185059
    6. '<|end|>' → logprob: -10.938811302185059
    7. 'div' → logprob: -11.063811302185059
    8. '((' → logprob: -11.313811302185059
    9. '(x' → logprob: -11.376311302185059
    10. '()' → logprob: -11.438811302185059

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14342597126960754
    2. '):' → logprob: -2.018425941467285
    3. ',x' → logprob: -8.643425941467285
    4. '(x' → logprob: -8.768425941467285
    5. '_div' → logprob: -9.268425941467285
    6. ' ,' → logprob: -9.518425941467285
    7. ':' → logprob: -9.643425941467285
    8. ')' → logprob: -9.643425941467285
    9. ' ):' → logprob: -9.768425941467285
    10. 'div' → logprob: -11.268425941467285

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1799391210079193
    2. ' y' → logprob: -1.8049391508102417
    3. ' ' → logprob: -9.304939270019531
    4. 'm' → logprob: -9.554939270019531
    5. ' m' → logprob: -11.304939270019531
    6. 'n' → logprob: -11.679939270019531
    7. 'd' → logprob: -12.679939270019531
    8. 'div' → logprob: -12.804939270019531
    9. ' n' → logprob: -13.679939270019531
    10. ')' → logprob: -14.054939270019531

Token 109: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010211274639004841
    2. ' ):' → logprob: -9.500102043151855
    3. ')' → logprob: -11.375102043151855
    4. '=' → logprob: -11.625102043151855
    5. '):
' → logprob: -12.000102043151855
    6. ':' → logprob: -15.625102043151855
    7. '):(' → logprob: -15.750102043151855
    8. ' ' → logprob: -16.250102996826172
    9. ')：' → logprob: -16.750102996826172
    10. '   ' → logprob: -17.375102996826172

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.692304253578186
    2. ')' → logprob: -1.692304253578186
    3. ' ' → logprob: -2.5673041343688965
    4. ' None' → logprob: -2.5673041343688965
    5. ' y' → logprob: -3.0673041343688965
    6. ' )' → logprob: -3.1923041343688965
    7. '0' → logprob: -3.3173041343688965
    8. ' x' → logprob: -3.8173041343688965
    9. 'None' → logprob: -5.1923041343688965
    10. 'y' → logprob: -5.9423041343688965

Token 111: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010437761375214905
    2. ')' → logprob: -9.375103950500488
    3. '):
' → logprob: -11.250103950500488
    4. ' ):' → logprob: -12.000103950500488
    5. ':' → logprob: -16.000104904174805
    6. ')：' → logprob: -16.000104904174805
    7. '）：' → logprob: -17.625104904174805
    8. '):(' → logprob: -17.750104904174805
    9. '):
' → logprob: -18.125104904174805
    10. ' ' → logprob: -18.250104904174805

Token 112: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22721505165100098
    2. '   ' → logprob: -1.602215051651001
    3. 'return' → logprob: -6.477214813232422
    4. ' ' → logprob: -9.227214813232422
    5. '    ' → logprob: -9.852214813232422
    6. ' import' → logprob: -9.852214813232422
    7. '	return' → logprob: -10.727214813232422
    8. ' from' → logprob: -11.727214813232422
    9. 'import' → logprob: -11.727214813232422
    10. ' if' → logprob: -11.852214813232422

Token 113: ' int' (ID: 677)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.030285632237792015
    2. '-' → logprob: -3.530285596847534
    3. '-(' → logprob: -7.780285835266113
    4. ' -' → logprob: -9.405285835266113
    5. ' (' → logprob: -10.655285835266113
    6. '((' → logprob: -12.530285835266113
    7. '-x' → logprob: -13.280285835266113
    8. ' ' → logprob: -13.405285835266113
    9. '1' → logprob: -13.780285835266113
    10. '(X' → logprob: -14.155285835266113

Token 114: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12792888283729553
    2. '(-' → logprob: -2.2529289722442627
    3. '-' → logprob: -4.502928733825684
    4. '((' → logprob: -5.627928733825684
    5. '(x' → logprob: -8.752928733825684
    6. '(-(' → logprob: -9.252928733825684
    7. '-(' → logprob: -10.252928733825684
    8. ' -' → logprob: -10.627928733825684
    9. '((-' → logprob: -13.627928733825684
    10. ' (' → logprob: -13.752928733825684

Token 115: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31394001841545105
    2. '(-' → logprob: -1.5639400482177734
    3. '-(' → logprob: -2.9389400482177734
    4. '-x' → logprob: -5.063940048217773
    5. '(-(' → logprob: -7.563940048217773
    6. '(' → logprob: -8.438940048217773
    7. '(x' → logprob: -9.438940048217773
    8. ' -' → logprob: -10.563940048217773
    9. '-p' → logprob: -11.563940048217773
    10. '-div' → logprob: -11.938940048217773

Token 116: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.125
    3. 'int' → logprob: -17.625
    4. '(x' → logprob: -21.25
    5. '	x' → logprob: -22.5
    6. '{x' → logprob: -23.875
    7. '
' → logprob: -25.0
    8. ')x' → logprob: -25.75
    9. '-x' → logprob: -26.25
    10. 'a' → logprob: -26.5

Token 117: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3134978413581848
    2. ' //' → logprob: -1.31349778175354
    3. '/' → logprob: -9.313497543334961
    4. '/y' → logprob: -9.563497543334961
    5. ' /' → logprob: -10.313497543334961
    6. 'y' → logprob: -10.938497543334961
    7. ' ' → logprob: -11.813497543334961
    8. ' ' → logprob: -12.438497543334961
    9. ' //
' → logprob: -12.563497543334961
    10. '```' → logprob: -12.563497543334961

Token 118: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. '	y' → logprob: -18.376928329467773
    4. ')y' → logprob: -20.126928329467773
    5. ' ' → logprob: -20.751928329467773
    6. '
' → logprob: -22.251928329467773
    7. '(y' → logprob: -22.376928329467773
    8. ' ' → logprob: -22.876928329467773
    9. '‘y' → logprob: -23.251928329467773
    10. ''y' → logprob: -23.251928329467773

Token 119: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.023251185193657875
    2. ')' → logprob: -3.7732512950897217
    3. '))
' → logprob: -13.0232515335083
    4. ' ))' → logprob: -13.2732515335083
    5. ')))' → logprob: -13.6482515335083
    6. ')
' → logprob: -15.2732515335083
    7. ' )' → logprob: -15.6482515335083
    8. '),' → logprob: -16.648250579833984
    9. '))

' → logprob: -17.398250579833984
    10. ' ' → logprob: -18.398250579833984

Token 120: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.531515896320343
    2. '
' → logprob: -1.9065158367156982
    3. '#' → logprob: -2.4065158367156982
    4. '\' → logprob: -3.0315158367156982
    5. '_' → logprob: -3.7815158367156982
    6. ' 
' → logprob: -4.281516075134277
    7. '\n' → logprob: -4.406516075134277
    8. 'n' → logprob: -4.531516075134277
    9. 'd' → logprob: -4.781516075134277
    10. '  
' → logprob: -5.031516075134277

Token 121: ' INT' (ID: 20104)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7728323340415955
    2. ' floor' → logprob: -1.2728323936462402
    3. 'pow' → logprob: -2.3978323936462402
    4. 'sum' → logprob: -3.1478323936462402
    5. 'copy' → logprob: -3.7728323936462402
    6. ' copy' → logprob: -4.27283239364624
    7. ' pow' → logprob: -4.39783239364624
    8. ' sum' → logprob: -4.64783239364624
    9. 'sin' → logprob: -5.27283239364624
    10. 'print' → logprob: -5.27283239364624

Token 122: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004255508247297257
    2. '()' → logprob: -8.000425338745117
    3. '():
' → logprob: -9.875425338745117
    4. ' ():' → logprob: -10.625425338745117
    5. '(' → logprob: -12.000425338745117
    6. '();' → logprob: -12.375425338745117
    7. '():

' → logprob: -14.125425338745117
    8. ' ()' → logprob: -14.125425338745117
    9. '()>' → logprob: -14.875425338745117
    10. '(x' → logprob: -15.000425338745117

Token 123: ' return' (ID: 622)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132796585559845
    2. ' int' → logprob: -1.313279628753662
    3. '(int' → logprob: -11.31328010559082
    4. ' ' → logprob: -12.56328010559082
    5. '=int' → logprob: -13.56328010559082
    6. '	int' → logprob: -14.18828010559082
    7. ' return' → logprob: -16.06328010559082
    8. ':int' → logprob: -16.68828010559082
    9. 'return' → logprob: -16.81328010559082
    10. '  ' → logprob: -17.93828010559082

Token 124: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003413031517993659
    2. ' int' → logprob: -8.000341415405273
    3. '(int' → logprob: -12.125341415405273
    4. '	int' → logprob: -15.625341415405273
    5. '[int' → logprob: -17.125341415405273
    6. 'i' → logprob: -17.250341415405273
    7. '=int' → logprob: -17.375341415405273
    8. 'in' → logprob: -17.750341415405273
    9. 'ints' → logprob: -18.375341415405273
    10. '<int' → logprob: -18.375341415405273

Token 125: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011006318964064121
    2. '(sys' → logprob: -4.7610063552856445
    3. '(' → logprob: -6.1360063552856445
    4. '()' → logprob: -8.511006355285645
    5. 'input' → logprob: -11.386006355285645
    6. '(inp' → logprob: -12.261006355285645
    7. '(int' → logprob: -13.136006355285645
    8. '(in' → logprob: -13.511006355285645
    9. '(i' → logprob: -13.761006355285645
    10. '(I' → logprob: -14.511006355285645

Token 126: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -4.3464544432936236e-05
    2. '()' → logprob: -10.250043869018555
    3. '()))' → logprob: -12.750043869018555
    4. '())
' → logprob: -13.000043869018555
    5. ' ())' → logprob: -13.250043869018555
    6. '().' → logprob: -14.125043869018555
    7. ')' → logprob: -16.000043869018555
    8. '();)' → logprob: -16.250043869018555
    9. '(' → logprob: -17.000043869018555
    10. '()
' → logprob: -17.125043869018555

Token 127: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022797346173319966
    2. ' def' → logprob: -9.375227928161621
    3. '_' → logprob: -9.875227928161621
    4. '()' → logprob: -10.750227928161621
    5. '```' → logprob: -11.125227928161621
    6. 'L' → logprob: -11.375227928161621
    7. '<|end|>' → logprob: -11.375227928161621
    8. '#' → logprob: -12.000227928161621
    9. 'S' → logprob: -12.750227928161621
    10. 'D' → logprob: -12.875227928161621

Token 128: ' MAP' (ID: 53455)
  Prédit: 'MAP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAP' → logprob: -0.16632744669914246
    2. ' MAP' → logprob: -1.9163274765014648
    3. 'LIST' → logprob: -5.666327476501465
    4. 'MI' → logprob: -7.041327476501465
    5. 'STR' → logprob: -7.291327476501465
    6. ' map' → logprob: -8.166327476501465
    7. ' LIST' → logprob: -8.291327476501465
    8. 'ST' → logprob: -9.291327476501465
    9. 'M' → logprob: -9.416327476501465
    10. ' MI' → logprob: -9.666327476501465

Token 129: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.282150536775589
    2. '():' → logprob: -1.4071505069732666
    3. '(){' → logprob: -8.032150268554688
    4. '()>' → logprob: -8.657150268554688
    5. '(lambda' → logprob: -9.407150268554688
    6. '()]' → logprob: -9.657150268554688
    7. '();' → logprob: -9.907150268554688
    8. '()=>' → logprob: -9.907150268554688
    9. '():
' → logprob: -10.157150268554688
    10. '().' → logprob: -10.407150268554688

Token 130: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6942524313926697
    2. 'map' → logprob: -0.6942524313926697
    3. ' map' → logprob: -7.3192524909973145
    4. ' list' → logprob: -7.9442524909973145
    5. 'lambda' → logprob: -9.444252014160156
    6. 'return' → logprob: -12.069252014160156
    7. '(map' → logprob: -13.444252014160156
    8. 'm' → logprob: -15.069252014160156
    9. ' lambda' → logprob: -16.194252014160156
    10. 'int' → logprob: -16.194252014160156

Token 131: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008626393973827362
    2. 'list' → logprob: -4.758626461029053
    3. 'lambda' → logprob: -11.383625984191895
    4. ' map' → logprob: -14.633625984191895
    5. '(map' → logprob: -16.75862693786621
    6. 'int' → logprob: -17.63362693786621
    7. '  ' → logprob: -18.38362693786621
    8. '	map' → logprob: -18.75862693786621
    9. 'm' → logprob: -18.88362693786621
    10. 'tuple' → logprob: -19.00862693786621

Token 132: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012166214582975954
    2. '(' → logprob: -9.7501220703125
    3. 'int' → logprob: -9.7501220703125
    4. 'list' → logprob: -13.3751220703125
    5. '<int' → logprob: -14.2501220703125
    6. '(list' → logprob: -14.2501220703125
    7. '(
' → logprob: -14.6251220703125
    8. '(lambda' → logprob: -14.6251220703125
    9. '[int' → logprob: -14.8751220703125
    10. '(str' → logprob: -15.3751220703125

Token 133: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7838987708091736
    2. '())' → logprob: -1.1588988304138184
    3. '()' → logprob: -1.6588988304138184
    4. '(' → logprob: -3.4088988304138184
    5. 'input' → logprob: -5.908898830413818
    6. ')' → logprob: -6.283898830413818
    7. '().' → logprob: -7.158898830413818
    8. '()]' → logprob: -9.03389835357666
    9. '(),' → logprob: -9.15889835357666
    10. ' input' → logprob: -9.53389835357666

Token 134: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.5491004129871726e-05
    2. ' input' → logprob: -10.000045776367188
    3. '<input' → logprob: -21.125045776367188
    4. 'sys' → logprob: -21.250045776367188
    5. '(input' → logprob: -21.375045776367188
    6. ' ' → logprob: -21.750045776367188
    7. '	input' → logprob: -21.750045776367188
    8. '_input' → logprob: -22.000045776367188
    9. '=input' → logprob: -23.125045776367188
    10. ',input' → logprob: -23.375045776367188

Token 135: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1756367712223437e-05
    2. '()' → logprob: -11.375011444091797
    3. ' ().' → logprob: -15.500011444091797
    4. '(' → logprob: -16.125011444091797
    5. '()
' → logprob: -20.000011444091797
    6. ')' → logprob: -20.875011444091797
    7. '())' → logprob: -21.125011444091797
    8. '.' → logprob: -21.750011444091797
    9. ' ()' → logprob: -22.000011444091797
    10. '()[' → logprob: -22.000011444091797

Token 136: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000158842682139948
    2. 'strip' → logprob: -8.75015926361084
    3. ' split' → logprob: -15.00015926361084
    4. 'rstrip' → logprob: -18.125158309936523
    5. '(split' → logprob: -18.250158309936523
    6. 'spl' → logprob: -19.125158309936523
    7. '.split' → logprob: -20.000158309936523
    8. '_split' → logprob: -20.875158309936523
    9. 's' → logprob: -21.250158309936523
    10. ')' → logprob: -22.125158309936523

Token 137: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004511411767452955
    2. '()' → logprob: -5.50451135635376
    3. ')' → logprob: -8.254511833190918
    4. '()))' → logprob: -8.754511833190918
    5. '())
' → logprob: -11.629511833190918
    6. '))' → logprob: -12.754511833190918
    7. ' ())' → logprob: -13.629511833190918
    8. '(' → logprob: -13.754511833190918
    9. '()
' → logprob: -14.879511833190918
    10. '()]' → logprob: -15.379511833190918

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0019135229522362351
    2. 'S' → logprob: -8.001913070678711
    3. 'from' → logprob: -8.251913070678711
    4. '#' → logprob: -8.501913070678711
    5. '\' → logprob: -8.751913070678711
    6. 'class' → logprob: -8.876913070678711
    7. 'N' → logprob: -9.501913070678711
    8. 'A' → logprob: -9.501913070678711
    9. '_' → logprob: -9.751913070678711
    10. 'n' → logprob: -9.876913070678711

Token 139: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.14760583639144897
    2. ' LIST' → logprob: -2.0226058959960938
    3. ' list' → logprob: -6.772605895996094
    4. 'STR' → logprob: -7.022605895996094
    5. 'list' → logprob: -7.147605895996094
    6. 'LI' → logprob: -7.397605895996094
    7. 'L' → logprob: -7.897605895996094
    8. 'S' → logprob: -8.022605895996094
    9. 'LS' → logprob: -8.147605895996094
    10. 'LIN' → logprob: -8.647605895996094

Token 140: '(N' (ID: 10564)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20234309136867523
    2. '():' → logprob: -1.7023431062698364
    3. '()>' → logprob: -8.577342987060547
    4. '()">' → logprob: -8.952342987060547
    5. '(' → logprob: -9.077342987060547
    6. '(){' → logprob: -9.202342987060547
    7. '();' → logprob: -9.452342987060547
    8. '():
' → logprob: -9.702342987060547
    9. '()]' → logprob: -9.952342987060547
    10. '()[' → logprob: -10.202342987060547

Token 141: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007549546426162124
    2. '():' → logprob: -7.6257548332214355
    3. '=' → logprob: -9.500755310058594
    4. '()' → logprob: -9.625755310058594
    5. ')' → logprob: -10.125755310058594
    6. ' ):' → logprob: -10.250755310058594
    7. '=None' → logprob: -10.625755310058594
    8. '(n' → logprob: -11.125755310058594
    9. '):
' → logprob: -12.375755310058594
    10. '(N' → logprob: -13.250755310058594

Token 142: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.621933451038785e-05
    2. '):
' → logprob: -10.375056266784668
    3. ')' → logprob: -11.375056266784668
    4. ' ):' → logprob: -11.625056266784668
    5. '=None' → logprob: -12.875056266784668
    6. '():' → logprob: -14.250056266784668
    7. '):

' → logprob: -15.000056266784668
    8. ',' → logprob: -15.125056266784668
    9. '):
' → logprob: -15.125056266784668
    10. '）：' → logprob: -16.00005531311035

Token 143: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5161071419715881
    2. 'list' → logprob: -1.0161070823669434
    3. ' return' → logprob: -3.5161070823669434
    4. ' list' → logprob: -4.516107082366943
    5. '[]' → logprob: -7.641107082366943
    6. 'map' → logprob: -10.891107559204102
    7. '[' → logprob: -12.266107559204102
    8. ' []' → logprob: -12.766107559204102
    9. '[list' → logprob: -13.891107559204102
    10. '0' → logprob: -14.266107559204102

Token 144: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005959240952506661
    2. '[list' → logprob: -7.500596046447754
    3. ' list' → logprob: -10.500596046447754
    4. '[]' → logprob: -11.250596046447754
    5. '(list' → logprob: -13.500596046447754
    6. '[' → logprob: -14.375596046447754
    7. '[int' → logprob: -15.000596046447754
    8. ':list' → logprob: -17.375595092773438
    9. '.list' → logprob: -18.125595092773438
    10. '=list' → logprob: -18.250595092773438

Token 145: '(M' (ID: 6103)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.010700537823140621
    2. '(' → logprob: -4.635700702667236
    3. '()' → logprob: -7.135700702667236
    4. '(
' → logprob: -9.760700225830078
    5. '(int' → logprob: -10.385700225830078
    6. '(input' → logprob: -11.010700225830078
    7. '([]' → logprob: -11.385700225830078
    8. 'map' → logprob: -11.885700225830078
    9. '(list' → logprob: -11.885700225830078
    10. '(M' → logprob: -12.510700225830078

Token 146: 'AP' (ID: 2685)
  Prédit: 'AP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AP' → logprob: -2.3915141355246305e-05
    2. 'ap' → logprob: -11.25002384185791
    3. '(AP' → logprob: -11.50002384185791
    4. 'APT' → logprob: -14.62502384185791
    5. 'A' → logprob: -15.50002384185791
    6. '
' → logprob: -16.750024795532227
    7. 'АП' → logprob: -16.875024795532227
    8. '()' → logprob: -17.625024795532227
    9. ' AP' → logprob: -17.750024795532227
    10. '(' → logprob: -18.250024795532227

Token 147: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6444145441055298
    2. '(N' → logprob: -1.1444145441055298
    3. '())' → logprob: -1.8944145441055298
    4. '()))' → logprob: -5.14441442489624
    5. '(' → logprob: -8.269414901733398
    6. '()))
' → logprob: -9.769414901733398
    7. '())
' → logprob: -10.144414901733398
    8. '()
' → logprob: -12.144414901733398
    9. '()`' → logprob: -12.644414901733398
    10. '))' → logprob: -12.894414901733398

Token 148: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021307668066583574
    2. '(' → logprob: -9.125212669372559
    3. 'def' → logprob: -10.125212669372559
    4. '()
' → logprob: -10.500212669372559
    5. '<|end|>' → logprob: -10.625212669372559
    6. '#' → logprob: -12.500212669372559
    7. '(N' → logprob: -12.750212669372559
    8. '()

' → logprob: -13.375212669372559
    9. '();' → logprob: -14.125212669372559
    10. '```' → logprob: -14.250212669372559

Token 149: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04859452322125435
    2. ' N' → logprob: -3.0485944747924805
    3. '(N' → logprob: -11.92359447479248
    4. ' not' → logprob: -14.79859447479248
    5. '	N' → logprob: -16.673595428466797
    6. '<N' → logprob: -18.173595428466797
    7. ' ' → logprob: -18.298595428466797
    8. ' (' → logprob: -18.423595428466797
    9. 'not' → logprob: -19.673595428466797
    10. ' ' → logprob: -19.673595428466797

Token 150: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.694286048412323
    2. ' is' → logprob: -0.694286048412323
    3. '==' → logprob: -6.944285869598389
    4. '()' → logprob: -9.569286346435547
    5. 'else' → logprob: -10.694286346435547
    6. '!=' → logprob: -10.819286346435547
    7. ')' → logprob: -10.944286346435547
    8. ')is' → logprob: -11.194286346435547
    9. '(is' → logprob: -11.819286346435547
    10. 'None' → logprob: -12.444286346435547

Token 151: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0002137882256647572
    2. ' None' → logprob: -8.500213623046875
    3. 'not' → logprob: -11.500213623046875
    4. 'none' → logprob: -16.250213623046875
    5. ' not' → logprob: -16.625213623046875
    6. '_None' → logprob: -17.250213623046875
    7. 'Not' → logprob: -17.625213623046875
    8. 'N' → logprob: -19.250213623046875
    9. '(None' → logprob: -19.375213623046875
    10. '=None' → logprob: -20.000213623046875

Token 152: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01818084716796875
    2. ' else' → logprob: -4.018180847167969
    3. '()' → logprob: -10.393180847167969
    4. '	else' → logprob: -16.01818084716797
    5. '_else' → logprob: -16.14318084716797
    6. '```' → logprob: -17.01818084716797
    7. '[]' → logprob: -17.39318084716797
    8. ' ' → logprob: -17.64318084716797
    9. 'elses' → logprob: -18.01818084716797
    10. '
' → logprob: -19.51818084716797

Token 153: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20398589968681335
    2. '[list' → logprob: -1.7039859294891357
    3. ' list' → logprob: -6.453985691070557
    4. '[' → logprob: -6.953985691070557
    5. '[List' → logprob: -11.203986167907715
    6. '[n' → logprob: -11.578986167907715
    7. '[int' → logprob: -12.203986167907715
    8. ' [' → logprob: -12.453986167907715
    9. '[m' → logprob: -13.328986167907715
    10. '[l' → logprob: -13.453986167907715

Token 154: 'INT' (ID: 7154)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005234713666141033
    2. 'INT' → logprob: -5.255234718322754
    3. ' int' → logprob: -14.505234718322754
    4. '
' → logprob: -16.005233764648438
    5. '_INT' → logprob: -16.130233764648438
    6. '_int' → logprob: -16.630233764648438
    7. '```' → logprob: -17.505233764648438
    8. 'Int' → logprob: -17.630233764648438
    9. '(int' → logprob: -17.630233764648438
    10. ' INT' → logprob: -17.755233764648438

Token 155: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9361264946837764e-07
    2. '()]' → logprob: -16.0
    3. '()
' → logprob: -17.125
    4. ' ()' → logprob: -17.375
    5. 'for' → logprob: -17.625
    6. '（）' → logprob: -18.125
    7. '(' → logprob: -18.375
    8. '()`' → logprob: -21.25
    9. '())' → logprob: -21.25
    10. '()=>' → logprob: -21.625

Token 156: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. 'for' → logprob: -13.875001907348633
    3. ' for' → logprob: -15.000001907348633
    4. '()]' → logprob: -16.625001907348633
    5. '()
' → logprob: -17.500001907348633
    6. ' ()' → logprob: -18.375001907348633
    7. ')' → logprob: -18.625001907348633
    8. '(' → logprob: -20.250001907348633
    9. ']' → logprob: -20.375001907348633
    10. '())' → logprob: -20.375001907348633

Token 157: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005776273086667061
    2. '_i' → logprob: -5.380776405334473
    3. '_in' → logprob: -7.255776405334473
    4. '_range' → logprob: -8.755776405334473
    5. ' in' → logprob: -9.005776405334473
    6. ' _' → logprob: -9.880776405334473
    7. 'i' → logprob: -10.255776405334473
    8. '(' → logprob: -10.880776405334473
    9. '_iter' → logprob: -11.880776405334473
    10. '_x' → logprob: -12.380776405334473

Token 158: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5819573998451233
    2. ' in' → logprob: -0.8319573998451233
    3. 'range' → logprob: -5.2069573402404785
    4. ' range' → logprob: -7.7069573402404785
    5. '(range' → logprob: -10.081957817077637
    6. '_' → logprob: -10.831957817077637
    7. '(' → logprob: -12.331957817077637
    8. 'i' → logprob: -13.081957817077637
    9. 's' → logprob: -14.081957817077637
    10. '	range' → logprob: -14.456957817077637

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -16.125709533691406
    4. '(range' → logprob: -17.500709533691406
    5. 'rang' → logprob: -18.875709533691406
    6. 'r' → logprob: -19.750709533691406
    7. 'ran' → logprob: -20.000709533691406
    8. 'ra' → logprob: -20.250709533691406
    9. ' ' → logprob: -20.625709533691406
    10. '  ' → logprob: -21.000709533691406

Token 160: '(N' (ID: 10564)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.018761536106467247
    2. 'range' → logprob: -4.51876163482666
    3. ' range' → logprob: -5.26876163482666
    4. '(N' → logprob: -6.01876163482666
    5. '(' → logprob: -9.26876163482666
    6. '(r' → logprob: -13.26876163482666
    7. '	range' → logprob: -13.51876163482666
    8. '()' → logprob: -13.64376163482666
    9. '_range' → logprob: -13.89376163482666
    10. '(R' → logprob: -14.51876163482666

Token 161: ')]
' (ID: 11587)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.012705412693321705
    2. ')]' → logprob: -4.762705326080322
    3. ']' → logprob: -5.512705326080322
    4. ']()' → logprob: -10.26270580291748
    5. '())' → logprob: -12.01270580291748
    6. '()' → logprob: -12.26270580291748
    7. '()]
' → logprob: -14.13770580291748
    8. ')' → logprob: -15.51270580291748
    9. '(' → logprob: -15.63770580291748
    10. ' ]' → logprob: -15.76270580291748

Token 162: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5675956010818481
    2. '<|end|>' → logprob: -1.3175956010818481
    3. '#' → logprob: -2.9425954818725586
    4. '(' → logprob: -3.3175954818725586
    5. '\' → logprob: -4.567595481872559
    6. ' ' → logprob: -4.692595481872559
    7. '
' → logprob: -4.942595481872559
    8. 's' → logprob: -5.192595481872559
    9. '(n' → logprob: -5.192595481872559
    10. '\n' → logprob: -5.317595481872559

Token 163: ' Yes' (ID: 11377)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4725186824798584
    2. ' print' → logprob: -1.9725186824798584
    3. 'STR' → logprob: -2.4725186824798584
    4. 'main' → logprob: -3.5975186824798584
    5. ' YES' → logprob: -3.9725186824798584
    6. 'print' → logprob: -4.2225189208984375
    7. ' solve' → logprob: -4.3475189208984375
    8. ' STR' → logprob: -4.3475189208984375
    9. 'S' → logprob: -4.5975189208984375
    10. ' yes' → logprob: -4.7225189208984375

Token 164: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0042447238229215145
    2. '()' → logprob: -6.004244804382324
    3. '():
' → logprob: -6.379244804382324
    4. '(' → logprob: -10.129244804382324
    5. ' ():' → logprob: -12.379244804382324
    6. '()
' → logprob: -12.504244804382324
    7. '();' → logprob: -12.629244804382324
    8. '():
' → logprob: -13.254244804382324
    9. '()\' → logprob: -13.566744804382324
    10. 'No' → logprob: -13.629244804382324

Token 165: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5774363875389099
    2. 'print' → logprob: -0.8274363875389099
    3. ' return' → logprob: -7.202436447143555
    4. '   ' → logprob: -7.452436447143555
    5. 'return' → logprob: -9.327436447143555
    6. '	print' → logprob: -9.702436447143555
    7. '
' → logprob: -11.702436447143555
    8. ' ' → logprob: -12.202436447143555
    9. ' sys' → logprob: -13.327436447143555
    10. '    
' → logprob: -13.452436447143555

Token 166: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01563473418354988
    2. '(' → logprob: -4.515634536743164
    3. '('' → logprob: -5.390634536743164
    4. '(
' → logprob: -11.265634536743164
    5. ' ("' → logprob: -12.890634536743164
    6. '()' → logprob: -14.390634536743164
    7. '("""' → logprob: -14.640634536743164
    8. '(`' → logprob: -15.015634536743164
    9. '(("' → logprob: -15.265634536743164
    10. '(*' → logprob: -15.890634536743164

Token 167: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.5332478142227046e-05
    2. 'YES' → logprob: -11.375015258789062
    3. ' Yes' → logprob: -12.500015258789062
    4. 'Y' → logprob: -18.125015258789062
    5. 'Ye' → logprob: -19.000015258789062
    6. 'Hello' → logprob: -19.125015258789062
    7. '_yes' → logprob: -19.250015258789062
    8. 'Yeah' → logprob: -19.375015258789062
    9. ''' → logprob: -19.375015258789062
    10. '“Yes' → logprob: -19.500015258789062

Token 168: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00013679367839358747
    2. '')
' → logprob: -9.250136375427246
    3. '()' → logprob: -10.125136375427246
    4. ')' → logprob: -15.250136375427246
    5. ''' → logprob: -16.250137329101562
    6. '")' → logprob: -16.250137329101562
    7. '')
' → logprob: -16.625137329101562
    8. '')

' → logprob: -17.500137329101562
    9. '');' → logprob: -17.500137329101562
    10. '')"' → logprob: -19.000137329101562

Token 169: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.4121114822482923e-06
    2. 'No' → logprob: -12.750003814697266
    3. ' def' → logprob: -15.625003814697266
    4. '
' → logprob: -16.125003814697266
    5. 'Def' → logprob: -16.500003814697266
    6. '\' → logprob: -18.125003814697266
    7. '#' → logprob: -18.375003814697266
    8. 'de' → logprob: -19.000003814697266
    9. '  
' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 170: ' No' (ID: 3004)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.5759593844413757
    2. ' No' → logprob: -0.8259593844413757
    3. ' ' → logprob: -11.325959205627441
    4. 'NO' → logprob: -13.325959205627441
    5. '_No' → logprob: -13.325959205627441
    6. ' no' → logprob: -13.450959205627441
    7. ' NO' → logprob: -14.075959205627441
    8. 'def' → logprob: -14.200959205627441
    9. 'Yes' → logprob: -14.700959205627441
    10. '_no' → logprob: -14.950959205627441

Token 171: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005237429868429899
    2. '()' → logprob: -5.255237579345703
    3. '():
' → logprob: -13.005237579345703
    4. ' ():' → logprob: -14.755237579345703
    5. '()>' → logprob: -15.130237579345703
    6. '(' → logprob: -15.255237579345703
    7. ' ()' → logprob: -16.130237579345703
    8. '()
' → logprob: -16.505237579345703
    9. '();' → logprob: -16.630237579345703
    10. ':' → logprob: -17.005237579345703

Token 172: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.014165744185447693
    2. 'print' → logprob: -4.264165878295898
    3. ' pass' → logprob: -14.389165878295898
    4. '(print' → logprob: -14.514165878295898
    5. ' ' → logprob: -14.889165878295898
    6. '()' → logprob: -15.139165878295898
    7. ' return' → logprob: -15.764165878295898
    8. ' ' → logprob: -16.5141658782959
    9. ' ()' → logprob: -16.8891658782959
    10. '(' → logprob: -17.2641658782959

Token 173: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.005297673400491476
    2. '()' → logprob: -5.630297660827637
    3. '(' → logprob: -6.380297660827637
    4. '("' → logprob: -14.255297660827637
    5. ''' → logprob: -16.130298614501953
    6. '(('' → logprob: -16.130298614501953
    7. '(`' → logprob: -16.255298614501953
    8. '('\' → logprob: -16.255298614501953
    9. '(\'' → logprob: -16.630298614501953
    10. '(
' → logprob: -16.755298614501953

Token 174: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.339278580620885e-06
    2. ''' → logprob: -13.250001907348633
    3. '')' → logprob: -14.875001907348633
    4. 'Yes' → logprob: -15.750001907348633
    5. ' No' → logprob: -18.500001907348633
    6. '')
' → logprob: -18.875001907348633
    7. 'NO' → logprob: -19.250001907348633
    8. 'N' → logprob: -19.750001907348633
    9. '('' → logprob: -19.875001907348633
    10. 'None' → logprob: -20.125001907348633

Token 175: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005426562391221523
    2. '()' → logprob: -5.255426406860352
    3. '')
' → logprob: -9.255426406860352
    4. ')' → logprob: -9.255426406860352
    5. ''' → logprob: -14.505426406860352
    6. '")' → logprob: -15.130426406860352
    7. '('' → logprob: -15.130426406860352
    8. '())' → logprob: -15.380426406860352
    9. '')

' → logprob: -15.880426406860352
    10. '()
' → logprob: -16.00542640686035

Token 176: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0011147352633997798
    2. 'from' → logprob: -7.376114845275879
    3. '#' → logprob: -8.251114845275879
    4. 'a' → logprob: -9.376114845275879
    5. 'import' → logprob: -10.251114845275879
    6. 'A' → logprob: -10.501114845275879
    7. 'class' → logprob: -10.626114845275879
    8. 'Yes' → logprob: -11.001114845275879
    9. '```' → logprob: -11.626114845275879
    10. '
' → logprob: -11.751114845275879

Token 177: ' YES' (ID: 32968)
  Prédit: ' Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Yes' → logprob: -0.8772207498550415
    2. 'Yes' → logprob: -1.0022207498550415
    3. ' print' → logprob: -3.252220630645752
    4. 'def' → logprob: -3.377220630645752
    5. ' ' → logprob: -3.752220630645752
    6. ' def' → logprob: -3.877220630645752
    7. '   ' → logprob: -4.502220630645752
    8. ' y' → logprob: -4.627220630645752
    9. 'print' → logprob: -4.627220630645752
    10. ' YES' → logprob: -4.877220630645752

Token 178: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.751746746478602e-05
    2. '()' → logprob: -10.00004768371582
    3. '():
' → logprob: -13.25004768371582
    4. ' ():' → logprob: -15.12504768371582
    5. '():
' → logprob: -18.25004768371582
    6. '();' → logprob: -18.87504768371582
    7. '():

' → logprob: -20.37504768371582
    8. '()`' → logprob: -20.62504768371582
    9. '()>' → logprob: -20.87504768371582
    10. ' ()' → logprob: -21.25004768371582

Token 179: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16022524237632751
    2. ' print' → logprob: -1.91022527217865
    3. '(print' → logprob: -14.910224914550781
    4. '	print' → logprob: -15.035224914550781
    5. '
' → logprob: -15.535224914550781
    6. '```' → logprob: -15.910224914550781
    7. 'def' → logprob: -16.66022491455078
    8. '   ' → logprob: -17.16022491455078
    9. '.print' → logprob: -18.28522491455078
    10. ' ' → logprob: -18.53522491455078

Token 180: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. '("' → logprob: -13.50003719329834
    4. '(
' → logprob: -16.875036239624023
    5. ''' → logprob: -20.000036239624023
    6. '(

' → logprob: -21.000036239624023
    7. '(\'' → logprob: -21.375036239624023
    8. '()' → logprob: -21.500036239624023
    9. ''S' → logprob: -22.000036239624023
    10. '(('' → logprob: -22.250036239624023

Token 181: 'YES' (ID: 31958)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006856743711978197
    2. 'YES' → logprob: -5.006856918334961
    3. 'Yes' → logprob: -8.881856918334961
    4. '"' → logprob: -13.381856918334961
    5. '('' → logprob: -14.506856918334961
    6. ''S' → logprob: -15.631856918334961
    7. ' '' → logprob: -16.00685691833496
    8. ''A' → logprob: -16.63185691833496
    9. ''D' → logprob: -17.00685691833496
    10. '
' → logprob: -17.25685691833496

Token 182: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -9.162282367469743e-05
    2. '')
' → logprob: -9.750091552734375
    3. '()' → logprob: -10.375091552734375
    4. ')' → logprob: -13.375091552734375
    5. '")' → logprob: -15.750091552734375
    6. '')

' → logprob: -16.000091552734375
    7. ''' → logprob: -16.125091552734375
    8. '('' → logprob: -16.500091552734375
    9. '')
' → logprob: -17.250091552734375
    10. '');' → logprob: -18.875091552734375

Token 183: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0206720617134124e-05
    2. '()' → logprob: -12.25001049041748
    3. ' def' → logprob: -12.87501049041748
    4. '<|end|>' → logprob: -13.37501049041748
    5. '()
' → logprob: -14.37501049041748
    6. '(' → logprob: -15.50001049041748
    7. '
' → logprob: -15.87501049041748
    8. '(def' → logprob: -15.87501049041748
    9. '```' → logprob: -16.625009536743164
    10. '\' → logprob: -16.875009536743164

Token 184: ' NO' (ID: 9319)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.04868729040026665
    2. 'No' → logprob: -3.048687219619751
    3. ' NO' → logprob: -9.673686981201172
    4. 'def' → logprob: -11.048686981201172
    5. ' No' → logprob: -11.673686981201172
    6. 'N' → logprob: -12.048686981201172
    7. 'print' → logprob: -12.798686981201172
    8. 'no' → logprob: -13.298686981201172
    9. ''' → logprob: -14.173686981201172
    10. '_NO' → logprob: -14.298686981201172

Token 185: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3868864178657532
    2. '():' → logprob: -1.1368863582611084
    3. '()
' → logprob: -11.761886596679688
    4. '():
' → logprob: -12.511886596679688
    5. '())' → logprob: -13.636886596679688
    6. '()>' → logprob: -14.511886596679688
    7. '();' → logprob: -14.886886596679688
    8. '(' → logprob: -14.886886596679688
    9. '()<' → logprob: -15.261886596679688
    10. '()`' → logprob: -15.386886596679688

Token 186: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6931492686271667
    2. ' print' → logprob: -0.6931492686271667
    3. '(print' → logprob: -13.19314956665039
    4. '	print' → logprob: -16.44314956665039
    5. '()' → logprob: -17.19314956665039
    6. ' ' → logprob: -17.56814956665039
    7. '```' → logprob: -18.69314956665039
    8. '.print' → logprob: -18.69314956665039
    9. '   ' → logprob: -18.94314956665039
    10. '(' → logprob: -19.19314956665039

Token 187: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.20324435830116272
    2. '()' → logprob: -1.7032443284988403
    3. '(' → logprob: -6.328244209289551
    4. '()
' → logprob: -10.82824420928955
    5. ''' → logprob: -11.32824420928955
    6. '('\' → logprob: -12.07824420928955
    7. '("' → logprob: -13.20324420928955
    8. '(
' → logprob: -13.45324420928955
    9. '()='' → logprob: -13.95324420928955
    10. '()

' → logprob: -14.57824420928955

Token 188: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0012763076229020953
    2. ''' → logprob: -7.25127649307251
    3. 'No' → logprob: -7.50127649307251
    4. '')' → logprob: -11.251276016235352
    5. ''N' → logprob: -15.376276016235352
    6. ' NO' → logprob: -15.501276016235352
    7. '"No' → logprob: -15.876276016235352
    8. '')
' → logprob: -16.25127601623535
    9. 'N' → logprob: -16.25127601623535
    10. '(NO' → logprob: -17.25127601623535

Token 189: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.11422764509916306
    2. ')' → logprob: -2.614227533340454
    3. '()' → logprob: -3.364227533340454
    4. '')
' → logprob: -9.739227294921875
    5. '")' → logprob: -10.614227294921875
    6. ''' → logprob: -10.989227294921875
    7. '())' → logprob: -11.239227294921875
    8. 'def' → logprob: -11.614227294921875
    9. '()
' → logprob: -13.114227294921875
    10. '#' → logprob: -13.239227294921875

Token 190: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008209453895688057
    2. 'class' → logprob: -5.383209228515625
    3. 'from' → logprob: -6.883209228515625
    4. '#' → logprob: -7.258209228515625
    5. 'import' → logprob: -7.758209228515625
    6. 'd' → logprob: -7.883209228515625
    7. 'n' → logprob: -8.383209228515625
    8. 'N' → logprob: -8.383209228515625
    9. 'a' → logprob: -8.883209228515625
    10. 'A' → logprob: -9.383209228515625

Token 191: '.set' (ID: 1230)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.18550923466682434
    2. '.stdout' → logprob: -2.185509204864502
    3. '.' → logprob: -2.935509204864502
    4. '.stdin' → logprob: -6.185509204864502
    5. '.stderr' → logprob: -6.935509204864502
    6. '.argv' → logprob: -7.685509204864502
    7. '.path' → logprob: -8.68550968170166
    8. '.version' → logprob: -9.68550968170166
    9. '.setdefault' → logprob: -10.56050968170166
    10. '.set' → logprob: -10.68550968170166

Token 192: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -8.709308167453855e-05
    2. 'set' → logprob: -9.375086784362793
    3. 'limit' → logprob: -14.875086784362793
    4. 'stdin' → logprob: -14.875086784362793
    5. 're' → logprob: -15.000086784362793
    6. ' recursion' → logprob: -15.625086784362793
    7. 'stdout' → logprob: -15.750086784362793
    8. 'Rec' → logprob: -15.875086784362793
    9. '_rec' → logprob: -16.12508773803711
    10. 'trace' → logprob: -16.12508773803711

Token 193: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -2.696889623621246e-06
    2. 'ursive' → logprob: -13.75000286102295
    3. 'limit' → logprob: -14.37500286102295
    4. 'urs' → logprob: -14.50000286102295
    5. 'ursor' → logprob: -15.25000286102295
    6. 'ur' → logprob: -15.50000286102295
    7. 'usion' → logprob: -16.375001907348633
    8. 'ursively' → logprob: -18.250001907348633
    9. '```' → logprob: -19.250001907348633
    10. 'ision' → logprob: -19.500001907348633

Token 194: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.9361264946837764e-07
    2. ' limit' → logprob: -16.5
    3. 'lim' → logprob: -16.625
    4. '_limit' → logprob: -16.875
    5. 'depth' → logprob: -18.125
    6. 'Limit' → logprob: -19.125
    7. '-limit' → logprob: -19.625
    8. '(limit' → logprob: -20.5
    9. '.limit' → logprob: -20.75
    10. 'limits' → logprob: -22.5

Token 195: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '((' → logprob: -16.625
    3. '(int' → logprob: -16.75
    4. '(
' → logprob: -16.875
    5. ' (' → logprob: -19.125
    6. '100' → logprob: -19.875
    7. '()' → logprob: -20.0
    8. '10' → logprob: -21.0
    9. '(pow' → logprob: -21.125
    10. '250' → logprob: -22.0

Token 196: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.710618905955926e-05
    2. '100' → logprob: -9.250097274780273
    3. 'pow' → logprob: -14.750097274780273
    4. '410' → logprob: -16.000097274780273
    5. '200' → logprob: -16.250097274780273
    6. '１０' → logprob: -16.250097274780273
    7. '300' → logprob: -16.625097274780273
    8. ' ' → logprob: -17.000097274780273
    9. '500' → logprob: -17.125097274780273
    10. '2' → logprob: -18.000097274780273

Token 197: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0007064753444865346
    2. '7' → logprob: -7.375706672668457
    3. '00' → logprob: -10.625706672668457
    4. '*' → logprob: -11.000706672668457
    5. '9' → logprob: -11.250706672668457
    6. '8' → logprob: -11.625706672668457
    7. '0' → logprob: -11.875706672668457
    8. '07' → logprob: -12.125706672668457
    9. '```' → logprob: -13.500706672668457
    10. '6' → logprob: -13.750706672668457

Token 198: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.31327512860298157
    2. '7' → logprob: -1.3132750988006592
    3. '8' → logprob: -11.313275337219238
    4. '**' → logprob: -14.188275337219238
    5. '+' → logprob: -15.563275337219238
    6. '```' → logprob: -15.938275337219238
    7. '10' → logprob: -17.063274383544922
    8. '

' → logprob: -17.438274383544922
    9. '``' → logprob: -17.438274383544922
    10. '
' → logprob: -17.688274383544922

Token 199: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.4740925133228302
    2. '9' → logprob: -0.9740924835205078
    3. '8' → logprob: -11.099092483520508
    4. '**' → logprob: -15.599092483520508
    5. '+' → logprob: -15.724092483520508
    6. '```' → logprob: -17.474092483520508
    7. '

' → logprob: -17.724092483520508
    8. '10' → logprob: -17.849092483520508
    9. '``' → logprob: -18.349092483520508
    10. '"' → logprob: -18.474092483520508

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.875
    4. '))' → logprob: -19.625
    5. ')

' → logprob: -20.0
    6. ')
' → logprob: -20.375
    7. '),' → logprob: -20.75
    8. ')`' → logprob: -20.75
    9. ')}' → logprob: -21.0
    10. '}' → logprob: -21.25

Token 201: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10823903977870941
    2. 'N' → logprob: -2.983238935470581
    3. 'n' → logprob: -3.983238935470581
    4. 'class' → logprob: -4.48323917388916
    5. 'INF' → logprob: -4.60823917388916
    6. 'MOD' → logprob: -5.23323917388916
    7. 'from' → logprob: -5.73323917388916
    8. '#' → logprob: -6.73323917388916
    9. 'import' → logprob: -7.23323917388916
    10. 'H' → logprob: -7.98323917388916

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10078851878643036
    2. '=' → logprob: -2.3507885932922363
    3. '=int' → logprob: -7.475788593292236
    4. '=float' → logprob: -11.350788116455078
    5. '=sys' → logprob: -13.225788116455078
    6. '＝' → logprob: -14.100788116455078
    7. ' ' → logprob: -15.600788116455078
    8. ' =
' → logprob: -16.225788116455078
    9. '=
' → logprob: -16.350788116455078
    10. '=

' → logprob: -16.725788116455078

Token 203: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.615255839889869e-05
    2. 'float' → logprob: -9.375096321105957
    3. '1' → logprob: -11.625096321105957
    4. ' ' → logprob: -14.000096321105957
    5. '100' → logprob: -14.375096321105957
    6. '(' → logprob: -15.500096321105957
    7. ' float' → logprob: -15.500096321105957
    8. '2' → logprob: -15.625096321105957
    9. 'pow' → logprob: -16.00009536743164
    10. '4' → logprob: -16.12509536743164

Token 204: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0017274183919653296
    2. 'float' → logprob: -6.37672758102417
    3. '1' → logprob: -10.751727104187012
    4. ' float' → logprob: -13.376727104187012
    5. '100' → logprob: -14.501727104187012
    6. '2' → logprob: -14.626727104187012
    7. ' ' → logprob: -14.626727104187012
    8. '(' → logprob: -14.876727104187012
    9. '4' → logprob: -15.876727104187012
    10. 'pow' → logprob: -16.001728057861328

Token 205: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.3199574947357178
    2. '15' → logprob: -1.3199574947357178
    3. '16' → logprob: -5.319957733154297
    4. '+' → logprob: -7.069957733154297
    5. '10' → logprob: -7.694957733154297
    6. '9' → logprob: -8.569957733154297
    7. '17' → logprob: -9.069957733154297
    8. '19' → logprob: -9.944957733154297
    9. '20' → logprob: -9.944957733154297
    10. '```' → logprob: -10.319957733154297

Token 206: ' ' (ID: 220)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.12724630534648895
    2. '15' → logprob: -2.127246379852295
    3. '20' → logprob: -8.752245903015137
    4. '16' → logprob: -9.627245903015137
    5. '9' → logprob: -10.127245903015137
    6. '19' → logprob: -10.252245903015137
    7. '10' → logprob: -11.377245903015137
    8. '12' → logprob: -12.377245903015137
    9. '13' → logprob: -13.377245903015137
    10. '17' → logprob: -13.627245903015137

Token 207: '18' (ID: 1157)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.6945756077766418
    2. '18' → logprob: -0.6945756077766418
    3. '9' → logprob: -7.319575786590576
    4. '20' → logprob: -7.569575786590576
    5. '16' → logprob: -9.069575309753418
    6. '10' → logprob: -9.569575309753418
    7. '19' → logprob: -9.944575309753418
    8. '12' → logprob: -11.569575309753418
    9. '13' → logprob: -12.819575309753418
    10. '17' → logprob: -12.944575309753418

Token 208: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008657239377498627
    2. '#' → logprob: -6.133657455444336
    3. 'n' → logprob: -6.133657455444336
    4. 'from' → logprob: -6.133657455444336
    5. 'N' → logprob: -6.633657455444336
    6. 'class' → logprob: -8.258657455444336
    7. 'import' → logprob: -8.758657455444336
    8. 'MOD' → logprob: -9.383657455444336
    9. 'a' → logprob: -9.758657455444336
    10. 'A' → logprob: -10.133657455444336

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22545000910758972
    2. '=' → logprob: -1.600450038909912
    3. ' =
' → logprob: -10.850449562072754
    4. ',' → logprob: -11.475449562072754
    5. ' ' → logprob: -12.850449562072754
    6. ')' → logprob: -13.975449562072754
    7. '=

' → logprob: -14.225449562072754
    8. ':' → logprob: -14.475449562072754
    9. ' ,' → logprob: -14.475449562072754
    10. ' =)' → logprob: -14.725449562072754

Token 211: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3871261179447174
    2. '10' → logprob: -1.137126088142395
    3. '998' → logprob: -8.762125968933105
    4. '100' → logprob: -9.637125968933105
    5. '1' → logprob: -10.512125968933105
    6. '9' → logprob: -13.512125968933105
    7. '```' → logprob: -13.512125968933105
    8. ' 
' → logprob: -14.387125968933105
    9. 'int' → logprob: -14.762125968933105
    10. 'pow' → logprob: -14.762125968933105

Token 212: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02092966064810753
    2. '998' → logprob: -4.02092981338501
    3. '100' → logprob: -5.89592981338501
    4. '1' → logprob: -11.270929336547852
    5. ' ' → logprob: -11.770929336547852
    6. 'int' → logprob: -13.395929336547852
    7. '```' → logprob: -13.895929336547852
    8. '(' → logprob: -14.020929336547852
    9. '１０' → logprob: -14.895929336547852
    10. '999' → logprob: -15.270929336547852

Token 213: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003469057264737785
    2. '**' → logprob: -8.625347137451172
    3. '09' → logprob: -9.250347137451172
    4. '+' → logprob: -10.250347137451172
    5. '```' → logprob: -10.750347137451172
    6. ' ' → logprob: -11.250347137451172
    7. '``' → logprob: -15.375347137451172
    8. '000' → logprob: -15.375347137451172
    9. '^' → logprob: -15.500347137451172
    10. '18' → logprob: -15.500347137451172

Token 214: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.9153885558771435e-06
    2. '09' → logprob: -12.250005722045898
    3. '```' → logprob: -14.125005722045898
    4. '+' → logprob: -14.875005722045898
    5. '_' → logprob: -17.1250057220459
    6. ' ' → logprob: -18.2500057220459
    7. '18' → logprob: -18.5000057220459
    8. '19' → logprob: -18.6250057220459
    9. '10' → logprob: -19.3750057220459
    10. '９' → logprob: -19.6250057220459

Token 215: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.750000953674316
    3. '09' → logprob: -15.125000953674316
    4. '+' → logprob: -15.500000953674316
    5. '19' → logprob: -17.75
    6. '10' → logprob: -18.875
    7. ' ' → logprob: -19.25
    8. '99' → logprob: -19.875
    9. '
' → logprob: -19.875
    10. '``' → logprob: -20.0

Token 216: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017132589127868414
    2. ' +' → logprob: -6.376713275909424
    3. '7' → logprob: -12.126712799072266
    4. '+
' → logprob: -12.376712799072266
    5. '＋' → logprob: -13.751712799072266
    6. ' ' → logprob: -16.626712799072266
    7. ' plus' → logprob: -17.001712799072266
    8. ' +
' → logprob: -17.126712799072266
    9. '
' → logprob: -17.251712799072266
    10. 'plus' → logprob: -17.376712799072266

Token 217: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -21.0
    3. '```' → logprob: -21.75
    4. '７' → logprob: -22.125
    5. ' ' → logprob: -22.625
    6. '   ' → logprob: -23.5
    7. '' → logprob: -24.125
    8. '07' → logprob: -24.25
    9. '
' → logprob: -24.5
    10. '

' → logprob: -24.625

Token 218: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -20.625
    3. '```' → logprob: -21.625
    4. '+' → logprob: -22.375
    5. '' → logprob: -22.625
    6. '७' → logprob: -22.75
    7. ' ' → logprob: -22.75
    8. '07' → logprob: -22.875
    9. '۷' → logprob: -23.0
    10. '٧' → logprob: -23.25

Token 219: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1407429426908493
    2. '<|end|>' → logprob: -2.8907430171966553
    3. 'def' → logprob: -3.1407430171966553
    4. '\n' → logprob: -4.390742778778076
    5. '' → logprob: -5.390742778778076
    6. 'import' → logprob: -5.765742778778076
    7. '

' → logprob: -5.890742778778076
    8. 'class' → logprob: -6.015742778778076
    9. '#' → logprob: -6.390742778778076
    10. 'n' → logprob: -6.890742778778076

Token 220: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33291611075401306
    2. 'class' → logprob: -1.5829161405563354
    3. 'n' → logprob: -2.582916021347046
    4. 'N' → logprob: -6.957916259765625
    5. 'a' → logprob: -7.707916259765625
    6. 'd' → logprob: -8.332916259765625
    7. 'from' → logprob: -8.332916259765625
    8. '#' → logprob: -8.582916259765625
    9. 'import' → logprob: -10.332916259765625
    10. 'A' → logprob: -10.582916259765625

Token 221: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7255481481552124
    2. ' =' → logprob: -0.9755481481552124
    3. '=' → logprob: -1.9755481481552124
    4. ' ,' → logprob: -8.725547790527344
    5. ',N' → logprob: -10.225547790527344
    6. ' ' → logprob: -10.350547790527344
    7. '=int' → logprob: -11.475547790527344
    8. ' =
' → logprob: -12.100547790527344
    9. ',n' → logprob: -12.725547790527344
    10. '.' → logprob: -13.225547790527344

Token 222: ' INT' (ID: 20104)
  Prédit: 'INT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INT' → logprob: -0.3178642988204956
    2. ' INT' → logprob: -1.3178642988204956
    3. ' int' → logprob: -5.817864418029785
    4. 'int' → logprob: -6.567864418029785
    5. ' ' → logprob: -9.192864418029785
    6. '_INT' → logprob: -10.192864418029785
    7. 'IN' → logprob: -10.942864418029785
    8. '	INT' → logprob: -11.567864418029785
    9. 'I' → logprob: -12.067864418029785
    10. ' I' → logprob: -12.192864418029785

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024085713550448418
    2. '(' → logprob: -4.024085521697998
    3. '%' → logprob: -6.524085521697998
    4. ')' → logprob: -6.649085521697998
    5. '()
' → logprob: -6.649085521697998
    6. '*' → logprob: -7.524085521697998
    7. '<|end|>' → logprob: -7.649085521697998
    8. ',' → logprob: -8.149085998535156
    9. '#' → logprob: -8.399085998535156
    10. '()%' → logprob: -9.899085998535156

Token 224: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13582159578800201
    2. 'a' → logprob: -2.135821580886841
    3. 'S' → logprob: -5.13582181930542
    4. 'H' → logprob: -7.13582181930542
    5. 's' → logprob: -7.38582181930542
    6. 'h' → logprob: -8.510821342468262
    7. 'D' → logprob: -8.635821342468262
    8. 'dp' → logprob: -8.635821342468262
    9. 'lst' → logprob: -9.010821342468262
    10. 'arr' → logprob: -9.135821342468262

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22573398053646088
    2. ' =' → logprob: -1.600733995437622
    3. ',' → logprob: -8.100733757019043
    4. ' ' → logprob: -11.725733757019043
    5. '_' → logprob: -13.100733757019043
    6. '=list' → logprob: -13.475733757019043
    7. '=[]' → logprob: -13.475733757019043
    8. '.' → logprob: -13.975733757019043
    9. '[' → logprob: -14.225733757019043
    10. '＝' → logprob: -14.600733757019043

Token 226: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.008637027814984322
    2. ' LIST' → logprob: -4.758636951446533
    3. 'L' → logprob: -11.258637428283691
    4. ' list' → logprob: -12.758637428283691
    5. ' L' → logprob: -13.633637428283691
    6. 'list' → logprob: -13.883637428283691
    7. '[]' → logprob: -14.133637428283691
    8. '[' → logprob: -14.258637428283691
    9. 'LI' → logprob: -14.258637428283691
    10. '_LIST' → logprob: -14.383637428283691

Token 227: '(N' (ID: 10564)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001550809945911169
    2. '(N' → logprob: -6.501550674438477
    3. '(' → logprob: -10.626550674438477
    4. '()
' → logprob: -10.751550674438477
    5. ' ()' → logprob: -13.251550674438477
    6. '().' → logprob: -15.876550674438477
    7. '();' → logprob: -16.001550674438477
    8. '()\' → logprob: -16.001550674438477
    9. '()

' → logprob: -16.126550674438477
    10. '()]' → logprob: -16.126550674438477

Token 228: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. '()' → logprob: -10.875031471252441
    3. '())' → logprob: -11.375031471252441
    4. ')
' → logprob: -14.125031471252441
    5. ' )' → logprob: -15.625031471252441
    6. '))' → logprob: -15.750031471252441
    7. '),' → logprob: -17.000032424926758
    8. '(' → logprob: -17.125032424926758
    9. ')`' → logprob: -17.125032424926758
    10. ')

' → logprob: -17.875032424926758

Token 229: 'B' (ID: 33)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024013318121433258
    2. 'A' → logprob: -4.649013519287109
    3. 'from' → logprob: -5.649013519287109
    4. 'd' → logprob: -5.899013519287109
    5. 'ans' → logprob: -6.274013519287109
    6. 's' → logprob: -6.649013519287109
    7. 'cnt' → logprob: -6.774013519287109
    8. 'max' → logprob: -7.399013519287109
    9. 'B' → logprob: -7.399013519287109
    10. 'freq' → logprob: -7.649013519287109

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474225252866745
    2. '=' → logprob: -0.9742252826690674
    3. '=[]' → logprob: -9.599225044250488
    4. ',' → logprob: -10.349225044250488
    5. '.' → logprob: -11.349225044250488
    6. '=[' → logprob: -11.599225044250488
    7. '=A' → logprob: -11.974225044250488
    8. '_' → logprob: -12.724225044250488
    9. ' =[' → logprob: -12.974225044250488
    10. '[' → logprob: -12.974225044250488

Token 231: ' [' (ID: 723)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9695494174957275
    2. '[]' → logprob: -1.2195494174957275
    3. '[A' → logprob: -2.0945494174957275
    4. 'list' → logprob: -2.3445494174957275
    5. '[' → logprob: -2.5945494174957275
    6. 'A' → logprob: -3.8445494174957275
    7. ' sorted' → logprob: -5.969549179077148
    8. '[list' → logprob: -6.594549179077148
    9. ' [' → logprob: -6.719549179077148
    10. ' []' → logprob: -7.094549179077148

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028709694743156433
    2. 'INF' → logprob: -6.877871036529541
    3. 'A' → logprob: -7.627871036529541
    4. ']' → logprob: -7.627871036529541
    5. 'False' → logprob: -8.252870559692383
    6. '(' → logprob: -8.377870559692383
    7. 'a' → logprob: -9.127870559692383
    8. '[]' → logprob: -9.877870559692383
    9. 'i' → logprob: -10.127870559692383
    10. 'abs' → logprob: -10.627870559692383

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03744271770119667
    2. ']*' → logprob: -3.412442684173584
    3. ']*(' → logprob: -5.787442684173584
    4. 'for' → logprob: -7.787442684173584
    5. ']+' → logprob: -8.537443161010742
    6. ' for' → logprob: -9.787443161010742
    7. ',' → logprob: -10.412443161010742
    8. ' ]' → logprob: -11.037443161010742
    9. '()]' → logprob: -12.412443161010742
    10. '(N' → logprob: -13.412443161010742

Token 234: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10619663447141647
    2. ']*' → logprob: -2.856196641921997
    3. ']*(' → logprob: -4.481196403503418
    4. 'for' → logprob: -4.731196403503418
    5. '()' → logprob: -4.731196403503418
    6. '(N' → logprob: -5.606196403503418
    7. ' for' → logprob: -5.731196403503418
    8. ']+' → logprob: -6.106196403503418
    9. '()]' → logprob: -6.231196403503418
    10. '(' → logprob: -6.356196403503418

Token 235: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06834182888269424
    2. '(N' → logprob: -2.8183417320251465
    3. '(' → logprob: -5.3183417320251465
    4. '100' → logprob: -7.6933417320251465
    5. '10' → logprob: -7.8183417320251465
    6. '20' → logprob: -9.693342208862305
    7. '3' → logprob: -9.693342208862305
    8. '200' → logprob: -9.943342208862305
    9. '30' → logprob: -10.443342208862305
    10. '50' → logprob: -10.443342208862305

Token 236: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36410582065582275
    2. 'for' → logprob: -1.8641058206558228
    3. ' 
' → logprob: -2.364105701446533
    4. ' for' → logprob: -3.489105701446533
    5. ' ' → logprob: -3.864105701446533
    6. '' → logprob: -6.364105701446533
    7. '
' → logprob: -7.239105701446533
    8. '0' → logprob: -7.364105701446533
    9. '[' → logprob: -7.864105701446533
    10. 'i' → logprob: -9.239106178283691

Token 237: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029981078580021858
    2. 'stack' → logprob: -4.2799811363220215
    3. 'cur' → logprob: -5.6549811363220215
    4. 's' → logprob: -5.6549811363220215
    5. 'dp' → logprob: -6.0299811363220215
    6. 'B' → logprob: -7.1549811363220215
    7. 'current' → logprob: -7.4049811363220215
    8. 'b' → logprob: -7.4049811363220215
    9. 'acc' → logprob: -7.6549811363220215
    10. 'curr' → logprob: -7.9049811363220215

Token 238: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.038056984543800354
    2. 'i' → logprob: -3.2880570888519287
    3. ' ' → logprob: -11.663057327270508
    4. '	i' → logprob: -12.413057327270508
    5. '_i' → logprob: -13.663057327270508
    6. '_' → logprob: -14.288057327270508
    7. ' _' → logprob: -14.913057327270508
    8. ' ' → logprob: -15.413057327270508
    9. '(i' → logprob: -15.788057327270508
    10. 'I' → logprob: -16.788057327270508

Token 239: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020679574459791183
    2. 'in' → logprob: -3.895679473876953
    3. ' ' → logprob: -9.145679473876953
    4. ',' → logprob: -10.895679473876953
    5. ' i' → logprob: -12.770679473876953
    6. '	in' → logprob: -12.895679473876953
    7. 'range' → logprob: -13.020679473876953
    8. 'n' → logprob: -13.770679473876953
    9. '+' → logprob: -14.770679473876953
    10. ')' → logprob: -15.020679473876953

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0018547463696449995
    2. ' a' → logprob: -6.50185489654541
    3. 'v' → logprob: -8.25185489654541
    4. 'x' → logprob: -9.87685489654541
    5. 'ai' → logprob: -10.25185489654541
    6. ' v' → logprob: -13.37685489654541
    7. 'val' → logprob: -14.12685489654541
    8. 'b' → logprob: -14.37685489654541
    9. ' ai' → logprob: -14.50185489654541
    10. 'j' → logprob: -15.25185489654541

Token 241: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10111881047487259
    2. ' in' → logprob: -2.351118803024292
    3. ',' → logprob: -7.601119041442871
    4. 'n' → logprob: -7.851119041442871
    5. ' ' → logprob: -10.976119041442871
    6. 'i' → logprob: -13.851119041442871
    7. '_in' → logprob: -14.601119041442871
    8. 'enumer' → logprob: -14.601119041442871
    9. 's' → logprob: -14.976119041442871
    10. 'In' → logprob: -14.976119041442871

Token 242: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0019288709154352546
    2. ' enumerate' → logprob: -6.251928806304932
    3. 'en' → logprob: -15.75192928314209
    4. 'enum' → logprob: -16.751928329467773
    5. '(en' → logprob: -18.501928329467773
    6. 'Enumer' → logprob: -19.626928329467773
    7. '
' → logprob: -20.001928329467773
    8. 'range' → logprob: -20.376928329467773
    9. '```' → logprob: -20.626928329467773
    10. 'enu' → logprob: -20.751928329467773

Token 243: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.816093228830141e-06
    2. 'A' → logprob: -12.87500286102295
    3. '(range' → logprob: -16.500001907348633
    4. '(' → logprob: -16.625001907348633
    5. '(en' → logprob: -18.000001907348633
    6. '(a' → logprob: -18.000001907348633
    7. '((' → logprob: -18.250001907348633
    8. 'enumer' → logprob: -18.625001907348633
    9. ',A' → logprob: -19.250001907348633
    10. '(B' → logprob: -19.250001907348633

Token 244: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -2.9875325708417222e-05
    2. ':' → logprob: -10.875029563903809
    3. '):
' → logprob: -11.625029563903809
    4. ')' → logprob: -13.875029563903809
    5. ']:' → logprob: -15.000029563903809
    6. ' ):' → logprob: -15.000029563903809
    7. '():' → logprob: -15.875029563903809
    8. '}:' → logprob: -16.250030517578125
    9. ',' → logprob: -16.875030517578125
    10. '>:' → logprob: -17.875030517578125

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.203896164894104
    2. ' B' → logprob: -2.2038960456848145
    3. ' if' → logprob: -2.8288960456848145
    4. 'B' → logprob: -4.4538960456848145
    5. ' for' → logprob: -6.9538960456848145
    6. 'if' → logprob: -7.2038960456848145
    7. ' ' → logprob: -7.9538960456848145
    8. 'b' → logprob: -8.578896522521973
    9. '	B' → logprob: -8.703896522521973
    10. '    
' → logprob: -8.828896522521973

Token 246: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.6033074855804443
    2. 'if' → logprob: -0.9783074855804443
    3. 'for' → logprob: -3.1033074855804443
    4. ' if' → logprob: -3.9783074855804443
    5. ' B' → logprob: -4.603307723999023
    6. ' for' → logprob: -6.228307723999023
    7. 'j' → logprob: -7.728307723999023
    8. 'b' → logprob: -7.728307723999023
    9. '   ' → logprob: -8.103307723999023
    10. ' ' → logprob: -9.853307723999023

Token 247: '[a' (ID: 32035)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02382895164191723
    2. '[' → logprob: -3.8988289833068848
    3. ' ^=' → logprob: -6.898828983306885
    4. '[a' → logprob: -7.023828983306885
    5. ' +=' → logprob: -7.523828983306885
    6. '+=' → logprob: -7.648828983306885
    7. '=' → logprob: -9.773828506469727
    8. ' |=' → logprob: -10.273828506469727
    9. '[
' → logprob: -10.398828506469727
    10. '^' → logprob: -10.398828506469727

Token 248: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3172153830528259
    2. ']' → logprob: -1.6922154426574707
    3. ' -' → logprob: -2.4422154426574707
    4. ' ]' → logprob: -8.317214965820312
    5. 'i' → logprob: -9.067214965820312
    6. ']+=' → logprob: -9.067214965820312
    7. ' ' → logprob: -9.567214965820312
    8. ']-' → logprob: -9.942214965820312
    9. '[i' → logprob: -10.192214965820312
    10. ' i' → logprob: -10.942214965820312

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -15.625008583068848
    4. '0' → logprob: -17.00000762939453
    5. ']' → logprob: -17.62500762939453
    6. ')' → logprob: -17.68750762939453
    7. '2' → logprob: -17.87500762939453
    8. '   ' → logprob: -17.93750762939453
    9. ',' → logprob: -18.12500762939453
    10. '```' → logprob: -18.25000762939453

Token 250: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026090715546160936
    2. ']+=' → logprob: -6.6276092529296875
    3. ' ]' → logprob: -6.7526092529296875
    4. ']=' → logprob: -9.127609252929688
    5. '=' → logprob: -12.877609252929688
    6. ' +=' → logprob: -14.502609252929688
    7. '()]' → logprob: -14.502609252929688
    8. ')' → logprob: -14.752609252929688
    9. '`]' → logprob: -14.752609252929688
    10. ']+' → logprob: -14.752609252929688

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.480829656124115
    2. '+=' → logprob: -0.980829656124115
    3. ' +=' → logprob: -5.23082971572876
    4. ' =' → logprob: -6.60582971572876
    5. ']+=' → logprob: -10.855829238891602
    6. '=i' → logprob: -12.605829238891602
    7. '=True' → logprob: -13.105829238891602
    8. '.=' → logprob: -14.230829238891602
    9. '=int' → logprob: -14.605829238891602
    10. ' ^=' → logprob: -15.105829238891602

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.941161776310764e-05
    2. '1' → logprob: -10.875039100646973
    3. ' i' → logprob: -11.000039100646973
    4. 'a' → logprob: -14.000039100646973
    5. 'True' → logprob: -14.000039100646973
    6. 'str' → logprob: -14.500039100646973
    7. '(i' → logprob: -15.125039100646973
    8. '0' → logprob: -15.375039100646973
    9. 'N' → logprob: -15.625039100646973
    10. 'b' → logprob: -16.00004005432129

Token 253: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3985048234462738
    2. '<|end|>' → logprob: -2.2735047340393066
    3. '
' → logprob: -2.3985047340393066
    4. 'print' → logprob: -2.6485047340393066
    5. 'B' → logprob: -3.6485047340393066
    6. ')' → logprob: -4.273504734039307
    7. '#' → logprob: -4.898504734039307
    8. ' for' → logprob: -5.398504734039307
    9. ' ' → logprob: -5.648504734039307
    10. 'i' → logprob: -6.273504734039307

Token 254: 'mx' (ID: 32467)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.49917709827423096
    2. 'for' → logprob: -0.999177098274231
    3. 'C' → logprob: -3.9991769790649414
    4. 'ans' → logprob: -6.499176979064941
    5. 'res' → logprob: -6.749176979064941
    6. 'answer' → logprob: -7.374176979064941
    7. 'b' → logprob: -7.999176979064941
    8. 'p' → logprob: -8.124176979064941
    9. ' for' → logprob: -8.249176979064941
    10. 'result' → logprob: -8.249176979064941

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07084683328866959
    2. '=' → logprob: -2.6958467960357666
    3. '_' → logprob: -8.070846557617188
    4. '_idx' → logprob: -8.445846557617188
    5. 'x' → logprob: -9.445846557617188
    6. 'idx' → logprob: -9.945846557617188
    7. ',' → logprob: -9.945846557617188
    8. 'pos' → logprob: -9.945846557617188
    9. ' ' → logprob: -10.445846557617188
    10. '_index' → logprob: -10.695846557617188

Token 256: ' cnt' (ID: 27340)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48587608337402344
    2. '0' → logprob: -0.9858760833740234
    3. '-B' → logprob: -5.485876083374023
    4. 'B' → logprob: -5.610876083374023
    5. '-N' → logprob: -6.485876083374023
    6. '-INF' → logprob: -7.360876083374023
    7. '-inf' → logprob: -7.860876083374023
    8. 'N' → logprob: -8.235876083374023
    9. '1' → logprob: -8.360876083374023
    10. 'INF' → logprob: -8.860876083374023

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10354036092758179
    2. '=' → logprob: -2.3535404205322266
    3. '+' → logprob: -6.228540420532227
    4. ' +' → logprob: -7.603540420532227
    5. ' ' → logprob: -7.853540420532227
    6. ',' → logprob: -8.228540420532227
    7. 'max' → logprob: -10.103540420532227
    8. '0' → logprob: -10.603540420532227
    9. ' +=' → logprob: -11.228540420532227
    10. '=max' → logprob: -11.228540420532227

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0506313294172287
    2. '1' → logprob: -3.175631284713745
    3. '-' → logprob: -5.425631523132324
    4. ' ' → logprob: -5.800631523132324
    5. ' -' → logprob: -9.300631523132324
    6. 'ans' → logprob: -10.300631523132324
    7. 'mx' → logprob: -10.675631523132324
    8. 'B' → logprob: -11.925631523132324
    9. '=' → logprob: -13.175631523132324
    10. '-m' → logprob: -13.300631523132324

Token 259: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16058620810508728
    2. '1' → logprob: -1.9105862379074097
    3. '-' → logprob: -8.2855863571167
    4. ' ' → logprob: -9.1605863571167
    5. 'B' → logprob: -13.1605863571167
    6. ' -' → logprob: -13.9105863571167
    7. '2' → logprob: -14.7855863571167
    8. 'ans' → logprob: -15.1605863571167
    9. 'N' → logprob: -15.4105863571167
    10. 'mx' → logprob: -15.4730863571167

Token 260: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006192696164362133
    2. '
' → logprob: -7.500619411468506
    3. ' for' → logprob: -9.625618934631348
    4. ' 
' → logprob: -16.375619888305664
    5. '' → logprob: -17.625619888305664
    6. '
' → logprob: -17.750619888305664
    7. '  
' → logprob: -17.750619888305664
    8. '\n' → logprob: -18.000619888305664
    9. 'For' → logprob: -18.125619888305664
    10. ',' → logprob: -18.250619888305664

Token 261: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.0
    3. '
' → logprob: -20.625
    4. 'prev' → logprob: -20.75
    5. 'fo' → logprob: -21.0
    6. 'last' → logprob: -21.25
    7. '	for' → logprob: -22.125
    8. 'ans' → logprob: -22.75
    9. 'For' → logprob: -22.875
    10. '```' → logprob: -23.75

Token 262: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004088493529707193
    2. ' i' → logprob: -5.504088401794434
    3. '_i' → logprob: -12.754088401794434
    4. '	i' → logprob: -12.879088401794434
    5. 'x' → logprob: -13.629088401794434
    6. '(i' → logprob: -14.129088401794434
    7. 'v' → logprob: -14.379088401794434
    8. ' ' → logprob: -14.504088401794434
    9. 'b' → logprob: -14.754088401794434
    10. 'j' → logprob: -15.254088401794434

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03386421501636505
    2. 'in' → logprob: -3.4088642597198486
    3. ' ' → logprob: -9.15886402130127
    4. ',' → logprob: -9.15886402130127
    5. '	in' → logprob: -12.28386402130127
    6. 'range' → logprob: -14.15886402130127
    7. '   ' → logprob: -14.53386402130127
    8. ' i' → logprob: -14.53386402130127
    9. ' ,' → logprob: -15.15886402130127
    10. '  ' → logprob: -15.15886402130127

Token 264: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859168455004692
    2. ' range' → logprob: -3.0485916137695312
    3. ' ' → logprob: -13.173591613769531
    4. 'ran' → logprob: -14.298591613769531
    5. 'r' → logprob: -14.673591613769531
    6. '   ' → logprob: -14.798591613769531
    7. '	range' → logprob: -15.173591613769531
    8. ' ran' → logprob: -15.423591613769531
    9. 'ra' → logprob: -15.423591613769531
    10. '(range' → logprob: -15.673591613769531

Token 265: '(N' (ID: 10564)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006086751818656921
    2. 'N' → logprob: -7.500608444213867
    3. '(' → logprob: -9.875608444213867
    4. ' ' → logprob: -13.125608444213867
    5. '(N' → logprob: -13.250608444213867
    6. '   ' → logprob: -15.125608444213867
    7. ' N' → logprob: -16.500608444213867
    8. 'n' → logprob: -17.750608444213867
    9. '
' → logprob: -17.750608444213867
    10. '0' → logprob: -18.125608444213867

Token 266: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40679970383644104
    2. ' -' → logprob: -1.2817996740341187
    3. '):' → logprob: -3.531799793243408
    4. '):
' → logprob: -3.656799793243408
    5. '1' → logprob: -7.656799793243408
    6. ' ' → logprob: -8.03179931640625
    7. ')' → logprob: -8.03179931640625
    8. ' ):' → logprob: -8.28179931640625
    9. ' ):
' → logprob: -9.28179931640625
    10. '):
' → logprob: -9.28179931640625

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001817297888919711
    2. ' ' → logprob: -8.625182151794434
    3. ')' → logprob: -13.875182151794434
    4. '
' → logprob: -14.750182151794434
    5. '-' → logprob: -15.500182151794434
    6. '```' → logprob: -15.500182151794434
    7. '   ' → logprob: -15.750182151794434
    8. '2' → logprob: -17.125181198120117
    9. '１' → logprob: -17.687681198120117
    10. '  ' → logprob: -17.750181198120117

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0640750601887703
    2. '):' → logprob: -2.814074993133545
    3. '):
' → logprob: -6.189074993133545
    4. ' ):
' → logprob: -10.189075469970703
    5. ' ):' → logprob: -11.689075469970703
    6. ')' → logprob: -12.314075469970703
    7. '):

' → logprob: -13.314075469970703
    8. ':' → logprob: -14.939075469970703
    9. ' ' → logprob: -15.439075469970703
    10. '():
' → logprob: -15.564075469970703

Token 269: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09006945043802261
    2. 'if' → logprob: -3.090069532394409
    3. '   ' → logprob: -3.215069532394409
    4. '	if' → logprob: -8.340069770812988
    5. ' ' → logprob: -8.465069770812988
    6. '
' → logprob: -11.590069770812988
    7. 'If' → logprob: -11.715069770812988
    8. ' 
' → logprob: -12.840069770812988
    9. ' If' → logprob: -12.965069770812988
    10. '  ' → logprob: -12.965069770812988

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.5716304410016164e-05
    2. ' if' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.250035285949707
    4. 'i' → logprob: -17.000036239624023
    5. 'If' → logprob: -17.500036239624023
    6. '
' → logprob: -17.875036239624023
    7. '	if' → logprob: -18.625036239624023
    8. ' ' → logprob: -19.250036239624023
    9. '```' → logprob: -19.375036239624023
    10. '    
' → logprob: -19.875036239624023

Token 271: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0010365027701482177
    2. ' B' → logprob: -6.876036643981934
    3. '   ' → logprob: -13.001036643981934
    4. '	B' → logprob: -14.126036643981934
    5. ' ' → logprob: -14.251036643981934
    6. '(B' → logprob: -15.751036643981934
    7. '  ' → logprob: -17.251035690307617
    8. '[B' → logprob: -18.501035690307617
    9. '_B' → logprob: -18.626035690307617
    10. 'Ｂ' → logprob: -18.751035690307617

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.888114098226652e-05
    2. '[' → logprob: -9.500088691711426
    3. 'i' → logprob: -11.875088691711426
    4. '[
' → logprob: -12.875088691711426
    5. '[B' → logprob: -14.000088691711426
    6. '+' → logprob: -14.375088691711426
    7. ' [' → logprob: -14.500088691711426
    8. '[I' → logprob: -14.500088691711426
    9. '[a' → logprob: -14.875088691711426
    10. ']' → logprob: -14.875088691711426

Token 273: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4825785756111145
    2. ']' → logprob: -1.6075785160064697
    3. '<' → logprob: -1.8575785160064697
    4. ']<' → logprob: -3.7325785160064697
    5. '>' → logprob: -6.982578754425049
    6. ' +' → logprob: -7.232578754425049
    7. ' <' → logprob: -8.10757827758789
    8. ']+' → logprob: -8.48257827758789
    9. '<B' → logprob: -9.73257827758789
    10. ']>' → logprob: -10.23257827758789

Token 274: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.003238316858187318
    2. '+' → logprob: -6.503238201141357
    3. ' <' → logprob: -7.003238201141357
    4. '>' → logprob: -7.128238201141357
    5. ' +' → logprob: -12.003238677978516
    6. ' >' → logprob: -12.628238677978516
    7. '<B' → logprob: -13.128238677978516
    8. ' ' → logprob: -13.253238677978516
    9. '<
' → logprob: -13.253238677978516
    10. '

' → logprob: -14.503238677978516

Token 275: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0006282062386162579
    2. ' B' → logprob: -7.3756279945373535
    3. '   ' → logprob: -13.750628471374512
    4. ' ' → logprob: -14.875628471374512
    5. '  ' → logprob: -16.375627517700195
    6. '	B' → logprob: -16.875627517700195
    7. '>B' → logprob: -17.875627517700195
    8. '    ' → logprob: -18.750627517700195
    9. '=B' → logprob: -18.875627517700195
    10. '
' → logprob: -19.375627517700195

Token 276: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03822531923651695
    2. 'i' → logprob: -3.2882254123687744
    3. 'B' → logprob: -9.538225173950195
    4. '[' → logprob: -9.663225173950195
    5. ' i' → logprob: -10.288225173950195
    6. '   ' → logprob: -11.913225173950195
    7. ' [' → logprob: -13.038225173950195
    8. '[
' → logprob: -13.163225173950195
    9. '	i' → logprob: -13.788225173950195
    10. ' ' → logprob: -14.288225173950195

Token 277: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024882610887289047
    2. ' +' → logprob: -6.002488136291504
    3. '1' → logprob: -12.002488136291504
    4. '+
' → logprob: -12.002488136291504
    5. '+i' → logprob: -15.877488136291504
    6. ' +
' → logprob: -16.25248908996582
    7. ' ' → logprob: -16.37748908996582
    8. '＋' → logprob: -16.50248908996582
    9. '   ' → logprob: -17.25248908996582
    10. '
' → logprob: -17.75248908996582

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -14.375017166137695
    4. '   ' → logprob: -16.500017166137695
    5. '```' → logprob: -17.625017166137695
    6. ']' → logprob: -17.875017166137695
    7. '#' → logprob: -18.750017166137695
    8. '  ' → logprob: -18.750017166137695
    9. '
' → logprob: -19.375017166137695
    10. '``' → logprob: -19.875017166137695

Token 279: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01662883535027504
    2. '):' → logprob: -4.391628742218018
    3. ':
' → logprob: -5.641628742218018
    4. ' :' → logprob: -8.266629219055176
    5. '):
' → logprob: -8.266629219055176
    6. ']:' → logprob: -10.766629219055176
    7. '>:' → logprob: -11.516629219055176
    8. ' ):' → logprob: -12.266629219055176
    9. ')' → logprob: -12.391629219055176
    10. ' :
' → logprob: -12.766629219055176

Token 280: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.654384970664978
    2. 'cnt' → logprob: -1.279384970664978
    3. ':' → logprob: -1.904384970664978
    4. '   ' → logprob: -3.0293850898742676
    5. ' cnt' → logprob: -5.904385089874268
    6. '       ' → logprob: -7.154385089874268
    7. '	cnt' → logprob: -7.404385089874268
    8. '
' → logprob: -8.40438461303711
    9. '_cnt' → logprob: -9.65438461303711
    10. '[cnt' → logprob: -9.77938461303711

Token 281: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0001317871210630983
    2. ' cnt' → logprob: -9.625131607055664
    3. '   ' → logprob: -10.125131607055664
    4. '
' → logprob: -11.000131607055664
    5. '	cnt' → logprob: -11.750131607055664
    6. '    
' → logprob: -14.375131607055664
    7. 'mx' → logprob: -15.750131607055664
    8. 'ct' → logprob: -15.875131607055664
    9. '[cnt' → logprob: -16.125131607055664
    10. '(cnt' → logprob: -17.375131607055664

Token 282: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740888774394989
    2. ' +=' → logprob: -0.9740889072418213
    3. '=' → logprob: -12.599088668823242
    4. ']+=' → logprob: -12.599088668823242
    5. '+' → logprob: -12.974088668823242
    6. '   ' → logprob: -14.224088668823242
    7. ' ' → logprob: -14.599088668823242
    8. ' ' → logprob: -14.974088668823242
    9. '+='' → logprob: -15.099088668823242
    10. ' =' → logprob: -15.224088668823242

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.0
    4. '<|end|>' → logprob: -21.0
    5. '```' → logprob: -21.375
    6. '
' → logprob: -21.625
    7. '１' → logprob: -22.125
    8. ' ' → logprob: -23.125
    9. '۱' → logprob: -23.125
    10. '0' → logprob: -23.875

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -21.375
    4. '
' → logprob: -22.25
    5. '۱' → logprob: -22.625
    6. '１' → logprob: -22.625
    7. '   ' → logprob: -22.75
    8. '<|end|>' → logprob: -23.3125
    9. '१' → logprob: -23.75
    10. 'a' → logprob: -24.0625

Token 285: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11858800798654556
    2. '   ' → logprob: -2.2435879707336426
    3. ' else' → logprob: -5.243587970733643
    4. '
' → logprob: -7.868587970733643
    5. '	else' → logprob: -9.7435884475708
    6. '```' → logprob: -11.3685884475708
    7. ':' → logprob: -12.7435884475708
    8. ':
' → logprob: -13.3685884475708
    9. '}else' → logprob: -13.8685884475708
    10. ')' → logprob: -13.8685884475708

Token 286: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23209381103515625
    2. '   ' → logprob: -1.6070938110351562
    3. ' else' → logprob: -5.107093811035156
    4. '
' → logprob: -7.857093811035156
    5. '	else' → logprob: -8.732093811035156
    6. '```' → logprob: -10.732093811035156
    7. ':
' → logprob: -11.607093811035156
    8. ')' → logprob: -12.732093811035156
    9. '<|end|>' → logprob: -12.857093811035156
    10. '}else' → logprob: -12.857093811035156

Token 287: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0004354373668320477
    2. ' else' → logprob: -7.7504353523254395
    3. '   ' → logprob: -12.375435829162598
    4. '	else' → logprob: -15.250435829162598
    5. '
' → logprob: -15.750435829162598
    6. 'elif' → logprob: -17.25043487548828
    7. '```' → logprob: -17.62543487548828
    8. '}else' → logprob: -17.87543487548828
    9. '_else' → logprob: -18.75043487548828
    10. 'elser' → logprob: -18.87543487548828

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08966781944036484
    2. ':
' → logprob: -2.464667797088623
    3. '   ' → logprob: -7.339667797088623
    4. '       ' → logprob: -9.589668273925781
    5. ':
' → logprob: -12.714668273925781
    6. ' :' → logprob: -13.464668273925781
    7. 'cnt' → logprob: -13.589668273925781
    8. ':

' → logprob: -13.714668273925781
    9. ' :
' → logprob: -13.714668273925781
    10. ',' → logprob: -14.464668273925781

Token 289: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11011918634176254
    2. 'cnt' → logprob: -3.110119104385376
    3. 'mx' → logprob: -3.110119104385376
    4. '       ' → logprob: -4.235119342803955
    5. ' mx' → logprob: -7.735119342803955
    6. ' cnt' → logprob: -8.860118865966797
    7. '	cnt' → logprob: -11.860118865966797
    8. 'max' → logprob: -11.985118865966797
    9. 'count' → logprob: -12.485118865966797
    10. ' ' → logprob: -13.235118865966797

Token 290: ' cnt' (ID: 27340)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.002697759075090289
    2. '   ' → logprob: -6.752697944641113
    3. 'cnt' (adapté à ' cnt') → logprob: -6.752697944641113
    4. ' mx' → logprob: -8.377697944641113
    5. '       ' → logprob: -9.627697944641113
    6. '
' → logprob: -10.252697944641113
    7. 'if' → logprob: -11.252697944641113
    8. 'max' → logprob: -12.127697944641113
    9. 'mn' → logprob: -13.752697944641113
    10. ' ' → logprob: -13.752697944641113

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.7610454708337784e-05
    2. ' =' → logprob: -10.500027656555176
    3. '=
' → logprob: -18.00002670288086
    4. '=max' → logprob: -19.12502670288086
    5. 'mx' → logprob: -20.62502670288086
    6. '＝' → logprob: -20.62502670288086
    7. '=

' → logprob: -20.75002670288086
    8. ' ' → logprob: -20.75002670288086
    9. 'max' → logprob: -22.25002670288086
    10. '.=' → logprob: -22.37502670288086

Token 292: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.62506675720215
    4. ' ' → logprob: -19.31256675720215
    5. '```' → logprob: -19.43756675720215
    6. '' → logprob: -19.75006675720215
    7. '１' → logprob: -19.81256675720215
    8. '0' → logprob: -19.87506675720215
    9. '۱' → logprob: -20.25006675720215
    10. '  ' → logprob: -20.68756675720215

Token 293: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -20.75
    4. '   ' → logprob: -21.375
    5. '' → logprob: -21.75
    6. '１' → logprob: -21.875
    7. '```' → logprob: -22.0
    8. '۱' → logprob: -22.25
    9. '
' → logprob: -22.25
    10. '	' → logprob: -23.0

Token 294: '
' (ID: 198)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.023405728861689568
    2. '   ' → logprob: -3.7734057903289795
    3. ' mx' → logprob: -8.898406028747559
    4. 'if' → logprob: -11.148406028747559
    5. '(mx' → logprob: -12.273406028747559
    6. ' ' → logprob: -13.648406028747559
    7. '.mx' → logprob: -13.773406028747559
    8. '
' → logprob: -13.773406028747559
    9. 'print' → logprob: -14.023406028747559
    10. '
' → logprob: -16.273405075073242

Token 295: '   ' (ID: 271)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.12814168632030487
    2. '   ' → logprob: -2.1281416416168213
    3. ' mx' → logprob: -6.8781418800354
    4. 'if' → logprob: -9.503141403198242
    5. '
' → logprob: -9.878141403198242
    6. ' ' → logprob: -10.503141403198242
    7. '(mx' → logprob: -10.878141403198242
    8. '.mx' → logprob: -12.628141403198242
    9. '
' → logprob: -13.253141403198242
    10. ' if' → logprob: -13.628141403198242

Token 296: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' (adapté à ' mx') → logprob: -0.0005201471503823996
    2. '   ' → logprob: -8.000519752502441
    3. ' mx' → logprob: -8.875519752502441
    4. 'if' → logprob: -10.125519752502441
    5. '
' → logprob: -13.250519752502441
    6. ' ' → logprob: -13.500519752502441
    7. '(mx' → logprob: -14.000519752502441
    8. '.mx' → logprob: -14.875519752502441
    9. ' if' → logprob: -15.750519752502441
    10. 'ms' → logprob: -16.125520706176758

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008710184134542942
    2. ' =' → logprob: -4.7587103843688965
    3. '=max' → logprob: -9.258709907531738
    4. 'max' → logprob: -14.758709907531738
    5. ' max' → logprob: -18.508710861206055
    6. '>' → logprob: -19.008710861206055
    7. '＝' → logprob: -19.258710861206055
    8. '=
' → logprob: -19.258710861206055
    9. '.=' → logprob: -19.383710861206055
    10. ',max' → logprob: -20.008710861206055

Token 298: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0031808018684387207
    2. ' max' → logprob: -5.753180980682373
    3. 'mx' → logprob: -12.753180503845215
    4. '	max' → logprob: -16.87818145751953
    5. '(max' → logprob: -17.00318145751953
    6. ' mx' → logprob: -17.25318145751953
    7. '[max' → logprob: -18.12818145751953
    8. '=max' → logprob: -18.75318145751953
    9. ' ' → logprob: -19.37818145751953
    10. 'm' → logprob: -19.62818145751953

Token 299: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.750009536743164
    3. 'mx' → logprob: -13.750009536743164
    4. '(
' → logprob: -15.875009536743164
    5. '(cnt' → logprob: -15.875009536743164
    6. '(mc' → logprob: -16.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. '(nx' → logprob: -19.000009536743164
    9. '(mi' → logprob: -19.250009536743164
    10. '(m' → logprob: -19.500009536743164

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10227936506271362
    2. '(cnt' → logprob: -2.3522794246673584
    3. '(' → logprob: -6.977279186248779
    4. 'cnt' → logprob: -7.727279186248779
    5. ',c' → logprob: -7.977279186248779
    6. ' ,' → logprob: -8.602279663085938
    7. '(mx' → logprob: -9.352279663085938
    8. '[cnt' → logprob: -10.102279663085938
    9. '	cnt' → logprob: -10.602279663085938
    10. ' cnt' → logprob: -12.102279663085938

Token 301: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.001502717612311244
    2. ' cnt' → logprob: -6.501502513885498
    3. '	cnt' → logprob: -15.501502990722656
    4. '(cnt' → logprob: -16.001502990722656
    5. 'count' → logprob: -17.251502990722656
    6. 'cn' → logprob: -17.626502990722656
    7. '   ' → logprob: -18.001502990722656
    8. '[cnt' → logprob: -18.126502990722656
    9. 'ct' → logprob: -18.626502990722656
    10. ' ' → logprob: -18.626502990722656

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -13.750007629394531
    4. ')

' → logprob: -17.12500762939453
    5. '))' → logprob: -19.00000762939453
    6. ')`' → logprob: -19.37500762939453
    7. '）' → logprob: -20.00000762939453
    8. '),' → logprob: -20.00000762939453
    9. ')#' → logprob: -20.00000762939453
    10. ')return' → logprob: -20.12500762939453

Token 303: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1517960956552997e-05
    2. '
' → logprob: -11.625011444091797
    3. '```' → logprob: -13.125011444091797
    4. '  
' → logprob: -16.375011444091797
    5. 'pr' → logprob: -16.500011444091797
    6. '
' → logprob: -16.625011444091797
    7. ' print' → logprob: -17.125011444091797
    8. ' 
' → logprob: -17.250011444091797
    9. '\' → logprob: -17.375011444091797
    10. '``' → logprob: -17.750011444091797

Token 304: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -10.750025749206543
    3. '(n' → logprob: -12.625025749206543
    4. 'N' → logprob: -14.125025749206543
    5. '(
' → logprob: -15.625025749206543
    6. '(m' → logprob: -17.12502670288086
    7. '((' → logprob: -17.37502670288086
    8. '(M' → logprob: -17.75002670288086
    9. '(mx' → logprob: -17.87502670288086
    10. '(max' → logprob: -19.62502670288086

Token 305: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4747302234172821
    2. '-' → logprob: -0.9747302532196045
    3. '-m' → logprob: -7.349730014801025
    4. ')' → logprob: -12.224730491638184
    5. ' mx' → logprob: -13.349730491638184
    6. '-
' → logprob: -13.599730491638184
    7. ' ' → logprob: -14.349730491638184
    8. ' ' → logprob: -14.474730491638184
    9. ' -
' → logprob: -14.599730491638184
    10. '-ma' → logprob: -15.599730491638184

Token 306: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.0019286326132714748
    2. ' mx' → logprob: -6.251928806304932
    3. '(mx' → logprob: -16.501928329467773
    4. '
' → logprob: -20.126928329467773
    5. '.mx' → logprob: -20.251928329467773
    6. ' ' → logprob: -20.626928329467773
    7. 'm' → logprob: -20.876928329467773
    8. 'max' → logprob: -21.751928329467773
    9. 'mc' → logprob: -22.751928329467773
    10. '   ' → logprob: -23.751928329467773

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ' )' → logprob: -10.750021934509277
    3. ')
' → logprob: -17.00002098083496
    4. '）' → logprob: -19.25002098083496
    5. ')`' → logprob: -19.25002098083496
    6. '))' → logprob: -20.00002098083496
    7. '`)' → logprob: -20.00002098083496
    8. ')#' → logprob: -20.12502098083496
    9. '}' → logprob: -21.25002098083496
    10. '),' → logprob: -21.50002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 305
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 270
Précision stricte (1ère position): 41.97%
Précision adaptée (1ère position): 43.61%
Précision (top 10): 88.52%
================================================================================
