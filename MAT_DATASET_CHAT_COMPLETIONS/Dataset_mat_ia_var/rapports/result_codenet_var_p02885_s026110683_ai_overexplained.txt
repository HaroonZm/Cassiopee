================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une ligne de texte. 
# La méthode input() lit cette ligne sous forme de chaîne de caractères (string).
# L'utilisateur est censé entrer deux nombres entiers séparés par un espace, par exemple : "5 3"
ligne = input()

# La méthode split() sépare la chaîne 'ligne' en une liste de sous-chaînes, en utilisant l'espace comme séparateur par défaut.
# Si 'ligne' vaut "5 3", alors ligne.split() renverra la liste ["5", "3"]
liste_de_strings = ligne.split()

# La fonction map applique une fonction à chaque élément d'un itérable.
# Ici, int est appliqué à chaque élément de liste_de_strings, ce qui permet de convertir chaque string en entier.
# map(int, liste_de_strings) produit donc un itérable sur les valeurs entières correspondantes, par exemple 5, 3
liste_d_entiers = map(int, liste_de_strings)

# L'affectation multiple permet de stocker ces deux valeurs entières dans les variables A et B.
# Par exemple, si liste_d_entiers contient 5 et 3, alors A=5 et B=3
A, B = liste_d_entiers

# Calcul de la valeur de l'expression (A - 2*B)
# B est multiplié par 2 d'abord. Cette opération se fait avant la soustraction à cause des règles de priorité des opérateurs.
# Cette quantité est ensuite soustraite à A.
sous_resultat = A - 2 * B

# La fonction max() renvoie le plus grand des deux arguments.
# Ceci garantit que le résultat final ne sera pas inférieur à zéro.
# Si sous_resultat vaut -1, max(0, -1) sera 0 ; si sous_resultat vaut 4, max(0, 4) sera 4.
resultat_final = max(0, sous_resultat)

# La fonction print affiche le résultat final à l'écran pour l'utilisateur.
print(resultat_final)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2601135969161987
    2. ' ' → logprob: -1.5101135969161987
    3. ':' → logprob: -1.6351135969161987
    4. 's' → logprob: -1.7601135969161987
    5. ' =' → logprob: -3.5101137161254883
    6. ''' → logprob: -3.7601137161254883
    7. '_' → logprob: -3.7601137161254883
    8. ' d' → logprob: -4.260113716125488
    9. '```' → logprob: -4.385113716125488
    10. ' :' → logprob: -4.760113716125488

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02239242009818554
    2. ' l' → logprob: -3.897392511367798
    3. 'user' → logprob: -6.897392272949219
    4. ''' → logprob: -8.897392272949219
    5. ' user' → logprob: -9.022392272949219
    6. 'util' → logprob: -9.022392272949219
    7. '#' → logprob: -9.397392272949219
    8. 'la' → logprob: -9.522392272949219
    9. '`' → logprob: -10.522392272949219
    10. '_' → logprob: -10.647392272949219

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3604263961315155
    2. 'name' → logprob: -2.235426425933838
    3. 'user' → logprob: -2.485426425933838
    4. 'n' → logprob: -3.235426425933838
    5. 'input' → logprob: -4.110426425933838
    6. 's' → logprob: -4.360426425933838
    7. 'username' → logprob: -4.735426425933838
    8. '#' → logprob: -5.110426425933838
    9. '`' → logprob: -5.235426425933838
    10. 'print' → logprob: -5.735426425933838

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009185493923723698
    2. ' saisir' → logprob: -5.634185314178467
    3. 'r' → logprob: -6.009185314178467
    4. 'entr' → logprob: -6.259185314178467
    5. '```' → logprob: -7.259185314178467
    6. 'sa' → logprob: -9.009185791015625
    7. '#' → logprob: -9.384185791015625
    8. ' entrer' → logprob: -10.259185791015625
    9. ' fournir' → logprob: -10.634185791015625
    10. 'contin' → logprob: -10.759185791015625

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4762217104434967
    2. ' un' → logprob: -1.4762216806411743
    3. ' une' → logprob: -2.226221799850464
    4. ''' → logprob: -4.351221561431885
    5. 's' → logprob: -5.601221561431885
    6. ''un' → logprob: -5.851221561431885
    7. ' ' → logprob: -5.851221561431885
    8. 'un' → logprob: -6.101221561431885
    9. 'une' → logprob: -6.226221561431885
    10. ''une' → logprob: -6.351221561431885

Token 9: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5556082725524902
    2. ' chaîne' → logprob: -1.1806082725524902
    3. ' phrase' → logprob: -2.8056082725524902
    4. 'chaine' → logprob: -3.8056082725524902
    5. ' chaine' → logprob: -4.55560827255249
    6. ' ligne' → logprob: -4.68060827255249
    7. 'phrase' → logprob: -5.43060827255249
    8. ' valeur' → logprob: -5.93060827255249
    9. ' string' → logprob: -6.55560827255249
    10. ' ' → logprob: -6.55560827255249

Token 10: ' de' (ID: 334)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.869210422039032
    2. 'user' → logprob: -0.994210422039032
    3. 'input' → logprob: -2.1192104816436768
    4. 's' → logprob: -3.2442104816436768
    5. 'u' → logprob: -3.7442104816436768
    6. 'i' → logprob: -4.744210243225098
    7. 'ligne' → logprob: -4.744210243225098
    8. '_' → logprob: -5.869210243225098
    9. 'line' → logprob: -6.494210243225098
    10. 'n' → logprob: -6.744210243225098

Token 11: ' texte' (ID: 53492)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.18982374668121338
    2. 'texte' → logprob: -1.8148237466812134
    3. 'commande' → logprob: -4.689823627471924
    4. '#' → logprob: -8.064824104309082
    5. 'text' → logprob: -8.189824104309082
    6. 'comment' → logprob: -9.689824104309082
    7. 'command' → logprob: -10.189824104309082
    8. ' texte' → logprob: -10.564824104309082
    9. '```' → logprob: -10.564824104309082
    10. 'txt' → logprob: -11.064824104309082

Token 12: '.' (ID: 13)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7067113518714905
    2. 'user' → logprob: -0.8317113518714905
    3. 'text' → logprob: -3.3317112922668457
    4. 's' → logprob: -4.206711292266846
    5. 'texte' → logprob: -4.206711292266846
    6. 'i' → logprob: -6.706711292266846
    7. 'u' → logprob: -7.331711292266846
    8. 'print' → logprob: -7.331711292266846
    9. '```' → logprob: -7.331711292266846
    10. 'txt' → logprob: -7.456711292266846

Token 13: ' 
' (ID: 793)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.7516725063323975
    2. 'input' → logprob: -0.8766725063323975
    3. 'text' → logprob: -3.2516725063323975
    4. 's' → logprob: -3.5016725063323975
    5. 'texte' → logprob: -3.7516725063323975
    6. 'print' → logprob: -5.001672744750977
    7. 'l' → logprob: -5.751672744750977
    8. 'u' → logprob: -6.001672744750977
    9. 't' → logprob: -6.751672744750977
    10. 'ligne' → logprob: -6.751672744750977

Token 14: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.44266319274902344
    2. 'texte' → logprob: -1.6926631927490234
    3. 'input' → logprob: -2.3176631927490234
    4. 'text' → logprob: -3.0676631927490234
    5. 's' → logprob: -4.067663192749023
    6. 'ligne' → logprob: -5.067663192749023
    7. 'txt' → logprob: -6.317663192749023
    8. 'print' → logprob: -6.817663192749023
    9. 'line' → logprob: -7.192663192749023
    10. 'entrée' → logprob: -7.692663192749023

Token 15: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.3953346014022827
    2. 'input' → logprob: -2.3953347206115723
    3. 'texte' → logprob: -2.3953347206115723
    4. 'text' → logprob: -2.7703347206115723
    5. 's' → logprob: -2.8953347206115723
    6. 'print' → logprob: -5.020334720611572
    7. ' user' → logprob: -5.145334720611572
    8. 'ligne' → logprob: -5.270334720611572
    9. 'line' → logprob: -6.270334720611572
    10. 'txt' → logprob: -6.395334720611572

Token 16: ' méthode' (ID: 71490)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43881624937057495
    2. 'ligne' → logprob: -1.4388163089752197
    3. ' ligne' → logprob: -2.9388163089752197
    4. 'l' → logprob: -4.313816070556641
    5. 'chaine' → logprob: -4.688816070556641
    6. ' ' → logprob: -4.813816070556641
    7. 'texte' → logprob: -4.813816070556641
    8. '#' → logprob: -5.188816070556641
    9. 'entrée' → logprob: -6.063816070556641
    10. 'input' → logprob: -6.063816070556641

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35160788893699646
    2. ' input' → logprob: -1.2266079187393188
    3. '=input' → logprob: -5.976607799530029
    4. 'strip' → logprob: -8.726608276367188
    5. 's' → logprob: -9.351608276367188
    6. ' ' → logprob: -9.851608276367188
    7. '.' → logprob: -9.976608276367188
    8. 'print' → logprob: -10.351608276367188
    9. ' =' → logprob: -10.476608276367188
    10. '```' → logprob: -10.726608276367188

Token 18: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012548730010166764
    2. '()' → logprob: -7.751255035400391
    3. '('' → logprob: -8.00125503540039
    4. '("' → logprob: -8.12625503540039
    5. '(
' → logprob: -9.25125503540039
    6. ' (' → logprob: -10.62625503540039
    7. '("""' → logprob: -11.12625503540039
    8. ')' → logprob: -11.75125503540039
    9. '#' → logprob: -11.75125503540039
    10. 's' → logprob: -12.25125503540039

Token 19: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6894700527191162
    2. ' ' → logprob: -0.8144700527191162
    3. ' (' → logprob: -4.439470291137695
    4. ')' → logprob: -4.814470291137695
    5. 's' → logprob: -5.064470291137695
    6. ' )' → logprob: -5.064470291137695
    7. '()' → logprob: -5.439470291137695
    8. '.' → logprob: -5.689470291137695
    9. '#' → logprob: -5.814470291137695
    10. '_' → logprob: -6.314470291137695

Token 20: ' cette' (ID: 7696)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.34274470806121826
    2. ' la' → logprob: -1.5927447080612183
    3. '()' → logprob: -3.342744827270508
    4. 'une' → logprob: -3.717744827270508
    5. ' l' → logprob: -4.717744827270508
    6. 'l' → logprob: -5.467744827270508
    7. ' ' → logprob: -5.842744827270508
    8. ' ' → logprob: -5.842744827270508
    9. 'la' → logprob: -5.842744827270508
    10. 'ent' → logprob: -7.217744827270508

Token 21: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.2117862105369568
    2. ' chaîne' → logprob: -1.9617862701416016
    3. ' ' → logprob: -3.9617862701416016
    4. ' entrée' → logprob: -4.836786270141602
    5. 'ligne' → logprob: -4.961786270141602
    6. ' chaine' → logprob: -5.586786270141602
    7. ' sais' → logprob: -5.961786270141602
    8. ' valeur' → logprob: -6.336786270141602
    9. ' donnée' → logprob: -6.586786270141602
    10. '_' → logprob: -6.961786270141602

Token 22: ' sous' (ID: 14487)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6258228421211243
    2. ' ' → logprob: -1.0008227825164795
    3. ',' → logprob: -3.1258227825164795
    4. '_' → logprob: -4.375823020935059
    5. '#' → logprob: -4.500823020935059
    6. 's' → logprob: -4.875823020935059
    7. 'user' → logprob: -5.375823020935059
    8. ')' → logprob: -5.625823020935059
    9. ' =' → logprob: -6.750823020935059
    10. '\' → logprob: -6.750823020935059

Token 23: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.08630859106779099
    2. 'forme' → logprob: -2.586308479309082
    3. 'form' → logprob: -5.711308479309082
    4. 'chaine' → logprob: -5.836308479309082
    5. 'la' → logprob: -7.961308479309082
    6. 'ent' → logprob: -8.336308479309082
    7. ' form' → logprob: -8.961308479309082
    8. 'format' → logprob: -9.086308479309082
    9. 'forma' → logprob: -9.461308479309082
    10. ' la' → logprob: -9.461308479309082

Token 24: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.035981930792331696
    2. ' de' → logprob: -3.7859818935394287
    3. 'd' → logprob: -4.535982131958008
    4. 'de' → logprob: -6.410982131958008
    5. 's' → logprob: -8.410982131958008
    6. ' ' → logprob: -10.785982131958008
    7. '_' → logprob: -11.910982131958008
    8. 'str' → logprob: -12.160982131958008
    9. ''d' → logprob: -12.660982131958008
    10. ''' → logprob: -12.785982131958008

Token 25: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7877519130706787
    2. ' chaîne' → logprob: -0.9127519130706787
    3. 'cha' → logprob: -2.1627519130706787
    4. ' chaine' → logprob: -3.7877519130706787
    5. 'texte' → logprob: -6.162752151489258
    6. 'str' → logprob: -6.412752151489258
    7. 'string' → logprob: -7.037752151489258
    8. ' string' → logprob: -7.537752151489258
    9. ' cha' → logprob: -8.287752151489258
    10. ' texte' → logprob: -8.537752151489258

Token 26: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2296507358551025
    2. ' ' → logprob: -1.3546507358551025
    3. 's' → logprob: -1.8546507358551025
    4. '#' → logprob: -2.4796507358551025
    5. '.' → logprob: -2.8546507358551025
    6. ')' → logprob: -3.3546507358551025
    7. ',' → logprob: -3.7296507358551025
    8. '(' → logprob: -4.729650497436523
    9. 'user' → logprob: -4.729650497436523
    10. 'de' → logprob: -4.854650497436523

Token 27: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.14533691108226776
    2. ' caractères' → logprob: -2.020336866378784
    3. 'texte' → logprob: -6.145337104797363
    4. ' caracteres' → logprob: -8.645337104797363
    5. ' caractère' → logprob: -9.145337104797363
    6. ' caract' → logprob: -9.145337104797363
    7. '#' → logprob: -10.020337104797363
    8. '```' → logprob: -10.770337104797363
    9. 'chars' → logprob: -11.645337104797363
    10. 'char' → logprob: -11.645337104797363

Token 28: ' (' (ID: 350)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0678825378417969
    2. 'user' → logprob: -1.9428825378417969
    3. 't' → logprob: -2.192882537841797
    4. 's' → logprob: -2.317882537841797
    5. 'n' → logprob: -2.817882537841797
    6. '#' → logprob: -2.817882537841797
    7. 'texte' → logprob: -2.942882537841797
    8. 'l' → logprob: -3.567882537841797
    9. 'text' → logprob: -3.942882537841797
    10. '```' → logprob: -4.567882537841797

Token 29: 'string' (ID: 1655)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0054827602580189705
    2. ').' → logprob: -5.6304826736450195
    3. '')' → logprob: -7.0054826736450195
    4. '")' → logprob: -8.00548267364502
    5. ' )' → logprob: -9.00548267364502
    6. 'chaine' → logprob: -9.13048267364502
    7. 's' → logprob: -9.88048267364502
    8. 'string' → logprob: -10.13048267364502
    9. '))' → logprob: -10.25548267364502
    10. '"' → logprob: -10.38048267364502

Token 30: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011487908195704222
    2. ').' → logprob: -7.001148700714111
    3. '#' → logprob: -9.50114917755127
    4. ' )' → logprob: -10.12614917755127
    5. '")' → logprob: -10.25114917755127
    6. 'e' → logprob: -10.37614917755127
    7. ')#' → logprob: -11.37614917755127
    8. '')' → logprob: -11.75114917755127
    9. ',' → logprob: -11.75114917755127
    10. '.' → logprob: -12.37614917755127

Token 31: '#' (ID: 2)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.42223459482192993
    2. 'text' → logprob: -2.172234535217285
    3. 'user' → logprob: -2.297234535217285
    4. 's' → logprob: -3.047234535217285
    5. 't' → logprob: -3.172234535217285
    6. 'txt' → logprob: -5.172234535217285
    7. '```' → logprob: -5.297234535217285
    8. 'l' → logprob: -5.422234535217285
    9. 'n' → logprob: -5.672234535217285
    10. 'ligne' → logprob: -5.672234535217285

Token 32: ' L' (ID: 451)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2500052452087402
    2. 'u' → logprob: -1.6250052452087402
    3. 'l' → logprob: -2.0000052452087402
    4. 'texte' → logprob: -2.1250052452087402
    5. 'text' → logprob: -2.6250052452087402
    6. 's' → logprob: -2.7500052452087402
    7. '#' → logprob: -3.2500052452087402
    8. 'user' → logprob: -3.6250052452087402
    9. 'n' → logprob: -3.7500052452087402
    10. 'x' → logprob: -5.12500524520874

Token 33: ''utilisateur' (ID: 140803)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010884876362979412
    2. 'e' → logprob: -5.385884761810303
    3. '#' → logprob: -6.010884761810303
    4. ''utilisateur' → logprob: -6.635884761810303
    5. 'igne' → logprob: -7.010884761810303
    6. ''' → logprob: -7.510884761810303
    7. 'i' → logprob: -7.885884761810303
    8. 'u' → logprob: -9.635885238647461
    9. ''entrée' → logprob: -9.635885238647461
    10. 'input' → logprob: -9.635885238647461

Token 34: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04428493604063988
    2. '_' → logprob: -3.5442848205566406
    3. 's' → logprob: -4.794284820556641
    4. '.' → logprob: -7.419284820556641
    5. ' )' → logprob: -7.419284820556641
    6. '<|end|>' → logprob: -7.419284820556641
    7. ')' → logprob: -7.544284820556641
    8. ' a' → logprob: -7.544284820556641
    9. 'a' → logprob: -7.794284820556641
    10. ''' → logprob: -8.16928482055664

Token 35: ' cens' (ID: 55288)
  Prédit: ' invité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' invité' → logprob: -0.022353606298565865
    2. ' invit' → logprob: -4.397353649139404
    3. ' ' → logprob: -5.022353649139404
    4. ' invite' → logprob: -6.897353649139404
    5. 'inv' → logprob: -7.147353649139404
    6. ' invited' → logprob: -8.397353172302246
    7. ' invités' → logprob: -8.397353172302246
    8. ' inviter' → logprob: -8.897353172302246
    9. ' une' → logprob: -9.022353172302246
    10. 'invite' → logprob: -9.022353172302246

Token 36: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.006977736949920654
    2. 'ée' → logprob: -5.006977558135986
    3. '#' → logprob: -9.256978034973145
    4. 'és' → logprob: -9.631978034973145
    5. 'è' → logprob: -10.881978034973145
    6. 'sé' → logprob: -10.881978034973145
    7. 's' → logprob: -11.006978034973145
    8. 'e' → logprob: -11.006978034973145
    9. '```' → logprob: -11.256978034973145
    10. 'se' → logprob: -12.881978034973145

Token 37: ' entrer' (ID: 111917)
  Prédit: ' saisir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.017320208251476288
    2. ' entrer' → logprob: -4.392320156097412
    3. 's' → logprob: -5.892320156097412
    4. ' écrire' → logprob: -7.642320156097412
    5. ' fournir' → logprob: -8.01732063293457
    6. ' taper' → logprob: -8.26732063293457
    7. ' sais' → logprob: -8.64232063293457
    8. 'entr' → logprob: -8.76732063293457
    9. ' rentrer' → logprob: -9.01732063293457
    10. ' continuer' → logprob: -9.51732063293457

Token 38: ' deux' (ID: 10301)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3897090554237366
    2. ' une' → logprob: -1.2647089958190918
    3. ' du' → logprob: -4.014708995819092
    4. ' ' → logprob: -5.139708995819092
    5. 'un' → logprob: -5.139708995819092
    6. 'une' → logprob: -6.139708995819092
    7. ' u' → logprob: -7.139708995819092
    8. ' le' → logprob: -7.389708995819092
    9. ' au' → logprob: -7.389708995819092
    10. ' son' → logprob: -7.514708995819092

Token 39: ' nombres' (ID: 76205)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.4848700761795044
    2. ' nombres' → logprob: -1.2348700761795044
    3. 'm' → logprob: -3.359869956970215
    4. ' ' → logprob: -3.984869956970215
    5. ' espaces' → logprob: -4.109869956970215
    6. ' ent' → logprob: -5.234869956970215
    7. 'nombre' → logprob: -5.234869956970215
    8. ' mot' → logprob: -5.859869956970215
    9. 'mot' → logprob: -6.109869956970215
    10. ' nombre' → logprob: -6.359869956970215

Token 40: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22819213569164276
    2. 'x' → logprob: -2.728192090988159
    3. 'a' → logprob: -3.353192090988159
    4. ' ' → logprob: -3.353192090988159
    5. ',' → logprob: -3.478192090988159
    6. 's' → logprob: -4.603192329406738
    7. '#' → logprob: -5.228192329406738
    8. 'nombre' → logprob: -5.603192329406738
    9. ')' → logprob: -5.853192329406738
    10. 'i' → logprob: -6.103192329406738

Token 41: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.20331020653247833
    2. 'i' → logprob: -1.703310251235962
    3. 'ier' → logprob: -7.578310012817383
    4. '```' → logprob: -7.953310012817383
    5. ' i' → logprob: -8.203310012817383
    6. 'ières' → logprob: -8.578310012817383
    7. 'ié' → logprob: -9.453310012817383
    8. '   ' → logprob: -9.578310012817383
    9. '#' → logprob: -9.828310012817383
    10. '	i' → logprob: -10.203310012817383

Token 42: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.080106720328331
    2. 'x' → logprob: -2.830106735229492
    3. 'a' → logprob: -4.705106735229492
    4. 'nombre' → logprob: -5.455106735229492
    5. 'i' → logprob: -7.080106735229492
    6. ',' → logprob: -7.455106735229492
    7. '#' → logprob: -7.580106735229492
    8. 'u' → logprob: -7.830106735229492
    9. 's' → logprob: -7.830106735229492
    10. 'e' → logprob: -8.205106735229492

Token 43: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.1269499510526657
    2. 'é' → logprob: -2.1269500255584717
    3. 'es' → logprob: -11.37695026397705
    4. '```' → logprob: -12.50195026397705
    5. 'ée' → logprob: -13.75195026397705
    6. 'e' → logprob: -13.87695026397705
    7. '#' → logprob: -14.12695026397705
    8. 'ès' → logprob: -14.25195026397705
    9. 'ées' → logprob: -14.50195026397705
    10. 'er' → logprob: -14.75195026397705

Token 44: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03039226122200489
    2. 'par' → logprob: -3.5303921699523926
    3. ' ' → logprob: -9.15539264678955
    4. 'es' → logprob: -9.15539264678955
    5. '_par' → logprob: -9.28039264678955
    6. '  ' → logprob: -9.90539264678955
    7. ' d' → logprob: -10.15539264678955
    8. ' by' → logprob: -10.28039264678955
    9. 'e' → logprob: -10.78039264678955
    10. '(par' → logprob: -10.90539264678955

Token 45: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7948461771011353
    2. 'un' → logprob: -1.0448461771011353
    3. ''un' → logprob: -2.1698460578918457
    4. ' ' → logprob: -3.0448460578918457
    5. ''' → logprob: -4.044846057891846
    6. 'une' → logprob: -5.294846057891846
    7. ' une' → logprob: -5.919846057891846
    8. '  ' → logprob: -6.294846057891846
    9. ' espace' → logprob: -6.919846057891846
    10. ''une' → logprob: -7.169846057891846

Token 46: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.4073598086833954
    2. 'es' → logprob: -1.6573598384857178
    3. ' ' → logprob: -2.5323598384857178
    4. ''espace' → logprob: -3.0323598384857178
    5. 'esp' → logprob: -5.907359600067139
    6. 'space' → logprob: -5.907359600067139
    7. '’espace' → logprob: -6.157359600067139
    8. ''' → logprob: -6.157359600067139
    9. 'e' → logprob: -6.282359600067139
    10. '  ' → logprob: -6.407359600067139

Token 47: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0895114317536354
    2. 'x' → logprob: -3.3395113945007324
    3. '#' → logprob: -4.589511394500732
    4. 'i' → logprob: -5.089511394500732
    5. 's' → logprob: -5.089511394500732
    6. 'u' → logprob: -5.089511394500732
    7. ' ' → logprob: -5.464511394500732
    8. 'e' → logprob: -5.714511394500732
    9. 'user' → logprob: -5.839511394500732
    10. 't' → logprob: -6.214511394500732

Token 48: ' par' (ID: 686)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28180158138275146
    2. 's' → logprob: -2.406801700592041
    3. ' ' → logprob: -2.781801700592041
    4. ' n' → logprob: -3.281801700592041
    5. 'x' → logprob: -3.906801700592041
    6. 'a' → logprob: -5.531801700592041
    7. 'e' → logprob: -5.781801700592041
    8. 'i' → logprob: -5.906801700592041
    9. ' i' → logprob: -5.906801700592041
    10. 't' → logprob: -6.031801700592041

Token 49: ' exemple' (ID: 26320)
  Prédit: ' exemple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exemple' → logprob: -0.42806825041770935
    2. 'ex' → logprob: -2.178068161010742
    3. ' example' → logprob: -2.178068161010742
    4. ' ' → logprob: -2.928068161010742
    5. ' ex' → logprob: -3.053068161010742
    6. 'ce' → logprob: -4.428068161010742
    7. ' e' → logprob: -6.178068161010742
    8. 'example' → logprob: -6.428068161010742
    9. 'e' → logprob: -6.553068161010742
    10. '	ex' → logprob: -7.303068161010742

Token 50: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03059552237391472
    2. '"' → logprob: -4.905595302581787
    3. '1' → logprob: -5.030595302581787
    4. ''' → logprob: -5.155595302581787
    5. ' :' → logprob: -6.030595302581787
    6. '32' → logprob: -6.530595302581787
    7. ' "' → logprob: -6.780595302581787
    8. '2' → logprob: -7.280595302581787
    9. ' ,' → logprob: -7.405595302581787
    10. ' '' → logprob: -7.405595302581787

Token 51: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03260456398129463
    2. '"' → logprob: -4.032604694366455
    3. '1' → logprob: -5.407604694366455
    4. '32' → logprob: -5.782604694366455
    5. ''' → logprob: -6.032604694366455
    6. '2' → logprob: -6.907604694366455
    7. '3' → logprob: -7.157604694366455
    8. '`' → logprob: -7.907604694366455
    9. '34' → logprob: -7.907604694366455
    10. '5' → logprob: -8.282604217529297

Token 52: '5' (ID: 20)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.3232630491256714
    2. '3' → logprob: -2.073263168334961
    3. '10' → logprob: -3.073263168334961
    4. '1' → logprob: -3.073263168334961
    5. '2' → logprob: -3.823263168334961
    6. '5' → logprob: -4.323263168334961
    7. '4' → logprob: -4.573263168334961
    8. '23' → logprob: -4.948263168334961
    9. '25' → logprob: -6.698263168334961
    10. '15' → logprob: -6.948263168334961

Token 53: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0003764535649679601
    2. '7' → logprob: -9.25037670135498
    3. '  ' → logprob: -9.75037670135498
    4. '3' → logprob: -9.87537670135498
    5. '6' → logprob: -10.62537670135498
    6. '8' → logprob: -10.62537670135498
    7. '2' → logprob: -10.87537670135498
    8. ' ' → logprob: -11.00037670135498
    9. ' "' → logprob: -11.37537670135498
    10. '4' → logprob: -11.75037670135498

Token 54: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.708672046661377
    2. '7' → logprob: -1.333672046661377
    3. '3' → logprob: -2.333672046661377
    4. '12' → logprob: -2.583672046661377
    5. '8' → logprob: -3.333672046661377
    6. ' ' → logprob: -4.208672046661377
    7. '6' → logprob: -5.833672046661377
    8. '2' → logprob: -5.833672046661377
    9. '9' → logprob: -6.083672046661377
    10. '23' → logprob: -6.083672046661377

Token 55: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000373950315406546
    2. ' "' → logprob: -8.250373840332031
    3. '")' → logprob: -9.875373840332031
    4. '"""' → logprob: -11.375373840332031
    5. ')"' → logprob: -11.750373840332031
    6. '".' → logprob: -11.750373840332031
    7. ')' → logprob: -11.750373840332031
    8. '"
' → logprob: -11.875373840332031
    9. '```' → logprob: -12.375373840332031
    10. '2' → logprob: -13.125373840332031

Token 56: 'ligne' (ID: 94660)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05987522751092911
    2. '#' → logprob: -3.809875249862671
    3. 'user' → logprob: -4.934875011444092
    4. 'x' → logprob: -5.059875011444092
    5. 'nombre' → logprob: -5.309875011444092
    6. 'u' → logprob: -5.559875011444092
    7. 'numbers' → logprob: -5.559875011444092
    8. 's' → logprob: -6.184875011444092
    9. '```' → logprob: -6.559875011444092
    10. 'a' → logprob: -6.809875011444092

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00784770306199789
    2. '=' → logprob: -5.007847785949707
    3. 's' → logprob: -7.007847785949707
    4. '_' → logprob: -8.507847785949707
    5. ' ' → logprob: -12.132847785949707
    6. '=input' → logprob: -12.382847785949707
    7. '.' → logprob: -12.757847785949707
    8. ' ' → logprob: -12.882847785949707
    9. '_input' → logprob: -13.132847785949707
    10. ')' → logprob: -13.507847785949707

Token 58: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759449005126953
    2. 'input' → logprob: -0.8259449005126953
    3. '=input' → logprob: -12.575944900512695
    4. '(input' → logprob: -14.450944900512695
    5. ' ' → logprob: -14.575944900512695
    6. '	input' → logprob: -14.950944900512695
    7. ' ' → logprob: -15.325944900512695
    8. '<input' → logprob: -15.950944900512695
    9. ',input' → logprob: -17.200944900512695
    10. '.input' → logprob: -17.200944900512695

Token 59: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021625140216201544
    2. '("("' → logprob: -7.127162456512451
    3. '('' → logprob: -7.252162456512451
    4. '()' → logprob: -7.877162456512451
    5. '("' → logprob: -8.50216293334961
    6. '("")' → logprob: -10.62716293334961
    7. ' (' → logprob: -11.12716293334961
    8. '(`' → logprob: -12.00216293334961
    9. '("(' → logprob: -12.00216293334961
    10. '(
' → logprob: -12.00216293334961

Token 60: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4012920558452606
    2. '.split' → logprob: -1.151292085647583
    3. '.strip' → logprob: -4.776291847229004
    4. '.s' → logprob: -6.276291847229004
    5. ' .' → logprob: -6.276291847229004
    6. 's' → logprob: -7.276291847229004
    7. 'split' → logprob: -7.401291847229004
    8. ' ' → logprob: -8.526291847229004
    9. '.l' → logprob: -8.776291847229004
    10. 'spl' → logprob: -9.401291847229004

Token 61: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6901121139526367
    2. '#' → logprob: -1.8151121139526367
    3. 'a' → logprob: -2.3151121139526367
    4. ' nombres' → logprob: -2.8151121139526367
    5. 'numbers' → logprob: -2.9401121139526367
    6. 'part' → logprob: -3.4401121139526367
    7. 'parts' → logprob: -3.8151121139526367
    8. ' parts' → logprob: -4.315112113952637
    9. 'nombre' → logprob: -4.315112113952637
    10. ' a' → logprob: -4.690112113952637

Token 62: ' méthode' (ID: 71490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0176770687103271
    2. ' ligne' → logprob: -1.8926770687103271
    3. 's' → logprob: -2.017677068710327
    4. ' parts' → logprob: -2.642677068710327
    5. 'ligne' → logprob: -2.767677068710327
    6. ' #' → logprob: -2.892677068710327
    7. 'parts' → logprob: -3.642677068710327
    8. ' partie' → logprob: -3.767677068710327
    9. 'l' → logprob: -4.142677307128906
    10. ' lignes' → logprob: -4.267677307128906

Token 63: ' split' (ID: 12648)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4581070840358734
    2. 'split' → logprob: -1.5831071138381958
    3. '.strip' → logprob: -2.8331069946289062
    4. 's' → logprob: -3.2081069946289062
    5. ' .' → logprob: -3.7081069946289062
    6. '.' → logprob: -3.9581069946289062
    7. '.s' → logprob: -4.958106994628906
    8. 'strip' → logprob: -6.083106994628906
    9. ' split' → logprob: -6.083106994628906
    10. ' ' → logprob: -6.208106994628906

Token 64: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011260490864515305
    2. '(' → logprob: -4.511260509490967
    3. '('' → logprob: -9.261260032653809
    4. ' ()' → logprob: -10.261260032653809
    5. '("' → logprob: -11.011260032653809
    6. '().' → logprob: -11.136260032653809
    7. '()`' → logprob: -12.011260032653809
    8. '```' → logprob: -12.386260032653809
    9. '<|end|>' → logprob: -12.511260032653809
    10. '()

' → logprob: -12.761260032653809

Token 65: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004073532298207283
    2. '(' → logprob: -5.754073619842529
    3. ' ()' → logprob: -8.254073143005371
    4. 'split' → logprob: -9.129073143005371
    5. '().' → logprob: -9.129073143005371
    6. '.split' → logprob: -9.379073143005371
    7. '<|end|>' → logprob: -10.004073143005371
    8. '('' → logprob: -10.129073143005371
    9. '.' → logprob: -10.254073143005371
    10. 'spl' → logprob: -10.379073143005371

Token 66: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -2.057743949990254e-05
    2. 'parer' → logprob: -12.000020980834961
    3. 'p' → logprob: -12.375020980834961
    4. 'paration' → logprob: -12.625020980834961
    5. 'par' → logprob: -12.750020980834961
    6. ' pare' → logprob: -13.625020980834961
    7. 'parent' → logprob: -13.875020980834961
    8. 'pa' → logprob: -15.125020980834961
    9. 'Pare' → logprob: -15.125020980834961
    10. 'para' → logprob: -15.375020980834961

Token 67: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00944993831217289
    2. '(' → logprob: -5.3844499588012695
    3. '('' → logprob: -5.3844499588012695
    4. '("' → logprob: -9.25944995880127
    5. ''' → logprob: -9.88444995880127
    6. ' ()' → logprob: -10.63444995880127
    7. '<|end|>' → logprob: -11.25944995880127
    8. ' ' → logprob: -11.88444995880127
    9. '("""' → logprob: -12.75944995880127
    10. 'la' → logprob: -12.88444995880127

Token 68: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.3515160381793976
    2. 'ligne' → logprob: -2.101516008377075
    3. 'chaine' → logprob: -2.601516008377075
    4. ' ligne' → logprob: -2.726516008377075
    5. 'cha' → logprob: -3.976516008377075
    6. ' chaine' → logprob: -4.226516246795654
    7. ' string' → logprob: -8.226515769958496
    8. ' ' → logprob: -8.351515769958496
    9. 's' → logprob: -8.476515769958496
    10. 'string' → logprob: -8.601515769958496

Token 69: ' '' (ID: 461)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21281149983406067
    2. '(' → logprob: -1.8378114700317383
    3. '('' → logprob: -3.7128114700317383
    4. ''' → logprob: -5.962811470031738
    5. '[' → logprob: -6.962811470031738
    6. '("' → logprob: -6.962811470031738
    7. 's' → logprob: -7.087811470031738
    8. ' ()' → logprob: -7.962811470031738
    9. ' (' → logprob: -8.087811470031738
    10. '"' → logprob: -8.462811470031738

Token 70: 'ligne' (ID: 94660)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027852831408381462
    2. 'ligne' → logprob: -3.652852773666382
    3. '(' → logprob: -7.277853012084961
    4. '(l' → logprob: -8.652853012084961
    5. 'l' → logprob: -8.777853012084961
    6. '('' → logprob: -8.902853012084961
    7. ' ligne' → logprob: -9.152853012084961
    8. ')' → logprob: -9.527853012084961
    9. '())' → logprob: -9.777853012084961
    10. ' ()' → logprob: -10.527853012084961

Token 71: ''' (ID: 6)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020161904394626617
    2. ' ()' → logprob: -7.252016067504883
    3. '('' → logprob: -7.627016067504883
    4. '(' → logprob: -7.752016067504883
    5. ''' → logprob: -8.877016067504883
    6. ')' → logprob: -10.002016067504883
    7. '.' → logprob: -10.502016067504883
    8. ' )' → logprob: -10.627016067504883
    9. ' ' → logprob: -10.877016067504883
    10. '("' → logprob: -11.002016067504883

Token 72: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01380674634128809
    2. '(' → logprob: -6.1388068199157715
    3. ' ' → logprob: -6.1388068199157715
    4. ' par' → logprob: -6.2638068199157715
    5. 'par' → logprob: -6.3888068199157715
    6. ' ()' → logprob: -6.8888068199157715
    7. '('' → logprob: -7.1388068199157715
    8. ''' → logprob: -7.6388068199157715
    9. '.' → logprob: -7.7638068199157715
    10. '[' → logprob: -7.8888068199157715

Token 73: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09287139773368835
    2. 'une' → logprob: -3.2178714275360107
    3. ' des' → logprob: -3.9678714275360107
    4. ' un' → logprob: -4.342871189117432
    5. ' ' → logprob: -5.592871189117432
    6. ' ['' → logprob: -5.717871189117432
    7. '['' → logprob: -6.092871189117432
    8. '[]' → logprob: -7.092871189117432
    9. ' les' → logprob: -7.217871189117432
    10. ' liste' → logprob: -7.217871189117432

Token 74: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.03420607000589371
    2. 'liste' → logprob: -3.4092061519622803
    3. 's' → logprob: -8.40920639038086
    4. 'list' → logprob: -9.15920639038086
    5. ' list' → logprob: -9.53420639038086
    6. 'Liste' → logprob: -9.65920639038086
    7. ' listes' → logprob: -10.15920639038086
    8. ' ' → logprob: -11.15920639038086
    9. ' Liste' → logprob: -11.28420639038086
    10. '['' → logprob: -12.28420639038086

Token 75: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1442681550979614
    2. '[]' → logprob: -1.5192681550979614
    3. '()' → logprob: -2.019268035888672
    4. '[:]' → logprob: -2.894268035888672
    5. '<|end|>' → logprob: -2.894268035888672
    6. '```' → logprob: -2.894268035888672
    7. ' des' → logprob: -3.519268035888672
    8. 'des' → logprob: -3.519268035888672
    9. '.' → logprob: -4.144268035888672
    10. '['' → logprob: -4.519268035888672

Token 76: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.043135177344083786
    2. 'cha' → logprob: -4.043135166168213
    3. ' tokens' → logprob: -5.543135166168213
    4. 'tokens' → logprob: -5.793135166168213
    5. ' mots' → logprob: -5.793135166168213
    6. 'chain' → logprob: -5.918135166168213
    7. ' chain' → logprob: -5.918135166168213
    8. 'strings' → logprob: -6.543135166168213
    9. 'm' → logprob: -6.543135166168213
    10. 'chaine' → logprob: -6.668135166168213

Token 77: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.14823056757450104
    2. 'cha' → logprob: -2.39823055267334
    3. 'chain' → logprob: -3.64823055267334
    4. '-cha' → logprob: -4.14823055267334
    5. '-chain' → logprob: -6.52323055267334
    6. ' chain' → logprob: -7.14823055267334
    7. 'chaine' → logprob: -7.14823055267334
    8. 'chains' → logprob: -7.77323055267334
    9. '_chain' → logprob: -8.14823055267334
    10. '_' → logprob: -8.39823055267334

Token 78: 'înes' (ID: 171517)
  Prédit: 'nes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.13537900149822235
    2. 'înes' → logprob: -2.1353790760040283
    3. 'ines' → logprob: -5.885378837585449
    4. ' nes' → logprob: -6.010378837585449
    5. 'r' → logprob: -6.760378837585449
    6. '```' → logprob: -8.13537883758545
    7. 'î' → logprob: -8.13537883758545
    8. 'mes' → logprob: -8.26037883758545
    9. 'nés' → logprob: -8.51037883758545
    10. '?' → logprob: -9.01037883758545

Token 79: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8317596316337585
    2. '[' → logprob: -1.3317596912384033
    3. '[]' → logprob: -2.5817596912384033
    4. '('' → logprob: -2.8317596912384033
    5. '(' → logprob: -3.3317596912384033
    6. 's' → logprob: -3.4567596912384033
    7. 'tokens' → logprob: -3.5817596912384033
    8. '```' → logprob: -4.706759452819824
    9. '[:]' → logprob: -4.831759452819824
    10. '['' → logprob: -5.206759452819824

Token 80: ' en' (ID: 469)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.4019975662231445
    2. 'split' → logprob: -2.1519975662231445
    3. '['' → logprob: -2.1519975662231445
    4. '()' → logprob: -2.2769975662231445
    5. '[' → logprob: -2.4019975662231445
    6. ' ' → logprob: -3.0269975662231445
    7. '<|end|>' → logprob: -3.2769975662231445
    8. 'tokens' → logprob: -3.5269975662231445
    9. '('' → logprob: -3.6519975662231445
    10. ''' → logprob: -3.6519975662231445

Token 81: ' utilisant' (ID: 92474)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2944397926330566
    2. ' espaces' → logprob: -2.0444397926330566
    3. '['' → logprob: -2.1694397926330566
    4. ' fonction' → logprob: -2.6694397926330566
    5. '<|end|>' → logprob: -2.9194397926330566
    6. ''espace' → logprob: -3.0444397926330566
    7. 'spl' → logprob: -3.2944397926330566
    8. 'fonction' → logprob: -3.5444397926330566
    9. '[' → logprob: -3.6694397926330566
    10. ''' → logprob: -4.044439792633057

Token 82: ' l' (ID: 305)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08038341999053955
    2. 'l' → logprob: -3.33038330078125
    3. ''un' → logprob: -4.20538330078125
    4. '"' → logprob: -4.95538330078125
    5. '()' → logprob: -5.58038330078125
    6. '('' → logprob: -5.58038330078125
    7. ''espace' → logprob: -5.83038330078125
    8. ' l' → logprob: -6.33038330078125
    9. 'le' → logprob: -6.58038330078125
    10. ''l' → logprob: -6.83038330078125

Token 83: ''espace' (ID: 118124)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8964274525642395
    2. ''espace' → logprob: -1.0214273929595947
    3. ''un' → logprob: -2.5214273929595947
    4. 's' → logprob: -2.8964273929595947
    5. ' ' → logprob: -4.146427631378174
    6. 'es' → logprob: -4.271427631378174
    7. ''esp' → logprob: -4.521427631378174
    8. 'l' → logprob: -4.771427631378174
    9. '’espace' → logprob: -5.146427631378174
    10. 'a' → logprob: -5.146427631378174

Token 84: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5262402296066284
    2. ''' → logprob: -1.1512402296066284
    3. '[' → logprob: -3.651240348815918
    4. ')' → logprob: -3.901240348815918
    5. '<|end|>' → logprob: -4.026240348815918
    6. 's' → logprob: -5.026240348815918
    7. '"' → logprob: -5.526240348815918
    8. '(' → logprob: -5.651240348815918
    9. '_' → logprob: -5.776240348815918
    10. '```' → logprob: -6.026240348815918

Token 85: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.07606945186853409
    2. 's' → logprob: -3.3260693550109863
    3. ' ' → logprob: -5.076069355010986
    4. ' séparation' → logprob: -5.201069355010986
    5. '<|end|>' → logprob: -5.326069355010986
    6. 'delimiter' → logprob: -5.326069355010986
    7. ' delimiter' → logprob: -5.576069355010986
    8. ' espace' → logprob: -6.701069355010986
    9. '(s' → logprob: -6.826069355010986
    10. 'sé' → logprob: -6.826069355010986

Token 86: 'ateur' (ID: 12477)
  Prédit: 'ateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.2793492376804352
    2. 'a' → logprob: -2.5293493270874023
    3. 'r' → logprob: -3.1543493270874023
    4. 'ation' → logprob: -3.4043493270874023
    5. 'par' → logprob: -3.4043493270874023
    6. ''' → logprob: -4.029349327087402
    7. 'ur' → logprob: -4.904349327087402
    8. ')' → logprob: -5.154349327087402
    9. '```' → logprob: -5.529349327087402
    10. 'ate' → logprob: -5.529349327087402

Token 87: ' par' (ID: 686)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.513909101486206
    2. '[' → logprob: -1.138909101486206
    3. ',' → logprob: -3.888909101486206
    4. '_' → logprob: -4.138909339904785
    5. '.' → logprob: -4.263909339904785
    6. ')' → logprob: -4.888909339904785
    7. 'tokens' → logprob: -5.513909339904785
    8. 'es' → logprob: -5.638909339904785
    9. '[:]' → logprob: -5.638909339904785
    10. '[]' → logprob: -6.388909339904785

Token 88: ' défaut' (ID: 79375)
  Prédit: ' défaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' défaut' → logprob: -0.03532370924949646
    2. 'dé' → logprob: -3.5353236198425293
    3. 'default' → logprob: -5.785323619842529
    4. 'def' → logprob: -7.160323619842529
    5. ' default' → logprob: -7.285323619842529
    6. 'd' → logprob: -7.785323619842529
    7. ' dé' → logprob: -8.285324096679688
    8. ' def' → logprob: -8.910324096679688
    9. ' déf' → logprob: -9.910324096679688
    10. 'de' → logprob: -10.535324096679688

Token 89: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5954499244689941
    2. 's' → logprob: -1.0954499244689941
    3. ',' → logprob: -3.345449924468994
    4. '_' → logprob: -4.220449924468994
    5. 'tokens' → logprob: -4.220449924468994
    6. 'n' → logprob: -4.595449924468994
    7. 'es' → logprob: -4.720449924468994
    8. 'm' → logprob: -4.970449924468994
    9. ')' → logprob: -5.845449924468994
    10. '```' → logprob: -6.470449924468994

Token 90: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48622795939445496
    2. 'tokens' → logprob: -1.8612279891967773
    3. '[' → logprob: -2.7362279891967773
    4. 'm' → logprob: -3.2362279891967773
    5. 's' → logprob: -3.7362279891967773
    6. ' mots' → logprob: -4.236227989196777
    7. 'parts' → logprob: -4.611227989196777
    8. 'es' → logprob: -4.861227989196777
    9. 'part' → logprob: -5.111227989196777
    10. ' nombres' → logprob: -5.236227989196777

Token 91: ' Si' (ID: 7832)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09682460874319077
    2. 'part' → logprob: -2.9718246459960938
    3. 'parts' → logprob: -4.221824645996094
    4. ' nombres' → logprob: -4.971824645996094
    5. 'numbers' → logprob: -5.471824645996094
    6. 'tokens' → logprob: -6.096824645996094
    7. 'nums' → logprob: -6.346824645996094
    8. ' parts' → logprob: -6.471824645996094
    9. 'nombre' → logprob: -6.596824645996094
    10. 'ent' → logprob: -6.971824645996094

Token 92: ' '' (ID: 461)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.8280277252197266
    2. ' '' → logprob: -1.9530277252197266
    3. ' ' → logprob: -2.0780277252197266
    4. ' ligne' → logprob: -2.5780277252197266
    5. 'len' → logprob: -3.0780277252197266
    6. ' l' → logprob: -3.2030277252197266
    7. 'ligne' → logprob: -3.3280277252197266
    8. ''' → logprob: -3.9530277252197266
    9. ' la' → logprob: -3.9530277252197266
    10. ' not' → logprob: -4.078027725219727

Token 93: 'ligne' (ID: 94660)
  Prédit: 'ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0346410907804966
    2. ' ligne' → logprob: -3.7846410274505615
    3. 'len' → logprob: -5.409641265869141
    4. 'l' → logprob: -6.159641265869141
    5. 'not' → logprob: -6.909641265869141
    6. ''' → logprob: -7.034641265869141
    7. ' not' → logprob: -7.284641265869141
    8. '"' → logprob: -8.28464126586914
    9. ' len' → logprob: -8.40964126586914
    10. 'la' → logprob: -8.40964126586914

Token 94: ''' (ID: 6)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.2262902855873108
    2. ' !=' → logprob: -2.726290225982666
    3. '.split' → logprob: -2.726290225982666
    4. '.' → logprob: -4.226290225982666
    5. ''' → logprob: -4.351290225982666
    6. ' ==' → logprob: -4.476290225982666
    7. '.startswith' → logprob: -5.351290225982666
    8. ' est' → logprob: -5.476290225982666
    9. 'ne' → logprob: -5.476290225982666
    10. ' n' → logprob: -5.851290225982666

Token 95: ' vaut' (ID: 83004)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9430667161941528
    2. ' contient' → logprob: -1.6930667161941528
    3. ' ==' → logprob: -1.9430667161941528
    4. ' n' → logprob: -2.4430665969848633
    5. '.strip' → logprob: -3.0680665969848633
    6. ' est' → logprob: -3.5680665969848633
    7. 'ne' → logprob: -3.8180665969848633
    8. ':' → logprob: -3.9430665969848633
    9. '.contains' → logprob: -4.568066596984863
    10. '.split' → logprob: -4.568066596984863

Token 96: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24165095388889313
    2. ' "' → logprob: -1.991650938987732
    3. ''' → logprob: -2.9916510581970215
    4. ' '' → logprob: -4.1166510581970215
    5. ' ' → logprob: -5.6166510581970215
    6. '""' → logprob: -5.9916510581970215
    7. ' une' → logprob: -7.1166510581970215
    8. ' ""' → logprob: -7.5541510581970215
    9. 'une' → logprob: -7.9291510581970215
    10. ''un' → logprob: -7.9916510581970215

Token 97: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.010287309065461159
    2. '"' → logprob: -5.760287284851074
    3. '7' → logprob: -5.885287284851074
    4. '10' → logprob: -6.135287284851074
    5. '2' → logprob: -7.635287284851074
    6. '12' → logprob: -7.760287284851074
    7. '4' → logprob: -7.760287284851074
    8. '8' → logprob: -8.135287284851074
    9. '3' → logprob: -8.635287284851074
    10. ' ' → logprob: -8.760287284851074

Token 98: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011072466149926186
    2. '3' → logprob: -4.511072635650635
    3. ' ' → logprob: -11.636072158813477
    4. '  ' → logprob: -12.261072158813477
    5. '8' → logprob: -12.886072158813477
    6. '   ' → logprob: -13.511072158813477
    7. '4' → logprob: -13.511072158813477
    8. '7' → logprob: -14.011072158813477
    9. '34' → logprob: -14.448572158813477
    10. ' "' → logprob: -14.448572158813477

Token 99: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2254386842250824
    2. ' ' → logprob: -1.6004387140274048
    3. '  ' → logprob: -11.975439071655273
    4. '7' → logprob: -12.725439071655273
    5. '2' → logprob: -12.850439071655273
    6. '   ' → logprob: -13.100439071655273
    7. '4' → logprob: -13.100439071655273
    8. ' ' → logprob: -13.100439071655273
    9. '8' → logprob: -13.287939071655273
    10. '"' → logprob: -13.787939071655273

Token 100: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1447252333164215
    2. '",' → logprob: -2.0197253227233887
    3. ' "' → logprob: -6.769725322723389
    4. ' ",' → logprob: -8.01972484588623
    5. '")' → logprob: -8.14472484588623
    6. '".' → logprob: -8.89472484588623
    7. ',' → logprob: -10.89472484588623
    8. ')' → logprob: -11.14472484588623
    9. ',"' → logprob: -11.39472484588623
    10. ')"' → logprob: -11.39472484588623

Token 101: ' alors' (ID: 17971)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.10723719745874405
    2. '['' → logprob: -2.6072371006011963
    3. ' la' → logprob: -4.607237339019775
    4. ' ["' → logprob: -5.482237339019775
    5. ' ligne' → logprob: -5.607237339019775
    6. ' alors' → logprob: -6.482237339019775
    7. 'ligne' → logprob: -6.482237339019775
    8. ' liste' → logprob: -6.857237339019775
    9. ' tokens' → logprob: -7.107237339019775
    10. ' ' → logprob: -7.232237339019775

Token 102: ' ligne' (ID: 19583)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.9378613829612732
    2. '['' → logprob: -1.187861442565918
    3. ' ligne' → logprob: -2.187861442565918
    4. ' parts' → logprob: -2.687861442565918
    5. 'ligne' → logprob: -3.062861442565918
    6. ' liste' → logprob: -4.187861442565918
    7. ' la' → logprob: -4.187861442565918
    8. 'liste' → logprob: -4.812861442565918
    9. 'parts' → logprob: -5.187861442565918
    10. 'la' → logprob: -5.437861442565918

Token 103: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.006865856237709522
    2. '.' → logprob: -6.131865978240967
    3. ' .' → logprob: -6.256865978240967
    4. '_split' → logprob: -6.506865978240967
    5. 'split' → logprob: -8.006865501403809
    6. '.s' → logprob: -8.381865501403809
    7. '_s' → logprob: -8.506865501403809
    8. '.strip' → logprob: -8.506865501403809
    9. 's' → logprob: -9.131865501403809
    10. 'spl' → logprob: -10.506865501403809

Token 104: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011136723682284355
    2. '(' → logprob: -4.511136531829834
    3. '('' → logprob: -9.761137008666992
    4. '()[' → logprob: -11.636137008666992
    5. '()`' → logprob: -12.886137008666992
    6. '()

' → logprob: -12.886137008666992
    7. '("' → logprob: -12.886137008666992
    8. ' ()' → logprob: -13.136137008666992
    9. '()">' → logprob: -13.136137008666992
    10. '()
' → logprob: -13.636137008666992

Token 105: ' ren' (ID: 5427)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.06633902341127396
    2. '[' → logprob: -3.1913390159606934
    3. ' ['' → logprob: -4.066339015960693
    4. '["' → logprob: -5.691339015960693
    5. '<|end|>' → logprob: -7.191339015960693
    6. ' vaut' → logprob: -8.066339492797852
    7. '=['' → logprob: -8.191339492797852
    8. '[]' → logprob: -8.691339492797852
    9. '[
' → logprob: -9.191339492797852
    10. ' ' → logprob: -9.441339492797852

Token 106: 'ver' (ID: 445)
  Prédit: 'voie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.005260203033685684
    2. 'ver' → logprob: -5.380259990692139
    3. 'v' → logprob: -7.755259990692139
    4. 'voi' → logprob: -9.380260467529297
    5. 'voit' → logprob: -10.005260467529297
    6. 'vo' → logprob: -10.130260467529297
    7. 'd' → logprob: -10.755260467529297
    8. 'voy' → logprob: -11.005260467529297
    9. '```' → logprob: -13.755260467529297
    10. 'dre' → logprob: -14.255260467529297

Token 107: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0006952775875106454
    2. 'era' → logprob: -8.12569522857666
    3. '['' → logprob: -9.00069522857666
    4. 'a' → logprob: -9.00069522857666
    5. 'rait' → logprob: -9.12569522857666
    6. ' ['' → logprob: -11.75069522857666
    7. 't' → logprob: -11.75069522857666
    8. 'e' → logprob: -12.62569522857666
    9. '[' → logprob: -12.62569522857666
    10. 'nera' → logprob: -12.75069522857666

Token 108: ' la' (ID: 557)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0033020011615008116
    2. '["' → logprob: -6.253302097320557
    3. ' ['' → logprob: -6.753302097320557
    4. '[' → logprob: -8.503301620483398
    5. ' ["' → logprob: -13.628301620483398
    6. '['_' → logprob: -14.503301620483398
    7. ''' → logprob: -15.128301620483398
    8. '[
' → logprob: -15.878301620483398
    9. '(['' → logprob: -16.0033016204834
    10. '[['' → logprob: -16.0033016204834

Token 109: ' liste' (ID: 31719)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.004498954396694899
    2. '["' → logprob: -5.5044989585876465
    3. ' ['' → logprob: -8.004498481750488
    4. '[' → logprob: -9.379498481750488
    5. ' ["' → logprob: -14.129498481750488
    6. 'list' → logprob: -14.379498481750488
    7. '['_' → logprob: -15.254498481750488
    8. 'liste' → logprob: -15.379498481750488
    9. '[]' → logprob: -16.879499435424805
    10. '[
' → logprob: -17.129499435424805

Token 110: ' ["' (ID: 9129)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.015609152615070343
    2. '["' → logprob: -4.515609264373779
    3. ' ['' → logprob: -5.515609264373779
    4. '[' → logprob: -7.640609264373779
    5. '(['' → logprob: -10.765608787536621
    6. ' ["' → logprob: -10.890608787536621
    7. '[:]' → logprob: -13.140608787536621
    8. '['_' → logprob: -13.890608787536621
    9. ''' → logprob: -14.140608787536621
    10. '=['' → logprob: -14.265608787536621

Token 111: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.692145012086257e-05
    2. ''' → logprob: -10.500046730041504
    3. '"' → logprob: -10.875046730041504
    4. ' ' → logprob: -15.125046730041504
    5. '```' → logprob: -17.00004768371582
    6. '2' → logprob: -17.25004768371582
    7. '`' → logprob: -17.87504768371582
    8. '55' → logprob: -18.00004768371582
    9. '53' → logprob: -18.12504768371582
    10. '3' → logprob: -18.50004768371582

Token 112: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.005264356732368469
    2. '","' → logprob: -5.3802642822265625
    3. '"' → logprob: -7.8802642822265625
    4. ' ",' → logprob: -8.755264282226562
    5. '3' → logprob: -9.630264282226562
    6. ',' → logprob: -10.380264282226562
    7. '',' → logprob: -12.505264282226562
    8. ' ' → logprob: -13.130264282226562
    9. ' ","' → logprob: -13.630264282226562
    10. ',",' → logprob: -13.880264282226562

Token 113: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004747079685330391
    2. '3' → logprob: -6.004746913909912
    3. ''' → logprob: -6.254746913909912
    4. ' "' → logprob: -8.12974739074707
    5. ' ' → logprob: -10.00474739074707
    6. ' '' → logprob: -12.62974739074707
    7. ' ' → logprob: -13.87974739074707
    8. '"""' → logprob: -14.12974739074707
    9. '```' → logprob: -14.75474739074707
    10. '2' → logprob: -15.00474739074707

Token 114: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '"' → logprob: -17.125
    4. '33' → logprob: -20.625
    5. '```' → logprob: -21.375
    6. ''' → logprob: -22.25
    7. '３' → logprob: -22.5
    8. '۳' → logprob: -23.0
    9. '' → logprob: -23.125
    10. '`' → logprob: -23.25

Token 115: '"]
' (ID: 14510)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.030242599546909332
    2. ']' → logprob: -3.530242681503296
    3. '']' → logprob: -7.655242443084717
    4. '"' → logprob: -11.405242919921875
    5. ' "]' → logprob: -12.530242919921875
    6. '"]
' → logprob: -14.030242919921875
    7. ' ]' → logprob: -14.155242919921875
    8. '`]' → logprob: -14.780242919921875
    9. '",' → logprob: -15.405242919921875
    10. ')' → logprob: -15.405242919921875

Token 116: 'liste' (ID: 69656)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18909403681755066
    2. ' nombres' → logprob: -2.939094066619873
    3. 'a' → logprob: -4.064094066619873
    4. 'nombre' → logprob: -4.439094066619873
    5. ',' → logprob: -4.689094066619873
    6. 'ent' → logprob: -4.814094066619873
    7. 'tokens' → logprob: -4.939094066619873
    8. 'val' → logprob: -5.064094066619873
    9. 's' → logprob: -5.314094066619873
    10. ' 
' → logprob: -5.314094066619873

Token 117: '_de' (ID: 5047)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18047082424163818
    2. '=' → logprob: -1.8054708242416382
    3. '_' → logprob: -7.805470943450928
    4. 's' → logprob: -8.43047046661377
    5. '_l' → logprob: -10.05547046661377
    6. '=[]' → logprob: -12.18047046661377
    7. '()' → logprob: -12.18047046661377
    8. 'es' → logprob: -12.18047046661377
    9. '_tokens' → logprob: -12.55547046661377
    10. '_=' → logprob: -12.55547046661377

Token 118: '_strings' (ID: 87251)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020644422620534897
    2. '_l' → logprob: -4.770644187927246
    3. 's' → logprob: -5.145644187927246
    4. ' _' → logprob: -6.520644187927246
    5. '_m' → logprob: -6.895644187927246
    6. '_tokens' → logprob: -7.020644187927246
    7. ' ' → logprob: -7.145644187927246
    8. '_s' → logprob: -7.270644187927246
    9. '_strings' → logprob: -7.895644187927246
    10. 'l' → logprob: -8.770644187927246

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004095143172889948
    2. '=' → logprob: -5.504095077514648
    3. 's' → logprob: -11.754095077514648
    4. ' =
' → logprob: -13.254095077514648
    5. ' ' → logprob: -13.254095077514648
    6. ' ' → logprob: -13.879095077514648
    7. ')' → logprob: -14.004095077514648
    8. ' =[' → logprob: -14.004095077514648
    9. '[' → logprob: -14.504095077514648
    10. '```' → logprob: -15.004095077514648

Token 120: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.25193482637405396
    2. 'ligne' → logprob: -1.5019347667694092
    3. 'line' → logprob: -13.251935005187988
    4. ' Ligne' → logprob: -13.751935005187988
    5. 'l' → logprob: -14.001935005187988
    6. ' lignes' → logprob: -14.251935005187988
    7. ' ' → logprob: -14.626935005187988
    8. 'lig' → logprob: -15.001935005187988
    9. ' ' → logprob: -15.251935005187988
    10. ' line' → logprob: -15.501935005187988

Token 121: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.03830058500170708
    2. '.' → logprob: -3.2883005142211914
    3. '.strip' → logprob: -8.913300514221191
    4. ' .' → logprob: -9.038300514221191
    5. '.s' → logprob: -12.288300514221191
    6. '.Split' → logprob: -14.163300514221191
    7. '.sp' → logprob: -16.038301467895508
    8. 'split' → logprob: -16.788301467895508
    9. '.rstrip' → logprob: -17.413301467895508
    10. '().' → logprob: -17.913301467895508

Token 122: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006728991866111755
    2. '(' → logprob: -5.0067291259765625
    3. '()`' → logprob: -13.006729125976562
    4. '()
' → logprob: -13.131729125976562
    5. ' ()' → logprob: -13.131729125976562
    6. '(
' → logprob: -13.381729125976562
    7. '('' → logprob: -13.756729125976562
    8. '()

' → logprob: -14.381729125976562
    9. '()[' → logprob: -14.506729125976562
    10. '();' → logprob: -14.631729125976562

Token 123: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9273641109466553
    2. 'a' → logprob: -1.0523641109466553
    3. 'n' → logprob: -1.8023641109466553
    4. ',' → logprob: -2.9273641109466553
    5. 'nombre' → logprob: -4.302364349365234
    6. '#' → logprob: -4.927364349365234
    7. 'x' → logprob: -5.802364349365234
    8. 's' → logprob: -6.052364349365234
    9. 'ent' → logprob: -6.052364349365234
    10. 'num' → logprob: -6.427364349365234

Token 124: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4017258584499359
    2. '#' → logprob: -1.6517258882522583
    3. 'n' → logprob: -2.5267257690429688
    4. 'nombre' → logprob: -3.4017257690429688
    5. 'ent' → logprob: -4.651725769042969
    6. 'result' → logprob: -5.151725769042969
    7. 'x' → logprob: -5.401725769042969
    8. 'num' → logprob: -6.651725769042969
    9. 'nb' → logprob: -6.651725769042969
    10. 'liste' → logprob: -7.151725769042969

Token 125: ' fonction' (ID: 17610)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.9082839488983154
    2. '#' → logprob: -1.2832839488983154
    3. 's' → logprob: -2.4082839488983154
    4. 'a' → logprob: -2.7832839488983154
    5. 'prem' → logprob: -3.0332839488983154
    6. 'liste' → logprob: -3.5332839488983154
    7. ' première' → logprob: -4.7832841873168945
    8. ' premiere' → logprob: -4.9082841873168945
    9. ' a' → logprob: -4.9082841873168945
    10. ' somme' → logprob: -5.0332841873168945

Token 126: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6850767731666565
    2. 'int' → logprob: -1.8100767135620117
    3. 'map' → logprob: -1.9350767135620117
    4. ' int' → logprob: -1.9350767135620117
    5. '[int' → logprob: -3.5600767135620117
    6. 's' → logprob: -5.060076713562012
    7. ' liste' → logprob: -5.685076713562012
    8. ' list' → logprob: -6.935076713562012
    9. '=int' → logprob: -7.435076713562012
    10. 'list' → logprob: -7.560076713562012

Token 127: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6941882967948914
    2. '(int' → logprob: -0.6941882967948914
    3. '(lambda' → logprob: -7.069188117980957
    4. '(
' → logprob: -9.194188117980957
    5. 'int' → logprob: -9.694188117980957
    6. '(str' → logprob: -11.819188117980957
    7. '(float' → logprob: -12.069188117980957
    8. '[int' → logprob: -12.069188117980957
    9. '<int' → logprob: -13.319188117980957
    10. '=int' → logprob: -13.569188117980957

Token 128: ' une' (ID: 2463)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2633991539478302
    2. 'int' → logprob: -1.5133991241455078
    3. '(' → logprob: -4.638399124145508
    4. ' int' → logprob: -6.388399124145508
    5. '	int' → logprob: -11.263399124145508
    6. '(lambda' → logprob: -11.638399124145508
    7. '(
' → logprob: -11.888399124145508
    8. '```' → logprob: -12.263399124145508
    9. '=int' → logprob: -12.763399124145508
    10. '(str' → logprob: -12.888399124145508

Token 129: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029841894283890724
    2. ' int' → logprob: -3.529841899871826
    3. '(int' → logprob: -10.029841423034668
    4. 'lambda' → logprob: -10.154841423034668
    5. ' lambda' → logprob: -13.029841423034668
    6. '=int' → logprob: -13.404841423034668
    7. '```' → logprob: -13.529841423034668
    8. '<int' → logprob: -13.779841423034668
    9. ' ' → logprob: -14.404841423034668
    10. '	int' → logprob: -14.654841423034668

Token 130: ' à' (ID: 1221)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0156853124499321
    2. ' int' → logprob: -4.515685081481934
    3. '(int' → logprob: -5.390685081481934
    4. '(' → logprob: -10.765685081481934
    5. '=int' → logprob: -11.015685081481934
    6. '<int' → logprob: -11.140685081481934
    7. '```' → logprob: -11.765685081481934
    8. '	int' → logprob: -13.015685081481934
    9. '(
' → logprob: -13.015685081481934
    10. '()' → logprob: -14.265685081481934

Token 131: ' chaque' (ID: 21194)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4756827652454376
    2. ' int' → logprob: -0.9756827354431152
    3. ' chaque' → logprob: -6.475682735443115
    4. ' each' → logprob: -10.350683212280273
    5. 'each' → logprob: -11.600683212280273
    6. '(int' → logprob: -12.475683212280273
    7. ' chacune' → logprob: -12.600683212280273
    8. '```' → logprob: -12.725683212280273
    9. ' la' → logprob: -13.225683212280273
    10. ' chacun' → logprob: -13.225683212280273

Token 132: ' élément' (ID: 99627)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33711716532707214
    2. ' int' → logprob: -1.4621171951293945
    3. ' élément' → logprob: -3.2121171951293945
    4. 'élé' → logprob: -4.7121171951293945
    5. ' element' → logprob: -5.5871171951293945
    6. 'element' → logprob: -6.9621171951293945
    7. '(int' → logprob: -8.962117195129395
    8. 'ent' → logprob: -9.462117195129395
    9. ' entier' → logprob: -9.587117195129395
    10. '<int' → logprob: -9.712117195129395

Token 133: ' d' (ID: 272)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45028987526893616
    2. ' int' → logprob: -1.5752898454666138
    3. '(int' → logprob: -1.9502898454666138
    4. '(' → logprob: -4.450289726257324
    5. '(
' → logprob: -7.450289726257324
    6. '=int' → logprob: -8.075289726257324
    7. 'str' → logprob: -8.450289726257324
    8. ' (' → logprob: -8.700289726257324
    9. ' ' → logprob: -9.075289726257324
    10. ' str' → logprob: -9.575289726257324

Token 134: ''un' (ID: 9788)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.35431498289108276
    2. ' liste' → logprob: -2.3543150424957275
    3. ' la' → logprob: -2.6043150424957275
    4. ' int' → logprob: -2.8543150424957275
    5. 'liste' → logprob: -2.8543150424957275
    6. 'la' → logprob: -4.479314804077148
    7. 'list' → logprob: -6.354314804077148
    8. 'l' → logprob: -8.229314804077148
    9. ' ' → logprob: -8.479314804077148
    10. ' list' → logprob: -8.979314804077148

Token 135: ' it' (ID: 480)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.3022021949291229
    2. 'élé' → logprob: -2.0522022247314453
    3. ' liste' → logprob: -2.3022022247314453
    4. 'iter' → logprob: -4.927202224731445
    5. ' élément' → logprob: -5.052202224731445
    6. '```' → logprob: -5.427202224731445
    7. 'list' → logprob: -5.427202224731445
    8. ' iterable' → logprob: -5.802202224731445
    9. 'la' → logprob: -6.677202224731445
    10. 'e' → logprob: -6.802202224731445

Token 136: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2322121411561966
    2. 'ération' → logprob: -2.6072120666503906
    3. 'é' → logprob: -2.8572120666503906
    4. 'érateur' → logprob: -3.4822120666503906
    5. 'e' → logprob: -3.9822120666503906
    6. 'ér' → logprob: -4.107212066650391
    7. 'éré' → logprob: -5.732212066650391
    8. 'ère' → logprob: -6.232212066650391
    9. 'érer' → logprob: -6.607212066650391
    10. 'érant' → logprob: -6.982212066650391

Token 137: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.005889803171157837
    2. 'ateur' → logprob: -5.880889892578125
    3. 'r' → logprob: -6.005889892578125
    4. 'map' → logprob: -8.380889892578125
    5. 'er' → logprob: -9.005889892578125
    6. 'liste' → logprob: -9.505889892578125
    7. 'ator' → logprob: -10.630889892578125
    8. 'list' → logprob: -10.755889892578125
    9. 'l' → logprob: -10.755889892578125
    10. 'a' → logprob: -10.880889892578125

Token 138: '.
' (ID: 558)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2654922306537628
    2. 'int' → logprob: -2.0154922008514404
    3. '(' → logprob: -2.3904922008514404
    4. ' int' → logprob: -5.2654924392700195
    5. '(
' → logprob: -7.0154924392700195
    6. ',' → logprob: -7.1404924392700195
    7. '(lambda' → logprob: -7.3904924392700195
    8. ' (' → logprob: -8.76549243927002
    9. '(str' → logprob: -8.76549243927002
    10. '=int' → logprob: -9.01549243927002

Token 139: '#' (ID: 2)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21252381801605225
    2. ' int' → logprob: -1.7125238180160522
    3. '(int' → logprob: -5.087523937225342
    4. 'i' → logprob: -5.837523937225342
    5. ' i' → logprob: -7.462523937225342
    6. 'in' → logprob: -8.212523460388184
    7. '(' → logprob: -8.462523460388184
    8. 'list' → logprob: -8.587523460388184
    9. '[int' → logprob: -8.712523460388184
    10. ' in' → logprob: -9.337523460388184

Token 140: ' Ici' (ID: 145754)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5634765028953552
    2. ' liste' → logprob: -1.5634765625
    3. 'int' → logprob: -3.1884765625
    4. 'map' → logprob: -3.3134765625
    5. 'ent' → logprob: -3.5634765625
    6. 'result' → logprob: -4.0634765625
    7. 'La' → logprob: -4.0634765625
    8. 'list' → logprob: -4.1884765625
    9. ' map' → logprob: -4.6884765625
    10. ' int' → logprob: -4.8134765625

Token 141: ',' (ID: 11)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9289407134056091
    2. ',' → logprob: -1.428940773010254
    3. ' map' → logprob: -1.928940773010254
    4. ' int' → logprob: -2.553940773010254
    5. ' list' → logprob: -3.053940773010254
    6. ' ,' → logprob: -3.678940773010254
    7. ' liste' → logprob: -3.928940773010254
    8. 'int' → logprob: -4.303940773010254
    9. ' ' → logprob: -4.428940773010254
    10. ' les' → logprob: -5.178940773010254

Token 142: ' int' (ID: 677)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7046074271202087
    2. 'la' → logprob: -1.7046074867248535
    3. 'int' → logprob: -1.9546074867248535
    4. 'map' → logprob: -2.8296074867248535
    5. ' on' → logprob: -3.2046074867248535
    6. ' int' → logprob: -3.4546074867248535
    7. ' map' → logprob: -3.5796074867248535
    8. 'liste' → logprob: -4.9546074867248535
    9. 'list' → logprob: -5.8296074867248535
    10. ' liste' → logprob: -5.9546074867248535

Token 143: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13021910190582275
    2. ')' → logprob: -2.630218982696533
    3. '()' → logprob: -3.130218982696533
    4. '<|end|>' → logprob: -6.380218982696533
    5. 's' → logprob: -6.505218982696533
    6. ',' → logprob: -6.755218982696533
    7. '(s' → logprob: -8.130219459533691
    8. '(...)' → logprob: -8.255219459533691
    9. '(
' → logprob: -8.380219459533691
    10. ']' → logprob: -9.255219459533691

Token 144: ' appli' (ID: 25550)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10144498944282532
    2. 'la' → logprob: -2.351444959640503
    3. ' utilisée' → logprob: -7.851445198059082
    4. 'le' → logprob: -8.351445198059082
    5. 'convert' → logprob: -9.601445198059082
    6. ' une' → logprob: -9.726445198059082
    7. '()' → logprob: -9.726445198059082
    8. ' ' → logprob: -9.851445198059082
    9. ')' → logprob: -9.976445198059082
    10. 'l' → logprob: -10.226445198059082

Token 145: 'qué' (ID: 23535)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030430877581238747
    2. ')' → logprob: -3.530430793762207
    3. ',' → logprob: -8.780430793762207
    4. '(
' → logprob: -8.780430793762207
    5. '()' → logprob: -8.905430793762207
    6. '(convert' → logprob: -10.530430793762207
    7. 's' → logprob: -10.655430793762207
    8. ' à' → logprob: -10.905430793762207
    9. ' ' → logprob: -11.155430793762207
    10. '(e' → logprob: -11.405430793762207

Token 146: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018521318212151527
    2. ',' → logprob: -4.643521308898926
    3. ')' → logprob: -5.143521308898926
    4. ' à' → logprob: -6.768521308898926
    5. ' ' → logprob: -7.643521308898926
    6. '(
' → logprob: -7.643521308898926
    7. 's' → logprob: -9.018521308898926
    8. '<|end|>' → logprob: -9.018521308898926
    9. '(s' → logprob: -9.518521308898926
    10. 'à' → logprob: -9.768521308898926

Token 147: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.028673194348812103
    2. ' chacune' → logprob: -4.52867317199707
    3. ' each' → logprob: -4.77867317199707
    4. ' liste' → logprob: -5.27867317199707
    5. 'each' → logprob: -6.77867317199707
    6. ' chacun' → logprob: -7.02867317199707
    7. 'cha' → logprob: -7.15367317199707
    8. 'liste' → logprob: -7.27867317199707
    9. ' toutes' → logprob: -9.02867317199707
    10. ' tous' → logprob: -9.77867317199707

Token 148: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07913707941770554
    2. ' élément' → logprob: -2.579137086868286
    3. 'element' → logprob: -9.079136848449707
    4. ' element' → logprob: -9.704136848449707
    5. ' chaîne' → logprob: -11.079136848449707
    6. ')' → logprob: -11.204136848449707
    7. ' liste' → logprob: -11.579136848449707
    8. 'é' → logprob: -11.579136848449707
    9. ' éléments' → logprob: -12.329136848449707
    10. ' string' → logprob: -12.579136848449707

Token 149: ' de' (ID: 334)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3554934859275818
    2. '(' → logprob: -1.2304935455322266
    3. '(
' → logprob: -5.605493545532227
    4. ' de' → logprob: -5.980493545532227
    5. ')' → logprob: -7.980493545532227
    6. ' (' → logprob: -9.105493545532227
    7. '(

' → logprob: -9.105493545532227
    8. 'de' → logprob: -9.355493545532227
    9. ' ' → logprob: -10.355493545532227
    10. 'l' → logprob: -10.730493545532227

Token 150: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.16094361245632172
    2. 'liste' → logprob: -1.910943627357483
    3. ' la' → logprob: -7.285943508148193
    4. 'la' → logprob: -10.535943984985352
    5. 'list' → logprob: -13.035943984985352
    6. 'l' → logprob: -13.660943984985352
    7. 'ligne' → logprob: -14.035943984985352
    8. ' ' → logprob: -14.410943984985352
    9. 'lista' → logprob: -14.785943984985352
    10. ' listes' → logprob: -15.035943984985352

Token 151: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0009410003549419343
    2. '_' → logprob: -7.000940799713135
    3. 'de' → logprob: -11.625941276550293
    4. '(_' → logprob: -12.500941276550293
    5. '(' → logprob: -12.625941276550293
    6. 's' → logprob: -12.875941276550293
    7. '_of' → logprob: -13.000941276550293
    8. '_d' → logprob: -13.625941276550293
    9. ' _' → logprob: -13.750941276550293
    10. '_l' → logprob: -13.750941276550293

Token 152: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.0009184855734929442
    2. 'strings' → logprob: -7.000918388366699
    3. 's' → logprob: -13.1259183883667
    4. '_' → logprob: -13.5009183883667
    5. 'Strings' → logprob: -13.6259183883667
    6. 'tring' → logprob: -14.3759183883667
    7. '_string' → logprob: -14.6259183883667
    8. '_s' → logprob: -15.0009183883667
    9. '(strings' → logprob: -15.3759183883667
    10. ' strings' → logprob: -15.3759183883667

Token 153: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2129107415676117
    2. ',' → logprob: -1.712910771369934
    3. '(' → logprob: -5.9629106521606445
    4. 'liste' → logprob: -6.2129106521606445
    5. ' )' → logprob: -6.3379106521606445
    6. ',
' → logprob: -6.4629106521606445
    7. ')
' → logprob: -7.0879106521606445
    8. '(
' → logprob: -7.2129106521606445
    9. '()' → logprob: -7.7129106521606445
    10. '(l' → logprob: -8.212910652160645

Token 154: ' ce' (ID: 2357)
  Prédit: ' ce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.2491044998168945
    2. 'liste' → logprob: -1.2491044998168945
    3. ' liste' → logprob: -2.2491044998168945
    4. ' ' → logprob: -2.8741044998168945
    5. ' afin' → logprob: -2.8741044998168945
    6. ')' → logprob: -3.2491044998168945
    7. 'ce' → logprob: -4.3741044998168945
    8. ',' → logprob: -4.4991044998168945
    9. 'convert' → logprob: -4.6241044998168945
    10. ' la' → logprob: -4.7491044998168945

Token 155: ' qui' (ID: 2780)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9489530920982361
    2. '[' → logprob: -1.8239531517028809
    3. ',' → logprob: -2.073953151702881
    4. '_' → logprob: -2.198953151702881
    5. 'space' → logprob: -2.698953151702881
    6. 'es' → logprob: -3.573953151702881
    7. ''' → logprob: -3.823953151702881
    8. ' espace' → logprob: -4.448953151702881
    9. '.' → logprob: -4.698953151702881
    10. ' )' → logprob: -4.823953151702881

Token 156: ' permet' (ID: 11798)
  Prédit: ' permet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.941983699798584
    2. ' transforme' → logprob: -1.316983699798584
    3. ' crée' → logprob: -1.316983699798584
    4. ' convert' → logprob: -3.066983699798584
    5. ' donne' → logprob: -4.691983699798584
    6. 'convert' → logprob: -4.816983699798584
    7. 'transform' → logprob: -6.316983699798584
    8. ' les' → logprob: -6.816983699798584
    9. ' revient' → logprob: -7.191983699798584
    10. ' créé' → logprob: -7.316983699798584

Token 157: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3667542636394501
    2. 'de' → logprob: -1.6167542934417725
    3. 'd' → logprob: -2.6167542934417725
    4. ' d' → logprob: -3.3667542934417725
    5. 't' → logprob: -7.741754055023193
    6. '#' → logprob: -7.991754055023193
    7. ' ' → logprob: -9.991754531860352
    8. 'transform' → logprob: -10.991754531860352
    9. ' ' → logprob: -11.116754531860352
    10. '	d' → logprob: -11.991754531860352

Token 158: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.8235175609588623
    2. 'convert' → logprob: -1.0735175609588623
    3. 'transform' → logprob: -1.5735175609588623
    4. ' transformer' → logprob: -4.573517799377441
    5. ' convert' → logprob: -7.073517799377441
    6. 'ob' → logprob: -7.573517799377441
    7. ' obtenir' → logprob: -8.948517799377441
    8. 'converter' → logprob: -9.448517799377441
    9. 'con' → logprob: -9.698517799377441
    10. '#' → logprob: -11.448517799377441

Token 159: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.23001989722251892
    2. ' liste' → logprob: -2.3550198078155518
    3. ' les' → logprob: -2.9800198078155518
    4. ' la' → logprob: -3.7300198078155518
    5. ' ' → logprob: -3.8550198078155518
    6. ' each' → logprob: -5.480020046234131
    7. ' une' → logprob: -6.480020046234131
    8. 'liste' → logprob: -6.855020046234131
    9. ' list' → logprob: -6.980020046234131
    10. ')' → logprob: -6.980020046234131

Token 160: ' string' (ID: 1621)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.7707326412200928
    2. ' ' → logprob: -1.5207326412200928
    3. ' string' → logprob: -2.3957326412200928
    4. 'élé' → logprob: -2.5207326412200928
    5. ' liste' → logprob: -2.5207326412200928
    6. ' element' → logprob: -3.6457326412200928
    7. ' chaîne' → logprob: -4.020732879638672
    8. ' chaine' → logprob: -4.895732879638672
    9. 'chaine' → logprob: -5.395732879638672
    10. 'element' → logprob: -6.270732879638672

Token 161: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.20286865532398224
    2. ',' → logprob: -2.202868700027466
    3. '(' → logprob: -3.577868700027466
    4. ')' → logprob: -3.827868700027466
    5. 's' → logprob: -4.327868461608887
    6. ' (' → logprob: -6.452868461608887
    7. ' ' → logprob: -6.702868461608887
    8. '_' → logprob: -7.202868461608887
    9. '()' → logprob: -7.202868461608887
    10. '(en' → logprob: -7.327868461608887

Token 162: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0035014767199754715
    2. ' entier' → logprob: -6.2535014152526855
    3. 'un' → logprob: -7.1285014152526855
    4. ' int' → logprob: -8.128501892089844
    5. 'ent' → logprob: -8.503501892089844
    6. 'int' → logprob: -9.003501892089844
    7. ' integer' → logprob: -9.503501892089844
    8. ' nombre' → logprob: -10.378501892089844
    9. ' ent' → logprob: -11.128501892089844
    10. ' une' → logprob: -11.378501892089844

Token 163: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5374802947044373
    2. ',' → logprob: -1.537480354309082
    3. 's' → logprob: -2.162480354309082
    4. '.' → logprob: -3.412480354309082
    5. ' )' → logprob: -3.412480354309082
    6. ',
' → logprob: -5.037480354309082
    7. ' ,' → logprob: -5.162480354309082
    8. ' .' → logprob: -6.787480354309082
    9. ' liste' → logprob: -6.912480354309082
    10. '(' → logprob: -7.037480354309082

Token 164: '#' (ID: 2)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5820383429527283
    2. 'n' → logprob: -1.332038402557373
    3. 'liste' → logprob: -2.707038402557373
    4. 'result' → logprob: -2.957038402557373
    5. 'nombre' → logprob: -3.957038402557373
    6. ' ent' → logprob: -4.332038402557373
    7. ' nombres' → logprob: -4.332038402557373
    8. 'numbers' → logprob: -5.582038402557373
    9. 'val' → logprob: -6.332038402557373
    10. ' liste' → logprob: -6.457038402557373

Token 165: ' map' (ID: 4014)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5763553977012634
    2. 'ent' → logprob: -0.9513553977012634
    3. 'liste' → logprob: -3.076355457305908
    4. 'nombre' → logprob: -6.576355457305908
    5. ' ent' → logprob: -6.951355457305908
    6. 'result' → logprob: -7.201355457305908
    7. 'val' → logprob: -7.451355457305908
    8. ' nombres' → logprob: -7.701355457305908
    9. 'nums' → logprob: -8.20135498046875
    10. 'numbers' → logprob: -8.45135498046875

Token 166: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16177667677402496
    2. '(' → logprob: -1.9117766618728638
    3. '(lambda' → logprob: -7.036776542663574
    4. '_int' → logprob: -8.536776542663574
    5. '(
' → logprob: -9.161776542663574
    6. 'int' → logprob: -9.661776542663574
    7. '()' → logprob: -9.911776542663574
    8. '_list' → logprob: -10.036776542663574
    9. '=int' → logprob: -10.286776542663574
    10. '<int' → logprob: -10.536776542663574

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0497930571436882
    2. ')' → logprob: -3.674793004989624
    3. ',l' → logprob: -3.799793004989624
    4. ' ,' → logprob: -7.799793243408203
    5. '(l' → logprob: -8.049793243408203
    6. 'l' → logprob: -10.424793243408203
    7. ',)' → logprob: -10.549793243408203
    8. ')(' → logprob: -11.174793243408203
    9. '(' → logprob: -11.174793243408203
    10. ' )' → logprob: -11.924793243408203

Token 168: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.038058020174503326
    2. ' liste' → logprob: -3.288058042526245
    3. 'ligne' → logprob: -11.663058280944824
    4. 'list' → logprob: -12.663058280944824
    5. ')' → logprob: -12.913058280944824
    6. ' ' → logprob: -14.288058280944824
    7. 'lista' → logprob: -14.788058280944824
    8. 'lst' → logprob: -15.163058280944824
    9. 'l' → logprob: -15.538058280944824
    10. 'Liste' → logprob: -15.788058280944824

Token 169: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00019460011390037835
    2. 'de' → logprob: -9.375194549560547
    3. ')' → logprob: -9.500194549560547
    4. '_strings' → logprob: -11.000194549560547
    5. '_' → logprob: -12.500194549560547
    6. '_)' → logprob: -12.750194549560547
    7. ' de' → logprob: -12.875194549560547
    8. '))' → logprob: -13.250194549560547
    9. ')_' → logprob: -13.625194549560547
    10. '_of' → logprob: -13.625194549560547

Token 170: '_strings' (ID: 87251)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.026373455300927162
    2. '_strings' → logprob: -3.6513733863830566
    3. ' strings' → logprob: -9.776373863220215
    4. 'string' → logprob: -12.151373863220215
    5. '(strings' → logprob: -13.151373863220215
    6. 's' → logprob: -13.401373863220215
    7. 'str' → logprob: -13.401373863220215
    8. '_string' → logprob: -14.026373863220215
    9. '_str' → logprob: -14.026373863220215
    10. '_s' → logprob: -14.151373863220215

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.727905979962088e-05
    2. ' )' → logprob: -10.00004768371582
    3. ')
' → logprob: -14.37504768371582
    4. '))' → logprob: -14.75004768371582
    5. ')`' → logprob: -15.50004768371582
    6. '(' → logprob: -16.00004768371582
    7. ')#' → logprob: -16.25004768371582
    8. ' ' → logprob: -16.62504768371582
    9. ')

' → logprob: -16.87504768371582
    10. ').' → logprob: -17.37504768371582

Token 172: ' produit' (ID: 29429)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.046178027987480164
    2. ' )' → logprob: -3.171178102493286
    3. ' ' → logprob: -7.796177864074707
    4. ' =' → logprob: -7.921177864074707
    5. ',' → logprob: -8.046177864074707
    6. '(' → logprob: -8.046177864074707
    7. '_list' → logprob: -8.046177864074707
    8. 'result' → logprob: -8.671177864074707
    9. 'liste' → logprob: -8.796177864074707
    10. '()' → logprob: -9.046177864074707

Token 173: ' donc' (ID: 14206)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06238474324345589
    2. ' an' → logprob: -3.937384843826294
    3. ' une' → logprob: -4.062384605407715
    4. 'un' → logprob: -4.062384605407715
    5. ' ' → logprob: -6.187384605407715
    6. ' a' → logprob: -6.437384605407715
    7. '<' → logprob: -7.062384605407715
    8. 'map' → logprob: -7.437384605407715
    9. 'une' → logprob: -7.562384605407715
    10. ' map' → logprob: -7.687384605407715

Token 174: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03138259798288345
    2. 'un' → logprob: -3.6563825607299805
    3. ' une' → logprob: -6.1563825607299805
    4. ' an' → logprob: -6.2813825607299805
    5. 'une' → logprob: -7.9063825607299805
    6. '<' → logprob: -8.15638256072998
    7. ' ' → logprob: -8.90638256072998
    8. ' a' → logprob: -9.53138256072998
    9. 'map' → logprob: -10.28138256072998
    10. ''un' → logprob: -10.28138256072998

Token 175: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.5481114983558655
    2. ' objet' → logprob: -2.1731114387512207
    3. 'objet' → logprob: -2.2981114387512207
    4. 'iter' → logprob: -2.6731114387512207
    5. 'map' → logprob: -2.7981114387512207
    6. ' it' → logprob: -3.0481114387512207
    7. ' map' → logprob: -3.7981114387512207
    8. 'obj' → logprob: -5.673111438751221
    9. ' iter' → logprob: -5.923111438751221
    10. ''objet' → logprob: -7.923111438751221

Token 176: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3232971131801605
    2. 'érateur' → logprob: -1.323297142982483
    3. 'ér' → logprob: -4.698297023773193
    4. 'r' → logprob: -8.823297500610352
    5. 'ertools' → logprob: -8.948297500610352
    6. 'érant' → logprob: -9.198297500610352
    7. 'é' → logprob: -9.448297500610352
    8. 'able' → logprob: -9.698297500610352
    9. 'e' → logprob: -10.073297500610352
    10. 'ère' → logprob: -10.323297500610352

Token 177: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.007359686773270369
    2. 'ateur' → logprob: -5.257359504699707
    3. 'ator' → logprob: -6.257359504699707
    4. 'er' → logprob: -9.632359504699707
    5. 'map' → logprob: -9.882359504699707
    6. 'teur' → logprob: -11.132359504699707
    7. 'tor' → logprob: -11.257359504699707
    8. ',' → logprob: -11.757359504699707
    9. '(map' → logprob: -12.632359504699707
    10. 'acteur' → logprob: -12.757359504699707

Token 178: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0224461555480957
    2. ',' → logprob: -1.2724461555480957
    3. 'convert' → logprob: -2.6474461555480957
    4. 'ent' → logprob: -3.3974461555480957
    5. '(' → logprob: -3.5224461555480957
    6. 'inte' → logprob: -3.6474461555480957
    7. ' entier' → logprob: -3.8974461555480957
    8. ' qui' → logprob: -4.272446155548096
    9. ' (' → logprob: -4.647446155548096
    10. '.' → logprob: -4.647446155548096

Token 179: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3559730350971222
    2. ' les' → logprob: -1.2309730052947998
    3. ' la' → logprob: -5.480973243713379
    4. 'des' → logprob: -6.355973243713379
    5. 'les' → logprob: -7.480973243713379
    6. ' une' → logprob: -8.355973243713379
    7. 'la' → logprob: -8.980973243713379
    8. ' chaque' → logprob: -8.980973243713379
    9. ' ' → logprob: -9.230973243713379
    10. ' ces' → logprob: -9.355973243713379

Token 180: ' valeurs' (ID: 73668)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.6505275368690491
    2. 'ent' → logprob: -0.7755275368690491
    3. ' nombres' → logprob: -4.275527477264404
    4. ' éléments' → logprob: -6.525527477264404
    5. 'int' → logprob: -7.025527477264404
    6. 'élé' → logprob: -7.900527477264404
    7. ' int' → logprob: -8.775527954101562
    8. ' integers' → logprob: -8.775527954101562
    9. ' valeurs' → logprob: -8.775527954101562
    10. '_ent' → logprob: -8.900527954101562

Token 181: ' ent' (ID: 1121)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.5173662900924683
    2. '_' → logprob: -1.6423662900924683
    3. ' ent' → logprob: -2.767366409301758
    4. '_int' → logprob: -3.767366409301758
    5. ' ,' → logprob: -4.017366409301758
    6. '_map' → logprob: -4.142366409301758
    7. ' entier' → logprob: -4.142366409301758
    8. 'ent' → logprob: -4.642366409301758
    9. '_convert' → logprob: -4.642366409301758
    10. ',' → logprob: -4.767366409301758

Token 182: 'ières' (ID: 44864)
  Prédit: 'iers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0006305903079919517
    2. 'ier' → logprob: -7.7506303787231445
    3. 'ti' → logprob: -9.125630378723145
    4. 'ières' → logprob: -10.375630378723145
    5. 'tiers' → logprob: -11.625630378723145
    6. 't' → logprob: -11.875630378723145
    7. 'ière' → logprob: -12.000630378723145
    8. 'i' → logprob: -12.125630378723145
    9. 'itiers' → logprob: -12.125630378723145
    10. 'eg' → logprob: -12.375630378723145

Token 183: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6661389470100403
    2. ',' → logprob: -0.7911389470100403
    3. 's' → logprob: -5.166139125823975
    4. ' )' → logprob: -5.291139125823975
    5. '.' → logprob: -5.416139125823975
    6. ',
' → logprob: -5.791139125823975
    7. 'tokens' → logprob: -5.916139125823975
    8. 'inte' → logprob: -6.166139125823975
    9. 'result' → logprob: -6.416139125823975
    10. ' ,' → logprob: -7.166139125823975

Token 184: 'antes' (ID: 5193)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9621182084083557
    2. 'aux' → logprob: -1.087118148803711
    3. 'a' → logprob: -2.337118148803711
    4. 'ant' → logprob: -3.212118148803711
    5. 'à' → logprob: -3.587118148803711
    6. 'antes' → logprob: -3.712118148803711
    7. 'au' → logprob: -4.212118148803711
    8. ' aux' → logprob: -4.462118148803711
    9. ''à' → logprob: -4.587118148803711
    10. ')' → logprob: -4.837118148803711

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07829901576042175
    2. ')' → logprob: -3.453299045562744
    3. '(' → logprob: -4.828299045562744
    4. 'n' → logprob: -5.328299045562744
    5. 's' → logprob: -5.328299045562744
    6. ',
' → logprob: -5.328299045562744
    7. ' =' → logprob: -5.453299045562744
    8. ' ,' → logprob: -6.328299045562744
    9. 'i' → logprob: -6.578299045562744
    10. 'tokens' → logprob: -6.578299045562744

Token 186: ' par' (ID: 686)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.7037245035171509
    2. 'ent' → logprob: -1.5787245035171509
    3. ' liste' → logprob: -2.5787243843078613
    4. 'n' → logprob: -2.8287243843078613
    5. 'a' → logprob: -3.5787243843078613
    6. 'l' → logprob: -4.078724384307861
    7. 'result' → logprob: -4.328724384307861
    8. ' a' → logprob: -4.453724384307861
    9. 'lst' → logprob: -4.578724384307861
    10. 'numbers' → logprob: -4.828724384307861

Token 187: ' exemple' (ID: 26320)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.49302947521209717
    2. ' exemple' → logprob: -1.4930294752120972
    3. ' ex' → logprob: -2.2430295944213867
    4. 'liste' → logprob: -3.8680295944213867
    5. ' la' → logprob: -4.368029594421387
    6. ' liste' → logprob: -4.493029594421387
    7. ' example' → logprob: -6.118029594421387
    8. ' list' → logprob: -6.243029594421387
    9. 'list' → logprob: -6.743029594421387
    10. ')' → logprob: -6.743029594421387

Token 188: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0834834575653076
    2. '(' → logprob: -1.5834834575653076
    3. ')' → logprob: -1.7084834575653076
    4. ' (' → logprob: -2.5834834575653076
    5. ' [' → logprob: -2.5834834575653076
    6. ':' → logprob: -4.083483695983887
    7. ' ' → logprob: -4.083483695983887
    8. ' map' → logprob: -4.458483695983887
    9. ' liste' → logprob: -4.833483695983887
    10. 'range' → logprob: -4.958483695983887

Token 189: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3691251575946808
    2. 'map' → logprob: -1.2441251277923584
    3. ' map' → logprob: -4.9941253662109375
    4. ' [' → logprob: -5.6191253662109375
    5. 'int' → logprob: -5.8691253662109375
    6. '[int' → logprob: -6.1191253662109375
    7. 'list' → logprob: -6.3691253662109375
    8. '5' → logprob: -6.6191253662109375
    9. 'liste' → logprob: -7.3691253662109375
    10. 'range' → logprob: -8.119125366210938

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021021578868385404
    2. ')' → logprob: -8.87520980834961
    3. ',
' → logprob: -10.37520980834961
    4. ' ,' → logprob: -10.37520980834961
    5. ',int' → logprob: -13.50020980834961
    6. ',)' → logprob: -13.62520980834961
    7. ',l' → logprob: -13.75020980834961
    8. ',n' → logprob: -14.50020980834961
    9. '),' → logprob: -14.62520980834961
    10. ',map' → logprob: -14.62520980834961

Token 191: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06198180466890335
    2. ' ' → logprob: -2.8119819164276123
    3. ' ' → logprob: -11.311982154846191
    4. ',' → logprob: -15.061982154846191
    5. 'et' → logprob: -15.186982154846191
    6. ' 
' → logprob: -15.186982154846191
    7. ' et' → logprob: -15.686982154846191
    8. '
' → logprob: -15.936982154846191
    9. '' → logprob: -16.061981201171875
    10. '' → logprob: -16.186981201171875

Token 192: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. ' ' → logprob: -16.128177642822266
    4. 'et' → logprob: -17.253177642822266
    5. '' → logprob: -17.690677642822266
    6. '  ' → logprob: -18.003177642822266
    7. '３' → logprob: -18.190677642822266
    8. ',' → logprob: -18.315677642822266
    9. '```' → logprob: -18.503177642822266
    10. '' → logprob: -18.565677642822266

Token 193: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2548252046108246
    2. ')' → logprob: -2.1298251152038574
    3. 'liste' → logprob: -3.3798251152038574
    4. 'n' → logprob: -4.004825115203857
    5. 'result' → logprob: -4.129825115203857
    6. 'tokens' → logprob: -4.754825115203857
    7. 'a' → logprob: -6.004825115203857
    8. 'l' → logprob: -6.129825115203857
    9. 's' → logprob: -6.129825115203857
    10. ']' → logprob: -6.379825115203857

Token 194: 'liste' (ID: 69656)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.06537278741598129
    2. 'n' → logprob: -2.9403727054595947
    3. 'liste' → logprob: -5.940372943878174
    4. 'a' → logprob: -6.190372943878174
    5. 'result' → logprob: -6.565372943878174
    6. 'nombre' → logprob: -6.565372943878174
    7. ' ent' → logprob: -7.065372943878174
    8. ' nombres' → logprob: -7.940372943878174
    9. 'numbers' → logprob: -7.940372943878174
    10. 'val' → logprob: -8.065372467041016

Token 195: '_d' (ID: 1565)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.1332419514656067
    2. '_' → logprob: -2.258241891860962
    3. '_ent' → logprob: -4.508242130279541
    4. '_des' → logprob: -4.758242130279541
    5. '_d' → logprob: -8.383241653442383
    6. '_int' → logprob: -9.008241653442383
    7. '_val' → logprob: -9.883241653442383
    8. 'de' → logprob: -10.008241653442383
    9. '_=' → logprob: -11.008241653442383
    10. '_in' → logprob: -11.008241653442383

Token 196: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.03739965334534645
    2. 'ent' → logprob: -3.6623997688293457
    3. '_in' → logprob: -5.037399768829346
    4. '_n' → logprob: -6.162399768829346
    5. ''ent' → logprob: -7.287399768829346
    6. 'n' → logprob: -7.287399768829346
    7. '_int' → logprob: -7.412399768829346
    8. '_' → logprob: -8.537399291992188
    9. 'inte' → logprob: -8.912399291992188
    10. 'e' → logprob: -10.037399291992188

Token 197: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -15.375000953674316
    3. 'i' → logprob: -15.500000953674316
    4. 'ieres' → logprob: -15.875000953674316
    5. 'ers' → logprob: -16.0
    6. 'ier' → logprob: -16.0
    7. '   ' → logprob: -17.75
    8. 'ières' → logprob: -18.375
    9. 'ieurs' → logprob: -18.625
    10. '[' → logprob: -18.75

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015028368216007948
    2. '=' → logprob: -6.501502990722656
    3. 's' → logprob: -15.126502990722656
    4. ' ' → logprob: -16.001502990722656
    5. ',' → logprob: -17.126502990722656
    6. ' =
' → logprob: -17.251502990722656
    7. ')' → logprob: -18.126502990722656
    8. ' ' → logprob: -18.376502990722656
    9. '=list' → logprob: -18.751502990722656
    10. '=int' → logprob: -19.001502990722656

Token 199: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.15714490413665771
    2. 'list' → logprob: -2.1571450233459473
    3. ' map' → logprob: -3.6571450233459473
    4. ' list' → logprob: -5.532145023345947
    5. 'm' → logprob: -14.157144546508789
    6. ' ' → logprob: -16.03214454650879
    7. ' ' → logprob: -16.40714454650879
    8. 'ma' → logprob: -16.53214454650879
    9. '	map' → logprob: -16.78214454650879
    10. 'mapping' → logprob: -16.90714454650879

Token 200: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5761049389839172
    2. '(' → logprob: -0.8261049389839172
    3. '(
' → logprob: -8.826105117797852
    4. ' (' → logprob: -11.951105117797852
    5. '(lambda' → logprob: -12.451105117797852
    6. '(

' → logprob: -12.576105117797852
    7. '<int' → logprob: -12.951105117797852
    8. 'int' → logprob: -13.951105117797852
    9. '[int' → logprob: -14.826105117797852
    10. '(in' → logprob: -15.576105117797852

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013486073352396488
    2. ',l' → logprob: -4.513485908508301
    3. '(l' → logprob: -6.138485908508301
    4. ' ,' → logprob: -9.3884859085083
    5. '(' → logprob: -9.5134859085083
    6. ')' → logprob: -9.5134859085083
    7. ',
' → logprob: -10.5134859085083
    8. 'l' → logprob: -11.2634859085083
    9. 'liste' → logprob: -13.0134859085083
    10. 's' → logprob: -14.6384859085083

Token 202: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.20144490897655487
    2. ' liste' → logprob: -1.7014448642730713
    3. 'ligne' → logprob: -11.201444625854492
    4. ' ' → logprob: -12.201444625854492
    5. 'list' → logprob: -12.576444625854492
    6. ')' → logprob: -13.076444625854492
    7. 'l' → logprob: -13.201444625854492
    8. 'lst' → logprob: -13.951444625854492
    9. ' ligne' → logprob: -14.201444625854492
    10. 'lista' → logprob: -14.576444625854492

Token 203: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0009595814626663923
    2. '_d' → logprob: -7.000959396362305
    3. 'de' → logprob: -10.250959396362305
    4. '_' → logprob: -12.750959396362305
    5. 's' → logprob: -13.000959396362305
    6. 'd' → logprob: -13.000959396362305
    7. 'e' → logprob: -14.000959396362305
    8. ')' → logprob: -14.375959396362305
    9. 'De' → logprob: -14.625959396362305
    10. '[' → logprob: -14.625959396362305

Token 204: '_strings' (ID: 87251)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.0017238459549844265
    2. '_strings' → logprob: -6.376723766326904
    3. 'liste' → logprob: -11.001724243164062
    4. 'str' → logprob: -13.376724243164062
    5. ' strings' → logprob: -13.876724243164062
    6. 'lists' → logprob: -14.001724243164062
    7. 'string' → logprob: -14.376724243164062
    8. 's' → logprob: -15.126724243164062
    9. 'chaine' → logprob: -15.626724243164062
    10. 'list' → logprob: -15.876724243164062

Token 205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -16.875001907348633
    5. ')`' → logprob: -18.000001907348633
    6. ')#' → logprob: -18.250001907348633
    7. ')

' → logprob: -18.250001907348633
    8. '),' → logprob: -19.750001907348633
    9. '()' → logprob: -20.125001907348633
    10. '[' → logprob: -20.250001907348633

Token 206: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04818575084209442
    2. 'n' → logprob: -3.9231858253479004
    3. 'result' → logprob: -5.0481858253479
    4. '#' → logprob: -5.1731858253479
    5. 'x' → logprob: -5.6731858253479
    6. 'ent' → logprob: -5.6731858253479
    7. '[' → logprob: -5.7981858253479
    8. 'print' → logprob: -6.9231858253479
    9. 'for' → logprob: -7.0481858253479
    10. 'liste' → logprob: -7.1731858253479

Token 207: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1352541595697403
    2. 'ent' → logprob: -2.385254144668579
    3. 'n' → logprob: -4.135254383087158
    4. 'liste' → logprob: -4.510254383087158
    5. '#' → logprob: -6.135254383087158
    6. 'x' → logprob: -6.260254383087158
    7. 'nombre' → logprob: -6.385254383087158
    8. 'result' → logprob: -7.135254383087158
    9. 'val' → logprob: -8.76025390625
    10. 's' → logprob: -9.38525390625

Token 208: ''aff' (ID: 53397)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.12099592387676239
    2. '#' → logprob: -2.6209959983825684
    3. 'liste' → logprob: -3.7459959983825684
    4. 'a' → logprob: -4.745995998382568
    5. 'ist' → logprob: -5.370995998382568
    6. 'istes' → logprob: -6.995995998382568
    7. 'st' → logprob: -7.245995998382568
    8. 's' → logprob: -7.870995998382568
    9. 'print' → logprob: -8.12099552154541
    10. 'ste' → logprob: -8.24599552154541

Token 209: 'ect' (ID: 534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6376402378082275
    2. 'iste' → logprob: -1.2626402378082275
    3. 'ichage' → logprob: -2.5126402378082275
    4. 'ist' → logprob: -3.2626402378082275
    5. 'ecture' → logprob: -3.5126402378082275
    6. 'ancement' → logprob: -4.637639999389648
    7. 'acement' → logprob: -5.387639999389648
    8. 'èche' → logprob: -6.137639999389648
    9. 'print' → logprob: -6.137639999389648
    10. 'ément' → logprob: -6.137639999389648

Token 210: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.08733192086219788
    2. 'ect' → logprob: -3.337332010269165
    3. 'ement' → logprob: -4.462331771850586
    4. 'ection' → logprob: -4.587331771850586
    5. 'er' → logprob: -4.712331771850586
    6. 'age' → logprob: -5.462331771850586
    7. 'entation' → logprob: -6.212331771850586
    8. 'at' → logprob: -6.212331771850586
    9. 'e' → logprob: -6.337331771850586
    10. ' =' → logprob: -6.462331771850586

Token 211: ' multiple' (ID: 7598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022734040394425392
    2. 'x' → logprob: -5.02273416519165
    3. 'ent' → logprob: -5.39773416519165
    4. 'n' → logprob: -5.39773416519165
    5. 'liste' → logprob: -5.77273416519165
    6. ' a' → logprob: -6.77273416519165
    7. 'nombre' → logprob: -7.14773416519165
    8. '[a' → logprob: -7.27273416519165
    9. 'b' → logprob: -8.772733688354492
    10. '[' → logprob: -8.772733688354492

Token 212: ' permet' (ID: 11798)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009390648454427719
    2. 'x' → logprob: -4.759390830993652
    3. 'n' → logprob: -8.009390830993652
    4. ' a' → logprob: -8.384390830993652
    5. 'val' → logprob: -9.634390830993652
    6. 'ent' → logprob: -9.759390830993652
    7. 'nombre' → logprob: -9.884390830993652
    8. '(a' → logprob: -11.884390830993652
    9. 'prem' → logprob: -12.134390830993652
    10. 'nb' → logprob: -12.259390830993652

Token 213: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3046393394470215
    2. 'd' → logprob: -1.6796393394470215
    3. 'x' → logprob: -3.3046393394470215
    4. 'de' → logprob: -3.5546393394470215
    5. ' d' → logprob: -5.9296393394470215
    6. ' a' → logprob: -5.9296393394470215
    7. 'n' → logprob: -6.1796393394470215
    8. ' de' → logprob: -6.6796393394470215
    9. 'b' → logprob: -6.9296393394470215
    10. 'ent' → logprob: -8.05463981628418

Token 214: ' stock' (ID: 6546)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01842956617474556
    2. 'x' → logprob: -4.268429756164551
    3. ' a' → logprob: -6.018429756164551
    4. 'n' → logprob: -7.143429756164551
    5. 'ent' → logprob: -7.643429756164551
    6. 'i' → logprob: -9.26842975616455
    7. 'nombre' → logprob: -9.26842975616455
    8. 'val' → logprob: -9.51842975616455
    9. 'b' → logprob: -10.01842975616455
    10. 'liste' → logprob: -10.26842975616455

Token 215: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5148586630821228
    2. 'a' → logprob: -1.2648587226867676
    3. ' a' → logprob: -2.7648587226867676
    4. 'x' → logprob: -3.8898587226867676
    5. 'e' → logprob: -5.139858722686768
    6. ' =' → logprob: -5.264858722686768
    7. ' x' → logprob: -5.514858722686768
    8. '1' → logprob: -5.639858722686768
    9. ' ' → logprob: -5.764858722686768
    10. '_a' → logprob: -6.264858722686768

Token 216: ' ces' (ID: 10532)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025103818625211716
    2. 'x' → logprob: -6.6275105476379395
    3. 'n' → logprob: -7.2525105476379395
    4. ' a' → logprob: -8.377510070800781
    5. 'ent' → logprob: -9.127510070800781
    6. 'nombre' → logprob: -9.627510070800781
    7. 'val' → logprob: -10.002510070800781
    8. 'prem' → logprob: -12.002510070800781
    9. 'nb' → logprob: -12.377510070800781
    10. 'num' → logprob: -12.502510070800781

Token 217: ' deux' (ID: 10301)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05853497236967087
    2. ' a' → logprob: -3.933534860610962
    3. 'x' → logprob: -4.183535099029541
    4. 'val' → logprob: -4.433535099029541
    5. 'ent' → logprob: -5.308535099029541
    6. 'n' → logprob: -5.808535099029541
    7. 'nombre' → logprob: -7.558535099029541
    8. ' n' → logprob: -7.933535099029541
    9. ' x' → logprob: -7.933535099029541
    10. 'prem' → logprob: -8.308534622192383

Token 218: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.3023492693901062
    2. 'val' → logprob: -2.177349328994751
    3. ' nombres' → logprob: -2.302349328994751
    4. 'ent' → logprob: -3.677349328994751
    5. ' ent' → logprob: -4.552349090576172
    6. ' variables' → logprob: -5.427349090576172
    7. 'nombre' → logprob: -6.552349090576172
    8. 'values' → logprob: -6.677349090576172
    9. 'n' → logprob: -6.802349090576172
    10. ' val' → logprob: -6.927349090576172

Token 219: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01026182435452938
    2. ' a' → logprob: -5.0102620124816895
    3. 'x' → logprob: -6.0102620124816895
    4. 'ent' → logprob: -7.7602620124816895
    5. 'n' → logprob: -8.385261535644531
    6. 'nombre' → logprob: -8.385261535644531
    7. 'val' → logprob: -9.635261535644531
    8. ',' → logprob: -9.885261535644531
    9. 'nb' → logprob: -10.635261535644531
    10. ' x' → logprob: -11.385261535644531

Token 220: 'ières' (ID: 44864)
  Prédit: 'iers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.4896323084831238
    2. 'ières' → logprob: -1.1146323680877686
    3. 'ière' → logprob: -3.8646323680877686
    4. 'ieres' → logprob: -4.6146321296691895
    5. 't' → logprob: -4.8646321296691895
    6. 'ier' → logprob: -5.2396321296691895
    7. 'iere' → logprob: -5.3646321296691895
    8. 're' → logprob: -5.7396321296691895
    9. 'ant' → logprob: -6.8646321296691895
    10. ' =' → logprob: -7.4896321296691895

Token 221: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011634210124611855
    2. 'x' → logprob: -4.886634349822998
    3. ' a' → logprob: -6.386634349822998
    4. 'n' → logprob: -7.136634349822998
    5. ',' → logprob: -7.636634349822998
    6. 'nombre' → logprob: -7.636634349822998
    7. 'ent' → logprob: -8.01163387298584
    8. 'val' → logprob: -9.26163387298584
    9. 'nb' → logprob: -10.01163387298584
    10. 'num' → logprob: -10.51163387298584

Token 222: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004453855101019144
    2. 'x' → logprob: -5.754453659057617
    3. 'n' → logprob: -7.379453659057617
    4. ' a' → logprob: -7.754453659057617
    5. 'ent' → logprob: -9.254453659057617
    6. 'nombre' → logprob: -9.504453659057617
    7. 'val' → logprob: -10.254453659057617
    8. 'num' → logprob: -12.379453659057617
    9. 'nb' → logprob: -12.754453659057617
    10. ' x' → logprob: -13.129453659057617

Token 223: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1449398547410965
    2. 'x' → logprob: -2.51993989944458
    3. ' a' → logprob: -3.76993989944458
    4. 'variables' → logprob: -4.76993989944458
    5. 'n' → logprob: -5.26993989944458
    6. 'ent' → logprob: -5.39493989944458
    7. ' variables' → logprob: -5.39493989944458
    8. 'nombre' → logprob: -5.64493989944458
    9. 'de' → logprob: -6.39493989944458
    10. 'variable' → logprob: -7.39493989944458

Token 224: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005471617449074984
    2. 'x' → logprob: -5.755471706390381
    3. ' a' → logprob: -6.505471706390381
    4. 'nombre' → logprob: -7.380471706390381
    5. 'n' → logprob: -9.380471229553223
    6. 'ent' → logprob: -10.005471229553223
    7. 'nb' → logprob: -11.005471229553223
    8. ' nombre' → logprob: -11.755471229553223
    9. ' x' → logprob: -12.130471229553223
    10. 'num' → logprob: -12.630471229553223

Token 225: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008009305456653237
    2. ' ,' → logprob: -7.250801086425781
    3. 'a' → logprob: -10.250801086425781
    4. ',A' → logprob: -10.750801086425781
    5. 'A' → logprob: -11.250801086425781
    6. ',
' → logprob: -11.625801086425781
    7. 'et' → logprob: -12.250801086425781
    8. ',a' → logprob: -13.375801086425781
    9. ' et' → logprob: -13.750801086425781
    10. ' A' → logprob: -14.125801086425781

Token 226: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014165041036903858
    2. ' B' → logprob: -4.264164924621582
    3. ' ' → logprob: -13.639164924621582
    4. ' ' → logprob: -15.764164924621582
    5. ',' → logprob: -16.1391658782959
    6. 'A' → logprob: -17.5141658782959
    7. 'b' → logprob: -17.5141658782959
    8. '  ' → logprob: -18.0141658782959
    9. ' ,' → logprob: -18.5141658782959
    10. '  
' → logprob: -18.7641658782959

Token 227: '.
' (ID: 558)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006295174825936556
    2. ' A' → logprob: -8.000629425048828
    3. ',' → logprob: -8.250629425048828
    4. 'a' → logprob: -10.750629425048828
    5. ' =' → logprob: -11.875629425048828
    6. ',
' → logprob: -13.500629425048828
    7. '=' → logprob: -13.500629425048828
    8. '=A' → logprob: -15.125629425048828
    9. ' ,' → logprob: -15.500629425048828
    10. '
' → logprob: -15.750629425048828

Token 228: '#' (ID: 2)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -4.036524842376821e-05
    2. ' A' → logprob: -10.125040054321289
    3. '
' → logprob: -16.62504005432129
    4. 'a' → logprob: -16.62504005432129
    5. ',' → logprob: -16.75004005432129
    6. ' 
' → logprob: -17.87504005432129
    7. '(A' → logprob: -18.25004005432129
    8. '  
' → logprob: -18.87504005432129
    9. '(' → logprob: -19.25004005432129
    10. '

' → logprob: -19.75004005432129

Token 229: ' Par' (ID: 3371)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.615255839889869e-05
    2. ' A' → logprob: -9.250096321105957
    3. ' ' → logprob: -19.12509536743164
    4. '
' → logprob: -19.75009536743164
    5. '#' → logprob: -19.87509536743164
    6. 'a' → logprob: -20.12509536743164
    7. '

' → logprob: -20.37509536743164
    8. '   ' → logprob: -20.50009536743164
    9. '  
' → logprob: -21.12509536743164
    10. '	A' → logprob: -21.37509536743164

Token 230: ' exemple' (ID: 26320)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005968730431050062
    2. ' A' → logprob: -5.1309685707092285
    3. ' exemple' → logprob: -11.380969047546387
    4. 'contin' → logprob: -12.630969047546387
    5. 'ex' → logprob: -12.755969047546387
    6. '=A' → logprob: -13.005969047546387
    7. 'cons' → logprob: -13.380969047546387
    8. '```' → logprob: -13.505969047546387
    9. '
' → logprob: -13.630969047546387
    10. '`' → logprob: -13.630969047546387

Token 231: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889650017023087
    2. ' A' → logprob: -2.5788965225219727
    3. '
' → logprob: -12.703896522521973
    4. ',' → logprob: -13.453896522521973
    5. '

' → logprob: -14.828896522521973
    6. '(A' → logprob: -15.078896522521973
    7. ')' → logprob: -15.203896522521973
    8. ':' → logprob: -15.578896522521973
    9. ' (' → logprob: -15.578896522521973
    10. ' ' → logprob: -15.828896522521973

Token 232: ' si' (ID: 1784)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.615255839889869e-05
    2. ' A' → logprob: -9.250096321105957
    3. '
' → logprob: -18.62509536743164
    4. '   ' → logprob: -19.12509536743164
    5. ' ' → logprob: -19.87509536743164
    6. 'a' → logprob: -20.25009536743164
    7. '

' → logprob: -20.87509536743164
    8. '  
' → logprob: -21.00009536743164
    9. 'for' → logprob: -21.25009536743164
    10. '    
' → logprob: -21.37509536743164

Token 233: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.008748717606067657
    2. ' A' → logprob: -4.758748531341553
    3. 'liste' → logprob: -9.258749008178711
    4. 'ligne' → logprob: -10.758749008178711
    5. ' ' → logprob: -12.883749008178711
    6. '5' → logprob: -13.008749008178711
    7. 'len' → logprob: -13.008749008178711
    8. '   ' → logprob: -13.133749008178711
    9. 'list' → logprob: -13.258749008178711
    10. ' liste' → logprob: -13.508749008178711

Token 234: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.006593513302505016
    2. 'A' → logprob: -5.381593704223633
    3. 'd' → logprob: -6.381593704223633
    4. '_a' → logprob: -9.381593704223633
    5. '_' → logprob: -10.131593704223633
    6. ' =' → logprob: -10.256593704223633
    7. 'a' → logprob: -10.756593704223633
    8. '_A' → logprob: -10.756593704223633
    9. '=' → logprob: -10.881593704223633
    10. ',' → logprob: -11.256593704223633

Token 235: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.005247629713267088
    2. 'ent' → logprob: -5.255247592926025
    3. ''ent' → logprob: -12.755248069763184
    4. 'int' → logprob: -13.130248069763184
    5. '_int' → logprob: -13.505248069763184
    6. ' ent' → logprob: -13.630248069763184
    7. 'A' → logprob: -13.755248069763184
    8. '_enter' → logprob: -13.880248069763184
    9. 'Ent' → logprob: -14.005248069763184
    10. '_' → logprob: -14.130248069763184

Token 236: 'iers' (ID: 11012)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0743609368801117
    2. '_ent' → logprob: -2.6993608474731445
    3. 'ents' → logprob: -5.5743608474731445
    4. 't' → logprob: -8.824360847473145
    5. 'iers' → logprob: -8.824360847473145
    6. '(ent' → logprob: -10.074360847473145
    7. 'enti' → logprob: -10.199360847473145
    8. '_t' → logprob: -10.449360847473145
    9. 'd' → logprob: -10.699360847473145
    10. 'entes' → logprob: -10.824360847473145

Token 237: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14630191028118134
    2. '=' → logprob: -2.7713019847869873
    3. 'A' → logprob: -2.8963019847869873
    4. '=A' → logprob: -5.146301746368408
    5. ' est' → logprob: -5.771301746368408
    6. ')' → logprob: -5.771301746368408
    7. ' A' → logprob: -5.896301746368408
    8. ' vaut' → logprob: -7.146301746368408
    9. ' ' → logprob: -8.021302223205566
    10. 'a' → logprob: -8.146302223205566

Token 238: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18508334457874298
    2. '5' → logprob: -1.8100833892822266
    3. ' A' → logprob: -5.685083389282227
    4. 'a' → logprob: -6.435083389282227
    5. ' ' → logprob: -8.185083389282227
    6. ' a' → logprob: -11.685083389282227
    7. 'x' → logprob: -12.060083389282227
    8. '[' → logprob: -12.185083389282227
    9. 'val' → logprob: -12.310083389282227
    10. '[A' → logprob: -12.435083389282227

Token 239: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.011645521968603134
    2. 'A' → logprob: -4.511645317077637
    3. 'a' → logprob: -8.636645317077637
    4. '[' → logprob: -8.636645317077637
    5. '(' → logprob: -9.011645317077637
    6. ' ' → logprob: -10.761645317077637
    7. '[A' → logprob: -10.761645317077637
    8. ' A' → logprob: -10.886645317077637
    9. '(A' → logprob: -11.886645317077637
    10. 'val' → logprob: -12.011645317077637

Token 240: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5940016508102417
    2. ',' → logprob: -0.9690016508102417
    3. ' A' → logprob: -2.7190017700195312
    4. ' ,' → logprob: -6.969001770019531
    5. 'a' → logprob: -7.094001770019531
    6. ',A' → logprob: -7.844001770019531
    7. ' =' → logprob: -9.344001770019531
    8. ')' → logprob: -9.469001770019531
    9. ' et' → logprob: -10.469001770019531
    10. ',
' → logprob: -10.719001770019531

Token 241: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02630830556154251
    2. ' ' → logprob: -3.651308298110962
    3. ' ' → logprob: -12.401308059692383
    4. '6' → logprob: -14.401308059692383
    5. '4' → logprob: -14.651308059692383
    6. '7' → logprob: -14.901308059692383
    7. '2' → logprob: -14.901308059692383
    8. '8' → logprob: -15.026308059692383
    9. '10' → logprob: -15.213808059692383
    10. '1' → logprob: -15.338808059692383

Token 242: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.125045776367188
    4. '３' → logprob: -18.500045776367188
    5. ' trois' → logprob: -19.250045776367188
    6. '  ' → logprob: -19.312545776367188
    7. ' ' → logprob: -19.375045776367188
    8. '
' → logprob: -19.500045776367188
    9. '  
' → logprob: -19.562545776367188
    10. '۳' → logprob: -19.875045776367188

Token 243: ',' (ID: 11)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4459490478038788
    2. ',' → logprob: -1.0709490776062012
    3. ' A' → logprob: -4.195949077606201
    4. ',
' → logprob: -7.070949077606201
    5. ',A' → logprob: -7.945949077606201
    6. ' ,' → logprob: -8.320948600769043
    7. ' =' → logprob: -8.445948600769043
    8. ')' → logprob: -8.695948600769043
    9. '
' → logprob: -9.570948600769043
    10. 'a' → logprob: -9.945948600769043

Token 244: ' alors' (ID: 17971)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03804229199886322
    2. ' A' → logprob: -3.2880423069000244
    3. 'a' → logprob: -15.038042068481445
    4. '
' → logprob: -15.413042068481445
    5. ' ' → logprob: -15.788042068481445
    6. ' 
' → logprob: -17.038042068481445
    7. '[A' → logprob: -17.038042068481445
    8. ' on' → logprob: -17.538042068481445
    9. 'c' → logprob: -17.663042068481445
    10. '  
' → logprob: -17.788042068481445

Token 245: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.001170225441455841
    2. ' A' → logprob: -6.7511701583862305
    3. '
' → logprob: -17.876171112060547
    4. '(A' → logprob: -18.626171112060547
    5. '[A' → logprob: -18.626171112060547
    6. ' ' → logprob: -19.126171112060547
    7. '   ' → logprob: -20.001171112060547
    8. 'a' → logprob: -20.001171112060547
    9. '```' → logprob: -20.626171112060547
    10. '  
' → logprob: -21.501171112060547

Token 246: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3915141355246305e-05
    2. ',B' → logprob: -11.00002384185791
    3. ' ,' → logprob: -12.75002384185791
    4. ',A' → logprob: -12.75002384185791
    5. 'A' → logprob: -14.37502384185791
    6. ',
' → logprob: -14.50002384185791
    7. 'B' → logprob: -15.87502384185791
    8. '=' → logprob: -17.000024795532227
    9. ',b' → logprob: -17.125024795532227
    10. ',

' → logprob: -17.500024795532227

Token 247: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6428252458572388
    2. 'A' → logprob: -1.3928252458572388
    3. ' A' → logprob: -1.6428252458572388
    4. ' ' → logprob: -3.767825126647949
    5. ',' → logprob: -5.517825126647949
    6. 'liste' → logprob: -5.892825126647949
    7. ' liste' → logprob: -7.017825126647949
    8. 'B' → logprob: -7.517825126647949
    9. ' B' → logprob: -8.14282512664795
    10. ' ,' → logprob: -8.51782512664795

Token 248: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.457669562427327e-05
    2. ',
' → logprob: -9.62507438659668
    3. ',B' → logprob: -12.75007438659668
    4. ' ,' → logprob: -12.87507438659668
    5. ',A' → logprob: -13.12507438659668
    6. 'A' → logprob: -14.25007438659668
    7. ',

' → logprob: -15.62507438659668
    8. 'B' → logprob: -16.37507438659668
    9. ',\
' → logprob: -16.62507438659668
    10. ',
' → logprob: -17.37507438659668

Token 249: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3132679760456085
    2. ' B' → logprob: -1.3132679462432861
    3. ' ' → logprob: -12.438267707824707
    4. ' ' → logprob: -13.438267707824707
    5. ',' → logprob: -14.938267707824707
    6. 'A' → logprob: -15.313267707824707
    7. ' ' → logprob: -15.938267707824707
    8. 'b' → logprob: -17.313268661499023
    9. ' A' → logprob: -17.688268661499023
    10. '  ' → logprob: -18.063268661499023

Token 250: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46476298570632935
    2. '=' → logprob: -1.4647629261016846
    3. ' =' → logprob: -1.9647629261016846
    4. ' ,' → logprob: -7.964763164520264
    5. ' ' → logprob: -11.589762687683105
    6. ')' → logprob: -11.589762687683105
    7. ',
' → logprob: -12.214762687683105
    8. ' =
' → logprob: -12.339762687683105
    9. 'A' → logprob: -13.089762687683105
    10. '=

' → logprob: -13.214762687683105

Token 251: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005277038086205721
    2. ' ' → logprob: -5.255277156829834
    3. 'liste' → logprob: -10.880276679992676
    4. '5' → logprob: -11.880276679992676
    5. ' liste' → logprob: -12.755276679992676
    6. '  ' → logprob: -13.005276679992676
    7. '   ' → logprob: -13.005276679992676
    8. ' B' → logprob: -13.005276679992676
    9. 'B' → logprob: -13.130276679992676
    10. '6' → logprob: -13.380276679992676

Token 252: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.546478935983032e-05
    2. ' A' → logprob: -10.750025749206543
    3. '
' → logprob: -13.250025749206543
    4. ',' → logprob: -13.375025749206543
    5. 'a' → logprob: -15.000025749206543
    6. '

' → logprob: -16.625024795532227
    7. ',
' → logprob: -16.875024795532227
    8. '  
' → logprob: -16.875024795532227
    9. 'x' → logprob: -17.375024795532227
    10. ' 
' → logprob: -18.125024795532227

Token 253: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5048530030981055e-06
    2. ' A' → logprob: -13.500001907348633
    3. 'a' → logprob: -19.625001907348633
    4. '(A' → logprob: -19.875001907348633
    5. '
' → logprob: -20.125001907348633
    6. '[A' → logprob: -20.875001907348633
    7. '

' → logprob: -21.000001907348633
    8. ',' → logprob: -21.500001907348633
    9. '  
' → logprob: -21.750001907348633
    10. '```' → logprob: -21.875001907348633

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.704065213445574e-05
    2. ',B' → logprob: -10.125046730041504
    3. ' ,' → logprob: -12.000046730041504
    4. ',
' → logprob: -14.750046730041504
    5. 'B' → logprob: -16.37504768371582
    6. ',b' → logprob: -16.50004768371582
    7. ',A' → logprob: -16.62504768371582
    8. ',

' → logprob: -17.75004768371582
    9. ',\
' → logprob: -19.37504768371582
    10. ' B' → logprob: -19.37504768371582

Token 255: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.160235196352005
    2. 'B' → logprob: -1.9102351665496826
    3. ' ' → logprob: -11.785235404968262
    4. ' ' → logprob: -12.660235404968262
    5. ' ' → logprob: -16.035234451293945
    6. '<|end|>' → logprob: -16.160234451293945
    7. '_B' → logprob: -17.785234451293945
    8. 'space' → logprob: -18.160234451293945
    9. '	B' → logprob: -18.785234451293945
    10. ' space' → logprob: -18.910234451293945

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132833242416382
    2. '=' → logprob: -1.3132833242416382
    3. ',' → logprob: -10.93828296661377
    4. ' ' → logprob: -14.18828296661377
    5. '=A' → logprob: -14.18828296661377
    6. '<|end|>' → logprob: -14.18828296661377
    7. ')' → logprob: -14.68828296661377
    8. ' =
' → logprob: -14.93828296661377
    9. '=

' → logprob: -15.43828296661377
    10. ')=' → logprob: -16.563283920288086

Token 257: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.10085511952638626
    2. ' liste' → logprob: -2.6008551120758057
    3. 'list' → logprob: -3.8508551120758057
    4. ' list' → logprob: -7.725855350494385
    5. ' tuple' → logprob: -11.850854873657227
    6. 'tuple' → logprob: -12.100854873657227
    7. 'ligne' → logprob: -13.350854873657227
    8. 'lst' → logprob: -13.600854873657227
    9. 'lista' → logprob: -13.725854873657227
    10. 'map' → logprob: -13.975854873657227

Token 258: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -3.054500666621607e-06
    2. 'd' → logprob: -12.75000286102295
    3. '_' → logprob: -16.375003814697266
    4. '_de' → logprob: -18.250003814697266
    5. ' d' → logprob: -18.625003814697266
    6. ' _' → logprob: -19.125003814697266
    7. '​' → logprob: -20.125003814697266
    8. '[' → logprob: -20.250003814697266
    9. '
' → logprob: -20.500003814697266
    10. '__' → logprob: -20.625003814697266

Token 259: '_ent' (ID: 66249)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.011078826151788235
    2. '_ent' → logprob: -4.511078834533691
    3. ''ent' → logprob: -10.511078834533691
    4. 'ents' → logprob: -13.386078834533691
    5. '	ent' → logprob: -14.386078834533691
    6. 'entre' → logprob: -14.636078834533691
    7. 'int' → logprob: -15.136078834533691
    8. 'nt' → logprob: -15.761078834533691
    9. '```' → logprob: -16.011077880859375
    10. '(ent' → logprob: -16.136077880859375

Token 260: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.339278580620885e-06
    2. 'tiers' → logprob: -13.750001907348633
    3. 'ers' → logprob: -13.875001907348633
    4. 'ters' → logprob: -16.125001907348633
    5. 'ier' → logprob: -16.875001907348633
    6. 'gers' → logprob: -16.875001907348633
    7. 't' → logprob: -17.000001907348633
    8. 'liers' → logprob: -18.875001907348633
    9. 'eurs' → logprob: -18.875001907348633
    10. 'riers' → logprob: -18.875001907348633

Token 261: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5425353646278381
    2. '
' → logprob: -1.5425353050231934
    3. '+' → logprob: -2.1675353050231934
    4. '#' → logprob: -3.2925353050231934
    5. '<|end|>' → logprob: -3.2925353050231934
    6. '+
' → logprob: -5.042535305023193
    7. '*' → logprob: -5.542535305023193
    8. '\n' → logprob: -6.792535305023193
    9. ' 
' → logprob: -6.792535305023193
    10. ' print' → logprob: -7.292535305023193

Token 262: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13432073593139648
    2. '#' → logprob: -2.2593207359313965
    3. 'result' → logprob: -4.6343207359313965
    4. '
' → logprob: -5.2593207359313965
    5. '+' → logprob: -6.3843207359313965
    6. 's' → logprob: -6.7593207359313965
    7. ' 
' → logprob: -7.2593207359313965
    8. 'C' → logprob: -7.5093207359313965
    9. '  
' → logprob: -7.5093207359313965
    10. '#
' → logprob: -8.384321212768555

Token 263: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0341682955622673
    2. 'result' → logprob: -3.659168243408203
    3. 's' → logprob: -5.034168243408203
    4. 'C' → logprob: -7.284168243408203
    5. ' print' → logprob: -8.284168243408203
    6. '#' → logprob: -9.159168243408203
    7. 'som' → logprob: -9.784168243408203
    8. 'rés' → logprob: -9.784168243408203
    9. 'r' → logprob: -10.284168243408203
    10. 'total' → logprob: -10.534168243408203

Token 264: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08009406924247742
    2. '_' → logprob: -3.4550940990448
    3. '=' → logprob: -3.8300940990448
    4. 's' → logprob: -4.705093860626221
    5. 'result' → logprob: -5.080093860626221
    6. '_result' → logprob: -5.080093860626221
    7. ' =
' → logprob: -7.455093860626221
    8. '_s' → logprob: -7.830093860626221
    9. 'r' → logprob: -8.455094337463379
    10. ' ' → logprob: -8.830094337463379

Token 265: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38896623253822327
    2. ' A' → logprob: -1.1389662027359009
    3. ' la' → logprob: -6.513966083526611
    4. 'la' → logprob: -7.638966083526611
    5. 's' → logprob: -9.63896656036377
    6. 'C' → logprob: -10.51396656036377
    7. ' ' → logprob: -11.51396656036377
    8. ' C' → logprob: -11.76396656036377
    9. 'S' → logprob: -12.01396656036377
    10. ' somme' → logprob: -12.63896656036377

Token 266: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01357910968363285
    2. ' somme' → logprob: -4.38857889175415
    3. 'som' → logprob: -6.88857889175415
    4. 'sum' → logprob: -10.513579368591309
    5. 'pu' → logprob: -12.263579368591309
    6. 'result' → logprob: -12.638579368591309
    7. 'rés' → logprob: -12.638579368591309
    8. '#' → logprob: -13.013579368591309
    9. 'Som' → logprob: -13.263579368591309
    10. ' som' → logprob: -13.763579368591309

Token 267: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0130219459533691
    2. 'C' → logprob: -1.1380219459533691
    3. ' =' → logprob: -1.7630219459533691
    4. '_' → logprob: -3.138021945953369
    5. 'result' → logprob: -3.388021945953369
    6. '=' → logprob: -3.763021945953369
    7. '_s' → logprob: -4.263021945953369
    8. 'A' → logprob: -4.638021945953369
    9. ' C' → logprob: -5.388021945953369
    10. ' somme' → logprob: -5.513021945953369

Token 268: ' l' (ID: 305)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18254077434539795
    2. ' A' → logprob: -1.807540774345398
    3. ' la' → logprob: -6.9325408935546875
    4. 's' → logprob: -7.0575408935546875
    5. 'la' → logprob: -7.3075408935546875
    6. 'C' → logprob: -8.682540893554688
    7. ' ' → logprob: -10.682540893554688
    8. 'l' → logprob: -10.807540893554688
    9. ' somme' → logprob: -10.932540893554688
    10. ' C' → logprob: -11.057540893554688

Token 269: ''ex' (ID: 23472)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34895703196525574
    2. ''ex' → logprob: -1.3489570617675781
    3. 'expression' → logprob: -4.223957061767578
    4. 'aire' → logprob: -4.973957061767578
    5. 'ex' → logprob: -5.098957061767578
    6. ''' → logprob: -5.973957061767578
    7. '’expression' → logprob: -6.598957061767578
    8. 'e' → logprob: -6.848957061767578
    9. 'A' → logprob: -7.223957061767578
    10. 'eur' → logprob: -8.098957061767578

Token 270: 'pression' (ID: 4521)
  Prédit: 'pression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pression' → logprob: -0.002369466470554471
    2. 'p' → logprob: -6.127369403839111
    3. 'pr' → logprob: -9.37736988067627
    4. 'ponent' → logprob: -9.62736988067627
    5. 'PRESSION' → logprob: -12.12736988067627
    6. ' pression' → logprob: -12.25236988067627
    7. 'ression' → logprob: -12.87736988067627
    8. '2' → logprob: -13.12736988067627
    9. 'r' → logprob: -13.62736988067627
    10. 'écution' → logprob: -13.62736988067627

Token 271: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3556947410106659
    2. 'A' → logprob: -2.1056947708129883
    3. ' result' → logprob: -2.8556947708129883
    4. ' A' → logprob: -3.1056947708129883
    5. 'C' → logprob: -3.6056947708129883
    6. ' resultat' → logprob: -3.8556947708129883
    7. '(' → logprob: -5.105694770812988
    8. ' (' → logprob: -5.230694770812988
    9. ' C' → logprob: -5.605694770812988
    10. 'rés' → logprob: -5.605694770812988

Token 272: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07055339217185974
    2. ' A' → logprob: -2.8205533027648926
    3. ' (' → logprob: -5.445553302764893
    4. '2' → logprob: -6.570553302764893
    5. '(' → logprob: -6.695553302764893
    6. '(A' → logprob: -6.945553302764893
    7. ')' → logprob: -8.32055377960205
    8. ' ' → logprob: -8.44555377960205
    9. ' )' → logprob: -9.94555377960205
    10. '3' → logprob: -10.32055377960205

Token 273: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6375190615653992
    2. '+' → logprob: -0.7625190615653992
    3. '+B' → logprob: -6.012518882751465
    4. '*' → logprob: -6.637518882751465
    5. ' *' → logprob: -7.762518882751465
    6. '**' → logprob: -8.387518882751465
    7. '-' → logprob: -9.012518882751465
    8. ' -' → logprob: -9.137518882751465
    9. ' ' → logprob: -10.012518882751465
    10. ' **' → logprob: -10.512518882751465

Token 274: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47423356771469116
    2. ' B' → logprob: -0.9742335677146912
    3. ' ' → logprob: -9.974233627319336
    4. '1' → logprob: -10.224233627319336
    5. ' (' → logprob: -10.974233627319336
    6. '3' → logprob: -11.099233627319336
    7. '2' → logprob: -11.474233627319336
    8. '(' → logprob: -11.599233627319336
    9. '(B' → logprob: -11.849233627319336
    10. '5' → logprob: -12.724233627319336

Token 275: '2' (ID: 17)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07019606977701187
    2. ' B' → logprob: -2.6951961517333984
    3. '1' → logprob: -8.820196151733398
    4. ' ' → logprob: -10.445196151733398
    5. '3' → logprob: -10.570196151733398
    6. '2' → logprob: -10.945196151733398
    7. '(' → logprob: -11.445196151733398
    8. '(B' → logprob: -11.570196151733398
    9. '5' → logprob: -12.070196151733398
    10. ' (' → logprob: -12.195196151733398

Token 276: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6715799570083618
    2. ' *' → logprob: -0.9215799570083618
    3. ')' → logprob: -2.4215798377990723
    4. ' )' → logprob: -6.296579837799072
    5. ')*' → logprob: -7.671579837799072
    6. ' ' → logprob: -9.79658031463623
    7. '*)' → logprob: -10.67158031463623
    8. ' ' → logprob: -11.42158031463623
    9. '*A' → logprob: -11.54658031463623
    10. 'B' → logprob: -12.04658031463623

Token 277: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.313360333442688
    2. ' B' → logprob: -1.313360333442688
    3. ' ' → logprob: -9.563360214233398
    4. '*' → logprob: -11.813360214233398
    5. ' ' → logprob: -11.938360214233398
    6. '	B' → logprob: -12.688360214233398
    7. ' *' → logprob: -13.063360214233398
    8. ' (' → logprob: -13.438360214233398
    9. ')' → logprob: -13.500860214233398
    10. '(B' → logprob: -13.625860214233398

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02460343949496746
    2. ')**' → logprob: -3.7746033668518066
    3. ' )' → logprob: -6.649603366851807
    4. ')*' → logprob: -10.524603843688965
    5. '**' → logprob: -11.024603843688965
    6. ')
' → logprob: -12.274603843688965
    7. ')+' → logprob: -12.774603843688965
    8. '))' → logprob: -13.399603843688965
    9. ' ' → logprob: -13.399603843688965
    10. ')*(' → logprob: -13.524603843688965

Token 279: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0007090978906489909
    2. ' result' → logprob: -8.250709533691406
    3. ' resultat' → logprob: -8.750709533691406
    4. 'C' → logprob: -9.000709533691406
    5. 'rés' → logprob: -9.750709533691406
    6. 'res' → logprob: -10.000709533691406
    7. 'print' → logprob: -10.500709533691406
    8. ' résultat' → logprob: -10.875709533691406
    9. 'val' → logprob: -12.750709533691406
    10. 'r' → logprob: -12.875709533691406

Token 280: ' B' (ID: 418)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00019495772721711546
    2. 'rés' → logprob: -9.750194549560547
    3. 'C' → logprob: -9.875194549560547
    4. 'res' → logprob: -9.875194549560547
    5. 'expression' → logprob: -11.125194549560547
    6. ' resultat' → logprob: -11.625194549560547
    7. 'val' → logprob: -12.125194549560547
    8. ' result' → logprob: -13.500194549560547
    9. 'print' → logprob: -14.125194549560547
    10. 'resultado' → logprob: -14.375194549560547

Token 281: ' est' (ID: 893)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2763579189777374
    2. '_' → logprob: -2.026357889175415
    3. ' *' → logprob: -2.651357889175415
    4. '**' → logprob: -5.151358127593994
    5. '2' → logprob: -5.276358127593994
    6. ' =' → logprob: -5.401358127593994
    7. '=' → logprob: -5.776358127593994
    8. ')' → logprob: -5.901358127593994
    9. '_val' → logprob: -5.901358127593994
    10. ' *=' → logprob: -5.901358127593994

Token 282: ' multip' (ID: 17524)
  Prédit: ' multip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multip' → logprob: -0.04730803892016411
    2. '*' → logprob: -3.6723079681396484
    3. 'multip' → logprob: -5.047307968139648
    4. ' *' → logprob: -5.422307968139648
    5. '2' → logprob: -6.172307968139648
    6. ' ' → logprob: -6.172307968139648
    7. ' utilisé' → logprob: -6.172307968139648
    8. ' au' → logprob: -7.547307968139648
    9. ' B' → logprob: -7.797307968139648
    10. ' A' → logprob: -8.047307968139648

Token 283: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.014501819387078285
    2. 'li' → logprob: -4.264502048492432
    3. 'lic' → logprob: -8.264501571655273
    4. 'l' → logprob: -10.389501571655273
    5. '*' → logprob: -11.514501571655273
    6. 'lication' → logprob: -12.139501571655273
    7. ')' → logprob: -12.264501571655273
    8. 'lin' → logprob: -12.639501571655273
    9. 'liable' → logprob: -13.014501571655273
    10. 'lé' → logprob: -13.014501571655273

Token 284: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6373183131217957
    2. 'par' → logprob: -0.7623183131217957
    3. '*' → logprob: -5.512318134307861
    4. '2' → logprob: -8.26231861114502
    5. ' ' → logprob: -8.51231861114502
    6. ' *' → logprob: -9.63731861114502
    7. '_par' → logprob: -11.01231861114502
    8. ')' → logprob: -11.13731861114502
    9. ' by' → logprob: -11.38731861114502
    10. 'by' → logprob: -11.38731861114502

Token 285: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11282634735107422
    2. ' ' → logprob: -2.237826347351074
    3. ' ' → logprob: -13.487826347351074
    4. ' deux' → logprob: -13.737826347351074
    5. ' a' → logprob: -15.112826347351074
    6. '3' → logprob: -15.112826347351074
    7. '```' → logprob: -15.362826347351074
    8. ''' → logprob: -15.862826347351074
    9. ' two' → logprob: -16.36282730102539
    10. 'de' → logprob: -16.73782730102539

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012510710395872593
    2. ' ' → logprob: -4.387510776519775
    3. '3' → logprob: -15.512510299682617
    4. ' ' → logprob: -15.887510299682617
    5. ' deux' → logprob: -16.137510299682617
    6. '```' → logprob: -16.387510299682617
    7. '1' → logprob: -16.512510299682617
    8. ''' → logprob: -16.762510299682617
    9. '"' → logprob: -16.887510299682617
    10. '  ' → logprob: -17.012510299682617

Token 287: ' d' (ID: 272)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005504930857568979
    2. 'C' → logprob: -6.005505084991455
    3. 'rés' → logprob: -6.505505084991455
    4. 'res' → logprob: -6.880505084991455
    5. ' result' → logprob: -9.130504608154297
    6. ' resultat' → logprob: -9.130504608154297
    7. 'r' → logprob: -9.380504608154297
    8. 'expression' → logprob: -10.130504608154297
    9. ' résultat' → logprob: -10.130504608154297
    10. 'val' → logprob: -10.255504608154297

Token 288: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4090677499771118
    2. 'eux' → logprob: -1.7840677499771118
    3. ''abord' → logprob: -2.5340676307678223
    4. 'ans' → logprob: -2.9090676307678223
    5. 'u' → logprob: -3.9090676307678223
    6. '*' → logprob: -6.409067630767822
    7. 'ue' → logprob: -6.534067630767822
    8. ''e' → logprob: -7.034067630767822
    9. ''' → logprob: -7.284067630767822
    10. '```' → logprob: -7.284067630767822

Token 289: '.' (ID: 13)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.015236800536513329
    2. 'C' → logprob: -5.015236854553223
    3. 'rés' → logprob: -5.390236854553223
    4. 'res' → logprob: -6.765236854553223
    5. ' result' → logprob: -6.765236854553223
    6. ' résultat' → logprob: -7.640236854553223
    7. ' resultat' → logprob: -7.765236854553223
    8. 'r' → logprob: -7.890236854553223
    9. 'Rés' → logprob: -9.890236854553223
    10. 'val' → logprob: -10.265236854553223

Token 290: ' Cette' (ID: 27383)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007553862873464823
    2. ' result' → logprob: -6.007554054260254
    3. ' resultat' → logprob: -6.257554054260254
    4. 'C' → logprob: -6.757554054260254
    5. 'rés' → logprob: -6.882554054260254
    6. 'res' → logprob: -7.632554054260254
    7. ' résultat' → logprob: -7.882554054260254
    8. 'r' → logprob: -10.632554054260254
    9. 'Rés' → logprob: -11.007554054260254
    10. 'val' → logprob: -11.507554054260254

Token 291: ' opération' (ID: 86023)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7189391255378723
    2. 'expression' → logprob: -1.8439390659332275
    3. ' valeur' → logprob: -1.8439390659332275
    4. ' expression' → logprob: -2.9689390659332275
    5. '#' → logprob: -3.5939390659332275
    6. ' ligne' → logprob: -4.468939304351807
    7. '*' → logprob: -4.593939304351807
    8. ' opération' → logprob: -4.593939304351807
    9. ' val' → logprob: -4.718939304351807
    10. 'multip' → logprob: -4.718939304351807

Token 292: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9587473273277283
    2. ' puis' → logprob: -1.333747386932373
    3. ',' → logprob: -1.583747386932373
    4. 's' → logprob: -3.708747386932373
    5. '#' → logprob: -3.958747386932373
    6. 'est' → logprob: -4.458747386932373
    7. 'result' → logprob: -4.458747386932373
    8. 'ens' → logprob: -4.458747386932373
    9. '*' → logprob: -4.583747386932373
    10. 'p' → logprob: -4.708747386932373

Token 293: ' fait' (ID: 7473)
  Prédit: 'ffect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ffect' → logprob: -0.1494450569152832
    2. 'effect' → logprob: -3.399445056915283
    3. 'fait' → logprob: -3.524445056915283
    4. ' poursuit' → logprob: -3.899445056915283
    5. 'p' → logprob: -4.649445056915283
    6. ' fait' → logprob: -5.149445056915283
    7. 'uit' → logprob: -5.274445056915283
    8. 'term' → logprob: -5.274445056915283
    9. 'uite' → logprob: -5.274445056915283
    10. 'lit' → logprob: -6.274445056915283

Token 294: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.2207014113664627
    2. ' avant' → logprob: -1.7207014560699463
    3. 'prior' → logprob: -4.470701217651367
    4. 'dans' → logprob: -5.970701217651367
    5. ' dans' → logprob: -6.720701217651367
    6. 'p' → logprob: -7.220701217651367
    7. ' puis' → logprob: -7.595701217651367
    8. 'en' → logprob: -7.845701217651367
    9. 'd' → logprob: -7.970701217651367
    10. 'par' → logprob: -8.095701217651367

Token 295: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.05388423800468445
    2. 'l' → logprob: -3.428884267807007
    3. 'A' → logprob: -4.428884029388428
    4. ' la' → logprob: -5.553884029388428
    5. 'sou' → logprob: -6.178884029388428
    6. 'le' → logprob: -7.178884029388428
    7. 's' → logprob: -7.428884029388428
    8. 'lap' → logprob: -8.553884506225586
    9. '-' → logprob: -9.178884506225586
    10. 'celle' → logprob: -9.178884506225586

Token 296: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.00881677120923996
    2. 's' → logprob: -4.883816719055176
    3. '-' → logprob: -6.758816719055176
    4. 'sub' → logprob: -10.633816719055176
    5. 'Sou' → logprob: -12.133816719055176
    6. 'multip' → logprob: -12.258816719055176
    7. '```' → logprob: -12.383816719055176
    8. 'moins' → logprob: -12.508816719055176
    9. ' sou' → logprob: -13.883816719055176
    10. ' ' → logprob: -14.133816719055176

Token 297: 'straction' (ID: 79887)
  Prédit: 'straction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'straction' → logprob: -0.00023619852436240762
    2. 'traction' → logprob: -8.750236511230469
    3. 'stra' → logprob: -10.000236511230469
    4. 'str' → logprob: -10.625236511230469
    5. 'tration' → logprob: -12.375236511230469
    6. 'b' → logprob: -13.750236511230469
    7. 'struction' → logprob: -14.375236511230469
    8. 'st' → logprob: -14.625236511230469
    9. 'raction' → logprob: -15.375236511230469
    10. 'stitution' → logprob: -15.625236511230469

Token 298: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0020136944949626923
    2. 'C' → logprob: -7.002013683319092
    3. 'rés' → logprob: -7.502013683319092
    4. 'res' → logprob: -7.627013683319092
    5. 'expression' → logprob: -11.37701416015625
    6. ' resultat' → logprob: -11.37701416015625
    7. 'r' → logprob: -11.37701416015625
    8. 'val' → logprob: -11.87701416015625
    9. 'resultado' → logprob: -12.25201416015625
    10. ' result' → logprob: -12.75201416015625

Token 299: ' cause' (ID: 7075)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011709370883181691
    2. ' A' → logprob: -6.751171112060547
    3. ' ' → logprob: -15.626171112060547
    4. '	A' → logprob: -16.001171112060547
    5. '>A' → logprob: -16.376171112060547
    6. '=A' → logprob: -16.876171112060547
    7. 'l' → logprob: -17.376171112060547
    8. '#' → logprob: -17.376171112060547
    9. '_A' → logprob: -17.501171112060547
    10. ' ' → logprob: -17.501171112060547

Token 300: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08288384228944778
    2. ' des' → logprob: -3.332883834838867
    3. 'de' → logprob: -3.457883834838867
    4. 'des' → logprob: -4.957883834838867
    5. '<|end|>' → logprob: -6.582883834838867
    6. ' of' → logprob: -6.707883834838867
    7. ' du' → logprob: -6.832883834838867
    8. 'd' → logprob: -6.957883834838867
    9. 'du' → logprob: -8.207883834838867
    10. ' d' → logprob: -8.957883834838867

Token 301: ' règles' (ID: 67042)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.30049431324005127
    2. 'parent' → logprob: -1.4254943132400513
    3. ' parent' → logprob: -5.050494194030762
    4. ' prior' → logprob: -5.675494194030762
    5. 'multip' → logprob: -5.675494194030762
    6. 'preced' → logprob: -5.800494194030762
    7. ' parentheses' → logprob: -6.800494194030762
    8. 'op' → logprob: -7.300494194030762
    9. 'par' → logprob: -8.050494194030762
    10. '*' → logprob: -8.675494194030762

Token 302: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09051283448934555
    2. 'de' → logprob: -2.465512752532959
    3. ' d' → logprob: -8.090513229370117
    4. 'd' → logprob: -8.090513229370117
    5. ' A' → logprob: -8.465513229370117
    6. 'preced' → logprob: -9.215513229370117
    7. ' of' → logprob: -9.465513229370117
    8. ' des' → logprob: -9.465513229370117
    9. 'A' → logprob: -9.465513229370117
    10. 'ar' → logprob: -9.715513229370117

Token 303: ' priorité' (ID: 150252)
  Prédit: 'prior'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prior' → logprob: -0.00489631574600935
    2. 'preced' → logprob: -5.87989616394043
    3. ' priorité' → logprob: -6.37989616394043
    4. 'Prior' → logprob: -8.87989616394043
    5. ' prior' → logprob: -9.12989616394043
    6. 'prio' → logprob: -10.00489616394043
    7. 'la' → logprob: -10.25489616394043
    8. '_prior' → logprob: -10.87989616394043
    9. 'pré' → logprob: -11.37989616394043
    10. 'l' → logprob: -11.50489616394043

Token 304: ' des' (ID: 731)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.017742710188031197
    2. 'rés' → logprob: -4.39274263381958
    3. 'C' → logprob: -5.89274263381958
    4. 'res' → logprob: -6.51774263381958
    5. 'val' → logprob: -8.392743110656738
    6. 'r' → logprob: -8.642743110656738
    7. 'Rés' → logprob: -9.392743110656738
    8. '#' → logprob: -9.642743110656738
    9. ' resultat' → logprob: -9.642743110656738
    10. ',' → logprob: -9.642743110656738

Token 305: ' opér' (ID: 65915)
  Prédit: ' opér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opér' → logprob: -0.4251440763473511
    2. 'op' → logprob: -1.300144076347351
    3. ' opérations' → logprob: -2.6751441955566406
    4. 'parent' → logprob: -6.675144195556641
    5. 'multip' → logprob: -6.800144195556641
    6. 'oper' → logprob: -6.925144195556641
    7. ' op' → logprob: -8.17514419555664
    8. 'operator' → logprob: -8.17514419555664
    9. '*' → logprob: -8.17514419555664
    10. 'arith' → logprob: -8.80014419555664

Token 306: 'ateurs' (ID: 19727)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.09722911566495895
    2. 'ateurs' → logprob: -2.84722900390625
    3. 'érations' → logprob: -3.47222900390625
    4. 'r' → logprob: -5.97222900390625
    5. '```' → logprob: -8.72222900390625
    6. 'ér' → logprob: -8.84722900390625
    7. 't' → logprob: -9.22222900390625
    8. 'ateur' → logprob: -9.47222900390625
    9. 'd' → logprob: -9.84722900390625
    10. 'ar' → logprob: -9.97222900390625

Token 307: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0010681778658181429
    2. 'C' → logprob: -7.501068115234375
    3. 'rés' → logprob: -7.876068115234375
    4. 'res' → logprob: -9.126068115234375
    5. ' resultat' → logprob: -11.876068115234375
    6. 'r' → logprob: -12.126068115234375
    7. 'val' → logprob: -12.376068115234375
    8. 'resultado' → logprob: -13.126068115234375
    9. ' result' → logprob: -13.626068115234375
    10. 'R' → logprob: -13.876068115234375

Token 308: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0006915858830325305
    2. 'C' → logprob: -7.7506914138793945
    3. 'res' → logprob: -9.000691413879395
    4. 'rés' → logprob: -9.750691413879395
    5. 'print' → logprob: -10.000691413879395
    6. ' resultat' → logprob: -11.375691413879395
    7. 'val' → logprob: -11.750691413879395
    8. 'expression' → logprob: -12.375691413879395
    9. ' result' → logprob: -12.500691413879395
    10. 'resultado' → logprob: -13.125691413879395

Token 309: ' Cette' (ID: 27383)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0019697926472872496
    2. 'C' → logprob: -6.501969814300537
    3. 'res' → logprob: -8.501969337463379
    4. 'rés' → logprob: -9.126969337463379
    5. 'print' → logprob: -9.376969337463379
    6. ' resultat' → logprob: -10.876969337463379
    7. 'expression' → logprob: -11.001969337463379
    8. 'val' → logprob: -11.751969337463379
    9. 'R' → logprob: -12.126969337463379
    10. 're' → logprob: -12.251969337463379

Token 310: ' quantité' (ID: 89219)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05957451090216637
    2. ' valeur' → logprob: -3.684574604034424
    3. 'result' → logprob: -4.559574604034424
    4. '#' → logprob: -5.309574604034424
    5. 'expression' → logprob: -5.434574604034424
    6. 'rés' → logprob: -5.559574604034424
    7. 'ligne' → logprob: -6.059574604034424
    8. ' ligne' → logprob: -6.559574604034424
    9. ' val' → logprob: -6.809574604034424
    10. '
' → logprob: -7.559574604034424

Token 311: ' est' (ID: 893)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.978533923625946
    2. 'rés' → logprob: -1.7285339832305908
    3. 'result' → logprob: -1.8535339832305908
    4. '_' → logprob: -2.228533983230591
    5. ' =' → logprob: -2.853533983230591
    6. 'est' → logprob: -3.978533983230591
    7. 'res' → logprob: -4.353533744812012
    8. ' est' → logprob: -4.353533744812012
    9. '_res' → logprob: -4.603533744812012
    10. 'r' → logprob: -4.603533744812012

Token 312: ' ensuite' (ID: 39713)
  Prédit: ' ensuite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensuite' → logprob: -0.8764650225639343
    2. ' stock' → logprob: -1.251465082168579
    3. 'stock' → logprob: -2.251465082168579
    4. 'A' → logprob: -2.751465082168579
    5. 'ens' → logprob: -3.501465082168579
    6. 'aff' → logprob: -3.751465082168579
    7. 'assign' → logprob: -4.00146484375
    8. 'calcul' → logprob: -4.12646484375
    9. ' calcul' → logprob: -4.37646484375
    10. ' affect' → logprob: -5.25146484375

Token 313: ' sou' (ID: 4069)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.28708913922309875
    2. 'stock' → logprob: -1.9120891094207764
    3. 's' → logprob: -3.4120891094207764
    4. 'sub' → logprob: -3.9120891094207764
    5. ' stock' → logprob: -4.1620893478393555
    6. 'aff' → logprob: -4.4120893478393555
    7. ' sou' → logprob: -4.5370893478393555
    8. 'assign' → logprob: -4.7870893478393555
    9. ' affect' → logprob: -7.9120893478393555
    10. 'calcul' → logprob: -8.037089347839355

Token 314: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.008989990688860416
    2. 'tra' → logprob: -5.3839898109436035
    3. 'b' → logprob: -6.2589898109436035
    4. 'tr' → logprob: -6.3839898109436035
    5. 'stract' → logprob: -8.008990287780762
    6. 'trag' → logprob: -9.258990287780762
    7. 'str' → logprob: -9.258990287780762
    8. 'tract' → logprob: -9.758990287780762
    9. 'straction' → logprob: -10.258990287780762
    10. 'istr' → logprob: -10.633990287780762

Token 315: 'ite' (ID: 651)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.5286088585853577
    2. 'it' → logprob: -1.028608798980713
    3. 'ite' → logprob: -3.153608798980713
    4. 'g' → logprob: -4.903608798980713
    5. 't' → logprob: -7.528608798980713
    6. 'cte' → logprob: -7.653608798980713
    7. 'ction' → logprob: -7.903608798980713
    8. '>' → logprob: -8.153609275817871
    9. 'ée' → logprob: -9.028609275817871
    10. 'ig' → logprob: -9.278609275817871

Token 316: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5311445593833923
    2. ' de' → logprob: -1.281144618988037
    3. 'de' → logprob: -2.531144618988037
    4. 'A' → logprob: -3.531144618988037
    5. 'à' → logprob: -4.156144618988037
    6. ' A' → logprob: -4.906144618988037
    7. ' ' → logprob: -6.406144618988037
    8. 'from' → logprob: -8.531144142150879
    9. 'd' → logprob: -9.031144142150879
    10. ' ' → logprob: -9.281144142150879

Token 317: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02054445445537567
    2. ' A' → logprob: -3.8955445289611816
    3. ' ' → logprob: -14.020544052124023
    4. ' la' → logprob: -14.270544052124023
    5. ' ' → logprob: -15.145544052124023
    6. 'l' → logprob: -15.270544052124023
    7. 'la' → logprob: -15.520544052124023
    8. 'a' → logprob: -15.895544052124023
    9. '	A' → logprob: -16.270544052124023
    10. '#' → logprob: -16.270544052124023

Token 318: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0017465773271396756
    2. 'C' → logprob: -7.001746654510498
    3. 'rés' → logprob: -8.00174617767334
    4. 'res' → logprob: -8.62674617767334
    5. ' resultat' → logprob: -8.87674617767334
    6. ' result' → logprob: -9.00174617767334
    7. 'r' → logprob: -11.12674617767334
    8. ' résultat' → logprob: -11.12674617767334
    9. 'expression' → logprob: -11.50174617767334
    10. 'val' → logprob: -12.50174617767334

Token 319: 's' (ID: 82)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0004546254931483418
    2. 'C' → logprob: -8.125454902648926
    3. 'rés' → logprob: -9.250454902648926
    4. 'res' → logprob: -9.875454902648926
    5. ' resultat' → logprob: -12.875454902648926
    6. 'print' → logprob: -13.000454902648926
    7. 'val' → logprob: -13.375454902648926
    8. 'expression' → logprob: -13.750454902648926
    9. 'resultado' → logprob: -13.750454902648926
    10. 're' → logprob: -14.625454902648926

Token 320: 'ous' (ID: 784)
  Prédit: 'omme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.7686775326728821
    2. '=' → logprob: -0.8936775326728821
    3. ' =' → logprob: -2.5186774730682373
    4. '=result' → logprob: -4.393677711486816
    5. '_result' → logprob: -4.893677711486816
    6. 'core' → logprob: -5.268677711486816
    7. '=A' → logprob: -5.268677711486816
    8. 'result' → logprob: -6.018677711486816
    9. '#' → logprob: -6.018677711486816
    10. 'e' → logprob: -6.393677711486816

Token 321: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.583640992641449
    2. '_total' → logprob: -2.4586410522460938
    3. '_val' → logprob: -2.5836410522460938
    4. 't' → logprob: -2.5836410522460938
    5. 'total' → logprob: -2.5836410522460938
    6. 'result' → logprob: -3.3336410522460938
    7. 'tot' → logprob: -4.458641052246094
    8. '_expression' → logprob: -4.583641052246094
    9. 'traction' → logprob: -4.708641052246094
    10. 'r' → logprob: -4.833641052246094

Token 322: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.3964470624923706
    2. 'ultat' → logprob: -1.1464470624923706
    3. 'ulat' → logprob: -5.02144718170166
    4. 'ult' → logprob: -6.02144718170166
    5. ' =' → logprob: -9.02144718170166
    6. '=' → logprob: -9.27144718170166
    7. '_' → logprob: -9.89644718170166
    8. 'tat' → logprob: -10.39644718170166
    9. 'ut' → logprob: -10.52144718170166
    10. 'a' → logprob: -10.77144718170166

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25487852096557617
    2. '=' → logprob: -1.5048785209655762
    3. 's' → logprob: -6.379878520965576
    4. '_' → logprob: -7.004878520965576
    5. '=s' → logprob: -9.129878997802734
    6. ' ' → logprob: -9.254878997802734
    7. '1' → logprob: -9.754878997802734
    8. 't' → logprob: -10.504878997802734
    9. 'e' → logprob: -11.129878997802734
    10. '_=' → logprob: -11.254878997802734

Token 324: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1269306242465973
    2. ' A' → logprob: -2.1269307136535645
    3. '(A' → logprob: -13.501930236816406
    4. ' (' → logprob: -14.251930236816406
    5. ' ' → logprob: -15.251930236816406
    6. '(' → logprob: -15.376930236816406
    7. '	A' → logprob: -16.001930236816406
    8. ' ' → logprob: -17.626930236816406
    9. '
' → logprob: -18.751930236816406
    10. '_A' → logprob: -18.876930236816406

Token 325: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10031493008136749
    2. '-' → logprob: -2.3503148555755615
    3. ' ' → logprob: -9.22531509399414
    4. ' ' → logprob: -11.60031509399414
    5. 's' → logprob: -15.35031509399414
    6. ' -
' → logprob: -16.10031509399414
    7. '_' → logprob: -16.60031509399414
    8. ')' → logprob: -17.47531509399414
    9. ' minus' → logprob: -17.60031509399414
    10. ' ­' → logprob: -17.97531509399414

Token 326: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07890069484710693
    2. '2' → logprob: -2.5789008140563965
    3. ' (' → logprob: -12.078900337219238
    4. ' ' → logprob: -12.828900337219238
    5. '(' → logprob: -12.953900337219238
    6. '  ' → logprob: -16.578901290893555
    7. '```' → logprob: -17.516401290893555
    8. '   ' → logprob: -17.516401290893555
    9. '	' → logprob: -18.641401290893555
    10. '​' → logprob: -18.828901290893555

Token 327: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0046382686123251915
    2. ' ' → logprob: -5.379638195037842
    3. '(' → logprob: -11.004638671875
    4. ' (' → logprob: -13.504638671875
    5. '   ' → logprob: -16.879638671875
    6. '  ' → logprob: -17.379638671875
    7. ' ' → logprob: -17.754638671875
    8. '```' → logprob: -19.004638671875
    9. '２' → logprob: -19.129638671875
    10. '
' → logprob: -19.254638671875

Token 328: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005235529970377684
    2. ' *' → logprob: -5.25523567199707
    3. '*b' → logprob: -14.00523567199707
    4. '**' → logprob: -15.38023567199707
    5. ' ' → logprob: -16.00523567199707
    6. ' ' → logprob: -16.13023567199707
    7. '*object' → logprob: -16.38023567199707
    8. '*(' → logprob: -16.50523567199707
    9. '*A' → logprob: -16.50523567199707
    10. '*s' → logprob: -16.50523567199707

Token 329: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.01814994215965271
    2. ' B' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.768150329589844
    4. '	B' → logprob: -18.518150329589844
    5. ' ' → logprob: -20.518150329589844
    6. '(B' → logprob: -20.768150329589844
    7. '_B' → logprob: -20.893150329589844
    8. '>B' → logprob: -21.268150329589844
    9. 'b' → logprob: -21.518150329589844
    10. '<|end|>' → logprob: -21.518150329589844

Token 330: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16546723246574402
    2. '
' → logprob: -2.0404672622680664
    3. '#' → logprob: -4.540467262268066
    4. '<|end|>' → logprob: -4.790467262268066
    5. 's' → logprob: -6.790467262268066
    6. '\n' → logprob: -6.915467262268066
    7. '  
' → logprob: -7.915467262268066
    8. ' 
' → logprob: -8.790467262268066
    9. ' print' → logprob: -8.915467262268066
    10. '\' → logprob: -9.040467262268066

Token 331: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007428434211760759
    2. 'result' → logprob: -5.8824286460876465
    3. '#' → logprob: -6.0074286460876465
    4. 'if' → logprob: -6.6324286460876465
    5. 's' → logprob: -8.507428169250488
    6. '
' → logprob: -9.132428169250488
    7. 'return' → logprob: -9.132428169250488
    8. '\n' → logprob: -9.507428169250488
    9. 'pr' → logprob: -9.632428169250488
    10. '<|end|>' → logprob: -9.882428169250488

Token 332: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12640738487243652
    2. 'result' → logprob: -2.2514073848724365
    3. 'if' → logprob: -4.501407623291016
    4. 's' → logprob: -6.501407623291016
    5. 'rés' → logprob: -7.876407623291016
    6. '#' → logprob: -8.751407623291016
    7. 'res' → logprob: -9.001407623291016
    8. 'produ' → logprob: -9.626407623291016
    9. 'total' → logprob: -10.626407623291016
    10. 'r' → logprob: -10.876407623291016

Token 333: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.022164270281791687
    2. '#' → logprob: -4.147164344787598
    3. 'result' → logprob: -5.272164344787598
    4. 's' → logprob: -7.272164344787598
    5. 'prin' → logprob: -9.147164344787598
    6. 'if' → logprob: -10.022164344787598
    7. 'rés' → logprob: -10.522164344787598
    8. 'val' → logprob: -10.522164344787598
    9. '#print' → logprob: -10.772164344787598
    10. 'prise' → logprob: -11.397164344787598

Token 334: ' max' (ID: 2999)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012439649435691535
    2. ' print' → logprob: -9.000123977661133
    3. 'prin' → logprob: -14.500123977661133
    4. 'pr' → logprob: -15.750123977661133
    5. 'abs' → logprob: -16.625123977661133
    6. 'result' → logprob: -16.750123977661133
    7. '#print' → logprob: -16.750123977661133
    8. '#' → logprob: -17.875123977661133
    9. 'max' → logprob: -18.125123977661133
    10. 's' → logprob: -18.875123977661133

Token 335: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14498263597488403
    2. '(s' → logprob: -2.0199825763702393
    3. '(max' → logprob: -6.644982814788818
    4. '()' → logprob: -7.144982814788818
    5. '(
' → logprob: -9.64498233795166
    6. 's' → logprob: -9.64498233795166
    7. ' (' → logprob: -10.64498233795166
    8. 'max' → logprob: -11.51998233795166
    9. '(

' → logprob: -11.51998233795166
    10. '((' → logprob: -11.89498233795166

Token 336: ' ren' (ID: 5427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5795480608940125
    2. '(max' → logprob: -1.4545481204986572
    3. 'max' → logprob: -2.0795481204986572
    4. '(s' → logprob: -2.7045481204986572
    5. ' max' → logprob: -5.579547882080078
    6. 'ren' → logprob: -5.829547882080078
    7. 's' → logprob: -6.204547882080078
    8. ' permet' → logprob: -6.329547882080078
    9. '()' → logprob: -6.829547882080078
    10. '(
' → logprob: -7.079547882080078

Token 337: 'voie' (ID: 70072)
  Prédit: 'voie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voie' → logprob: -0.01930319331586361
    2. 'v' → logprob: -4.644303321838379
    3. 'voit' → logprob: -5.644303321838379
    4. 'sert' → logprob: -6.144303321838379
    5. 'voy' → logprob: -6.519303321838379
    6. 'et' → logprob: -7.144303321838379
    7. 'return' → logprob: -8.269303321838379
    8. 't' → logprob: -8.644303321838379
    9. 'voi' → logprob: -9.144303321838379
    10. 'ver' → logprob: -9.269303321838379

Token 338: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6787036657333374
    2. 'max' → logprob: -1.8037036657333374
    3. 's' → logprob: -2.053703784942627
    4. '0' → logprob: -2.428703784942627
    5. '(s' → logprob: -2.553703784942627
    6. '(max' → logprob: -3.553703784942627
    7. ' max' → logprob: -6.178703784942627
    8. 'la' → logprob: -6.928703784942627
    9. ' ' → logprob: -6.928703784942627
    10. ' sous' → logprob: -7.928703784942627

Token 339: ' plus' (ID: 2932)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39572852849960327
    2. 's' → logprob: -1.645728588104248
    3. '(' → logprob: -2.270728588104248
    4. 'max' → logprob: -4.020728588104248
    5. ' ' → logprob: -5.020728588104248
    6. '(s' → logprob: -5.895728588104248
    7. ' sous' → logprob: -6.770728588104248
    8. ' max' → logprob: -7.270728588104248
    9. '1' → logprob: -8.27072811126709
    10. 'maximum' → logprob: -8.77072811126709

Token 340: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.14273953437805176
    2. 's' → logprob: -2.7677395343780518
    3. '(' → logprob: -3.5177395343780518
    4. 'max' → logprob: -4.892739295959473
    5. ' grand' → logprob: -5.142739295959473
    6. '(s' → logprob: -5.142739295959473
    7. '```' → logprob: -5.642739295959473
    8. 'pet' → logprob: -5.767739295959473
    9. '0' → logprob: -5.892739295959473
    10. 'haut' → logprob: -5.892739295959473

Token 341: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0886867418885231
    2. '(s' → logprob: -3.21368670463562
    3. 's' → logprob: -3.83868670463562
    4. 'entre' → logprob: -4.213686943054199
    5. ' entre' → logprob: -5.588686943054199
    6. '(max' → logprob: -6.713686943054199
    7. 'val' → logprob: -6.838686943054199
    8. 'max' → logprob: -7.338686943054199
    9. 'de' → logprob: -7.463686943054199
    10. 'des' → logprob: -8.0886869430542

Token 342: ' deux' (ID: 10301)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8102211356163025
    2. '0' → logprob: -1.1852211952209473
    3. '(s' → logprob: -2.0602211952209473
    4. '(' → logprob: -2.4352211952209473
    5. 'A' → logprob: -4.185221195220947
    6. '(A' → logprob: -4.560221195220947
    7. '[' → logprob: -6.060221195220947
    8. '[A' → logprob: -6.185221195220947
    9. '[s' → logprob: -6.810221195220947
    10. ' ' → logprob: -7.185221195220947

Token 343: ' arguments' (ID: 11917)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6839844584465027
    2. '(s' → logprob: -0.9339844584465027
    3. '(' → logprob: -2.4339845180511475
    4. '(A' → logprob: -4.433984279632568
    5. '0' → logprob: -6.058984279632568
    6. 'A' → logprob: -8.933984756469727
    7. 'val' → logprob: -9.308984756469727
    8. '(max' → logprob: -9.933984756469727
    9. ' ' → logprob: -10.183984756469727
    10. 'max' → logprob: -10.183984756469727

Token 344: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7825877666473389
    2. '(s' → logprob: -0.9075877666473389
    3. '(max' → logprob: -2.407587766647339
    4. 'max' → logprob: -4.032588005065918
    5. 's' → logprob: -4.032588005065918
    6. ',' → logprob: -4.907588005065918
    7. 'result' → logprob: -5.782588005065918
    8. 'print' → logprob: -6.782588005065918
    9. 'val' → logprob: -7.532588005065918
    10. '(A' → logprob: -7.907588005065918

Token 345: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.04892320930957794
    2. 'max' → logprob: -3.1739232540130615
    3. 'val' → logprob: -5.923923015594482
    4. 'maximum' → logprob: -6.673923015594482
    5. 'res' → logprob: -7.298923015594482
    6. 'final' → logprob: -7.673923015594482
    7. 'rés' → logprob: -8.29892349243164
    8. 'print' → logprob: -8.54892349243164
    9. ' resultat' → logprob: -9.17392349243164
    10. 's' → logprob: -9.42392349243164

Token 346: ' Ceci' (ID: 144699)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06706476956605911
    2. 'max' → logprob: -3.5670647621154785
    3. 'val' → logprob: -4.1920647621154785
    4. 'final' → logprob: -4.4420647621154785
    5. 'print' → logprob: -5.9420647621154785
    6. 's' → logprob: -6.4420647621154785
    7. 'res' → logprob: -6.6920647621154785
    8. 'rés' → logprob: -6.9420647621154785
    9. ' resultat' → logprob: -7.0670647621154785
    10. 'r' → logprob: -7.1920647621154785

Token 347: ' garantit' (ID: 182078)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2692452371120453
    2. 'val' → logprob: -3.019245147705078
    3. ' result' → logprob: -3.019245147705078
    4. ' resultat' → logprob: -3.519245147705078
    5. 'max' → logprob: -3.769245147705078
    6. 'final' → logprob: -4.519245147705078
    7. 'print' → logprob: -4.519245147705078
    8. 'res' → logprob: -4.519245147705078
    9. ' max' → logprob: -4.894245147705078
    10. '#' → logprob: -5.144245147705078

Token 348: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.44459211826324463
    2. ' que' → logprob: -1.1945921182632446
    3. 's' → logprob: -3.569591999053955
    4. '(s' → logprob: -4.444591999053955
    5. ' ' → logprob: -5.069591999053955
    6. '0' → logprob: -5.194591999053955
    7. '(' → logprob: -6.319591999053955
    8. 'max' → logprob: -7.694591999053955
    9. 'result' → logprob: -8.069592475891113
    10. '   ' → logprob: -8.194592475891113

Token 349: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21165232360363007
    2. '0' → logprob: -1.9616522789001465
    3. 'le' → logprob: -3.9616522789001465
    4. ' sous' → logprob: -4.7116522789001465
    5. 'max' → logprob: -4.8366522789001465
    6. ' le' → logprob: -5.2116522789001465
    7. ' ' → logprob: -5.8366522789001465
    8. 'result' → logprob: -5.9616522789001465
    9. ' max' → logprob: -7.5866522789001465
    10. 'la' → logprob: -7.8366522789001465

Token 350: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1302119791507721
    2. 'result' → logprob: -2.3802120685577393
    3. 'max' → logprob: -3.8802120685577393
    4. 'res' → logprob: -5.88021183013916
    5. 'print' → logprob: -6.13021183013916
    6. 'rés' → logprob: -6.38021183013916
    7. 'val' → logprob: -7.50521183013916
    8. ' résultat' → logprob: -8.25521183013916
    9. 'final' → logprob: -8.63021183013916
    10. '#' → logprob: -8.63021183013916

Token 351: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.12570452690124512
    2. ' final' → logprob: -2.250704526901245
    3. 's' → logprob: -5.625704765319824
    4. ' ne' → logprob: -6.500704765319824
    5. ' n' → logprob: -6.500704765319824
    6. ' est' → logprob: -7.125704765319824
    7. ' s' → logprob: -7.500704765319824
    8. 'max' → logprob: -7.500704765319824
    9. '_final' → logprob: -7.500704765319824
    10. ' soit' → logprob: -7.625704765319824

Token 352: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3343544006347656
    2. 'final' → logprob: -1.7093544006347656
    3. ' soit' → logprob: -1.9593544006347656
    4. ' est' → logprob: -2.2093544006347656
    5. 's' → logprob: -2.3343544006347656
    6. '=' → logprob: -2.9593544006347656
    7. 'est' → logprob: -3.3343544006347656
    8. 'so' → logprob: -3.7093544006347656
    9. '#' → logprob: -3.9593544006347656
    10. ' ne' → logprob: -4.084354400634766

Token 353: ' sera' (ID: 15511)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.06769543141126633
    2. 'so' → logprob: -3.192695379257202
    3. ' sera' → logprob: -3.942695379257202
    4. 'sera' → logprob: -6.067695617675781
    5. 's' → logprob: -6.692695617675781
    6. '#' → logprob: -8.192695617675781
    7. '0' → logprob: -8.692695617675781
    8. 'f' → logprob: -8.817695617675781
    9. 'est' → logprob: -8.817695617675781
    10. ' so' → logprob: -9.317695617675781

Token 354: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8448712229728699
    2. ' jamais' → logprob: -0.8448712229728699
    3. 'jam' → logprob: -1.9698712825775146
    4. ' pas' → logprob: -6.7198710441589355
    5. 'j' → logprob: -10.344871520996094
    6. '0' → logprob: -10.844871520996094
    7. '

' → logprob: -11.094871520996094
    8. ' jam' → logprob: -11.844871520996094
    9. 'Jam' → logprob: -12.344871520996094
    10. 'au' → logprob: -12.469871520996094

Token 355: ' inférieur' (ID: 191498)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.7171323299407959
    2. 'n' → logprob: -0.8421323299407959
    3. 'neg' → logprob: -2.842132329940796
    4. 'pas' → logprob: -4.967132568359375
    5. ' inférieur' → logprob: -5.467132568359375
    6. '0' → logprob: -5.717132568359375
    7. 'moins' → logprob: -6.217132568359375
    8. 'negative' → logprob: -6.717132568359375
    9. 's' → logprob: -6.842132568359375
    10. ' jamais' → logprob: -7.092132568359375

Token 356: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.11942608654499054
    2. ' à' → logprob: -2.2444260120391846
    3. '0' → logprob: -5.369426250457764
    4. '(' → logprob: -7.119426250457764
    5. 'a' → logprob: -7.369426250457764
    6. ',' → logprob: -8.494425773620605
    7. 'to' → logprob: -9.119425773620605
    8. '(
' → logprob: -9.369425773620605
    9. ''à' → logprob: -10.869425773620605
    10. 's' → logprob: -11.119425773620605

Token 357: ' zéro' (ID: 182040)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005248106550425291
    2. ' ' → logprob: -5.255248069763184
    3. 'z' → logprob: -11.880248069763184
    4. ' zéro' → logprob: -12.255248069763184
    5. ' zero' → logprob: -13.630248069763184
    6. 'zero' → logprob: -14.130248069763184
    7. ' z' → logprob: -14.880248069763184
    8. ' ' → logprob: -15.755248069763184
    9. 's' → logprob: -16.1302490234375
    10. '```' → logprob: -17.5052490234375

Token 358: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02681339532136917
    2. '
' → logprob: -3.901813507080078
    3. ',' → logprob: -6.401813507080078
    4. 'res' → logprob: -6.776813507080078
    5. 'final' → logprob: -6.776813507080078
    6. 'max' → logprob: -7.526813507080078
    7. ',
' → logprob: -7.651813507080078
    8. 'rés' → logprob: -8.276813507080078
    9. 'r' → logprob: -8.776813507080078
    10. '
' → logprob: -8.901813507080078

Token 359: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.000169332604855299
    2. 'res' → logprob: -9.50016975402832
    3. 'rés' → logprob: -10.00016975402832
    4. 'final' → logprob: -11.00016975402832
    5. 'max' → logprob: -11.00016975402832
    6. ' resultat' → logprob: -11.50016975402832
    7. 'r' → logprob: -13.50016975402832
    8. 're' → logprob: -14.12516975402832
    9. ' result' → logprob: -14.25016975402832
    10. 's' → logprob: -14.62516975402832

Token 360: ' Si' (ID: 7832)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0027796775102615356
    2. 'max' → logprob: -6.502779483795166
    3. 'res' → logprob: -7.627779483795166
    4. 'rés' → logprob: -8.252779960632324
    5. ' resultat' → logprob: -8.377779960632324
    6. 'final' → logprob: -8.752779960632324
    7. ' result' → logprob: -9.877779960632324
    8. 's' → logprob: -10.377779960632324
    9. 'r' → logprob: -10.502779960632324
    10. 'print' → logprob: -11.627779960632324

Token 361: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03858369216322899
    2. ' sous' → logprob: -3.288583755493164
    3. '0' → logprob: -8.788583755493164
    4. 'sou' → logprob: -9.038583755493164
    5. '(s' → logprob: -9.288583755493164
    6. ' ' → logprob: -9.538583755493164
    7. ' s' → logprob: -10.038583755493164
    8. 'A' → logprob: -11.538583755493164
    9. 'Sous' → logprob: -11.663583755493164
    10. '	s' → logprob: -11.913583755493164

Token 362: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.1852489560842514
    2. 'result' → logprob: -1.8102489709854126
    3. 's' → logprob: -5.435248851776123
    4. ' resultat' → logprob: -8.435249328613281
    5. 'rés' → logprob: -8.435249328613281
    6. '(s' → logprob: -8.810249328613281
    7. '0' → logprob: -9.060249328613281
    8. ' result' → logprob: -9.310249328613281
    9. '(result' → logprob: -9.935249328613281
    10. 'res' → logprob: -10.060249328613281

Token 363: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0010985381668433547
    2. 'rat' → logprob: -8.3760986328125
    3. 's' → logprob: -8.6260986328125
    4. 'al' → logprob: -8.8760986328125
    5. 'ultat' → logprob: -9.2510986328125
    6. 'tat' → logprob: -9.3760986328125
    7. '_result' → logprob: -9.6260986328125
    8. 'er' → logprob: -10.0010986328125
    9. 'aut' → logprob: -10.1260986328125
    10. 'a' → logprob: -10.5010986328125

Token 364: ' vaut' (ID: 83004)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.115713931620121
    2. '<' → logprob: -2.2407138347625732
    3. '<s' → logprob: -7.365714073181152
    4. ' >' → logprob: -7.490714073181152
    5. ',' → logprob: -7.615714073181152
    6. ' est' → logprob: -8.115714073181152
    7. ' ' → logprob: -8.365714073181152
    8. ' <=' → logprob: -8.740714073181152
    9. 's' → logprob: -8.740714073181152
    10. '>' → logprob: -9.115714073181152

Token 365: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03500525280833244
    2. ' ' → logprob: -3.9100053310394287
    3. 's' → logprob: -4.41000509262085
    4. '-' → logprob: -6.53500509262085
    5. ' sous' → logprob: -8.410005569458008
    6. '<' → logprob: -8.660005569458008
    7. 'moins' → logprob: -9.160005569458008
    8. ' -' → logprob: -9.410005569458008
    9. '<s' → logprob: -10.535005569458008
    10. ' s' → logprob: -10.785005569458008

Token 366: '1' (ID: 16)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.25136619806289673
    2. '3' → logprob: -1.876366138458252
    3. '2' → logprob: -3.126366138458252
    4. '10' → logprob: -4.376366138458252
    5. ' ' → logprob: -5.251366138458252
    6. '1' → logprob: -5.376366138458252
    7. '4' → logprob: -6.001366138458252
    8. '7' → logprob: -9.12636661529541
    9. 's' → logprob: -9.62636661529541
    10. '0' → logprob: -10.25136661529541

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007330810185521841
    2. ' ,' → logprob: -5.132330894470215
    3. '0' → logprob: -7.007330894470215
    4. ':' → logprob: -8.507330894470215
    5. '),' → logprob: -9.507330894470215
    6. ')' → logprob: -9.507330894470215
    7. ',max' → logprob: -10.132330894470215
    8. ' ' → logprob: -10.382330894470215
    9. 'max' → logprob: -10.757330894470215
    10. ',
' → logprob: -11.507330894470215

Token 368: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13428102433681488
    2. ' ' → logprob: -2.6342809200286865
    3. 'max' → logprob: -3.7592809200286865
    4. ' max' → logprob: -4.134281158447266
    5. ' result' → logprob: -5.009281158447266
    6. 'result' → logprob: -5.134281158447266
    7. ',' → logprob: -7.384281158447266
    8. ' resultat' → logprob: -8.009281158447266
    9. ' résultat' → logprob: -8.259281158447266
    10. ' la' → logprob: -9.259281158447266

Token 369: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00319482758641243
    2. '(s' → logprob: -5.753194808959961
    3. '(max' → logprob: -11.628194808959961
    4. 's' → logprob: -12.878194808959961
    5. ' (' → logprob: -13.003194808959961
    6. '(
' → logprob: -13.503194808959961
    7. '0' → logprob: -13.503194808959961
    8. '(

' → logprob: -16.00319480895996
    9. 'max' → logprob: -16.37819480895996
    10. ' ' → logprob: -16.75319480895996

Token 370: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027023201808333397
    2. 's' → logprob: -3.9020233154296875
    3. '(' → logprob: -5.2770233154296875
    4. ' ' → logprob: -7.2770233154296875
    5. '(s' → logprob: -7.4020233154296875
    6. ')' → logprob: -10.902023315429688
    7. ' sous' → logprob: -11.777023315429688
    8. ' (' → logprob: -12.589523315429688
    9. 'sou' → logprob: -12.777023315429688
    10. '```' → logprob: -13.089523315429688

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013660696567967534
    2. ',s' → logprob: -6.751366138458252
    3. ' ,' → logprob: -9.251365661621094
    4. 's' → logprob: -9.251365661621094
    5. ' ' → logprob: -13.251365661621094
    6. ',
' → logprob: -13.751365661621094
    7. ')' → logprob: -15.126365661621094
    8. ',

' → logprob: -16.126365661621094
    9. ',)' → logprob: -16.126365661621094
    10. '```' → logprob: -16.376365661621094

Token 372: ' -' (ID: 533)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25280749797821045
    2. ' sous' → logprob: -1.5028074979782104
    3. 'sou' → logprob: -7.1278076171875
    4. ' ' → logprob: -11.0028076171875
    5. '	s' → logprob: -11.3778076171875
    6. ' ' → logprob: -11.3778076171875
    7. 'under' → logprob: -11.7528076171875
    8. ' under' → logprob: -12.1278076171875
    9. ' s' → logprob: -12.3778076171875
    10. '(s' → logprob: -12.7528076171875

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01879769004881382
    2. 's' → logprob: -4.018797874450684
    3. 'result' → logprob: -7.768797874450684
    4. ' ' → logprob: -8.643797874450684
    5. ' sous' → logprob: -11.518797874450684
    6. 'sou' → logprob: -11.893797874450684
    7. 'under' → logprob: -12.456297874450684
    8. ' s' → logprob: -12.893797874450684
    9. '   ' → logprob: -13.018797874450684
    10. ')' → logprob: -13.206297874450684

Token 374: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9650025428272784e-05
    2. ' )' → logprob: -10.750040054321289
    3. ')
' → logprob: -12.250040054321289
    4. '))' → logprob: -13.125040054321289
    5. ')`' → logprob: -13.125040054321289
    6. ')s' → logprob: -13.250040054321289
    7. ')return' → logprob: -13.750040054321289
    8. 's' → logprob: -13.750040054321289
    9. ')>' → logprob: -14.250040054321289
    10. '),' → logprob: -14.500040054321289

Token 375: ' sera' (ID: 15511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13307251036167145
    2. 'ren' → logprob: -2.3830726146698
    3. ' ren' → logprob: -3.7580726146698
    4. ' )' → logprob: -5.633072376251221
    5. 'return' → logprob: -6.258072376251221
    6. ' donnera' → logprob: -7.383072376251221
    7. ' retourne' → logprob: -8.133072853088379
    8. '()' → logprob: -8.258072853088379
    9. 'va' → logprob: -8.383072853088379
    10. '),' → logprob: -8.508072853088379

Token 376: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.376502990722656
    4. '   ' → logprob: -17.876502990722656
    5. '  ' → logprob: -18.376502990722656
    6. ',' → logprob: -19.626502990722656
    7. '>' → logprob: -19.876502990722656
    8. 'max' → logprob: -20.001502990722656
    9. '۰' → logprob: -20.126502990722656
    10. '1' → logprob: -20.126502990722656

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.251171112060547
    4. 'max' → logprob: -16.876171112060547
    5. '  ' → logprob: -18.313671112060547
    6. '1' → logprob: -18.376171112060547
    7. '   ' → logprob: -19.063671112060547
    8. '>' → logprob: -19.251171112060547
    9. '```' → logprob: -19.251171112060547
    10. '۰' → logprob: -19.501171112060547

Token 378: ' ;' (ID: 4605)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0036386766005307436
    2. '
' → logprob: -5.878638744354248
    3. 'rés' → logprob: -8.37863826751709
    4. 'res' → logprob: -8.50363826751709
    5. 'final' → logprob: -9.12863826751709
    6. '
' → logprob: -9.62863826751709
    7. ')
' → logprob: -9.75363826751709
    8. ' resultat' → logprob: -9.87863826751709
    9. 'resultado' → logprob: -11.25363826751709
    10. 'r' → logprob: -11.25363826751709

Token 379: ' si' (ID: 1784)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00033903829171322286
    2. ' resultat' → logprob: -9.25033950805664
    3. 'res' → logprob: -9.37533950805664
    4. 'rés' → logprob: -9.50033950805664
    5. 'print' → logprob: -10.25033950805664
    6. ' result' → logprob: -11.37533950805664
    7. 's' → logprob: -11.62533950805664
    8. '
' → logprob: -12.00033950805664
    9. 'final' → logprob: -12.12533950805664
    10. 'max' → logprob: -12.50033950805664

Token 380: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04944945126771927
    2. ' sous' → logprob: -3.0494494438171387
    3. 'A' → logprob: -8.049449920654297
    4. 'under' → logprob: -9.049449920654297
    5. '0' → logprob: -9.174449920654297
    6. ' ' → logprob: -9.299449920654297
    7. 'sou' → logprob: -9.799449920654297
    8. 'sub' → logprob: -10.299449920654297
    9. 'max' → logprob: -10.299449920654297
    10. ' ' → logprob: -11.049449920654297

Token 381: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0008130819769576192
    2. 'result' → logprob: -7.125813007354736
    3. 'max' → logprob: -12.250813484191895
    4. ' resultat' → logprob: -13.625813484191895
    5. 's' → logprob: -13.875813484191895
    6. '_RESULT' → logprob: -15.250813484191895
    7. ' ' → logprob: -15.625813484191895
    8. '0' → logprob: -15.875813484191895
    9. 'Result' → logprob: -15.875813484191895
    10. '   ' → logprob: -16.125812530517578

Token 382: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.09137360006570816
    2. 'result' → logprob: -2.7163736820220947
    3. '_result' → logprob: -4.091373443603516
    4. 'ultat' → logprob: -5.841373443603516
    5. ' resultat' → logprob: -7.466373443603516
    6. 'a' → logprob: -8.466373443603516
    7. 's' → logprob: -8.841373443603516
    8. 'atat' → logprob: -9.591373443603516
    9. 'aut' → logprob: -9.716373443603516
    10. 'atut' → logprob: -10.091373443603516

Token 383: ' vaut' (ID: 83004)
  Prédit: ' vaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vaut' → logprob: -0.033150866627693176
    2. 'val' → logprob: -4.033150672912598
    3. '=' → logprob: -4.783150672912598
    4. ' val' → logprob: -5.783150672912598
    5. ' est' → logprob: -6.283150672912598
    6. ' =' → logprob: -8.033150672912598
    7. 'vale' → logprob: -8.158150672912598
    8. ' ' → logprob: -8.533150672912598
    9. '>' → logprob: -8.533150672912598
    10. 'v' → logprob: -9.158150672912598

Token 384: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.1155710220336914
    2. '5' → logprob: -1.3655710220336914
    3. '2' → logprob: -1.6155710220336914
    4. ' ' → logprob: -1.9905710220336914
    5. '7' → logprob: -2.8655710220336914
    6. '10' → logprob: -4.365571022033691
    7. '3' → logprob: -4.490571022033691
    8. '1' → logprob: -8.115571022033691
    9. '8' → logprob: -8.865571022033691
    10. '0' → logprob: -8.990571022033691

Token 385: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1478829383850098
    2. '5' → logprob: -1.2728829383850098
    3. '4' → logprob: -1.2728829383850098
    4. '7' → logprob: -3.0228829383850098
    5. '3' → logprob: -3.3978829383850098
    6. '10' → logprob: -3.3978829383850098
    7. ' ' → logprob: -5.14788293838501
    8. '1' → logprob: -7.02288293838501
    9. '42' → logprob: -8.397882461547852
    10. '0' → logprob: -9.522882461547852

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022774117533117533
    2. ' ,' → logprob: -6.627277374267578
    3. ')' → logprob: -7.252277374267578
    4. '0' → logprob: -9.002277374267578
    5. 'max' → logprob: -10.127277374267578
    6. '),' → logprob: -10.252277374267578
    7. ',)' → logprob: -11.502277374267578
    8. ',max' → logprob: -11.627277374267578
    9. '4' → logprob: -11.877277374267578
    10. ' ' → logprob: -12.752277374267578

Token 387: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2015455812215805
    2. ' max' → logprob: -1.7015455961227417
    3. '4' → logprob: -8.951545715332031
    4. ' ' → logprob: -13.701545715332031
    5. ' ' → logprob: -14.576545715332031
    6. '0' → logprob: -15.451545715332031
    7. '	max' → logprob: -15.826545715332031
    8. 'result' → logprob: -16.07654571533203
    9. ' maxi' → logprob: -16.20154571533203
    10. '(max' → logprob: -16.57654571533203

Token 388: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.03521392197581e-05
    2. '(
' → logprob: -11.000030517578125
    3. ' (' → logprob: -11.250030517578125
    4. '0' → logprob: -15.625030517578125
    5. '(

' → logprob: -15.875030517578125
    6. '(max' → logprob: -16.125030517578125
    7. ' ' → logprob: -16.750030517578125
    8. '<|end|>' → logprob: -16.750030517578125
    9. '('' → logprob: -17.625030517578125
    10. '(
' → logprob: -17.875030517578125

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015465259784832597
    2. ' ' → logprob: -7.001546382904053
    3. '(' → logprob: -7.626546382904053
    4. '4' → logprob: -8.876546859741211
    5. ')' → logprob: -13.126546859741211
    6. ',' → logprob: -13.501546859741211
    7. 's' → logprob: -13.501546859741211
    8. ' (' → logprob: -14.001546859741211
    9. '(
' → logprob: -15.001546859741211
    10. '```' → logprob: -15.189046859741211

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010604646377032623
    2. ' ,' → logprob: -9.625105857849121
    3. '4' → logprob: -10.375105857849121
    4. ',
' → logprob: -13.125105857849121
    5. ',max' → logprob: -13.375105857849121
    6. 's' → logprob: -13.500105857849121
    7. ')' → logprob: -13.750105857849121
    8. ' ' → logprob: -14.250105857849121
    9. '0' → logprob: -14.375105857849121
    10. 'max' → logprob: -14.750105857849121

Token 391: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0620235949754715
    2. ' ' → logprob: -2.812023639678955
    3. 's' → logprob: -10.312023162841797
    4. '  ' → logprob: -11.687023162841797
    5. ' ' → logprob: -12.437023162841797
    6. ' sous' → logprob: -12.937023162841797
    7. ' s' → logprob: -13.062023162841797
    8. '   ' → logprob: -13.874523162841797
    9. ' four' → logprob: -13.937023162841797
    10. ' quatre' → logprob: -14.562023162841797

Token 392: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. 's' → logprob: -15.12617015838623
    4. '  ' → logprob: -16.376171112060547
    5. ' ' → logprob: -17.001171112060547
    6. '４' → logprob: -18.001171112060547
    7. '   ' → logprob: -18.251171112060547
    8. ' s' → logprob: -18.376171112060547
    9. '' → logprob: -18.563671112060547
    10. ' four' → logprob: -19.188671112060547

Token 393: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023727134976070374
    2. ' )' → logprob: -9.000237464904785
    3. ')
' → logprob: -10.375237464904785
    4. '))' → logprob: -10.375237464904785
    5. 'max' → logprob: -11.250237464904785
    6. ')`' → logprob: -12.000237464904785
    7. '0' → logprob: -12.375237464904785
    8. ',' → logprob: -12.750237464904785
    9. '(' → logprob: -13.000237464904785
    10. '#' → logprob: -13.125237464904785

Token 394: ' sera' (ID: 15511)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003246183041483164
    2. ' sera' → logprob: -9.500324249267578
    3. ' )' → logprob: -9.750324249267578
    4. ')
' → logprob: -10.250324249267578
    5. 'return' → logprob: -10.375324249267578
    6. '()' → logprob: -10.625324249267578
    7. 'max' → logprob: -10.875324249267578
    8. '))' → logprob: -11.000324249267578
    9. ')return' → logprob: -11.750324249267578
    10. '())' → logprob: -12.000324249267578

Token 395: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014165864326059818
    2. ' ' → logprob: -4.264165878295898
    3. 's' → logprob: -13.639165878295898
    4. ' ' → logprob: -14.264165878295898
    5. '0' → logprob: -16.2641658782959
    6. '' → logprob: -16.6391658782959
    7. '  ' → logprob: -16.7016658782959
    8. '   ' → logprob: -16.8891658782959
    9. ' s' → logprob: -17.1391658782959
    10. '
' → logprob: -17.8266658782959

Token 396: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. 's' → logprob: -14.875380516052246
    4. ' ' → logprob: -17.37537956237793
    5. 'max' → logprob: -17.50037956237793
    6. '0' → logprob: -17.50037956237793
    7. '' → logprob: -17.87537956237793
    8. '４' → logprob: -18.62537956237793
    9. '  ' → logprob: -18.68787956237793
    10. '   ' → logprob: -18.75037956237793

Token 397: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0004883344518020749
    2. 'rés' → logprob: -8.50048828125
    3. 'res' → logprob: -9.12548828125
    4. '
' → logprob: -9.25048828125
    5. ' resultat' → logprob: -10.75048828125
    6. 'print' → logprob: -11.25048828125
    7. 'final' → logprob: -11.75048828125
    8. 's' → logprob: -11.87548828125
    9. ')
' → logprob: -12.25048828125
    10. 'resultado' → logprob: -12.50048828125

Token 398: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00020568605395965278
    2. 'res' → logprob: -9.000205993652344
    3. 'rés' → logprob: -9.750205993652344
    4. 'final' → logprob: -11.500205993652344
    5. ' resultat' → logprob: -12.375205993652344
    6. 'print' → logprob: -13.125205993652344
    7. 'r' → logprob: -13.500205993652344
    8. 's' → logprob: -13.875205993652344
    9. 'resultado' → logprob: -14.125205993652344
    10. '```' → logprob: -14.125205993652344

Token 399: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -7.052377623040229e-05
    2. 'result' → logprob: -10.250070571899414
    3. ' =' → logprob: -11.125070571899414
    4. '=' → logprob: -11.250070571899414
    5. '_result' → logprob: -13.000070571899414
    6. '_at' → logprob: -13.125070571899414
    7. '=result' → logprob: -13.500070571899414
    8. 'ат' → logprob: -14.875070571899414
    9. 'ultat' → logprob: -15.375070571899414
    10. ' at' → logprob: -15.625070571899414

Token 400: '_final' (ID: 46468)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687485456466675
    2. '=' → logprob: -1.1368749141693115
    3. '=max' → logprob: -13.26187515258789
    4. ' ' → logprob: -13.51187515258789
    5. 'max' → logprob: -15.51187515258789
    6. ' =
' → logprob: -15.88687515258789
    7. ')' → logprob: -16.13687515258789
    8. ' ' → logprob: -16.13687515258789
    9. 's' → logprob: -16.26187515258789
    10. ',' → logprob: -16.26187515258789

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759416818618774
    2. '=' → logprob: -0.8259416818618774
    3. '=max' → logprob: -13.825942039489746
    4. ' ' → logprob: -14.575942039489746
    5. ')' → logprob: -15.575942039489746
    6. 's' → logprob: -15.825942039489746
    7. ' =
' → logprob: -15.950942039489746
    8. 'max' → logprob: -16.07594108581543
    9. ' ' → logprob: -16.20094108581543
    10. ',' → logprob: -16.45094108581543

Token 402: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07888978719711304
    2. ' max' → logprob: -2.578889846801758
    3. '(max' → logprob: -19.203889846801758
    4. '	max' → logprob: -19.703889846801758
    5. ' ' → logprob: -19.953889846801758
    6. '0' → logprob: -20.453889846801758
    7. ' ' → logprob: -21.078889846801758
    8. '=max' → logprob: -21.453889846801758
    9. 'ma' → logprob: -21.828889846801758
    10. ',max' → logprob: -21.953889846801758

Token 403: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -11.875007629394531
    3. '(
' → logprob: -15.500007629394531
    4. '0' → logprob: -15.750007629394531
    5. '(result' → logprob: -16.37500762939453
    6. 'result' → logprob: -16.62500762939453
    7. '(max' → logprob: -17.12500762939453
    8. 'max' → logprob: -19.00000762939453
    9. ',' → logprob: -19.25000762939453
    10. '```' → logprob: -19.75000762939453

Token 404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '(' → logprob: -16.750001907348633
    4. ')' → logprob: -19.750001907348633
    5. '  ' → logprob: -20.625001907348633
    6. 's' → logprob: -20.625001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '۰' → logprob: -21.250001907348633
    9. '```' → logprob: -21.375001907348633
    10. 'result' → logprob: -21.500001907348633

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010735770774772391
    2. ' ,' → logprob: -9.375107765197754
    3. ',s' → logprob: -10.750107765197754
    4. 's' → logprob: -14.375107765197754
    5. ',
' → logprob: -14.625107765197754
    6. ' ' → logprob: -18.750106811523438
    7. ',

' → logprob: -19.875106811523438
    8. ',
' → logprob: -20.125106811523438
    9. ')' → logprob: -21.000106811523438
    10. ',result' → logprob: -21.250106811523438

Token 406: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08915048092603683
    2. ' sous' → logprob: -2.4641504287719727
    3. ' s' → logprob: -8.964150428771973
    4. 'sou' → logprob: -9.714150428771973
    5. '	s' → logprob: -11.714150428771973
    6. ' ' → logprob: -11.839150428771973
    7. ' ' → logprob: -12.964150428771973
    8. 'Sous' → logprob: -13.339150428771973
    9. '   ' → logprob: -13.839150428771973
    10. '(s' → logprob: -14.839150428771973

Token 407: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.318681188422488e-05
    2. 'result' → logprob: -11.62501335144043
    3. '_res' → logprob: -13.00001335144043
    4. '_' → logprob: -14.25001335144043
    5. ' _' → logprob: -14.50001335144043
    6. '_r' → logprob: -15.00001335144043
    7. ' resultat' → logprob: -16.00001335144043
    8. '_s' → logprob: -16.87501335144043
    9. 's' → logprob: -16.87501335144043
    10. '_RESULT' → logprob: -17.00001335144043

Token 408: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.0280383548888494e-06
    2. 'ат' → logprob: -14.625000953674316
    3. 'a' → logprob: -15.250000953674316
    4. 'tat' → logprob: -16.250001907348633
    5. ' at' → logprob: -16.875001907348633
    6. 'atu' → logprob: -17.375001907348633
    7. 'atat' → logprob: -17.375001907348633
    8. 'atut' → logprob: -18.000001907348633
    9. 't' → logprob: -18.125001907348633
    10. '_at' → logprob: -18.500001907348633

Token 409: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -13.750001907348633
    4. '))' → logprob: -19.250001907348633
    5. ')

' → logprob: -19.625001907348633
    6. '}' → logprob: -19.750001907348633
    7. ')#' → logprob: -19.875001907348633
    8. ')`' → logprob: -19.875001907348633
    9. ')
' → logprob: -20.875001907348633
    10. '),' → logprob: -21.000001907348633

Token 410: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.75
    3. 'prin' → logprob: -17.75
    4. 'result' → logprob: -17.875
    5. '#' → logprob: -19.625
    6. 'pr' → logprob: -20.0
    7. '#print' → logprob: -20.125
    8. '```' → logprob: -20.875
    9. 'pri' → logprob: -22.5
    10. '(print' → logprob: -22.875

Token 411: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'prin' → logprob: -17.75
    3. ' print' → logprob: -19.375
    4. 'pr' → logprob: -19.75
    5. '#' → logprob: -20.375
    6. '#print' → logprob: -21.125
    7. '```' → logprob: -21.125
    8. 'result' → logprob: -21.625
    9. 'pri' → logprob: -23.0
    10. 'p' → logprob: -23.75

Token 412: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.170270353322849e-05
    2. ' print' → logprob: -9.750061988830566
    3. 'p' → logprob: -13.625061988830566
    4. 'prin' → logprob: -13.875061988830566
    5. '#' → logprob: -14.375061988830566
    6. 'pr' → logprob: -14.500061988830566
    7. '#print' → logprob: -17.00006103515625
    8. 'r' → logprob: -18.25006103515625
    9. 'pri' → logprob: -18.50006103515625
    10. 'result' → logprob: -18.62506103515625

Token 413: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.7610454708337784e-05
    2. ' print' → logprob: -10.500027656555176
    3. 'prin' → logprob: -20.25002670288086
    4. 'pr' → logprob: -21.62502670288086
    5. '#print' → logprob: -23.87502670288086
    6. '```' → logprob: -24.37502670288086
    7. '`' → logprob: -24.50002670288086
    8. ' prin' → logprob: -25.25002670288086
    9. '(print' → logprob: -25.37502670288086
    10. 'Print' → logprob: -25.62502670288086

Token 414: ' affiche' (ID: 127479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017746223136782646
    2. '(result' → logprob: -4.142746448516846
    3. '()' → logprob: -6.392746448516846
    4. '(
' → logprob: -11.392745971679688
    5. '('' → logprob: -11.767745971679688
    6. ' (' → logprob: -12.017745971679688
    7. '(print' → logprob: -12.767745971679688
    8. '("' → logprob: -13.267745971679688
    9. '(resultado' → logprob: -13.267745971679688
    10. '(

' → logprob: -13.767745971679688

Token 415: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0012078535510227084
    2. 'result' → logprob: -7.0012078285217285
    3. '(' → logprob: -8.126208305358887
    4. '()' → logprob: -15.001208305358887
    5. ' (' → logprob: -16.12620735168457
    6. '(resultado' → logprob: -16.75120735168457
    7. '(res' → logprob: -17.00120735168457
    8. '(
' → logprob: -17.00120735168457
    9. '=result' → logprob: -17.50120735168457
    10. ' result' → logprob: -17.75120735168457

Token 416: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011051355861127377
    2. '(result' → logprob: -4.511051177978516
    3. '(' → logprob: -12.886051177978516
    4. ' result' → logprob: -13.886051177978516
    5. ' resultat' → logprob: -17.761051177978516
    6. 'resultado' → logprob: -17.761051177978516
    7. 'print' → logprob: -17.886051177978516
    8. ' résultat' → logprob: -18.011051177978516
    9. 'rés' → logprob: -18.011051177978516
    10. '("' → logprob: -18.761051177978516

Token 417: ' final' (ID: 1721)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.014090980403125286
    2. '(' → logprob: -4.5140910148620605
    3. 'result' → logprob: -6.5140910148620605
    4. '()' → logprob: -6.5140910148620605
    5. '(
' → logprob: -9.889090538024902
    6. ' (' → logprob: -12.264090538024902
    7. 'print' → logprob: -12.389090538024902
    8. '(resultado' → logprob: -12.889090538024902
    9. '()
' → logprob: -13.139090538024902
    10. ',result' → logprob: -13.514090538024902

Token 418: ' à' (ID: 1221)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.13272441923618317
    2. 'result' → logprob: -2.3827245235443115
    3. 'print' → logprob: -3.8827245235443115
    4. '(' → logprob: -4.757724285125732
    5. '()' → logprob: -6.007724285125732
    6. '(print' → logprob: -8.63272476196289
    7. '(
' → logprob: -8.88272476196289
    8. '()
' → logprob: -10.75772476196289
    9. ')' → logprob: -12.38272476196289
    10. ',result' → logprob: -12.88272476196289

Token 419: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00461560720577836
    2. 'la' → logprob: -6.004615783691406
    3. ' l' → logprob: -6.254615783691406
    4. 'à' → logprob: -9.254615783691406
    5. '#' → logprob: -10.754615783691406
    6. ' la' → logprob: -11.129615783691406
    7. 'a' → logprob: -11.129615783691406
    8. 'é' → logprob: -11.129615783691406
    9. ' ' → logprob: -11.629615783691406
    10. 'lac' → logprob: -11.879615783691406

Token 420: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.012836291454732418
    2. '’écran' → logprob: -5.012836456298828
    3. 'é' → logprob: -5.762836456298828
    4. 'a' → logprob: -6.637836456298828
    5. 'cran' → logprob: -7.512836456298828
    6. 'e' → logprob: -7.887836456298828
    7. ''utilisateur' → logprob: -8.137836456298828
    8. 'console' → logprob: -9.137836456298828
    9. ' écran' → logprob: -9.387836456298828
    10. '#' → logprob: -9.762836456298828

Token 421: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17079368233680725
    2. 'result' → logprob: -1.9207936525344849
    3. '()
' → logprob: -5.420793533325195
    4. '(result' → logprob: -5.545793533325195
    5. '()' → logprob: -6.420793533325195
    6. '(' → logprob: -8.170793533325195
    7. '(
' → logprob: -8.545793533325195
    8. '(print' → logprob: -9.670793533325195
    9. '
' → logprob: -12.170793533325195
    10. '```' → logprob: -12.420793533325195

Token 422: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.039888691157102585
    2. ' l' → logprob: -3.289888620376587
    3. 'util' → logprob: -7.039888858795166
    4. ' utilisateur' → logprob: -8.039888381958008
    5. 'result' → logprob: -8.164888381958008
    6. 'print' → logprob: -8.789888381958008
    7. 'user' → logprob: -10.039888381958008
    8. ''utilisateur' → logprob: -10.289888381958008
    9. '_' → logprob: -10.789888381958008
    10. 'len' → logprob: -10.914888381958008

Token 423: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.002136697992682457
    2. 'a' → logprob: -6.502136707305908
    3. '’utilisateur' → logprob: -7.752136707305908
    4. 'util' → logprob: -9.00213623046875
    5. 'e' → logprob: -10.00213623046875
    6. ' utilisateur' → logprob: -11.75213623046875
    7. '_util' → logprob: -12.12713623046875
    8. '#' → logprob: -12.37713623046875
    9. ''écran' → logprob: -12.37713623046875
    10. ''util' → logprob: -12.87713623046875

Token 424: '.
' (ID: 558)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2423381507396698
    2. 'result' → logprob: -2.117338180541992
    3. 'print' → logprob: -2.992338180541992
    4. '(' → logprob: -3.242338180541992
    5. '()' → logprob: -5.617338180541992
    6. '(
' → logprob: -6.492338180541992
    7. '(print' → logprob: -7.992338180541992
    8. '()
' → logprob: -9.742338180541992
    9. ',result' → logprob: -10.867338180541992
    10. ')' → logprob: -11.367338180541992

Token 425: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '```' → logprob: -21.75
    4. '
' → logprob: -25.0
    5. '(print' → logprob: -25.25
    6. 'Print' → logprob: -25.75
    7. '.print' → logprob: -26.625
    8. 'pr' → logprob: -27.0
    9. '	print' → logprob: -27.25
    10. 'result' → logprob: -27.25

Token 426: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.10021670162677765
    2. '(' → logprob: -2.3502166271209717
    3. 'result' → logprob: -12.97521686553955
    4. ' (' → logprob: -13.10021686553955
    5. '(resultado' → logprob: -13.10021686553955
    6. '()' → logprob: -13.22521686553955
    7. '(final' → logprob: -14.72521686553955
    8. '(res' → logprob: -14.72521686553955
    9. '(
' → logprob: -14.85021686553955
    10. '('' → logprob: -15.35021686553955

Token 427: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0012945238268002868
    2. '_at' → logprob: -7.1262946128845215
    3. '_final' → logprob: -8.376294136047363
    4. 'al' → logprob: -8.626294136047363
    5. 'a' → logprob: -9.751294136047363
    6. 't' → logprob: -11.501294136047363
    7. '_' → logprob: -12.501294136047363
    8. ')_' → logprob: -12.626294136047363
    9. ')' → logprob: -14.001294136047363
    10. ' at' → logprob: -14.001294136047363

Token 428: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.0012876172550022602
    2. ')_' → logprob: -7.376287460327148
    3. 'al' → logprob: -7.626287460327148
    4. ')' → logprob: -9.001287460327148
    5. 'final' → logprob: -10.876287460327148
    6. 'a' → logprob: -11.876287460327148
    7. '_' → logprob: -12.001287460327148
    8. '_f' → logprob: -12.376287460327148
    9. '_fin' → logprob: -12.626287460327148
    10. ' _' → logprob: -13.126287460327148

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')`' → logprob: -17.250001907348633
    4. ')
' → logprob: -17.375001907348633
    5. '))' → logprob: -17.500001907348633
    6. '()' → logprob: -19.250001907348633
    7. '())' → logprob: -20.250001907348633
    8. '(' → logprob: -20.375001907348633
    9. ')#' → logprob: -20.875001907348633
    10. '`)' → logprob: -20.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 427
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 131
Tokens correctement prédits (top 10): 278
Précision stricte (1ère position): 30.68%
Précision adaptée (1ère position): 30.68%
Précision (top 10): 65.11%
================================================================================
