================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

fetch = sys.stdin.readline
_input = lambda: fetch().strip('\n \t')

def eureka():
    N=int(_input())
    *Weights,=map(int,_input().split())
    Accum=[None]*(N+1)
    Accum[0]=0
    idx=1
    for w in Weights:
        Accum[idx]=Accum[idx-1]+w
        idx+=1

    result = float('inf')
    i=1
    while i<=N:
        x = Accum[i]
        y = Accum[N] - x
        gap = abs(x-y)
        if gap<result: result=gap
        i+=1

    print(result)

if __name__=='__main__': eureka()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'fetch' (ID: 19843)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1319556087255478
    2. '(' → logprob: -2.256955623626709
    3. '.' → logprob: -4.881955623626709
    4. 'er' → logprob: -5.506955623626709
    5. ' (' → logprob: -5.756955623626709
    6. '_fetch' → logprob: -6.881955623626709
    7. 'r' → logprob: -7.381955623626709
    8. '_url' → logprob: -7.756955623626709
    9. '_data' → logprob: -7.881955623626709
    10. ')' → logprob: -8.00695514678955

Token 5: ' sys' (ID: 12228)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1357405185699463
    2. 'requests' → logprob: -1.5107405185699463
    3. 'sys' → logprob: -1.6357405185699463
    4. 'fetch' → logprob: -1.6357405185699463
    5. ' sys' → logprob: -4.135740280151367
    6. ' requests' → logprob: -4.260740280151367
    7. ' __' → logprob: -4.760740280151367
    8. 'lambda' → logprob: -4.885740280151367
    9. 'urllib' → logprob: -5.260740280151367
    10. ' fetch' → logprob: -5.760740280151367

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00030841029365547
    2. ' .' → logprob: -9.2503080368042
    3. '.fetch' → logprob: -10.0003080368042
    4. '.path' → logprob: -10.5003080368042
    5. '.argv' → logprob: -10.7503080368042
    6. '.get' → logprob: -10.7503080368042
    7. '.modules' → logprob: -11.0003080368042
    8. '.stdout' → logprob: -11.5003080368042
    9. '.stdin' → logprob: -11.5003080368042
    10. '.import' → logprob: -11.6253080368042

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008263615891337395
    2. '.readline' → logprob: -5.25826358795166
    3. '.read' → logprob: -6.13326358795166
    4. '[' → logprob: -7.38326358795166
    5. ' .' → logprob: -9.88326358795166
    6. '[:]' → logprob: -10.00826358795166
    7. '```' → logprob: -10.75826358795166
    8. ''.' → logprob: -11.38326358795166
    9. '.get' → logprob: -11.75826358795166
    10. '<|end|>' → logprob: -11.75826358795166

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47501835227012634
    2. '(' → logprob: -0.9750183820724487
    3. '().' → logprob: -7.350018501281738
    4. ')' → logprob: -9.350018501281738
    5. '(
' → logprob: -9.600018501281738
    6. '.' → logprob: -10.100018501281738
    7. '```' → logprob: -10.850018501281738
    8. '()
' → logprob: -11.225018501281738
    9. '())' → logprob: -11.350018501281738
    10. '();' → logprob: -11.725018501281738

Token 9: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014894628897309303
    2. '().' → logprob: -4.264894485473633
    3. '(' → logprob: -7.514894485473633
    4. '()
' → logprob: -9.014894485473633
    5. '()

' → logprob: -10.639894485473633
    6. ')' → logprob: -11.764894485473633
    7. ' ()' → logprob: -12.139894485473633
    8. '()\' → logprob: -12.139894485473633
    9. '(
' → logprob: -12.389894485473633
    10. '.' → logprob: -12.889894485473633

Token 10: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07323575764894485
    2. '(' → logprob: -3.0732357501983643
    3. ' =' → logprob: -4.198235988616943
    4. ')' → logprob: -5.573235988616943
    5. '=' → logprob: -5.698235988616943
    6. '_data' → logprob: -8.198235511779785
    7. 'data' → logprob: -8.573235511779785
    8. '_line' → logprob: -8.573235511779785
    9. '('' → logprob: -8.698235511779785
    10. 's' → logprob: -8.948235511779785

Token 11: ' lambda' (ID: 27871)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.028280779719352722
    2. '()' → logprob: -3.653280735015869
    3. ' fetch' → logprob: -6.278280735015869
    4. '(fetch' → logprob: -9.903281211853027
    5. 'input' → logprob: -10.903281211853027
    6. '_fetch' → logprob: -11.403281211853027
    7. ' ()' → logprob: -12.278281211853027
    8. '().' → logprob: -12.903281211853027
    9. '("")' → logprob: -13.028281211853027
    10. '[]' → logprob: -13.278281211853027

Token 12: ':' (ID: 25)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6352710723876953
    2. ':' → logprob: -0.7602710723876953
    3. '():' → logprob: -6.635271072387695
    4. ' ():' → logprob: -7.885271072387695
    5. ' ' → logprob: -8.010271072387695
    6. ' ()' → logprob: -9.260271072387695
    7. '()' → logprob: -9.510271072387695
    8. ':str' → logprob: -9.885271072387695
    9. '  ' → logprob: -10.135271072387695
    10. ':void' → logprob: -10.260271072387695

Token 13: ' fetch' (ID: 12011)
  Prédit: 'fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fetch' → logprob: -0.3241904079914093
    2. ' fetch' → logprob: -1.324190378189087
    3. 'sys' → logprob: -5.199190616607666
    4. ' sys' → logprob: -5.449190616607666
    5. 'input' → logprob: -7.449190616607666
    6. ' input' → logprob: -8.074190139770508
    7. 'str' → logprob: -9.574190139770508
    8. 'int' → logprob: -10.449190139770508
    9. 'f' → logprob: -10.699190139770508
    10. ' str' → logprob: -12.449190139770508

Token 14: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010719887213781476
    2. '(' → logprob: -7.001071929931641
    3. '().' → logprob: -9.12607192993164
    4. '()
' → logprob: -10.37607192993164
    5. '()\' → logprob: -11.50107192993164
    6. ' ()' → logprob: -12.50107192993164
    7. '()

' → logprob: -12.62607192993164
    8. '(
' → logprob: -13.50107192993164
    9. '(\' → logprob: -14.12607192993164
    10. '();' → logprob: -15.37607192993164

Token 15: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006717743817716837
    2. 'rstrip' → logprob: -5.006717681884766
    3. 'str' → logprob: -13.006717681884766
    4. ' strip' → logprob: -16.006717681884766
    5. 'split' → logprob: -16.756717681884766
    6. 'replace' → logprob: -18.256717681884766
    7. '```' → logprob: -18.506717681884766
    8. 'startswith' → logprob: -18.756717681884766
    9. '(strip' → logprob: -18.881717681884766
    10. '_strip' → logprob: -18.881717681884766

Token 16: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2535592317581177
    2. '(' → logprob: -1.5035592317581177
    3. ')' → logprob: -7.003559112548828
    4. '(
' → logprob: -7.628559112548828
    5. '()
' → logprob: -9.503559112548828
    6. '<|end|>' → logprob: -9.878559112548828
    7. '(

' → logprob: -10.878559112548828
    8. '#' → logprob: -11.253559112548828
    9. '()

' → logprob: -11.628559112548828
    10. '())' → logprob: -11.878559112548828

Token 17: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011514253914356232
    2. '\n' → logprob: -4.511514186859131
    3. ')' → logprob: -7.886514186859131
    4. '\' → logprob: -10.136514663696289
    5. 'r' → logprob: -11.261514663696289
    6. '')' → logprob: -11.386514663696289
    7. ' \' → logprob: -11.386514663696289
    8. ')\' → logprob: -12.136514663696289
    9. '
' → logprob: -12.511514663696289
    10. ')n' → logprob: -13.636514663696289

Token 18: ' \' (ID: 2381)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0020718714222311974
    2. ')' → logprob: -6.252071857452393
    3. ''' → logprob: -9.12707233428955
    4. '")' → logprob: -11.12707233428955
    5. '')
' → logprob: -11.75207233428955
    6. ''))' → logprob: -12.00207233428955
    7. '()' → logprob: -13.00207233428955
    8. '"' → logprob: -14.12707233428955
    9. ' ')' → logprob: -14.12707233428955
    10. '')"' → logprob: -14.25207233428955

Token 19: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6872682571411133
    2. ')' → logprob: -1.6872682571411133
    3. '')' → logprob: -1.8122682571411133
    4. 'r' → logprob: -2.1872682571411133
    5. 'n' → logprob: -3.6872682571411133
    6. '\r' → logprob: -5.687268257141113
    7. ''' → logprob: -6.062268257141113
    8. '\t' → logprob: -6.187268257141113
    9. ''))' → logprob: -6.562268257141113
    10. '''' → logprob: -7.437268257141113

Token 20: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10282612591981888
    2. ')' → logprob: -2.3528261184692383
    3. '()' → logprob: -6.602826118469238
    4. ' ')' → logprob: -7.852826118469238
    5. '\r' → logprob: -8.102826118469238
    6. ''' → logprob: -8.602826118469238
    7. ''))' → logprob: -9.227826118469238
    8. '")' → logprob: -9.727826118469238
    9. '('' → logprob: -9.977826118469238
    10. '')
' → logprob: -9.977826118469238

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12374649941921234
    2. '#' → logprob: -2.998746395111084
    3. '(' → logprob: -3.873746395111084
    4. 'd' → logprob: -4.373746395111084
    5. ')' → logprob: -4.998746395111084
    6. '\n' → logprob: -4.998746395111084
    7. 'for' → logprob: -6.123746395111084
    8. '()' → logprob: -6.123746395111084
    9. '
' → logprob: -6.248746395111084
    10. 'a' → logprob: -6.373746395111084

Token 22: ' e' (ID: 319)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07287906855344772
    2. ' my' → logprob: -3.8228790760040283
    3. ' process' → logprob: -4.447878837585449
    4. ' read' → logprob: -4.572878837585449
    5. ' parse' → logprob: -5.572878837585449
    6. ' _' → logprob: -5.822878837585449
    7. ' input' → logprob: -5.947878837585449
    8. ' foo' → logprob: -5.947878837585449
    9. ' fetch' → logprob: -6.322878837585449
    10. ' example' → logprob: -6.322878837585449

Token 23: 'ureka' (ID: 86120)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.097361445426941
    2. 'm' → logprob: -1.722361445426941
    3. 'val' → logprob: -1.972361445426941
    4. 'qual' → logprob: -1.972361445426941
    5. 'x' → logprob: -2.5973615646362305
    6. 'xp' → logprob: -2.9723615646362305
    7. 'quals' → logprob: -3.4723615646362305
    8. 'ns' → logprob: -4.7223615646362305
    9. 'xit' → logprob: -4.9723615646362305
    10. 'psilon' → logprob: -4.9723615646362305

Token 24: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.009522671811282635
    2. '()' → logprob: -5.134522438049316
    3. '(' → logprob: -6.384522438049316
    4. '_sum' → logprob: -7.884522438049316
    5. '(n' → logprob: -8.259522438049316
    6. '():
' → logprob: -8.759522438049316
    7. '_trip' → logprob: -8.884522438049316
    8. '_search' → logprob: -9.134522438049316
    9. '_' → logprob: -9.259522438049316
    10. ' ():' → logprob: -9.384522438049316

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02524621970951557
    2. '    ' → logprob: -4.1502461433410645
    3. ' ' → logprob: -5.6502461433410645
    4. ' pass' → logprob: -6.7752461433410645
    5. '    
' → logprob: -7.4002461433410645
    6. '<|end|>' → logprob: -7.4002461433410645
    7. 'n' → logprob: -7.5252461433410645
    8. '	pass' → logprob: -8.150246620178223
    9. '  ' → logprob: -8.275246620178223
    10. 'pass' → logprob: -8.275246620178223

Token 26: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4661402106285095
    2. ' n' → logprob: -1.3411402702331543
    3. '   ' → logprob: -2.9661402702331543
    4. 'pass' → logprob: -4.091140270233154
    5. ' pass' → logprob: -4.841140270233154
    6. 's' → logprob: -4.841140270233154
    7. 'for' → logprob: -5.341140270233154
    8. ' for' → logprob: -5.966140270233154
    9. 'a' → logprob: -6.216140270233154
    10. ' s' → logprob: -6.591140270233154

Token 27: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03113904409110546
    2. '=' → logprob: -3.5311391353607178
    3. '=int' → logprob: -7.031138896942139
    4. ',' → logprob: -7.656138896942139
    5. ' ' → logprob: -10.781139373779297
    6. '=input' → logprob: -12.781139373779297
    7. ' ,' → logprob: -12.906139373779297
    8. '   ' → logprob: -13.781139373779297
    9. '  ' → logprob: -14.156139373779297
    10. '.' → logprob: -14.281139373779297

Token 28: '(_' (ID: 4963)
  Prédit: '(fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fetch' → logprob: -0.01693280041217804
    2. '(input' → logprob: -4.516932964324951
    3. '(' → logprob: -5.391932964324951
    4. '(_' → logprob: -7.016932964324951
    5. 'fetch' → logprob: -7.891932964324951
    6. '_fetch' → logprob: -10.766932487487793
    7. 'input' → logprob: -11.641932487487793
    8. ' fetch' → logprob: -11.891932487487793
    9. ' (' → logprob: -13.016932487487793
    10. ')' → logprob: -14.016932487487793

Token 29: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00032390307751484215
    2. '_input' → logprob: -8.250324249267578
    3. ' input' → logprob: -10.375324249267578
    4. '(input' → logprob: -11.000324249267578
    5. 'put' → logprob: -11.250324249267578
    6. '()' → logprob: -14.250324249267578
    7. '())' → logprob: -14.375324249267578
    8. 'fetch' → logprob: -15.750324249267578
    9. '```' → logprob: -16.375324249267578
    10. 'Input' → logprob: -17.000324249267578

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0066779558546841145
    2. '()' → logprob: -5.131678104400635
    3. ')' → logprob: -7.256678104400635
    4. '())
' → logprob: -10.506677627563477
    5. ' ())' → logprob: -11.756677627563477
    6. '(' → logprob: -13.131677627563477
    7. '()
' → logprob: -13.381677627563477
    8. '())

' → logprob: -13.506677627563477
    9. '()))' → logprob: -13.506677627563477
    10. '();)' → logprob: -13.631677627563477

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18369774520397186
    2. ')' → logprob: -2.5586977005004883
    3. ' ' → logprob: -3.3086977005004883
    4. '<|end|>' → logprob: -3.8086977005004883
    5. '    ' → logprob: -4.433697700500488
    6. '
' → logprob: -5.933697700500488
    7. '\n' → logprob: -6.058697700500488
    8. ' 
' → logprob: -6.058697700500488
    9. '    
' → logprob: -6.183697700500488
    10. '  ' → logprob: -6.558697700500488

Token 32: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42622479796409607
    2. 's' → logprob: -3.176224708557129
    3. ' count' → logprob: -3.176224708557129
    4. 'count' → logprob: -3.176224708557129
    5. ' s' → logprob: -3.551224708557129
    6. 'for' → logprob: -3.801224708557129
    7. ' for' → logprob: -3.801224708557129
    8. ' result' → logprob: -4.426224708557129
    9. 'result' → logprob: -4.426224708557129
    10. 'a' → logprob: -4.863724708557129

Token 33: 'Weights' (ID: 68119)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9560785293579102
    2. ' arr' → logprob: -2.20607852935791
    3. ' numbers' → logprob: -2.45607852935791
    4. 'arr' → logprob: -2.58107852935791
    5. 'lst' → logprob: -2.58107852935791
    6. 'A' → logprob: -2.83107852935791
    7. ' A' → logprob: -2.95607852935791
    8. ' lst' → logprob: -3.08107852935791
    9. 'nums' → logprob: -3.08107852935791
    10. ' a' → logprob: -3.20607852935791

Token 34: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28388604521751404
    2. ',' → logprob: -1.5338860750198364
    3. ' =' → logprob: -3.533885955810547
    4. 's' → logprob: -6.283885955810547
    5. '=[]' → logprob: -9.033885955810547
    6. ')' → logprob: -9.783885955810547
    7. ' ,' → logprob: -10.408885955810547
    8. '<|end|>' → logprob: -10.533885955810547
    9. ')=' → logprob: -10.783885955810547
    10. ',s' → logprob: -11.283885955810547

Token 35: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8570613861083984
    2. ' =' → logprob: -1.8570613861083984
    3. 'W' → logprob: -2.3570613861083984
    4. 'M' → logprob: -3.1070613861083984
    5. '_' → logprob: -3.2320613861083984
    6. ' W' → logprob: -3.3570613861083984
    7. 'w' → logprob: -3.4820613861083984
    8. 'K' → logprob: -3.6070613861083984
    9. '_=' → logprob: -3.8570613861083984
    10. ' M' → logprob: -4.107061386108398

Token 36: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005414111539721489
    2. ' map' → logprob: -5.255414009094238
    3. '_map' → logprob: -8.880414009094238
    4. 'list' → logprob: -10.755414009094238
    5. '(map' → logprob: -12.130414009094238
    6. ' ' → logprob: -12.755414009094238
    7. 'm' → logprob: -13.005414009094238
    8. 'input' → logprob: -13.630414009094238
    9. '_' → logprob: -13.755414009094238
    10. 'range' → logprob: -13.880414009094238

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018518301658332348
    2. '(' → logprob: -8.625185012817383
    3. 'int' → logprob: -12.375185012817383
    4. '[int' → logprob: -15.000185012817383
    5. '<int' → logprob: -15.000185012817383
    6. '(
' → logprob: -15.250185012817383
    7. '=int' → logprob: -16.000185012817383
    8. ' int' → logprob: -16.125185012817383
    9. '<|end|>' → logprob: -16.625185012817383
    10. ',int' → logprob: -17.375185012817383

Token 38: ',_' (ID: 46431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7474793791770935
    2. ',_' → logprob: -1.1224794387817383
    3. '(_' → logprob: -1.8724794387817383
    4. '_input' → logprob: -3.9974794387817383
    5. '(fetch' → logprob: -4.247479438781738
    6. '_fetch' → logprob: -5.247479438781738
    7. ' ,' → logprob: -6.372479438781738
    8. ')(_' → logprob: -6.497479438781738
    9. ',input' → logprob: -6.622479438781738
    10. ')' → logprob: -6.747479438781738

Token 39: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.909333023941144e-05
    2. '_input' → logprob: -9.625068664550781
    3. ' input' → logprob: -13.000068664550781
    4. '(input' → logprob: -14.375068664550781
    5. 'inputs' → logprob: -16.75006866455078
    6. '.input' → logprob: -17.25006866455078
    7. '	input' → logprob: -17.62506866455078
    8. 'in' → logprob: -18.50006866455078
    9. 'ip' → logprob: -18.62506866455078
    10. 'put' → logprob: -18.75006866455078

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.875003814697266
    3. ')' → logprob: -14.750003814697266
    4. ' ().' → logprob: -14.750003814697266
    5. '.split' → logprob: -15.375003814697266
    6. '())' → logprob: -16.625003814697266
    7. 'split' → logprob: -17.625003814697266
    8. '()))' → logprob: -17.750003814697266
    9. '))' → logprob: -18.000003814697266
    10. '.' → logprob: -18.750003814697266

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032699264120310545
    2. 'strip' → logprob: -5.753270149230957
    3. ' split' → logprob: -9.753270149230957
    4. 'rstrip' → logprob: -10.378270149230957
    5. '(split' → logprob: -13.378270149230957
    6. '.split' → logprob: -14.503270149230957
    7. ')' → logprob: -15.253270149230957
    8. ' strip' → logprob: -15.503270149230957
    9. 's' → logprob: -15.503270149230957
    10. 'spl' → logprob: -16.00326919555664

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010526683181524277
    2. ')' → logprob: -5.260526657104492
    3. '()))' → logprob: -5.510526657104492
    4. '()' → logprob: -7.260526657104492
    5. '))' → logprob: -7.635526657104492
    6. '())
' → logprob: -10.635526657104492
    7. '(' → logprob: -10.885526657104492
    8. ' ())' → logprob: -13.510526657104492
    9. '()))
' → logprob: -13.510526657104492
    10. '('' → logprob: -14.260526657104492

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0456119775772095
    2. '<|end|>' → logprob: -1.0456119775772095
    3. '
' → logprob: -1.4206119775772095
    4. ')' → logprob: -4.04561185836792
    5. '    
' → logprob: -4.54561185836792
    6. '\n' → logprob: -4.79561185836792
    7. ' ' → logprob: -4.92061185836792
    8. '  
' → logprob: -6.17061185836792
    9. '<|end|>' → logprob: -6.29561185836792
    10. ' 
' → logprob: -6.42061185836792

Token 44: ' Acc' (ID: 6278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5651769638061523
    2. ' for' → logprob: -1.9401769638061523
    3. ' W' → logprob: -2.8151769638061523
    4. 'for' → logprob: -3.3151769638061523
    5. 'W' → logprob: -3.5651769638061523
    6. ' weights' → logprob: -3.5651769638061523
    7. '\' → logprob: -4.565176963806152
    8. ' w' → logprob: -4.815176963806152
    9. ' ' → logprob: -4.940176963806152
    10. ' 
' → logprob: -5.065176963806152

Token 45: 'um' (ID: 394)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08108620345592499
    2. 'um' → logprob: -3.3310861587524414
    3. 'umulate' → logprob: -4.456086158752441
    4. '=[]' → logprob: -4.831086158752441
    5. '_weights' → logprob: -5.206086158752441
    6. 'umulative' → logprob: -5.456086158752441
    7. '=[' → logprob: -5.581086158752441
    8. 'umulator' → logprob: -5.706086158752441
    9. 'umul' → logprob: -6.581086158752441
    10. 'Weights' → logprob: -6.581086158752441

Token 46: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32157593965530396
    2. 'ulated' → logprob: -1.6965758800506592
    3. 'ulative' → logprob: -3.321575880050659
    4. '_weights' → logprob: -3.696575880050659
    5. '=sum' → logprob: -4.821576118469238
    6. 'Weights' → logprob: -5.196576118469238
    7. '=[]' → logprob: -5.446576118469238
    8. '=[' → logprob: -6.196576118469238
    9. 'ulators' → logprob: -6.196576118469238
    10. 'ulator' → logprob: -6.571576118469238

Token 47: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018625225871801376
    2. 'Weights' → logprob: -4.018625259399414
    3. ' ' → logprob: -8.018625259399414
    4. '(' → logprob: -10.143625259399414
    5. 'We' → logprob: -10.143625259399414
    6. '[' → logprob: -11.018625259399414
    7. '-' → logprob: -11.143625259399414
    8. '   ' → logprob: -12.143625259399414
    9. 'weights' → logprob: -12.393625259399414
    10. 'None' → logprob: -12.643625259399414

Token 48: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.46547678112983704
    2. ']' → logprob: -1.2154767513275146
    3. ']*' → logprob: -2.9654767513275146
    4. ']+' → logprob: -4.340476989746094
    5. 'for' → logprob: -4.840476989746094
    6. '0' → logprob: -6.215476989746094
    7. ' for' → logprob: -7.090476989746094
    8. '](' → logprob: -8.715476989746094
    9. 'None' → logprob: -10.090476989746094
    10. '(' → logprob: -10.465476989746094

Token 49: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00010783452307805419
    2. ' N' → logprob: -9.625107765197754
    3. 'len' → logprob: -10.250107765197754
    4. '   ' → logprob: -12.875107765197754
    5. '(N' → logprob: -13.125107765197754
    6. ' ' → logprob: -13.875107765197754
    7. '  ' → logprob: -15.375107765197754
    8. '1' → logprob: -15.750107765197754
    9. '(' → logprob: -16.37510871887207
    10. '[N' → logprob: -16.62510871887207

Token 50: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015553286066278815
    2. ')' → logprob: -6.626555442810059
    3. ' +' → logprob: -8.626555442810059
    4. '+)' → logprob: -10.126555442810059
    5. '-' → logprob: -12.876555442810059
    6. '+
' → logprob: -13.126555442810059
    7. '*' → logprob: -13.376555442810059
    8. ' )' → logprob: -13.626555442810059
    9. ')
' → logprob: -14.001555442810059
    10. '1' → logprob: -14.376555442810059

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010628487507347018
    2. '2' → logprob: -9.500105857849121
    3. ' ' → logprob: -10.500105857849121
    4. '10' → logprob: -13.750105857849121
    5. '3' → logprob: -14.125105857849121
    6. '   ' → logprob: -14.625105857849121
    7. '5' → logprob: -14.875105857849121
    8. '  ' → logprob: -15.250105857849121
    9. '```' → logprob: -15.562605857849121
    10. '4' → logprob: -15.750105857849121

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002228525234386325
    2. ')
' → logprob: -6.127228736877441
    3. ' )' → logprob: -10.877228736877441
    4. ')

' → logprob: -11.252228736877441
    5. ')
' → logprob: -11.502228736877441
    6. ' )
' → logprob: -14.752228736877441
    7. ')`' → logprob: -15.002228736877441
    8. ' ' → logprob: -16.002227783203125
    9. ')

' → logprob: -16.127227783203125
    10. '),' → logprob: -16.377227783203125

Token 53: '   ' (ID: 271)
  Prédit: 'Accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.7773616909980774
    2. '   ' → logprob: -1.5273616313934326
    3. ' Acc' → logprob: -1.6523616313934326
    4. '
' → logprob: -2.1523616313934326
    5. 'Acc' → logprob: -5.152361869812012
    6. '    
' → logprob: -6.027361869812012
    7. '<|end|>' → logprob: -6.277361869812012
    8. ' 
' → logprob: -6.527361869812012
    9. '\n' → logprob: -6.777361869812012
    10. '[' → logprob: -7.277361869812012

Token 54: ' Acc' (ID: 6278)
  Prédit: 'Accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.21224918961524963
    2. ' Acc' → logprob: -1.7122491598129272
    3. 'Acc' (adapté à ' Acc') → logprob: -5.087249279022217
    4. '   ' → logprob: -5.462249279022217
    5. '
' → logprob: -9.462248802185059
    6. 'Accumulator' → logprob: -9.837248802185059
    7. ' accum' → logprob: -10.087248802185059
    8. ' for' → logprob: -10.212248802185059
    9. ' ' → logprob: -10.962248802185059
    10. '[' → logprob: -11.337248802185059

Token 55: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -4.060365608893335e-05
    2. 'umulate' → logprob: -11.125041007995605
    3. '[' → logprob: -11.250041007995605
    4. 'ум' → logprob: -13.500041007995605
    5. 'umul' → logprob: -13.500041007995605
    6. 'umu' → logprob: -13.625041007995605
    7. '   ' → logprob: -13.750041007995605
    8. 'umulator' → logprob: -13.750041007995605
    9. 'u' → logprob: -14.000041007995605
    10. '_um' → logprob: -14.562541007995605

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.481510692741722e-05
    2. '=' → logprob: -10.25007438659668
    3. ' =' → logprob: -11.00007438659668
    4. '=[' → logprob: -11.25007438659668
    5. ' [' → logprob: -12.12507438659668
    6. '```' → logprob: -14.00007438659668
    7. '   ' → logprob: -14.25007438659668
    8. '[:]' → logprob: -14.37507438659668
    9. '[N' → logprob: -14.62507438659668
    10. '[-' → logprob: -15.62507438659668

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '[' → logprob: -15.750045776367188
    4. '=' → logprob: -16.250045776367188
    5. '1' → logprob: -17.375045776367188
    6. '   ' → logprob: -18.500045776367188
    7. ')' → logprob: -18.625045776367188
    8. ']' → logprob: -18.625045776367188
    9. '```' → logprob: -18.875045776367188
    10. ' =' → logprob: -19.000045776367188

Token 58: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39897817373275757
    2. ']=' → logprob: -1.1489782333374023
    3. '=' → logprob: -4.523978233337402
    4. ')=' → logprob: -7.523978233337402
    5. ')' → logprob: -7.648978233337402
    6. ' ]' → logprob: -9.273978233337402
    7. ' =' → logprob: -9.648978233337402
    8. ']+=' → logprob: -12.898978233337402
    9. '']=' → logprob: -13.273978233337402
    10. ']={' → logprob: -13.398978233337402

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00025275684311054647
    2. ' ' → logprob: -9.000252723693848
    3. 'True' → logprob: -10.125252723693848
    4. 'set' → logprob: -10.625252723693848
    5. '{' → logprob: -11.000252723693848
    6. '[' → logprob: -11.750252723693848
    7. '1' → logprob: -11.875252723693848
    8. '[]' → logprob: -11.875252723693848
    9. '-' → logprob: -12.000252723693848
    10. 'Weights' → logprob: -12.000252723693848

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.253721684217453
    2. ' for' → logprob: -1.5037217140197754
    3. '   ' → logprob: -6.378721714019775
    4. '	for' → logprob: -10.253721237182617
    5. 'f' → logprob: -11.378721237182617
    6. 'i' → logprob: -11.628721237182617
    7. ' ' → logprob: -11.753721237182617
    8. 'import' → logprob: -12.503721237182617
    9. 'from' → logprob: -12.628721237182617
    10. '
' → logprob: -13.128721237182617

Token 63: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760928988456726
    2. '=' → logprob: -0.8260928988456726
    3. '+' → logprob: -9.826092720031738
    4. '+=' → logprob: -10.451092720031738
    5. ' +=' → logprob: -10.826092720031738
    6. ' ' → logprob: -11.076092720031738
    7. 'x' → logprob: -12.326092720031738
    8. ')' → logprob: -12.326092720031738
    9. '<|end|>' → logprob: -12.451092720031738
    10. 'ex' → logprob: -12.826092720031738

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03406933322548866
    2. '0' → logprob: -3.409069299697876
    3. ' ' → logprob: -7.784069538116455
    4. '2' → logprob: -13.721569061279297
    5. '-' → logprob: -14.159069061279297
    6. '+' → logprob: -14.159069061279297
    7. '   ' → logprob: -14.284069061279297
    8. '[' → logprob: -14.409069061279297
    9. '  ' → logprob: -14.721569061279297
    10. '=' → logprob: -14.846569061279297

Token 65: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6234371662139893
    2. 'for' → logprob: -1.1234371662139893
    3. '<|end|>' → logprob: -2.2484371662139893
    4. '   ' → logprob: -4.37343692779541
    5. '
' → logprob: -4.49843692779541
    6. ' while' → logprob: -5.74843692779541
    7. 'while' → logprob: -6.24843692779541
    8. '<|end|>' → logprob: -6.62343692779541
    9. '	for' → logprob: -7.49843692779541
    10. '    
' → logprob: -7.62343692779541

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2952817380428314
    2. ' for' → logprob: -1.7952817678451538
    3. 'while' → logprob: -2.9202816486358643
    4. ' while' → logprob: -3.4202816486358643
    5. '   ' → logprob: -6.420281887054443
    6. 'f' → logprob: -8.295281410217285
    7. 'i' → logprob: -8.670281410217285
    8. 'w' → logprob: -8.920281410217285
    9. ' ' → logprob: -9.545281410217285
    10. 'acc' → logprob: -9.670281410217285

Token 68: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.7010422945022583
    2. 'w' → logprob: -0.8260422945022583
    3. ' i' → logprob: -3.8260421752929688
    4. 'i' → logprob: -4.076042175292969
    5. ' weight' → logprob: -4.576042175292969
    6. 'weight' → logprob: -5.326042175292969
    7. 'W' → logprob: -5.826042175292969
    8. ' W' → logprob: -5.951042175292969
    9. ' x' → logprob: -6.576042175292969
    10. 'x' → logprob: -6.951042175292969

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009856902994215488
    2. 'in' → logprob: -4.634856700897217
    3. ' ' → logprob: -9.634857177734375
    4. 'n' → logprob: -11.759857177734375
    5. '   ' → logprob: -12.009857177734375
    6. 'i' → logprob: -12.384857177734375
    7. 'w' → logprob: -12.884857177734375
    8. '  ' → logprob: -13.009857177734375
    9. '	in' → logprob: -13.009857177734375
    10. ' i' → logprob: -13.759857177734375

Token 70: ' We' (ID: 1416)
  Prédit: 'Weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Weights' → logprob: -0.0025397518184036016
    2. ' We' → logprob: -6.00253963470459
    3. 'We' → logprob: -9.75253963470459
    4. ' weights' → logprob: -12.75253963470459
    5. 'Weight' → logprob: -13.75253963470459
    6. '_weights' → logprob: -13.87753963470459
    7. 'weights' → logprob: -14.00253963470459
    8. ' ' → logprob: -16.252540588378906
    9. ' Weight' → logprob: -16.752540588378906
    10. 'Widths' → logprob: -17.502540588378906

Token 71: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -1.8670179997570813e-05
    2. 'igh' → logprob: -11.625019073486328
    3. 'IGHTS' → logprob: -12.125019073486328
    4. 'ght' → logprob: -13.625019073486328
    5. 'ight' → logprob: -13.875019073486328
    6. '   ' → logprob: -14.500019073486328
    7. 'weights' → logprob: -14.875019073486328
    8. 'igts' → logprob: -15.125019073486328
    9. 'ught' → logprob: -16.125019073486328
    10. 'ighted' → logprob: -16.125019073486328

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016060644760727882
    2. ':
' → logprob: -4.141060829162598
    3. ' :' → logprob: -11.391060829162598
    4. '   ' → logprob: -11.766060829162598
    5. ':
' → logprob: -13.266060829162598
    6. ' :
' → logprob: -13.391060829162598
    7. ',' → logprob: -13.891060829162598
    8. ':

' → logprob: -14.141060829162598
    9. '=' → logprob: -14.516060829162598
    10. '):
' → logprob: -14.766060829162598

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013093761168420315
    2. '<|end|>' → logprob: -5.513093948364258
    3. '        
' → logprob: -6.138093948364258
    4. '    ' → logprob: -6.138093948364258
    5. '   ' → logprob: -7.013093948364258
    6. '    
' → logprob: -7.138093948364258
    7. ' 
' → logprob: -7.388093948364258
    8. ' ' → logprob: -7.513093948364258
    9. '        ' → logprob: -7.638093948364258
    10. ' Acc' → logprob: -7.888093948364258

Token 74: ' Acc' (ID: 6278)
  Prédit: ' Acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Acc' → logprob: -0.29988834261894226
    2. '   ' → logprob: -1.6748883724212646
    3. 'Accum' → logprob: -2.7998883724212646
    4. 'Acc' (adapté à ' Acc') → logprob: -5.4248881340026855
    5. '       ' → logprob: -5.5498881340026855
    6. ' if' → logprob: -6.6748881340026855
    7. '    ' → logprob: -7.9248881340026855
    8. ' Ac' → logprob: -8.299888610839844
    9. ' accum' → logprob: -8.424888610839844
    10. ' ' → logprob: -9.174888610839844

Token 75: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -3.0948158382670954e-05
    2. '[' → logprob: -10.500030517578125
    3. 'ум' → logprob: -14.375030517578125
    4. 'u' → logprob: -14.500030517578125
    5. 'umul' → logprob: -15.125030517578125
    6. '   ' → logprob: -15.375030517578125
    7. '[idx' → logprob: -15.500030517578125
    8. ' um' → logprob: -15.750030517578125
    9. 'umulate' → logprob: -15.812530517578125
    10. 'umulator' → logprob: -16.062530517578125

Token 76: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.219262624857947e-05
    2. '[' → logprob: -9.625072479248047
    3. 'idx' → logprob: -12.750072479248047
    4. '[i' → logprob: -13.750072479248047
    5. '	idx' → logprob: -15.000072479248047
    6. '[index' → logprob: -15.000072479248047
    7. ' idx' → logprob: -15.250072479248047
    8. ' [' → logprob: -15.375072479248047
    9. '   ' → logprob: -16.000072479248047
    10. '_idx' → logprob: -16.125072479248047

Token 77: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5788160562515259
    2. ']' → logprob: -0.8288160562515259
    3. ' ]' → logprob: -6.203815937042236
    4. '=' → logprob: -7.203815937042236
    5. ']=(' → logprob: -9.953816413879395
    6. ']+=' → logprob: -10.703816413879395
    7. ' =' → logprob: -11.203816413879395
    8. ')=' → logprob: -11.453816413879395
    9. ')' → logprob: -12.828816413879395
    10. '']=' → logprob: -12.828816413879395

Token 78: 'Accum' (ID: 169681)
  Prédit: 'Accum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.001190225942991674
    2. ' Acc' → logprob: -7.001190185546875
    3. 'w' → logprob: -8.876190185546875
    4. 'Acc' → logprob: -10.001190185546875
    5. ' w' → logprob: -10.001190185546875
    6. 'Accumulator' → logprob: -10.876190185546875
    7. 'Weights' → logprob: -11.626190185546875
    8. ' accum' → logprob: -11.751190185546875
    9. '   ' → logprob: -12.251190185546875
    10. 'acc' → logprob: -13.751190185546875

Token 79: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00017529279284644872
    2. 'idx' → logprob: -8.750175476074219
    3. ' idx' → logprob: -11.250175476074219
    4. '	idx' → logprob: -13.625175476074219
    5. '[' → logprob: -13.875175476074219
    6. '[id' → logprob: -14.625175476074219
    7. '-' → logprob: -14.625175476074219
    8. ' [' → logprob: -15.625175476074219
    9. '[i' → logprob: -15.750175476074219
    10. '[-' → logprob: -15.875175476074219

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004902417422272265
    2. ' -' → logprob: -7.625490188598633
    3. '1' → logprob: -13.250490188598633
    4. '-
' → logprob: -16.125490188598633
    5. ' ' → logprob: -16.500490188598633
    6. '```' → logprob: -17.000490188598633
    7. '−' → logprob: -17.125490188598633
    8. '   ' → logprob: -17.375490188598633
    9. ']-' → logprob: -18.125490188598633
    10. ']' → logprob: -18.500490188598633

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.492120155598968e-05
    2. ' ' → logprob: -9.750064849853516
    3. ']' → logprob: -12.625064849853516
    4. '```' → logprob: -14.000064849853516
    5. '   ' → logprob: -14.125064849853516
    6. '<|end|>' → logprob: -15.000064849853516
    7. ']+' → logprob: -15.500064849853516
    8. '<|end|>' → logprob: -16.125064849853516
    9. '0' → logprob: -16.437564849853516
    10. '  ' → logprob: -16.625064849853516

Token 82: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21311160922050476
    2. ' +' → logprob: -1.7131116390228271
    3. '+w' → logprob: -4.463111400604248
    4. ']+' → logprob: -10.588111877441406
    5. ')+' → logprob: -10.588111877441406
    6. '+
' → logprob: -11.588111877441406
    7. ' ' → logprob: -11.963111877441406
    8. ' plus' → logprob: -11.963111877441406
    9. '()+' → logprob: -12.213111877441406
    10. '}+' → logprob: -12.588111877441406

Token 83: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0067154900170862675
    2. ' w' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.631715774536133
    4. '	w' → logprob: -18.256715774536133
    5. '<|end|>' → logprob: -18.631715774536133
    6. '*w' → logprob: -19.131715774536133
    7. '?w' → logprob: -19.381715774536133
    8. '   ' → logprob: -19.381715774536133
    9. '_w' → logprob: -19.506715774536133
    10. ''w' → logprob: -19.881715774536133

Token 84: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1933542937040329
    2. 'idx' → logprob: -1.8183542490005493
    3. ' idx' → logprob: -4.94335412979126
    4. '   ' → logprob: -6.19335412979126
    5. '[idx' → logprob: -6.56835412979126
    6. '	idx' → logprob: -6.56835412979126
    7. '\n' → logprob: -7.44335412979126
    8. '    
' → logprob: -7.69335412979126
    9. '<|end|>' → logprob: -8.693354606628418
    10. '       ' → logprob: -9.193354606628418

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20156234502792358
    2. '   ' → logprob: -2.0765624046325684
    3. 'idx' → logprob: -3.9515624046325684
    4. ' idx' → logprob: -3.9515624046325684
    5. '	idx' → logprob: -4.201562404632568
    6. '<|end|>' → logprob: -6.326562404632568
    7. '[idx' → logprob: -7.201562404632568
    8. '<|end|>' → logprob: -8.45156192779541
    9. '	' → logprob: -8.82656192779541
    10. '	   ' → logprob: -9.07656192779541

Token 86: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.12724001705646515
    2. ' idx' → logprob: -2.127239942550659
    3. '	idx' → logprob: -8.502240180969238
    4. '   ' → logprob: -9.377240180969238
    5. '_idx' → logprob: -11.252240180969238
    6. '
' → logprob: -11.752240180969238
    7. '    
' → logprob: -13.877240180969238
    8. '       ' → logprob: -14.502240180969238
    9. '[idx' → logprob: -14.502240180969238
    10. '(idx' → logprob: -14.752240180969238

Token 87: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0007916436879895627
    2. ' +=' → logprob: -7.500791549682617
    3. '+' → logprob: -8.375791549682617
    4. '++' → logprob: -12.000791549682617
    5. '=' → logprob: -14.375791549682617
    6. '+='' → logprob: -14.375791549682617
    7. '+="' → logprob: -14.875791549682617
    8. ']+=' → logprob: -15.000791549682617
    9. '<|end|>' → logprob: -15.750791549682617
    10. '+++' → logprob: -16.250791549682617

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.375003814697266
    5. '１' → logprob: -20.375003814697266
    6. '۱' → logprob: -21.312503814697266
    7. '+' → logprob: -21.375003814697266
    8. '`' → logprob: -21.500003814697266
    9. '१' → logprob: -21.750003814697266
    10. '  ' → logprob: -21.812503814697266

Token 89: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.710315465927124
    2. '
' → logprob: -0.960315465927124
    3. '<|end|>' → logprob: -2.210315465927124
    4. '    
' → logprob: -5.460315704345703
    5. '\n' → logprob: -5.585315704345703
    6. '```' → logprob: -6.335315704345703
    7. ' ' → logprob: -7.085315704345703
    8. ' return' → logprob: -7.210315704345703
    9. ' 
' → logprob: -7.335315704345703
    10. '' → logprob: -7.585315704345703

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0021092891693115
    2. '   ' → logprob: -1.1271092891693115
    3. ' for' → logprob: -1.5021092891693115
    4. 'for' → logprob: -3.6271092891693115
    5. ' 
' → logprob: -4.502109527587891
    6. '<|end|>' → logprob: -4.502109527587891
    7. '    
' → logprob: -4.627109527587891
    8. ' i' → logprob: -4.877109527587891
    9. 'def' → logprob: -5.752109527587891
    10. ' ' → logprob: -6.127109527587891

Token 91: ' result' (ID: 1534)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11781205236911774
    2. ' for' → logprob: -4.117812156677246
    3. 'left' → logprob: -4.367812156677246
    4. 'dp' → logprob: -4.617812156677246
    5. '   ' → logprob: -4.742812156677246
    6. 'l' → logprob: -4.742812156677246
    7. 'answer' → logprob: -5.242812156677246
    8. 'i' → logprob: -5.367812156677246
    9. 'result' (adapté à ' result') → logprob: -5.867812156677246
    10. 'max' → logprob: -5.867812156677246

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0907362699508667
    2. '=' → logprob: -2.4657363891601562
    3. '=[]' → logprob: -6.340736389160156
    4. ' =[' → logprob: -11.965736389160156
    5. ' ' → logprob: -12.090736389160156
    6. 's' → logprob: -12.590736389160156
    7. '=[]
' → logprob: -12.715736389160156
    8. '[:]' → logprob: -12.840736389160156
    9. '={}' → logprob: -13.340736389160156
    10. '=[' → logprob: -13.590736389160156

Token 93: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3847731649875641
    2. 'set' → logprob: -2.1347732543945312
    3. '[]' → logprob: -2.7597732543945312
    4. ' ' → logprob: -3.0097732543945312
    5. 'False' → logprob: -3.7597732543945312
    6. '[' → logprob: -4.384773254394531
    7. ' set' → logprob: -4.384773254394531
    8. ' []' → logprob: -5.009773254394531
    9. 'sum' → logprob: -5.009773254394531
    10. 'max' → logprob: -5.384773254394531

Token 94: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01193438470363617
    2. '('-' → logprob: -4.511934280395508
    3. ''s' → logprob: -8.136934280395508
    4. ''' → logprob: -8.386934280395508
    5. ''-' → logprob: -8.886934280395508
    6. ''in' → logprob: -9.136934280395508
    7. 'inf' → logprob: -10.386934280395508
    8. '(' → logprob: -10.636934280395508
    9. '('+' → logprob: -10.886934280395508
    10. '-inf' → logprob: -11.761934280395508

Token 95: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.006721298210322857
    2. '-inf' → logprob: -5.006721496582031
    3. 'INF' → logprob: -14.131721496582031
    4. '-' → logprob: -14.256721496582031
    5. 'in' → logprob: -14.256721496582031
    6. '.inf' → logprob: -14.381721496582031
    7. ''' → logprob: -14.506721496582031
    8. 'Inf' → logprob: -14.506721496582031
    9. 'info' → logprob: -14.506721496582031
    10. ''-' → logprob: -14.756721496582031

Token 96: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039048073813319206
    2. ')
' → logprob: -5.753904819488525
    3. '')' → logprob: -7.503904819488525
    4. ' )' → logprob: -8.878904342651367
    5. ')
' → logprob: -11.628904342651367
    6. '')
' → logprob: -11.753904342651367
    7. ')

' → logprob: -11.878904342651367
    8. ' )
' → logprob: -12.378904342651367
    9. '   ' → logprob: -12.878904342651367
    10. ' ' → logprob: -13.628904342651367

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5233469605445862
    2. '
' → logprob: -1.3983469009399414
    3. '<|end|>' → logprob: -2.0233469009399414
    4. ' for' → logprob: -4.023346900939941
    5. 'for' → logprob: -5.148346900939941
    6. '    
' → logprob: -6.023346900939941
    7. ' ' → logprob: -7.773346900939941
    8. '<|end|>' → logprob: -7.898346900939941
    9. ')' → logprob: -8.148346900939941
    10. '  
' → logprob: -8.523346900939941

Token 98: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3686745762825012
    2. ' for' → logprob: -1.6186745166778564
    3. '   ' → logprob: -2.2436745166778564
    4. 'i' (adapté à ' i') → logprob: -6.7436747550964355
    5. 'left' → logprob: -6.7436747550964355
    6. ' i' → logprob: -7.6186747550964355
    7. 'l' → logprob: -7.7436747550964355
    8. ' left' → logprob: -8.118674278259277
    9. 'start' → logprob: -9.118674278259277
    10. ' l' → logprob: -9.243674278259277

Token 99: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8513283729553223
    2. '=' → logprob: -0.9763283729553223
    3. 'n' → logprob: -1.7263283729553223
    4. ',' → logprob: -4.976328372955322
    5. ' ' → logprob: -4.976328372955322
    6. ' in' → logprob: -6.601328372955322
    7. 'nd' → logprob: -6.601328372955322
    8. 'nt' → logprob: -7.726328372955322
    9. ' n' → logprob: -7.851328372955322
    10. '<|end|>' → logprob: -8.476327896118164

Token 100: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003912169020622969
    2. '1' → logprob: -5.628911972045898
    3. ' ' → logprob: -8.378911972045898
    4. '2' → logprob: -9.503911972045898
    5. '   ' → logprob: -13.503911972045898
    6. 'N' → logprob: -13.753911972045898
    7. '  ' → logprob: -13.753911972045898
    8. '<|end|>' → logprob: -13.878911972045898
    9. '[' → logprob: -14.378911972045898
    10. '-' → logprob: -14.441411972045898

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' while' (ID: 2049)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.044197577983140945
    2. ' j' → logprob: -3.1691975593566895
    3. 'for' → logprob: -7.5441975593566895
    4. '   ' → logprob: -8.294198036193848
    5. ' for' → logprob: -8.794198036193848
    6. 'r' → logprob: -9.669198036193848
    7. 'while' (adapté à ' while') → logprob: -9.919198036193848
    8. 'l' → logprob: -10.169198036193848
    9. 'n' → logprob: -10.919198036193848
    10. ' ' → logprob: -11.044198036193848

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012673511169850826
    2. 'i' → logprob: -4.387673377990723
    3. ' True' → logprob: -9.887673377990723
    4. ' ' → logprob: -9.887673377990723
    5. '(i' → logprob: -10.637673377990723
    6. '   ' → logprob: -11.137673377990723
    7. 'True' → logprob: -11.637673377990723
    8. '  ' → logprob: -12.762673377990723
    9. '	i' → logprob: -12.887673377990723
    10. 'result' → logprob: -13.262673377990723

Token 105: '<=' (ID: 16672)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9597688317298889
    2. ' <=' → logprob: -1.0847687721252441
    3. '<=' → logprob: -1.5847687721252441
    4. '<' → logprob: -2.959768772125244
    5. '<len' → logprob: -3.834768772125244
    6. ' ' → logprob: -7.834768772125244
    7. '<size' → logprob: -9.709769248962402
    8. '<n' → logprob: -10.459769248962402
    9. '<N' → logprob: -10.584769248962402
    10. ' ≤' → logprob: -11.209769248962402

Token 106: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.968312951968983e-06
    2. ' N' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.500009536743164
    4. 'n' → logprob: -16.125009536743164
    5. 'i' → logprob: -16.125009536743164
    6. ' ' → logprob: -16.125009536743164
    7. 'len' → logprob: -16.625009536743164
    8. '	N' → logprob: -17.625009536743164
    9. '  ' → logprob: -18.000009536743164
    10. '(' → logprob: -18.750009536743164

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21391379833221436
    2. ':
' → logprob: -1.7139137983322144
    3. '   ' → logprob: -4.838913917541504
    4. ' and' → logprob: -5.463913917541504
    5. 'and' → logprob: -8.838913917541504
    6. ' :
' → logprob: -10.588913917541504
    7. ':i' → logprob: -11.338913917541504
    8. ':

' → logprob: -11.338913917541504
    9. '       ' → logprob: -11.463913917541504
    10. ' :' → logprob: -11.588913917541504

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3464822769165039
    2. '   ' → logprob: -1.596482276916504
    3. '<|end|>' → logprob: -2.721482276916504
    4. ' ' → logprob: -5.471482276916504
    5. '    ' → logprob: -5.596482276916504
    6. ' and' → logprob: -5.971482276916504
    7. ':' → logprob: -5.971482276916504
    8. ',' → logprob: -6.596482276916504
    9. '<|end|>' → logprob: -6.846482276916504
    10. '        
' → logprob: -6.846482276916504

Token 109: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.46921080350875854
    2. ' j' → logprob: -1.0942108631134033
    3. '   ' → logprob: -3.3442108631134033
    4. ' if' → logprob: -6.469210624694824
    5. ' for' → logprob: -7.219210624694824
    6. 'if' → logprob: -7.844210624694824
    7. '       ' → logprob: -8.344210624694824
    8. ' left' → logprob: -8.344210624694824
    9. 'for' → logprob: -8.594210624694824
    10. 'l' → logprob: -8.844210624694824

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18921718001365662
    2. ' =' → logprob: -1.814217209815979
    3. '=i' → logprob: -5.0642170906066895
    4. '=result' → logprob: -6.8142170906066895
    5. '=int' → logprob: -7.4392170906066895
    6. '=j' → logprob: -8.189217567443848
    7. '   ' → logprob: -8.564217567443848
    8. '=x' → logprob: -8.814217567443848
    9. '=max' → logprob: -8.814217567443848
    10. '=len' → logprob: -9.189217567443848

Token 111: ' Acc' (ID: 6278)
  Prédit: 'Accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.16909100115299225
    2. ' Acc' → logprob: -2.669090986251831
    3. 'i' → logprob: -3.669090986251831
    4. 'Weights' → logprob: -3.794090986251831
    5. '(' → logprob: -4.54409122467041
    6. '1' → logprob: -5.16909122467041
    7. 'Acc' → logprob: -5.16909122467041
    8. ' i' → logprob: -5.41909122467041
    9. '0' → logprob: -6.29409122467041
    10. ' (' → logprob: -6.54409122467041

Token 112: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.1041145626222715e-05
    2. '[' → logprob: -12.250011444091797
    3. 'umul' → logprob: -13.875011444091797
    4. '   ' → logprob: -14.250011444091797
    5. 'umu' → logprob: -14.312511444091797
    6. 'ум' → logprob: -14.687511444091797
    7. 'uml' → logprob: -14.875011444091797
    8. 'u' → logprob: -15.000011444091797
    9. 'umulate' → logprob: -15.312511444091797
    10. '[i' → logprob: -15.625011444091797

Token 113: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.636475493200123e-05
    2. 'i' → logprob: -10.750076293945312
    3. '[j' → logprob: -10.875076293945312
    4. '[' → logprob: -11.000076293945312
    5. '[x' → logprob: -11.875076293945312
    6. '[N' → logprob: -12.375076293945312
    7. '   ' → logprob: -12.500076293945312
    8. '       ' → logprob: -13.125076293945312
    9. '[n' → logprob: -14.875076293945312
    10. ' [' → logprob: -14.875076293945312

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07832690328359604
    2. ']-' → logprob: -2.828326940536499
    3. '-' → logprob: -4.20332670211792
    4. ' ]' → logprob: -7.95332670211792
    5. ']+' → logprob: -7.95332670211792
    6. ' -' → logprob: -8.328327178955078
    7. '   ' → logprob: -9.078327178955078
    8. ']
' → logprob: -9.078327178955078
    9. '])-' → logprob: -10.578327178955078
    10. '       ' → logprob: -11.328327178955078

Token 115: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' y' (ID: 342)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03344777226448059
    2. '   ' → logprob: -4.908447742462158
    3. 'left' → logprob: -5.033447742462158
    4. 'l' → logprob: -5.408447742462158
    5. 'for' → logprob: -5.408447742462158
    6. 'i' → logprob: -5.533447742462158
    7. 'if' → logprob: -5.658447742462158
    8. 'low' → logprob: -6.658447742462158
    9. ' j' → logprob: -8.283448219299316
    10. 'result' → logprob: -8.408448219299316

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231901407241821
    2. ' =' → logprob: -0.8981901407241821
    3. '=i' → logprob: -11.14819049835205
    4. '=int' → logprob: -11.39819049835205
    5. '    ' → logprob: -11.89819049835205
    6. '=float' → logprob: -11.89819049835205
    7. '   ' → logprob: -12.39819049835205
    8. '=None' → logprob: -12.77319049835205
    9. ',' → logprob: -12.89819049835205
    10. ' ' → logprob: -12.89819049835205

Token 118: ' Acc' (ID: 6278)
  Prédit: 'Accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.7717799544334412
    2. 'x' → logprob: -1.646780014038086
    3. 'float' → logprob: -2.271780014038086
    4. ' Acc' → logprob: -2.396780014038086
    5. '0' → logprob: -3.146780014038086
    6. ' float' → logprob: -3.396780014038086
    7. ' x' → logprob: -3.521780014038086
    8. 'Acc' → logprob: -4.021780014038086
    9. 'i' → logprob: -5.146780014038086
    10. ' ' → logprob: -5.396780014038086

Token 119: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -12.87500286102295
    3. 'u' → logprob: -15.50000286102295
    4. 'm' → logprob: -16.125003814697266
    5. 'ум' → logprob: -17.375003814697266
    6. 'ul' → logprob: -17.750003814697266
    7. ' um' → logprob: -17.875003814697266
    8. '[]' → logprob: -18.500003814697266
    9. '[i' → logprob: -18.500003814697266
    10. 'om' → logprob: -18.750003814697266

Token 120: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.5535317659378052
    2. '[-' → logprob: -0.9285317659378052
    3. '[i' → logprob: -3.5535316467285156
    4. '[' → logprob: -6.928531646728516
    5. '[j' → logprob: -9.178531646728516
    6. 'N' → logprob: -9.553531646728516
    7. '-' → logprob: -9.678531646728516
    8. '[n' → logprob: -10.553531646728516
    9. '[len' → logprob: -10.803531646728516
    10. 'i' → logprob: -10.803531646728516

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38809943199157715
    2. ']-' → logprob: -1.1380994319915771
    3. '-' → logprob: -6.763099670410156
    4. ' ]' → logprob: -10.513099670410156
    5. ']+' → logprob: -10.763099670410156
    6. ']
' → logprob: -11.263099670410156
    7. '-i' → logprob: -13.388099670410156
    8. ' ' → logprob: -13.638099670410156
    9. ' -' → logprob: -13.638099670410156
    10. '])-' → logprob: -13.638099670410156

Token 122: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22289852797985077
    2. ' -' → logprob: -1.8478984832763672
    3. '       ' → logprob: -3.597898483276367
    4. '-x' → logprob: -4.972898483276367
    5. '-i' → logprob: -5.347898483276367
    6. '-j' → logprob: -6.972898483276367
    7. '-A' → logprob: -7.472898483276367
    8. '-m' → logprob: -8.597898483276367
    9. '
' → logprob: -8.597898483276367
    10. '   ' → logprob: -8.722898483276367

Token 123: ' x' (ID: 1215)
  Prédit: 'Accum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Accum' → logprob: -0.0524960495531559
    2. 'x' → logprob: -3.0524959564208984
    3. ' x' → logprob: -5.927495956420898
    4. ' Acc' → logprob: -7.052495956420898
    5. 'Acc' → logprob: -8.052495956420898
    6. 'Accumulator' → logprob: -10.677495956420898
    7. '   ' → logprob: -12.052495956420898
    8. '_acc' → logprob: -12.302495956420898
    9. ' ' → logprob: -12.427495956420898
    10. ' accum' → logprob: -13.052495956420898

Token 124: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4177355468273163
    2. '
' → logprob: -1.2927355766296387
    3. '<|end|>' → logprob: -2.7927355766296387
    4. '<|end|>' → logprob: -6.042735576629639
    5. '        
' → logprob: -6.792735576629639
    6. '  
' → logprob: -7.917735576629639
    7. '   ' → logprob: -8.29273509979248
    8. ')' → logprob: -8.29273509979248
    9. ',' → logprob: -8.41773509979248
    10. ' if' → logprob: -8.66773509979248

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5912103056907654
    2. '
' → logprob: -0.9662103056907654
    3. '<|end|>' → logprob: -2.84121036529541
    4. ' if' → logprob: -6.21621036529541
    5. '   ' → logprob: -6.71621036529541
    6. '<|end|>' → logprob: -6.84121036529541
    7. '        
' → logprob: -7.09121036529541
    8. ',' → logprob: -7.46621036529541
    9. '  
' → logprob: -7.71621036529541
    10. '```' → logprob: -7.96621036529541

Token 126: ' gap' (ID: 19953)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5048251748085022
    2. ' if' → logprob: -1.1298251152038574
    3. '       ' → logprob: -2.7548251152038574
    4. '   ' → logprob: -4.754825115203857
    5. 'diff' → logprob: -8.254825592041016
    6. '
' → logprob: -9.129825592041016
    7. 'i' → logprob: -9.504825592041016
    8. 's' → logprob: -9.629825592041016
    9. 'while' → logprob: -9.879825592041016
    10. ' i' → logprob: -9.879825592041016

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519429922103882
    2. ' =' → logprob: -1.5019429922103882
    3. '=int' → logprob: -11.75194263458252
    4. '   ' → logprob: -12.50194263458252
    5. ' ' → logprob: -15.00194263458252
    6. ',' → logprob: -15.37694263458252
    7. '_' → logprob: -15.75194263458252
    8. '=

' → logprob: -15.87694263458252
    9. '=}' → logprob: -16.001943588256836
    10. '    ' → logprob: -16.251943588256836

Token 128: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.001053530490025878
    2. ' abs' → logprob: -7.001053333282471
    3. 'y' → logprob: -9.626053810119629
    4. 'x' → logprob: -9.751053810119629
    5. 'min' → logprob: -11.626053810119629
    6. '(abs' → logprob: -12.751053810119629
    7. '   ' → logprob: -13.001053810119629
    8. 'float' → logprob: -13.376053810119629
    9. ' y' → logprob: -14.126053810119629
    10. 'result' → logprob: -14.626053810119629

Token 129: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0004624855937436223
    2. '(' → logprob: -8.000462532043457
    3. '(y' → logprob: -9.625462532043457
    4. '(g' → logprob: -10.375462532043457
    5. 'x' → logprob: -10.500462532043457
    6. '(
' → logprob: -13.875462532043457
    7. ' (' → logprob: -14.625462532043457
    8. '((' → logprob: -14.625462532043457
    9. '(result' → logprob: -15.625462532043457
    10. 'gap' → logprob: -16.12546157836914

Token 130: '-y' (ID: 18102)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38703683018684387
    2. '-' → logprob: -1.1370368003845215
    3. '-y' → logprob: -8.88703727722168
    4. ' ' → logprob: -10.88703727722168
    5. '   ' → logprob: -12.38703727722168
    6. ')' → logprob: -13.13703727722168
    7. '  ' → logprob: -14.88703727722168
    8. ' ' → logprob: -15.13703727722168
    9. '-g' → logprob: -15.51203727722168
    10. '[' → logprob: -15.51203727722168

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0486200675368309
    2. ')
' → logprob: -3.0486199855804443
    3. '       ' → logprob: -11.048620223999023
    4. ')
' → logprob: -11.923620223999023
    5. ' )' → logprob: -12.423620223999023
    6. ')

' → logprob: -12.673620223999023
    7. '   ' → logprob: -14.173620223999023
    8. ' )
' → logprob: -14.298620223999023
    9. '))' → logprob: -15.173620223999023
    10. ')**' → logprob: -15.298620223999023

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14928540587425232
    2. '<|end|>' → logprob: -2.649285316467285
    3. '   ' → logprob: -3.399285316467285
    4. '
' → logprob: -3.774285316467285
    5. '```' → logprob: -5.274285316467285
    6. ' if' → logprob: -6.024285316467285
    7. '  
' → logprob: -7.274285316467285
    8. '        
' → logprob: -7.524285316467285
    9. ')' → logprob: -7.774285316467285
    10. '<|end|>' → logprob: -7.774285316467285

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1823413223028183
    2. ' if' → logprob: -2.0573413372039795
    3. '       ' → logprob: -3.4323413372039795
    4. '   ' → logprob: -5.0573410987854
    5. 'i' → logprob: -8.932341575622559
    6. ' i' → logprob: -10.057341575622559
    7. '	if' → logprob: -10.807341575622559
    8. '```' → logprob: -12.057341575622559
    9. '
' → logprob: -12.432341575622559
    10. 'result' → logprob: -13.182341575622559

Token 134: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.033655840903520584
    2. 'gap' → logprob: -3.408655881881714
    3. ' result' → logprob: -12.158656120300293
    4. ' ' → logprob: -13.533656120300293
    5. '   ' → logprob: -13.783656120300293
    6. 'result' → logprob: -13.908656120300293
    7. '_gap' → logprob: -14.908656120300293
    8. '0' → logprob: -15.158656120300293
    9. ' gaps' → logprob: -15.908656120300293
    10. '
' → logprob: -16.283655166625977

Token 135: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3406817317008972
    2. '<' → logprob: -1.465681791305542
    3. ' ==' → logprob: -3.090681791305542
    4. '==' → logprob: -4.840681552886963
    5. ' <=' → logprob: -5.590681552886963
    6. '<=' → logprob: -7.840681552886963
    7. ' >' → logprob: -8.965682029724121
    8. ' ' → logprob: -9.715682029724121
    9. '>' → logprob: -10.090682029724121
    10. '   ' → logprob: -10.840682029724121

Token 136: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00023119196703191847
    2. ' result' → logprob: -8.37523078918457
    3. '   ' → logprob: -14.62523078918457
    4. '	result' → logprob: -16.37523078918457
    5. '(result' → logprob: -17.50023078918457
    6. '  ' → logprob: -18.00023078918457
    7. '       ' → logprob: -18.12523078918457
    8. '```' → logprob: -18.12523078918457
    9. ' ' → logprob: -18.50023078918457
    10. '
' → logprob: -18.75023078918457

Token 137: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4761398732662201
    2. ':' → logprob: -0.9761399030685425
    3. '       ' → logprob: -6.351140022277832
    4. '           ' → logprob: -8.851140022277832
    5. '):
' → logprob: -8.851140022277832
    6. ':

' → logprob: -12.101140022277832
    7. '):' → logprob: -12.226140022277832
    8. ':
' → logprob: -12.476140022277832
    9. ' :
' → logprob: -12.601140022277832
    10. '   ' → logprob: -12.726140022277832

Token 138: ' result' (ID: 1534)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.657554030418396
    2. '           ' → logprob: -1.282554030418396
    3. '       ' → logprob: -2.0325541496276855
    4. 'result' → logprob: -3.2825541496276855
    5. ' result' → logprob: -3.5325541496276855
    6. ' 
' → logprob: -6.0325541496276855
    7. '        
' → logprob: -6.4075541496276855
    8. '<|end|>' → logprob: -7.0325541496276855
    9. '```' → logprob: -7.6575541496276855
    10. '	       ' → logprob: -8.282553672790527

Token 139: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14543648064136505
    2. ' =' → logprob: -2.0204365253448486
    3. '=result' → logprob: -5.8954362869262695
    4. '=cut' → logprob: -14.77043628692627
    5. '=f' → logprob: -15.02043628692627
    6. '=end' → logprob: -15.27043628692627
    7. '=value' → logprob: -15.39543628692627
    8. '＝' → logprob: -15.39543628692627
    9. '<|end|>' → logprob: -15.39543628692627
    10. '=g' → logprob: -15.52043628692627

Token 140: 'gap' (ID: 61115)
  Prédit: 'gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.012510941363871098
    2. ' gap' → logprob: -4.387510776519775
    3. '   ' → logprob: -14.137511253356934
    4. 'g' → logprob: -15.262511253356934
    5. '_gap' → logprob: -15.512511253356934
    6. '-gap' → logprob: -16.762510299682617
    7. ' ' → logprob: -16.762510299682617
    8. '  ' → logprob: -18.012510299682617
    9. '
' → logprob: -18.137510299682617
    10. '```' → logprob: -18.262510299682617

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6510690450668335
    2. '       ' → logprob: -1.2760690450668335
    3. ' else' → logprob: -1.7760690450668335
    4. 'else' → logprob: -3.901069164276123
    5. ' 
' → logprob: -6.651069164276123
    6. '\n' → logprob: -6.651069164276123
    7. ' elif' → logprob: -6.776069164276123
    8. '
' → logprob: -7.026069164276123
    9. '<|end|>' → logprob: -7.026069164276123
    10. '  
' → logprob: -7.151069164276123

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09155178815126419
    2. ' else' → logprob: -2.5915517807006836
    3. '   ' → logprob: -5.591551780700684
    4. 'else' → logprob: -5.841551780700684
    5. '<|end|>' → logprob: -6.091551780700684
    6. '
' → logprob: -6.716551780700684
    7. ' elif' → logprob: -6.966551780700684
    8. ' i' → logprob: -7.216551780700684
    9. ',' → logprob: -8.341551780700684
    10. 'elif' → logprob: -9.091551780700684

Token 143: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00045724798110313714
    2. '   ' → logprob: -8.000456809997559
    3. ' i' → logprob: -9.500456809997559
    4. 'else' → logprob: -10.250456809997559
    5. 'elif' → logprob: -12.250456809997559
    6. 'if' → logprob: -12.375456809997559
    7. '       ' → logprob: -13.750456809997559
    8. '
' → logprob: -14.625456809997559
    9. '```' → logprob: -14.750456809997559
    10. '  ' → logprob: -15.375456809997559

Token 144: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0018275037873536348
    2. '+' → logprob: -6.626827716827393
    3. ' +=' → logprob: -7.626827716827393
    4. '=' → logprob: -12.126827239990234
    5. '++' → logprob: -12.251827239990234
    6. '+="' → logprob: -13.626827239990234
    7. '1' → logprob: -14.126827239990234
    8. '+='' → logprob: -14.126827239990234
    9. ']+=' → logprob: -14.251827239990234
    10. '<|end|>' → logprob: -15.376827239990234

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -21.25
    6. '۱' → logprob: -22.125
    7. '+' → logprob: -22.3125
    8. '<|end|>' → logprob: -22.4375
    9. '१' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 146: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7904130220413208
    2. '<|end|>' → logprob: -1.2904130220413208
    3. '   ' → logprob: -1.6654130220413208
    4. 'return' → logprob: -2.9154129028320312
    5. '\n' → logprob: -4.540412902832031
    6. ' return' → logprob: -5.540412902832031
    7. '```' → logprob: -5.540412902832031
    8. '    
' → logprob: -5.665412902832031
    9. '	return' → logprob: -6.665412902832031
    10. ')' → logprob: -7.165412902832031

Token 147: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08781278133392334
    2. '<|end|>' → logprob: -3.462812900543213
    3. '   ' → logprob: -3.587812900543213
    4. '
' → logprob: -4.212812900543213
    5. ' return' → logprob: -5.587812900543213
    6. '```' → logprob: -5.962812900543213
    7. 'print' → logprob: -6.087812900543213
    8. '#' → logprob: -8.462812423706055
    9. '\' → logprob: -8.587812423706055
    10. '\n' → logprob: -8.587812423706055

Token 148: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019349466310814023
    2. 'print' (adapté à ' print') → logprob: -6.251935005187988
    3. ' return' → logprob: -12.376935005187988
    4. '   ' → logprob: -13.126935005187988
    5. '```' → logprob: -17.251934051513672
    6. 'result' → logprob: -17.376934051513672
    7. 'if' → logprob: -17.751934051513672
    8. '    
' → logprob: -17.876934051513672
    9. '_return' → logprob: -18.626934051513672
    10. '	return' → logprob: -18.876934051513672

Token 149: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00424294313415885
    2. '(' → logprob: -5.504242897033691
    3. '()' → logprob: -8.754242897033691
    4. 'result' → logprob: -12.504242897033691
    5. ' (' → logprob: -13.504242897033691
    6. '('' → logprob: -14.129242897033691
    7. '(results' → logprob: -15.254242897033691
    8. '((' → logprob: -16.004243850708008
    9. '(
' → logprob: -16.129243850708008
    10. '(Result' → logprob: -16.879243850708008

Token 150: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.5
    3. ' )' → logprob: -16.875
    4. ')`' → logprob: -17.375
    5. '))' → logprob: -17.75
    6. '')' → logprob: -18.25
    7. '`)' → logprob: -18.5
    8. '   ' → logprob: -18.875
    9. '）' → logprob: -19.375
    10. '()' → logprob: -19.75

Token 151: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.313269704580307
    2. '__' → logprob: -1.3132697343826294
    3. '_' → logprob: -12.56326961517334
    4. '_name' → logprob: -12.93826961517334
    5. '___' → logprob: -13.93826961517334
    6. ' ' → logprob: -14.93826961517334
    7. 'name' → logprob: -14.93826961517334
    8. ' ' → logprob: -15.18826961517334
    9. ' _' → logprob: -15.93826961517334
    10. '/__' → logprob: -16.313270568847656

Token 153: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023660030215978622
    2. '==' → logprob: -4.148660182952881
    3. ' ==' → logprob: -5.773660182952881
    4. '__.__' → logprob: -6.273660182952881
    5. 'name' → logprob: -6.648660182952881
    6. '()==' → logprob: -8.273659706115723
    7. '```' → logprob: -8.398659706115723
    8. '=="' → logprob: -8.898659706115723
    9. '()' → logprob: -9.523659706115723
    10. '_name' → logprob: -9.523659706115723

Token 154: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.5120287066092715e-05
    2. '==' → logprob: -10.625035285949707
    3. '___' → logprob: -12.875035285949707
    4. '=="' → logprob: -13.250035285949707
    5. '__
' → logprob: -13.375035285949707
    6. '__.__' → logprob: -13.625035285949707
    7. '__.' → logprob: -14.000035285949707
    8. '____' → logprob: -14.125035285949707
    9. ' ==' → logprob: -14.250035285949707
    10. 'main' → logprob: -14.875035285949707

Token 155: '=='' (ID: 20651)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8721710443496704
    2. ' ==' → logprob: -0.8721710443496704
    3. '==' → logprob: -1.9971710443496704
    4. '=="' → logprob: -3.997170925140381
    5. '=='' → logprob: -4.747170925140381
    6. '__.__' → logprob: -7.497170925140381
    7. '.__' → logprob: -8.747171401977539
    8. ' =="' → logprob: -9.497171401977539
    9. '"' → logprob: -9.997171401977539
    10. '.' → logprob: -10.122171401977539

Token 156: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.580929347255733e-05
    2. ''' → logprob: -11.250016212463379
    3. '"' → logprob: -12.875016212463379
    4. ' __' → logprob: -15.875016212463379
    5. '___' → logprob: -17.875015258789062
    6. 'main' → logprob: -18.125015258789062
    7. ' "__' → logprob: -19.000015258789062
    8. '____' → logprob: -19.125015258789062
    9. ' '__' → logprob: -20.000015258789062
    10. '_main' → logprob: -20.250015258789062

Token 157: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. 'name' → logprob: -15.0
    3. 'ma' → logprob: -17.75
    4. 'm' → logprob: -19.0
    5. ' main' → logprob: -19.125
    6. 'mai' → logprob: -20.0
    7. '_main' → logprob: -20.375
    8. 'mp' → logprob: -21.25
    9. 'maine' → logprob: -22.0
    10. '(main' → logprob: -22.875

Token 158: '__' (ID: 771)
  Prédit: '__':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.01821104995906353
    2. '__' → logprob: -4.0182108879089355
    3. '__":
' → logprob: -9.893211364746094
    4. '__:' → logprob: -11.518211364746094
    5. ':' → logprob: -15.143211364746094
    6. '__.' → logprob: -15.518211364746094
    7. '__('' → logprob: -16.893211364746094
    8. '__
' → logprob: -16.893211364746094
    9. '_' → logprob: -17.018211364746094
    10. '__.'/' → logprob: -17.768211364746094

Token 159: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011849920265376568
    2. ':
' → logprob: -6.751184940338135
    3. '():' → logprob: -11.626185417175293
    4. '():
' → logprob: -13.751185417175293
    5. ' :' → logprob: -14.001185417175293
    6. ':**' → logprob: -14.001185417175293
    7. ':

' → logprob: -14.251185417175293
    8. '__:' → logprob: -14.626185417175293
    9. '):' → logprob: -14.751185417175293
    10. ':def' → logprob: -14.876185417175293

Token 160: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007740193046629429
    2. ' e' → logprob: -5.382740020751953
    3. 'e' → logprob: -6.257740020751953
    4. '	e' → logprob: -6.882740020751953
    5. '   ' → logprob: -9.257740020751953
    6. '    
' → logprob: -10.632740020751953
    7. '```' → logprob: -11.382740020751953
    8. ' ' → logprob: -11.507740020751953
    9. '<|end|>' → logprob: -11.507740020751953
    10. '(e' → logprob: -12.382740020751953

Token 161: 'ureka' (ID: 86120)
  Prédit: 'ureka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ureka' → logprob: -0.006340164691209793
    2. 'ure' → logprob: -5.256340026855469
    3. 'ur' → logprob: -7.506340026855469
    4. 'u' → logprob: -8.131340026855469
    5. 'r' → logprob: -8.506340026855469
    6. 'urika' → logprob: -11.381340026855469
    7. 'urel' → logprob: -11.881340026855469
    8. 'e' → logprob: -11.881340026855469
    9. 'ureau' → logprob: -12.006340026855469
    10. 'urka' → logprob: -12.756340026855469

Token 162: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.881560041918419e-05
    2. '(' → logprob: -11.125039100646973
    3. '()
' → logprob: -11.375039100646973
    4. '()

' → logprob: -13.375039100646973
    5. '()`' → logprob: -13.375039100646973
    6. '()?' → logprob: -13.375039100646973
    7. '()]' → logprob: -13.625039100646973
    8. ' ()' → logprob: -13.750039100646973
    9. '()\' → logprob: -14.000039100646973
    10. '();' → logprob: -14.000039100646973


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 160
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 43.75%
Précision adaptée (1ère position): 46.25%
Précision (top 10): 81.25%
================================================================================
