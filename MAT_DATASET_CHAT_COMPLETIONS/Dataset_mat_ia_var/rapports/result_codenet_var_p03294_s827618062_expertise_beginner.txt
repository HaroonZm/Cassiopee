================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
L_input = input().split()
L = []
for i in L_input:
    L.append(int(i) - 1)
total = 0
for number in L:
    total += number
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'L' (ID: 43)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: '_input' (ID: 12507)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9998208284378052
    2. '=' → logprob: -1.4998208284378052
    3. ' =' → logprob: -1.6248208284378052
    4. '[' → logprob: -1.7498208284378052
    5. 'ist' → logprob: -3.9998207092285156
    6. 'i' → logprob: -5.874820709228516
    7. '_' → logprob: -6.124820709228516
    8. '.append' → logprob: -6.124820709228516
    9. '[i' → logprob: -6.249820709228516
    10. ')' → logprob: -6.374820709228516

Token 7: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -1.0017962455749512
    2. 'ines' → logprob: -1.6267962455749512
    3. ' =' → logprob: -1.7517962455749512
    4. '=' → logprob: -2.501796245574951
    5. 'ist' → logprob: -2.626796245574951
    6. 's' → logprob: -3.126796245574951
    7. '()' → logprob: -3.751796245574951
    8. '_' → logprob: -4.501796245574951
    9. 'st' → logprob: -4.751796245574951
    10. '(' → logprob: -5.626796245574951

Token 8: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7040334939956665
    2. 'input' → logprob: -1.3290334939956665
    3. '[input' → logprob: -1.7040334939956665
    4. ' list' → logprob: -3.704033374786377
    5. '[]' → logprob: -3.954033374786377
    6. '[' → logprob: -5.329033374786377
    7. '[list' → logprob: -5.329033374786377
    8. ' input' → logprob: -5.704033374786377
    9. '[int' → logprob: -7.204033374786377
    10. ' []' → logprob: -7.454033374786377

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06097469851374626
    2. '()' → logprob: -3.185974597930908
    3. '('' → logprob: -5.310974597930908
    4. ')' → logprob: -5.310974597930908
    5. ''' → logprob: -5.435974597930908
    6. '"' → logprob: -6.560974597930908
    7. '```' → logprob: -8.060975074768066
    8. '`' → logprob: -8.185975074768066
    9. ' ' → logprob: -8.560975074768066
    10. '(
' → logprob: -8.685975074768066

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01118410099297762
    2. 'strip' → logprob: -4.511184215545654
    3. 'rstrip' → logprob: -9.386183738708496
    4. ' split' → logprob: -10.386183738708496
    5. 'replace' → logprob: -10.886183738708496
    6. 'rs' → logprob: -13.636183738708496
    7. 'spl' → logprob: -14.011183738708496
    8. 's' → logprob: -15.636183738708496
    9. ' strip' → logprob: -15.636183738708496
    10. '(split' → logprob: -15.886183738708496

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.902556300163269
    2. '('' → logprob: -0.902556300163269
    3. '()' → logprob: -1.777556300163269
    4. '("("' → logprob: -4.027556419372559
    5. '(`' → logprob: -7.527556419372559
    6. '("' → logprob: -7.902556419372559
    7. ''' → logprob: -8.152556419372559
    8. '`' → logprob: -8.777556419372559
    9. '```' → logprob: -8.902556419372559
    10. '`()' → logprob: -9.027556419372559

Token 12: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00011939727846765891
    2. 'N' → logprob: -9.37511920928955
    3. '```' → logprob: -11.50011920928955
    4. 'A' → logprob: -11.87511920928955
    5. 'M' → logprob: -12.50011920928955
    6. ' L' → logprob: -12.87511920928955
    7. 'a' → logprob: -13.37511920928955
    8. 'numbers' → logprob: -13.75011920928955
    9. '`' → logprob: -14.00011920928955
    10. 'for' → logprob: -14.25011920928955

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08829929679632187
    2. '_' → logprob: -2.58829927444458
    3. '[]' → logprob: -6.46329927444458
    4. '_input' → logprob: -6.58829927444458
    5. '[_' → logprob: -6.71329927444458
    6. '[:]' → logprob: -7.33829927444458
    7. '```' → logprob: -7.33829927444458
    8. '\[' → logprob: -7.46329927444458
    9. '.' → logprob: -7.83829927444458
    10. ')' → logprob: -7.96329927444458

Token 14: ' []
' (ID: 8911)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5541366934776306
    2. 'list' → logprob: -1.3041367530822754
    3. ' list' → logprob: -2.0541367530822754
    4. ' [' → logprob: -3.9291367530822754
    5. '[' → logprob: -5.304136753082275
    6. '[int' → logprob: -7.304136753082275
    7. '[len' → logprob: -8.554136276245117
    8. '[L' → logprob: -9.429136276245117
    9. '[i' → logprob: -9.679136276245117
    10. '[List' → logprob: -10.054136276245117

Token 15: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006780977360904217
    2. ' for' → logprob: -5.006781101226807
    3. '```' → logprob: -9.756780624389648
    4. 'i' → logprob: -12.881780624389648
    5. 'f' → logprob: -13.756780624389648
    6. ' 
' → logprob: -13.881780624389648
    7. '[' → logprob: -14.381780624389648
    8. '`' → logprob: -14.506780624389648
    9. '``' → logprob: -15.006780624389648
    10. ' ```' → logprob: -15.631780624389648

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04342525824904442
    2. ' ' → logprob: -3.5434253215789795
    3. ' _' → logprob: -4.4184250831604
    4. '_' → logprob: -7.1684250831604
    5. 'i' → logprob: -7.2934250831604
    6. ' x' → logprob: -10.668425559997559
    7. ' e' → logprob: -11.543425559997559
    8. '  ' → logprob: -11.543425559997559
    9. ' ‌' → logprob: -11.668425559997559
    10. ' I' → logprob: -12.293425559997559

Token 17: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03839178755879402
    2. 'in' → logprob: -3.2883918285369873
    3. ' ' → logprob: -8.288392066955566
    4. '_' → logprob: -10.288392066955566
    5. 'n' → logprob: -11.163392066955566
    6. '  ' → logprob: -11.788392066955566
    7. ' i' → logprob: -11.788392066955566
    8. '	in' → logprob: -11.788392066955566
    9. 'range' → logprob: -11.788392066955566
    10. '=' → logprob: -12.788392066955566

Token 18: ' L' (ID: 451)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269361972808838
    2. 'range' → logprob: -2.126936197280884
    3. ' ' → logprob: -13.001935958862305
    4. ' L' → logprob: -13.251935958862305
    5. '	range' → logprob: -13.376935958862305
    6. ' xrange' → logprob: -14.001935958862305
    7. '(range' → logprob: -14.626935958862305
    8. 'L' → logprob: -14.751935958862305
    9. ')' → logprob: -15.501935958862305
    10. '_range' → logprob: -15.751935958862305

Token 19: '_input' (ID: 12507)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0602885484695435
    2. ':' → logprob: -1.1852885484695435
    3. 'n' → logprob: -2.435288429260254
    4. 'in' → logprob: -2.685288429260254
    5. 'range' → logprob: -3.310288429260254
    6. '[' → logprob: -3.435288429260254
    7. '.append' → logprob: -3.435288429260254
    8. '(range' → logprob: -4.060288429260254
    9. '_range' → logprob: -4.310288429260254
    10. '.' → logprob: -4.685288429260254

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009105884470045567
    2. ' :' → logprob: -5.134105682373047
    3. ' in' → logprob: -6.134105682373047
    4. 'in' → logprob: -7.759105682373047
    5. '[:]' → logprob: -8.384105682373047
    6. '):' → logprob: -8.884105682373047
    7. ')' → logprob: -10.259105682373047
    8. '=' → logprob: -10.384105682373047
    9. ':**' → logprob: -10.884105682373047
    10. '[:' → logprob: -10.884105682373047

Token 21: '   ' (ID: 271)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.020852848887443542
    2. '   ' → logprob: -4.270853042602539
    3. 'L' → logprob: -5.145853042602539
    4. '    ' → logprob: -7.395853042602539
    5. '```' → logprob: -8.895853042602539
    6. ' ' → logprob: -10.270853042602539
    7. '    
' → logprob: -11.020853042602539
    8. ' `' → logprob: -11.520853042602539
    9. ' ```' → logprob: -11.770853042602539
    10. '	L' → logprob: -12.270853042602539

Token 22: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.11286479234695435
    2. ' L' → logprob: -2.2378647327423096
    3. '   ' → logprob: -10.36286449432373
    4. '    ' → logprob: -12.36286449432373
    5. '```' → logprob: -13.23786449432373
    6. 'int' → logprob: -13.36286449432373
    7. ' ' → logprob: -14.48786449432373
    8. 'N' → logprob: -14.61286449432373
    9. '0' → logprob: -14.61286449432373
    10. 'i' → logprob: -15.36286449432373

Token 23: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3132994472980499
    2. '.' → logprob: -1.3132994174957275
    3. 'append' → logprob: -10.688299179077148
    4. '.extend' → logprob: -11.938299179077148
    5. '.app' → logprob: -12.938299179077148
    6. '.ap' → logprob: -13.563299179077148
    7. '_append' → logprob: -14.063299179077148
    8. ' .' → logprob: -14.188299179077148
    9. '.add' → logprob: -14.313299179077148
    10. '.push' → logprob: -14.438299179077148

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.019197478890419006
    2. '(' → logprob: -4.019197463989258
    3. '(i' → logprob: -6.894197463989258
    4. 'int' → logprob: -10.644197463989258
    5. '((' → logprob: -12.269197463989258
    6. '(in' → logprob: -13.644197463989258
    7. ' (' → logprob: -13.894197463989258
    8. '(eval' → logprob: -14.269197463989258
    9. '(
' → logprob: -14.644197463989258
    10. '(float' → logprob: -15.019197463989258

Token 25: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.038042180240154266
    2. '(' → logprob: -3.2880420684814453
    3. '()' → logprob: -15.163042068481445
    4. '(
' → logprob: -15.913042068481445
    5. ')' → logprob: -16.413042068481445
    6. '(`' → logprob: -16.663042068481445
    7. '('' → logprob: -17.288042068481445
    8. ')(' → logprob: -17.288042068481445
    9. '(

' → logprob: -17.288042068481445
    10. '((' → logprob: -17.413042068481445

Token 26: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31327205896377563
    2. ')' → logprob: -1.3132719993591309
    3. ')))' → logprob: -11.813272476196289
    4. ' ))' → logprob: -14.063272476196289
    5. ')
' → logprob: -14.188272476196289
    6. '))
' → logprob: -14.313272476196289
    7. '),' → logprob: -14.938272476196289
    8. ' )' → logprob: -15.688272476196289
    9. ''))' → logprob: -16.56327247619629
    10. ' ' → logprob: -17.06327247619629

Token 27: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.25000286102295
    3. '))' → logprob: -14.25000286102295
    4. ' )' → logprob: -15.62500286102295
    5. '`)' → logprob: -17.375001907348633
    6. '')' → logprob: -18.000001907348633
    7. ')

' → logprob: -18.375001907348633
    8. ')`' → logprob: -18.375001907348633
    9. ')))' → logprob: -18.750001907348633
    10. '),' → logprob: -18.750001907348633

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3133043050765991
    2. '1' → logprob: -1.3133043050765991
    3. ' N' → logprob: -11.06330394744873
    4. '2' → logprob: -12.31330394744873
    5. '0' → logprob: -12.93830394744873
    6. '  ' → logprob: -13.06330394744873
    7. ' i' → logprob: -13.31330394744873
    8. ' (' → logprob: -13.31330394744873
    9. '3' → logprob: -13.68830394744873
    10. ')' → logprob: -13.68830394744873

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004640049301087856
    2. ' ' → logprob: -5.379640102386475
    3. '2' → logprob: -12.004639625549316
    4. '0' → logprob: -12.379639625549316
    5. '3' → logprob: -13.504639625549316
    6. 'min' → logprob: -14.192139625549316
    7. '100' → logprob: -14.192139625549316
    8. '(' → logprob: -14.442139625549316
    9. '-' → logprob: -14.504639625549316
    10. '4' → logprob: -14.692139625549316

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.375021934509277
    4. ')

' → logprob: -16.750022888183594
    5. '))' → logprob: -17.125022888183594
    6. ')`' → logprob: -18.000022888183594
    7. ')
' → logprob: -18.500022888183594
    8. '`)' → logprob: -18.500022888183594
    9. ')#' → logprob: -18.500022888183594
    10. ')return' → logprob: -19.375022888183594

Token 31: 'total' (ID: 9577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13682152330875397
    2. '\n' → logprob: -3.2618215084075928
    3. '<|end|>' → logprob: -3.3868215084075928
    4. '#' → logprob: -4.511821746826172
    5. 'for' → logprob: -4.511821746826172
    6. ')' → logprob: -5.011821746826172
    7. ' ' → logprob: -5.011821746826172
    8. ' 
' → logprob: -5.636821746826172
    9. '' → logprob: -5.761821746826172
    10. '[' → logprob: -5.886821746826172

Token 32: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11437086760997772
    2. '_sum' → logprob: -2.989370822906494
    3. '_count' → logprob: -3.239370822906494
    4. 's' → logprob: -5.864370822906494
    5. '_space' → logprob: -5.864370822906494
    6. '_s' → logprob: -5.989370822906494
    7. '_counts' → logprob: -5.989370822906494
    8. ' =' → logprob: -6.739370822906494
    9. '(' → logprob: -6.989370822906494
    10. ' _' → logprob: -7.489370822906494

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6346208453178406
    2. ' ' → logprob: -1.5096209049224854
    3. 'sum' → logprob: -2.6346209049224854
    4. ' sum' → logprob: -2.7596209049224854
    5. ' len' → logprob: -2.8846209049224854
    6. 'len' → logprob: -3.2596209049224854
    7. ' N' → logprob: -4.634620666503906
    8. 'N' → logprob: -5.509620666503906
    9. '1' → logprob: -6.509620666503906
    10. ' L' → logprob: -6.884620666503906

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8158532977104187
    2. 'sum' → logprob: -1.0658533573150635
    3. 'len' → logprob: -1.8158533573150635
    4. 'N' → logprob: -3.3158533573150635
    5. 'max' → logprob: -4.815853118896484
    6. '1' → logprob: -6.315853118896484
    7. 'L' → logprob: -7.440853118896484
    8. '(sum' → logprob: -7.690853118896484
    9. '(len' → logprob: -7.940853118896484
    10. '(' → logprob: -7.940853118896484

Token 35: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16530859470367432
    2. 'for' → logprob: -1.9153085947036743
    3. ' for' → logprob: -5.915308475494385
    4. '\n' → logprob: -6.290308475494385
    5. '
' → logprob: -8.915308952331543
    6. '<|end|>' → logprob: -8.915308952331543
    7. '' → logprob: -9.165308952331543
    8. '```' → logprob: -10.040308952331543
    9. '\' → logprob: -10.165308952331543
    10. ' 
' → logprob: -10.915308952331543

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004842962371185422
    2. '
' → logprob: -7.875484466552734
    3. '\n' → logprob: -9.500484466552734
    4. '```' → logprob: -11.375484466552734
    5. ' for' → logprob: -11.750484466552734
    6. 'n' → logprob: -12.250484466552734
    7. '\' → logprob: -12.750484466552734
    8. '' → logprob: -14.875484466552734
    9. 'range' → logprob: -15.000484466552734
    10. 'f' → logprob: -15.250484466552734

Token 37: ' number' (ID: 2086)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.15846939384937286
    2. 'i' → logprob: -2.0334694385528564
    3. ' x' → logprob: -5.533469200134277
    4. 'x' → logprob: -6.033469200134277
    5. '_' → logprob: -6.158469200134277
    6. ' l' → logprob: -6.283469200134277
    7. ' ' → logprob: -6.783469200134277
    8. ' num' → logprob: -7.283469200134277
    9. ' _' → logprob: -7.408469200134277
    10. ' L' → logprob: -7.658469200134277

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023609977215528488
    2. 'in' → logprob: -3.7736098766326904
    3. 's' → logprob: -8.64861011505127
    4. ' ' → logprob: -9.14861011505127
    5. '_' → logprob: -11.14861011505127
    6. '  ' → logprob: -11.27361011505127
    7. '_in' → logprob: -11.77361011505127
    8. '<|end|>' → logprob: -11.77361011505127
    9. ' i' → logprob: -12.14861011505127
    10. ',' → logprob: -12.46111011505127

Token 39: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.2527077794075012
    2. 'L' → logprob: -1.5027077198028564
    3. ' range' → logprob: -7.2527079582214355
    4. 'range' → logprob: -9.627707481384277
    5. ' ' → logprob: -12.877707481384277
    6. 'Range' → logprob: -14.377707481384277
    7. '	L' → logprob: -14.877707481384277
    8. '(L' → logprob: -15.877707481384277
    9. ' ' → logprob: -16.002708435058594
    10. '<|end|>' → logprob: -16.127708435058594

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.840432565193623e-05
    2. ':
' → logprob: -10.000088691711426
    3. ' :' → logprob: -11.375088691711426
    4. '+' → logprob: -11.375088691711426
    5. '=' → logprob: -11.875088691711426
    6. ':**' → logprob: -12.750088691711426
    7. '+:' → logprob: -12.875088691711426
    8. '[' → logprob: -13.125088691711426
    9. '>' → logprob: -14.000088691711426
    10. '   ' → logprob: -14.125088691711426

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6354365944862366
    2. ' total' → logprob: -1.0104365348815918
    3. 'total' → logprob: -2.760436534881592
    4. ' ' → logprob: -3.385436534881592
    5. ' 
' → logprob: -6.135436534881592
    6. '    ' → logprob: -6.260436534881592
    7. '    
' → logprob: -6.510436534881592
    8. '<|end|>' → logprob: -6.885436534881592
    9. '	total' → logprob: -7.010436534881592
    10. '(total' → logprob: -7.760436534881592

Token 42: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2515391707420349
    2. 'total' (adapté à ' total') → logprob: -1.6265392303466797
    3. '   ' → logprob: -3.7515392303466797
    4. ' if' → logprob: -6.87653923034668
    5. ' for' → logprob: -7.12653923034668
    6. 'for' → logprob: -8.87653923034668
    7. 'if' → logprob: -9.12653923034668
    8. ' range' → logprob: -9.37653923034668
    9. 'range' → logprob: -10.12653923034668
    10. '	total' → logprob: -10.12653923034668

Token 43: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.08932558447122574
    2. ' +=' → logprob: -2.4643256664276123
    3. '+' → logprob: -7.964325428009033
    4. '=' → logprob: -10.964325904846191
    5. ']+=' → logprob: -11.714325904846191
    6. '+=(' → logprob: -12.339325904846191
    7. '+='' → logprob: -12.839325904846191
    8. '++' → logprob: -13.714325904846191
    9. '<|end|>' → logprob: -13.839325904846191
    10. '+="' → logprob: -13.964325904846191

Token 44: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.03860629349946976
    2. ' number' → logprob: -3.2886064052581787
    3. '1' → logprob: -7.7886061668396
    4. '(number' → logprob: -9.538606643676758
    5. ' ' → logprob: -10.913606643676758
    6. 'L' → logprob: -11.163606643676758
    7. '(' → logprob: -11.413606643676758
    8. ' (' → logprob: -11.663606643676758
    9. ' L' → logprob: -11.788606643676758
    10. 'pow' → logprob: -13.038606643676758

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.055350929498672485
    2. '
' → logprob: -3.3053510189056396
    3. '<|end|>' → logprob: -4.4303507804870605
    4. '+' → logprob: -6.1803507804870605
    5. ' print' → logprob: -7.4303507804870605
    6. ')' → logprob: -7.4303507804870605
    7. '%' → logprob: -7.8053507804870605
    8. '#' → logprob: -8.430351257324219
    9. ' ' → logprob: -8.430351257324219
    10. '\n' → logprob: -8.555351257324219

Token 47: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04866469278931618
    2. '(total' → logprob: -3.0486648082733154
    3. '('' → logprob: -10.298665046691895
    4. '("("' → logprob: -10.798665046691895
    5. '()' → logprob: -12.048665046691895
    6. '(sum' → logprob: -12.423665046691895
    7. ' (' → logprob: -12.548665046691895
    8. '((' → logprob: -12.798665046691895
    9. 'total' → logprob: -13.173665046691895
    10. '(`' → logprob: -13.548665046691895

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.12500286102295
    3. '+' → logprob: -14.87500286102295
    4. '))' → logprob: -15.50000286102295
    5. ')`' → logprob: -16.875001907348633
    6. ')
' → logprob: -17.125001907348633
    7. '#' → logprob: -18.125001907348633
    8. '}' → logprob: -18.250001907348633
    9. '`)' → logprob: -18.375001907348633
    10. '*' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 41.30%
Précision adaptée (1ère position): 43.48%
Précision (top 10): 69.57%
================================================================================
