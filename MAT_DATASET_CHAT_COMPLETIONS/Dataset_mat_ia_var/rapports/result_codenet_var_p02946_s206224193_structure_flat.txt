================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
k, x = map(int, input().split())
i = x - k + 1
while i < x + k:
    if i >= -1000000 and i <= 1000000:
        print(i, end=' ')
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'k' (ID: 74)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' x' (ID: 1215)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04045657068490982
    2. ',' → logprob: -3.665456533432007
    3. ' =' → logprob: -4.415456771850586
    4. '[' → logprob: -6.790456771850586
    5. '.' → logprob: -7.915456771850586
    6. ')' → logprob: -8.915456771850586
    7. ':' → logprob: -9.165456771850586
    8. '+' → logprob: -9.415456771850586
    9. ' ' → logprob: -9.915456771850586
    10. ';' → logprob: -10.665456771850586

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45525625348091125
    2. '0' → logprob: -1.2052562236785889
    3. '1' → logprob: -3.455256223678589
    4. ' k' → logprob: -4.330256462097168
    5. 'map' → logprob: -5.205256462097168
    6. ' map' → logprob: -5.205256462097168
    7. '10' → logprob: -5.955256462097168
    8. 'k' → logprob: -6.080256462097168
    9. '5' → logprob: -6.205256462097168
    10. 'y' → logprob: -7.830256462097168

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023826509714126587
    2. '(lambda' → logprob: -4.398826599121094
    3. '```' → logprob: -5.148826599121094
    4. '(int' → logprob: -6.148826599121094
    5. '<|end|>' → logprob: -6.898826599121094
    6. '(str' → logprob: -7.273826599121094
    7. ')' → logprob: -8.148826599121094
    8. '[int' → logprob: -8.523826599121094
    9. '(k' → logprob: -9.148826599121094
    10. '[' → logprob: -9.273826599121094

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13966067135334015
    2. ')' → logprob: -2.389660596847534
    3. '(' → logprob: -3.389660596847534
    4. 'input' → logprob: -6.389660835266113
    5. '<|end|>' → logprob: -7.139660835266113
    6. '(user' → logprob: -7.639660835266113
    7. ',' → logprob: -8.264660835266113
    8. ',input' → logprob: -8.389660835266113
    9. '),' → logprob: -8.889660835266113
    10. '[input' → logprob: -9.014660835266113

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519770860671997
    2. ' input' → logprob: -1.5019770860671997
    3. ')' → logprob: -10.50197696685791
    4. '(input' → logprob: -10.87697696685791
    5. ',input' → logprob: -14.12697696685791
    6. ' )' → logprob: -15.62697696685791
    7. ' ' → logprob: -15.75197696685791
    8. '=input' → logprob: -16.001977920532227
    9. '	input' → logprob: -16.501977920532227
    10. '[input' → logprob: -16.626977920532227

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7233978509902954
    2. '(' → logprob: -1.2233978509902954
    3. '()' → logprob: -2.223397731781006
    4. ')' → logprob: -3.348397731781006
    5. '`()' → logprob: -4.223397731781006
    6. '(()' → logprob: -4.473397731781006
    7. '```' → logprob: -5.098397731781006
    8. '(""))' → logprob: -5.223397731781006
    9. '(token' → logprob: -5.348397731781006
    10. '('' → logprob: -5.348397731781006

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019090480054728687
    2. 'strip' → logprob: -8.625190734863281
    3. 'rstrip' → logprob: -12.000190734863281
    4. ' split' → logprob: -12.875190734863281
    5. ')' → logprob: -13.375190734863281
    6. '(split' → logprob: -14.625190734863281
    7. 'read' → logprob: -15.125190734863281
    8. 'spl' → logprob: -15.625190734863281
    9. '```' → logprob: -16.00019073486328
    10. 'startswith' → logprob: -17.00019073486328

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10764747858047485
    2. '))' → logprob: -2.98264741897583
    3. '())' → logprob: -2.98264741897583
    4. '()' → logprob: -8.107647895812988
    5. '()))' → logprob: -8.357647895812988
    6. '`)' → logprob: -9.232647895812988
    7. ')`' → logprob: -10.607647895812988
    8. ')))' → logprob: -10.857647895812988
    9. '),' → logprob: -11.732647895812988
    10. '```' → logprob: -11.982647895812988

Token 11: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.143236756324768
    2. ',' → logprob: -1.893236756324768
    3. 'if' → logprob: -2.0182366371154785
    4. '+' → logprob: -2.3932366371154785
    5. 'i' → logprob: -2.6432366371154785
    6. 'a' → logprob: -2.7682366371154785
    7. 'y' → logprob: -3.6432366371154785
    8. 'for' → logprob: -3.7682366371154785
    9. '\n' → logprob: -3.8932366371154785
    10. '#' → logprob: -4.5182366371154785

Token 12: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05695700645446777
    2. 'n' → logprob: -3.0569570064544678
    3. '+' → logprob: -5.181957244873047
    4. '=' → logprob: -6.431957244873047
    5. 't' → logprob: -8.306957244873047
    6. 'nt' → logprob: -8.431957244873047
    7. 's' → logprob: -8.556957244873047
    8. 'nd' → logprob: -8.931957244873047
    9. ' =' → logprob: -9.556957244873047
    10. ' +=' → logprob: -9.931957244873047

Token 13: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01632373221218586
    2. ' ' → logprob: -4.766323566436768
    3. '1' → logprob: -5.516323566436768
    4. 'k' → logprob: -6.266323566436768
    5. 'x' → logprob: -6.516323566436768
    6. ' k' → logprob: -8.766324043273926
    7. ' x' → logprob: -9.141324043273926
    8. 'i' → logprob: -12.766324043273926
    9. 'int' → logprob: -12.891324043273926
    10. '2' → logprob: -12.891324043273926

Token 14: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048886653035879135
    2. '-' → logprob: -3.79888653755188
    3. ' +' → logprob: -4.173886775970459
    4. ' ' → logprob: -5.298886775970459
    5. '+
' → logprob: -6.923886775970459
    6. 'n' → logprob: -7.298886775970459
    7. ')' → logprob: -7.673886775970459
    8. '>' → logprob: -7.673886775970459
    9. '=' → logprob: -8.1738862991333
    10. ',' → logprob: -8.1738862991333

Token 15: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.46117809414863586
    2. 'k' → logprob: -1.0861780643463135
    3. ' k' → logprob: -4.086178302764893
    4. ' ' → logprob: -4.211178302764893
    5. '(k' → logprob: -9.711177825927734
    6. '2' → logprob: -10.211177825927734
    7. 'i' → logprob: -10.336177825927734
    8. '0' → logprob: -10.586177825927734
    9. 'x' → logprob: -10.711177825927734
    10. '5' → logprob: -10.711177825927734

Token 16: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13816460967063904
    2. ' +' → logprob: -3.263164520263672
    3. ' ' → logprob: -3.638164520263672
    4. '>' → logprob: -4.138164520263672
    5. '%' → logprob: -4.763164520263672
    6. ':' → logprob: -4.888164520263672
    7. ' if' → logprob: -5.013164520263672
    8. ')' → logprob: -5.638164520263672
    9. '-' → logprob: -5.763164520263672
    10. '```' → logprob: -5.888164520263672

Token 17: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015159345930442214
    2. ' ' → logprob: -6.501515865325928
    3. '2' → logprob: -12.251516342163086
    4. '0' → logprob: -12.751516342163086
    5. '3' → logprob: -14.001516342163086
    6. 'k' → logprob: -14.126516342163086
    7. '10' → logprob: -14.126516342163086
    8. ' k' → logprob: -14.626516342163086
    9. 'int' → logprob: -14.876516342163086
    10. '100' → logprob: -14.876516342163086

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.400689305039123e-05
    2. '2' → logprob: -9.875094413757324
    3. '0' → logprob: -11.000094413757324
    4. ' ' → logprob: -11.500094413757324
    5. 'k' → logprob: -12.000094413757324
    6. '3' → logprob: -13.000094413757324
    7. 'i' → logprob: -13.625094413757324
    8. '10' → logprob: -13.750094413757324
    9. '-' → logprob: -14.000094413757324
    10. '4' → logprob: -14.250094413757324

Token 19: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08933462202548981
    2. 'i' → logprob: -2.464334726333618
    3. ' k' → logprob: -8.964334487915039
    4. ' ' → logprob: -9.589334487915039
    5. ' x' → logprob: -9.589334487915039
    6. 'k' → logprob: -10.089334487915039
    7. 'x' → logprob: -10.589334487915039
    8. '(i' → logprob: -10.714334487915039
    9. ' True' → logprob: -11.214334487915039
    10. '	i' → logprob: -11.589334487915039

Token 22: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.017982173711061478
    2. ' <' → logprob: -4.392982006072998
    3. ' >' → logprob: -5.892982006072998
    4. '<=' → logprob: -6.267982006072998
    5. '<' → logprob: -8.267982482910156
    6. ' >=' → logprob: -8.267982482910156
    7. ' ' → logprob: -8.642982482910156
    8. '>' → logprob: -9.642982482910156
    9. '```' → logprob: -11.767982482910156
    10. ')' → logprob: -12.017982482910156

Token 23: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08579867333173752
    2. 'x' → logprob: -3.710798740386963
    3. 'k' → logprob: -3.710798740386963
    4. '0' → logprob: -4.460798740386963
    5. '=k' → logprob: -5.085798740386963
    6. '=x' → logprob: -5.460798740386963
    7. ' x' → logprob: -5.710798740386963
    8. ' k' → logprob: -6.210798740386963
    9. ' ' → logprob: -6.460798740386963
    10. '100' → logprob: -6.835798740386963

Token 24: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007701268419623375
    2. ' :' → logprob: -5.257701396942139
    3. ':
' → logprob: -6.257701396942139
    4. '+' → logprob: -8.38270092010498
    5. '+:' → logprob: -8.88270092010498
    6. ' :
' → logprob: -9.13270092010498
    7. '   ' → logprob: -10.63270092010498
    8. ',' → logprob: -11.50770092010498
    9. ' +' → logprob: -12.25770092010498
    10. ' and' → logprob: -12.25770092010498

Token 25: ' k' (ID: 372)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16781890392303467
    2. 'k' → logprob: -2.042819023132324
    3. '2' → logprob: -4.042819023132324
    4. 'i' → logprob: -6.042819023132324
    5. '10' → logprob: -6.292819023132324
    6. ' ' → logprob: -7.417819023132324
    7. '3' → logprob: -7.917819023132324
    8. '5' → logprob: -7.917819023132324
    9. '4' → logprob: -8.167819023132324
    10. '100' → logprob: -8.292819023132324

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00475027272477746
    2. ':
' → logprob: -5.6297502517700195
    3. ' :' → logprob: -7.0047502517700195
    4. '+' → logprob: -9.25475025177002
    5. '+:' → logprob: -9.62975025177002
    6. ' :
' → logprob: -10.62975025177002
    7. '):' → logprob: -11.00475025177002
    8. ' and' → logprob: -11.50475025177002
    9. '   ' → logprob: -12.50475025177002
    10. '1' → logprob: -12.75475025177002

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5102980136871338
    2. ':' → logprob: -1.2602980136871338
    3. '    ' → logprob: -2.510298013687134
    4. ' ' → logprob: -4.510297775268555
    5. '```' → logprob: -5.135297775268555
    6. ':
' → logprob: -5.510297775268555
    7. ' :' → logprob: -6.010297775268555
    8. '    
' → logprob: -6.135297775268555
    9. '     
' → logprob: -7.010297775268555
    10. ' if' → logprob: -7.010297775268555

Token 28: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5201566815376282
    2. '   ' → logprob: -1.6451566219329834
    3. ' print' → logprob: -1.6451566219329834
    4. 'if' (adapté à ' if') → logprob: -4.8951568603515625
    5. ' if' → logprob: -5.0201568603515625
    6. ' i' → logprob: -6.0201568603515625
    7. 'i' → logprob: -6.5201568603515625
    8. '```' → logprob: -7.1451568603515625
    9. ' for' → logprob: -8.270156860351562
    10. 'for' → logprob: -8.520156860351562

Token 29: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.055402468889951706
    2. 'i' → logprob: -3.4304025173187256
    3. ' ' → logprob: -5.3054022789001465
    4. ' abs' → logprob: -5.3054022789001465
    5. ' x' → logprob: -5.4304022789001465
    6. ' (' → logprob: -6.0554022789001465
    7. 'abs' → logprob: -6.5554022789001465
    8. 'x' → logprob: -6.6804022789001465
    9. '(i' → logprob: -7.1804022789001465
    10. '(' → logprob: -7.6804022789001465

Token 30: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2535073459148407
    2. '==' → logprob: -3.003507375717163
    3. ' >' → logprob: -3.128507375717163
    4. ' <=' → logprob: -3.378507375717163
    5. ' %' → logprob: -3.378507375717163
    6. ' >=' → logprob: -3.503507375717163
    7. '%' → logprob: -4.253507137298584
    8. '>' → logprob: -4.753507137298584
    9. ' <' → logprob: -5.628507137298584
    10. ' !=' → logprob: -5.878507137298584

Token 31: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14320027828216553
    2. ' ' → logprob: -2.393200397491455
    3. '1' → logprob: -3.268200397491455
    4. 'k' → logprob: -5.893200397491455
    5. 'x' → logprob: -7.393200397491455
    6. ' k' → logprob: -8.018199920654297
    7. ' x' → logprob: -8.893199920654297
    8. '-' → logprob: -9.893199920654297
    9. '2' → logprob: -10.268199920654297
    10. ' -' → logprob: -10.393199920654297

Token 32: '100' (ID: 1353)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07382819056510925
    2. 'x' → logprob: -2.9488282203674316
    3. '(k' → logprob: -5.698828220367432
    4. '100' → logprob: -5.823828220367432
    5. '10' → logprob: -6.073828220367432
    6. '1' → logprob: -6.073828220367432
    7. '(' → logprob: -6.323828220367432
    8. '5' → logprob: -6.823828220367432
    9. '(x' → logprob: -7.323828220367432
    10. '50' → logprob: -7.573828220367432

Token 33: '000' (ID: 1302)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22942130267620087
    2. 'and' → logprob: -2.104421377182007
    3. '0' → logprob: -2.729421377182007
    4. '000' → logprob: -4.479421138763428
    5. '00' → logprob: -5.104421138763428
    6. ' ' → logprob: -8.104421615600586
    7. ':' → logprob: -10.479421615600586
    8. '   ' → logprob: -11.104421615600586
    9. ' or' → logprob: -11.604421615600586
    10. '<' → logprob: -11.604421615600586

Token 34: '0' (ID: 15)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023182695731520653
    2. 'and' → logprob: -4.2731828689575195
    3. '0' → logprob: -4.7731828689575195
    4. ' ' → logprob: -8.02318286895752
    5. '000' → logprob: -9.14818286895752
    6. '00' → logprob: -10.27318286895752
    7. ' or' → logprob: -10.52318286895752
    8. '   ' → logprob: -11.27318286895752
    9. ':' → logprob: -12.02318286895752
    10. '```' → logprob: -12.52318286895752

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010024980641901493
    2. 'and' → logprob: -4.6350250244140625
    3. '   ' → logprob: -8.885025024414062
    4. ' ' → logprob: -9.260025024414062
    5. ':' → logprob: -11.135025024414062
    6. '    ' → logprob: -11.510025024414062
    7. '0' → logprob: -12.885025024414062
    8. '<|end|>' → logprob: -12.885025024414062
    9. '```' → logprob: -13.885025024414062
    10. '  ' → logprob: -14.010025024414062

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2843879461288452
    2. ' i' → logprob: -1.4093879461288452
    3. '   ' → logprob: -6.159388065338135
    4. ' ' → logprob: -7.284388065338135
    5. '  ' → logprob: -8.409387588500977
    6. '100' → logprob: -9.284387588500977
    7. '    ' → logprob: -9.534387588500977
    8. '     ' → logprob: -11.659387588500977
    9. 'x' → logprob: -11.784387588500977
    10. '	i' → logprob: -12.784387588500977

Token 37: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.010084343142807484
    2. '<=' → logprob: -4.63508415222168
    3. '<|end|>' → logprob: -8.88508415222168
    4. ' <' → logprob: -9.01008415222168
    5. ' ' → logprob: -10.26008415222168
    6. '<' → logprob: -11.63508415222168
    7. '```' → logprob: -11.63508415222168
    8. '<|end|>' → logprob: -12.88508415222168
    9. ' <=",' → logprob: -13.51008415222168
    10. '   ' → logprob: -13.51008415222168

Token 38: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.08902736753225327
    2. ' ' → logprob: -2.4640274047851562
    3. '1' → logprob: -10.089027404785156
    4. '  ' → logprob: -11.089027404785156
    5. '10' → logprob: -12.151527404785156
    6. '   ' → logprob: -12.151527404785156
    7. '9' → logprob: -12.776527404785156
    8. 's' → logprob: -12.839027404785156
    9. '999' → logprob: -13.026527404785156
    10. '0' → logprob: -13.089027404785156

Token 39: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.002888682996854186
    2. ' ' → logprob: -5.8778886795043945
    3. '1' → logprob: -10.002888679504395
    4. '10' → logprob: -11.752888679504395
    5. '  ' → logprob: -12.190388679504395
    6. '0' → logprob: -12.252888679504395
    7. '999' → logprob: -12.252888679504395
    8. '   ' → logprob: -12.877888679504395
    9. '9' → logprob: -13.252888679504395
    10. '6' → logprob: -13.752888679504395

Token 40: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.000193527273950167
    2. ' ' → logprob: -9.62519359588623
    3. '   ' → logprob: -9.87519359588623
    4. '6' → logprob: -10.75019359588623
    5. '999' → logprob: -11.75019359588623
    6. '+' → logprob: -11.87519359588623
    7. 'i' → logprob: -12.50019359588623
    8. '100' → logprob: -12.50019359588623
    9. '500' → logprob: -12.62519359588623
    10. '     ' → logprob: -12.87519359588623

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13897308707237244
    2. '6' → logprob: -2.8889729976654053
    3. ':' → logprob: -3.0139729976654053
    4. 'and' → logprob: -4.638973236083984
    5. '9' → logprob: -4.638973236083984
    6. '```' → logprob: -6.638973236083984
    7. ' and' → logprob: -6.763973236083984
    8. '7' → logprob: -7.263973236083984
    9. ' ' → logprob: -7.388973236083984
    10. '3' → logprob: -7.638973236083984

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028108205646276474
    2. ' and' → logprob: -3.7781081199645996
    3. ':
' → logprob: -5.6531081199646
    4. 'and' → logprob: -6.9031081199646
    5. '   ' → logprob: -9.028108596801758
    6. ' :' → logprob: -9.403108596801758
    7. '):' → logprob: -9.903108596801758
    8. '       ' → logprob: -10.028108596801758
    9. ',' → logprob: -11.403108596801758
    10. '):
' → logprob: -11.903108596801758

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025737560354173183
    2. ':' → logprob: -6.7525739669799805
    3. '<|end|>' → logprob: -7.3775739669799805
    4. ',' → logprob: -9.00257396697998
    5. '\n' → logprob: -9.37757396697998
    6. '   ' → logprob: -9.50257396697998
    7. '    ' → logprob: -9.75257396697998
    8. 'print' → logprob: -10.00257396697998
    9. ' ' → logprob: -10.00257396697998
    10. '        
' → logprob: -10.12757396697998

Token 44: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.44547799229621887
    2. 'print' (adapté à ' print') → logprob: -1.0704779624938965
    3. '       ' → logprob: -4.4454779624938965
    4. ' ' → logprob: -5.9454779624938965
    5. '           ' → logprob: -7.0704779624938965
    6. ' for' → logprob: -7.6954779624938965
    7. '```' → logprob: -8.570478439331055
    8. ' if' → logprob: -8.820478439331055
    9. ' ' → logprob: -8.945478439331055
    10. '   ' → logprob: -8.945478439331055

Token 45: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010352561250329018
    2. '(' → logprob: -4.635352611541748
    3. '(f' → logprob: -8.51035213470459
    4. '('' → logprob: -9.01035213470459
    5. '(abs' → logprob: -9.01035213470459
    6. 'i' → logprob: -9.38535213470459
    7. '("' → logprob: -10.88535213470459
    8. '()' → logprob: -11.01035213470459
    9. '(chr' → logprob: -11.51035213470459
    10. ' (' → logprob: -12.13535213470459

Token 46: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010000905022025108
    2. ',' → logprob: -5.510000705718994
    3. ')
' → logprob: -5.885000705718994
    4. ' )' → logprob: -6.510000705718994
    5. '   ' → logprob: -6.760000705718994
    6. '       ' → logprob: -8.260001182556152
    7. '    ' → logprob: -10.510001182556152
    8. ' ,' → logprob: -11.010001182556152
    9. ' )
' → logprob: -11.135001182556152
    10. '+' → logprob: -11.260001182556152

Token 47: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0636410266160965
    2. ')' → logprob: -3.56364107131958
    3. 'i' → logprob: -4.56364107131958
    4. ' end' → logprob: -5.06364107131958
    5. ' ' → logprob: -5.43864107131958
    6. '"' → logprob: -5.56364107131958
    7. '(i' → logprob: -6.43864107131958
    8. ''' → logprob: -6.56364107131958
    9. ''end' → logprob: -6.81364107131958
    10. '(end' → logprob: -7.18864107131958

Token 48: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.029569502919912338
    2. '=' → logprob: -3.654569387435913
    3. '=',' → logprob: -6.404569625854492
    4. '="' → logprob: -6.529569625854492
    5. ''' → logprob: -9.654569625854492
    6. '=",' → logprob: -10.404569625854492
    7. '=''' → logprob: -10.654569625854492
    8. ' ='' → logprob: -11.779569625854492
    9. '"' → logprob: -12.029569625854492
    10. '=

' → logprob: -12.029569625854492

Token 49: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04476424679160118
    2. ' ' → logprob: -3.169764280319214
    3. '"' → logprob: -6.669764041900635
    4. ' )' → logprob: -8.419764518737793
    5. ' '' → logprob: -8.919764518737793
    6. ')' → logprob: -9.794764518737793
    7. ',' → logprob: -10.169764518737793
    8. ' ,' → logprob: -10.794764518737793
    9. '',' → logprob: -11.919764518737793
    10. '  ' → logprob: -12.732264518737793

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041150785982608795
    2. 'i' → logprob: -3.2911508083343506
    3. ' i' → logprob: -5.9161505699157715
    4. '    
' → logprob: -8.29115104675293
    5. '	i' → logprob: -10.29115104675293
    6. '```' → logprob: -10.41615104675293
    7. '
' → logprob: -10.54115104675293
    8. ' 
' → logprob: -11.29115104675293
    9. '       ' → logprob: -11.41615104675293
    10. ' ' → logprob: -11.91615104675293

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.002495279535651207
    2. '   ' → logprob: -6.002495288848877
    3. ' i' → logprob: -11.002494812011719
    4. '```' → logprob: -13.252494812011719
    5. '	i' → logprob: -14.127494812011719
    6. ' ' → logprob: -15.752494812011719
    7. '  ' → logprob: -15.877494812011719
    8. '++' → logprob: -16.37749481201172
    9. '       ' → logprob: -16.87749481201172
    10. '+' → logprob: -17.25249481201172

Token 52: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007242998573929071
    2. '+' → logprob: -5.6322431564331055
    3. ' +=' → logprob: -5.6322431564331055
    4. '=' → logprob: -9.882243156433105
    5. '++' → logprob: -13.257243156433105
    6. '+='' → logprob: -13.757243156433105
    7. '+="' → logprob: -14.257243156433105
    8. '```' → logprob: -14.632243156433105
    9. ' ' → logprob: -15.632243156433105
    10. ']+=' → logprob: -15.632243156433105

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.992775888647884e-05
    2. ' ' → logprob: -9.625069618225098
    3. '-' → logprob: -13.125069618225098
    4. '2' → logprob: -14.125069618225098
    5. '   ' → logprob: -15.187569618225098
    6. ' -' → logprob: -15.500069618225098
    7. '```' → logprob: -15.687569618225098
    8. '+' → logprob: -15.812569618225098
    9. '0' → logprob: -16.000070571899414
    10. '  ' → logprob: -16.937570571899414

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.375018119812012
    3. '-' → logprob: -12.250018119812012
    4. '2' → logprob: -13.750018119812012
    5. '   ' → logprob: -15.562518119812012
    6. ' -' → logprob: -16.312519073486328
    7. '  ' → logprob: -16.625019073486328
    8. '3' → logprob: -16.812519073486328
    9. '```' → logprob: -16.812519073486328
    10. 'k' → logprob: -17.000019073486328


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 16
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 30.77%
Précision adaptée (1ère position): 32.69%
Précision (top 10): 86.54%
================================================================================
