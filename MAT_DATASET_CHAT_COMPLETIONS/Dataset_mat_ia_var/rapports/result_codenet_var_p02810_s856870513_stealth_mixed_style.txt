================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin
def read(): return stdin.readline()
# Input in functional style for variety
N,X=map(int,read().split())
nums=list(map(int,read().split()))
nums.sort(key=None,reverse=True)
modulo=10**9+7

# Declaration in C-style, then Pythonic
DP=[ [0]*(X+1) for _ in range(N//2+2) ]
DP[1][nums[0]]=1

# Imperative loop, with index-juggling
for idx,num in enumerate(nums):
    if idx==0: continue
    tmp=[ [0]*(X+1) for _ in range(N//2+1)]
    for grp in range(1,N//2+1):
        s=0
        while s<=X:
            cnt=DP[grp][s]
            if not cnt:
                s+=1
                continue
            mult=cnt
            nxt=grp+1
            if s+num+grp<=X and nxt<=N//2:
                tmp[nxt][s+num]=(tmp[nxt][s+num]+mult*nxt)%modulo
            tmp[grp][s]=(tmp[grp][s]+mult*(s-grp*(num-1)))%modulo
            # use for/while hybrid
            j=1
            upper = min(X-s-grp+2,num+1)
            while j<upper:
                tmp[grp][s+j]=(tmp[grp][s+j]+mult*2*grp)%modulo
                j+=1
            if grp==1:
                s+=1
                continue
            # For loop to break pattern
            for d in range(1,min(X-s-grp+3,num+1)):
                tmp[grp-1][s+d]=(tmp[grp-1][s+d]+mult*(grp-1)*(num-d+1))%modulo
            s+=1
    # Assignment in functional fashion
    DP=tmp

# Mix comprehension for output
print((lambda arr: arr[1][X])(DP))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009244076907634735
    2. '.readline' → logprob: -4.759243965148926
    3. '.read' → logprob: -8.509243965148926
    4. '\n' → logprob: -9.259243965148926
    5. '
' → logprob: -9.509243965148926
    6. '.
' → logprob: -9.759243965148926
    7. ',' → logprob: -9.884243965148926
    8. 'import' → logprob: -10.134243965148926
    9. '```' → logprob: -10.384243965148926
    10. '.write' → logprob: -11.134243965148926

Token 5: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.036357332020998
    2. '\n' → logprob: -4.161357402801514
    3. '.readline' → logprob: -4.661357402801514
    4. 'import' → logprob: -5.911357402801514
    5. 'newline' → logprob: -6.161357402801514
    6. '```' → logprob: -6.661357402801514
    7. '
' → logprob: -6.661357402801514
    8. '' → logprob: -7.286357402801514
    9. '\' → logprob: -7.661357402801514
    10. 'for' → logprob: -7.661357402801514

Token 6: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024958718568086624
    2. ' read' → logprob: -6.127495765686035
    3. ' process' → logprob: -8.877495765686035
    4. ' main' → logprob: -10.002495765686035
    5. ' space' → logprob: -10.502495765686035
    6. ' ' → logprob: -10.752495765686035
    7. '_read' → logprob: -11.252495765686035
    8. ' readline' → logprob: -11.377495765686035
    9. ' parse' → logprob: -11.502495765686035
    10. '_' → logprob: -12.252495765686035

Token 7: '():' (ID: 9442)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8740690350532532
    2. '_' → logprob: -1.1240689754486084
    3. '_line' → logprob: -1.4990689754486084
    4. '():' → logprob: -3.6240689754486084
    5. '_input' → logprob: -6.1240692138671875
    6. '()' → logprob: -6.2490692138671875
    7. ' (' → logprob: -6.9990692138671875
    8. '_token' → logprob: -7.6240692138671875
    9. ' ():' → logprob: -7.9990692138671875
    10. '_data' → logprob: -8.749069213867188

Token 8: ' return' (ID: 622)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -1.0476412773132324
    2. ' return' → logprob: -1.1726412773132324
    3. ' stdin' → logprob: -1.5476412773132324
    4. 'stdin' → logprob: -2.5476412773132324
    5. '   ' → logprob: -3.9226412773132324
    6. 'return' → logprob: -4.047641277313232
    7. ' ' → logprob: -5.422641277313232
    8. '    ' → logprob: -6.297641277313232
    9. '    
' → logprob: -6.422641277313232
    10. '(' → logprob: -6.922641277313232

Token 9: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.24203312397003174
    2. ' int' → logprob: -2.617033004760742
    3. 'stdin' → logprob: -2.617033004760742
    4. 'int' → logprob: -3.367033004760742
    5. ' list' → logprob: -3.992033004760742
    6. ' map' → logprob: -4.992033004760742
    7. 'list' → logprob: -5.617033004760742
    8. '(stdin' → logprob: -6.242033004760742
    9. ' ' → logprob: -6.867033004760742
    10. ' next' → logprob: -6.992033004760742

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.022737184539437294
    2. '.read' → logprob: -4.0227370262146
    3. '.' → logprob: -5.3977370262146
    4. 'read' → logprob: -10.397737503051758
    5. '.readlines' → logprob: -11.022737503051758
    6. ' readline' → logprob: -13.522737503051758
    7. '.Read' → logprob: -13.897737503051758
    8. '.write' → logprob: -15.147737503051758
    9. '.READ' → logprob: -16.397737503051758
    10. '().' → logprob: -16.397737503051758

Token 11: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005517214885912836
    2. '(' → logprob: -7.750551700592041
    3. '()
' → logprob: -9.6255521774292
    4. '()\' → logprob: -10.8755521774292
    5. '().' → logprob: -11.1255521774292
    6. '()

' → logprob: -12.1255521774292
    7. '()(' → logprob: -12.2505521774292
    8. ' ()' → logprob: -12.5005521774292
    9. '(
' → logprob: -13.2505521774292
    10. '()<' → logprob: -13.7505521774292

Token 12: '#' (ID: 2)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43424075841903687
    2. '(' → logprob: -1.3092408180236816
    3. '(
' → logprob: -3.3092408180236816
    4. '\n' → logprob: -4.309240818023682
    5. '
' → logprob: -4.559240818023682
    6. '<|end|>' → logprob: -4.934240818023682
    7. '()
' → logprob: -5.434240818023682
    8. '()

' → logprob: -5.809240818023682
    9. '().' → logprob: -6.809240818023682
    10. ' ' → logprob: -6.934240818023682

Token 13: ' Input' (ID: 10090)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.36247387528419495
    2. ' ' → logprob: -1.3624738454818726
    3. '\' → logprob: -4.112473964691162
    4. ' 
' → logprob: -4.612473964691162
    5. '<|end|>' → logprob: -4.862473964691162
    6. '  
' → logprob: -5.862473964691162
    7. ' \' → logprob: -6.237473964691162
    8. '\r' → logprob: -6.487473964691162
    9. '#' → logprob: -6.612473964691162
    10. '
' → logprob: -6.987473964691162

Token 14: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2936387360095978
    2. '(' → logprob: -1.7936387062072754
    3. ' ' → logprob: -3.0436387062072754
    4. ')' → logprob: -4.793638706207275
    5. '_' → logprob: -5.293638706207275
    6. 's' → logprob: -5.418638706207275
    7. ' (' → logprob: -5.418638706207275
    8. '<|end|>' → logprob: -6.168638706207275
    9. '=' → logprob: -6.293638706207275
    10. 'a' → logprob: -6.543638706207275

Token 15: ' functional' (ID: 20483)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026000328361988068
    2. 'put' → logprob: -4.151000499725342
    3. 'te' → logprob: -5.276000499725342
    4. 'teger' → logprob: -5.776000499725342
    5. 'the' → logprob: -7.526000499725342
    6. 'one' → logprob: -8.526000022888184
    7. 'a' → logprob: -8.901000022888184
    8. 'puts' → logprob: -9.276000022888184
    9. 'it' → logprob: -9.526000022888184
    10. 'line' → logprob: -9.776000022888184

Token 16: ' style' (ID: 2713)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027032600715756416
    2. ' ()' → logprob: -4.902032375335693
    3. ')' → logprob: -5.277032375335693
    4. '(' → logprob: -5.402032375335693
    5. '_' → logprob: -5.652032375335693
    6. '```' → logprob: -7.402032375335693
    7. '_input' → logprob: -7.527032375335693
    8. '().' → logprob: -7.652032375335693
    9. '())' → logprob: -7.777032375335693
    10. '()
' → logprob: -8.027032852172852

Token 17: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7665801644325256
    2. '(' → logprob: -0.8915801644325256
    3. ')' → logprob: -3.266580104827881
    4. 'def' → logprob: -3.641580104827881
    5. ' ' → logprob: -3.641580104827881
    6. '(
' → logprob: -4.766580104827881
    7. 'a' → logprob: -5.766580104827881
    8. '<|end|>' → logprob: -5.891580104827881
    9. '_' → logprob: -6.141580104827881
    10. ' (' → logprob: -6.391580104827881

Token 18: ' variety' (ID: 7968)
  Prédit: ' competitive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' competitive' → logprob: -1.6596827507019043
    2. ' the' → logprob: -2.1596827507019043
    3. ' code' → logprob: -2.1596827507019043
    4. ' parsing' → logprob: -2.7846827507019043
    5. ' fast' → logprob: -2.9096827507019043
    6. ' data' → logprob: -3.4096827507019043
    7. ' large' → logprob: -3.4096827507019043
    8. ' a' → logprob: -3.4096827507019043
    9. ' stdin' → logprob: -3.5346827507019043
    10. ' ' → logprob: -3.5346827507019043

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18655239045619965
    2. '\n' → logprob: -2.3115522861480713
    3. '<|end|>' → logprob: -4.06155252456665
    4. '

' → logprob: -4.43655252456665
    5. 'def' → logprob: -4.68655252456665
    6. '' → logprob: -4.81155252456665
    7. '\' → logprob: -5.43655252456665
    8. 'newline' → logprob: -5.81155252456665
    9. ' 
' → logprob: -5.93655252456665
    10. '
' → logprob: -6.06155252456665

Token 20: 'N' (ID: 45)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0010048151016235
    2. '\n' → logprob: -1.0010048151016235
    3. 'n' → logprob: -2.376004695892334
    4. 'x' → logprob: -3.001004695892334
    5. 'def' → logprob: -3.626004695892334
    6. 'data' → logprob: -4.001004695892334
    7. 'd' → logprob: -4.126004695892334
    8. '\' → logprob: -4.251004695892334
    9. '(' → logprob: -4.251004695892334
    10. 's' → logprob: -5.001004695892334

Token 21: ',X' (ID: 83943)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06989151984453201
    2. '=' → logprob: -3.1948914527893066
    3. ',' → logprob: -3.8198914527893066
    4. ' ' → logprob: -6.069891452789307
    5. ' ,' → logprob: -6.319891452789307
    6. '=int' → logprob: -8.944891929626465
    7. ')' → logprob: -9.194891929626465
    8. '.' → logprob: -9.444891929626465
    9. ' =
' → logprob: -10.069891929626465
    10. '>' → logprob: -10.694891929626465

Token 22: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7773865461349487
    2. ' =' → logprob: -0.7773865461349487
    3. '=' → logprob: -2.5273866653442383
    4. '=int' → logprob: -8.152386665344238
    5. ' ,' → logprob: -8.527386665344238
    6. ',N' → logprob: -9.277386665344238
    7. '=input' → logprob: -9.902386665344238
    8. ',int' → logprob: -10.027386665344238
    9. ',a' → logprob: -10.777386665344238
    10. ',X' → logprob: -11.027386665344238

Token 23: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4741934835910797
    2. ' map' → logprob: -0.9741934537887573
    3. 'list' → logprob: -9.724193572998047
    4. 'input' → logprob: -10.849193572998047
    5. ' list' → logprob: -11.474193572998047
    6. 'read' → logprob: -12.224193572998047
    7. ' input' → logprob: -12.224193572998047
    8. ' ' → logprob: -12.474193572998047
    9. 'int' → logprob: -12.599193572998047
    10. ' read' → logprob: -12.849193572998047

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20410428941249847
    2. '(' → logprob: -1.7041043043136597
    3. '(lambda' → logprob: -6.079104423522949
    4. '(str' → logprob: -8.32910442352295
    5. '[int' → logprob: -9.45410442352295
    6. 'int' → logprob: -10.70410442352295
    7. '(
' → logprob: -10.82910442352295
    8. '```' → logprob: -11.95410442352295
    9. '(input' → logprob: -12.07910442352295
    10. '<int' → logprob: -12.32910442352295

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06249168515205383
    2. ',input' → logprob: -2.8124916553497314
    3. '(read' → logprob: -8.812491416931152
    4. ',std' → logprob: -9.562491416931152
    5. 'read' → logprob: -9.812491416931152
    6. ' ,' → logprob: -10.062491416931152
    7. ',int' → logprob: -10.062491416931152
    8. ',(' → logprob: -10.687491416931152
    9. '(stdin' → logprob: -11.437491416931152
    10. ',user' → logprob: -11.687491416931152

Token 26: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0125280125066638
    2. ' read' → logprob: -4.387527942657471
    3. ')' → logprob: -11.262528419494629
    4. '(read' → logprob: -12.762528419494629
    5. '	read' → logprob: -13.762528419494629
    6. 'input' → logprob: -14.512528419494629
    7. 'stdin' → logprob: -14.887528419494629
    8. ' readline' → logprob: -15.137528419494629
    9. ' )' → logprob: -16.012527465820312
    10. '```' → logprob: -16.012527465820312

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2749249339103699
    2. '().' → logprob: -1.5249249935150146
    3. '()' → logprob: -3.8999249935150146
    4. ')' → logprob: -6.7749247550964355
    5. '()))' → logprob: -6.7749247550964355
    6. ' ())' → logprob: -9.274925231933594
    7. '();)' → logprob: -10.024925231933594
    8. '());' → logprob: -10.524925231933594
    9. '()));' → logprob: -11.649925231933594
    10. '()),' → logprob: -12.024925231933594

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10051126778125763
    2. 'strip' → logprob: -2.350511312484741
    3. 'rstrip' → logprob: -8.10051155090332
    4. ' split' → logprob: -14.10051155090332
    5. '(split' → logprob: -15.85051155090332
    6. ')' → logprob: -15.85051155090332
    7. ' strip' → logprob: -16.72551155090332
    8. 'rs' → logprob: -18.22551155090332
    9. ' ' → logprob: -18.60051155090332
    10. '().' → logprob: -18.72551155090332

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6981189250946045
    2. '())' → logprob: -0.6981189250946045
    3. '()' → logprob: -5.948119163513184
    4. '))' → logprob: -6.198119163513184
    5. '()))' → logprob: -8.198119163513184
    6. '),' → logprob: -12.323119163513184
    7. '`)' → logprob: -12.448119163513184
    8. ')")' → logprob: -12.448119163513184
    9. '(' → logprob: -12.573119163513184
    10. ' ())' → logprob: -12.698119163513184

Token 30: 'nums' (ID: 44465)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23141691088676453
    2. 'a' → logprob: -1.606416940689087
    3. ' A' → logprob: -6.356416702270508
    4. 'x' → logprob: -6.981416702270508
    5. 'arr' → logprob: -7.856416702270508
    6. 'p' → logprob: -7.981416702270508
    7. 'D' → logprob: -8.106416702270508
    8. 'd' → logprob: -8.356416702270508
    9. 'H' → logprob: -8.606416702270508
    10. ' a' → logprob: -8.731416702270508

Token 31: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049223072826862335
    2. ' =' → logprob: -3.0492231845855713
    3. '=[]' → logprob: -8.549222946166992
    4. '.' → logprob: -8.549222946166992
    5. '[' → logprob: -9.799222946166992
    6. '=[' → logprob: -9.799222946166992
    7. ',' → logprob: -10.299222946166992
    8. '=list' → logprob: -10.424222946166992
    9. '[:]' → logprob: -10.549222946166992
    10. '.=' → logprob: -11.799222946166992

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014175030402839184
    2. '(' → logprob: -4.264174938201904
    3. '(int' → logprob: -11.889175415039062
    4. '(range' → logprob: -13.139175415039062
    5. '()' → logprob: -14.264175415039062
    6. '(
' → logprob: -14.889175415039062
    7. 'map' → logprob: -15.389175415039062
    8. '	map' → logprob: -15.514175415039062
    9. '(m' → logprob: -15.764175415039062
    10. ',map' → logprob: -15.764175415039062

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0028256813529878855
    2. '(' → logprob: -5.877825736999512
    3. '[int' → logprob: -12.127825736999512
    4. '<int' → logprob: -12.252825736999512
    5. '=int' → logprob: -12.377825736999512
    6. 'int' → logprob: -12.877825736999512
    7. ',int' → logprob: -13.502825736999512
    8. ']int' → logprob: -14.127825736999512
    9. ')' → logprob: -14.627825736999512
    10. ')(' → logprob: -15.252825736999512

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00444246269762516
    2. '(read' → logprob: -5.8794426918029785
    3. ',input' → logprob: -7.1294426918029785
    4. ',int' → logprob: -7.3794426918029785
    5. ',(' → logprob: -9.87944221496582
    6. ' ,' → logprob: -9.87944221496582
    7. ',map' → logprob: -10.62944221496582
    8. ',float' → logprob: -10.75444221496582
    9. '(' → logprob: -10.87944221496582
    10. '(),' → logprob: -12.25444221496582

Token 35: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -7.255023956531659e-05
    2. ' read' → logprob: -9.625072479248047
    3. '(read' → logprob: -12.000072479248047
    4. '	read' → logprob: -15.875072479248047
    5. 'input' → logprob: -17.000072479248047
    6. 'range' → logprob: -17.250072479248047
    7. 'stdin' → logprob: -17.250072479248047
    8. ')' → logprob: -17.750072479248047
    9. '.read' → logprob: -18.000072479248047
    10. 'list' → logprob: -18.125072479248047

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. '()' → logprob: -13.00000286102295
    3. '().__' → logprob: -17.375001907348633
    4. ' ().' → logprob: -18.000001907348633
    5. '()).' → logprob: -18.625001907348633
    6. '()-' → logprob: -19.375001907348633
    7. '.' → logprob: -19.500001907348633
    8. '().'' → logprob: -19.625001907348633
    9. '()].' → logprob: -19.750001907348633
    10. ').' → logprob: -20.250001907348633

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.127333340875339e-06
    2. 'strip' → logprob: -12.500003814697266
    3. '(split' → logprob: -15.125003814697266
    4. ' split' → logprob: -17.250003814697266
    5. 'rstrip' → logprob: -17.375003814697266
    6. 'spl' → logprob: -17.500003814697266
    7. 's' → logprob: -18.375003814697266
    8. 'plit' → logprob: -19.375003814697266
    9. '.split' → logprob: -20.375003814697266
    10. ')' → logprob: -21.625003814697266

Token 38: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1504897028207779
    2. ')' → logprob: -2.1504898071289062
    3. '()))' → logprob: -3.9004898071289062
    4. '())' → logprob: -6.025489807128906
    5. '(' → logprob: -8.275489807128906
    6. '()' → logprob: -8.525489807128906
    7. ')))' → logprob: -8.650489807128906
    8. ' ))' → logprob: -12.900489807128906
    9. '),' → logprob: -13.400489807128906
    10. '())))' → logprob: -14.025489807128906

Token 39: 'nums' (ID: 44465)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6937904357910156
    2. '(' → logprob: -1.0687904357910156
    3. ')' → logprob: -3.5687904357910156
    4. '\n' → logprob: -3.5687904357910156
    5. ' ' → logprob: -4.193790435791016
    6. 's' → logprob: -4.193790435791016
    7. 'for' → logprob: -4.318790435791016
    8. '
' → logprob: -4.693790435791016
    9. '=' → logprob: -4.943790435791016
    10. '\' → logprob: -5.068790435791016

Token 40: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4289209842681885
    2. '(' → logprob: -1.0539209842681885
    3. '(()' → logprob: -10.67892074584961
    4. '()`' → logprob: -10.67892074584961
    5. '(`' → logprob: -10.80392074584961
    6. '```' → logprob: -11.05392074584961
    7. '().' → logprob: -11.17892074584961
    8. '(reverse' → logprob: -11.30392074584961
    9. '(.)' → logprob: -11.42892074584961
    10. '();' → logprob: -11.67892074584961

Token 42: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25216415524482727
    2. '=lambda' → logprob: -1.5021641254425049
    3. '=int' → logprob: -8.627163887023926
    4. '=len' → logprob: -9.877163887023926
    5. '=None' → logprob: -13.377163887023926
    6. '=str' → logprob: -13.502163887023926
    7. '=i' → logprob: -14.877163887023926
    8. ' =' → logprob: -16.002164840698242
    9. '=n' → logprob: -16.127164840698242
    10. '=id' → logprob: -16.252164840698242

Token 43: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00436045229434967
    2. ',' → logprob: -5.504360675811768
    3. '))' → logprob: -9.00436019897461
    4. ',)' → logprob: -9.25436019897461
    5. ' )' → logprob: -10.25436019897461
    6. '())' → logprob: -12.12936019897461
    7. '[' → logprob: -12.37936019897461
    8. ')
' → logprob: -13.00436019897461
    9. '(' → logprob: -13.00436019897461
    10. ')#' → logprob: -13.37936019897461

Token 44: 'reverse' (ID: 53832)
  Prédit: 'reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.34978991746902466
    2. ' reverse' → logprob: -1.2247898578643799
    3. 'lambda' → logprob: -7.974790096282959
    4. ' key' → logprob: -8.3497896194458
    5. ' lambda' → logprob: -8.4747896194458
    6. ')' → logprob: -8.4747896194458
    7. ' )' → logprob: -8.7247896194458
    8. 'key' → logprob: -9.5997896194458
    9. 'rev' → logprob: -10.2247896194458
    10. 're' → logprob: -10.3497896194458

Token 45: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.031235067173838615
    2. '=True' → logprob: -3.5312349796295166
    3. '=False' → logprob: -6.531235218048096
    4. ')' → logprob: -11.031234741210938
    5. ')=' → logprob: -12.406234741210938
    6. '=(' → logprob: -13.156234741210938
    7. '(' → logprob: -13.406234741210938
    8. '=

' → logprob: -13.656234741210938
    9. '=}' → logprob: -14.281234741210938
    10. '=T' → logprob: -15.406234741210938

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. '))' → logprob: -12.625003814697266
    3. ')
' → logprob: -15.500003814697266
    4. ' )' → logprob: -16.000003814697266
    5. '),' → logprob: -17.125003814697266
    6. ')))' → logprob: -18.125003814697266
    7. ')return' → logprob: -18.500003814697266
    8. '[' → logprob: -18.500003814697266
    9. ')

' → logprob: -18.750003814697266
    10. '`)' → logprob: -18.875003814697266

Token 47: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.611497163772583
    2. 'if' → logprob: -2.361497163772583
    3. 's' → logprob: -2.986497163772583
    4. 'print' → logprob: -3.111497163772583
    5. '[' → logprob: -3.236497163772583
    6. ' for' → logprob: -3.361497163772583
    7. 'i' → logprob: -3.736497163772583
    8. 'count' → logprob: -3.736497163772583
    9. '
' → logprob: -3.861497163772583
    10. 'X' → logprob: -4.111496925354004

Token 48: 'ulo' (ID: 5953)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02355326898396015
    2. ' =' → logprob: -4.523553371429443
    3. ' ' → logprob: -4.773553371429443
    4. '_' → logprob: -6.773553371429443
    5. 'ulus' → logprob: -7.148553371429443
    6. ')' → logprob: -7.898553371429443
    7. 'ulu' → logprob: -8.148552894592285
    8. '(' → logprob: -8.648552894592285
    9. 'uler' → logprob: -9.148552894592285
    10. 's' → logprob: -9.523552894592285

Token 49: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028055930510163307
    2. '(' → logprob: -3.7780559062957764
    3. '_' → logprob: -5.7780561447143555
    4. ' =' → logprob: -6.5280561447143555
    5. ')' → logprob: -9.653056144714355
    6. 's' → logprob: -10.278056144714355
    7. '_=' → logprob: -10.278056144714355
    8. ' (' → logprob: -10.528056144714355
    9. ' ' → logprob: -10.653056144714355
    10. '=int' → logprob: -11.903056144714355

Token 50: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4772758185863495
    2. '100' → logprob: -0.9772758483886719
    3. '998' → logprob: -6.102275848388672
    4. '1' → logprob: -7.602275848388672
    5. '2' → logprob: -8.977275848388672
    6. ' ' → logprob: -9.727275848388672
    7. 'int' → logprob: -10.352275848388672
    8. 'X' → logprob: -10.602275848388672
    9. '123' → logprob: -10.602275848388672
    10. '(' → logprob: -10.727275848388672

Token 51: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04640565067529678
    2. '%' → logprob: -3.171405553817749
    3. '\n' → logprob: -6.796405792236328
    4. '^' → logprob: -7.046405792236328
    5. ' **' → logprob: -8.171405792236328
    6. '6' → logprob: -8.546405792236328
    7. '9' → logprob: -8.796405792236328
    8. '\' → logprob: -8.921405792236328
    9. '0' → logprob: -9.171405792236328
    10. '```' → logprob: -9.171405792236328

Token 52: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.45848218582978e-06
    2. '09' → logprob: -14.25000286102295
    3. '18' → logprob: -14.37500286102295
    4. '+' → logprob: -15.12500286102295
    5. '10' → logprob: -15.37500286102295
    6. '8' → logprob: -16.000001907348633
    7. '```' → logprob: -16.125001907348633
    8. '12' → logprob: -16.875001907348633
    9. '19' → logprob: -16.875001907348633
    10. '15' → logprob: -16.875001907348633

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021796036162413657
    2. ' +' → logprob: -8.625218391418457
    3. '7' → logprob: -10.250218391418457
    4. '+
' → logprob: -13.500218391418457
    5. '＋' → logprob: -15.250218391418457
    6. '+</' → logprob: -15.375218391418457
    7. '+b' → logprob: -15.625218391418457
    8. '+

' → logprob: -16.00021743774414
    9. ' plus' → logprob: -16.12521743774414
    10. ' ' → logprob: -16.25021743774414

Token 54: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.1472419600977446e-06
    2. '+' → logprob: -13.750000953674316
    3. '9' → logprob: -17.125001907348633
    4. '07' → logprob: -17.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '007' → logprob: -20.000001907348633
    8. '79' → logprob: -20.187501907348633
    9. '７' → logprob: -20.250001907348633
    10. '87' → logprob: -20.312501907348633

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4986835718154907
    2. '\n' → logprob: -1.2486835718154907
    3. '' → logprob: -3.123683452606201
    4. ' 
' → logprob: -4.123683452606201
    5. '
' → logprob: -4.498683452606201
    6. '\' → logprob: -5.248683452606201
    7. 'a' → logprob: -5.373683452606201
    8. 's' → logprob: -5.748683452606201
    9. 'for' → logprob: -5.998683452606201
    10. 'n' → logprob: -6.248683452606201

Token 56: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8100118637084961
    2. 's' → logprob: -1.685011863708496
    3. 'result' → logprob: -1.935011863708496
    4. 'count' → logprob: -2.810011863708496
    5. 'dp' → logprob: -3.185011863708496
    6. 'res' → logprob: -3.935011863708496
    7. 'c' → logprob: -4.185011863708496
    8. 'a' → logprob: -4.185011863708496
    9. ' 
' → logprob: -4.685011863708496
    10. 'for' → logprob: -4.935011863708496

Token 57: ' Declaration' (ID: 78572)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.2708553075790405
    2. ' dp' → logprob: -1.5208553075790405
    3. 'dp' → logprob: -2.02085542678833
    4. ' result' → logprob: -2.77085542678833
    5. 'ans' → logprob: -3.27085542678833
    6. 'result' → logprob: -3.39585542678833
    7. 'answer' → logprob: -3.39585542678833
    8. 'count' → logprob: -3.52085542678833
    9. ' answer' → logprob: -3.64585542678833
    10. 'res' → logprob: -4.02085542678833

Token 58: ' in' (ID: 306)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30634254217147827
    2. ' dp' → logprob: -2.556342601776123
    3. 's' → logprob: -3.306342601776123
    4. 'count' → logprob: -3.806342601776123
    5. 'result' → logprob: -3.806342601776123
    6. 'a' → logprob: -4.306342601776123
    7. ' ans' → logprob: -4.431342601776123
    8. 'ans' → logprob: -4.681342601776123
    9. 'answer' → logprob: -5.056342601776123
    10. ':' → logprob: -5.056342601776123

Token 59: ' C' (ID: 363)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3326822817325592
    2. ' dp' → logprob: -2.3326823711395264
    3. 'python' → logprob: -2.9576823711395264
    4. 'f' → logprob: -3.5826823711395264
    5. 'range' → logprob: -3.9576823711395264
    6. ' Python' → logprob: -4.332682132720947
    7. 'a' → logprob: -4.832682132720947
    8. 'Python' → logprob: -4.832682132720947
    9. 'ans' → logprob: -5.457682132720947
    10. 'nums' → logprob: -5.582682132720947

Token 60: '-style' (ID: 20938)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.9572574496269226
    2. 'int' → logprob: -1.0822575092315674
    3. 'unsigned' → logprob: -2.3322575092315674
    4. '#include' → logprob: -2.4572575092315674
    5. ' ;' → logprob: -3.8322575092315674
    6. ' unsigned' → logprob: -3.9572575092315674
    7. ' int' → logprob: -4.582257270812988
    8. 'const' → logprob: -5.082257270812988
    9. 'static' → logprob: -5.207257270812988
    10. '#' → logprob: -5.457257270812988

Token 61: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.521144151687622
    2. 's' → logprob: -1.896144151687622
    3. '
' → logprob: -1.896144151687622
    4. ';' → logprob: -2.021144151687622
    5. 'def' → logprob: -2.271144151687622
    6. 'a' → logprob: -3.521144151687622
    7. ':' → logprob: -3.771144151687622
    8. ';
' → logprob: -4.146143913269043
    9. 'num' → logprob: -4.396143913269043
    10. ' ans' → logprob: -4.521143913269043

Token 62: ' then' (ID: 1815)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8348344564437866
    2. 'ans' → logprob: -2.334834575653076
    3. ' i' → logprob: -2.334834575653076
    4. ' ans' → logprob: -2.584834575653076
    5. 'count' → logprob: -2.834834575653076
    6. 'int' → logprob: -2.959834575653076
    7. 'result' → logprob: -3.709834575653076
    8. 'cnt' → logprob: -3.834834575653076
    9. 'a' → logprob: -4.209834575653076
    10. 'max' → logprob: -4.584834575653076

Token 63: ' Python' (ID: 26534)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -1.6675482988357544
    2. ' use' → logprob: -1.7925482988357544
    3. ' Python' → logprob: -1.9175482988357544
    4. 'Python' → logprob: -3.417548179626465
    5. 'dynamic' → logprob: -3.417548179626465
    6. ' converted' → logprob: -3.542548179626465
    7. ' a' → logprob: -3.667548179626465
    8. ' usage' → logprob: -3.917548179626465
    9. ' the' → logprob: -4.042548179626465
    10. 'python' → logprob: -4.167548179626465

Token 64: 'ic' (ID: 291)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.939286708831787
    2. 'n' → logprob: -2.064286708831787
    3. 'result' → logprob: -2.189286708831787
    4. 'count' → logprob: -2.314286708831787
    5. 's' → logprob: -2.564286708831787
    6. 'ans' → logprob: -2.564286708831787
    7. 'i' → logprob: -2.814286708831787
    8. ':' → logprob: -3.189286708831787
    9. '
' → logprob: -3.564286708831787
    10. 'dp' → logprob: -3.689286708831787

Token 65: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3731589317321777
    2. 'style' → logprob: -1.3731589317321777
    3. '
' → logprob: -2.3731589317321777
    4. '-style' → logprob: -2.7481589317321777
    5. 'for' → logprob: -2.9981589317321777
    6. ' style' → logprob: -3.4981589317321777
    7. 'dp' → logprob: -3.7481589317321777
    8. 'counter' → logprob: -3.8731589317321777
    9. 'factor' → logprob: -3.9981589317321777
    10. 'max' → logprob: -4.123158931732178

Token 66: 'DP' (ID: 16851)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9811553955078125
    2. 'ans' → logprob: -1.8561553955078125
    3. 'count' → logprob: -1.9811553955078125
    4. 'max' → logprob: -2.6061553955078125
    5. ' ans' → logprob: -3.4811553955078125
    6. 'result' → logprob: -3.4811553955078125
    7. 'cnt' → logprob: -3.6061553955078125
    8. ' dp' → logprob: -4.1061553955078125
    9. 'res' → logprob: -4.2311553955078125
    10. 'total' → logprob: -4.3561553955078125

Token 67: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6282767653465271
    2. '=' → logprob: -1.2532768249511719
    3. '=[' → logprob: -1.7532768249511719
    4. '=[]' → logprob: -6.003276824951172
    5. '[' → logprob: -6.253276824951172
    6. '=[[' → logprob: -6.628276824951172
    7. ' =[' → logprob: -6.628276824951172
    8. '={}' → logprob: -8.128276824951172
    9. ' ' → logprob: -9.378276824951172
    10. '_' → logprob: -9.503276824951172

Token 68: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5793677568435669
    2. '[' → logprob: -0.8293677568435669
    3. '[[' → logprob: -7.204367637634277
    4. ' [' → logprob: -7.579367637634277
    5. 'False' → logprob: -7.829367637634277
    6. '(' → logprob: -7.829367637634277
    7. '[-' → logprob: -7.954367637634277
    8. '1' → logprob: -8.079367637634277
    9. '-' → logprob: -8.079367637634277
    10. '[int' → logprob: -8.829367637634277

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022391125094145536
    2. '-' → logprob: -6.627239227294922
    3. 'False' → logprob: -7.252239227294922
    4. ' ' → logprob: -9.502239227294922
    5. '[' → logprob: -10.127239227294922
    6. '(' → logprob: -10.127239227294922
    7. 'None' → logprob: -11.627239227294922
    8. 'float' → logprob: -11.627239227294922
    9. 'int' → logprob: -12.127239227294922
    10. '1' → logprob: -12.252239227294922

Token 70: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5877631902694702
    2. ']*' → logprob: -1.4627631902694702
    3. ']' → logprob: -1.5877631902694702
    4. ' for' → logprob: -4.83776330947876
    5. ' ]' → logprob: -8.337762832641602
    6. 'for' → logprob: -8.712762832641602
    7. ']+' → logprob: -9.212762832641602
    8. ',' → logprob: -11.087762832641602
    9. '	for' → logprob: -13.212762832641602
    10. ']int' → logprob: -13.587762832641602

Token 71: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.09163346886634827
    2. 'N' → logprob: -2.4666335582733154
    3. '100' → logprob: -6.841633319854736
    4. '10' → logprob: -8.466633796691895
    5. '101' → logprob: -8.466633796691895
    6. ' X' → logprob: -8.466633796691895
    7. '2' → logprob: -8.716633796691895
    8. '(X' → logprob: -8.841633796691895
    9. '500' → logprob: -9.216633796691895
    10. '1' → logprob: -9.466633796691895

Token 72: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001593195047462359
    2. ' +' → logprob: -8.75015926361084
    3. '+
' → logprob: -14.75015926361084
    4. ')+' → logprob: -17.000160217285156
    5. ')' → logprob: -17.125160217285156
    6. '+)' → logprob: -17.250160217285156
    7. '```' → logprob: -17.500160217285156
    8. '＋' → logprob: -17.625160217285156
    9. '+n' → logprob: -17.625160217285156
    10. '1' → logprob: -17.875160217285156

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. '2' → logprob: -16.062519073486328
    4. '１' → logprob: -16.375019073486328
    5. '   ' → logprob: -17.062519073486328
    6. '	' → logprob: -17.187519073486328
    7. '১' → logprob: -17.187519073486328
    8. '' → logprob: -17.250019073486328
    9. '۱' → logprob: -17.312519073486328
    10. '```' → logprob: -17.562519073486328

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011760921915993094
    2. ' )' → logprob: -9.125117301940918
    3. ')]' → logprob: -11.875117301940918
    4. ']' → logprob: -14.375117301940918
    5. '))' → logprob: -16.000118255615234
    6. ')
' → logprob: -16.125118255615234
    7. '```' → logprob: -16.125118255615234
    8. '),' → logprob: -16.250118255615234
    9. ' for' → logprob: -16.500118255615234
    10. '}' → logprob: -16.500118255615234

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10021702200174332
    2. 'for' → logprob: -2.35021710395813
    3. ' ' → logprob: -11.97521686553955
    4. ']' → logprob: -13.35021686553955
    5. '	for' → logprob: -13.35021686553955
    6. ')' → logprob: -15.10021686553955
    7. ' ]' → logprob: -15.85021686553955
    8. ' ' → logprob: -16.100217819213867
    9. '```' → logprob: -16.225217819213867
    10. ' fo' → logprob: -16.975217819213867

Token 76: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16089479625225067
    2. ' _' → logprob: -1.910894751548767
    3. ' range' → logprob: -8.285894393920898
    4. ' i' → logprob: -8.910894393920898
    5. ' ' → logprob: -9.285894393920898
    6. '_i' → logprob: -9.660894393920898
    7. '_range' → logprob: -9.660894393920898
    8. ' in' → logprob: -10.910894393920898
    9. 'range' → logprob: -10.910894393920898
    10. '_x' → logprob: -11.410894393920898

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485056757926941
    2. 'in' → logprob: -1.2235057353973389
    3. ' ' → logprob: -10.473505973815918
    4. 'range' → logprob: -10.723505973815918
    5. '  ' → logprob: -12.723505973815918
    6. 'i' → logprob: -13.223505973815918
    7. 'x' → logprob: -13.723505973815918
    8. '0' → logprob: -14.598505973815918
    9. 'X' → logprob: -14.723505973815918
    10. '	in' → logprob: -14.848505973815918

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024943258613348007
    2. ' range' → logprob: -6.0024943351745605
    3. '[' → logprob: -11.127493858337402
    4. '(range' → logprob: -12.877493858337402
    5. '	range' → logprob: -14.377493858337402
    6. ' xrange' → logprob: -15.627493858337402
    7. 'nums' → logprob: -16.37749481201172
    8. ' ' → logprob: -16.37749481201172
    9. '   ' → logprob: -16.50249481201172
    10. '`' → logprob: -16.75249481201172

Token 79: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008188001229427755
    2. '(' → logprob: -7.125818729400635
    3. ' (' → logprob: -11.875819206237793
    4. '(n' → logprob: -12.500819206237793
    5. '(X' → logprob: -13.000819206237793
    6. 'N' → logprob: -14.375819206237793
    7. '((' → logprob: -14.500819206237793
    8. '(len' → logprob: -15.500819206237793
    9. '(
' → logprob: -16.875818252563477
    10. ' N' → logprob: -17.125818252563477

Token 80: '//' (ID: 393)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.020699191838502884
    2. ')' → logprob: -3.8956992626190186
    3. '+' → logprob: -8.895699501037598
    4. ']' → logprob: -11.270699501037598
    5. ' )' → logprob: -13.020699501037598
    6. ')]
' → logprob: -13.395699501037598
    7. ')],' → logprob: -13.895699501037598
    8. ')]

' → logprob: -14.145699501037598
    9. ')])' → logprob: -14.395699501037598
    10. ')][' → logprob: -14.645699501037598

Token 81: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003202114312443882
    2. '1' → logprob: -8.750320434570312
    3. ' ' → logprob: -8.875320434570312
    4. '3' → logprob: -11.500320434570312
    5. '4' → logprob: -12.625320434570312
    6. '20' → logprob: -13.500320434570312
    7. ')' → logprob: -14.062820434570312
    8. '5' → logprob: -14.250320434570312
    9. '```' → logprob: -14.250320434570312
    10. '0' → logprob: -15.000320434570312

Token 82: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02903836779296398
    2. ')]' → logprob: -3.904038429260254
    3. ')' → logprob: -4.904038429260254
    4. ' +' → logprob: -6.904038429260254
    5. '+)' → logprob: -11.529038429260254
    6. ' )' → logprob: -11.779038429260254
    7. ']' → logprob: -12.154038429260254
    8. '+[' → logprob: -12.779038429260254
    9. ')])' → logprob: -12.904038429260254
    10. ')][' → logprob: -13.279038429260254

Token 83: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16094371676445007
    2. '2' → logprob: -1.9109437465667725
    3. ' ' → logprob: -7.285943508148193
    4. '3' → logprob: -10.660943984985352
    5. '(' → logprob: -12.723443984985352
    6. '+' → logprob: -13.160943984985352
    7. '  ' → logprob: -13.910943984985352
    8. ')' → logprob: -14.535943984985352
    9. '   ' → logprob: -14.723443984985352
    10. '11' → logprob: -14.723443984985352

Token 84: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.47414395213127136
    2. ')' → logprob: -0.9741439819335938
    3. ' )' → logprob: -10.474143981933594
    4. ']' → logprob: -10.599143981933594
    5. '+' → logprob: -12.349143981933594
    6. ')][' → logprob: -12.974143981933594
    7. ')],' → logprob: -13.724143981933594
    8. '))' → logprob: -13.849143981933594
    9. ')])' → logprob: -13.974143981933594
    10. ')]

' → logprob: -14.099143981933594

Token 85: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026679806411266327
    2. ' ]' → logprob: -3.651679754257202
    3. ')]' → logprob: -7.901679992675781
    4. '][' → logprob: -12.276679992675781
    5. ')' → logprob: -12.901679992675781
    6. ' ][' → logprob: -14.651679992675781
    7. '()]' → logprob: -15.276679992675781
    8. ' )' → logprob: -15.901679992675781
    9. '];' → logprob: -16.02667999267578
    10. '],' → logprob: -16.02667999267578

Token 86: 'DP' (ID: 16851)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21025359630584717
    2. 'DP' → logprob: -1.7102535963058472
    3. '
' → logprob: -5.835253715515137
    4. 'dp' → logprob: -6.585253715515137
    5. ' DP' → logprob: -6.710253715515137
    6. 'for' → logprob: -6.835253715515137
    7. '[' → logprob: -7.460253715515137
    8. ' 
' → logprob: -7.710253715515137
    9. '\n' → logprob: -8.460253715515137
    10. '

' → logprob: -8.460253715515137

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019269285257905722
    2. '<|end|>' → logprob: -8.875192642211914
    3. '[-' → logprob: -10.250192642211914
    4. '[N' → logprob: -12.250192642211914
    5. '[X' → logprob: -12.625192642211914
    6. '[len' → logprob: -13.125192642211914
    7. '```' → logprob: -13.375192642211914
    8. '[][' → logprob: -13.875192642211914
    9. '\[' → logprob: -14.125192642211914
    10. '0' → logprob: -14.500192642211914

Token 88: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001154270488768816
    2. '[' → logprob: -6.87615442276001
    3. ' ' → logprob: -9.501153945922852
    4. '][' → logprob: -10.751153945922852
    5. '1' → logprob: -10.876153945922852
    6. ' [' → logprob: -13.126153945922852
    7. '```' → logprob: -14.501153945922852
    8. '000' → logprob: -14.626153945922852
    9. '2' → logprob: -14.813653945922852
    10. '-' → logprob: -14.876153945922852

Token 89: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0027597027365118265
    2. '[' → logprob: -6.50275993347168
    3. ']' → logprob: -6.75275993347168
    4. ' ][' → logprob: -9.87775993347168
    5. '][-' → logprob: -11.25275993347168
    6. '[X' → logprob: -12.50275993347168
    7. '][:' → logprob: -12.75275993347168
    8. '][]' → logprob: -13.25275993347168
    9. ']=' → logprob: -13.50275993347168
    10. '=' → logprob: -13.75275993347168

Token 90: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.031609226018190384
    2. '0' → logprob: -3.531609296798706
    3. 'num' → logprob: -7.406609058380127
    4. '(nums' → logprob: -7.656609058380127
    5. ' nums' → logprob: -8.156609535217285
    6. '(' → logprob: -8.531609535217285
    7. 'X' → logprob: -8.906609535217285
    8. 'max' → logprob: -11.031609535217285
    9. '1' → logprob: -11.031609535217285
    10. ']' → logprob: -11.281609535217285

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015102163888514042
    2. '0' → logprob: -6.501510143280029
    3. '[-' → logprob: -12.626510620117188
    4. ' [' → logprob: -13.251510620117188
    5. '[N' → logprob: -14.626510620117188
    6. '1' → logprob: -14.751510620117188
    7. ' ' → logprob: -14.876510620117188
    8. '-' → logprob: -15.126510620117188
    9. '[
' → logprob: -15.126510620117188
    10. ']' → logprob: -15.501510620117188

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001652796781854704
    2. '[' → logprob: -9.625164985656738
    3. '1' → logprob: -9.875164985656738
    4. ' ' → logprob: -10.250164985656738
    5. '-' → logprob: -12.750164985656738
    6. '2' → logprob: -13.062664985656738
    7. '<|end|>' → logprob: -13.375164985656738
    8. 'X' → logprob: -14.375164985656738
    9. ']' → logprob: -14.562664985656738
    10. '5' → logprob: -14.750164985656738

Token 93: ']]=' (ID: 192551)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8064084649085999
    2. ']]' → logprob: -1.181408405303955
    3. ']]=' → logprob: -1.806408405303955
    4. ' ]' → logprob: -3.681408405303955
    5. ']%' → logprob: -3.806408405303955
    6. ']=' → logprob: -3.931408405303955
    7. ' ]]' → logprob: -5.181408405303955
    8. '%' → logprob: -5.306408405303955
    9. ']+=' → logprob: -5.806408405303955
    10. ']+' → logprob: -7.431408405303955

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -11.250021934509277
    3. 'nums' → logprob: -12.500021934509277
    4. '0' → logprob: -13.625021934509277
    5. '(' → logprob: -13.625021934509277
    6. 'pow' → logprob: -13.750021934509277
    7. '2' → logprob: -15.187521934509277
    8. 'mod' → logprob: -15.625021934509277
    9. 'int' → logprob: -15.750021934509277
    10. '   ' → logprob: -15.875021934509277

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.055363669991493225
    2. '<|end|>' → logprob: -3.680363655090332
    3. 'for' → logprob: -4.180363655090332
    4. '\n' → logprob: -4.805363655090332
    5. ' for' → logprob: -5.805363655090332
    6. '+' → logprob: -7.680363655090332
    7. ' 
' → logprob: -8.180363655090332
    8. '

' → logprob: -8.305363655090332
    9. '+
' → logprob: -8.430363655090332
    10. '' → logprob: -8.680363655090332

Token 96: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7591505646705627
    2. ' for' → logprob: -0.8841505646705627
    3. '
' → logprob: -2.259150505065918
    4. '\n' → logprob: -4.884150505065918
    5. '<|end|>' → logprob: -5.134150505065918
    6. ' 
' → logprob: -8.134150505065918
    7. '
' → logprob: -8.759150505065918
    8. '```' → logprob: -9.259150505065918
    9. '\' → logprob: -9.634150505065918
    10. '+' → logprob: -9.759150505065918

Token 97: ' Imper' (ID: 42716)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004660334438085556
    2. ' for' → logprob: -5.379660129547119
    3. 'range' → logprob: -10.879660606384277
    4. 'i' → logprob: -11.129660606384277
    5. 'from' → logprob: -12.879660606384277
    6. 'dp' → logprob: -14.254660606384277
    7. ' range' → logprob: -14.379660606384277
    8. ' ' → logprob: -14.879660606384277
    9. 'def' → logprob: -15.004660606384277
    10. '#' → logprob: -15.129660606384277

Token 98: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.7484048008918762
    2. 'for' → logprob: -0.7484048008918762
    3. 'def' → logprob: -3.1234047412872314
    4. 't' → logprob: -6.6234049797058105
    5. 'ed' → logprob: -6.6234049797058105
    6. 'f' → logprob: -6.8734049797058105
    7. 'fect' → logprob: -6.9984049797058105
    8. '```' → logprob: -7.4984049797058105
    9. 'ptive' → logprob: -7.7484049797058105
    10. 'atively' → logprob: -7.7484049797058105

Token 99: ' loop' (ID: 11453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029853466898202896
    2. ' for' → logprob: -3.529853582382202
    3. '<|end|>' → logprob: -9.404853820800781
    4. ')' → logprob: -12.654853820800781
    5. '
' → logprob: -12.904853820800781
    6. ' code' → logprob: -13.279853820800781
    7. ':' → logprob: -13.279853820800781
    8. 'i' → logprob: -13.404853820800781
    9. '```' → logprob: -13.404853820800781
    10. '<|end|>' → logprob: -13.529853820800781

Token 100: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39433419704437256
    2. 'for' → logprob: -1.1443341970443726
    3. '<|end|>' → logprob: -5.019334316253662
    4. '
' → logprob: -7.394334316253662
    5. '```' → logprob: -9.144333839416504
    6. '\n' → logprob: -10.394333839416504
    7. '<|end|>' → logprob: -10.769333839416504
    8. ':' → logprob: -11.269333839416504
    9. '	for' → logprob: -11.769333839416504
    10. ' ' → logprob: -12.144333839416504

Token 101: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07893583923578262
    2. ' for' → logprob: -2.5789358615875244
    3. 'i' → logprob: -10.453935623168945
    4. ' i' → logprob: -11.328935623168945
    5. '```' → logprob: -13.828935623168945
    6. 'range' → logprob: -14.078935623168945
    7. 'from' → logprob: -14.453935623168945
    8. '
' → logprob: -14.578935623168945
    9. 'and' → logprob: -15.078935623168945
    10. ' and' → logprob: -15.578935623168945

Token 102: ' index' (ID: 3472)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5583029985427856
    2. ' for' → logprob: -1.9333029985427856
    3. 'range' → logprob: -1.9333029985427856
    4. 'for' → logprob: -2.558302879333496
    5. 'enumer' → logprob: -4.808302879333496
    6. ' comments' → logprob: -5.058302879333496
    7. 'Python' → logprob: -5.558302879333496
    8. ' Python' → logprob: -5.683302879333496
    9. 'nums' → logprob: -5.933302879333496
    10. ' reversed' → logprob: -6.058302879333496

Token 103: '-j' (ID: 19720)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4293738007545471
    2. 'for' → logprob: -1.0543737411499023
    3. 'i' → logprob: -8.304373741149902
    4. ' i' → logprob: -8.304373741149902
    5. 's' → logprob: -9.179373741149902
    6. ' in' → logprob: -11.054373741149902
    7. '<|end|>' → logprob: -11.054373741149902
    8. '_' → logprob: -11.179373741149902
    9. '```' → logprob: -12.429373741149902
    10. ' ' → logprob: -12.554373741149902

Token 104: 'uggling' (ID: 82788)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06356697529554367
    2. 'for' → logprob: -2.8135669231414795
    3. 's' → logprob: -7.188567161560059
    4. ' ' → logprob: -7.438567161560059
    5. '<|end|>' → logprob: -10.063567161560059
    6. ':' → logprob: -10.438567161560059
    7. '=' → logprob: -10.688567161560059
    8. ',' → logprob: -10.938567161560059
    9. '	for' → logprob: -11.063567161560059
    10. ' s' → logprob: -11.063567161560059

Token 105: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5763223171234131
    2. 'for' → logprob: -0.8263223171234131
    3. '<|end|>' → logprob: -8.326322555541992
    4. '
' → logprob: -9.201322555541992
    5. '```' → logprob: -10.951322555541992
    6. ' ' → logprob: -11.576322555541992
    7. '	for' → logprob: -12.326322555541992
    8. ':' → logprob: -13.076322555541992
    9. ')' → logprob: -13.701322555541992
    10. '<|end|>' → logprob: -13.951322555541992

Token 106: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889782637357712
    2. ' for' → logprob: -2.578897714614868
    3. '```' → logprob: -12.578897476196289
    4. '	for' → logprob: -13.328897476196289
    5. '<|end|>' → logprob: -13.703897476196289
    6. '
' → logprob: -13.828897476196289
    7. 'i' → logprob: -14.703897476196289
    8. ',' → logprob: -16.57889747619629
    9. ')' → logprob: -16.95389747619629
    10. 'j' → logprob: -17.32889747619629

Token 107: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25463348627090454
    2. 'i' → logprob: -1.5046334266662598
    3. ' k' → logprob: -8.004633903503418
    4. ' j' → logprob: -8.004633903503418
    5. ' ' → logprob: -8.567133903503418
    6. '	i' → logprob: -8.567133903503418
    7. 'k' → logprob: -8.754633903503418
    8. ' n' → logprob: -8.879633903503418
    9. ' x' → logprob: -8.942133903503418
    10. 'j' → logprob: -9.192133903503418

Token 108: ',num' (ID: 78576)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027104074135422707
    2. 'in' → logprob: -3.652104139328003
    3. ',' → logprob: -7.402103900909424
    4. ' ' → logprob: -9.027104377746582
    5. ' ,' → logprob: -10.277104377746582
    6. '	in' → logprob: -11.652104377746582
    7. ',in' → logprob: -11.777104377746582
    8. '1' → logprob: -12.777104377746582
    9. 'range' → logprob: -12.777104377746582
    10. ',i' → logprob: -13.152104377746582

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06240657716989517
    2. 'in' → logprob: -2.812406539916992
    3. ',' → logprob: -8.437406539916992
    4. 's' → logprob: -8.937406539916992
    5. ',in' → logprob: -10.437406539916992
    6. ' ' → logprob: -10.687406539916992
    7. ' ,' → logprob: -11.187406539916992
    8. '	in' → logprob: -12.187406539916992
    9. ',num' → logprob: -13.187406539916992
    10. ',n' → logprob: -13.187406539916992

Token 110: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5767141580581665
    2. 'enumer' → logprob: -0.8267141580581665
    3. 'zip' → logprob: -7.701714038848877
    4. ' zip' → logprob: -8.076714515686035
    5. 'en' → logprob: -12.076714515686035
    6. 'list' → logprob: -13.076714515686035
    7. 'enum' → logprob: -14.201714515686035
    8. ' list' → logprob: -14.201714515686035
    9. ' enumer' → logprob: -14.826714515686035
    10. ' ' → logprob: -14.951714515686035

Token 111: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.0013190467143431306
    2. '(zip' → logprob: -7.62631893157959
    3. 'nums' → logprob: -8.12631893157959
    4. '(en' → logprob: -8.12631893157959
    5. '(' → logprob: -9.37631893157959
    6. ' nums' → logprob: -9.37631893157959
    7. 'enumer' → logprob: -10.12631893157959
    8. '(range' → logprob: -11.37631893157959
    9. '(list' → logprob: -12.75131893157959
    10. ' enumerate' → logprob: -12.87631893157959

Token 112: '):
' (ID: 1883)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005757899023592472
    2. '):' → logprob: -5.755757808685303
    3. ',' → logprob: -6.005757808685303
    4. '):
' → logprob: -10.255758285522461
    5. '[:' → logprob: -10.880758285522461
    6. ':' → logprob: -11.255758285522461
    7. ',start' → logprob: -11.380758285522461
    8. '):
' → logprob: -11.880758285522461
    9. '1' → logprob: -11.880758285522461
    10. ' ,' → logprob: -12.630758285522461

Token 113: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13504557311534882
    2. ' ' → logprob: -2.5100455284118652
    3. '<|end|>' → logprob: -3.7600455284118652
    4. '   ' → logprob: -4.510045528411865
    5. ' for' → logprob: -5.760045528411865
    6. ',' → logprob: -6.635045528411865
    7. ' idx' → logprob: -6.885045528411865
    8. 'if' → logprob: -7.135045528411865
    9. '	if' → logprob: -7.260045528411865
    10. ' None' → logprob: -8.010046005249023

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02621297724545002
    2. '   ' → logprob: -4.1512131690979
    3. ' for' → logprob: -5.0262131690979
    4. ' idx' → logprob: -7.0262131690979
    5. ' None' → logprob: -7.0262131690979
    6. 'if' (adapté à ' if') → logprob: -7.1512131690979
    7. ' ' → logprob: -7.5262131690979
    8. ' i' → logprob: -9.026212692260742
    9. '    ' → logprob: -10.151212692260742
    10. ' range' → logprob: -10.401212692260742

Token 115: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20423869788646698
    2. 'idx' → logprob: -1.7042386531829834
    3. ' num' → logprob: -6.7042388916015625
    4. 'num' → logprob: -6.7042388916015625
    5. '0' → logprob: -9.454238891601562
    6. ' ' → logprob: -9.454238891601562
    7. '	idx' → logprob: -9.704238891601562
    8. '(idx' → logprob: -10.329238891601562
    9. '1' → logprob: -10.454238891601562
    10. ' not' → logprob: -10.579238891601562

Token 116: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48301827907562256
    2. ' ==' → logprob: -0.9830182790756226
    3. '>' → logprob: -5.358018398284912
    4. ' >' → logprob: -6.108018398284912
    5. ' ' → logprob: -7.108018398284912
    6. '!=' → logprob: -8.233017921447754
    7. ' !=' → logprob: -8.858017921447754
    8. ':' → logprob: -8.983017921447754
    9. '>=' → logprob: -9.233017921447754
    10. ' <' → logprob: -9.233017921447754

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011727249948307872
    2. ' ' → logprob: -6.7511725425720215
    3. '1' → logprob: -13.87617301940918
    4. 'X' → logprob: -14.93867301940918
    5. 'N' → logprob: -15.12617301940918
    6. '  ' → logprob: -16.06367301940918
    7. ':' → logprob: -16.56367301940918
    8. '>' → logprob: -16.81367301940918
    9. '00' → logprob: -16.87617301940918
    10. '   ' → logprob: -16.93867301940918

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013732308521866798
    2. ':
' → logprob: -4.388732433319092
    3. '       ' → logprob: -7.263732433319092
    4. '   ' → logprob: -8.638731956481934
    5. ' continue' → logprob: -8.888731956481934
    6. '	continue' → logprob: -9.513731956481934
    7. ' or' → logprob: -9.763731956481934
    8. 'continue' → logprob: -11.138731956481934
    9. ':
' → logprob: -11.263731956481934
    10. ' :' → logprob: -11.263731956481934

Token 119: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5435543060302734
    2. ' continue' → logprob: -0.9185543060302734
    3. 'continue' → logprob: -4.043554306030273
    4. '   ' → logprob: -6.293554306030273
    5. '	continue' → logprob: -7.543554306030273
    6. ' ' → logprob: -9.168554306030273
    7. '	' → logprob: -9.918554306030273
    8. ' continues' → logprob: -10.293554306030273
    9. '    ' → logprob: -10.793554306030273
    10. '     ' → logprob: -11.043554306030273

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3738318383693695
    2. '   ' → logprob: -1.373831868171692
    3. '<|end|>' → logprob: -3.6238317489624023
    4. '    
' → logprob: -3.8738317489624023
    5. ' 
' → logprob: -6.123831748962402
    6. '  
' → logprob: -6.248831748962402
    7. ' for' → logprob: -6.373831748962402
    8. '
' → logprob: -6.623831748962402
    9. '       ' → logprob: -6.873831748962402
    10. '<|end|>' → logprob: -7.498831748962402

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033447425812482834
    2. '
' → logprob: -4.033447265625
    3. '    
' → logprob: -5.158447265625
    4. ' for' → logprob: -5.408447265625
    5. '<|end|>' → logprob: -6.158447265625
    6. '	for' → logprob: -7.033447265625
    7. '       ' → logprob: -8.033447265625
    8. 'for' → logprob: -8.533447265625
    9. '	
' → logprob: -8.658447265625
    10. ' 
' → logprob: -8.908447265625

Token 122: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10756397992372513
    2. ' for' → logprob: -2.3575639724731445
    3. '   ' → logprob: -5.3575639724731445
    4. 'new' → logprob: -6.7325639724731445
    5. ' new' → logprob: -7.3575639724731445
    6. 'dp' → logprob: -8.232563972473145
    7. 'next' → logprob: -9.482563972473145
    8. 'nd' → logprob: -9.732563972473145
    9. 'DP' → logprob: -9.857563972473145
    10. 'temp' → logprob: -9.857563972473145

Token 123: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07882975041866302
    2. ' =' → logprob: -2.953829765319824
    3. '=[' → logprob: -3.828829765319824
    4. 'DP' → logprob: -6.703829765319824
    5. '[' → logprob: -7.953829765319824
    6. '=[[' → logprob: -9.578829765319824
    7. ' =[' → logprob: -9.578829765319824
    8. '=[]' → logprob: -9.703829765319824
    9. '_DP' → logprob: -10.703829765319824
    10. '_=' → logprob: -10.703829765319824

Token 124: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024997323751449585
    2. ' [' → logprob: -3.7749972343444824
    3. '0' → logprob: -6.399997234344482
    4. 'row' → logprob: -10.27499771118164
    5. '[x' → logprob: -11.02499771118164
    6. '(' → logprob: -12.14999771118164
    7. '[a' → logprob: -12.14999771118164
    8. '([' → logprob: -12.27499771118164
    9. ' ' → logprob: -12.77499771118164
    10. 'x' → logprob: -13.02499771118164

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.171581091824919e-05
    2. ' ' → logprob: -9.75007152557373
    3. '(' → logprob: -11.50007152557373
    4. 'False' → logprob: -13.75007152557373
    5. ']' → logprob: -14.62507152557373
    6. 'int' → logprob: -15.00007152557373
    7. ' (' → logprob: -15.12507152557373
    8. '[' → logprob: -15.43757152557373
    9. 'None' → logprob: -15.68757152557373
    10. ')' → logprob: -16.500072479248047

Token 126: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.000818561646156013
    2. ']' → logprob: -7.500818729400635
    3. ']*' → logprob: -8.250818252563477
    4. '*(' → logprob: -12.625818252563477
    5. '](' → logprob: -14.000818252563477
    6. ' for' → logprob: -15.750818252563477
    7. ']+' → logprob: -16.375818252563477
    8. ')*(' → logprob: -16.500818252563477
    9. ' ]' → logprob: -17.125818252563477
    10. 'for' → logprob: -17.250818252563477

Token 127: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0019317318219691515
    2. '(X' → logprob: -6.251931667327881
    3. ' X' → logprob: -12.751932144165039
    4. '(' → logprob: -16.62693214416504
    5. ' (' → logprob: -16.75193214416504
    6. '   ' → logprob: -17.50193214416504
    7. '	X' → logprob: -17.75193214416504
    8. 'len' → logprob: -17.87693214416504
    9. '
' → logprob: -18.00193214416504
    10. ')' → logprob: -18.25193214416504

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.935296834039036e-06
    2. ' +' → logprob: -12.75000286102295
    3. '+
' → logprob: -16.875003814697266
    4. '[' → logprob: -19.500003814697266
    5. '1' → logprob: -19.500003814697266
    6. 'plus' → logprob: -20.312503814697266
    7. ')+' → logprob: -20.312503814697266
    8. '+)' → logprob: -20.500003814697266
    9. '+

' → logprob: -20.625003814697266
    10. '＋' → logprob: -20.625003814697266

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. '2' → logprob: -10.625035285949707
    3. ' ' → logprob: -11.750035285949707
    4. '+' → logprob: -14.312535285949707
    5. '6' → logprob: -14.375035285949707
    6. '```' → logprob: -15.250035285949707
    7. '   ' → logprob: -15.437535285949707
    8. '7' → logprob: -15.750035285949707
    9. '11' → logprob: -15.812535285949707
    10. '10' → logprob: -16.00003433227539

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. ' )' → logprob: -10.875020980834961
    3. 'for' → logprob: -13.625020980834961
    4. ']' → logprob: -15.375020980834961
    5. ')
' → logprob: -16.00002098083496
    6. ')]' → logprob: -16.25002098083496
    7. '   ' → logprob: -16.37502098083496
    8. ' for' → logprob: -16.87502098083496
    9. '}' → logprob: -17.00002098083496
    10. ' ' → logprob: -17.25002098083496

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519405782222748
    2. 'for' → logprob: -1.5019406080245972
    3. '   ' → logprob: -12.501940727233887
    4. ' ' → logprob: -12.751940727233887
    5. '	for' → logprob: -12.751940727233887
    6. '    ' → logprob: -14.626940727233887
    7. ')' → logprob: -14.876940727233887
    8. '  ' → logprob: -15.251940727233887
    9. ' ' → logprob: -15.876940727233887
    10. '       ' → logprob: -16.75193977355957

Token 132: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.048629943281412125
    2. '_' → logprob: -3.0486299991607666
    3. ' ' → logprob: -11.048629760742188
    4. ' __' → logprob: -11.298629760742188
    5. ' in' → logprob: -11.923629760742188
    6. ' i' → logprob: -12.423629760742188
    7. '__' → logprob: -14.048629760742188
    8. ' ___' → logprob: -14.298629760742188
    9. ' j' → logprob: -14.423629760742188
    10. ' s' → logprob: -15.548629760742188

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040136661380529404
    2. '_' → logprob: -3.2901365756988525
    3. ' _' → logprob: -6.290136814117432
    4. 'in' → logprob: -9.290136337280273
    5. '_range' → logprob: -9.790136337280273
    6. 'range' → logprob: -9.915136337280273
    7. '_in' → logprob: -11.040136337280273
    8. ' ' → logprob: -11.665136337280273
    9. ' range' → logprob: -11.915136337280273
    10. '_x' → logprob: -13.540136337280273

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694701552391052
    2. ' range' → logprob: -2.1269469261169434
    3. '_range' → logprob: -11.626947402954102
    4. '_' → logprob: -12.626947402954102
    5. '	range' → logprob: -12.876947402954102
    6. '(range' → logprob: -14.001947402954102
    7. '[' → logprob: -14.001947402954102
    8. ' ' → logprob: -14.126947402954102
    9. ' xrange' → logprob: -14.376947402954102
    10. '   ' → logprob: -14.876947402954102

Token 135: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008062947308644652
    2. '(len' → logprob: -7.7508063316345215
    3. 'N' → logprob: -8.375805854797363
    4. '(' → logprob: -9.375805854797363
    5. 'len' → logprob: -10.375805854797363
    6. '((' → logprob: -11.250805854797363
    7. ' (' → logprob: -11.875805854797363
    8. ' N' → logprob: -13.000805854797363
    9. '   ' → logprob: -13.125805854797363
    10. '(n' → logprob: -13.500805854797363

Token 136: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.1041145626222715e-05
    2. '#' → logprob: -12.125011444091797
    3. '2' → logprob: -13.125011444091797
    4. '   ' → logprob: -13.500011444091797
    5. ' //' → logprob: -14.125011444091797
    6. '
' → logprob: -15.125011444091797
    7. '/' → logprob: -15.125011444091797
    8. '+' → logprob: -15.375011444091797
    9. ')' → logprob: -15.500011444091797
    10. '(' → logprob: -15.875011444091797

Token 137: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.9875325708417222e-05
    2. '1' → logprob: -10.500029563903809
    3. ' ' → logprob: -13.250029563903809
    4. '+' → logprob: -15.875029563903809
    5. '```' → logprob: -16.500030517578125
    6. '0' → logprob: -16.687530517578125
    7. ')' → logprob: -16.750030517578125
    8. '
' → logprob: -16.937530517578125
    9. '-' → logprob: -17.000030517578125
    10. '   ' → logprob: -17.062530517578125

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1637164789135568e-05
    2. ' +' → logprob: -11.500011444091797
    3. ')+' → logprob: -14.125011444091797
    4. '2' → logprob: -15.500011444091797
    5. '()+' → logprob: -15.625011444091797
    6. ')]' → logprob: -15.750011444091797
    7. '[' → logprob: -17.125011444091797
    8. ')' → logprob: -17.125011444091797
    9. 'plus' → logprob: -17.250011444091797
    10. ']+' → logprob: -17.250011444091797

Token 139: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003112711710855365
    2. '3' → logprob: -8.125310897827148
    3. '1' → logprob: -11.750310897827148
    4. ' ' → logprob: -12.812810897827148
    5. '4' → logprob: -14.000310897827148
    6. '

' → logprob: -14.250310897827148
    7. '(' → logprob: -14.437810897827148
    8. '   ' → logprob: -14.812810897827148
    9. '
' → logprob: -15.000310897827148
    10. '+' → logprob: -15.437810897827148

Token 140: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2200479507446289
    2. ')]' → logprob: -1.720047950744629
    3. '+' → logprob: -4.095047950744629
    4. ']' → logprob: -6.720047950744629
    5. '2' → logprob: -8.470047950744629
    6. ' )' → logprob: -8.720047950744629
    7. ')]
' → logprob: -9.095047950744629
    8. ')][' → logprob: -10.720047950744629
    9. ' +' → logprob: -10.970047950744629
    10. '   ' → logprob: -11.720047950744629

Token 141: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001083302078768611
    2. ' for' → logprob: -6.8760833740234375
    3. '   ' → logprob: -10.501083374023438
    4. '+' → logprob: -12.251083374023438
    5. '<|end|>' → logprob: -12.376083374023438
    6. '	for' → logprob: -12.626083374023438
    7. '
' → logprob: -12.876083374023438
    8. ')' → logprob: -13.626083374023438
    9. ' ' → logprob: -13.876083374023438
    10. 'tmp' → logprob: -14.001083374023438

Token 143: ' grp' (ID: 111219)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06435789167881012
    2. 'j' → logprob: -3.5643579959869385
    3. 'cnt' → logprob: -5.189357757568359
    4. 'k' → logprob: -5.439357757568359
    5. 'count' → logprob: -5.689357757568359
    6. 'used' → logprob: -6.314357757568359
    7. ' i' → logprob: -6.314357757568359
    8. 'length' → logprob: -6.564357757568359
    9. 'taken' → logprob: -6.689357757568359
    10. 'dp' → logprob: -6.814357757568359

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18157532811164856
    2. 'in' → logprob: -1.8065752983093262
    3. 'i' → logprob: -7.431575298309326
    4. ',' → logprob: -8.431575775146484
    5. 'size' → logprob: -8.556575775146484
    6. 'count' → logprob: -8.806575775146484
    7. '_size' → logprob: -8.931575775146484
    8. 's' → logprob: -9.431575775146484
    9. '_i' → logprob: -9.931575775146484
    10. '_count' → logprob: -9.931575775146484

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815006136894226
    2. ' range' → logprob: -4.0181498527526855
    3. '(range' → logprob: -16.643150329589844
    4. ' ' → logprob: -17.393150329589844
    5. ' xrange' → logprob: -17.518150329589844
    6. '	range' → logprob: -18.143150329589844
    7. '  ' → logprob: -18.518150329589844
    8. 'ange' → logprob: -19.143150329589844
    9. '   ' → logprob: -19.393150329589844
    10. 'rang' → logprob: -20.393150329589844

Token 146: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0338643342256546
    2. '(N' → logprob: -3.4088642597198486
    3. '1' → logprob: -8.78386402130127
    4. '(len' → logprob: -9.78386402130127
    5. ' (' → logprob: -13.03386402130127
    6. '(D' → logprob: -13.28386402130127
    7. '(X' → logprob: -13.65886402130127
    8. '((' → logprob: -13.78386402130127
    9. '   ' → logprob: -14.28386402130127
    10. 'len' → logprob: -14.40886402130127

Token 147: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2825544774532318
    2. '1' → logprob: -1.5325545072555542
    3. 'len' → logprob: -4.157554626464844
    4. '(N' → logprob: -4.532554626464844
    5. '(' → logprob: -6.157554626464844
    6. '0' → logprob: -6.657554626464844
    7. '(len' → logprob: -8.657554626464844
    8. 'X' → logprob: -9.782554626464844
    9. 'min' → logprob: -10.282554626464844
    10. 'max' → logprob: -10.657554626464844

Token 148: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7341901063919067
    2. ',N' → logprob: -0.7341901063919067
    3. ',X' → logprob: -3.234189987182617
    4. ' ,' → logprob: -7.234189987182617
    5. ',num' → logprob: -9.984189987182617
    6. ',len' → logprob: -10.109189987182617
    7. ',n' → logprob: -12.609189987182617
    8. ',min' → logprob: -13.359189987182617
    9. ',int' → logprob: -13.484189987182617
    10. ',(' → logprob: -13.484189987182617

Token 149: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -9.2576454335358e-05
    2. '#' → logprob: -9.500092506408691
    3. ' //' → logprob: -11.750092506408691
    4. '
' → logprob: -12.625092506408691
    5. '2' → logprob: -12.750092506408691
    6. '[' → logprob: -13.375092506408691
    7. '+' → logprob: -14.625092506408691
    8. '   ' → logprob: -14.750092506408691
    9. '1' → logprob: -15.500092506408691
    10. '```' → logprob: -15.750092506408691

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.229872087715194e-05
    2. '//' → logprob: -9.750061988830566
    3. ' ' → logprob: -12.875061988830566
    4. '(' → logprob: -14.500061988830566
    5. '1' → logprob: -14.500061988830566
    6. '
' → logprob: -16.250062942504883
    7. '```' → logprob: -16.250062942504883
    8. '/' → logprob: -16.875062942504883
    9. '#' → logprob: -17.500062942504883
    10. '3' → logprob: -17.500062942504883

Token 151: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023441045777872205
    2. ' +' → logprob: -8.375234603881836
    3. ')+' → logprob: -13.625234603881836
    4. '   ' → logprob: -14.125234603881836
    5. '):
' → logprob: -14.625234603881836
    6. '```' → logprob: -15.250234603881836
    7. '+
' → logprob: -15.375234603881836
    8. '
' → logprob: -15.625234603881836
    9. '2' → logprob: -15.625234603881836
    10. '):' → logprob: -15.750234603881836

Token 152: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41329360008239746
    2. '1' → logprob: -1.2882936000823975
    3. '2' → logprob: -2.7882936000823975
    4. ' +' → logprob: -7.163293838500977
    5. ' ' → logprob: -8.288293838500977
    6. 'X' → logprob: -9.913293838500977
    7. '0' → logprob: -10.288293838500977
    8. '   ' → logprob: -10.663293838500977
    9. '(' → logprob: -10.913293838500977
    10. ')+' → logprob: -10.913293838500977

Token 153: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7336593866348267
    2. '):' → logprob: -0.7336593866348267
    3. '+' → logprob: -3.233659267425537
    4. '   ' → logprob: -9.108659744262695
    5. '):
' → logprob: -9.233659744262695
    6. ')' → logprob: -10.108659744262695
    7. ' +' → logprob: -10.983659744262695
    8. '):

' → logprob: -12.233659744262695
    9. ' ):
' → logprob: -12.233659744262695
    10. ' ):' → logprob: -12.358659744262695

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021409237757325172
    2. ' for' → logprob: -4.271409034729004
    3. '   ' → logprob: -5.396409034729004
    4. 'for' → logprob: -6.021409034729004
    5. '	for' → logprob: -9.521409034729004
    6. '	   ' → logprob: -9.896409034729004
    7. ',' → logprob: -10.021409034729004
    8. '    ' → logprob: -10.896409034729004
    9. '	' → logprob: -11.146409034729004
    10. ' ' → logprob: -11.271409034729004

Token 155: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1455187350511551
    2. ' for' → logprob: -2.0205187797546387
    3. '   ' → logprob: -5.895518779754639
    4. '       ' → logprob: -9.64551830291748
    5. '	for' → logprob: -11.39551830291748
    6. ' ' → logprob: -11.89551830291748
    7. '    ' → logprob: -12.77051830291748
    8. '  ' → logprob: -14.89551830291748
    9. ',' → logprob: -15.39551830291748
    10. ' ' → logprob: -15.52051830291748

Token 156: '=' (ID: 28)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5388107895851135
    2. 'in' → logprob: -1.2888107299804688
    3. '=' → logprob: -2.4138107299804688
    4. ' in' → logprob: -3.4138107299804688
    5. 'um' → logprob: -4.288810729980469
    6. ' for' → logprob: -6.663810729980469
    7. 'range' → logprob: -6.913810729980469
    8. ' =' → logprob: -7.288810729980469
    9. '   ' → logprob: -7.288810729980469
    10. '=in' → logprob: -9.038810729980469

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07486874610185623
    2. 'X' → logprob: -2.824868679046631
    3. '[' → logprob: -5.574868679046631
    4. 'num' → logprob: -6.449868679046631
    5. 'grp' → logprob: -6.449868679046631
    6. '[X' → logprob: -6.699868679046631
    7. 'nums' → logprob: -6.949868679046631
    8. 'max' → logprob: -7.074868679046631
    9. 'DP' → logprob: -7.699868679046631
    10. 'range' → logprob: -7.824868679046631

Token 158: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5227535963058472
    2. ' for' → logprob: -1.8977535963058472
    3. '   ' → logprob: -2.5227537155151367
    4. '<|end|>' → logprob: -3.0227537155151367
    5. ' ' → logprob: -3.1477537155151367
    6. '       ' → logprob: -3.2727537155151367
    7. '
' → logprob: -3.7727537155151367
    8. '	for' → logprob: -5.147753715515137
    9. '+' → logprob: -5.522753715515137
    10. '  ' → logprob: -5.897753715515137

Token 159: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9742915034294128
    2. '   ' → logprob: -1.2242915630340576
    3. ' for' → logprob: -1.8492915630340576
    4. '
' → logprob: -2.7242915630340576
    5. '       ' → logprob: -3.0992915630340576
    6. '	for' → logprob: -3.3492915630340576
    7. ' ' → logprob: -4.2242913246154785
    8. '<|end|>' → logprob: -5.5992913246154785
    9. '  ' → logprob: -6.7242913246154785
    10. '+' → logprob: -7.0992913246154785

Token 160: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007676983950659633
    2. ' for' → logprob: -7.375767707824707
    3. '       ' → logprob: -9.000767707824707
    4. 'j' → logprob: -11.375767707824707
    5. '   ' → logprob: -12.875767707824707
    6. 'grp' → logprob: -14.500767707824707
    7. 'dp' → logprob: -14.750767707824707
    8. 'range' → logprob: -14.750767707824707
    9. '        
' → logprob: -15.000767707824707
    10. '	for' → logprob: -15.000767707824707

Token 161: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012721538543701172
    2. ' s' → logprob: -4.512721538543701
    3. '(s' → logprob: -7.512721538543701
    4. 'X' → logprob: -7.637721538543701
    5. 'tmp' → logprob: -9.13772201538086
    6. 'True' → logprob: -9.26272201538086
    7. 'grp' → logprob: -9.26272201538086
    8. '(' → logprob: -9.76272201538086
    9. 'num' → logprob: -9.76272201538086
    10. 'idx' → logprob: -10.26272201538086

Token 162: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.055084485560655594
    2. ' <=' → logprob: -2.930084466934204
    3. '<X' → logprob: -9.430084228515625
    4. '<' → logprob: -9.680084228515625
    5. '+' → logprob: -10.555084228515625
    6. '>=' → logprob: -11.680084228515625
    7. '*' → logprob: -11.805084228515625
    8. ' <' → logprob: -12.055084228515625
    9. ' +' → logprob: -13.055084228515625
    10. '<num' → logprob: -13.805084228515625

Token 163: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.0722858102526516e-05
    2. ' X' → logprob: -10.125041007995605
    3. 'num' → logprob: -15.625041007995605
    4. 'Xs' → logprob: -16.25004005432129
    5. 'x' → logprob: -16.62504005432129
    6. '   ' → logprob: -16.87504005432129
    7. '	X' → logprob: -17.25004005432129
    8. '(X' → logprob: -17.50004005432129
    9. '>X' → logprob: -17.87504005432129
    10. '```' → logprob: -17.87504005432129

Token 164: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.053318049758672714
    2. 'and' → logprob: -3.0533180236816406
    3. ':' → logprob: -5.428318023681641
    4. ':
' → logprob: -8.05331802368164
    5. '<|end|>' → logprob: -12.55331802368164
    6. ' :' → logprob: -12.80331802368164
    7. '	and' → logprob: -13.42831802368164
    8. ':

' → logprob: -14.42831802368164
    9. ' :
' → logprob: -14.80331802368164
    10. '<|end|>' → logprob: -14.80331802368164

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1377432942390442
    2. ':' → logprob: -2.3877432346343994
    3. ':
' → logprob: -4.2627434730529785
    4. '<|end|>' → logprob: -4.7627434730529785
    5. ' if' → logprob: -5.2627434730529785
    6. '       ' → logprob: -6.2627434730529785
    7. '<|end|>' → logprob: -6.6377434730529785
    8. 'if' → logprob: -6.7627434730529785
    9. ' :' → logprob: -6.7627434730529785
    10. ',' → logprob: -6.7627434730529785

Token 166: ' cnt' (ID: 27340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08858604729175568
    2. '           ' → logprob: -3.3385860919952393
    3. ' if' → logprob: -3.5885860919952393
    4. 'tmp' → logprob: -4.83858585357666
    5. 'for' → logprob: -5.21358585357666
    6. 'DP' → logprob: -5.58858585357666
    7. 's' → logprob: -6.71358585357666
    8. '               ' → logprob: -7.21358585357666
    9. '+' → logprob: -7.83858585357666
    10. '   ' → logprob: -8.08858585357666

Token 167: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021077223122119904
    2. ' =' → logprob: -3.8960771560668945
    3. '=max' → logprob: -9.021077156066895
    4. '=s' → logprob: -9.521077156066895
    5. '[' → logprob: -9.771077156066895
    6. '=len' → logprob: -10.021077156066895
    7. '=[' → logprob: -10.271077156066895
    8. '=int' → logprob: -10.271077156066895
    9. '=num' → logprob: -10.771077156066895
    10. '=(' → logprob: -11.146077156066895

Token 168: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.006036396604031324
    2. '(' → logprob: -5.631036281585693
    3. '0' → logprob: -6.381036281585693
    4. '(s' → logprob: -8.506036758422852
    5. ' DP' → logprob: -8.756036758422852
    6. 's' → logprob: -9.006036758422852
    7. 'tmp' → logprob: -9.131036758422852
    8. '(D' → logprob: -10.381036758422852
    9. 'num' → logprob: -10.756036758422852
    10. 'nums' → logprob: -11.131036758422852

Token 169: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. 'grp' → logprob: -13.500001907348633
    3. '[group' → logprob: -15.000001907348633
    4. '[
' → logprob: -16.000001907348633
    5. '```' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. ' [' → logprob: -17.125001907348633
    8. '       ' → logprob: -17.375001907348633
    9. 's' → logprob: -17.375001907348633
    10. '
' → logprob: -17.625001907348633

Token 170: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -3.786196975852363e-05
    2. '[' → logprob: -10.375038146972656
    3. ' grp' → logprob: -12.500038146972656
    4. 'gp' → logprob: -14.250038146972656
    5. 'grpc' → logprob: -14.750038146972656
    6. '[group' → logprob: -14.875038146972656
    7. '.grp' → logprob: -14.875038146972656
    8. 'idx' → logprob: -15.125038146972656
    9. 'gru' → logprob: -15.750038146972656
    10. '   ' → logprob: -15.750038146972656

Token 171: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0034577527549117804
    2. '-' → logprob: -6.003457546234131
    3. '[s' → logprob: -7.378457546234131
    4. 's' → logprob: -8.503458023071289
    5. ']' → logprob: -9.253458023071289
    6. ' ][' → logprob: -10.378458023071289
    7. '[' → logprob: -11.878458023071289
    8. '"][' → logprob: -12.503458023071289
    9. ' -' → logprob: -12.753458023071289
    10. '   ' → logprob: -13.003458023071289

Token 172: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.704273118884885e-07
    2. ' s' → logprob: -14.875000953674316
    3. ']' → logprob: -16.5
    4. '(s' → logprob: -16.5
    5. '[s' → logprob: -17.125
    6. 'num' → logprob: -17.875
    7. 'max' → logprob: -18.25
    8. '   ' → logprob: -18.5
    9. '```' → logprob: -18.5
    10. 'X' → logprob: -18.625

Token 173: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010283061303198338
    2. ']%' → logprob: -4.76028299331665
    3. 'if' → logprob: -6.63528299331665
    4. ']
' → logprob: -9.010283470153809
    5. ' ]' → logprob: -10.010283470153809
    6. ' if' → logprob: -10.260283470153809
    7. ']:
' → logprob: -10.510283470153809
    8. ']<<' → logprob: -10.760283470153809
    9. '%' → logprob: -10.760283470153809
    10. ']:' → logprob: -11.135283470153809

Token 174: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6750678420066833
    2. '           ' → logprob: -1.0500679016113281
    3. 'if' → logprob: -2.675067901611328
    4. '+' → logprob: -3.175067901611328
    5. ')' → logprob: -4.050067901611328
    6. '<|end|>' → logprob: -5.425067901611328
    7. '
' → logprob: -6.550067901611328
    8. '%' → logprob: -6.800067901611328
    9. ' +' → logprob: -7.550067901611328
    10. ' ' → logprob: -7.675067901611328

Token 175: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011125517077744007
    2. ' if' → logprob: -5.511125564575195
    3. '           ' → logprob: -6.136125564575195
    4. 'tmp' → logprob: -6.136125564575195
    5. 's' → logprob: -6.261125564575195
    6. '+' → logprob: -7.636125564575195
    7. 'for' → logprob: -8.636125564575195
    8. 'while' → logprob: -11.261125564575195
    9. 'print' → logprob: -11.386125564575195
    10. ')' → logprob: -11.386125564575195

Token 176: ' not' (ID: 625)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.0014338012551888824
    2. 's' → logprob: -7.001433849334717
    3. ' cnt' → logprob: -7.876433849334717
    4. 'num' → logprob: -9.251433372497559
    5. '(cnt' → logprob: -11.001433372497559
    6. 'grp' → logprob: -11.126433372497559
    7. ' s' → logprob: -12.376433372497559
    8. '	cnt' → logprob: -13.126433372497559
    9. 'idx' → logprob: -13.251433372497559
    10. '0' → logprob: -13.376433372497559

Token 177: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.014191241934895515
    2. ' cnt' → logprob: -4.264191150665283
    3. '(cnt' → logprob: -10.639191627502441
    4. '	cnt' → logprob: -13.389191627502441
    5. '[cnt' → logprob: -14.264191627502441
    6. 'num' → logprob: -14.514191627502441
    7. 's' → logprob: -14.764191627502441
    8. ' s' → logprob: -15.639191627502441
    9. '0' → logprob: -16.139190673828125
    10. 'ct' → logprob: -16.264190673828125

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034343579318374395
    2. ':
' → logprob: -5.753434181213379
    3. ':return' → logprob: -8.628434181213379
    4. ' or' → logprob: -10.378434181213379
    5. '):' → logprob: -10.628434181213379
    6. ' :' → logprob: -11.003434181213379
    7. ')' → logprob: -14.003434181213379
    8. '==' → logprob: -14.003434181213379
    9. ':

' → logprob: -14.128434181213379
    10. '):
' → logprob: -14.503434181213379

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026147710159420967
    2. 's' → logprob: -4.401147842407227
    3. ' s' → logprob: -4.651147842407227
    4. '           ' → logprob: -5.901147842407227
    5. '   ' → logprob: -7.901147842407227
    6. ' ' → logprob: -8.651147842407227
    7. '                   ' → logprob: -9.026147842407227
    8. '             ' → logprob: -9.651147842407227
    9. '              ' → logprob: -9.776147842407227
    10. ':' → logprob: -9.901147842407227

Token 180: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.07192682474851608
    2. ' s' → logprob: -2.6969268321990967
    3. '               ' → logprob: -6.446926593780518
    4. '           ' → logprob: -7.946926593780518
    5. '                   ' → logprob: -10.821927070617676
    6. '   ' → logprob: -11.446927070617676
    7. '	s' → logprob: -12.321927070617676
    8. 'print' → logprob: -13.071927070617676
    9. ' ' → logprob: -13.196927070617676
    10. '
' → logprob: -13.446927070617676

Token 181: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013288103509694338
    2. ' +=' → logprob: -6.626328945159912
    3. ']+=' → logprob: -12.876328468322754
    4. '+' → logprob: -16.12632942199707
    5. '```' → logprob: -16.37632942199707
    6. '   ' → logprob: -16.62632942199707
    7. '+=(' → logprob: -18.12632942199707
    8. 's' → logprob: -18.62632942199707
    9. '+="' → logprob: -18.62632942199707
    10. '           ' → logprob: -18.75132942199707

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.250001907348633
    4. '+' → logprob: -19.125001907348633
    5. '```' → logprob: -19.250001907348633
    6. '           ' → logprob: -20.000001907348633
    7. '
' → logprob: -20.500001907348633
    8. '  ' → logprob: -20.500001907348633
    9. ' ' → logprob: -20.875001907348633
    10. '...' → logprob: -21.000001907348633

Token 183: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04547150433063507
    2. 'continue' → logprob: -3.170471429824829
    3. ' continue' → logprob: -6.045471668243408
    4. '           ' → logprob: -10.04547119140625
    5. '	continue' → logprob: -11.29547119140625
    6. '
' → logprob: -11.54547119140625
    7. ';' → logprob: -11.79547119140625
    8. '_continue' → logprob: -11.79547119140625
    9. '```' → logprob: -12.92047119140625
    10. '                   ' → logprob: -12.92047119140625

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010622117668390274
    2. 'continue' → logprob: -4.635622024536133
    3. ' continue' → logprob: -7.135622024536133
    4. '           ' → logprob: -10.010622024536133
    5. 'else' → logprob: -12.385622024536133
    6. '_continue' → logprob: -12.385622024536133
    7. '	continue' → logprob: -12.510622024536133
    8. ',' → logprob: -13.135622024536133
    9. '```' → logprob: -13.260622024536133
    10. ';' → logprob: -13.510622024536133

Token 185: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.007622960489243269
    2. '               ' → logprob: -5.007623195648193
    3. ' continue' → logprob: -7.007623195648193
    4. '	continue' → logprob: -13.382622718811035
    5. 'contin' → logprob: -14.882622718811035
    6. 'continu' → logprob: -15.632622718811035
    7. '_continue' → logprob: -16.38262367248535
    8. '           ' → logprob: -16.50762367248535
    9. '                   ' → logprob: -16.63262367248535
    10. '
' → logprob: -17.63262367248535

Token 186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00435677170753479
    2. 'if' → logprob: -5.754356861114502
    3. '            
' → logprob: -7.754356861114502
    4. ' if' → logprob: -8.004356384277344
    5. 'num' → logprob: -9.754356384277344
    6. '
' → logprob: -9.879356384277344
    7. 'for' → logprob: -10.129356384277344
    8. 'elif' → logprob: -10.254356384277344
    9. 'else' → logprob: -10.379356384277344
    10. 's' → logprob: -10.379356384277344

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03540322184562683
    2. 'if' → logprob: -3.785403251647949
    3. ' if' → logprob: -5.410403251647949
    4. '            
' → logprob: -6.160403251647949
    5. '
' → logprob: -6.910403251647949
    6. 'for' → logprob: -7.160403251647949
    7. 'tmp' → logprob: -7.160403251647949
    8. ' for' → logprob: -7.410403251647949
    9. 's' → logprob: -7.910403251647949
    10. 'DP' → logprob: -8.16040325164795

Token 188: ' mult' (ID: 3469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21643993258476257
    2. '           ' → logprob: -2.341439962387085
    3. 'DP' → logprob: -3.466439962387085
    4. 'tmp' → logprob: -4.216439723968506
    5. '#' → logprob: -4.591439723968506
    6. '+' → logprob: -4.716439723968506
    7. 'add' → logprob: -4.966439723968506
    8. 'new' → logprob: -5.216439723968506
    9. 'for' → logprob: -5.466439723968506
    10. ' if' → logprob: -5.466439723968506

Token 189: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.059410300105810165
    2. 'iplier' → logprob: -3.059410333633423
    3. ' =' → logprob: -5.559410095214844
    4. 'ipl' → logprob: -6.559410095214844
    5. '=i' → logprob: -6.934410095214844
    6. 'iple' → logprob: -7.059410095214844
    7. '=num' → logprob: -7.059410095214844
    8. '=s' → logprob: -7.684410095214844
    9. '=len' → logprob: -7.684410095214844
    10. '=[' → logprob: -7.809410095214844

Token 190: 'cnt' (ID: 33160)
  Prédit: 'grp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.6503322720527649
    2. 'pow' → logprob: -1.5253322124481201
    3. 'num' → logprob: -2.02533221244812
    4. '(' → logprob: -3.27533221244812
    5. '1' → logprob: -3.77533221244812
    6. 'cnt' → logprob: -4.025332450866699
    7. '2' → logprob: -4.400332450866699
    8. '(num' → logprob: -4.400332450866699
    9. 'max' → logprob: -5.400332450866699
    10. '(gr' → logprob: -5.900332450866699

Token 191: '
' (ID: 198)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.468091756105423
    2. '*' → logprob: -1.0930917263031006
    3. ' *' → logprob: -4.21809196472168
    4. '
' → logprob: -4.96809196472168
    5. 'if' → logprob: -5.59309196472168
    6. '*num' → logprob: -5.59309196472168
    7. '*((' → logprob: -5.59309196472168
    8. '           ' → logprob: -5.71809196472168
    9. ' if' → logprob: -6.96809196472168
    10. '*s' → logprob: -8.84309196472168

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4139844477176666
    2. '
' → logprob: -2.038984537124634
    3. '*' → logprob: -2.788984537124634
    4. ' if' → logprob: -2.788984537124634
    5. 'if' → logprob: -2.913984537124634
    6. '*num' → logprob: -4.538984298706055
    7. 'for' → logprob: -4.663984298706055
    8. '            
' → logprob: -5.663984298706055
    9. ' for' → logprob: -6.288984298706055
    10. ' *' → logprob: -6.413984298706055

Token 193: ' nxt' (ID: 160200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.268290251493454
    2. 'for' → logprob: -2.2682902812957764
    3. 'tmp' → logprob: -3.1432902812957764
    4. '           ' → logprob: -3.3932902812957764
    5. '#' → logprob: -3.6432902812957764
    6. ' if' → logprob: -5.018290042877197
    7. 'while' → logprob: -5.268290042877197
    8. '*' → logprob: -5.393290042877197
    9. '+' → logprob: -5.518290042877197
    10. 'mult' → logprob: -6.893290042877197

Token 194: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2632278501987457
    2. '=s' → logprob: -1.7632278203964233
    3. 's' → logprob: -4.388227939605713
    4. '=X' → logprob: -4.513227939605713
    5. ' =' → logprob: -4.638227939605713
    6. '=num' → logprob: -5.513227939605713
    7. '=[' → logprob: -5.638227939605713
    8. '_s' → logprob: -5.763227939605713
    9. '=j' → logprob: -6.013227939605713
    10. 'for' → logprob: -6.013227939605713

Token 195: 'grp' (ID: 86102)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010448360117152333
    2. 'num' → logprob: -7.251044750213623
    3. 'X' → logprob: -9.001045227050781
    4. 'min' → logprob: -9.751045227050781
    5. ' s' → logprob: -10.501045227050781
    6. 'nums' → logprob: -10.626045227050781
    7. 'idx' → logprob: -10.751045227050781
    8. 'grp' → logprob: -11.001045227050781
    9. '0' → logprob: -11.251045227050781
    10. '[s' → logprob: -11.501045227050781

Token 196: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03206649795174599
    2. '+n' → logprob: -4.657066345214844
    3. '
' → logprob: -4.782066345214844
    4. '           ' → logprob: -5.157066345214844
    5. '-' → logprob: -5.532066345214844
    6. ' +' → logprob: -6.032066345214844
    7. '+s' → logprob: -7.532066345214844
    8. '<|end|>' → logprob: -8.282066345214844
    9. 's' → logprob: -9.157066345214844
    10. 'for' → logprob: -9.157066345214844

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030293059535324574
    2. '0' → logprob: -9.250303268432617
    3. ' ' → logprob: -10.000303268432617
    4. '[' → logprob: -10.500303268432617
    5. 'num' → logprob: -10.500303268432617
    6. '
' → logprob: -10.750303268432617
    7. 's' → logprob: -10.750303268432617
    8. '           ' → logprob: -11.125303268432617
    9. 'mult' → logprob: -11.125303268432617
    10. '   ' → logprob: -11.875303268432617

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042876776307821274
    2. '
' → logprob: -3.667876720428467
    3. '<|end|>' → logprob: -4.917876720428467
    4. ',' → logprob: -5.167876720428467
    5. ',s' → logprob: -7.042876720428467
    6. ' s' → logprob: -7.417876720428467
    7. '            
' → logprob: -8.042877197265625
    8. ' 
' → logprob: -8.292877197265625
    9. ' if' → logprob: -8.417877197265625
    10. 'if' → logprob: -8.417877197265625

Token 199: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11198215186595917
    2. '           ' → logprob: -2.4869821071624756
    3. 'while' → logprob: -4.861982345581055
    4. 'if' → logprob: -5.611982345581055
    5. 's' → logprob: -6.111982345581055
    6. ',' → logprob: -6.236982345581055
    7. '<|end|>' → logprob: -6.486982345581055
    8. ' s' → logprob: -6.486982345581055
    9. ' 
' → logprob: -6.736982345581055
    10. 'for' → logprob: -7.736982345581055

Token 200: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1147698387503624
    2. '           ' → logprob: -2.61476993560791
    3. 'if' (adapté à ' if') → logprob: -3.73976993560791
    4. ' while' → logprob: -4.98976993560791
    5. 'for' → logprob: -6.23976993560791
    6. '
' → logprob: -7.73976993560791
    7. 'next' → logprob: -8.11476993560791
    8. 'new' → logprob: -8.48976993560791
    9. 's' → logprob: -8.61476993560791
    10. 'n' → logprob: -8.61476993560791

Token 201: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31727319955825806
    2. 'num' → logprob: -1.8172731399536133
    3. ' s' → logprob: -2.4422731399536133
    4. ' num' → logprob: -4.067273139953613
    5. 'n' → logprob: -5.817273139953613
    6. 'X' → logprob: -7.442273139953613
    7. ' nxt' → logprob: -7.692273139953613
    8. '0' → logprob: -8.192273139953613
    9. '   ' → logprob: -8.817273139953613
    10. ' ' → logprob: -8.942273139953613

Token 202: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001657090149819851
    2. ' +' → logprob: -7.251657009124756
    3. '+s' → logprob: -7.501657009124756
    4. '<=' → logprob: -8.501657485961914
    5. '+n' → logprob: -9.501657485961914
    6. '+
' → logprob: -10.126657485961914
    7. '+x' → logprob: -11.001657485961914
    8. '+[' → logprob: -11.126657485961914
    9. '+k' → logprob: -11.751657485961914
    10. '+p' → logprob: -11.876657485961914

Token 203: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -8.506661833962426e-05
    2. ' num' → logprob: -9.62508487701416
    3. 'nums' → logprob: -11.00008487701416
    4. '[num' → logprob: -14.37508487701416
    5. '(num' → logprob: -15.12508487701416
    6. '	num' → logprob: -15.37508487701416
    7. '   ' → logprob: -15.50008487701416
    8. '*num' → logprob: -15.62508487701416
    9. '<num' → logprob: -16.000085830688477
    10. '```' → logprob: -16.125085830688477

Token 204: '+' (ID: 10)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17986463010311127
    2. ' <=' → logprob: -1.8048646450042725
    3. ']<=' → logprob: -9.679864883422852
    4. '[' → logprob: -10.429864883422852
    5. ')<=' → logprob: -11.054864883422852
    6. '```' → logprob: -12.554864883422852
    7. ' ' → logprob: -13.054864883422852
    8. '<' → logprob: -13.429864883422852
    9. '>' → logprob: -14.054864883422852
    10. ' ' → logprob: -14.804864883422852

Token 205: 'grp' (ID: 86102)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10255955904722214
    2. 'num' → logprob: -3.6025595664978027
    3. '<=' → logprob: -3.7275595664978027
    4. '1' → logprob: -4.477559566497803
    5. 'X' → logprob: -4.602559566497803
    6. 's' → logprob: -4.852559566497803
    7. ' ' → logprob: -5.477559566497803
    8. '<num' → logprob: -6.227559566497803
    9. ' <=' → logprob: -6.602559566497803
    10. ')' → logprob: -6.977559566497803

Token 206: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2533474564552307
    2. ' <=' → logprob: -1.503347396850586
    3. '<' → logprob: -7.753347396850586
    4. '*' → logprob: -8.378347396850586
    5. '-' → logprob: -8.628347396850586
    6. ' <' → logprob: -8.628347396850586
    7. ')<=' → logprob: -9.253347396850586
    8. '<len' → logprob: -9.753347396850586
    9. ']<=' → logprob: -10.128347396850586
    10. '+' → logprob: -10.128347396850586

Token 207: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -5.860340752406046e-05
    2. ' X' → logprob: -9.7500581741333
    3. '>X' → logprob: -16.125059127807617
    4. ' ' → logprob: -16.750059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '	X' → logprob: -17.250059127807617
    7. '
' → logprob: -17.500059127807617
    8. '```' → logprob: -18.500059127807617
    9. ' ' → logprob: -19.375059127807617
    10. 'x' → logprob: -19.375059127807617

Token 208: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18043041229248047
    2. ':
' → logprob: -1.9304304122924805
    3. ' and' → logprob: -3.9304304122924805
    4. '           ' → logprob: -8.93043041229248
    5. '               ' → logprob: -9.18043041229248
    6. 'and' → logprob: -9.93043041229248
    7. ':
' → logprob: -10.80543041229248
    8. ' :' → logprob: -11.05543041229248
    9. ':

' → logprob: -11.30543041229248
    10. '):
' → logprob: -11.43043041229248

Token 209: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33082184195518494
    2. 'DP' → logprob: -2.3308217525482178
    3. 'grp' → logprob: -2.9558217525482178
    4. 'mult' → logprob: -3.3308217525482178
    5. 'tmp' → logprob: -3.5808217525482178
    6. 'N' → logprob: -4.705821990966797
    7. ' DP' → logprob: -4.705821990966797
    8. ' nxt' → logprob: -4.705821990966797
    9. ' grp' → logprob: -4.955821990966797
    10. 'num' → logprob: -4.955821990966797

Token 210: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5835919380187988
    2. ' <' → logprob: -1.7085919380187988
    3. '<' → logprob: -1.9585919380187988
    4. ' <=' → logprob: -2.708591938018799
    5. '<N' → logprob: -3.208591938018799
    6. '<len' → logprob: -5.083591938018799
    7. ':' → logprob: -6.208591938018799
    8. '<n' → logprob: -6.583591938018799
    9. '<num' → logprob: -7.458591938018799
    10. '>' → logprob: -7.458591938018799

Token 211: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.386147626675665e-05
    2. ' N' → logprob: -9.750073432922363
    3. '(N' → logprob: -11.125073432922363
    4. '   ' → logprob: -15.875073432922363
    5. ' (' → logprob: -15.875073432922363
    6. 'len' → logprob: -16.00007438659668
    7. '
' → logprob: -16.00007438659668
    8. ' ' → logprob: -16.87507438659668
    9. '	N' → logprob: -16.87507438659668
    10. '(' → logprob: -17.00007438659668

Token 212: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.4021237802808173e-05
    2. '#' → logprob: -12.375014305114746
    3. ' //' → logprob: -12.375014305114746
    4. '/' → logprob: -12.750014305114746
    5. 'and' → logprob: -13.375014305114746
    6. '://' → logprob: -15.375014305114746
    7. ' and' → logprob: -15.625014305114746
    8. '```' → logprob: -15.875014305114746
    9. ':' → logprob: -16.12501335144043
    10. '[' → logprob: -16.62501335144043

Token 213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -15.125000953674316
    4. '/' → logprob: -15.750000953674316
    5. '```' → logprob: -16.750001907348633
    6. '
' → logprob: -17.625001907348633
    7. '۲' → logprob: -17.937501907348633
    8. '   ' → logprob: -18.187501907348633
    9. '...' → logprob: -18.562501907348633
    10. '+' → logprob: -18.562501907348633

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029913058504462242
    2. ':
' → logprob: -3.6549129486083984
    3. ' and' → logprob: -5.654912948608398
    4. 'and' → logprob: -10.029912948608398
    5. '):' → logprob: -10.654912948608398
    6. ':

' → logprob: -11.279912948608398
    7. '<|end|>' → logprob: -12.279912948608398
    8. '):
' → logprob: -12.404912948608398
    9. ' :' → logprob: -12.404912948608398
    10. '           ' → logprob: -12.779912948608398

Token 215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031055843457579613
    2. ':
' → logprob: -3.6560559272766113
    3. ':' → logprob: -5.656055927276611
    4. '           ' → logprob: -7.656055927276611
    5. ' and' → logprob: -8.281055450439453
    6. '):
' → logprob: -8.906055450439453
    7. 'tmp' → logprob: -9.281055450439453
    8. '                
' → logprob: -9.656055450439453
    9. '              ' → logprob: -10.031055450439453
    10. '             ' → logprob: -10.531055450439453

Token 216: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.02383267506957054
    2. 'DP' → logprob: -3.7738325595855713
    3. ' tmp' → logprob: -7.89883279800415
    4. '               ' → logprob: -9.023832321166992
    5. ' DP' → logprob: -10.023832321166992
    6. '                   ' → logprob: -10.398832321166992
    7. 'temp' → logprob: -11.273832321166992
    8. '           ' → logprob: -12.648832321166992
    9. '                       ' → logprob: -14.148832321166992
    10. 'TMP' → logprob: -14.148832321166992

Token 217: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3877904713153839
    2. '[n' → logprob: -1.1377904415130615
    3. '[m' → logprob: -7.762790679931641
    4. '][' → logprob: -7.762790679931641
    5. '[tmp' → logprob: -10.51279067993164
    6. ')[' → logprob: -11.38779067993164
    7. '   ' → logprob: -11.88779067993164
    8. ' [' → logprob: -12.26279067993164
    9. '```' → logprob: -12.26279067993164
    10. '	' → logprob: -13.13779067993164

Token 218: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.004149391781538725
    2. 'x' → logprob: -5.754149436950684
    3. 'gt' → logprob: -7.379149436950684
    4. 't' → logprob: -8.629149436950684
    5. '[' → logprob: -10.379149436950684
    6. 'pt' → logprob: -11.004149436950684
    7. 'gr' → logprob: -11.129149436950684
    8. '```' → logprob: -11.379149436950684
    9. 'jt' → logprob: -11.379149436950684
    10. '   ' → logprob: -11.504149436950684

Token 219: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005412388709373772
    2. ']' → logprob: -7.6255412101745605
    3. ' ][' → logprob: -11.125541687011719
    4. '[s' → logprob: -11.250541687011719
    5. '[' → logprob: -11.375541687011719
    6. ' ' → logprob: -12.875541687011719
    7. '"][' → logprob: -13.000541687011719
    8. '][]' → logprob: -13.375541687011719
    9. ']][' → logprob: -13.750541687011719
    10. '           ' → logprob: -14.000541687011719

Token 220: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.796184723294573e-06
    2. ' s' → logprob: -12.125005722045898
    3. '
' → logprob: -15.750005722045898
    4. '   ' → logprob: -15.875005722045898
    5. '(s' → logprob: -17.1250057220459
    6. '
' → logprob: -18.3750057220459
    7. ' ' → logprob: -18.6250057220459
    8. '	s' → logprob: -19.0000057220459
    9. '           ' → logprob: -19.1250057220459
    10. '{s' → logprob: -19.3750057220459

Token 221: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.404745439183898e-05
    2. ' +' → logprob: -10.37503433227539
    3. ']+' → logprob: -13.00003433227539
    4. '+
' → logprob: -14.87503433227539
    5. '][' → logprob: -17.25003433227539
    6. '   ' → logprob: -17.37503433227539
    7. '＋' → logprob: -17.37503433227539
    8. '+n' → logprob: -17.50003433227539
    9. ']+=' → logprob: -17.62503433227539
    10. ']' → logprob: -17.75003433227539

Token 222: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.00010986098641296849
    2. ' num' → logprob: -9.125109672546387
    3. '(num' → logprob: -14.875109672546387
    4. '   ' → logprob: -15.250109672546387
    5. '
' → logprob: -15.750109672546387
    6. '	num' → logprob: -16.125110626220703
    7. '[num' → logprob: -17.375110626220703
    8. 'nums' → logprob: -17.875110626220703
    9. ' ' → logprob: -18.250110626220703
    10. 'nu' → logprob: -18.250110626220703

Token 223: ']=(' (ID: 138510)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. ' +' → logprob: -13.875001907348633
    3. '+n' → logprob: -14.875001907348633
    4. ']' → logprob: -15.625001907348633
    5. ']+=' → logprob: -16.000001907348633
    6. '+xml' → logprob: -16.250001907348633
    7. ']+' → logprob: -16.250001907348633
    8. '+
' → logprob: -17.000001907348633
    9. '[' → logprob: -17.375001907348633
    10. '+"]' → logprob: -17.375001907348633

Token 224: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.143306165933609
    2. 'tmp' → logprob: -2.018306255340576
    3. ' tmp' → logprob: -8.018305778503418
    4. ' (' → logprob: -9.268305778503418
    5. '/tmp' → logprob: -9.643305778503418
    6. '[tmp' → logprob: -9.768305778503418
    7. '               ' → logprob: -10.143305778503418
    8. '           ' → logprob: -11.018305778503418
    9. '(t' → logprob: -12.143305778503418
    10. ',tmp' → logprob: -12.143305778503418

Token 225: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.706686690449715e-05
    2. 'n' → logprob: -9.625066757202148
    3. '[next' → logprob: -15.125066757202148
    4. ')n' → logprob: -15.250066757202148
    5. '[' → logprob: -15.750066757202148
    6. '<n' → logprob: -15.750066757202148
    7. '<|end|>' → logprob: -16.87506675720215
    8. '```' → logprob: -17.00006675720215
    9. '	n' → logprob: -17.25006675720215
    10. ' n' → logprob: -17.87506675720215

Token 226: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.2689090371131897
    2. 'x' → logprob: -1.518908977508545
    3. 't' → logprob: -4.268908977508545
    4. '[n' → logprob: -7.143908977508545
    5. '[' → logprob: -7.518908977508545
    6. '][' → logprob: -7.518908977508545
    7. '```' → logprob: -8.268909454345703
    8. '[t' → logprob: -8.768909454345703
    9. 'tx' → logprob: -9.143909454345703
    10. 'n' → logprob: -9.268909454345703

Token 227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20331674814224243
    2. '[s' → logprob: -1.7033166885375977
    3. '[n' → logprob: -7.328316688537598
    4. '[' → logprob: -7.328316688537598
    5. ')[' → logprob: -7.953316688537598
    6. 's' → logprob: -9.828316688537598
    7. ']' → logprob: -10.203316688537598
    8. '"][' → logprob: -10.578316688537598
    9. '[S' → logprob: -11.078316688537598
    10. ' ][' → logprob: -11.203316688537598

Token 228: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.6537622034084052e-05
    2. '][' → logprob: -11.12502670288086
    3. '[s' → logprob: -12.25002670288086
    4. ' s' → logprob: -12.37502670288086
    5. '(s' → logprob: -13.75002670288086
    6. '
' → logprob: -15.12502670288086
    7. ']' → logprob: -15.50002670288086
    8. '   ' → logprob: -15.62502670288086
    9. '
' → logprob: -16.12502670288086
    10. '	s' → logprob: -16.50002670288086

Token 229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.088346359931165e-07
    2. '][' → logprob: -14.375000953674316
    3. '[' → logprob: -15.625000953674316
    4. ']+' → logprob: -17.25
    5. '           ' → logprob: -18.125
    6. ' +' → logprob: -18.25
    7. '+[' → logprob: -18.5
    8. '+
' → logprob: -18.75
    9. '[num' → logprob: -19.125
    10. ']' → logprob: -19.25

Token 230: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.5941604690160602e-05
    2. '+' → logprob: -11.500025749206543
    3. '(num' → logprob: -12.000025749206543
    4. '[num' → logprob: -12.625025749206543
    5. ' num' → logprob: -12.750025749206543
    6. 'nu' → logprob: -14.125025749206543
    7. ' ' → logprob: -14.250025749206543
    8. '   ' → logprob: -15.000025749206543
    9. '1' → logprob: -15.375025749206543
    10. ']' → logprob: -15.375025749206543

Token 231: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004383128602057695
    2. ' +' → logprob: -5.504383087158203
    3. '+n' → logprob: -8.879383087158203
    4. ']+' → logprob: -9.254383087158203
    5. '+(' → logprob: -9.879383087158203
    6. '+m' → logprob: -12.004383087158203
    7. ']' → logprob: -12.254383087158203
    8. '+c' → logprob: -13.129383087158203
    9. '+k' → logprob: -13.754383087158203
    10. '+t' → logprob: -14.254383087158203

Token 232: 'mult' (ID: 34841)
  Prédit: 'mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.006837560795247555
    2. 'cnt' → logprob: -5.631837368011475
    3. '(mult' → logprob: -6.506837368011475
    4. ' mult' → logprob: -6.881837368011475
    5. 'mul' → logprob: -8.381837844848633
    6. ' cnt' → logprob: -9.256837844848633
    7. 'multip' → logprob: -9.506837844848633
    8. 'mod' → logprob: -9.506837844848633
    9. '(cnt' → logprob: -9.631837844848633
    10. '   ' → logprob: -9.881837844848633

Token 233: '*n' (ID: 58470)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16117914021015167
    2. ')%' → logprob: -1.9111791849136353
    3. '%' → logprob: -7.161179065704346
    4. ' )' → logprob: -8.661179542541504
    5. '%)' → logprob: -13.536179542541504
    6. ' %' → logprob: -13.661179542541504
    7. ']%' → logprob: -13.661179542541504
    8. ']' → logprob: -14.286179542541504
    9. '```' → logprob: -15.036179542541504
    10. '+' → logprob: -15.911179542541504

Token 234: 'xt' (ID: 711)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.1173422709107399
    2. 'p' → logprob: -2.742342233657837
    3. 'ums' → logprob: -3.742342233657837
    4. 'mp' → logprob: -4.492342472076416
    5. 'ult' → logprob: -5.867342472076416
    6. 'ump' → logprob: -6.617342472076416
    7. 'm' → logprob: -6.992342472076416
    8. 'P' → logprob: -7.242342472076416
    9. 'pt' → logprob: -7.742342472076416
    10. 'od' → logprob: -7.867342472076416

Token 235: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.3154076337814331
    2. ')' → logprob: -1.315407633781433
    3. ' )' → logprob: -6.190407752990723
    4. '           ' → logprob: -10.690407752990723
    5. '                   ' → logprob: -10.690407752990723
    6. '   ' → logprob: -11.440407752990723
    7. '%' → logprob: -11.690407752990723
    8. '       ' → logprob: -12.440407752990723
    9. ']%' → logprob: -12.565407752990723
    10. '               ' → logprob: -12.940407752990723

Token 236: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0006014074315316975
    2. '(mod' → logprob: -7.500601291656494
    3. '100' → logprob: -10.000601768493652
    4. '(' → logprob: -12.750601768493652
    5. ' mod' → logprob: -15.375601768493652
    6. '```' → logprob: -18.000600814819336
    7. ' modulo' → logprob: -18.625600814819336
    8. 'MOD' → logprob: -18.875600814819336
    9. '	mod' → logprob: -19.750600814819336
    10. 'mo' → logprob: -19.875600814819336

Token 237: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.0037340454291552305
    2. 'mod' → logprob: -6.503734111785889
    3. '7' → logprob: -7.253734111785889
    4. 'ULO' → logprob: -7.378734111785889
    5. '```' → logprob: -8.37873363494873
    6. ' modulo' → logprob: -8.62873363494873
    7. '(mod' → logprob: -8.87873363494873
    8. '(' → logprob: -10.12873363494873
    9. '=' → logprob: -10.37873363494873
    10. '​' → logprob: -10.62873363494873

Token 238: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021470502018928528
    2. '
' → logprob: -4.771470546722412
    3. ' s' → logprob: -5.396470546722412
    4. 's' → logprob: -5.771470546722412
    5. '            
' → logprob: -6.396470546722412
    6. '               ' → logprob: -7.021470546722412
    7. ' 
' → logprob: -7.521470546722412
    8. '\n' → logprob: -8.021470069885254
    9. '<|end|>' → logprob: -8.021470069885254
    10. '		' → logprob: -8.146470069885254

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014165744185447693
    2. '               ' → logprob: -4.389165878295898
    3. ' s' → logprob: -7.139165878295898
    4. '
' → logprob: -7.889165878295898
    5. 's' → logprob: -8.889165878295898
    6. '          ' → logprob: -9.639165878295898
    7. '```' → logprob: -10.139165878295898
    8. '                   ' → logprob: -10.264165878295898
    9. '       ' → logprob: -10.389165878295898
    10. '+' → logprob: -10.514165878295898

Token 240: ' tmp' (ID: 8919)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2090679407119751
    2. ' s' → logprob: -1.959067940711975
    3. '           ' → logprob: -3.0840678215026855
    4. '+' → logprob: -6.9590678215026855
    5. 'n' → logprob: -8.834068298339844
    6. '       ' → logprob: -9.209068298339844
    7. '               ' → logprob: -9.209068298339844
    8. '
' → logprob: -9.334068298339844
    9. '          ' → logprob: -9.459068298339844
    10. '	s' → logprob: -9.709068298339844

Token 241: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.0590548703912646e-05
    2. '[group' → logprob: -11.375030517578125
    3. ' [' → logprob: -12.125030517578125
    4. '[n' → logprob: -12.250030517578125
    5. '][' → logprob: -13.125030517578125
    6. '[current' → logprob: -14.125030517578125
    7. '
' → logprob: -14.625030517578125
    8. '=' → logprob: -14.875030517578125
    9. 'grp' → logprob: -15.000030517578125
    10. '[s' → logprob: -15.125030517578125

Token 242: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.048803556710481644
    2. '[' → logprob: -3.0488035678863525
    3. ' grp' → logprob: -9.048803329467773
    4. 'gr' → logprob: -10.423803329467773
    5. '[group' → logprob: -10.798803329467773
    6. '   ' → logprob: -11.298803329467773
    7. 'gru' → logprob: -12.048803329467773
    8. '
' → logprob: -12.173803329467773
    9. '  ' → logprob: -12.673803329467773
    10. 'gp' → logprob: -13.173803329467773

Token 243: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03816014528274536
    2. '[s' → logprob: -3.2881600856781006
    3. ' ][' → logprob: -9.91316032409668
    4. ']' → logprob: -10.28816032409668
    5. '[' → logprob: -11.78816032409668
    6. ')[' → logprob: -11.91316032409668
    7. 's' → logprob: -12.66316032409668
    8. '"][' → logprob: -12.91316032409668
    9. ' [' → logprob: -12.91316032409668
    10. '>[' → logprob: -13.03816032409668

Token 244: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.60414821645827e-06
    2. ' s' → logprob: -12.500004768371582
    3. '(s' → logprob: -15.250004768371582
    4. '[s' → logprob: -15.250004768371582
    5. '
' → logprob: -15.625004768371582
    6. '```' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.125003814697266
    8. ']' → logprob: -17.375003814697266
    9. '`s' → logprob: -17.500003814697266
    10. '{s' → logprob: -17.875003814697266

Token 245: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.012364608235657215
    2. ']+=' → logprob: -5.262364387512207
    3. ']' → logprob: -5.637364387512207
    4. '][' → logprob: -6.137364387512207
    5. ']+' → logprob: -7.887364387512207
    6. ']=' → logprob: -8.262364387512207
    7. '[s' → logprob: -8.387364387512207
    8. '](' → logprob: -8.637364387512207
    9. '+' → logprob: -9.012364387512207
    10. '+s' → logprob: -9.762364387512207

Token 246: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.029833335429430008
    2. 'tmp' → logprob: -3.5298333168029785
    3. '[tmp' → logprob: -9.904833793640137
    4. ' tmp' → logprob: -11.154833793640137
    5. '/tmp' → logprob: -11.779833793640137
    6. ' (' → logprob: -12.029833793640137
    7. ',tmp' → logprob: -12.779833793640137
    8. '$tmp' → logprob: -14.279833793640137
    9. '	tmp' → logprob: -14.404833793640137
    10. '(t' → logprob: -14.904833793640137

Token 247: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.500000953674316
    3. 'grp' → logprob: -16.5
    4. '...' → logprob: -16.5
    5. 'tmp' → logprob: -17.375
    6. '#' → logprob: -17.5
    7. '<' → logprob: -17.875
    8. '][' → logprob: -17.875
    9. ')' → logprob: -18.0
    10. '[
' → logprob: -18.125

Token 248: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.0013445195509120822
    2. '[' → logprob: -6.626344680786133
    3. ' grp' → logprob: -11.376344680786133
    4. '
' → logprob: -13.501344680786133
    5. '.grp' → logprob: -13.501344680786133
    6. '```' → logprob: -13.876344680786133
    7. '[group' → logprob: -14.251344680786133
    8. 'gru' → logprob: -14.376344680786133
    9. '   ' → logprob: -14.376344680786133
    10. 'idx' → logprob: -15.251344680786133

Token 249: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001486535300500691
    2. '[s' → logprob: -6.626486301422119
    3. 's' → logprob: -9.251486778259277
    4. '[' → logprob: -10.001486778259277
    5. ' ][' → logprob: -12.126486778259277
    6. ']' → logprob: -12.251486778259277
    7. ')[' → logprob: -12.751486778259277
    8. ')][' → logprob: -13.501486778259277
    9. '"][' → logprob: -13.626486778259277
    10. ']+' → logprob: -13.626486778259277

Token 250: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004242466297000647
    2. '(s' → logprob: -5.629242420196533
    3. 'grp' → logprob: -8.504242897033691
    4. 'tmp' → logprob: -8.629242897033691
    5. '[s' → logprob: -9.004242897033691
    6. '[' → logprob: -10.129242897033691
    7. '(' → logprob: -10.129242897033691
    8. '(tmp' → logprob: -10.629242897033691
    9. '
' → logprob: -11.379242897033691
    10. '[tmp' → logprob: -11.754242897033691

Token 251: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00019257364328950644
    2. '+n' → logprob: -9.500192642211914
    3. '+(' → logprob: -10.000192642211914
    4. '+s' → logprob: -10.875192642211914
    5. ' +' → logprob: -11.000192642211914
    6. ']+' → logprob: -11.500192642211914
    7. '+t' → logprob: -12.000192642211914
    8. '+b' → logprob: -12.500192642211914
    9. '+x' → logprob: -12.625192642211914
    10. '+c' → logprob: -13.125192642211914

Token 252: 'mult' (ID: 34841)
  Prédit: 'mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.005757425911724567
    2. 'cnt' → logprob: -5.2557573318481445
    3. ' mult' → logprob: -8.005757331848145
    4. ' cnt' → logprob: -9.630757331848145
    5. '(mult' → logprob: -10.005757331848145
    6. 'mul' → logprob: -10.505757331848145
    7. 'mod' → logprob: -10.505757331848145
    8. 'multip' → logprob: -11.505757331848145
    9. '   ' → logprob: -12.505757331848145
    10. '(cnt' → logprob: -13.380757331848145

Token 253: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11359641700983047
    2. '*(' → logprob: -2.2385964393615723
    3. ')%' → logprob: -7.613596439361572
    4. ')' → logprob: -8.488595962524414
    5. '*num' → logprob: -10.488595962524414
    6. '*((' → logprob: -11.363595962524414
    7. ' *' → logprob: -11.863595962524414
    8. '*s' → logprob: -11.863595962524414
    9. ')*' → logprob: -12.363595962524414
    10. '*n' → logprob: -13.113595962524414

Token 254: 's' (ID: 82)
  Prédit: 'grp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.0047178915701806545
    2. 'X' → logprob: -6.504717826843262
    3. 'num' → logprob: -7.004717826843262
    4. 'N' → logprob: -7.379717826843262
    5. '1' → logprob: -7.379717826843262
    6. 'n' → logprob: -8.504717826843262
    7. '(n' → logprob: -9.129717826843262
    8. '(' → logprob: -9.129717826843262
    9. ' grp' → logprob: -9.129717826843262
    10. '(X' → logprob: -9.379717826843262

Token 255: '-gr' (ID: 18511)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016369350254535675
    2. '-num' → logprob: -4.891369342803955
    3. '))' → logprob: -5.266369342803955
    4. ')+' → logprob: -6.891369342803955
    5. ')' → logprob: -7.516369342803955
    6. '-' → logprob: -7.641369342803955
    7. ' +' → logprob: -7.766369342803955
    8. ')%' → logprob: -8.641369819641113
    9. '))+' → logprob: -8.891369819641113
    10. '
' → logprob: -9.141369819641113

Token 256: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.511406809295295e-06
    2. 'op' → logprob: -13.125006675720215
    3. ')p' → logprob: -13.500006675720215
    4. 'ep' → logprob: -14.125006675720215
    5. 'oup' → logprob: -14.375006675720215
    6. ' p' → logprob: -14.375006675720215
    7. 'up' → logprob: -14.750006675720215
    8. ')' → logprob: -16.0000057220459
    9. 'п' → logprob: -16.2500057220459
    10. '           ' → logprob: -16.2500057220459

Token 257: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10747480392456055
    2. '))' → logprob: -2.4824748039245605
    3. ')]' → logprob: -4.7324748039245605
    4. ')%' → logprob: -5.4824748039245605
    5. ')' → logprob: -5.9824748039245605
    6. ')>' → logprob: -7.4824748039245605
    7. ' +' → logprob: -7.9824748039245605
    8. ')])' → logprob: -7.9824748039245605
    9. ' )' → logprob: -8.232475280761719
    10. ')>=' → logprob: -8.482475280761719

Token 258: 'num' (ID: 4571)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6089415550231934
    2. 'num' → logprob: -1.1089415550231934
    3. 's' → logprob: -2.7339415550231934
    4. '0' → logprob: -3.1089415550231934
    5. 'X' → logprob: -5.483941555023193
    6. 'nums' → logprob: -5.608941555023193
    7. 'grp' → logprob: -5.983941555023193
    8. '(num' → logprob: -6.733941555023193
    9. 'cnt' → logprob: -6.983941555023193
    10. '-' → logprob: -7.983941555023193

Token 259: '-' (ID: 12)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10989609360694885
    2. '+' → logprob: -2.484896183013916
    3. '-' → logprob: -4.859896183013916
    4. ')))' → logprob: -5.109896183013916
    5. ')+' → logprob: -5.859896183013916
    6. ')' → logprob: -6.609896183013916
    7. '))+' → logprob: -7.734896183013916
    8. '```' → logprob: -8.109895706176758
    9. ')**' → logprob: -8.359895706176758
    10. '))*' → logprob: -8.359895706176758

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012201975914649665
    2. '0' → logprob: -9.8751220703125
    3. ' ' → logprob: -10.0001220703125
    4. '+' → logprob: -11.8751220703125
    5. 'num' → logprob: -11.8751220703125
    6. 's' → logprob: -13.0001220703125
    7. '-' → logprob: -13.5001220703125
    8. '(' → logprob: -13.7501220703125
    9. '   ' → logprob: -14.1876220703125
    10. ')' → logprob: -14.2501220703125

Token 261: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.08611010015010834
    2. '))' → logprob: -2.5861101150512695
    3. '+' → logprob: -5.9611101150512695
    4. ' ' → logprob: -6.3361101150512695
    5. '))+' → logprob: -6.7111101150512695
    6. ')' → logprob: -6.9611101150512695
    7. ')+' → logprob: -7.8361101150512695
    8. '))))' → logprob: -9.21111011505127
    9. ')%' → logprob: -10.33611011505127
    10. ' ))' → logprob: -10.58611011505127

Token 262: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06908760964870453
    2. ')%' → logprob: -3.069087505340576
    3. ' %' → logprob: -3.944087505340576
    4. ')' → logprob: -7.069087505340576
    5. ']%' → logprob: -10.569087982177734
    6. '%s' → logprob: -11.069087982177734
    7. '%n' → logprob: -11.319087982177734
    8. '
' → logprob: -11.819087982177734
    9. '           ' → logprob: -13.319087982177734
    10. '```' → logprob: -13.444087982177734

Token 263: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.5094070477061905e-05
    2. ' modulo' → logprob: -11.125015258789062
    3. '(mod' → logprob: -16.250015258789062
    4. '```' → logprob: -16.375015258789062
    5. 'module' → logprob: -16.500015258789062
    6. ' mod' → logprob: -17.750015258789062
    7. '	mod' → logprob: -17.750015258789062
    8. '
' → logprob: -18.500015258789062
    9. 'modal' → logprob: -18.875015258789062
    10. 'mo' → logprob: -19.875015258789062

Token 264: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.014352357015013695
    2. 'o' → logprob: -4.264352321624756
    3. 'olo' → logprob: -9.264352798461914
    4. 'ule' → logprob: -9.389352798461914
    5. 'u' → logprob: -11.889352798461914
    6. 'lo' → logprob: -13.389352798461914
    7. 'alo' → logprob: -13.764352798461914
    8. 'ular' → logprob: -15.889352798461914
    9. 'ul' → logprob: -15.889352798461914
    10. 'ou' → logprob: -16.014352798461914

Token 265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003987336531281471
    2. ' s' → logprob: -8.125398635864258
    3. 's' → logprob: -10.000398635864258
    4. '
' → logprob: -10.750398635864258
    5. '   ' → logprob: -11.625398635864258
    6. '```' → logprob: -12.000398635864258
    7. '          ' → logprob: -12.375398635864258
    8. '       ' → logprob: -12.375398635864258
    9. '<|end|>' → logprob: -12.750398635864258
    10. '               ' → logprob: -12.750398635864258

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019741931930184364
    2. 's' → logprob: -4.019742012023926
    3. ' s' → logprob: -6.519742012023926
    4. '```' → logprob: -9.519742012023926
    5. '   ' → logprob: -11.519742012023926
    6. '       ' → logprob: -11.519742012023926
    7. '          ' → logprob: -11.769742012023926
    8. ' ' → logprob: -13.019742012023926
    9. '               ' → logprob: -13.019742012023926
    10. 'n' → logprob: -13.019742012023926

Token 267: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013825432397425175
    2. ' s' → logprob: -4.513825416564941
    3. '           ' → logprob: -5.888825416564941
    4. '   ' → logprob: -14.013825416564941
    5. '
' → logprob: -14.263825416564941
    6. '       ' → logprob: -14.513825416564941
    7. '	s' → logprob: -15.263825416564941
    8. ' ' → logprob: -15.263825416564941
    9. '          ' → logprob: -15.513825416564941
    10. '```' → logprob: -15.888825416564941

Token 268: ' use' (ID: 1199)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02652762643992901
    2. ' s' → logprob: -3.6515276432037354
    3. '           ' → logprob: -8.401527404785156
    4. ' ' → logprob: -14.651527404785156
    5. '       ' → logprob: -14.651527404785156
    6. '   ' → logprob: -14.651527404785156
    7. '               ' → logprob: -15.526527404785156
    8. '{s' → logprob: -15.526527404785156
    9. '```' → logprob: -15.776527404785156
    10. '          ' → logprob: -15.776527404785156

Token 269: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07752996683120728
    2. '+=' → logprob: -3.0775299072265625
    3. ' s' → logprob: -4.2025299072265625
    4. '           ' → logprob: -5.4525299072265625
    5. ' +=' → logprob: -5.8275299072265625
    6. '=' → logprob: -5.8275299072265625
    7. 'tmp' → logprob: -6.8275299072265625
    8. '++' → logprob: -7.3275299072265625
    9. '+' → logprob: -7.9525299072265625
    10. ')' → logprob: -8.952529907226562

Token 270: '/' (ID: 14)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.641017735004425
    2. 's' → logprob: -0.766017735004425
    3. 'tmp' → logprob: -6.391017913818359
    4. 'break' → logprob: -7.141017913818359
    5. ' ' → logprob: -7.391017913818359
    6. ' num' → logprob: -7.516017913818359
    7. 'num' → logprob: -7.641017913818359
    8. ' tmp' → logprob: -7.891017913818359
    9. '=' → logprob: -8.14101791381836
    10. '_' → logprob: -8.26601791381836

Token 271: 'while' (ID: 7032)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5411545038223267
    2. 's' → logprob: -0.9161545038223267
    3. ' for' → logprob: -4.416154384613037
    4. 'for' → logprob: -5.416154384613037
    5. ' loop' → logprob: -7.166154384613037
    6. 'loop' → logprob: -9.541154861450195
    7. ' loops' → logprob: -9.791154861450195
    8. ' ' → logprob: -10.041154861450195
    9. ' or' → logprob: -10.166154861450195
    10. 'break' → logprob: -10.291154861450195

Token 272: ' hybrid' (ID: 32881)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004487844998948276
    2. '<|end|>' → logprob: -8.250449180603027
    3. ' s' → logprob: -9.875449180603027
    4. 's' → logprob: -10.125449180603027
    5. '<|end|>' → logprob: -10.625449180603027
    6. '       ' → logprob: -11.250449180603027
    7. '               ' → logprob: -11.375449180603027
    8. '	       ' → logprob: -11.875449180603027
    9. '		' → logprob: -11.875449180603027
    10. '          ' → logprob: -12.000449180603027

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004693994123954326
    2. '<|end|>' → logprob: -8.000469207763672
    3. ' s' → logprob: -10.125469207763672
    4. '       ' → logprob: -10.750469207763672
    5. '<|end|>' → logprob: -10.750469207763672
    6. '               ' → logprob: -11.875469207763672
    7. 's' → logprob: -12.000469207763672
    8. '   ' → logprob: -12.000469207763672
    9. ',' → logprob: -12.250469207763672
    10. '          ' → logprob: -12.250469207763672

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014822274446487427
    2. ' s' → logprob: -4.639822483062744
    3. '<|end|>' → logprob: -5.889822483062744
    4. 's' → logprob: -6.514822483062744
    5. '               ' → logprob: -9.014822006225586
    6. '       ' → logprob: -9.139822006225586
    7. '<|end|>' → logprob: -9.139822006225586
    8. '          ' → logprob: -9.389822006225586
    9. '                   ' → logprob: -10.014822006225586
    10. '
' → logprob: -10.264822006225586

Token 275: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.92055344581604
    2. 's' → logprob: -1.04555344581604
    3. ' s' → logprob: -1.42055344581604
    4. '       ' → logprob: -5.045553207397461
    5. '   ' → logprob: -7.170553207397461
    6. ' break' → logprob: -8.545553207397461
    7. 'break' → logprob: -8.545553207397461
    8. '               ' → logprob: -8.795553207397461
    9. '          ' → logprob: -8.920553207397461
    10. ' ' → logprob: -8.920553207397461

Token 276: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1179715171456337
    2. ' =' → logprob: -2.867971420288086
    3. '=j' → logprob: -3.492971420288086
    4. '+=' → logprob: -3.867971420288086
    5. '=s' → logprob: -7.242971420288086
    6. '=n' → logprob: -7.492971420288086
    7. '=i' → logprob: -7.742971420288086
    8. ' +=' → logprob: -7.867971420288086
    9. 'j' → logprob: -8.867971420288086
    10. '+' → logprob: -8.867971420288086

Token 277: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2863018810749054
    2. '0' → logprob: -1.661301851272583
    3. '1' → logprob: -3.161301851272583
    4. 'num' → logprob: -4.661302089691162
    5. 'X' → logprob: -5.786302089691162
    6. 'grp' → logprob: -6.036302089691162
    7. 'idx' → logprob: -7.161302089691162
    8. '2' → logprob: -7.536302089691162
    9. ' s' → logprob: -9.036301612854004
    10. 'max' → logprob: -9.536301612854004

Token 278: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21280524134635925
    2. '<|end|>' → logprob: -1.7128052711486816
    3. '<|end|>' → logprob: -4.712805271148682
    4. ' 
' → logprob: -7.462805271148682
    5. '           ' → logprob: -8.462804794311523
    6. '+' → logprob: -8.462804794311523
    7. ' while' → logprob: -8.712804794311523
    8. ' for' → logprob: -8.837804794311523
    9. 'while' → logprob: -8.962804794311523
    10. 'j' → logprob: -9.087804794311523

Token 279: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13764584064483643
    2. '<|end|>' → logprob: -2.137645721435547
    3. '<|end|>' → logprob: -5.637645721435547
    4. '+' → logprob: -6.137645721435547
    5. ' 
' → logprob: -6.762645721435547
    6. ' while' → logprob: -7.012645721435547
    7. 'while' → logprob: -7.262645721435547
    8. '           ' → logprob: -8.137645721435547
    9. ' for' → logprob: -8.137645721435547
    10. 'j' → logprob: -8.512645721435547

Token 280: ' upper' (ID: 13057)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2524620294570923
    2. 'while' → logprob: -1.6274620294570923
    3. '           ' → logprob: -4.002461910247803
    4. ' while' → logprob: -4.877461910247803
    5. 'j' → logprob: -7.877461910247803
    6. '            
' → logprob: -9.377462387084961
    7. ';j' → logprob: -9.627462387084961
    8. '<|end|>' → logprob: -9.877462387084961
    9. ' j' → logprob: -10.127462387084961
    10. ' 
' → logprob: -10.502462387084961

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.261081725358963
    2. ' =' → logprob: -2.8860816955566406
    3. '=X' → logprob: -2.8860816955566406
    4. '=j' → logprob: -3.5110816955566406
    5. '<=' → logprob: -3.6360816955566406
    6. '_limit' → logprob: -4.011081695556641
    7. '=s' → logprob: -4.261081695556641
    8. '=len' → logprob: -4.886081695556641
    9. '_bound' → logprob: -4.886081695556641
    10. '=max' → logprob: -5.886081695556641

Token 282: ' min' (ID: 1349)
  Prédit: 'grp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grp' → logprob: -1.2064950466156006
    2. 'X' → logprob: -1.7064950466156006
    3. ' grp' → logprob: -1.9564950466156006
    4. '(X' → logprob: -1.9564950466156006
    5. 'num' → logprob: -2.5814950466156006
    6. ' (' → logprob: -2.8314950466156006
    7. ' X' → logprob: -3.8314950466156006
    8. '(gr' → logprob: -4.08149528503418
    9. 'N' → logprob: -4.33149528503418
    10. '(num' → logprob: -4.58149528503418

Token 283: '(X' (ID: 17061)
  Prédit: '(gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -0.8275849223136902
    2. '((' → logprob: -1.577584981918335
    3. '(num' → logprob: -1.827584981918335
    4. '(X' → logprob: -2.202584981918335
    5. '(j' → logprob: -3.327584981918335
    6. '(' → logprob: -4.077584743499756
    7. '(idx' → logprob: -4.327584743499756
    8. '(s' → logprob: -4.577584743499756
    9. '(n' → logprob: -5.202584743499756
    10. 'X' → logprob: -7.077584743499756

Token 284: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.05523248389363289
    2. ' -' → logprob: -3.055232524871826
    3. ',' → logprob: -5.805232524871826
    4. '-' → logprob: -7.055232524871826
    5. ',s' → logprob: -7.430232524871826
    6. '-j' → logprob: -7.680232524871826
    7. '+' → logprob: -7.930232524871826
    8. ',
' → logprob: -7.930232524871826
    9. '-(' → logprob: -8.180232048034668
    10. '-n' → logprob: -8.305232048034668

Token 285: '-gr' (ID: 18511)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6751747131347656
    2. ',num' → logprob: -1.3001747131347656
    3. ',j' → logprob: -1.6751747131347656
    4. ',
' → logprob: -4.800174713134766
    5. ',(' → logprob: -4.800174713134766
    6. ' ,' → logprob: -5.550174713134766
    7. ',n' → logprob: -6.050174713134766
    8. '+' → logprob: -6.550174713134766
    9. '-num' → logprob: -6.675174713134766
    10. '-j' → logprob: -6.925174713134766

Token 286: 'p' (ID: 79)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.8365077972412109
    2. 'oup' → logprob: -0.8365077972412109
    3. 'p' → logprob: -3.211507797241211
    4. 'num' → logprob: -3.586507797241211
    5. '+' → logprob: -3.961507797241211
    6. 'oop' → logprob: -4.836507797241211
    7. '1' → logprob: -4.836507797241211
    8. '```' → logprob: -5.086507797241211
    9. 'u' → logprob: -5.211507797241211
    10. '(num' → logprob: -6.086507797241211

Token 287: '+' (ID: 10)
  Prédit: '*num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*num' → logprob: -1.0414297580718994
    2. ',num' → logprob: -1.2914297580718994
    3. '*(' → logprob: -1.5414297580718994
    4. '+' → logprob: -2.6664297580718994
    5. ',' → logprob: -3.1664297580718994
    6. ',j' → logprob: -4.41642951965332
    7. '-num' → logprob: -4.66642951965332
    8. '*j' → logprob: -4.79142951965332
    9. '*' → logprob: -5.04142951965332
    10. ',(' → logprob: -6.29142951965332

Token 288: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002693840069696307
    2. 'num' → logprob: -6.5026936531066895
    3. ' ' → logprob: -7.5026936531066895
    4. 'j' → logprob: -8.127694129943848
    5. '2' → logprob: -8.877694129943848
    6. ' num' → logprob: -10.002694129943848
    7. '0' → logprob: -10.002694129943848
    8. '(' → logprob: -10.252694129943848
    9. ' j' → logprob: -10.752694129943848
    10. '(num' → logprob: -10.877694129943848

Token 289: ',num' (ID: 78576)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30585184693336487
    2. ',num' → logprob: -2.055851936340332
    3. ',j' → logprob: -2.180851936340332
    4. ',n' → logprob: -4.680851936340332
    5. ')' → logprob: -4.680851936340332
    6. ' ,' → logprob: -6.430851936340332
    7. ',len' → logprob: -7.805851936340332
    8. ',s' → logprob: -8.305851936340332
    9. '),' → logprob: -8.805851936340332
    10. ',p' → logprob: -8.805851936340332

Token 290: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9972380995750427
    2. '-j' → logprob: -1.4972381591796875
    3. '+' → logprob: -1.7472381591796875
    4. '-' → logprob: -1.9972381591796875
    5. ')
' → logprob: -2.9972381591796875
    6. '):
' → logprob: -3.4972381591796875
    7. ' -' → logprob: -4.9972381591796875
    8. ')+' → logprob: -5.4972381591796875
    9. '+j' → logprob: -6.3722381591796875
    10. '):' → logprob: -6.7472381591796875

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02037755772471428
    2. '0' → logprob: -4.1453776359558105
    3. ')' → logprob: -6.6453776359558105
    4. '2' → logprob: -6.7703776359558105
    5. 'j' → logprob: -7.0203776359558105
    6. '-' → logprob: -7.6453776359558105
    7. ' ' → logprob: -8.520377159118652
    8. '
' → logprob: -8.645377159118652
    9. '3' → logprob: -10.270377159118652
    10. '```' → logprob: -10.895377159118652

Token 292: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1623004823923111
    2. ')' → logprob: -1.91230046749115
    3. '):
' → logprob: -7.0373005867004395
    4. '           ' → logprob: -7.2873005867004395
    5. ')
' → logprob: -8.537300109863281
    6. ' )
' → logprob: -8.662300109863281
    7. ')

' → logprob: -10.537300109863281
    8. ' )' → logprob: -10.787300109863281
    9. '```' → logprob: -10.912300109863281
    10. '   ' → logprob: -11.412300109863281

Token 293: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13416709005832672
    2. '<|end|>' → logprob: -3.259167194366455
    3. '\n' → logprob: -3.759167194366455
    4. ' 
' → logprob: -3.884167194366455
    5. '           ' → logprob: -4.759167194366455
    6. '  
' → logprob: -4.884167194366455
    7. '```' → logprob: -5.384167194366455
    8. ' while' → logprob: -5.884167194366455
    9. '<|end|>' → logprob: -6.259167194366455
    10. 'j' → logprob: -6.384167194366455

Token 294: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09601455181837082
    2. '
' → logprob: -3.2210144996643066
    3. ' while' → logprob: -3.8460144996643066
    4. '<|end|>' → logprob: -4.221014499664307
    5. '		' → logprob: -5.721014499664307
    6. 'while' (adapté à ' while') → logprob: -5.846014499664307
    7. '	while' → logprob: -6.221014499664307
    8. '	       ' → logprob: -6.971014499664307
    9. '\n' → logprob: -7.221014499664307
    10. 'j' → logprob: -7.346014499664307

Token 295: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931700706481934
    2. ' j' → logprob: -0.6931700706481934
    3. '           ' → logprob: -11.943170547485352
    4. '   ' → logprob: -12.443170547485352
    5. ' ' → logprob: -12.943170547485352
    6. '	j' → logprob: -13.068170547485352
    7. ' ' → logprob: -13.318170547485352
    8. '    ' → logprob: -13.443170547485352
    9. '(j' → logprob: -13.568170547485352
    10. '            ' → logprob: -14.443170547485352

Token 296: '<' (ID: 27)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5222410559654236
    2. '<' → logprob: -1.0222411155700684
    3. ' <=' → logprob: -3.6472411155700684
    4. ' <' → logprob: -3.8972411155700684
    5. '<len' → logprob: -7.772241115570068
    6. '<n' → logprob: -8.89724063873291
    7. '<s' → logprob: -10.64724063873291
    8. '<X' → logprob: -11.39724063873291
    9. '<num' → logprob: -11.89724063873291
    10. '<size' → logprob: -12.02224063873291

Token 297: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.018151111900806427
    2. ' upper' → logprob: -4.01815128326416
    3. '=' → logprob: -14.51815128326416
    4. 'up' → logprob: -15.01815128326416
    5. '_upper' → logprob: -16.268150329589844
    6. '.upper' → logprob: -16.643150329589844
    7. 'upp' → logprob: -17.143150329589844
    8. '-upper' → logprob: -17.143150329589844
    9. '```' → logprob: -17.768150329589844
    10. 'uper' → logprob: -17.893150329589844

Token 298: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3150256276130676
    2. ':' → logprob: -1.3150255680084229
    3. '<|end|>' → logprob: -7.565025806427002
    4. '):
' → logprob: -8.315025329589844
    5. '           ' → logprob: -8.440025329589844
    6. '               ' → logprob: -8.815025329589844
    7. ' and' → logprob: -9.190025329589844
    8. '<|end|>' → logprob: -9.315025329589844
    9. 'j' → logprob: -9.565025329589844
    10. ':j' → logprob: -9.940025329589844

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011783202644437551
    2. '                
' → logprob: -7.62617826461792
    3. '           ' → logprob: -8.251178741455078
    4. ' tmp' → logprob: -8.626178741455078
    5. '```' → logprob: -10.126178741455078
    6. 'tmp' → logprob: -10.501178741455078
    7. '   ' → logprob: -10.876178741455078
    8. '            
' → logprob: -10.876178741455078
    9. '              ' → logprob: -11.126178741455078
    10. '
' → logprob: -11.251178741455078

Token 300: ' tmp' (ID: 8919)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4537280797958374
    2. 'tmp' (adapté à ' tmp') → logprob: -1.5787280797958374
    3. ' tmp' → logprob: -1.9537280797958374
    4. ' if' → logprob: -5.328728199005127
    5. '           ' → logprob: -6.078728199005127
    6. '                   ' → logprob: -6.203728199005127
    7. ' s' → logprob: -6.453728199005127
    8. '
' → logprob: -7.328728199005127
    9. '                
' → logprob: -7.453728199005127
    10. '```' → logprob: -7.578728199005127

Token 301: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015812745550647378
    2. '[n' → logprob: -9.250158309936523
    3. '[tmp' → logprob: -10.750158309936523
    4. '[j' → logprob: -11.375158309936523
    5. 'tmp' → logprob: -11.750158309936523
    6. ' [' → logprob: -12.125158309936523
    7. '```' → logprob: -12.375158309936523
    8. '[idx' → logprob: -12.750158309936523
    9. '[group' → logprob: -13.500158309936523
    10. '[num' → logprob: -14.000158309936523

Token 302: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.0005299181793816388
    2. ' grp' → logprob: -8.375530242919922
    3. 'n' → logprob: -8.625530242919922
    4. '[' → logprob: -9.500530242919922
    5. 'j' → logprob: -11.500530242919922
    6. 'idx' → logprob: -12.125530242919922
    7. '.grp' → logprob: -12.250530242919922
    8. 'tmp' → logprob: -12.250530242919922
    9. 'gru' → logprob: -13.125530242919922
    10. '   ' → logprob: -13.125530242919922

Token 303: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003121056070085615
    2. '[s' → logprob: -8.625311851501465
    3. ']' → logprob: -9.750311851501465
    4. ' ][' → logprob: -10.375311851501465
    5. 's' → logprob: -11.375311851501465
    6. '[' → logprob: -11.750311851501465
    7. '   ' → logprob: -12.250311851501465
    8. ']][' → logprob: -13.000311851501465
    9. ' ' → logprob: -13.250311851501465
    10. '       ' → logprob: -13.375311851501465

Token 304: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005892522749491036
    2. ' s' → logprob: -7.500589370727539
    3. '(s' → logprob: -11.250589370727539
    4. 'j' → logprob: -11.875589370727539
    5. '[s' → logprob: -12.250589370727539
    6. '
' → logprob: -12.500589370727539
    7. '   ' → logprob: -13.250589370727539
    8. '{s' → logprob: -13.875589370727539
    9. ' ' → logprob: -14.125589370727539
    10. '(' → logprob: -14.250589370727539

Token 305: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.0017664548940956593
    2. '+' → logprob: -6.376766681671143
    3. '+(' → logprob: -11.126766204833984
    4. ']+=' → logprob: -11.126766204833984
    5. ' +' → logprob: -11.626766204833984
    6. '][' → logprob: -11.876766204833984
    7. '+s' → logprob: -12.126766204833984
    8. ']' → logprob: -12.501766204833984
    9. ']+' → logprob: -13.376766204833984
    10. '[j' → logprob: -13.376766204833984

Token 306: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.009904945269227028
    2. ']' → logprob: -5.134904861450195
    3. ']+=' → logprob: -6.009904861450195
    4. ']+' → logprob: -6.634904861450195
    5. ']=' → logprob: -9.509904861450195
    6. '```' → logprob: -9.759904861450195
    7. '+=(' → logprob: -11.259904861450195
    8. '](' → logprob: -11.759904861450195
    9. ']
' → logprob: -12.009904861450195
    10. '-' → logprob: -12.259904861450195

Token 307: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.007683992851525545
    2. 'tmp' → logprob: -4.882684230804443
    3. ' (' → logprob: -10.632683753967285
    4. '[tmp' → logprob: -10.882683753967285
    5. ' tmp' → logprob: -11.007683753967285
    6. '/tmp' → logprob: -11.382683753967285
    7. ',tmp' → logprob: -12.882683753967285
    8. '(' → logprob: -13.507683753967285
    9. '(temp' → logprob: -13.882683753967285
    10. '$tmp' → logprob: -14.382683753967285

Token 308: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6656825866666622e-05
    2. 'tmp' → logprob: -11.00002670288086
    3. '][' → logprob: -11.87502670288086
    4. '```' → logprob: -14.00002670288086
    5. 'grp' → logprob: -14.62502670288086
    6. '[[' → logprob: -15.25002670288086
    7. '_tmp' → logprob: -15.37502670288086
    8. ')[' → logprob: -15.50002670288086
    9. '[tmp' → logprob: -15.87502670288086
    10. '_' → logprob: -16.00002670288086

Token 309: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.05505932494997978
    2. '[' → logprob: -2.9300594329833984
    3. '[group' → logprob: -9.930059432983398
    4. ' grp' → logprob: -10.430059432983398
    5. 'idx' → logprob: -10.805059432983398
    6. 'j' → logprob: -11.055059432983398
    7. 's' → logprob: -11.180059432983398
    8. 'gru' → logprob: -11.930059432983398
    9. '```' → logprob: -12.180059432983398
    10. 'tmp' → logprob: -12.430059432983398

Token 310: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001333455671556294
    2. '[' → logprob: -6.626333236694336
    3. ' ][' → logprob: -12.626333236694336
    4. ']' → logprob: -13.251333236694336
    5. 's' → logprob: -14.001333236694336
    6. '```' → logprob: -15.001333236694336
    7. '[j' → logprob: -15.376333236694336
    8. ']][' → logprob: -15.626333236694336
    9. '   ' → logprob: -15.876333236694336
    10. '"][' → logprob: -15.876333236694336

Token 311: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37983790040016174
    2. 'grp' → logprob: -1.3798378705978394
    3. '[' → logprob: -2.754837989807129
    4. 'j' → logprob: -8.629837989807129
    5. 'tmp' → logprob: -8.629837989807129
    6. '(' → logprob: -9.004837989807129
    7. '
' → logprob: -9.504837989807129
    8. '[s' → logprob: -10.379837989807129
    9. '[group' → logprob: -10.504837989807129
    10. ' grp' → logprob: -10.629837989807129

Token 312: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.001051984610967338
    2. '+' → logprob: -6.876051902770996
    3. ']+' → logprob: -11.626051902770996
    4. '[j' → logprob: -12.001051902770996
    5. 'j' → logprob: -13.876051902770996
    6. ' +' → logprob: -14.376051902770996
    7. '+k' → logprob: -14.751051902770996
    8. '[' → logprob: -15.001051902770996
    9. '+
' → logprob: -15.001051902770996
    10. '][' → logprob: -15.126051902770996

Token 313: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.32359811663627625
    2. '+' → logprob: -1.3235981464385986
    3. '+j' → logprob: -4.9485979080200195
    4. ']+=' → logprob: -6.4485979080200195
    5. '+(' → logprob: -7.5735979080200195
    6. ']%' → logprob: -8.19859790802002
    7. '+x' → logprob: -8.82359790802002
    8. ']' → logprob: -8.94859790802002
    9. '+n' → logprob: -9.32359790802002
    10. '+k' → logprob: -9.44859790802002

Token 314: 'mult' (ID: 34841)
  Prédit: 'mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.0012841640273109078
    2. '(mult' → logprob: -7.376284122467041
    3. 'mod' → logprob: -7.751284122467041
    4. ' mult' → logprob: -9.2512845993042
    5. 'cnt' → logprob: -9.8762845993042
    6. 'tmp' → logprob: -10.2512845993042
    7. 'multip' → logprob: -11.7512845993042
    8. 'mul' → logprob: -11.7512845993042
    9. '(' → logprob: -12.0012845993042
    10. '   ' → logprob: -12.1262845993042

Token 315: '*' (ID: 9)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.026722528040409088
    2. '*j' → logprob: -3.9017224311828613
    3. '*' → logprob: -5.276722431182861
    4. '*s' → logprob: -7.776722431182861
    5. ')%' → logprob: -8.27672290802002
    6. ')' → logprob: -8.77672290802002
    7. '*((' → logprob: -9.15172290802002
    8. ' *' → logprob: -10.27672290802002
    9. ')*(' → logprob: -11.02672290802002
    10. ')*' → logprob: -11.15172290802002

Token 316: '2' (ID: 17)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.730274498462677
    2. '(s' → logprob: -1.6052744388580322
    3. '(j' → logprob: -2.2302744388580322
    4. '(' → logprob: -2.3552744388580322
    5. 'grp' → logprob: -2.4802744388580322
    6. '(gr' → logprob: -3.9802744388580322
    7. 's' → logprob: -5.605274677276611
    8. '((' → logprob: -5.730274677276611
    9. '(n' → logprob: -6.480274677276611
    10. '(tmp' → logprob: -7.730274677276611

Token 317: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6538493633270264
    2. '*j' → logprob: -0.7788493633270264
    3. '*(' → logprob: -4.7788496017456055
    4. ')' → logprob: -4.9038496017456055
    5. 'j' → logprob: -5.7788496017456055
    6. ')%' → logprob: -6.4038496017456055
    7. ' *' → logprob: -8.778849601745605
    8. ')*' → logprob: -9.903849601745605
    9. '*g' → logprob: -10.153849601745605
    10. '[j' → logprob: -10.153849601745605

Token 318: 'grp' (ID: 86102)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23336124420166016
    2. 'grp' → logprob: -2.48336124420166
    3. '(j' → logprob: -2.85836124420166
    4. '(' → logprob: -3.10836124420166
    5. '(s' → logprob: -4.60836124420166
    6. '(gr' → logprob: -4.85836124420166
    7. 'tmp' → logprob: -6.73336124420166
    8. '(tmp' → logprob: -6.98336124420166
    9. '(n' → logprob: -7.60836124420166
    10. '((' → logprob: -7.98336124420166

Token 319: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0009219424682669342
    2. '*j' → logprob: -7.250921726226807
    3. ' )' → logprob: -9.250922203063965
    4. ')' → logprob: -9.250922203063965
    5. '   ' → logprob: -12.375922203063965
    6. '       ' → logprob: -12.500922203063965
    7. '*' → logprob: -12.500922203063965
    8. '           ' → logprob: -12.750922203063965
    9. '                   ' → logprob: -14.000922203063965
    10. 'j' → logprob: -14.000922203063965

Token 320: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.36574100604048e-06
    2. ' modulo' → logprob: -12.625004768371582
    3. '(mod' → logprob: -14.000004768371582
    4. ' mod' → logprob: -17.125003814697266
    5. 'module' → logprob: -18.000003814697266
    6. '	mod' → logprob: -18.125003814697266
    7. 'modal' → logprob: -18.500003814697266
    8. '100' → logprob: -19.375003814697266
    9. 'moder' → logprob: -19.875003814697266
    10. 'mo' → logprob: -20.000003814697266

Token 321: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.015169055201113224
    2. 'o' → logprob: -4.265169143676758
    3. 'lo' → logprob: -7.765169143676758
    4. 'ule' → logprob: -8.140169143676758
    5. 'olo' → logprob: -8.640169143676758
    6. 'u' → logprob: -9.765169143676758
    7. 'uro' → logprob: -11.015169143676758
    8. 'ular' → logprob: -12.015169143676758
    9. 'mod' → logprob: -12.140169143676758
    10. ' modulo' → logprob: -12.515169143676758

Token 322: '
' (ID: 198)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6707262396812439
    2. ' j' → logprob: -1.2957262992858887
    3. '
' → logprob: -1.7957262992858887
    4. '	j' → logprob: -3.4207262992858887
    5. ' 
' → logprob: -5.670726299285889
    6. '               ' → logprob: -6.045726299285889
    7. '\n' → logprob: -6.295726299285889
    8. '<|end|>' → logprob: -6.295726299285889
    9. '[j' → logprob: -6.420726299285889
    10. '  
' → logprob: -7.170726299285889

Token 323: '               ' (ID: 506)
  Prédit: '	j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	j' → logprob: -0.7328183054924011
    2. 'j' → logprob: -1.107818365097046
    3. '               ' → logprob: -2.482818365097046
    4. ' j' → logprob: -2.607818365097046
    5. '           ' → logprob: -4.232818126678467
    6. '```' → logprob: -4.857818126678467
    7. '
' → logprob: -5.107818126678467
    8. '	           ' → logprob: -7.232818126678467
    9. ',j' → logprob: -7.607818126678467
    10. '   ' → logprob: -7.607818126678467

Token 324: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.2027255892753601
    2. ' j' → logprob: -1.7027256488800049
    3. '	j' → logprob: -6.702725410461426
    4. '```' → logprob: -10.077725410461426
    5. '
' → logprob: -10.452725410461426
    6. '   ' → logprob: -12.577725410461426
    7. '               ' → logprob: -12.577725410461426
    8. ',j' → logprob: -13.577725410461426
    9. '           ' → logprob: -13.702725410461426
    10. ' 
' → logprob: -14.952725410461426

Token 325: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.226628895296017e-06
    2. ' +=' → logprob: -12.000007629394531
    3. '+' → logprob: -14.375007629394531
    4. ']+=' → logprob: -15.250007629394531
    5. '+=(' → logprob: -17.25000762939453
    6. '```' → logprob: -17.62500762939453
    7. '+="' → logprob: -18.12500762939453
    8. '+='' → logprob: -18.25000762939453
    9. '++' → logprob: -18.37500762939453
    10. '=' → logprob: -18.37500762939453

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -15.750001907348633
    4. '   ' → logprob: -18.562501907348633
    5. '+' → logprob: -18.562501907348633
    6. '2' → logprob: -18.750001907348633
    7. '۱' → logprob: -18.937501907348633
    8. 'j' → logprob: -19.187501907348633
    9. '...' → logprob: -19.250001907348633
    10. '１' → logprob: -19.312501907348633

Token 327: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.031157969729975e-05
    2. '               ' → logprob: -10.625090599060059
    3. '       ' → logprob: -10.750090599060059
    4. 's' → logprob: -11.500090599060059
    5. '<|end|>' → logprob: -11.625090599060059
    6. '<|end|>' → logprob: -12.250090599060059
    7. 'print' → logprob: -12.375090599060059
    8. '          ' → logprob: -12.500090599060059
    9. 'return' → logprob: -13.375090599060059
    10. '```' → logprob: -13.750090599060059

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001987722353078425
    2. '       ' → logprob: -9.250198364257812
    3. '               ' → logprob: -10.125198364257812
    4. '<|end|>' → logprob: -10.875198364257812
    5. '<|end|>' → logprob: -11.500198364257812
    6. '   ' → logprob: -11.750198364257812
    7. '          ' → logprob: -12.375198364257812
    8. 's' → logprob: -12.375198364257812
    9. ' ' → logprob: -12.750198364257812
    10. 'print' → logprob: -13.250198364257812

Token 329: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5542238354682922
    2. '           ' → logprob: -1.3042237758636475
    3. '       ' → logprob: -2.0542237758636475
    4. 's' → logprob: -3.9292237758636475
    5. ')' → logprob: -6.804224014282227
    6. 'sum' → logprob: -7.304224014282227
    7. 'for' → logprob: -7.429224014282227
    8. 'print' → logprob: -7.554224014282227
    9. ' ' → logprob: -8.054224014282227
    10. '    ' → logprob: -8.429224014282227

Token 330: ' grp' (ID: 111219)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2506892681121826
    2. ' s' → logprob: -1.6256892681121826
    3. ' grp' → logprob: -1.6256892681121826
    4. 's' → logprob: -2.7506892681121826
    5. 'not' → logprob: -3.1256892681121826
    6. 'grp' → logprob: -3.2506892681121826
    7. ' num' → logprob: -3.6256892681121826
    8. 'num' → logprob: -3.8756892681121826
    9. ' tmp' → logprob: -3.8756892681121826
    10. ' idx' → logprob: -4.000689506530762

Token 331: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4480288028717041
    2. '==' → logprob: -1.698028802871704
    3. '+' → logprob: -3.073028802871704
    4. '>' → logprob: -3.198028802871704
    5. '<=' → logprob: -3.323028802871704
    6. '!=' → logprob: -3.573028802871704
    7. '<num' → logprob: -5.198028564453125
    8. '<len' → logprob: -5.198028564453125
    9. ' <' → logprob: -5.573028564453125
    10. '<X' → logprob: -6.323028564453125

Token 332: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02076026052236557
    2. '1' → logprob: -4.5207600593566895
    3. 'X' → logprob: -5.2707600593566895
    4. 'num' → logprob: -5.5207600593566895
    5. ' N' → logprob: -7.8957600593566895
    6. '0' → logprob: -10.520760536193848
    7. '(N' → logprob: -10.770760536193848
    8. 'idx' → logprob: -10.895760536193848
    9. ' ' → logprob: -10.895760536193848
    10. '   ' → logprob: -11.145760536193848

Token 333: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7303327918052673
    2. ':' → logprob: -1.355332851409912
    3. ':
' → logprob: -1.480332851409912
    4. 'and' → logprob: -3.480332851409912
    5. '           ' → logprob: -6.980332851409912
    6. ' or' → logprob: -7.980332851409912
    7. '               ' → logprob: -8.730332374572754
    8. ':return' → logprob: -9.105332374572754
    9. ' :
' → logprob: -9.355332374572754
    10. '   ' → logprob: -9.480332374572754

Token 334: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036249039694666862
    2. ' break' → logprob: -6.37862491607666
    3. ' tmp' → logprob: -7.62862491607666
    4. 'tmp' → logprob: -7.75362491607666
    5. 'break' → logprob: -7.87862491607666
    6. '           ' → logprob: -8.50362491607666
    7. ' return' → logprob: -9.00362491607666
    8. ' for' → logprob: -9.00362491607666
    9. 'return' → logprob: -10.37862491607666
    10. '                   ' → logprob: -10.50362491607666

Token 335: ' s' (ID: 265)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.2259218394756317
    2. ' tmp' → logprob: -1.600921869277954
    3. 'break' → logprob: -8.975921630859375
    4. ' break' → logprob: -9.100921630859375
    5. 'for' → logprob: -9.350921630859375
    6. '           ' → logprob: -9.975921630859375
    7. ' for' → logprob: -9.975921630859375
    8. ' ans' → logprob: -11.100921630859375
    9. 'ans' → logprob: -11.225921630859375
    10. '               ' → logprob: -11.475921630859375

Token 336: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00019066639652010053
    2. ' +=' → logprob: -9.000190734863281
    3. ']+=' → logprob: -10.625190734863281
    4. '==' → logprob: -10.750190734863281
    5. '=' → logprob: -11.500190734863281
    6. '-=' → logprob: -12.500190734863281
    7. '+' → logprob: -12.750190734863281
    8. '```' → logprob: -12.875190734863281
    9. '+=(' → logprob: -13.625190734863281
    10. '!=' → logprob: -15.875190734863281

Token 337: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0648091584444046
    2. '1' → logprob: -2.9398090839385986
    3. 'X' → logprob: -5.189809322357178
    4. '2' → logprob: -5.814809322357178
    5. 'nums' → logprob: -7.564809322357178
    6. 'j' → logprob: -8.56480884552002
    7. ' num' → logprob: -8.81480884552002
    8. '(num' → logprob: -9.18980884552002
    9. 'max' → logprob: -9.56480884552002
    10. '(' → logprob: -9.93980884552002

Token 338: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18784013390541077
    2. 'else' → logprob: -1.9378401041030884
    3. ' else' → logprob: -3.812840223312378
    4. '               ' → logprob: -5.687839984893799
    5. 'elif' → logprob: -7.187839984893799
    6. '       ' → logprob: -8.562840461730957
    7. '<|end|>' → logprob: -8.562840461730957
    8. 'continue' → logprob: -9.437840461730957
    9. '            ' → logprob: -9.562840461730957
    10. '          ' → logprob: -9.812840461730957

Token 339: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08077890425920486
    2. 'else' → logprob: -2.5807788372039795
    3. '       ' → logprob: -6.830779075622559
    4. '               ' → logprob: -8.080779075622559
    5. ' else' → logprob: -8.080779075622559
    6. 'elif' → logprob: -8.955779075622559
    7. '   ' → logprob: -10.955779075622559
    8. '```' → logprob: -11.080779075622559
    9. 'continue' → logprob: -12.205779075622559
    10. '          ' → logprob: -12.330779075622559

Token 340: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2538972496986389
    2. '               ' → logprob: -1.7538971900939941
    3. 'else' → logprob: -3.503897190093994
    4. '           ' → logprob: -4.253897190093994
    5. ' continue' → logprob: -5.128897190093994
    6. '```' → logprob: -8.378897666931152
    7. '   ' → logprob: -8.878897666931152
    8. '       ' → logprob: -9.253897666931152
    9. '	continue' → logprob: -9.253897666931152
    10. 'elif' → logprob: -9.503897666931152

Token 341: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012230719439685345
    2. 's' → logprob: -5.13723087310791
    3. 'else' → logprob: -5.38723087310791
    4. 'break' → logprob: -6.88723087310791
    5. '       ' → logprob: -8.63723087310791
    6. 'elif' → logprob: -9.13723087310791
    7. 'if' → logprob: -9.38723087310791
    8. 'return' → logprob: -9.76223087310791
    9. 'raise' → logprob: -10.26223087310791
    10. 'for' → logprob: -10.26223087310791

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016658497974276543
    2. 'break' → logprob: -4.891658306121826
    3. 'else' → logprob: -5.266658306121826
    4. 's' → logprob: -6.141658306121826
    5. 'return' → logprob: -7.391658306121826
    6. '       ' → logprob: -7.641658306121826
    7. 'print' → logprob: -9.016658782958984
    8. '```' → logprob: -9.016658782958984
    9. 'for' → logprob: -9.391658782958984
    10. 'elif' → logprob: -10.141658782958984

Token 343: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4719335436820984
    2. '           ' → logprob: -2.096933603286743
    3. 'break' → logprob: -2.221933603286743
    4. 'if' → logprob: -2.471933603286743
    5. 'tmp' → logprob: -3.596933603286743
    6. 'else' → logprob: -4.221933364868164
    7. 'for' → logprob: -4.971933364868164
    8. ' s' → logprob: -6.221933364868164
    9. '#' (adapté à ' #') → logprob: -6.221933364868164
    10. 'elif' → logprob: -6.346933364868164

Token 344: ' For' (ID: 2214)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7703638076782227
    2. 'for' → logprob: -1.8953638076782227
    3. 'if' → logprob: -2.2703638076782227
    4. 'tmp' → logprob: -2.6453638076782227
    5. 'j' → logprob: -3.1453638076782227
    6. 'break' → logprob: -3.5203638076782227
    7. 'k' → logprob: -4.145363807678223
    8. '#' → logprob: -4.270363807678223
    9. 'while' → logprob: -4.520363807678223
    10. ' s' → logprob: -5.020363807678223

Token 345: ' loop' (ID: 11453)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4000031650066376
    2. 's' → logprob: -2.27500319480896
    3. ' j' → logprob: -3.02500319480896
    4. ' i' → logprob: -3.02500319480896
    5. ' k' → logprob: -3.02500319480896
    6. 'i' → logprob: -3.90000319480896
    7. 'k' → logprob: -4.275002956390381
    8. ' for' → logprob: -4.525002956390381
    9. 'j' → logprob: -4.650002956390381
    10. ' t' → logprob: -5.275002956390381

Token 346: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3705419600009918
    2. ' for' → logprob: -1.2455419301986694
    3. 'for' → logprob: -3.870542049407959
    4. '   ' → logprob: -8.1205415725708
    5. '       ' → logprob: -8.3705415725708
    6. '
' → logprob: -9.1205415725708
    7. '               ' → logprob: -9.1205415725708
    8. ' in' → logprob: -9.3705415725708
    9. '```' → logprob: -10.2455415725708
    10. 's' → logprob: -11.2455415725708

Token 347: ' break' (ID: 2338)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0665383338928223
    2. 'j' → logprob: -1.5665383338928223
    3. ' j' → logprob: -2.5665383338928223
    4. ' s' → logprob: -2.6915383338928223
    5. 'range' → logprob: -3.0665383338928223
    6. 'break' → logprob: -3.3165383338928223
    7. ' break' → logprob: -3.4415383338928223
    8. 'for' → logprob: -3.8165383338928223
    9. 'add' → logprob: -3.8165383338928223
    10. ' add' → logprob: -3.9415383338928223

Token 348: ' pattern' (ID: 8302)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1130913719534874
    2. ' for' → logprob: -2.363091468811035
    3. 'for' → logprob: -4.738091468811035
    4. '
' → logprob: -6.488091468811035
    5. '               ' → logprob: -7.863091468811035
    6. '       ' → logprob: -7.863091468811035
    7. ' at' → logprob: -7.863091468811035
    8. '   ' → logprob: -8.613091468811035
    9. 's' → logprob: -8.738091468811035
    10. ',' → logprob: -9.113091468811035

Token 349: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03660180792212486
    2. ' for' → logprob: -3.5366017818450928
    3. 'for' → logprob: -5.161602020263672
    4. '       ' → logprob: -7.536602020263672
    5. '
' → logprob: -8.036602020263672
    6. '   ' → logprob: -8.911602020263672
    7. '               ' → logprob: -10.786602020263672
    8. '```' → logprob: -10.911602020263672
    9. 's' → logprob: -11.286602020263672
    10. ',' → logprob: -12.036602020263672

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019041934981942177
    2. ' for' → logprob: -4.269042015075684
    3. 'for' → logprob: -5.394042015075684
    4. '       ' → logprob: -8.519042015075684
    5. ' s' → logprob: -10.394042015075684
    6. '   ' → logprob: -10.894042015075684
    7. 's' → logprob: -11.019042015075684
    8. '```' → logprob: -11.144042015075684
    9. '               ' → logprob: -11.269042015075684
    10. 'break' → logprob: -12.144042015075684

Token 351: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08948364853858948
    2. ' for' → logprob: -2.4644837379455566
    3. '           ' → logprob: -7.964483737945557
    4. 's' → logprob: -10.089483261108398
    5. 'break' → logprob: -10.214483261108398
    6. '```' → logprob: -10.464483261108398
    7. 'while' → logprob: -10.964483261108398
    8. '
' → logprob: -11.214483261108398
    9. ' s' → logprob: -11.339483261108398
    10. '       ' → logprob: -11.339483261108398

Token 352: ' d' (ID: 272)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2965866029262543
    2. 'i' → logprob: -2.671586513519287
    3. 'j' → logprob: -3.546586513519287
    4. 's' → logprob: -3.546586513519287
    5. 'x' → logprob: -4.046586513519287
    6. 'add' → logprob: -4.671586513519287
    7. 'offset' → logprob: -5.046586513519287
    8. 'l' → logprob: -5.171586513519287
    9. 't' → logprob: -5.296586513519287
    10. 'inner' → logprob: -5.421586513519287

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024529816582798958
    2. 'in' → logprob: -3.7745299339294434
    3. 'd' → logprob: -6.774529933929443
    4. 'e' → logprob: -9.649529457092285
    5. 'ef' → logprob: -10.524529457092285
    6. ' ' → logprob: -11.149529457092285
    7. 'i' → logprob: -12.149529457092285
    8. 'range' → logprob: -12.649529457092285
    9. 'el' → logprob: -12.649529457092285
    10. ')' → logprob: -12.899529457092285

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017864444525912404
    2. ' range' → logprob: -6.376786231994629
    3. 're' → logprob: -10.001786231994629
    4. '[' → logprob: -10.751786231994629
    5. '(range' → logprob: -11.876786231994629
    6. 'list' → logprob: -13.376786231994629
    7. '	range' → logprob: -13.626786231994629
    8. '(' → logprob: -13.751786231994629
    9. 'reverse' → logprob: -14.251786231994629
    10. '1' → logprob: -14.376786231994629

Token 355: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011743186973035336
    2. '(gr' → logprob: -4.761743068695068
    3. '(j' → logprob: -6.261743068695068
    4. '1' → logprob: -7.136743068695068
    5. '(s' → logprob: -8.886743545532227
    6. '2' → logprob: -9.511743545532227
    7. '(num' → logprob: -9.636743545532227
    8. '(X' → logprob: -10.011743545532227
    9. '(max' → logprob: -11.136743545532227
    10. '(-' → logprob: -11.136743545532227

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2752823531627655
    2. '2' → logprob: -1.650282382965088
    3. 'grp' → logprob: -4.025282382965088
    4. 'j' → logprob: -4.400282382965088
    5. '(' → logprob: -4.525282382965088
    6. '0' → logprob: -6.275282382965088
    7. 'X' → logprob: -6.525282382965088
    8. '(gr' → logprob: -6.900282382965088
    9. 'num' → logprob: -7.025282382965088
    10. '(j' → logprob: -7.650282382965088

Token 357: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01232786662876606
    2. ',j' → logprob: -4.637327671051025
    3. ',min' → logprob: -6.887327671051025
    4. ',n' → logprob: -7.512327671051025
    5. ',num' → logprob: -8.262328147888184
    6. ',d' → logprob: -8.262328147888184
    7. ' ,' → logprob: -8.512328147888184
    8. ',s' → logprob: -8.887328147888184
    9. ',X' → logprob: -9.762328147888184
    10. ',max' → logprob: -10.512328147888184

Token 358: '(X' (ID: 17061)
  Prédit: '(gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gr' → logprob: -0.4959501028060913
    2. '(X' → logprob: -1.7459501028060913
    3. '(j' → logprob: -2.120950222015381
    4. '(num' → logprob: -2.995950222015381
    5. '(' → logprob: -3.745950222015381
    6. '(s' → logprob: -3.870950222015381
    7. '((' → logprob: -6.620950222015381
    8. '(n' → logprob: -8.745949745178223
    9. '(x' → logprob: -8.870949745178223
    10. '(
' → logprob: -9.495949745178223

Token 359: '-s' (ID: 2011)
  Prédit: '-s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-s' → logprob: -0.003883215133100748
    2. ' -' → logprob: -5.628883361816406
    3. '-' → logprob: -8.628883361816406
    4. 's' → logprob: -9.628883361816406
    5. ',' → logprob: -12.003883361816406
    6. '+' → logprob: -12.378883361816406
    7. '```' → logprob: -12.753883361816406
    8. '   ' → logprob: -12.878883361816406
    9. '-
' → logprob: -12.878883361816406
    10. '
' → logprob: -13.128883361816406

Token 360: '-gr' (ID: 18511)
  Prédit: '-gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-gr' → logprob: -0.44661128520965576
    2. '+' → logprob: -1.1966112852096558
    3. ',' → logprob: -3.0716114044189453
    4. '-' → logprob: -4.571611404418945
    5. '-(' → logprob: -7.571611404418945
    6. ' -' → logprob: -8.946611404418945
    7. '-Gr' → logprob: -9.071611404418945
    8. '-grad' → logprob: -9.071611404418945
    9. ' ,' → logprob: -9.821611404418945
    10. '-j' → logprob: -9.821611404418945

Token 361: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0843520238995552
    2. 'up' → logprob: -2.5843520164489746
    3. 'op' → logprob: -5.584352016448975
    4. 'oup' → logprob: -6.709352016448975
    5. '+' → logprob: -8.584352493286133
    6. 'd' → logprob: -8.959352493286133
    7. 'grp' → logprob: -10.959352493286133
    8. '
' → logprob: -11.084352493286133
    9. 'roup' → logprob: -11.209352493286133
    10. 'ap' → logprob: -11.334352493286133

Token 362: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.526570384972729e-05
    2. ' +' → logprob: -11.250055313110352
    3. ',' → logprob: -11.375055313110352
    4. '```' → logprob: -11.625055313110352
    5. '()+' → logprob: -11.875055313110352
    6. ')+' → logprob: -12.625055313110352
    7. ',num' → logprob: -13.375055313110352
    8. '+d' → logprob: -13.500055313110352
    9. '+j' → logprob: -14.125055313110352
    10. '[' → logprob: -14.250055313110352

Token 363: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06894130259752274
    2. '3' → logprob: -2.818941354751587
    3. '1' → logprob: -5.193941116333008
    4. ' ' → logprob: -7.443941116333008
    5. '   ' → logprob: -8.568941116333008
    6. '+' → logprob: -8.818941116333008
    7. '```' → logprob: -9.443941116333008
    8. '=' → logprob: -10.006441116333008
    9. '4' → logprob: -10.381441116333008
    10. ',' → logprob: -10.443941116333008

Token 364: ',num' (ID: 78576)
  Prédit: ',num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',num' → logprob: -0.001479505910538137
    2. ',' → logprob: -6.626479625701904
    3. ',d' → logprob: -9.376479148864746
    4. ' ,' → logprob: -10.001479148864746
    5. ',n' → logprob: -11.751479148864746
    6. '   ' → logprob: -12.501479148864746
    7. ',len' → logprob: -12.751479148864746
    8. '       ' → logprob: -13.876479148864746
    9. ',j' → logprob: -14.126479148864746
    10. '(num' → logprob: -14.126479148864746

Token 365: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16102348268032074
    2. ')):' → logprob: -2.5360233783721924
    3. ')+' → logprob: -3.4110233783721924
    4. ')):
' → logprob: -4.0360236167907715
    5. '):' → logprob: -4.7860236167907715
    6. '-' → logprob: -4.7860236167907715
    7. '))' → logprob: -7.6610236167907715
    8. '):
' → logprob: -7.6610236167907715
    9. ')' → logprob: -8.411023139953613
    10. '```' → logprob: -8.661023139953613

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12270861864089966
    2. '2' → logprob: -2.372708559036255
    3. '+' → logprob: -3.872708559036255
    4. ' ' → logprob: -8.122708320617676
    5. '):
' → logprob: -8.247708320617676
    6. '   ' → logprob: -8.622708320617676
    7. ')+' → logprob: -8.872708320617676
    8. '
' → logprob: -8.997708320617676
    9. ' +' → logprob: -9.497708320617676
    10. ')' → logprob: -9.497708320617676

Token 367: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03837434947490692
    2. '):' → logprob: -3.288374423980713
    3. ')):
' → logprob: -9.288373947143555
    4. '):
' → logprob: -9.413373947143555
    5. '+' → logprob: -9.913373947143555
    6. '+d' → logprob: -10.288373947143555
    7. '):

' → logprob: -10.913373947143555
    8. ' ):
' → logprob: -11.163373947143555
    9. ')):' → logprob: -11.663373947143555
    10. 'd' → logprob: -11.663373947143555

Token 368: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000855597376357764
    2. 'tmp' → logprob: -7.750855445861816
    3. '                   ' → logprob: -8.875855445861816
    4. '           ' → logprob: -9.250855445861816
    5. '   ' → logprob: -10.125855445861816
    6. ' tmp' → logprob: -10.375855445861816
    7. ' if' → logprob: -10.500855445861816
    8. ':
' → logprob: -10.750855445861816
    9. 'break' → logprob: -11.250855445861816
    10. 'if' → logprob: -11.375855445861816

Token 369: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.019546257331967354
    2. 'if' → logprob: -4.269546031951904
    3. ' tmp' → logprob: -6.269546031951904
    4. '               ' → logprob: -6.394546031951904
    5. '                   ' → logprob: -6.769546031951904
    6. 'break' → logprob: -8.519546508789062
    7. '           ' → logprob: -8.894546508789062
    8. ' if' → logprob: -9.394546508789062
    9. 'DP' → logprob: -10.019546508789062
    10. '   ' → logprob: -10.269546508789062

Token 370: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '```' → logprob: -14.00000286102295
    3. 'grp' → logprob: -15.37500286102295
    4. ' [' → logprob: -15.37500286102295
    5. '[group' → logprob: -15.50000286102295
    6. '[tmp' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '
' → logprob: -16.625001907348633
    9. 'tmp' → logprob: -16.750001907348633
    10. '﻿' → logprob: -16.750001907348633

Token 371: 'grp' (ID: 86102)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1148211732506752
    2. 'grp' → logprob: -2.239821195602417
    3. 'd' → logprob: -7.614820957183838
    4. '[group' → logprob: -7.614820957183838
    5. ' grp' → logprob: -7.864820957183838
    6. 'num' → logprob: -8.989821434020996
    7. 'tmp' → logprob: -9.739821434020996
    8. 'idx' → logprob: -9.864821434020996
    9. '[d' → logprob: -9.989821434020996
    10. '   ' → logprob: -10.114821434020996

Token 372: '-' (ID: 12)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0026207277551293373
    2. '[s' → logprob: -6.002620697021484
    3. ' ][' → logprob: -9.752620697021484
    4. ']' → logprob: -10.377620697021484
    5. '   ' → logprob: -11.127620697021484
    6. 's' → logprob: -11.627620697021484
    7. '[' → logprob: -11.627620697021484
    8. '           ' → logprob: -11.752620697021484
    9. ')[' → logprob: -12.752620697021484
    10. '       ' → logprob: -12.877620697021484

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6934733390808105
    2. 'd' → logprob: -0.6934733390808105
    3. ' d' → logprob: -8.443473815917969
    4. ' ' → logprob: -10.193473815917969
    5. '2' → logprob: -10.943473815917969
    6. '   ' → logprob: -11.568473815917969
    7. '```' → logprob: -11.568473815917969
    8. 's' → logprob: -11.818473815917969
    9. '
' → logprob: -12.068473815917969
    10. 'for' → logprob: -12.193473815917969

Token 374: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001322639436693862
    2. ' ][' → logprob: -9.75013256072998
    3. '[s' → logprob: -9.87513256072998
    4. 's' → logprob: -11.62513256072998
    5. ']' → logprob: -12.12513256072998
    6. '   ' → logprob: -13.12513256072998
    7. '           ' → logprob: -13.50013256072998
    8. '       ' → logprob: -14.00013256072998
    9. '"][' → logprob: -14.37513256072998
    10. ''][' → logprob: -14.62513256072998

Token 375: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.958325295476243e-05
    2. ' s' → logprob: -9.500079154968262
    3. '[s' → logprob: -13.500079154968262
    4. '   ' → logprob: -13.750079154968262
    5. '(s' → logprob: -14.375079154968262
    6. '
' → logprob: -14.500079154968262
    7. ' ' → logprob: -15.625079154968262
    8. '  ' → logprob: -15.875079154968262
    9. 'X' → logprob: -15.875079154968262
    10. '{s' → logprob: -16.625080108642578

Token 376: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.00044401636114344
    2. '+' → logprob: -7.750443935394287
    3. 'd' → logprob: -12.125444412231445
    4. ' +' → logprob: -12.625444412231445
    5. '-d' → logprob: -13.500444412231445
    6. '+
' → logprob: -13.875444412231445
    7. '   ' → logprob: -14.875444412231445
    8. '```' → logprob: -15.000444412231445
    9. '+=' → logprob: -15.125444412231445
    10. '+D' → logprob: -15.375444412231445

Token 377: ']=(' (ID: 138510)
  Prédit: ']=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=(' → logprob: -0.007731911726295948
    2. ']' → logprob: -5.757731914520264
    3. ']+' → logprob: -5.882731914520264
    4. ']+=' → logprob: -7.007731914520264
    5. '   ' → logprob: -7.632731914520264
    6. '```' → logprob: -8.632731437683105
    7. '       ' → logprob: -10.007731437683105
    8. '           ' → logprob: -11.007731437683105
    9. '                   ' → logprob: -11.132731437683105
    10. '+=(' → logprob: -11.132731437683105

Token 378: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.06222636625170708
    2. '(tmp' → logprob: -2.8122262954711914
    3. '[tmp' → logprob: -9.062226295471191
    4. ' tmp' → logprob: -9.437226295471191
    5. '/tmp' → logprob: -10.187226295471191
    6. ',tmp' → logprob: -11.562226295471191
    7. '$tmp' → logprob: -11.687226295471191
    8. '	tmp' → logprob: -12.062226295471191
    9. '_tmp' → logprob: -14.437226295471191
    10. '   ' → logprob: -15.437226295471191

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. 'tmp' → logprob: -12.500011444091797
    3. '][' → logprob: -12.625011444091797
    4. 'd' → logprob: -14.000011444091797
    5. '```' → logprob: -14.500011444091797
    6. '
' → logprob: -15.000011444091797
    7. ' [' → logprob: -15.125011444091797
    8. '[tmp' → logprob: -15.375011444091797
    9. 'grp' → logprob: -15.875011444091797
    10. ']' → logprob: -15.875011444091797

Token 380: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.11304090917110443
    2. '[' → logprob: -2.2380409240722656
    3. '
' → logprob: -9.613040924072266
    4. '[group' → logprob: -10.113040924072266
    5. 'tmp' → logprob: -10.738040924072266
    6. 'd' → logprob: -10.988040924072266
    7. ' grp' → logprob: -11.363040924072266
    8. 'gru' → logprob: -11.363040924072266
    9. ']' → logprob: -11.613040924072266
    10. 'gp' → logprob: -12.613040924072266

Token 381: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07177028059959412
    2. '[' → logprob: -2.696770191192627
    3. '][' → logprob: -6.321770191192627
    4. '   ' → logprob: -12.071770668029785
    5. 'd' → logprob: -12.571770668029785
    6. ' -' → logprob: -12.946770668029785
    7. '[g' → logprob: -13.071770668029785
    8. '       ' → logprob: -13.196770668029785
    9. '```' → logprob: -13.321770668029785
    10. '
' → logprob: -13.321770668029785

Token 382: '1' (ID: 16)
  Prédit: 'grp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.5436697006225586
    2. '1' → logprob: -1.7936697006225586
    3. 's' → logprob: -1.7936697006225586
    4. 'tmp' → logprob: -3.4186697006225586
    5. 'd' → logprob: -3.9186697006225586
    6. '[' → logprob: -4.043669700622559
    7. '(' → logprob: -5.043669700622559
    8. ']' → logprob: -6.918669700622559
    9. '(s' → logprob: -7.043669700622559
    10. ' ' → logprob: -7.168669700622559

Token 383: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005287122912704945
    2. '[s' → logprob: -5.380287170410156
    3. 's' → logprob: -7.630287170410156
    4. ']' → logprob: -10.005287170410156
    5. '[' → logprob: -10.380287170410156
    6. '```' → logprob: -10.505287170410156
    7. '-' → logprob: -10.755287170410156
    8. ' ][' → logprob: -11.130287170410156
    9. ')[' → logprob: -11.880287170410156
    10. '+s' → logprob: -12.380287170410156

Token 384: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2948405128554441e-05
    2. ' s' → logprob: -13.00001335144043
    3. '[s' → logprob: -13.25001335144043
    4. '
' → logprob: -13.25001335144043
    5. 'd' → logprob: -13.37501335144043
    6. '(s' → logprob: -13.37501335144043
    7. 'tmp' → logprob: -14.12501335144043
    8. 'j' → logprob: -14.25001335144043
    9. '
' → logprob: -15.00001335144043
    10. ''s' → logprob: -15.00001335144043

Token 385: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.0009484992478974164
    2. '-d' → logprob: -8.000948905944824
    3. '+' → logprob: -8.250948905944824
    4. ']+' → logprob: -8.875948905944824
    5. 'd' → logprob: -9.000948905944824
    6. '+j' → logprob: -10.125948905944824
    7. '-' → logprob: -11.500948905944824
    8. '+(' → logprob: -11.625948905944824
    9. '+
' → logprob: -12.125948905944824
    10. ']' → logprob: -12.375948905944824

Token 386: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.007294843439012766
    2. '+' → logprob: -5.007294654846191
    3. ']+=' → logprob: -7.757294654846191
    4. ']' → logprob: -9.757294654846191
    5. '```' → logprob: -11.257294654846191
    6. ']-' → logprob: -11.382294654846191
    7. ']%' → logprob: -11.382294654846191
    8. '+(' → logprob: -11.757294654846191
    9. '-' → logprob: -11.757294654846191
    10. '+x' → logprob: -12.007294654846191

Token 387: 'mult' (ID: 34841)
  Prédit: 'mult'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.02596106566488743
    2. 'mod' → logprob: -3.77596116065979
    3. '(mult' → logprob: -6.275960922241211
    4. '(mod' → logprob: -7.775960922241211
    5. ' mult' → logprob: -8.525960922241211
    6. 'cnt' → logprob: -9.900960922241211
    7. 'mul' → logprob: -10.025960922241211
    8. '2' → logprob: -10.525960922241211
    9. 'tmp' → logprob: -10.525960922241211
    10. '(' → logprob: -11.150960922241211

Token 388: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.6312059164047241
    2. '*' → logprob: -0.8812059164047241
    3. '*d' → logprob: -3.0062060356140137
    4. '*j' → logprob: -6.131206035614014
    5. '*((' → logprob: -7.256206035614014
    6. '*g' → logprob: -8.131205558776855
    7. ')*' → logprob: -8.131205558776855
    8. '*n' → logprob: -8.256205558776855
    9. ')' → logprob: -9.631205558776855
    10. '*s' → logprob: -9.756205558776855

Token 389: 'grp' (ID: 86102)
  Prédit: 'grp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grp' → logprob: -0.024030666798353195
    2. '2' → logprob: -4.774030685424805
    3. '(j' → logprob: -5.774030685424805
    4. 'j' → logprob: -5.899030685424805
    5. '(' → logprob: -5.899030685424805
    6. '(gr' → logprob: -6.274030685424805
    7. 'd' → logprob: -6.399030685424805
    8. 'num' → logprob: -7.524030685424805
    9. '(d' → logprob: -7.649030685424805
    10. 's' → logprob: -8.149030685424805

Token 390: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019965621177107096
    2. '*(' → logprob: -7.2519965171813965
    3. '*' → logprob: -7.7519965171813965
    4. '))' → logprob: -8.251996994018555
    5. ')*' → logprob: -8.626996994018555
    6. ' -' → logprob: -8.751996994018555
    7. ')*(' → logprob: -9.876996994018555
    8. '+' → logprob: -10.001996994018555
    9. '*j' → logprob: -10.251996994018555
    10. '))*' → logprob: -10.501996994018555

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.64970643306151e-05
    2. '2' → logprob: -9.625086784362793
    3. 'd' → logprob: -12.375086784362793
    4. ' ' → logprob: -12.375086784362793
    5. 'j' → logprob: -12.625086784362793
    6. '
' → logprob: -13.125086784362793
    7. '-' → logprob: -13.375086784362793
    8. '   ' → logprob: -13.375086784362793
    9. '(' → logprob: -14.125086784362793
    10. ')' → logprob: -14.187586784362793

Token 392: ')*(' (ID: 44406)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.4297141432762146
    2. '*' → logprob: -1.1797142028808594
    3. '))' → logprob: -3.3047142028808594
    4. '*(' → logprob: -6.304714202880859
    5. ')%' → logprob: -6.304714202880859
    6. ')*(' → logprob: -7.054714202880859
    7. '*j' → logprob: -8.42971420288086
    8. '*d' → logprob: -9.30471420288086
    9. ' )' → logprob: -9.42971420288086
    10. ')' → logprob: -9.80471420288086

Token 393: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6194242238998413
    2. '2' → logprob: -1.2444242238998413
    3. 'd' → logprob: -2.619424343109131
    4. 'j' → logprob: -2.869424343109131
    5. 'grp' → logprob: -3.994424343109131
    6. '(' → logprob: -5.244424343109131
    7. 'mod' → logprob: -5.369424343109131
    8. '(j' → logprob: -5.619424343109131
    9. '(num' → logprob: -5.744424343109131
    10. 'X' → logprob: -5.869424343109131

Token 394: '-d' (ID: 2469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04191870614886284
    2. '-j' → logprob: -3.5419187545776367
    3. '+' → logprob: -5.041918754577637
    4. '*' → logprob: -6.166918754577637
    5. '-d' → logprob: -6.791918754577637
    6. '))' → logprob: -6.916918754577637
    7. '+j' → logprob: -7.916918754577637
    8. ' -' → logprob: -8.416918754577637
    9. '+d' → logprob: -8.666918754577637
    10. ')*' → logprob: -8.916918754577637

Token 395: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002036179881542921
    2. ')%' → logprob: -6.627036094665527
    3. '+' → logprob: -7.752036094665527
    4. ' ))' → logprob: -9.002036094665527
    5. ')))' → logprob: -9.627036094665527
    6. '   ' → logprob: -10.252036094665527
    7. ')' → logprob: -10.502036094665527
    8. ' ' → logprob: -12.252036094665527
    9. '       ' → logprob: -12.502036094665527
    10. ' )' → logprob: -12.502036094665527

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043035391718149185
    2. '2' → logprob: -3.1680355072021484
    3. '3' → logprob: -11.043035507202148
    4. ' ' → logprob: -11.543035507202148
    5. '0' → logprob: -12.855535507202148
    6. ')' → logprob: -13.168035507202148
    7. '```' → logprob: -13.668035507202148
    8. '   ' → logprob: -13.730535507202148
    9. '4' → logprob: -13.793035507202148
    10. '5' → logprob: -15.355535507202148

Token 397: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008341663633473217
    2. ')%' → logprob: -7.250833988189697
    3. ' ))' → logprob: -9.625834465026855
    4. ')' → logprob: -10.625834465026855
    5. '   ' → logprob: -11.250834465026855
    6. ')))' → logprob: -11.375834465026855
    7. ' )' → logprob: -13.125834465026855
    8. '       ' → logprob: -13.625834465026855
    9. '+' → logprob: -14.000834465026855
    10. ' ' → logprob: -14.125834465026855

Token 398: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5789240598678589
    2. ')%' → logprob: -0.8289240598678589
    3. ')' → logprob: -6.078924179077148
    4. ']%' → logprob: -8.328924179077148
    5. ' %' → logprob: -8.703924179077148
    6. '               ' → logprob: -9.203924179077148
    7. '           ' → logprob: -9.828924179077148
    8. '%)' → logprob: -9.953924179077148
    9. '                   ' → logprob: -10.453924179077148
    10. '%
' → logprob: -11.328924179077148

Token 399: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.896309739408025e-07
    2. ' modulo' → logprob: -14.750000953674316
    3. '(mod' → logprob: -15.000000953674316
    4. ' mod' → logprob: -18.375
    5. '```' → logprob: -19.25
    6. 'module' → logprob: -19.25
    7. 'modal' → logprob: -19.625
    8. '	mod' → logprob: -20.25
    9. 'mo' → logprob: -20.25
    10. '100' → logprob: -21.25

Token 400: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.3489099442958832
    2. 'o' → logprob: -1.2239099740982056
    3. 'mod' → logprob: -9.098910331726074
    4. 'olo' → logprob: -9.098910331726074
    5. 'ule' → logprob: -9.848910331726074
    6. 'lo' → logprob: -10.473910331726074
    7. ' modulo' → logprob: -10.723910331726074
    8. 'od' → logprob: -10.848910331726074
    9. 'u' → logprob: -10.848910331726074
    10. 'odo' → logprob: -10.973910331726074

Token 401: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.149419903755188
    2. '           ' → logprob: -2.2744197845458984
    3. ' s' → logprob: -3.7744197845458984
    4. 's' → logprob: -5.024419784545898
    5. ' break' → logprob: -5.899419784545898
    6. 'break' → logprob: -6.024419784545898
    7. '   ' → logprob: -7.649419784545898
    8. '       ' → logprob: -8.399419784545898
    9. '
' → logprob: -8.774419784545898
    10. '```' → logprob: -9.274419784545898

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5659826397895813
    2. '               ' → logprob: -0.9409826397895813
    3. 's' → logprob: -3.3159825801849365
    4. ' s' → logprob: -5.565982818603516
    5. '   ' → logprob: -7.440982818603516
    6. ' ' → logprob: -7.690982818603516
    7. '       ' → logprob: -8.440982818603516
    8. '<|end|>' → logprob: -9.065982818603516
    9. 'break' → logprob: -9.315982818603516
    10. '```' → logprob: -9.940982818603516

Token 403: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07395295798778534
    2. 's' (adapté à ' s') → logprob: -2.6989529132843018
    3. ' s' → logprob: -5.698953151702881
    4. '       ' → logprob: -7.823953151702881
    5. '   ' → logprob: -8.823952674865723
    6. '               ' → logprob: -9.948952674865723
    7. ' ' → logprob: -10.948952674865723
    8. '          ' → logprob: -11.698952674865723
    9. '#' → logprob: -12.198952674865723
    10. '         ' → logprob: -12.448952674865723

Token 404: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.076218025758862e-05
    2. ' +=' → logprob: -9.625070571899414
    3. '+' → logprob: -13.125070571899414
    4. '+=(' → logprob: -13.375070571899414
    5. ']+=' → logprob: -14.500070571899414
    6. '=' → logprob: -14.750070571899414
    7. '+='' → logprob: -16.500070571899414
    8. '+="' → logprob: -17.000070571899414
    9. '-=' → logprob: -17.125070571899414
    10. '++' → logprob: -17.250070571899414

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044092073221690953
    2. 'grp' → logprob: -8.25044059753418
    3. 'num' → logprob: -9.25044059753418
    4. ' ' → logprob: -10.37544059753418
    5. 'X' → logprob: -10.62544059753418
    6. '2' → logprob: -12.37544059753418
    7. '(' → logprob: -12.50044059753418
    8. 'j' → logprob: -12.75044059753418
    9. ' grp' → logprob: -13.25044059753418
    10. '   ' → logprob: -13.25044059753418

Token 406: '
' (ID: 198)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.2816905975341797
    2. '   ' → logprob: -1.4066905975341797
    3. ' DP' → logprob: -8.65669059753418
    4. 'for' → logprob: -8.90669059753418
    5. '       ' → logprob: -8.90669059753418
    6. '
' → logprob: -10.78169059753418
    7. '```' → logprob: -11.65669059753418
    8. '           ' → logprob: -11.90669059753418
    9. '  ' → logprob: -11.90669059753418
    10. 'import' → logprob: -12.15669059753418

Token 407: '   ' (ID: 271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0021876145619899035
    2. '   ' → logprob: -6.627187728881836
    3. 'for' → logprob: -7.502187728881836
    4. ' DP' → logprob: -8.252187728881836
    5. ' for' → logprob: -10.627187728881836
    6. '
' → logprob: -12.377187728881836
    7. 'tmp' → logprob: -12.502187728881836
    8. 'import' → logprob: -12.627187728881836
    9. '#' → logprob: -13.002187728881836
    10. ']' → logprob: -13.502187728881836

Token 408: ' #' (ID: 1069)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0004976287018507719
    2. ' DP' → logprob: -8.000497817993164
    3. 'for' → logprob: -9.500497817993164
    4. ']' → logprob: -10.875497817993164
    5. ' for' → logprob: -10.875497817993164
    6. '   ' → logprob: -10.875497817993164
    7. '[' → logprob: -11.000497817993164
    8. ')' → logprob: -12.750497817993164
    9. '_DP' → logprob: -13.000497817993164
    10. '}' → logprob: -13.250497817993164

Token 409: ' Assignment' (ID: 58240)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.00017791526624932885
    2. 'for' → logprob: -9.000178337097168
    3. ' DP' → logprob: -10.125178337097168
    4. '   ' → logprob: -11.250178337097168
    5. ' for' → logprob: -14.375178337097168
    6. 'import' → logprob: -15.125178337097168
    7. ' ' → logprob: -15.375178337097168
    8. 'dp' → logprob: -15.750178337097168
    9. '_DP' → logprob: -16.62517738342285
    10. '#' → logprob: -17.25017738342285

Token 410: ' in' (ID: 306)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.42131155729293823
    2. '=' → logprob: -1.171311616897583
    3. ' =' → logprob: -3.796311616897583
    4. '   ' → logprob: -4.796311378479004
    5. ' DP' → logprob: -5.796311378479004
    6. '_DP' → logprob: -10.421311378479004
    7. ',' → logprob: -10.546311378479004
    8. '
' → logprob: -10.671311378479004
    9. '    
' → logprob: -11.796311378479004
    10. '=
' → logprob: -12.046311378479004

Token 411: ' functional' (ID: 20483)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.1262633502483368
    2. 'tmp' → logprob: -2.251263380050659
    3. 'range' → logprob: -4.62626314163208
    4. ' DP' → logprob: -7.12626314163208
    5. 'for' → logprob: -7.62626314163208
    6. '=' → logprob: -7.87626314163208
    7. ' range' → logprob: -8.251263618469238
    8. ')' → logprob: -8.376263618469238
    9. 'dp' → logprob: -8.751263618469238
    10. ' tmp' → logprob: -8.751263618469238

Token 412: ' fashion' (ID: 12808)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.14467550814151764
    2. '=' → logprob: -2.2696754932403564
    3. 'style' → logprob: -3.7696754932403564
    4. '[:]' → logprob: -6.1446757316589355
    5. ' =' → logprob: -6.7696757316589355
    6. ' style' → logprob: -7.2696757316589355
    7. '   ' → logprob: -7.2696757316589355
    8. ' DP' → logprob: -7.3946757316589355
    9. 'copy' → logprob: -7.8946757316589355
    10. '[' → logprob: -7.8946757316589355

Token 413: '
' (ID: 198)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.027266032993793488
    2. '   ' → logprob: -3.652266025543213
    3. ' DP' → logprob: -7.027266025543213
    4. '
' → logprob: -10.027266502380371
    5. '_DP' → logprob: -11.402266502380371
    6. '    
' → logprob: -11.652266502380371
    7. '=' → logprob: -12.152266502380371
    8. ' =' → logprob: -12.402266502380371
    9. ',' → logprob: -13.027266502380371
    10. ')' → logprob: -14.777266502380371

Token 414: '   ' (ID: 271)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0016644697170704603
    2. ' DP' → logprob: -6.626664638519287
    3. '   ' → logprob: -8.001664161682129
    4. '_DP' → logprob: -12.626664161682129
    5. '    
' → logprob: -16.626665115356445
    6. ',' → logprob: -16.751665115356445
    7. '```' → logprob: -16.876665115356445
    8. 'DM' → logprob: -17.001665115356445
    9. '
' → logprob: -17.001665115356445
    10. '=' → logprob: -17.001665115356445

Token 415: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -2.5776860184123507e-06
    2. ' DP' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.37500286102295
    4. '_DP' → logprob: -18.750001907348633
    5. 'for' → logprob: -19.000001907348633
    6. '
' → logprob: -19.875001907348633
    7. 'DJ' → logprob: -20.000001907348633
    8. 'DM' → logprob: -20.250001907348633
    9. 'tmp' → logprob: -20.250001907348633
    10. 'dp' → logprob: -20.750001907348633

Token 416: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15428781509399414
    2. '[:]' → logprob: -2.029287815093994
    3. ' =' → logprob: -5.154287815093994
    4. '[:' → logprob: -5.654287815093994
    5. '=list' → logprob: -6.279287815093994
    6. '=[' → logprob: -9.279287338256836
    7. ',tmp' → logprob: -9.654287338256836
    8. '=len' → logprob: -9.779287338256836
    9. '[tmp' → logprob: -9.904287338256836
    10. '=temp' → logprob: -10.154287338256836

Token 417: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.004280331078916788
    2. '[tmp' → logprob: -5.5042805671691895
    3. '[' → logprob: -8.754280090332031
    4. ' tmp' → logprob: -11.004280090332031
    5. 'list' → logprob: -11.754280090332031
    6. '[[' → logprob: -12.754280090332031
    7. '[list' → logprob: -12.754280090332031
    8. '[t' → logprob: -12.754280090332031
    9. '(tmp' → logprob: -12.879280090332031
    10. '$tmp' → logprob: -13.754280090332031

Token 418: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2880806028842926
    2. 'result' → logprob: -2.2880806922912598
    3. '<|end|>' → logprob: -3.0380806922912598
    4. '
' → logprob: -3.4130806922912598
    5. 'ans' → logprob: -3.9130806922912598
    6. 'answer' → logprob: -4.03808069229126
    7. 'total' → logprob: -4.66308069229126
    8. 'res' → logprob: -4.91308069229126
    9. ')' → logprob: -5.28808069229126
    10. 'sum' → logprob: -5.66308069229126

Token 419: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07350946962833405
    2. ')' → logprob: -4.073509693145752
    3. '
' → logprob: -4.073509693145752
    4. '<|end|>' → logprob: -4.073509693145752
    5. 'result' → logprob: -4.698509693145752
    6. 'for' → logprob: -5.823509693145752
    7. 'answer' → logprob: -6.198509693145752
    8. 'ans' → logprob: -6.448509693145752
    9. '#' → logprob: -6.823509693145752
    10. 'res' → logprob: -7.073509693145752

Token 420: ' Mix' (ID: 29052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2566123306751251
    2. 'result' → logprob: -2.5066123008728027
    3. 'ans' → logprob: -2.6316123008728027
    4. 'answer' → logprob: -2.8816123008728027
    5. 'res' → logprob: -4.256612300872803
    6. 'out' → logprob: -6.381612300872803
    7. 'total' → logprob: -8.006612777709961
    8. 'output' → logprob: -9.006612777709961
    9. 'ret' → logprob: -9.131612777709961
    10. 'r' → logprob: -9.631612777709961

Token 421: ' comprehension' (ID: 91423)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1169410943984985
    2. 'of' → logprob: -1.2419410943984985
    3. 'result' → logprob: -2.366940975189209
    4. 'ed' → logprob: -2.491940975189209
    5. '(ans' → logprob: -3.241940975189209
    6. 'for' → logprob: -3.366940975189209
    7. 'print' → logprob: -3.616940975189209
    8. '=' → logprob: -4.366940975189209
    9. 'def' → logprob: -4.491940975189209
    10. ' =' → logprob: -4.616940975189209

Token 422: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9170475602149963
    2. 'ans' → logprob: -1.2920475006103516
    3. 'res' → logprob: -1.7920475006103516
    4. 'answer' → logprob: -2.0420475006103516
    5. 'total' → logprob: -4.792047500610352
    6. 'print' → logprob: -5.167047500610352
    7. 's' → logprob: -6.042047500610352
    8. 'sum' → logprob: -6.542047500610352
    9. ' ans' → logprob: -6.542047500610352
    10. 'count' → logprob: -6.542047500610352

Token 423: ' output' (ID: 4733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0464376211166382
    2. 'result' → logprob: -1.1714376211166382
    3. 'res' → logprob: -1.4214376211166382
    4. 'answer' → logprob: -3.1714377403259277
    5. 'print' → logprob: -3.6714377403259277
    6. 'total' → logprob: -5.046437740325928
    7. 'sum' → logprob: -5.296437740325928
    8. ' ans' → logprob: -5.546437740325928
    9. 'r' → logprob: -6.046437740325928
    10. '_' → logprob: -6.296437740325928

Token 424: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004338494967669249
    2. 'result' → logprob: -6.254338264465332
    3. 'ans' → logprob: -6.504338264465332
    4. 'answer' → logprob: -7.629338264465332
    5. 'res' → logprob: -8.379338264465332
    6. 'out' → logprob: -9.879338264465332
    7. 'total' → logprob: -9.879338264465332
    8. 'for' → logprob: -10.754338264465332
    9. '```' → logprob: -11.129338264465332
    10. '
' → logprob: -11.504338264465332

Token 425: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000840715249069035
    2. 'result' → logprob: -7.750840663909912
    3. 'ans' → logprob: -8.50084114074707
    4. 'answer' → logprob: -9.25084114074707
    5. 'res' → logprob: -9.62584114074707
    6. 'out' → logprob: -10.75084114074707
    7. 'total' → logprob: -11.87584114074707
    8. '```' → logprob: -12.75084114074707
    9. '
' → logprob: -12.87584114074707
    10. 'for' → logprob: -13.12584114074707

Token 426: '((' (ID: 2054)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.018331732600927353
    2. '(max' → logprob: -4.268331527709961
    3. 'sum' → logprob: -6.143331527709961
    4. '(' → logprob: -6.643331527709961
    5. '(min' → logprob: -7.393331527709961
    6. '((' → logprob: -10.268331527709961
    7. '(
' → logprob: -10.643331527709961
    8. 'max' → logprob: -11.143331527709961
    9. '(pow' → logprob: -13.143331527709961
    10. ' (' → logprob: -13.143331527709961

Token 427: 'lambda' (ID: 35280)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.006128345150500536
    2. 'max' → logprob: -5.756128311157227
    3. '(sum' → logprob: -6.131128311157227
    4. ' sum' → logprob: -8.131128311157227
    5. 'DP' → logprob: -8.256128311157227
    6. '(max' → logprob: -9.756128311157227
    7. '(' → logprob: -10.131128311157227
    8. '
' → logprob: -10.506128311157227
    9. 'min' → logprob: -11.381128311157227
    10. 'dp' → logprob: -11.506128311157227

Token 428: ' arr' (ID: 1724)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.5054948329925537
    2. 'dp' → logprob: -1.6304948329925537
    3. 'x' → logprob: -2.6304948329925537
    4. ' DP' → logprob: -3.5054948329925537
    5. ' dp' → logprob: -3.7554948329925537
    6. 'lst' → logprob: -4.130495071411133
    7. ' x' → logprob: -4.380495071411133
    8. 'res' → logprob: -4.755495071411133
    9. ' res' → logprob: -5.130495071411133
    10. 'arr' → logprob: -5.255495071411133

Token 429: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0048909736797213554
    2. ':[' → logprob: -5.7548909187316895
    3. ' :' → logprob: -7.2548909187316895
    4. ':max' → logprob: -7.2548909187316895
    5. ':list' → logprob: -9.254891395568848
    6. 'arr' → logprob: -9.379891395568848
    7. ':s' → logprob: -11.004891395568848
    8. ':(' → logprob: -11.129891395568848
    9. ':
' → logprob: -11.254891395568848
    10. ':l' → logprob: -11.879891395568848

Token 430: ' arr' (ID: 1724)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07775267213582993
    2. 'max' → logprob: -2.7027525901794434
    3. '(sum' → logprob: -5.702752590179443
    4. 'arr' → logprob: -6.577752590179443
    5. ' sum' → logprob: -6.702752590179443
    6. 'print' → logprob: -6.952752590179443
    7. '(max' → logprob: -7.452752590179443
    8. ' max' → logprob: -8.702753067016602
    9. '[max' → logprob: -9.952753067016602
    10. 'str' → logprob: -10.202753067016602

Token 431: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8894185423851013
    2. '[-' → logprob: -1.764418601989746
    3. 'sum' → logprob: -1.889418601989746
    4. '[' → logprob: -2.264418601989746
    5. '[max' → logprob: -2.264418601989746
    6. 'max' → logprob: -3.764418601989746
    7. '(sum' → logprob: -4.889418601989746
    8. 'arr' → logprob: -5.389418601989746
    9. 'for' → logprob: -5.764418601989746
    10. '(max' → logprob: -5.889418601989746

Token 432: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2739109992980957
    2. 'sum' → logprob: -2.2739109992980957
    3. 'max' → logprob: -2.5239109992980957
    4. '1' → logprob: -3.3989109992980957
    5. '[N' → logprob: -5.273910999298096
    6. 'range' → logprob: -5.398910999298096
    7. 'min' → logprob: -5.898910999298096
    8. 'X' → logprob: -6.023910999298096
    9. '-' → logprob: -6.273910999298096
    10. '[' → logprob: -6.648910999298096

Token 433: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00806897971779108
    2. '[X' → logprob: -5.508069038391113
    3. '[' → logprob: -6.883069038391113
    4. '])' → logprob: -7.508069038391113
    5. '][-' → logprob: -7.508069038391113
    6. ']' → logprob: -7.883069038391113
    7. ']))' → logprob: -8.633069038391113
    8. ' ][' → logprob: -8.883069038391113
    9. ':' → logprob: -9.008069038391113
    10. 'X' → logprob: -9.008069038391113

Token 434: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -2.522638169466518e-05
    2. '0' → logprob: -11.250024795532227
    3. ' X' → logprob: -12.250024795532227
    4. '
' → logprob: -13.125024795532227
    5. 'x' → logprob: -13.625024795532227
    6. '   ' → logprob: -13.875024795532227
    7. ':X' → logprob: -13.875024795532227
    8. '(X' → logprob: -14.750024795532227
    9. '[X' → logprob: -15.000024795532227
    10. 'sum' → logprob: -15.125024795532227

Token 435: '])(' (ID: 164063)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11233925819396973
    2. '])(' → logprob: -2.7373392581939697
    3. ']%' → logprob: -4.112339019775391
    4. ']' → logprob: -4.112339019775391
    5. ']))' → logprob: -4.862339019775391
    6. ' ])' → logprob: -8.11233901977539
    7. ']()' → logprob: -8.23733901977539
    8. ']+' → logprob: -8.98733901977539
    9. 'if' → logprob: -9.11233901977539
    10. '%' → logprob: -9.61233901977539

Token 436: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -1.8624639324116288e-06
    2. ' DP' → logprob: -13.250001907348633
    3. '_DP' → logprob: -20.625001907348633
    4. 'dp' → logprob: -22.000001907348633
    5. '   ' → logprob: -22.375001907348633
    6. '
' → logprob: -23.125001907348633
    7. 'DM' → logprob: -23.875001907348633
    8. 'D' → logprob: -24.500001907348633
    9. ' ' → logprob: -24.750001907348633
    10. 'Dp' → logprob: -24.750001907348633

Token 437: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067176250740885735
    2. ')' → logprob: -5.006717681884766
    3. '))
' → logprob: -14.131717681884766
    4. ')))' → logprob: -14.256717681884766
    5. ')
' → logprob: -14.381717681884766
    6. ')+' → logprob: -16.256717681884766
    7. '+' → logprob: -16.631717681884766
    8. ' ))' → logprob: -16.881717681884766
    9. '()))' → logprob: -17.006717681884766
    10. '])' → logprob: -17.256717681884766


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 435
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 222
Tokens correctement prédits (top 10): 340
Précision stricte (1ère position): 48.74%
Précision adaptée (1ère position): 51.03%
Précision (top 10): 78.16%
================================================================================
