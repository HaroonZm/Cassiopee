================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    def compteur(sous_chaine, chaine):
        i = 0; resultat = 0
        while i < len(chaine):
            if chaine[i:i+len(sous_chaine)] == sous_chaine:
                resultat += 1
            i += 1
        return resultat

    class Afficheur:
        def __init__(self, valeur): self.valeur = valeur
        def show(self): print(self.valeur)

    n = int(input()) # variable inutilisée, bon pour le style functional...
    S = input()

    # mélange avec map/lambda, mais utilise compteur (= imp imp)
    nombre = (lambda x: compteur('ABC', x))(S)
    Afficheur(nombre).show()

if __name__ == '__main__':
    exec('main()')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' def' (ID: 1056)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8913612365722656
    2. '   ' → logprob: -1.0163612365722656
    3. 'pass' → logprob: -1.7663612365722656
    4. 'return' → logprob: -3.2663612365722656
    5. '```' → logprob: -5.141361236572266
    6. '#' → logprob: -6.016361236572266
    7. ' pass' → logprob: -6.016361236572266
    8. '    ' → logprob: -6.266361236572266
    9. '\' → logprob: -6.516361236572266
    10. '    
' → logprob: -7.016361236572266

Token 5: ' compteur' (ID: 163344)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013981555588543415
    2. ' space' → logprob: -5.388981342315674
    3. ' main' → logprob: -6.013981342315674
    4. '_' → logprob: -6.263981342315674
    5. '  ' → logprob: -6.763981342315674
    6. ' _' → logprob: -7.013981342315674
    7. '   ' → logprob: -7.513981342315674
    8. ' ​' → logprob: -8.388981819152832
    9. ' function' → logprob: -8.388981819152832
    10. '    ' → logprob: -8.513981819152832

Token 6: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20485819876194
    2. '_' → logprob: -1.7048581838607788
    3. 's' → logprob: -7.454858303070068
    4. ':' → logprob: -7.829858303070068
    5. ' (' → logprob: -7.954858303070068
    6. '():' → logprob: -8.07985782623291
    7. '(s' → logprob: -8.45485782623291
    8. '):' → logprob: -8.70485782623291
    9. '_counter' → logprob: -8.82985782623291
    10. '_space' → logprob: -9.07985782623291

Token 7: 'ous' (ID: 784)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027316030114889145
    2. ')' → logprob: -3.777316093444824
    3. ',' → logprob: -6.277316093444824
    4. '[' → logprob: -7.402316093444824
    5. 'e' → logprob: -7.527316093444824
    6. 'u' → logprob: -8.152316093444824
    7. ' ):' → logprob: -8.652316093444824
    8. ' ' → logprob: -9.152316093444824
    9. ':' → logprob: -9.402316093444824
    10. '   ' → logprob: -9.527316093444824

Token 8: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.044311508536338806
    2. '_m' → logprob: -3.7943115234375
    3. '_string' → logprob: -5.2943115234375
    4. '_comp' → logprob: -6.0443115234375
    5. '_str' → logprob: -6.2943115234375
    6. '_c' → logprob: -6.4193115234375
    7. '_ch' → logprob: -6.5443115234375
    8. '-' → logprob: -6.6693115234375
    9. '_t' → logprob: -6.9193115234375
    10. 'chaine' → logprob: -7.0443115234375

Token 9: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.047359198331832886
    2. 'chain' → logprob: -3.5473592281341553
    3. 'cha' → logprob: -5.047358989715576
    4. '_' → logprob: -5.922358989715576
    5. 'string' → logprob: -6.297358989715576
    6. 'c' → logprob: -6.672358989715576
    7. 'ch' → logprob: -6.672358989715576
    8. 't' → logprob: -7.422358989715576
    9. 'm' → logprob: -7.672358989715576
    10. 'str' → logprob: -7.672358989715576

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017637303099036217
    2. ',' → logprob: -4.392637252807617
    3. ')' → logprob: -5.392637252807617
    4. ':' → logprob: -8.892637252807617
    5. '   ' → logprob: -8.892637252807617
    6. '):
' → logprob: -9.892637252807617
    7. '[' → logprob: -9.892637252807617
    8. ' ):' → logprob: -10.017637252807617
    9. ' ,' → logprob: -10.767637252807617
    10. '=' → logprob: -10.892637252807617

Token 11: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.4813101291656494
    2. ' chaine' → logprob: -1.2313101291656494
    3. '   ' → logprob: -3.2313101291656494
    4. 'texte' → logprob: -4.23130989074707
    5. ' texte' → logprob: -5.35630989074707
    6. ' ' → logprob: -5.35630989074707
    7. 'ch' → logprob: -6.35630989074707
    8. ' main' → logprob: -6.35630989074707
    9. ' index' → logprob: -6.48130989074707
    10. 'cha' → logprob: -6.73130989074707

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051603433676064014
    2. ')' → logprob: -5.380160331726074
    3. ',' → logprob: -8.005160331726074
    4. '   ' → logprob: -8.880160331726074
    5. '):
' → logprob: -10.505160331726074
    6. ':' → logprob: -11.505160331726074
    7. ' ):' → logprob: -12.005160331726074
    8. ''):' → logprob: -12.380160331726074
    9. '       ' → logprob: -12.755160331726074
    10. ' ' → logprob: -12.880160331726074

Token 13: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8127864599227905
    2. '):' → logprob: -1.1877864599227905
    3. ':' → logprob: -2.06278657913208
    4. ')' → logprob: -2.93778657913208
    5. '(' → logprob: -3.18778657913208
    6. '   ' → logprob: -4.43778657913208
    7. '_' → logprob: -5.56278657913208
    8. '.' → logprob: -5.93778657913208
    9. '    ' → logprob: -6.18778657913208
    10. '():' → logprob: -6.31278657913208

Token 14: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5409740805625916
    2. '       ' → logprob: -1.9159741401672363
    3. 'count' → logprob: -1.9159741401672363
    4. '        ' → logprob: -3.1659741401672363
    5. ' count' → logprob: -4.040974140167236
    6. 'return' → logprob: -4.165974140167236
    7. '   ' → logprob: -4.290974140167236
    8. '    ' → logprob: -4.415974140167236
    9. ' return' → logprob: -5.540974140167236
    10. ' ' → logprob: -5.915974140167236

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5327179431915283
    2. 'f' → logprob: -1.6577179431915283
    3. ' =' → logprob: -1.6577179431915283
    4. 'n' → logprob: -3.6577179431915283
    5. 'nt' → logprob: -6.157717704772949
    6. 's' → logprob: -6.282717704772949
    7. ',' → logprob: -7.032717704772949
    8. 'nd' → logprob: -7.157717704772949
    9. '_' → logprob: -9.53271770477295
    10. ' ' → logprob: -9.90771770477295

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1002955213189125
    2. '0' → logprob: -2.3502955436706543
    3. 'chaine' → logprob: -9.725295066833496
    4. ' chain' → logprob: -11.600295066833496
    5. ' chaine' → logprob: -11.600295066833496
    6. 'chain' → logprob: -12.975295066833496
    7. '   ' → logprob: -13.600295066833496
    8. ' len' → logprob: -13.975295066833496
    9. ' chaîne' → logprob: -14.037795066833496
    10. ' s' → logprob: -14.225295066833496

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.138441237155348e-05
    2. 'chaine' → logprob: -9.875091552734375
    3. ' ' → logprob: -10.750091552734375
    4. 'len' → logprob: -11.250091552734375
    5. '-' → logprob: -13.250091552734375
    6. '1' → logprob: -13.750091552734375
    7. 's' → logprob: -13.875091552734375
    8. 'int' → logprob: -14.500091552734375
    9. '```' → logprob: -15.437591552734375
    10. 'chain' → logprob: -15.562591552734375

Token 18: ';' (ID: 26)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7626641988754272
    2. '<|end|>' → logprob: -1.3876641988754272
    3. 'while' → logprob: -2.137664318084717
    4. ' while' → logprob: -2.762664318084717
    5. '   ' → logprob: -4.012664318084717
    6. '       ' → logprob: -4.137664318084717
    7. ',' → logprob: -4.387664318084717
    8. '  ' → logprob: -4.512664318084717
    9. '    ' → logprob: -4.887664318084717
    10. ' ,' → logprob: -5.137664318084717

Token 19: ' resultat' (ID: 67404)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15832236409187317
    2. ' while' → logprob: -2.658322334289551
    3. 'while' → logprob: -3.783322334289551
    4. 'i' → logprob: -4.533322334289551
    5. ' i' → logprob: -4.533322334289551
    6. '       ' → logprob: -4.658322334289551
    7. '        ' → logprob: -4.908322334289551
    8. '    ' → logprob: -5.158322334289551
    9. 'n' → logprob: -6.533322334289551
    10. '  ' → logprob: -7.158322334289551

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6331925392150879
    2. '=' → logprob: -0.7581925392150879
    3. ' +=' → logprob: -8.88319206237793
    4. 's' → logprob: -9.00819206237793
    5. ' ' → logprob: -9.13319206237793
    6. '_' → logprob: -9.63319206237793
    7. '  ' → logprob: -10.38319206237793
    8. 'space' → logprob: -10.38319206237793
    9. '+=' → logprob: -10.75819206237793
    10. ')' → logprob: -10.88319206237793

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12695856392383575
    2. '0' → logprob: -2.1269586086273193
    3. ' ' → logprob: -10.876958847045898
    4. ' []' → logprob: -12.626958847045898
    5. '  ' → logprob: -12.751958847045898
    6. '{}' → logprob: -14.001958847045898
    7. '[]' → logprob: -14.126958847045898
    8. ' {}' → logprob: -14.251958847045898
    9. '1' → logprob: -14.501958847045898
    10. '   ' → logprob: -14.751958847045898

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016468366084154695
    2. ' ' → logprob: -9.000164985656738
    3. '{}' → logprob: -10.500164985656738
    4. '[]' → logprob: -11.875164985656738
    5. 'len' → logprob: -12.750164985656738
    6. 'chaine' → logprob: -13.750164985656738
    7. '1' → logprob: -14.625164985656738
    8. 's' → logprob: -14.750164985656738
    9. '{' → logprob: -15.000164985656738
    10. '[' → logprob: -15.375164985656738

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9530636668205261
    2. ' 
' → logprob: -1.203063726425171
    3. '<|end|>' → logprob: -2.328063726425171
    4. ' ' → logprob: -2.578063726425171
    5. '  
' → logprob: -2.953063726425171
    6. '    
' → logprob: -4.328063488006592
    7. ' for' → logprob: -4.453063488006592
    8. ';' → logprob: -4.578063488006592
    9. 'for' → logprob: -4.828063488006592
    10. 'while' → logprob: -4.828063488006592

Token 24: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8521175980567932
    2. ' 
' → logprob: -1.6021175384521484
    3. ' ' → logprob: -1.8521175384521484
    4. '  
' → logprob: -2.8521175384521484
    5. '<|end|>' → logprob: -3.2271175384521484
    6. ' while' → logprob: -3.7271175384521484
    7. 'while' → logprob: -3.9771175384521484
    8. ' for' → logprob: -4.352117538452148
    9. '   ' → logprob: -4.727117538452148
    10. '\n' → logprob: -4.727117538452148

Token 25: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7681578397750854
    2. 'while' (adapté à ' while') → logprob: -1.3931578397750854
    3. ' for' → logprob: -2.518157958984375
    4. '       ' → logprob: -2.768157958984375
    5. '
' → logprob: -3.268157958984375
    6. ' ' → logprob: -3.518157958984375
    7. 'for' → logprob: -3.643157958984375
    8. '   ' → logprob: -3.893157958984375
    9. '<|end|>' → logprob: -4.893157958984375
    10. '\n' → logprob: -5.018157958984375

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015396231319755316
    2. 'i' → logprob: -7.126539707183838
    3. ' chaine' → logprob: -7.751539707183838
    4. ' ' → logprob: -9.12653923034668
    5. 'chaine' → logprob: -9.62653923034668
    6. ' s' → logprob: -10.00153923034668
    7. ' '' → logprob: -10.87653923034668
    8. '(i' → logprob: -11.50153923034668
    9. ' len' → logprob: -11.62653923034668
    10. 's' → logprob: -11.62653923034668

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005143388640135527
    2. '<' → logprob: -6.005143165588379
    3. ' <=' → logprob: -6.005143165588379
    4. ' ' → logprob: -8.755143165588379
    5. '<=' → logprob: -10.630143165588379
    6. '<len' → logprob: -11.505143165588379
    7. ' in' → logprob: -13.380143165588379
    8. '<n' → logprob: -13.755143165588379
    9. 's' → logprob: -14.880143165588379
    10. ' =' → logprob: -15.005143165588379

Token 28: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.000912774819880724
    2. 'len' → logprob: -7.000912666320801
    3. ' ' → logprob: -14.1259126663208
    4. '=len' → logprob: -15.5009126663208
    5. '(len' → logprob: -15.6259126663208
    6. '	len' → logprob: -15.7509126663208
    7. '[len' → logprob: -17.875913619995117
    8. ',len' → logprob: -18.000913619995117
    9. '<len' → logprob: -18.500913619995117
    10. ' ' → logprob: -18.500913619995117

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001831565605243668
    2. ' (' → logprob: -8.62518310546875
    3. '(s' → logprob: -13.37518310546875
    4. '('' → logprob: -14.62518310546875
    5. '(
' → logprob: -15.12518310546875
    6. 'chaine' → logprob: -15.50018310546875
    7. ')' → logprob: -15.62518310546875
    8. 's' → logprob: -15.75018310546875
    9. '("' → logprob: -15.87518310546875
    10. '(chain' → logprob: -16.00018310546875

Token 30: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.043078094720840454
    2. ' chaine' → logprob: -3.1680781841278076
    3. ' chaîne' → logprob: -10.918078422546387
    4. 'chain' → logprob: -11.043078422546387
    5. ')' → logprob: -11.293078422546387
    6. 'cha' → logprob: -11.918078422546387
    7. ' ' → logprob: -12.043078422546387
    8. '   ' → logprob: -12.168078422546387
    9. '(' → logprob: -12.668078422546387
    10. ' )' → logprob: -13.418078422546387

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09173539280891418
    2. ')' → logprob: -2.966735363006592
    3. ' ):' → logprob: -3.841735363006592
    4. ' and' → logprob: -4.466735363006592
    5. ' )' → logprob: -6.216735363006592
    6. '):
' → logprob: -7.341735363006592
    7. 'and' → logprob: -8.21673583984375
    8. '   ' → logprob: -8.96673583984375
    9. ':' → logprob: -9.21673583984375
    10. ' ):
' → logprob: -10.46673583984375

Token 32: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.94670170545578
    2. '    ' → logprob: -1.3217017650604248
    3. '           ' → logprob: -2.321701765060425
    4. '   ' → logprob: -2.696701765060425
    5. '            ' → logprob: -2.821701765060425
    6. '        ' → logprob: -3.446701765060425
    7. '       ' → logprob: -3.696701765060425
    8. ' :' → logprob: -4.196701526641846
    9. '  ' → logprob: -4.571701526641846
    10. '<|end|>' → logprob: -4.571701526641846

Token 33: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9661460518836975
    2. '           ' → logprob: -1.3411459922790527
    3. '   ' → logprob: -2.2161459922790527
    4. '       ' → logprob: -2.2161459922790527
    5. '    ' → logprob: -2.8411459922790527
    6. ' if' → logprob: -3.7161459922790527
    7. 'if' (adapté à ' if') → logprob: -4.091145992279053
    8. '        ' → logprob: -4.466145992279053
    9. '            ' → logprob: -4.841145992279053
    10. '  ' → logprob: -4.966145992279053

Token 34: ' chaine' (ID: 192094)
  Prédit: ' chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaine' → logprob: -0.005512396339327097
    2. 'chaine' → logprob: -5.255512237548828
    3. ' chaîne' → logprob: -8.380512237548828
    4. ' sous' → logprob: -11.005512237548828
    5. ' chain' → logprob: -11.880512237548828
    6. ' ' → logprob: -12.005512237548828
    7. ' s' → logprob: -12.130512237548828
    8. ' substring' → logprob: -12.755512237548828
    9. '   ' → logprob: -13.255512237548828
    10. ' chen' → logprob: -13.255512237548828

Token 35: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.265462726354599
    2. '.startswith' → logprob: -1.5154627561569214
    3. '[' → logprob: -4.515462875366211
    4. '.' → logprob: -6.765462875366211
    5. '   ' → logprob: -7.140462875366211
    6. '.find' → logprob: -8.015462875366211
    7. '           ' → logprob: -9.515462875366211
    8. '[int' → logprob: -9.890462875366211
    9. '       ' → logprob: -10.265462875366211
    10. '.endswith' → logprob: -11.015462875366211

Token 36: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.11523748189210892
    2. ':' → logprob: -2.6152374744415283
    3. ':].' → logprob: -3.3652374744415283
    4. '==' → logprob: -7.115237712860107
    5. '.startswith' → logprob: -8.99023723602295
    6. ' ==' → logprob: -9.49023723602295
    7. ' :' → logprob: -10.11523723602295
    8. ':start' → logprob: -10.24023723602295
    9. ':]' → logprob: -11.49023723602295
    10. '.' → logprob: -11.74023723602295

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008737127296626568
    2. ' +' → logprob: -4.883737087249756
    3. '+i' → logprob: -7.633737087249756
    4. 'len' → logprob: -7.758737087249756
    5. ':i' → logprob: -9.008737564086914
    6. '+l' → logprob: -9.758737564086914
    7. '<len' → logprob: -11.633737564086914
    8. '+n' → logprob: -12.633737564086914
    9. '==' → logprob: -12.758737564086914
    10. 'i' → logprob: -13.133737564086914

Token 38: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1160349458805285e-05
    2. ' len' → logprob: -12.000011444091797
    3. '(len' → logprob: -13.625011444091797
    4. '2' → logprob: -14.000011444091797
    5. '1' → logprob: -14.375011444091797
    6. '[len' → logprob: -14.500011444091797
    7. '6' → logprob: -15.000011444091797
    8. '	len' → logprob: -15.000011444091797
    9. '<|end|>' → logprob: -15.250011444091797
    10. '<len' → logprob: -15.375011444091797

Token 39: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.1798149198293686
    2. '(' → logprob: -1.8048149347305298
    3. 's' → logprob: -10.429815292358398
    4. '('' → logprob: -11.179815292358398
    5. '(
' → logprob: -11.304815292358398
    6. '(

' → logprob: -12.054815292358398
    7. ' (' → logprob: -12.679815292358398
    8. ' ' → logprob: -13.304815292358398
    9. '(sub' → logprob: -14.054815292358398
    10. ')' → logprob: -14.804815292358398

Token 40: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -0.00013369438238441944
    2. 's' → logprob: -9.000133514404297
    3. 'ouss' → logprob: -12.375133514404297
    4. 'o' → logprob: -13.750133514404297
    5. 'ou' → logprob: -13.875133514404297
    6. '_' → logprob: -13.875133514404297
    7. '```' → logprob: -14.625133514404297
    8. ')' → logprob: -15.125133514404297
    9. 'OUS' → logprob: -15.500133514404297
    10. 'ousse' → logprob: -15.500133514404297

Token 41: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.2994620242971e-06
    2. 'chaine' → logprob: -12.000008583068848
    3. '_ch' → logprob: -14.125008583068848
    4. '_c' → logprob: -14.625008583068848
    5. '_s' → logprob: -15.000008583068848
    6. '_chain' → logprob: -15.125008583068848
    7. ' _' → logprob: -15.625008583068848
    8. ' chaine' → logprob: -16.37500762939453
    9. '‌' → logprob: -17.00000762939453
    10. '_chan' → logprob: -18.25000762939453

Token 42: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.28217366337776184
    2. '_' → logprob: -1.4071736335754395
    3. '_ch' → logprob: -7.9071736335754395
    4. ' chaine' → logprob: -8.032174110412598
    5. '```' → logprob: -9.407174110412598
    6. '   ' → logprob: -9.782174110412598
    7. '_c' → logprob: -10.157174110412598
    8. 'cha' → logprob: -10.282174110412598
    9. '-' → logprob: -10.407174110412598
    10. '_chain' → logprob: -11.532174110412598

Token 43: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.478986918926239
    2. ']' → logprob: -0.978986918926239
    3. ']==' → logprob: -5.353986740112305
    4. ')' → logprob: -9.853986740112305
    5. ' ]' → logprob: -10.353986740112305
    6. '==' → logprob: -10.728986740112305
    7. ']]' → logprob: -10.853986740112305
    8. ')==' → logprob: -10.978986740112305
    9. '')]' → logprob: -11.853986740112305
    10. '`]' → logprob: -12.728986740112305

Token 44: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4767910838127136
    2. ' ==' → logprob: -0.9767910838127136
    3. '=' → logprob: -5.976790904998779
    4. ' =' → logprob: -9.726791381835938
    5. ')==' → logprob: -10.101791381835938
    6. ']==' → logprob: -10.226791381835938
    7. '===' → logprob: -10.851791381835938
    8. ')' → logprob: -12.226791381835938
    9. '==
' → logprob: -12.351791381835938
    10. '=='' → logprob: -13.601791381835938

Token 45: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.04381053149700165
    2. 's' → logprob: -3.4188106060028076
    3. ' ' → logprob: -4.9188103675842285
    4. 'sou' → logprob: -6.2938103675842285
    5. ' sou' → logprob: -8.043810844421387
    6. ' s' → logprob: -8.668810844421387
    7. '(s' → logprob: -8.918810844421387
    8. ' ' → logprob: -8.918810844421387
    9. '	s' → logprob: -9.668810844421387
    10. ' '' → logprob: -9.918810844421387

Token 46: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8624639324116288e-06
    2. ' _' → logprob: -13.750001907348633
    3. '__' → logprob: -16.250001907348633
    4. 's' → logprob: -16.375001907348633
    5. '‌' → logprob: -16.500001907348633
    6. 'chaine' → logprob: -16.500001907348633
    7. '_s' → logprob: -16.625001907348633
    8. '_c' → logprob: -17.125001907348633
    9. '_ch' → logprob: -17.500001907348633
    10. '_

' → logprob: -18.000001907348633

Token 47: 'chaine' (ID: 68916)
  Prédit: 'chaine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.2816804349422455
    2. '_' → logprob: -1.4066804647445679
    3. ' chaine' → logprob: -8.4066801071167
    4. '_c' → logprob: -9.2816801071167
    5. '_ch' → logprob: -9.6566801071167
    6. '   ' → logprob: -10.1566801071167
    7. '_chain' → logprob: -10.4066801071167
    8. 'cha' → logprob: -10.7816801071167
    9. '-' → logprob: -10.9066801071167
    10. '```' → logprob: -11.7816801071167

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004979863297194242
    2. ':
' → logprob: -7.750497817993164
    3. ' :' → logprob: -10.375497817993164
    4. '):' → logprob: -10.875497817993164
    5. '           ' → logprob: -11.875497817993164
    6. ':return' → logprob: -12.125497817993164
    7. '               ' → logprob: -13.250497817993164
    8. ' and' → logprob: -14.375497817993164
    9. '#:' → logprob: -15.000497817993164
    10. ':
' → logprob: -15.500497817993164

Token 49: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17670436203479767
    2. '               ' → logprob: -1.9267044067382812
    3. '           ' → logprob: -5.176704406738281
    4. ':
' → logprob: -5.176704406738281
    5. ' :' → logprob: -5.801704406738281
    6. ':return' → logprob: -7.676704406738281
    7. '<|end|>' → logprob: -7.926704406738281
    8. '            ' → logprob: -8.551704406738281
    9. '                ' → logprob: -8.801704406738281
    10. '\n' → logprob: -8.926704406738281

Token 50: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.28745830059051514
    2. '               ' → logprob: -1.6624583005905151
    3. '                   ' → logprob: -3.0374584197998047
    4. ' result' → logprob: -4.787458419799805
    5. '           ' → logprob: -6.662458419799805
    6. ' resultat' → logprob: -6.787458419799805
    7. '
' → logprob: -8.162458419799805
    8. '                    
' → logprob: -8.412458419799805
    9. '                ' → logprob: -8.787458419799805
    10. '                
' → logprob: -9.162458419799805

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0715472474694252
    2. '+=' → logprob: -2.696547269821167
    3. '+' → logprob: -6.446547031402588
    4. '<|end|>' → logprob: -11.946547508239746
    5. '=' → logprob: -12.196547508239746
    6. ' +' → logprob: -12.446547508239746
    7. ' =' → logprob: -13.071547508239746
    8. ' ' → logprob: -13.196547508239746
    9. ']+=' → logprob: -13.571547508239746
    10. '+="' → logprob: -14.321547508239746

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602257490158081
    2. ' ' → logprob: -1.910225749015808
    3. ' ' → logprob: -13.660225868225098
    4. '+' → logprob: -16.41022491455078
    5. '   ' → logprob: -16.47272491455078
    6. ' +' → logprob: -17.09772491455078
    7. '  ' → logprob: -18.03522491455078
    8. '```' → logprob: -18.09772491455078
    9. '2' → logprob: -18.22272491455078
    10. '           ' → logprob: -18.28522491455078

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.12502670288086
    4. 'len' → logprob: -18.62502670288086
    5. '```' → logprob: -19.06252670288086
    6. '+' → logprob: -19.25002670288086
    7. ' ' → logprob: -19.93752670288086
    8. '  ' → logprob: -20.00002670288086
    9. '2' → logprob: -20.06252670288086
    10. '0' → logprob: -20.12502670288086

Token 54: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01421099342405796
    2. '                ' → logprob: -5.514211177825928
    3. '           ' → logprob: -5.639211177825928
    4. '                
' → logprob: -5.889211177825928
    5. '
' → logprob: -7.014211177825928
    6. '              ' → logprob: -7.264211177825928
    7. 'i' → logprob: -7.389211177825928
    8. '            
' → logprob: -7.639211177825928
    9. '                   ' → logprob: -8.13921070098877
    10. ' 
' → logprob: -9.13921070098877

Token 55: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013306350447237492
    2. '           ' → logprob: -5.513306140899658
    3. '                ' → logprob: -5.763306140899658
    4. '                
' → logprob: -6.263306140899658
    5. 'i' → logprob: -6.388306140899658
    6. '              ' → logprob: -6.888306140899658
    7. '            
' → logprob: -7.513306140899658
    8. '            ' → logprob: -8.638306617736816
    9. ' i' → logprob: -8.888306617736816
    10. '               
' → logprob: -9.388306617736816

Token 56: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05921493470668793
    2. ' i' → logprob: -3.3092148303985596
    3. '           ' → logprob: -4.434215068817139
    4. 'i' (adapté à ' i') → logprob: -4.809215068817139
    5. '   ' → logprob: -8.05921459197998
    6. '                
' → logprob: -9.05921459197998
    7. '                   ' → logprob: -9.55921459197998
    8. '            ' → logprob: -9.55921459197998
    9. '            
' → logprob: -9.80921459197998
    10. '       ' → logprob: -9.93421459197998

Token 57: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06439143419265747
    2. '+' → logprob: -2.9393913745880127
    3. '+=' → logprob: -4.814391613006592
    4. ' +' → logprob: -6.689391613006592
    5. ' ' → logprob: -9.814391136169434
    6. '++' → logprob: -10.814391136169434
    7. '<|end|>' → logprob: -10.939391136169434
    8. '=' → logprob: -11.939391136169434
    9. ' =' → logprob: -12.689391136169434
    10. ' ++' → logprob: -13.314391136169434

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004764041863381863
    2. ' ' → logprob: -5.754764080047607
    3. 'len' → logprob: -6.504764080047607
    4. ' len' → logprob: -9.37976360321045
    5. 'max' → logprob: -13.94226360321045
    6. '(len' → logprob: -14.50476360321045
    7. '   ' → logprob: -14.50476360321045
    8. '```' → logprob: -14.62976360321045
    9. '0' → logprob: -15.50476360321045
    10. '	len' → logprob: -15.56726360321045

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036168331280350685
    2. 'len' → logprob: -8.000361442565918
    3. ' ' → logprob: -10.625361442565918
    4. ' len' → logprob: -14.375361442565918
    5. '   ' → logprob: -15.375361442565918
    6. '```' → logprob: -15.375361442565918
    7. '0' → logprob: -15.562861442565918
    8. 'max' → logprob: -15.687861442565918
    9. '(len' → logprob: -16.312862396240234
    10. '2' → logprob: -16.750362396240234

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.503283679485321
    2. '
' → logprob: -1.8782837390899658
    3. ' 
' → logprob: -2.003283739089966
    4. '<|end|>' → logprob: -2.628283739089966
    5. ' ' → logprob: -4.253283500671387
    6. 'return' → logprob: -5.628283500671387
    7. ' return' → logprob: -6.128283500671387
    8. '        
' → logprob: -6.128283500671387
    9. '   ' → logprob: -6.128283500671387
    10. '\n' → logprob: -6.253283500671387

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08365307003259659
    2. ' ' → logprob: -3.458652973175049
    3. '<|end|>' → logprob: -3.708652973175049
    4. '   ' → logprob: -4.708652973175049
    5. ' 
' → logprob: -5.833652973175049
    6. '
' → logprob: -5.958652973175049
    7. 'return' → logprob: -5.958652973175049
    8. '    ' → logprob: -6.458652973175049
    9. ' return' → logprob: -6.458652973175049
    10. '        ' → logprob: -7.083652973175049

Token 62: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2809546887874603
    2. '   ' → logprob: -2.155954599380493
    3. 'return' (adapté à ' return') → logprob: -2.655954599380493
    4. ' return' → logprob: -3.780954599380493
    5. '<|end|>' → logprob: -4.405954837799072
    6. ' ' → logprob: -4.530954837799072
    7. '	return' → logprob: -5.530954837799072
    8. ' 
' → logprob: -6.280954837799072
    9. '    ' → logprob: -6.405954837799072
    10. '        ' → logprob: -7.030954837799072

Token 63: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.005415419116616249
    2. ' resultat' → logprob: -5.255415439605713
    3. ' result' → logprob: -8.755414962768555
    4. ' résultat' → logprob: -11.130414962768555
    5. 'rés' → logprob: -12.505414962768555
    6. 'res' → logprob: -13.380414962768555
    7. '(result' → logprob: -13.880414962768555
    8. ' ' → logprob: -14.005414962768555
    9. ' ' → logprob: -15.005414962768555
    10. '	result' → logprob: -15.005414962768555

Token 64: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08916018903255463
    2. 'main' → logprob: -3.339160203933716
    3. 'return' → logprob: -4.089159965515137
    4. 'print' → logprob: -4.839159965515137
    5. 'comp' → logprob: -5.214159965515137
    6. 'result' → logprob: -5.464159965515137
    7. 's' → logprob: -5.589159965515137
    8. '    
' → logprob: -6.089159965515137
    9. 'count' → logprob: -6.339159965515137
    10. ' ' → logprob: -6.464159965515137

Token 67: ' Aff' (ID: 13741)
  Prédit: ' Comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Comp' → logprob: -0.028004810214042664
    2. ' Counter' → logprob: -3.7780048847198486
    3. 'Comp' → logprob: -6.1530046463012695
    4. ' ' → logprob: -7.1530046463012695
    5. ' My' → logprob: -8.02800464630127
    6. ' Count' → logprob: -8.52800464630127
    7. ' Trie' → logprob: -8.65300464630127
    8. ' Com' → logprob: -8.77800464630127
    9. 'Counter' → logprob: -8.90300464630127
    10. ' compteur' → logprob: -9.15300464630127

Token 68: 'iche' (ID: 7509)
  Prédit: 'ichage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.03587083891034126
    2. 'iche' → logprob: -3.4108707904815674
    3. 'ich' → logprob: -6.2858710289001465
    4. 'icher' → logprob: -8.285870552062988
    5. '   ' → logprob: -10.160870552062988
    6. '```' → logprob: -10.785870552062988
    7. 'ic' → logprob: -11.285870552062988
    8. '

' → logprob: -12.660870552062988
    9. '_' → logprob: -12.785870552062988
    10. '  ' → logprob: -12.910870552062988

Token 69: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.2835712134838104
    2. 'r' → logprob: -1.4085712432861328
    3. ':' → logprob: -7.033571243286133
    4. 'Aff' → logprob: -9.033571243286133
    5. '   ' → logprob: -9.283571243286133
    6. 'urs' → logprob: -9.658571243286133
    7. ' ' → logprob: -9.783571243286133
    8. 'Counter' → logprob: -9.783571243286133
    9. 'Printer' → logprob: -9.783571243286133
    10. ' :' → logprob: -9.908571243286133

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001472960808314383
    2. '(' → logprob: -7.0014729499816895
    3. ' :' → logprob: -7.6264729499816895
    4. '():' → logprob: -10.126473426818848
    5. ':
' → logprob: -11.126473426818848
    6. '(object' → logprob: -11.751473426818848
    7. '):' → logprob: -12.626473426818848
    8. '(":' → logprob: -13.626473426818848
    9. '(:' → logprob: -13.751473426818848
    10. '>:' → logprob: -13.876473426818848

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8675082325935364
    2. ' def' → logprob: -1.8675081729888916
    3. '<|end|>' → logprob: -1.8675081729888916
    4. '   ' → logprob: -2.4925081729888916
    5. '    ' → logprob: -2.7425081729888916
    6. ' ' → logprob: -2.7425081729888916
    7. '        
' → logprob: -3.6175081729888916
    8. '    
' → logprob: -4.742508411407471
    9. '<|end|>' → logprob: -4.867508411407471
    10. 'def' → logprob: -5.492508411407471

Token 72: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09044424444437027
    2. 'def' (adapté à ' def') → logprob: -2.715444326400757
    3. '   ' → logprob: -4.340444087982178
    4. '    ' → logprob: -5.340444087982178
    5. ' ' → logprob: -6.340444087982178
    6. ' de' → logprob: -8.090444564819336
    7. '       ' → logprob: -9.340444564819336
    8. ' d' → logprob: -9.715444564819336
    9. ' ' → logprob: -9.965444564819336
    10. 'de' → logprob: -10.215444564819336

Token 73: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0016993449535220861
    2. '__' → logprob: -7.376699447631836
    3. ' ' → logprob: -8.001699447631836
    4. ' ' → logprob: -8.251699447631836
    5. ' afficher' → logprob: -8.626699447631836
    6. ' _' → logprob: -8.876699447631836
    7. '_' → logprob: -9.251699447631836
    8. ' init' → logprob: -10.251699447631836
    9. '_init' → logprob: -11.876699447631836
    10. ' print' → logprob: -12.626699447631836

Token 74: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. ' init' → logprob: -15.375000953674316
    3. 'ini' → logprob: -15.625000953674316
    4. ' ' → logprob: -18.75
    5. 'inite' → logprob: -19.0
    6. 'in' → logprob: -19.125
    7. 'int' → logprob: -19.125
    8. 'call' → logprob: -19.25
    9. 'inti' → logprob: -20.0
    10. 'str' → logprob: -20.0

Token 75: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3763413429260254
    2. '__(' → logprob: -1.5013413429260254
    3. '(self' → logprob: -2.6263413429260254
    4. ' (' → logprob: -4.626341342926025
    5. '__' → logprob: -5.001341342926025
    6. '<|end|>' → logprob: -7.501341342926025
    7. '__(
' → logprob: -7.751341342926025
    8. '__((' → logprob: -8.626340866088867
    9. '```' → logprob: -9.126340866088867
    10. ' ' → logprob: -9.501340866088867

Token 76: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005310842767357826
    2. ' self' → logprob: -5.255311012268066
    3. 's' → logprob: -10.005311012268066
    4. ')' → logprob: -10.505311012268066
    5. ' ' → logprob: -13.755311012268066
    6. ',' → logprob: -14.630311012268066
    7. '   ' → logprob: -14.755311012268066
    8. '(self' → logprob: -14.755311012268066
    9. ')s' → logprob: -15.130311012268066
    10. 'chaine' → logprob: -15.130311012268066

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007208790630102158
    2. ' ,' → logprob: -5.007208824157715
    3. ',s' → logprob: -7.757208824157715
    4. ',self' → logprob: -10.132208824157715
    5. 'self' → logprob: -11.632208824157715
    6. '(self' → logprob: -12.507208824157715
    7. ' (' → logprob: -12.882208824157715
    8. '(' → logprob: -12.882208824157715
    9. '):' → logprob: -13.757208824157715
    10. ',(' → logprob: -13.882208824157715

Token 78: ' valeur' (ID: 41664)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -1.0356959104537964
    2. 'texte' → logprob: -1.4106959104537964
    3. 'message' → logprob: -1.7856959104537964
    4. ' message' → logprob: -2.285696029663086
    5. 's' → logprob: -3.035696029663086
    6. 'text' → logprob: -4.035696029663086
    7. ' texte' → logprob: -4.285696029663086
    8. ' chaine' → logprob: -4.410696029663086
    9. 'phrase' → logprob: -5.535696029663086
    10. ' text' → logprob: -5.535696029663086

Token 79: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001118903630413115
    2. ',' → logprob: -7.626119136810303
    3. ')' → logprob: -8.001118659973145
    4. '=' → logprob: -8.876118659973145
    5. '):
' → logprob: -9.126118659973145
    6. ':' → logprob: -11.126118659973145
    7. ' ):' → logprob: -11.251118659973145
    8. '=None' → logprob: -11.751118659973145
    9. '_' → logprob: -12.876118659973145
    10. '   ' → logprob: -13.126118659973145

Token 80: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.00871479231864214
    2. '.' → logprob: -4.75871467590332
    3. '.value' → logprob: -10.00871467590332
    4. '.v' → logprob: -11.00871467590332
    5. '._' → logprob: -11.13371467590332
    6. '.valor' → logprob: -11.75871467590332
    7. ' .' → logprob: -12.13371467590332
    8. '[val' → logprob: -13.25871467590332
    9. '.va' → logprob: -13.63371467590332
    10. 'val' → logprob: -13.63371467590332

Token 82: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.004898685030639172
    2. 'e' → logprob: -5.379898548126221
    3. 'eurs' → logprob: -9.254899024963379
    4. '=' → logprob: -10.254899024963379
    5. ' =' → logprob: -10.379899024963379
    6. 'uer' → logprob: -10.379899024963379
    7. '   ' → logprob: -10.629899024963379
    8. 'ueur' → logprob: -11.129899024963379
    9. 'ue' → logprob: -11.254899024963379
    10. 'eu' → logprob: -12.379899024963379

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022604703903198
    2. '=' → logprob: -1.9102261066436768
    3. '   ' → logprob: -13.785225868225098
    4. ' ' → logprob: -14.785225868225098
    5. '.' → logprob: -15.910225868225098
    6. '_' → logprob: -16.410226821899414
    7. '    ' → logprob: -16.660226821899414
    8. 's' → logprob: -17.035226821899414
    9. '  ' → logprob: -17.410226821899414
    10. ' =)' → logprob: -17.535226821899414

Token 84: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.07027929276227951
    2. ' valeur' → logprob: -2.695279359817505
    3. ' val' → logprob: -8.195279121398926
    4. ' ' → logprob: -10.195279121398926
    5. ' vale' → logprob: -11.195279121398926
    6. ' ' → logprob: -11.945279121398926
    7. '	val' → logprob: -12.445279121398926
    8. ' valeurs' → logprob: -13.320279121398926
    9. 'vale' → logprob: -14.070279121398926
    10. 'value' → logprob: -14.820279121398926

Token 85: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05639076605439186
    2. '<|end|>' → logprob: -2.9313907623291016
    3. ' 
' → logprob: -7.181390762329102
    4. '

' → logprob: -8.181390762329102
    5. '<|end|>' → logprob: -9.056390762329102
    6. '
        
' → logprob: -9.556390762329102
    7. ' ' → logprob: -10.056390762329102
    8. '  
' → logprob: -10.181390762329102
    9. '' → logprob: -10.431390762329102
    10. '    
' → logprob: -10.431390762329102

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009308217093348503
    2. '<|end|>' → logprob: -4.759308338165283
    3. ' 
' → logprob: -8.259307861328125
    4. '

' → logprob: -8.884307861328125
    5. '    
' → logprob: -9.884307861328125
    6. '<|end|>' → logprob: -10.009307861328125
    7. '  
' → logprob: -10.134307861328125
    8. '   ' → logprob: -10.634307861328125
    9. '
        
' → logprob: -10.634307861328125
    10. '       ' → logprob: -10.759307861328125

Token 87: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01968209072947502
    2. '<|end|>' → logprob: -4.144681930541992
    3. 'def' (adapté à ' def') → logprob: -6.894681930541992
    4. ' def' → logprob: -7.144681930541992
    5. ' 
' → logprob: -7.269681930541992
    6. '    
' → logprob: -8.144681930541992
    7. '<|end|>' → logprob: -8.144681930541992
    8. '        
' → logprob: -8.769681930541992
    9. '       ' → logprob: -9.144681930541992
    10. '   ' → logprob: -9.394681930541992

Token 88: ' show' (ID: 2356)
  Prédit: ' afficher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' afficher' → logprob: -0.14339065551757812
    2. ' __' → logprob: -2.268390655517578
    3. 'aff' → logprob: -4.518390655517578
    4. '__' → logprob: -5.018390655517578
    5. ' affiche' → logprob: -5.143390655517578
    6. ' affich' → logprob: -6.143390655517578
    7. ' display' → logprob: -6.143390655517578
    8. ' ' → logprob: -6.893390655517578
    9. ' aff' → logprob: -7.393390655517578
    10. ' ' → logprob: -8.018390655517578

Token 89: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9194796085357666
    2. '(self' → logprob: -0.9194796085357666
    3. '():' → logprob: -1.6694796085357666
    4. '(' → logprob: -4.2944793701171875
    5. ' ()' → logprob: -8.044479370117188
    6. '(s' → logprob: -9.419479370117188
    7. '()(' → logprob: -10.169479370117188
    8. 'self' → logprob: -10.544479370117188
    9. ' (' → logprob: -11.294479370117188
    10. '():
' → logprob: -11.419479370117188

Token 90: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009444386698305607
    2. ')' → logprob: -5.134444236755371
    3. '():' → logprob: -6.134444236755371
    4. '):
' → logprob: -7.134444236755371
    5. ' ):' → logprob: -8.384444236755371
    6. '()' → logprob: -8.884444236755371
    7. '(' → logprob: -10.134444236755371
    8. ':' → logprob: -10.384444236755371
    9. '   ' → logprob: -10.759444236755371
    10. ',' → logprob: -10.759444236755371

Token 91: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.13820591568946838
    2. 'print' → logprob: -2.7632060050964355
    3. '       ' → logprob: -2.8882060050964355
    4. '           ' → logprob: -4.6382060050964355
    5. ' return' → logprob: -7.8882060050964355
    6. '        ' → logprob: -9.638205528259277
    7. '   ' → logprob: -9.888205528259277
    8. ' pass' → logprob: -10.013205528259277
    9. '    ' → logprob: -11.138205528259277
    10. '        
' → logprob: -11.388205528259277

Token 92: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020786171779036522
    2. '(self' → logprob: -3.8957862854003906
    3. '(f' → logprob: -8.52078628540039
    4. '(
' → logprob: -11.39578628540039
    5. '('' → logprob: -11.64578628540039
    6. '(s' → logprob: -12.02078628540039
    7. '()' → logprob: -12.14578628540039
    8. ' (' → logprob: -12.39578628540039
    9. '((' → logprob: -13.14578628540039
    10. '("("' → logprob: -13.14578628540039

Token 93: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -11.125020027160645
    3. ' .' → logprob: -12.375020027160645
    4. 'val' → logprob: -15.125020027160645
    5. '.valor' → logprob: -16.250019073486328
    6. '.v' → logprob: -16.875019073486328
    7. ').' → logprob: -17.375019073486328
    8. '(val' → logprob: -17.500019073486328
    9. ',val' → logprob: -17.625019073486328
    10. '.value' → logprob: -17.625019073486328

Token 94: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -1.4021237802808173e-05
    2. 'e' → logprob: -11.500014305114746
    3. 'eurs' → logprob: -13.375014305114746
    4. 'ueur' → logprob: -13.500014305114746
    5. 'uer' → logprob: -14.750014305114746
    6. 'leur' → logprob: -15.000014305114746
    7. 'eu' → logprob: -16.50001335144043
    8. 'EUR' → logprob: -16.75001335144043
    9. 'er' → logprob: -17.25001335144043
    10. ' eur' → logprob: -17.37501335144043

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ' )' → logprob: -12.125014305114746
    3. ')
' → logprob: -12.500014305114746
    4. '()' → logprob: -13.000014305114746
    5. '   ' → logprob: -14.000014305114746
    6. '       ' → logprob: -14.250014305114746
    7. '')' → logprob: -14.500014305114746
    8. '())' → logprob: -15.500014305114746
    9. '")' → logprob: -15.875014305114746
    10. '`)' → logprob: -15.875014305114746

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11829711496829987
    2. '
' → logprob: -2.4932971000671387
    3. '    
' → logprob: -4.243297100067139
    4. '<|end|>' → logprob: -4.618297100067139
    5. 'a' → logprob: -6.618297100067139
    6. 'main' → logprob: -7.618297100067139
    7. '        
' → logprob: -7.743297100067139
    8. '  
' → logprob: -7.743297100067139
    9. ' 
' → logprob: -8.118297576904297
    10. 'def' → logprob: -8.243297576904297

Token 97: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08447428047657013
    2. '    
' → logprob: -2.9594743251800537
    3. '
' → logprob: -4.834474086761475
    4. 'a' → logprob: -5.584474086761475
    5. ' 
' → logprob: -6.209474086761475
    6. 's' → logprob: -6.334474086761475
    7. 'def' → logprob: -6.584474086761475
    8. 'main' → logprob: -6.584474086761475
    9. ' compteur' → logprob: -6.709474086761475
    10. '  
' → logprob: -6.959474086761475

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06504901498556137
    2. '=' → logprob: -2.940048933029175
    3. 'a' → logprob: -5.690049171447754
    4. ' ' → logprob: -5.940049171447754
    5. 'ame' → logprob: -6.940049171447754
    6. '   ' → logprob: -7.315049171447754
    7. '_' → logprob: -7.940049171447754
    8. 'um' → logprob: -7.940049171447754
    9. 'ombre' → logprob: -8.065049171447754
    10. 'b' → logprob: -8.190049171447754

Token 99: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.39331185817718506
    2. ' input' → logprob: -1.393311858177185
    3. ' ' → logprob: -2.8933119773864746
    4. 'input' → logprob: -4.768311977386475
    5. 'int' → logprob: -5.268311977386475
    6. ' "' → logprob: -5.768311977386475
    7. '10' → logprob: -6.518311977386475
    8. ' compteur' → logprob: -7.768311977386475
    9. ' len' → logprob: -7.893311977386475
    10. '5' → logprob: -7.893311977386475

Token 100: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023441045777872205
    2. '(input' → logprob: -8.750234603881836
    3. '('' → logprob: -9.875234603881836
    4. '(
' → logprob: -11.750234603881836
    5. '<|end|>' → logprob: -11.750234603881836
    6. ' (' → logprob: -12.750234603881836
    7. '()' → logprob: -13.250234603881836
    8. 'input' → logprob: -13.875234603881836
    9. '("' → logprob: -14.500234603881836
    10. ' ' → logprob: -15.000234603881836

Token 101: '())' (ID: 3516)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0810697078704834
    2. '())' → logprob: -3.2060697078704834
    3. '(' → logprob: -3.4560697078704834
    4. '("("' → logprob: -6.0810699462890625
    5. '("' → logprob: -6.2060699462890625
    6. '('' → logprob: -7.3310699462890625
    7. '(">' → logprob: -8.331069946289062
    8. '()>' → logprob: -8.581069946289062
    9. '("")' → logprob: -8.831069946289062
    10. '()">' → logprob: -9.956069946289062

Token 102: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4412217438220978
    2. ' n' → logprob: -1.4412217140197754
    3. '<|end|>' → logprob: -2.5662217140197754
    4. ' for' → logprob: -4.066221714019775
    5. ' 
' → logprob: -4.816221714019775
    6. 'n' → logprob: -4.816221714019775
    7. ' s' → logprob: -5.941221714019775
    8. '
' → logprob: -6.691221714019775
    9. '<|end|>' → logprob: -6.816221714019775
    10. ' if' → logprob: -7.691221714019775

Token 104: ' inutil' (ID: 154055)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'isée' (ID: 59331)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' bon' (ID: 4846)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7233259081840515
    2. 'm' → logprob: -1.8483259677886963
    3. ' s' → logprob: -1.9733259677886963
    4. ' m' → logprob: -2.4733259677886963
    5. '_' → logprob: -3.7233259677886963
    6. 'n' → logprob: -4.098325729370117
    7. ' n' → logprob: -4.223325729370117
    8. 'chaine' → logprob: -4.348325729370117
    9. ' _' → logprob: -4.973325729370117
    10. 't' → logprob: -5.348325729370117

Token 108: ' pour' (ID: 1930)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.2529086768627167
    2. 'nement' → logprob: -2.752908706665039
    3. 'soir' → logprob: -3.377908706665039
    4. 'jours' → logprob: -4.127908706665039
    5. 'jou' → logprob: -4.127908706665039
    6. 'e' → logprob: -4.377908706665039
    7. 'nes' → logprob: -4.877908706665039
    8. '```' → logprob: -5.127908706665039
    9. 'jourd' → logprob: -5.252908706665039
    10. 'c' → logprob: -5.252908706665039

Token 109: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9038159251213074
    2. 'maint' → logprob: -2.028815984725952
    3. ' la' → logprob: -2.528815984725952
    4. 'le' → logprob: -2.528815984725952
    5. 'l' → logprob: -2.653815984725952
    6. ' now' → logprob: -2.903815984725952
    7. '_' → logprob: -3.278815984725952
    8. ' le' → logprob: -4.028815746307373
    9. 'now' → logprob: -4.153815746307373
    10. 'compat' → logprob: -4.528815746307373

Token 110: ' style' (ID: 2713)
  Prédit: 'test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'test' → logprob: -1.3005129098892212
    2. 'debug' → logprob: -1.8005129098892212
    3. 'tests' → logprob: -2.1755127906799316
    4. 'maint' → logprob: -2.6755127906799316
    5. 'dé' → logprob: -2.9255127906799316
    6. 'pro' → logprob: -3.0505127906799316
    7. 's' → logprob: -3.5505127906799316
    8. 'input' → logprob: -3.9255127906799316
    9. 'stdin' → logprob: -3.9255127906799316
    10. 'code' → logprob: -4.175512790679932

Token 111: ' functional' (ID: 20483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '...
' (ID: 4908)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3009704351425171
    2. '   ' → logprob: -2.5509705543518066
    3. ' 
' → logprob: -3.1759705543518066
    4. '    
' → logprob: -3.3009705543518066
    5. '<|end|>' → logprob: -3.8009705543518066
    6. 'n' → logprob: -3.9259705543518066
    7. 's' → logprob: -3.9259705543518066
    8. '  
' → logprob: -3.9259705543518066
    9. ' n' → logprob: -4.925970554351807
    10. '\n' → logprob: -5.925970554351807

Token 113: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.360611081123352
    2. ' ' → logprob: -1.360611081123352
    3. 's' → logprob: -1.610611081123352
    4. ' 
' → logprob: -2.2356109619140625
    5. ' n' → logprob: -3.6106109619140625
    6. '\n' → logprob: -3.6106109619140625
    7. '
' → logprob: -3.8606109619140625
    8. '   ' → logprob: -3.9856109619140625
    9. '  
' → logprob: -4.3606109619140625
    10. '<|end|>' → logprob: -4.3606109619140625

Token 114: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.628461480140686
    2. 'chaine' → logprob: -1.378461480140686
    3. 'texte' → logprob: -2.1284613609313965
    4. 'mot' → logprob: -4.2534613609313965
    5. '   ' → logprob: -4.3784613609313965
    6. 'text' → logprob: -4.5034613609313965
    7. 'a' → logprob: -4.6284613609313965
    8. 'phrase' → logprob: -4.8784613609313965
    9. 'for' → logprob: -5.1284613609313965
    10. 'm' → logprob: -5.6284613609313965

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010895726270973682
    2. '=' → logprob: -4.635895729064941
    3. '=input' → logprob: -7.385895729064941
    4. 'tring' → logprob: -8.510895729064941
    5. '1' → logprob: -9.010895729064941
    6. 'tr' → logprob: -9.135895729064941
    7. 's' → logprob: -11.260895729064941
    8. 'TR' → logprob: -11.510895729064941
    9. 'A' → logprob: -11.760895729064941
    10. '_' → logprob: -11.885895729064941

Token 116: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31346622109413147
    2. 'input' → logprob: -1.313466191291809
    3. ' ' → logprob: -9.68846607208252
    4. 'str' → logprob: -10.06346607208252
    5. ' str' → logprob: -10.31346607208252
    6. '"' → logprob: -11.43846607208252
    7. ' "' → logprob: -11.56346607208252
    8. '(input' → logprob: -11.81346607208252
    9. '	input' → logprob: -12.25096607208252
    10. '=input' → logprob: -12.37596607208252

Token 117: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8074162653647363e-05
    2. '())' → logprob: -11.875018119812012
    3. '(' → logprob: -12.375018119812012
    4. '()>' → logprob: -13.375018119812012
    5. '()`' → logprob: -13.750018119812012
    6. ' ()' → logprob: -13.875018119812012
    7. '().' → logprob: -14.000018119812012
    8. '()
' → logprob: -14.250018119812012
    9. '()]' → logprob: -15.000018119812012
    10. '()

' → logprob: -15.250018119812012

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021825255826115608
    2. '    
' → logprob: -5.271825313568115
    3. 's' → logprob: -5.521825313568115
    4. 'a' → logprob: -6.521825313568115
    5. 'count' → logprob: -6.521825313568115
    6. 'n' → logprob: -6.646825313568115
    7. 'i' → logprob: -6.646825313568115
    8. 'result' → logprob: -6.896825313568115
    9. ' compteur' → logprob: -7.396825313568115
    10. '
' → logprob: -7.521825313568115

Token 119: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7009198665618896
    2. 'print' → logprob: -1.9509198665618896
    3. 'result' → logprob: -2.0759198665618896
    4. 'comp' → logprob: -2.2009198665618896
    5. 'res' → logprob: -2.9509198665618896
    6. 'm' → logprob: -3.2009198665618896
    7. 's' → logprob: -3.3259198665618896
    8. 'aff' → logprob: -3.4509198665618896
    9. 'a' → logprob: -3.5759198665618896
    10. 'count' → logprob: -3.5759198665618896

Token 120: ' mélange' (ID: 80391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.466902494430542
    2. ' for' → logprob: -2.216902494430542
    3. 'result' → logprob: -2.466902494430542
    4. ' res' → logprob: -2.591902494430542
    5. 'res' → logprob: -2.716902494430542
    6. 'comp' → logprob: -2.716902494430542
    7. 'print' → logprob: -3.341902494430542
    8. 'count' → logprob: -3.466902494430542
    9. 'i' → logprob: -3.716902494430542
    10. 'c' → logprob: -3.716902494430542

Token 121: ' avec' (ID: 3937)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.1947071552276611
    2. 's' → logprob: -1.6947071552276611
    3. ' =' → logprob: -1.8197071552276611
    4. 'import' → logprob: -2.569707155227661
    5. ' S' → logprob: -2.569707155227661
    6. 'from' → logprob: -3.694707155227661
    7. 'r' → logprob: -3.694707155227661
    8. ' from' → logprob: -3.944707155227661
    9. 'result' → logprob: -4.069706916809082
    10. 'd' → logprob: -4.194706916809082

Token 122: ' map' (ID: 4014)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -1.5729392766952515
    2. ' sorted' → logprob: -1.9479392766952515
    3. 'S' → logprob: -2.197939395904541
    4. ' itertools' → logprob: -2.447939395904541
    5. 'len' → logprob: -2.697939395904541
    6. 'sorted' → logprob: -2.822939395904541
    7. 'Aff' → logprob: -3.322939395904541
    8. ' len' → logprob: -3.697939395904541
    9. ' compteur' → logprob: -3.947939395904541
    10. 's' → logprob: -4.072939395904541

Token 123: '/l' (ID: 16347)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4244648218154907
    2. 'result' → logprob: -1.9244648218154907
    3. 'print' → logprob: -2.799464702606201
    4. ' result' → logprob: -3.799464702606201
    5. '(' → logprob: -3.924464702606201
    6. ' print' → logprob: -4.049464702606201
    7. ',' → logprob: -4.049464702606201
    8. 's' → logprob: -4.549464702606201
    9. ' for' → logprob: -5.299464702606201
    10. 'def' → logprob: -5.299464702606201

Token 124: 'ambda' (ID: 12104)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.06261195242404938
    2. 'ambda' → logprob: -4.187612056732178
    3. 'st' → logprob: -4.562612056732178
    4. ')' → logprob: -5.187612056732178
    5. 's' → logprob: -5.187612056732178
    6. 'iste' → logprob: -5.312612056732178
    7. 'i' → logprob: -6.187612056732178
    8. 'ine' → logprob: -6.312612056732178
    9. 'e' → logprob: -6.562612056732178
    10. '   ' → logprob: -6.687612056732178

Token 125: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8923190236091614
    2. 'print' → logprob: -1.5173189640045166
    3. 'result' → logprob: -1.8923189640045166
    4. ' print' → logprob: -2.3923189640045166
    5. ' result' → logprob: -3.6423189640045166
    6. 'res' → logprob: -3.7673189640045166
    7. ' res' → logprob: -4.142319202423096
    8. 'count' → logprob: -4.767319202423096
    9. '    
' → logprob: -5.267319202423096
    10. 'm' → logprob: -5.267319202423096

Token 126: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46134763956069946
    2. ' res' → logprob: -2.2113475799560547
    3. ' result' → logprob: -3.0863475799560547
    4. ' print' → logprob: -3.4613475799560547
    5. ' compteur' → logprob: -3.8363475799560547
    6. 'result' → logprob: -3.9613475799560547
    7. ' resultat' → logprob: -4.086347579956055
    8. ' L' → logprob: -4.086347579956055
    9. 'res' → logprob: -4.461347579956055
    10. ' parts' → logprob: -4.711347579956055

Token 127: ' utilise' (ID: 70283)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5569767951965332
    2. ' pas' → logprob: -1.4319767951965332
    3. 'not' → logprob: -2.681976795196533
    4. ' True' → logprob: -3.306976795196533
    5. 'pas' → logprob: -4.431976795196533
    6. '#' → logprob: -4.681976795196533
    7. 'print' → logprob: -4.806976795196533
    8. 'len' → logprob: -4.931976795196533
    9. ' on' → logprob: -5.056976795196533
    10. ' S' → logprob: -5.306976795196533

Token 128: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.8441005349159241
    2. ' list' → logprob: -1.7191004753112793
    3. ' map' → logprob: -1.7191004753112793
    4. ' filter' → logprob: -2.9691004753112793
    5. ' une' → logprob: -3.5941004753112793
    6. 'map' → logprob: -4.344100475311279
    7. ' print' → logprob: -4.594100475311279
    8. ' la' → logprob: -4.719100475311279
    9. ' filtre' → logprob: -4.719100475311279
    10. ' un' → logprob: -4.844100475311279

Token 129: ' (=' (ID: 72569)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5264279246330261
    2. '   ' → logprob: -1.526427984237671
    3. 'print' → logprob: -3.276427984237671
    4. ' result' → logprob: -3.901427984237671
    5. 'count' → logprob: -3.901427984237671
    6. 'res' → logprob: -3.901427984237671
    7. '    
' → logprob: -4.401427745819092
    8. 'def' → logprob: -4.651427745819092
    9. 's' → logprob: -4.776427745819092
    10. ' 
' → logprob: -4.901427745819092

Token 130: ' imp' (ID: 3282)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.25200340151786804
    2. 's' → logprob: -3.3770034313201904
    3. 'len' → logprob: -3.5020034313201904
    4. ' lambda' → logprob: -3.7520034313201904
    5. 'S' → logprob: -3.8770034313201904
    6. 'fonction' → logprob: -4.002003192901611
    7. 'comp' → logprob: -4.127003192901611
    8. '(lambda' → logprob: -4.627003192901611
    9. 'def' → logprob: -4.877003192901611
    10. 'not' → logprob: -5.002003192901611

Token 131: ' imp' (ID: 3282)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ur' → logprob: -1.170188307762146
    2. 'ér' → logprob: -1.420188307762146
    3. 'ure' → logprob: -1.670188307762146
    4. 'ort' → logprob: -2.4201884269714355
    5. 'er' → logprob: -3.2951884269714355
    6. '```' → logprob: -3.4201884269714355
    7. 'lic' → logprob: -3.7951884269714355
    8. 'licit' → logprob: -3.9201884269714355
    9. 'uré' → logprob: -5.0451884269714355
    10. 'é' → logprob: -5.4201884269714355

Token 132: ')
' (ID: 446)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.004297776613384485
    2. ')' → logprob: -6.129297733306885
    3. '```' → logprob: -8.379298210144043
    4. 'orts' → logprob: -8.629298210144043
    5. 'licit' → logprob: -8.754298210144043
    6. '")' → logprob: -8.879298210144043
    7. 'oss' → logprob: -9.379298210144043
    8. 'orted' → logprob: -9.379298210144043
    9. 'ict' → logprob: -9.504298210144043
    10. '`)' → logprob: -9.504298210144043

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1797870397567749
    2. 'result' → logprob: -2.9297871589660645
    3. ' print' → logprob: -3.9297871589660645
    4. ' result' → logprob: -3.9297871589660645
    5. 'print' → logprob: -4.1797871589660645
    6. '    
' → logprob: -4.4297871589660645
    7. 'res' → logprob: -4.8047871589660645
    8. ' res' → logprob: -4.8047871589660645
    9. ')' → logprob: -4.9297871589660645
    10. 'count' → logprob: -5.6797871589660645

Token 134: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5304723978042603
    2. ' print' → logprob: -1.6554723978042603
    3. 'result' → logprob: -1.7804723978042603
    4. ' res' → logprob: -2.2804722785949707
    5. '   ' → logprob: -2.4054722785949707
    6. 'res' → logprob: -2.5304722785949707
    7. ' result' → logprob: -3.1554722785949707
    8. ' resultat' → logprob: -4.030472278594971
    9. 'count' → logprob: -4.655472278594971
    10. ' for' → logprob: -5.155472278594971

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2097174972295761
    2. 's' → logprob: -1.8347175121307373
    3. '_occ' → logprob: -4.959717273712158
    4. '_' → logprob: -5.084717273712158
    5. '_de' → logprob: -5.334717273712158
    6. '_oc' → logprob: -5.459717273712158
    7. '=' → logprob: -5.959717273712158
    8. '_s' → logprob: -6.459717273712158
    9. ' ' → logprob: -7.084717273712158
    10. '_m' → logprob: -7.334717273712158

Token 136: ' (' (ID: 350)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.416648507118225
    2. ' sum' → logprob: -1.541648507118225
    3. 'sum' → logprob: -1.666648507118225
    4. ' list' → logprob: -2.1666483879089355
    5. 'map' → logprob: -2.7916483879089355
    6. ' map' → logprob: -2.9166483879089355
    7. 'list' → logprob: -2.9166483879089355
    8. ' compteur' → logprob: -2.9166483879089355
    9. ' comp' → logprob: -5.0416483879089355
    10. '   ' → logprob: -6.0416483879089355

Token 137: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7528094053268433
    2. 'list' → logprob: -1.2528094053268433
    3. 'comp' → logprob: -2.252809524536133
    4. 'map' → logprob: -2.627809524536133
    5. 'sum' → logprob: -3.252809524536133
    6. ' lambda' → logprob: -4.752809524536133
    7. 'len' → logprob: -5.127809524536133
    8. ' list' → logprob: -5.377809524536133
    9. ' compteur' → logprob: -6.252809524536133
    10. '(lambda' → logprob: -7.002809524536133

Token 138: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5552482604980469
    2. ' s' → logprob: -1.3052482604980469
    3. 'x' → logprob: -2.805248260498047
    4. 's' → logprob: -2.805248260498047
    5. ' sous' → logprob: -4.555248260498047
    6. ' S' → logprob: -4.805248260498047
    7. 'S' → logprob: -6.305248260498047
    8. ' chaine' → logprob: -6.305248260498047
    9. ' a' → logprob: -7.055248260498047
    10. ' ' → logprob: -7.180248260498047

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032984360586851835
    2. ' :' → logprob: -6.378298282623291
    3. ',' → logprob: -7.253298282623291
    4. 's' → logprob: -7.878298282623291
    5. ':S' → logprob: -8.62829875946045
    6. ':s' → logprob: -8.87829875946045
    7. 'x' → logprob: -9.75329875946045
    8. 'S' → logprob: -10.12829875946045
    9. ':x' → logprob: -10.25329875946045
    10. 'y' → logprob: -11.62829875946045

Token 140: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.4293752610683441
    2. ' compteur' → logprob: -1.0543752908706665
    3. 'counter' → logprob: -8.804375648498535
    4. '(comp' → logprob: -8.804375648498535
    5. 'count' → logprob: -8.929375648498535
    6. ' compte' → logprob: -10.054375648498535
    7. 'sum' → logprob: -10.304375648498535
    8. '[' → logprob: -10.554375648498535
    9. 'print' → logprob: -10.929375648498535
    10. 'aff' → logprob: -11.054375648498535

Token 141: '('' (ID: 706)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.29284340143203735
    2. '('' → logprob: -1.7928433418273926
    3. '(x' → logprob: -3.1678433418273926
    4. '("' → logprob: -4.167843341827393
    5. '(s' → logprob: -4.292843341827393
    6. '(' → logprob: -4.667843341827393
    7. ')' → logprob: -5.167843341827393
    8. ')(' → logprob: -7.792843341827393
    9. '(('' → logprob: -8.79284381866455
    10. '(
' → logprob: -9.41784381866455

Token 142: 'ABC' (ID: 44197)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3901524841785431
    2. 'ab' → logprob: -3.1401524543762207
    3. 'x' → logprob: -3.1401524543762207
    4. 'A' → logprob: -3.2651524543762207
    5. 'S' → logprob: -3.5151524543762207
    6. ''' → logprob: -4.140152454376221
    7. 'aa' → logprob: -4.140152454376221
    8. '01' → logprob: -4.390152454376221
    9. 'abc' → logprob: -4.577652454376221
    10. '0' → logprob: -4.702652454376221

Token 143: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0008843107498250902
    2. ''' → logprob: -7.750884532928467
    3. 'ABC' → logprob: -8.875884056091309
    4. 'A' → logprob: -9.250884056091309
    5. 'D' → logprob: -9.875884056091309
    6. 'B' → logprob: -10.125884056091309
    7. '",' → logprob: -10.750884056091309
    8. 'AB' → logprob: -11.375884056091309
    9. '',
' → logprob: -11.375884056091309
    10. 'C' → logprob: -11.375884056091309

Token 144: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.041132036596536636
    2. ' x' → logprob: -3.5411319732666016
    3. 'S' → logprob: -4.541131973266602
    4. ' S' → logprob: -7.416131973266602
    5. ')' → logprob: -10.666131973266602
    6. '(x' → logprob: -11.666131973266602
    7. ' ' → logprob: -11.791131973266602
    8. '   ' → logprob: -12.541131973266602
    9. ')x' → logprob: -13.291131973266602
    10. 's' → logprob: -14.041131973266602

Token 145: '))(' (ID: 72297)
  Prédit: '))('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))(' → logprob: -0.25161880254745483
    2. ')(' → logprob: -2.2516188621520996
    3. ')' → logprob: -2.3766188621520996
    4. '))' → logprob: -4.0016188621521
    5. '(S' → logprob: -5.2516188621521
    6. 'S' → logprob: -7.5016188621521
    7. ')+' → logprob: -10.126618385314941
    8. ')
' → logprob: -10.626618385314941
    9. ')))' → logprob: -10.751618385314941
    10. ' ))' → logprob: -10.751618385314941

Token 146: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.001171652227640152
    2. ' S' → logprob: -6.751171588897705
    3. ')' → logprob: -14.376172065734863
    4. '(S' → logprob: -15.001172065734863
    5. ' ' → logprob: -15.251172065734863
    6. '   ' → logprob: -15.376172065734863
    7. ''S' → logprob: -17.876171112060547
    8. '  ' → logprob: -18.001171112060547
    9. 's' → logprob: -18.126171112060547
    10. '	S' → logprob: -19.001171112060547

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ' )' → logprob: -11.500017166137695
    3. '))' → logprob: -12.000017166137695
    4. ')
' → logprob: -15.500017166137695
    5. ')))' → logprob: -15.625017166137695
    6. '[' → logprob: -16.750017166137695
    7. ')

' → logprob: -17.500017166137695
    8. ')#' → logprob: -17.500017166137695
    9. ')`' → logprob: -17.625017166137695
    10. '   ' → logprob: -17.875017166137695

Token 148: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1383734792470932
    2. '   ' → logprob: -2.513373374938965
    3. '<|end|>' → logprob: -3.763373374938965
    4. ')' → logprob: -4.513373374938965
    5. '    
' → logprob: -5.263373374938965
    6. 'print' → logprob: -5.513373374938965
    7. '  
' → logprob: -6.513373374938965
    8. '\n' → logprob: -7.138373374938965
    9. ' 
' → logprob: -7.638373374938965
    10. '#' → logprob: -7.763373374938965

Token 149: ' Aff' (ID: 13741)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5988998413085938
    2. '   ' → logprob: -1.3488998413085938
    3. 'print' → logprob: -2.4738998413085938
    4. '    
' → logprob: -3.2238998413085938
    5. '<|end|>' → logprob: -4.348899841308594
    6. ' Aff' → logprob: -4.723899841308594
    7. ')' → logprob: -4.973899841308594
    8. ' 
' → logprob: -5.098899841308594
    9. 'Aff' (adapté à ' Aff') → logprob: -5.223899841308594
    10. '\n' → logprob: -5.348899841308594

Token 150: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -1.0683535037969705e-05
    2. 'ic' → logprob: -11.75001049041748
    3. 'ichage' → logprob: -13.37501049041748
    4. 'che' → logprob: -14.87501049041748
    5. ' iche' → logprob: -15.00001049041748
    6. 'icher' → logprob: -15.87501049041748
    7. 'i' → logprob: -16.250011444091797
    8. 'e' → logprob: -17.000011444091797
    9. '{"' → logprob: -17.000011444091797
    10. '```' → logprob: -17.000011444091797

Token 151: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -3.619311974034645e-05
    2. 'r' → logprob: -10.250036239624023
    3. 'er' → logprob: -15.250036239624023
    4. 'u' → logprob: -15.500036239624023
    5. 'ур' → logprob: -16.125036239624023
    6. ' ur' → logprob: -16.625036239624023
    7. '_' → logprob: -18.000036239624023
    8. '```' → logprob: -18.000036239624023
    9. '   ' → logprob: -18.250036239624023
    10. '

' → logprob: -18.250036239624023

Token 152: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.030567891895771027
    2. '(' → logprob: -3.5305678844451904
    3. '(number' → logprob: -8.28056812286377
    4. '(n' → logprob: -8.40556812286377
    5. ' (' → logprob: -8.90556812286377
    6. '(numero' → logprob: -9.40556812286377
    7. '('' → logprob: -9.53056812286377
    8. '(nb' → logprob: -11.28056812286377
    9. 'nombre' → logprob: -11.90556812286377
    10. '(val' → logprob: -11.90556812286377

Token 153: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7552225589752197
    2. ').' → logprob: -1.3802225589752197
    3. '()).' → logprob: -1.8802225589752197
    4. ')' → logprob: -3.0052225589752197
    5. '())' → logprob: -3.0052225589752197
    6. '()' → logprob: -3.6302225589752197
    7. '.show' → logprob: -8.13022232055664
    8. '(' → logprob: -10.25522232055664
    9. ' ())' → logprob: -10.75522232055664
    10. ' ).' → logprob: -10.88022232055664

Token 154: 'show' (ID: 5526)
  Prédit: 'show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'show' → logprob: 0.0
    2. ' show' → logprob: -17.75
    3. '.show' → logprob: -19.75
    4. 'sh' → logprob: -19.875
    5. '_show' → logprob: -20.125
    6. '	show' → logprob: -21.25
    7. '(show' → logprob: -22.125
    8. 'Show' → logprob: -22.25
    9. 'sho' → logprob: -22.625
    10. 's' → logprob: -23.25

Token 155: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02378646470606327
    2. '(' → logprob: -3.8987865447998047
    3. '()
' → logprob: -6.273786544799805
    4. '(
' → logprob: -7.398786544799805
    5. ')' → logprob: -8.648786544799805
    6. '<|end|>' → logprob: -8.648786544799805
    7. '
' → logprob: -9.023786544799805
    8. '#' → logprob: -9.148786544799805
    9. '\n' → logprob: -9.773786544799805
    10. '\' → logprob: -10.273786544799805

Token 156: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0032315407879650593
    2. '__' → logprob: -5.753231525421143
    3. '_' → logprob: -10.2532320022583
    4. ' _' → logprob: -11.2532320022583
    5. '_name' → logprob: -13.1282320022583
    6. ' ' → logprob: -13.3782320022583
    7. ' ___' → logprob: -14.0032320022583
    8. ' ' → logprob: -14.6282320022583
    9. ' "__' → logprob: -15.2532320022583
    10. '___' → logprob: -15.6282320022583

Token 158: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07662995159626007
    2. '==' → logprob: -2.951629877090454
    3. '__' → logprob: -3.951629877090454
    4. '=="' → logprob: -6.701630115509033
    5. ' __' → logprob: -7.826630115509033
    6. ' =="' → logprob: -8.076629638671875
    7. '_' → logprob: -9.576629638671875
    8. '=='' → logprob: -9.576629638671875
    9. '.' → logprob: -10.326629638671875
    10. ' ' → logprob: -10.701629638671875

Token 159: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.531315314830863e-06
    2. '__.__' → logprob: -12.875003814697266
    3. '==' → logprob: -14.750003814697266
    4. '_' → logprob: -15.375003814697266
    5. '___' → logprob: -16.250003814697266
    6. '____' → logprob: -16.500003814697266
    7. '__
' → logprob: -16.625003814697266
    8. '__.' → logprob: -17.125003814697266
    9. ' ==' → logprob: -17.625003814697266
    10. ' __' → logprob: -17.875003814697266

Token 160: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.41654834151268005
    2. ' ==' → logprob: -1.1665483713150024
    3. '==' → logprob: -3.541548252105713
    4. ' __' → logprob: -9.416548728942871
    5. '=="' → logprob: -9.916548728942871
    6. '_' → logprob: -10.166548728942871
    7. '=' → logprob: -10.416548728942871
    8. '"' → logprob: -10.791548728942871
    9. ' ' → logprob: -11.291548728942871
    10. ' =' → logprob: -11.416548728942871

Token 161: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6952353119850159
    2. ''' → logprob: -0.6952353119850159
    3. ' "__' → logprob: -6.320235252380371
    4. ' '__' → logprob: -8.195235252380371
    5. '__' → logprob: -12.445235252380371
    6. '"user' → logprob: -13.570235252380371
    7. ''"' → logprob: -13.945235252380371
    8. '"name' → logprob: -14.195235252380371
    9. '"_' → logprob: -14.445235252380371
    10. ''name' → logprob: -14.570235252380371

Token 162: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4748488664627075
    2. '__' → logprob: -0.9748488664627075
    3. 'name' → logprob: -7.224848747253418
    4. ''' → logprob: -10.974848747253418
    5. '"' → logprob: -11.474848747253418
    6. '_main' → logprob: -11.724848747253418
    7. '__':
' → logprob: -13.349848747253418
    8. ' main' → logprob: -14.474848747253418
    9. '__
' → logprob: -14.474848747253418
    10. ''name' → logprob: -14.474848747253418

Token 163: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132841885089874
    2. '__':
' → logprob: -1.313284158706665
    3. '_' → logprob: -11.563283920288086
    4. '__:' → logprob: -11.563283920288086
    5. '__":
' → logprob: -12.813283920288086
    6. '':' → logprob: -14.688283920288086
    7. '__.' → logprob: -15.563283920288086
    8. '___' → logprob: -16.313283920288086
    9. '__('' → logprob: -17.188283920288086
    10. '____' → logprob: -18.313283920288086

Token 164: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0073767309077084064
    2. 'main' → logprob: -5.257376670837402
    3. '	main' → logprob: -6.382376670837402
    4. '   ' → logprob: -7.882376670837402
    5. '_main' → logprob: -11.007376670837402
    6. '    
' → logprob: -11.132376670837402
    7. ' 
' → logprob: -11.257376670837402
    8. '(main' → logprob: -11.757376670837402
    9. '<|end|>' → logprob: -12.132376670837402
    10. ' ' → logprob: -12.132376670837402

Token 165: ' exec' (ID: 25398)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00010926496179308742
    2. ' main' → logprob: -9.125109672546387
    3. '	main' → logprob: -15.625109672546387
    4. '_main' → logprob: -17.62510871887207
    5. 'm' → logprob: -18.00010871887207
    6. 'ma' → logprob: -18.00010871887207
    7. 'maine' → logprob: -18.75010871887207
    8. 'mai' → logprob: -18.87510871887207
    9. '   ' → logprob: -19.12510871887207
    10. 'mainwindow' → logprob: -19.25010871887207

Token 166: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10148343443870544
    2. '('' → logprob: -2.4764833450317383
    3. '('__' → logprob: -5.601483345031738
    4. '("' → logprob: -5.851483345031738
    5. '('_' → logprob: -5.851483345031738
    6. '("__' → logprob: -6.726483345031738
    7. '(main' → logprob: -7.101483345031738
    8. '(__' → logprob: -7.851483345031738
    9. '("_' → logprob: -8.226483345031738
    10. '("("' → logprob: -9.601483345031738

Token 167: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000574836041778326
    2. 'm' → logprob: -7.750575065612793
    3. 'mai' → logprob: -10.250575065612793
    4. '__' → logprob: -10.500575065612793
    5. 'ma' → logprob: -10.500575065612793
    6. ' main' → logprob: -10.750575065612793
    7. 'def' → logprob: -12.375575065612793
    8. ''' → logprob: -12.500575065612793
    9. ''m' → logprob: -12.750575065612793
    10. '   ' → logprob: -12.750575065612793

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.011373155459296e-05
    2. '('' → logprob: -10.750030517578125
    3. '')' → logprob: -12.000030517578125
    4. '(' → logprob: -13.875030517578125
    5. '())' → logprob: -14.375030517578125
    6. ')' → logprob: -14.750030517578125
    7. '()
' → logprob: -15.000030517578125
    8. ' ()' → logprob: -15.625030517578125
    9. '()\' → logprob: -17.250030517578125
    10. '()>' → logprob: -17.750030517578125

Token 169: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5764866471290588
    2. ')' → logprob: -0.8264866471290588
    3. ')'' → logprob: -8.326486587524414
    4. '()' → logprob: -8.576486587524414
    5. '('' → logprob: -9.576486587524414
    6. ''' → logprob: -10.701486587524414
    7. '")' → logprob: -11.326486587524414
    8. ')")' → logprob: -12.701486587524414
    9. '))' → logprob: -13.076486587524414
    10. '(' → logprob: -13.451486587524414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 74
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 44.31%
Précision adaptée (1ère position): 44.31%
Précision (top 10): 72.46%
================================================================================
