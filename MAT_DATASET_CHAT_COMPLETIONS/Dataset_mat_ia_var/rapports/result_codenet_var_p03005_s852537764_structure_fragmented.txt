================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lire_entree():
    return input()

def extraire_nk(entree):
    return map(int, entree.split())

def obtenir_n(entree):
    n, _ = extraire_nk(entree)
    return n

def obtenir_k(entree):
    _, k = extraire_nk(entree)
    return k

def k_est_un(k):
    return k == 1

def calculer_resultat(n, k):
    return n - k - 1 + 1

def afficher_resultat(resultat):
    print(resultat)

def traiter_cas_k_un():
    afficher_resultat(0)

def traiter_cas_general(n, k):
    res = calculer_resultat(n, k)
    afficher_resultat(res)

def main():
    entree = lire_entree()
    n = obtenir_n(entree)
    k = obtenir_k(entree)
    if k_est_un(k):
        traiter_cas_k_un()
    else:
        traiter_cas_general(n, k)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' lire' (ID: 46082)
  → Token d'amorce (pas de prédiction)

Token 2: '_ent' (ID: 66249)
  → Token d'amorce (pas de prédiction)

Token 3: 'ree' (ID: 908)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.16403602063655853
    2. '_' → logprob: -2.0390360355377197
    3. 'er' → logprob: -5.164035797119141
    4. '(' → logprob: -5.164035797119141
    5. 'iers' → logprob: -6.164035797119141
    6. '()' → logprob: -6.539035797119141
    7. '[' → logprob: -6.914035797119141
    8. '_r' → logprob: -6.914035797119141
    9. 'r' → logprob: -7.039035797119141
    10. 'ière' → logprob: -7.539035797119141

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014324743300676346
    2. '():' → logprob: -4.38932466506958
    3. '_' → logprob: -6.51432466506958
    4. '()' → logprob: -8.889325141906738
    5. '(:' → logprob: -9.889325141906738
    6. ':' → logprob: -9.889325141906738
    7. ' (' → logprob: -10.764325141906738
    8. '(_' → logprob: -11.389325141906738
    9. '```' → logprob: -11.764325141906738
    10. '(
' → logprob: -11.889325141906738

Token 5: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1202770471572876
    2. '```' → logprob: -1.4952770471572876
    3. '\' → logprob: -1.6202770471572876
    4. '   ' → logprob: -1.8702770471572876
    5. '(' → logprob: -3.120276927947998
    6. '()' → logprob: -4.620276927947998
    7. '    
' → logprob: -4.995276927947998
    8. ' 
' → logprob: -5.120276927947998
    9. ':' → logprob: -5.370276927947998
    10. '' → logprob: -5.995276927947998

Token 6: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7468558549880981
    2. 'r' → logprob: -1.8718558549880981
    3. 'n' → logprob: -2.2468557357788086
    4. '   ' → logprob: -2.3718557357788086
    5. 'x' → logprob: -3.3718557357788086
    6. 'input' → logprob: -3.3718557357788086
    7. ' ' → logprob: -3.7468557357788086
    8. 'user' → logprob: -3.9968557357788086
    9. 'a' → logprob: -4.871855735778809
    10. 'data' → logprob: -5.121855735778809

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.26780617237091064
    2. 'input' → logprob: -1.7678061723709106
    3. ' ' → logprob: -2.892806053161621
    4. ' int' → logprob: -5.142806053161621
    5. '"' → logprob: -7.267806053161621
    6. 'int' → logprob: -7.642806053161621
    7. '  ' → logprob: -7.767806053161621
    8. ' "' → logprob: -7.892806053161621
    9. ' []' → logprob: -8.517806053161621
    10. ' ' → logprob: -8.642806053161621

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011765359668061137
    2. '("("' → logprob: -7.251176357269287
    3. '('' → logprob: -8.501176834106445
    4. ''' → logprob: -9.376176834106445
    5. '```' → logprob: -10.251176834106445
    6. '()' → logprob: -10.251176834106445
    7. '"' → logprob: -10.501176834106445
    8. '40' → logprob: -11.626176834106445
    9. '(
' → logprob: -11.626176834106445
    10. 'parent' → logprob: -12.126176834106445

Token 9: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2390235662460327
    2. 'def' → logprob: -1.6140235662460327
    3. '#' → logprob: -1.7390235662460327
    4. '' → logprob: -2.7390236854553223
    5. '\' → logprob: -3.2390236854553223
    6. '
' → logprob: -3.2390236854553223
    7. '\n' → logprob: -3.2390236854553223
    8. '```' → logprob: -3.3640236854553223
    9. ')' → logprob: -3.9890236854553223
    10. '.' → logprob: -4.364023685455322

Token 10: ' extra' (ID: 5018)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.38947752118110657
    2. ' saisir' → logprob: -2.389477491378784
    3. ' espace' → logprob: -3.014477491378784
    4. '_' → logprob: -3.514477491378784
    5. ' test' → logprob: -3.514477491378784
    6. ' e' → logprob: -4.014477729797363
    7. ' afficher' → logprob: -4.014477729797363
    8. ' ajouter' → logprob: -4.264477729797363
    9. ' calcul' → logprob: -4.389477729797363
    10. ' def' → logprob: -4.639477729797363

Token 11: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.010114673525094986
    2. 'ct' → logprob: -5.510114669799805
    3. '_' → logprob: -6.510114669799805
    4. 't' → logprob: -7.635114669799805
    5. 'it' → logprob: -7.885114669799805
    6. '```' → logprob: -7.885114669799805
    7. 'ction' → logprob: -8.385114669799805
    8. 'i' → logprob: -8.572614669799805
    9. '()' → logprob: -8.885114669799805
    10. 're' → logprob: -8.885114669799805

Token 12: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006528667290695012
    2. '_s' → logprob: -9.250653266906738
    3. '_m' → logprob: -9.750653266906738
    4. '_text' → logprob: -9.875653266906738
    5. '_nom' → logprob: -10.000653266906738
    6. '_l' → logprob: -10.125653266906738
    7. '_val' → logprob: -10.500653266906738
    8. '('_' → logprob: -10.625653266906738
    9. '_nombre' → logprob: -11.000653266906738
    10. '("_' → logprob: -11.000653266906738

Token 13: 'k' (ID: 74)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'om' → logprob: -1.1565015316009521
    2. 'o' → logprob: -1.2815015316009521
    3. '_' → logprob: -1.5315015316009521
    4. '_o' → logprob: -2.156501531600952
    5. 'ombre' → logprob: -2.781501531600952
    6. 'e' → logprob: -5.406501770019531
    7. '_m' → logprob: -6.406501770019531
    8. '__' → logprob: -6.781501770019531
    9. 'b' → logprob: -7.281501770019531
    10. 'a' → logprob: -7.406501770019531

Token 14: '(ent' (ID: 112928)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027931546792387962
    2. '(_' → logprob: -4.2779316902160645
    3. '_' → logprob: -5.1529316902160645
    4. '(_)' → logprob: -6.2779316902160645
    5. '(a' → logprob: -7.4029316902160645
    6. '(e' → logprob: -7.5279316902160645
    7. 'def' → logprob: -7.7779316902160645
    8. '()' → logprob: -7.7779316902160645
    9. ' (' → logprob: -7.9029316902160645
    10. '_(' → logprob: -8.027931213378906

Token 15: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.20061041414737701
    2. 're' → logprob: -3.075610399246216
    3. 'rees' → logprob: -3.450610399246216
    4. 'er' → logprob: -3.575610399246216
    5. 'etre' → logprob: -3.575610399246216
    6. 'ete' → logprob: -4.075610637664795
    7. 'et' → logprob: -5.575610637664795
    8. 'def' → logprob: -5.700610637664795
    9. 'etes' → logprob: -5.700610637664795
    10. 'rée' → logprob: -5.825610637664795

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03314901888370514
    2. ')' → logprob: -3.658149003982544
    3. ',' → logprob: -5.283149242401123
    4. '):
' → logprob: -6.908149242401123
    5. ' ):' → logprob: -8.283148765563965
    6. '_' → logprob: -8.908148765563965
    7. ':' → logprob: -9.658148765563965
    8. ' ' → logprob: -10.033148765563965
    9. ''):' → logprob: -10.408148765563965
    10. '   ' → logprob: -10.408148765563965

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1831471920013428
    2. '(ent' → logprob: -1.8081471920013428
    3. '(' → logprob: -1.9331471920013428
    4. ''' → logprob: -2.5581471920013428
    5. '_' → logprob: -2.8081471920013428
    6. 'ent' → logprob: -3.0581471920013428
    7. ' ent' → logprob: -3.4331471920013428
    8. ' (' → logprob: -3.8081471920013428
    9. ',' → logprob: -4.058147430419922
    10. '[' → logprob: -4.183147430419922

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1829053908586502
    2. ' entree' → logprob: -2.807905435562134
    3. ' ent' → logprob: -3.182905435562134
    4. 'ent' → logprob: -3.307905435562134
    5. ' return' → logprob: -4.682905197143555
    6. ' entr' → logprob: -5.307905197143555
    7. ' ' → logprob: -5.682905197143555
    8. ' entrée' → logprob: -6.432905197143555
    9. 'entrée' → logprob: -6.557905197143555
    10. 'entr' → logprob: -6.557905197143555

Token 19: ' map' (ID: 4014)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4513069987297058
    2. ' tuple' → logprob: -1.8263070583343506
    3. ' entree' → logprob: -1.9513070583343506
    4. 'tuple' → logprob: -3.8263070583343506
    5. '[' → logprob: -4.4513068199157715
    6. ' ent' → logprob: -5.3263068199157715
    7. ' list' → logprob: -5.5763068199157715
    8. '(ent' → logprob: -5.7013068199157715
    9. ' [' → logprob: -5.8263068199157715
    10. 'list' → logprob: -6.0763068199157715

Token 20: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2705475986003876
    2. '(int' → logprob: -1.52054762840271
    3. '(lambda' → logprob: -4.020547389984131
    4. '(str' → logprob: -7.770547389984131
    5. '(s' → logprob: -10.645547866821289
    6. '(
' → logprob: -11.020547866821289
    7. '(split' → logprob: -11.895547866821289
    8. '(input' → logprob: -12.145547866821289
    9. '(

' → logprob: -12.520547866821289
    10. '<int' → logprob: -12.645547866821289

Token 21: ',' (ID: 11)
  Prédit: '(ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ent' → logprob: -0.00829446129500866
    2. '(' → logprob: -4.883294582366943
    3. 'ent' → logprob: -7.883294582366943
    4. ' ent' → logprob: -9.008294105529785
    5. ' (' → logprob: -9.633294105529785
    6. ')' → logprob: -9.633294105529785
    7. '	ent' → logprob: -10.008294105529785
    8. '(
' → logprob: -13.133294105529785
    9. 'entr' → logprob: -13.633294105529785
    10. '(en' → logprob: -13.758294105529785

Token 22: ' entree' (ID: 156822)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.01759338192641735
    2. ' entree' → logprob: -4.1425933837890625
    3. 'entrée' → logprob: -7.0175933837890625
    4. 'entr' → logprob: -8.392593383789062
    5. '(ent' → logprob: -8.642593383789062
    6. ' ent' → logprob: -9.142593383789062
    7. ')' → logprob: -9.892593383789062
    8. ' entrée' → logprob: -10.267593383789062
    9. 'entre' → logprob: -11.267593383789062
    10. '	ent' → logprob: -11.642593383789062

Token 23: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.8001622557640076
    2. '().' → logprob: -1.0501623153686523
    3. '.' → logprob: -1.6751623153686523
    4. '.strip' → logprob: -4.800162315368652
    5. ' .' → logprob: -5.800162315368652
    6. '   ' → logprob: -6.800162315368652
    7. ')' → logprob: -7.675162315368652
    8. '()' → logprob: -7.800162315368652
    9. 'split' → logprob: -9.050162315368652
    10. ' ' → logprob: -10.050162315368652

Token 24: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02028002217411995
    2. '())' → logprob: -4.270279884338379
    3. '()' → logprob: -5.145279884338379
    4. '(' → logprob: -8.520279884338379
    5. '("' → logprob: -10.645279884338379
    6. '("("' → logprob: -10.645279884338379
    7. '()))' → logprob: -11.395279884338379
    8. '(','' → logprob: -12.645279884338379
    9. '()]' → logprob: -13.395279884338379
    10. ')' → logprob: -13.770279884338379

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01718406192958355
    2. '(n' → logprob: -4.642184257507324
    3. '(' → logprob: -6.267184257507324
    4. '\' → logprob: -6.392184257507324
    5. 'n' → logprob: -6.642184257507324
    6. '\n' → logprob: -7.517184257507324
    7. 'd' → logprob: -7.517184257507324
    8. 'de' → logprob: -7.767184257507324
    9. '(
' → logprob: -8.642184257507324
    10. '#' → logprob: -8.767184257507324

Token 26: ' obtenir' (ID: 54423)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.15581119060516357
    2. ' def' → logprob: -2.905811309814453
    3. 'main' → logprob: -3.405811309814453
    4. 'def' → logprob: -3.905811309814453
    5. ' calcul' → logprob: -3.905811309814453
    6. ' lire' → logprob: -5.655811309814453
    7. ' solution' → logprob: -5.905811309814453
    8. ' extra' → logprob: -6.280811309814453
    9. ' saisir' → logprob: -6.905811309814453
    10. ' afficher' → logprob: -7.030811309814453

Token 27: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.11201328039169312
    2. '_nb' → logprob: -3.112013339996338
    3. '_nombre' → logprob: -3.987013339996338
    4. '_' → logprob: -4.612013339996338
    5. '_l' → logprob: -4.737013339996338
    6. '_la' → logprob: -4.862013339996338
    7. '_le' → logprob: -5.237013339996338
    8. '_val' → logprob: -5.737013339996338
    9. '_max' → logprob: -6.237013339996338
    10. '_nom' → logprob: -6.737013339996338

Token 28: '(ent' (ID: 112928)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05940299481153488
    2. '_k' → logprob: -3.6844029426574707
    3. 'b' → logprob: -4.184402942657471
    4. '_' → logprob: -5.434402942657471
    5. 'ombres' → logprob: -5.434402942657471
    6. 'ombre' → logprob: -5.559402942657471
    7. '_ent' → logprob: -5.934402942657471
    8. 'om' → logprob: -8.434403419494629
    9. '```' → logprob: -8.434403419494629
    10. 'ext' → logprob: -9.059403419494629

Token 29: 'ree' (ID: 908)
  Prédit: 'tre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tre' → logprob: -0.4429282248020172
    2. 'etre' → logprob: -1.9429281949996948
    3. ')' → logprob: -2.6929283142089844
    4. 't' → logprob: -2.9429283142089844
    5. 're' → logprob: -3.4429283142089844
    6. 'tr' → logprob: -4.317928314208984
    7. 'itre' → logprob: -4.442928314208984
    8. '_' → logprob: -4.817928314208984
    9. 'trer' → logprob: -5.817928314208984
    10. '```' → logprob: -5.817928314208984

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00248719216324389
    2. ')' → logprob: -6.1274871826171875
    3. '):
' → logprob: -9.002487182617188
    4. '[' → logprob: -9.377487182617188
    5. ',' → logprob: -10.127487182617188
    6. '   ' → logprob: -10.377487182617188
    7. ' ):' → logprob: -11.752487182617188
    8. '[:' → logprob: -12.752487182617188
    9. '():' → logprob: -12.752487182617188
    10. '[]):' → logprob: -13.252487182617188

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1314851939678192
    2. 'ent' → logprob: -2.2564852237701416
    3. 'return' → logprob: -5.0064849853515625
    4. ' return' → logprob: -5.1314849853515625
    5. 'int' → logprob: -6.0064849853515625
    6. 'n' → logprob: -6.7564849853515625
    7. ' ent' → logprob: -7.1314849853515625
    8. '(ent' → logprob: -8.131484985351562
    9. ' n' → logprob: -8.381484985351562
    10. ',' → logprob: -8.756484985351562

Token 32: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4126115143299103
    2. '   ' → logprob: -1.787611484527588
    3. 'return' → logprob: -1.787611484527588
    4. 'int' → logprob: -6.912611484527588
    5. ' n' → logprob: -7.037611484527588
    6. ' int' → logprob: -7.662611484527588
    7. 'ent' → logprob: -7.912611484527588
    8. 'n' (adapté à ' n') → logprob: -8.162611961364746
    9. ' ' → logprob: -8.912611961364746
    10. ' parts' → logprob: -9.662611961364746

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04038066789507866
    2. ',' → logprob: -3.4153807163238525
    3. '=' → logprob: -5.040380477905273
    4. ' ,' → logprob: -9.040380477905273
    5. ' ' → logprob: -10.040380477905273
    6. ',_' → logprob: -10.790380477905273
    7. '=int' → logprob: -10.915380477905273
    8. '_' → logprob: -11.290380477905273
    9. '   ' → logprob: -11.415380477905273
    10. '  ' → logprob: -12.540380477905273

Token 34: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2745618224143982
    2. '_' → logprob: -1.899561882019043
    3. ' _' → logprob: -2.524561882019043
    4. ' =' → logprob: -5.399561882019043
    5. ' ' → logprob: -6.399561882019043
    6. '_=' → logprob: -6.774561882019043
    7. '    ' → logprob: -7.274561882019043
    8. '  ' → logprob: -7.399561882019043
    9. '<|end|>' → logprob: -7.774561882019043
    10. '=' → logprob: -8.274561882019043

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04926507547497749
    2. ' =' → logprob: -3.049265146255493
    3. ',' → logprob: -7.299264907836914
    4. '=_' → logprob: -15.424264907836914
    5. '=n' → logprob: -15.674264907836914
    6. ',_' → logprob: -15.799264907836914
    7. ' ' → logprob: -15.799264907836914
    8. 's' → logprob: -15.924264907836914
    9. '=int' → logprob: -16.049264907836914
    10. '=

' → logprob: -16.299264907836914

Token 36: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.30879175662994385
    2. ' extra' → logprob: -1.8087917566299438
    3. 'ent' → logprob: -2.3087916374206543
    4. ' entree' → logprob: -7.058791637420654
    5. ' ent' → logprob: -8.308792114257812
    6. 'entrée' → logprob: -8.433792114257812
    7. 'entr' → logprob: -8.808792114257812
    8. 'next' → logprob: -9.058792114257812
    9. 'list' → logprob: -9.183792114257812
    10. ' next' → logprob: -9.308792114257812

Token 37: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0004377022560220212
    2. '_' → logprob: -9.00043773651123
    3. '   ' → logprob: -9.75043773651123
    4. 'i' → logprob: -10.00043773651123
    5. 'itre' → logprob: -10.62543773651123
    6. '\' → logprob: -10.87543773651123
    7. 'aire' → logprob: -10.87543773651123
    8. '```' → logprob: -11.00043773651123
    9. ' ire' → logprob: -11.25043773651123
    10. '`' → logprob: -11.25043773651123

Token 38: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -13.125004768371582
    3. 'n' → logprob: -13.125004768371582
    4. '(n' → logprob: -15.500004768371582
    5. '_nc' → logprob: -15.875004768371582
    6. 's' → logprob: -16.2500057220459
    7. '_nb' → logprob: -16.2500057220459
    8. '_nt' → logprob: -16.3750057220459
    9. '```' → logprob: -16.8750057220459
    10. 'ent' → logprob: -17.0000057220459

Token 39: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16127988696098328
    2. '_k' → logprob: -1.9112799167633057
    3. '(ent' → logprob: -7.161279678344727
    4. '(' → logprob: -10.161279678344727
    5. '(k' → logprob: -10.286279678344727
    6. '_n' → logprob: -10.286279678344727
    7. '_' → logprob: -10.286279678344727
    8. 'nk' → logprob: -10.786279678344727
    9. 'n' → logprob: -11.036279678344727
    10. 'K' → logprob: -11.036279678344727

Token 40: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -0.00021176543668843806
    2. '(' → logprob: -8.500211715698242
    3. '(en' → logprob: -11.875211715698242
    4. ' (' → logprob: -14.750211715698242
    5. 'ent' → logprob: -15.000211715698242
    6. '(e' → logprob: -15.375211715698242
    7. '()' → logprob: -16.625211715698242
    8. '(entry' → logprob: -16.750211715698242
    9. '(
' → logprob: -16.875211715698242
    10. '(

' → logprob: -17.125211715698242

Token 41: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -2.7014437364414334e-05
    2. 'ee' → logprob: -11.25002670288086
    3. 'rée' → logprob: -12.12502670288086
    4. 'rie' → logprob: -12.50002670288086
    5. 're' → logprob: -13.00002670288086
    6. 'tree' → logprob: -14.50002670288086
    7. '1' → logprob: -15.12502670288086
    8. 'rees' → logprob: -15.37502670288086
    9. ' ree' → logprob: -15.50002670288086
    10. '>' → logprob: -16.12502670288086

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2007883671903983e-05
    2. '   ' → logprob: -11.375021934509277
    3. ')
' → logprob: -12.000021934509277
    4. ')`' → logprob: -13.500021934509277
    5. ' )' → logprob: -14.125021934509277
    6. '[' → logprob: -14.125021934509277
    7. '')' → logprob: -15.000021934509277
    8. '`)' → logprob: -15.250021934509277
    9. ')**' → logprob: -16.125022888183594
    10. '))' → logprob: -16.250022888183594

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005303950165398419
    2. 'n' → logprob: -8.000530242919922
    3. 'return' → logprob: -9.250530242919922
    4. '    
' → logprob: -10.000530242919922
    5. ' return' → logprob: -11.375530242919922
    6. '
' → logprob: -11.750530242919922
    7. '<|end|>' → logprob: -11.750530242919922
    8. '\n' → logprob: -12.125530242919922
    9. '	return' → logprob: -12.250530242919922
    10. ')' → logprob: -12.875530242919922

Token 44: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004180971533060074
    2. 'n' → logprob: -6.254180908203125
    3. 'return' (adapté à ' return') → logprob: -6.629180908203125
    4. '
' → logprob: -7.629180908203125
    5. ' return' → logprob: -8.879180908203125
    6. '    
' → logprob: -9.129180908203125
    7. ' ' → logprob: -10.379180908203125
    8. '  ' → logprob: -10.379180908203125
    9. '	return' → logprob: -10.754180908203125
    10. '<|end|>' → logprob: -10.754180908203125

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04300958290696144
    2. 'n' → logprob: -3.1680095195770264
    3. ' ' → logprob: -11.543009757995605
    4. '	n' → logprob: -14.918009757995605
    5. ' ' → logprob: -15.793009757995605
    6. 'int' → logprob: -16.29300880432129
    7. ' int' → logprob: -17.04300880432129
    8. '_n' → logprob: -17.54300880432129
    9. '(n' → logprob: -18.29300880432129
    10. ',n' → logprob: -18.79300880432129

Token 46: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38525891304016113
    2. '
' → logprob: -1.3852589130401611
    3. '

' → logprob: -2.760258913040161
    4. '<|end|>' → logprob: -5.885258674621582
    5. '```' → logprob: -6.010258674621582
    6. '
' → logprob: -8.635258674621582
    7. '<|end|>' → logprob: -9.010258674621582
    8. '' → logprob: -9.260258674621582
    9. ' def' → logprob: -9.260258674621582
    10. '


' → logprob: -9.885258674621582

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00237885769456625
    2. 'd' → logprob: -6.502378940582275
    3. '
' → logprob: -8.627378463745117
    4. '\' → logprob: -8.752378463745117
    5. '#' → logprob: -8.877378463745117
    6. 'n' → logprob: -9.002378463745117
    7. '<|end|>' → logprob: -9.127378463745117
    8. '```' → logprob: -10.127378463745117
    9. '<|end|>' → logprob: -10.377378463745117
    10. '[' → logprob: -10.877378463745117

Token 48: ' obtenir' (ID: 54423)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.6626299023628235
    2. 'ob' → logprob: -1.1626298427581787
    3. ' extra' → logprob: -2.2876298427581787
    4. 'l' → logprob: -3.2876298427581787
    5. 'main' → logprob: -4.912630081176758
    6. 'def' → logprob: -5.162630081176758
    7. 'calcul' → logprob: -5.162630081176758
    8. ' obtenir' → logprob: -6.162630081176758
    9. ' lire' → logprob: -6.537630081176758
    10. 'tr' → logprob: -6.537630081176758

Token 49: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0005631613312289119
    2. 'k' → logprob: -7.625563144683838
    3. 'def' → logprob: -10.250563621520996
    4. '_' → logprob: -10.750563621520996
    5. '_s' → logprob: -11.625563621520996
    6. '_n' → logprob: -12.250563621520996
    7. '_c' → logprob: -13.500563621520996
    8. '_l' → logprob: -14.625563621520996
    9. '_m' → logprob: -14.875563621520996
    10. '(k' → logprob: -15.375563621520996

Token 50: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. '_ent' → logprob: -15.250001907348633
    4. 'ent' → logprob: -16.375001907348633
    5. '	ent' → logprob: -16.500001907348633
    6. ' (' → logprob: -17.875001907348633
    7. '(en' → logprob: -18.000001907348633
    8. ' ent' → logprob: -18.375001907348633
    9. '(def' → logprob: -18.375001907348633
    10. '(n' → logprob: -18.500001907348633

Token 51: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.010877208784222603
    2. 'ent' → logprob: -4.6358771324157715
    3. 're' → logprob: -8.38587760925293
    4. 'ee' → logprob: -8.51087760925293
    5. '_' → logprob: -9.01087760925293
    6. 'er' → logprob: -9.63587760925293
    7. 'et' → logprob: -9.63587760925293
    8. 'ere' → logprob: -9.76087760925293
    9. '   ' → logprob: -10.01087760925293
    10. '```' → logprob: -10.26087760925293

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024358915106859058
    2. '):
' → logprob: -8.375243186950684
    3. ')' → logprob: -11.375243186950684
    4. '   ' → logprob: -14.750243186950684
    5. '):
' → logprob: -14.875243186950684
    6. ':' → logprob: -15.250243186950684
    7. ' ):' → logprob: -15.875243186950684
    8. '():' → logprob: -16.250244140625
    9. ''):' → logprob: -17.000244140625
    10. 'def' → logprob: -17.500244140625

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10464310646057129
    2. 'ent' → logprob: -3.2296431064605713
    3. '(ent' → logprob: -3.2296431064605713
    4. ' ent' → logprob: -4.229642868041992
    5. ' ' → logprob: -6.104642868041992
    6. ',' → logprob: -6.854642868041992
    7. '	ent' → logprob: -6.979642868041992
    8. '  ' → logprob: -8.229642868041992
    9. 'n' → logprob: -8.354642868041992
    10. ' n' → logprob: -8.479642868041992

Token 54: ' _,' (ID: 18042)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.1279682070016861
    2. 'extra' → logprob: -2.7529683113098145
    3. '   ' → logprob: -3.5029683113098145
    4. 'n' → logprob: -4.8779683113098145
    5. '_,' (adapté à ' _,') → logprob: -4.8779683113098145
    6. 'def' → logprob: -6.1279683113098145
    7. ' ' → logprob: -6.3779683113098145
    8. 'return' → logprob: -6.6279683113098145
    9. ' extra' → logprob: -6.7529683113098145
    10. '(ent' → logprob: -7.3779683113098145

Token 55: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16024574637413025
    2. ' k' → logprob: -1.9102457761764526
    3. 'ent' → logprob: -11.410245895385742
    4. '_k' → logprob: -12.660245895385742
    5. '	k' → logprob: -13.535245895385742
    6. '<|end|>' → logprob: -13.535245895385742
    7. ' ' → logprob: -13.660245895385742
    8. '  ' → logprob: -14.160245895385742
    9. 'K' → logprob: -14.410245895385742
    10. '   ' → logprob: -14.660245895385742

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026301926001906395
    2. ' =' → logprob: -3.651301860809326
    3. ',' → logprob: -14.401302337646484
    4. '   ' → logprob: -15.276302337646484
    5. ' ' → logprob: -15.526302337646484
    6. ')' → logprob: -15.901302337646484
    7. 'ent' → logprob: -16.026302337646484
    8. '  ' → logprob: -16.526302337646484
    9. '=int' → logprob: -16.901302337646484
    10. '<|end|>' → logprob: -17.151302337646484

Token 57: ' extra' (ID: 5018)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.6326400637626648
    2. ' extra' → logprob: -0.7576400637626648
    3. ' ' → logprob: -11.50763988494873
    4. 'extr' → logprob: -11.63263988494873
    5. '(extra' → logprob: -12.00763988494873
    6. '   ' → logprob: -12.75763988494873
    7. ' extrait' → logprob: -12.88263988494873
    8. '_extra' → logprob: -13.38263988494873
    9. '.extra' → logprob: -13.50763988494873
    10. ' extr' → logprob: -13.63263988494873

Token 58: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.007662105839699507
    2. 'itre' → logprob: -5.757662296295166
    3. 'tre' → logprob: -5.757662296295166
    4. 'ure' → logprob: -7.507662296295166
    5. 're' → logprob: -7.632662296295166
    6. 'er' → logprob: -9.632661819458008
    7. 'irer' → logprob: -10.132661819458008
    8. 'crire' → logprob: -10.257661819458008
    9. 'x' → logprob: -10.632661819458008
    10. 'entre' → logprob: -10.757661819458008

Token 59: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0077442205511033535
    2. '_k' → logprob: -4.882744312286377
    3. 'nk' → logprob: -9.882743835449219
    4. 'n' → logprob: -10.007743835449219
    5. 'k' → logprob: -10.382743835449219
    6. '_' → logprob: -11.632743835449219
    7. 'ent' → logprob: -14.007743835449219
    8. '_kn' → logprob: -15.882743835449219
    9. '_ent' → logprob: -15.882743835449219
    10. ' nk' → logprob: -16.25774383544922

Token 60: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.522638169466518e-05
    2. '_k' → logprob: -10.875024795532227
    3. 'ent' → logprob: -12.875024795532227
    4. 'к' → logprob: -13.875024795532227
    5. '(ent' → logprob: -14.875024795532227
    6. 'kent' → logprob: -15.375024795532227
    7. 'kj' → logprob: -15.625024795532227
    8. '_ent' → logprob: -15.625024795532227
    9. 'kende' → logprob: -15.750024795532227
    10. 'kante' → logprob: -16.437524795532227

Token 61: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.25000286102295
    3. 'ent' → logprob: -14.12500286102295
    4. '(en' → logprob: -16.375001907348633
    5. '	ent' → logprob: -16.875001907348633
    6. '(enc' → logprob: -18.500001907348633
    7. '(e' → logprob: -18.875001907348633
    8. ' (' → logprob: -19.000001907348633
    9. ' ent' → logprob: -19.250001907348633
    10. '.ent' → logprob: -19.375001907348633

Token 62: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.00010402000043541193
    2. 're' → logprob: -9.625103950500488
    3. 'ee' → logprob: -10.250103950500488
    4. ' ree' → logprob: -14.625103950500488
    5. 'rée' → logprob: -14.875103950500488
    6. 'ete' → logprob: -14.875103950500488
    7. 'ere' → logprob: -15.375103950500488
    8. 'reet' → logprob: -15.625103950500488
    9. '```' → logprob: -15.625103950500488
    10. '>' → logprob: -15.750103950500488

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003799104888457805
    2. ')
' → logprob: -8.37537956237793
    3. 'ent' → logprob: -9.25037956237793
    4. '(ent' → logprob: -10.50037956237793
    5. '   ' → logprob: -10.87537956237793
    6. ')
' → logprob: -12.87537956237793
    7. ')`' → logprob: -13.87537956237793
    8. '))' → logprob: -14.37537956237793
    9. '	ent' → logprob: -14.50037956237793
    10. ' )' → logprob: -14.75037956237793

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017553119687363505
    2. 'return' → logprob: -9.000175476074219
    3. ' return' → logprob: -9.875175476074219
    4. '	return' → logprob: -15.375175476074219
    5. 'def' → logprob: -15.750175476074219
    6. '
' → logprob: -16.75017547607422
    7. '  ' → logprob: -16.87517547607422
    8. '       ' → logprob: -17.12517547607422
    9. ' ' → logprob: -17.25017547607422
    10. '<|end|>' → logprob: -17.25017547607422

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3965398669242859
    2. 'return' (adapté à ' return') → logprob: -1.1465399265289307
    3. '   ' → logprob: -4.646539688110352
    4. ' ' → logprob: -10.896539688110352
    5. '	return' → logprob: -11.896539688110352
    6. '  ' → logprob: -13.521539688110352
    7. ':return' → logprob: -14.896539688110352
    8. 'eturn' → logprob: -15.396539688110352
    9. ' ' → logprob: -15.896539688110352
    10. '```' → logprob: -16.77153968811035

Token 66: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12692873179912567
    2. ' k' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.251928329467773
    4. '_k' → logprob: -16.876928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '	k' → logprob: -17.751928329467773
    7. ' к' → logprob: -18.376928329467773
    8. '(k' → logprob: -19.501928329467773
    9. 'к' → logprob: -19.751928329467773
    10. ',' → logprob: -20.001928329467773

Token 67: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3467381000518799
    2. '
' → logprob: -1.9717381000518799
    3. 'def' → logprob: -2.22173810005188
    4. '<|end|>' → logprob: -3.47173810005188
    5. '\n' → logprob: -4.971737861633301
    6. '```' → logprob: -6.346737861633301
    7. '


' → logprob: -6.471737861633301
    8. ' 

' → logprob: -6.721737861633301
    9. '<|end|>' → logprob: -7.471737861633301
    10. '



' → logprob: -7.846737861633301

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0695640966296196
    2. '
' → logprob: -2.9445641040802
    3. '

' → logprob: -5.444563865661621
    4. '<|end|>' → logprob: -5.694563865661621
    5. '\n' → logprob: -6.319563865661621
    6. '#' → logprob: -6.819563865661621
    7. '\' → logprob: -6.944563865661621
    8. '```' → logprob: -7.194563865661621
    9. 'n' → logprob: -7.194563865661621
    10. '<|end|>' → logprob: -7.569563865661621

Token 69: ' k' (ID: 372)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.0357587337493896
    2. ' main' → logprob: -1.1607587337493896
    3. ' somme' → logprob: -2.9107587337493896
    4. ' extra' → logprob: -3.2857587337493896
    5. ' trouver' → logprob: -3.6607587337493896
    6. ' solution' → logprob: -3.6607587337493896
    7. ' compter' → logprob: -3.6607587337493896
    8. ' saisir' → logprob: -3.7857587337493896
    9. ' lire' → logprob: -4.285758972167969
    10. ' tr' → logprob: -4.285758972167969

Token 70: '_est' (ID: 50330)
  Prédit: '_plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_plus' → logprob: -1.830770492553711
    2. '_' → logprob: -1.955770492553711
    3. '_diff' → logprob: -2.830770492553711
    4. 'ernel' → logprob: -2.955770492553711
    5. '_v' → logprob: -3.205770492553711
    6. '_ex' → logprob: -3.455770492553711
    7. '_s' → logprob: -3.705770492553711
    8. 'eep' → logprob: -3.705770492553711
    9. '_ent' → logprob: -3.830770492553711
    10. '_m' → logprob: -3.955770492553711

Token 71: '_un' (ID: 11119)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.9531315565109253
    2. '_' → logprob: -2.078131675720215
    3. '_present' → logprob: -2.078131675720215
    4. '_in' → logprob: -2.828131675720215
    5. '_possible' → logprob: -3.078131675720215
    6. '_valid' → logprob: -3.078131675720215
    7. 'eg' → logprob: -3.328131675720215
    8. '_plus' → logprob: -3.578131675720215
    9. '_pos' → logprob: -3.703131675720215
    10. '_sup' → logprob: -3.828131675720215

Token 72: '(k' (ID: 12125)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3109464645385742
    2. '_nombre' → logprob: -1.5609464645385742
    3. 'itaire' → logprob: -2.060946464538574
    4. '_' → logprob: -2.185946464538574
    5. '_ch' → logprob: -3.310946464538574
    6. '(e' → logprob: -3.310946464538574
    7. 'def' → logprob: -4.060946464538574
    8. 'ion' → logprob: -4.185946464538574
    9. 'k' → logprob: -4.185946464538574
    10. '_def' → logprob: -4.435946464538574

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04931294918060303
    2. ')' → logprob: -3.0493130683898926
    3. ' ):' → logprob: -8.299312591552734
    4. '):
' → logprob: -8.799312591552734
    5. ',' → logprob: -9.674312591552734
    6. '(' → logprob: -9.799312591552734
    7. ' )' → logprob: -10.549312591552734
    8. ':' → logprob: -10.799312591552734
    9. '(k' → logprob: -10.799312591552734
    10. '=' → logprob: -11.174312591552734

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8906497359275818
    2. 'k' → logprob: -1.5156497955322266
    3. '(k' → logprob: -1.6406497955322266
    4. ' k' → logprob: -1.8906497955322266
    5. ' return' → logprob: -4.015649795532227
    6. 'def' → logprob: -5.890649795532227
    7. 'return' → logprob: -6.265649795532227
    8. '(' → logprob: -6.890649795532227
    9. ':' → logprob: -7.265649795532227
    10. ' ' → logprob: -8.890649795532227

Token 75: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2040533423423767
    2. ' return' → logprob: -1.8290534019470215
    3. 'return' (adapté à ' return') → logprob: -4.2040534019470215
    4. ' k' → logprob: -5.0790534019470215
    5. 'k' → logprob: -5.9540534019470215
    6. 'def' → logprob: -9.329052925109863
    7. '(k' → logprob: -9.329052925109863
    8. ' ' → logprob: -11.079052925109863
    9. ' ' → logprob: -11.454052925109863
    10. ':' → logprob: -12.079052925109863

Token 76: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.014210519380867481
    2. 'k' → logprob: -4.2642107009887695
    3. '(k' → logprob: -11.13921070098877
    4. ' ' → logprob: -11.51421070098877
    5. ' True' → logprob: -11.76421070098877
    6. ' (' → logprob: -12.01421070098877
    7. ' ' → logprob: -12.63921070098877
    8. '(' → logprob: -12.88921070098877
    9. 'True' → logprob: -13.38921070098877
    10. '1' → logprob: -14.63921070098877

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1433475911617279
    2. '==' → logprob: -2.0183475017547607
    3. '>' → logprob: -8.64334774017334
    4. ' !=' → logprob: -9.14334774017334
    5. ' >' → logprob: -9.39334774017334
    6. '=' → logprob: -9.39334774017334
    7. ' ' → logprob: -10.01834774017334
    8. '1' → logprob: -10.64334774017334
    9. '!=' → logprob: -10.76834774017334
    10. ' >=' → logprob: -10.89334774017334

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889165729284286
    2. ' ' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.32889175415039
    4. '0' → logprob: -16.70389175415039
    5. '  ' → logprob: -17.20389175415039
    6. '   ' → logprob: -17.32889175415039
    7. '_' → logprob: -18.70389175415039
    8. '```' → logprob: -19.20389175415039
    9. 'un' → logprob: -19.82889175415039
    10. '.' → logprob: -20.01639175415039

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '0' → logprob: -15.125204086303711
    4. '   ' → logprob: -17.25020408630371
    5. ' ' → logprob: -18.50020408630371
    6. '  ' → logprob: -18.62520408630371
    7. '```' → logprob: -19.25020408630371
    8. '2' → logprob: -19.50020408630371
    9. '-' → logprob: -19.62520408630371
    10. 'un' → logprob: -19.62520408630371

Token 80: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1707838475704193
    2. 'def' → logprob: -2.420783758163452
    3. '
' → logprob: -2.795783758163452
    4. '\n' → logprob: -5.295783996582031
    5. '<|end|>' → logprob: -8.045783996582031
    6. ' def' → logprob: -8.170783996582031
    7. '\' → logprob: -8.295783996582031
    8. '```' → logprob: -8.670783996582031
    9. ':def' → logprob: -8.920783996582031
    10. '(def' → logprob: -9.045783996582031

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08006314933300018
    2. '<|end|>' → logprob: -2.9550631046295166
    3. '
' → logprob: -4.330063343048096
    4. '\n' → logprob: -5.455063343048096
    5. '#' → logprob: -6.205063343048096
    6. '

' → logprob: -6.330063343048096
    7. ':' → logprob: -6.705063343048096
    8. '```' → logprob: -7.330063343048096
    9. '<|end|>' → logprob: -7.455063343048096
    10. '\' → logprob: -7.705063343048096

Token 82: ' calcul' (ID: 7559)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06570091843605042
    2. 'k' → logprob: -4.065701007843018
    3. ' def' → logprob: -4.440701007843018
    4. ' n' → logprob: -5.065701007843018
    5. ' est' → logprob: -5.190701007843018
    6. '_k' → logprob: -5.315701007843018
    7. ' __' → logprob: -5.440701007843018
    8. ' main' → logprob: -5.440701007843018
    9. '__' → logprob: -6.065701007843018
    10. ' lire' → logprob: -6.940701007843018

Token 83: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.003728464711457491
    2. '_er' → logprob: -6.75372838973999
    3. 'atrice' → logprob: -7.12872838973999
    4. 'ateur' → logprob: -7.25372838973999
    5. '_' → logprob: -8.003728866577148
    6. 'ate' → logprob: -8.878728866577148
    7. '_k' → logprob: -8.878728866577148
    8. 'e' → logprob: -9.628728866577148
    9. '_s' → logprob: -9.753728866577148
    10. '_sum' → logprob: -9.753728866577148

Token 84: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38047176599502563
    2. '_s' → logprob: -2.755471706390381
    3. '_l' → logprob: -3.255471706390381
    4. '_la' → logprob: -3.255471706390381
    5. '_max' → logprob: -3.630471706390381
    6. '_m' → logprob: -4.130471706390381
    7. '(' → logprob: -4.255471706390381
    8. '_k' → logprob: -4.505471706390381
    9. '_total' → logprob: -4.630471706390381
    10. '_score' → logprob: -4.630471706390381

Token 85: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00011522514978423715
    2. 'ats' → logprob: -10.125115394592285
    3. 'é' → logprob: -11.000115394592285
    4. 'er' → logprob: -11.125115394592285
    5. 'def' → logprob: -11.625115394592285
    6. '()' → logprob: -12.125115394592285
    7. '(at' → logprob: -12.125115394592285
    8. '(' → logprob: -12.250115394592285
    9. '_at' → logprob: -12.625115394592285
    10. '```' → logprob: -12.750115394592285

Token 86: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4054352641105652
    2. '(n' → logprob: -1.53043532371521
    3. '(k' → logprob: -2.78043532371521
    4. '(ent' → logprob: -3.40543532371521
    5. '():' → logprob: -3.90543532371521
    6. '(s' → logprob: -8.280435562133789
    7. '(def' → logprob: -8.530435562133789
    8. ' (' → logprob: -9.405435562133789
    9. '()' → logprob: -9.530435562133789
    10. '(l' → logprob: -9.530435562133789

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.281485836254433e-05
    2. ',k' → logprob: -9.375092506408691
    3. ' ,' → logprob: -12.875092506408691
    4. ',n' → logprob: -13.750092506408691
    5. ')' → logprob: -13.875092506408691
    6. 'k' → logprob: -14.000092506408691
    7. ',
' → logprob: -14.375092506408691
    8. '):' → logprob: -14.875092506408691
    9. ':' → logprob: -15.000092506408691
    10. 's' → logprob: -15.250092506408691

Token 88: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005249648820608854
    2. ' k' → logprob: -5.255249500274658
    3. '   ' → logprob: -12.005249977111816
    4. ' ' → logprob: -12.380249977111816
    5. ')' → logprob: -14.005249977111816
    6. 'n' → logprob: -14.630249977111816
    7. '  ' → logprob: -14.692749977111816
    8. ',' → logprob: -14.942749977111816
    9. 'def' → logprob: -14.942749977111816
    10. '```' → logprob: -15.067749977111816

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003368065692484379
    2. ',' → logprob: -5.753367900848389
    3. ')' → logprob: -9.253368377685547
    4. ':' → logprob: -9.878368377685547
    5. '):
' → logprob: -10.253368377685547
    6. ' ):' → logprob: -13.253368377685547
    7. '   ' → logprob: -13.503368377685547
    8. '=' → logprob: -13.753368377685547
    9. '():' → logprob: -13.878368377685547
    10. '):
' → logprob: -14.628368377685547

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1326584368944168
    2. ':' → logprob: -3.1326584815979004
    3. 'if' → logprob: -3.3826584815979004
    4. ' if' → logprob: -3.5076584815979004
    5. ' return' → logprob: -5.2576584815979
    6. 'return' → logprob: -5.5076584815979
    7. ':
' → logprob: -5.6326584815979
    8. '1' → logprob: -7.2576584815979
    9. '0' → logprob: -7.8826584815979
    10. ' ' → logprob: -8.007658004760742

Token 91: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6850094199180603
    2. ' if' → logprob: -1.060009479522705
    3. 'return' (adapté à ' return') → logprob: -3.060009479522705
    4. '   ' → logprob: -3.810009479522705
    5. ' return' → logprob: -3.810009479522705
    6. 'result' → logprob: -4.060009479522705
    7. '1' → logprob: -4.185009479522705
    8. ' result' → logprob: -4.810009479522705
    9. ' n' → logprob: -5.560009479522705
    10. 'n' → logprob: -5.685009479522705

Token 92: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42126742005348206
    2. ' n' → logprob: -1.4212673902511597
    3. '(n' → logprob: -3.671267509460449
    4. '1' → logprob: -3.921267509460449
    5. 'k' → logprob: -4.421267509460449
    6. ' (' → logprob: -4.546267509460449
    7. '(' → logprob: -5.046267509460449
    8. ' ' → logprob: -5.421267509460449
    9. 'pow' → logprob: -5.546267509460449
    10. '0' → logprob: -5.796267509460449

Token 93: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4811183214187622
    2. '<|end|>' → logprob: -1.1061183214187622
    3. '*' → logprob: -3.3561182022094727
    4. '<|end|>' → logprob: -5.106118202209473
    5. 'def' → logprob: -5.606118202209473
    6. '**' → logprob: -6.481118202209473
    7. '#' → logprob: -6.606118202209473
    8. ' +' → logprob: -6.731118202209473
    9. '%' → logprob: -7.606118202209473
    10. '```' → logprob: -7.731118202209473

Token 94: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16096381843090057
    2. '1' → logprob: -2.035963773727417
    3. ' k' → logprob: -4.285964012145996
    4. ' ' → logprob: -6.160964012145996
    5. ' (' → logprob: -7.285964012145996
    6. '(k' → logprob: -7.285964012145996
    7. '2' → logprob: -7.535964012145996
    8. '(' → logprob: -8.660964012145996
    9. '(n' → logprob: -10.160964012145996
    10. 'n' → logprob: -10.410964012145996

Token 95: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017580261453986168
    2. ' ' → logprob: -4.267580032348633
    3. '2' → logprob: -6.267580032348633
    4. '0' → logprob: -7.892580032348633
    5. 'k' → logprob: -8.017580032348633
    6. '(' → logprob: -8.267580032348633
    7. '3' → logprob: -9.142580032348633
    8. ' k' → logprob: -9.517580032348633
    9. '-' → logprob: -9.705080032348633
    10. ' (' → logprob: -9.892580032348633

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005838918150402606
    2. '2' → logprob: -8.37558364868164
    3. '0' → logprob: -8.75058364868164
    4. 'k' → logprob: -9.25058364868164
    5. ' ' → logprob: -10.12558364868164
    6. '(' → logprob: -11.00058364868164
    7. '-' → logprob: -11.12558364868164
    8. '3' → logprob: -11.62558364868164
    9. 'n' → logprob: -12.75058364868164
    10. '(-' → logprob: -13.06308364868164

Token 98: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6467093229293823
    2. ' k' → logprob: -2.021709442138672
    3. 'k' → logprob: -2.146709442138672
    4. ' ' → logprob: -2.771709442138672
    5. ' n' → logprob: -3.021709442138672
    6. ' (' → logprob: -3.146709442138672
    7. 'n' → logprob: -3.771709442138672
    8. '2' → logprob: -4.396709442138672
    9. '(' → logprob: -4.646709442138672
    10. 'min' → logprob: -4.771709442138672

Token 100: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9176868200302124
    2. '1' → logprob: -1.1676868200302124
    3. '(k' → logprob: -2.667686939239502
    4. '(n' → logprob: -3.042686939239502
    5. '2' → logprob: -3.167686939239502
    6. 'calcul' → logprob: -3.292686939239502
    7. 'min' → logprob: -3.542686939239502
    8. 'n' → logprob: -3.542686939239502
    9. '(' → logprob: -4.167686939239502
    10. 'sum' → logprob: -6.042686939239502

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020031634718179703
    2. '<|end|>' → logprob: -4.270031452178955
    3. '\n' → logprob: -6.270031452178955
    4. '+' → logprob: -6.770031452178955
    5. ')' → logprob: -7.395031452178955
    6. '

' → logprob: -7.395031452178955
    7. '*' → logprob: -7.645031452178955
    8. '(' → logprob: -8.270031929016113
    9. '<|end|>' → logprob: -8.645031929016113
    10. '```' → logprob: -9.145031929016113

Token 102: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3815639615058899
    2. '
' → logprob: -2.256563901901245
    3. '+' → logprob: -2.756563901901245
    4. '*' → logprob: -2.881563901901245
    5. 'def' → logprob: -3.756563901901245
    6. '<|end|>' → logprob: -4.006564140319824
    7. ')' → logprob: -4.131564140319824
    8. ' ' → logprob: -4.631564140319824
    9. '(
' → logprob: -4.756564140319824
    10. '#' → logprob: -5.131564140319824

Token 103: ' afficher' (ID: 146524)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14621137082576752
    2. ' calcul' → logprob: -2.2712113857269287
    3. 'main' → logprob: -4.14621114730835
    4. 'calcul' → logprob: -5.14621114730835
    5. ' test' → logprob: -6.14621114730835
    6. 'def' → logprob: -6.39621114730835
    7. ' def' → logprob: -6.39621114730835
    8. '__' → logprob: -6.52121114730835
    9. ' solution' → logprob: -6.64621114730835
    10. ' __' → logprob: -7.64621114730835

Token 104: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.10560257732868195
    2. '_' → logprob: -2.730602502822876
    3. '(' → logprob: -3.730602502822876
    4. '(result' → logprob: -4.730602741241455
    5. 'result' → logprob: -6.980602741241455
    6. '_r' → logprob: -7.855602741241455
    7. '("_' → logprob: -8.230602264404297
    8. '_res' → logprob: -9.105602264404297
    9. '_(' → logprob: -9.480602264404297
    10. '(_' → logprob: -9.605602264404297

Token 105: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00012821101699955761
    2. '(at' → logprob: -9.625127792358398
    3. '_at' → logprob: -9.875127792358398
    4. 'er' → logprob: -12.750127792358398
    5. 'ат' → logprob: -13.500127792358398
    6. 'tat' → logprob: -13.750127792358398
    7. '_' → logprob: -13.875127792358398
    8. ' at' → logprob: -14.125127792358398
    9. 'e' → logprob: -14.125127792358398
    10. '	at' → logprob: -14.500127792358398

Token 106: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.011927556246519089
    2. '(' → logprob: -5.136927604675293
    3. '():' → logprob: -5.261927604675293
    4. '(resultado' → logprob: -7.511927604675293
    5. '(results' → logprob: -9.511927604675293
    6. '(res' → logprob: -9.636927604675293
    7. '()' → logprob: -9.886927604675293
    8. '(n' → logprob: -10.761927604675293
    9. '(r' → logprob: -11.886927604675293
    10. ' (' → logprob: -11.886927604675293

Token 107: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.7697225252486533e-06
    2. ' at' → logprob: -13.375003814697266
    3. 'ats' → logprob: -13.750003814697266
    4. ')' → logprob: -15.000003814697266
    5. 'ат' → logprob: -15.250003814697266
    6. '   ' → logprob: -15.625003814697266
    7. '(at' → logprob: -15.750003814697266
    8. 'tat' → logprob: -16.250003814697266
    9. '_at' → logprob: -17.250003814697266
    10. '(result' → logprob: -17.500003814697266

Token 108: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00577520439401269
    2. '):
' → logprob: -5.255774974822998
    3. ')' → logprob: -7.630774974822998
    4. ',' → logprob: -10.755775451660156
    5. '):
' → logprob: -10.755775451660156
    6. ',result' → logprob: -12.380775451660156
    7. '   ' → logprob: -12.630775451660156
    8. '(result' → logprob: -13.005775451660156
    9. 'result' → logprob: -13.755775451660156
    10. ' ):' → logprob: -13.880775451660156

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046335890889167786
    2. ' print' → logprob: -3.2963359355926514
    3. 'print' → logprob: -4.796335697174072
    4. '```' → logprob: -15.67133617401123
    5. 'def' → logprob: -16.171335220336914
    6. '	print' → logprob: -17.671335220336914
    7. '   ' → logprob: -18.296335220336914
    8. '    ' → logprob: -19.421335220336914
    9. ' def' → logprob: -19.421335220336914
    10. '  ' → logprob: -20.171335220336914

Token 110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00409502349793911
    2. ' print' → logprob: -5.504095077514648
    3. '   ' → logprob: -11.004095077514648
    4. '```' → logprob: -18.50409507751465
    5. 'def' → logprob: -19.75409507751465
    6. 'pass' → logprob: -20.75409507751465
    7. '	print' → logprob: -20.87909507751465
    8. '  ' → logprob: -22.87909507751465
    9. 'Print' → logprob: -23.12909507751465
    10. ' ' → logprob: -23.12909507751465

Token 111: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005799580831080675
    2. '(' → logprob: -7.500579833984375
    3. 'result' → logprob: -10.625579833984375
    4. '()' → logprob: -13.875579833984375
    5. '(resultado' → logprob: -14.000579833984375
    6. '(f' → logprob: -14.875579833984375
    7. ' (' → logprob: -15.000579833984375
    8. '(res' → logprob: -15.875579833984375
    9. '=result' → logprob: -16.625579833984375
    10. '(
' → logprob: -17.125579833984375

Token 112: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0009202735964208841
    2. 't' → logprob: -7.000920295715332
    3. ')' → logprob: -13.125920295715332
    4. 'tat' → logprob: -13.375920295715332
    5. '_at' → logprob: -13.625920295715332
    6. 'al' → logprob: -13.625920295715332
    7. ' at' → logprob: -14.625920295715332
    8. 'result' → logprob: -14.750920295715332
    9. 'ат' → logprob: -14.875920295715332
    10. 'a' → logprob: -15.250920295715332

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -16.375
    4. ')`' → logprob: -18.625
    5. '))' → logprob: -19.375
    6. ')

' → logprob: -19.625
    7. '()' → logprob: -20.0
    8. '())' → logprob: -20.5
    9. '')' → logprob: -20.75
    10. '   ' → logprob: -20.875

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015100972959771752
    2. 'if' → logprob: -6.501510143280029
    3. 'ent' → logprob: -12.751509666442871
    4. '```' → logprob: -13.001509666442871
    5. 'for' → logprob: -13.626509666442871
    6. 'n' → logprob: -14.001509666442871
    7. '#' → logprob: -15.001509666442871
    8. ' def' → logprob: -16.501510620117188
    9. 'while' → logprob: -16.751510620117188
    10. '
' → logprob: -16.876510620117188

Token 115: ' traiter' (ID: 105852)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8587462306022644
    2. 'def' → logprob: -0.9837462306022644
    3. ' def' → logprob: -2.233746290206909
    4. 'main' → logprob: -2.358746290206909
    5. ' run' → logprob: -7.73374605178833
    6. 'run' → logprob: -9.983746528625488
    7. '__' → logprob: -10.233746528625488
    8. '
' → logprob: -10.358746528625488
    9. '_main' → logprob: -10.358746528625488
    10. ' principale' → logprob: -10.983746528625488

Token 116: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.034699928015470505
    2. '_ent' → logprob: -3.6596999168395996
    3. '()' → logprob: -5.7846999168396
    4. '_l' → logprob: -6.1596999168396
    5. '(' → logprob: -7.1596999168396
    6. '_code' → logprob: -7.7846999168396
    7. '(ent' → logprob: -7.7846999168396
    8. '_input' → logprob: -8.409700393676758
    9. '_s' → logprob: -8.784700393676758
    10. '_d' → logprob: -9.034700393676758

Token 117: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.014220628887414932
    2. 'ode' → logprob: -5.139220714569092
    3. 'om' → logprob: -6.139220714569092
    4. 'on' → logprob: -6.514220714569092
    5. 'od' → logprob: -6.764220714569092
    6. 'h' → logprob: -7.889220714569092
    7. ' as' → logprob: -7.889220714569092
    8. 'al' → logprob: -8.639220237731934
    9. 'asie' → logprob: -8.639220237731934
    10. 'asque' → logprob: -8.639220237731934

Token 118: '_k' (ID: 11637)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008048165589571
    2. '():
' → logprob: -5.133048057556152
    3. 's' → logprob: -7.383048057556152
    4. '()' → logprob: -7.508048057556152
    5. '_' → logprob: -7.758048057556152
    6. '_de' → logprob: -8.258048057556152
    7. ':' → logprob: -9.508048057556152
    8. '(' → logprob: -9.758048057556152
    9. 'def' → logprob: -10.633048057556152
    10. '(n' → logprob: -10.633048057556152

Token 119: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.18036849796772003
    2. '_est' → logprob: -1.9303685426712036
    3. 'est' → logprob: -4.680368423461914
    4. '_' → logprob: -5.305368423461914
    5. 'un' → logprob: -6.305368423461914
    6. '(k' → logprob: -6.305368423461914
    7. '(est' → logprob: -7.555368423461914
    8. '_uni' → logprob: -8.430368423461914
    9. '(un' → logprob: -8.680368423461914
    10. '1' → logprob: -8.680368423461914

Token 120: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1652718186378479
    2. '(k' → logprob: -1.9152717590332031
    3. '(' → logprob: -5.915271759033203
    4. '():
' → logprob: -6.665271759033203
    5. '()' → logprob: -7.165271759033203
    6. ' ():' → logprob: -8.915271759033203
    7. ':' → logprob: -9.665271759033203
    8. '(n' → logprob: -10.165271759033203
    9. '():
' → logprob: -11.790271759033203
    10. ' (' → logprob: -12.040271759033203

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002554615493863821
    2. 'print' → logprob: -6.502554416656494
    3. 'def' → logprob: -7.627554416656494
    4. 'pass' → logprob: -7.877554416656494
    5. 'return' → logprob: -9.252554893493652
    6. ' print' → logprob: -10.377554893493652
    7. ' pass' → logprob: -10.627554893493652
    8. ' return' → logprob: -11.877554893493652
    9. 'result' → logprob: -11.877554893493652
    10. '
' → logprob: -12.377554893493652

Token 122: ' afficher' (ID: 146524)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.32812628149986267
    2. 'print' → logprob: -1.578126311302185
    3. 'def' → logprob: -3.2031261920928955
    4. '   ' → logprob: -4.078126430511475
    5. 'return' → logprob: -4.203126430511475
    6. ' pass' → logprob: -7.578126430511475
    7. 'n' → logprob: -8.578125953674316
    8. 'result' → logprob: -9.953125953674316
    9. '```' → logprob: -10.578125953674316
    10. ' print' → logprob: -10.828125953674316

Token 123: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.00020473242329899222
    2. 'result' → logprob: -8.500205039978027
    3. '_' → logprob: -15.250205039978027
    4. ' resultat' → logprob: -15.500205039978027
    5. '(result' → logprob: -15.750205039978027
    6. 's' → logprob: -15.875205039978027
    7. '_RESULT' → logprob: -16.37520408630371
    8. '_res' → logprob: -16.37520408630371
    9. 'Result' → logprob: -16.50020408630371
    10. '(_' → logprob: -16.75020408630371

Token 124: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -6.456358823925257e-05
    2. '_result' → logprob: -10.750064849853516
    3. 'result' → logprob: -11.250064849853516
    4. 's' → logprob: -12.125064849853516
    5. 't' → logprob: -12.375064849853516
    6. 'ats' → logprob: -12.375064849853516
    7. '_at' → logprob: -12.750064849853516
    8. 'sat' → logprob: -12.875064849853516
    9. 'er' → logprob: -13.000064849853516
    10. 'a' → logprob: -13.125064849853516

Token 125: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017481597024016082
    2. '(cal' → logprob: -9.500174522399902
    3. '(k' → logprob: -9.625174522399902
    4. '1' → logprob: -11.625174522399902
    5. '("' → logprob: -12.250174522399902
    6. '(ob' → logprob: -12.500174522399902
    7. '(-' → logprob: -12.625174522399902
    8. '('' → logprob: -12.750174522399902
    9. '0' → logprob: -13.250174522399902
    10. '((' → logprob: -13.375174522399902

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012216821312904358
    2. '1' → logprob: -4.512217044830322
    3. '"' → logprob: -7.012217044830322
    4. '42' → logprob: -8.887216567993164
    5. '-' → logprob: -9.137216567993164
    6. ' ' → logprob: -12.262216567993164
    7. ''' → logprob: -12.387216567993164
    8. '(' → logprob: -12.637216567993164
    9. '2' → logprob: -12.887216567993164
    10. 'k' → logprob: -13.762216567993164

Token 127: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ')
' → logprob: -13.12500286102295
    3. ')

' → logprob: -15.25000286102295
    4. ' )' → logprob: -15.37500286102295
    5. '))' → logprob: -16.125001907348633
    6. '())' → logprob: -17.625001907348633
    7. ')`' → logprob: -18.000001907348633
    8. '()' → logprob: -18.625001907348633
    9. 'def' → logprob: -18.750001907348633
    10. '")' → logprob: -18.875001907348633

Token 128: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -16.875
    3. '<|end|>' → logprob: -18.125
    4. '#' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. 'if' → logprob: -19.75
    7. '    
' → logprob: -20.125
    8. '
' → logprob: -20.5
    9. '  
' → logprob: -20.625
    10. '	def' → logprob: -21.25

Token 129: ' traiter' (ID: 105852)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.7705846428871155
    2. ' traiter' → logprob: -0.8955846428871155
    3. 'def' → logprob: -2.5205845832824707
    4. 'main' → logprob: -3.2705845832824707
    5. ' main' → logprob: -6.020584583282471
    6. 'tra' → logprob: -6.270584583282471
    7. 'calcul' → logprob: -6.395584583282471
    8. 'principal' → logprob: -6.520584583282471
    9. ' def' → logprob: -6.770584583282471
    10. ' traitement' → logprob: -7.645584583282471

Token 130: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0015825895825400949
    2. '_' → logprob: -7.251582622528076
    3. '_k' → logprob: -7.626582622528076
    4. '_case' → logprob: -8.626582145690918
    5. '_cases' → logprob: -10.251582145690918
    6. '_le' → logprob: -10.876582145690918
    7. '_n' → logprob: -11.126582145690918
    8. '_code' → logprob: -11.126582145690918
    9. '(_' → logprob: -11.501582145690918
    10. '_cod' → logprob: -11.751582145690918

Token 131: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.002333782147616148
    2. 'cas' → logprob: -7.002333641052246
    3. 'ase' → logprob: -8.252333641052246
    4. '_c' → logprob: -8.627333641052246
    5. '_' → logprob: -8.752333641052246
    6. 'od' → logprob: -9.377333641052246
    7. 'ass' → logprob: -9.752333641052246
    8. '_as' → logprob: -9.877333641052246
    9. 'c' → logprob: -10.002333641052246
    10. 'on' → logprob: -10.377333641052246

Token 132: '_general' (ID: 93055)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0129744503647089
    2. 'k' → logprob: -5.012974262237549
    3. '_general' → logprob: -6.262974262237549
    4. '_normal' → logprob: -6.637974262237549
    5. '(k' → logprob: -6.887974262237549
    6. '_n' → logprob: -7.387974262237549
    7. '_special' → logprob: -8.637974739074707
    8. '_' → logprob: -8.762974739074707
    9. '_un' → logprob: -9.012974739074707
    10. '_non' → logprob: -9.137974739074707

Token 133: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04084700345993042
    2. '():' → logprob: -3.290847063064575
    3. '(' → logprob: -5.915846824645996
    4. '():
' → logprob: -9.665846824645996
    5. ' (' → logprob: -10.915846824645996
    6. '(
' → logprob: -12.040846824645996
    7. '()' → logprob: -12.165846824645996
    8. '(def' → logprob: -13.040846824645996
    9. ' ():' → logprob: -13.415846824645996
    10. '   ' → logprob: -13.540846824645996

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010568885772954673
    2. ',k' → logprob: -9.375105857849121
    3. ' ,' → logprob: -10.875105857849121
    4. ',n' → logprob: -13.875105857849121
    5. 'k' → logprob: -14.750105857849121
    6. ',
' → logprob: -15.000105857849121
    7. '   ' → logprob: -16.375104904174805
    8. '‌,' → logprob: -16.500104904174805
    9. 's' → logprob: -17.125104904174805
    10. 'def' → logprob: -17.875104904174805

Token 135: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005239445250481367
    2. ' k' → logprob: -5.255239486694336
    3. '   ' → logprob: -12.255239486694336
    4. ' ' → logprob: -15.005239486694336
    5. '  ' → logprob: -16.505239486694336
    6. ',' → logprob: -16.505239486694336
    7. 'def' → logprob: -16.505239486694336
    8. '	k' → logprob: -16.630239486694336
    9. '    ' → logprob: -16.880239486694336
    10. '
' → logprob: -17.255239486694336

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015448570484295487
    2. '):
' → logprob: -6.501544952392578
    3. ')' → logprob: -11.376544952392578
    4. ',' → logprob: -11.501544952392578
    5. '   ' → logprob: -11.501544952392578
    6. ':' → logprob: -11.626544952392578
    7. ' ):' → logprob: -13.876544952392578
    8. '):
' → logprob: -14.751544952392578
    9. 'def' → logprob: -15.251544952392578
    10. '():' → logprob: -15.626544952392578

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009691067971289158
    2. 'result' → logprob: -7.375968933105469
    3. ' result' → logprob: -9.000968933105469
    4. ' resultat' → logprob: -9.250968933105469
    5. 'res' → logprob: -10.625968933105469
    6. ' afficher' → logprob: -10.875968933105469
    7. 'aff' → logprob: -11.000968933105469
    8. '   ' → logprob: -11.000968933105469
    9. ' res' → logprob: -11.375968933105469
    10. '```' → logprob: -12.125968933105469

Token 138: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.858982264995575
    2. 'result' → logprob: -0.858982264995575
    3. 'aff' → logprob: -1.9839823246002197
    4. 'res' (adapté à ' res') → logprob: -5.608982086181641
    5. ' resultat' → logprob: -5.858982086181641
    6. ' result' → logprob: -6.108982086181641
    7. ' afficher' → logprob: -6.358982086181641
    8. 'if' → logprob: -6.483982086181641
    9. 'print' → logprob: -7.108982086181641
    10. 'r' → logprob: -7.608982086181641

Token 139: ' =' (ID: 314)
  Prédit: 'ultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultat' → logprob: -0.0027419927064329386
    2. 'ult' → logprob: -6.377741813659668
    3. ' =' → logprob: -7.002741813659668
    4. 'utat' → logprob: -9.752741813659668
    5. '=' → logprob: -9.877741813659668
    6. 'ulat' → logprob: -11.752741813659668
    7. '   ' → logprob: -12.377741813659668
    8. 's' → logprob: -12.377741813659668
    9. 'tat' → logprob: -12.877741813659668
    10. 't' → logprob: -14.252741813659668

Token 140: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.16264359652996063
    2. ' calcul' → logprob: -2.7876436710357666
    3. ' n' → logprob: -2.9126436710357666
    4. 'n' → logprob: -3.5376436710357666
    5. '(n' → logprob: -6.4126434326171875
    6. 'k' → logprob: -6.7876434326171875
    7. ' k' → logprob: -7.1626434326171875
    8. ' ' → logprob: -7.5376434326171875
    9. 'max' → logprob: -8.287643432617188
    10. ' (' → logprob: -8.662643432617188

Token 141: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.650518920039758e-06
    2. 'uler' → logprob: -13.125003814697266
    3. 'uer' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '#' → logprob: -15.625003814697266
    6. 'ater' → logprob: -15.750003814697266
    7. '```' → logprob: -15.750003814697266
    8. '[' → logprob: -16.625003814697266
    9. '{' → logprob: -16.875003814697266
    10. 'aler' → logprob: -16.875003814697266

Token 142: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0005159787251614034
    2. 'result' → logprob: -7.750515937805176
    3. 'er' → logprob: -9.500515937805176
    4. 'ateur' → logprob: -13.250515937805176
    5. ' resultat' → logprob: -13.375515937805176
    6. 's' → logprob: -13.625515937805176
    7. 't' → logprob: -13.750515937805176
    8. '_res' → logprob: -13.750515937805176
    9. 'a' → logprob: -14.125515937805176
    10. '_' → logprob: -14.250515937805176

Token 143: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.128163257315464e-07
    2. 't' → logprob: -15.75
    3. 'rat' → logprob: -16.625
    4. 'ат' → logprob: -16.875
    5. 'result' → logprob: -17.0
    6. 'tat' → logprob: -17.5
    7. 'a' → logprob: -18.375
    8. 'atat' → logprob: -18.375
    9. '_at' → logprob: -18.75
    10. '_result' → logprob: -18.875

Token 144: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. ' (' → logprob: -15.000003814697266
    4. '(
' → logprob: -17.500003814697266
    5. 'n' → logprob: -17.750003814697266
    6. '((' → logprob: -20.250003814697266
    7. '```' → logprob: -21.125003814697266
    8. '
' → logprob: -21.750003814697266
    9. 'def' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.000003814697266

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000536828360054642
    2. ',k' → logprob: -7.625536918640137
    3. ' ,' → logprob: -10.000536918640137
    4. '   ' → logprob: -13.625536918640137
    5. ',
' → logprob: -13.750536918640137
    6. ',n' → logprob: -14.125536918640137
    7. 'k' → logprob: -15.500536918640137
    8. ')' → logprob: -17.00053596496582
    9. ' k' → logprob: -18.12553596496582
    10. '  ' → logprob: -18.12553596496582

Token 146: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0017027945723384619
    2. ' k' → logprob: -6.376702785491943
    3. '   ' → logprob: -14.751703262329102
    4. ')' → logprob: -16.3767032623291
    5. ' ' → logprob: -17.1267032623291
    6. ' ' → logprob: -17.2517032623291
    7. '
' → logprob: -18.2517032623291
    8. '	k' → logprob: -18.6267032623291
    9. '    ' → logprob: -18.7517032623291
    10. '  ' → logprob: -18.8767032623291

Token 147: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.474132239818573
    2. ')' → logprob: -0.974132239818573
    3. ')
' → logprob: -9.974132537841797
    4. '   ' → logprob: -12.099132537841797
    5. ')

' → logprob: -13.224132537841797
    6. ' )
' → logprob: -13.974132537841797
    7. ' )' → logprob: -15.724132537841797
    8. ' ' → logprob: -15.974132537841797
    9. ')`
' → logprob: -17.599132537841797
    10. '-' → logprob: -17.849132537841797

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009325406281277537
    2. 'aff' → logprob: -7.125932693481445
    3. ' afficher' → logprob: -9.250932693481445
    4. '    
' → logprob: -11.125932693481445
    5. '
' → logprob: -11.500932693481445
    6. '   ' → logprob: -12.875932693481445
    7. 'Afficher' → logprob: -13.375932693481445
    8. '_aff' → logprob: -14.125932693481445
    9. '  ' → logprob: -14.750932693481445
    10. '       ' → logprob: -15.000932693481445

Token 149: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.008890265598893166
    2. '   ' → logprob: -4.758890151977539
    3. ' afficher' → logprob: -8.258890151977539
    4. '  ' → logprob: -11.383890151977539
    5. 'Afficher' → logprob: -13.133890151977539
    6. '
' → logprob: -13.508890151977539
    7. ' ' → logprob: -14.258890151977539
    8. 'af' → logprob: -14.633890151977539
    9. 'if' → logprob: -15.758890151977539
    10. '```' → logprob: -15.758890151977539

Token 150: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.3902033970225602e-05
    2. 'result' → logprob: -11.375014305114746
    3. '_' → logprob: -13.500014305114746
    4. '_res' → logprob: -14.250014305114746
    5. '(result' → logprob: -16.00001335144043
    6. '_r' → logprob: -16.25001335144043
    7. '_RESULT' → logprob: -17.12501335144043
    8. '_Result' → logprob: -17.37501335144043
    9. ' resultat' → logprob: -18.87501335144043
    10. 's' → logprob: -18.87501335144043

Token 151: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0005894906935282052
    2. '_result' → logprob: -7.625589370727539
    3. 'result' → logprob: -9.875589370727539
    4. '_at' → logprob: -11.250589370727539
    5. 't' → logprob: -11.250589370727539
    6. 'ation' → logprob: -12.250589370727539
    7. '_res' → logprob: -12.500589370727539
    8. 'ats' → logprob: -12.750589370727539
    9. 's' → logprob: -12.875589370727539
    10. '(result' → logprob: -13.125589370727539

Token 152: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. ' (' → logprob: -14.625262260437012
    4. '(result' → logprob: -16.375261306762695
    5. '(
' → logprob: -17.750261306762695
    6. '(results' → logprob: -18.375261306762695
    7. '(re' → logprob: -18.375261306762695
    8. '(r' → logprob: -19.000261306762695
    9. '(rest' → logprob: -19.000261306762695
    10. '(ret' → logprob: -19.125261306762695

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -14.875
    3. ' )' → logprob: -16.875
    4. ')

' → logprob: -18.5
    5. '))' → logprob: -19.625
    6. ')`' → logprob: -20.375
    7. '   ' → logprob: -20.625
    8. '}' → logprob: -21.125
    9. '')' → logprob: -21.375
    10. ')}' → logprob: -21.5

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000217006730963476
    2. 'ent' → logprob: -8.50021743774414
    3. 'if' → logprob: -11.25021743774414
    4. '```' → logprob: -15.87521743774414
    5. 'entrée' → logprob: -16.25021743774414
    6. 'for' → logprob: -16.50021743774414
    7. 'while' → logprob: -16.62521743774414
    8. 'entr' → logprob: -16.62521743774414
    9. 'n' → logprob: -16.75021743774414
    10. '#' → logprob: -18.00021743774414

Token 155: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16707365214824677
    2. ' traiter' → logprob: -2.6670737266540527
    3. 'main' → logprob: -2.7920737266540527
    4. 'def' → logprob: -4.417073726654053
    5. ' def' → logprob: -4.542073726654053
    6. ' traitement' → logprob: -9.042073249816895
    7. 'trait' → logprob: -9.417073249816895
    8. ' definir' → logprob: -10.167073249816895
    9. ' principale' → logprob: -10.417073249816895
    10. ' principal' → logprob: -10.917073249816895

Token 156: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.633853652398102e-05
    2. '():
' → logprob: -10.625056266784668
    3. '()' → logprob: -11.000056266784668
    4. ' ():' → logprob: -11.625056266784668
    5. '(' → logprob: -12.000056266784668
    6. '():
' → logprob: -16.500057220458984
    7. '(:' → logprob: -16.875057220458984
    8. '(":' → logprob: -17.250057220458984
    9. '_' → logprob: -17.875057220458984
    10. '():

' → logprob: -18.125057220458984

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027356047183275223
    2. 'ent' → logprob: -3.6523561477661133
    3. ' entree' → logprob: -7.152356147766113
    4. '	ent' → logprob: -8.777356147766113
    5. ' ent' → logprob: -10.527356147766113
    6. 'entrée' → logprob: -10.527356147766113
    7. '    
' → logprob: -10.902356147766113
    8. '
' → logprob: -11.902356147766113
    9. ' ' → logprob: -12.152356147766113
    10. '  ' → logprob: -12.152356147766113

Token 158: ' entree' (ID: 156822)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.01238331850618124
    2. ' entree' → logprob: -5.012383460998535
    3. '   ' → logprob: -5.262383460998535
    4. 'entrée' → logprob: -8.262383460998535
    5. ' ent' → logprob: -9.262383460998535
    6. 'entr' → logprob: -9.762383460998535
    7. '	ent' → logprob: -11.387383460998535
    8. 'import' → logprob: -11.637383460998535
    9. ' ' → logprob: -11.762383460998535
    10. ' entrée' → logprob: -11.887383460998535

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02979366108775139
    2. '=' → logprob: -3.5297937393188477
    3. '   ' → logprob: -10.904793739318848
    4. '_' → logprob: -11.029793739318848
    5. '()' → logprob: -12.529793739318848
    6. ' ' → logprob: -13.404793739318848
    7. ' ' → logprob: -14.154793739318848
    8. '	' → logprob: -14.404793739318848
    9. 's' → logprob: -14.529793739318848
    10. '  ' → logprob: -14.904793739318848

Token 160: ' lire' (ID: 46082)
  Prédit: ' lire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.014333908446133137
    2. 'l' → logprob: -4.264333724975586
    3. ' input' → logprob: -9.139333724975586
    4. 'input' → logprob: -10.264333724975586
    5. 'Lire' → logprob: -11.389333724975586
    6. '   ' → logprob: -12.014333724975586
    7. ' ' → logprob: -12.514333724975586
    8. ' l' → logprob: -12.639333724975586
    9. '  ' → logprob: -14.139333724975586
    10. ' Lire' → logprob: -14.514333724975586

Token 161: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.002561745699495077
    2. '_' → logprob: -6.252561569213867
    3. 'ent' → logprob: -7.377561569213867
    4. '()' → logprob: -13.127561569213867
    5. '_entropy' → logprob: -13.377561569213867
    6. '_ENT' → logprob: -13.752561569213867
    7. '(ent' → logprob: -14.252561569213867
    8. 'e' → logprob: -14.627561569213867
    9. 'Ent' → logprob: -14.752561569213867
    10. '```' → logprob: -15.127561569213867

Token 162: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0005319446790963411
    2. 'ee' → logprob: -8.250532150268555
    3. 'tee' → logprob: -8.750532150268555
    4. 'ete' → logprob: -9.875532150268555
    5. 're' → logprob: -10.875532150268555
    6. 'rée' → logprob: -11.500532150268555
    7. 'r' → logprob: -11.750532150268555
    8. 'e' → logprob: -12.375532150268555
    9. ' ree' → logprob: -12.500532150268555
    10. 'ote' → logprob: -12.500532150268555

Token 163: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2870520353317261
    2. '
' → logprob: -1.412052035331726
    3. '    
' → logprob: -5.412052154541016
    4. 'n' → logprob: -7.162052154541016
    5. '  
' → logprob: -8.287052154541016
    6. '
' → logprob: -9.412052154541016
    7. 'def' → logprob: -9.662052154541016
    8. '   
' → logprob: -9.787052154541016
    9. '<|end|>' → logprob: -9.787052154541016
    10. '```' → logprob: -10.287052154541016

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02816673554480076
    2. '
' → logprob: -4.028166770935059
    3. '<|end|>' → logprob: -5.278166770935059
    4. 'n' → logprob: -6.278166770935059
    5. '    
' → logprob: -6.403166770935059
    6. ' n' → logprob: -7.528166770935059
    7. '<|end|>' → logprob: -8.778166770935059
    8. 'def' → logprob: -8.903166770935059
    9. '  ' → logprob: -9.028166770935059
    10. '  
' → logprob: -9.153166770935059

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00024335073248948902
    2. '   ' → logprob: -8.375243186950684
    3. 'k' → logprob: -11.875243186950684
    4. ' n' → logprob: -12.250243186950684
    5. 'if' → logprob: -14.625243186950684
    6. '```' → logprob: -15.125243186950684
    7. 'def' → logprob: -15.875243186950684
    8. '  ' → logprob: -17.250244140625
    9. ' ' → logprob: -17.500244140625
    10. '    
' → logprob: -17.750244140625

Token 166: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055535778403282166
    2. ' =' → logprob: -2.9305357933044434
    3. '=' → logprob: -7.430535793304443
    4. ' ,' → logprob: -10.305535316467285
    5. ',k' → logprob: -10.805535316467285
    6. ' ' → logprob: -12.805535316467285
    7. '   ' → logprob: -12.930535316467285
    8. 'k' → logprob: -15.180535316467285
    9. ',n' → logprob: -15.305535316467285
    10. ')' → logprob: -15.930535316467285

Token 167: ' obtenir' (ID: 54423)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0005189551156945527
    2. ' obtenir' → logprob: -7.625518798828125
    3. 'obt' → logprob: -11.125518798828125
    4. '   ' → logprob: -11.375518798828125
    5. '  ' → logprob: -13.125518798828125
    6. ' ob' → logprob: -13.875518798828125
    7. '	ob' → logprob: -14.375518798828125
    8. ' ' → logprob: -14.750518798828125
    9. '    ' → logprob: -15.625518798828125
    10. '_ob' → logprob: -16.125518798828125

Token 168: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.127333340875339e-06
    2. '_k' → logprob: -12.625003814697266
    3. 'n' → logprob: -14.500003814697266
    4. '(n' → logprob: -15.875003814697266
    5. '_' → logprob: -16.875003814697266
    6. 'ent' → logprob: -20.750003814697266
    7. '_ent' → logprob: -20.750003814697266
    8. '_t' → logprob: -20.875003814697266
    9. 'k' → logprob: -21.000003814697266
    10. 's' → logprob: -21.000003814697266

Token 169: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -1.8624639324116288e-06
    2. 'ent' → logprob: -13.250001907348633
    3. '(' → logprob: -17.125001907348633
    4. '(en' → logprob: -19.000001907348633
    5. ' (' → logprob: -19.250001907348633
    6. '(entry' → logprob: -19.750001907348633
    7. '	ent' → logprob: -21.125001907348633
    8. '(e' → logprob: -21.125001907348633
    9. '(enc' → logprob: -21.375001907348633
    10. '()' → logprob: -21.875001907348633

Token 170: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0010862821945920587
    2. 'ee' → logprob: -7.376086235046387
    3. 're' → logprob: -7.751086235046387
    4. 'e' → logprob: -11.001086235046387
    5. 'rée' → logprob: -12.251086235046387
    6. ' ree' → logprob: -13.251086235046387
    7. 'ée' → logprob: -13.376086235046387
    8. '1' → logprob: -13.876086235046387
    9. 'reet' → logprob: -14.751086235046387
    10. 'rie' → logprob: -15.251086235046387

Token 171: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07899399846792221
    2. ')' → logprob: -2.578994035720825
    3. '   ' → logprob: -9.203993797302246
    4. ')
' → logprob: -12.703993797302246
    5. ' )
' → logprob: -15.453993797302246
    6. ')

' → logprob: -15.953993797302246
    7. ' ' → logprob: -16.328994750976562
    8. '),' → logprob: -17.953994750976562
    9. '()
' → logprob: -17.953994750976562
    10. '())
' → logprob: -18.328994750976562

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013572083844337612
    2. 'k' → logprob: -9.25013542175293
    3. '    
' → logprob: -10.75013542175293
    4. '
' → logprob: -11.50013542175293
    5. ' k' → logprob: -12.25013542175293
    6. '	k' → logprob: -13.62513542175293
    7. ',' → logprob: -15.00013542175293
    8. 'n' → logprob: -15.00013542175293
    9. ' ' → logprob: -15.37513542175293
    10. '    ' → logprob: -15.50013542175293

Token 173: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.00010318557906430215
    2. '   ' → logprob: -9.250102996826172
    3. ' k' → logprob: -11.875102996826172
    4. '	k' → logprob: -17.625102996826172
    5. '  ' → logprob: -19.375102996826172
    6. '
' → logprob: -20.750102996826172
    7. ' ' → logprob: -21.000102996826172
    8. '_k' → logprob: -21.375102996826172
    9. '    
' → logprob: -21.625102996826172
    10. '```' → logprob: -22.125102996826172

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234832875430584
    2. '=' → logprob: -5.255234718322754
    3. ',' → logprob: -14.505234718322754
    4. ' ' → logprob: -15.130234718322754
    5. '   ' → logprob: -15.880234718322754
    6. ' ' → logprob: -16.63023567199707
    7. '_' → logprob: -17.25523567199707
    8. ')' → logprob: -18.00523567199707
    9. ' ,' → logprob: -19.13023567199707
    10. '<|end|>' → logprob: -19.13023567199707

Token 175: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.4741573929786682
    2. 'ob' → logprob: -0.9741573929786682
    3. ' ob' → logprob: -10.724157333374023
    4. ' obter' → logprob: -11.724157333374023
    5. ''obtenir' → logprob: -11.724157333374023
    6. '   ' → logprob: -11.974157333374023
    7. 'obt' → logprob: -11.974157333374023
    8. ' obt' → logprob: -12.349157333374023
    9. '_ob' → logprob: -12.474157333374023
    10. ' ' → logprob: -12.724157333374023

Token 176: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.9361264946837764e-07
    2. '_n' → logprob: -15.875
    3. 'k' → logprob: -17.375
    4. '_' → logprob: -18.75
    5. '_ent' → logprob: -20.0
    6. '_K' → logprob: -20.625
    7. '_x' → logprob: -21.0
    8. '_c' → logprob: -21.0
    9. '(ent' → logprob: -21.25
    10. '(k' → logprob: -22.25

Token 177: '(ent' (ID: 112928)
  Prédit: '(ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ent' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -15.125000953674316
    3. 'ent' → logprob: -15.625000953674316
    4. '(' → logprob: -16.5
    5. '(en' → logprob: -17.0
    6. '	ent' → logprob: -18.5
    7. '_ent' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. '(e' → logprob: -19.75
    10. '(enc' → logprob: -19.75

Token 178: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -4.024604277219623e-05
    2. 'ee' → logprob: -10.750040054321289
    3. 're' → logprob: -11.625040054321289
    4. 'ent' → logprob: -12.375040054321289
    5. 'ée' → logprob: -13.375040054321289
    6. 'rée' → logprob: -14.000040054321289
    7. 'reet' → logprob: -14.250040054321289
    8. ')' → logprob: -14.375040054321289
    9. 'ence' → logprob: -14.375040054321289
    10. '1' → logprob: -15.250040054321289

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03023555316030979
    2. ')
' → logprob: -3.530235528945923
    3. '   ' → logprob: -7.655235767364502
    4. ')
' → logprob: -12.905235290527344
    5. ')

' → logprob: -13.030235290527344
    6. '()' → logprob: -13.155235290527344
    7. ' )' → logprob: -13.280235290527344
    8. '())' → logprob: -14.030235290527344
    9. ' ' → logprob: -14.905235290527344
    10. '
' → logprob: -15.155235290527344

Token 180: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5800173878669739
    2. '   ' → logprob: -0.8300173878669739
    3. 'if' → logprob: -6.080017566680908
    4. '    
' → logprob: -6.955017566680908
    5. ' if' → logprob: -7.580017566680908
    6. '<|end|>' → logprob: -9.08001708984375
    7. '```' → logprob: -9.45501708984375
    8. '  
' → logprob: -9.58001708984375
    9. '	if' → logprob: -11.08001708984375
    10. '   
' → logprob: -11.95501708984375

Token 181: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001038883114233613
    2. '   ' → logprob: -7.001039028167725
    3. ' if' → logprob: -9.001038551330566
    4. '```' → logprob: -12.501038551330566
    5. '	if' → logprob: -14.751038551330566
    6. '
' → logprob: -16.501039505004883
    7. '    
' → logprob: -17.626039505004883
    8. '``' → logprob: -17.876039505004883
    9. 'ifs' → logprob: -19.001039505004883
    10. ' ' → logprob: -19.001039505004883

Token 182: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.001038883114233613
    2. 'k' → logprob: -6.876039028167725
    3. ' not' → logprob: -13.376038551330566
    4. ' ' → logprob: -13.501038551330566
    5. '   ' → logprob: -14.001038551330566
    6. '(k' → logprob: -14.126038551330566
    7. ' ' → logprob: -14.251038551330566
    8. '_k' → logprob: -15.001038551330566
    9. '	k' → logprob: -15.501038551330566
    10. 'not' → logprob: -16.501039505004883

Token 183: '_est' (ID: 50330)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008790534920990467
    2. '==' → logprob: -4.758790493011475
    3. ' <=' → logprob: -9.008790969848633
    4. ')' → logprob: -11.383790969848633
    5. '_' → logprob: -11.508790969848633
    6. ' ' → logprob: -11.633790969848633
    7. ' !=' → logprob: -12.258790969848633
    8. ' ' → logprob: -12.508790969848633
    9. ' <' → logprob: -12.883790969848633
    10. ' >' → logprob: -13.008790969848633

Token 184: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -5.6934557505883276e-05
    2. 'un' → logprob: -9.875057220458984
    3. '(k' → logprob: -13.250057220458984
    4. '(' → logprob: -13.500057220458984
    5. ' un' → logprob: -14.500057220458984
    6. '(un' → logprob: -14.625057220458984
    7. 'Un' → logprob: -15.125057220458984
    8. '_' → logprob: -15.250057220458984
    9. '1' → logprob: -15.250057220458984
    10. '_UN' → logprob: -15.875057220458984

Token 185: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.625036239624023
    3. ' (' → logprob: -11.375036239624023
    4. 'k' → logprob: -17.375036239624023
    5. '(n' → logprob: -18.250036239624023
    6. '(s' → logprob: -18.250036239624023
    7. '(
' → logprob: -19.125036239624023
    8. ')' → logprob: -19.250036239624023
    9. '(K' → logprob: -19.500036239624023
    10. '((' → logprob: -19.625036239624023

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01421545259654522
    2. '):
' → logprob: -4.264215469360352
    3. ':' → logprob: -10.014215469360352
    4. '():' → logprob: -12.514215469360352
    5. ')' → logprob: -13.514215469360352
    6. ' ):' → logprob: -13.889215469360352
    7. '   ' → logprob: -14.264215469360352
    8. '):
' → logprob: -15.264215469360352
    9. '):

' → logprob: -15.514215469360352
    10. '():
' → logprob: -16.01421546936035

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020776940509676933
    2. ':' → logprob: -6.877077579498291
    3. '        
' → logprob: -7.502077579498291
    4. ':
' → logprob: -8.37707805633545
    5. '
' → logprob: -9.37707805633545
    6. '   ' → logprob: -10.25207805633545
    7. '```' → logprob: -10.62707805633545
    8. '    
' → logprob: -11.12707805633545
    9. '<|end|>' → logprob: -11.12707805633545
    10. '():
' → logprob: -11.62707805633545

Token 188: ' traiter' (ID: 105852)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06629082560539246
    2. ' traiter' → logprob: -3.066290855407715
    3. 'trait' → logprob: -4.191290855407715
    4. '   ' → logprob: -6.441290855407715
    5. '        
' → logprob: -7.816290855407715
    6. '
' → logprob: -8.816290855407715
    7. ' trait' → logprob: -9.816290855407715
    8. 'tra' → logprob: -9.816290855407715
    9. ' traite' → logprob: -10.441290855407715
    10. '\t' → logprob: -10.816290855407715

Token 189: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. 'cas' → logprob: -15.250000953674316
    4. '\' → logprob: -18.0
    5. 'Cas' → logprob: -18.875
    6. 's' → logprob: -19.0
    7. ' cas' → logprob: -19.625
    8. ' _' → logprob: -19.75
    9. '   ' → logprob: -20.125
    10. 'def' → logprob: -20.375

Token 190: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0008850149461068213
    2. 'cas' → logprob: -7.625885009765625
    3. '_c' → logprob: -8.750885009765625
    4. 'ase' → logprob: -9.000885009765625
    5. '_as' → logprob: -10.500885009765625
    6. '_' → logprob: -11.125885009765625
    7. '_case' → logprob: -12.375885009765625
    8. 'aso' → logprob: -12.375885009765625
    9. 'ass' → logprob: -12.500885009765625
    10. 'asi' → logprob: -12.625885009765625

Token 191: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -2.236549335066229e-05
    2. 'k' → logprob: -10.750021934509277
    3. '_un' → logprob: -14.125021934509277
    4. '_general' → logprob: -15.750021934509277
    5. '_' → logprob: -17.750022888183594
    6. '(k' → logprob: -18.625022888183594
    7. 'general' → logprob: -19.625022888183594
    8. '	k' → logprob: -19.750022888183594
    9. 'un' → logprob: -20.250022888183594
    10. '[k' → logprob: -20.250022888183594

Token 192: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -3.583550642360933e-05
    2. 'un' → logprob: -10.250036239624023
    3. '_UN' → logprob: -15.500036239624023
    4. '_' → logprob: -16.500036239624023
    5. '_Un' → logprob: -16.750036239624023
    6. '(un' → logprob: -17.000036239624023
    7. '	un' → logprob: -17.250036239624023
    8. '   ' → logprob: -17.500036239624023
    9. '_uni' → logprob: -17.750036239624023
    10. 'Un' → logprob: -17.875036239624023

Token 193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00046546570956707
    2. '()
' → logprob: -7.875465393066406
    3. '(k' → logprob: -9.500465393066406
    4. '(' → logprob: -12.625465393066406
    5. ' ()' → logprob: -12.625465393066406
    6. '()

' → logprob: -13.625465393066406
    7. '()
' → logprob: -14.125465393066406
    8. '():' → logprob: -14.375465393066406
    9. '()`' → logprob: -14.875465393066406
    10. 'u' → logprob: -15.750465393066406

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006797884125262499
    2. 'else' → logprob: -7.750679969787598
    3. ' else' → logprob: -8.375679969787598
    4. '
' → logprob: -11.375679969787598
    5. '    
' → logprob: -13.000679969787598
    6. '<|end|>' → logprob: -13.125679969787598
    7. '```' → logprob: -13.250679969787598
    8. '	else' → logprob: -15.250679969787598
    9. ' ' → logprob: -15.250679969787598
    10. 'elif' → logprob: -15.875679969787598

Token 195: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06912153959274292
    2. 'else' (adapté à ' else') → logprob: -2.8191215991973877
    3. ' else' → logprob: -4.944121360778809
    4. '	else' → logprob: -13.944121360778809
    5. ' ' → logprob: -14.069121360778809
    6. '```' → logprob: -14.444121360778809
    7. 'elif' → logprob: -14.569121360778809
    8. '  ' → logprob: -15.194121360778809
    9. '       ' → logprob: -16.319122314453125
    10. '    
' → logprob: -16.569122314453125

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31340715289115906
    2. ':
' → logprob: -1.3134071826934814
    3. '       ' → logprob: -9.188406944274902
    4. '   ' → logprob: -10.938406944274902
    5. ' :
' → logprob: -11.188406944274902
    6. ' :' → logprob: -12.188406944274902
    7. ':

' → logprob: -13.313406944274902
    8. ':def' → logprob: -13.563406944274902
    9. ':
' → logprob: -13.813406944274902
    10. '):
' → logprob: -14.313406944274902

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.3458322731312364e-06
    2. ' traiter' → logprob: -12.375007629394531
    3. '   ' → logprob: -13.875007629394531
    4. 'trait' → logprob: -14.375007629394531
    5. '    ' → logprob: -14.875007629394531
    6. '```' → logprob: -15.375007629394531
    7. '        
' → logprob: -15.500007629394531
    8. '	   ' → logprob: -16.00000762939453
    9. 'tr' → logprob: -16.25000762939453
    10. 'preter' → logprob: -16.37500762939453

Token 198: ' traiter' (ID: 105852)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44954603910446167
    2. 'trait' → logprob: -1.1995460987091064
    3. ' traiter' → logprob: -2.8245460987091064
    4. '   ' → logprob: -7.199545860290527
    5. 'tra' → logprob: -7.949545860290527
    6. ' trait' → logprob: -8.574545860290527
    7. 'tr' → logprob: -9.699545860290527
    8. 'trat' → logprob: -11.449545860290527
    9. ' ' → logprob: -11.699545860290527
    10. ' traite' → logprob: -11.699545860290527

Token 199: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.1472419600977446e-06
    2. 'cas' → logprob: -14.125000953674316
    3. '_' → logprob: -15.000000953674316
    4. ' cas' → logprob: -18.125001907348633
    5. '\' → logprob: -18.625001907348633
    6. '_pas' → logprob: -18.750001907348633
    7. 's' → logprob: -19.125001907348633
    8. 'Cas' → logprob: -19.125001907348633
    9. '_case' → logprob: -19.125001907348633
    10. 'er' → logprob: -19.500001907348633

Token 200: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -4.751746746478602e-05
    2. 'aser' → logprob: -10.87504768371582
    3. 'er' → logprob: -11.50004768371582
    4. '_c' → logprob: -12.25004768371582
    5. 's' → logprob: -12.37504768371582
    6. 'cas' → logprob: -12.50004768371582
    7. 'asier' → logprob: -13.37504768371582
    8. '_as' → logprob: -13.62504768371582
    9. 'asser' → logprob: -14.62504768371582
    10. 'az' → logprob: -15.50004768371582

Token 201: '_general' (ID: 93055)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0015658074989914894
    2. '_general' → logprob: -6.501565933227539
    3. 'cas' → logprob: -10.126565933227539
    4. '_case' → logprob: -10.876565933227539
    5. ' cas' → logprob: -13.751565933227539
    6. 'general' → logprob: -14.251565933227539
    7. '_g' → logprob: -14.626565933227539
    8. 'er' → logprob: -14.751565933227539
    9. '_' → logprob: -14.876565933227539
    10. 'Cas' → logprob: -14.876565933227539

Token 202: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.240481914370321e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.625052452087402
    4. '(
' → logprob: -14.750052452087402
    5. '   ' → logprob: -18.625051498413086
    6. 'n' → logprob: -18.875051498413086
    7. '﻿' → logprob: -20.375051498413086
    8. ' n' → logprob: -20.625051498413086
    9. '(nt' → logprob: -21.125051498413086
    10. '(

' → logprob: -21.250051498413086

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.399378566537052e-05
    2. ',k' → logprob: -9.500083923339844
    3. ' ,' → logprob: -11.625083923339844
    4. '   ' → logprob: -16.250083923339844
    5. ',
' → logprob: -16.375083923339844
    6. ',n' → logprob: -16.750083923339844
    7. ')' → logprob: -17.375083923339844
    8. 'k' → logprob: -19.000083923339844
    9. ',s' → logprob: -20.000083923339844
    10. '),' → logprob: -20.000083923339844

Token 204: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.018150296062231064
    2. ' k' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.018150329589844
    4. ' ' → logprob: -17.143150329589844
    5. ' ' → logprob: -17.268150329589844
    6. '	k' → logprob: -17.643150329589844
    7. '       ' → logprob: -17.893150329589844
    8. '    ' → logprob: -18.018150329589844
    9. ')' → logprob: -18.018150329589844
    10. '  ' → logprob: -18.768150329589844

Token 205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010962257510982454
    2. ')
' → logprob: -9.125109672546387
    3. '())' → logprob: -15.000109672546387
    4. ')

' → logprob: -16.00010871887207
    5. ' )' → logprob: -16.37510871887207
    6. '()' → logprob: -16.62510871887207
    7. '   ' → logprob: -17.37510871887207
    8. '))' → logprob: -18.25010871887207
    9. ')#' → logprob: -18.62510871887207
    10. ')return' → logprob: -19.00010871887207

Token 206: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0434483140707016
    2. '
' → logprob: -3.1684482097625732
    3. 'main' → logprob: -8.293448448181152
    4. '\n' → logprob: -10.043448448181152
    5. '<|end|>' → logprob: -10.043448448181152
    6. ' if' → logprob: -10.168448448181152
    7. '```' → logprob: -10.168448448181152
    8. '    
' → logprob: -11.543448448181152
    9. '  
' → logprob: -11.793448448181152
    10. '#' → logprob: -11.793448448181152

Token 207: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0795658752322197
    2. '(' → logprob: -2.5795657634735107
    3. '()
' → logprob: -7.45456600189209
    4. '(
' → logprob: -9.45456600189209
    5. '#' → logprob: -11.70456600189209
    6. '()

' → logprob: -12.95456600189209
    7. '()\' → logprob: -13.45456600189209
    8. '(

' → logprob: -13.82956600189209
    9. '();' → logprob: -13.95456600189209
    10. '()`' → logprob: -14.45456600189209


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 205
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 176
Précision stricte (1ère position): 50.73%
Précision adaptée (1ère position): 53.17%
Précision (top 10): 85.85%
================================================================================
