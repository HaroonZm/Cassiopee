================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir un nombre entier (le nombre d'éléments de la liste)
N = int(input())  # La fonction input() lit une ligne de texte et int() la convertit en entier

# Demande à l'utilisateur de saisir N entiers séparés par des espaces
# input() lit une chaine, split(' ') découpe la chaine à chaque espace, map(int, ...) convertit chaque élément en entier, et list() fait une liste de ces entiers
H = list(map(int, input().split(' ')))

# Vérifie si la liste contient un seul élément
if N == 1:
    # S'il n'y a qu'un seul élément, on affiche 'Yes' car la séquence respecte forcément la condition imposée
    print('Yes')
else:
    # Cette boucle commence à 1 (deuxième élément) et va jusqu'à N - 1 (dernier élément)
    for i in range(1, N):
        # On regarde si l'élément précédent est STRICTEMENT inférieur à l'élément courant
        if H[i - 1] < H[i]:
            # Si oui, on diminue l'élément courant de 1 pour tenter d'adoucir la pente entre les éléments consécutifs
            H[i] -= 1  # H[i] = H[i] - 1 réduit la valeur de H[i] d'une unité

    # Initialise une variable qui servira de drapeau pour indiquer si la séquence respecte la condition finale
    no_flag = 0  # On commence par supposer qu'il n'y a pas d'anomalie

    # Deuxième boucle pour vérifier si la séquence est non croissante (chaque élément >= suivant)
    for i in range(1, N):
        # Si un élément précédent est supérieur à l'élément courant, la condition n'est pas respectée
        if H[i - 1] > H[i]:
            # On place le drapeau à 1 pour signaler une anomalie
            no_flag = 1

    # Après avoir parcouru la liste, on vérifie la valeur du drapeau
    if no_flag == 0:
        # Si tout va bien, on affiche 'Yes'
        print('Yes')
    else:
        # Sinon, on affiche 'No'
        print('No')

    # Ligne commentée : on pourrait afficher la liste finale H pour vérification supplémentaire
    # print(H)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5254546403884888
    2. ' de' → logprob: -2.025454521179199
    3. ' ' → logprob: -2.400454521179199
    4. ':' → logprob: -2.525454521179199
    5. '_' → logprob: -3.150454521179199
    6. ' :' → logprob: -3.900454521179199
    7. '```' → logprob: -4.525454521179199
    8. ' =' → logprob: -4.900454521179199
    9. ' d' → logprob: -5.025454521179199
    10. ''' → logprob: -5.150454521179199

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00851953960955143
    2. ' l' → logprob: -5.008519649505615
    3. 'util' → logprob: -7.133519649505615
    4. 'user' → logprob: -7.633519649505615
    5. '#' → logprob: -8.508519172668457
    6. ''' → logprob: -10.383519172668457
    7. '```' → logprob: -10.383519172668457
    8. 'input' → logprob: -10.508519172668457
    9. 'la' → logprob: -10.633519172668457
    10. '`' → logprob: -10.758519172668457

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03363174945116043
    2. ''' → logprob: -4.158631801605225
    3. 'u' → logprob: -4.908631801605225
    4. 'util' → logprob: -5.783631801605225
    5. '’utilisateur' → logprob: -5.783631801605225
    6. ' utilisateur' → logprob: -6.283631801605225
    7. 'a' → logprob: -6.533631801605225
    8. ''util' → logprob: -8.658631324768066
    9. ''us' → logprob: -9.158631324768066
    10. ''user' → logprob: -9.408631324768066

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.3604263961315155
    2. 'name' → logprob: -2.235426425933838
    3. 'user' → logprob: -2.485426425933838
    4. 'n' → logprob: -3.235426425933838
    5. 'input' → logprob: -4.110426425933838
    6. 's' → logprob: -4.360426425933838
    7. 'username' → logprob: -4.735426425933838
    8. '#' → logprob: -5.110426425933838
    9. '`' → logprob: -5.235426425933838
    10. 'print' → logprob: -5.735426425933838

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009185493923723698
    2. ' saisir' → logprob: -5.634185314178467
    3. 'r' → logprob: -6.009185314178467
    4. 'entr' → logprob: -6.259185314178467
    5. '```' → logprob: -7.259185314178467
    6. 'sa' → logprob: -9.009185791015625
    7. '#' → logprob: -9.384185791015625
    8. ' entrer' → logprob: -10.259185791015625
    9. ' fournir' → logprob: -10.634185791015625
    10. 'contin' → logprob: -10.759185791015625

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0642513781785965
    2. ' un' → logprob: -3.68925142288208
    3. ''' → logprob: -4.56425142288208
    4. '_' → logprob: -4.68925142288208
    5. 's' → logprob: -5.06425142288208
    6. ' une' → logprob: -5.31425142288208
    7. ''un' → logprob: -7.06425142288208
    8. 'u' → logprob: -7.68925142288208
    9. '```' → logprob: -7.68925142288208
    10. ' ' → logprob: -7.68925142288208

Token 9: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08241520822048187
    2. 'e' → logprob: -4.3324151039123535
    3. ' espace' → logprob: -4.5824151039123535
    4. '_' → logprob: -4.8324151039123535
    5. 'texte' → logprob: -4.9574151039123535
    6. ' mot' → logprob: -5.0824151039123535
    7. 'es' → logprob: -5.3324151039123535
    8. 'é' → logprob: -5.7074151039123535
    9. '```' → logprob: -5.8324151039123535
    10. ' )' → logprob: -6.2074151039123535

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026907287538051605
    2. '\n' → logprob: -4.901907444000244
    3. 'nombre' → logprob: -5.526907444000244
    4. '_' → logprob: -5.776907444000244
    5. 'x' → logprob: -5.901907444000244
    6. '#' → logprob: -5.901907444000244
    7. '```' → logprob: -6.776907444000244
    8. '`' → logprob: -7.151907444000244
    9. '\' → logprob: -7.276907444000244
    10. 'i' → logprob: -7.276907444000244

Token 11: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005820717662572861
    2. 'x' → logprob: -6.0058207511901855
    3. 'nombre' → logprob: -6.6308207511901855
    4. '\n' → logprob: -6.8808207511901855
    5. 'i' → logprob: -8.380820274353027
    6. '#' → logprob: -8.755820274353027
    7. '```' → logprob: -8.755820274353027
    8. 'number' → logprob: -9.505820274353027
    9. '`' → logprob: -9.630820274353027
    10. 'user' → logprob: -9.880820274353027

Token 12: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006329386495053768
    2. ' )' → logprob: -5.256329536437988
    3. 'n' → logprob: -7.756329536437988
    4. '`)' → logprob: -8.506329536437988
    5. ':' → logprob: -8.631329536437988
    6. 'ent' → logprob: -9.631329536437988
    7. '):' → logprob: -10.631329536437988
    8. '')' → logprob: -10.631329536437988
    9. 's' → logprob: -10.631329536437988
    10. 'a' → logprob: -10.756329536437988

Token 13: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.603866696357727
    2. ')' → logprob: -1.228866696357727
    3. ' )' → logprob: -1.853866696357727
    4. ' ' → logprob: -6.8538665771484375
    5. 'nombre' → logprob: -6.8538665771484375
    6. 'n' → logprob: -7.4788665771484375
    7. 's' → logprob: -8.353866577148438
    8. ' entier' → logprob: -8.478866577148438
    9. ' nombre' → logprob: -8.728866577148438
    10. 'ent' → logprob: -8.978866577148438

Token 14: ' d' (ID: 272)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.5613946318626404
    2. ')' → logprob: -1.4363946914672852
    3. ' ' → logprob: -1.8113946914672852
    4. '_' → logprob: -3.686394691467285
    5. 's' → logprob: -6.686394691467285
    6. ' entier' → logprob: -6.811394691467285
    7. ' ' → logprob: -8.936394691467285
    8. ' s' → logprob: -8.936394691467285
    9. ' d' → logprob: -9.561394691467285
    10. '  ' → logprob: -9.686394691467285

Token 15: ''' (ID: 6)
  Prédit: ''é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''é' → logprob: -0.5578110814094543
    2. 'e' → logprob: -1.5578110218048096
    3. ''' → logprob: -2.5578110218048096
    4. ''esp' → logprob: -3.3078110218048096
    5. 'é' → logprob: -3.5578110218048096
    6. ''espace' → logprob: -3.6828110218048096
    7. 'éros' → logprob: -4.557811260223389
    8. '_' → logprob: -5.182811260223389
    9. ''éc' → logprob: -5.182811260223389
    10. ''ent' → logprob: -5.557811260223389

Token 16: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.11773441731929779
    2. ''' → logprob: -3.117734432220459
    3. 'é' → logprob: -3.367734432220459
    4. 'it' → logprob: -4.992734432220459
    5. 'esp' → logprob: -5.742734432220459
    6. 'él' → logprob: -6.492734432220459
    7. ''ex' → logprob: -6.617734432220459
    8. 'iterations' → logprob: -6.617734432220459
    9. ''ét' → logprob: -6.742734432220459
    10. 'unit' → logprob: -6.742734432220459

Token 17: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.03253014013171196
    2. 'ment' → logprob: -3.5325300693511963
    3. 'm' → logprob: -6.282530307769775
    4. ')' → logprob: -7.657530307769775
    5. 'nts' → logprob: -8.282529830932617
    6. '```' → logprob: -10.157529830932617
    7. 's' → logprob: -10.407529830932617
    8. '`' → logprob: -11.157529830932617
    9. 'me' → logprob: -11.657529830932617
    10. 'м' → logprob: -11.657529830932617

Token 18: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008578166365623474
    2. ' )' → logprob: -5.383578300476074
    3. ' à' → logprob: -5.883578300476074
    4. 's' → logprob: -7.258578300476074
    5. 'à' → logprob: -8.508578300476074
    6. ' ' → logprob: -8.883578300476074
    7. ')s' → logprob: -10.758578300476074
    8. ' ' → logprob: -11.008578300476074
    9. '   ' → logprob: -11.008578300476074
    10. '```' → logprob: -11.133578300476074

Token 19: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.48420339822769165
    2. ' la' → logprob: -0.9842033982276917
    3. 's' → logprob: -5.484203338623047
    4. 'liste' → logprob: -6.359203338623047
    5. 'l' → logprob: -6.734203338623047
    6. 'a' → logprob: -6.984203338623047
    7. ')' → logprob: -7.609203338623047
    8. ' liste' → logprob: -8.234203338623047
    9. 'list' → logprob: -8.234203338623047
    10. ' tableau' → logprob: -8.484203338623047

Token 20: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.04600066691637039
    2. ' liste' → logprob: -3.1710007190704346
    3. '```' → logprob: -7.1710004806518555
    4. 'suite' → logprob: -7.2960004806518555
    5. 's' → logprob: -7.5460004806518555
    6. 'list' → logprob: -7.5460004806518555
    7. ' tableau' → logprob: -9.171000480651855
    8. ')' → logprob: -9.921000480651855
    9. 'la' → logprob: -9.921000480651855
    10. ' suite' → logprob: -10.171000480651855

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032628714689053595
    2. '):' → logprob: -9.125326156616211
    3. 'n' → logprob: -9.500326156616211
    4. '#' → logprob: -9.875326156616211
    5. ' )' → logprob: -10.500326156616211
    6. '`)' → logprob: -11.250326156616211
    7. '')' → logprob: -11.375326156616211
    8. 's' → logprob: -11.875326156616211
    9. ')
' → logprob: -12.375326156616211
    10. '")' → logprob: -12.500326156616211

Token 22: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005445058923214674
    2. 'nombre' → logprob: -5.2554450035095215
    3. '```' → logprob: -10.25544548034668
    4. '#' → logprob: -10.50544548034668
    5. 'x' → logprob: -10.88044548034668
    6. 'i' → logprob: -11.00544548034668
    7. '`' → logprob: -11.38044548034668
    8. 'number' → logprob: -11.38044548034668
    9. '\' → logprob: -11.50544548034668
    10. '_' → logprob: -11.75544548034668

Token 23: ' =' (ID: 314)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2685777246952057
    2. 'ombre' → logprob: -1.5185776948928833
    3. '=' → logprob: -4.768577575683594
    4. ' =' → logprob: -5.518577575683594
    5. 'umber' → logprob: -5.768577575683594
    6. 'ombres' → logprob: -7.518577575683594
    7. 'bre' → logprob: -8.893577575683594
    8. 'br' → logprob: -10.018577575683594
    9. 'um' → logprob: -10.768577575683594
    10. 'n' → logprob: -11.018577575683594

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05491015315055847
    2. 'int' → logprob: -2.929910182952881
    3. ' input' → logprob: -11.304909706115723
    4. ' ' → logprob: -11.804909706115723
    5. '=int' → logprob: -12.304909706115723
    6. 'input' → logprob: -13.179909706115723
    7. ' ' → logprob: -14.554909706115723
    8. '[int' → logprob: -15.304909706115723
    9. '```' → logprob: -15.429909706115723
    10. '<int' → logprob: -15.554909706115723

Token 25: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38694852590560913
    2. '(' → logprob: -1.136948585510254
    3. 'input' → logprob: -10.261948585510254
    4. '(
' → logprob: -10.886948585510254
    5. ' (' → logprob: -11.011948585510254
    6. '('' → logprob: -13.136948585510254
    7. '()' → logprob: -13.261948585510254
    8. '(

' → logprob: -13.511948585510254
    9. '(user' → logprob: -14.761948585510254
    10. '(raw' → logprob: -15.261948585510254

Token 26: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1590280681848526
    2. '("("' → logprob: -2.2840280532836914
    3. '('' → logprob: -4.159028053283691
    4. '("' → logprob: -4.284028053283691
    5. '()' → logprob: -4.409028053283691
    6. '("")' → logprob: -6.659028053283691
    7. '(""))' → logprob: -6.784028053283691
    8. '(">' → logprob: -7.659028053283691
    9. '("(' → logprob: -7.659028053283691
    10. '())' → logprob: -9.409028053283691

Token 27: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051030270755290985
    2. '(' → logprob: -3.176030158996582
    3. ' )' → logprob: -6.426030158996582
    4. '#' → logprob: -6.676030158996582
    5. ' ' → logprob: -6.676030158996582
    6. '(
' → logprob: -6.926030158996582
    7. '()' → logprob: -7.551030158996582
    8. '\' → logprob: -7.551030158996582
    9. '\n' → logprob: -8.051030158996582
    10. '
' → logprob: -8.301030158996582

Token 28: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4057220220565796
    2. '[' → logprob: -2.030722141265869
    3. '#' → logprob: -2.405722141265869
    4. ' ' → logprob: -3.530722141265869
    5. '[
' → logprob: -4.155722141265869
    6. '<|end|>' → logprob: -4.280722141265869
    7. '```' → logprob: -4.655722141265869
    8. '
' → logprob: -4.780722141265869
    9. '\n' → logprob: -5.405722141265869
    10. 'n' → logprob: -5.655722141265869

Token 29: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2226223349571228
    2. ' "' → logprob: -1.9726223945617676
    3. '"' → logprob: -3.4726223945617676
    4. ' )' → logprob: -4.472622394561768
    5. ')' → logprob: -4.722622394561768
    6. '  ' → logprob: -6.347622394561768
    7. ''' → logprob: -6.722622394561768
    8. ' N' → logprob: -6.972622394561768
    9. ' ")' → logprob: -7.597622394561768
    10. ' Enter' → logprob: -7.722622394561768

Token 30: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019325530156493187
    2. 's' → logprob: -5.2693257331848145
    3. 'nombre' → logprob: -5.3943257331848145
    4. ' nombre' → logprob: -6.2693257331848145
    5. 'n' → logprob: -6.3943257331848145
    6. ' liste' → logprob: -6.5193257331848145
    7. '  ' → logprob: -7.2693257331848145
    8. 'space' → logprob: -8.019325256347656
    9. ' quantité' → logprob: -8.144325256347656
    10. ' taille' → logprob: -8.394325256347656

Token 31: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02156115137040615
    2. '"' → logprob: -5.021561145782471
    3. '("' → logprob: -5.396561145782471
    4. 'input' → logprob: -5.646561145782471
    5. ''' → logprob: -6.521561145782471
    6. '()' → logprob: -6.521561145782471
    7. '('' → logprob: -6.646561145782471
    8. '`' → logprob: -7.646561145782471
    9. '(input' → logprob: -7.646561145782471
    10. '(
' → logprob: -8.021561622619629

Token 32: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6718546152114868
    2. '()' → logprob: -1.0468546152114868
    3. '("' → logprob: -2.0468544960021973
    4. '('' → logprob: -5.046854496002197
    5. '("")' → logprob: -6.671854496002197
    6. '())' → logprob: -7.546854496002197
    7. ')' → logprob: -8.296854972839355
    8. '(">' → logprob: -9.171854972839355
    9. '(prompt' → logprob: -9.546854972839355
    10. '("("' → logprob: -9.546854972839355

Token 33: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8955121636390686
    2. '(' → logprob: -1.0205121040344238
    3. ')' → logprob: -2.145512104034424
    4. '("' → logprob: -3.145512104034424
    5. '('' → logprob: -3.520512104034424
    6. ' )' → logprob: -4.145512104034424
    7. '())' → logprob: -4.395512104034424
    8. ' ' → logprob: -6.020512104034424
    9. '("")' → logprob: -6.520512104034424
    10. ' (' → logprob: -6.520512104034424

Token 34: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21304792165756226
    2. ' un' → logprob: -2.713047981262207
    3. ' une' → logprob: -3.088047981262207
    4. ')' → logprob: -3.838047981262207
    5. ' ' → logprob: -4.588047981262207
    6. ' l' → logprob: -4.963047981262207
    7. '('' → logprob: -4.963047981262207
    8. '(' → logprob: -5.088047981262207
    9. ' )' → logprob: -5.338047981262207
    10. '("' → logprob: -5.338047981262207

Token 35: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.05089908093214035
    2. 'chaine' → logprob: -4.300899028778076
    3. ' ligne' → logprob: -4.425899028778076
    4. ' chaine' → logprob: -4.925899028778076
    5. ' valeur' → logprob: -5.425899028778076
    6. ' ' → logprob: -5.550899028778076
    7. ' string' → logprob: -5.800899028778076
    8. ' )' → logprob: -7.050899028778076
    9. 'entrée' → logprob: -7.175899028778076
    10. 'string' → logprob: -7.175899028778076

Token 36: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06364930421113968
    2. ' )' → logprob: -3.0636494159698486
    3. '()' → logprob: -4.8136491775512695
    4. '(' → logprob: -6.3136491775512695
    5. ' ' → logprob: -7.1886491775512695
    6. '```' → logprob: -7.3136491775512695
    7. '())' → logprob: -7.4386491775512695
    8. '\n' → logprob: -7.5636491775512695
    9. '
' → logprob: -7.6886491775512695
    10. '#' → logprob: -7.6886491775512695

Token 37: ' texte' (ID: 53492)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9857801795005798
    2. ' texte' → logprob: -1.1107802391052246
    3. 'texte' → logprob: -1.8607802391052246
    4. ' l' → logprob: -2.9857802391052246
    5. 'code' → logprob: -3.2357802391052246
    6. 'l' → logprob: -3.3607802391052246
    7. 's' → logprob: -5.485780239105225
    8. 'entrée' → logprob: -5.485780239105225
    9. ' input' → logprob: -7.235780239105225
    10. 't' → logprob: -7.485780239105225

Token 38: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07661978900432587
    2. ' ' → logprob: -4.076619625091553
    3. ' )' → logprob: -4.326619625091553
    4. '#' → logprob: -4.576619625091553
    5. ',' → logprob: -4.576619625091553
    6. '[' → logprob: -5.326619625091553
    7. '(' → logprob: -6.326619625091553
    8. '\n' → logprob: -6.451619625091553
    9. '
' → logprob: -6.576619625091553
    10. '\' → logprob: -6.576619625091553

Token 39: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47170478105545044
    2. ')' → logprob: -1.5967047214508057
    3. ' )' → logprob: -1.8467047214508057
    4. ''' → logprob: -5.471704959869385
    5. '  ' → logprob: -6.596704959869385
    6. '"' → logprob: -6.596704959869385
    7. ' "' → logprob: -6.846704959869385
    8. '()' → logprob: -7.096704959869385
    9. ' ' → logprob: -7.721704959869385
    10. ' '' → logprob: -7.784204959869385

Token 40: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005147896707057953
    2. '()' → logprob: -5.880147933959961
    3. '('' → logprob: -6.505147933959961
    4. ')' → logprob: -8.755147933959961
    5. '```' → logprob: -8.755147933959961
    6. ',' → logprob: -9.630147933959961
    7. '("' → logprob: -9.755147933959961
    8. '("""' → logprob: -9.880147933959961
    9. ' (' → logprob: -10.130147933959961
    10. '(
' → logprob: -10.255147933959961

Token 41: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047702479059807956
    2. '(
' → logprob: -9.000476837158203
    3. '('' → logprob: -9.125476837158203
    4. '()' → logprob: -9.125476837158203
    5. ')' → logprob: -9.875476837158203
    6. ' (' → logprob: -10.750476837158203
    7. '(convert' → logprob: -11.625476837158203
    8. '("""' → logprob: -11.750476837158203
    9. '("' → logprob: -12.125476837158203
    10. 'convert' → logprob: -12.375476837158203

Token 42: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.5994696021080017
    2. ' transforme' → logprob: -0.8494696021080017
    3. ' ' → logprob: -4.7244696617126465
    4. ' convertir' → logprob: -5.4744696617126465
    5. 'convert' → logprob: -5.9744696617126465
    6. ' converts' → logprob: -5.9744696617126465
    7. ' transforma' → logprob: -6.9744696617126465
    8. ' transform' → logprob: -7.2244696617126465
    9. ')' → logprob: -7.2244696617126465
    10. ' conversion' → logprob: -7.5994696617126465

Token 43: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0007663871510885656
    2. ' it' → logprob: -7.625766277313232
    3. 'i' → logprob: -8.62576675415039
    4. '```' → logprob: -10.50076675415039
    5. '()' → logprob: -11.62576675415039
    6. '#' → logprob: -12.00076675415039
    7. 'ит' → logprob: -12.25076675415039
    8. '   ' → logprob: -12.37576675415039
    9. 'ît' → logprob: -12.37576675415039
    10. '_' → logprob: -12.50076675415039

Token 44: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.024035433307290077
    2. 'en' → logprob: -3.8990354537963867
    3. ' ' → logprob: -6.524035453796387
    4. '(' → logprob: -7.399035453796387
    5. ')' → logprob: -7.524035453796387
    6. '()' → logprob: -7.899035453796387
    7. 'e' → logprob: -8.899035453796387
    8. '(en' → logprob: -9.649035453796387
    9. ' )' → logprob: -10.024035453796387
    10. ' (' → logprob: -10.024035453796387

Token 45: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.10097397863864899
    2. ' entier' → logprob: -3.1009740829467773
    3. ' nombre' → logprob: -3.3509740829467773
    4. ' ' → logprob: -5.475974082946777
    5. 'ent' → logprob: -5.475974082946777
    6. ' ' → logprob: -6.350974082946777
    7. 'un' → logprob: -6.600974082946777
    8. ' integer' → logprob: -6.600974082946777
    9. 'nombre' → logprob: -6.975974082946777
    10. ' int' → logprob: -7.225974082946777

Token 46: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4780857563018799
    2. '
' → logprob: -1.4780857563018799
    3. ' ' → logprob: -1.9780857563018799
    4. '[' → logprob: -2.35308575630188
    5. '#' → logprob: -2.47808575630188
    6. ' 
' → logprob: -2.85308575630188
    7. '<|end|>' → logprob: -2.97808575630188
    8. '\n' → logprob: -3.35308575630188
    9. 'n' → logprob: -4.228085517883301
    10. '[
' → logprob: -4.353085517883301

Token 47: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7027102112770081
    2. 'n' → logprob: -1.7027101516723633
    3. 'l' → logprob: -2.0777101516723633
    4. 'elements' → logprob: -2.2027101516723633
    5. 's' → logprob: -4.202710151672363
    6. '[' → logprob: -4.452710151672363
    7. 'lst' → logprob: -4.452710151672363
    8. 'liste' → logprob: -4.827710151672363
    9. ' ' → logprob: -5.452710151672363
    10. 'e' → logprob: -5.577710151672363

Token 48: ' Dem' (ID: 9458)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.2898967266082764
    2. 'elements' → logprob: -1.7898967266082764
    3. ' elements' → logprob: -2.1648967266082764
    4. ' lst' → logprob: -2.1648967266082764
    5. 'liste' → logprob: -2.5398967266082764
    6. ' numbers' → logprob: -3.2898967266082764
    7. 'list' → logprob: -3.5398967266082764
    8. 'l' → logprob: -3.6648967266082764
    9. ' L' → logprob: -3.9148967266082764
    10. 'numbers' → logprob: -4.0398969650268555

Token 49: 'ande' (ID: 4102)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8869448900222778
    2. 'a' → logprob: -0.8869448900222778
    3. 'andez' → logprob: -3.2619447708129883
    4. ' ' → logprob: -3.6369447708129883
    5. 'e' → logprob: -4.261944770812988
    6. 'for' → logprob: -4.386944770812988
    7. '_' → logprob: -4.511944770812988
    8. 'u' → logprob: -4.636944770812988
    9. 'print' → logprob: -4.761944770812988
    10. '   ' → logprob: -4.886944770812988

Token 50: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8540147542953491
    2. ' ' → logprob: -1.2290147542953491
    3. '<|end|>' → logprob: -2.8540148735046387
    4. ')' → logprob: -2.9790148735046387
    5. '()' → logprob: -3.4790148735046387
    6. 'à' → logprob: -3.7290148735046387
    7. '(' → logprob: -4.104014873504639
    8. '#' → logprob: -4.104014873504639
    9. 'a' → logprob: -4.354014873504639
    10. ' )' → logprob: -4.729014873504639

Token 51: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6942920684814453
    2. ' l' → logprob: -0.8192920684814453
    3. ' ' → logprob: -3.6942920684814453
    4. '<|end|>' → logprob: -4.194292068481445
    5. 'a' → logprob: -5.319292068481445
    6. ' la' → logprob: -5.569292068481445
    7. ' a' → logprob: -5.569292068481445
    8. ' ' → logprob: -6.944292068481445
    9. ' un' → logprob: -7.194292068481445
    10. 'user' → logprob: -7.444292068481445

Token 52: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.03551505133509636
    2. 'a' → logprob: -3.785515069961548
    3. '’utilisateur' → logprob: -5.285514831542969
    4. 'u' → logprob: -5.910514831542969
    5. ''' → logprob: -6.160514831542969
    6. 'e' → logprob: -7.410514831542969
    7. '_' → logprob: -7.535514831542969
    8. ''util' → logprob: -8.535514831542969
    9. '')' → logprob: -8.660514831542969
    10. ''a' → logprob: -9.035514831542969

Token 53: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6108835935592651
    2. '()' → logprob: -1.8608835935592651
    3. 's' → logprob: -2.3608837127685547
    4. '#' → logprob: -2.9858837127685547
    5. ' )' → logprob: -3.2358837127685547
    6. ' de' → logprob: -3.6108837127685547
    7. ' ' → logprob: -3.7358837127685547
    8. '<|end|>' → logprob: -4.985883712768555
    9. 'd' → logprob: -5.110883712768555
    10. 'a' → logprob: -5.485883712768555

Token 54: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.10599122941493988
    2. 's' → logprob: -2.3559911251068115
    3. 'r' → logprob: -6.355991363525391
    4. 'l' → logprob: -6.480991363525391
    5. ' ' → logprob: -7.480991363525391
    6. ' la' → logprob: -7.855991363525391
    7. ' sais' → logprob: -8.48099136352539
    8. ' l' → logprob: -8.60599136352539
    9. ' remplir' → logprob: -8.73099136352539
    10. ' continuer' → logprob: -8.85599136352539

Token 55: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018781891092658043
    2. ' une' → logprob: -4.393781661987305
    3. ' la' → logprob: -5.393781661987305
    4. ' un' → logprob: -7.518781661987305
    5. ' ' → logprob: -8.018781661987305
    6. '  ' → logprob: -8.143781661987305
    7. ' le' → logprob: -9.268781661987305
    8. ' a' → logprob: -9.393781661987305
    9. ' les' → logprob: -9.518781661987305
    10. 'une' → logprob: -9.518781661987305

Token 56: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09124334901571274
    2. ' des' → logprob: -3.966243267059326
    3. ' éléments' → logprob: -4.216243267059326
    4. ' nombres' → logprob: -4.716243267059326
    5. '  ' → logprob: -4.966243267059326
    6. ' un' → logprob: -5.091243267059326
    7. 'élé' → logprob: -5.591243267059326
    8. ' espaces' → logprob: -5.591243267059326
    9. ' ' → logprob: -6.091243267059326
    10. ' une' → logprob: -6.091243267059326

Token 57: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0019463682547211647
    2. 'ières' → logprob: -6.626946449279785
    3. 'i' → logprob: -7.501946449279785
    4. 'ier' → logprob: -10.126946449279785
    5. 'ière' → logprob: -11.876946449279785
    6. 'ers' → logprob: -12.251946449279785
    7. '```' → logprob: -12.626946449279785
    8. 'ié' → logprob: -12.751946449279785
    9. ' i' → logprob: -13.376946449279785
    10. 'riers' → logprob: -13.501946449279785

Token 58: ' sépar' (ID: 97160)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -1.434457778930664
    2. 'elements' → logprob: -1.809457778930664
    3. 's' → logprob: -2.059457778930664
    4. 'numbers' → logprob: -2.934457778930664
    5. '[' → logprob: -3.059457778930664
    6. 'for' → logprob: -3.184457778930664
    7. 'lst' → logprob: -3.309457778930664
    8. ' elements' → logprob: -3.434457778930664
    9. ' liste' → logprob: -3.559457778930664
    10. 'values' → logprob: -3.684457778930664

Token 59: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.01001046597957611
    2. 'é' → logprob: -4.885010242462158
    3. ' par' → logprob: -6.885010242462158
    4. 'es' → logprob: -7.260010242462158
    5. 'par' → logprob: -7.760010242462158
    6. 'e' → logprob: -9.635010719299316
    7. '```' → logprob: -10.010010719299316
    8. 's' → logprob: -10.010010719299316
    9. 'ément' → logprob: -10.135010719299316
    10. 'ée' → logprob: -11.510010719299316

Token 60: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.13062244653701782
    2. 'par' → logprob: -2.130622386932373
    3. 'es' → logprob: -6.755622386932373
    4. '```' → logprob: -7.380622386932373
    5. '()' → logprob: -7.630622386932373
    6. 's' → logprob: -7.630622386932373
    7. 'd' → logprob: -8.630622863769531
    8. '(par' → logprob: -9.130622863769531
    9. 'space' → logprob: -9.255622863769531
    10. '_par' → logprob: -9.880622863769531

Token 61: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0322425365447998
    2. 'un' → logprob: -1.4072425365447998
    3. 'es' → logprob: -1.9072425365447998
    4. 'des' → logprob: -1.9072425365447998
    5. ' un' → logprob: -3.4072425365448
    6. ' espaces' → logprob: -3.5322425365448
    7. ' espace' → logprob: -4.282242774963379
    8. ''espace' → logprob: -5.032242774963379
    9. 'esp' → logprob: -5.532242774963379
    10. 'spaces' → logprob: -5.532242774963379

Token 62: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.4573148787021637
    2. 'esp' → logprob: -1.0823148488998413
    3. 'es' → logprob: -4.457314968109131
    4. 'spaces' → logprob: -4.957314968109131
    5. ''esp' → logprob: -5.332314968109131
    6. ' espace' → logprob: -6.457314968109131
    7. ''espace' → logprob: -6.832314968109131
    8. 'space' → logprob: -7.207314968109131
    9. ' ' → logprob: -7.332314968109131
    10. ' espacios' → logprob: -9.207314491271973

Token 63: '
' (ID: 198)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.4706825315952301
    2. 'elements' → logprob: -2.0956826210021973
    3. 'liste' → logprob: -3.2206826210021973
    4. 'n' → logprob: -3.3456826210021973
    5. 's' → logprob: -3.4706826210021973
    6. 'values' → logprob: -3.5956826210021973
    7. ' numbers' → logprob: -3.8456826210021973
    8. 'list' → logprob: -4.095682621002197
    9. 'lst' → logprob: -4.220682621002197
    10. 'L' → logprob: -4.720682621002197

Token 64: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.16045422852039337
    2. 'elements' → logprob: -2.785454273223877
    3. 'values' → logprob: -3.910454273223877
    4. 'liste' → logprob: -4.160454273223877
    5. 'lst' → logprob: -4.285454273223877
    6. ' numbers' → logprob: -4.285454273223877
    7. 'L' → logprob: -5.660454273223877
    8. 'nums' → logprob: -5.660454273223877
    9. 'val' → logprob: -5.910454273223877
    10. 'ent' → logprob: -6.160454273223877

Token 65: ' input' (ID: 3422)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5892623066902161
    2. 'elements' → logprob: -1.7142622470855713
    3. 'L' → logprob: -2.5892622470855713
    4. 'values' → logprob: -3.0892622470855713
    5. 'lst' → logprob: -3.3392622470855713
    6. ' numbers' → logprob: -3.7142622470855713
    7. 'liste' → logprob: -3.8392622470855713
    8. 'l' → logprob: -4.33926248550415
    9. ' elements' → logprob: -4.71426248550415
    10. ' L' → logprob: -4.83926248550415

Token 66: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007888511754572392
    2. '().' → logprob: -4.882888317108154
    3. '(' → logprob: -9.257888793945312
    4. '())' → logprob: -10.007888793945312
    5. ' ()' → logprob: -10.507888793945312
    6. 's' → logprob: -10.632888793945312
    7. ' =' → logprob: -10.632888793945312
    8. '=' → logprob: -11.632888793945312
    9. ')' → logprob: -11.632888793945312
    10. '("' → logprob: -11.882888793945312

Token 67: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06445088982582092
    2. '().' → logprob: -3.064450979232788
    3. 's' → logprob: -5.564450740814209
    4. ')' → logprob: -5.689450740814209
    5. '(' → logprob: -5.939450740814209
    6. ' =' → logprob: -6.439450740814209
    7. '())' → logprob: -7.439450740814209
    8. '.' → logprob: -7.814450740814209
    9. '.split' → logprob: -7.939450740814209
    10. ' )' → logprob: -8.064451217651367

Token 68: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01331999059766531
    2. ' une' → logprob: -4.888319969177246
    3. ' la' → logprob: -6.138319969177246
    4. 'une' → logprob: -6.388319969177246
    5. '().' → logprob: -6.888319969177246
    6. 'la' → logprob: -8.263319969177246
    7. '(' → logprob: -8.513319969177246
    8. ' ()' → logprob: -8.638319969177246
    9. 'l' → logprob: -10.138319969177246
    10. '('' → logprob: -10.513319969177246

Token 69: ' chaine' (ID: 192094)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.7754260301589966
    2. 'ligne' → logprob: -0.7754260301589966
    3. ' chaîne' → logprob: -4.025425910949707
    4. ' seule' → logprob: -4.025425910949707
    5. ' ' → logprob: -4.400425910949707
    6. 'chaine' → logprob: -4.775425910949707
    7. 'l' → logprob: -4.900425910949707
    8. '()' → logprob: -5.275425910949707
    9. ')' → logprob: -6.775425910949707
    10. ' chaine' → logprob: -6.775425910949707

Token 70: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3171015679836273
    2. 'de' → logprob: -1.5671015977859497
    3. ' ' → logprob: -3.81710147857666
    4. '()' → logprob: -4.06710147857666
    5. ' =' → logprob: -4.56710147857666
    6. ')' → logprob: -5.94210147857666
    7. ' )' → logprob: -6.06710147857666
    8. 's' → logprob: -6.69210147857666
    9. ',' → logprob: -6.94210147857666
    10. '<|end|>' → logprob: -6.94210147857666

Token 71: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.035828948020935
    2. ' numbers' → logprob: -2.1608290672302246
    3. 'numbers' → logprob: -2.5358290672302246
    4. ' split' → logprob: -2.6608290672302246
    5. ' la' → logprob: -2.7858290672302246
    6. ' les' → logprob: -3.0358290672302246
    7. ' elements' → logprob: -3.7858290672302246
    8. ' lst' → logprob: -3.7858290672302246
    9. 'ent' → logprob: -4.035829067230225
    10. 'values' → logprob: -4.160829067230225

Token 72: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006678790668956935
    2. '(' → logprob: -8.125667572021484
    3. '('' → logprob: -8.875667572021484
    4. '(),' → logprob: -9.500667572021484
    5. ' ()' → logprob: -9.500667572021484
    6. '()]' → logprob: -10.500667572021484
    7. '("' → logprob: -11.250667572021484
    8. '().' → logprob: -11.500667572021484
    9. '())' → logprob: -11.500667572021484
    10. '（）' → logprob: -12.250667572021484

Token 73: ' ')' (ID: 35910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4203784167766571
    2. ' )' → logprob: -2.2953784465789795
    3. ' ')' → logprob: -2.4203784465789795
    4. '')' → logprob: -2.4203784465789795
    5. '()' → logprob: -2.9203784465789795
    6. ' ' → logprob: -5.6703782081604
    7. ''' → logprob: -5.6703782081604
    8. '())' → logprob: -6.6703782081604
    9. ' ')'' → logprob: -7.1703782081604
    10. ' ")' → logprob: -7.7953782081604

Token 74: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08241662383079529
    2. ')' → logprob: -2.832416534423828
    3. '())' → logprob: -4.082416534423828
    4. ' )' → logprob: -6.582416534423828
    5. '().' → logprob: -7.457416534423828
    6. '()
' → logprob: -8.457416534423828
    7. ' ()' → logprob: -8.582416534423828
    8. '(' → logprob: -8.957416534423828
    9. '()`' → logprob: -8.957416534423828
    10. '(),' → logprob: -9.332416534423828

Token 75: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.05468207970261574
    2. 'p' → logprob: -3.1796820163726807
    3. 'pte' → logprob: -4.80468225479126
    4. 'page' → logprob: -7.05468225479126
    5. 'ppe' → logprob: -7.30468225479126
    6. 'nte' → logprob: -7.42968225479126
    7. 'per' → logprob: -8.554681777954102
    8. 'пе' → logprob: -8.804681777954102
    9. '>' → logprob: -8.929681777954102
    10. ')' → logprob: -9.429681777954102

Token 76: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033867329359054565
    2. ')' → logprob: -4.158867359161377
    3. ' ()' → logprob: -4.658867359161377
    4. ' )' → logprob: -5.783867359161377
    5. '(' → logprob: -6.533867359161377
    6. '())' → logprob: -6.908867359161377
    7. ' la' → logprob: -7.658867359161377
    8. '('' → logprob: -8.158866882324219
    9. ' ())' → logprob: -8.283866882324219
    10. 'la' → logprob: -8.408866882324219

Token 77: ' chaine' (ID: 192094)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5730168223381042
    2. ' chaîne' → logprob: -1.448016881942749
    3. 'cha' → logprob: -1.823016881942749
    4. ' chaine' → logprob: -3.323016881942749
    5. 'ligne' → logprob: -6.94801664352417
    6. 'entrée' → logprob: -7.57301664352417
    7. 's' → logprob: -7.94801664352417
    8. 'ch' → logprob: -8.073017120361328
    9. 'string' → logprob: -8.198017120361328
    10. 'chain' → logprob: -8.198017120361328

Token 78: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03858954831957817
    2. ')' → logprob: -3.5385894775390625
    3. ' )' → logprob: -5.7885894775390625
    4. '())' → logprob: -6.1635894775390625
    5. ' ()' → logprob: -6.6635894775390625
    6. ' en' → logprob: -8.413589477539062
    7. ',' → logprob: -8.413589477539062
    8. '(' → logprob: -8.538589477539062
    9. 'input' → logprob: -8.663589477539062
    10. 'en' → logprob: -9.038589477539062

Token 79: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.08912201970815659
    2. ' partir' → logprob: -3.5891220569610596
    3. 's' → logprob: -4.3391218185424805
    4. ''' → logprob: -4.7141218185424805
    5. 'l' → logprob: -4.7141218185424805
    6. 'au' → logprob: -5.0891218185424805
    7. ' l' → logprob: -5.5891218185424805
    8. 'Chaque' → logprob: -5.8391218185424805
    9. ' ' → logprob: -6.0891218185424805
    10. 'cha' → logprob: -6.2141218185424805

Token 80: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.5998354554176331
    2. 'es' → logprob: -1.3498353958129883
    3. ''espace' → logprob: -2.0998353958129883
    4. ' ' → logprob: -3.0998353958129883
    5. ''' → logprob: -4.974835395812988
    6. ' espaces' → logprob: -5.224835395812988
    7. ''esp' → logprob: -5.599835395812988
    8. 'esp' → logprob: -5.974835395812988
    9. 'space' → logprob: -6.224835395812988
    10. '"' → logprob: -6.349835395812988

Token 81: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8543100953102112
    2. 'N' → logprob: -1.3543100357055664
    3. 's' → logprob: -2.4793100357055664
    4. ',' → logprob: -2.7293100357055664
    5. ' )' → logprob: -3.3543100357055664
    6. 'tokens' → logprob: -3.6043100357055664
    7. 'n' → logprob: -3.9793100357055664
    8. ' N' → logprob: -4.104310035705566
    9. ')
' → logprob: -4.479310035705566
    10. ' ,' → logprob: -4.729310035705566

Token 82: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5789968967437744
    2. ' map' → logprob: -1.8289968967437744
    3. 'split' → logprob: -3.5789968967437744
    4. 'tokens' → logprob: -3.5789968967437744
    5. ' N' → logprob: -3.7039968967437744
    6. ')' → logprob: -3.7039968967437744
    7. 'N' → logprob: -3.9539968967437744
    8. ' tokens' → logprob: -3.9539968967437744
    9. 'strip' → logprob: -4.078996658325195
    10. '#' → logprob: -4.203996658325195

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009148874320089817
    2. '(lambda' → logprob: -5.634149074554443
    3. '(str' → logprob: -6.009149074554443
    4. '(' → logprob: -6.134149074554443
    5. 'int' → logprob: -7.509149074554443
    6. '(map' → logprob: -9.134148597717285
    7. '```' → logprob: -9.759148597717285
    8. '()' → logprob: -9.759148597717285
    9. '<int' → logprob: -10.134148597717285
    10. '(list' → logprob: -10.259148597717285

Token 84: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03505094349384308
    2. ',' → logprob: -3.410050868988037
    3. '),' → logprob: -7.910050868988037
    4. ',)' → logprob: -8.410051345825195
    5. '`)' → logprob: -8.785051345825195
    6. '))' → logprob: -9.285051345825195
    7. ')`' → logprob: -9.660051345825195
    8. '())' → logprob: -9.660051345825195
    9. ',map' → logprob: -9.660051345825195
    10. '(' → logprob: -9.785051345825195

Token 85: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.33059611916542053
    2. ')' → logprob: -1.7055960893630981
    3. ' input' → logprob: -2.3305962085723877
    4. ' )' → logprob: -6.580595970153809
    5. '(input' → logprob: -7.455595970153809
    6. '<input' → logprob: -8.580595970153809
    7. '[input' → logprob: -9.080595970153809
    8. '...)' → logprob: -9.330595970153809
    9. '...' → logprob: -9.830595970153809
    10. ' ' → logprob: -10.580595970153809

Token 86: ' convert' (ID: 8452)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014298075810074806
    2. '(' → logprob: -5.639297962188721
    3. ' )' → logprob: -5.889297962188721
    4. 'N' → logprob: -7.264297962188721
    5. 'input' → logprob: -7.264297962188721
    6. 'n' → logprob: -7.264297962188721
    7. '(
' → logprob: -7.639297962188721
    8. '(input' → logprob: -7.639297962188721
    9. '),' → logprob: -7.639297962188721
    10. '()' → logprob: -7.764297962188721

Token 87: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.003986862022429705
    2. 'i' → logprob: -6.253986835479736
    3. 't' → logprob: -6.628986835479736
    4. ' it' → logprob: -9.003987312316895
    5. '```' → logprob: -9.128987312316895
    6. 'is' → logprob: -9.628987312316895
    7. ')' → logprob: -10.253987312316895
    8. 'issent' → logprob: -10.503987312316895
    9. '#' → logprob: -10.566487312316895
    10. 'issant' → logprob: -10.878987312316895

Token 88: ' chaque' (ID: 21194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7661799192428589
    2. '(input' → logprob: -0.8911799192428589
    3. '(int' → logprob: -2.8911800384521484
    4. ')' → logprob: -3.7661800384521484
    5. '(str' → logprob: -4.266180038452148
    6. '(list' → logprob: -4.516180038452148
    7. '(lambda' → logprob: -5.516180038452148
    8. '(
' → logprob: -5.766180038452148
    9. 'les' → logprob: -6.141180038452148
    10. 'input' → logprob: -6.516180038452148

Token 89: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0008977661491371691
    2. ')' → logprob: -7.5008978843688965
    3. ' élément' → logprob: -8.875897407531738
    4. 'element' → logprob: -10.500897407531738
    5. 'él' → logprob: -10.750897407531738
    6. 'm' → logprob: -10.750897407531738
    7. 'chaine' → logprob: -10.875897407531738
    8. ' )' → logprob: -11.000897407531738
    9. ' ' → logprob: -11.000897407531738
    10. 'entrée' → logprob: -11.000897407531738

Token 90: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24008741974830627
    2. '(input' → logprob: -1.8650873899459839
    3. '(' → logprob: -3.3650875091552734
    4. '(
' → logprob: -4.740087509155273
    5. 'input' → logprob: -5.740087509155273
    6. '(list' → logprob: -6.240087509155273
    7. '(lambda' → logprob: -6.490087509155273
    8. 'list' → logprob: -6.490087509155273
    9. '(int' → logprob: -6.615087509155273
    10. ' )' → logprob: -6.740087509155273

Token 91: ' entier' (ID: 80473)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.21240325272083282
    2. 'int' → logprob: -1.7124032974243164
    3. ' entier' → logprob: -4.837403297424316
    4. ' int' → logprob: -6.337403297424316
    5. ' ent' → logprob: -7.087403297424316
    6. 'nombre' → logprob: -9.587403297424316
    7. 'inte' → logprob: -9.962403297424316
    8. '_ent' → logprob: -10.087403297424316
    9. '<int' → logprob: -10.462403297424316
    10. 'un' → logprob: -10.837403297424316

Token 92: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28024256229400635
    2. ')
' → logprob: -3.030242443084717
    3. 'n' → logprob: -3.280242443084717
    4. 'N' → logprob: -3.530242443084717
    5. 'lst' → logprob: -3.780242443084717
    6. 'liste' → logprob: -4.155242443084717
    7. 'numbers' → logprob: -4.280242443084717
    8. 'li' → logprob: -4.780242443084717
    9. 'L' → logprob: -4.905242443084717
    10. 'elements' → logprob: -5.030242443084717

Token 93: ' et' (ID: 859)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.3112788200378418
    2. ' lst' → logprob: -1.4362788200378418
    3. 'liste' → logprob: -2.311278820037842
    4. 'N' → logprob: -2.436278820037842
    5. ' N' → logprob: -2.936278820037842
    6. 'L' → logprob: -3.061278820037842
    7. ' L' → logprob: -3.186278820037842
    8. 'list' → logprob: -3.436278820037842
    9. 'li' → logprob: -3.936278820037842
    10. ' liste' → logprob: -3.936278820037842

Token 94: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1273627132177353
    2. ' list' → logprob: -2.1273627281188965
    3. 'liste' → logprob: -8.627362251281738
    4. ' liste' → logprob: -9.752362251281738
    5. ' N' → logprob: -10.127362251281738
    6. 'tolist' → logprob: -10.252362251281738
    7. ' listes' → logprob: -10.627362251281738
    8. ')' → logprob: -10.877362251281738
    9. '_list' → logprob: -11.252362251281738
    10. '```' → logprob: -11.502362251281738

Token 95: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2584330141544342
    2. '()' → logprob: -1.5084329843521118
    3. '(...)' → logprob: -5.133432865142822
    4. '=' → logprob: -8.63343334197998
    5. '(
' → logprob: -9.50843334197998
    6. 's' → logprob: -9.88343334197998
    7. '(map' → logprob: -10.13343334197998
    8. '(com' → logprob: -10.63343334197998
    9. '(int' → logprob: -10.75843334197998
    10. ')' → logprob: -10.75843334197998

Token 96: ' fait' (ID: 7473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8167727589607239
    2. ' crée' → logprob: -1.316772699356079
    3. 'convert' → logprob: -2.316772699356079
    4. '(' → logprob: -2.441772699356079
    5. '()' → logprob: -3.816772699356079
    6. '(
' → logprob: -4.191772937774658
    7. ' transforme' → logprob: -4.691772937774658
    8. '(convert' → logprob: -4.941772937774658
    9. 'cr' → logprob: -5.441772937774658
    10. 'transform' → logprob: -5.691772937774658

Token 97: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1005860567092896
    2. '()' → logprob: -1.2255860567092896
    3. 'la' → logprob: -2.4755859375
    4. '(' → logprob: -2.7255859375
    5. ' une' → logprob: -2.9755859375
    6. '```' → logprob: -3.1005859375
    7. '[]' → logprob: -3.3505859375
    8. 'ens' → logprob: -3.9755859375
    9. ' la' → logprob: -4.1005859375
    10. '([]' → logprob: -4.8505859375

Token 98: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.1515144407749176
    2. 'list' → logprob: -2.0265145301818848
    3. ' liste' → logprob: -4.901514530181885
    4. 's' → logprob: -7.776514530181885
    5. '```' → logprob: -8.026514053344727
    6. ' list' → logprob: -8.526514053344727
    7. 'lis' → logprob: -9.526514053344727
    8. 'tolist' → logprob: -9.776514053344727
    9. 'l' → logprob: -10.026514053344727
    10. 'ma' → logprob: -10.276514053344727

Token 99: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4249021112918854
    2. 'n' → logprob: -1.674902081489563
    3. 'N' → logprob: -3.4249022006988525
    4. 'numbers' → logprob: -3.7999022006988525
    5. 'input' → logprob: -3.9249022006988525
    6. ')' → logprob: -4.049901962280273
    7. '()' → logprob: -4.174901962280273
    8. 'elements' → logprob: -4.674901962280273
    9. '(
' → logprob: -5.174901962280273
    10. 's' → logprob: -5.174901962280273

Token 100: ' ces' (ID: 10532)
  Prédit: 'ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ces' → logprob: -0.03750276938080788
    2. ' ces' → logprob: -4.037502765655518
    3. 'int' → logprob: -5.037502765655518
    4. 'rés' → logprob: -5.162502765655518
    5. 'ent' → logprob: -6.412502765655518
    6. 'tokens' → logprob: -6.787502765655518
    7. 'val' → logprob: -7.162502765655518
    8. 'result' → logprob: -7.787502765655518
    9. 'élé' → logprob: -7.912502765655518
    10. 't' → logprob: -8.162503242492676

Token 101: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1291072815656662
    2. ' éléments' → logprob: -2.5041072368621826
    3. 'ent' → logprob: -3.3791072368621826
    4. ' ent' → logprob: -6.004107475280762
    5. 'int' → logprob: -7.254107475280762
    6. ' nombres' → logprob: -7.254107475280762
    7. ' él' → logprob: -8.254107475280762
    8. 'elements' → logprob: -8.504107475280762
    9. ' valeurs' → logprob: -8.879107475280762
    10. 'él' → logprob: -9.004107475280762

Token 102: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.014388673938810825
    2. 'i' → logprob: -4.389388561248779
    3. 'ires' → logprob: -8.014389038085938
    4. 'm' → logprob: -8.139389038085938
    5. '```' → logprob: -8.264389038085938
    6. 'ier' → logprob: -8.514389038085938
    7. 'ières' → logprob: -8.639389038085938
    8. 'nts' → logprob: -9.639389038085938
    9. ']' → logprob: -9.764389038085938
    10. 'ments' → logprob: -9.889389038085938

Token 103: '
' (ID: 198)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -1.1821516752243042
    2. 'L' → logprob: -1.5571516752243042
    3. 'numbers' → logprob: -1.9321516752243042
    4. 'N' → logprob: -2.4321517944335938
    5. 'l' → logprob: -2.9321517944335938
    6. 'liste' → logprob: -3.0571517944335938
    7. 'n' → logprob: -3.0571517944335938
    8. 'lst' → logprob: -3.5571517944335938
    9. 'ma' → logprob: -3.8071517944335938
    10. ')' → logprob: -5.182151794433594

Token 104: 'H' (ID: 39)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.846036434173584
    2. 'numbers' → logprob: -1.096036434173584
    3. 'lst' → logprob: -1.971036434173584
    4. 'liste' → logprob: -3.221036434173584
    5. 'elements' → logprob: -3.596036434173584
    6. 'values' → logprob: -4.596036434173584
    7. 'l' → logprob: -5.596036434173584
    8. 'nums' → logprob: -5.721036434173584
    9. 'ma' → logprob: -6.096036434173584
    10. 'ent' → logprob: -6.221036434173584

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4746217131614685
    2. '=' → logprob: -0.9746217131614685
    3. 's' → logprob: -7.849621772766113
    4. '_' → logprob: -9.474621772766113
    5. '=[]' → logprob: -10.724621772766113
    6. ' ' → logprob: -11.849621772766113
    7. '_list' → logprob: -12.224621772766113
    8. 'list' → logprob: -12.474621772766113
    9. ' =[' → logprob: -12.599621772766113
    10. '=input' → logprob: -12.724621772766113

Token 106: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04859395697712898
    2. ' list' → logprob: -3.0485939979553223
    3. '[list' → logprob: -12.798593521118164
    4. '[' → logprob: -13.173593521118164
    5. ' [' → logprob: -13.798593521118164
    6. 'List' → logprob: -15.423593521118164
    7. '	list' → logprob: -15.923593521118164
    8. 'li' → logprob: -15.923593521118164
    9. '=list' → logprob: -16.423593521118164
    10. 'liste' → logprob: -16.548593521118164

Token 107: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2537793219089508
    2. '(' → logprob: -1.5037792921066284
    3. '(int' → logprob: -6.503779411315918
    4. '(input' → logprob: -8.128779411315918
    5. '(
' → logprob: -11.003779411315918
    6. '(m' → logprob: -11.378779411315918
    7. ' (' → logprob: -11.503779411315918
    8. '(

' → logprob: -12.003779411315918
    9. '(s' → logprob: -12.628779411315918
    10. '(mapping' → logprob: -13.128779411315918

Token 108: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08906673640012741
    2. '(' → logprob: -2.464066743850708
    3. '<int' → logprob: -9.464066505432129
    4. '(
' → logprob: -11.589066505432129
    5. '(lambda' → logprob: -11.964066505432129
    6. 'int' → logprob: -12.214066505432129
    7. '(input' → logprob: -12.339066505432129
    8. ' (' → logprob: -12.339066505432129
    9. '(str' → logprob: -12.464066505432129
    10. '<|end|>' → logprob: -12.714066505432129

Token 109: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10315249860286713
    2. ',input' → logprob: -2.3531525135040283
    3. ',' → logprob: -5.978152275085449
    4. '(' → logprob: -7.978152275085449
    5. 'input' → logprob: -10.47815227508545
    6. ' (' → logprob: -10.47815227508545
    7. '=input' → logprob: -12.47815227508545
    8. ' ,' → logprob: -12.97815227508545
    9. ' input' → logprob: -13.47815227508545
    10. '(
' → logprob: -14.72815227508545

Token 110: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023292528465390205
    2. ' input' → logprob: -3.7732925415039062
    3. '(input' → logprob: -10.023292541503906
    4. ',input' → logprob: -13.398292541503906
    5. ' ' → logprob: -15.023292541503906
    6. '<input' → logprob: -15.273292541503906
    7. '	input' → logprob: -15.648292541503906
    8. '   ' → logprob: -16.648292541503906
    9. '=input' → logprob: -16.648292541503906
    10. '[input' → logprob: -16.648292541503906

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014890989288687706
    2. '()' → logprob: -4.264891147613525
    3. '()))' → logprob: -7.639891147613525
    4. '())' → logprob: -9.014890670776367
    5. '(' → logprob: -10.139890670776367
    6. '())))' → logprob: -10.389890670776367
    7. '()));' → logprob: -10.764890670776367
    8. ' ().' → logprob: -11.764890670776367
    9. '('' → logprob: -12.389890670776367
    10. ' ()' → logprob: -12.764890670776367

Token 112: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002478627720847726
    2. 'strip' → logprob: -6.00247859954834
    3. ' split' → logprob: -13.12747859954834
    4. 'rstrip' → logprob: -14.00247859954834
    5. ')' → logprob: -16.502479553222656
    6. 'spl' → logprob: -17.002479553222656
    7. '(split' → logprob: -17.502479553222656
    8. ' strip' → logprob: -18.752479553222656
    9. '.split' → logprob: -18.877479553222656
    10. 'read' → logprob: -19.752479553222656

Token 113: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.19686481356620789
    2. '()' → logprob: -2.0718648433685303
    3. '()))' → logprob: -3.0718648433685303
    4. '())' → logprob: -5.696864604949951
    5. '(' → logprob: -5.821864604949951
    6. '())))' → logprob: -10.69686508178711
    7. '("' → logprob: -10.82186508178711
    8. '(','' → logprob: -11.07186508178711
    9. '()));' → logprob: -11.69686508178711
    10. '))' → logprob: -12.19686508178711

Token 114: ' '' (ID: 461)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.13642439246177673
    2. ')' → logprob: -2.8864243030548096
    3. ' '' → logprob: -3.3864243030548096
    4. '')' → logprob: -4.261424541473389
    5. ')))' → logprob: -4.261424541473389
    6. ''' → logprob: -5.636424541473389
    7. ' ')' → logprob: -5.761424541473389
    8. ''))' → logprob: -6.136424541473389
    9. '()' → logprob: -7.636424541473389
    10. ' ' → logprob: -8.88642406463623

Token 115: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01821327395737171
    2. ')' → logprob: -4.018213272094727
    3. '))' → logprob: -10.018213272094727
    4. '))))' → logprob: -11.393213272094727
    5. '')))' → logprob: -13.018213272094727
    6. ')))
' → logprob: -13.268213272094727
    7. '())))' → logprob: -13.643213272094727
    8. ')));' → logprob: -13.893213272094727
    9. ' ' → logprob: -14.768213272094727
    10. ')))

' → logprob: -14.768213272094727

Token 116: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48195964097976685
    2. 'for' → logprob: -1.106959581375122
    3. 'print' → logprob: -3.731959581375122
    4. 'if' → logprob: -4.981959819793701
    5. 's' → logprob: -5.731959819793701
    6. '
' → logprob: -5.731959819793701
    7. 'i' → logprob: -5.731959819793701
    8. 'n' → logprob: -6.356959819793701
    9. 'f' → logprob: -6.606959819793701
    10. ')' → logprob: -7.106959819793701

Token 117: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8078935742378235
    2. 'for' → logprob: -1.4328935146331787
    3. 'if' → logprob: -2.1828935146331787
    4. 's' → logprob: -3.3078935146331787
    5. 'total' → logprob: -3.3078935146331787
    6. 'print' → logprob: -3.4328935146331787
    7. 'max' → logprob: -3.6828935146331787
    8. 'result' → logprob: -4.182893753051758
    9. 'sum' → logprob: -4.307893753051758
    10. 'count' → logprob: -4.932893753051758

Token 118: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0017462196992710233
    2. 'if' → logprob: -6.50174617767334
    3. 'ifier' → logprob: -9.37674617767334
    4. 'ification' → logprob: -9.50174617767334
    5. 'ifiez' → logprob: -9.87674617767334
    6. 'ify' → logprob: -11.37674617767334
    7. 'ifié' → logprob: -12.12674617767334
    8. 'ifi' → logprob: -12.25174617767334
    9. 'ife' → logprob: -12.37674617767334
    10. '#' → logprob: -12.87674617767334

Token 119: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6982151865959167
    2. ' ' → logprob: -1.5732152462005615
    3. 'if' → logprob: -2.0732152462005615
    4. 's' → logprob: -2.6982152462005615
    5. '(len' → logprob: -3.1982152462005615
    6. ' len' → logprob: -4.073215007781982
    7. '(' → logprob: -4.323215007781982
    8. 'len' → logprob: -4.323215007781982
    9. ' si' → logprob: -5.198215007781982
    10. ')' → logprob: -5.573215007781982

Token 120: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.39752307534217834
    2. 'len' → logprob: -1.147523045539856
    3. ' N' → logprob: -5.647522926330566
    4. ' all' → logprob: -5.897522926330566
    5. ' H' → logprob: -6.522522926330566
    6. 'N' → logprob: -7.397522926330566
    7. ' max' → logprob: -7.647522926330566
    8. 'H' → logprob: -7.772522926330566
    9. 'all' → logprob: -7.897522926330566
    10. 'max' → logprob: -8.147522926330566

Token 121: ' liste' (ID: 31719)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1341749131679535
    2. 'long' → logprob: -3.5091748237609863
    3. ' longueur' → logprob: -3.6341748237609863
    4. ' len' → logprob: -3.7591748237609863
    5. ' somme' → logprob: -4.384174823760986
    6. 's' → logprob: -4.509174823760986
    7. 'liste' → logprob: -5.634174823760986
    8. ' ' → logprob: -6.009174823760986
    9. 'l' → logprob: -6.509174823760986
    10. ' liste' → logprob: -6.509174823760986

Token 122: ' contient' (ID: 89067)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.2832920551300049
    2. 'len' → logprob: -1.5332920551300049
    3. ')' → logprob: -2.283292055130005
    4. 'H' → logprob: -2.658292055130005
    5. '(H' → logprob: -2.783292055130005
    6. '(' → logprob: -3.158292055130005
    7. '[' → logprob: -3.283292055130005
    8. 'est' → logprob: -3.533292055130005
    9. ' H' → logprob: -3.783292055130005
    10. ' est' → logprob: -3.783292055130005

Token 123: ' un' (ID: 537)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5405760407447815
    2. ' all' → logprob: -1.7905759811401367
    3. ' ' → logprob: -2.4155759811401367
    4. ' N' → logprob: -3.1655759811401367
    5. 'len' → logprob: -3.2905759811401367
    6. '(len' → logprob: -3.7905759811401367
    7. ' un' → logprob: -4.165575981140137
    8. ' any' → logprob: -4.415575981140137
    9. 'all' → logprob: -5.290575981140137
    10. ' une' → logprob: -5.915575981140137

Token 124: ' seul' (ID: 33041)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.885786235332489
    2. 'élé' → logprob: -1.1357862949371338
    3. ' ' → logprob: -2.010786294937134
    4. '_' → logprob: -3.635786294937134
    5. ' element' → logprob: -3.885786294937134
    6. 'e' → logprob: -4.260786056518555
    7. ' trip' → logprob: -4.760786056518555
    8. ' nombre' → logprob: -4.885786056518555
    9. ' éléments' → logprob: -5.135786056518555
    10. '0' → logprob: -5.135786056518555

Token 125: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6387558579444885
    2. ' élément' → logprob: -0.7637558579444885
    3. ' element' → logprob: -6.263755798339844
    4. 'element' → logprob: -6.388755798339844
    5. ' ' → logprob: -6.513755798339844
    6. '_' → logprob: -8.013755798339844
    7. ' #' → logprob: -8.638755798339844
    8. ' éléments' → logprob: -9.263755798339844
    9. '#' → logprob: -9.513755798339844
    10. ' ' → logprob: -9.513755798339844

Token 126: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15421344339847565
    2. ' if' → logprob: -2.6542134284973145
    3. '
' → logprob: -3.4042134284973145
    4. ':' → logprob: -3.7792134284973145
    5. ':
' → logprob: -4.4042134284973145
    6. ' 
' → logprob: -6.4042134284973145
    7. 'i' → logprob: -7.4042134284973145
    8. '  
' → logprob: -7.6542134284973145
    9. '[' → logprob: -7.9042134284973145
    10. '#' → logprob: -8.404213905334473

Token 127: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021242110524326563
    2. ' if' → logprob: -6.377124309539795
    3. ':' → logprob: -8.377123832702637
    4. 'i' → logprob: -9.127123832702637
    5. ':
' → logprob: -10.127123832702637
    6. '
' → logprob: -10.252123832702637
    7. '[' → logprob: -13.627123832702637
    8. '```' → logprob: -13.752123832702637
    9. ';if' → logprob: -13.877123832702637
    10. 'If' → logprob: -14.127123832702637

Token 128: ' N' (ID: 478)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.004496939014643431
    2. ' N' → logprob: -5.754497051239014
    3. 'len' → logprob: -6.754497051239014
    4. ' ' → logprob: -8.879496574401855
    5. 'N' → logprob: -11.879496574401855
    6. ' ' → logprob: -12.504496574401855
    7. '(len' → logprob: -13.379496574401855
    8. '	len' → logprob: -14.004496574401855
    9. ' n' → logprob: -15.629496574401855
    10. '  ' → logprob: -15.879496574401855

Token 129: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06307598203420639
    2. '==' → logprob: -2.8130760192871094
    3. ' <=' → logprob: -6.938076019287109
    4. ' >' → logprob: -10.06307601928711
    5. '<=' → logprob: -10.31307601928711
    6. ' <' → logprob: -10.81307601928711
    7. ' ' → logprob: -11.06307601928711
    8. ' ' → logprob: -11.56307601928711
    9. '>' → logprob: -12.31307601928711
    10. '=' → logprob: -12.43807601928711

Token 130: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054883070290088654
    2. '1' → logprob: -2.9298830032348633
    3. ' ' → logprob: -14.804883003234863
    4. '0' → logprob: -15.554883003234863
    5. '<|end|>' → logprob: -16.05488395690918
    6. '  ' → logprob: -16.30488395690918
    7. '=' → logprob: -17.74238395690918
    8. '```' → logprob: -17.92988395690918
    9. '2' → logprob: -18.99238395690918
    10. '   ' → logprob: -19.30488395690918

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '0' → logprob: -16.258615493774414
    4. ' ' → logprob: -16.633615493774414
    5. '   ' → logprob: -17.008615493774414
    6. '```' → logprob: -17.758615493774414
    7. '  ' → logprob: -18.008615493774414
    8. '=' → logprob: -18.446115493774414
    9. '' → logprob: -18.508615493774414
    10. '<|end|>' → logprob: -18.758615493774414

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008640571613796055
    2. ':
' → logprob: -7.375864028930664
    3. ' :' → logprob: -8.375864028930664
    4. ' and' → logprob: -13.000864028930664
    5. ':return' → logprob: -13.250864028930664
    6. ' :
' → logprob: -13.875864028930664
    7. ':

' → logprob: -14.750864028930664
    8. '.' → logprob: -15.000864028930664
    9. ':
' → logprob: -15.375864028930664
    10. ' or' → logprob: -15.375864028930664

Token 133: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.320732593536377
    2. '   ' → logprob: -1.570732593536377
    3. ':
' → logprob: -1.570732593536377
    4. ' print' → logprob: -2.070732593536377
    5. 'print' → logprob: -2.070732593536377
    6. '
' → logprob: -2.820732593536377
    7. '	print' → logprob: -6.945732593536377
    8. ' ' → logprob: -7.320732593536377
    9. ' :
' → logprob: -7.320732593536377
    10. ' 
' → logprob: -7.570732593536377

Token 134: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12739251554012299
    2. ' print' → logprob: -2.127392530441284
    3. '
' → logprob: -8.377392768859863
    4. '   ' → logprob: -9.252392768859863
    5. ' 
' → logprob: -10.377392768859863
    6. 'pass' → logprob: -11.252392768859863
    7. '#' (adapté à ' #') → logprob: -11.377392768859863
    8. 'if' → logprob: -11.377392768859863
    9. ' ' → logprob: -11.627392768859863
    10. 'prin' → logprob: -11.877392768859863

Token 135: ' S' (ID: 336)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07034085690975189
    2. ' print' → logprob: -2.695340871810913
    3. 'pass' → logprob: -9.320341110229492
    4. 'prin' → logprob: -9.320341110229492
    5. '#' → logprob: -9.695341110229492
    6. 'pr' → logprob: -10.195341110229492
    7. 'if' → logprob: -10.820341110229492
    8. ' pass' → logprob: -11.382841110229492
    9. 'for' → logprob: -11.632841110229492
    10. ' if' → logprob: -11.757841110229492

Token 136: ''il' (ID: 14683)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6706399321556091
    2. 'ort' → logprob: -1.545639991760254
    3. '#' → logprob: -2.295639991760254
    4. 't' → logprob: -2.920639991760254
    5. 'pace' → logprob: -4.545639991760254
    6. '```' → logprob: -4.795639991760254
    7. 'ystem' → logprob: -4.920639991760254
    8. 'yntax' → logprob: -5.295639991760254
    9. 'tat' → logprob: -5.420639991760254
    10. '=' → logprob: -5.420639991760254

Token 137: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.6492352485656738
    2. ' a' → logprob: -2.149235248565674
    3. ' print' → logprob: -2.149235248565674
    4. ' est' → logprob: -2.399235248565674
    5. 'est' → logprob: -2.899235248565674
    6. ' n' → logprob: -2.899235248565674
    7. 'print' → logprob: -3.149235248565674
    8. ' y' → logprob: -3.274235248565674
    9. ' ==' → logprob: -3.274235248565674
    10. 'len' → logprob: -3.649235248565674

Token 138: ''y' (ID: 27913)
  Prédit: ''y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.0876774862408638
    2. ''est' → logprob: -3.587677478790283
    3. 'e' → logprob: -3.837677478790283
    4. 'y' → logprob: -4.212677478790283
    5. 'est' → logprob: -5.087677478790283
    6. ' y' → logprob: -5.837677478790283
    7. ''#' → logprob: -5.962677478790283
    8. ''' → logprob: -6.212677478790283
    9. ''ex' → logprob: -6.462677478790283
    10. 'a' → logprob: -6.962677478790283

Token 139: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12768644094467163
    2. ' a' → logprob: -2.1276865005493164
    3. 'avait' → logprob: -7.502686500549316
    4. ''a' → logprob: -9.752686500549316
    5. '#a' → logprob: -10.377686500549316
    6. 'pas' → logprob: -10.502686500549316
    7. 'à' → logprob: -11.127686500549316
    8. 'est' → logprob: -11.377686500549316
    9. '1' → logprob: -11.627686500549316
    10. ' pas' → logprob: -11.627686500549316

Token 140: ' qu' (ID: 474)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6440238356590271
    2. ' rien' → logprob: -2.144023895263672
    3. ' une' → logprob: -2.144023895263672
    4. ' pas' → logprob: -3.019023895263672
    5. ' un' → logprob: -3.269023895263672
    6. ' aucun' → logprob: -3.269023895263672
    7. 'pas' → logprob: -3.644023895263672
    8. ' seulement' → logprob: -3.769023895263672
    9. 'une' → logprob: -4.394023895263672
    10. ' aucune' → logprob: -4.644023895263672

Token 141: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.022796496748924255
    2. 'e' → logprob: -4.647796630859375
    3. 'un' → logprob: -4.897796630859375
    4. ''à' → logprob: -6.147796630859375
    5. ''une' → logprob: -7.147796630859375
    6. 'a' → logprob: -7.147796630859375
    7. ''a' → logprob: -7.772796630859375
    8. ''' → logprob: -7.897796630859375
    9. 'u' → logprob: -8.022796630859375
    10. ''au' → logprob: -9.147796630859375

Token 142: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.513893723487854
    2. 'élé' → logprob: -1.138893723487854
    3. ' élément' → logprob: -2.6388936042785645
    4. 'se' → logprob: -4.7638936042785645
    5. ' seule' → logprob: -7.2638936042785645
    6. 'element' → logprob: -8.013894081115723
    7. ' element' → logprob: -8.763894081115723
    8. ' ' → logprob: -8.888894081115723
    9. 'e' → logprob: -9.388894081115723
    10. ' Se' → logprob: -9.638894081115723

Token 143: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06308896094560623
    2. ' élément' → logprob: -2.813088893890381
    3. 'element' → logprob: -7.313088893890381
    4. ' ' → logprob: -8.813089370727539
    5. 'él' → logprob: -9.188089370727539
    6. 'é' → logprob: -9.688089370727539
    7. ' element' → logprob: -9.688089370727539
    8. 'print' → logprob: -11.063089370727539
    9. ' éléments' → logprob: -11.563089370727539
    10. 'H' → logprob: -11.938089370727539

Token 144: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6624516844749451
    2. ' print' → logprob: -1.5374517440795898
    3. ':' → logprob: -2.16245174407959
    4. ':
' → logprob: -2.53745174407959
    5. '   ' → logprob: -2.78745174407959
    6. ',' → logprob: -4.78745174407959
    7. '
' → logprob: -6.03745174407959
    8. ' :
' → logprob: -6.66245174407959
    9. ' :' → logprob: -7.78745174407959
    10. ' ,' → logprob: -8.41245174407959

Token 145: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47466734051704407
    2. ' print' → logprob: -0.9746673107147217
    3. '   ' → logprob: -7.849667549133301
    4. '
' → logprob: -10.3496675491333
    5. 'prin' → logprob: -10.7246675491333
    6. ' ' → logprob: -10.9746675491333
    7. '	print' → logprob: -10.9746675491333
    8. 'pr' → logprob: -11.0996675491333
    9. ' 
' → logprob: -11.5996675491333
    10. '#' → logprob: -11.8496675491333

Token 146: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10139576345682144
    2. 'print' → logprob: -2.351395845413208
    3. ' affiche' → logprob: -7.101395606994629
    4. ' imprime' → logprob: -8.726395606994629
    5. 'aff' → logprob: -9.726395606994629
    6. '_print' → logprob: -10.476395606994629
    7. ' continue' → logprob: -10.601395606994629
    8. 'pr' → logprob: -11.351395606994629
    9. ' met' → logprob: -11.851395606994629
    10. ' n' → logprob: -11.976395606994629

Token 147: ' '' (ID: 461)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.04564417526125908
    2. ' H' → logprob: -3.2956442832946777
    3. '0' → logprob: -4.920644283294678
    4. ' ' → logprob: -8.42064380645752
    5. '1' → logprob: -11.29564380645752
    6. '   ' → logprob: -11.92064380645752
    7. '(H' → logprob: -12.17064380645752
    8. 'l' → logprob: -12.79564380645752
    9. '100' → logprob: -12.79564380645752
    10. 'N' → logprob: -12.79564380645752

Token 148: 'Yes' (ID: 13022)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5672733187675476
    2. 'H' → logprob: -1.6922733783721924
    3. 'Yes' → logprob: -2.4422733783721924
    4. 'YES' → logprob: -2.9422733783721924
    5. '1' → logprob: -3.6922733783721924
    6. '-' → logprob: -3.6922733783721924
    7. 'Impossible' → logprob: -5.067273139953613
    8. '"' → logprob: -5.317273139953613
    9. 'NO' → logprob: -5.317273139953613
    10. 'No' → logprob: -5.692273139953613

Token 149: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.06549560278654099
    2. ''' → logprob: -3.190495491027832
    3. 'print' → logprob: -4.440495491027832
    4. ')' → logprob: -5.190495491027832
    5. '')
' → logprob: -5.940495491027832
    6. '")' → logprob: -6.565495491027832
    7. '()' → logprob: -8.940495491027832
    8. '"' → logprob: -9.440495491027832
    9. '!' → logprob: -9.565495491027832
    10. '\n' → logprob: -9.565495491027832

Token 150: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4024232029914856
    2. '   ' → logprob: -1.6524231433868408
    3. '
' → logprob: -2.277423143386841
    4. ' print' → logprob: -3.652423143386841
    5. ':' → logprob: -5.40242338180542
    6. '\n' → logprob: -5.77742338180542
    7. ')' → logprob: -7.27742338180542
    8. '    
' → logprob: -7.27742338180542
    9. ' ' → logprob: -7.90242338180542
    10. '	print' → logprob: -8.277422904968262

Token 151: ' la' (ID: 557)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2449560165405273
    2. ' la' → logprob: -1.4949560165405273
    3. ' c' → logprob: -2.3699560165405273
    4. 'the' → logprob: -2.3699560165405273
    5. ' it' → logprob: -2.7449560165405273
    6. 'c' → logprob: -3.1199560165405273
    7. ' il' → logprob: -3.4949560165405273
    8. ' on' → logprob: -3.9949560165405273
    9. 'la' → logprob: -4.119956016540527
    10. ' ce' → logprob: -4.244956016540527

Token 152: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.36317962408065796
    2. 'liste' → logprob: -1.2381796836853027
    3. ' sequence' → logprob: -5.363179683685303
    4. 'list' → logprob: -6.113179683685303
    5. 'sequence' → logprob: -6.238179683685303
    6. ' réponse' → logprob: -7.238179683685303
    7. ' sé' → logprob: -7.488179683685303
    8. 's' → logprob: -7.488179683685303
    9. 'sé' → logprob: -7.488179683685303
    10. '#' → logprob: -7.738179683685303

Token 153: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.5237112641334534
    2. 'quence' → logprob: -0.8987112641334534
    3. 'qu' → logprob: -9.148711204528809
    4. 'ri' → logprob: -9.648711204528809
    5. 'ance' → logprob: -9.773711204528809
    6. 'que' → logprob: -10.023711204528809
    7. 'q' → logprob: -10.273711204528809
    8. 'quences' → logprob: -10.523711204528809
    9. 'lection' → logprob: -10.648711204528809
    10. 'QUENCE' → logprob: -10.648711204528809

Token 154: ' respecte' (ID: 140483)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.14961515367031097
    2. ' is' → logprob: -2.2746150493621826
    3. ' peut' → logprob: -4.149615287780762
    4. ' reste' → logprob: -4.649615287780762
    5. ' can' → logprob: -5.524615287780762
    6. ' ' → logprob: -6.524615287780762
    7. 'est' → logprob: -6.524615287780762
    8. ' triv' → logprob: -7.024615287780762
    9. ' ne' → logprob: -7.399615287780762
    10. ' n' → logprob: -8.024615287780762

Token 155: ' forcément' (ID: 96692)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7929162979125977
    2. '<|end|>' → logprob: -1.0429162979125977
    3. ' l' → logprob: -2.4179162979125977
    4. ' les' → logprob: -2.9179162979125977
    5. 'the' → logprob: -4.167916297912598
    6. ' the' → logprob: -4.417916297912598
    7. ' le' → logprob: -5.167916297912598
    8. ' ' → logprob: -5.167916297912598
    9. 'l' → logprob: -5.542916297912598
    10. 'le' → logprob: -6.042916297912598

Token 157: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.697149932384491
    2. ' condition' → logprob: -1.8221499919891357
    3. 'cro' → logprob: -1.9471499919891357
    4. ' propriété' → logprob: -2.5721499919891357
    5. 'pro' → logprob: -3.8221499919891357
    6. 'strict' → logprob: -3.9471499919891357
    7. 'mont' → logprob: -4.072149753570557
    8. 'mon' → logprob: -4.447149753570557
    9. 'contr' → logprob: -5.072149753570557
    10. ' règle' → logprob: -5.572149753570557

Token 158: ' impos' (ID: 12130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10659928619861603
    2. '
' → logprob: -2.9815993309020996
    3. '<|end|>' → logprob: -3.8565993309020996
    4. ')' → logprob: -3.9815993309020996
    5. '   ' → logprob: -5.1065993309021
    6. ' print' → logprob: -6.2315993309021
    7. '\n' → logprob: -7.4815993309021
    8. ' ' → logprob: -8.606598854064941
    9. 'Yes' → logprob: -8.731598854064941
    10. ',' → logprob: -8.856598854064941

Token 159: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.04794807359576225
    2. 'é' → logprob: -3.422948122024536
    3. 'd' → logprob: -4.797947883605957
    4. 'e' → logprob: -5.422947883605957
    5. 'éd' → logprob: -7.797947883605957
    6. 'rée' → logprob: -7.797947883605957
    7. 'ed' → logprob: -8.172947883605957
    8. 'urée' → logprob: -9.297947883605957
    9. 'ées' → logprob: -9.422947883605957
    10. 'er' → logprob: -9.797947883605957

Token 160: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23807084560394287
    2. '   ' → logprob: -2.3630709648132324
    3. '
' → logprob: -2.6130709648132324
    4. ' print' → logprob: -4.113070964813232
    5. '\n' → logprob: -4.363070964813232
    6. 'Yes' → logprob: -5.238070964813232
    7. ')' → logprob: -5.738070964813232
    8. ':' → logprob: -6.988070964813232
    9. '<|end|>' → logprob: -7.238070964813232
    10. '  
' → logprob: -7.238070964813232

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.220026895403862
    2. 'print' → logprob: -1.7200268507003784
    3. '
' → logprob: -4.595026969909668
    4. ' print' → logprob: -5.595026969909668
    5. ':' → logprob: -5.720026969909668
    6. ':
' → logprob: -7.970026969909668
    7. '\n' → logprob: -8.220026969909668
    8. '    
' → logprob: -8.595026969909668
    9. '	print' → logprob: -9.095026969909668
    10. ' ' → logprob: -9.220026969909668

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027976179495453835
    2. ' print' → logprob: -3.6529762744903564
    3. '   ' → logprob: -6.402976036071777
    4. '	print' → logprob: -11.652976036071777
    5. ' ' → logprob: -12.652976036071777
    6. '
' → logprob: -12.652976036071777
    7. ' 
' → logprob: -14.527976036071777
    8. 'Print' → logprob: -14.652976036071777
    9. '    ' → logprob: -14.902976036071777
    10. '  ' → logprob: -15.152976036071777

Token 163: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.811467707157135
    2. '("' → logprob: -1.0614676475524902
    3. '(' → logprob: -1.5614676475524902
    4. '()' → logprob: -11.311468124389648
    5. '("")' → logprob: -12.936468124389648
    6. '(
' → logprob: -13.186468124389648
    7. '("""' → logprob: -15.061468124389648
    8. '(

' → logprob: -15.186468124389648
    9. '(True' → logprob: -15.186468124389648
    10. ''' → logprob: -15.186468124389648

Token 164: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -9.758300438988954e-05
    2. ' Yes' → logprob: -10.000097274780273
    3. 'Ye' → logprob: -10.875097274780273
    4. 'No' → logprob: -11.000097274780273
    5. 'Y' → logprob: -11.625097274780273
    6. 'YES' → logprob: -12.125097274780273
    7. 'Oui' → logprob: -14.750097274780273
    8. 'Yeah' → logprob: -15.000097274780273
    9. 'Yep' → logprob: -15.500097274780273
    10. 'Ya' → logprob: -15.875097274780273

Token 165: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.007535290438681841
    2. '')
' → logprob: -5.007535457611084
    3. ')' → logprob: -7.257535457611084
    4. '')
' → logprob: -9.132534980773926
    5. ')
' → logprob: -13.007534980773926
    6. ''' → logprob: -13.257534980773926
    7. '")' → logprob: -13.632534980773926
    8. '')

' → logprob: -15.007534980773926
    9. ')')
' → logprob: -15.257534980773926
    10. ')
' → logprob: -16.257535934448242

Token 166: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0792808085680008
    2. 'elif' → logprob: -2.5792808532714844
    3. '
' → logprob: -8.704280853271484
    4. 'exit' → logprob: -9.204280853271484
    5. ' else' → logprob: -9.829280853271484
    6. '    
' → logprob: -10.579280853271484
    7. ')' → logprob: -11.704280853271484
    8. '   ' → logprob: -12.079280853271484
    9. '```' → logprob: -12.329280853271484
    10. '  
' → logprob: -12.579280853271484

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005573204252868891
    2. ':
' → logprob: -7.7505574226379395
    3. ' :' → logprob: -9.000556945800781
    4. ' :
' → logprob: -14.125556945800781
    5. ':

' → logprob: -14.250556945800781
    6. ',' → logprob: -14.625556945800781
    7. ':def' → logprob: -14.875556945800781
    8. '<|end|>' → logprob: -14.875556945800781
    9. ':
' → logprob: -15.125556945800781
    10. ' if' → logprob: -16.37555694580078

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21134936809539795
    2. ' #' → logprob: -3.2113494873046875
    3. '    
' → logprob: -3.7113494873046875
    4. '    ' → logprob: -3.8363494873046875
    5. ' i' → logprob: -4.3363494873046875
    6. ' ' → logprob: -4.3363494873046875
    7. ' sorted' → logprob: -4.7113494873046875
    8. ' if' → logprob: -4.7113494873046875
    9. ' 
' → logprob: -4.8363494873046875
    10. ' ' → logprob: -4.9613494873046875

Token 169: ' #' (ID: 1069)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.6776432991027832
    2. '   ' → logprob: -1.9276432991027832
    3. ' is' → logprob: -2.427643299102783
    4. 'i' → logprob: -2.427643299102783
    5. ' valid' → logprob: -2.802643299102783
    6. ' ok' → logprob: -3.302643299102783
    7. ' for' → logprob: -3.427643299102783
    8. 'is' → logprob: -3.552643299102783
    9. 'de' → logprob: -3.802643299102783
    10. 'valid' → logprob: -3.802643299102783

Token 170: ' Cette' (ID: 27383)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.9275951385498047
    2. 'mont' → logprob: -2.0525951385498047
    3. 'i' → logprob: -2.3025951385498047
    4. 'flag' → logprob: -3.0525951385498047
    5. 'cro' → logprob: -3.0525951385498047
    6. 'in' → logprob: -3.1775951385498047
    7. 'mon' → logprob: -3.5525951385498047
    8. 'dec' → logprob: -3.5525951385498047
    9. 'strict' → logprob: -3.5525951385498047
    10. '#' → logprob: -3.6775951385498047

Token 171: ' boucle' (ID: 174211)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8353999853134155
    2. ' ' → logprob: -1.9603999853134155
    3. '#' → logprob: -2.335400104522705
    4. '_' → logprob: -2.710400104522705
    5. 'n' → logprob: -2.960400104522705
    6. ' ' → logprob: -2.960400104522705
    7. 's' → logprob: -3.085400104522705
    8. ' ligne' → logprob: -3.085400104522705
    9. ' #' → logprob: -3.335400104522705
    10. 'for' → logprob: -3.710400104522705

Token 172: ' commence' (ID: 44755)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.055537350475788116
    2. 'for' → logprob: -3.055537462234497
    3. ' ' → logprob: -5.555537223815918
    4. '<|end|>' → logprob: -7.055537223815918
    5. ' range' → logprob: -7.305537223815918
    6. '    ' → logprob: -7.930537223815918
    7. 'range' → logprob: -8.055537223815918
    8. '_for' → logprob: -8.305537223815918
    9. '   ' → logprob: -9.055537223815918
    10. '	for' → logprob: -9.180537223815918

Token 173: ' à' (ID: 1221)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7449620366096497
    2. ' for' → logprob: -1.1199619770050049
    3. 'for' → logprob: -2.994961977005005
    4. 'range' → logprob: -3.494961977005005
    5. ' par' → logprob: -3.619961977005005
    6. '   ' → logprob: -3.619961977005005
    7. ' from' → logprob: -4.369962215423584
    8. ' with' → logprob: -4.619962215423584
    9. ' range' → logprob: -4.744962215423584
    10. ' at' → logprob: -4.744962215423584

Token 174: ' ' (ID: 220)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6318643689155579
    2. '1' → logprob: -1.506864309310913
    3. 'i' → logprob: -2.006864309310913
    4. ' ' → logprob: -2.256864309310913
    5. ' index' → logprob: -5.631864547729492
    6. ' range' → logprob: -5.881864547729492
    7. '2' → logprob: -7.381864547729492
    8. 'range' → logprob: -8.506864547729492
    9. '0' → logprob: -9.006864547729492
    10. 'index' → logprob: -9.256864547729492

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11569438874721527
    2. 'i' → logprob: -2.240694284439087
    3. 'index' → logprob: -6.490694522857666
    4. 'range' → logprob: -7.615694522857666
    5. ' ' → logprob: -8.365694046020508
    6. 'indice' → logprob: -8.740694046020508
    7. 'l' → logprob: -8.865694046020508
    8. ' i' → logprob: -8.990694046020508
    9. '0' → logprob: -9.240694046020508
    10. '2' → logprob: -11.240694046020508

Token 176: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4349970817565918
    2. ',' → logprob: -1.6849970817565918
    3. 'for' → logprob: -2.934997081756592
    4. ':' → logprob: -3.184997081756592
    5. '<|end|>' → logprob: -3.934997081756592
    6. '   ' → logprob: -4.184997081756592
    7. '
' → logprob: -4.684997081756592
    8. ' to' → logprob: -4.934997081756592
    9. ' ' → logprob: -5.309997081756592
    10. 'range' → logprob: -5.559997081756592

Token 177: 'de' (ID: 613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5302373766899109
    2. ' i' → logprob: -0.9052373766899109
    3. ')' → logprob: -5.280237197875977
    4. '
' → logprob: -7.405237197875977
    5. '1' → logprob: -7.780237197875977
    6. ' ' → logprob: -8.405237197875977
    7. ',' → logprob: -9.155237197875977
    8. ' for' → logprob: -9.280237197875977
    9. ')i' → logprob: -9.405237197875977
    10. ' )' → logprob: -9.530237197875977

Token 178: 'ux' (ID: 1778)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.145416259765625
    2. ' ' → logprob: -1.395416259765625
    3. 'range' → logprob: -1.895416259765625
    4. ')' → logprob: -2.520416259765625
    5. ' range' → logprob: -2.645416259765625
    6. '2' → logprob: -2.645416259765625
    7. 'f' → logprob: -4.020416259765625
    8. 'i' → logprob: -4.520416259765625
    9. 'nd' → logprob: -4.770416259765625
    10. '0' → logprob: -4.770416259765625

Token 179: 'ième' (ID: 41126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4093923568725586
    2. 'e' → logprob: -2.2843923568725586
    3. ' )' → logprob: -3.0343923568725586
    4. ' to' → logprob: -3.2843923568725586
    5. 'nd' → logprob: -3.7843923568725586
    6. ' range' → logprob: -3.9093923568725586
    7. 'ième' → logprob: -3.9093923568725586
    8. ' in' → logprob: -4.034392356872559
    9. ' i' → logprob: -4.159392356872559
    10. ' à' → logprob: -4.284392356872559

Token 180: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1469193696975708
    2. 'token' → logprob: -1.2719193696975708
    3. '<|end|>' → logprob: -2.1469192504882812
    4. ' token' → logprob: -2.2719192504882812
    5. 'élé' → logprob: -2.5219192504882812
    6. ' élément' → logprob: -3.3969192504882812
    7. 'element' → logprob: -3.5219192504882812
    8. ' element' → logprob: -4.021919250488281
    9. 'index' → logprob: -5.396919250488281
    10. 'indice' → logprob: -5.896919250488281

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1694132685661316
    2. ',' → logprob: -2.4194133281707764
    3. ' for' → logprob: -3.6694133281707764
    4. ' to' → logprob: -4.544413089752197
    5. 'for' → logprob: -4.544413089752197
    6. ' i' → logprob: -5.044413089752197
    7. 'to' → logprob: -5.419413089752197
    8. ' )' → logprob: -5.919413089752197
    9. ' in' → logprob: -6.919413089752197
    10. 'i' → logprob: -7.169413089752197

Token 182: ' et' (ID: 859)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08547509461641312
    2. 'for' → logprob: -2.835475206375122
    3. '   ' → logprob: -4.335474967956543
    4. ',' → logprob: -6.210474967956543
    5. ' ' → logprob: -6.210474967956543
    6. '<|end|>' → logprob: -6.335474967956543
    7. ' i' → logprob: -6.835474967956543
    8. ':' → logprob: -7.460474967956543
    9. '	for' → logprob: -7.710474967956543
    10. '    ' → logprob: -7.960474967956543

Token 183: ' va' (ID: 3423)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.74431973695755
    2. 'range' → logprob: -1.2443196773529053
    3. ' range' → logprob: -1.8693196773529053
    4. 'continue' → logprob: -3.4943196773529053
    5. 'contin' → logprob: -4.119319915771484
    6. ' s' → logprob: -4.619319915771484
    7. ' va' → logprob: -5.244319915771484
    8. 's' → logprob: -5.494319915771484
    9. '<|end|>' → logprob: -5.994319915771484
    10. ' se' → logprob: -6.119319915771484

Token 184: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.029698194935917854
    2. 'jus' → logprob: -3.779698133468628
    3. ' jusque' → logprob: -5.279698371887207
    4. ' up' → logprob: -7.529698371887207
    5. ' ' → logprob: -7.904698371887207
    6. ' à' → logprob: -8.904698371887207
    7. ' de' → logprob: -9.154698371887207
    8. ' hasta' → logprob: -10.654698371887207
    9. ' até' → logprob: -10.779698371887207
    10. '   ' → logprob: -11.029698371887207

Token 185: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15814784169197083
    2. '(N' → logprob: -2.2831478118896484
    3. ' à' → logprob: -4.033147811889648
    4. '(len' → logprob: -4.033147811889648
    5. 'à' → logprob: -5.783147811889648
    6. 'range' → logprob: -7.283147811889648
    7. ' jusqu' → logprob: -7.283147811889648
    8. 'a' → logprob: -7.408147811889648
    9. ')' → logprob: -7.783147811889648
    10. '(i' → logprob: -7.783147811889648

Token 186: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.38688555359840393
    2. 'N' → logprob: -1.1368855237960815
    3. ' range' → logprob: -11.761885643005371
    4. ' ' → logprob: -13.261885643005371
    5. ' len' → logprob: -13.261885643005371
    6. 'len' → logprob: -14.011885643005371
    7. '	N' → logprob: -14.011885643005371
    8. 'range' → logprob: -14.261885643005371
    9. 'n' → logprob: -14.511885643005371
    10. ' ' → logprob: -16.136884689331055

Token 187: ' -' (ID: 533)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.690203070640564
    2. ' for' → logprob: -0.815203070640564
    3. 'range' → logprob: -3.4402031898498535
    4. ' range' → logprob: -4.3152031898498535
    5. ':' → logprob: -5.8152031898498535
    6. '(range' → logprob: -6.1902031898498535
    7. '   ' → logprob: -6.3152031898498535
    8. ',' → logprob: -6.3152031898498535
    9. ' in' → logprob: -6.9402031898498535
    10. '(' → logprob: -8.315202713012695

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01841377094388008
    2. ' ' → logprob: -4.018413543701172
    3. '2' → logprob: -8.268413543701172
    4. ')' → logprob: -12.768413543701172
    5. 'N' → logprob: -13.393413543701172
    6. ' N' → logprob: -13.643413543701172
    7. 'len' → logprob: -14.143413543701172
    8. '  ' → logprob: -15.143413543701172
    9. '-' → logprob: -15.393413543701172
    10. ' len' → logprob: -15.893413543701172

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.250045776367188
    3. '2' → logprob: -11.500045776367188
    4. '```' → logprob: -16.000045776367188
    5. '   ' → logprob: -16.250045776367188
    6. '0' → logprob: -16.750045776367188
    7. ')' → logprob: -17.375045776367188
    8. '  ' → logprob: -17.750045776367188
    9. ' ' → logprob: -18.125045776367188
    10. '１' → logprob: -18.250045776367188

Token 190: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5801847577095032
    2. ' for' → logprob: -0.8301847577095032
    3. ':' → logprob: -6.3301849365234375
    4. '   ' → logprob: -6.5801849365234375
    5. '
' → logprob: -7.5801849365234375
    6. 'range' → logprob: -8.205184936523438
    7. '	for' → logprob: -9.580184936523438
    8. ',' → logprob: -9.705184936523438
    9. ' range' → logprob: -9.955184936523438
    10. ':
' → logprob: -10.330184936523438

Token 191: 'dern' (ID: 19098)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026421865448355675
    2. ' N' → logprob: -3.6514217853546143
    3. ')' → logprob: -10.026421546936035
    4. ' range' → logprob: -10.776421546936035
    5. 'range' → logprob: -10.776421546936035
    6. ' ' → logprob: -10.901421546936035
    7. 'n' → logprob: -12.401421546936035
    8. ' )' → logprob: -12.401421546936035
    9. 'len' → logprob: -12.651421546936035
    10. '1' → logprob: -13.276421546936035

Token 192: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0005033504567109048
    2. 'iers' → logprob: -8.375503540039062
    3. 'ière' → logprob: -9.000503540039062
    4. 'ié' → logprob: -10.125503540039062
    5. 'er' → logprob: -10.750503540039062
    6. 'e' → logprob: -11.250503540039062
    7. 'ième' → logprob: -11.500503540039062
    8. 'i' → logprob: -11.625503540039062
    9. 'é' → logprob: -11.750503540039062
    10. 'ières' → logprob: -11.750503540039062

Token 193: ' élément' (ID: 99627)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4011138379573822
    2. '):' → logprob: -1.1511138677597046
    3. 'index' → logprob: -5.401113986968994
    4. ':' → logprob: -5.651113986968994
    5. 'indice' → logprob: -6.276113986968994
    6. 'élé' → logprob: -7.026113986968994
    7. 'element' → logprob: -7.776113986968994
    8. ' ' → logprob: -7.901113986968994
    9. ' index' → logprob: -7.901113986968994
    10. 'token' → logprob: -8.276113510131836

Token 194: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.037074506282806396
    2. ':' → logprob: -3.912074565887451
    3. ')' → logprob: -4.537074565887451
    4. ',' → logprob: -6.287074565887451
    5. '):
' → logprob: -6.287074565887451
    6. 'for' → logprob: -6.537074565887451
    7. ' for' → logprob: -8.287074089050293
    8. ' ):' → logprob: -8.787074089050293
    9. '
' → logprob: -10.287074089050293
    10. ' :' → logprob: -10.662074089050293

Token 195: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9656965732574463
    2. 'for' → logprob: -1.0906965732574463
    3. '
' → logprob: -1.9656965732574463
    4. '   ' → logprob: -2.4656965732574463
    5. ':' → logprob: -2.9656965732574463
    6. ':
' → logprob: -6.090696334838867
    7. '	for' → logprob: -6.340696334838867
    8. '    
' → logprob: -7.465696334838867
    9. '' → logprob: -7.840696334838867
    10. ' 
' → logprob: -8.090696334838867

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3097023665904999
    2. ' for' → logprob: -1.4347023963928223
    3. '   ' → logprob: -3.9347023963928223
    4. 'i' → logprob: -5.059702396392822
    5. ' i' → logprob: -6.184702396392822
    6. '	for' → logprob: -9.684701919555664
    7. '
' → logprob: -10.309701919555664
    8. ' range' → logprob: -11.184701919555664
    9. 'range' → logprob: -11.184701919555664
    10. ' ' → logprob: -11.309701919555664

Token 197: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019301822176203132
    2. 'i' → logprob: -6.251930236816406
    3. '	i' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.501930236816406
    5. ' ' → logprob: -15.376930236816406
    6. ' ' → logprob: -17.501930236816406
    7. '```' → logprob: -17.501930236816406
    8. '(i' → logprob: -17.751930236816406
    9. 'I' → logprob: -18.126930236816406
    10. ' index' → logprob: -18.501930236816406

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0086666913703084
    2. 'in' → logprob: -4.758666515350342
    3. ' ' → logprob: -10.0086669921875
    4. '	in' → logprob: -13.6336669921875
    5. ')' → logprob: -13.7586669921875
    6. ',' → logprob: -13.8836669921875
    7. '  ' → logprob: -14.1336669921875
    8. ' i' → logprob: -14.1336669921875
    9. 'In' → logprob: -14.8836669921875
    10. ' ' → logprob: -15.2586669921875

Token 199: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011048054322600365
    2. 'range' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.636048316955566
    4. '	range' → logprob: -16.26104736328125
    5. '(range' → logprob: -18.01104736328125
    6. ' xrange' → logprob: -19.13604736328125
    7. '_range' → logprob: -21.01104736328125
    8. ' rang' → logprob: -21.26104736328125
    9. '  ' → logprob: -21.38604736328125
    10. '1' → logprob: -21.51104736328125

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -16.0
    3. '1' → logprob: -16.125
    4. '(
' → logprob: -16.625
    5. '<|end|>' → logprob: -18.375
    6. '(i' → logprob: -19.375
    7. '(N' → logprob: -20.625
    8. ')' → logprob: -20.75
    9. '(

' → logprob: -21.125
    10. '2' → logprob: -21.125

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015517598949372768
    2. ' ' → logprob: -6.751551628112793
    3. '(' → logprob: -7.876551628112793
    4. ')' → logprob: -14.376551628112793
    5. '2' → logprob: -14.626551628112793
    6. '   ' → logprob: -14.751551628112793
    7. 'N' → logprob: -15.251551628112793
    8. ' (' → logprob: -16.75155258178711
    9. '  ' → logprob: -17.25155258178711
    10. ' N' → logprob: -17.37655258178711

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005421888781711459
    2. ' ,' → logprob: -8.000542640686035
    3. ',N' → logprob: -8.500542640686035
    4. 'N' → logprob: -13.125542640686035
    5. ' N' → logprob: -14.250542640686035
    6. '(N' → logprob: -15.125542640686035
    7. ' ' → logprob: -15.500542640686035
    8. '，' → logprob: -16.25054168701172
    9. ',
' → logprob: -17.62554168701172
    10. '1' → logprob: -17.75054168701172

Token 203: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005234356038272381
    2. ' N' → logprob: -5.255234241485596
    3. 'len' → logprob: -15.130234718322754
    4. '	N' → logprob: -15.755234718322754
    5. ' len' → logprob: -16.630233764648438
    6. '   ' → logprob: -17.255233764648438
    7. ' ' → logprob: -18.255233764648438
    8. ')' → logprob: -19.505233764648438
    9. 'n' → logprob: -20.005233764648438
    10. ' ' → logprob: -20.130233764648438

Token 204: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012773419439326972
    2. '):
' → logprob: -9.375127792358398
    3. ':' → logprob: -10.625127792358398
    4. ' ):' → logprob: -11.125127792358398
    5. '():' → logprob: -14.250127792358398
    6. ')' → logprob: -14.250127792358398
    7. '):
' → logprob: -14.750127792358398
    8. '):

' → logprob: -14.875127792358398
    9. '-' → logprob: -15.000127792358398
    10. '+' → logprob: -15.125127792358398

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008372019976377487
    2. '       ' → logprob: -5.508371829986572
    3. ' ' → logprob: -6.508371829986572
    4. '<|end|>' → logprob: -6.508371829986572
    5. ' if' → logprob: -7.258371829986572
    6. ':' → logprob: -8.50837230682373
    7. '    
' → logprob: -9.00837230682373
    8. '    ' → logprob: -9.38337230682373
    9. ' 
' → logprob: -10.13337230682373
    10. '  
' → logprob: -10.25837230682373

Token 206: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18272548913955688
    2. ' if' → logprob: -1.807725429534912
    3. '   ' → logprob: -5.932725429534912
    4. ' ' → logprob: -8.93272590637207
    5. '       ' → logprob: -9.18272590637207
    6. '    ' → logprob: -10.43272590637207
    7. '	if' → logprob: -10.55772590637207
    8. '  ' → logprob: -11.18272590637207
    9. '<|end|>' → logprob: -11.55772590637207
    10. ' ' → logprob: -12.80772590637207

Token 207: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07890113443136215
    2. ' if' → logprob: -2.5789010524749756
    3. '   ' → logprob: -12.078901290893555
    4. ' ' → logprob: -13.203901290893555
    5. '#' → logprob: -13.953901290893555
    6. ' ' → logprob: -14.578901290893555
    7. 'If' → logprob: -14.578901290893555
    8. '    ' → logprob: -14.828901290893555
    9. '  ' → logprob: -14.953901290893555
    10. '```' → logprob: -15.328901290893555

Token 208: ' regarde' (ID: 115760)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6933832764625549
    2. ' if' → logprob: -0.6933832764625549
    3. 'elif' → logprob: -9.06838321685791
    4. ')' → logprob: -10.56838321685791
    5. '#' → logprob: -10.81838321685791
    6. ' #' → logprob: -10.94338321685791
    7. ' elif' → logprob: -11.06838321685791
    8. ' ' → logprob: -11.94338321685791
    9. 'If' → logprob: -12.56838321685791
    10. '   ' → logprob: -12.56838321685791

Token 209: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11955650895833969
    2. 'if' → logprob: -2.369556427001953
    3. ' ' → logprob: -5.744556427001953
    4. ' si' → logprob: -5.744556427001953
    5. 'si' → logprob: -5.869556427001953
    6. ' ' → logprob: -5.994556427001953
    7. '   ' → logprob: -6.244556427001953
    8. 's' → logprob: -6.244556427001953
    9. '  ' → logprob: -6.744556427001953
    10. '	if' → logprob: -7.119556427001953

Token 210: ' l' (ID: 305)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.25301337242126465
    2. ' H' → logprob: -1.5030133724212646
    3. ' ' → logprob: -8.003013610839844
    4. 'abs' → logprob: -8.503013610839844
    5. ' abs' → logprob: -8.753013610839844
    6. ' not' → logprob: -8.878013610839844
    7. 'i' → logprob: -9.628013610839844
    8. '(H' → logprob: -10.003013610839844
    9. ' i' → logprob: -10.253013610839844
    10. '	H' → logprob: -10.753013610839844

Token 211: ''' (ID: 6)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.07221454381942749
    2. 'H' → logprob: -2.6972146034240723
    3. ' ' → logprob: -7.197214603424072
    4. ' abs' → logprob: -7.697214603424072
    5. 'abs' → logprob: -8.197214126586914
    6. ' not' → logprob: -8.822214126586914
    7. ' i' → logprob: -8.947214126586914
    8. '   ' → logprob: -8.947214126586914
    9. ')' → logprob: -9.447214126586914
    10. 'i' → logprob: -9.822214126586914

Token 212: 'élé' (ID: 15228)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1337137669324875
    2. ' H' → logprob: -2.258713722229004
    3. 'élé' → logprob: -4.383713722229004
    4. 'abs' → logprob: -5.633713722229004
    5. 'i' → logprob: -6.258713722229004
    6. ' élément' → logprob: -6.633713722229004
    7. 'element' → logprob: -8.258713722229004
    8. ' i' → logprob: -8.383713722229004
    9. '[i' → logprob: -8.758713722229004
    10. '`' → logprob: -9.008713722229004

Token 213: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00023452966706827283
    2. 'ments' → logprob: -9.125234603881836
    3. 'ent' → logprob: -11.000234603881836
    4. 'ement' → logprob: -11.000234603881836
    5. '```' → logprob: -11.375234603881836
    6. 'me' → logprob: -11.625234603881836
    7. 'm' → logprob: -11.625234603881836
    8. 'H' → logprob: -11.875234603881836
    9. '   ' → logprob: -11.875234603881836
    10. '#' → logprob: -12.250234603881836

Token 214: ' précédent' (ID: 128462)
  Prédit: ' précédent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédent' → logprob: -0.6772636771202087
    2. ' H' → logprob: -0.9272636771202087
    3. 'H' → logprob: -3.5522637367248535
    4. ' i' → logprob: -3.9272637367248535
    5. '[i' → logprob: -4.0522637367248535
    6. 's' → logprob: -4.0522637367248535
    7. 'preced' → logprob: -5.8022637367248535
    8. 'i' → logprob: -6.0522637367248535
    9. ' precedente' → logprob: -6.1772637367248535
    10. ' ' → logprob: -6.4272637367248535

Token 215: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0893324464559555
    2. ' est' → logprob: -3.464332342147827
    3. ' >' → logprob: -3.839332342147827
    4. 'est' → logprob: -4.839332580566406
    5. '>=' → logprob: -5.464332580566406
    6. ' H' → logprob: -5.589332580566406
    7. 'H' → logprob: -5.589332580566406
    8. ']' → logprob: -6.089332580566406
    9. ' is' → logprob: -6.464332580566406
    10. 'i' → logprob: -6.589332580566406

Token 216: ' STRICT' (ID: 68735)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -0.7278043627738953
    2. '>' → logprob: -1.22780442237854
    3. ' strictly' → logprob: -2.72780442237854
    4. ' supérieur' → logprob: -2.85280442237854
    5. '>=' → logprob: -3.35280442237854
    6. ' strict' → logprob: -3.72780442237854
    7. ' >' → logprob: -4.602804183959961
    8. ' >=' → logprob: -4.852804183959961
    9. '<' → logprob: -5.227804183959961
    10. ' inférieur' → logprob: -5.727804183959961

Token 217: 'EMENT' (ID: 25654)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.1826445609331131
    2. 'ly' → logprob: -1.8076446056365967
    3. 'lement' → logprob: -6.307644367218018
    4. 'l' → logprob: -7.807644367218018
    5. '<' → logprob: -9.307644844055176
    6. 'EMENT' → logprob: -9.557644844055176
    7. 'ment' → logprob: -9.682644844055176
    8. 'ely' → logprob: -9.682644844055176
    9. 'ément' → logprob: -10.057644844055176
    10. ' ' → logprob: -10.182644844055176

Token 218: ' inférieur' (ID: 191498)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.3171924650669098
    2. ' inférieur' → logprob: -2.067192554473877
    3. 'sup' → logprob: -2.442192554473877
    4. 'greater' → logprob: -4.317192554473877
    5. 'super' → logprob: -4.442192554473877
    6. 'plus' → logprob: -4.567192554473877
    7. ' plus' → logprob: -4.692192554473877
    8. 'inf' → logprob: -5.942192554473877
    9. 'strict' → logprob: -6.192192554473877
    10. 'infer' → logprob: -6.192192554473877

Token 219: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3536841869354248
    2. ' H' → logprob: -2.103684186935425
    3. 'H' → logprob: -3.228684186935425
    4. ' or' → logprob: -3.353684186935425
    5. 'à' → logprob: -3.728684186935425
    6. ' to' → logprob: -3.853684186935425
    7. ' ou' → logprob: -3.978684186935425
    8. 'to' → logprob: -4.853684425354004
    9. ' a' → logprob: -4.978684425354004
    10. '   ' → logprob: -5.228684425354004

Token 220: ' l' (ID: 305)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.18188047409057617
    2. ' H' → logprob: -1.8068804740905762
    3. 'the' → logprob: -7.431880474090576
    4. ' ' → logprob: -7.431880474090576
    5. ' the' → logprob: -7.806880474090576
    6. 'l' → logprob: -8.306880950927734
    7. ' l' → logprob: -9.431880950927734
    8. ' ' → logprob: -10.056880950927734
    9. 'le' → logprob: -10.556880950927734
    10. '	H' → logprob: -10.681880950927734

Token 221: ''' (ID: 6)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.646355390548706
    2. '[' → logprob: -1.771355390548706
    3. '[i' → logprob: -2.271355390548706
    4. 'i' → logprob: -3.146355390548706
    5. '   ' → logprob: -3.396355390548706
    6. ' H' → logprob: -3.521355390548706
    7. ']' → logprob: -3.771355390548706
    8. 'élé' → logprob: -4.021355628967285
    9. 'a' → logprob: -4.646355628967285
    10. ' ' → logprob: -5.146355628967285

Token 222: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.014175030402839184
    2. 'H' → logprob: -4.889174938201904
    3. 'act' → logprob: -5.764174938201904
    4. ' élément' → logprob: -7.014174938201904
    5. 'current' → logprob: -7.139174938201904
    6. 'él' → logprob: -8.139175415039062
    7. 'element' → logprob: -8.389175415039062
    8. 'é' → logprob: -8.389175415039062
    9. ' actuel' → logprob: -8.514175415039062
    10. 'à' → logprob: -9.514175415039062

Token 223: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00012011249782517552
    2. 'ent' → logprob: -9.750120162963867
    3. 'ments' → logprob: -11.375120162963867
    4. 'ément' → logprob: -11.875120162963867
    5. 'me' → logprob: -12.125120162963867
    6. 'ement' → logprob: -12.500120162963867
    7. '#' → logprob: -12.500120162963867
    8. 'nt' → logprob: -12.625120162963867
    9. '   ' → logprob: -13.000120162963867
    10. '```' → logprob: -13.000120162963867

Token 224: ' courant' (ID: 74694)
  Prédit: ' actuel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' actuel' → logprob: -0.7660015821456909
    2. '[i' → logprob: -1.141001582145691
    3. 'current' → logprob: -3.5160017013549805
    4. ' i' → logprob: -3.5160017013549805
    5. 'su' → logprob: -3.7660017013549805
    6. ' current' → logprob: -3.7660017013549805
    7. 'act' → logprob: -4.1410017013549805
    8. '   ' → logprob: -4.1410017013549805
    9. ')' → logprob: -4.2660017013549805
    10. 'i' → logprob: -4.2660017013549805

Token 225: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24104084074497223
    2. ' and' → logprob: -1.741040825843811
    3. ':' → logprob: -4.3660407066345215
    4. 'and' → logprob: -4.3660407066345215
    5. '   ' → logprob: -5.6160407066345215
    6. ' or' → logprob: -5.9910407066345215
    7. ' if' → logprob: -5.9910407066345215
    8. 'if' → logprob: -6.4910407066345215
    9. '           ' → logprob: -6.4910407066345215
    10. ' :' → logprob: -7.8660407066345215

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007193523459136486
    2. '   ' → logprob: -5.632193565368652
    3. ':' → logprob: -6.757193565368652
    4. ' if' → logprob: -6.882193565368652
    5. ' ' → logprob: -8.382193565368652
    6. ' :' → logprob: -8.507193565368652
    7. '<|end|>' → logprob: -9.007193565368652
    8. 'if' → logprob: -9.132193565368652
    9. '	' → logprob: -9.132193565368652
    10. '           ' → logprob: -9.257193565368652

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006563914008438587
    2. ' if' → logprob: -5.381564140319824
    3. '   ' → logprob: -6.256564140319824
    4. '       ' → logprob: -10.756564140319824
    5. ' ' → logprob: -14.131564140319824
    6. '  ' → logprob: -14.256564140319824
    7. '	if' → logprob: -14.381564140319824
    8. '    ' → logprob: -15.506564140319824
    9. 'elif' → logprob: -15.756564140319824
    10. '           ' → logprob: -16.381563186645508

Token 228: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.6326830983161926
    2. ' H' → logprob: -0.7576830983161926
    3. '   ' → logprob: -10.007682800292969
    4. ' ' → logprob: -11.007682800292969
    5. ' not' → logprob: -11.507682800292969
    6. '	H' → logprob: -12.257682800292969
    7. ' ' → logprob: -13.132682800292969
    8. '    ' → logprob: -13.257682800292969
    9. '  ' → logprob: -13.757682800292969
    10. 'not' → logprob: -14.132682800292969

Token 229: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005577972042374313
    2. '[' → logprob: -7.500557899475098
    3. ' [' → logprob: -12.500557899475098
    4. '[I' → logprob: -15.000557899475098
    5. 'i' → logprob: -16.50055694580078
    6. ']' → logprob: -16.50055694580078
    7. '```' → logprob: -16.50055694580078
    8. '   ' → logprob: -16.62555694580078
    9. '[N' → logprob: -16.62555694580078
    10. '[
' → logprob: -17.00055694580078

Token 230: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04800761863589287
    2. ']<=' → logprob: -3.5480077266693115
    3. ' ]' → logprob: -4.548007488250732
    4. ' <=' → logprob: -5.673007488250732
    5. '<=' → logprob: -5.798007488250732
    6. '[' → logprob: -7.673007488250732
    7. ']>' → logprob: -8.29800796508789
    8. '[i' → logprob: -9.04800796508789
    9. ']<' → logprob: -9.42300796508789
    10. '>' → logprob: -11.04800796508789

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016460120677947998
    2. ']' → logprob: -4.141459941864014
    3. ' ' → logprob: -8.141460418701172
    4. 'i' → logprob: -9.016460418701172
    5. ' ]' → logprob: -12.516460418701172
    6. '0' → logprob: -12.891460418701172
    7. ' i' → logprob: -13.141460418701172
    8. '   ' → logprob: -13.266460418701172
    9. ']>' → logprob: -13.391460418701172
    10. ')' → logprob: -14.891460418701172

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03513761982321739
    2. ']' → logprob: -3.41013765335083
    3. 'i' → logprob: -6.66013765335083
    4. ']>=' → logprob: -9.285137176513672
    5. ']>' → logprob: -9.910137176513672
    6. ']<' → logprob: -10.910137176513672
    7. ' ' → logprob: -11.035137176513672
    8. ']+' → logprob: -11.660137176513672
    9. '0' → logprob: -12.660137176513672
    10. ']==' → logprob: -13.035137176513672

Token 233: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5911370515823364
    2. ' <' → logprob: -1.9661370515823364
    3. '>=' → logprob: -2.216136932373047
    4. ']' → logprob: -2.466136932373047
    5. '<' → logprob: -2.966136932373047
    6. '>' → logprob: -3.216136932373047
    7. ' >' → logprob: -4.591136932373047
    8. ']>=' → logprob: -5.091136932373047
    9. ' ' → logprob: -5.841136932373047
    10. ' ]' → logprob: -7.216136932373047

Token 234: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.38653847575187683
    2. '>=' → logprob: -1.2615385055541992
    3. ' <' → logprob: -3.886538505554199
    4. '<' → logprob: -4.261538505554199
    5. '>' → logprob: -6.511538505554199
    6. ' >' → logprob: -6.886538505554199
    7. ' ' → logprob: -8.6365385055542
    8. '   ' → logprob: -10.8865385055542
    9. ']>=' → logprob: -11.1365385055542
    10. '  ' → logprob: -12.1365385055542

Token 235: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.012515772134065628
    2. ' H' → logprob: -4.387515544891357
    3. '=' → logprob: -12.887516021728516
    4. ' ' → logprob: -14.262516021728516
    5. '   ' → logprob: -14.387516021728516
    6. '0' → logprob: -14.512516021728516
    7. 'h' → logprob: -15.262516021728516
    8. 'i' → logprob: -15.387516021728516
    9. '1' → logprob: -15.387516021728516
    10. ')' → logprob: -15.825016021728516

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.47757811343763e-05
    2. ']' → logprob: -10.875044822692871
    3. '[' → logprob: -11.125044822692871
    4. ' [' → logprob: -12.125044822692871
    5. '][' → logprob: -13.000044822692871
    6. 'i' → logprob: -13.000044822692871
    7. '[
' → logprob: -15.000044822692871
    8. '   ' → logprob: -16.000043869018555
    9. '(i' → logprob: -16.250043869018555
    10. ' i' → logprob: -16.500043869018555

Token 237: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034149859100580215
    2. '):
' → logprob: -3.9091498851776123
    3. ' ):' → logprob: -4.909149646759033
    4. ':' → logprob: -5.534149646759033
    5. ')' → logprob: -7.159149646759033
    6. '       ' → logprob: -7.909149646759033
    7. ' ):
' → logprob: -8.284150123596191
    8. ' and' → logprob: -8.534150123596191
    9. ']:' → logprob: -8.784150123596191
    10. ']):' → logprob: -9.534150123596191

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5475263595581055
    2. '       ' → logprob: -0.9225263595581055
    3. 'print' → logprob: -4.7975263595581055
    4. ' print' → logprob: -4.7975263595581055
    5. ' continue' → logprob: -5.2975263595581055
    6. 'continue' → logprob: -6.6725263595581055
    7. '   ' → logprob: -7.1725263595581055
    8. '	       ' → logprob: -9.172526359558105
    9. '               ' → logprob: -9.422526359558105
    10. ' break' → logprob: -9.672526359558105

Token 239: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01415340043604374
    2. '           ' → logprob: -4.514153480529785
    3. 'continue' → logprob: -6.389153480529785
    4. ' print' → logprob: -7.014153480529785
    5. '       ' → logprob: -8.389153480529785
    6. '   ' → logprob: -9.389153480529785
    7. '               ' → logprob: -9.639153480529785
    8. 'pass' → logprob: -9.639153480529785
    9. 'break' → logprob: -10.264153480529785
    10. ' continue' → logprob: -11.264153480529785

Token 240: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0054827602580189705
    2. 'continue' → logprob: -5.5054826736450195
    3. '           ' → logprob: -7.3804826736450195
    4. ' print' → logprob: -8.00548267364502
    5. '   ' → logprob: -8.63048267364502
    6. 'pass' → logprob: -8.88048267364502
    7. '       ' → logprob: -10.13048267364502
    8. 'break' → logprob: -10.38048267364502
    9. ' ' → logprob: -11.13048267364502
    10. '```' → logprob: -11.38048267364502

Token 241: ' oui' (ID: 50908)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4813108444213867
    2. ' print' → logprob: -1.7313108444213867
    3. '           ' → logprob: -1.9813108444213867
    4. '               ' → logprob: -3.1063108444213867
    5. ' False' → logprob: -4.856310844421387
    6. 'False' → logprob: -5.481310844421387
    7. 'continue' → logprob: -5.981310844421387
    8. '       ' → logprob: -6.356310844421387
    9. ' True' → logprob: -6.356310844421387
    10. '   ' → logprob: -6.481310844421387

Token 242: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24516959488391876
    2. '           ' → logprob: -1.8701696395874023
    3. ' print' → logprob: -3.6201696395874023
    4. ' continue' → logprob: -4.120169639587402
    5. 'print' → logprob: -4.870169639587402
    6. '       ' → logprob: -4.870169639587402
    7. 'continue' → logprob: -5.995169639587402
    8. '   ' → logprob: -6.995169639587402
    9. ' ' → logprob: -7.870169639587402
    10. ',' → logprob: -8.495169639587402

Token 243: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.061663880944252014
    2. ' print' → logprob: -2.936663866043091
    3. '           ' → logprob: -5.31166410446167
    4. 'continue' → logprob: -6.93666410446167
    5. ' continue' → logprob: -7.93666410446167
    6. '   ' → logprob: -8.561663627624512
    7. '               ' → logprob: -8.686663627624512
    8. '       ' → logprob: -9.811663627624512
    9. ' ' → logprob: -10.686663627624512
    10. 'pass' → logprob: -10.936663627624512

Token 244: ' dim' (ID: 6051)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5717201232910156
    2. 'continue' → logprob: -1.0717201232910156
    3. ' continue' → logprob: -2.8217201232910156
    4. ' print' → logprob: -3.4467201232910156
    5. 'contin' → logprob: -7.071720123291016
    6. '   ' → logprob: -8.446720123291016
    7. 'pass' → logprob: -8.446720123291016
    8. 'break' → logprob: -9.321720123291016
    9. '       ' → logprob: -9.821720123291016
    10. 'continu' → logprob: -10.071720123291016

Token 245: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.02990228869020939
    2. 'print' → logprob: -4.529902458190918
    3. 'continue' → logprob: -4.904902458190918
    4. 'e' → logprob: -5.404902458190918
    5. 'ande' → logprob: -6.404902458190918
    6. 'ante' → logprob: -6.904902458190918
    7. 'ente' → logprob: -6.904902458190918
    8. 'p' → logprob: -7.279902458190918
    9. 'ent' → logprob: -7.529902458190918
    10. '               ' → logprob: -8.029902458190918

Token 246: ' l' (ID: 305)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.25350356101989746
    2. ' H' → logprob: -1.5035035610198975
    3. ' ' → logprob: -7.503503799438477
    4. '   ' → logprob: -8.378503799438477
    5. '           ' → logprob: -8.378503799438477
    6. '1' → logprob: -9.003503799438477
    7. '	H' → logprob: -9.503503799438477
    8. 's' → logprob: -10.253503799438477
    9. 'print' → logprob: -10.378503799438477
    10. 'le' → logprob: -11.003503799438477

Token 247: ''' (ID: 6)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.09500113129615784
    2. ' H' → logprob: -2.595001220703125
    3. '[i' → logprob: -5.220001220703125
    4. '[' → logprob: -5.970001220703125
    5. 'i' → logprob: -6.345001220703125
    6. '   ' → logprob: -6.970001220703125
    7. ')' → logprob: -7.095001220703125
    8. ' ' → logprob: -7.095001220703125
    9. 's' → logprob: -7.345001220703125
    10. ' =' → logprob: -7.720001220703125

Token 248: 'élé' (ID: 15228)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06814652681350708
    2. 'élé' → logprob: -3.1931464672088623
    3. ' H' → logprob: -4.693146705627441
    4. 'i' → logprob: -4.818146705627441
    5. '[i' → logprob: -6.318146705627441
    6. 'indice' → logprob: -7.193146705627441
    7. 'element' → logprob: -7.443146705627441
    8. 'a' → logprob: -7.693146705627441
    9. 'lement' → logprob: -7.943146705627441
    10. '[' → logprob: -7.943146705627441

Token 249: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0011903452686965466
    2. 'ent' → logprob: -7.376190185546875
    3. 'mentation' → logprob: -8.876190185546875
    4. 'nt' → logprob: -9.251190185546875
    5. 'H' → logprob: -9.501190185546875
    6. 'ments' → logprob: -9.626190185546875
    7. '1' → logprob: -10.001190185546875
    8. ']' → logprob: -10.876190185546875
    9. '   ' → logprob: -11.251190185546875
    10. 'ement' → logprob: -11.501190185546875

Token 250: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.49512043595314026
    2. 'H' → logprob: -0.9951204061508179
    3. '[' → logprob: -4.745120525360107
    4. 'i' → logprob: -5.245120525360107
    5. ' H' → logprob: -5.495120525360107
    6. 's' → logprob: -7.245120525360107
    7. ' précédent' → logprob: -7.995120525360107
    8. ']' → logprob: -7.995120525360107
    9. '   ' → logprob: -8.24512004852295
    10. ' i' → logprob: -8.37012004852295

Token 251: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34708452224731445
    2. 'H' → logprob: -1.9720845222473145
    3. ' H' → logprob: -2.5970845222473145
    4. '               ' → logprob: -3.7220845222473145
    5. ' =' → logprob: -4.0970845222473145
    6. '=' → logprob: -4.0970845222473145
    7. ' by' → logprob: -5.9720845222473145
    8. ' -=' → logprob: -6.0970845222473145
    9. '            
' → logprob: -6.2220845222473145
    10. ',' → logprob: -6.2220845222473145

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002811059355735779
    2. ' ' → logprob: -5.877810955047607
    3. ' H' → logprob: -12.377811431884766
    4. 'H' → logprob: -13.377811431884766
    5. '   ' → logprob: -15.752811431884766
    6. 's' → logprob: -16.752811431884766
    7. '```' → logprob: -17.002811431884766
    8. '<|end|>' → logprob: -17.127811431884766
    9. '`' → logprob: -17.502811431884766
    10. ' ' → logprob: -17.627811431884766

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '```' → logprob: -18.00006675720215
    4. '   ' → logprob: -18.62506675720215
    5. '2' → logprob: -18.62506675720215
    6. '
' → logprob: -18.75006675720215
    7. 'H' → logprob: -18.87506675720215
    8. 'un' → logprob: -18.87506675720215
    9. 'one' → logprob: -19.00006675720215
    10. ')' → logprob: -19.75006675720215

Token 254: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07101652026176453
    2. '               ' → logprob: -3.071016550064087
    3. 'H' → logprob: -4.446016311645508
    4. ' H' → logprob: -5.696016311645508
    5. ':' → logprob: -6.446016311645508
    6. '                   ' → logprob: -7.196016311645508
    7. '       ' → logprob: -7.196016311645508
    8. '   ' → logprob: -7.696016311645508
    9. ':
' → logprob: -7.821016311645508
    10. '            
' → logprob: -7.946016311645508

Token 255: ' tenter' (ID: 109833)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.496578186750412
    2. 'H' → logprob: -1.9965782165527344
    3. ' essayer' → logprob: -3.6215782165527344
    4. '           ' → logprob: -3.9965782165527344
    5. '```' → logprob: -3.9965782165527344
    6. 'corr' → logprob: -3.9965782165527344
    7. ' sim' → logprob: -4.121578216552734
    8. '       ' → logprob: -4.121578216552734
    9. 'p' → logprob: -4.371578216552734
    10. ' éviter' → logprob: -4.496578216552734

Token 256: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2303519994020462
    2. 'de' → logprob: -2.1053519248962402
    3. '           ' → logprob: -2.8553519248962402
    4. '   ' → logprob: -4.48035192489624
    5. ' d' → logprob: -5.10535192489624
    6. 'd' → logprob: -5.48035192489624
    7. '       ' → logprob: -5.73035192489624
    8. '               ' → logprob: -7.35535192489624
    9. ' ' → logprob: -8.605352401733398
    10. '            
' → logprob: -9.480352401733398

Token 257: ''ad' (ID: 36162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7162104845046997
    2. 'corr' → logprob: -1.9662104845046997
    3. ''assurer' → logprob: -2.34121036529541
    4. ''aj' → logprob: -2.59121036529541
    5. 'e' → logprob: -2.71621036529541
    6. ' rendre' → logprob: -2.96621036529541
    7. ''améli' → logprob: -2.96621036529541
    8. 'r' → logprob: -3.21621036529541
    9. 'le' → logprob: -3.59121036529541
    10. ' corr' → logprob: -3.84121036529541

Token 258: 'ou' (ID: 283)
  Prédit: 'apter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apter' → logprob: -0.00024335073248948902
    2. 'just' → logprob: -8.875243186950684
    3. 'opter' → logprob: -10.500243186950684
    4. 'apt' → logprob: -10.750243186950684
    5. 'a' → logprob: -11.000243186950684
    6. 'e' → logprob: -12.000243186950684
    7. 'p' → logprob: -12.750243186950684
    8. 'équ' → logprob: -12.750243186950684
    9. 'apters' → logprob: -12.875243186950684
    10. 'ou' → logprob: -13.000243186950684

Token 259: 'cir' (ID: 31224)
  Prédit: 'cir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.39916959404945374
    2. 'c' → logprob: -1.5241695642471313
    3. 'cer' → logprob: -2.899169683456421
    4. 'rc' → logprob: -3.399169683456421
    5. 'ou' → logprob: -5.524169445037842
    6. 'uc' → logprob: -5.774169445037842
    7. '

' → logprob: -6.524169445037842
    8. 'cier' → logprob: -6.649169445037842
    9. 'u' → logprob: -6.899169445037842
    10. 'cis' → logprob: -7.024169445037842

Token 260: ' la' (ID: 557)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.02688477374613285
    2. 'H' → logprob: -4.02688455581665
    3. ' ' → logprob: -5.77688455581665
    4. ' the' → logprob: -6.52688455581665
    5. ' la' → logprob: -6.77688455581665
    6. ')' → logprob: -7.52688455581665
    7. '   ' → logprob: -8.026885032653809
    8. ' )' → logprob: -8.026885032653809
    9. ' l' → logprob: -8.276885032653809
    10. ',' → logprob: -8.276885032653809

Token 261: ' pente' (ID: 165627)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22370950877666473
    2. 'p' → logprob: -2.7237095832824707
    3. 'sé' → logprob: -2.9737095832824707
    4. 'd' → logprob: -3.9737095832824707
    5. 'suite' → logprob: -4.348709583282471
    6. 'condition' → logprob: -4.598709583282471
    7. 'ha' → logprob: -4.723709583282471
    8. 'mont' → logprob: -4.973709583282471
    9. 'liste' → logprob: -5.473709583282471
    10. 'pic' → logprob: -5.723709583282471

Token 262: ' entre' (ID: 3853)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04058581590652466
    2. '       ' → logprob: -3.54058575630188
    3. '               ' → logprob: -5.290585994720459
    4. '<|end|>' → logprob: -6.790585994720459
    5. '            
' → logprob: -7.165585994720459
    6. ',' → logprob: -7.165585994720459
    7. '        
' → logprob: -8.2905855178833
    8. '   ' → logprob: -8.4155855178833
    9. ')' → logprob: -8.4155855178833
    10. '		' → logprob: -8.5405855178833

Token 263: ' les' (ID: 1341)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3911810517311096
    2. ' H' → logprob: -1.3911809921264648
    3. 'les' → logprob: -3.516180992126465
    4. ' eux' → logprob: -4.391180992126465
    5. ' les' → logprob: -4.516180992126465
    6. 'l' → logprob: -4.891180992126465
    7. 'ces' → logprob: -5.141180992126465
    8. ' ces' → logprob: -6.141180992126465
    9. 'i' → logprob: -6.141180992126465
    10. 'eux' → logprob: -6.516180992126465

Token 264: ' éléments' (ID: 57375)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.026336297392845154
    2. 'élé' → logprob: -4.526336193084717
    3. 'H' → logprob: -4.651336193084717
    4. ' deux' → logprob: -5.776336193084717
    5. 'i' → logprob: -6.276336193084717
    6. 'elements' → logprob: -8.901336669921875
    7. ' éléments' → logprob: -9.526336669921875
    8. 'é' → logprob: -9.901336669921875
    9. ' H' → logprob: -10.151336669921875
    10. 'two' → logprob: -10.151336669921875

Token 265: ' cons' (ID: 1473)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007269748020917177
    2. '               ' → logprob: -5.257269859313965
    3. 'H' → logprob: -7.132269859313965
    4. ' H' → logprob: -7.507269859313965
    5. ',' → logprob: -8.632269859313965
    6. '       ' → logprob: -9.007269859313965
    7. '.' → logprob: -9.132269859313965
    8. '            
' → logprob: -10.132269859313965
    9. ':' → logprob: -10.382269859313965
    10. '                   ' → logprob: -10.632269859313965

Token 266: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0034437382128089666
    2. 'ecut' → logprob: -6.878443717956543
    3. 'éc' → logprob: -7.003443717956543
    4. 'é' → logprob: -7.253443717956543
    5. 't' → logprob: -7.628443717956543
    6. '#' → logprob: -10.503443717956543
    7. '```' → logprob: -10.503443717956543
    8. 'omm' → logprob: -10.503443717956543
    9. 'ér' → logprob: -10.628443717956543
    10. 'u' → logprob: -10.878443717956543

Token 267: 'ifs' (ID: 14119)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.1460900455713272
    2. 'ent' → logprob: -2.521090030670166
    3. '       ' → logprob: -3.146090030670166
    4. '   ' → logprob: -5.021090030670166
    5. 'e' → logprob: -6.521090030670166
    6. 'i' → logprob: -7.396090030670166
    7. '#' → logprob: -7.521090030670166
    8. '           ' → logprob: -7.521090030670166
    9. 'er' → logprob: -7.521090030670166
    10. ' H' → logprob: -8.146090507507324

Token 268: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006244207266718149
    2. 'H' → logprob: -5.88124418258667
    3. ' H' → logprob: -6.13124418258667
    4. '               ' → logprob: -7.00624418258667
    5. '       ' → logprob: -8.506244659423828
    6. ',' → logprob: -10.756244659423828
    7. '	       ' → logprob: -10.881244659423828
    8. ':' → logprob: -11.381244659423828
    9. '            
' → logprob: -11.506244659423828
    10. '```' → logprob: -11.506244659423828

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06121143326163292
    2. '               ' → logprob: -2.936211347579956
    3. '       ' → logprob: -5.436211585998535
    4. 'H' → logprob: -6.811211585998535
    5. ' H' → logprob: -8.436211585998535
    6. '```' → logprob: -8.686211585998535
    7. '   ' → logprob: -9.436211585998535
    8. '                   ' → logprob: -9.686211585998535
    9. ',' → logprob: -10.186211585998535
    10. '                       ' → logprob: -10.436211585998535

Token 270: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.00010402000043541193
    2. ' H' → logprob: -9.375103950500488
    3. '           ' → logprob: -11.000103950500488
    4. '               ' → logprob: -13.500103950500488
    5. '   ' → logprob: -14.000103950500488
    6. '	H' → logprob: -16.125104904174805
    7. ' ' → logprob: -16.500104904174805
    8. '                   ' → logprob: -16.875104904174805
    9. '       ' → logprob: -17.750104904174805
    10. '  ' → logprob: -18.875104904174805

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.636475493200123e-05
    2. '[' → logprob: -9.500076293945312
    3. '[I' → logprob: -13.875076293945312
    4. ' [' → logprob: -14.625076293945312
    5. '```' → logprob: -17.375076293945312
    6. 'i' → logprob: -17.875076293945312
    7. '[
' → logprob: -18.375076293945312
    8. '[index' → logprob: -19.500076293945312
    9. '\[' → logprob: -19.625076293945312
    10. '[int' → logprob: -19.625076293945312

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009901875630021095
    2. '[i' → logprob: -4.884902000427246
    3. '-' → logprob: -6.884902000427246
    4. ']-' → logprob: -6.884902000427246
    5. ' ]' → logprob: -8.884902000427246
    6. '[' → logprob: -9.634902000427246
    7. ' -' → logprob: -11.009902000427246
    8. ' -=' → logprob: -11.509902000427246
    9. ')' → logprob: -12.509902000427246
    10. '   ' → logprob: -12.509902000427246

Token 273: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4430113732814789
    2. '-=' → logprob: -1.5680114030838013
    3. '=' → logprob: -1.9430114030838013
    4. '-' → logprob: -5.568011283874512
    5. ' =' → logprob: -6.068011283874512
    6. '   ' → logprob: -11.693011283874512
    7. ' -' → logprob: -11.818011283874512
    8. '[' → logprob: -12.443011283874512
    9. ')' → logprob: -12.568011283874512
    10. ']' → logprob: -13.068011283874512

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.500001907348633
    5. '１' → logprob: -21.750001907348633
    6. '
' → logprob: -21.750001907348633
    7. '2' → logprob: -21.875001907348633
    8. '0' → logprob: -22.125001907348633
    9. '       ' → logprob: -22.312501907348633
    10. '	' → logprob: -22.437501907348633

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.000001907348633
    5. '
' → logprob: -19.375001907348633
    6. '１' → logprob: -19.625001907348633
    7. '۱' → logprob: -21.125001907348633
    8. '2' → logprob: -21.125001907348633
    9. '       ' → logprob: -21.187501907348633
    10. '१' → logprob: -21.625001907348633

Token 276: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.40294575691223145
    2. '       ' → logprob: -1.2779457569122314
    3. '   ' → logprob: -3.9029457569122314
    4. 'if' → logprob: -4.527945518493652
    5. ' else' → logprob: -4.777945518493652
    6. 'elif' → logprob: -4.902945518493652
    7. '           ' → logprob: -5.652945518493652
    8. '<|end|>' → logprob: -6.902945518493652
    9. ' if' → logprob: -7.902945518493652
    10. '```' → logprob: -7.902945518493652

Token 278: ' H' (ID: 487)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6541568636894226
    2. '       ' → logprob: -1.6541569232940674
    3. 'else' → logprob: -1.7791569232940674
    4. '           ' → logprob: -2.6541569232940674
    5. '#' → logprob: -3.2791569232940674
    6. 'elif' → logprob: -5.154156684875488
    7. '   ' → logprob: -5.904156684875488
    8. 'continue' → logprob: -6.654156684875488
    9. ' if' → logprob: -7.279156684875488
    10. '```' → logprob: -7.529156684875488

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0026795833837240934
    2. '<|end|>' → logprob: -6.002679347991943
    3. '[' → logprob: -9.252679824829102
    4. 'i' → logprob: -9.877679824829102
    5. '<|end|>' → logprob: -10.127679824829102
    6. ')' → logprob: -12.377679824829102
    7. ' i' → logprob: -13.127679824829102
    8. '[I' → logprob: -13.627679824829102
    9. ']' → logprob: -13.877679824829102
    10. '[user' → logprob: -14.252679824829102

Token 280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032498431392014027
    2. '[i' → logprob: -6.378249645233154
    3. '<|end|>' → logprob: -7.128249645233154
    4. ' ]' → logprob: -7.503249645233154
    5. ')' → logprob: -10.128250122070312
    6. '<|end|>' → logprob: -10.753250122070312
    7. 'i' → logprob: -11.003250122070312
    8. ']+=' → logprob: -11.128250122070312
    9. ' -=' → logprob: -11.253250122070312
    10. ' -' → logprob: -11.378250122070312

Token 281: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 282: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01819349080324173
    2. ' H' → logprob: -4.01819372177124
    3. 'i' → logprob: -11.768193244934082
    4. '	H' → logprob: -11.768193244934082
    5. 'int' → logprob: -12.018193244934082
    6. '   ' → logprob: -12.018193244934082
    7. ' ' → logprob: -12.018193244934082
    8. '0' → logprob: -13.143193244934082
    9. '  ' → logprob: -13.643193244934082
    10. '1' → logprob: -13.893193244934082

Token 283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.417976379045285e-05
    2. 'i' → logprob: -10.625043869018555
    3. '[' → logprob: -10.875043869018555
    4. '(i' → logprob: -14.500043869018555
    5. '{i' → logprob: -15.250043869018555
    6. ' i' → logprob: -17.125043869018555
    7. ' [' → logprob: -17.750043869018555
    8. '[
' → logprob: -17.875043869018555
    9. '[I' → logprob: -18.375043869018555
    10. '[...]' → logprob: -18.375043869018555

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16238895058631897
    2. '[i' → logprob: -1.9123889207839966
    3. '-' → logprob: -6.287388801574707
    4. 'i' → logprob: -8.287388801574707
    5. ']-' → logprob: -11.037388801574707
    6. ' -' → logprob: -11.537388801574707
    7. '[' → logprob: -11.912388801574707
    8. '(i' → logprob: -12.287388801574707
    9. '   ' → logprob: -12.287388801574707
    10. '```' → logprob: -13.287388801574707

Token 285: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42962393164634705
    2. '-' → logprob: -1.0546239614486694
    3. '<|end|>' → logprob: -7.054624080657959
    4. ' ' → logprob: -10.4296236038208
    5. '<|end|>' → logprob: -11.4296236038208
    6. '–' → logprob: -12.4296236038208
    7. '#' → logprob: -12.8046236038208
    8. '...' → logprob: -12.9296236038208
    9. '[i' → logprob: -13.5546236038208
    10. '[' → logprob: -13.8046236038208

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476604888215661
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.502476692199707
    4. '```' → logprob: -15.627476692199707
    5. ' ' → logprob: -16.25247573852539
    6. '  ' → logprob: -17.37747573852539
    7. '2' → logprob: -18.00247573852539
    8. '       ' → logprob: -18.25247573852539
    9. '<|end|>' → logprob: -18.37747573852539
    10. '           ' → logprob: -18.37747573852539

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -17.62500762939453
    4. '   ' → logprob: -18.00000762939453
    5. '```' → logprob: -18.25000762939453
    6. '  ' → logprob: -19.50000762939453
    7. '`' → logprob: -20.37500762939453
    8. ')' → logprob: -20.93750762939453
    9. '۱' → logprob: -20.93750762939453
    10. '2' → logprob: -21.00000762939453

Token 288: ' réduit' (ID: 120775)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025336530059576035
    2. '           ' → logprob: -3.900336503982544
    3. '   ' → logprob: -6.525336742401123
    4. '<|end|>' → logprob: -6.775336742401123
    5. 'else' → logprob: -6.900336742401123
    6. 'if' → logprob: -7.525336742401123
    7. '```' → logprob: -8.900336265563965
    8. 'elif' → logprob: -9.275336265563965
    9. '
' → logprob: -9.400336265563965
    10. ' if' → logprob: -9.400336265563965

Token 289: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6756591796875
    2. ' de' → logprob: -0.9256591796875
    3. '<|end|>' → logprob: -4.0506591796875
    4. ' ' → logprob: -4.1756591796875
    5. '```' → logprob: -4.5506591796875
    6. ' d' → logprob: -4.9256591796875
    7. 'le' → logprob: -5.1756591796875
    8. 'de' → logprob: -5.1756591796875
    9. '           ' → logprob: -5.3006591796875
    10. ' le' → logprob: -5.3006591796875

Token 290: ' valeur' (ID: 41664)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.39631330966949463
    2. 'val' → logprob: -1.7713133096694946
    3. 'élé' → logprob: -3.271313190460205
    4. 'i' → logprob: -3.646313190460205
    5. ' H' → logprob: -3.771313190460205
    6. 'value' → logprob: -3.771313190460205
    7. '1' → logprob: -4.146313190460205
    8. ' valeur' → logprob: -5.396313190460205
    9. ' i' → logprob: -5.646313190460205
    10. '[i' → logprob: -6.146313190460205

Token 291: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4808143079280853
    2. '   ' → logprob: -2.230814218521118
    3. '<|end|>' → logprob: -2.480814218521118
    4. '
' → logprob: -3.230814218521118
    5. '    
' → logprob: -3.355814218521118
    6. '  
' → logprob: -4.105814456939697
    7. 'de' → logprob: -4.355814456939697
    8. '       ' → logprob: -4.730814456939697
    9. ' 
' → logprob: -4.980814456939697
    10. ' ' → logprob: -5.105814456939697

Token 292: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.17320461571216583
    2. ' H' → logprob: -2.0482046604156494
    3. '1' → logprob: -4.04820442199707
    4. ' ' → logprob: -5.04820442199707
    5. 'l' → logprob: -6.42320442199707
    6. 'i' → logprob: -6.42320442199707
    7. '[i' → logprob: -6.92320442199707
    8. ' i' → logprob: -7.92320442199707
    9. '`' → logprob: -8.04820442199707
    10. ' l' → logprob: -8.54820442199707

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.500004768371582
    4. ' [' → logprob: -14.125004768371582
    5. '   ' → logprob: -15.500004768371582
    6. ' i' → logprob: -15.875004768371582
    7. '```' → logprob: -16.1250057220459
    8. '(i' → logprob: -16.3750057220459
    9. ' ' → logprob: -17.0000057220459
    10. '[j' → logprob: -17.7500057220459

Token 294: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030204327777028084
    2. '<|end|>' → logprob: -3.7802042961120605
    3. ']' → logprob: -5.6552042961120605
    4. '
' → logprob: -7.1552042961120605
    5. ' )' → logprob: -7.1552042961120605
    6. ')
' → logprob: -7.5302042961120605
    7. '<|end|>' → logprob: -7.6552042961120605
    8. '  
' → logprob: -8.905204772949219
    9. '')' → logprob: -9.405204772949219
    10. ' ' → logprob: -9.405204772949219

Token 295: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008259119465947151
    2. 'else' → logprob: -5.383259296417236
    3. '           ' → logprob: -6.008259296417236
    4. '   ' → logprob: -8.008258819580078
    5. ' else' → logprob: -8.133258819580078
    6. '<|end|>' → logprob: -8.508258819580078
    7. 'elif' → logprob: -8.633258819580078
    8. 'if' → logprob: -10.258258819580078
    9. '```' → logprob: -10.383258819580078
    10. '#' → logprob: -10.883258819580078

Token 296: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018299540504813194
    2. ' ' → logprob: -4.018299579620361
    3. '<|end|>' → logprob: -8.893299102783203
    4. '   ' → logprob: -12.768299102783203
    5. 'un' → logprob: -12.768299102783203
    6. '```' → logprob: -13.393299102783203
    7. '  ' → logprob: -13.893299102783203
    8. ''un' → logprob: -14.018299102783203
    9. 'une' → logprob: -14.018299102783203
    10. ' one' → logprob: -14.893299102783203

Token 297: ' unité' (ID: 181741)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28246694803237915
    2. 'unit' → logprob: -1.7824668884277344
    3. ' unité' → logprob: -2.7824668884277344
    4. '<|end|>' → logprob: -4.907466888427734
    5. ' ' → logprob: -5.282466888427734
    6. ' unit' → logprob: -6.532466888427734
    7. 'un' → logprob: -7.032466888427734
    8. 'fois' → logprob: -8.532466888427734
    9. 'value' → logprob: -9.532466888427734
    10. 'ligne' → logprob: -9.782466888427734

Token 298: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01043231412768364
    2. '           ' → logprob: -4.760432243347168
    3. '<|end|>' → logprob: -7.010432243347168
    4. 'else' → logprob: -7.510432243347168
    5. '   ' → logprob: -8.885432243347168
    6. 'elif' → logprob: -9.510432243347168
    7. ' else' → logprob: -9.885432243347168
    8. '```' → logprob: -10.135432243347168
    9. 'if' → logprob: -11.260432243347168
    10. '        
' → logprob: -11.385432243347168

Token 299: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051980797201395035
    2. '   ' → logprob: -3.67698073387146
    3. 'else' → logprob: -4.926980972290039
    4. '```' → logprob: -5.426980972290039
    5. ' if' → logprob: -5.551980972290039
    6. 'if' → logprob: -5.551980972290039
    7. '           ' → logprob: -5.926980972290039
    8. ' else' → logprob: -6.176980972290039
    9. 'elif' → logprob: -7.426980972290039
    10. '<|end|>' → logprob: -8.301980972290039

Token 300: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6226977705955505
    2. 'for' → logprob: -1.2476978302001953
    3. 'if' → logprob: -2.8726978302001953
    4. '#' (adapté à ' #') → logprob: -3.2476978302001953
    5. '   ' → logprob: -3.4976978302001953
    6. 'valid' → logprob: -4.622697830200195
    7. 'else' → logprob: -4.622697830200195
    8. 'possible' → logprob: -4.747697830200195
    9. 'flag' → logprob: -5.247697830200195
    10. 'result' → logprob: -5.247697830200195

Token 301: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8627259731292725
    2. 'print' → logprob: -1.2377259731292725
    3. 'if' → logprob: -1.4877259731292725
    4. 'possible' → logprob: -3.9877259731292725
    5. '#' → logprob: -4.362726211547852
    6. 'flag' → logprob: -4.612726211547852
    7. 'result' → logprob: -5.237726211547852
    8. 'is' → logprob: -5.487726211547852
    9. 'answer' → logprob: -5.862726211547852
    10. 'ok' → logprob: -6.112726211547852

Token 302: ' une' (ID: 2463)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.957084059715271
    2. 'possible' → logprob: -1.207084059715271
    3. 'answer' → logprob: -2.2070841789245605
    4. 'ok' → logprob: -2.7070841789245605
    5. 'result' → logprob: -3.5820841789245605
    6. 'une' → logprob: -3.7070841789245605
    7. 'is' → logprob: -4.2070841789245605
    8. '   ' → logprob: -4.2070841789245605
    9. 'ans' → logprob: -4.3320841789245605
    10. 'valid' → logprob: -4.8320841789245605

Token 303: ' variable' (ID: 11076)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.42325475811958313
    2. 'variable' → logprob: -1.2982547283172607
    3. 'valid' → logprob: -3.9232547283172607
    4. 'possible' → logprob: -4.04825496673584
    5. 'boolean' → logprob: -4.04825496673584
    6. 'bool' → logprob: -5.29825496673584
    7. 'result' → logprob: -5.92325496673584
    8. 'can' → logprob: -6.29825496673584
    9. 'answer' → logprob: -6.79825496673584
    10. 'val' → logprob: -6.92325496673584

Token 304: ' qui' (ID: 2780)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.945099413394928
    2. 'flag' → logprob: -1.1950993537902832
    3. 'answer' → logprob: -2.570099353790283
    4. 'valid' → logprob: -2.695099353790283
    5. '   ' → logprob: -3.195099353790283
    6. 'result' → logprob: -3.570099353790283
    7. 'ok' → logprob: -3.695099353790283
    8. 'can' → logprob: -4.320099353790283
    9. 'is' → logprob: -4.695099353790283
    10. 'ans' → logprob: -4.695099353790283

Token 305: ' serv' (ID: 2096)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.2253308296203613
    2. 'pe' → logprob: -1.3503308296203613
    3. 'possible' → logprob: -2.1003308296203613
    4. 'flag' → logprob: -2.3503308296203613
    5. 'est' → logprob: -2.8503308296203613
    6. 'result' → logprob: -3.1003308296203613
    7. 'is' → logprob: -3.3503308296203613
    8. 'ok' → logprob: -4.100330829620361
    9. 'valid' → logprob: -4.600330829620361
    10. 'answer' → logprob: -4.725330829620361

Token 306: 'ira' (ID: 2633)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5809045433998108
    2. 'ra' → logprob: -1.455904483795166
    3. 'ira' → logprob: -1.830904483795166
    4. 'era' → logprob: -3.955904483795166
    5. 'à' → logprob: -4.080904483795166
    6. 't' → logprob: -5.580904483795166
    7. '#' → logprob: -5.705904483795166
    8. 'ait' → logprob: -6.955904483795166
    9. 'e' → logprob: -7.205904483795166
    10. 'i' → logprob: -7.955904483795166

Token 307: ' de' (ID: 334)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.13171331584453583
    2. 'a' → logprob: -2.881713390350342
    3. ' à' → logprob: -3.506713390350342
    4. 'pour' → logprob: -4.631713390350342
    5. 'flag' → logprob: -4.756713390350342
    6. 'to' → logprob: -5.256713390350342
    7. '   ' → logprob: -5.381713390350342
    8. ' ' → logprob: -5.756713390350342
    9. '=' → logprob: -6.631713390350342
    10. 'as' → logprob: -7.256713390350342

Token 308: ' dr' (ID: 1498)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.12221597880125046
    2. 'bool' → logprob: -2.372215986251831
    3. 'ind' → logprob: -5.372215747833252
    4. 'result' → logprob: -5.747215747833252
    5. 'd' → logprob: -5.872215747833252
    6. 'comp' → logprob: -6.497215747833252
    7. 'bo' → logprob: -6.747215747833252
    8. 'boolean' → logprob: -6.997215747833252
    9. 'valid' → logprob: -6.997215747833252
    10. 'Yes' → logprob: -7.372215747833252

Token 309: 'apeau' (ID: 140059)
  Prédit: 'apeau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apeau' → logprob: -0.027580926194787025
    2. 'ap' → logprob: -3.652580976486206
    3. 'ape' → logprob: -6.902580738067627
    4. 'apo' → logprob: -8.652581214904785
    5. 'apé' → logprob: -10.402581214904785
    6. 'ep' → logprob: -11.402581214904785
    7. 'ame' → logprob: -11.402581214904785
    8. 'app' → logprob: -11.527581214904785
    9. 'appe' → logprob: -11.652581214904785
    10. '```' → logprob: -12.402581214904785

Token 310: ' pour' (ID: 1930)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.027053713798523
    2. 'can' → logprob: -1.402053713798523
    3. 'valid' → logprob: -2.1520538330078125
    4. 'is' → logprob: -2.2770538330078125
    5. 'flag' → logprob: -2.7770538330078125
    6. 'ok' → logprob: -3.7770538330078125
    7. '   ' → logprob: -3.7770538330078125
    8. 'est' → logprob: -4.1520538330078125
    9. 'de' → logprob: -4.2770538330078125
    10. 'good' → logprob: -5.0270538330078125

Token 311: ' ind' (ID: 1383)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.473744511604309
    2. 'val' → logprob: -1.723744511604309
    3. 'True' → logprob: -1.723744511604309
    4. 'ver' → logprob: -1.848744511604309
    5. 'Yes' → logprob: -3.0987443923950195
    6. 'v' → logprob: -3.4737443923950195
    7. 'la' → logprob: -3.4737443923950195
    8. '"' → logprob: -4.0987443923950195
    9. 'oui' → logprob: -4.2237443923950195
    10. 'flag' → logprob: -4.4737443923950195

Token 312: 'iquer' (ID: 63028)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.09503647685050964
    2. 'icate' → logprob: -3.095036506652832
    3. 'ique' → logprob: -3.595036506652832
    4. 'ice' → logprob: -4.345036506652832
    5. 'icator' → logprob: -5.970036506652832
    6. 'iquer' → logprob: -6.720036506652832
    7. 'iqué' → logprob: -7.345036506652832
    8. 'ic' → logprob: -8.970036506652832
    9. 'iquant' → logprob: -9.095036506652832
    10. 'ication' → logprob: -9.595036506652832

Token 313: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.2612878382205963
    2. 'if' → logprob: -2.8862879276275635
    3. 'True' → logprob: -2.8862879276275635
    4. 'whether' → logprob: -3.6362879276275635
    5. '   ' → logprob: -3.7612879276275635
    6. ' si' → logprob: -3.8862879276275635
    7. 'valid' → logprob: -4.636287689208984
    8. 'possible' → logprob: -5.011287689208984
    9. ' True' → logprob: -5.386287689208984
    10. 'la' → logprob: -5.511287689208984

Token 314: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1717248111963272
    2. ' la' → logprob: -2.546724796295166
    3. 'le' → logprob: -3.421724796295166
    4. 'une' → logprob: -3.796724796295166
    5. 'possible' → logprob: -5.046724796295166
    6. 'l' → logprob: -5.171724796295166
    7. 'Yes' → logprob: -5.796724796295166
    8. 'tout' → logprob: -6.546724796295166
    9. ' le' → logprob: -6.671724796295166
    10. 'True' → logprob: -6.796724796295166

Token 315: ' sé' (ID: 7462)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.046104032546281815
    2. 'sé' → logprob: -4.0461039543151855
    3. 'liste' → logprob: -4.2961039543151855
    4. 'condition' → logprob: -5.5461039543151855
    5. 'sequ' → logprob: -6.0461039543151855
    6. 'result' → logprob: -6.4211039543151855
    7. 'p' → logprob: -6.7961039543151855
    8. ' sequence' → logprob: -6.9211039543151855
    9. 'suite' → logprob: -7.2961039543151855
    10. 'se' → logprob: -7.2961039543151855

Token 316: 'quence' (ID: 6975)
  Prédit: 'ication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ication' → logprob: -0.8860642910003662
    2. 'icate' → logprob: -0.8860642910003662
    3. 'iction' → logprob: -3.136064291000366
    4. 'ition' → logprob: -3.386064291000366
    5. 'éc' → logprob: -4.261064529418945
    6. 'cation' → logprob: -4.386064529418945
    7. 'flag' → logprob: -4.511064529418945
    8. 'condition' → logprob: -4.886064529418945
    9. 'sequence' → logprob: -5.011064529418945
    10. 'cision' → logprob: -5.136064529418945

Token 317: ' respecte' (ID: 140483)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8216778039932251
    2. 'est' → logprob: -1.571677803993225
    3. 'valid' → logprob: -2.1966776847839355
    4. 'pe' → logprob: -2.6966776847839355
    5. 'can' → logprob: -2.9466776847839355
    6. 'is' → logprob: -3.4466776847839355
    7. '   ' → logprob: -3.5716776847839355
    8. 'non' → logprob: -4.5716776847839355
    9. 'de' → logprob: -4.6966776847839355
    10. 'mon' → logprob: -4.8216776847839355

Token 318: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6615808606147766
    2. 'True' → logprob: -0.9115808606147766
    3. ' la' → logprob: -3.411580801010132
    4. ' True' → logprob: -3.911580801010132
    5. '   ' → logprob: -4.161581039428711
    6. 'le' → logprob: -4.661581039428711
    7. 'une' → logprob: -7.161581039428711
    8. '=True' → logprob: -7.536581039428711
    9. 'Yes' → logprob: -7.786581039428711
    10. ' ' → logprob: -8.286581039428711

Token 319: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.0053863683715462685
    2. 'Yes' → logprob: -6.2553863525390625
    3. 'True' → logprob: -6.7553863525390625
    4. ' condition' → logprob: -7.1303863525390625
    5. '"' → logprob: -8.130386352539062
    6. 'strict' → logprob: -8.380386352539062
    7. ''' → logprob: -8.630386352539062
    8. ' True' → logprob: -8.755386352539062
    9. 'non' → logprob: -9.505386352539062
    10. 'cond' → logprob: -9.630386352539062

Token 320: ' finale' (ID: 37759)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8295198678970337
    2. 'possible' → logprob: -1.4545198678970337
    3. 'can' → logprob: -1.8295198678970337
    4. 'is' → logprob: -2.329519748687744
    5. 'ok' → logprob: -3.954519748687744
    6. ' possible' → logprob: -4.204519748687744
    7. ' is' → logprob: -4.704519748687744
    8. ' valid' → logprob: -4.704519748687744
    9. 'flag' → logprob: -5.454519748687744
    10. ' can' → logprob: -5.704519748687744

Token 321: '
' (ID: 198)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.24169467389583588
    2. 'is' → logprob: -2.116694688796997
    3. 'can' → logprob: -3.741694688796997
    4. 'ok' → logprob: -3.741694688796997
    5. 'possible' → logprob: -3.741694688796997
    6. 'flag' → logprob: -4.491694450378418
    7. '   ' → logprob: -5.491694450378418
    8. 'good' → logprob: -6.366694450378418
    9. 'de' → logprob: -6.366694450378418
    10. 'est' → logprob: -6.741694450378418

Token 322: '   ' (ID: 271)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.3817325532436371
    2. 'possible' → logprob: -2.25673246383667
    3. 'can' → logprob: -2.75673246383667
    4. 'flag' → logprob: -3.00673246383667
    5. 'is' → logprob: -3.13173246383667
    6. 'ok' → logprob: -3.25673246383667
    7. '   ' → logprob: -4.75673246383667
    8. 'correct' → logprob: -6.25673246383667
    9. 'good' → logprob: -7.13173246383667
    10. 'answer' → logprob: -7.25673246383667

Token 323: ' no' (ID: 860)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.4495677351951599
    2. 'is' → logprob: -2.1995677947998047
    3. 'flag' → logprob: -2.3245677947998047
    4. 'possible' → logprob: -2.4495677947998047
    5. 'ok' → logprob: -3.3245677947998047
    6. 'can' → logprob: -3.8245677947998047
    7. 'good' → logprob: -6.324567794799805
    8. 'res' → logprob: -6.574567794799805
    9. 'condition' → logprob: -6.574567794799805
    10. 'result' → logprob: -6.824567794799805

Token 324: '_flag' (ID: 25269)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.125585913658142
    2. 'n' → logprob: -1.500585913658142
    3. '_problem' → logprob: -2.6255860328674316
    4. '_vi' → logprob: -2.6255860328674316
    5. '_pro' → logprob: -2.7505860328674316
    6. 'w' → logprob: -3.3755860328674316
    7. '_error' → logprob: -3.5005860328674316
    8. '_' → logprob: -3.8755860328674316
    9. 'vi' → logprob: -4.500586032867432
    10. 'de' → logprob: -4.500586032867432

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387010782957077
    2. ' =' → logprob: -1.1370108127593994
    3. '=True' → logprob: -9.38701057434082
    4. '=False' → logprob: -10.63701057434082
    5. 's' → logprob: -11.01201057434082
    6. 'd' → logprob: -11.51201057434082
    7. '_' → logprob: -13.01201057434082
    8. ' ' → logprob: -13.63701057434082
    9. '   ' → logprob: -15.13701057434082
    10. 'ed' → logprob: -15.13701057434082

Token 326: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.44113484025001526
    2. 'True' → logprob: -1.0661348104476929
    3. ' False' → logprob: -5.191134929656982
    4. ' True' → logprob: -5.316134929656982
    5. '0' → logprob: -6.316134929656982
    6. '1' → logprob: -9.941134452819824
    7. '   ' → logprob: -11.316134452819824
    8. ' ' → logprob: -11.941134452819824
    9. '(False' → logprob: -13.941134452819824
    10. '(True' → logprob: -14.066134452819824

Token 327: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04028677940368652
    2. 'True' → logprob: -3.4152867794036865
    3. '0' → logprob: -5.040287017822266
    4. ' False' → logprob: -9.165287017822266
    5. '1' → logprob: -10.290287017822266
    6. ' True' → logprob: -12.915287017822266
    7. 'false' → logprob: -13.415287017822266
    8. 'F' → logprob: -13.665287017822266
    9. '(False' → logprob: -13.790287017822266
    10. ' ' → logprob: -14.915287017822266

Token 328: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027321942150592804
    2. 'for' → logprob: -4.152321815490723
    3. ' for' → logprob: -5.527321815490723
    4. '   ' → logprob: -5.777321815490723
    5. '\n' → logprob: -6.402321815490723
    6. '  
' → logprob: -6.777321815490723
    7. '<|end|>' → logprob: -7.527321815490723
    8. ' 
' → logprob: -7.902321815490723
    9. '    
' → logprob: -8.402321815490723
    10. '
' → logprob: -9.527321815490723

Token 329: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011962071992456913
    2. ' for' → logprob: -4.511961936950684
    3. '   ' → logprob: -7.011961936950684
    4. '
' → logprob: -11.761961936950684
    5. '#' → logprob: -12.636961936950684
    6. ' ' → logprob: -14.886961936950684
    7. '	for' → logprob: -15.136961936950684
    8. '<|end|>' → logprob: -15.136961936950684
    9. '    
' → logprob: -15.761961936950684
    10. '  ' → logprob: -15.886961936950684

Token 330: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005930101033300161
    2. ' for' → logprob: -5.130929946899414
    3. 'if' → logprob: -14.255929946899414
    4. '   ' → logprob: -15.380929946899414
    5. '```' → logprob: -15.380929946899414
    6. 'print' → logprob: -16.005929946899414
    7. '
' → logprob: -16.005929946899414
    8. '#' → logprob: -16.130929946899414
    9. ' ' → logprob: -17.630929946899414
    10. 'i' → logprob: -18.380929946899414

Token 331: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48070207238197327
    2. ' for' → logprob: -0.9807020425796509
    3. '   ' → logprob: -6.355701923370361
    4. '#' → logprob: -6.480701923370361
    5. ' ' → logprob: -6.855701923370361
    6. 'n' → logprob: -7.855701923370361
    7. 'or' → logprob: -7.855701923370361
    8. '=' → logprob: -8.10570240020752
    9. ' =' → logprob: -8.23070240020752
    10. '
' → logprob: -9.10570240020752

Token 332: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7228033542633057
    2. ' par' → logprob: -1.2228033542633057
    3. '<|end|>' → logprob: -1.9728033542633057
    4. 'par' → logprob: -3.3478033542633057
    5. ' by' → logprob: -4.597803115844727
    6. ' ' → logprob: -5.472803115844727
    7. 'with' → logprob: -5.597803115844727
    8. ' with' → logprob: -5.847803115844727
    9. 'by' → logprob: -5.847803115844727
    10. '  ' → logprob: -6.222803115844727

Token 333: ' supp' (ID: 4805)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.17487388849258423
    2. 'no' → logprob: -2.4248738288879395
    3. '0' → logprob: -2.7998738288879395
    4. 'No' → logprob: -6.2998738288879395
    5. ' False' → logprob: -6.2998738288879395
    6. 'print' → logprob: -6.7998738288879395
    7. '1' → logprob: -6.9248738288879395
    8. ' no' → logprob: -7.1748738288879395
    9. 'True' → logprob: -7.4248738288879395
    10. 'Yes' → logprob: -7.6748738288879395

Token 334: 'oser' (ID: 26956)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.002612878568470478
    2. 'oser' → logprob: -6.377613067626953
    3. 'os' → logprob: -7.377613067626953
    4. 'pose' → logprob: -9.127613067626953
    5. 'ost' → logprob: -10.627613067626953
    6. 'se' → logprob: -10.877613067626953
    7. 't' → logprob: -11.252613067626953
    8. 'onse' → logprob: -11.252613067626953
    9. 'osse' → logprob: -11.252613067626953
    10. ' ose' → logprob: -11.752613067626953

Token 335: ' qu' (ID: 474)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5536026358604431
    2. ' que' → logprob: -1.678602695465088
    3. 'qu' → logprob: -2.178602695465088
    4. '   ' → logprob: -2.428602695465088
    5. 'that' → logprob: -3.803602695465088
    6. ' that' → logprob: -5.053602695465088
    7. '0' → logprob: -5.678602695465088
    8. 'par' → logprob: -6.178602695465088
    9. ' qu' → logprob: -6.928602695465088
    10. ' ' → logprob: -8.67860221862793

Token 336: ''il' (ID: 14683)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.9422372579574585
    2. '   ' → logprob: -1.3172372579574585
    3. 'e' → logprob: -2.442237377166748
    4. 'u' → logprob: -2.692237377166748
    5. 'ue' → logprob: -2.942237377166748
    6. 'qu' → logprob: -3.442237377166748
    7. ' que' → logprob: -4.067237377166748
    8. 'on' → logprob: -4.442237377166748
    9. 'that' → logprob: -4.567237377166748
    10. ''il' → logprob: -4.817237377166748

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1205698549747467
    2. ' n' → logprob: -2.245569944381714
    3. 'y' → logprob: -5.245569705963135
    4. ' y' → logprob: -6.245569705963135
    5. 'ne' → logprob: -8.870570182800293
    6. 'f' → logprob: -8.995570182800293
    7. 'n't' → logprob: -9.745570182800293
    8. 'est' → logprob: -9.995570182800293
    9. 'ya' → logprob: -10.370570182800293
    10. '   ' → logprob: -10.495570182800293

Token 338: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5280834436416626
    2. 'n' → logprob: -0.9030834436416626
    3. ''y' → logprob: -5.778083324432373
    4. ' y' → logprob: -7.403083324432373
    5. 'ny' → logprob: -7.403083324432373
    6. ' n' → logprob: -7.903083324432373
    7. 'ya' → logprob: -8.778083801269531
    8. '‘y' → logprob: -10.153083801269531
    9. '   ' → logprob: -10.653083801269531
    10. 'a' → logprob: -11.153083801269531

Token 339: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04315733164548874
    2. ' a' → logprob: -3.1681573390960693
    3. 'y' → logprob: -9.918157577514648
    4. ''a' → logprob: -10.293157577514648
    5. ' aura' → logprob: -11.418157577514648
    6. ' ' → logprob: -11.668157577514648
    7. '#a' → logprob: -11.918157577514648
    8. '<|end|>' → logprob: -12.043157577514648
    9. 'avait' → logprob: -12.168157577514648
    10. 'aie' → logprob: -12.293157577514648

Token 340: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.020064113661646843
    2. 'auc' → logprob: -4.020063877105713
    3. 'no' → logprob: -7.020063877105713
    4. ' aucun' → logprob: -7.145063877105713
    5. ' pas' → logprob: -8.645064353942871
    6. ' aucune' → logprob: -10.645064353942871
    7. '0' → logprob: -11.645064353942871
    8. 'p' → logprob: -12.645064353942871
    9. ' ' → logprob: -12.770064353942871
    10. 'proble' → logprob: -13.020064353942871

Token 341: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15335234999656677
    2. 'de' → logprob: -2.0283522605895996
    3. ' d' → logprob: -5.4033522605896
    4. 'no' → logprob: -5.7783522605896
    5. ' de' → logprob: -6.2783522605896
    6. 'pro' → logprob: -6.9033522605896
    7. ' ' → logprob: -10.278352737426758
    8. 'proble' → logprob: -10.653352737426758
    9. '#' → logprob: -10.778352737426758
    10. 'def' → logprob: -10.903352737426758

Token 342: ''an' (ID: 37751)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4702777564525604
    2. 'e' → logprob: -1.4702777862548828
    3. ''er' → logprob: -2.095277786254883
    4. 'é' → logprob: -4.845277786254883
    5. 'éc' → logprob: -5.345277786254883
    6. ' problème' → logprob: -6.220277786254883
    7. 'es' → logprob: -6.220277786254883
    8. ''é' → logprob: -6.595277786254883
    9. 'pro' → logprob: -6.720277786254883
    10. 'proble' → logprob: -7.595277786254883

Token 343: 'omal' (ID: 40272)
  Prédit: 'omal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omal' → logprob: -0.14687050879001617
    2. 'orm' → logprob: -2.5218706130981445
    3. 'ormal' → logprob: -2.8968706130981445
    4. 'om' → logprob: -7.2718706130981445
    5. 'omaly' → logprob: -8.396870613098145
    6. 'o' → logprob: -9.021870613098145
    7. 'omie' → logprob: -11.771870613098145
    8. 'orma' → logprob: -11.896870613098145
    9. 'alité' → logprob: -12.521870613098145
    10. 'omm' → logprob: -12.771870613098145

Token 344: 'ie' (ID: 396)
  Prédit: 'omal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omal' → logprob: -0.3382932245731354
    2. 'ie' → logprob: -1.588293194770813
    3. 'e' → logprob: -3.3382933139801025
    4. 'omie' → logprob: -4.588293075561523
    5. 'ale' → logprob: -4.713293075561523
    6. 'ormal' → logprob: -5.213293075561523
    7. 'ome' → logprob: -5.213293075561523
    8. 'ies' → logprob: -5.588293075561523
    9. 'orm' → logprob: -6.088293075561523
    10. 'al' → logprob: -6.213293075561523

Token 345: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05609089136123657
    2. ' for' → logprob: -2.931090831756592
    3. '   ' → logprob: -6.806090831756592
    4. '
' → logprob: -9.68109130859375
    5. '<|end|>' → logprob: -10.80609130859375
    6. '```' → logprob: -11.80609130859375
    7. '\n' → logprob: -13.05609130859375
    8. 'i' → logprob: -13.80609130859375
    9. '	for' → logprob: -13.80609130859375
    10. '    
' → logprob: -13.80609130859375

Token 346: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08383944630622864
    2. '   ' → logprob: -2.8338394165039062
    3. ' for' → logprob: -3.8338394165039062
    4. 'if' → logprob: -13.083839416503906
    5. '```' → logprob: -13.208839416503906
    6. '#' → logprob: -13.708839416503906
    7. '	for' → logprob: -14.333839416503906
    8. 'possible' → logprob: -14.958839416503906
    9. 'while' → logprob: -15.208839416503906
    10. 'flag' → logprob: -15.208839416503906

Token 347: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022475497098639607
    2. ' for' → logprob: -8.750225067138672
    3. '   ' → logprob: -9.625225067138672
    4. '#' (adapté à ' #') → logprob: -16.625225067138672
    5. '	for' → logprob: -17.500225067138672
    6. '```' → logprob: -17.500225067138672
    7. ' ' → logprob: -20.250225067138672
    8. 'For' → logprob: -20.500225067138672
    9. 'if' → logprob: -20.875225067138672
    10. '    
' → logprob: -21.125225067138672

Token 348: ' Deux' (ID: 92086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.180258191714529e-06
    2. ' for' → logprob: -12.000008583068848
    3. '#' → logprob: -13.250008583068848
    4. '```' → logprob: -15.625008583068848
    5. '   ' → logprob: -17.87500762939453
    6. 'For' → logprob: -19.12500762939453
    7. '	for' → logprob: -19.37500762939453
    8. 'if' → logprob: -19.50000762939453
    9. 'i' → logprob: -20.25000762939453
    10. ' ' → logprob: -21.12500762939453

Token 349: 'ième' (ID: 41126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4170648455619812
    2. ' for' → logprob: -1.167064905166626
    3. 'ième' → logprob: -3.792064905166626
    4. ' ' → logprob: -5.792064666748047
    5. 'i' → logprob: -6.417064666748047
    6. ' i' → logprob: -6.917064666748047
    7. '   ' → logprob: -7.792064666748047
    8. '.' → logprob: -8.667064666748047
    9. '#' → logprob: -8.792064666748047
    10. ')' → logprob: -8.792064666748047

Token 350: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34940773248672485
    2. ' for' → logprob: -1.22440767288208
    3. 'range' → logprob: -7.72440767288208
    4. ' ' → logprob: -8.474408149719238
    5. '<|end|>' → logprob: -8.849408149719238
    6. '   ' → logprob: -10.474408149719238
    7. '  ' → logprob: -10.599408149719238
    8. ' range' → logprob: -10.599408149719238
    9. '	for' → logprob: -10.849408149719238
    10. '
' → logprob: -10.849408149719238

Token 351: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762190818786621
    2. 'for' → logprob: -0.8262190818786621
    3. '   ' → logprob: -8.20121955871582
    4. '	for' → logprob: -13.20121955871582
    5. 'range' → logprob: -13.70121955871582
    6. ' ' → logprob: -13.95121955871582
    7. ':' → logprob: -14.82621955871582
    8. ' range' → logprob: -15.07621955871582
    9. ' in' → logprob: -15.57621955871582
    10. ' i' → logprob: -15.82621955871582

Token 352: ' vérifier' (ID: 93671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36874425411224365
    2. ' range' → logprob: -1.2437442541122437
    3. 'i' → logprob: -4.493744373321533
    4. ' i' → logprob: -5.243744373321533
    5. 'for' → logprob: -6.618744373321533
    6. ' vérifier' → logprob: -6.868744373321533
    7. ' for' → logprob: -6.868744373321533
    8. '   ' → logprob: -9.743743896484375
    9. ' ' → logprob: -9.868743896484375
    10. ' ' → logprob: -11.118743896484375

Token 353: ' si' (ID: 1784)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14696745574474335
    2. ' for' → logprob: -2.1469674110412598
    3. '   ' → logprob: -4.02196741104126
    4. 'range' → logprob: -6.77196741104126
    5. 'if' → logprob: -7.89696741104126
    6. '(range' → logprob: -8.896967887878418
    7. ' if' → logprob: -9.646967887878418
    8. ' ' → logprob: -9.771967887878418
    9. ' range' → logprob: -10.021967887878418
    10. '(' → logprob: -10.271967887878418

Token 354: ' la' (ID: 557)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.07764898985624313
    2. ' la' → logprob: -4.202649116516113
    3. 'all' → logprob: -4.202649116516113
    4. 'H' → logprob: -4.452649116516113
    5. ' any' → logprob: -4.452649116516113
    6. ' H' → logprob: -5.077649116516113
    7. ' for' → logprob: -5.702649116516113
    8. ' ' → logprob: -6.077649116516113
    9. 'any' → logprob: -6.452649116516113
    10. ' not' → logprob: -6.827649116516113

Token 355: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.9296424984931946
    2. 'sequence' → logprob: -1.0546424388885498
    3. 'sé' → logprob: -2.30464243888855
    4. 'all' → logprob: -2.92964243888855
    5. 'for' → logprob: -3.17964243888855
    6. ' sé' → logprob: -4.554642677307129
    7. 'H' → logprob: -4.554642677307129
    8. 'suite' → logprob: -4.679642677307129
    9. ' sequence' → logprob: -4.804642677307129
    10. 'list' → logprob: -5.679642677307129

Token 356: 'quence' (ID: 6975)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5262415409088135
    2. 'quence' → logprob: -0.9012415409088135
    3. 'q' → logprob: -6.151241302490234
    4. '#' → logprob: -8.276241302490234
    5. 'quences' → logprob: -8.276241302490234
    6. 'quent' → logprob: -9.026241302490234
    7. '   ' → logprob: -9.151241302490234
    8. ' range' → logprob: -9.401241302490234
    9. 'H' → logprob: -10.151241302490234
    10. 'que' → logprob: -10.526241302490234

Token 357: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.0194425582885742
    2. 'for' → logprob: -1.3944425582885742
    3. 'is' → logprob: -1.5194425582885742
    4. ' est' → logprob: -2.019442558288574
    5. ' is' → logprob: -4.894442558288574
    6. 's' → logprob: -4.894442558288574
    7. ' respecte' → logprob: -4.894442558288574
    8. ' for' → logprob: -5.269442558288574
    9. 'n' → logprob: -6.019442558288574
    10. ' ' → logprob: -6.144442558288574

Token 358: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.6184766292572021
    2. 'strict' → logprob: -0.8684766292572021
    3. ' non' → logprob: -3.743476629257202
    4. 'tou' → logprob: -5.368476867675781
    5. 'mon' → logprob: -5.993476867675781
    6. 'sorted' → logprob: -6.493476867675781
    7. 'tout' → logprob: -6.743476867675781
    8. 't' → logprob: -6.743476867675781
    9. ' strictly' → logprob: -7.243476867675781
    10. 'dé' → logprob: -7.368476867675781

Token 359: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.2522118389606476
    2. 'strict' → logprob: -1.8772118091583252
    3. 'd' → logprob: -2.752211809158325
    4. ' décro' → logprob: -6.252212047576904
    5. 'dé' → logprob: -6.377212047576904
    6. 'in' → logprob: -6.877212047576904
    7. 'de' → logprob: -6.877212047576904
    8. ' cro' → logprob: -8.627211570739746
    9. 'dec' → logprob: -9.752211570739746
    10. '   ' → logprob: -10.002211570739746

Token 360: 'issante' (ID: 80061)
  Prédit: 'issante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -3.643152740551159e-05
    2. 'issant' → logprob: -10.875036239624023
    3. 'iss' → logprob: -11.625036239624023
    4. 'is' → logprob: -12.250036239624023
    5. 'issance' → logprob: -12.875036239624023
    6. 'issants' → logprob: -14.875036239624023
    7. 'ss' → logprob: -15.125036239624023
    8. '
' → logprob: -15.500036239624023
    9. '#' → logprob: -16.750036239624023
    10. 'i' → logprob: -16.875036239624023

Token 361: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43137475848197937
    2. ' for' → logprob: -1.6813747882843018
    3. '   ' → logprob: -1.8063747882843018
    4. '<|end|>' → logprob: -12.306374549865723
    5. '	for' → logprob: -12.556374549865723
    6. ':' → logprob: -12.556374549865723
    7. '```' → logprob: -13.681374549865723
    8. 'range' → logprob: -14.056374549865723
    9. '  ' → logprob: -14.056374549865723
    10. ' ' → logprob: -14.056374549865723

Token 362: 'cha' (ID: 3836)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8274140357971191
    2. ' for' → logprob: -1.2024140357971191
    3. ' True' → logprob: -2.327414035797119
    4. 'True' → logprob: -2.452414035797119
    5. ' all' → logprob: -2.827414035797119
    6. 'all' → logprob: -4.577414035797119
    7. '   ' → logprob: -5.077414035797119
    8. 'H' → logprob: -6.952414035797119
    9. ' H' → logprob: -7.827414035797119
    10. ')' → logprob: -7.827414035797119

Token 363: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5225664377212524
    2. 'mp' → logprob: -1.6475664377212524
    3. 'z' → logprob: -1.6475664377212524
    4. 'c' → logprob: -2.647566318511963
    5. 'de' → logprob: -2.772566318511963
    6. 'issante' → logprob: -3.022566318511963
    7. '   ' → logprob: -3.147566318511963
    8. 'for' → logprob: -3.522566318511963
    9. 'que' → logprob: -4.022566318511963
    10. 'rc' → logprob: -4.147566318511963

Token 364: ' élément' (ID: 99627)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6821079254150391
    2. 'i' → logprob: -1.682107925415039
    3. 'for' → logprob: -1.807107925415039
    4. ' for' → logprob: -2.557107925415039
    5. 'element' → logprob: -3.682107925415039
    6. ' element' → logprob: -4.557107925415039
    7. 'élé' → logprob: -4.557107925415039
    8. ' élément' → logprob: -4.807107925415039
    9. ' H' → logprob: -5.057107925415039
    10. 'elem' → logprob: -5.932107925415039

Token 365: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7757663726806641
    2. ' >=' → logprob: -1.400766372680664
    3. '   ' → logprob: -1.525766372680664
    4. ' for' → logprob: -3.650766372680664
    5. 'for' → logprob: -3.900766372680664
    6. ' is' → logprob: -5.150766372680664
    7. ' ' → logprob: -5.400766372680664
    8. 'n' → logprob: -5.775766372680664
    9. '<=' → logprob: -6.275766372680664
    10. 'is' → logprob: -6.650766372680664

Token 366: ' suivant' (ID: 68705)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42987871170043945
    2. ' H' → logprob: -1.0548787117004395
    3. ' la' → logprob: -8.554878234863281
    4. 'the' → logprob: -8.554878234863281
    5. ' le' → logprob: -8.679878234863281
    6. '   ' → logprob: -8.804878234863281
    7. 'le' → logprob: -9.304878234863281
    8. ' the' → logprob: -9.554878234863281
    9. 'au' → logprob: -9.554878234863281
    10. ' ' → logprob: -9.804878234863281

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9442095756530762
    2. '):
' → logprob: -1.4442095756530762
    3. '):' → logprob: -1.9442095756530762
    4. '   ' → logprob: -2.069209575653076
    5. ')
' → logprob: -2.569209575653076
    6. 'for' → logprob: -3.819209575653076
    7. ' for' → logprob: -5.694209575653076
    8. '):

' → logprob: -6.944209575653076
    9. ',' → logprob: -7.569209575653076
    10. '):
' → logprob: -8.069210052490234

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48861509561538696
    2. 'for' → logprob: -0.988615095615387
    3. ' for' → logprob: -4.238615036010742
    4. '	for' → logprob: -13.363615036010742
    5. '
' → logprob: -13.613615036010742
    6. '```' → logprob: -13.863615036010742
    7. ' ' → logprob: -14.238615036010742
    8. '  ' → logprob: -14.488615036010742
    9. '    
' → logprob: -15.113615036010742
    10. '    ' → logprob: -15.863615036010742

Token 369: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00021951000962872058
    2. '   ' → logprob: -9.000219345092773
    3. ' for' → logprob: -9.250219345092773
    4. '	for' → logprob: -18.875219345092773
    5. '```' → logprob: -20.375219345092773
    6. ' ' → logprob: -20.500219345092773
    7. '  ' → logprob: -21.875219345092773
    8. '    
' → logprob: -22.250219345092773
    9. '
' → logprob: -22.375219345092773
    10. 'range' → logprob: -22.625219345092773

Token 370: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012892660684883595
    2. ' i' → logprob: -4.387892723083496
    3. 'j' → logprob: -7.887892723083496
    4. '	i' → logprob: -12.262892723083496
    5. ' j' → logprob: -13.387892723083496
    6. ' ' → logprob: -14.512892723083496
    7. '   ' → logprob: -15.387892723083496
    8. '```' → logprob: -15.512892723083496
    9. 'I' → logprob: -15.762892723083496
    10. ' ' → logprob: -15.887892723083496

Token 371: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006489329971373081
    2. 'in' → logprob: -7.3756489753723145
    3. ' ' → logprob: -10.875648498535156
    4. '   ' → logprob: -14.125648498535156
    5. '(' → logprob: -14.500648498535156
    6. '1' → logprob: -14.625648498535156
    7. 'range' → logprob: -14.750648498535156
    8. '  ' → logprob: -14.875648498535156
    9. '	in' → logprob: -15.125648498535156
    10. ' i' → logprob: -15.375648498535156

Token 372: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859429597854614
    2. ' range' → logprob: -3.0485942363739014
    3. '(range' → logprob: -12.04859447479248
    4. '1' → logprob: -14.79859447479248
    5. '(' → logprob: -15.29859447479248
    6. ' ' → logprob: -15.42359447479248
    7. '	range' → logprob: -16.923593521118164
    8. '   ' → logprob: -16.923593521118164
    9. '0' → logprob: -17.923593521118164
    10. '  ' → logprob: -18.798593521118164

Token 373: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005251068156212568
    2. '(N' → logprob: -5.255250930786133
    3. '(len' → logprob: -11.005250930786133
    4. '1' → logprob: -14.630250930786133
    5. '(n' → logprob: -16.005250930786133
    6. 'N' → logprob: -16.630250930786133
    7. '(
' → logprob: -17.255250930786133
    8. ' (' → logprob: -17.380250930786133
    9. '   ' → logprob: -18.255250930786133
    10. ' ' → logprob: -19.130250930786133

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018233880400657654
    2. 'N' → logprob: -4.018233776092529
    3. ' ' → logprob: -10.143234252929688
    4. 'len' → logprob: -10.768234252929688
    5. '0' → logprob: -11.143234252929688
    6. ' N' → logprob: -12.518234252929688
    7. '   ' → logprob: -13.018234252929688
    8. '(' → logprob: -13.518234252929688
    9. 'range' → logprob: -14.018234252929688
    10. '(N' → logprob: -14.893234252929688

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3544423381972592e-05
    2. ' ,' → logprob: -11.62501335144043
    3. ',N' → logprob: -12.50001335144043
    4. 'N' → logprob: -14.37501335144043
    5. '   ' → logprob: -16.25001335144043
    6. ',
' → logprob: -16.37501335144043
    7. ' ' → logprob: -17.62501335144043
    8. ',n' → logprob: -17.75001335144043
    9. '1' → logprob: -17.75001335144043
    10. ' N' → logprob: -18.25001335144043

Token 376: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005784121458418667
    2. ' N' → logprob: -7.5005784034729
    3. '   ' → logprob: -11.000578880310059
    4. 'len' → logprob: -11.750578880310059
    5. 'n' → logprob: -15.125578880310059
    6. ' len' → logprob: -15.500578880310059
    7. '	N' → logprob: -15.875578880310059
    8. ' ' → logprob: -15.875578880310059
    9. '       ' → logprob: -16.750577926635742
    10. '    ' → logprob: -17.750577926635742

Token 377: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2530640959739685
    2. '):' → logprob: -1.5030641555786133
    3. ':' → logprob: -6.878064155578613
    4. ':
' → logprob: -9.878064155578613
    5. '):
' → logprob: -10.003064155578613
    6. '   ' → logprob: -12.878064155578613
    7. '):

' → logprob: -13.628064155578613
    8. '}:' → logprob: -13.878064155578613
    9. '+' → logprob: -14.003064155578613
    10. ',' → logprob: -14.628064155578613

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025394887779839337
    2. 'if' → logprob: -9.000253677368164
    3. ' if' → logprob: -9.000253677368164
    4. '   ' → logprob: -12.500253677368164
    5. '```' → logprob: -13.250253677368164
    6. '<|end|>' → logprob: -13.625253677368164
    7. '	if' → logprob: -16.625253677368164
    8. '	   ' → logprob: -16.875253677368164
    9. '      ' → logprob: -16.875253677368164
    10. 'If' → logprob: -17.250253677368164

Token 379: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00480271503329277
    2. ' if' → logprob: -5.504802703857422
    3. '       ' → logprob: -7.254802703857422
    4. '   ' → logprob: -11.004802703857422
    5. '```' → logprob: -15.004802703857422
    6. '	if' → logprob: -15.504802703857422
    7. '           ' → logprob: -16.129802703857422
    8. 'If' → logprob: -17.004802703857422
    9. ' ' → logprob: -17.129802703857422
    10. '    ' → logprob: -19.629802703857422

Token 380: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002501343551557511
    2. ' if' → logprob: -8.750249862670898
    3. '       ' → logprob: -9.500249862670898
    4. '   ' → logprob: -11.000249862670898
    5. ' ' → logprob: -17.0002498626709
    6. 'If' → logprob: -17.0002498626709
    7. '           ' → logprob: -17.1252498626709
    8. '	if' → logprob: -17.3752498626709
    9. '```' → logprob: -19.0002498626709
    10. '     ' → logprob: -19.7502498626709

Token 381: ' un' (ID: 537)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08896411210298538
    2. ' H' → logprob: -2.4639642238616943
    3. '   ' → logprob: -10.838964462280273
    4. ' ' → logprob: -12.838964462280273
    5. '	H' → logprob: -13.838964462280273
    6. ' ' → logprob: -14.713964462280273
    7. '  ' → logprob: -15.088964462280273
    8. '    ' → logprob: -15.213964462280273
    9. '(H' → logprob: -16.088964462280273
    10. '       ' → logprob: -16.088964462280273

Token 382: ' élément' (ID: 99627)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0553661547601223
    2. ' H' → logprob: -2.930366039276123
    3. '   ' → logprob: -8.555366516113281
    4. ' ' → logprob: -8.930366516113281
    5. ')' → logprob: -10.055366516113281
    6. '  ' → logprob: -10.555366516113281
    7. '    ' → logprob: -10.680366516113281
    8. '>' → logprob: -11.805366516113281
    9. 'e' → logprob: -12.180366516113281
    10. '	H' → logprob: -12.180366516113281

Token 383: ' précédent' (ID: 128462)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0694117471575737
    2. ' H' → logprob: -2.8194117546081543
    3. '>' → logprob: -5.694411754608154
    4. '   ' → logprob: -5.819411754608154
    5. '    ' → logprob: -8.569411277770996
    6. '       ' → logprob: -8.819411277770996
    7. ']' → logprob: -8.944411277770996
    8. ' >' → logprob: -8.944411277770996
    9. ' ' → logprob: -9.069411277770996
    10. '  ' → logprob: -9.694411277770996

Token 384: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3599155843257904
    2. ' <' → logprob: -1.8599156141281128
    3. 'H' → logprob: -2.3599154949188232
    4. '>' → logprob: -3.4849154949188232
    5. ' H' → logprob: -4.359915733337402
    6. ' ' → logprob: -5.609915733337402
    7. ']' → logprob: -6.359915733337402
    8. '<H' → logprob: -6.359915733337402
    9. ' >' → logprob: -7.484915733337402
    10. '   ' → logprob: -7.734915733337402

Token 385: ' supérieur' (ID: 98491)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.044492125511169434
    2. '<H' → logprob: -3.669492244720459
    3. ' <' → logprob: -4.419492244720459
    4. 'strict' → logprob: -5.919492244720459
    5. 'H' → logprob: -6.294492244720459
    6. ' H' → logprob: -7.169492244720459
    7. ' strictly' → logprob: -8.6694917678833
    8. '<
' → logprob: -8.6694917678833
    9. ' less' → logprob: -9.2944917678833
    10. 'less' → logprob: -9.5444917678833

Token 386: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13099634647369385
    2. '<' → logprob: -2.8809962272644043
    3. 'à' → logprob: -4.005996227264404
    4. '>' → logprob: -4.005996227264404
    5. ' <' → logprob: -4.255996227264404
    6. ' >' → logprob: -5.255996227264404
    7. '   ' → logprob: -5.505996227264404
    8. '(H' → logprob: -6.505996227264404
    9. ' au' → logprob: -6.630996227264404
    10. ' ' → logprob: -7.255996227264404

Token 387: ' l' (ID: 305)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.038047801703214645
    2. ' H' → logprob: -3.2880477905273438
    3. ' ' → logprob: -12.288047790527344
    4. '   ' → logprob: -14.163047790527344
    5. '	H' → logprob: -14.788047790527344
    6. ' ' → logprob: -15.163047790527344
    7. '  ' → logprob: -15.788047790527344
    8. '<H' → logprob: -16.413047790527344
    9. '    ' → logprob: -17.163047790527344
    10. 'l' → logprob: -17.288047790527344

Token 388: ''' (ID: 6)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.054991964250802994
    2. ' H' → logprob: -3.1799919605255127
    3. '[i' → logprob: -4.554992198944092
    4. ' précédent' → logprob: -7.679992198944092
    5. '   ' → logprob: -8.554991722106934
    6. '[' → logprob: -8.804991722106934
    7. ']' → logprob: -8.929991722106934
    8. 'i' → logprob: -9.179991722106934
    9. '#' → logprob: -9.429991722106934
    10. ')' → logprob: -9.554991722106934

Token 389: 'élé' (ID: 15228)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.009780880063772202
    2. ' H' → logprob: -4.6347808837890625
    3. '   ' → logprob: -11.634780883789062
    4. ' ' → logprob: -11.884780883789062
    5. 'i' → logprob: -12.884780883789062
    6. '  ' → logprob: -13.134780883789062
    7. '     ' → logprob: -14.509780883789062
    8. ')' → logprob: -14.509780883789062
    9. '0' → logprob: -14.759780883789062
    10. '1' → logprob: -15.009780883789062

Token 390: 'ment' (ID: 508)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.08005665242671967
    2. '[i' → logprob: -3.080056667327881
    3. '[' → logprob: -4.955056667327881
    4. ' précédent' → logprob: -4.955056667327881
    5. '[next' → logprob: -5.830056667327881
    6. 'i' → logprob: -6.205056667327881
    7. 's' → logprob: -6.330056667327881
    8. ']' → logprob: -6.330056667327881
    9. '#' → logprob: -6.580056667327881
    10. ' H' → logprob: -6.955056667327881

Token 391: ' courant' (ID: 74694)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.24337494373321533
    2. ' H' → logprob: -2.118374824523926
    3. '   ' → logprob: -2.743374824523926
    4. '[i' → logprob: -4.493374824523926
    5. ' précédent' → logprob: -4.743374824523926
    6. '+' → logprob: -5.243374824523926
    7. '       ' → logprob: -6.368374824523926
    8. ' ' → logprob: -6.743374824523926
    9. '  ' → logprob: -7.368374824523926
    10. '    ' → logprob: -7.743374824523926

Token 392: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.504252016544342
    2. 'and' → logprob: -1.1292519569396973
    3. '>' → logprob: -2.7542519569396973
    4. '+' → logprob: -5.379251956939697
    5. '<' → logprob: -6.254251956939697
    6. '       ' → logprob: -7.004251956939697
    7. 'H' → logprob: -8.004252433776855
    8. '0' → logprob: -8.254252433776855
    9. ' H' → logprob: -8.379252433776855
    10. '        ' → logprob: -8.879252433776855

Token 393: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10779818147420883
    2. ' if' → logprob: -2.4827980995178223
    3. '       ' → logprob: -3.9827980995178223
    4. '   ' → logprob: -10.48279857635498
    5. '           ' → logprob: -11.98279857635498
    6. ' ' → logprob: -12.23279857635498
    7. '      ' → logprob: -12.73279857635498
    8. '>' → logprob: -13.73279857635498
    9. '  ' → logprob: -13.98279857635498
    10. '        ' → logprob: -14.23279857635498

Token 394: ' condition' (ID: 7060)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.20162217319011688
    2. ' H' → logprob: -1.7016221284866333
    3. ' ' → logprob: -9.701622009277344
    4. '   ' → logprob: -10.076622009277344
    5. ' not' → logprob: -10.451622009277344
    6. '  ' → logprob: -10.701622009277344
    7. '>' → logprob: -11.701622009277344
    8. '#' → logprob: -11.701622009277344
    9. 'not' → logprob: -12.201622009277344
    10. '    ' → logprob: -12.326622009277344

Token 395: ' n' (ID: 297)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3628923892974854
    2. 'H' → logprob: -1.3628923892974854
    3. ' H' → logprob: -1.7378923892974854
    4. '<' → logprob: -1.8628923892974854
    5. ' <' → logprob: -3.1128923892974854
    6. ' and' → logprob: -3.6128923892974854
    7. '   ' → logprob: -3.6128923892974854
    8. ' >' → logprob: -3.8628923892974854
    9. ' ' → logprob: -5.112892150878906
    10. '<H' → logprob: -5.237892150878906

Token 396: ''est' (ID: 6616)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5258117914199829
    2. ' not' → logprob: -1.525811791419983
    3. ' H' → logprob: -3.0258116722106934
    4. '   ' → logprob: -3.0258116722106934
    5. ' >' → logprob: -3.7758116722106934
    6. 'not' → logprob: -4.275811672210693
    7. 'i' → logprob: -4.400811672210693
    8. 'H' → logprob: -4.900811672210693
    9. '  ' → logprob: -5.650811672210693
    10. '<' → logprob: -5.775811672210693

Token 397: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.35785332322120667
    2. ' not' → logprob: -1.6078532934188843
    3. 'not' → logprob: -2.857853412628174
    4. 'pas' → logprob: -3.232853412628174
    5. ' False' → logprob: -6.482853412628174
    6. 'False' → logprob: -6.482853412628174
    7. ' True' → logprob: -8.482852935791016
    8. ' respect' → logprob: -9.107852935791016
    9. 'True' → logprob: -9.982852935791016
    10. ' violated' → logprob: -10.232852935791016

Token 398: ' respect' (ID: 5618)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.38623690605163574
    2. ' True' → logprob: -1.3862369060516357
    3. 'False' → logprob: -3.2612369060516357
    4. 'respect' → logprob: -4.136237144470215
    5. ' respect' → logprob: -5.886237144470215
    6. 'v' → logprob: -5.886237144470215
    7. ' False' → logprob: -6.261237144470215
    8. ' met' → logprob: -6.511237144470215
    9. 'met' → logprob: -6.636237144470215
    10. 'pas' → logprob: -6.761237144470215

Token 399: 'ée' (ID: 2894)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2203255295753479
    2. '       ' → logprob: -2.470325469970703
    3. 'if' → logprob: -2.595325469970703
    4. '          ' → logprob: -4.845325469970703
    5. '   ' → logprob: -5.095325469970703
    6. '        ' → logprob: -5.220325469970703
    7. ' H' → logprob: -5.595325469970703
    8. 'é' → logprob: -5.845325469970703
    9. ' if' → logprob: -6.095325469970703
    10. '         ' → logprob: -6.345325469970703

Token 400: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007058711722493172
    2. 'if' → logprob: -5.632058620452881
    3. ' if' → logprob: -5.757058620452881
    4. '   ' → logprob: -8.632059097290039
    5. ' and' → logprob: -10.007059097290039
    6. '           ' → logprob: -11.257059097290039
    7. 'and' → logprob: -11.382059097290039
    8. ' ' → logprob: -11.632059097290039
    9. '      ' → logprob: -11.632059097290039
    10. '>' → logprob: -12.507059097290039

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002275150502100587
    2. ' if' → logprob: -6.752274990081787
    3. 'if' → logprob: -7.502274990081787
    4. '   ' → logprob: -7.627274990081787
    5. '<|end|>' → logprob: -10.377275466918945
    6. ' ' → logprob: -11.377275466918945
    7. '	   ' → logprob: -12.377275466918945
    8. '	if' → logprob: -12.502275466918945
    9. '```' → logprob: -12.877275466918945
    10. '	' → logprob: -13.002275466918945

Token 402: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.023599375039339066
    2. '       ' → logprob: -4.148599147796631
    3. ' if' → logprob: -4.898599147796631
    4. '   ' → logprob: -9.523599624633789
    5. 'If' → logprob: -12.773599624633789
    6. '	if' → logprob: -13.273599624633789
    7. ' ' → logprob: -14.023599624633789
    8. '           ' → logprob: -15.273599624633789
    9. '```' → logprob: -15.773599624633789
    10. '>' → logprob: -16.02359962463379

Token 403: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.000825825787615031
    2. ' H' → logprob: -7.125825881958008
    3. '   ' → logprob: -10.875825881958008
    4. ' ' → logprob: -13.750825881958008
    5. '	H' → logprob: -15.000825881958008
    6. '    ' → logprob: -15.250825881958008
    7. '  ' → logprob: -15.250825881958008
    8. '       ' → logprob: -15.375825881958008
    9. ' ' → logprob: -16.625825881958008
    10. '     ' → logprob: -16.750825881958008

Token 404: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3915141355246305e-05
    2. '[' → logprob: -10.75002384185791
    3. ' [' → logprob: -13.12502384185791
    4. '   ' → logprob: -15.87502384185791
    5. 'i' → logprob: -16.000024795532227
    6. ']' → logprob: -17.000024795532227
    7. '[I' → logprob: -17.000024795532227
    8. '[j' → logprob: -17.625024795532227
    9. ' ' → logprob: -17.750024795532227
    10. '(i' → logprob: -18.500024795532227

Token 405: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3310631513595581
    2. ']' → logprob: -1.331063151359558
    3. ' -' → logprob: -4.081063270568848
    4. ']>' → logprob: -7.706063270568848
    5. '1' → logprob: -9.081063270568848
    6. '   ' → logprob: -9.831063270568848
    7. '>' → logprob: -9.831063270568848
    8. ' ]' → logprob: -10.081063270568848
    9. '−' → logprob: -11.081063270568848
    10. ' ' → logprob: -11.831063270568848

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.000231742858887
    4. ']' → logprob: -15.750231742858887
    5. '```' → logprob: -16.31273078918457
    6. '0' → logprob: -17.37523078918457
    7. '  ' → logprob: -17.37523078918457
    8. 'i' → logprob: -17.62523078918457
    9. '１' → logprob: -17.81273078918457
    10. '`' → logprob: -18.00023078918457

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6312321753939614e-05
    2. ' ' → logprob: -10.250036239624023
    3. ']' → logprob: -14.750036239624023
    4. '0' → logprob: -15.250036239624023
    5. '   ' → logprob: -15.625036239624023
    6. '```' → logprob: -16.562536239624023
    7. 'i' → logprob: -17.875036239624023
    8. '
' → logprob: -17.875036239624023
    9. '	' → logprob: -18.062536239624023
    10. '-' → logprob: -18.125036239624023

Token 408: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.714689314365387
    2. '>' → logprob: -0.714689314365387
    3. ' <' → logprob: -4.214689254760742
    4. ']' → logprob: -5.714689254760742
    5. ' >' → logprob: -5.839689254760742
    6. ' ' → logprob: -8.714689254760742
    7. ']<' → logprob: -9.464689254760742
    8. ']>' → logprob: -10.214689254760742
    9. '   ' → logprob: -11.464689254760742
    10. '<=' → logprob: -11.589689254760742

Token 409: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6369912624359131
    2. '>' → logprob: -1.011991262435913
    3. ' <' → logprob: -2.636991262435913
    4. ' >' → logprob: -3.386991262435913
    5. '<=' → logprob: -6.386991500854492
    6. ' <=' → logprob: -7.636991500854492
    7. ' ' → logprob: -9.886991500854492
    8. '<
' → logprob: -13.136991500854492
    9. '   ' → logprob: -13.386991500854492
    10. '><' → logprob: -13.511991500854492

Token 410: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.018151583150029182
    2. ' H' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.51815128326416
    4. '   ' → logprob: -15.14315128326416
    5. '  ' → logprob: -17.268152236938477
    6. '	H' → logprob: -18.018152236938477
    7. ' ' → logprob: -18.393152236938477
    8. '0' → logprob: -18.768152236938477
    9. 'h' → logprob: -19.393152236938477
    10. '```' → logprob: -19.393152236938477

Token 411: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -11.125021934509277
    3. ' [' → logprob: -12.875021934509277
    4. 'i' → logprob: -13.000021934509277
    5. ']' → logprob: -14.375021934509277
    6. 'H' → logprob: -14.750021934509277
    7. '(i' → logprob: -14.875021934509277
    8. '   ' → logprob: -15.000021934509277
    9. ' i' → logprob: -15.875021934509277
    10. '```' → logprob: -15.875021934509277

Token 412: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31418827176094055
    2. ']:' → logprob: -1.6891882419586182
    3. '):
' → logprob: -2.814188241958618
    4. ':' → logprob: -4.189188480377197
    5. ']:
' → logprob: -4.939188480377197
    6. ':
' → logprob: -7.189188480377197
    7. '       ' → logprob: -7.439188480377197
    8. ']):' → logprob: -7.814188480377197
    9. ' ):' → logprob: -8.439188003540039
    10. '+' → logprob: -8.439188003540039

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003213960910215974
    2. '       ' → logprob: -6.628213882446289
    3. ' no' → logprob: -7.128213882446289
    4. 'no' → logprob: -7.253213882446289
    5. '1' → logprob: -9.378213882446289
    6. '```' → logprob: -9.878213882446289
    7. 'print' → logprob: -10.253213882446289
    8. '	       ' → logprob: -10.253213882446289
    9. '               ' → logprob: -10.253213882446289
    10. '0' → logprob: -10.753213882446289

Token 414: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25903376936912537
    2. 'no' → logprob: -1.6340337991714478
    3. ' no' → logprob: -4.259033679962158
    4. '       ' → logprob: -4.509033679962158
    5. '               ' → logprob: -5.134033679962158
    6. '   ' → logprob: -6.884033679962158
    7. 'print' → logprob: -7.259033679962158
    8. '	no' → logprob: -8.509034156799316
    9. '```' → logprob: -11.259034156799316
    10. '	       ' → logprob: -11.509034156799316

Token 415: ' On' (ID: 2160)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.04032902792096138
    2. '           ' → logprob: -3.2903289794921875
    3. ' no' → logprob: -6.9153289794921875
    4. '               ' → logprob: -7.4153289794921875
    5. 'print' → logprob: -7.6653289794921875
    6. '   ' → logprob: -9.540328979492188
    7. '	no' → logprob: -9.540328979492188
    8. '       ' → logprob: -10.290328979492188
    9. '```' → logprob: -10.540328979492188
    10. '
' → logprob: -12.040328979492188

Token 416: ' place' (ID: 2475)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.020089473575353622
    2. ' no' → logprob: -4.145089626312256
    3. 'print' → logprob: -6.270089626312256
    4. '           ' → logprob: -6.520089626312256
    5. '=no' → logprob: -8.395089149475098
    6. '```' → logprob: -9.020089149475098
    7. 'flag' → logprob: -9.895089149475098
    8. '   ' → logprob: -9.895089149475098
    9. '	no' → logprob: -10.145089149475098
    10. '=' → logprob: -10.270089149475098

Token 417: ' le' (ID: 505)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.6877164244651794
    2. '1' → logprob: -0.8127164244651794
    3. ' no' → logprob: -2.937716484069824
    4. '           ' → logprob: -7.687716484069824
    5. ' ' → logprob: -8.937716484069824
    6. '   ' → logprob: -10.812716484069824
    7. '=' → logprob: -11.812716484069824
    8. '	no' → logprob: -12.437716484069824
    9. ' =' → logprob: -12.937716484069824
    10. '       ' → logprob: -12.937716484069824

Token 418: ' dr' (ID: 1498)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.22599980235099792
    2. '1' → logprob: -1.6009998321533203
    3. ' no' → logprob: -7.47599983215332
    4. ' ' → logprob: -11.72599983215332
    5. 'flag' → logprob: -12.35099983215332
    6. 'non' → logprob: -13.35099983215332
    7. '   ' → logprob: -13.72599983215332
    8. '	no' → logprob: -13.97599983215332
    9. 'yes' → logprob: -14.22599983215332
    10. '```' → logprob: -14.97599983215332

Token 419: 'apeau' (ID: 140059)
  Prédit: 'apeau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apeau' → logprob: -0.594731867313385
    2. 'ag' → logprob: -1.2197318077087402
    3. 'flag' → logprob: -2.3447318077087402
    4. 'a' → logprob: -3.4697318077087402
    5. '_flag' → logprob: -5.21973180770874
    6. 'o' → logprob: -5.71973180770874
    7. 'agger' → logprob: -5.84473180770874
    8. 'ago' → logprob: -5.96973180770874
    9. 'agle' → logprob: -6.21973180770874
    10. 'ague' → logprob: -6.34473180770874

Token 420: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003384341485798359
    2. ' =' → logprob: -5.753384113311768
    3. '           ' → logprob: -9.253384590148926
    4. '+=' → logprob: -9.503384590148926
    5. 'no' → logprob: -11.128384590148926
    6. '1' → logprob: -11.128384590148926
    7. '=no' → logprob: -12.753384590148926
    8. ' +=' → logprob: -13.628384590148926
    9. '               ' → logprob: -14.378384590148926
    10. '(no' → logprob: -15.003384590148926

Token 421: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.490809417096898e-05
    2. ' ' → logprob: -9.875055313110352
    3. 'no' → logprob: -12.875055313110352
    4. '   ' → logprob: -14.625055313110352
    5. ' no' → logprob: -16.62505531311035
    6. '
' → logprob: -17.25005531311035
    7. '  ' → logprob: -17.75005531311035
    8. '0' → logprob: -17.75005531311035
    9. ' ' → logprob: -18.00005531311035
    10. '-' → logprob: -18.37505531311035

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. 'no' → logprob: -11.125018119812012
    3. ' ' → logprob: -12.875018119812012
    4. '0' → logprob: -16.750017166137695
    5. '   ' → logprob: -17.000017166137695
    6. ' no' → logprob: -18.750017166137695
    7. '
' → logprob: -19.000017166137695
    8. '```' → logprob: -19.375017166137695
    9. '  ' → logprob: -19.750017166137695
    10. 'true' → logprob: -20.000017166137695

Token 423: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008288058452308178
    2. '=' → logprob: -8.125828742980957
    3. ' =' → logprob: -8.500828742980957
    4. '            
' → logprob: -9.250828742980957
    5. '
' → logprob: -9.875828742980957
    6. ',' → logprob: -10.000828742980957
    7. '               ' → logprob: -10.625828742980957
    8. '       ' → logprob: -10.625828742980957
    9. 'no' → logprob: -10.750828742980957
    10. '          ' → logprob: -11.000828742980957

Token 424: ' signal' (ID: 12884)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.009803077206015587
    2. '1' → logprob: -4.759803295135498
    3. ' no' → logprob: -6.759803295135498
    4. '           ' → logprob: -10.88480281829834
    5. ' ' → logprob: -11.88480281829834
    6. '
' → logprob: -14.38480281829834
    7. '   ' → logprob: -14.50980281829834
    8. '	no' → logprob: -14.63480281829834
    9. '       ' → logprob: -14.75980281829834
    10. '         ' → logprob: -16.009803771972656

Token 425: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.7133641196996905e-05
    2. 'aler' → logprob: -11.37502670288086
    3. '   ' → logprob: -11.75002670288086
    4. 'iser' → logprob: -13.12502670288086
    5. ' er' → logprob: -13.62502670288086
    6. '           ' → logprob: -14.25002670288086
    7. '       ' → logprob: -14.50002670288086
    8. 'e' → logprob: -14.62502670288086
    9. 'r' → logprob: -14.87502670288086
    10. ' ' → logprob: -15.00002670288086

Token 426: ' une' (ID: 2463)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.5121391415596008
    2. ' no' → logprob: -1.012139081954956
    3. '1' → logprob: -3.387139081954956
    4. ' ' → logprob: -5.762139320373535
    5. 'le' → logprob: -8.512139320373535
    6. ' le' → logprob: -9.512139320373535
    7. '	no' → logprob: -10.387139320373535
    8. '   ' → logprob: -10.762139320373535
    9. 'la' → logprob: -11.012139320373535
    10. 'l' → logprob: -11.137139320373535

Token 427: ' anomal' (ID: 91685)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.11262165009975433
    2. ' violation' → logprob: -3.487621545791626
    3. 'break' → logprob: -3.987621545791626
    4. 'er' → logprob: -4.362621784210205
    5. 'vi' → logprob: -4.612621784210205
    6. 'flag' → logprob: -4.737621784210205
    7. 'rupt' → logprob: -5.487621784210205
    8. ' erreur' → logprob: -5.612621784210205
    9. 'in' → logprob: -6.362621784210205
    10. ' an' → logprob: -6.862621784210205

Token 428: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.3901529610157013
    2. 'e' → logprob: -1.140152931213379
    3. 'é' → logprob: -6.515152931213379
    4. 'er' → logprob: -7.890152931213379
    5. 'ise' → logprob: -8.265152931213379
    6. 'i' → logprob: -8.390152931213379
    7. 'ée' → logprob: -8.390152931213379
    8. 'ate' → logprob: -9.015152931213379
    9. 'is' → logprob: -9.390152931213379
    10. 'flag' → logprob: -9.515152931213379

Token 429: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010366239439463243
    2. '            
' → logprob: -10.750103950500488
    3. ' =' → logprob: -11.125103950500488
    4. '               ' → logprob: -11.500103950500488
    5. '=' → logprob: -11.750103950500488
    6. 'no' → logprob: -11.875103950500488
    7. ' no' → logprob: -12.000103950500488
    8. '
' → logprob: -12.000103950500488
    9. ',' → logprob: -12.125103950500488
    10. '1' → logprob: -12.125103950500488

Token 430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041625293670222163
    2. ' no' → logprob: -9.000415802001953
    3. 'no' → logprob: -9.375415802001953
    4. '            
' → logprob: -9.750415802001953
    5. '```' → logprob: -9.750415802001953
    6. '               ' → logprob: -10.125415802001953
    7. '
' → logprob: -10.875415802001953
    8. '       ' → logprob: -11.500415802001953
    9. ' ' → logprob: -12.500415802001953
    10. '1' → logprob: -13.125415802001953

Token 431: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' (adapté à ' no') → logprob: -0.00017684244085103273
    2. ' no' → logprob: -9.250176429748535
    3. '           ' → logprob: -10.000176429748535
    4. '   ' → logprob: -10.750176429748535
    5. '1' → logprob: -11.250176429748535
    6. '	no' → logprob: -14.750176429748535
    7. '       ' → logprob: -15.000176429748535
    8. '               ' → logprob: -16.25017738342285
    9. ' ' → logprob: -18.25017738342285
    10. '```' → logprob: -18.50017738342285

Token 432: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -1.5690089639974758e-05
    2. '_' → logprob: -11.250015258789062
    3. '_f' → logprob: -13.375015258789062
    4. '_flags' → logprob: -15.000015258789062
    5. 'flag' → logprob: -15.000015258789062
    6. '_FLAG' → logprob: -15.375015258789062
    7. ' _' → logprob: -15.875015258789062
    8. '_fl' → logprob: -17.500015258789062
    9. 'Flag' → logprob: -18.000015258789062
    10. '\' → logprob: -18.750015258789062

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061975300312042236
    2. ' =' → logprob: -2.8119752407073975
    3. '+=' → logprob: -12.186975479125977
    4. ' +=' → logprob: -12.936975479125977
    5. '<|end|>' → logprob: -17.686975479125977
    6. '=True' → logprob: -17.811975479125977
    7. ' ' → logprob: -17.936975479125977
    8. '+' → logprob: -18.061975479125977
    9. ' |=' → logprob: -18.561975479125977
    10. '＝' → logprob: -18.686975479125977

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.875045776367188
    4. '0' → logprob: -19.000045776367188
    5. '  ' → logprob: -21.000045776367188
    6. '۱' → logprob: -21.250045776367188
    7. '```' → logprob: -21.375045776367188
    8. '<|end|>' → logprob: -21.500045776367188
    9. '2' → logprob: -21.937545776367188
    10. '１' → logprob: -22.125045776367188

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '0' → logprob: -18.75
    4. '2' → logprob: -21.0
    5. '   ' → logprob: -21.5
    6. '۱' → logprob: -22.25
    7. '１' → logprob: -22.625
    8. '```' → logprob: -22.8125
    9. '' → logprob: -23.25
    10. '3' → logprob: -23.375

Token 436: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.856408536899835e-05
    2. '<|end|>' → logprob: -11.125028610229492
    3. '       ' → logprob: -12.625028610229492
    4. '               ' → logprob: -13.000028610229492
    5. '          ' → logprob: -13.125028610229492
    6. '		' → logprob: -13.750028610229492
    7. '            
' → logprob: -13.875028610229492
    8. ',' → logprob: -14.000028610229492
    9. '   ' → logprob: -14.125028610229492
    10. '
' → logprob: -14.375028610229492

Token 437: '   ' (ID: 271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4021237802808173e-05
    2. '       ' → logprob: -12.125014305114746
    3. '   ' → logprob: -12.500014305114746
    4. '		' → logprob: -13.375014305114746
    5. '          ' → logprob: -13.750014305114746
    6. '               ' → logprob: -14.250014305114746
    7. '```' → logprob: -14.750014305114746
    8. '<|end|>' → logprob: -15.125014305114746
    9. '	       ' → logprob: -15.500014305114746
    10. ' ' → logprob: -15.875014305114746

Token 438: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02839224971830845
    2. 'print' → logprob: -4.278392314910889
    3. '   ' → logprob: -4.653392314910889
    4. ' if' → logprob: -5.903392314910889
    5. '```' → logprob: -6.528392314910889
    6. 'break' → logprob: -7.903392314910889
    7. '#' (adapté à ' #') → logprob: -11.40339183807373
    8. ' print' → logprob: -12.52839183807373
    9. ')' → logprob: -12.52839183807373
    10. '<|end|>' → logprob: -12.65339183807373

Token 439: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008617054671049118
    2. 'print' → logprob: -4.758616924285889
    3. ' if' → logprob: -12.883617401123047
    4. '#' → logprob: -17.883617401123047
    5. '   ' → logprob: -19.133617401123047
    6. '```' → logprob: -19.383617401123047
    7. ' print' → logprob: -19.508617401123047
    8. 'If' → logprob: -21.008617401123047
    9. '#print' → logprob: -21.383617401123047
    10. '
' → logprob: -21.383617401123047

Token 440: ' avoir' (ID: 16595)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20479777455329895
    2. ' if' → logprob: -2.4547977447509766
    3. 'print' → logprob: -2.5797977447509766
    4. ' la' → logprob: -5.329797744750977
    5. '   ' → logprob: -5.454797744750977
    6. 'no' → logprob: -5.954797744750977
    7. 'not' → logprob: -5.954797744750977
    8. 'la' → logprob: -6.579797744750977
    9. ' print' → logprob: -6.579797744750977
    10. '#' → logprob: -6.829797744750977

Token 441: ' parcour' (ID: 130642)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06572625786066055
    2. 'print' → logprob: -2.8157262802124023
    3. ' if' → logprob: -5.815726280212402
    4. 'for' → logprob: -8.440726280212402
    5. ' print' → logprob: -9.065726280212402
    6. 'v' → logprob: -9.190726280212402
    7. 'la' → logprob: -9.440726280212402
    8. '#' → logprob: -9.565726280212402
    9. 'no' → logprob: -9.815726280212402
    10. 'not' → logprob: -10.815726280212402

Token 442: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -8.41866585687967e-06
    2. '   ' → logprob: -12.625008583068848
    3. 'i' → logprob: -12.875008583068848
    4. 'ru' → logprob: -14.250008583068848
    5. 'tu' → logprob: -15.500008583068848
    6. 'çu' → logprob: -15.500008583068848
    7. 'é' → logprob: -15.750008583068848
    8. '#' → logprob: -16.12500762939453
    9. 'cu' → logprob: -16.12500762939453
    10. '       ' → logprob: -16.12500762939453

Token 443: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4846823215484619
    2. 'la' → logprob: -1.859682321548462
    3. 'le' → logprob: -2.859682321548462
    4. ' le' → logprob: -2.859682321548462
    5. 'if' → logprob: -3.734682321548462
    6. 'H' → logprob: -3.984682321548462
    7. 'range' → logprob: -4.234682083129883
    8. ' the' → logprob: -4.359682083129883
    9. ' H' → logprob: -4.484682083129883
    10. '   ' → logprob: -5.109682083129883

Token 444: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.22145883738994598
    2. 'bou' → logprob: -1.8464587926864624
    3. 'for' → logprob: -4.096458911895752
    4. ' boucle' → logprob: -4.221458911895752
    5. 'sequence' → logprob: -5.846458911895752
    6. 'range' → logprob: -6.096458911895752
    7. 'sé' → logprob: -6.721458911895752
    8. ' liste' → logprob: -6.846458911895752
    9. 'list' → logprob: -7.846458911895752
    10. 'code' → logprob: -8.096458435058594

Token 445: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04873236268758774
    2. '   ' → logprob: -3.173732280731201
    3. ' if' → logprob: -5.423732280731201
    4. '
' → logprob: -7.048732280731201
    5. 'print' → logprob: -8.29873275756836
    6. '    
' → logprob: -9.17373275756836
    7. '#' → logprob: -10.04873275756836
    8. ',' → logprob: -10.42373275756836
    9. '  
' → logprob: -12.54873275756836
    10. ' 
' → logprob: -13.54873275756836

Token 446: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01110135205090046
    2. ' if' → logprob: -4.511101245880127
    3. '   ' → logprob: -9.886101722717285
    4. 'print' → logprob: -13.011101722717285
    5. '#' → logprob: -14.886101722717285
    6. '```' → logprob: -17.63610076904297
    7. ' print' → logprob: -18.38610076904297
    8. '	if' → logprob: -19.01110076904297
    9. '
' → logprob: -19.63610076904297
    10. '    
' → logprob: -20.13610076904297

Token 447: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13500109314918518
    2. 'print' → logprob: -2.2600011825561523
    3. ' if' → logprob: -4.010001182556152
    4. '#' → logprob: -6.260001182556152
    5. ' print' → logprob: -6.760001182556152
    6. '   ' → logprob: -7.260001182556152
    7. ' #' → logprob: -11.135001182556152
    8. '#print' → logprob: -12.260001182556152
    9. '    
' → logprob: -12.385001182556152
    10. '    ' → logprob: -14.385001182556152

Token 448: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0007275633979588747
    2. 'ifié' → logprob: -7.875727653503418
    3. 'if' → logprob: -8.000727653503418
    4. 'ife' → logprob: -12.375727653503418
    5. 'ifi' → logprob: -12.500727653503418
    6. 'ify' → logprob: -13.625727653503418
    7. 'ified' → logprob: -14.250727653503418
    8. '#' → logprob: -14.375727653503418
    9. 'ifiez' → logprob: -14.750727653503418
    10. 'ifies' → logprob: -15.000727653503418

Token 449: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014982117339968681
    2. ' if' → logprob: -4.639982223510742
    3. 'if' → logprob: -6.139982223510742
    4. ' no' → logprob: -6.389982223510742
    5. '(no' → logprob: -7.639982223510742
    6. '  ' → logprob: -7.764982223510742
    7. 'no' → logprob: -8.889982223510742
    8. ' la' → logprob: -9.389982223510742
    9. ' ' → logprob: -9.764982223510742
    10. ' le' → logprob: -10.014982223510742

Token 450: ' valeur' (ID: 41664)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.425935834646225
    2. ' condition' → logprob: -1.9259358644485474
    3. 'flag' → logprob: -2.175935745239258
    4. 'no' → logprob: -2.800935745239258
    5. 'val' → logprob: -4.550935745239258
    6. ' valeur' → logprob: -5.425935745239258
    7. ' no' → logprob: -5.550935745239258
    8. ' flag' → logprob: -6.425935745239258
    9. 'if' → logprob: -6.675935745239258
    10. ' ' → logprob: -6.925935745239258

Token 451: ' du' (ID: 1462)
  Prédit: 'du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'du' → logprob: -0.7072442173957825
    2. '   ' → logprob: -1.4572441577911377
    3. 'if' → logprob: -1.5822441577911377
    4. ' if' → logprob: -3.4572441577911377
    5. ' du' → logprob: -3.5822441577911377
    6. 'de' → logprob: -5.207244396209717
    7. ' de' → logprob: -5.832244396209717
    8. 'final' → logprob: -8.457243919372559
    9. '  ' → logprob: -8.707243919372559
    10. ' ' → logprob: -8.707243919372559

Token 452: ' dr' (ID: 1498)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0014316666638478637
    2. ' no' → logprob: -6.626431465148926
    3. 'd' → logprob: -9.626431465148926
    4. 'dr' → logprob: -10.251431465148926
    5. 'flag' → logprob: -12.751431465148926
    6. ' dr' → logprob: -13.501431465148926
    7. '	no' → logprob: -16.501432418823242
    8. '_no' → logprob: -16.626432418823242
    9. '_flag' → logprob: -17.126432418823242
    10. 'Flag' → logprob: -17.501432418823242

Token 453: 'apeau' (ID: 140059)
  Prédit: 'apeau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apeau' → logprob: -0.012414287775754929
    2. 'ap' → logprob: -5.637414455413818
    3. 'flag' → logprob: -5.637414455413818
    4. 'ag' → logprob: -6.262414455413818
    5. 'ague' → logprob: -6.512414455413818
    6. 'agle' → logprob: -7.762414455413818
    7. '_flag' → logprob: -8.01241397857666
    8. 'o' → logprob: -8.76241397857666
    9. 'a' → logprob: -8.88741397857666
    10. 'af' → logprob: -9.13741397857666

Token 454: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003974985331296921
    2. ' if' → logprob: -6.003974914550781
    3. '   ' → logprob: -6.503974914550781
    4. 'print' → logprob: -14.378974914550781
    5. '```' → logprob: -16.62897491455078
    6. '	if' → logprob: -18.12897491455078
    7. '    
' → logprob: -18.25397491455078
    8. ';if' → logprob: -18.50397491455078
    9. 'If' → logprob: -18.75397491455078
    10. '
' → logprob: -19.25397491455078

Token 455: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024716483429074287
    2. '   ' → logprob: -3.774716377258301
    3. ' if' → logprob: -6.524716377258301
    4. 'print' → logprob: -13.0247163772583
    5. '```' → logprob: -15.0247163772583
    6. '    
' → logprob: -16.024717330932617
    7. 'If' → logprob: -16.149717330932617
    8. '[' → logprob: -16.274717330932617
    9. '	if' → logprob: -16.274717330932617
    10. ';if' → logprob: -17.024717330932617

Token 456: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003328853053972125
    2. 'print' → logprob: -5.753328800201416
    3. '   ' → logprob: -9.003329277038574
    4. ' if' → logprob: -10.503329277038574
    5. '```' → logprob: -14.378329277038574
    6. ' print' → logprob: -16.503328323364258
    7. '	if' → logprob: -20.503328323364258
    8. 'If' → logprob: -21.003328323364258
    9. '``' → logprob: -21.128328323364258
    10. '#' → logprob: -21.378328323364258

Token 457: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.006715967319905758
    2. 'no' → logprob: -5.006715774536133
    3. ' not' → logprob: -15.256715774536133
    4. '	no' → logprob: -15.506715774536133
    5. '(no' → logprob: -16.256715774536133
    6. ' ' → logprob: -16.881715774536133
    7. '   ' → logprob: -16.881715774536133
    8. ' ' → logprob: -17.506715774536133
    9. 'not' → logprob: -17.756715774536133
    10. 'n' → logprob: -18.131715774536133

Token 458: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.0001354824344161898
    2. '_' → logprob: -9.37513542175293
    3. '==' → logprob: -10.50013542175293
    4. ' _' → logprob: -11.37513542175293
    5. 'flag' → logprob: -12.25013542175293
    6. ' ==' → logprob: -12.37513542175293
    7. '_FLAG' → logprob: -13.62513542175293
    8. '_flags' → logprob: -14.50013542175293
    9. 'Flag' → logprob: -14.87513542175293
    10. ' flag' → logprob: -16.00013542175293

Token 459: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20141635835170746
    2. '==' → logprob: -1.7014163732528687
    3. '=' → logprob: -13.576416015625
    4. ' ' → logprob: -14.576416015625
    5. ')==' → logprob: -15.076416015625
    6. ')' → logprob: -15.076416015625
    7. ' =' → logprob: -15.451416015625
    8. ' ' → logprob: -15.826416015625
    9. '==
' → logprob: -15.826416015625
    10. '<|end|>' → logprob: -16.201416015625

Token 460: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023056005593389273
    2. '1' → logprob: -6.502305507659912
    3. ' ' → logprob: -7.127305507659912
    4. '=' → logprob: -17.25230598449707
    5. '   ' → logprob: -17.50230598449707
    6. '	' → logprob: -17.75230598449707
    7. '۰' → logprob: -17.87730598449707
    8. ' ' → logprob: -19.18980598449707
    9. '```' → logprob: -19.43980598449707
    10. '０' → logprob: -19.87730598449707

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009821613319218159
    2. '1' → logprob: -4.63482141494751
    3. ' ' → logprob: -9.634821891784668
    4. '   ' → logprob: -17.00982093811035
    5. '=' → logprob: -17.44732093811035
    6. '```' → logprob: -17.44732093811035
    7. '	' → logprob: -18.00982093811035
    8. '۰' → logprob: -18.50982093811035
    9. '==' → logprob: -19.07232093811035
    10. ' ' → logprob: -19.07232093811035

Token 462: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07892581075429916
    2. ':
' → logprob: -2.578925848007202
    3. '   ' → logprob: -10.453926086425781
    4. '       ' → logprob: -12.703926086425781
    5. '):' → logprob: -13.828926086425781
    6. ' :' → logprob: -14.078926086425781
    7. '):
' → logprob: -14.078926086425781
    8. ':

' → logprob: -14.578926086425781
    9. ' :
' → logprob: -14.828926086425781
    10. 'print' → logprob: -14.953926086425781

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004673503804951906
    2. '   ' → logprob: -6.004673480987549
    3. ' print' → logprob: -6.754673480987549
    4. 'print' → logprob: -6.879673480987549
    5. '	print' → logprob: -13.629673957824707
    6. '           ' → logprob: -15.254673957824707
    7. '	   ' → logprob: -15.754673957824707
    8. '```' → logprob: -17.50467300415039
    9. '   ' → logprob: -18.25467300415039
    10. '.print' → logprob: -19.00467300415039

Token 464: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8049758076667786
    2. '   ' → logprob: -1.3049757480621338
    3. '       ' → logprob: -1.3049757480621338
    4. ' print' → logprob: -4.554975986480713
    5. '	print' → logprob: -10.554975509643555
    6. '           ' → logprob: -13.679975509643555
    7. ' ' → logprob: -15.179975509643555
    8. '   ' → logprob: -15.304975509643555
    9. '```' → logprob: -16.179975509643555
    10. '.print' → logprob: -16.179975509643555

Token 465: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00012725738633889705
    2. ' print' → logprob: -9.500126838684082
    3. '   ' → logprob: -9.875126838684082
    4. '       ' → logprob: -14.625126838684082
    5. '	print' → logprob: -14.750126838684082
    6. ' ' → logprob: -16.8751277923584
    7. 'Print' → logprob: -17.0001277923584
    8. '  ' → logprob: -17.7501277923584
    9. '           ' → logprob: -18.3751277923584
    10. 'Yes' → logprob: -19.1251277923584

Token 466: ' tout' (ID: 5501)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23027437925338745
    2. ' print' → logprob: -1.7302744388580322
    3. ' Yes' → logprob: -4.480274200439453
    4. ''' → logprob: -5.355274200439453
    5. 'Yes' → logprob: -5.355274200439453
    6. '('' → logprob: -5.480274200439453
    7. ' True' → logprob: -6.480274200439453
    8. '   ' → logprob: -6.855274200439453
    9. ' '' → logprob: -8.230274200439453
    10. 'True' → logprob: -8.355274200439453

Token 467: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3440527617931366
    2. ' print' → logprob: -1.594052791595459
    3. '   ' → logprob: -2.719052791595459
    4. '('' → logprob: -4.219052791595459
    5. ' ' → logprob: -6.219052791595459
    6. ''' → logprob: -6.719052791595459
    7. '  ' → logprob: -6.969052791595459
    8. ' s' → logprob: -7.219052791595459
    9. ' continue' → logprob: -7.844052791595459
    10. '    ' → logprob: -8.0940523147583

Token 468: ' bien' (ID: 5340)
  Prédit: 'bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bien' → logprob: -0.01862395368516445
    2. ' bien' → logprob: -4.2686238288879395
    3. 'Bien' → logprob: -5.6436238288879395
    4. '   ' → logprob: -7.3936238288879395
    5. ' ' → logprob: -9.018624305725098
    6. 'b' → logprob: -9.893624305725098
    7. 'well' → logprob: -10.643624305725098
    8. 'bi' → logprob: -10.643624305725098
    9. ''' → logprob: -11.018624305725098
    10. ' Bien' → logprob: -11.643624305725098

Token 469: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.447298526763916
    2. '           ' → logprob: -1.447298526763916
    3. 'print' → logprob: -2.572298526763916
    4. '   ' → logprob: -3.572298526763916
    5. ':' → logprob: -4.572298526763916
    6. ' print' → logprob: -4.947298526763916
    7. ':
' → logprob: -5.697298526763916
    8. '	print' → logprob: -9.947298049926758
    9. ',' → logprob: -10.322298049926758
    10. '     ' → logprob: -11.197298049926758

Token 470: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38588330149650574
    2. '       ' → logprob: -1.3858833312988281
    3. ' print' → logprob: -3.135883331298828
    4. '   ' → logprob: -3.635883331298828
    5. '           ' → logprob: -8.510883331298828
    6. '	print' → logprob: -10.885883331298828
    7. ' ' → logprob: -12.510883331298828
    8. '  ' → logprob: -14.760883331298828
    9. '     ' → logprob: -14.885883331298828
    10. '    ' → logprob: -15.260883331298828

Token 471: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23176813125610352
    2. ' print' → logprob: -1.6067681312561035
    3. '   ' → logprob: -5.1067681312561035
    4. '       ' → logprob: -8.731767654418945
    5. '	print' → logprob: -9.481767654418945
    6. ' imprime' → logprob: -11.481767654418945
    7. '           ' → logprob: -11.981767654418945
    8. '  ' → logprob: -12.356767654418945
    9. ' ' → logprob: -12.356767654418945
    10. '.print' → logprob: -12.481767654418945

Token 472: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1151384711265564
    2. ''' → logprob: -2.240138530731201
    3. 'Yes' → logprob: -6.365138530731201
    4. '("' → logprob: -8.115138053894043
    5. '"' → logprob: -8.490138053894043
    6. '(' → logprob: -9.865138053894043
    7. '   ' → logprob: -10.865138053894043
    8. '`' → logprob: -12.365138053894043
    9. ' Yes' → logprob: -12.365138053894043
    10. ' '' → logprob: -12.740138053894043

Token 473: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -7.896309739408025e-07
    2. ''' → logprob: -14.750000953674316
    3. 'Oui' → logprob: -15.125000953674316
    4. ' Yes' → logprob: -16.5
    5. 'YES' → logprob: -17.875
    6. 'Ye' → logprob: -19.5
    7. 'No' → logprob: -19.625
    8. 'True' → logprob: -20.375
    9. 'Yeah' → logprob: -20.5
    10. 'Yep' → logprob: -21.375

Token 474: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008389627560973167
    2. '')
' → logprob: -4.883389472961426
    3. ''' → logprob: -7.258389472961426
    4. ')' → logprob: -10.383389472961426
    5. '   ' → logprob: -10.633389472961426
    6. '')
' → logprob: -11.508389472961426
    7. '('' → logprob: -12.758389472961426
    8. 'print' → logprob: -12.758389472961426
    9. '")' → logprob: -12.883389472961426
    10. '');' → logprob: -14.008389472961426

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10395929217338562
    2. 'print' → logprob: -2.353959321975708
    3. '   ' → logprob: -5.728959083557129
    4. ' print' → logprob: -7.978959083557129
    5. '           ' → logprob: -8.853959083557129
    6. '	print' → logprob: -12.228959083557129
    7. '```' → logprob: -12.853959083557129
    8. '      ' → logprob: -14.728959083557129
    9. 'else' → logprob: -14.853959083557129
    10. '     ' → logprob: -14.853959083557129

Token 476: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00023655613767914474
    2. ' print' → logprob: -9.000236511230469
    3. '       ' → logprob: -9.250236511230469
    4. '   ' → logprob: -11.000236511230469
    5. '	print' → logprob: -15.250236511230469
    6. '           ' → logprob: -18.37523651123047
    7. 'Print' → logprob: -19.37523651123047
    8. '```' → logprob: -20.00023651123047
    9. '.print' → logprob: -20.25023651123047
    10. ' ' → logprob: -20.25023651123047

Token 477: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.001503313542343676
    2. '(' → logprob: -6.5015034675598145
    3. '("' → logprob: -14.126502990722656
    4. ' ('' → logprob: -16.501502990722656
    5. '()' → logprob: -16.876502990722656
    6. '(
' → logprob: -18.626502990722656
    7. '(('' → logprob: -18.626502990722656
    8. ''' → logprob: -18.751502990722656
    9. '(\'' → logprob: -18.876502990722656
    10. ' (' → logprob: -19.626502990722656

Token 478: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: 0.0
    2. 'No' → logprob: -18.375
    3. ''' → logprob: -20.0
    4. ' Yes' → logprob: -20.25
    5. 'YES' → logprob: -21.875
    6. '')' → logprob: -24.375
    7. 'Oui' → logprob: -24.625
    8. 'True' → logprob: -24.75
    9. 'Yeah' → logprob: -24.875
    10. 'yes' → logprob: -25.5

Token 479: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16029003262519836
    2. '')
' → logprob: -1.910290002822876
    3. ')' → logprob: -9.910289764404297
    4. '')
' → logprob: -11.535289764404297
    5. ')
' → logprob: -12.410289764404297
    6. ')')
' → logprob: -13.660289764404297
    7. '")' → logprob: -14.535289764404297
    8. '")
' → logprob: -16.035289764404297
    9. '')

' → logprob: -16.035289764404297
    10. ''' → logprob: -16.160289764404297

Token 480: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0008209457155317068
    2. '   ' → logprob: -7.250821113586426
    3. ' else' → logprob: -9.125821113586426
    4. 'elif' → logprob: -13.250821113586426
    5. '	else' → logprob: -15.000821113586426
    6. '```' → logprob: -16.00082015991211
    7. 'Else' → logprob: -18.62582015991211
    8. '}else' → logprob: -18.75082015991211
    9. '       ' → logprob: -19.25082015991211
    10. '#else' → logprob: -19.37582015991211

Token 481: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0006344011635519564
    2. '   ' → logprob: -7.75063419342041
    3. ' else' → logprob: -8.50063419342041
    4. '	else' → logprob: -15.87563419342041
    5. 'elif' → logprob: -16.250635147094727
    6. '```' → logprob: -17.875635147094727
    7. 'elser' → logprob: -20.375635147094727
    8. '_else' → logprob: -20.500635147094727
    9. '}else' → logprob: -20.625635147094727
    10. ' ' → logprob: -20.625635147094727

Token 482: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012511652894318104
    2. ':
' → logprob: -4.512511730194092
    3. '       ' → logprob: -6.637511730194092
    4. '   ' → logprob: -8.887511253356934
    5. ' :' → logprob: -12.262511253356934
    6. '{' → logprob: -13.012511253356934
    7. '    ' → logprob: -13.637511253356934
    8. 'print' → logprob: -13.762511253356934
    9. '     ' → logprob: -14.512511253356934
    10. ' :
' → logprob: -14.512511253356934

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06315958499908447
    2. 'print' → logprob: -2.813159465789795
    3. '   ' → logprob: -7.313159465789795
    4. ' print' → logprob: -7.563159465789795
    5. '	print' → logprob: -12.688159942626953
    6. '           ' → logprob: -14.063159942626953
    7. '```' → logprob: -14.438159942626953
    8. '    ' → logprob: -15.313159942626953
    9. '	' → logprob: -15.563159942626953
    10. '     ' → logprob: -15.688159942626953

Token 484: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023035754566080868
    2. ' print' → logprob: -8.75023078918457
    3. '   ' → logprob: -10.25023078918457
    4. '       ' → logprob: -10.25023078918457
    5. '	print' → logprob: -13.75023078918457
    6. '```' → logprob: -16.75023078918457
    7. '           ' → logprob: -17.25023078918457
    8. ' ' → logprob: -17.75023078918457
    9. '.print' → logprob: -19.37523078918457
    10. '    ' → logprob: -19.62523078918457

Token 485: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008932363707572222
    2. ' print' → logprob: -7.2508931159973145
    3. '       ' → logprob: -9.000893592834473
    4. '   ' → logprob: -9.750893592834473
    5. '	print' → logprob: -13.375893592834473
    6. ' ' → logprob: -17.250892639160156
    7. '           ' → logprob: -17.375892639160156
    8. '    ' → logprob: -17.750892639160156
    9. '.print' → logprob: -18.250892639160156
    10. 'Print' → logprob: -18.375892639160156

Token 486: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3802066445350647
    2. 'print' → logprob: -1.38020658493042
    3. ' print' → logprob: -2.88020658493042
    4. '   ' → logprob: -4.75520658493042
    5. '	print' → logprob: -11.505207061767578
    6. '           ' → logprob: -12.380207061767578
    7. '    ' → logprob: -13.005207061767578
    8. '```' → logprob: -13.255207061767578
    9. '.print' → logprob: -13.880207061767578
    10. '     ' → logprob: -13.880207061767578

Token 487: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3888320028781891
    2. ' print' → logprob: -1.1388319730758667
    3. '       ' → logprob: -6.263832092285156
    4. '	print' → logprob: -10.263832092285156
    5. '   ' → logprob: -10.888832092285156
    6. '           ' → logprob: -14.138832092285156
    7. '.print' → logprob: -15.388832092285156
    8. '    ' → logprob: -15.638832092285156
    9. ' ' → logprob: -15.763832092285156
    10. '        ' → logprob: -16.513832092285156

Token 488: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001181777217425406
    2. ' print' → logprob: -6.751181602478027
    3. '   ' → logprob: -11.501181602478027
    4. '	print' → logprob: -13.751181602478027
    5. '.print' → logprob: -15.376181602478027
    6. '       ' → logprob: -16.376182556152344
    7. '#print' → logprob: -18.126182556152344
    8. ' ' → logprob: -18.251182556152344
    9. '(print' → logprob: -18.501182556152344
    10. '  ' → logprob: -18.626182556152344

Token 489: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07028107345104218
    2. ''' → logprob: -2.6952810287475586
    3. '(' → logprob: -8.070281028747559
    4. ' '' → logprob: -10.820281028747559
    5. '   ' → logprob: -12.945281028747559
    6. ''S' → logprob: -13.445281028747559
    7. '(
' → logprob: -13.945281028747559
    8. 'Yes' → logprob: -13.945281028747559
    9. ''s' → logprob: -14.070281028747559
    10. ' ' → logprob: -14.070281028747559

Token 490: 'No' (ID: 3160)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47412028908729553
    2. 'No' → logprob: -0.9741202592849731
    3. '"No' → logprob: -10.099120140075684
    4. 'NO' → logprob: -13.849120140075684
    5. 'print' → logprob: -15.099120140075684
    6. ' No' → logprob: -15.599120140075684
    7. '```' → logprob: -16.09912109375
    8. 'Yes' → logprob: -16.34912109375
    9. '('' → logprob: -16.59912109375
    10. '(No' → logprob: -16.59912109375

Token 491: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00018530222587287426
    2. ')' → logprob: -8.625185012817383
    3. '')
' → logprob: -13.250185012817383
    4. ''' → logprob: -13.250185012817383
    5. '('' → logprob: -13.625185012817383
    6. 'No' → logprob: -14.375185012817383
    7. '")' → logprob: -15.250185012817383
    8. '(No' → logprob: -16.500185012817383
    9. '()' → logprob: -16.875185012817383
    10. '.')' → logprob: -17.250185012817383

Token 492: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03118029609322548
    2. 'No' → logprob: -3.7811803817749023
    3. '   ' → logprob: -5.781180381774902
    4. ' print' → logprob: -5.906180381774902
    5. ')' → logprob: -7.656180381774902
    6. 'Print' → logprob: -7.781180381774902
    7. '(print' → logprob: -8.281180381774902
    8. '```' → logprob: -8.781180381774902
    9. '('' → logprob: -8.906180381774902
    10. '()' → logprob: -9.156180381774902

Token 493: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '       ' → logprob: -20.375
    4. '   ' → logprob: -21.75
    5. '	print' → logprob: -22.25
    6. 'Print' → logprob: -22.5
    7. 'No' → logprob: -23.875
    8. '```' → logprob: -24.875
    9. '           ' → logprob: -25.125
    10. '.print' → logprob: -25.25

Token 494: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.50001049041748
    3. '("' → logprob: -17.375009536743164
    4. '(No' → logprob: -18.625009536743164
    5. ''' → logprob: -19.625009536743164
    6. '()' → logprob: -20.000009536743164
    7. ' ('' → logprob: -21.000009536743164
    8. '(('' → logprob: -21.500009536743164
    9. 'No' → logprob: -21.875009536743164
    10. '(
' → logprob: -22.125009536743164

Token 495: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. ''' → logprob: -17.5
    3. ' No' → logprob: -21.25
    4. 'N' → logprob: -22.875
    5. '')' → logprob: -24.625
    6. 'Yes' → logprob: -25.0
    7. '"No' → logprob: -25.25
    8. 'NO' → logprob: -25.5
    9. 'no' → logprob: -25.625
    10. '_No' → logprob: -26.5

Token 496: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007114782347343862
    2. ')' → logprob: -7.250711441040039
    3. '")' → logprob: -14.125711441040039
    4. '')
' → logprob: -14.625711441040039
    5. ''' → logprob: -16.00071144104004
    6. '}')' → logprob: -16.75071144104004
    7. ')'' → logprob: -16.87571144104004
    8. '!' → logprob: -17.75071144104004
    9. '()' → logprob: -17.75071144104004
    10. '.')' → logprob: -18.12571144104004

Token 497: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: ' Ligne' (ID: 127787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' comment' (ID: 5375)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2646251618862152
    2. 'ée' → logprob: -1.6396251916885376
    3. 'aire' → logprob: -3.764625072479248
    4. 'é' → logprob: -4.264625072479248
    5. '#' → logprob: -6.889625072479248
    6. 'ee' → logprob: -8.889625549316406
    7. 'a' → logprob: -10.639625549316406
    8. 'ées' → logprob: -11.764625549316406
    9. ' e' → logprob: -11.764625549316406
    10. 'es' → logprob: -12.139625549316406

Token 502: ' :' (ID: 712)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0028897521551698446
    2. '#print' → logprob: -5.877889633178711
    3. '   ' → logprob: -10.252889633178711
    4. '﻿#' → logprob: -11.377889633178711
    5. '#index' → logprob: -11.502889633178711
    6. '##' → logprob: -12.002889633178711
    7. '#if' → logprob: -12.127889633178711
    8. ' #' → logprob: -12.502889633178711
    9. '#line' → logprob: -13.127889633178711
    10. '#else' → logprob: -13.502889633178711

Token 503: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.006070525851100683
    2. '#print' → logprob: -5.131070613861084
    3. '#if' → logprob: -9.631070137023926
    4. '   ' → logprob: -9.881070137023926
    5. ' #' → logprob: -11.881070137023926
    6. '#index' → logprob: -12.131070137023926
    7. '﻿#' → logprob: -12.881070137023926
    8. '##' → logprob: -13.381070137023926
    9. '#a' → logprob: -13.756070137023926
    10. '#line' → logprob: -14.006070137023926

Token 504: ' pourrait' (ID: 39622)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09118502587080002
    2. '#print' → logprob: -2.4661850929260254
    3. ' #' → logprob: -7.091185092926025
    4. '#a' → logprob: -7.216185092926025
    5. 'print' → logprob: -8.716184616088867
    6. '#do' → logprob: -9.466184616088867
    7. '#set' → logprob: -9.841184616088867
    8. '#index' → logprob: -9.966184616088867
    9. '#ac' → logprob: -10.341184616088867
    10. '#from' → logprob: -10.591184616088867

Token 505: ' afficher' (ID: 146524)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04058890417218208
    2. 'tr' → logprob: -4.290588855743408
    3. 'print' → logprob: -4.790588855743408
    4. '#print' → logprob: -4.790588855743408
    5. 'aff' → logprob: -5.790588855743408
    6. 'aj' → logprob: -5.790588855743408
    7. '   ' → logprob: -7.040588855743408
    8. ' #' → logprob: -8.040589332580566
    9. '#a' → logprob: -8.415589332580566
    10. ' afficher' → logprob: -8.665589332580566

Token 506: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21763308346271515
    2. '(H' → logprob: -1.7176331281661987
    3. 'H' → logprob: -4.592633247375488
    4. '(#' → logprob: -5.717633247375488
    5. '("#' → logprob: -7.342633247375488
    6. '(len' → logprob: -7.592633247375488
    7. 'la' → logprob: -7.717633247375488
    8. '('#' → logprob: -8.092633247375488
    9. '(' → logprob: -8.842633247375488
    10. '('' → logprob: -8.842633247375488

Token 507: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0009587471140548587
    2. 'val' → logprob: -7.8759589195251465
    3. ' liste' → logprob: -8.375958442687988
    4. 'list' → logprob: -8.750958442687988
    5. 'sé' → logprob: -10.125958442687988
    6. 'mod' → logprob: -10.500958442687988
    7. 'H' → logprob: -10.750958442687988
    8. '#' → logprob: -10.750958442687988
    9. 'modified' → logprob: -10.875958442687988
    10. 'sequence' → logprob: -11.125958442687988

Token 508: ' finale' (ID: 37759)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.006731592118740082
    2. '#print' → logprob: -5.0067315101623535
    3. '   ' → logprob: -11.381731986999512
    4. ' #' → logprob: -12.756731986999512
    5. '﻿#' → logprob: -14.131731986999512
    6. '#index' → logprob: -14.381731986999512
    7. '##' → logprob: -15.756731986999512
    8. '#a' → logprob: -16.256731033325195
    9. '#line' → logprob: -16.256731033325195
    10. '#__' → logprob: -16.756731033325195

Token 509: ' H' (ID: 487)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005245141219347715
    2. '#print' → logprob: -5.255245208740234
    3. ' #' → logprob: -12.255245208740234
    4. '   ' → logprob: -12.630245208740234
    5. '#index' → logprob: -13.630245208740234
    6. '﻿#' → logprob: -13.880245208740234
    7. '#line' → logprob: -15.380245208740234
    8. '##' → logprob: -15.630245208740234
    9. 'print' → logprob: -16.005245208740234
    10. '#if' → logprob: -16.380245208740234

Token 510: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0005589892389252782
    2. '#print' → logprob: -7.500558853149414
    3. ' #' → logprob: -12.750558853149414
    4. '   ' → logprob: -13.250558853149414
    5. '#index' → logprob: -14.625558853149414
    6. '﻿#' → logprob: -15.125558853149414
    7. '#
' → logprob: -15.750558853149414
    8. '##' → logprob: -16.375558853149414
    9. '#a' → logprob: -16.625558853149414
    10. '#line' → logprob: -16.750558853149414

Token 511: ' vér' (ID: 42524)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.1288466900587082
    2. '#' → logprob: -2.3788466453552246
    3. 'dé' → logprob: -4.253846645355225
    4. ' debug' → logprob: -4.878846645355225
    5. 'v' → logprob: -5.503846645355225
    6. ' debugging' → logprob: -7.503846645355225
    7. 'voir' → logprob: -7.628846645355225
    8. '_debug' → logprob: -8.003847122192383
    9. 'le' → logprob: -8.128847122192383
    10. 'visual' → logprob: -8.253847122192383

Token 512: 'ification' (ID: 3166)
  Prédit: 'ifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.013839657418429852
    2. 'if' → logprob: -5.3888397216796875
    3. 'ifer' → logprob: -5.5138397216796875
    4. 'ification' → logprob: -6.0138397216796875
    5. '#' → logprob: -6.3888397216796875
    6. 'ifie' → logprob: -8.638839721679688
    7. 'f' → logprob: -8.763839721679688
    8. '```' → logprob: -9.263839721679688
    9. 'iquer' → logprob: -9.638839721679688
    10. 'i' → logprob: -9.888839721679688

Token 513: ' supplémentaire' (ID: 111252)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005964465439319611
    2. '#print' → logprob: -5.130964279174805
    3. ' #' → logprob: -10.880964279174805
    4. '#index' → logprob: -11.505964279174805
    5. '﻿#' → logprob: -12.880964279174805
    6. '   ' → logprob: -13.630964279174805
    7. '#if' → logprob: -14.630964279174805
    8. '<|end|>' → logprob: -14.630964279174805
    9. '#line' → logprob: -14.880964279174805
    10. '```' → logprob: -15.005964279174805

Token 514: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0017394359456375241
    2. '#print' → logprob: -6.376739501953125
    3. '   ' → logprob: -11.126739501953125
    4. ' #' → logprob: -11.251739501953125
    5. '﻿#' → logprob: -12.876739501953125
    6. '#index' → logprob: -12.876739501953125
    7. '#
' → logprob: -14.126739501953125
    8. '#if' → logprob: -14.626739501953125
    9. '##' → logprob: -14.751739501953125
    10. '#a' → logprob: -14.876739501953125

Token 515: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.018167270347476006
    2. '#print' → logprob: -4.018167495727539
    3. '   ' → logprob: -11.518167495727539
    4. '##' → logprob: -13.143167495727539
    5. ' #' → logprob: -13.643167495727539
    6. '#index' → logprob: -14.018167495727539
    7. '﻿#' → logprob: -14.018167495727539
    8. '#if' → logprob: -14.393167495727539
    9. '#a' → logprob: -14.768167495727539
    10. '#__' → logprob: -15.143167495727539

Token 516: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3132660686969757
    2. '#print' → logprob: -1.3132660388946533
    3. ' #' → logprob: -13.813265800476074
    4. '﻿#' → logprob: -14.063265800476074
    5. '   ' → logprob: -14.438265800476074
    6. '#index' → logprob: -14.813265800476074
    7. '##' → logprob: -14.813265800476074
    8. '#if' → logprob: -15.063265800476074
    9. 'print' → logprob: -15.313265800476074
    10. '#line' → logprob: -15.563265800476074

Token 517: ' print' (ID: 2123)
  Prédit: '#print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#print' → logprob: -0.046347957104444504
    2. '#' → logprob: -3.2963478565216064
    3. 'print' → logprob: -4.7963480949401855
    4. ' #' → logprob: -11.796347618103027
    5. ' print' → logprob: -12.296347618103027
    6. '#index' → logprob: -17.671348571777344
    7. '#if' → logprob: -17.796348571777344
    8. '   ' → logprob: -17.796348571777344
    9. '#line' → logprob: -18.046348571777344
    10. '#w' → logprob: -18.171348571777344

Token 518: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.017727836966514587
    2. '(' → logprob: -4.267727851867676
    3. '('' → logprob: -5.642727851867676
    4. ' (' → logprob: -12.142727851867676
    5. 'H' → logprob: -12.892727851867676
    6. '()' → logprob: -13.142727851867676
    7. '(h' → logprob: -13.892727851867676
    8. '(len' → logprob: -14.017727851867676
    9. '(*' → logprob: -14.517727851867676
    10. '((' → logprob: -14.892727851867676

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ' )' → logprob: -13.250003814697266
    3. '')' → logprob: -14.000003814697266
    4. ')#' → logprob: -14.875003814697266
    5. '))' → logprob: -15.500003814697266
    6. '[' → logprob: -16.000003814697266
    7. ']' → logprob: -16.125003814697266
    8. '#' → logprob: -16.625003814697266
    9. ')`' → logprob: -16.875003814697266
    10. ')
' → logprob: -17.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 517
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 319
Précision stricte (1ère position): 24.76%
Précision adaptée (1ère position): 27.08%
Précision (top 10): 61.70%
================================================================================
