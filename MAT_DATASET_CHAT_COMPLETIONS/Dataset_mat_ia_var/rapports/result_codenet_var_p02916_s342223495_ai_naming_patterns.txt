================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_list_a = list(map(int, input().split()))
input_list_b = list(map(int, input().split()))
input_list_c = list(map(int, input().split()))
total_score = sum(input_list_b)
for index in range(input_count - 1):
    if input_list_a[index + 1] == input_list_a[index] + 1:
        total_score += input_list_c[input_list_a[index] - 1]
print(total_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07066436111927032
    2. '0' → logprob: -2.820664405822754
    3. '1' → logprob: -5.195664405822754
    4. '4' → logprob: -6.695664405822754
    5. '10' → logprob: -7.695664405822754
    6. ' input' → logprob: -7.820664405822754
    7. ' len' → logprob: -8.070664405822754
    8. '5' → logprob: -8.445664405822754
    9. 'input' → logprob: -8.695664405822754
    10. ' int' → logprob: -8.945664405822754

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004273315134923905
    2. '```' → logprob: -9.50042724609375
    3. ''' → logprob: -9.87542724609375
    4. ' (' → logprob: -10.00042724609375
    5. '()' → logprob: -10.00042724609375
    6. '(input' → logprob: -10.50042724609375
    7. '32' → logprob: -10.62542724609375
    8. '('' → logprob: -10.62542724609375
    9. ' ' → logprob: -10.75042724609375
    10. '`' → logprob: -10.87542724609375

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10250791907310486
    2. ')' → logprob: -2.4775078296661377
    3. '()' → logprob: -4.727508068084717
    4. '())' → logprob: -5.602508068084717
    5. '('' → logprob: -8.227507591247559
    6. '(
' → logprob: -8.727507591247559
    7. '))' → logprob: -9.227507591247559
    8. '(""))' → logprob: -9.477507591247559
    9. '(()' → logprob: -9.727507591247559
    10. '```' → logprob: -9.977507591247559

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0326802730560303
    2. 'for' → logprob: -1.4076802730560303
    3. '\n' → logprob: -2.1576802730560303
    4. '+' → logprob: -2.5326802730560303
    5. '```' → logprob: -3.2826802730560303
    6. '*' → logprob: -3.4076802730560303
    7. ')' → logprob: -3.6576802730560303
    8. ' if' → logprob: -3.7826802730560303
    9. ' for' → logprob: -4.282680511474609
    10. '>' → logprob: -4.282680511474609

Token 7: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5489023327827454
    2. '_' → logprob: -1.1739022731781006
    3. '_count' → logprob: -2.9239022731781006
    4. '()' → logprob: -3.6739022731781006
    5. '('_' → logprob: -4.79890251159668
    6. '('' → logprob: -4.79890251159668
    7. '("_' → logprob: -5.79890251159668
    8. '_counts' → logprob: -5.92390251159668
    9. ''' → logprob: -6.29890251159668
    10. '("("' → logprob: -6.54890251159668

Token 8: '_a' (ID: 10852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08654596656560898
    2. '.' → logprob: -2.586545944213867
    3. '```' → logprob: -6.336545944213867
    4. '_' → logprob: -6.586545944213867
    5. '.append' → logprob: -6.961545944213867
    6. '[]' → logprob: -7.211545944213867
    7. '[
' → logprob: -7.961545944213867
    8. '[:]' → logprob: -8.086545944213867
    9. ')' → logprob: -8.211545944213867
    10. '\[' → logprob: -8.211545944213867

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2672741413116455
    2. '.' → logprob: -1.7672741413116455
    3. '_' → logprob: -3.1422741413116455
    4. '.append' → logprob: -5.142273902893066
    5. '=' → logprob: -5.517273902893066
    6. '[]' → logprob: -5.767273902893066
    7. '[:]' → logprob: -6.017273902893066
    8. ' =' → logprob: -6.267273902893066
    9. ')' → logprob: -7.142273902893066
    10. '```' → logprob: -8.392273902893066

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.785187840461731
    2. '[]' → logprob: -1.410187840461731
    3. 'list' → logprob: -2.1601877212524414
    4. ' list' → logprob: -2.4101877212524414
    5. ' [' → logprob: -3.0351877212524414
    6. '[' → logprob: -3.6601877212524414
    7. '[input' → logprob: -4.410187721252441
    8. '[list' → logprob: -4.910187721252441
    9. '[int' → logprob: -7.035187721252441
    10. 'input' → logprob: -7.910187721252441

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002570481738075614
    2. '(input' → logprob: -9.50025749206543
    3. '(range' → logprob: -9.75025749206543
    4. '```' → logprob: -10.12525749206543
    5. ' (' → logprob: -11.00025749206543
    6. ')' → logprob: -11.62525749206543
    7. '("("' → logprob: -11.87525749206543
    8. '(
' → logprob: -11.87525749206543
    9. '((' → logprob: -12.00025749206543
    10. '[(' → logprob: -12.87525749206543

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.28901350498199463
    2. '(' → logprob: -1.5390135049819946
    3. '(str' → logprob: -3.914013385772705
    4. '(lambda' → logprob: -4.289013385772705
    5. '(input' → logprob: -6.039013385772705
    6. '(
' → logprob: -9.039013862609863
    7. '(eval' → logprob: -9.414013862609863
    8. ')' → logprob: -10.289013862609863
    9. '<int' → logprob: -10.789013862609863
    10. 'int' → logprob: -11.039013862609863

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009945905767381191
    2. '(' → logprob: -4.759945869445801
    3. ',input' → logprob: -7.884945869445801
    4. '))' → logprob: -7.884945869445801
    5. ')' → logprob: -8.2599458694458
    6. ' (' → logprob: -9.2599458694458
    7. 'input' → logprob: -9.8849458694458
    8. ',' → logprob: -10.0099458694458
    9. '=input' → logprob: -10.3849458694458
    10. '),' → logprob: -11.0099458694458

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741252362728119
    2. ' input' → logprob: -0.9741252660751343
    3. '(input' → logprob: -9.974124908447266
    4. ',input' → logprob: -14.724124908447266
    5. 'range' → logprob: -14.974124908447266
    6. '	input' → logprob: -15.224124908447266
    7. '=input' → logprob: -15.474124908447266
    8. '<input' → logprob: -15.724124908447266
    9. ' ' → logprob: -16.099124908447266
    10. '[input' → logprob: -17.099124908447266

Token 15: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2919856905937195
    2. '()' → logprob: -1.5419857501983643
    3. '())' → logprob: -3.6669857501983643
    4. '(' → logprob: -4.916985511779785
    5. '().' → logprob: -5.916985511779785
    6. '(input' → logprob: -6.916985511779785
    7. '()));' → logprob: -6.916985511779785
    8. '())))' → logprob: -7.291985511779785
    9. '(),' → logprob: -8.416985511779785
    10. '()`' → logprob: -8.666985511779785

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005284877843223512
    2. 'strip' → logprob: -7.625528335571289
    3. 'rstrip' → logprob: -10.875528335571289
    4. ')' → logprob: -11.250528335571289
    5. ' split' → logprob: -12.125528335571289
    6. '(split' → logprob: -13.000528335571289
    7. 'spl' → logprob: -14.875528335571289
    8. '_split' → logprob: -15.500528335571289
    9. '```' → logprob: -16.62552833557129
    10. 'read' → logprob: -16.75052833557129

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.021557416766881943
    2. '()' → logprob: -4.896557331085205
    3. '))' → logprob: -5.021557331085205
    4. '())' → logprob: -5.021557331085205
    5. '(' → logprob: -7.521557331085205
    6. ')' → logprob: -9.896557807922363
    7. '()))
' → logprob: -11.021557807922363
    8. '())))' → logprob: -11.396557807922363
    9. '()));' → logprob: -11.646557807922363
    10. '()))

' → logprob: -11.771557807922363

Token 18: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0395828485488892
    2. 'for' → logprob: -1.1645828485488892
    3. ')' → logprob: -2.2895827293395996
    4. 'result' → logprob: -2.9145827293395996
    5. '```' → logprob: -3.2895827293395996
    6. 'output' → logprob: -3.4145827293395996
    7. 'assert' → logprob: -3.7895827293395996
    8. 'if' → logprob: -3.9145827293395996
    9. 'sum' → logprob: -4.1645827293396
    10. 'count' → logprob: -4.6645827293396

Token 19: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001765501219779253
    2. ')_' → logprob: -7.126765727996826
    3. '```' → logprob: -7.876765727996826
    4. '_count' → logprob: -9.251765251159668
    5. '_s' → logprob: -9.376765251159668
    6. '_line' → logprob: -9.626765251159668
    7. '_' → logprob: -9.751765251159668
    8. ''_' → logprob: -10.001765251159668
    9. '_lst' → logprob: -10.876765251159668
    10. ')' → logprob: -11.126765251159668

Token 20: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.027204902842640877
    2. '_' → logprob: -3.777204990386963
    3. '_b' → logprob: -5.902204990386963
    4. '```' → logprob: -7.027204990386963
    5. ' _' → logprob: -9.402204513549805
    6. '"_' → logprob: -10.027204513549805
    7. ''_' → logprob: -10.527204513549805
    8. '__' → logprob: -10.777204513549805
    9. '___' → logprob: -10.902204513549805
    10. '_
' → logprob: -10.902204513549805

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019310681149363518
    2. '=' → logprob: -4.019310474395752
    3. '_' → logprob: -7.644310474395752
    4. '.extend' → logprob: -8.51931095123291
    5. '.' → logprob: -8.64431095123291
    6. ')' → logprob: -9.39431095123291
    7. '[' → logprob: -10.01931095123291
    8. '.append' → logprob: -10.01931095123291
    9. '[:]' → logprob: -10.01931095123291
    10. ' +=' → logprob: -11.01931095123291

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07898132503032684
    2. 'list' → logprob: -2.578981399536133
    3. ' map' → logprob: -9.453981399536133
    4. 'map' → logprob: -11.453981399536133
    5. '(list' → logprob: -13.328981399536133
    6. ' input' → logprob: -14.828981399536133
    7. 'input' → logprob: -16.078981399536133
    8. ' ' → logprob: -16.078981399536133
    9. ' l' → logprob: -16.828981399536133
    10. '=list' → logprob: -16.828981399536133

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1164596825838089
    2. '(map' → logprob: -2.241459608078003
    3. '(.' → logprob: -6.491459846496582
    4. '(int' → logprob: -7.241459846496582
    5. '(list' → logprob: -7.991459846496582
    6. '((' → logprob: -8.116459846496582
    7. '(range' → logprob: -8.991459846496582
    8. '(lambda' → logprob: -8.991459846496582
    9. '(

' → logprob: -9.241459846496582
    10. ' (' → logprob: -9.741459846496582

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012780919205397367
    2. '(' → logprob: -6.751277923583984
    3. '<int' → logprob: -10.126277923583984
    4. '=int' → logprob: -11.001277923583984
    5. ' (' → logprob: -11.376277923583984
    6. '[int' → logprob: -11.501277923583984
    7. 'int' → logprob: -11.626277923583984
    8. '```' → logprob: -11.751277923583984
    9. '(lambda' → logprob: -13.001277923583984
    10. ')(' → logprob: -13.251277923583984

Token 25: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06275852024555206
    2. '(input' → logprob: -3.062758445739746
    3. ',' → logprob: -5.062758445739746
    4. ',int' → logprob: -5.687758445739746
    5. '(' → logprob: -5.937758445739746
    6. ',input' → logprob: -6.812758445739746
    7. 'int' → logprob: -8.312758445739746
    8. ' (' → logprob: -9.437758445739746
    9. '<int' → logprob: -9.562758445739746
    10. '```' → logprob: -9.687758445739746

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8494598865509033
    2. ' input' → logprob: -0.9744598865509033
    3. 'int' → logprob: -1.7244598865509033
    4. ' int' → logprob: -4.099459648132324
    5. 'str' → logprob: -9.599459648132324
    6. ' str' → logprob: -10.724459648132324
    7. '(input' → logprob: -11.474459648132324
    8. '(int' → logprob: -12.599459648132324
    9. '<input' → logprob: -14.224459648132324
    10. ' ' → logprob: -14.474459648132324

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.007242879830300808
    2. '()' → logprob: -5.007242679595947
    3. '(' → logprob: -7.757242679595947
    4. '()))' → logprob: -10.007243156433105
    5. '())' → logprob: -10.632243156433105
    6. '(.' → logprob: -11.757243156433105
    7. '.' → logprob: -11.882243156433105
    8. '()));' → logprob: -12.507243156433105
    9. ' ().' → logprob: -13.257243156433105
    10. '()`' → logprob: -13.507243156433105

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.875001907348633
    3. ' split' → logprob: -15.250001907348633
    4. ')' → logprob: -15.375001907348633
    5. '(split' → logprob: -16.125001907348633
    6. 'spl' → logprob: -16.625001907348633
    7. 'read' → logprob: -18.875001907348633
    8. '.split' → logprob: -19.375001907348633
    9. 'rstrip' → logprob: -19.500001907348633
    10. 'plit' → logprob: -20.000001907348633

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0875207781791687
    2. '())' → logprob: -2.8375208377838135
    3. '()' → logprob: -4.337520599365234
    4. '))' → logprob: -4.587520599365234
    5. ')' → logprob: -6.337520599365234
    6. '(' → logprob: -9.087520599365234
    7. '()))
' → logprob: -10.462520599365234
    8. '()));' → logprob: -10.712520599365234
    9. '()))

' → logprob: -11.337520599365234
    10. '()>' → logprob: -11.462520599365234

Token 30: 'input' (ID: 2586)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6839439868927002
    2. 'for' → logprob: -1.6839439868927002
    3. 'a' → logprob: -2.6839439868927
    4. 's' → logprob: -3.0589439868927
    5. 'c' → logprob: -3.3089439868927
    6. 'output' → logprob: -3.4339439868927
    7. 'r' → logprob: -4.058943748474121
    8. 'res' → logprob: -4.433943748474121
    9. '[' → logprob: -4.558943748474121
    10. 'n' → logprob: -4.558943748474121

Token 31: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33642593026161194
    2. '_list' → logprob: -1.7114259004592896
    3. '_count' → logprob: -2.336426019668579
    4. '_counts' → logprob: -5.58642578125
    5. ')' → logprob: -7.58642578125
    6. '_s' → logprob: -7.71142578125
    7. '```' → logprob: -7.71142578125
    8. '(' → logprob: -8.08642578125
    9. '_sum' → logprob: -8.21142578125
    10. ' _' → logprob: -8.21142578125

Token 32: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.12838169932365417
    2. '_' → logprob: -2.1283817291259766
    3. '_b' → logprob: -7.378381729125977
    4. '```' → logprob: -8.253381729125977
    5. '_s' → logprob: -8.378381729125977
    6. 'a' → logprob: -9.378381729125977
    7. '_c' → logprob: -9.378381729125977
    8. ' _' → logprob: -10.128381729125977
    9. 's' → logprob: -10.253381729125977
    10. '__' → logprob: -11.003381729125977

Token 33: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5395656228065491
    2. '[' → logprob: -1.0395655632019043
    3. ' =' → logprob: -3.2895655632019043
    4. '.' → logprob: -4.414565563201904
    5. '=' → logprob: -4.914565563201904
    6. '[:]' → logprob: -6.039565563201904
    7. '.append' → logprob: -6.664565563201904
    8. '[]' → logprob: -6.789565563201904
    9. ')' → logprob: -7.414565563201904
    10. 's' → logprob: -8.414566040039062

Token 34: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5859092473983765
    2. ' list' → logprob: -0.8359092473983765
    3. ' []' → logprob: -5.085909366607666
    4. '[]' → logprob: -6.210909366607666
    5. '[' → logprob: -7.460909366607666
    6. ' [' → logprob: -7.710909366607666
    7. '(list' → logprob: -7.835909366607666
    8. '[list' → logprob: -9.085908889770508
    9. 'input' → logprob: -9.960908889770508
    10. ' input' → logprob: -10.710908889770508

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0121711241081357
    2. '(map' → logprob: -5.012171268463135
    3. '(int' → logprob: -5.762171268463135
    4. '(range' → logprob: -7.012171268463135
    5. '((' → logprob: -8.262170791625977
    6. '(lambda' → logprob: -8.387170791625977
    7. '(list' → logprob: -8.512170791625977
    8. '(
' → logprob: -9.137170791625977
    9. '(()' → logprob: -9.137170791625977
    10. '(

' → logprob: -9.137170791625977

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020050073508173227
    2. '(' → logprob: -6.252005100250244
    3. '(lambda' → logprob: -10.377004623413086
    4. ')(' → logprob: -11.502004623413086
    5. '<int' → logprob: -11.752004623413086
    6. ' (' → logprob: -11.752004623413086
    7. 'int' → logprob: -11.877004623413086
    8. '=int' → logprob: -12.752004623413086
    9. '(str' → logprob: -13.002004623413086
    10. '[int' → logprob: -13.252004623413086

Token 37: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0730036273598671
    2. '(' → logprob: -2.6980035305023193
    3. ',int' → logprob: -6.448003768920898
    4. ',' → logprob: -6.948003768920898
    5. '(input' → logprob: -8.198003768920898
    6. ')' → logprob: -9.198003768920898
    7. '```' → logprob: -10.948003768920898
    8. ',(' → logprob: -11.073003768920898
    9. '(),' → logprob: -11.198003768920898
    10. ')(' → logprob: -11.323003768920898

Token 38: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013346095569431782
    2. ' int' → logprob: -4.513346195220947
    3. 'input' → logprob: -6.263346195220947
    4. '(int' → logprob: -8.138345718383789
    5. ' input' → logprob: -9.263345718383789
    6. '[int' → logprob: -13.013345718383789
    7. 'str' → logprob: -14.638345718383789
    8. ' ' → logprob: -15.013345718383789
    9. '<int' → logprob: -15.138345718383789
    10. '(input' → logprob: -15.638345718383789

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003943874966353178
    2. '()' → logprob: -5.628943920135498
    3. '())' → logprob: -8.87894344329834
    4. '(' → logprob: -9.50394344329834
    5. '()))' → logprob: -9.50394344329834
    6. ' ().' → logprob: -11.25394344329834
    7. '(.' → logprob: -11.37894344329834
    8. '()[' → logprob: -12.37894344329834
    9. '().__' → logprob: -12.50394344329834
    10. '()(' → logprob: -12.50394344329834

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.750004768371582
    3. ' split' → logprob: -13.375004768371582
    4. ')' → logprob: -15.250004768371582
    5. 'spl' → logprob: -16.1250057220459
    6. '(split' → logprob: -16.8750057220459
    7. '```' → logprob: -17.5000057220459
    8. 'int' → logprob: -18.0000057220459
    9. 'rstrip' → logprob: -18.1250057220459
    10. 'sort' → logprob: -18.5000057220459

Token 41: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.178802490234375
    2. '())' → logprob: -1.928802490234375
    3. '()' → logprob: -4.553802490234375
    4. '))' → logprob: -5.178802490234375
    5. ')' → logprob: -6.303802490234375
    6. '(' → logprob: -8.178802490234375
    7. '()))
' → logprob: -9.678802490234375
    8. '()>' → logprob: -11.303802490234375
    9. '()))

' → logprob: -11.553802490234375
    10. '()));' → logprob: -11.553802490234375

Token 42: 'total' (ID: 9577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.36594998836517334
    2. 'output' → logprob: -2.490950107574463
    3. 'for' → logprob: -2.490950107574463
    4. 'd' → logprob: -3.490950107574463
    5. 's' → logprob: -3.740950107574463
    6. 'answer' → logprob: -4.115950107574463
    7. 'sum' → logprob: -4.240950107574463
    8. 'res' → logprob: -4.365950107574463
    9. 'total' → logprob: -4.865950107574463
    10. 'max' → logprob: -5.240950107574463

Token 43: '_score' (ID: 22555)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023219849914312363
    2. '(' → logprob: -4.273220062255859
    3. '_space' → logprob: -6.023220062255859
    4. '_counts' → logprob: -6.023220062255859
    5. '.' → logprob: -7.023220062255859
    6. '_count' → logprob: -7.023220062255859
    7. '_sum' → logprob: -7.023220062255859
    8. ')' → logprob: -8.14822006225586
    9. '=' → logprob: -8.52322006225586
    10. 's' → logprob: -8.89822006225586

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17440789937973022
    2. '=' → logprob: -2.549407958984375
    3. '_' → logprob: -3.049407958984375
    4. ' +=' → logprob: -3.674407958984375
    5. ' ' → logprob: -5.174407958984375
    6. '+' → logprob: -6.799407958984375
    7. '[' → logprob: -7.174407958984375
    8. '_space' → logprob: -7.549407958984375
    9. '(' → logprob: -8.424407958984375
    10. ')' → logprob: -8.799407958984375

Token 45: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3870421051979065
    2. ' ' → logprob: -1.1370420455932617
    3. ' sum' → logprob: -9.262042045593262
    4. 'sum' → logprob: -9.637042045593262
    5. 'input' → logprob: -13.012042045593262
    6. ' input' → logprob: -13.012042045593262
    7. ' ' → logprob: -13.137042045593262
    8. '(' → logprob: -14.512042045593262
    9. '(sum' → logprob: -14.949542045593262
    10. '  ' → logprob: -15.074542045593262

Token 46: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002905334113165736
    2. '((' → logprob: -10.000290870666504
    3. '(total' → logprob: -10.000290870666504
    4. '(sum' → logprob: -10.250290870666504
    5. '('' → logprob: -10.375290870666504
    6. '(
' → logprob: -10.500290870666504
    7. ' (' → logprob: -10.625290870666504
    8. '("("' → logprob: -10.750290870666504
    9. '(input' → logprob: -11.375290870666504
    10. '()' → logprob: -11.375290870666504

Token 47: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00018387178715784103
    2. '_' → logprob: -8.750184059143066
    3. ')' → logprob: -11.125184059143066
    4. '_count' → logprob: -12.125184059143066
    5. ')_' → logprob: -13.250184059143066
    6. '_score' → logprob: -13.875184059143066
    7. '(' → logprob: -14.000184059143066
    8. '_)' → logprob: -15.250184059143066
    9. '_total' → logprob: -15.500184059143066
    10. '_input' → logprob: -15.625184059143066

Token 48: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0035811839625239372
    2. '_c' → logprob: -6.1285810470581055
    3. '_b' → logprob: -6.7535810470581055
    4. '_' → logprob: -8.878581047058105
    5. ')_' → logprob: -10.128581047058105
    6. ' _' → logprob: -10.878581047058105
    7. ')' → logprob: -11.378581047058105
    8. '_s' → logprob: -12.003581047058105
    9. '```' → logprob: -12.628581047058105
    10. '_f' → logprob: -12.628581047058105

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.054616618901491165
    2. '+' → logprob: -3.554616689682007
    3. '[' → logprob: -4.429616451263428
    4. ' +' → logprob: -4.679616451263428
    5. ',' → logprob: -6.304616451263428
    6. ' )' → logprob: -7.054616451263428
    7. '[input' → logprob: -8.804616928100586
    8. '*' → logprob: -9.429616928100586
    9. '))' → logprob: -9.429616928100586
    10. '[i' → logprob: -9.679616928100586

Token 50: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2359776496887207
    2. '
' → logprob: -2.9859776496887207
    3. 'if' → logprob: -3.3609776496887207
    4. '+' → logprob: -3.8609776496887207
    5. '\n' → logprob: -4.235977649688721
    6. '*' → logprob: -4.735977649688721
    7. 'result' → logprob: -4.985977649688721
    8. ')' → logprob: -5.110977649688721
    9. ' for' → logprob: -5.110977649688721
    10. 'total' → logprob: -5.110977649688721

Token 51: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27523574233055115
    2. ' ' → logprob: -1.7752357721328735
    3. ' _' → logprob: -3.150235652923584
    4. '_' → logprob: -3.775235652923584
    5. ' item' → logprob: -5.525235652923584
    6. '  ' → logprob: -7.650235652923584
    7. ' input' → logprob: -7.900235652923584
    8. ' ‌' → logprob: -8.025236129760742
    9. ' ' → logprob: -10.400236129760742
    10. 'i' → logprob: -10.525236129760742

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05556948855519295
    2. 'in' → logprob: -2.9305694103240967
    3. ' ' → logprob: -7.805569648742676
    4. '<|end|>' → logprob: -9.055569648742676
    5. '_' → logprob: -9.555569648742676
    6. '(' → logprob: -10.805569648742676
    7. ')' → logprob: -11.555569648742676
    8. '_in' → logprob: -12.055569648742676
    9. ' ,' → logprob: -12.180569648742676
    10. '  ' → logprob: -12.305569648742676

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002216869033873081
    2. 'range' → logprob: -6.127216815948486
    3. ' input' → logprob: -10.627217292785645
    4. '	range' → logprob: -12.252217292785645
    5. ' ' → logprob: -13.377217292785645
    6. '(range' → logprob: -14.627217292785645
    7. ' ' → logprob: -15.502217292785645
    8. ' xrange' → logprob: -15.502217292785645
    9. 'input' → logprob: -16.252216339111328
    10. '　' → logprob: -16.502216339111328

Token 54: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07920877635478973
    2. '(input' → logprob: -2.5792088508605957
    3. '(len' → logprob: -8.454208374023438
    4. ' (' → logprob: -9.454208374023438
    5. '(total' → logprob: -11.204208374023438
    6. '(
' → logprob: -11.579208374023438
    7. '(length' → logprob: -14.204208374023438
    8. ' input' → logprob: -14.329208374023438
    9. 'input' → logprob: -14.579208374023438
    10. '(

' → logprob: -14.579208374023438

Token 55: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.596781946020201e-05
    2. '_' → logprob: -10.875045776367188
    3. '_c' → logprob: -11.750045776367188
    4. ')_' → logprob: -12.125045776367188
    5. '_total' → logprob: -12.625045776367188
    6. ')' → logprob: -12.750045776367188
    7. '_co' → logprob: -13.500045776367188
    8. ' _' → logprob: -13.875045776367188
    9. '_counts' → logprob: -13.875045776367188
    10. '_counter' → logprob: -14.750045776367188

Token 56: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02425467036664486
    2. ')' → logprob: -3.774254560470581
    3. ' ):' → logprob: -7.27425479888916
    4. '+' → logprob: -8.64925479888916
    5. '):
' → logprob: -9.77425479888916
    6. ' )' → logprob: -10.02425479888916
    7. ':' → logprob: -10.64925479888916
    8. ' +' → logprob: -12.52425479888916
    9. ' ' → logprob: -13.39925479888916
    10. ',' → logprob: -13.64925479888916

Token 57: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868939280509949
    2. '1' → logprob: -1.1368939876556396
    3. '2' → logprob: -10.886894226074219
    4. ' ' → logprob: -13.261894226074219
    5. '  ' → logprob: -14.886894226074219
    6. '１' → logprob: -15.011894226074219
    7. '0' → logprob: -15.199394226074219
    8. ')' → logprob: -15.386894226074219
    9. '```' → logprob: -15.449394226074219
    10. '3' → logprob: -15.761894226074219

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003012617235071957
    2. ' ' → logprob: -8.125301361083984
    3. '2' → logprob: -12.250301361083984
    4. '3' → logprob: -16.312801361083984
    5. '１' → logprob: -16.375301361083984
    6. '0' → logprob: -17.062801361083984
    7. ')' → logprob: -17.187801361083984
    8. '   ' → logprob: -17.375301361083984
    9. '```' → logprob: -17.687801361083984
    10. '१' → logprob: -18.187801361083984

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006496873684227467
    2. ')' → logprob: -5.881496906280518
    3. ':' → logprob: -5.881496906280518
    4. ' ):' → logprob: -7.506496906280518
    5. ',' → logprob: -8.75649642944336
    6. '):
' → logprob: -9.00649642944336
    7. ' :' → logprob: -10.75649642944336
    8. '+' → logprob: -11.00649642944336
    9. ']:' → logprob: -12.13149642944336
    10. '():' → logprob: -12.63149642944336

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39514103531837463
    2. ' ' → logprob: -1.5201410055160522
    3. ' if' → logprob: -3.395141124725342
    4. ' 
' → logprob: -3.645141124725342
    5. ' total' → logprob: -3.895141124725342
    6. '    
' → logprob: -4.020141124725342
    7. '    ' → logprob: -6.145141124725342
    8. '```' → logprob: -6.520141124725342
    9. '  
' → logprob: -6.770141124725342
    10. '<|end|>' → logprob: -7.020141124725342

Token 61: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4122590720653534
    2. ' total' → logprob: -1.5372591018676758
    3. 'if' (adapté à ' if') → logprob: -3.037259101867676
    4. 'total' → logprob: -3.412259101867676
    5. '   ' → logprob: -3.787259101867676
    6. ' ' → logprob: -4.037259101867676
    7. '    ' → logprob: -7.537259101867676
    8. ' ' → logprob: -8.787259101867676
    9. '  ' → logprob: -8.912259101867676
    10. '```' → logprob: -9.162259101867676

Token 62: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018408969044685364
    2. 'input' → logprob: -4.01840877532959
    3. ' abs' → logprob: -9.14340877532959
    4. ' ' → logprob: -9.39340877532959
    5. 'abs' → logprob: -11.01840877532959
    6. ' total' → logprob: -11.64340877532959
    7. ' (' → logprob: -11.89340877532959
    8. '(input' → logprob: -12.14340877532959
    9. ' ' → logprob: -12.14340877532959
    10. '[input' → logprob: -12.70590877532959

Token 63: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.35837464465294e-05
    2. '_a' → logprob: -10.750043869018555
    3. '```' → logprob: -11.875043869018555
    4. '_b' → logprob: -12.500043869018555
    5. 'a' → logprob: -13.000043869018555
    6. ')_' → logprob: -13.500043869018555
    7. '_' → logprob: -13.500043869018555
    8. '_l' → logprob: -14.125043869018555
    9. '_s' → logprob: -14.625043869018555
    10. '_c' → logprob: -14.750043869018555

Token 64: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.647503137588501
    2. '_b' → logprob: -1.022503137588501
    3. '_c' → logprob: -2.147503137588501
    4. '```' → logprob: -9.772502899169922
    5. 'a' → logprob: -10.522502899169922
    6. '[_' → logprob: -10.522502899169922
    7. '_' → logprob: -11.147502899169922
    8. '"_' → logprob: -11.147502899169922
    9. '__' → logprob: -11.522502899169922
    10. '_d' → logprob: -12.522502899169922

Token 65: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.026470167562365532
    2. '[' → logprob: -3.651470184326172
    3. ' [' → logprob: -9.526470184326172
    4. '```' → logprob: -10.526470184326172
    5. '==' → logprob: -10.901470184326172
    6. 'index' → logprob: -11.651470184326172
    7. '[input' → logprob: -12.026470184326172
    8. ' ==' → logprob: -12.151470184326172
    9. '[
' → logprob: -12.526470184326172
    10. ' ' → logprob: -12.776470184326172

Token 66: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7264146208763123
    2. ' ==' → logprob: -1.226414680480957
    3. '+' → logprob: -2.351414680480957
    4. '>' → logprob: -3.226414680480957
    5. '<' → logprob: -3.351414680480957
    6. ' +' → logprob: -3.726414680480957
    7. ' <' → logprob: -4.226414680480957
    8. ' >' → logprob: -4.476414680480957
    9. '<=' → logprob: -7.226414680480957
    10. ']' → logprob: -7.476414680480957

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025698295794427395
    2. ' ' → logprob: -6.002569675445557
    3. ']' → logprob: -10.127570152282715
    4. '2' → logprob: -11.127570152282715
    5. '   ' → logprob: -11.502570152282715
    6. ')' → logprob: -11.627570152282715
    7. '```' → logprob: -12.315070152282715
    8. '0' → logprob: -12.627570152282715
    9. '  ' → logprob: -13.252570152282715
    10. '`' → logprob: -13.315070152282715

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1818659007549286
    2. ']' → logprob: -1.931865930557251
    3. '0' → logprob: -3.931865930557251
    4. ' ' → logprob: -7.181865692138672
    5. ']==' → logprob: -7.431865692138672
    6. ')' → logprob: -9.056865692138672
    7. '-' → logprob: -9.181865692138672
    8. ' ]' → logprob: -9.681865692138672
    9. ']-' → logprob: -9.806865692138672
    10. ' -' → logprob: -10.306865692138672

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48864060640335083
    2. ']==' → logprob: -1.863640546798706
    3. '==' → logprob: -2.113640546798706
    4. ' ==' → logprob: -2.613640546798706
    5. ' ]' → logprob: -3.738640546798706
    6. ' ' → logprob: -4.863640785217285
    7. ')' → logprob: -5.738640785217285
    8. ' -' → logprob: -6.863640785217285
    9. '-' → logprob: -7.863640785217285
    10. '=' → logprob: -8.238640785217285

Token 70: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.035892583429813385
    2. ' ==' → logprob: -3.4108924865722656
    3. '-' → logprob: -6.410892486572266
    4. ' -' → logprob: -7.910892486572266
    5. '=' → logprob: -8.660892486572266
    6. ']==' → logprob: -10.910892486572266
    7. '==
' → logprob: -11.160892486572266
    8. '>' → logprob: -11.285892486572266
    9. '==-' → logprob: -12.285892486572266
    10. ' ' → logprob: -12.910892486572266

Token 71: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007444719667546451
    2. ' input' → logprob: -7.375744342803955
    3. '1' → logprob: -9.250744819641113
    4. ' ' → logprob: -11.875744819641113
    5. '0' → logprob: -12.625744819641113
    6. '(input' → logprob: -12.750744819641113
    7. '   ' → logprob: -13.250744819641113
    8. '	input' → logprob: -13.375744819641113
    9. '  ' → logprob: -13.500744819641113
    10. '100' → logprob: -14.125744819641113

Token 72: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.6405310816480778e-05
    2. 'list' → logprob: -11.375016212463379
    3. 'List' → logprob: -12.375016212463379
    4. '_count' → logprob: -14.875016212463379
    5. '_' → logprob: -16.750017166137695
    6. '1' → logprob: -16.875017166137695
    7. 'a' → logprob: -16.875017166137695
    8. '_lists' → logprob: -17.375017166137695
    9. '_l' → logprob: -18.000017166137695
    10. '_a' → logprob: -18.000017166137695

Token 73: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.030457468703389168
    2. '_c' → logprob: -4.030457496643066
    3. '_b' → logprob: -4.405457496643066
    4. 'a' → logprob: -11.030457496643066
    5. '```' → logprob: -13.530457496643066
    6. 'c' → logprob: -14.030457496643066
    7. '_list' → logprob: -14.155457496643066
    8. ''_' → logprob: -14.530457496643066
    9. '   ' → logprob: -14.780457496643066
    10. 'b' → logprob: -15.530457496643066

Token 74: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.01418442651629448
    2. 'index' → logprob: -4.264184474945068
    3. '[' → logprob: -11.13918399810791
    4. ' index' → logprob: -12.26418399810791
    5. '```' → logprob: -14.26418399810791
    6. ' [' → logprob: -14.63918399810791
    7. '   ' → logprob: -15.76418399810791
    8. '[in' → logprob: -16.014184951782227
    9. '	index' → logprob: -16.139184951782227
    10. '#index' → logprob: -16.389184951782227

Token 75: ']' (ID: 60)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2621380686759949
    2. '+' → logprob: -2.5121381282806396
    3. ' and' → logprob: -2.8871381282806396
    4. ')' → logprob: -3.3871381282806396
    5. ' ):' → logprob: -3.5121381282806396
    6. ' ' → logprob: -4.8871378898620605
    7. 'and' → logprob: -5.1371378898620605
    8. ':' → logprob: -5.5121378898620605
    9. '):
' → logprob: -5.7621378898620605
    10. ')+' → logprob: -6.0121378898620605

Token 76: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011577406898140907
    2. ' :' → logprob: -5.261577606201172
    3. ' and' → logprob: -5.261577606201172
    4. 'and' → logprob: -8.386577606201172
    5. ' ' → logprob: -8.511577606201172
    6. '+' → logprob: -8.511577606201172
    7. ':
' → logprob: -9.136577606201172
    8. '==' → logprob: -9.136577606201172
    9. '+:' → logprob: -9.261577606201172
    10. '   ' → logprob: -9.761577606201172

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -16.62520408630371
    4. '100' → logprob: -17.12520408630371
    5. '10' → logprob: -17.12520408630371
    6. '   ' → logprob: -17.12520408630371
    7. '2' → logprob: -17.12520408630371
    8. '１' → logprob: -17.62520408630371
    9. '  ' → logprob: -18.00020408630371
    10. ' ' → logprob: -18.31270408630371

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.187503814697266
    4. '```' → logprob: -16.250003814697266
    5. 'a' → logprob: -16.750003814697266
    6. '10' → logprob: -16.875003814697266
    7. '１' → logprob: -16.937503814697266
    8. '2' → logprob: -17.125003814697266
    9. '' → logprob: -17.187503814697266
    10. '  ' → logprob: -17.250003814697266

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020768598187714815
    2. ':
' → logprob: -6.252076625823975
    3. ' and' → logprob: -9.377077102661133
    4. ' :' → logprob: -10.127077102661133
    5. 'and' → logprob: -12.127077102661133
    6. '       ' → logprob: -12.127077102661133
    7. '   ' → logprob: -12.127077102661133
    8. '):' → logprob: -12.627077102661133
    9. ' :
' → logprob: -13.502077102661133
    10. ':
' → logprob: -14.002077102661133

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030522223562002182
    2. ' total' → logprob: -4.030522346496582
    3. 'total' → logprob: -5.280522346496582
    4. '   ' → logprob: -5.530522346496582
    5. ':' → logprob: -6.530522346496582
    6. '	total' → logprob: -7.280522346496582
    7. '    ' → logprob: -8.155522346496582
    8. ' ' → logprob: -8.655522346496582
    9. '_total' → logprob: -9.280522346496582
    10. '(total' → logprob: -9.530522346496582

Token 81: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.16443517804145813
    2. ' total' → logprob: -1.9144351482391357
    3. '           ' → logprob: -6.414435386657715
    4. '   ' → logprob: -6.789435386657715
    5. '       ' → logprob: -7.289435386657715
    6. '	total' → logprob: -8.289435386657715
    7. 'if' → logprob: -8.789435386657715
    8. ' ' → logprob: -9.164435386657715
    9. ' if' → logprob: -9.539435386657715
    10. '    ' → logprob: -9.539435386657715

Token 82: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.000001907348633
    3. 'score' → logprob: -15.375001907348633
    4. '_s' → logprob: -16.250001907348633
    5. '_scores' → logprob: -17.000001907348633
    6. '+' → logprob: -17.125001907348633
    7. '_SCORE' → logprob: -17.250001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'Score' → logprob: -17.375001907348633
    10. '_answer' → logprob: -17.750001907348633

Token 83: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31375712156295776
    2. ' +=' → logprob: -1.3137571811676025
    3. '+' → logprob: -7.688756942749023
    4. ']+=' → logprob: -10.813756942749023
    5. '=' → logprob: -12.438756942749023
    6. '```' → logprob: -12.688756942749023
    7. '   ' → logprob: -12.938756942749023
    8. ' +' → logprob: -13.313756942749023
    9. '+=(' → logprob: -13.563756942749023
    10. '++' → logprob: -14.063756942749023

Token 84: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.684157026233152e-05
    2. ' input' → logprob: -9.500077247619629
    3. 'int' → logprob: -13.625077247619629
    4. '       ' → logprob: -15.375077247619629
    5. '<input' → logprob: -15.750077247619629
    6. '   ' → logprob: -16.250076293945312
    7. '=input' → logprob: -16.375076293945312
    8. '(input' → logprob: -16.625076293945312
    9. '10' → logprob: -17.125076293945312
    10. '           ' → logprob: -17.250076293945312

Token 85: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.723352049040841e-06
    2. 'list' → logprob: -12.375004768371582
    3. 'List' → logprob: -15.625004768371582
    4. '_count' → logprob: -16.500003814697266
    5. '[_' → logprob: -17.250003814697266
    6. '[' → logprob: -18.125003814697266
    7. '$list' → logprob: -18.625003814697266
    8. '```' → logprob: -18.625003814697266
    9. '-list' → logprob: -18.875003814697266
    10. '"_' → logprob: -19.000003814697266

Token 86: '_c' (ID: 1303)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0007625799626111984
    2. '_c' → logprob: -7.375762462615967
    3. '_a' → logprob: -10.125762939453125
    4. '```' → logprob: -10.250762939453125
    5. '_s' → logprob: -11.250762939453125
    6. ')_' → logprob: -12.000762939453125
    7. ''_' → logprob: -12.125762939453125
    8. ' _' → logprob: -12.125762939453125
    9. '_' → logprob: -12.250762939453125
    10. '}_' → logprob: -12.375762939453125

Token 87: '[input' (ID: 157156)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.06207624822854996
    2. '[' → logprob: -2.8120763301849365
    3. '[in' → logprob: -10.312076568603516
    4. '\[' → logprob: -11.062076568603516
    5. '[input' → logprob: -11.312076568603516
    6. '[Index' → logprob: -11.562076568603516
    7. '```' → logprob: -11.687076568603516
    8. '[ind' → logprob: -12.062076568603516
    9. 'index' → logprob: -12.437076568603516
    10. '[
' → logprob: -12.687076568603516

Token 88: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00890763197094202
    2. '_count' → logprob: -4.758907794952393
    3. 'list' → logprob: -9.133907318115234
    4. 'index' → logprob: -10.133907318115234
    5. 'count' → logprob: -10.258907318115234
    6. '[index' → logprob: -10.383907318115234
    7. 'List' → logprob: -10.633907318115234
    8. '[' → logprob: -11.133907318115234
    9. '_index' → logprob: -11.133907318115234
    10. 'a' → logprob: -12.258907318115234

Token 89: '_a' (ID: 10852)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.26364070177078247
    2. '_count' → logprob: -2.5136406421661377
    3. '_list' → logprob: -2.7636406421661377
    4. '[index' → logprob: -3.2636406421661377
    5. 'count' → logprob: -4.138640880584717
    6. 'user' → logprob: -5.013640880584717
    7. 'a' → logprob: -5.138640880584717
    8. 'list' → logprob: -5.388640880584717
    9. '_a' → logprob: -6.013640880584717
    10. ']' → logprob: -6.263640880584717

Token 90: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -7.362307223957032e-05
    2. 'index' → logprob: -9.625073432922363
    3. '[' → logprob: -12.250073432922363
    4. ' index' → logprob: -14.000073432922363
    5. '```' → logprob: -14.250073432922363
    6. ' [' → logprob: -14.625073432922363
    7. ' ' → logprob: -15.500073432922363
    8. '[in' → logprob: -16.37507438659668
    9. 's' → logprob: -16.50007438659668
    10. '	index' → logprob: -16.75007438659668

Token 91: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31961914896965027
    2. ']-' → logprob: -1.6946191787719727
    3. '[index' → logprob: -3.6946191787719727
    4. ' ]' → logprob: -4.069619178771973
    5. ']]' → logprob: -4.819619178771973
    6. 'index' → logprob: -4.819619178771973
    7. ' -' → logprob: -4.944619178771973
    8. '])' → logprob: -5.069619178771973
    9. ')]' → logprob: -5.694619178771973
    10. '[' → logprob: -5.944619178771973

Token 92: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07077153772115707
    2. ' -' → logprob: -2.6957714557647705
    3. ']-' → logprob: -7.44577169418335
    4. ']' → logprob: -8.695771217346191
    5. '1' → logprob: -9.695771217346191
    6. '()-' → logprob: -11.570771217346191
    7. '[' → logprob: -12.570771217346191
    8. ' ' → logprob: -12.820771217346191
    9. ')-' → logprob: -13.445771217346191
    10. ')' → logprob: -13.570771217346191

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001817297888919711
    2. ' ' → logprob: -8.625182151794434
    3. '   ' → logprob: -14.500182151794434
    4. '１' → logprob: -14.625182151794434
    5. '11' → logprob: -14.875182151794434
    6. '2' → logprob: -15.312682151794434
    7. '  ' → logprob: -16.187681198120117
    8. '0' → logprob: -16.750181198120117
    9. '۱' → logprob: -16.875181198120117
    10. '१' → logprob: -17.125181198120117

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. ' ' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.375298500061035
    4. '１' → logprob: -14.375298500061035
    5. '  ' → logprob: -15.312798500061035
    6. '2' → logprob: -15.375298500061035
    7. '11' → logprob: -16.37529754638672
    8. ' -' → logprob: -16.68779754638672
    9. '۱' → logprob: -16.93779754638672
    10. '0' → logprob: -17.00029754638672

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005831766175106168
    2. ')' → logprob: -7.875583171844482
    3. ' ]' → logprob: -8.87558364868164
    4. '])' → logprob: -10.25058364868164
    5. ')]' → logprob: -11.37558364868164
    6. ']
' → logprob: -12.25058364868164
    7. '<|end|>' → logprob: -12.37558364868164
    8. '}' → logprob: -12.87558364868164
    9. '+' → logprob: -13.50058364868164
    10. '']' → logprob: -14.37558364868164

Token 96: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011076712980866432
    2. '(total' → logprob: -4.511076927185059
    3. '('' → logprob: -11.261076927185059
    4. '("("' → logprob: -11.261076927185059
    5. '()' → logprob: -13.886076927185059
    6. ' (' → logprob: -14.386076927185059
    7. '(`' → logprob: -14.761076927185059
    8. '(
' → logprob: -15.011076927185059
    9. '(t' → logprob: -15.136076927185059
    10. 'total' → logprob: -15.386076927185059

Token 98: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.3856492842023727e-06
    2. 'score' → logprob: -14.250000953674316
    3. '_scores' → logprob: -15.000000953674316
    4. '_s' → logprob: -15.250000953674316
    5. '_' → logprob: -16.125001907348633
    6. '_sc' → logprob: -17.625001907348633
    7. 's' → logprob: -19.000001907348633
    8. 'Score' → logprob: -19.000001907348633
    9. '_SCORE' → logprob: -19.000001907348633
    10. ')' → logprob: -19.250001907348633

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '))' → logprob: -13.500001907348633
    3. ' )' → logprob: -15.250001907348633
    4. ')`' → logprob: -15.750001907348633
    5. ')
' → logprob: -18.500001907348633
    6. ')}' → logprob: -18.625001907348633
    7. '`)' → logprob: -18.750001907348633
    8. '）' → logprob: -19.125001907348633
    9. '')' → logprob: -19.500001907348633
    10. '})' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 84
Précision stricte (1ère position): 42.27%
Précision adaptée (1ère position): 43.30%
Précision (top 10): 86.60%
================================================================================
