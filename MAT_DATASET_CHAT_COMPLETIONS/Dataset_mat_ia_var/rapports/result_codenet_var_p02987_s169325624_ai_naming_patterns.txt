================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input_stream = sys.stdin

sys.setrecursionlimit(10 ** 7)

def input_int_iter(): return map(int, input_stream.readline().split())
def input_int0_iter(): return map(lambda x: int(x) - 1, input_stream.readline().split())
def input_float_iter(): return map(float, input_stream.readline().split())
def input_str_iter(): return input_stream.readline().split()
def input_str(): return input_stream.readline().rstrip()
def input_char_list(): return list(input_str())
def input_int(): return int(input_stream.readline())
def input_float(): return float(input_stream.readline())

from collections import defaultdict

input_string = input_str()
char_count_dict = defaultdict(int)
for char in input_string:
    char_count_dict[char] += 1

is_valid = True
for _, count in char_count_dict.items():
    if count != 2:
        is_valid = False
        break

print("Yes" if is_valid else "No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: '_stream' (ID: 29670)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005712154787033796
    2. '=' → logprob: -5.505712032318115
    3. '[' → logprob: -7.130712032318115
    4. ' =' → logprob: -8.255712509155273
    5. '(' → logprob: -8.755712509155273
    6. '.readline' → logprob: -9.505712509155273
    7. '.=' → logprob: -9.880712509155273
    8. ')' → logprob: -10.130712509155273
    9. '.read' → logprob: -10.130712509155273
    10. 's' → logprob: -10.255712509155273

Token 6: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3485104739665985
    2. ' sys' → logprob: -1.223510503768921
    3. 'input' → logprob: -10.5985107421875
    4. '(sys' → logprob: -11.4735107421875
    5. '	sys' → logprob: -11.9735107421875
    6. ' input' → logprob: -12.2235107421875
    7. ' iter' → logprob: -12.2235107421875
    8. 'iter' → logprob: -12.4735107421875
    9. '=sys' → logprob: -12.7235107421875
    10. ' ' → logprob: -13.0985107421875

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008491750340908766
    2. '.stdin' → logprob: -7.50084924697876
    3. '.stdout' → logprob: -9.000848770141602
    4. ' .' → logprob: -9.375848770141602
    5. '.argv' → logprob: -10.875848770141602
    6. '.import' → logprob: -11.000848770141602
    7. '.input' → logprob: -11.000848770141602
    8. '.readline' → logprob: -11.750848770141602
    9. '.`' → logprob: -12.500848770141602
    10. '.stderr' → logprob: -12.625848770141602

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018887175247073174
    2. '.readline' → logprob: -4.268887042999268
    3. '.read' → logprob: -5.393887042999268
    4. 'read' → logprob: -9.518887519836426
    5. '.
' → logprob: -10.268887519836426
    6. '.readlines' → logprob: -11.143887519836426
    7. '[' → logprob: -11.518887519836426
    8. '.write' → logprob: -12.268887519836426
    9. '```' → logprob: -12.518887519836426
    10. '.

' → logprob: -12.768887519836426

Token 9: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05040114372968674
    2. '.readline' → logprob: -3.175401210784912
    3. '.read' → logprob: -4.925401210784912
    4. '.readlines' → logprob: -9.925400733947754
    5. 'read' → logprob: -10.425400733947754
    6. '=' → logprob: -11.300400733947754
    7. '.write' → logprob: -12.300400733947754
    8. '.Read' → logprob: -12.300400733947754
    9. '```' → logprob: -12.300400733947754
    10. '.
' → logprob: -13.175400733947754

Token 10: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00042626605136319995
    2. '.stdin' → logprob: -8.500426292419434
    3. '.readline' → logprob: -9.125426292419434
    4. '.stdout' → logprob: -9.625426292419434
    5. '.exit' → logprob: -11.750426292419434
    6. '.write' → logprob: -12.000426292419434
    7. '.`' → logprob: -12.125426292419434
    8. '.read' → logprob: -12.500426292419434
    9. '.import' → logprob: -12.625426292419434
    10. '.stderr' → logprob: -12.625426292419434

Token 11: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.772436797618866
    2. 'trace' → logprob: -1.8974368572235107
    3. 'set' → logprob: -2.5224368572235107
    4. 'limit' → logprob: -3.2724368572235107
    5. '_trace' → logprob: -3.2724368572235107
    6. '_' → logprob: -3.2724368572235107
    7. 'encoding' → logprob: -3.3974368572235107
    8. '_encoding' → logprob: -3.5224368572235107
    9. 's' → logprob: -3.8974368572235107
    10. '_limit' → logprob: -4.022436618804932

Token 12: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0022987050469964743
    2. 'urs' → logprob: -6.752298831939697
    3. 'ur' → logprob: -8.002298355102539
    4. 'limit' → logprob: -8.252298355102539
    5. 'urse' → logprob: -8.502298355102539
    6. 'ursive' → logprob: -8.877298355102539
    7. 't' → logprob: -10.502298355102539
    8. 'ut' → logprob: -10.627298355102539
    9. 'use' → logprob: -10.752298355102539
    10. 'utf' → logprob: -10.877298355102539

Token 13: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.00023894020705483854
    2. '_limit' → logprob: -8.375239372253418
    3. 'lim' → logprob: -12.750239372253418
    4. 'depth' → logprob: -12.750239372253418
    5. ' limit' → logprob: -13.750239372253418
    6. 'Limit' → logprob: -14.000239372253418
    7. '(limit' → logprob: -15.500239372253418
    8. '_depth' → logprob: -16.1252384185791
    9. 'al' → logprob: -16.2502384185791
    10. 'l' → logprob: -16.5002384185791

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.869017852295656e-06
    2. ' (' → logprob: -13.375006675720215
    3. '(
' → logprob: -13.500006675720215
    4. '(

' → logprob: -14.000006675720215
    5. '("("' → logprob: -14.000006675720215
    6. '((' → logprob: -14.125006675720215
    7. '40' → logprob: -14.500006675720215
    8. '(()' → logprob: -15.500006675720215
    9. '()' → logprob: -15.500006675720215
    10. '('' → logprob: -15.625006675720215

Token 15: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.25208455324172974
    2. '100' → logprob: -1.502084493637085
    3. ' ' → logprob: -8.877084732055664
    4. '500' → logprob: -11.377084732055664
    5. '1' → logprob: -13.252084732055664
    6. '300' → logprob: -13.502084732055664
    7. '400' → logprob: -14.502084732055664
    8. '200' → logprob: -15.002084732055664
    9. '999' → logprob: -15.002084732055664
    10. '  ' → logprob: -16.127084732055664

Token 16: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008697658777236938
    2. '6' → logprob: -5.008697509765625
    3. '000' → logprob: -7.008697509765625
    4. '4' → logprob: -7.883697509765625
    5. '7' → logprob: -8.258697509765625
    6. '5' → logprob: -8.383697509765625
    7. '00' → logprob: -8.508697509765625
    8. ')' → logprob: -12.508697509765625
    9. '3' → logprob: -12.758697509765625
    10. '2' → logprob: -13.633697509765625

Token 17: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0010729423956945539
    2. '9' → logprob: -6.876072883605957
    3. '8' → logprob: -10.376072883605957
    4. '6' → logprob: -11.626072883605957
    5. '```' → logprob: -18.501073837280273
    6. '**' → logprob: -19.001073837280273
    7. ' ' → logprob: -20.876073837280273
    8. '+' → logprob: -21.251073837280273
    9. '

' → logprob: -21.876073837280273
    10. '``' → logprob: -22.001073837280273

Token 18: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0001576506474521011
    2. '9' → logprob: -9.125157356262207
    3. '8' → logprob: -10.000157356262207
    4. '6' → logprob: -12.625157356262207
    5. '```' → logprob: -18.625158309936523
    6. '**' → logprob: -20.500158309936523
    7. ' ' → logprob: -20.875158309936523
    8. '

' → logprob: -21.625158309936523
    9. '+' → logprob: -21.875158309936523
    10. '``' → logprob: -22.125158309936523

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.500003814697266
    3. '))' → logprob: -15.875003814697266
    4. ')
' → logprob: -16.125003814697266
    5. ' ' → logprob: -17.375003814697266
    6. '*' → logprob: -18.500003814697266
    7. '）' → logprob: -18.750003814697266
    8. ')

' → logprob: -18.750003814697266
    9. '0' → logprob: -18.875003814697266
    10. ')))' → logprob: -18.875003814697266

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8871727585792542
    2. 'd' → logprob: -1.1371726989746094
    3. '
' → logprob: -2.1371726989746094
    4. '#' → logprob: -2.7621726989746094
    5. 'n' → logprob: -3.0121726989746094
    6. '\' → logprob: -4.262172698974609
    7. '' → logprob: -4.512172698974609
    8. ' 
' → logprob: -6.012172698974609
    9. '.' → logprob: -6.387172698974609
    10. '

' → logprob: -6.637172698974609

Token 21: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00719116535037756
    2. ' dfs' → logprob: -5.507191181182861
    3. '_' → logprob: -6.382191181182861
    4. ' space' → logprob: -8.132190704345703
    5. ' _' → logprob: -8.507190704345703
    6. ' process' → logprob: -8.632190704345703
    7. ' main' → logprob: -9.132190704345703
    8. ' factorial' → logprob: -9.257190704345703
    9. ' read' → logprob: -9.757190704345703
    10. ' f' → logprob: -9.882190704345703

Token 22: '_int' (ID: 12285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010862463153898716
    2. '():' → logprob: -5.260862350463867
    3. '()' → logprob: -5.885862350463867
    4. '("("' → logprob: -6.385862350463867
    5. '("")' → logprob: -8.010862350463867
    6. '_' → logprob: -8.385862350463867
    7. '('' → logprob: -8.885862350463867
    8. '(`' → logprob: -9.510862350463867
    9. '(
' → logprob: -9.635862350463867
    10. '_parent' → logprob: -10.135862350463867

Token 23: '_iter' (ID: 27043)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007200155407190323
    2. '()' → logprob: -5.007200241088867
    3. '(' → logprob: -7.882200241088867
    4. ' ():' → logprob: -9.757200241088867
    5. ' ()' → logprob: -10.882200241088867
    6. '():
' → logprob: -11.132200241088867
    7. '(prompt' → logprob: -13.007200241088867
    8. '（）' → logprob: -13.257200241088867
    9. '("")' → logprob: -13.507200241088867
    10. '32' → logprob: -13.882200241088867

Token 24: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.15892627835273743
    2. '()' → logprob: -2.033926248550415
    3. '(' → logprob: -4.533926486968994
    4. ' ()' → logprob: -5.783926486968994
    5. 'ator' → logprob: -6.783926486968994
    6. 'able' → logprob: -7.283926486968994
    7. ' ():' → logprob: -9.533926010131836
    8. '():
' → logprob: -9.783926010131836
    9. 'er' → logprob: -10.033926010131836
    10. '(()' → logprob: -10.408926010131836

Token 25: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4292305707931519
    2. ' ' → logprob: -1.6792305707931519
    3. '    ' → logprob: -1.9292305707931519
    4. ':' → logprob: -2.0542306900024414
    5. '   ' → logprob: -2.1792306900024414
    6. ' :' → logprob: -2.6792306900024414
    7. '()' → logprob: -3.6792306900024414
    8. ' ()' → logprob: -3.9292306900024414
    9. '():' → logprob: -4.054230690002441
    10. '  ' → logprob: -4.804230690002441

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01463398803025484
    2. ' iter' → logprob: -4.514634132385254
    3. 'map' → logprob: -6.264634132385254
    4. ' ' → logprob: -7.139634132385254
    5. ' int' → logprob: -7.264634132385254
    6. '(map' → logprob: -9.764634132385254
    7. 'int' → logprob: -10.639634132385254
    8. '  ' → logprob: -10.764634132385254
    9. '	map' → logprob: -10.764634132385254
    10. 'iter' → logprob: -11.014634132385254

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2519775629043579
    2. '(' → logprob: -1.501977562904358
    3. '(
' → logprob: -11.001977920532227
    4. '(lambda' → logprob: -11.626977920532227
    5. '(input' → logprob: -12.126977920532227
    6. '<|end|>' → logprob: -12.501977920532227
    7. '(iter' → logprob: -12.626977920532227
    8. '(str' → logprob: -12.876977920532227
    9. '<int' → logprob: -13.251977920532227
    10. '(

' → logprob: -13.626977920532227

Token 28: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04076654464006424
    2. '(sys' → logprob: -3.790766477584839
    3. '(input' → logprob: -4.165766716003418
    4. ')' → logprob: -6.540766716003418
    5. '(open' → logprob: -9.290766716003418
    6. '(
' → logprob: -9.415766716003418
    7. ' (' → logprob: -9.665766716003418
    8. '(iter' → logprob: -9.915766716003418
    9. '(stdin' → logprob: -10.540766716003418
    10. 'input' → logprob: -11.415766716003418

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11359545588493347
    2. 'input' → logprob: -2.238595485687256
    3. ' sys' → logprob: -7.363595485687256
    4. ')' → logprob: -9.738595008850098
    5. 'sys' → logprob: -10.363595008850098
    6. ' ' → logprob: -10.738595008850098
    7. '(input' → logprob: -11.988595008850098
    8. ' )' → logprob: -12.863595008850098
    9. ' ' → logprob: -12.988595008850098
    10. '	input' → logprob: -13.113595008850098

Token 30: '_stream' (ID: 29670)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.8724831342697144
    2. '()' → logprob: -1.1224831342697144
    3. '(' → logprob: -1.4974831342697144
    4. '_stream' → logprob: -3.872483253479004
    5. '(_' → logprob: -5.747483253479004
    6. '())' → logprob: -6.247483253479004
    7. '().__' → logprob: -6.497483253479004
    8. '(.' → logprob: -6.872483253479004
    9. '_' → logprob: -7.122483253479004
    10. ')' → logprob: -7.372483253479004

Token 31: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5256195068359375
    2. '.readline' → logprob: -0.9006195068359375
    3. '()' → logprob: -6.6506195068359375
    4. ')' → logprob: -7.2756195068359375
    5. '.' → logprob: -8.400619506835938
    6. '())' → logprob: -9.275619506835938
    7. '(' → logprob: -10.025619506835938
    8. '.read' → logprob: -10.150619506835938
    9. ' .' → logprob: -10.775619506835938
    10. ' readline' → logprob: -10.900619506835938

Token 32: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0078023988753557205
    2. '()' → logprob: -4.882802486419678
    3. '(' → logprob: -9.50780200958252
    4. '().' → logprob: -9.75780200958252
    5. ' ())' → logprob: -10.13280200958252
    6. ')' → logprob: -11.88280200958252
    7. '()))' → logprob: -12.50780200958252
    8. '())
' → logprob: -12.75780200958252
    9. '()]' → logprob: -13.13280200958252
    10. '();)' → logprob: -13.50780200958252

Token 33: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16677896678447723
    2. 'split' → logprob: -1.9167789220809937
    3. 'rstrip' → logprob: -5.041779041290283
    4. ')' → logprob: -9.916778564453125
    5. 'read' → logprob: -11.416778564453125
    6. ' strip' → logprob: -12.041778564453125
    7. ' split' → logprob: -13.541778564453125
    8. 'decode' → logprob: -13.791778564453125
    9. '(strip' → logprob: -14.666778564453125
    10. '())' → logprob: -14.791778564453125

Token 34: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00225529121235013
    2. ')' → logprob: -6.627255439758301
    3. '()' → logprob: -7.002255439758301
    4. '()))' → logprob: -11.7522554397583
    5. ' ())' → logprob: -12.3772554397583
    6. '(' → logprob: -12.7522554397583
    7. '())
' → logprob: -13.1272554397583
    8. '))' → logprob: -14.2522554397583
    9. '()]' → logprob: -14.8772554397583
    10. '())

' → logprob: -15.3772554397583

Token 35: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1334439218044281
    2. '

' → logprob: -2.508443832397461
    3. 'def' → logprob: -3.508443832397461
    4. '\n' → logprob: -5.383443832397461
    5. '' → logprob: -5.883443832397461
    6. '
' → logprob: -6.258443832397461
    7. '\' → logprob: -6.508443832397461
    8. '#' → logprob: -7.008443832397461
    9. '```' → logprob: -7.883443832397461
    10. 'newline' → logprob: -8.633443832397461

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0488399975001812
    2. 'input' → logprob: -3.048840045928955
    3. '_input' → logprob: -8.798839569091797
    4. ' ' → logprob: -9.798839569091797
    5. ' main' → logprob: -11.173839569091797
    6. ' int' → logprob: -11.298839569091797
    7. ' output' → logprob: -12.298839569091797
    8. ' ' → logprob: -13.048839569091797
    9. '_' → logprob: -13.173839569091797
    10. 'int' → logprob: -13.298839569091797

Token 37: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.7235241532325745
    2. '_' → logprob: -0.9735241532325745
    3. '_str' → logprob: -2.2235240936279297
    4. '_line' → logprob: -3.9735240936279297
    5. '_string' → logprob: -5.59852409362793
    6. '()' → logprob: -6.59852409362793
    7. '_array' → logprob: -7.34852409362793
    8. '_stream' → logprob: -7.59852409362793
    9. '_list' → logprob: -7.72352409362793
    10. '_s' → logprob: -7.84852409362793

Token 38: '0' (ID: 15)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3259042203426361
    2. '_' → logprob: -1.3259042501449585
    3. '_list' → logprob: -5.825904369354248
    4. 's' → logprob: -6.325904369354248
    5. '_line' → logprob: -6.325904369354248
    6. '_array' → logprob: -6.325904369354248
    7. '32' → logprob: -7.575904369354248
    8. ' ()' → logprob: -7.575904369354248
    9. '_s' → logprob: -7.575904369354248
    10. '_vector' → logprob: -8.07590389251709

Token 39: '_iter' (ID: 27043)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8045173287391663
    2. '_iter' → logprob: -1.0545172691345215
    3. '()' → logprob: -2.0545172691345215
    4. '_list' → logprob: -3.0545172691345215
    5. '_array' → logprob: -4.6795172691345215
    6. '_iterator' → logprob: -5.0545172691345215
    7. '_line' → logprob: -6.5545172691345215
    8. '():' → logprob: -6.9295172691345215
    9. '_split' → logprob: -7.1795172691345215
    10. '_input' → logprob: -7.8045172691345215

Token 40: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.743758760625497e-05
    2. ' ():' → logprob: -10.000077247619629
    3. '()' → logprob: -10.375077247619629
    4. ' ()' → logprob: -14.750077247619629
    5. '():
' → logprob: -15.500077247619629
    6. '()>' → logprob: -16.250078201293945
    7. '()">' → logprob: -17.125078201293945
    8. '()*' → logprob: -17.750078201293945
    9. '().' → logprob: -17.750078201293945
    10. '(' → logprob: -17.750078201293945

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10053100436925888
    2. ' ' → logprob: -2.3505311012268066
    3. 'return' → logprob: -8.600530624389648
    4. ' ' → logprob: -9.225530624389648
    5. ' ()' → logprob: -11.100530624389648
    6. ' def' → logprob: -11.100530624389648
    7. ' 
' → logprob: -12.350530624389648
    8. '()' → logprob: -14.100530624389648
    9. ':return' → logprob: -14.350530624389648
    10. ' retur' → logprob: -14.475530624389648

Token 42: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07911670207977295
    2. 'map' → logprob: -2.5791168212890625
    3. '(map' → logprob: -9.204116821289062
    4. ' ' → logprob: -9.954116821289062
    5. '	map' → logprob: -10.204116821289062
    6. '  ' → logprob: -11.454116821289062
    7. ' iter' → logprob: -12.641616821289062
    8. '[' → logprob: -12.829116821289062
    9. '   ' → logprob: -13.079116821289062
    10. 'imap' → logprob: -13.329116821289062

Token 43: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006218921043910086
    2. '(' → logprob: -7.500621795654297
    3. '(lambda' → logprob: -9.750621795654297
    4. 'int' → logprob: -12.500621795654297
    5. '<int' → logprob: -12.500621795654297
    6. '[int' → logprob: -13.750621795654297
    7. ' (' → logprob: -14.000621795654297
    8. '(
' → logprob: -14.875621795654297
    9. '=int' → logprob: -15.125621795654297
    10. ' int' → logprob: -15.875621795654297

Token 44: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4741077125072479
    2. ' x' → logprob: -0.9741077423095703
    3. 'a' → logprob: -10.84910774230957
    4. ' a' → logprob: -12.22410774230957
    5. 'y' → logprob: -13.59910774230957
    6. ' t' → logprob: -13.97410774230957
    7. 'z' → logprob: -14.34910774230957
    8. ' ' → logprob: -14.59910774230957
    9. '	x' → logprob: -14.59910774230957
    10. 't' → logprob: -14.72410774230957

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1050645262002945
    2. ':int' → logprob: -2.355064630508423
    3. ' :' → logprob: -5.355064392089844
    4. ':x' → logprob: -9.105064392089844
    5. ':str' → logprob: -12.230064392089844
    6. ':string' → logprob: -13.855064392089844
    7. 'int' → logprob: -14.105064392089844
    8. ':i' → logprob: -14.230064392089844
    9. ':uint' → logprob: -14.355064392089844
    10. ':Int' → logprob: -14.855064392089844

Token 46: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12750543653964996
    2. ' int' → logprob: -2.1275055408477783
    3. ' x' → logprob: -8.2525053024292
    4. 'x' → logprob: -8.2525053024292
    5. '	int' → logprob: -11.2525053024292
    6. '(int' → logprob: -11.2525053024292
    7. ' ' → logprob: -11.7525053024292
    8. 'str' → logprob: -12.3775053024292
    9. '<int' → logprob: -12.5025053024292
    10. '[int' → logprob: -12.7525053024292

Token 47: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002504197880625725
    2. '(' → logprob: -6.002504348754883
    3. 'x' → logprob: -10.752504348754883
    4. '(
' → logprob: -12.502504348754883
    5. ' (' → logprob: -12.752504348754883
    6. '
' → logprob: -16.252504348754883
    7. ')' → logprob: -16.377504348754883
    8. ')x' → logprob: -17.002504348754883
    9. '()' → logprob: -17.252504348754883
    10. '```' → logprob: -17.377504348754883

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10229238867759705
    2. '-' → logprob: -3.35229229927063
    3. ')-' → logprob: -3.47729229927063
    4. ' )' → logprob: -4.102292537689209
    5. ' -' → logprob: -4.227292537689209
    6. ' ' → logprob: -9.72729206085205
    7. '()' → logprob: -10.35229206085205
    8. '()-' → logprob: -10.60229206085205
    9. ' ' → logprob: -11.22729206085205
    10. '[' → logprob: -11.60229206085205

Token 49: ' -' (ID: 533)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6572222113609314
    2. '()-' → logprob: -1.0322222709655762
    3. ' ()' → logprob: -2.407222270965576
    4. '-' → logprob: -3.907222270965576
    5. '(x' → logprob: -5.157222270965576
    6. '(' → logprob: -5.157222270965576
    7. ' -' → logprob: -5.907222270965576
    8. ':' → logprob: -8.407221794128418
    9. ' (' → logprob: -8.407221794128418
    10. ')' → logprob: -8.907221794128418

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054882846772670746
    2. ' ' → logprob: -2.929882764816284
    3. '<|end|>' → logprob: -14.804883003234863
    4. '	' → logprob: -16.054882049560547
    5. ' ' → logprob: -17.054882049560547
    6. '  ' → logprob: -17.179882049560547
    7. '0' → logprob: -17.429882049560547
    8. '１' → logprob: -17.554882049560547
    9. '   ' → logprob: -18.179882049560547
    10. '    ' → logprob: -18.679882049560547

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '１' → logprob: -18.250804901123047
    4. '  ' → logprob: -19.625804901123047
    5. '<|end|>' → logprob: -19.875804901123047
    6. '   ' → logprob: -20.000804901123047
    7. '0' → logprob: -20.000804901123047
    8. ' ' → logprob: -20.125804901123047
    9. '	' → logprob: -20.313304901123047
    10. '১' → logprob: -20.375804901123047

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027444821898825467
    2. ',input' → logprob: -8.750274658203125
    3. ',x' → logprob: -9.250274658203125
    4. ' ,' → logprob: -11.625274658203125
    5. ')' → logprob: -11.750274658203125
    6. ',int' → logprob: -14.250274658203125
    7. ',)' → logprob: -14.625274658203125
    8. ',line' → logprob: -14.750274658203125
    9. '),' → logprob: -15.375274658203125
    10. '(' → logprob: -15.750274658203125

Token 53: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.42870545387268066
    2. ' input' → logprob: -1.0537054538726807
    3. ')' → logprob: -13.803705215454102
    4. 'sys' → logprob: -14.053705215454102
    5. ' sys' → logprob: -14.553705215454102
    6. '(input' → logprob: -14.803705215454102
    7. ' ' → logprob: -14.928705215454102
    8. '	input' → logprob: -15.428705215454102
    9. 'line' → logprob: -15.553705215454102
    10. ',input' → logprob: -15.928705215454102

Token 54: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.2948405128554441e-05
    2. 'stream' → logprob: -11.37501335144043
    3. '_str' → logprob: -14.25001335144043
    4. '_' → logprob: -15.37501335144043
    5. '_st' → logprob: -16.12501335144043
    6. 'Stream' → logprob: -16.50001335144043
    7. '_STREAM' → logprob: -16.50001335144043
    8. '_int' → logprob: -17.00001335144043
    9. '_line' → logprob: -17.12501335144043
    10. '_token' → logprob: -17.37501335144043

Token 55: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.27099974633893e-05
    2. '.' → logprob: -12.000012397766113
    3. '.readlines' → logprob: -12.375012397766113
    4. ')' → logprob: -13.250012397766113
    5. ').' → logprob: -14.625012397766113
    6. ' .' → logprob: -17.00001335144043
    7. ' readline' → logprob: -17.75001335144043
    8. '.)' → logprob: -17.87501335144043
    9. '.read' → logprob: -19.37501335144043
    10. '.writerow' → logprob: -19.37501335144043

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.64970643306151e-05
    2. ')' → logprob: -10.125086784362793
    3. '()' → logprob: -10.250086784362793
    4. '())' → logprob: -11.750086784362793
    5. ' ().' → logprob: -13.500086784362793
    6. ' ' → logprob: -14.750086784362793
    7. '.' → logprob: -15.000086784362793
    8. '(' → logprob: -15.125086784362793
    9. ' .' → logprob: -15.500086784362793
    10. '()[' → logprob: -15.875086784362793

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.500000953674316
    3. ' split' → logprob: -15.750000953674316
    4. 'spl' → logprob: -16.5
    5. 'rstrip' → logprob: -17.0
    6. '(split' → logprob: -19.125
    7. 'read' → logprob: -20.125
    8. '```' → logprob: -20.5
    9. '.split' → logprob: -21.0
    10. ')' → logprob: -21.125

Token 58: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009300300851464272
    2. ')' → logprob: -5.259300231933594
    3. '()' → logprob: -5.509300231933594
    4. '())
' → logprob: -12.759300231933594
    5. '()))' → logprob: -13.384300231933594
    6. ' ())' → logprob: -13.384300231933594
    7. '();)' → logprob: -14.009300231933594
    8. '()]' → logprob: -14.884300231933594
    9. '(' → logprob: -15.009300231933594
    10. '))' → logprob: -15.134300231933594

Token 59: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12420070171356201
    2. '
' → logprob: -2.2492008209228516
    3. '```' → logprob: -5.874200820922852
    4. '

' → logprob: -5.999200820922852
    5. '\n' → logprob: -6.249200820922852
    6. 'd' → logprob: -6.999200820922852
    7. '\' → logprob: -7.124200820922852
    8. '' → logprob: -7.874200820922852
    9. 'newline' → logprob: -8.124200820922852
    10. '#' → logprob: -8.249200820922852

Token 60: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16032373905181885
    2. 'input' → logprob: -1.9103237390518188
    3. '_input' → logprob: -10.160324096679688
    4. ' ' → logprob: -10.910324096679688
    5. 'n' → logprob: -11.035324096679688
    6. ' main' → logprob: -11.660324096679688
    7. '_' → logprob: -12.785324096679688
    8. 'int' → logprob: -13.160324096679688
    9. '	input' → logprob: -13.160324096679688
    10. '(input' → logprob: -13.410324096679688

Token 61: '_float' (ID: 44505)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.6185069680213928
    2. '_str' → logprob: -1.118506908416748
    3. '_' → logprob: -2.243506908416748
    4. '_line' → logprob: -4.118506908416748
    5. '_string' → logprob: -5.618506908416748
    6. '_stream' → logprob: -5.993506908416748
    7. '()' → logprob: -6.618506908416748
    8. '_text' → logprob: -7.618506908416748
    9. '_array' → logprob: -7.743506908416748
    10. '_s' → logprob: -7.993506908416748

Token 62: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.18031485378742218
    2. '_stream' → logprob: -2.555314779281616
    3. '_' → logprob: -2.680314779281616
    4. '_iterator' → logprob: -5.180315017700195
    5. '()' → logprob: -5.305315017700195
    6. '_line' → logprob: -5.930315017700195
    7. '():' → logprob: -6.430315017700195
    8. '_str' → logprob: -7.055315017700195
    9. '_iters' → logprob: -7.930315017700195
    10. '(' → logprob: -8.180315017700195

Token 63: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.6776029699249193e-05
    2. '()' → logprob: -11.00002670288086
    3. ' ():' → logprob: -11.62502670288086
    4. '():
' → logprob: -13.75002670288086
    5. '(' → logprob: -18.00002670288086
    6. ' ()' → logprob: -18.50002670288086
    7. '();' → logprob: -18.50002670288086
    8. '():

' → logprob: -18.62502670288086
    9. '():
' → logprob: -19.50002670288086
    10. '()*' → logprob: -19.62502670288086

Token 64: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.004334102850407362
    2. 'return' → logprob: -5.754333972930908
    3. ':' → logprob: -7.629333972930908
    4. ':return' → logprob: -7.754333972930908
    5. '():' → logprob: -8.879334449768066
    6. ' ' → logprob: -10.004334449768066
    7. ' :' → logprob: -10.879334449768066
    8. '()' → logprob: -11.629334449768066
    9. ' ' → logprob: -11.629334449768066
    10. '   ' → logprob: -12.379334449768066

Token 65: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011056075803935528
    2. ' map' → logprob: -4.511055946350098
    3. 'float' → logprob: -12.511055946350098
    4. '	map' → logprob: -13.136055946350098
    5. 'lambda' → logprob: -14.136055946350098
    6. ' ' → logprob: -14.261055946350098
    7. '(map' → logprob: -14.511055946350098
    8. 'iter' → logprob: -15.511055946350098
    9. 'm' → logprob: -15.636055946350098
    10. 'input' → logprob: -15.886055946350098

Token 66: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -2.236549335066229e-05
    2. 'float' → logprob: -11.375021934509277
    3. '(' → logprob: -11.875021934509277
    4. '<float' → logprob: -12.875021934509277
    5. ',float' → logprob: -14.250021934509277
    6. ' float' → logprob: -15.000021934509277
    7. '=float' → logprob: -15.250021934509277
    8. '	float' → logprob: -15.625021934509277
    9. '_float' → logprob: -17.250022888183594
    10. '```' → logprob: -18.125022888183594

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027182576013728976
    2. ',input' → logprob: -8.250271797180176
    3. ' ,' → logprob: -11.625271797180176
    4. '(' → logprob: -14.625271797180176
    5. ')' → logprob: -14.750271797180176
    6. ',float' → logprob: -15.625271797180176
    7. '(input' → logprob: -15.875271797180176
    8. 'input' → logprob: -16.000272750854492
    9. ',line' → logprob: -16.250272750854492
    10. '(),' → logprob: -16.750272750854492

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1269376575946808
    2. ' input' → logprob: -2.1269376277923584
    3. '(input' → logprob: -11.751937866210938
    4. ',input' → logprob: -14.251937866210938
    5. ')' → logprob: -14.626937866210938
    6. '	input' → logprob: -15.751937866210938
    7. '=input' → logprob: -15.751937866210938
    8. ' ' → logprob: -16.001937866210938
    9. '_input' → logprob: -16.126937866210938
    10. '<input' → logprob: -17.001937866210938

Token 69: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -4.60414821645827e-06
    2. 'stream' → logprob: -12.500004768371582
    3. '_STREAM' → logprob: -14.875004768371582
    4. '_float' → logprob: -15.125004768371582
    5. '_st' → logprob: -17.000003814697266
    6. '_' → logprob: -17.500003814697266
    7. 'float' → logprob: -17.750003814697266
    8. 'Stream' → logprob: -17.750003814697266
    9. '_Stream' → logprob: -17.750003814697266
    10. '_str' → logprob: -17.875003814697266

Token 70: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -16.0000057220459
    4. '.readlines' → logprob: -16.7500057220459
    5. '().' → logprob: -17.2500057220459
    6. ')' → logprob: -18.3750057220459
    7. ').' → logprob: -19.2500057220459
    8. '.writerow' → logprob: -20.3750057220459
    9. '   ' → logprob: -20.7500057220459
    10. '```' → logprob: -21.2500057220459

Token 71: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -13.000005722045898
    3. '()' → logprob: -13.000005722045898
    4. ' ().' → logprob: -14.625005722045898
    5. ' .' → logprob: -15.125005722045898
    6. '().__' → logprob: -16.2500057220459
    7. '.split' → logprob: -17.7500057220459
    8. '(' → logprob: -18.0000057220459
    9. ''s' → logprob: -18.0000057220459
    10. ' ' → logprob: -18.2500057220459

Token 72: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.375004768371582
    3. 'rstrip' → logprob: -14.875004768371582
    4. ' split' → logprob: -15.125004768371582
    5. 'spl' → logprob: -16.0000057220459
    6. 'read' → logprob: -17.7500057220459
    7. 'decode' → logprob: -17.8750057220459
    8. '(split' → logprob: -18.2500057220459
    9. ')' → logprob: -18.5000057220459
    10. '_split' → logprob: -18.5000057220459

Token 73: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06052587553858757
    2. ')' → logprob: -3.185525894165039
    3. '()' → logprob: -4.060525894165039
    4. '())
' → logprob: -9.185525894165039
    5. '()
' → logprob: -11.685525894165039
    6. ' ())' → logprob: -12.060525894165039
    7. '(' → logprob: -12.185525894165039
    8. ' )' → logprob: -12.685525894165039
    9. '()))' → logprob: -13.810525894165039
    10. ')
' → logprob: -13.810525894165039

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026377402245998383
    2. '
' → logprob: -4.026377201080322
    3. '\' → logprob: -5.776377201080322
    4. '```' → logprob: -5.901377201080322
    5. '\n' → logprob: -7.401377201080322
    6. '

' → logprob: -7.776377201080322
    7. '' → logprob: -7.901377201080322
    8. 'd' → logprob: -8.52637767791748
    9. '#' → logprob: -8.52637767791748
    10. '
' → logprob: -9.40137767791748

Token 75: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5776193141937256
    2. 'input' → logprob: -0.8276193141937256
    3. '_input' → logprob: -6.452619552612305
    4. '_' → logprob: -9.827619552612305
    5. 'int' → logprob: -11.577619552612305
    6. 'str' → logprob: -11.827619552612305
    7. '_str' → logprob: -11.952619552612305
    8. ' str' → logprob: -12.202619552612305
    9. ' ' → logprob: -12.827619552612305
    10. ' _' → logprob: -13.202619552612305

Token 76: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.05224037915468216
    2. '_' → logprob: -3.6772403717041016
    3. '_line' → logprob: -4.052240371704102
    4. '_string' → logprob: -5.677240371704102
    5. '_int' → logprob: -5.677240371704102
    6. '_stream' → logprob: -8.302240371704102
    7. '_float' → logprob: -8.427240371704102
    8. '_list' → logprob: -8.552240371704102
    9. '_s' → logprob: -9.302240371704102
    10. '_bytes' → logprob: -9.552240371704102

Token 77: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.6152309775352478
    2. '():' → logprob: -1.2402310371398926
    3. '_line' → logprob: -2.1152310371398926
    4. '()' → logprob: -3.7402310371398926
    5. '_' → logprob: -3.9902310371398926
    6. '_stream' → logprob: -5.740231037139893
    7. '_iterator' → logprob: -6.365231037139893
    8. ' ():' → logprob: -7.990231037139893
    9. '_raw' → logprob: -8.365230560302734
    10. '_array' → logprob: -8.865230560302734

Token 78: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016312669031322002
    2. '()' → logprob: -6.501631259918213
    3. ' ():' → logprob: -9.001631736755371
    4. '():
' → logprob: -12.376631736755371
    5. ' ()' → logprob: -13.751631736755371
    6. '()>' → logprob: -16.376630783081055
    7. '():

' → logprob: -16.876630783081055
    8. '(' → logprob: -16.876630783081055
    9. '():
' → logprob: -16.876630783081055
    10. '();' → logprob: -17.376630783081055

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.006684468127787113
    2. 'return' → logprob: -5.131684303283691
    3. ' ' → logprob: -7.756684303283691
    4. '    ' → logprob: -9.256684303283691
    5. '   ' → logprob: -9.256684303283691
    6. ' input' → logprob: -9.506684303283691
    7. ' ' → logprob: -10.881684303283691
    8. ' :' → logprob: -11.381684303283691
    9. ':' → logprob: -11.631684303283691
    10. '():' → logprob: -12.006684303283691

Token 80: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2091078907251358
    2. ' input' → logprob: -2.2091078758239746
    3. ' iter' → logprob: -3.0841078758239746
    4. 'iter' → logprob: -3.5841078758239746
    5. 'lambda' → logprob: -5.459107875823975
    6. ' lambda' → logprob: -6.959107875823975
    7. 'map' → logprob: -9.584108352661133
    8. 'str' → logprob: -10.209108352661133
    9. '(input' → logprob: -11.209108352661133
    10. ' map' → logprob: -11.584108352661133

Token 81: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -9.043078898685053e-05
    2. '_str' → logprob: -10.125090599060059
    3. 'stream' → logprob: -10.875090599060059
    4. '()' → logprob: -11.125090599060059
    5. '_' → logprob: -11.625090599060059
    6. '_string' → logprob: -13.125090599060059
    7. '_line' → logprob: -13.250090599060059
    8. '_st' → logprob: -13.875090599060059
    9. '_s' → logprob: -14.500090599060059
    10. '_STREAM' → logprob: -14.500090599060059

Token 82: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001463299704482779
    2. '.' → logprob: -8.87514591217041
    3. '.read' → logprob: -12.25014591217041
    4. '.readlines' → logprob: -13.50014591217041
    5. ' readline' → logprob: -15.37514591217041
    6. '.write' → logprob: -16.625146865844727
    7. '().' → logprob: -18.625146865844727
    8. '.Read' → logprob: -18.625146865844727
    9. 'read' → logprob: -19.000146865844727
    10. ' .' → logprob: -19.125146865844727

Token 83: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004104285035282373
    2. '().' → logprob: -5.504104137420654
    3. '())' → logprob: -12.129104614257812
    4. '()
' → logprob: -12.129104614257812
    5. '(' → logprob: -12.504104614257812
    6. '()\' → logprob: -12.754104614257812
    7. '()

' → logprob: -13.004104614257812
    8. '()]' → logprob: -13.754104614257812
    9. '()`' → logprob: -13.754104614257812
    10. ' ()' → logprob: -13.879104614257812

Token 84: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.009519843384623528
    2. 'rstrip' → logprob: -4.759520053863525
    3. 'split' → logprob: -7.009520053863525
    4. 'str' → logprob: -14.134519577026367
    5. 'read' → logprob: -14.759519577026367
    6. 'decode' → logprob: -15.384519577026367
    7. ' strip' → logprob: -16.134519577026367
    8. 'startswith' → logprob: -16.509519577026367
    9. 'rst' → logprob: -16.634519577026367
    10. 'rs' → logprob: -17.384519577026367

Token 85: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005469570169225335
    2. '(' → logprob: -7.750546932220459
    3. '()
' → logprob: -9.375547409057617
    4. '()\' → logprob: -11.250547409057617
    5. '()

' → logprob: -11.750547409057617
    6. '()<' → logprob: -13.000547409057617
    7. ' ()' → logprob: -13.250547409057617
    8. '()`' → logprob: -13.875547409057617
    9. '()]' → logprob: -14.250547409057617
    10. '())' → logprob: -14.250547409057617

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3232641816139221
    2. '
' → logprob: -1.9482641220092773
    3. '

' → logprob: -2.0732641220092773
    4. '```' → logprob: -5.948264122009277
    5. '\' → logprob: -6.698264122009277
    6. '' → logprob: -6.948264122009277
    7. '#' → logprob: -7.198264122009277
    8. '\n' → logprob: -7.323264122009277
    9. '
' → logprob: -7.698264122009277
    10. 'newline' → logprob: -8.198264122009277

Token 87: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16054631769657135
    2. 'input' → logprob: -1.9105463027954102
    3. '_input' → logprob: -8.16054630279541
    4. ' ' → logprob: -11.28554630279541
    5. '(input' → logprob: -12.41054630279541
    6. '_' → logprob: -12.78554630279541
    7. ' str' → logprob: -13.03554630279541
    8. ' _' → logprob: -13.03554630279541
    9. 'n' → logprob: -13.28554630279541
    10. '=input' → logprob: -13.41054630279541

Token 88: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.9211564660072327
    2. '_' → logprob: -1.296156406402588
    3. '_line' → logprob: -1.296156406402588
    4. '_int' → logprob: -3.046156406402588
    5. '()' → logprob: -5.296156406402588
    6. ' _' → logprob: -7.796156406402588
    7. '_s' → logprob: -8.046156883239746
    8. '_string' → logprob: -8.171156883239746
    9. '_raw' → logprob: -8.296156883239746
    10. '_uint' → logprob: -9.046156883239746

Token 89: '():' (ID: 9442)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.29496264457702637
    2. '()' → logprob: -1.4199626445770264
    3. 'line' → logprob: -4.5449628829956055
    4. '_iter' → logprob: -6.6699628829956055
    5. '_' → logprob: -8.169962882995605
    6. '_list' → logprob: -8.669962882995605
    7. '():' → logprob: -8.794962882995605
    8. ' ()' → logprob: -8.794962882995605
    9. '_str' → logprob: -8.919962882995605
    10. '_LINE' → logprob: -9.169962882995605

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05335196107625961
    2. ' input' → logprob: -3.678351879119873
    3. ' ' → logprob: -4.178351879119873
    4. 'return' → logprob: -4.678351879119873
    5. 'input' → logprob: -6.428351879119873
    6. '    ' → logprob: -7.928351879119873
    7. ' ' → logprob: -9.678352355957031
    8. '   ' → logprob: -10.928352355957031
    9. ':return' → logprob: -13.178352355957031
    10. '_input' → logprob: -13.428352355957031

Token 91: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868734836578369
    2. ' input' → logprob: -1.136873483657837
    3. ' ' → logprob: -13.386873245239258
    4. '(input' → logprob: -14.636873245239258
    5. '	input' → logprob: -16.261873245239258
    6. '=input' → logprob: -16.386873245239258
    7. ' ' → logprob: -16.511873245239258
    8. 'sys' → logprob: -16.761873245239258
    9. ' sys' → logprob: -17.136873245239258
    10. 'inp' → logprob: -17.386873245239258

Token 92: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.00012594614236149937
    2. '_str' → logprob: -9.750125885009766
    3. '_' → logprob: -9.875125885009766
    4. '_st' → logprob: -12.000125885009766
    5. '()' → logprob: -12.125125885009766
    6. 'stream' → logprob: -13.375125885009766
    7. '_line' → logprob: -14.000125885009766
    8. '_s' → logprob: -14.250125885009766
    9. '(' → logprob: -15.000125885009766
    10. '_STREAM' → logprob: -15.250125885009766

Token 93: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -13.125003814697266
    3. '.read' → logprob: -13.125003814697266
    4. ' readline' → logprob: -15.750003814697266
    5. '_read' → logprob: -18.125003814697266
    6. 'read' → logprob: -19.125003814697266
    7. ' .' → logprob: -19.250003814697266
    8. '_stream' → logprob: -19.250003814697266
    9. '.readlines' → logprob: -19.500003814697266
    10. '().' → logprob: -19.625003814697266

Token 94: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002229713834822178
    2. '().' → logprob: -6.127229690551758
    3. '(' → logprob: -11.252229690551758
    4. ' ()' → logprob: -11.627229690551758
    5. '()
' → logprob: -11.877229690551758
    6. ')' → logprob: -12.627229690551758
    7. '())' → logprob: -12.877229690551758
    8. '`()' → logprob: -13.002229690551758
    9. '>()' → logprob: -13.752229690551758
    10. '()\' → logprob: -13.877229690551758

Token 95: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2519460618495941
    2. 'rstrip' → logprob: -1.5019460916519165
    3. 'read' → logprob: -11.126946449279785
    4. 'decode' → logprob: -13.626946449279785
    5. 'rst' → logprob: -14.376946449279785
    6. ' strip' → logprob: -14.876946449279785
    7. 'str' → logprob: -16.62694549560547
    8. 'rs' → logprob: -17.50194549560547
    9. '_strip' → logprob: -18.12694549560547
    10. 'r' → logprob: -18.25194549560547

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03210228681564331
    2. '(' → logprob: -3.532102346420288
    3. '()
' → logprob: -7.032102108001709
    4. '()\' → logprob: -7.157102108001709
    5. '\' → logprob: -8.532102584838867
    6. 'def' → logprob: -8.907102584838867
    7. '(
' → logprob: -9.657102584838867
    8. '()

' → logprob: -9.782102584838867
    9. 'newline' → logprob: -9.782102584838867
    10. '_' → logprob: -9.907102584838867

Token 97: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6113283038139343
    2. 'def' → logprob: -0.8613283038139343
    3. '

' → logprob: -3.611328363418579
    4. '\n' → logprob: -6.361328125
    5. '' → logprob: -6.486328125
    6. '```' → logprob: -6.986328125
    7. '#' → logprob: -7.236328125
    8. '
' → logprob: -7.486328125
    9. '


' → logprob: -8.111328125
    10. '\' → logprob: -8.236328125

Token 98: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4336097836494446
    2. 'input' → logprob: -1.0586097240447998
    3. ' main' → logprob: -5.933609962463379
    4. '_input' → logprob: -6.683609962463379
    5. '_' → logprob: -7.933609962463379
    6. 'main' → logprob: -9.058609962463379
    7. 'n' → logprob: -9.308609962463379
    8. 'int' → logprob: -9.558609962463379
    9. 'put' → logprob: -9.808609962463379
    10. ' ' → logprob: -9.808609962463379

Token 99: '_char' (ID: 23398)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035507455468177795
    2. '_int' → logprob: -3.5355074405670166
    3. '_line' → logprob: -5.910507678985596
    4. '_str' → logprob: -6.035507678985596
    5. '()' → logprob: -8.035507202148438
    6. ' _' → logprob: -9.535507202148438
    7. '_uint' → logprob: -10.035507202148438
    8. '_integer' → logprob: -10.660507202148438
    9. '_string' → logprob: -10.910507202148438
    10. '_Int' → logprob: -11.035507202148438

Token 100: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7863360047340393
    2. '_array' → logprob: -1.9113359451293945
    3. '():' → logprob: -2.0363359451293945
    4. '()' → logprob: -2.0363359451293945
    5. 's' → logprob: -2.7863359451293945
    6. '_list' → logprob: -3.0363359451293945
    7. '_str' → logprob: -4.7863359451293945
    8. '_iter' → logprob: -4.7863359451293945
    9. '_line' → logprob: -6.6613359451293945
    10. '_string' → logprob: -6.7863359451293945

Token 101: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03812388703227043
    2. '()' → logprob: -3.288123846054077
    3. ' ():' → logprob: -10.038124084472656
    4. ' ()' → logprob: -10.288124084472656
    5. '():
' → logprob: -12.913124084472656
    6. '()>' → logprob: -15.038124084472656
    7. '()]' → logprob: -15.288124084472656
    8. '(' → logprob: -15.288124084472656
    9. '（）' → logprob: -15.538124084472656
    10. '():

' → logprob: -15.913124084472656

Token 102: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03745982050895691
    2. 'return' → logprob: -3.4124598503112793
    3. '()' → logprob: -6.787459850311279
    4. ' ()' → logprob: -6.787459850311279
    5. ' list' → logprob: -7.412459850311279
    6. ' ' → logprob: -7.537459850311279
    7. ' =' → logprob: -8.787459373474121
    8. '():' → logprob: -9.037459373474121
    9. 'list' → logprob: -10.412459373474121
    10. '   ' → logprob: -10.537459373474121

Token 103: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005251780152320862
    2. ' list' → logprob: -5.255251884460449
    3. 'input' → logprob: -11.00525188446045
    4. '(list' → logprob: -14.38025188446045
    5. ' ' → logprob: -15.38025188446045
    6. '[list' → logprob: -15.50525188446045
    7. '	list' → logprob: -15.75525188446045
    8. ' input' → logprob: -16.130250930786133
    9. '=list' → logprob: -17.630250930786133
    10. '   ' → logprob: -17.630250930786133

Token 104: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1270246058702469
    2. '(' → logprob: -2.1270246505737305
    3. 'input' → logprob: -10.75202465057373
    4. '()' → logprob: -11.00202465057373
    5. '(str' → logprob: -11.12702465057373
    6. '(sys' → logprob: -11.75202465057373
    7. '(s' → logprob: -12.00202465057373
    8. '(
' → logprob: -12.25202465057373
    9. '(eval' → logprob: -12.50202465057373
    10. '(lambda' → logprob: -12.75202465057373

Token 105: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.049391359090805054
    2. '_stream' → logprob: -3.049391269683838
    3. '_' → logprob: -7.299391269683838
    4. '_char' → logprob: -9.299391746520996
    5. '()' → logprob: -11.299391746520996
    6. '_chars' → logprob: -11.549391746520996
    7. '_string' → logprob: -11.799391746520996
    8. 'str' → logprob: -13.299391746520996
    9. 'stream' → logprob: -13.924391746520996
    10. '_STR' → logprob: -14.174391746520996

Token 106: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002210596576333046
    2. '()' → logprob: -8.500221252441406
    3. ' ())' → logprob: -11.250221252441406
    4. '())
' → logprob: -13.125221252441406
    5. '()))' → logprob: -13.750221252441406
    6. ')' → logprob: -13.750221252441406
    7. '();)' → logprob: -15.875221252441406
    8. '()]' → logprob: -17.125221252441406
    9. '().' → logprob: -17.125221252441406
    10. '());' → logprob: -17.125221252441406

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019921444356441498
    2. '
' → logprob: -4.01992130279541
    3. '

' → logprob: -7.51992130279541
    4. 'class' → logprob: -8.01992130279541
    5. '\' → logprob: -8.51992130279541
    6. '\n' → logprob: -8.64492130279541
    7. '#' → logprob: -9.26992130279541
    8. '```' → logprob: -9.51992130279541
    9. '    
' → logprob: -9.76992130279541
    10. '  
' → logprob: -9.76992130279541

Token 108: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3144366443157196
    2. 'input' → logprob: -1.314436674118042
    3. ' main' → logprob: -7.939436435699463
    4. 'int' → logprob: -8.814436912536621
    5. 'print' → logprob: -9.314436912536621
    6. 'main' → logprob: -9.314436912536621
    7. ' print' → logprob: -9.439436912536621
    8. '_input' → logprob: -9.564436912536621
    9. ' int' → logprob: -9.939436912536621
    10. 'output' → logprob: -9.939436912536621

Token 109: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.22349408268928528
    2. '_' → logprob: -1.973494052886963
    3. '_line' → logprob: -3.223494052886963
    4. '_list' → logprob: -4.598494052886963
    5. '_str' → logprob: -4.973494052886963
    6. '_uint' → logprob: -6.973494052886963
    7. '_raw' → logprob: -7.723494052886963
    8. '_val' → logprob: -7.723494052886963
    9. '()' → logprob: -7.848494052886963
    10. '_float' → logprob: -7.848494052886963

Token 110: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021596161648631096
    2. '():' → logprob: -3.8965961933135986
    3. ' ()' → logprob: -7.6465959548950195
    4. '_list' → logprob: -8.52159595489502
    5. '_' → logprob: -8.64659595489502
    6. '():
' → logprob: -10.14659595489502
    7. '`()' → logprob: -10.14659595489502
    8. ']()' → logprob: -10.39659595489502
    9. '()">' → logprob: -11.02159595489502
    10. '()>' → logprob: -11.39659595489502

Token 111: ' return' (ID: 622)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06726152449846268
    2. ' return' → logprob: -2.8172614574432373
    3. 'int' → logprob: -5.567261695861816
    4. ' ' → logprob: -6.692261695861816
    5. ' ' → logprob: -8.942261695861816
    6. 'return' → logprob: -9.692261695861816
    7. '=int' → logprob: -11.692261695861816
    8. ' i' → logprob: -12.442261695861816
    9. ' 
' → logprob: -12.567261695861816
    10. '(int' → logprob: -13.067261695861816

Token 112: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740910232067108
    2. ' int' → logprob: -0.9740910530090332
    3. '	int' → logprob: -11.974090576171875
    4. ' ' → logprob: -11.974090576171875
    5. '(int' → logprob: -14.474090576171875
    6. '  ' → logprob: -14.724090576171875
    7. '   ' → logprob: -15.599090576171875
    8. '<int' → logprob: -16.474090576171875
    9. 'ints' → logprob: -17.099090576171875
    10. ' map' → logprob: -17.099090576171875

Token 113: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20148701965808868
    2. '(' → logprob: -1.7014870643615723
    3. '(
' → logprob: -9.576486587524414
    4. '(

' → logprob: -13.076486587524414
    5. 'input' → logprob: -13.201486587524414
    6. '(sys' → logprob: -15.701486587524414
    7. ' (' → logprob: -16.451486587524414
    8. '(inp' → logprob: -16.576486587524414
    9. '()' → logprob: -17.326486587524414
    10. '(in' → logprob: -17.451486587524414

Token 114: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -0.001167364651337266
    2. '_str' → logprob: -7.251167297363281
    3. '_' → logprob: -7.876167297363281
    4. '()' → logprob: -9.876167297363281
    5. 'stream' → logprob: -11.626167297363281
    6. '(' → logprob: -12.251167297363281
    7. '_line' → logprob: -12.751167297363281
    8. '_STREAM' → logprob: -12.876167297363281
    9. '(stream' → logprob: -13.376167297363281
    10. '_(' → logprob: -13.751167297363281

Token 115: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008626633323729038
    2. '().' → logprob: -4.758626461029053
    3. '.' → logprob: -11.883626937866211
    4. '.read' → logprob: -13.133626937866211
    5. '()' → logprob: -13.258626937866211
    6. ' .' → logprob: -14.133626937866211
    7. ')' → logprob: -14.883626937866211
    8. ' ().' → logprob: -15.883626937866211
    9. '.stdin' → logprob: -16.63362693786621
    10. '())' → logprob: -16.88362693786621

Token 116: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009940951131284237
    2. '()' → logprob: -4.759941101074219
    3. '().' → logprob: -6.634941101074219
    4. ' ())' → logprob: -12.009941101074219
    5. '())
' → logprob: -13.634941101074219
    6. ')' → logprob: -13.634941101074219
    7. '();)' → logprob: -13.884941101074219
    8. '()]' → logprob: -14.009941101074219
    9. '()))' → logprob: -14.384941101074219
    10. '()
' → logprob: -15.134941101074219

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01572415791451931
    2. '
' → logprob: -4.765724182128906
    3. '\' → logprob: -5.515724182128906
    4. '\n' → logprob: -7.265724182128906
    5. '  
' → logprob: -7.890724182128906
    6. '' → logprob: -8.015724182128906
    7. '#' → logprob: -8.265724182128906
    8. '    
' → logprob: -8.515724182128906
    9. '```' → logprob: -8.515724182128906
    10. '<|end|>' → logprob: -8.765724182128906

Token 118: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5234655737876892
    2. ' input' → logprob: -0.8984655737876892
    3. '_input' → logprob: -8.648465156555176
    4. 'int' → logprob: -10.273465156555176
    5. ' ' → logprob: -10.398465156555176
    6. '_' → logprob: -10.523465156555176
    7. ' float' → logprob: -11.148465156555176
    8. '=input' → logprob: -11.273465156555176
    9. 'float' → logprob: -12.148465156555176
    10. ' int' → logprob: -12.273465156555176

Token 119: '_float' (ID: 44505)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.059711962938308716
    2. '_' → logprob: -3.6847119331359863
    3. '_float' → logprob: -3.8097119331359863
    4. '_line' → logprob: -5.434711933135986
    5. '_int' → logprob: -6.309711933135986
    6. '_char' → logprob: -6.309711933135986
    7. '_list' → logprob: -6.809711933135986
    8. '_string' → logprob: -7.559711933135986
    9. '_uint' → logprob: -7.684711933135986
    10. '_array' → logprob: -9.184712409973145

Token 120: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011829655850306153
    2. '()' → logprob: -6.751183032989502
    3. '():
' → logprob: -11.626182556152344
    4. ' ():' → logprob: -13.126182556152344
    5. '()>' → logprob: -14.626182556152344
    6. '()">' → logprob: -15.251182556152344
    7. '()]' → logprob: -15.626182556152344
    8. ' ()' → logprob: -15.626182556152344
    9. '()<' → logprob: -16.126182556152344
    10. '()<<' → logprob: -16.376182556152344

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5760546326637268
    2. ' return' → logprob: -0.8260546326637268
    3. 'def' → logprob: -9.451054573059082
    4. ')' → logprob: -11.201054573059082
    5. 'float' → logprob: -11.701054573059082
    6. ' float' → logprob: -12.201054573059082
    7. ' ' → logprob: -12.326054573059082
    8. '	return' → logprob: -13.326054573059082
    9. ' def' → logprob: -13.576054573059082
    10. ' ' → logprob: -15.076054573059082

Token 122: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.615255839889869e-05
    2. ' float' → logprob: -9.250096321105957
    3. '(float' → logprob: -18.62509536743164
    4. '	float' → logprob: -19.25009536743164
    5. 'loat' → logprob: -20.12509536743164
    6. '=float' → logprob: -20.37509536743164
    7. '<float' → logprob: -21.50009536743164
    8. '  ' → logprob: -21.62509536743164
    9. '   ' → logprob: -21.75009536743164
    10. 'flo' → logprob: -22.00009536743164

Token 123: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.020695921033620834
    2. '(' → logprob: -3.895695924758911
    3. '()' → logprob: -9.145695686340332
    4. '(
' → logprob: -11.020695686340332
    5. '(sys' → logprob: -11.270695686340332
    6. ' (' → logprob: -12.520695686340332
    7. '(output' → logprob: -12.895695686340332
    8. '(stdin' → logprob: -13.020695686340332
    9. '(import' → logprob: -13.520695686340332
    10. '(

' → logprob: -13.895695686340332

Token 124: '_stream' (ID: 29670)
  Prédit: '_stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stream' → logprob: -1.4140441635390744e-05
    2. '_' → logprob: -11.625014305114746
    3. '_STREAM' → logprob: -13.250014305114746
    4. 'stream' → logprob: -13.500014305114746
    5. '_st' → logprob: -14.500014305114746
    6. '()' → logprob: -14.500014305114746
    7. '_Stream' → logprob: -15.000014305114746
    8. '(stream' → logprob: -15.500014305114746
    9. '(' → logprob: -15.500014305114746
    10. '_str' → logprob: -16.12501335144043

Token 125: '.readline' (ID: 74673)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7596981525421143
    2. '.readline' → logprob: -0.7596981525421143
    3. '()' → logprob: -2.7596981525421143
    4. ')' → logprob: -7.759697914123535
    5. '().' → logprob: -7.884697914123535
    6. '())
' → logprob: -9.384697914123535
    7. '_stream' → logprob: -9.384697914123535
    8. '()
' → logprob: -10.384697914123535
    9. '()[' → logprob: -11.134697914123535
    10. '_line' → logprob: -11.259697914123535

Token 126: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001194990472868085
    2. '()' → logprob: -6.751194953918457
    3. '())
' → logprob: -11.126194953918457
    4. ')' → logprob: -12.126194953918457
    5. ' ())' → logprob: -13.001194953918457
    6. '().' → logprob: -13.626194953918457
    7. '())

' → logprob: -14.626194953918457
    8. '()[' → logprob: -15.501194953918457
    9. '()
' → logprob: -15.501194953918457
    10. '();)' → logprob: -15.751194953918457

Token 127: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008659643935970962
    2. 'class' → logprob: -7.375865936279297
    3. 'd' → logprob: -9.625865936279297
    4. 'n' → logprob: -10.000865936279297
    5. '\' → logprob: -10.125865936279297
    6. '#' → logprob: -10.875865936279297
    7. 'N' → logprob: -11.500865936279297
    8. '
' → logprob: -11.625865936279297
    9. '\n' → logprob: -11.625865936279297
    10. 'D' → logprob: -11.875865936279297

Token 128: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.06987273693084717
    2. ' math' → logprob: -3.0698728561401367
    3. 'collections' → logprob: -4.194872856140137
    4. ' itertools' → logprob: -5.569872856140137
    5. ' typing' → logprob: -6.569872856140137
    6. ' sys' → logprob: -7.569872856140137
    7. ' functools' → logprob: -9.444872856140137
    8. ' io' → logprob: -9.444872856140137
    9. ' ' → logprob: -9.819872856140137
    10. 'math' → logprob: -10.819872856140137

Token 129: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11284370720386505
    2. 'import' → logprob: -2.2378437519073486
    3. ' ' → logprob: -11.86284351348877
    4. ' defaultdict' → logprob: -12.23784351348877
    5. '	import' → logprob: -13.11284351348877
    6. '.' → logprob: -13.73784351348877
    7. ' impor' → logprob: -13.86284351348877
    8. ' imports' → logprob: -14.36284351348877
    9. ' importar' → logprob: -14.36284351348877
    10. 'from' → logprob: -14.48784351348877

Token 130: ' defaultdict' (ID: 107098)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.4560724198818207
    2. 'deque' → logprob: -1.206072449684143
    3. ' defaultdict' → logprob: -2.7060723304748535
    4. ' collections' → logprob: -10.581072807312012
    5. 'collections' → logprob: -10.831072807312012
    6. 'default' → logprob: -11.081072807312012
    7. 'de' → logprob: -14.206072807312012
    8. ' functools' → logprob: -15.081072807312012
    9. ' Counter' → logprob: -15.206072807312012
    10. ' de' → logprob: -15.706072807312012

Token 131: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12704318761825562
    2. '

' → logprob: -2.6270432472229004
    3. 'def' → logprob: -3.6270432472229004
    4. 'import' → logprob: -4.6270432472229
    5. 'default' → logprob: -5.7520432472229
    6. '
' → logprob: -6.1270432472229
    7. ',' → logprob: -6.7520432472229
    8. 'class' → logprob: -7.3770432472229
    9. 'from' → logprob: -7.3770432472229
    10. 'deque' → logprob: -7.5020432472229

Token 132: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3419976830482483
    2. 'graph' → logprob: -1.8419976234436035
    3. 'class' → logprob: -2.2169976234436035
    4. 'n' → logprob: -3.9669976234436035
    5. 'd' → logprob: -6.9669976234436035
    6. 'N' → logprob: -7.3419976234436035
    7. 'dp' → logprob: -7.4669976234436035
    8. 'default' → logprob: -7.8419976234436035
    9. 'depth' → logprob: -9.466998100280762
    10. 'import' → logprob: -9.591998100280762

Token 133: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00582901481539011
    2. '()' → logprob: -6.630828857421875
    3. '_str' → logprob: -6.755828857421875
    4. '_int' → logprob: -6.880828857421875
    5. '_list' → logprob: -7.005828857421875
    6. '_data' → logprob: -7.755828857421875
    7. ' =' → logprob: -8.880828857421875
    8. '_line' → logprob: -8.880828857421875
    9. '(' → logprob: -9.505828857421875
    10. '_lines' → logprob: -9.630828857421875

Token 134: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27478986978530884
    2. ' =' → logprob: -1.899789810180664
    3. '=' → logprob: -2.774789810180664
    4. 's' → logprob: -3.899789810180664
    5. '_' → logprob: -6.149789810180664
    6. '_list' → logprob: -6.399789810180664
    7. '(' → logprob: -6.774789810180664
    8. '_line' → logprob: -7.274789810180664
    9. '_s' → logprob: -7.774789810180664
    10. ')' → logprob: -7.899789810180664

Token 135: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11300428211688995
    2. 'input' → logprob: -2.238004207611084
    3. ' ' → logprob: -9.488004684448242
    4. '""' → logprob: -9.863004684448242
    5. ' ""' → logprob: -11.488004684448242
    6. ' ''' → logprob: -11.738004684448242
    7. '"' → logprob: -11.738004684448242
    8. ' "' → logprob: -11.988004684448242
    9. '''' → logprob: -12.363004684448242
    10. '(input' → logprob: -12.988004684448242

Token 136: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22407981753349304
    2. '()' → logprob: -2.2240798473358154
    3. '_str' → logprob: -2.8490798473358154
    4. '_string' → logprob: -3.5990798473358154
    5. '_stream' → logprob: -5.224079608917236
    6. '(' → logprob: -6.599079608917236
    7. '_(' → logprob: -8.724080085754395
    8. '_line' → logprob: -9.099080085754395
    9. '()
' → logprob: -9.724080085754395
    10. '_
' → logprob: -10.224080085754395

Token 137: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005878544878214598
    2. '(' → logprob: -5.255878448486328
    3. '()
' → logprob: -8.255878448486328
    4. '_' → logprob: -9.005878448486328
    5. '[' → logprob: -10.005878448486328
    6. ')' → logprob: -10.630878448486328
    7. '(
' → logprob: -10.755878448486328
    8. '()

' → logprob: -10.755878448486328
    9. '()[' → logprob: -10.880878448486328
    10. '().' → logprob: -10.880878448486328

Token 138: 'char' (ID: 3257)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.7368839383125305
    2. 'char' → logprob: -1.4868838787078857
    3. 'counter' → logprob: -2.2368838787078857
    4. 'count' → logprob: -2.4868838787078857
    5. 'counts' → logprob: -2.9868838787078857
    6. 'd' → logprob: -3.7368838787078857
    7. 'frequency' → logprob: -4.486884117126465
    8. 'result' → logprob: -5.361884117126465
    9. 'dict' → logprob: -5.486884117126465
    10. 'cnt' → logprob: -5.486884117126465

Token 139: '_count' (ID: 7536)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.591373085975647
    2. '_count' → logprob: -1.216373085975647
    3. 's' → logprob: -2.0913729667663574
    4. '_freq' → logprob: -4.591372966766357
    5. '_map' → logprob: -5.591372966766357
    6. '_counter' → logprob: -5.841372966766357
    7. '_' → logprob: -6.216372966766357
    8. '_frequency' → logprob: -6.341372966766357
    9. 'count' → logprob: -6.841372966766357
    10. '_index' → logprob: -6.841372966766357

Token 140: '_dict' (ID: 11295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21979336440563202
    2. ' =' → logprob: -1.7197933197021484
    3. 's' → logprob: -4.219793319702148
    4. '[' → logprob: -5.719793319702148
    5. '_' → logprob: -9.344793319702148
    6. ' ' → logprob: -9.344793319702148
    7. '(' → logprob: -10.094793319702148
    8. ',' → logprob: -12.969793319702148
    9. '  ' → logprob: -13.719793319702148
    10. '   ' → logprob: -14.094793319702148

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160359188914299
    2. '=' → logprob: -1.9103591442108154
    3. '[' → logprob: -9.160359382629395
    4. ' ' → logprob: -11.035359382629395
    5. '(' → logprob: -12.160359382629395
    6. '.setdefault' → logprob: -12.535359382629395
    7. 's' → logprob: -13.785359382629395
    8. ' =
' → logprob: -14.160359382629395
    9. ' =[' → logprob: -14.410359382629395
    10. ' ={' → logprob: -14.535359382629395

Token 142: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.07924424111843109
    2. ' defaultdict' → logprob: -2.5792441368103027
    3. ' default' → logprob: -7.954244136810303
    4. '(default' → logprob: -13.329244613647461
    5. '.default' → logprob: -14.454244613647461
    6. '"default' → logprob: -14.954244613647461
    7. '	default' → logprob: -15.079244613647461
    8. ''default' → logprob: -15.579244613647461
    9. '_default' → logprob: -15.704244613647461
    10. 'def' → logprob: -16.45424461364746

Token 143: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022821188031230122
    2. '(lambda' → logprob: -8.625227928161621
    3. '(' → logprob: -10.500227928161621
    4. '<int' → logprob: -11.625227928161621
    5. 'int' → logprob: -11.750227928161621
    6. ' (' → logprob: -13.000227928161621
    7. '(<' → logprob: -13.875227928161621
    8. '[int' → logprob: -14.500227928161621
    9. '(
' → logprob: -14.750227928161621
    10. 'lambda' → logprob: -16.875228881835938

Token 144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006194456946104765
    2. ')
' → logprob: -5.131194591522217
    3. ')

' → logprob: -8.256194114685059
    4. '[' → logprob: -13.256194114685059
    5. ' )' → logprob: -13.631194114685059
    6. ',' → logprob: -13.881194114685059
    7. ')
' → logprob: -14.381194114685059
    8. '[input' → logprob: -14.631194114685059
    9. '(char' → logprob: -15.756194114685059
    10. ',char' → logprob: -16.006195068359375

Token 145: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002481008181348443
    2. ' for' → logprob: -6.002480983734131
    3. '
' → logprob: -12.252481460571289
    4. ' 
' → logprob: -14.877481460571289
    5. ')' → logprob: -17.62748146057129
    6. '  
' → logprob: -18.12748146057129
    7. '	for' → logprob: -18.37748146057129
    8. '```' → logprob: -18.50248146057129
    9. '[' → logprob: -18.62748146057129
    10. '

' → logprob: -18.75248146057129

Token 146: ' char' (ID: 1826)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.28915295004844666
    2. 'c' → logprob: -2.0391528606414795
    3. ' char' → logprob: -2.4141528606414795
    4. 'char' → logprob: -3.7891528606414795
    5. ' ch' → logprob: -5.039153099060059
    6. 'ch' → logprob: -6.039153099060059
    7. ' ' → logprob: -10.414153099060059
    8. '_char' → logprob: -12.039153099060059
    9. '	char' → logprob: -13.664153099060059
    10. '_' → logprob: -13.789153099060059

Token 147: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009936699643731117
    2. 'in' → logprob: -4.634936809539795
    3. ' ' → logprob: -9.134936332702637
    4. 's' → logprob: -10.634936332702637
    5. ' i' → logprob: -11.259936332702637
    6. '	in' → logprob: -11.634936332702637
    7. ',' → logprob: -12.134936332702637
    8. 'i' → logprob: -12.634936332702637
    9. '_in' → logprob: -12.759936332702637
    10. 'import' → logprob: -12.884936332702637

Token 148: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326204538345337
    2. ' input' → logprob: -1.3132619857788086
    3. '(input' → logprob: -15.313261985778809
    4. '<input' → logprob: -17.063262939453125
    5. ' ' → logprob: -17.438262939453125
    6. '	input' → logprob: -17.688262939453125
    7. '_input' → logprob: -17.938262939453125
    8. '[input' → logprob: -18.188262939453125
    9. 'import' → logprob: -18.313262939453125
    10. 'Input' → logprob: -18.813262939453125

Token 149: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -3.7697225252486533e-06
    2. '_' → logprob: -12.875003814697266
    3. 'string' → logprob: -14.000003814697266
    4. '_char' → logprob: -15.875003814697266
    5. 'String' → logprob: -16.500003814697266
    6. '_STRING' → logprob: -18.750003814697266
    7. '_String' → logprob: -18.750003814697266
    8. '_stream' → logprob: -19.125003814697266
    9. '_str' → logprob: -19.250003814697266
    10. '_character' → logprob: -19.500003814697266

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011823419481515884
    2. ' :' → logprob: -4.636823654174805
    3. ':
' → logprob: -6.261823654174805
    4. ' :
' → logprob: -9.011823654174805
    5. '   ' → logprob: -10.511823654174805
    6. '):' → logprob: -13.136823654174805
    7. 'char' → logprob: -13.386823654174805
    8. ' ' → logprob: -13.636823654174805
    9. '[' → logprob: -13.761823654174805
    10. ' char' → logprob: -14.011823654174805

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12987294793128967
    2. ' char' → logprob: -2.129873037338257
    3. 'char' → logprob: -5.879872798919678
    4. ' ' → logprob: -9.754873275756836
    5. '	char' → logprob: -10.129873275756836
    6. '    ' → logprob: -11.504873275756836
    7. '   ' → logprob: -12.004873275756836
    8. '_char' → logprob: -12.129873275756836
    9. ',char' → logprob: -12.254873275756836
    10. '  ' → logprob: -12.379873275756836

Token 152: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' (adapté à ' char') → logprob: -0.07174697518348694
    2. ' char' → logprob: -2.696747064590454
    3. '   ' → logprob: -6.321746826171875
    4. '	char' → logprob: -12.571746826171875
    5. ' ' → logprob: -12.946746826171875
    6. '_char' → logprob: -13.071746826171875
    7. '
' → logprob: -14.196746826171875
    8. '    
' → logprob: -14.321746826171875
    9. '    ' → logprob: -14.571746826171875
    10. '       ' → logprob: -14.946746826171875

Token 153: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01821374148130417
    2. '_' → logprob: -4.018213748931885
    3. '_char' → logprob: -10.268213272094727
    4. ' _' → logprob: -11.768213272094727
    5. '_counts' → logprob: -12.268213272094727
    6. 'count' → logprob: -12.893213272094727
    7. ' ' → logprob: -13.018213272094727
    8. '_c' → logprob: -13.018213272094727
    9. '   ' → logprob: -14.018213272094727
    10. ']' → logprob: -14.268213272094727

Token 154: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -2.15310683415737e-05
    2. '[' → logprob: -10.875021934509277
    3. 'dict' → logprob: -14.125021934509277
    4. '_' → logprob: -14.375021934509277
    5. 's' → logprob: -15.000021934509277
    6. '_char' → logprob: -15.375021934509277
    7. '[_' → logprob: -15.875021934509277
    8. '```' → logprob: -16.00002098083496
    9. '_dic' → logprob: -16.62502098083496
    10. '_DICT' → logprob: -16.62502098083496

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.625000953674316
    3. 'char' → logprob: -15.875000953674316
    4. '[
' → logprob: -15.875000953674316
    5. '```' → logprob: -16.000001907348633
    6. '[c' → logprob: -16.750001907348633
    7. '<char' → logprob: -18.500001907348633
    8. '[...]' → logprob: -18.500001907348633
    9. '(char' → logprob: -18.750001907348633
    10. '   ' → logprob: -18.875001907348633

Token 156: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -2.696889623621246e-06
    2. ' char' → logprob: -12.87500286102295
    3. '(char' → logprob: -17.500001907348633
    4. ')' → logprob: -18.125001907348633
    5. '<char' → logprob: -18.625001907348633
    6. 'c' → logprob: -19.125001907348633
    7. ']' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.750001907348633
    10. ',char' → logprob: -20.250001907348633

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2747879922389984
    2. ']+=' → logprob: -1.5247880220413208
    3. ')' → logprob: -4.524787902832031
    4. '+=' → logprob: -4.774787902832031
    5. ' +=' → logprob: -5.774787902832031
    6. '}' → logprob: -9.524787902832031
    7. '   ' → logprob: -9.524787902832031
    8. ' ]' → logprob: -9.774787902832031
    9. '+' → logprob: -12.524787902832031
    10. ' ' → logprob: -13.274787902832031

Token 158: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011051944456994534
    2. ' +=' → logprob: -4.511052131652832
    3. ']+=' → logprob: -12.761052131652832
    4. '+' → logprob: -14.511052131652832
    5. '   ' → logprob: -14.636052131652832
    6. '=' → logprob: -16.261051177978516
    7. '+='' → logprob: -16.636051177978516
    8. '```' → logprob: -17.011051177978516
    9. ' ' → logprob: -17.261051177978516
    10. '[' → logprob: -17.261051177978516

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -20.25002098083496
    4. '```' → logprob: -20.87502098083496
    5. '１' → logprob: -22.12502098083496
    6. '
' → logprob: -22.75002098083496
    7. '  ' → logprob: -22.75002098083496
    8. '0' → logprob: -22.87502098083496
    9. '<|end|>' → logprob: -22.87502098083496
    10. ' ' → logprob: -23.00002098083496

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -20.5
    4. '   ' → logprob: -20.625
    5. '１' → logprob: -21.125
    6. '
' → logprob: -22.625
    7. '۱' → logprob: -22.75
    8. '  ' → logprob: -23.1875
    9. '2' → logprob: -23.5
    10. '0' → logprob: -23.625

Token 161: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9812299609184265
    2. 'if' → logprob: -1.6062300205230713
    3. 'for' → logprob: -1.8562300205230713
    4. 'result' → logprob: -2.9812300205230713
    5. 'most' → logprob: -3.2312300205230713
    6. 'unique' → logprob: -3.2312300205230713
    7. 'print' → logprob: -3.6062300205230713
    8. 'answer' → logprob: -3.6062300205230713
    9. '#' → logprob: -3.9812300205230713
    10. '
' → logprob: -4.481229782104492

Token 162: 'is' (ID: 276)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48109960556030273
    2. 'if' → logprob: -2.3560996055603027
    3. 'most' → logprob: -2.4810996055603027
    4. 'for' → logprob: -2.8560996055603027
    5. 'unique' → logprob: -2.9810996055603027
    6. 'result' → logprob: -2.9810996055603027
    7. 'def' → logprob: -4.981099605560303
    8. 'odd' → logprob: -5.231099605560303
    9. 'sorted' → logprob: -5.356099605560303
    10. '#' → logprob: -5.481099605560303

Token 163: '_valid' (ID: 23321)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_unique' → logprob: -0.12387794256210327
    2. '_pal' → logprob: -2.873878002166748
    3. '_' → logprob: -3.123878002166748
    4. '_valid' → logprob: -4.998878002166748
    5. '_bal' → logprob: -5.873878002166748
    6. '_sorted' → logprob: -6.998878002166748
    7. '_even' → logprob: -6.998878002166748
    8. '_all' → logprob: -7.123878002166748
    9. '_equal' → logprob: -7.373878002166748
    10. '_possible' → logprob: -7.623878002166748

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5271371006965637
    2. '_' → logprob: -1.527137041091919
    3. '=' → logprob: -1.652137041091919
    4. '_space' → logprob: -8.27713680267334
    5. '_char' → logprob: -8.40213680267334
    6. ' ' → logprob: -8.40213680267334
    7. '_=' → logprob: -9.77713680267334
    8. '_chars' → logprob: -10.77713680267334
    9. '_character' → logprob: -10.77713680267334
    10. '(' → logprob: -11.27713680267334

Token 165: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4334961473941803
    2. 'all' → logprob: -1.183496117591858
    3. ' True' → logprob: -3.6834962368011475
    4. 'len' → logprob: -4.308495998382568
    5. ' all' → logprob: -5.308495998382568
    6. 'False' → logprob: -7.183495998382568
    7. 'sum' → logprob: -7.183495998382568
    8. '(True' → logprob: -8.933496475219727
    9. 'any' → logprob: -9.058496475219727
    10. ' len' → logprob: -9.058496475219727

Token 166: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052122026681900024
    2. ' for' → logprob: -3.552122116088867
    3. '
' → logprob: -3.927122116088867
    4. 'if' → logprob: -6.802122116088867
    5. ' 
' → logprob: -7.052122116088867
    6. '\n' → logprob: -8.552122116088867
    7. ' if' → logprob: -9.052122116088867
    8. '\' → logprob: -10.677122116088867
    9. ',
' → logprob: -11.302122116088867
    10. '  
' → logprob: -11.427122116088867

Token 167: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002375415526330471
    2. 'if' → logprob: -6.377375602722168
    3. 'odd' → logprob: -7.502375602722168
    4. ' for' → logprob: -10.002375602722168
    5. 'count' → logprob: -10.627375602722168
    6. 'counts' → logprob: -11.877375602722168
    7. 'char' → logprob: -12.002375602722168
    8. '
' → logprob: -12.752375602722168
    9. 'chars' → logprob: -12.877375602722168
    10. 'even' → logprob: -13.002375602722168

Token 168: ' _,' (ID: 18042)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.3649812638759613
    2. ' count' → logprob: -1.7399812936782837
    3. 'char' → logprob: -2.239981174468994
    4. 'count' → logprob: -4.239981174468994
    5. ' key' → logprob: -4.739981174468994
    6. ' value' → logprob: -8.364981651306152
    7. 'key' → logprob: -8.989981651306152
    8. 'value' → logprob: -9.739981651306152
    9. ' cnt' → logprob: -9.989981651306152
    10. ' c' → logprob: -10.739981651306152

Token 169: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.009203456342220306
    2. ' count' → logprob: -4.7592034339904785
    3. 'cnt' → logprob: -7.6342034339904785
    4. 'v' → logprob: -9.634203910827637
    5. 'value' → logprob: -10.884203910827637
    6. ' cnt' → logprob: -12.009203910827637
    7. 'c' → logprob: -12.384203910827637
    8. 'val' → logprob: -12.884203910827637
    9. ' v' → logprob: -13.134203910827637
    10. 'char' → logprob: -13.384203910827637

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34845176339149475
    2. 'in' → logprob: -1.2234517335891724
    3. ' ' → logprob: -12.598451614379883
    4. '	in' → logprob: -13.848451614379883
    5. 'inthe' → logprob: -14.973451614379883
    6. 'inth' → logprob: -15.473451614379883
    7. 'import' → logprob: -15.598451614379883
    8. ' ' → logprob: -15.723451614379883
    9. '_in' → logprob: -15.723451614379883
    10. 'In' → logprob: -15.785951614379883

Token 171: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.00017970333283301443
    2. ' char' → logprob: -8.625179290771484
    3. '(char' → logprob: -18.000179290771484
    4. ' ' → logprob: -18.625179290771484
    5. '
' → logprob: -19.000179290771484
    6. '<char' → logprob: -19.125179290771484
    7. '_char' → logprob: -19.750179290771484
    8. '   ' → logprob: -20.000179290771484
    9. '```' → logprob: -20.625179290771484
    10. 'list' → logprob: -21.000179290771484

Token 172: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2246291337069124e-05
    2. 'count' → logprob: -11.000021934509277
    3. '_counts' → logprob: -12.875021934509277
    4. 's' → logprob: -13.500021934509277
    5. '_counter' → logprob: -15.375021934509277
    6. '_' → logprob: -15.500021934509277
    7. '_dict' → logprob: -15.500021934509277
    8. '```' → logprob: -16.125022888183594
    9. '_char' → logprob: -16.750022888183594
    10. 'in' → logprob: -16.875022888183594

Token 173: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.011053125374019146
    2. 'dict' → logprob: -4.511053085327148
    3. 's' → logprob: -13.011053085327148
    4. 'items' → logprob: -13.636053085327148
    5. '_DICT' → logprob: -14.386053085327148
    6. 'ict' → logprob: -15.511053085327148
    7. 'd' → logprob: -15.636053085327148
    8. '_' → logprob: -15.761053085327148
    9. '.dict' → logprob: -16.01105308532715
    10. 'Dict' → logprob: -16.01105308532715

Token 174: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.02335297502577305
    2. '.values' → logprob: -3.773352861404419
    3. 'items' → logprob: -9.77335262298584
    4. '.iteritems' → logprob: -10.89835262298584
    5. ' .' → logprob: -11.02335262298584
    6. '.' → logprob: -11.14835262298584
    7. 'values' → logprob: -13.89835262298584
    8. '_items' → logprob: -15.39835262298584
    9. ' items' → logprob: -16.273353576660156
    10. '.Items' → logprob: -16.898353576660156

Token 175: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00047297184937633574
    2. '()' → logprob: -8.000473022460938
    3. '():
' → logprob: -9.125473022460938
    4. ' ():' → logprob: -10.625473022460938
    5. ':' → logprob: -12.875473022460938
    6. '(' → logprob: -13.500473022460938
    7. ' ()' → logprob: -15.500473022460938
    8. '()>' → logprob: -16.625473022460938
    9. '():
' → logprob: -17.125473022460938
    10. '():

' → logprob: -18.000473022460938

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026848804554902017
    2. ' if' → logprob: -8.375268936157227
    3. 'if' → logprob: -10.250268936157227
    4. '    
' → logprob: -13.875268936157227
    5. '
' → logprob: -14.250268936157227
    6. '<|end|>' → logprob: -15.250268936157227
    7. '   ' → logprob: -15.250268936157227
    8. ',' → logprob: -15.750268936157227
    9. '```' → logprob: -16.625268936157227
    10. '<|end|>' → logprob: -17.000268936157227

Token 177: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5652565956115723
    2. '   ' → logprob: -1.0652565956115723
    3. 'if' (adapté à ' if') → logprob: -2.4402565956115723
    4. ' is' → logprob: -12.815256118774414
    5. '	if' → logprob: -13.565256118774414
    6. '
' → logprob: -14.065256118774414
    7. ' ' → logprob: -14.065256118774414
    8. '```' → logprob: -14.190256118774414
    9. '   ' → logprob: -14.940256118774414
    10. 'If' → logprob: -15.565256118774414

Token 178: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.038063641637563705
    2. 'count' → logprob: -3.2880635261535645
    3. '(count' → logprob: -10.788064002990723
    4. '	count' → logprob: -13.913064002990723
    5. '   ' → logprob: -15.538064002990723
    6. ' ' → logprob: -15.538064002990723
    7. ' (' → logprob: -16.288063049316406
    8. ' counts' → logprob: -16.538063049316406
    9. '[count' → logprob: -17.163063049316406
    10. '<count' → logprob: -17.538063049316406

Token 179: ' !=' (ID: 1666)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.22615167498588562
    2. '%' → logprob: -1.601151704788208
    3. ' >' → logprob: -8.351151466369629
    4. ' ' → logprob: -8.476151466369629
    5. '>' → logprob: -8.476151466369629
    6. ' !=' → logprob: -10.101151466369629
    7. '!=' → logprob: -11.476151466369629
    8. ' ' → logprob: -11.476151466369629
    9. ' <' → logprob: -12.226151466369629
    10. ' not' → logprob: -12.226151466369629

Token 180: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1275036484003067
    2. '2' → logprob: -2.3775036334991455
    3. '1' → logprob: -3.6275036334991455
    4. '4' → logprob: -8.627503395080566
    5. '3' → logprob: -9.127503395080566
    6. '0' → logprob: -11.127503395080566
    7. '   ' → logprob: -11.627503395080566
    8. '  ' → logprob: -12.002503395080566
    9. 'char' → logprob: -12.440003395080566
    10. '```' → logprob: -12.752503395080566

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.046142518520355225
    2. '1' → logprob: -3.296142578125
    3. '3' → logprob: -5.796142578125
    4. '4' → logprob: -6.046142578125
    5. ' ' → logprob: -6.046142578125
    6. '0' → logprob: -8.671142578125
    7. '   ' → logprob: -10.546142578125
    8. '```' → logprob: -10.921142578125
    9. 'char' → logprob: -11.546142578125
    10. ''' → logprob: -11.671142578125

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25222277641296387
    2. ':
' → logprob: -1.5022227764129639
    3. ' and' → logprob: -8.752223014831543
    4. '   ' → logprob: -9.502223014831543
    5. ' :
' → logprob: -11.002223014831543
    6. ' :' → logprob: -11.127223014831543
    7. 'and' → logprob: -11.377223014831543
    8. ' or' → logprob: -11.627223014831543
    9. '       ' → logprob: -13.127223014831543
    10. '):
' → logprob: -13.502223014831543

Token 183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16885370016098022
    2. '   ' → logprob: -1.918853759765625
    3. ' is' → logprob: -4.918853759765625
    4. 'is' → logprob: -6.918853759765625
    5. '
' → logprob: -8.793853759765625
    6. ':
' → logprob: -10.168853759765625
    7. ' ' → logprob: -10.543853759765625
    8. '           ' → logprob: -11.293853759765625
    9. ':' → logprob: -11.543853759765625
    10. ')' → logprob: -11.793853759765625

Token 184: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.003391948528587818
    2. '   ' → logprob: -6.003391742706299
    3. ' is' → logprob: -7.003391742706299
    4. '
' → logprob: -12.628392219543457
    5. ' ' → logprob: -13.253392219543457
    6. '	is' → logprob: -14.253392219543457
    7. '    
' → logprob: -14.628392219543457
    8. '       ' → logprob: -14.878392219543457
    9. '  ' → logprob: -15.253392219543457
    10. '```' → logprob: -16.50339126586914

Token 185: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.1041145626222715e-05
    2. '_' → logprob: -12.000011444091797
    3. 'valid' → logprob: -12.750011444091797
    4. '_invalid' → logprob: -13.750011444091797
    5. ' _' → logprob: -15.250011444091797
    6. '_is' → logprob: -15.375011444091797
    7. 'Valid' → logprob: -15.625011444091797
    8. '_val' → logprob: -17.250011444091797
    9. '_VALID' → logprob: -17.500011444091797
    10. 'is' → logprob: -17.875011444091797

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002274826169014
    2. '=' → logprob: -2.3502275943756104
    3. ' ' → logprob: -10.850227355957031
    4. '=False' → logprob: -13.600227355957031
    5. ' ' → logprob: -16.47522735595703
    6. '＝' → logprob: -17.35022735595703
    7. ' ==' → logprob: -17.85022735595703
    8. ' =
' → logprob: -17.85022735595703
    9. ' &=' → logprob: -17.97522735595703
    10. '=True' → logprob: -18.22522735595703

Token 187: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006715370807796717
    2. ' False' → logprob: -5.006715297698975
    3. '=False' → logprob: -18.631715774536133
    4. '(False' → logprob: -19.006715774536133
    5. 'F' → logprob: -19.131715774536133
    6. '   ' → logprob: -20.756715774536133
    7. 'True' → logprob: -21.256715774536133
    8. '
' → logprob: -22.006715774536133
    9. 'Fal' → logprob: -22.006715774536133
    10. 'false' → logprob: -22.131715774536133

Token 188: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9385402993066236e-05
    2. '   ' → logprob: -12.000019073486328
    3. '      ' → logprob: -12.625019073486328
    4. '
' → logprob: -12.750019073486328
    5. '	' → logprob: -13.250019073486328
    6. '           ' → logprob: -13.375019073486328
    7. 'print' → logprob: -13.875019073486328
    8. '        
' → logprob: -14.625019073486328
    9. ',' → logprob: -14.875019073486328
    10. 'if' → logprob: -14.875019073486328

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.963691804325208e-05
    2. 'print' → logprob: -11.750029563903809
    3. 'if' → logprob: -12.000029563903809
    4. '   ' → logprob: -12.375029563903809
    5. '
' → logprob: -12.750029563903809
    6. '      ' → logprob: -13.000029563903809
    7. '        
' → logprob: -13.125029563903809
    8. '    
' → logprob: -13.875029563903809
    9. '           ' → logprob: -13.875029563903809
    10. '	' → logprob: -14.125029563903809

Token 190: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04400663077831268
    2. ' break' → logprob: -3.294006586074829
    3. '   ' → logprob: -5.294006824493408
    4. '       ' → logprob: -7.044006824493408
    5. '	break' → logprob: -9.91900634765625
    6. '
' → logprob: -13.29400634765625
    7. ' ' → logprob: -14.66900634765625
    8. '_break' → logprob: -15.04400634765625
    9. '           ' → logprob: -15.29400634765625
    10. '    ' → logprob: -15.54400634765625

Token 191: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11886250227689743
    2. 'if' → logprob: -2.3688623905181885
    3. '
' → logprob: -3.9938623905181885
    4. '

' → logprob: -10.99386215209961
    5. '```' → logprob: -11.11886215209961
    6. '  
' → logprob: -12.49386215209961
    7. '\n' → logprob: -12.74386215209961
    8. ' if' → logprob: -12.99386215209961
    9. '    
' → logprob: -12.99386215209961
    10. ' print' → logprob: -12.99386215209961

Token 192: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.693162202835083
    2. 'print' → logprob: -0.693162202835083
    3. '
' → logprob: -11.943161964416504
    4. ' if' → logprob: -12.693161964416504
    5. '```' → logprob: -13.568161964416504
    6. 'output' → logprob: -13.693161964416504
    7. '  
' → logprob: -14.068161964416504
    8. ' print' → logprob: -14.943161964416504
    9. 'for' → logprob: -15.318161964416504
    10. ' 
' → logprob: -15.318161964416504

Token 193: '("' (ID: 568)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.6549909710884094
    2. '("' → logprob: -0.9049909710884094
    3. '(' → logprob: -2.6549909114837646
    4. '('' → logprob: -5.279991149902344
    5. '(int' → logprob: -8.529991149902344
    6. '(True' → logprob: -8.904991149902344
    7. '(bool' → logprob: -9.029991149902344
    8. '(not' → logprob: -10.029991149902344
    9. 'is' → logprob: -10.154991149902344
    10. '("("' → logprob: -10.779991149902344

Token 194: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0008274946012534201
    2. 'YES' → logprob: -7.500827312469482
    3. 'yes' → logprob: -9.50082778930664
    4. 'Possible' → logprob: -9.62582778930664
    5. '"' → logprob: -10.50082778930664
    6. 'Second' → logprob: -10.62582778930664
    7. 'First' → logprob: -10.87582778930664
    8. 'No' → logprob: -11.12582778930664
    9. ' Yes' → logprob: -11.37582778930664
    10. 'OK' → logprob: -11.50082778930664

Token 195: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01815556176006794
    2. '")' → logprob: -4.018155574798584
    3. '")
' → logprob: -12.268155097961426
    4. 'if' → logprob: -14.393155097961426
    5. '```' → logprob: -16.268156051635742
    6. '")

' → logprob: -16.393156051635742
    7. ')"' → logprob: -16.768156051635742
    8. '");' → logprob: -17.018156051635742
    9. '""' → logprob: -17.268156051635742
    10. ')' → logprob: -17.393156051635742

Token 196: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3141261041164398
    2. ' if' → logprob: -1.5641261339187622
    3. 'if' → logprob: -2.8141260147094727
    4. '"' → logprob: -8.189126014709473
    5. '")' → logprob: -9.939126014709473
    6. ' ' → logprob: -12.439126014709473
    7. '()' → logprob: -12.564126014709473
    8. '```' → logprob: -12.564126014709473
    9. ')"' → logprob: -13.689126014709473
    10. 'If' → logprob: -13.689126014709473

Token 197: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00020377879263833165
    2. 'is' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.750204086303711
    4. ' ' → logprob: -16.37520408630371
    5. ' not' → logprob: -19.12520408630371
    6. '	is' → logprob: -20.75020408630371
    7. '_is' → logprob: -21.25020408630371
    8. ')' → logprob: -21.37520408630371
    9. ')is' → logprob: -22.00020408630371
    10. '_' → logprob: -22.12520408630371

Token 198: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.375005722045898
    3. ' _' → logprob: -14.000005722045898
    4. 'valid' → logprob: -15.000005722045898
    5. '_val' → logprob: -17.8750057220459
    6. 'Valid' → logprob: -19.3750057220459
    7. ' valid' → logprob: -19.3750057220459
    8. '_v' → logprob: -19.6250057220459
    9. '_is' → logprob: -20.7500057220459
    10. '_VALID' → logprob: -21.2500057220459

Token 199: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5759456157684326
    2. ' else' → logprob: -0.8259456157684326
    3. ')' → logprob: -12.075945854187012
    4. '```' → logprob: -15.575945854187012
    5. '	else' → logprob: -15.950945854187012
    6. ' )' → logprob: -16.575944900512695
    7. ' ' → logprob: -17.075944900512695
    8. 'Else' → logprob: -17.325944900512695
    9. '_else' → logprob: -17.700944900512695
    10. ' ' → logprob: -18.450944900512695

Token 200: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002262782771140337
    2. ' "' → logprob: -6.127262592315674
    3. '"No' → logprob: -9.502263069152832
    4. ' ' → logprob: -13.377263069152832
    5. ')' → logprob: -14.502263069152832
    6. ' ' → logprob: -15.002263069152832
    7. ''' → logprob: -15.127263069152832
    8. '("' → logprob: -15.502263069152832
    9. '
' → logprob: -16.627262115478516
    10. '	' → logprob: -17.002262115478516

Token 201: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -4.5491004129871726e-05
    2. '"No' → logprob: -10.000045776367188
    3. ' No' → logprob: -17.375045776367188
    4. '"' → logprob: -18.625045776367188
    5. '_No' → logprob: -20.750045776367188
    6. '>No' → logprob: -21.750045776367188
    7. '(No' → logprob: -21.875045776367188
    8. '“No' → logprob: -22.250045776367188
    9. '")' → logprob: -22.625045776367188
    10. 'NO' → logprob: -22.750045776367188

Token 202: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007563813705928624
    2. ')' → logprob: -7.50075626373291
    3. ')")' → logprob: -8.50075626373291
    4. '")
' → logprob: -17.375757217407227
    5. ')"' → logprob: -17.625757217407227
    6. '}")' → logprob: -19.000757217407227
    7. '!")' → logprob: -19.125757217407227
    8. '"' → logprob: -19.875757217407227
    9. '”)' → logprob: -20.250757217407227
    10. '"))' → logprob: -20.250757217407227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 179
Précision stricte (1ère position): 50.50%
Précision adaptée (1ère position): 52.00%
Précision (top 10): 89.50%
================================================================================
