================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from operator import itemgetter

def solve():
    a, b = map(int, input().split())
    hi, lo = max(a, b), min(a, b)
    print(hi + max(hi - 1, lo))

solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' operator' (ID: 11019)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' item' (ID: 2169)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7355836629867554
    2. ' item' → logprob: -0.9855836629867554
    3. 'item' → logprob: -2.110583782196045
    4. 'import' → logprob: -4.110583782196045
    5. ' add' → logprob: -5.360583782196045
    6. 'add' → logprob: -6.360583782196045
    7. ' ' → logprob: -6.735583782196045
    8. 'attr' → logprob: -7.235583782196045
    9. ' attr' → logprob: -7.485583782196045
    10. 'getitem' → logprob: -7.985583782196045

Token 4: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.008664090186357498
    2. 'get' → logprob: -4.758664131164551
    3. 'g' → logprob: -10.38366413116455
    4. 'ge' → logprob: -11.75866413116455
    5. 'getitem' → logprob: -12.00866413116455
    6. 'gett' → logprob: -12.50866413116455
    7. 'gte' → logprob: -14.63366413116455
    8. 'gt' → logprob: -15.50866413116455
    9. 'getto' → logprob: -15.75866413116455
    10. 'gets' → logprob: -16.508663177490234

Token 5: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0076234228909015656
    2. '.' → logprob: -5.257623195648193
    3. '\(' → logprob: -6.757623195648193
    4. ',' → logprob: -7.507623195648193
    5. '(
' → logprob: -8.882623672485352
    6. '\n' → logprob: -8.882623672485352
    7. '[' → logprob: -9.007623672485352
    8. '\' → logprob: -9.507623672485352
    9. 'newline' → logprob: -9.632623672485352
    10. ' (' → logprob: -10.882623672485352

Token 6: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003627150785177946
    2. '.' → logprob: -6.003627300262451
    3. '\(' → logprob: -7.503627300262451
    4. ',' → logprob: -8.003626823425293
    5. '(
' → logprob: -9.128626823425293
    6. 'a' → logprob: -10.878626823425293
    7. '```' → logprob: -11.003626823425293
    8. '#' → logprob: -11.253626823425293
    9. '\' → logprob: -11.378626823425293
    10. '\n' → logprob: -11.503626823425293

Token 7: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002321414416655898
    2. ' space' → logprob: -7.502321243286133
    3. ' calculate' → logprob: -7.877321243286133
    4. ' process' → logprob: -8.502321243286133
    5. ' add' → logprob: -8.877321243286133
    6. ' find' → logprob: -9.252321243286133
    7. ' get' → logprob: -9.377321243286133
    8. ' my' → logprob: -9.752321243286133
    9. '_' → logprob: -9.877321243286133
    10. ' ' → logprob: -9.877321243286133

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024849532172083855
    2. '_' → logprob: -3.8998494148254395
    3. ':' → logprob: -6.6498494148254395
    4. '```' → logprob: -6.6498494148254395
    5. '():' → logprob: -7.6498494148254395
    6. '(:' → logprob: -8.149849891662598
    7. '_:' → logprob: -8.649849891662598
    8. '):' → logprob: -8.774849891662598
    9. '(
' → logprob: -9.649849891662598
    10. ' (' → logprob: -9.899849891662598

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03661204129457474
    2. '```' → logprob: -4.786612033843994
    3. '    
' → logprob: -4.911612033843994
    4. '\' → logprob: -5.411612033843994
    5. '    ' → logprob: -5.411612033843994
    6. '\n' → logprob: -6.036612033843994
    7. 'n' → logprob: -6.286612033843994
    8. ' ' → logprob: -6.911612033843994
    9. '<|end|>' → logprob: -6.911612033843994
    10. 'a' → logprob: -7.286612033843994

Token 10: ' a' (ID: 261)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.8863753080368042
    2. 'data' → logprob: -1.1363753080368042
    3. ' items' → logprob: -2.5113754272460938
    4. '   ' → logprob: -3.0113754272460938
    5. ' n' → logprob: -3.2613754272460938
    6. 'n' → logprob: -3.3863754272460938
    7. 'items' → logprob: -3.8863754272460938
    8. ' rows' → logprob: -4.761375427246094
    9. '    ' → logprob: -4.886375427246094
    10. ' input' → logprob: -5.136375427246094

Token 11: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28183117508888245
    2. ' =' → logprob: -2.2818312644958496
    3. 'rray' → logprob: -3.1568312644958496
    4. 'r' → logprob: -3.4068312644958496
    5. 'rg' → logprob: -3.7818312644958496
    6. ',' → logprob: -4.53183126449585
    7. ' ' → logprob: -4.65683126449585
    8. '=' → logprob: -4.90683126449585
    9. 'rr' → logprob: -6.03183126449585
    10. '.' → logprob: -6.03183126449585

Token 12: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31353479623794556
    2. ' b' → logprob: -1.3135347366333008
    3. ' ' → logprob: -8.6885347366333
    4. ' =' → logprob: -9.8135347366333
    5. '=' → logprob: -10.6885347366333
    6. '_' → logprob: -11.8135347366333
    7. '*b' → logprob: -11.9385347366333
    8. '*' → logprob: -12.8135347366333
    9. ' *' → logprob: -12.9385347366333
    10. '=b' → logprob: -13.4385347366333

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07946402579545975
    2. '=' → logprob: -2.5794639587402344
    3. ',' → logprob: -7.579463958740234
    4. ' ' → logprob: -10.954463958740234
    5. '   ' → logprob: -11.204463958740234
    6. ')' → logprob: -11.329463958740234
    7. ' ,' → logprob: -11.829463958740234
    8. '<|end|>' → logprob: -12.579463958740234
    9. '  ' → logprob: -12.954463958740234
    10. '    ' → logprob: -13.579463958740234

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06559799611568451
    2. 'map' → logprob: -2.9405980110168457
    3. ' input' → logprob: -4.815598011016846
    4. 'input' → logprob: -6.565598011016846
    5. ' ' → logprob: -7.315598011016846
    6. ' list' → logprob: -8.190597534179688
    7. '1' → logprob: -9.940597534179688
    8. ' int' → logprob: -10.440597534179688
    9. 'int' → logprob: -10.565597534179688
    10. 'list' → logprob: -10.690597534179688

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3086772561073303
    2. '(' → logprob: -1.6836771965026855
    3. '(str' → logprob: -2.6836771965026855
    4. '(lambda' → logprob: -5.3086771965026855
    5. '(input' → logprob: -5.5586771965026855
    6. '<|end|>' → logprob: -6.4336771965026855
    7. 'int' → logprob: -8.308677673339844
    8. 'str' → logprob: -9.058677673339844
    9. '()' → logprob: -9.058677673339844
    10. 'input' → logprob: -9.058677673339844

Token 16: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13344506919384003
    2. ')' → logprob: -2.6334450244903564
    3. '(' → logprob: -3.3834450244903564
    4. 'input' → logprob: -4.8834452629089355
    5. ',' → logprob: -5.0084452629089355
    6. ',input' → logprob: -5.6334452629089355
    7. ' input' → logprob: -8.508444786071777
    8. '<|end|>' → logprob: -8.633444786071777
    9. '=input' → logprob: -8.758444786071777
    10. '),' → logprob: -9.008444786071777

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10020904988050461
    2. 'input' → logprob: -2.3502089977264404
    3. ')' → logprob: -13.35020923614502
    4. ' ' → logprob: -14.97520923614502
    5. '	input' → logprob: -15.60020923614502
    6. ' )' → logprob: -15.72520923614502
    7. '=input' → logprob: -16.600208282470703
    8. ',input' → logprob: -17.975208282470703
    9. '(input' → logprob: -18.100208282470703
    10. '   ' → logprob: -19.100208282470703

Token 18: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3024352490901947
    2. '()' → logprob: -1.802435278892517
    3. '().' → logprob: -2.6774351596832275
    4. ')' → logprob: -3.8024351596832275
    5. '(' → logprob: -6.302435398101807
    6. '());' → logprob: -6.802435398101807
    7. '(),' → logprob: -7.427435398101807
    8. '()))' → logprob: -7.802435398101807
    9. '('' → logprob: -8.552434921264648
    10. '()),' → logprob: -8.927434921264648

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.051066520740278e-05
    2. 'strip' → logprob: -9.750060081481934
    3. 'rstrip' → logprob: -13.625060081481934
    4. ' split' → logprob: -14.500060081481934
    5. '(split' → logprob: -15.125060081481934
    6. 'spl' → logprob: -15.500060081481934
    7. 'read' → logprob: -17.25006103515625
    8. ')' → logprob: -17.75006103515625
    9. ' ' → logprob: -18.87506103515625
    10. '```' → logprob: -19.12506103515625

Token 20: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3190315067768097
    2. '))' → logprob: -1.3190314769744873
    3. '())' → logprob: -5.319031715393066
    4. '()))' → logprob: -7.444031715393066
    5. '()' → logprob: -8.444031715393066
    6. '),' → logprob: -10.569031715393066
    7. ')))' → logprob: -11.194031715393066
    8. ')")' → logprob: -13.069031715393066
    9. ')`' → logprob: -13.069031715393066
    10. ')
' → logprob: -13.194031715393066

Token 21: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8033244013786316
    2. ' ' → logprob: -1.4283244609832764
    3. '<|end|>' → logprob: -1.9283244609832764
    4. '   ' → logprob: -2.5533244609832764
    5. ',' → logprob: -3.3033244609832764
    6. '    
' → logprob: -5.053324222564697
    7. '  
' → logprob: -5.178324222564697
    8. ' 
' → logprob: -5.178324222564697
    9. '    ' → logprob: -5.303324222564697
    10. '  ' → logprob: -5.553324222564697

Token 22: ' hi' (ID: 5911)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5089486837387085
    2. ' ' → logprob: -2.258948802947998
    3. ')' → logprob: -2.633948802947998
    4. 'result' → logprob: -2.883948802947998
    5. ' c' → logprob: -3.633948802947998
    6. 's' → logprob: -3.883948802947998
    7. '<|end|>' → logprob: -4.008948802947998
    8. 'data' → logprob: -4.508948802947998
    9. 'x' → logprob: -4.758948802947998
    10. '[' → logprob: -4.883948802947998

Token 23: ',' (ID: 11)
  Prédit: 'gh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gh' → logprob: -0.2619950771331787
    2. 'sts' → logprob: -2.6369950771331787
    3. 'st' → logprob: -3.0119950771331787
    4. ',' → logprob: -3.8869950771331787
    5. ' =' → logprob: -3.8869950771331787
    6. 'r' → logprob: -4.136995315551758
    7. 'ts' → logprob: -4.886995315551758
    8. 'story' → logprob: -5.011995315551758
    9. 'nts' → logprob: -5.136995315551758
    10. 'ght' → logprob: -5.261995315551758

Token 24: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.8284947872161865
    2. 'ti' → logprob: -2.0784947872161865
    3. ' lo' → logprob: -2.3284947872161865
    4. 'wi' → logprob: -2.9534947872161865
    5. 'li' → logprob: -3.0784947872161865
    6. ' wi' → logprob: -3.2034947872161865
    7. 'di' → logprob: -3.3284947872161865
    8. ' ai' → logprob: -3.4534947872161865
    9. ' ti' → logprob: -3.7034947872161865
    10. ' di' → logprob: -4.328495025634766

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761139988899231
    2. '=' → logprob: -0.8261139988899231
    3. ',' → logprob: -8.7011137008667
    4. 's' → logprob: -12.5761137008667
    5. ' ' → logprob: -13.0761137008667
    6. ' ,' → logprob: -14.7011137008667
    7. '=item' → logprob: -14.7011137008667
    8. '   ' → logprob: -15.2011137008667
    9. '  ' → logprob: -15.3261137008667
    10. ')' → logprob: -16.076114654541016

Token 26: ' max' (ID: 2999)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.6010857820510864
    2. ' max' → logprob: -1.7260857820510864
    3. ' sorted' → logprob: -1.7260857820510864
    4. ' b' → logprob: -1.8510857820510864
    5. 'a' → logprob: -2.726085662841797
    6. 'b' → logprob: -2.851085662841797
    7. ' min' → logprob: -3.226085662841797
    8. 'sorted' → logprob: -3.476085662841797
    9. 'max' → logprob: -3.726085662841797
    10. ' (' → logprob: -3.851085662841797

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.043350834399461746
    2. '(' → logprob: -3.1683509349823
    3. '(b' → logprob: -9.793351173400879
    4. ',' → logprob: -9.793351173400879
    5. 'a' → logprob: -9.918351173400879
    6. '((' → logprob: -10.418351173400879
    7. ' (' → logprob: -10.543351173400879
    8. '(
' → logprob: -11.043351173400879
    9. '(ai' → logprob: -11.043351173400879
    10. '(item' → logprob: -11.168351173400879

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014594044769182801
    2. ' ,' → logprob: -7.00145959854126
    3. ',b' → logprob: -7.62645959854126
    4. '),' → logprob: -9.876459121704102
    5. 'b' → logprob: -13.126459121704102
    6. ',),' → logprob: -13.376459121704102
    7. ',a' → logprob: -13.876459121704102
    8. ')' → logprob: -14.251459121704102
    9. ' ' → logprob: -14.626459121704102
    10. '   ' → logprob: -14.626459121704102

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889342308044434
    2. ' b' → logprob: -2.5788934230804443
    3. ' ' → logprob: -13.078893661499023
    4. '   ' → logprob: -14.203893661499023
    5. '  ' → logprob: -14.953893661499023
    6. ',' → logprob: -15.828893661499023
    7. ')b' → logprob: -16.203893661499023
    8. '	b' → logprob: -16.328893661499023
    9. '    ' → logprob: -16.578893661499023
    10. ',b' → logprob: -16.828893661499023

Token 30: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -8.995397365652025e-05
    2. ')' → logprob: -9.500089645385742
    3. ',' → logprob: -11.750089645385742
    4. ' ),' → logprob: -12.500089645385742
    5. ',),' → logprob: -13.500089645385742
    6. ')),' → logprob: -14.500089645385742
    7. '   ' → logprob: -14.625089645385742
    8. '),(' → logprob: -14.875089645385742
    9. ' ' → logprob: -16.562589645385742
    10. '},' → logprob: -16.687589645385742

Token 31: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20143885910511017
    2. ' min' → logprob: -1.7014389038085938
    3. '0' → logprob: -11.326438903808594
    4. ' ' → logprob: -11.951438903808594
    5. '(min' → logprob: -13.076438903808594
    6. '	min' → logprob: -13.576438903808594
    7. '  ' → logprob: -13.826438903808594
    8. '   ' → logprob: -13.951438903808594
    9. '1' → logprob: -14.701438903808594
    10. '[min' → logprob: -15.451438903808594

Token 32: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10025745630264282
    2. '(' → logprob: -2.350257396697998
    3. ' (' → logprob: -10.725257873535156
    4. '(
' → logprob: -11.725257873535156
    5. '((' → logprob: -11.975257873535156
    6. 'a' → logprob: -12.725257873535156
    7. '<|end|>' → logprob: -12.850257873535156
    8. '(i' → logprob: -13.725257873535156
    9. '('' → logprob: -14.225257873535156
    10. '(s' → logprob: -14.350257873535156

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18234549462795258
    2. '(a' → logprob: -2.057345390319824
    3. '(' → logprob: -3.932345390319824
    4. ')' → logprob: -4.182345390319824
    5. 'a' → logprob: -6.682345390319824
    6. ' ,' → logprob: -7.182345390319824
    7. ' (' → logprob: -7.432345390319824
    8. '),' → logprob: -7.807345390319824
    9. '<|end|>' → logprob: -8.432345390319824
    10. '<|end|>' → logprob: -8.932345390319824

Token 34: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004129453562200069
    2. ' a' → logprob: -5.504129409790039
    3. '(a' → logprob: -10.129129409790039
    4. ' ' → logprob: -12.879129409790039
    5. '   ' → logprob: -13.129129409790039
    6. ')' → logprob: -13.254129409790039
    7. '	a' → logprob: -13.879129409790039
    8. ' (' → logprob: -13.879129409790039
    9. '  ' → logprob: -14.129129409790039
    10. '<|end|>' → logprob: -14.629129409790039

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011844364780699834
    2. '))' → logprob: -10.125118255615234
    3. ')
' → logprob: -10.500118255615234
    4. '   ' → logprob: -11.125118255615234
    5. '`)' → logprob: -11.125118255615234
    6. '()' → logprob: -11.750118255615234
    7. ')))' → logprob: -12.250118255615234
    8. '())' → logprob: -12.500118255615234
    9. ' )' → logprob: -14.250118255615234
    10. ')`' → logprob: -14.375118255615234

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012170420028269291
    2. '<|end|>' → logprob: -5.137170314788818
    3. '    
' → logprob: -5.762170314788818
    4. ')' → logprob: -7.137170314788818
    5. '
' → logprob: -7.137170314788818
    6. ',' → logprob: -7.637170314788818
    7. '  
' → logprob: -8.637170791625977
    8. '<|end|>' → logprob: -8.762170791625977
    9. '    ' → logprob: -9.262170791625977
    10. ':' → logprob: -9.387170791625977

Token 37: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00968692172318697
    2. ',' → logprob: -6.1346869468688965
    3. '    
' → logprob: -6.1346869468688965
    4. ')' → logprob: -7.3846869468688965
    5. '
' → logprob: -7.6346869468688965
    6. ' if' → logprob: -7.6346869468688965
    7. '<|end|>' → logprob: -7.6346869468688965
    8. ' for' → logprob: -8.134686470031738
    9. 'if' → logprob: -8.259686470031738
    10. ' ' → logprob: -8.509686470031738

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009818658232688904
    2. '('' → logprob: -5.7598185539245605
    3. '(max' → logprob: -5.7598185539245605
    4. '(abs' → logprob: -6.7598185539245605
    5. '()' → logprob: -6.8848185539245605
    6. '("' → logprob: -7.7598185539245605
    7. '((' → logprob: -8.134819030761719
    8. '(f' → logprob: -8.759819030761719
    9. '(len' → logprob: -9.259819030761719
    10. '("("' → logprob: -9.509819030761719

Token 39: 'hi' (ID: 3686)
  Prédit: 'hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.03264794871211052
    2. ' hi' → logprob: -3.7826478481292725
    3. 'abs' → logprob: -5.532648086547852
    4. '"' → logprob: -6.407648086547852
    5. ' abs' → logprob: -7.282648086547852
    6. 'max' → logprob: -7.282648086547852
    7. 'lo' → logprob: -7.282648086547852
    8. ''' → logprob: -7.782648086547852
    9. ' max' → logprob: -8.657648086547852
    10. '")' → logprob: -8.782648086547852

Token 40: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6992362141609192
    2. ',' → logprob: -0.8242362141609192
    3. '-' → logprob: -3.6992361545562744
    4. ' ,' → logprob: -4.0742363929748535
    5. ')' → logprob: -5.1992363929748535
    6. '-lo' → logprob: -5.4492363929748535
    7. '+' → logprob: -5.5742363929748535
    8. '%' → logprob: -6.0742363929748535
    9. ' +' → logprob: -6.0742363929748535
    10. ' %' → logprob: -6.3242363929748535

Token 41: ' max' (ID: 2999)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.16448210179805756
    2. ' lo' → logprob: -1.9144821166992188
    3. '1' → logprob: -6.039482116699219
    4. ' ' → logprob: -7.039482116699219
    5. '"' → logprob: -7.914482116699219
    6. '(lo' → logprob: -8.039482116699219
    7. ''' → logprob: -9.789482116699219
    8. 'hi' → logprob: -9.914482116699219
    9. ' hi' → logprob: -10.789482116699219
    10. '  ' → logprob: -11.039482116699219

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1274280846118927
    2. '(lo' → logprob: -2.1274280548095703
    3. 'hi' → logprob: -8.87742805480957
    4. '(a' → logprob: -9.37742805480957
    5. '((' → logprob: -9.50242805480957
    6. '(-' → logprob: -9.87742805480957
    7. 'lo' → logprob: -10.00242805480957
    8. '(abs' → logprob: -10.62742805480957
    9. ')' → logprob: -11.37742805480957
    10. '(max' → logprob: -11.50242805480957

Token 43: 'hi' (ID: 3686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2636878490447998
    2. '(lo' → logprob: -1.7636878490447998
    3. 'hi' → logprob: -3.1386878490448
    4. 'lo' → logprob: -4.388688087463379
    5. '0' → logprob: -6.263688087463379
    6. '((' → logprob: -7.263688087463379
    7. '(a' → logprob: -7.763688087463379
    8. '(abs' → logprob: -8.263688087463379
    9. ' ' → logprob: -8.638688087463379
    10. '1' → logprob: -9.013688087463379

Token 44: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1291055977344513
    2. '-' → logprob: -2.254105567932129
    3. ',' → logprob: -4.754105567932129
    4. '-lo' → logprob: -5.754105567932129
    5. '(lo' → logprob: -6.504105567932129
    6. ' lo' → logprob: -7.129105567932129
    7. ')' → logprob: -7.379105567932129
    8. ' ,' → logprob: -7.629105567932129
    9. ' //' → logprob: -8.629105567932129
    10. ' ' → logprob: -8.754105567932129

Token 45: ' ' (ID: 220)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.053378064185380936
    2. '2' → logprob: -3.928378105163574
    3. '(lo' → logprob: -4.053378105163574
    4. '1' → logprob: -5.178378105163574
    5. ' lo' → logprob: -5.303378105163574
    6. '(' → logprob: -5.678378105163574
    7. ' (' → logprob: -7.428378105163574
    8. ' ' → logprob: -9.303378105163574
    9. '3' → logprob: -9.303378105163574
    10. 'hi' → logprob: -10.178378105163574

Token 46: '1' (ID: 16)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.036959849298000336
    2. '2' → logprob: -4.036959648132324
    3. '(lo' → logprob: -4.786959648132324
    4. '1' → logprob: -5.286959648132324
    5. '(' → logprob: -5.786959648132324
    6. ' lo' → logprob: -6.536959648132324
    7. ' (' → logprob: -8.286959648132324
    8. '3' → logprob: -8.786959648132324
    9. ' ' → logprob: -9.411959648132324
    10. 'hi' → logprob: -10.161959648132324

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034525711089372635
    2. ' ,' → logprob: -4.0345258712768555
    3. ' -' → logprob: -4.1595258712768555
    4. '-' → logprob: -7.6595258712768555
    5. ')' → logprob: -9.284525871276855
    6. ' +' → logprob: -11.409525871276855
    7. ' ' → logprob: -11.534525871276855
    8. ' lo' → logprob: -11.659525871276855
    9. '+' → logprob: -12.159525871276855
    10. 'lo' → logprob: -12.347025871276855

Token 48: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.1942913830280304
    2. ' lo' → logprob: -1.819291353225708
    3. '1' → logprob: -4.569291591644287
    4. '0' → logprob: -6.694291591644287
    5. ' ' → logprob: -7.069291591644287
    6. 'hi' → logprob: -7.319291591644287
    7. '2' → logprob: -7.319291591644287
    8. '(lo' → logprob: -7.944291591644287
    9. ' hi' → logprob: -9.194291114807129
    10. ')' → logprob: -10.319291114807129

Token 49: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08520791679620743
    2. ')' → logprob: -2.710207939147949
    3. ' -' → logprob: -5.210207939147949
    4. ' ))' → logprob: -5.460207939147949
    5. ')))' → logprob: -5.835207939147949
    6. '-' → logprob: -7.210207939147949
    7. ' )' → logprob: -7.210207939147949
    8. ',' → logprob: -7.335207939147949
    9. ' +' → logprob: -8.83520793914795
    10. '+' → logprob: -9.58520793914795

Token 50: 'solve' (ID: 117273)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01253849733620882
    2. '(' → logprob: -4.387538433074951
    3. ' ()' → logprob: -12.63753890991211
    4. '()(' → logprob: -12.63753890991211
    5. '`()' → logprob: -12.76253890991211
    6. '();' → logprob: -13.26253890991211
    7. ']()' → logprob: -13.26253890991211
    8. '```' → logprob: -13.26253890991211
    9. '()<' → logprob: -13.38753890991211
    10. '().' → logprob: -13.63753890991211


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 40.82%
Précision adaptée (1ère position): 40.82%
Précision (top 10): 75.51%
================================================================================
