================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(next(x for x, y in zip(["ARC", "ABC"], ["ABC", None]) if S == (y or S)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(next' (ID: 28757)
  → Token d'amorce (pas de prédiction)

Token 2: '(x' (ID: 4061)
  → Token d'amorce (pas de prédiction)

Token 3: ' for' (ID: 395)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13485360145568848
    2. ')' → logprob: -2.1348536014556885
    3. '(' → logprob: -5.759853363037109
    4. '()))' → logprob: -5.759853363037109
    5. '_' → logprob: -7.384853363037109
    6. ')))' → logprob: -8.38485336303711
    7. '(x' → logprob: -9.13485336303711
    8. '())' → logprob: -9.13485336303711
    9. '_token' → logprob: -9.50985336303711
    10. ')_' → logprob: -9.50985336303711

Token 4: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32013994455337524
    2. ' in' → logprob: -2.8201398849487305
    3. ' x' → logprob: -2.9451398849487305
    4. '  ' → logprob: -2.9451398849487305
    5. ' token' → logprob: -3.0701398849487305
    6. ' )' → logprob: -3.6951398849487305
    7. ' i' → logprob: -4.5701398849487305
    8. '(' → logprob: -4.6951398849487305
    9. ')' → logprob: -5.8201398849487305
    10. 'x' → logprob: -6.1951398849487305

Token 5: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00173337128944695
    2. 'in' → logprob: -6.501733303070068
    3. '  ' → logprob: -9.626733779907227
    4. ' ' → logprob: -9.751733779907227
    5. '(' → logprob: -10.626733779907227
    6. ' if' → logprob: -10.751733779907227
    7. '    ' → logprob: -11.626733779907227
    8. '[' → logprob: -11.751733779907227
    9. ')' → logprob: -11.751733779907227
    10. ' ' → logprob: -11.876733779907227

Token 6: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.010372497141361237
    2. 'y' → logprob: -5.010372638702393
    3. ' in' → logprob: -6.635372638702393
    4. '_' → logprob: -6.885372638702393
    5. ' _' → logprob: -7.260372638702393
    6. ' x' → logprob: -8.260372161865234
    7. '_y' → logprob: -9.135372161865234
    8. ' lst' → logprob: -9.885372161865234
    9. ' i' → logprob: -10.385372161865234
    10. ')' → logprob: -10.760372161865234

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03377813473343849
    2. 'in' → logprob: -3.408778190612793
    3. ')' → logprob: -9.408778190612793
    4. ' ' → logprob: -10.783778190612793
    5. '```' → logprob: -11.658778190612793
    6. ',' → logprob: -12.158778190612793
    7. ' )' → logprob: -12.408778190612793
    8. '),' → logprob: -13.283778190612793
    9. '<|end|>' → logprob: -13.283778190612793
    10. '   ' → logprob: -13.283778190612793

Token 8: ' zip' (ID: 16216)
  Prédit: ' enumerate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.6403089165687561
    2. ' y' → logprob: -1.6403088569641113
    3. 'enumer' → logprob: -1.6403088569641113
    4. '(y' → logprob: -3.7653088569641113
    5. ' (' → logprob: -3.8903088569641113
    6. 'y' → logprob: -4.140308856964111
    7. ' zip' → logprob: -4.515308856964111
    8. ' [(' → logprob: -6.140308856964111
    9. ' ((' → logprob: -6.640308856964111
    10. '[(' → logprob: -6.765308856964111

Token 9: '(["' (ID: 41418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6513309478759766
    2. '(range' → logprob: -0.7763309478759766
    3. '(iter' → logprob: -4.651330947875977
    4. '(x' → logprob: -6.401330947875977
    5. '(s' → logprob: -6.651330947875977
    6. '(my' → logprob: -7.026330947875977
    7. '([' → logprob: -7.401330947875977
    8. '(user' → logprob: -7.401330947875977
    9. '(data' → logprob: -7.651330947875977
    10. '((' → logprob: -7.901330947875977

Token 10: 'ARC' (ID: 64758)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4943968057632446
    2. 'abc' → logprob: -1.4943968057632446
    3. '[' → logprob: -1.6193968057632446
    4. 'a' → logprob: -1.6193968057632446
    5. '1' → logprob: -3.119396686553955
    6. 'apple' → logprob: -3.494396686553955
    7. 'hello' → logprob: -3.619396686553955
    8. 'foo' → logprob: -4.494396686553955
    9. '"' → logprob: -4.744396686553955
    10. '['' → logprob: -4.869396686553955

Token 11: '",' (ID: 672)
  Prédit: '"],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -0.8089295625686646
    2. '",' → logprob: -1.9339295625686646
    3. '","' → logprob: -1.9339295625686646
    4. '"' → logprob: -2.183929443359375
    5. 'E' → logprob: -3.558929443359375
    6. 'Code' → logprob: -4.433929443359375
    7. '"),' → logprob: -4.683929443359375
    8. '"E' → logprob: -4.808929443359375
    9. 'A' → logprob: -4.933929443359375
    10. ',"' → logprob: -4.933929443359375

Token 12: ' "' (ID: 392)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.44680550694465637
    2. ' ["' → logprob: -1.071805477142334
    3. '[' → logprob: -4.446805477142334
    4. ' [' → logprob: -5.321805477142334
    5. ' "' → logprob: -7.946805477142334
    6. '"' → logprob: -8.259305953979492
    7. ' ' → logprob: -8.696805953979492
    8. '['' → logprob: -9.196805953979492
    9. ' ['' → logprob: -9.821805953979492
    10. 'range' → logprob: -10.071805953979492

Token 13: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0489699840545654
    2. 'BR' → logprob: -1.9239699840545654
    3. 'ARC' → logprob: -2.1739699840545654
    4. '"B' → logprob: -2.1739699840545654
    5. 'B' → logprob: -2.7989699840545654
    6. 'BCD' → logprob: -4.0489702224731445
    7. '"D' → logprob: -4.2989702224731445
    8. 'ABC' → logprob: -4.2989702224731445
    9. 'R' → logprob: -4.4239702224731445
    10. 'M' → logprob: -4.4239702224731445

Token 14: '"],' (ID: 17695)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.6438392996788025
    2. '"],' → logprob: -0.7688392996788025
    3. '],' → logprob: -5.768839359283447
    4. '"' → logprob: -5.768839359283447
    5. ',' → logprob: -6.143839359283447
    6. '","' → logprob: -6.518839359283447
    7. ''],' → logprob: -9.143838882446289
    8. ' "' → logprob: -9.393838882446289
    9. '"]' → logprob: -9.393838882446289
    10. ',"' → logprob: -9.456338882446289

Token 15: ' ["' (ID: 9129)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.19627241790294647
    2. '[' → logprob: -2.571272373199463
    3. ' ["' → logprob: -2.696272373199463
    4. ' y' → logprob: -4.321272373199463
    5. ' [' → logprob: -4.696272373199463
    6. 'y' → logprob: -5.446272373199463
    7. 'range' → logprob: -5.821272373199463
    8. ' range' → logprob: -5.946272373199463
    9. ' zip' → logprob: -6.946272373199463
    10. 'zip' → logprob: -8.321272850036621

Token 16: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.123039722442627
    2. 'A' → logprob: -1.123039722442627
    3. 'ARC' → logprob: -2.248039722442627
    4. 'ABC' → logprob: -2.623039722442627
    5. '"A' → logprob: -3.123039722442627
    6. '1' → logprob: -3.748039722442627
    7. '0' → logprob: -3.998039722442627
    8. 'B' → logprob: -4.310539722442627
    9. 'AB' → logprob: -5.123039722442627
    10. '"B' → logprob: -5.310539722442627

Token 17: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.47178661823272705
    2. '"])' → logprob: -1.221786618232727
    3. '"],' → logprob: -3.0967864990234375
    4. '"]))' → logprob: -3.5967864990234375
    5. '"]' → logprob: -5.4717864990234375
    6. ')' → logprob: -6.4717864990234375
    7. '","' → logprob: -7.5967864990234375
    8. '"' → logprob: -7.5967864990234375
    9. ',' → logprob: -7.7217864990234375
    10. '")' → logprob: -7.9717864990234375

Token 18: ' None' (ID: 4662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006878768093883991
    2. ' "' → logprob: -5.006878852844238
    3. '"A' → logprob: -10.131878852844238
    4. '["' → logprob: -10.631878852844238
    5. ''' → logprob: -10.881878852844238
    6. '"B' → logprob: -11.506878852844238
    7. '")' → logprob: -11.756878852844238
    8. ' ' → logprob: -12.006878852844238
    9. ')' → logprob: -12.381878852844238
    10. '"I' → logprob: -12.631878852844238

Token 19: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009461159817874432
    2. ']))' → logprob: -5.759460926055908
    3. ')' → logprob: -6.134460926055908
    4. ' ])' → logprob: -6.634460926055908
    5. '])))' → logprob: -7.509460926055908
    6. '"])' → logprob: -7.509460926055908
    7. ')])' → logprob: -7.759460926055908
    8. '))' → logprob: -8.134461402893066
    9. ']' → logprob: -8.384461402893066
    10. '")' → logprob: -8.759461402893066

Token 20: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08011937141418457
    2. '))' → logprob: -2.8301193714141846
    3. 'if' → logprob: -4.4551191329956055
    4. ')' → logprob: -5.0801191329956055
    5. '   ' → logprob: -10.705119132995605
    6. '  ' → logprob: -10.705119132995605
    7. ' ))' → logprob: -10.830119132995605
    8. ' ' → logprob: -10.955119132995605
    9. '),' → logprob: -11.080119132995605
    10. ')))' → logprob: -11.330119132995605

Token 21: ' S' (ID: 336)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7446078062057495
    2. ' y' → logprob: -1.2446078062057495
    3. 'x' → logprob: -1.6196078062057495
    4. 'y' → logprob: -3.244607925415039
    5. ')' → logprob: -11.119607925415039
    6. ' ' → logprob: -11.244607925415039
    7. ' not' → logprob: -11.869607925415039
    8. '(x' → logprob: -12.119607925415039
    9. ')x' → logprob: -12.307107925415039
    10. ' (' → logprob: -12.619607925415039

Token 22: ' ==' (ID: 951)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2293844372034073
    2. 'y' → logprob: -1.979384422302246
    3. ' y' → logprob: -3.229384422302246
    4. ' x' → logprob: -4.604384422302246
    5. 'S' → logprob: -5.104384422302246
    6. ' not' → logprob: -5.979384422302246
    7. '"' → logprob: -5.979384422302246
    8. '"x' → logprob: -5.979384422302246
    9. ' S' → logprob: -6.104384422302246
    10. 'not' → logprob: -8.729384422302246

Token 23: ' (' (ID: 350)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9162578582763672
    2. ' y' → logprob: -1.1662578582763672
    3. 'x' → logprob: -1.5412578582763672
    4. 'y' → logprob: -2.791257858276367
    5. ''' → logprob: -5.166257858276367
    6. ''y' → logprob: -6.291257858276367
    7. '"' → logprob: -6.416257858276367
    8. ''x' → logprob: -6.541257858276367
    9. ' '' → logprob: -6.791257858276367
    10. '"x' → logprob: -7.291257858276367

Token 24: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24693642556667328
    2. 'y' → logprob: -1.7469364404678345
    3. ''x' → logprob: -3.621936321258545
    4. ''y' → logprob: -4.496936321258545
    5. '"x' → logprob: -5.746936321258545
    6. '(x' → logprob: -6.871936321258545
    7. ' y' → logprob: -7.371936321258545
    8. ' x' → logprob: -7.621936321258545
    9. ')x' → logprob: -8.496936798095703
    10. 'S' → logprob: -8.871936798095703

Token 25: ' or' (ID: 503)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.23212754726409912
    2. '))' → logprob: -2.1071276664733887
    3. ')' → logprob: -2.6071276664733887
    4. ' ' → logprob: -5.607127666473389
    5. ',' → logprob: -6.357127666473389
    6. ' or' → logprob: -6.482127666473389
    7. ' ))' → logprob: -6.732127666473389
    8. ' and' → logprob: -6.857127666473389
    9. ' )' → logprob: -6.982127666473389
    10. '),' → logprob: -8.35712718963623

Token 26: ' S' (ID: 336)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05028358846902847
    2. ' x' → logprob: -3.175283670425415
    3. '"x' → logprob: -5.300283432006836
    4. ''x' → logprob: -6.550283432006836
    5. 'S' → logprob: -8.300283432006836
    6. 'None' → logprob: -8.675283432006836
    7. '"' → logprob: -9.175283432006836
    8. ')x' → logprob: -10.050283432006836
    9. ' S' → logprob: -10.175283432006836
    10. ' ' → logprob: -10.300283432006836

Token 27: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.21695545315742493
    2. '))' → logprob: -1.8419554233551025
    3. ')' → logprob: -3.4669554233551025
    4. ' ' → logprob: -5.716955661773682
    5. ' ))' → logprob: -7.466955661773682
    6. ')x' → logprob: -7.966955661773682
    7. ')));' → logprob: -8.466955184936523
    8. '))))' → logprob: -8.716955184936523
    9. ' )' → logprob: -9.091955184936523
    10. '  ' → logprob: -9.466955184936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 17
Précision stricte (1ère position): 24.00%
Précision adaptée (1ère position): 24.00%
Précision (top 10): 68.00%
================================================================================
