================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,K=map(int,input().split())
P=[int(x) for x in input().split()]
if K==N:
 print(1); exit()
cum=[0];i=0
for a,b in zip(P,P[1:]):cum+=[cum[-1]+(1 if a<b else 0)]
A=[];z=range(N-K+1)
for i in z:A.append((cum[i+K-1]-cum[i])==K-1)
import collections
qmn=collections.deque();qmx=collections.deque()
smin=[];smax=[];j=0
for idx,v in enumerate(P):
 while len(qmn) and qmn[-1]>v:qmn.pop()
 qmn.append(v)
 if idx-K-1>=0 and P[idx-K-1]==qmn[0]:qmn.popleft()
 while qmx and qmx[-1]<v:qmx.pop()
 qmx.append(v)
 if idx-K-1>=0 and P[idx-K-1]==qmx[0]:qmx.popleft()
 if idx>=K:smin+=[qmn[0]];smax.append(qmx[0])
class UF:
 def __init__(slf,N):slf.p=[x for x in range(N)];slf.c=0;slf.r=[0]*N
 def f(slf,a):return a if slf.p[a]==a else slf.rst(a)
 def rst(slf,a):
  slf.p[a]=slf.f(slf.p[a]);return slf.p[a]
 def same(w,a,b):return w.f(a)==w.f(b)
 def u(slf,a,b):
  A=slf.f(a);B=slf.f(b)
  if A==B:return
  if slf.r[A]<slf.r[B]:slf.p[A]=B
  else:
   slf.p[B]=A
   if slf.r[A]==slf.r[B]:slf.r[A]+=1
  slf.c+=1
 def cnt(x):return len(x.p)-x.c
uf=UF(N-K+2)
for i,(l,r,mn,mx) in enumerate(zip(P,P[K:],smin,smax)):
 if l==mn and r==mx:uf.u(i,i+1)
if not any(A):
 print(cnt(uf)-1)
 exit()
di=N-K+1
for i,flag in enumerate(A):
 if flag:uf.u(i,di)
print(cnt(uf))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5790363550186157
    2. ' map' → logprob: -1.3290363550186157
    3. ' ' → logprob: -2.579036235809326
    4. '0' → logprob: -3.204036235809326
    5. 'input' → logprob: -3.579036235809326
    6. 'int' → logprob: -4.454036235809326
    7. '10' → logprob: -4.704036235809326
    8. 'list' → logprob: -6.204036235809326
    9. '5' → logprob: -6.329036235809326
    10. ' int' → logprob: -6.579036235809326

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06574579328298569
    2. '(int' → logprob: -3.0657458305358887
    3. '```' → logprob: -5.190745830535889
    4. '(lambda' → logprob: -5.315745830535889
    5. '(str' → logprob: -5.690745830535889
    6. '(input' → logprob: -7.190745830535889
    7. '<|end|>' → logprob: -7.315745830535889
    8. '[int' → logprob: -7.815745830535889
    9. '(chr' → logprob: -8.81574535369873
    10. '(ord' → logprob: -8.94074535369873

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.025801805779337883
    2. ')' → logprob: -4.025801658630371
    3. 'input' → logprob: -5.650801658630371
    4. ',input' → logprob: -5.775801658630371
    5. '(' → logprob: -7.275801658630371
    6. ' input' → logprob: -9.525801658630371
    7. '=input' → logprob: -10.025801658630371
    8. '(int' → logprob: -10.650801658630371
    9. ')(' → logprob: -10.650801658630371
    10. '[input' → logprob: -10.775801658630371

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30080699920654297
    2. '()' → logprob: -1.425806999206543
    3. '().' → logprob: -4.050806999206543
    4. ')' → logprob: -7.550806999206543
    5. '());' → logprob: -7.675806999206543
    6. '();)' → logprob: -7.800806999206543
    7. '()>' → logprob: -9.175806999206543
    8. '(' → logprob: -9.175806999206543
    9. '('' → logprob: -9.675806999206543
    10. '()`' → logprob: -9.925806999206543

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011105302110081539
    2. 'strip' → logprob: -9.250110626220703
    3. ' split' → logprob: -12.000110626220703
    4. 'rstrip' → logprob: -12.250110626220703
    5. ')' → logprob: -12.750110626220703
    6. 'read' → logprob: -14.625110626220703
    7. '(split' → logprob: -15.250110626220703
    8. 'spl' → logprob: -15.250110626220703
    9. '```' → logprob: -16.375110626220703
    10. 'plit' → logprob: -17.625110626220703

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03171086683869362
    2. '())' → logprob: -3.6567108631134033
    3. '))' → logprob: -6.031711101531982
    4. '`)' → logprob: -6.156711101531982
    5. '()' → logprob: -7.406711101531982
    6. '(' → logprob: -9.281710624694824
    7. '')' → logprob: -10.156710624694824
    8. ')`' → logprob: -10.781710624694824
    9. '('' → logprob: -11.281710624694824
    10. '()))' → logprob: -11.281710624694824

Token 9: 'P' (ID: 47)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07319065928459167
    2. 's' → logprob: -4.323190689086914
    3. 'A' → logprob: -4.448190689086914
    4. 'for' → logprob: -4.823190689086914
    5. 'x' → logprob: -4.948190689086914
    6. '#' → logprob: -5.073190689086914
    7. '
' → logprob: -5.573190689086914
    8. 'd' → logprob: -5.823190689086914
    9. '\n' → logprob: -5.823190689086914
    10. 'n' → logprob: -6.573190689086914

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09132103621959686
    2. '[i' → logprob: -3.9663209915161133
    3. '[:]' → logprob: -4.091320991516113
    4. 'r' → logprob: -4.216320991516113
    5. '.' → logprob: -4.716320991516113
    6. '=' → logprob: -4.841320991516113
    7. '_' → logprob: -5.716320991516113
    8. ' =' → logprob: -5.716320991516113
    9. '[]' → logprob: -5.841320991516113
    10. '[I' → logprob: -5.966320991516113

Token 11: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008801387157291174
    2. ']int' → logprob: -7.250880241394043
    3. ']' → logprob: -9.250880241394043
    4. '0' → logprob: -10.250880241394043
    5. ' int' → logprob: -11.125880241394043
    6. 'list' → logprob: -11.500880241394043
    7. '(int' → logprob: -11.875880241394043
    8. '])' → logprob: -13.500880241394043
    9. ')' → logprob: -13.750880241394043
    10. ']*' → logprob: -13.875880241394043

Token 12: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14973154664039612
    2. '(input' → logprob: -2.7747316360473633
    3. '(x' → logprob: -2.7747316360473633
    4. '()]' → logprob: -4.649731636047363
    5. ']' → logprob: -6.149731636047363
    6. '(i' → logprob: -6.399731636047363
    7. '(p' → logprob: -8.899731636047363
    8. '()' → logprob: -9.024731636047363
    9. '(a' → logprob: -9.149731636047363
    10. '(P' → logprob: -9.149731636047363

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5861724831629544e-05
    2. '(input' → logprob: -11.000056266784668
    3. '(x' → logprob: -11.625056266784668
    4. ')]' → logprob: -11.750056266784668
    5. ')])' → logprob: -12.375056266784668
    6. ' )' → logprob: -12.875056266784668
    7. ')**' → logprob: -13.000056266784668
    8. ')x' → logprob: -13.125056266784668
    9. '(' → logprob: -13.500056266784668
    10. ')p' → logprob: -13.500056266784668

Token 14: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7448348999023438
    2. ' for' → logprob: -0.8698348999023438
    3. ')' → logprob: -2.3698348999023438
    4. '(input' → logprob: -5.119834899902344
    5. '(x' → logprob: -5.994834899902344
    6. 'input' → logprob: -6.244834899902344
    7. '<|end|>' → logprob: -7.119834899902344
    8. ' input' → logprob: -8.369834899902344
    9. ',input' → logprob: -8.744834899902344
    10. '(' → logprob: -8.869834899902344

Token 15: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1273306906223297
    2. 'input' → logprob: -2.127330780029297
    3. '=input' → logprob: -8.752330780029297
    4. '(input' → logprob: -9.502330780029297
    5. '<|end|>' → logprob: -9.627330780029297
    6. '_input' → logprob: -10.752330780029297
    7. ',input' → logprob: -11.252330780029297
    8. ' x' → logprob: -11.252330780029297
    9. 'x' → logprob: -11.502330780029297
    10. '<|end|>' → logprob: -11.752330780029297

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02373477630317211
    2. 'in' → logprob: -3.7737348079681396
    3. 'input' → logprob: -7.8987345695495605
    4. '=input' → logprob: -9.523735046386719
    5. ' input' → logprob: -11.773735046386719
    6. 's' → logprob: -11.898735046386719
    7. '(input' → logprob: -12.023735046386719
    8. '<|end|>' → logprob: -12.023735046386719
    9. ')' → logprob: -12.898735046386719
    10. ' ' → logprob: -13.523735046386719

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.061967913061380386
    2. ' input' → logprob: -2.8119678497314453
    3. '(input' → logprob: -15.811967849731445
    4. 'range' → logprob: -16.186967849731445
    5. '=input' → logprob: -18.061967849731445
    6. ' range' → logprob: -18.436967849731445
    7. '<input' → logprob: -19.186967849731445
    8. '[input' → logprob: -19.186967849731445
    9. ',input' → logprob: -19.311967849731445
    10. '	input' → logprob: -19.436967849731445

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.045984163880348206
    2. '()' → logprob: -3.1709842681884766
    3. '()]' → logprob: -5.920984268188477
    4. '())' → logprob: -9.045984268188477
    5. '()].' → logprob: -9.920984268188477
    6. '.readline' → logprob: -10.420984268188477
    7. '()][' → logprob: -10.420984268188477
    8. '()>' → logprob: -11.295984268188477
    9. '.split' → logprob: -11.420984268188477
    10. '()[' → logprob: -11.670984268188477

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.870950215263292e-05
    2. 'strip' → logprob: -10.000048637390137
    3. 'rstrip' → logprob: -13.000048637390137
    4. ' split' → logprob: -13.875048637390137
    5. '(split' → logprob: -17.875049591064453
    6. 'read' → logprob: -18.625049591064453
    7. ')' → logprob: -18.750049591064453
    8. 'replace' → logprob: -18.875049591064453
    9. 'spl' → logprob: -19.125049591064453
    10. '.split' → logprob: -21.375049591064453

Token 20: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0022265026345849037
    2. '()' → logprob: -6.62722635269165
    3. '())' → logprob: -7.25222635269165
    4. '(' → logprob: -8.627226829528809
    5. ')]' → logprob: -12.377226829528809
    6. ']' → logprob: -12.627226829528809
    7. '()][' → logprob: -13.627226829528809
    8. '()],' → logprob: -14.002226829528809
    9. '()].' → logprob: -14.252226829528809
    10. '()]
' → logprob: -14.627226829528809

Token 21: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0701940655708313
    2. 's' → logprob: -4.570194244384766
    3. '' → logprob: -4.695194244384766
    4. 'for' → logprob: -4.820194244384766
    5. 'p' → logprob: -4.945194244384766
    6. '[' → logprob: -5.195194244384766
    7. 'a' → logprob: -5.820194244384766
    8. '\n' → logprob: -5.945194244384766
    9. '
' → logprob: -6.195194244384766
    10. '#' → logprob: -6.195194244384766

Token 22: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.1766129434108734
    2. 'K' → logprob: -2.9266128540039062
    3. ' N' → logprob: -3.0516128540039062
    4. ' P' → logprob: -3.5516128540039062
    5. ' ' → logprob: -3.9266128540039062
    6. 'N' → logprob: -5.176612854003906
    7. 'P' → logprob: -5.676612854003906
    8. ' len' → logprob: -5.926612854003906
    9. 'len' → logprob: -8.051612854003906
    10. ' ' → logprob: -8.301612854003906

Token 23: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10298647731542587
    2. ' <=' → logprob: -2.9779865741729736
    3. ' <' → logprob: -4.2279863357543945
    4. ' ==' → logprob: -4.2279863357543945
    5. '>' → logprob: -4.4779863357543945
    6. ' >=' → logprob: -5.7279863357543945
    7. ' ' → logprob: -6.3529863357543945
    8. '<' → logprob: -7.7279863357543945
    9. '<=' → logprob: -7.8529863357543945
    10. '==' → logprob: -7.9779863357543945

Token 24: 'N' (ID: 45)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0755050927400589
    2. '1' → logprob: -2.825505018234253
    3. ' ' → logprob: -4.450505256652832
    4. 'N' → logprob: -6.450505256652832
    5. 'len' → logprob: -9.450505256652832
    6. '2' → logprob: -9.825505256652832
    7. ' N' → logprob: -10.450505256652832
    8. '3' → logprob: -11.700505256652832
    9. 'P' → logprob: -12.700505256652832
    10. '=' → logprob: -13.138005256652832

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003942112671211362
    2. ' :' → logprob: -7.875394344329834
    3. ':return' → logprob: -12.375393867492676
    4. ':
' → logprob: -12.625393867492676
    5. '>' → logprob: -12.875393867492676
    6. '>:' → logprob: -14.125393867492676
    7. ' and' → logprob: -14.625393867492676
    8. '+:' → logprob: -14.750393867492676
    9. '.' → logprob: -14.750393867492676
    10. ':**' → logprob: -14.875393867492676

Token 26: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8739616274833679
    2. '
' → logprob: -0.9989616274833679
    3. 'print' → logprob: -1.8739616870880127
    4. '   ' → logprob: -3.6239616870880127
    5. '\n' → logprob: -4.248961448669434
    6. ':' → logprob: -4.873961448669434
    7. ':
' → logprob: -5.373961448669434
    8. ' ' → logprob: -6.123961448669434
    9. ' 
' → logprob: -6.373961448669434
    10. '
' → logprob: -7.248961448669434

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20267127454280853
    2. '(sum' → logprob: -2.8276712894439697
    3. '(P' → logprob: -2.9526712894439697
    4. '(max' → logprob: -3.8276712894439697
    5. '("' → logprob: -3.8276712894439697
    6. '(N' → logprob: -4.452671051025391
    7. '('' → logprob: -5.077671051025391
    8. '(len' → logprob: -5.452671051025391
    9. '(K' → logprob: -6.077671051025391
    10. '(*' → logprob: -6.327671051025391

Token 28: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9911821484565735
    2. 'max' → logprob: -1.1161820888519287
    3. '0' → logprob: -2.2411820888519287
    4. 'P' → logprob: -2.3661820888519287
    5. 'min' → logprob: -3.1161820888519287
    6. '1' → logprob: -3.9911820888519287
    7. 'N' → logprob: -4.616182327270508
    8. ' max' → logprob: -5.241182327270508
    9. '100' → logprob: -5.741182327270508
    10. ' sum' → logprob: -5.741182327270508

Token 29: ');' (ID: 2245)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.955703818472102e-05
    2. ' )' → logprob: -10.375059127807617
    3. ')
' → logprob: -10.750059127807617
    4. '()' → logprob: -13.500059127807617
    5. '))' → logprob: -13.625059127807617
    6. '*' → logprob: -14.375059127807617
    7. '`)' → logprob: -14.375059127807617
    8. '(' → logprob: -14.500059127807617
    9. '())' → logprob: -14.750059127807617
    10. '')' → logprob: -15.250059127807617

Token 30: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8319638967514038
    2. ' else' → logprob: -0.9569638967514038
    3. '
' → logprob: -2.8319640159606934
    4. '<|end|>' → logprob: -3.3319640159606934
    5. '\n' → logprob: -3.5819640159606934
    6. '  
' → logprob: -4.081964015960693
    7. '```' → logprob: -4.331964015960693
    8. ' 
' → logprob: -4.456964015960693
    9. '0' → logprob: -5.331964015960693
    10. ' ' → logprob: -5.456964015960693

Token 31: '()
' (ID: 1234)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.295258641242981
    2. '0' → logprob: -1.420258641242981
    3. '<|end|>' → logprob: -1.795258641242981
    4. '
' → logprob: -2.0452585220336914
    5. ' 
' → logprob: -2.7952585220336914
    6. '  
' → logprob: -3.4202585220336914
    7. '```' → logprob: -3.6702585220336914
    8. ' ' → logprob: -3.9202585220336914
    9. '\' → logprob: -4.170258522033691
    10. 'print' → logprob: -4.920258522033691

Token 32: 'cum' (ID: 89165)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5232194662094116
    2. '
' → logprob: -1.0232194662094116
    3. '  
' → logprob: -3.398219585418701
    4. '<|end|>' → logprob: -5.648219585418701
    5. '0' → logprob: -6.148219585418701
    6. ' 

' → logprob: -6.273219585418701
    7. ' ' → logprob: -6.398219585418701
    8. '\n' → logprob: -6.773219585418701
    9. '

' → logprob: -7.023219585418701
    10. '
' → logprob: -7.023219585418701

Token 33: '=[' (ID: 13370)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.6499975323677063
    2. '_' → logprob: -1.2749974727630615
    3. '=' → logprob: -2.1499974727630615
    4. 'ulative' → logprob: -3.2749974727630615
    5. '=[' → logprob: -4.649997711181641
    6. '_=' → logprob: -4.899997711181641
    7. '=_' → logprob: -5.274997711181641
    8. 'm' → logprob: -5.774997711181641
    9. '=[]' → logprob: -5.899997711181641
    10. ' =' → logprob: -5.899997711181641

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1041145626222715e-05
    2. 'P' → logprob: -12.125011444091797
    3. '1' → logprob: -12.875011444091797
    4. ' ' → logprob: -13.625011444091797
    5. '[' → logprob: -14.000011444091797
    6. '(' → logprob: -15.000011444091797
    7. '-' → logprob: -15.250011444091797
    8. ']' → logprob: -16.375011444091797
    9. 'int' → logprob: -16.375011444091797
    10. '[P' → logprob: -16.875011444091797

Token 35: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03214903548359871
    2. ']*(' → logprob: -4.157148838043213
    3. ']*' → logprob: -4.532148838043213
    4. ']+' → logprob: -6.282148838043213
    5. ' for' → logprob: -6.782148838043213
    6. ',' → logprob: -6.907148838043213
    7. 'for' → logprob: -7.032148838043213
    8. ' ]' → logprob: -8.782149314880371
    9. '*' → logprob: -9.532149314880371
    10. ')' → logprob: -10.407149314880371

Token 36: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08965485543012619
    2. ' for' → logprob: -2.4646549224853516
    3. '0' → logprob: -8.214654922485352
    4. ' ' → logprob: -8.589654922485352
    5. 's' → logprob: -9.714654922485352
    6. 'sum' → logprob: -9.964654922485352
    7. 'cum' → logprob: -10.339654922485352
    8. 'i' → logprob: -10.714654922485352
    9. 'from' → logprob: -11.089654922485352
    10. 'f' → logprob: -11.089654922485352

Token 37: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007671340834349394
    2. ' =' → logprob: -4.882671356201172
    3. '+=' → logprob: -10.757671356201172
    4. 'n' → logprob: -10.882671356201172
    5. '+' → logprob: -11.757671356201172
    6. 'x' → logprob: -12.382671356201172
    7. 'nd' → logprob: -12.507671356201172
    8. ' ' → logprob: -12.882671356201172
    9. ' +=' → logprob: -13.132671356201172
    10. '=n' → logprob: -14.007671356201172

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002821754664182663
    2. '1' → logprob: -5.877821922302246
    3. ' ' → logprob: -11.627821922302246
    4. '-' → logprob: -11.752821922302246
    5. '2' → logprob: -17.25282096862793
    6. 'K' → logprob: -17.37782096862793
    7. ' -' → logprob: -17.50282096862793
    8. '+' → logprob: -18.00282096862793
    9. 'N' → logprob: -18.25282096862793
    10. '100' → logprob: -18.81532096862793

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5362934470176697
    2. 'while' → logprob: -1.4112935066223145
    3. '+' → logprob: -2.4112935066223145
    4. '
' → logprob: -3.5362935066223145
    5. ' for' → logprob: -3.9112935066223145
    6. '1' → logprob: -4.2862935066223145
    7. ' while' → logprob: -4.5362935066223145
    8. '0' → logprob: -6.1612935066223145
    9. 'i' → logprob: -6.2862935066223145
    10. '+
' → logprob: -7.5362935066223145

Token 41: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1267458200454712
    2. ' x' → logprob: -1.5017458200454712
    3. ' p' → logprob: -2.0017457008361816
    4. 'i' → logprob: -2.1267457008361816
    5. 'x' → logprob: -2.3767457008361816
    6. ' P' → logprob: -3.5017457008361816
    7. 'p' → logprob: -3.7517457008361816
    8. 'P' → logprob: -3.7517457008361816
    9. ' v' → logprob: -4.376745700836182
    10. ' range' → logprob: -5.251745700836182

Token 42: ',b' (ID: 17568)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22549092769622803
    2. 'in' → logprob: -1.600490927696228
    3. ' ' → logprob: -10.72549057006836
    4. 'In' → logprob: -11.35049057006836
    5. 'a' → logprob: -11.60049057006836
    6. 'P' → logprob: -12.10049057006836
    7. 's' → logprob: -12.35049057006836
    8. 'i' → logprob: -12.66299057006836
    9. 'to' → logprob: -12.97549057006836
    10. '_in' → logprob: -13.22549057006836

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048622336238622665
    2. 'in' → logprob: -3.0486223697662354
    3. ',' → logprob: -11.423622131347656
    4. ' ' → logprob: -11.798622131347656
    5. '	in' → logprob: -12.173622131347656
    6. ',in' → logprob: -12.798622131347656
    7. 'n' → logprob: -13.736122131347656
    8. 'i' → logprob: -14.236122131347656
    9. 'In' → logprob: -14.361122131347656
    10. 's' → logprob: -14.361122131347656

Token 44: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.008656412363052368
    2. 'zip' → logprob: -4.7586565017700195
    3. ' enumerate' → logprob: -10.88365650177002
    4. '(zip' → logprob: -11.00865650177002
    5. 'enumer' → logprob: -12.13365650177002
    6. ' itertools' → logprob: -14.75865650177002
    7. '.zip' → logprob: -15.00865650177002
    8. ' ' → logprob: -15.63365650177002
    9. '_zip' → logprob: -16.383655548095703
    10. '[(' → logprob: -16.633655548095703

Token 45: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0006380964769050479
    2. '(' → logprob: -7.375638008117676
    3. '(C' → logprob: -12.375638008117676
    4. '(N' → logprob: -13.625638008117676
    5. '(A' → logprob: -14.000638008117676
    6. ' (' → logprob: -14.125638008117676
    7. '(S' → logprob: -14.250638008117676
    8. '(range' → logprob: -14.250638008117676
    9. '(c' → logprob: -14.375638008117676
    10. '((' → logprob: -14.375638008117676

Token 46: ',P' (ID: 64255)
  Prédit: ',P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',P' → logprob: -0.4162701666355133
    2. ',' → logprob: -1.166270136833191
    3. ' ,' → logprob: -3.6662702560424805
    4. '[:-' → logprob: -7.0412702560424805
    5. 'P' → logprob: -7.7912702560424805
    6. ',N' → logprob: -7.7912702560424805
    7. '[' → logprob: -7.9162702560424805
    8. ',c' → logprob: -8.16627025604248
    9. ',K' → logprob: -8.54127025604248
    10. ',C' → logprob: -8.66627025604248

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.191489642835222e-05
    2. '[i' → logprob: -11.250041961669922
    3. '):' → logprob: -12.125041961669922
    4. '[N' → logprob: -12.250041961669922
    5. '[K' → logprob: -12.250041961669922
    6. '[:-' → logprob: -12.500041961669922
    7. '[::-' → logprob: -12.625041961669922
    8. '[:' → logprob: -12.625041961669922
    9. '```' → logprob: -14.375041961669922
    10. ')' → logprob: -14.500041961669922

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006357124075293541
    2. ' ' → logprob: -7.375635623931885
    3. 'K' → logprob: -12.625636100769043
    4. ' K' → logprob: -13.250636100769043
    5. 'i' → logprob: -13.625636100769043
    6. ' i' → logprob: -14.625636100769043
    7. '+' → logprob: -14.813136100769043
    8. '   ' → logprob: -15.063136100769043
    9. '[' → logprob: -15.375636100769043
    10. '-' → logprob: -15.563136100769043

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002703589154407382
    2. ':]' → logprob: -6.002703666687012
    3. ':],' → logprob: -8.502703666687012
    4. ']):' → logprob: -11.002703666687012
    5. ':])
' → logprob: -13.252703666687012
    6. '+' → logprob: -13.252703666687012
    7. ']:' → logprob: -14.002703666687012
    8. '):' → logprob: -14.252703666687012
    9. '[' → logprob: -14.377703666687012
    10. ' :' → logprob: -14.502703666687012

Token 50: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.10032948851585388
    2. ']):
' → logprob: -2.4753293991088867
    3. ']' → logprob: -4.725329399108887
    4. '])' → logprob: -6.725329399108887
    5. '):' → logprob: -7.850329399108887
    6. ']:' → logprob: -8.725329399108887
    7. ' ]' → logprob: -8.725329399108887
    8. '']):
' → logprob: -9.350329399108887
    9. '):
' → logprob: -9.475329399108887
    10. ')' → logprob: -9.475329399108887

Token 51: 'cum' (ID: 89165)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.21222344040870667
    2. '   ' → logprob: -1.7122234106063843
    3. 'cum' → logprob: -5.087223529815674
    4. ' ' → logprob: -5.962223529815674
    5. '	c' → logprob: -7.087223529815674
    6. ' cumulative' → logprob: -8.337223052978516
    7. ' i' → logprob: -8.462223052978516
    8. '```' → logprob: -8.837223052978516
    9. ' if' → logprob: -9.087223052978516
    10. '
' → logprob: -9.962223052978516

Token 52: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007131471065804362
    2. 'append' → logprob: -7.875713348388672
    3. '[-' → logprob: -8.250713348388672
    4. '.' → logprob: -10.125713348388672
    5. '+' → logprob: -11.625713348388672
    6. 'ulate' → logprob: -12.000713348388672
    7. '[' → logprob: -12.750713348388672
    8. 'Append' → logprob: -12.750713348388672
    9. '_append' → logprob: -13.000713348388672
    10. '.extend' → logprob: -13.375713348388672

Token 53: '=[' (ID: 13370)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.23457834124565125
    2. '[' → logprob: -2.4845783710479736
    3. '=[' → logprob: -2.6095783710479736
    4. 'append' → logprob: -3.8595783710479736
    5. 'pp' → logprob: -4.6095781326293945
    6. '[end' → logprob: -5.1095781326293945
    7. '=' → logprob: -5.2345781326293945
    8. '[p' → logprob: -5.9845781326293945
    9. 'pend' → logprob: -6.2345781326293945
    10. '[int' → logprob: -6.7345781326293945

Token 54: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.014288325794041157
    2. ' cum' → logprob: -4.389288425445557
    3. 'max' → logprob: -6.764288425445557
    4. ' max' → logprob: -8.139287948608398
    5. ' ' → logprob: -9.014287948608398
    6. 'min' → logprob: -9.764287948608398
    7. 'a' → logprob: -11.139287948608398
    8. '-c' → logprob: -11.264287948608398
    9. '(c' → logprob: -11.264287948608398
    10. ' min' → logprob: -11.264287948608398

Token 55: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6558268070220947
    2. '-i' → logprob: -0.9058268070220947
    3. '[-' → logprob: -2.6558268070220947
    4. 'i' → logprob: -5.780826568603516
    5. ' -' → logprob: -6.530826568603516
    6. ' ' → logprob: -7.530826568603516
    7. '][-' → logprob: -7.530826568603516
    8. ' i' → logprob: -8.530826568603516
    9. '[i' → logprob: -8.530826568603516
    10. '-I' → logprob: -8.655826568603516

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020012001041322947
    2. ' ' → logprob: -6.6270012855529785
    3. 'a' → logprob: -8.50200080871582
    4. ' a' → logprob: -8.87700080871582
    5. '+b' → logprob: -9.37700080871582
    6. 'b' → logprob: -9.87700080871582
    7. '+' → logprob: -10.00200080871582
    8. ' b' → logprob: -10.25200080871582
    9. ']+' → logprob: -11.00200080871582
    10. ' +' → logprob: -11.18950080871582

Token 57: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3720410168170929
    2. '+(' → logprob: -2.1220409870147705
    3. ']+' → logprob: -2.4970409870147705
    4. '+b' → logprob: -2.8720409870147705
    5. '+a' → logprob: -3.4970409870147705
    6. ' +' → logprob: -4.12204122543335
    7. ' +(' → logprob: -6.87204122543335
    8. '+[' → logprob: -6.87204122543335
    9. ']' → logprob: -7.62204122543335
    10. ')+' → logprob: -7.99704122543335

Token 58: '(' (ID: 7)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.733846127986908
    2. 'b' → logprob: -0.983846127986908
    3. 'a' → logprob: -2.8588461875915527
    4. '1' → logprob: -3.7338461875915527
    5. ' abs' → logprob: -4.233846187591553
    6. 'max' → logprob: -4.358846187591553
    7. '(a' → logprob: -4.483846187591553
    8. '(b' → logprob: -4.858846187591553
    9. '(abs' → logprob: -4.858846187591553
    10. ' b' → logprob: -5.608846187591553

Token 59: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.911339282989502
    2. '1' → logprob: -1.036339282989502
    3. 'b' → logprob: -1.911339282989502
    4. 'abs' → logprob: -3.411339282989502
    5. ' a' → logprob: -4.036339282989502
    6. ' ' → logprob: -4.411339282989502
    7. '(a' → logprob: -4.661339282989502
    8. ' b' → logprob: -5.036339282989502
    9. '0' → logprob: -5.161339282989502
    10. ' abs' → logprob: -5.286339282989502

Token 60: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18004575371742249
    2. 'if' → logprob: -1.8050457239151
    3. '+' → logprob: -9.680046081542969
    4. ' ' → logprob: -10.305046081542969
    5. '*(' → logprob: -10.430046081542969
    6. ')' → logprob: -10.430046081542969
    7. ')*(' → logprob: -10.430046081542969
    8. ')]' → logprob: -10.555046081542969
    9. '-' → logprob: -11.180046081542969
    10. 'a' → logprob: -11.680046081542969

Token 61: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08320474624633789
    2. ' a' → logprob: -2.583204746246338
    3. 'b' → logprob: -5.583204746246338
    4. ' b' → logprob: -7.583204746246338
    5. '	a' → logprob: -11.08320426940918
    6. ' ' → logprob: -11.83320426940918
    7. '(a' → logprob: -12.70820426940918
    8. '>a' → logprob: -13.08320426940918
    9. ')a' → logprob: -13.45820426940918
    10. ' abs' → logprob: -13.58320426940918

Token 62: '<b' (ID: 81814)
  Prédit: '>b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>b' → logprob: -0.32721424102783203
    2. '>' → logprob: -1.327214241027832
    3. '<b' → logprob: -5.077214241027832
    4. '<' → logprob: -5.452214241027832
    5. '>=' → logprob: -6.452214241027832
    6. ' >' → logprob: -7.077214241027832
    7. '>a' → logprob: -7.577214241027832
    8. '><' → logprob: -9.327214241027832
    9. '<=' → logprob: -9.577214241027832
    10. ' ' → logprob: -9.702214241027832

Token 63: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08894796669483185
    2. 'else' → logprob: -2.4639480113983154
    3. ')' → logprob: -12.088948249816895
    4. ' ' → logprob: -14.088948249816895
    5. '<|end|>' → logprob: -14.713948249816895
    6. ' )' → logprob: -14.838948249816895
    7. '	else' → logprob: -14.963948249816895
    8. '_else' → logprob: -15.963948249816895
    9. '```' → logprob: -15.963948249816895
    10. '1' → logprob: -16.088947296142578

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011104179546236992
    2. ' ' → logprob: -4.511104106903076
    3. '1' → logprob: -10.136104583740234
    4. '-' → logprob: -11.511104583740234
    5. ')' → logprob: -12.761104583740234
    6. '   ' → logprob: -13.823604583740234
    7. ' -' → logprob: -14.323604583740234
    8. '2' → logprob: -14.761104583740234
    9. '  ' → logprob: -15.511104583740234
    10. ' ' → logprob: -15.573604583740234

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013954727910459042
    2. ' ' → logprob: -6.6263957023620605
    3. '-' → logprob: -10.001395225524902
    4. '1' → logprob: -11.938895225524902
    5. '2' → logprob: -12.313895225524902
    6. ')' → logprob: -12.501395225524902
    7. ' -' → logprob: -13.751395225524902
    8. '```' → logprob: -14.188895225524902
    9. '  ' → logprob: -14.501395225524902
    10. 'a' → logprob: -14.563895225524902

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004449939355254173
    2. ')' → logprob: -5.504449844360352
    3. ' )' → logprob: -8.254449844360352
    4. ')])' → logprob: -9.754449844360352
    5. ']' → logprob: -11.379449844360352
    6. 'else' → logprob: -11.754449844360352
    7. '+' → logprob: -12.004449844360352
    8. ' else' → logprob: -12.254449844360352
    9. '))' → logprob: -12.504449844360352
    10. ')],' → logprob: -12.629449844360352

Token 67: 'A' (ID: 32)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.921786367893219
    2. 'l' → logprob: -2.171786308288574
    3. 'res' → logprob: -2.296786308288574
    4. 'for' → logprob: -2.921786308288574
    5. 'q' → logprob: -3.046786308288574
    6. 'm' → logprob: -3.046786308288574
    7. 'max' → logprob: -3.296786308288574
    8. 'Q' → logprob: -3.796786308288574
    9. 'print' → logprob: -3.921786308288574
    10. 'answer' → logprob: -4.171786308288574

Token 68: '=[]' (ID: 65563)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051616545766592026
    2. ' =' → logprob: -4.301616668701172
    3. '=[]' → logprob: -4.801616668701172
    4. '=A' → logprob: -4.801616668701172
    5. '=[' → logprob: -5.051616668701172
    6. '=len' → logprob: -5.551616668701172
    7. '=M' → logprob: -6.551616668701172
    8. '=max' → logprob: -6.801616668701172
    9. '=N' → logprob: -6.801616668701172
    10. '=sum' → logprob: -7.426616668701172

Token 69: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004762618336826563
    2. '<|end|>' → logprob: -5.879762649536133
    3. ' for' → logprob: -6.379762649536133
    4. 'n' → logprob: -9.754762649536133
    5. '```' → logprob: -10.254762649536133
    6. 's' → logprob: -10.504762649536133
    7. '
' → logprob: -10.879762649536133
    8. 'range' → logprob: -11.004762649536133
    9. 'i' → logprob: -11.254762649536133
    10. 't' → logprob: -11.254762649536133

Token 70: 'z' (ID: 89)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005910542327910662
    2. 'l' → logprob: -6.255910396575928
    3. 'i' → logprob: -6.505910396575928
    4. 'from' → logprob: -6.630910396575928
    5. 'j' → logprob: -8.630910873413086
    6. ' for' → logprob: -8.755910873413086
    7. 'import' → logprob: -9.130910873413086
    8. 'ans' → logprob: -9.380910873413086
    9. '```' → logprob: -9.505910873413086
    10. 's' → logprob: -9.755910873413086

Token 71: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16862913966178894
    2. '=A' → logprob: -2.2936291694641113
    3. '=i' → logprob: -3.5436291694641113
    4. '=[]' → logprob: -4.543629169464111
    5. '=z' → logprob: -5.543629169464111
    6. '=len' → logprob: -6.168629169464111
    7. '=[' → logprob: -6.418629169464111
    8. 'x' → logprob: -7.293629169464111
    9. '=end' → logprob: -7.418629169464111
    10. ' =' → logprob: -7.418629169464111

Token 72: 'range' (ID: 20967)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04276610538363457
    2. 'cum' → logprob: -3.7927660942077637
    3. 'K' → logprob: -4.417766094207764
    4. '-' → logprob: -6.792766094207764
    5. '[]' → logprob: -6.917766094207764
    6. '1' → logprob: -6.917766094207764
    7. 'N' → logprob: -7.167766094207764
    8. 'float' → logprob: -7.292766094207764
    9. 'len' → logprob: -7.542766094207764
    10. ' ' → logprob: -7.667766094207764

Token 73: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14370262622833252
    2. '(K' → logprob: -2.518702507019043
    3. '(' → logprob: -3.393702507019043
    4. '(len' → logprob: -4.393702507019043
    5. '(n' → logprob: -5.268702507019043
    6. '(i' → logprob: -6.518702507019043
    7. '(L' → logprob: -8.643702507019043
    8. '(M' → logprob: -8.768702507019043
    9. '((' → logprob: -9.018702507019043
    10. '(s' → logprob: -9.768702507019043

Token 74: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.014132129959762096
    2. ')' → logprob: -4.764132022857666
    3. ' -' → logprob: -5.639132022857666
    4. '-' → logprob: -7.014132022857666
    5. '))' → logprob: -8.389132499694824
    6. '+' → logprob: -8.639132499694824
    7. 'K' → logprob: -8.764132499694824
    8. ',K' → logprob: -9.264132499694824
    9. '-(' → logprob: -9.514132499694824
    10. ' )' → logprob: -9.639132499694824

Token 75: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002507047727704048
    2. ' +' → logprob: -6.002507209777832
    3. '+)' → logprob: -11.502507209777832
    4. ' ' → logprob: -12.377507209777832
    5. ')' → logprob: -12.377507209777832
    6. ')+' → logprob: -12.627507209777832
    7. '1' → logprob: -13.377507209777832
    8. '()+' → logprob: -13.627507209777832
    9. '+i' → logprob: -14.377507209777832
    10. ' )' → logprob: -14.377507209777832

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.500028610229492
    3. '```' → logprob: -15.375028610229492
    4. ')' → logprob: -15.625028610229492
    5. '2' → logprob: -16.062528610229492
    6. '+' → logprob: -16.062528610229492
    7. '１' → logprob: -17.062528610229492
    8. '3' → logprob: -17.312528610229492
    9. '
' → logprob: -17.562528610229492
    10. '0' → logprob: -17.625028610229492

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03861845284700394
    2. ')
' → logprob: -3.288618564605713
    3. ')
' → logprob: -7.913618564605713
    4. ' )' → logprob: -9.163618087768555
    5. ');' → logprob: -9.413618087768555
    6. ' )
' → logprob: -11.663618087768555
    7. ')

' → logprob: -11.913618087768555
    8. '`)' → logprob: -14.038618087768555
    9. '')' → logprob: -14.163618087768555
    10. '),' → logprob: -14.163618087768555

Token 78: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021045419271104038
    2. ' for' → logprob: -8.500210762023926
    3. '<|end|>' → logprob: -12.250210762023926
    4. '
' → logprob: -13.500210762023926
    5. '```' → logprob: -14.750210762023926
    6. '[' → logprob: -15.500210762023926
    7. 'A' → logprob: -16.50020980834961
    8. 'n' → logprob: -17.00020980834961
    9. 's' → logprob: -17.50020980834961
    10. ' 
' → logprob: -17.75020980834961

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029246658086776733
    2. ' i' → logprob: -4.029246807098389
    3. 'x' → logprob: -5.404246807098389
    4. 'l' → logprob: -6.029246807098389
    5. 'j' → logprob: -6.404246807098389
    6. 'r' → logprob: -8.02924633026123
    7. 'k' → logprob: -8.15424633026123
    8. 's' → logprob: -8.15424633026123
    9. 'w' → logprob: -8.27924633026123
    10. '_i' → logprob: -8.65424633026123

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03540896996855736
    2. 'in' → logprob: -3.5354089736938477
    3. ' z' → logprob: -5.660408973693848
    4. 'z' → logprob: -6.160408973693848
    5. ' ' → logprob: -10.910408973693848
    6. ',z' → logprob: -10.910408973693848
    7. 'In' → logprob: -12.785408973693848
    8. 'inz' → logprob: -13.472908973693848
    9. ' inz' → logprob: -13.472908973693848
    10. '=z' → logprob: -14.160408973693848

Token 81: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004086828324943781
    2. ' z' → logprob: -5.504086971282959
    3. 'range' → logprob: -12.6290864944458
    4. ' ' → logprob: -12.8790864944458
    5. ' range' → logprob: -13.7540864944458
    6. '	z' → logprob: -14.3790864944458
    7. '[z' → logprob: -14.5040864944458
    8. '(z' → logprob: -15.7540864944458
    9. '   ' → logprob: -16.879087448120117
    10. '  ' → logprob: -17.004087448120117

Token 82: ':A' (ID: 112571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03818849101662636
    2. ':
' → logprob: -3.2881884574890137
    3. ' :' → logprob: -9.288188934326172
    4. ':A' → logprob: -10.663188934326172
    5. ' :
' → logprob: -11.288188934326172
    6. ':
' → logprob: -11.913188934326172
    7. 'A' → logprob: -12.288188934326172
    8. ',' → logprob: -13.163188934326172
    9. ':

' → logprob: -13.413188934326172
    10. ' A' → logprob: -14.038188934326172

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3200233578681946
    2. 'pp' → logprob: -1.4450232982635498
    3. '.' → logprob: -3.94502329826355
    4. '.pp' → logprob: -4.570023536682129
    5. '.p' → logprob: -5.695023536682129
    6. 'p' → logprob: -6.070023536682129
    7. ' .' → logprob: -7.320023536682129
    8. '+.' → logprob: -7.445023536682129
    9. '+=' → logprob: -7.695023536682129
    10. '+' → logprob: -7.695023536682129

Token 84: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0005064461147412658
    2. '(' → logprob: -7.875506401062012
    3. 'cum' → logprob: -9.625506401062012
    4. '((' → logprob: -10.000506401062012
    5. ' (' → logprob: -12.250506401062012
    6. ' cum' → logprob: -12.625506401062012
    7. '(len' → logprob: -13.375506401062012
    8. '(i' → logprob: -13.750506401062012
    9. '(-' → logprob: -13.750506401062012
    10. '(sum' → logprob: -14.375506401062012

Token 85: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.07885706424713135
    2. ' cum' → logprob: -3.078856945037842
    3. '-c' → logprob: -3.578856945037842
    4. ' -' → logprob: -6.953856945037842
    5. '-' → logprob: -7.953856945037842
    6. '-(' → logprob: -8.828857421875
    7. '-i' → logprob: -9.891357421875
    8. ')' → logprob: -10.078857421875
    9. ' i' → logprob: -10.141357421875
    10. ' ' → logprob: -10.453857421875

Token 86: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002142650482710451
    2. '[' → logprob: -8.875214576721191
    3. '[K' → logprob: -10.625214576721191
    4. '[z' → logprob: -11.125214576721191
    5. 'i' → logprob: -11.375214576721191
    6. ' [' → logprob: -12.000214576721191
    7. ')[' → logprob: -12.375214576721191
    8. 'z' → logprob: -12.875214576721191
    9. '[a' → logprob: -13.250214576721191
    10. '[k' → logprob: -13.750214576721191

Token 87: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009037189302034676
    2. ' +' → logprob: -7.625903606414795
    3. ']+' → logprob: -8.750904083251953
    4. 'K' → logprob: -9.500904083251953
    5. '+k' → logprob: -10.125904083251953
    6. ' ' → logprob: -10.250904083251953
    7. '+

' → logprob: -10.375904083251953
    8. ']' → logprob: -10.375904083251953
    9. '+
' → logprob: -11.250904083251953
    10. '＋' → logprob: -12.125904083251953

Token 88: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001777960715116933
    2. ' K' → logprob: -8.875177383422852
    3. ' ' → logprob: -10.750177383422852
    4. '(K' → logprob: -12.000177383422852
    5. '1' → logprob: -12.875177383422852
    6. '	K' → logprob: -13.500177383422852
    7. '   ' → logprob: -13.875177383422852
    8. '>K' → logprob: -14.000177383422852
    9. '(' → logprob: -14.125177383422852
    10. '  ' → logprob: -14.250177383422852

Token 89: '-' (ID: 12)
  Prédit: ']-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.4400498867034912
    2. ']' → logprob: -1.1900498867034912
    3. '-' → logprob: -3.065049886703491
    4. ' ]' → logprob: -5.56505012512207
    5. ' -' → logprob: -6.81505012512207
    6. ' ' → logprob: -8.81505012512207
    7. ']+' → logprob: -11.56505012512207
    8. ']==' → logprob: -12.06505012512207
    9. '])-' → logprob: -12.44005012512207
    10. '```' → logprob: -12.44005012512207

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002973280206788331
    2. '-' → logprob: -9.500297546386719
    3. '2' → logprob: -9.500297546386719
    4. ' ' → logprob: -9.625297546386719
    5. ']' → logprob: -10.250297546386719
    6. '])' → logprob: -10.750297546386719
    7. ']-' → logprob: -10.875297546386719
    8. ' -' → logprob: -13.125297546386719
    9. '```' → logprob: -13.875297546386719
    10. '])-' → logprob: -14.250297546386719

Token 91: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.029790766537189484
    2. ']' → logprob: -3.6547908782958984
    3. ' ]' → logprob: -6.029790878295898
    4. '-' → logprob: -7.029790878295898
    5. ' -' → logprob: -8.779790878295898
    6. ' ' → logprob: -11.279790878295898
    7. ']+' → logprob: -11.654790878295898
    8. '])' → logprob: -12.154790878295898
    9. '])-' → logprob: -12.654790878295898
    10. '],' → logprob: -13.529790878295898

Token 92: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.008615042082965374
    2. ' cum' → logprob: -4.758615016937256
    3. 'c' → logprob: -14.883615493774414
    4. ' ' → logprob: -16.508615493774414
    5. '	c' → logprob: -16.883615493774414
    6. '  ' → logprob: -18.383615493774414
    7. '   ' → logprob: -18.883615493774414
    8. 'cul' → logprob: -19.383615493774414
    9. ')' → logprob: -19.508615493774414
    10. '(c' → logprob: -19.883615493774414

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. 'i' → logprob: -16.75
    4. ' i' → logprob: -19.5
    5. ' [' → logprob: -20.0
    6. '[I' → logprob: -20.125
    7. ' ' → logprob: -21.25
    8. '	i' → logprob: -22.5
    9. '{i' → logprob: -22.875
    10. '[a' → logprob: -23.125

Token 94: '])' (ID: 4636)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -1.3361947536468506
    2. ')' → logprob: -1.9611947536468506
    3. ']))' → logprob: -1.9611947536468506
    4. '],' → logprob: -2.2111947536468506
    5. '])' → logprob: -2.4611947536468506
    6. ']+' → logprob: -2.5861947536468506
    7. ')==' → logprob: -2.9611947536468506
    8. '),' → logprob: -3.2111947536468506
    9. ')+' → logprob: -3.3361947536468506
    10. ']' → logprob: -3.7111947536468506

Token 95: '==' (ID: 560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2255551517009735
    2. '+' → logprob: -2.225555181503296
    3. ' )' → logprob: -3.350555181503296
    4. ',' → logprob: -3.475555181503296
    5. ',i' → logprob: -4.600554943084717
    6. ' ,' → logprob: -5.600554943084717
    7. ',K' → logprob: -5.600554943084717
    8. ' +' → logprob: -5.725554943084717
    9. '==' → logprob: -6.225554943084717
    10. ',)' → logprob: -6.600554943084717

Token 96: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.012576169334352016
    2. ' K' → logprob: -4.637576103210449
    3. '0' → logprob: -6.387576103210449
    4. ' ' → logprob: -7.137576103210449
    5. '(K' → logprob: -8.38757610321045
    6. '(' → logprob: -10.63757610321045
    7. ' (' → logprob: -10.88757610321045
    8. '1' → logprob: -11.51257610321045
    9. 'N' → logprob: -11.63757610321045
    10. '   ' → logprob: -11.88757610321045

Token 97: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012882133014500141
    2. ' -' → logprob: -6.751288414001465
    3. '1' → logprob: -9.126288414001465
    4. ' ' → logprob: -11.751288414001465
    5. '-i' → logprob: -14.876288414001465
    6. '2' → logprob: -15.251288414001465
    7. '-token' → logprob: -16.25128746032715
    8. '```' → logprob: -16.25128746032715
    9. ']-' → logprob: -16.50128746032715
    10. ')-' → logprob: -16.50128746032715

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -10.87502384185791
    3. '<|end|>' → logprob: -12.25002384185791
    4. '2' → logprob: -16.625024795532227
    5. '```' → logprob: -17.375024795532227
    6. '<|end|>' → logprob: -17.375024795532227
    7. '  ' → logprob: -18.500024795532227
    8. '   ' → logprob: -18.750024795532227
    9. '۱' → logprob: -19.000024795532227
    10. '１' → logprob: -19.250024795532227

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004669476300477982
    2. ' )' → logprob: -5.379669666290283
    3. ')
' → logprob: -10.254669189453125
    4. '))' → logprob: -12.004669189453125
    5. ')`' → logprob: -13.754669189453125
    6. ' )
' → logprob: -14.129669189453125
    7. ' ' → logprob: -14.254669189453125
    8. ')return' → logprob: -14.379669189453125
    9. ');' → logprob: -14.504669189453125
    10. ' ' → logprob: -14.629669189453125

Token 100: 'import' (ID: 561)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008478296920657158
    2. 'ans' → logprob: -5.758478164672852
    3. 'for' → logprob: -6.383478164672852
    4. 'm' → logprob: -7.008478164672852
    5. 'max' → logprob: -7.633478164672852
    6. ' print' → logprob: -7.883478164672852
    7. 'idx' → logprob: -7.883478164672852
    8. 'r' → logprob: -8.383478164672852
    9. 'best' → logprob: -8.508478164672852
    10. 'i' → logprob: -8.758478164672852

Token 101: ' collections' (ID: 22690)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1711282730102539
    2. 'math' → logprob: -1.921128273010254
    3. 'heap' → logprob: -5.546128273010254
    4. 'collections' → logprob: -5.796128273010254
    5. 'statistics' → logprob: -6.421128273010254
    6. ' sys' → logprob: -6.546128273010254
    7. 'it' → logprob: -7.921128273010254
    8. ' math' → logprob: -8.046128273010254
    9. ' itertools' → logprob: -9.796128273010254
    10. 'bis' → logprob: -10.546128273010254

Token 102: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7580642104148865
    2. 'd' → logprob: -1.7580642700195312
    3. 'D' → logprob: -2.2580642700195312
    4. 'dq' → logprob: -3.0080642700195312
    5. 'deque' → logprob: -3.0080642700195312
    6. 'Q' → logprob: -3.1330642700195312
    7. 'q' → logprob: -3.1330642700195312
    8. 's' → logprob: -4.758064270019531
    9. 'dp' → logprob: -4.883064270019531
    10. ' 
' → logprob: -5.008064270019531

Token 103: 'q' (ID: 80)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.340811848640442
    2. 'D' → logprob: -2.2158117294311523
    3. 'd' → logprob: -2.2158117294311523
    4. 'c' → logprob: -2.2158117294311523
    5. 'q' → logprob: -2.2158117294311523
    6. 'dq' → logprob: -2.3408117294311523
    7. 'C' → logprob: -2.4658117294311523
    8. 'cnt' → logprob: -3.7158117294311523
    9. 'dp' → logprob: -3.8408117294311523
    10. 'de' → logprob: -4.340811729431152

Token 104: 'mn' (ID: 34579)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00549769913777709
    2. ' =' → logprob: -5.255497932434082
    3. '=q' → logprob: -9.005497932434082
    4. 'ue' → logprob: -9.630497932434082
    5. '=u' → logprob: -10.505497932434082
    6. 'u' → logprob: -11.630497932434082
    7. 'uer' → logprob: -12.005497932434082
    8. '=re' → logprob: -12.005497932434082
    9. '=pd' → logprob: -12.505497932434082
    10. '=[]' → logprob: -12.880497932434082

Token 105: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2862517237663269
    2. ' =' → logprob: -1.5362517833709717
    3. 'ue' → logprob: -3.4112517833709717
    4. 'ues' → logprob: -8.53625202178955
    5. 'u' → logprob: -9.03625202178955
    6. ' ' → logprob: -9.03625202178955
    7. 'uer' → logprob: -9.16125202178955
    8. '=u' → logprob: -9.28625202178955
    9. '=int' → logprob: -11.03625202178955
    10. 'uel' → logprob: -11.16125202178955

Token 106: 'collections' (ID: 83306)
  Prédit: 'collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0011743901995941997
    2. ' collections' → logprob: -6.751174449920654
    3. 'deque' → logprob: -13.251173973083496
    4. 'collection' → logprob: -14.001173973083496
    5. 'min' → logprob: -14.751173973083496
    6. '0' → logprob: -15.501173973083496
    7. '.collections' → logprob: -15.501173973083496
    8. '[' → logprob: -16.251174926757812
    9. 'int' → logprob: -16.251174926757812
    10. '[]' → logprob: -16.251174926757812

Token 107: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.5851005911827087
    2. 'deque' → logprob: -0.8351005911827087
    3. ' deque' → logprob: -4.8351006507873535
    4. 'import' → logprob: -7.8351006507873535
    5. '```' → logprob: -8.210100173950195
    6. '.Counter' → logprob: -8.585100173950195
    7. 'de' → logprob: -8.960100173950195
    8. '.dequeue' → logprob: -9.085100173950195
    9. ',de' → logprob: -10.710100173950195
    10. 'Deque' → logprob: -10.835100173950195

Token 108: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00016384923947043717
    2. 'qu' → logprob: -9.125164031982422
    3. 'q' → logprob: -10.125164031982422
    4. 'deque' → logprob: -11.750164031982422
    5. 'queue' → logprob: -12.000164031982422
    6. 'uq' → logprob: -14.625164031982422
    7. 'ques' → logprob: -16.750164031982422
    8. 'quec' → logprob: -16.750164031982422
    9. 'quee' → logprob: -17.125164031982422
    10. 'ue' → logprob: -17.125164031982422

Token 109: '();' (ID: 4177)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02556733414530754
    2. '([]' → logprob: -4.275567531585693
    3. '()
' → logprob: -4.775567531585693
    4. '();' → logprob: -6.400567531585693
    5. '[]' → logprob: -8.150567054748535
    6. '([' → logprob: -8.525567054748535
    7. '([])
' → logprob: -8.900567054748535
    8. '(sorted' → logprob: -8.900567054748535
    9. '([(' → logprob: -9.025567054748535
    10. '(' → logprob: -9.275567054748535

Token 110: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6255698204040527
    2. 'ans' → logprob: -1.7505698204040527
    3. 'res' → logprob: -2.2505698204040527
    4. 'q' → logprob: -3.2505698204040527
    5. 'mx' → logprob: -3.8755698204040527
    6. 'mn' → logprob: -3.8755698204040527
    7. 'cnt' → logprob: -4.250569820404053
    8. 'l' → logprob: -4.500569820404053
    9. 'ret' → logprob: -4.875569820404053
    10. 's' → logprob: -4.875569820404053

Token 111: 'mx' (ID: 32467)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7668034434318542
    2. 'n' → logprob: -1.641803503036499
    3. 'in' → logprob: -1.766803503036499
    4. 'ax' → logprob: -2.891803503036499
    5. 'mn' → logprob: -2.891803503036499
    6. 'x' → logprob: -4.26680326461792
    7. 'min' → logprob: -4.39180326461792
    8. '=[]' → logprob: -5.01680326461792
    9. 'm' → logprob: -5.76680326461792
    10. '=ax' → logprob: -5.89180326461792

Token 112: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.36574100604048e-06
    2. ' =' → logprob: -12.375004768371582
    3. '=[]' → logprob: -17.125003814697266
    4. 'collections' → logprob: -17.250003814697266
    5. '=q' → logprob: -17.750003814697266
    6. ' collections' → logprob: -18.000003814697266
    7. '=require' → logprob: -18.000003814697266
    8. '＝' → logprob: -18.125003814697266
    9. '=pd' → logprob: -18.750003814697266
    10. '=models' → logprob: -19.250003814697266

Token 113: 'collections' (ID: 83306)
  Prédit: 'collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.3425219549390022e-05
    2. ' collections' → logprob: -11.25001335144043
    3. '.collections' → logprob: -15.50001335144043
    4. 'deque' → logprob: -16.25001335144043
    5. 'collection' → logprob: -16.75001335144043
    6. '[]' → logprob: -18.25001335144043
    7. ' ' → logprob: -20.87501335144043
    8. '(collection' → logprob: -21.37501335144043
    9. '   ' → logprob: -21.75001335144043
    10. '<|end|>' → logprob: -21.75001335144043

Token 114: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.001133189769461751
    2. 'deque' → logprob: -7.501132965087891
    3. ' deque' → logprob: -8.12613296508789
    4. '.Counter' → logprob: -8.50113296508789
    5. '.dequeue' → logprob: -10.62613296508789
    6. 'import' → logprob: -10.75113296508789
    7. '.' → logprob: -11.62613296508789
    8. 'Deque' → logprob: -12.00113296508789
    9. ' import' → logprob: -12.00113296508789
    10. ' .' → logprob: -12.50113296508789

Token 115: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.011288318783044815
    2. 'q' → logprob: -4.511288166046143
    3. 'qu' → logprob: -8.7612886428833
    4. 'uq' → logprob: -10.3862886428833
    5. 'queue' → logprob: -10.6362886428833
    6. 'ue' → logprob: -11.7612886428833
    7. 'c' → logprob: -11.8862886428833
    8. 'deque' → logprob: -12.2612886428833
    9. '```' → logprob: -13.1362886428833
    10. 'ques' → logprob: -13.6362886428833

Token 116: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011545089073479176
    2. '();' → logprob: -6.87615442276001
    3. '()
' → logprob: -10.001154899597168
    4. '(' → logprob: -10.626154899597168
    5. '()

' → logprob: -11.251154899597168
    6. '()]' → logprob: -11.376154899597168
    7. '([]' → logprob: -12.251154899597168
    8. '()<' → logprob: -12.501154899597168
    9. '()>' → logprob: -13.001154899597168
    10. '();)' → logprob: -13.001154899597168

Token 117: 's' (ID: 82)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7052097916603088
    2. 'for' → logprob: -1.455209732055664
    3. 'l' → logprob: -2.205209732055664
    4. 'ans' → logprob: -2.205209732055664
    5. 'r' → logprob: -3.455209732055664
    6. 'i' → logprob: -4.705209732055664
    7. 'result' → logprob: -5.580209732055664
    8. 'L' → logprob: -6.330209732055664
    9. 's' → logprob: -6.580209732055664
    10. 'answer' → logprob: -6.830209732055664

Token 118: 'min' (ID: 1493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0022448194213211536
    2. '=[]' → logprob: -6.25224494934082
    3. 'um' → logprob: -9.37724494934082
    4. '=set' → logprob: -9.62724494934082
    5. '=i' → logprob: -9.75224494934082
    6. '=sum' → logprob: -9.87724494934082
    7. '=-' → logprob: -11.37724494934082
    8. ' =' → logprob: -11.50224494934082
    9. '=[]
' → logprob: -12.25224494934082
    10. '=s' → logprob: -12.62724494934082

Token 119: '=[]' (ID: 65563)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05630591884255409
    2. '=s' → logprob: -3.0563058853149414
    3. '=[]' → logprob: -5.056305885314941
    4. ' =' → logprob: -7.681305885314941
    5. ',' → logprob: -8.181305885314941
    6. '=i' → logprob: -8.431305885314941
    7. ',s' → logprob: -9.431305885314941
    8. '=q' → logprob: -10.056305885314941
    9. '={}' → logprob: -10.556305885314941
    10. '=int' → logprob: -10.681305885314941

Token 120: ';' (ID: 26)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06290170550346375
    2. 'for' → logprob: -3.437901735305786
    3. '=' → logprob: -4.312901496887207
    4. '=[]' → logprob: -4.562901496887207
    5. '=s' → logprob: -6.062901496887207
    6. ',' → logprob: -7.562901496887207
    7. ',s' → logprob: -7.687901496887207
    8. 'import' → logprob: -8.562901496887207
    9. ';' → logprob: -8.812901496887207
    10. '=[]
' → logprob: -8.937901496887207

Token 121: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0014363046502694488
    2. '[]' → logprob: -7.376436233520508
    3. 'sum' → logprob: -9.001436233520508
    4. '0' → logprob: -9.001436233520508
    5. 'for' → logprob: -9.376436233520508
    6. 'ans' → logprob: -9.751436233520508
    7. 'max' → logprob: -9.876436233520508
    8. 'i' → logprob: -10.126436233520508
    9. 'min' → logprob: -10.251436233520508
    10. '[' → logprob: -10.376436233520508

Token 122: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7969712615013123
    2. '=' → logprob: -1.296971321105957
    3. '=[]' → logprob: -1.296971321105957
    4. 'mx' → logprob: -6.671971321105957
    5. '=max' → logprob: -7.046971321105957
    6. 'min' → logprob: -8.171971321105957
    7. '=[' → logprob: -9.046971321105957
    8. '=[]
' → logprob: -10.671971321105957
    9. 'um' → logprob: -11.546971321105957
    10. '=[]
' → logprob: -13.171971321105957

Token 123: '=[]' (ID: 65563)
  Prédit: '=[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.01115687657147646
    2. '=' → logprob: -4.511157035827637
    3. '=[]
' → logprob: -9.386157035827637
    4. '=[]
' → logprob: -11.636157035827637
    5. '={}' → logprob: -12.011157035827637
    6. '=[],' → logprob: -12.261157035827637
    7. '=[' → logprob: -12.511157035827637
    8. '[]=' → logprob: -14.636157035827637
    9. ' =' → logprob: -14.886157035827637
    10. '[]' → logprob: -15.261157035827637

Token 124: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06177740916609764
    2. 'ans' → logprob: -3.311777353286743
    3. 'l' → logprob: -4.811777591705322
    4. 'res' → logprob: -4.811777591705322
    5. 'answer' → logprob: -6.436777591705322
    6. 'i' → logprob: -6.561777591705322
    7. 'r' → logprob: -6.811777591705322
    8. ' for' → logprob: -6.811777591705322
    9. 'z' → logprob: -7.436777591705322
    10. 's' → logprob: -8.061777114868164

Token 125: 'j' (ID: 73)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006518668029457331
    2. 'l' → logprob: -5.631518840789795
    3. 'ans' → logprob: -6.631518840789795
    4. 'res' → logprob: -7.631518840789795
    5. 'left' → logprob: -8.256518363952637
    6. 'j' → logprob: -8.256518363952637
    7. 'i' → logprob: -9.381518363952637
    8. 'result' → logprob: -9.381518363952637
    9. 'z' → logprob: -9.756518363952637
    10. 'from' → logprob: -10.006518363952637

Token 126: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021039829589426517
    2. ' =' → logprob: -6.377103805541992
    3. '=i' → logprob: -8.627103805541992
    4. '=j' → logprob: -8.627103805541992
    5. '=s' → logprob: -11.127103805541992
    6. '=k' → logprob: -11.502103805541992
    7. '=int' → logprob: -12.377103805541992
    8. '=q' → logprob: -12.752103805541992
    9. '=n' → logprob: -13.002103805541992
    10. '=N' → logprob: -13.502103805541992

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3464544432936236e-05
    2. ' ' → logprob: -10.125043869018555
    3. '1' → logprob: -13.125043869018555
    4. '-' → logprob: -14.125043869018555
    5. 'K' → logprob: -16.000043869018555
    6. 'k' → logprob: -16.125043869018555
    7. 'i' → logprob: -16.250043869018555
    8. 'N' → logprob: -16.875043869018555
    9. '=' → logprob: -17.000043869018555
    10. '012' → logprob: -17.500043869018555

Token 128: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007099312264472246
    2. ' for' → logprob: -5.007099151611328
    3. '
' → logprob: -8.007099151611328
    4. '<|end|>' → logprob: -10.132099151611328
    5. 'n' → logprob: -12.257099151611328
    6. 'i' → logprob: -13.132099151611328
    7. 's' → logprob: -14.632099151611328
    8. 'j' → logprob: -15.007099151611328
    9. 'while' → logprob: -15.132099151611328
    10. '	for' → logprob: -15.132099151611328

Token 129: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001249925117008388
    2. ' for' → logprob: -9.00012493133545
    3. 's' → logprob: -14.75012493133545
    4. ' ' → logprob: -15.25012493133545
    5. 'n' → logprob: -15.50012493133545
    6. '
' → logprob: -16.000125885009766
    7. 'N' → logprob: -16.750125885009766
    8. 'range' → logprob: -16.750125885009766
    9. 'j' → logprob: -16.875125885009766
    10. '	for' → logprob: -17.000125885009766

Token 130: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16175223886966705
    2. ' i' → logprob: -2.286752223968506
    3. 'j' → logprob: -3.161752223968506
    4. ' j' → logprob: -5.411752223968506
    5. 'x' → logprob: -7.661752223968506
    6. 'k' → logprob: -9.286752700805664
    7. ' range' → logprob: -9.411752700805664
    8. 'r' → logprob: -9.786752700805664
    9. ' x' → logprob: -10.036752700805664
    10. 'range' → logprob: -10.161752700805664

Token 131: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2855936884880066
    2. 'in' → logprob: -1.4105937480926514
    3. ',' → logprob: -6.035593509674072
    4. ',z' → logprob: -7.285593509674072
    5. ',in' → logprob: -8.03559398651123
    6. ' ,' → logprob: -8.53559398651123
    7. ',j' → logprob: -8.66059398651123
    8. ',v' → logprob: -8.66059398651123
    9. ',i' → logprob: -9.16059398651123
    10. ',n' → logprob: -9.28559398651123

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14270418882369995
    2. 'in' → logprob: -2.0177042484283447
    3. 'enumer' → logprob: -11.017704010009766
    4. ',' → logprob: -12.517704010009766
    5. ' ' → logprob: -12.642704010009766
    6. ',in' → logprob: -14.142704010009766
    7. ' ,' → logprob: -14.517704010009766
    8. 'ind' → logprob: -14.517704010009766
    9. '
' → logprob: -14.642704010009766
    10. ' enumerate' → logprob: -14.767704010009766

Token 133: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.12693586945533752
    2. 'enumer' → logprob: -2.1269359588623047
    3. 'z' → logprob: -12.626935958862305
    4. ' z' → logprob: -13.126935958862305
    5. 'range' → logprob: -14.126935958862305
    6. ' range' → logprob: -14.751935958862305
    7. 'en' → logprob: -15.126935958862305
    8. '(en' → logprob: -15.126935958862305
    9. 'in' → logprob: -15.376935958862305
    10. ' ' → logprob: -16.001935958862305

Token 134: '(P' (ID: 8952)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.1766708940267563
    2. ' P' → logprob: -2.676670789718628
    3. 'A' → logprob: -2.801670789718628
    4. '(P' → logprob: -4.301671028137207
    5. ' A' → logprob: -4.551671028137207
    6. 'range' → logprob: -5.676671028137207
    7. ' range' → logprob: -6.051671028137207
    8. '(A' → logprob: -6.301671028137207
    9. '(range' → logprob: -7.926671028137207
    10. 'z' → logprob: -9.301671028137207

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013844015775248408
    2. '):
' → logprob: -6.876384258270264
    3. ':' → logprob: -8.126384735107422
    4. '[j' → logprob: -10.751384735107422
    5. '[' → logprob: -11.001384735107422
    6. '[:' → logprob: -12.001384735107422
    7. '[i' → logprob: -12.376384735107422
    8. ' ):' → logprob: -13.001384735107422
    9. '):
' → logprob: -13.126384735107422
    10. '):

' → logprob: -14.251384735107422

Token 136: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.026197299361228943
    2. '   ' → logprob: -3.7761971950531006
    3. '	while' → logprob: -6.02619743347168
    4. 'while' → logprob: -7.65119743347168
    5. '<|end|>' → logprob: -10.27619743347168
    6. '   ' → logprob: -12.02619743347168
    7. '
' → logprob: -12.65119743347168
    8. ' if' → logprob: -12.77619743347168
    9. ' ' → logprob: -13.52619743347168
    10. '    
' → logprob: -13.65119743347168

Token 137: ' len' (ID: 4631)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012536730617284775
    2. ' q' → logprob: -4.387536525726318
    3. 'j' → logprob: -10.887537002563477
    4. 'len' → logprob: -12.637537002563477
    5. 's' → logprob: -12.762537002563477
    6. '(q' → logprob: -14.137537002563477
    7. ' len' → logprob: -15.012537002563477
    8. ' j' → logprob: -15.012537002563477
    9. ' not' → logprob: -15.137537002563477
    10. '	q' → logprob: -15.762537002563477

Token 138: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.38689208030700684
    2. '(q' → logprob: -1.1368920803070068
    3. '(s' → logprob: -11.636892318725586
    4. 's' → logprob: -12.136892318725586
    5. ' q' → logprob: -12.511892318725586
    6. '	q' → logprob: -13.011892318725586
    7. '{' → logprob: -15.136892318725586
    8. ' (' → logprob: -15.386892318725586
    9. '(' → logprob: -16.011892318725586
    10. '_q' → logprob: -16.386892318725586

Token 139: 'mn' (ID: 34579)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.5786462426185608
    2. 'mn' → logprob: -0.8286462426185608
    3. 'min' → logprob: -6.328646183013916
    4. 'max' → logprob: -7.203646183013916
    5. 'q' → logprob: -8.953646659851074
    6. '>' → logprob: -10.578646659851074
    7. 'and' → logprob: -12.078646659851074
    8. 'm' → logprob: -12.953646659851074
    9. '
' → logprob: -13.078646659851074
    10. ' mn' → logprob: -13.328646659851074

Token 140: ')' (ID: 8)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.45373642444610596
    2. '>' → logprob: -1.203736424446106
    3. ' and' → logprob: -2.8287363052368164
    4. ')>' → logprob: -5.453736305236816
    5. ')' → logprob: -6.703736305236816
    6. '()>' → logprob: -10.703736305236816
    7. '
' → logprob: -11.203736305236816
    8. '```' → logprob: -11.953736305236816
    9. '!=' → logprob: -12.328736305236816
    10. ' >' → logprob: -12.578736305236816

Token 141: ' and' (ID: 326)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3250263035297394
    2. 'and' → logprob: -1.325026273727417
    3. ' and' → logprob: -4.450026512145996
    4. '!=' → logprob: -11.950026512145996
    5. '>a' → logprob: -13.075026512145996
    6. ' >' → logprob: -13.200026512145996
    7. '&gt' → logprob: -13.825026512145996
    8. '()>' → logprob: -14.075026512145996
    9. '
' → logprob: -14.325026512145996
    10. 'to' → logprob: -14.450026512145996

Token 142: ' q' (ID: 2335)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.014386911876499653
    2. ' P' → logprob: -4.264387130737305
    3. 'v' → logprob: -9.014387130737305
    4. 'q' → logprob: -9.264387130737305
    5. ' v' → logprob: -12.639387130737305
    6. ' q' → logprob: -13.264387130737305
    7. ' ' → logprob: -14.139387130737305
    8. '	P' → logprob: -14.764387130737305
    9. 'p' → logprob: -15.014387130737305
    10. '   ' → logprob: -15.264387130737305

Token 143: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -5.1928003813372925e-05
    2. ' mn' → logprob: -11.000051498413086
    3. 'min' → logprob: -11.125051498413086
    4. 'm' → logprob: -11.875051498413086
    5. 'q' → logprob: -12.375051498413086
    6. 'mx' → logprob: -12.625051498413086
    7. '[' → logprob: -13.375051498413086
    8. 'Mn' → logprob: -14.125051498413086
    9. '>' → logprob: -14.250051498413086
    10. 'n' → logprob: -14.250051498413086

Token 144: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0005975929088890553
    2. ' and' → logprob: -7.5005974769592285
    3. 'and' → logprob: -10.125597953796387
    4. '>' → logprob: -13.125597953796387
    5. '[' → logprob: -13.250597953796387
    6. ' ' → logprob: -15.500597953796387
    7. '][-' → logprob: -15.500597953796387
    8. '```' → logprob: -15.750597953796387
    9. ' [-' → logprob: -16.50059700012207
    10. ')' → logprob: -16.75059700012207

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8865644335746765
    2. '()][' → logprob: -1.7615644931793213
    3. '][' → logprob: -2.3865644931793213
    4. ' ' → logprob: -2.7615644931793213
    5. ']' → logprob: -2.7615644931793213
    6. '()' → logprob: -3.0115644931793213
    7. '0' → logprob: -3.3865644931793213
    8. ':' → logprob: -3.7615644931793213
    9. 'q' → logprob: -4.261564254760742
    10. '[' → logprob: -4.511564254760742

Token 146: ']>' (ID: 54651)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.43485841155052185
    2. '[' → logprob: -1.0598584413528442
    3. '>[' → logprob: -6.184858322143555
    4. '>' → logprob: -6.309858322143555
    5. ']>' → logprob: -7.059858322143555
    6. '()[' → logprob: -7.934858322143555
    7. ''][' → logprob: -8.184858322143555
    8. ']' → logprob: -8.434858322143555
    9. '"][' → logprob: -9.309858322143555
    10. 'and' → logprob: -9.684858322143555

Token 147: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003177952254191041
    2. ' v' → logprob: -5.753178119659424
    3. '[v' → logprob: -16.253177642822266
    4. '	v' → logprob: -16.503177642822266
    5. 'idx' → logprob: -17.128177642822266
    6. 'P' → logprob: -17.253177642822266
    7. ' ' → logprob: -17.253177642822266
    8. '<v' → logprob: -18.753177642822266
    9. 'vq' → logprob: -18.753177642822266
    10. '(v' → logprob: -18.878177642822266

Token 148: ':q' (ID: 184252)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2200324535369873
    2. ':q' → logprob: -1.7200324535369873
    3. ':
' → logprob: -4.345032691955566
    4. ' :' → logprob: -5.220032691955566
    5. ' :
' → logprob: -9.845032691955566
    6. ';q' → logprob: -12.345032691955566
    7. '):' → logprob: -13.095032691955566
    8. ' ' → logprob: -13.220032691955566
    9. ' q' → logprob: -13.470032691955566
    10. ',q' → logprob: -13.720032691955566

Token 149: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.0002525184245314449
    2. 'n' → logprob: -9.125252723693848
    3. 'nm' → logprob: -9.125252723693848
    4. 'm' → logprob: -10.500252723693848
    5. ' mn' → logprob: -12.375252723693848
    6. '.pop' → logprob: -13.750252723693848
    7. 'mx' → logprob: -15.000252723693848
    8. '.mn' → logprob: -15.250252723693848
    9. 'mnt' → logprob: -15.500252723693848
    10. '   ' → logprob: -15.625252723693848

Token 150: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002740906202234328
    2. 'pop' → logprob: -8.375273704528809
    3. '.p' → logprob: -10.750273704528809
    4. '.' → logprob: -11.875273704528809
    5. '.append' → logprob: -11.875273704528809
    6. ' .' → logprob: -12.125273704528809
    7. ' pop' → logprob: -13.125273704528809
    8. '	pop' → logprob: -15.000273704528809
    9. '_pop' → logprob: -15.750273704528809
    10. 'Pop' → logprob: -16.375274658203125

Token 151: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.038148440420627594
    2. '()' → logprob: -3.2881484031677246
    3. ' ()
' → logprob: -10.038148880004883
    4. '()
' → logprob: -11.288148880004883
    5. ' while' → logprob: -11.413148880004883
    6. '()

' → logprob: -11.538148880004883
    7. 'while' → logprob: -11.913148880004883
    8. ')
' → logprob: -12.163148880004883
    9. ' 
' → logprob: -12.288148880004883
    10. ' q' → logprob: -12.913148880004883

Token 152: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.020506853237748146
    2. '	q' → logprob: -4.395506858825684
    3. 'q' → logprob: -5.270506858825684
    4. ',q' → logprob: -6.520506858825684
    5. ';q' → logprob: -7.270506858825684
    6. '[q' → logprob: -8.020506858825684
    7. ';' → logprob: -8.895506858825684
    8. ' ' → logprob: -10.395506858825684
    9. ',' → logprob: -10.895506858825684
    10. ' 
' → logprob: -11.020506858825684

Token 153: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -1.0280383548888494e-06
    2. ' mn' → logprob: -14.750000953674316
    3. 'm' → logprob: -14.875000953674316
    4. 'nm' → logprob: -15.250000953674316
    5. '.mn' → logprob: -17.625001907348633
    6. 'min' → logprob: -17.875001907348633
    7. 'mx' → logprob: -18.500001907348633
    8. 'n' → logprob: -19.625001907348633
    9. 'mnt' → logprob: -20.125001907348633
    10. 'mnop' → logprob: -21.250001907348633

Token 154: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017517358355689794
    2. '.' → logprob: -9.000175476074219
    3. ' .' → logprob: -9.875175476074219
    4. 'append' → logprob: -16.37517547607422
    5. '.extend' → logprob: -17.00017547607422
    6. '.ap' → logprob: -17.50017547607422
    7. ' ' → logprob: -18.00017547607422
    8. '.app' → logprob: -18.25017547607422
    9. '   ' → logprob: -18.37517547607422
    10. ').' → logprob: -18.37517547607422

Token 155: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.875000953674316
    4. '(q' → logprob: -16.375001907348633
    5. 'left' → logprob: -16.625001907348633
    6. '((' → logprob: -17.500001907348633
    7. 'v' → logprob: -17.625001907348633
    8. '(value' → logprob: -17.875001907348633
    9. '(
' → logprob: -18.250001907348633
    10. '(val' → logprob: -18.500001907348633

Token 156: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10098087787628174
    2. ')' → logprob: -2.350980758666992
    3. ' )
' → logprob: -7.225980758666992
    4. ' )' → logprob: -10.225980758666992
    5. ')
' → logprob: -11.850980758666992
    6. ')

' → logprob: -13.725980758666992
    7. ' while' → logprob: -14.100980758666992
    8. ' ' → logprob: -15.100980758666992
    9. 'while' → logprob: -15.225980758666992
    10. ');
' → logprob: -15.600980758666992

Token 157: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -4.3226136767771095e-05
    2. 'while' → logprob: -11.125042915344238
    3. '<|end|>' → logprob: -11.250042915344238
    4. '	while' → logprob: -11.500042915344238
    5. ' ' → logprob: -13.375042915344238
    6. ' 
' → logprob: -13.750042915344238
    7. ' ' → logprob: -14.125042915344238
    8. ' While' → logprob: -14.500042915344238
    9. 'While' → logprob: -14.750042915344238
    10. '   ' → logprob: -14.750042915344238

Token 158: ' idx' (ID: 14016)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40754199028015137
    2. ' len' → logprob: -1.2825419902801514
    3. 'q' → logprob: -3.4075419902801514
    4. ' q' → logprob: -4.1575422286987305
    5. 'idx' → logprob: -6.1575422286987305
    6. 'P' → logprob: -6.7825422286987305
    7. ' idx' → logprob: -6.7825422286987305
    8. '(len' → logprob: -6.7825422286987305
    9. 'j' → logprob: -6.9075422286987305
    10. ' P' → logprob: -6.9075422286987305

Token 159: '-K' (ID: 12249)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08524929732084274
    2. '-' → logprob: -2.960249185562134
    3. '-j' → logprob: -4.335249423980713
    4. '+' → logprob: -5.085249423980713
    5. '>=' → logprob: -5.085249423980713
    6. '-q' → logprob: -5.710249423980713
    7. ' >=' → logprob: -7.960249423980713
    8. ' ' → logprob: -8.835248947143555
    9. '-k' → logprob: -8.835248947143555
    10. '-K' → logprob: -8.835248947143555

Token 160: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005211008246988058
    2. ' +' → logprob: -7.625521183013916
    3. '>=' → logprob: -10.375520706176758
    4. '<' → logprob: -14.750520706176758
    5. '+k' → logprob: -15.250520706176758
    6. 'plus' → logprob: -15.375520706176758
    7. '==' → logprob: -15.750520706176758
    8. '```' → logprob: -15.875520706176758
    9. '+
' → logprob: -16.000520706176758
    10. '+=' → logprob: -16.000520706176758

Token 161: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030574481934309006
    2. '1' → logprob: -3.5305745601654053
    3. ' +' → logprob: -7.405574321746826
    4. '-' → logprob: -9.405574798583984
    5. 'plus' → logprob: -9.530574798583984
    6. '=-' → logprob: -11.405574798583984
    7. '+j' → logprob: -12.155574798583984
    8. '+-' → logprob: -12.280574798583984
    9. '```' → logprob: -12.530574798583984
    10. '=' → logprob: -12.655574798583984

Token 162: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.01959032565355301
    2. '==' → logprob: -4.519590377807617
    3. ' >=' → logprob: -5.019590377807617
    4. '<' → logprob: -6.769590377807617
    5. '>' → logprob: -8.144590377807617
    6. ')>=' → logprob: -8.644590377807617
    7. ']>=' → logprob: -9.019590377807617
    8. ' ==' → logprob: -9.769590377807617
    9. '+' → logprob: -10.269590377807617
    10. '==-' → logprob: -10.644590377807617

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010341187007725239
    2. ' ' → logprob: -6.876034259796143
    3. 'j' → logprob: -14.126033782958984
    4. ' j' → logprob: -15.251033782958984
    5. '   ' → logprob: -15.501033782958984
    6. '  ' → logprob: -16.751033782958984
    7. '
' → logprob: -16.876033782958984
    8. ':' → logprob: -17.626033782958984
    9. ' -' → logprob: -17.813533782958984
    10. '-' → logprob: -17.876033782958984

Token 164: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08036636561155319
    2. 'and' → logprob: -2.580366373062134
    3. ':
' → logprob: -7.205366134643555
    4. ':' → logprob: -7.455366134643555
    5. ' :
' → logprob: -10.455366134643555
    6. ' ' → logprob: -10.705366134643555
    7. ':q' → logprob: -10.705366134643555
    8. ' q' → logprob: -10.830366134643555
    9. ' :' → logprob: -10.830366134643555
    10. '	and' → logprob: -11.205366134643555

Token 165: ' P' (ID: 398)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.054944343864917755
    2. ' q' → logprob: -2.9299442768096924
    3. 'P' → logprob: -10.304944038391113
    4. ' P' → logprob: -11.304944038391113
    5. ' ' → logprob: -11.804944038391113
    6. '   ' → logprob: -12.929944038391113
    7. '(q' → logprob: -12.929944038391113
    8. '  ' → logprob: -13.304944038391113
    9. '	q' → logprob: -13.929944038391113
    10. 'Q' → logprob: -15.179944038391113

Token 166: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002258277963846922
    2. 'idx' → logprob: -8.500226020812988
    3. '[q' → logprob: -11.125226020812988
    4. '[' → logprob: -12.875226020812988
    5. ' idx' → logprob: -13.000226020812988
    6. 'q' → logprob: -14.000226020812988
    7. '[P' → logprob: -15.125226020812988
    8. '```' → logprob: -15.125226020812988
    9. '[
' → logprob: -15.375226020812988
    10. ' [' → logprob: -15.500226020812988

Token 167: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.055952709168195724
    2. ' -' → logprob: -2.930952787399292
    3. '-k' → logprob: -7.680952548980713
    4. '-' → logprob: -8.430953025817871
    5. '-q' → logprob: -8.930953025817871
    6. ']' → logprob: -10.055953025817871
    7. ' idx' → logprob: -10.305953025817871
    8. '[idx' → logprob: -10.305953025817871
    9. '[-' → logprob: -10.430953025817871
    10. 'K' → logprob: -10.555953025817871

Token 168: '-' (ID: 12)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.02769491635262966
    2. ']' → logprob: -3.6526949405670166
    3. ' ]' → logprob: -6.9026947021484375
    4. ']>=' → logprob: -8.777694702148438
    5. '+' → logprob: -9.277694702148438
    6. '']==' → logprob: -10.527694702148438
    7. ']!=' → logprob: -10.902694702148438
    8. '-' → logprob: -11.027694702148438
    9. '==' → logprob: -11.277694702148438
    10. ']=='' → logprob: -11.652694702148438

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002727793762460351
    2. ' ' → logprob: -8.500272750854492
    3. '0' → logprob: -10.375272750854492
    4. ']' → logprob: -10.625272750854492
    5. '```' → logprob: -12.750272750854492
    6. ']==' → logprob: -13.125272750854492
    7. 'q' → logprob: -13.500272750854492
    8. ')' → logprob: -13.750272750854492
    9. '-' → logprob: -14.250272750854492
    10. 'None' → logprob: -14.437772750854492

Token 170: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00013655527436640114
    2. ' ==' → logprob: -9.125136375427246
    3. ']==' → logprob: -10.750136375427246
    4. ')==' → logprob: -13.750136375427246
    5. '===' → logprob: -13.875136375427246
    6. 'in' → logprob: -13.875136375427246
    7. '']==' → logprob: -13.875136375427246
    8. '==
' → logprob: -14.500136375427246
    9. '()==' → logprob: -14.625136375427246
    10. '=' → logprob: -14.750136375427246

Token 171: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009117019944824278
    2. ' q' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.125911712646484
    4. '	q' → logprob: -17.750911712646484
    5. '  ' → logprob: -18.125911712646484
    6. '   ' → logprob: -18.375911712646484
    7. '
' → logprob: -19.500911712646484
    8. '`' → logprob: -21.375911712646484
    9. ' ' → logprob: -21.375911712646484
    10. '    ' → logprob: -22.000911712646484

Token 172: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.3946853578090668
    2. 'q' → logprob: -1.1446853876113892
    3. ' q' → logprob: -4.8946852684021
    4. ' mn' → logprob: -9.269685745239258
    5. 'm' → logprob: -9.644685745239258
    6. 'qn' → logprob: -9.644685745239258
    7. 'mx' → logprob: -9.894685745239258
    8. ' ' → logprob: -12.394685745239258
    9. 'nm' → logprob: -12.394685745239258
    10. 'mnt' → logprob: -12.644685745239258

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.375
    3. '.' → logprob: -17.75
    4. ' [' → logprob: -18.125
    5. '.p' → logprob: -19.625
    6. '][' → logprob: -21.125
    7. '[
' → logprob: -21.375
    8. '```' → logprob: -21.625
    9. '()[' → logprob: -21.75
    10. '.front' → logprob: -21.875

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008340472122654319
    2. '[' → logprob: -7.125833988189697
    3. ' ' → logprob: -10.500834465026855
    4. '   ' → logprob: -13.625834465026855
    5. ' [' → logprob: -15.500834465026855
    6. '```' → logprob: -15.500834465026855
    7. '
' → logprob: -16.37583351135254
    8. '  ' → logprob: -16.50083351135254
    9. 'q' → logprob: -16.62583351135254
    10. '][' → logprob: -17.87583351135254

Token 175: ']:' (ID: 12433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01795559749007225
    2. ':q' → logprob: -4.767955780029297
    3. '):
' → logprob: -5.142955780029297
    4. ']:' → logprob: -6.392955780029297
    5. ':' → logprob: -7.142955780029297
    6. ' ):' → logprob: -7.267955780029297
    7. ' ' → logprob: -9.642955780029297
    8. ')' → logprob: -9.767955780029297
    9. '):

' → logprob: -10.642955780029297
    10. '  ' → logprob: -10.892955780029297

Token 176: 'q' (ID: 80)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.07998105883598328
    2. 'q' → logprob: -2.5799810886383057
    3. '	q' → logprob: -6.829980850219727
    4. '   ' → logprob: -12.704980850219727
    5. ',q' → logprob: -12.954980850219727
    6. ' ' → logprob: -14.204980850219727
    7. ' 
' → logprob: -14.329980850219727
    8. '*q' → logprob: -14.454980850219727
    9. '[q' → logprob: -14.579980850219727
    10. ' ' → logprob: -14.829980850219727

Token 177: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -4.320199877838604e-07
    2. 'm' → logprob: -15.875
    3. ' mn' → logprob: -16.625
    4. 'nm' → logprob: -16.875
    5. 'mq' → logprob: -17.875
    6. '.mn' → logprob: -18.375
    7. 'mx' → logprob: -19.125
    8. 'min' → logprob: -19.125
    9. 'qn' → logprob: -19.25
    10. 'mnt' → logprob: -19.5

Token 178: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.15441757265944e-05
    2. 'p' → logprob: -10.375031471252441
    3. '.' → logprob: -15.250031471252441
    4. '```' → logprob: -19.125032424926758
    5. ' p' → logprob: -19.375032424926758
    6. 'opleft' → logprob: -19.500032424926758
    7. '
' → logprob: -19.625032424926758
    8. ' .' → logprob: -20.125032424926758
    9. '	p' → logprob: -20.375032424926758
    10. '.pop' → logprob: -20.375032424926758

Token 179: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -1.7120533811976202e-05
    2. 'op' → logprob: -11.375017166137695
    3. 'opl' → logprob: -12.625017166137695
    4. 'ople' → logprob: -13.000017166137695
    5. 'opt' → logprob: -19.500017166137695
    6. 'left' → logprob: -19.875017166137695
    7. 'opy' → logprob: -20.375017166137695
    8. 'p' → logprob: -20.625017166137695
    9. 'opf' → logprob: -20.750017166137695
    10. 'o' → logprob: -20.875017166137695

Token 180: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003396343090571463
    2. '()
' → logprob: -8.00033950805664
    3. '()

' → logprob: -13.25033950805664
    4. '()
' → logprob: -13.50033950805664
    5. '()`' → logprob: -14.62533950805664
    6. '()]' → logprob: -15.00033950805664
    7. '()"' → logprob: -16.37533950805664
    8. '()\' → logprob: -16.75033950805664
    9. '())' → logprob: -17.12533950805664
    10. '();' → logprob: -17.12533950805664

Token 181: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.0004049322451464832
    2. '	while' → logprob: -8.375405311584473
    3. '   ' → logprob: -9.000405311584473
    4. 'while' → logprob: -10.000405311584473
    5. ' ' → logprob: -12.375405311584473
    6. '<|end|>' → logprob: -15.000405311584473
    7. 'While' → logprob: -15.000405311584473
    8. ' While' → logprob: -15.500405311584473
    9. ' ' → logprob: -16.125404357910156
    10. '```' → logprob: -16.375404357910156

Token 182: ' q' (ID: 2335)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0619908832013607
    2. 'len' → logprob: -2.811990976333618
    3. '(len' → logprob: -10.686990737915039
    4. ' ' → logprob: -16.18699073791504
    5. '[len' → logprob: -16.31199073791504
    6. 'Len' → logprob: -16.68699073791504
    7. ' q' → logprob: -16.81199073791504
    8. '	len' → logprob: -16.93699073791504
    9. 'q' → logprob: -17.06199073791504
    10. ',len' → logprob: -17.31199073791504

Token 183: 'mx' (ID: 32467)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31716373562812805
    2. 'mx' → logprob: -1.3171637058258057
    3. ' len' → logprob: -5.567163944244385
    4. 'mn' → logprob: -10.192163467407227
    5. ' mx' → logprob: -10.567163467407227
    6. '(len' → logprob: -12.192163467407227
    7. 'max' → logprob: -12.942163467407227
    8. '(mx' → logprob: -13.692163467407227
    9. '[len' → logprob: -14.317163467407227
    10. 'min' → logprob: -15.317163467407227

Token 184: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16042691469192505
    2. ' and' → logprob: -1.9104268550872803
    3. '[-' → logprob: -9.03542709350586
    4. 'len' → logprob: -9.41042709350586
    5. '(len' → logprob: -14.91042709350586
    6. '[]' → logprob: -14.91042709350586
    7. ' ' → logprob: -14.91042709350586
    8. '[len' → logprob: -15.03542709350586
    9. ')' → logprob: -16.03542709350586
    10. '	and' → logprob: -16.66042709350586

Token 185: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6931503415107727
    2. ' q' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.693150520324707
    4. '[q' → logprob: -14.443150520324707
    5. '	q' → logprob: -14.443150520324707
    6. '(q' → logprob: -15.568150520324707
    7. '   ' → logprob: -15.568150520324707
    8. '  ' → logprob: -15.818150520324707
    9. 'P' → logprob: -16.19314956665039
    10. 'len' → logprob: -16.44314956665039

Token 186: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.012755670584738255
    2. '[-' → logprob: -4.887755870819092
    3. 'qx' → logprob: -5.762755870819092
    4. 'q' → logprob: -6.512755870819092
    5. 'x' → logprob: -7.637755870819092
    6. 'max' → logprob: -12.137755393981934
    7. 'tx' → logprob: -12.262755393981934
    8. '[q' → logprob: -12.512755393981934
    9. 'm' → logprob: -12.887755393981934
    10. '[' → logprob: -12.887755393981934

Token 187: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. ' and' → logprob: -15.875
    3. '[' → logprob: -17.5
    4. 'and' → logprob: -18.625
    5. ' [-' → logprob: -19.125
    6. '
' → logprob: -19.25
    7. '```' → logprob: -19.625
    8. '-' → logprob: -19.625
    9. ' ' → logprob: -19.875
    10. '[
' → logprob: -20.25

Token 188: '1' (ID: 16)
  Prédit: '<v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<v' → logprob: -0.37332087755203247
    2. '1' → logprob: -1.2483208179473877
    3. 'v' → logprob: -4.248321056365967
    4. '-' → logprob: -5.248321056365967
    5. '0' → logprob: -6.498321056365967
    6. '<' → logprob: -6.623321056365967
    7. ' ' → logprob: -7.873321056365967
    8. '()<' → logprob: -8.373320579528809
    9. ' v' → logprob: -8.748320579528809
    10. ' <' → logprob: -8.873320579528809

Token 189: ']<' (ID: 80424)
  Prédit: '<v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<v' → logprob: -0.0010444821091368794
    2. '<' → logprob: -6.876044273376465
    3. ' <' → logprob: -12.001044273376465
    4. ']<' → logprob: -13.251044273376465
    5. ')<' → logprob: -14.001044273376465
    6. '}<' → logprob: -14.501044273376465
    7. '>' → logprob: -14.501044273376465
    8. '<p' → logprob: -14.626044273376465
    9. '<x' → logprob: -14.751044273376465
    10. '()<' → logprob: -15.876044273376465

Token 190: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7610454708337784e-05
    2. ' v' → logprob: -10.500027656555176
    3. '	v' → logprob: -18.50002670288086
    4. '<|end|>' → logprob: -18.87502670288086
    5. '
' → logprob: -19.37502670288086
    6. 'vq' → logprob: -19.50002670288086
    7. ' ' → logprob: -21.25002670288086
    8. ')v' → logprob: -21.87502670288086
    9. '?v' → logprob: -21.87502670288086
    10. '```' → logprob: -22.12502670288086

Token 191: ':q' (ID: 184252)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10082203149795532
    2. ' q' → logprob: -2.4758219718933105
    3. ':q' → logprob: -4.4758219718933105
    4. ';q' → logprob: -9.100822448730469
    5. ':' → logprob: -9.225822448730469
    6. '	q' → logprob: -9.475822448730469
    7. ':
' → logprob: -9.600822448730469
    8. '(q' → logprob: -10.850822448730469
    9. '=q' → logprob: -11.100822448730469
    10. '[q' → logprob: -11.225822448730469

Token 192: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -5.512236498361744e-07
    2. 'qx' → logprob: -14.750000953674316
    3. 'mq' → logprob: -17.125
    4. 'nx' → logprob: -17.625
    5. ' mx' → logprob: -17.625
    6. 'wx' → logprob: -18.0
    7. 'q' → logprob: -19.0
    8. 'x' → logprob: -19.25
    9. 'kx' → logprob: -19.25
    10. '(mx' → logprob: -19.5

Token 193: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0046935612335801125
    2. '.append' → logprob: -5.754693508148193
    3. 'pop' → logprob: -6.504693508148193
    4. 'q' → logprob: -11.754693984985352
    5. ' .' → logprob: -12.004693984985352
    6. 'mx' → logprob: -12.879693984985352
    7. '.' → logprob: -13.754693984985352
    8. '.q' → logprob: -15.504693984985352
    9. 'append' → logprob: -15.879693984985352
    10. '.p' → logprob: -16.12969398498535

Token 194: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.0031850787345319986
    2. '()' → logprob: -5.753185272216797
    3. '()
' → logprob: -12.128185272216797
    4. ')
' → logprob: -14.503185272216797
    5. '();' → logprob: -14.628185272216797
    6. '()

' → logprob: -15.253185272216797
    7. ' ()
' → logprob: -15.503185272216797
    8. 'q' → logprob: -15.878185272216797
    9. '())
' → logprob: -16.128185272216797
    10. '
' → logprob: -16.503185272216797

Token 195: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.10062672942876816
    2. 'q' → logprob: -2.3506267070770264
    3. '	q' → logprob: -7.8506269454956055
    4. '[q' → logprob: -11.100626945495605
    5. ',q' → logprob: -11.975626945495605
    6. '```' → logprob: -12.475626945495605
    7. '   ' → logprob: -13.475626945495605
    8. '(q' → logprob: -13.725626945495605
    9. 'qx' → logprob: -14.725626945495605
    10. '*q' → logprob: -14.975626945495605

Token 196: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -3.128163257315464e-07
    2. ' mx' → logprob: -15.875
    3. 'qx' → logprob: -17.125
    4. 'mq' → logprob: -18.375
    5. '.mx' → logprob: -18.375
    6. 'max' → logprob: -18.5
    7. 'x' → logprob: -18.625
    8. 'kx' → logprob: -19.375
    9. 'm' → logprob: -20.0
    10. 'wx' → logprob: -20.0

Token 197: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7432603272027336e-06
    2. 'append' → logprob: -13.625001907348633
    3. ' .' → logprob: -15.500001907348633
    4. '.' → logprob: -15.625001907348633
    5. '.Append' → logprob: -16.875001907348633
    6. '.app' → logprob: -17.000001907348633
    7. 'Append' → logprob: -18.250001907348633
    8. 'app' → logprob: -18.500001907348633
    9. 'q' → logprob: -18.875001907348633
    10. 'max' → logprob: -19.250001907348633

Token 198: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -15.500004768371582
    4. '(value' → logprob: -16.375003814697266
    5. '<|end|>' → logprob: -17.875003814697266
    6. 'v' → logprob: -19.250003814697266
    7. '(
' → logprob: -19.375003814697266
    8. '?v' → logprob: -20.000003814697266
    9. '(V' → logprob: -20.375003814697266
    10. '(x' → logprob: -20.625003814697266

Token 199: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2830660343170166
    2. ' if' → logprob: -1.6580660343170166
    3. ')' → logprob: -3.2830660343170166
    4. ' )
' → logprob: -4.1580657958984375
    5. ' 
' → logprob: -6.6580657958984375
    6. ' )' → logprob: -8.158065795898438
    7. '()
' → logprob: -8.158065795898438
    8. '
' → logprob: -8.408065795898438
    9. '(' → logprob: -8.533065795898438
    10. ' (' → logprob: -8.908065795898438

Token 200: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00038598617538809776
    2. ' while' → logprob: -8.375386238098145
    3. 'if' → logprob: -8.875386238098145
    4. '	if' → logprob: -11.250386238098145
    5. '   ' → logprob: -13.375386238098145
    6. ' ' → logprob: -15.625386238098145
    7. '```' → logprob: -15.625386238098145
    8. 'while' → logprob: -15.875386238098145
    9. ' from' → logprob: -16.125385284423828
    10. ' import' → logprob: -16.250385284423828

Token 201: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.001502717612311244
    2. 'idx' → logprob: -6.501502513885498
    3. '(idx' → logprob: -15.626502990722656
    4. ' ' → logprob: -16.251502990722656
    5. '	idx' → logprob: -16.876502990722656
    6. '[idx' → logprob: -17.251502990722656
    7. ' len' → logprob: -18.251502990722656
    8. '   ' → logprob: -18.376502990722656
    9. '  ' → logprob: -19.376502990722656
    10. '    ' → logprob: -19.626502990722656

Token 202: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -9.877503907773644e-05
    2. ' -' → logprob: -9.250099182128906
    3. '-' → logprob: -13.000099182128906
    4. 'K' → logprob: -15.625099182128906
    5. '-k' → logprob: -16.500099182128906
    6. '-К' → logprob: -17.250099182128906
    7. '```' → logprob: -18.625099182128906
    8. '-N' → logprob: -18.750099182128906
    9. ' ' → logprob: -18.750099182128906
    10. ' K' → logprob: -18.750099182128906

Token 203: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.79811754100956e-05
    2. '-K' → logprob: -10.625038146972656
    3. ' -' → logprob: -11.250038146972656
    4. '```' → logprob: -16.625038146972656
    5. '>=' → logprob: -16.750038146972656
    6. '1' → logprob: -16.750038146972656
    7. 'K' → logprob: -17.625038146972656
    8. '+' → logprob: -17.625038146972656
    9. '<|end|>' → logprob: -17.875038146972656
    10. ' ' → logprob: -18.000038146972656

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.000018119812012
    3. '-' → logprob: -14.250018119812012
    4. 'K' → logprob: -15.500018119812012
    5. '>=' → logprob: -16.875017166137695
    6. '```' → logprob: -17.000017166137695
    7. '   ' → logprob: -17.875017166137695
    8. '2' → logprob: -17.875017166137695
    9. ' K' → logprob: -18.000017166137695
    10. 'if' → logprob: -18.250017166137695

Token 205: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.00024989593657664955
    2. ' >=' → logprob: -8.375249862670898
    3. ']>=' → logprob: -11.375249862670898
    4. ')>=' → logprob: -12.000249862670898
    5. '0' → logprob: -13.875249862670898
    6. '≥' → logprob: -14.875249862670898
    7. 'and' → logprob: -15.875249862670898
    8. '>' → logprob: -16.1252498626709
    9. '
' → logprob: -16.2502498626709
    10. '<|end|>' → logprob: -16.7502498626709

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -20.37509536743164
    4. '   ' → logprob: -21.37509536743164
    5. '  ' → logprob: -22.00009536743164
    6. '<|end|>' → logprob: -22.37509536743164
    7. '>' → logprob: -22.50009536743164
    8. ' ' → logprob: -22.62509536743164
    9. '>=' → logprob: -22.81259536743164
    10. '
' → logprob: -23.06259536743164

Token 207: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692883610725403
    2. 'and' → logprob: -2.1269288063049316
    3. '```' → logprob: -15.62692928314209
    4. ' ' → logprob: -16.376928329467773
    5. 'if' → logprob: -16.501928329467773
    6. 'And' → logprob: -16.876928329467773
    7. ' if' → logprob: -17.126928329467773
    8. 'in' → logprob: -17.251928329467773
    9. '0' → logprob: -17.376928329467773
    10. ' ' → logprob: -17.626928329467773

Token 208: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.313262403011322
    2. ' P' → logprob: -1.3132624626159668
    3. 'Q' → logprob: -15.188261985778809
    4. ' ' → logprob: -15.813261985778809
    5. '   ' → logprob: -16.188262939453125
    6. 'q' → logprob: -16.938262939453125
    7. '	P' → logprob: -17.438262939453125
    8. '  ' → logprob: -17.688262939453125
    9. '(P' → logprob: -17.688262939453125
    10. '```' → logprob: -17.813262939453125

Token 209: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3856492842023727e-06
    2. 'idx' → logprob: -13.750000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[P' → logprob: -17.875001907348633
    5. ' idx' → logprob: -18.250001907348633
    6. '```' → logprob: -18.375001907348633
    7. ' [' → logprob: -19.000001907348633
    8. '[id' → logprob: -19.250001907348633
    9. '[user' → logprob: -19.375001907348633
    10. 'P' → logprob: -19.625001907348633

Token 210: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.00013452880375552922
    2. 'K' → logprob: -9.000134468078613
    3. ' -' → logprob: -11.500134468078613
    4. ' K' → logprob: -15.250134468078613
    5. '```' → logprob: -15.375134468078613
    6. '-' → logprob: -15.750134468078613
    7. '-К' → logprob: -16.62513542175293
    8. '-k' → logprob: -16.75013542175293
    9. '<K' → logprob: -17.00013542175293
    10. ' ' → logprob: -17.75013542175293

Token 211: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.572941179503687e-05
    2. ' -' → logprob: -10.250045776367188
    3. '-K' → logprob: -12.500045776367188
    4. '[' → logprob: -12.500045776367188
    5. '0' → logprob: -13.750045776367188
    6. '```' → logprob: -14.250045776367188
    7. '[-' → logprob: -14.500045776367188
    8. '][' → logprob: -16.375045776367188
    9. ' ' → logprob: -16.375045776367188
    10. 'q' → logprob: -16.750045776367188

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004216824658215046
    2. '-' → logprob: -5.50421667098999
    3. 'K' → logprob: -9.379217147827148
    4. 'q' → logprob: -11.004217147827148
    5. ' ' → logprob: -11.379217147827148
    6. 'idx' → logprob: -11.879217147827148
    7. '-K' → logprob: -12.129217147827148
    8. '0' → logprob: -12.254217147827148
    9. '```' → logprob: -12.879217147827148
    10. ' K' → logprob: -13.754217147827148

Token 213: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25224825739860535
    2. ']==' → logprob: -1.5022482872009277
    3. '()==' → logprob: -9.12724781036377
    4. '']==' → logprob: -9.50224781036377
    5. '==
' → logprob: -9.62724781036377
    6. ' ==' → logprob: -10.25224781036377
    7. ')==' → logprob: -11.25224781036377
    8. '
' → logprob: -11.62724781036377
    9. '```' → logprob: -12.37724781036377
    10. ' ' → logprob: -13.37724781036377

Token 214: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -7.941850526549388e-06
    2. ' q' → logprob: -11.750007629394531
    3. 'qx' → logprob: -18.62500762939453
    4. '
' → logprob: -20.12500762939453
    5. ' ' → logprob: -20.12500762939453
    6. '	q' → logprob: -20.37500762939453
    7. 'qml' → logprob: -20.75000762939453
    8. '```' → logprob: -21.62500762939453
    9. '  ' → logprob: -21.87500762939453
    10. '[q' → logprob: -22.00000762939453

Token 215: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.012928908690810204
    2. 'q' → logprob: -4.3879289627075195
    3. 'qx' → logprob: -8.13792896270752
    4. 'max' → logprob: -9.26292896270752
    5. 'x' → logprob: -11.13792896270752
    6. ' q' → logprob: -12.26292896270752
    7. ' mx' → logprob: -12.26292896270752
    8. 'MX' → logprob: -13.38792896270752
    9. '(mx' → logprob: -13.76292896270752
    10. '
' → logprob: -13.88792896270752

Token 216: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024842156562954187
    2. '0' → logprob: -6.002484321594238
    3. ' ' → logprob: -13.002484321594238
    4. '.' → logprob: -13.377484321594238
    5. ' [' → logprob: -13.377484321594238
    6. '.p' → logprob: -14.002484321594238
    7. 'p' → logprob: -14.002484321594238
    8. '```' → logprob: -14.627484321594238
    9. '   ' → logprob: -15.127484321594238
    10. '(' → logprob: -16.002483367919922

Token 217: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -12.125009536743164
    3. '[' → logprob: -12.500009536743164
    4. '۰' → logprob: -16.875009536743164
    5. '```' → logprob: -17.187509536743164
    6. '   ' → logprob: -17.250009536743164
    7. '  ' → logprob: -17.687509536743164
    8. '
' → logprob: -17.750009536743164
    9. '０' → logprob: -18.625009536743164
    10. '00' → logprob: -18.687509536743164

Token 218: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -1.263166904449463
    2. '():' → logprob: -1.388166904449463
    3. '):' → logprob: -1.763166904449463
    4. ':q' → logprob: -1.763166904449463
    5. ':' → logprob: -2.138166904449463
    6. '()' → logprob: -6.638166904449463
    7. ' :' → logprob: -6.638166904449463
    8. ':p' → logprob: -7.263166904449463
    9. ' ):' → logprob: -7.638166904449463
    10. ':
' → logprob: -8.138166427612305

Token 219: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.746380237629637e-05
    2. ' q' → logprob: -9.250097274780273
    3. 'qx' → logprob: -13.625097274780273
    4. 'qml' → logprob: -17.250097274780273
    5. '	q' → logprob: -17.750097274780273
    6. 'qm' → logprob: -20.875097274780273
    7. ',q' → logprob: -21.750097274780273
    8. '[q' → logprob: -21.875097274780273
    9. '```' → logprob: -22.125097274780273
    10. '*q' → logprob: -22.125097274780273

Token 220: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -6.704273118884885e-07
    2. 'mq' → logprob: -15.250000953674316
    3. 'qx' → logprob: -16.0
    4. 'm' → logprob: -16.875
    5. ' mx' → logprob: -17.0
    6. 'max' → logprob: -17.25
    7. 'x' → logprob: -18.125
    8. 'q' → logprob: -18.5
    9. 'mn' → logprob: -18.625
    10. '.mx' → logprob: -19.0

Token 221: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0015068859793245792
    2. 'p' → logprob: -6.501506805419922
    3. 'opleft' → logprob: -12.876506805419922
    4. ' p' → logprob: -13.251506805419922
    5. '.pop' → logprob: -16.501506805419922
    6. '.' → logprob: -16.876506805419922
    7. ')p' → logprob: -17.126506805419922
    8. '	p' → logprob: -17.626506805419922
    9. ',p' → logprob: -17.626506805419922
    10. ' .' → logprob: -18.126506805419922

Token 222: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0020057226065546274
    2. 'ple' → logprob: -6.627005577087402
    3. 'op' → logprob: -7.877005577087402
    4. 'ople' → logprob: -8.252005577087402
    5. 'opl' → logprob: -10.877005577087402
    6. 'p' → logprob: -11.752005577087402
    7. 'opt' → logprob: -12.377005577087402
    8. 'pt' → logprob: -12.502005577087402
    9. 'left' → logprob: -13.627005577087402
    10. 'oplevel' → logprob: -14.127005577087402

Token 223: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47437289357185364
    2. '()
' → logprob: -0.9743728637695312
    3. ' ()
' → logprob: -8.599372863769531
    4. ' ()' → logprob: -9.974372863769531
    5. '()
' → logprob: -10.599372863769531
    6. '()\' → logprob: -11.724372863769531
    7. '(' → logprob: -11.849372863769531
    8. ' j' → logprob: -11.849372863769531
    9. '()

' → logprob: -11.849372863769531
    10. '(j' → logprob: -12.724372863769531

Token 224: ' if' (ID: 538)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.392887681722641
    2. ' if' → logprob: -1.1428877115249634
    3. ' ' → logprob: -6.517887592315674
    4. 'while' → logprob: -6.767887592315674
    5. ' j' → logprob: -6.892887592315674
    6. '   ' → logprob: -7.017887592315674
    7. 'if' → logprob: -8.142888069152832
    8. ' for' → logprob: -8.892888069152832
    9. ' max' → logprob: -9.017888069152832
    10. ' 
' → logprob: -9.142888069152832

Token 225: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.06288054585456848
    2. 'idx' → logprob: -2.812880516052246
    3. ' len' → logprob: -7.437880516052246
    4. '(idx' → logprob: -9.312880516052246
    5. ' j' → logprob: -9.437880516052246
    6. 'len' → logprob: -9.812880516052246
    7. ' q' → logprob: -10.062880516052246
    8. 'j' → logprob: -10.937880516052246
    9. ' (' → logprob: -11.437880516052246
    10. 'q' → logprob: -11.687880516052246

Token 226: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07723395526409149
    2. '+' → logprob: -2.8272340297698975
    3. ' >=' → logprob: -4.202233791351318
    4. '==' → logprob: -9.702234268188477
    5. ' +' → logprob: -9.827234268188477
    6. '>' → logprob: -9.827234268188477
    7. ']>=' → logprob: -11.702234268188477
    8. ')>=' → logprob: -12.827234268188477
    9. ' ' → logprob: -13.452234268188477
    10. '<' → logprob: -13.577234268188477

Token 227: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004309076175559312
    2. ' K' → logprob: -7.750431060791016
    3. ' ' → logprob: -15.750431060791016
    4. '0' → logprob: -16.250431060791016
    5. 'k' → logprob: -17.250431060791016
    6. '>K' → logprob: -17.375431060791016
    7. '   ' → logprob: -17.875431060791016
    8. '(K' → logprob: -18.875431060791016
    9. '	K' → logprob: -18.875431060791016
    10. '<K' → logprob: -19.000431060791016

Token 228: ':s' (ID: 31023)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.676292231422849e-05
    2. ' -' → logprob: -11.000017166137695
    3. '−' → logprob: -19.500017166137695
    4. '-
' → logprob: -19.625017166137695
    5. ' ' → logprob: -19.625017166137695
    6. '()-' → logprob: -19.875017166137695
    7. '1' → logprob: -20.375017166137695
    8. '+' → logprob: -20.500017166137695
    9. '```' → logprob: -20.875017166137695
    10. '-=' → logprob: -20.875017166137695

Token 229: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3525750935077667
    2. '=' → logprob: -2.4775750637054443
    3. 'append' → logprob: -3.3525750637054443
    4. 'nd' → logprob: -3.3525750637054443
    5. 'min' → logprob: -3.7275750637054443
    6. 'if' → logprob: -3.9775750637054443
    7. '+=' → logprob: -4.352575302124023
    8. '[j' → logprob: -4.602575302124023
    9. 's' → logprob: -4.727575302124023
    10. 'm' → logprob: -5.102575302124023

Token 230: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00046153197763487697
    2. '.' → logprob: -7.750461578369141
    3. '.app' → logprob: -10.75046157836914
    4. '+.' → logprob: -12.50046157836914
    5. '.ap' → logprob: -12.87546157836914
    6. ' .' → logprob: -13.37546157836914
    7. '.extend' → logprob: -15.12546157836914
    8. '.push' → logprob: -15.50046157836914
    9. '.py' → logprob: -15.62546157836914
    10. '+' → logprob: -15.62546157836914

Token 231: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20198683440685272
    2. '=[' → logprob: -1.7019867897033691
    3. '[' → logprob: -8.451987266540527
    4. '.append' → logprob: -9.076987266540527
    5. '=[]' → logprob: -9.201987266540527
    6. '=[
' → logprob: -9.826987266540527
    7. '=.' → logprob: -10.576987266540527
    8. '+' → logprob: -10.826987266540527
    9. '+=' → logprob: -11.326987266540527
    10. '=['' → logprob: -11.826987266540527

Token 232: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008513158187270164
    2. ' q' → logprob: -4.8835129737854
    3. '(q' → logprob: -7.1335129737854
    4. 'idx' → logprob: -11.133513450622559
    5. 'P' → logprob: -11.258513450622559
    6. ' (' → logprob: -11.383513450622559
    7. 'int' → logprob: -11.383513450622559
    8. ' ' → logprob: -11.758513450622559
    9. '(' → logprob: -11.883513450622559
    10. 'len' → logprob: -11.883513450622559

Token 233: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.13293986022472382
    2. 'n' → logprob: -2.5079398155212402
    3. 'mx' → logprob: -3.5079398155212402
    4. 'nx' → logprob: -4.50793981552124
    5. 'nm' → logprob: -6.25793981552124
    6. 'm' → logprob: -9.757940292358398
    7. 'x' → logprob: -10.132940292358398
    8. 'xn' → logprob: -11.507940292358398
    9. 'nz' → logprob: -11.757940292358398
    10. '[n' → logprob: -12.132940292358398

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -13.000003814697266
    3. '()[' → logprob: -13.750003814697266
    4. '```' → logprob: -15.625003814697266
    5. '(' → logprob: -16.000003814697266
    6. '][' → logprob: -16.875003814697266
    7. ' [' → logprob: -17.875003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '`' → logprob: -18.500003814697266
    10. '()' → logprob: -18.625003814697266

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002198676229454577
    2. ' ' → logprob: -8.87522029876709
    3. '[' → logprob: -9.62522029876709
    4. '
' → logprob: -12.50022029876709
    5. '   ' → logprob: -13.00022029876709
    6. '  ' → logprob: -13.31272029876709
    7. '```' → logprob: -13.43772029876709
    8. ']' → logprob: -14.37522029876709
    9. '    ' → logprob: -15.06272029876709
    10. 'min' → logprob: -15.18772029876709

Token 236: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03356466442346573
    2. ']
' → logprob: -3.533564567565918
    3. ' ]' → logprob: -5.783564567565918
    4. ']

' → logprob: -8.158564567565918
    5. ' ]
' → logprob: -8.533564567565918
    6. '];' → logprob: -9.408564567565918
    7. ']>' → logprob: -10.533564567565918
    8. ']==' → logprob: -10.783564567565918
    9. ')]' → logprob: -10.783564567565918
    10. '==' → logprob: -10.908564567565918

Token 237: ';' (ID: 26)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4375210404396057
    2. ' s' → logprob: -1.687520980834961
    3. 's' → logprob: -2.937520980834961
    4. ';s' → logprob: -3.062520980834961
    5. ';' → logprob: -3.187520980834961
    6. '<|end|>' → logprob: -4.437520980834961
    7. 'if' → logprob: -4.687520980834961
    8. ';if' → logprob: -5.312520980834961
    9. ' 
' → logprob: -7.437520980834961
    10. '
' → logprob: -7.437520980834961

Token 238: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043308597058057785
    2. ' s' → logprob: -3.1683084964752197
    3. 'if' → logprob: -8.41830825805664
    4. ' if' → logprob: -9.66830825805664
    5. '           ' → logprob: -11.66830825805664
    6. '   ' → logprob: -11.79330825805664
    7. '       ' → logprob: -12.54330825805664
    8. '	s' → logprob: -13.79330825805664
    9. '        ' → logprob: -13.91830825805664
    10. ' ' → logprob: -13.91830825805664

Token 239: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0280383548888494e-06
    2. 'mx' → logprob: -14.250000953674316
    3. 's' → logprob: -16.250001907348633
    4. 'min' → logprob: -16.250001907348633
    5. '[max' → logprob: -16.375001907348633
    6. 'm' → logprob: -17.500001907348633
    7. ' max' → logprob: -18.125001907348633
    8. '(max' → logprob: -18.625001907348633
    9. '=max' → logprob: -18.625001907348633
    10. '_max' → logprob: -19.375001907348633

Token 240: '.append' (ID: 3709)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24677205085754395
    2. '.append' → logprob: -1.621772050857544
    3. '+.' → logprob: -3.996772050857544
    4. '.' → logprob: -7.121771812438965
    5. '+=' → logprob: -7.121771812438965
    6. '.+' → logprob: -7.121771812438965
    7. ' +=' → logprob: -8.996771812438965
    8. ' +' → logprob: -9.871771812438965
    9. '+[' → logprob: -9.996771812438965
    10. '<|end|>' → logprob: -10.371771812438965

Token 241: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.5
    3. 'q' → logprob: -16.0
    4. ' (' → logprob: -18.0
    5. '((' → logprob: -19.625
    6. '(x' → logprob: -20.5
    7. '(s' → logprob: -20.625
    8. '[q' → logprob: -21.375
    9. '	q' → logprob: -21.625
    10. '(max' → logprob: -21.875

Token 242: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -1.981667537620524e-06
    2. 'qx' → logprob: -13.625001907348633
    3. 'wx' → logprob: -15.125001907348633
    4. 'mq' → logprob: -15.375001907348633
    5. 'rx' → logprob: -16.375001907348633
    6. 'max' → logprob: -17.125001907348633
    7. 'nx' → logprob: -17.250001907348633
    8. 'vx' → logprob: -17.500001907348633
    9. 'ux' → logprob: -18.000001907348633
    10. ' mx' → logprob: -18.125001907348633

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016444525681436062
    2. '0' → logprob: -8.750164031982422
    3. '[-' → logprob: -12.250164031982422
    4. '<|end|>' → logprob: -14.750164031982422
    5. '```' → logprob: -14.875164031982422
    6. '[
' → logprob: -16.125164031982422
    7. ')' → logprob: -16.250164031982422
    8. '()[' → logprob: -16.375164031982422
    9. '(' → logprob: -17.000164031982422
    10. ' ' → logprob: -17.125164031982422

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '-' → logprob: -15.25000286102295
    5. '```' → logprob: -17.125003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '
' → logprob: -17.500003814697266
    8. '  ' → logprob: -17.500003814697266
    9. '])' → logprob: -19.062503814697266
    10. ')' → logprob: -19.312503814697266

Token 245: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011538401246070862
    2. ')]' → logprob: -4.761538505554199
    3. '])' → logprob: -6.011538505554199
    4. ')
' → logprob: -8.6365385055542
    5. ' )' → logprob: -8.8865385055542
    6. ')])' → logprob: -9.1365385055542
    7. ']' → logprob: -10.3865385055542
    8. '))' → logprob: -12.7615385055542
    9. '])]' → logprob: -12.7615385055542
    10. '）' → logprob: -13.8865385055542

Token 246: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: ' UF' (ID: 80628)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.5878116488456726
    2. ' ' → logprob: -1.7128117084503174
    3. ' Segment' → logprob: -2.3378117084503174
    4. ' Solution' → logprob: -2.5878117084503174
    5. ' Sorted' → logprob: -3.5878117084503174
    6. ' A' → logprob: -4.837811470031738
    7. ' Solver' → logprob: -4.962811470031738
    8. ' Trie' → logprob: -5.087811470031738
    9. ' S' → logprob: -5.212811470031738
    10. ' defaultdict' → logprob: -5.587811470031738

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004473540757317096
    2. '):' → logprob: -8.750447273254395
    3. '():' → logprob: -9.125447273254395
    4. ':
' → logprob: -9.250447273254395
    5. ' :' → logprob: -9.750447273254395
    6. '>:' → logprob: -11.750447273254395
    7. 'uct' → logprob: -13.000447273254395
    8. '(object' → logprob: -13.000447273254395
    9. '```' → logprob: -13.375447273254395
    10. '{' → logprob: -13.375447273254395

Token 249: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0343029610812664
    2. 'def' → logprob: -3.7843029499053955
    3. '   ' → logprob: -4.534303188323975
    4. '	def' → logprob: -8.284302711486816
    5. '   ' → logprob: -13.159302711486816
    6. ' ' → logprob: -13.284302711486816
    7. '    ' → logprob: -13.534302711486816
    8. ' ' → logprob: -13.909302711486816
    9. ' __' → logprob: -14.534302711486816
    10. ':def' → logprob: -14.534302711486816

Token 250: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.12800869345664978
    2. '__' → logprob: -2.6280086040496826
    3. ' __' → logprob: -3.1280086040496826
    4. '_init' → logprob: -6.128008842468262
    5. ' init' → logprob: -6.253008842468262
    6. '```' → logprob: -11.878008842468262
    7. '_' → logprob: -12.753008842468262
    8. ' ' → logprob: -13.003008842468262
    9. '	init' → logprob: -13.003008842468262
    10. '  ' → logprob: -13.503008842468262

Token 251: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.125
    3. ' init' → logprob: -18.125
    4. 'int' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '_init' → logprob: -19.5
    7. 'inite' → logprob: -19.875
    8. 'innit' → logprob: -20.0
    9. 'in' → logprob: -20.125
    10. '	init' → logprob: -20.875

Token 252: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0009195583988912404
    2. '__' → logprob: -7.000919342041016
    3. '(self' → logprob: -12.000919342041016
    4. '__(
' → logprob: -13.500919342041016
    5. '(' → logprob: -15.500919342041016
    6. '__((' → logprob: -15.625919342041016
    7. '_(' → logprob: -16.500919342041016
    8. '__('' → logprob: -17.250919342041016
    9. '___' → logprob: -17.500919342041016
    10. '____' → logprob: -17.750919342041016

Token 253: 'sl' (ID: 4500)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005233882926404476
    2. ' self' → logprob: -5.2552337646484375
    3. '(self' → logprob: -16.630233764648438
    4. ' ' → logprob: -17.505233764648438
    5. '	self' → logprob: -18.005233764648438
    6. ',self' → logprob: -18.755233764648438
    7. '
' → logprob: -19.130233764648438
    8. 's' → logprob: -19.255233764648438
    9. '```' → logprob: -19.380233764648438
    10. '$self' → logprob: -20.880233764648438

Token 254: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3544423381972592e-05
    2. 'self' → logprob: -12.37501335144043
    3. 'elf' → logprob: -12.62501335144043
    4. 'lf' → logprob: -12.75001335144043
    5. 'ef' → logprob: -13.37501335144043
    6. 'uf' → logprob: -14.87501335144043
    7. 'af' → logprob: -15.25001335144043
    8. 'def' → logprob: -15.37501335144043
    9. 'df' → logprob: -15.75001335144043
    10. '__' → logprob: -16.12501335144043

Token 255: ',N' (ID: 49539)
  Prédit: ',f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',f' → logprob: -0.3135552704334259
    2. ',' → logprob: -2.0635552406311035
    3. ',n' → logprob: -2.1885552406311035
    4. 'f' → logprob: -4.0635552406311035
    5. ' ,' → logprob: -5.0635552406311035
    6. ',size' → logprob: -5.9385552406311035
    7. ',self' → logprob: -6.4385552406311035
    8. ',num' → logprob: -7.1885552406311035
    9. ',parent' → logprob: -7.4385552406311035
    10. ',x' → logprob: -8.313555717468262

Token 256: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3977845013141632
    2. ',n' → logprob: -1.1477844715118408
    3. ' ,' → logprob: -4.64778470993042
    4. ',N' → logprob: -7.02278470993042
    5. ',s' → logprob: -9.022784233093262
    6. ',x' → logprob: -9.647784233093262
    7. ',v' → logprob: -10.147784233093262
    8. ',l' → logprob: -10.147784233093262
    9. ',k' → logprob: -10.522784233093262
    10. ',num' → logprob: -10.647784233093262

Token 257: 'sl' (ID: 4500)
  Prédit: ' sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sl' → logprob: -0.5660931468009949
    2. ' ' → logprob: -0.9410931468009949
    3. ' self' → logprob: -4.1910929679870605
    4. 'sl' → logprob: -4.8160929679870605
    5. '	' → logprob: -5.1910929679870605
    6. '   ' → logprob: -5.5660929679870605
    7. '	sl' → logprob: -5.8160929679870605
    8. 'self' → logprob: -6.0660929679870605
    9. '<|end|>' → logprob: -7.0660929679870605
    10. '  ' → logprob: -7.1910929679870605

Token 258: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5048530030981055e-06
    2. 'ф' → logprob: -14.875001907348633
    3. ' f' → logprob: -15.500001907348633
    4. '```' → logprob: -15.750001907348633
    5. 'ƒ' → logprob: -16.000001907348633
    6. 'F' → logprob: -16.375001907348633
    7. '{' → logprob: -17.000001907348633
    8. '2' → logprob: -17.062501907348633
    9. 'fl' → logprob: -17.187501907348633
    10. 'ف' → logprob: -17.375001907348633

Token 259: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6042677760124207
    2. 'par' → logprob: -0.9792677760124207
    3. 'n' → logprob: -2.9792678356170654
    4. 'parent' → logprob: -3.9792678356170654
    5. 'pa' → logprob: -5.354267597198486
    6. '_par' → logprob: -7.229267597198486
    7. 'N' → logprob: -7.354267597198486
    8. 'data' → logprob: -7.604267597198486
    9. '_parent' → logprob: -7.979267597198486
    10. '_p' → logprob: -8.354268074035645

Token 260: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24854542315006256
    2. '=[' → logprob: -1.9985454082489014
    3. 'ar' → logprob: -2.4985454082489014
    4. '=list' → logprob: -7.2485456466674805
    5. ' =' → logprob: -7.7485456466674805
    6. '=
' → logprob: -8.12354564666748
    7. '=[]
' → logprob: -8.74854564666748
    8. '[' → logprob: -8.87354564666748
    9. '=[
' → logprob: -9.49854564666748
    10. '=array' → logprob: -9.49854564666748

Token 261: 'x' (ID: 87)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6119802594184875
    2. 'i' → logprob: -0.8619802594184875
    3. '-i' → logprob: -3.7369801998138428
    4. ' i' → logprob: -4.486980438232422
    5. ' -' → logprob: -8.111980438232422
    6. '-sl' → logprob: -12.611980438232422
    7. '-n' → logprob: -12.986980438232422
    8. '_i' → logprob: -12.986980438232422
    9. '*i' → logprob: -12.986980438232422
    10. '
' → logprob: -13.486980438232422

Token 262: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.055878762155771255
    2. 'x' → logprob: -3.3058788776397705
    3. ' for' → logprob: -4.055878639221191
    4. ' x' → logprob: -8.680878639221191
    5. '(x' → logprob: -9.805878639221191
    6. '=x' → logprob: -9.805878639221191
    7. ':x' → logprob: -10.805878639221191
    8. '+x' → logprob: -11.305878639221191
    9. ',x' → logprob: -11.680878639221191
    10. '
' → logprob: -12.305878639221191

Token 263: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002485288307070732
    2. ' x' → logprob: -6.002485275268555
    3. 'range' → logprob: -12.002485275268555
    4. ' range' → logprob: -12.627485275268555
    5. ' in' → logprob: -15.377485275268555
    6. 'in' → logprob: -17.502485275268555
    7. '
' → logprob: -18.252485275268555
    8. ',x' → logprob: -18.627485275268555
    9. '(x' → logprob: -18.627485275268555
    10. ' ' → logprob: -19.252485275268555

Token 264: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5270218849182129
    2. 'in' → logprob: -1.027021884918213
    3. ' in' → logprob: -3.027021884918213
    4. ' range' → logprob: -5.777021884918213
    5. 'x' → logprob: -12.152021408081055
    6. ' ' → logprob: -13.027021408081055
    7. '
' → logprob: -13.652021408081055
    8. '(range' → logprob: -14.277021408081055
    9. '  ' → logprob: -15.402021408081055
    10. ' xrange' → logprob: -16.402021408081055

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.750158309936523
    4. '
' → logprob: -19.000158309936523
    5. 'r' → logprob: -20.125158309936523
    6. '	range' → logprob: -20.875158309936523
    7. 'rang' → logprob: -21.375158309936523
    8. ' ' → logprob: -22.000158309936523
    9. 'x' → logprob: -22.625158309936523
    10. '0' → logprob: -22.625158309936523

Token 266: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00033593899570405483
    2. 'N' → logprob: -8.000335693359375
    3. '(' → logprob: -14.750335693359375
    4. '	N' → logprob: -18.125335693359375
    5. ' (' → logprob: -18.875335693359375
    6. '
' → logprob: -18.875335693359375
    7. '1' → logprob: -19.375335693359375
    8. ' N' → logprob: -19.500335693359375
    9. '(
' → logprob: -19.750335693359375
    10. '```' → logprob: -19.875335693359375

Token 267: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011303281411528587
    2. ')]
' → logprob: -4.761303424835205
    3. ')' → logprob: -6.011303424835205
    4. ' )' → logprob: -8.886302947998047
    5. ']' → logprob: -10.761302947998047
    6. ')])' → logprob: -10.886302947998047
    7. '+' → logprob: -11.011302947998047
    8. ')]

' → logprob: -11.636302947998047
    9. ')];
' → logprob: -12.136302947998047
    10. '])]' → logprob: -12.386302947998047

Token 268: '];' (ID: 11464)
  Prédit: '];'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '];' → logprob: -0.5780229568481445
    2. ']' → logprob: -0.9530229568481445
    3. ']
' → logprob: -2.9530229568481445
    4. ' ];' → logprob: -7.9530229568481445
    5. ' ]' → logprob: -8.203022956848145
    6. 'def' → logprob: -8.453022956848145
    7. 's' → logprob: -9.328022956848145
    8. '],' → logprob: -9.453022956848145
    9. ' ]
' → logprob: -9.953022956848145
    10. 'sl' → logprob: -10.328022956848145

Token 269: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.002650093985721469
    2. ' sl' → logprob: -6.002650260925293
    3. 'def' → logprob: -9.127650260925293
    4. '
' → logprob: -11.127650260925293
    5. ' def' → logprob: -11.127650260925293
    6. ' ' → logprob: -11.877650260925293
    7. '   ' → logprob: -12.502650260925293
    8. '0' → logprob: -12.752650260925293
    9. '```' → logprob: -12.752650260925293
    10. 'self' → logprob: -12.877650260925293

Token 270: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.981667537620524e-06
    2. 'p' → logprob: -13.875001907348633
    3. 'ф' → logprob: -14.875001907348633
    4. '```' → logprob: -15.875001907348633
    5. 'ف' → logprob: -16.125001907348633
    6. '[' → logprob: -16.500001907348633
    7. 'fl' → logprob: -16.500001907348633
    8. '_f' → logprob: -17.250001907348633
    9. 'F' → logprob: -17.375001907348633
    10. '2' → logprob: -17.750001907348633

Token 271: '.c' (ID: 1081)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.21451865136623383
    2. '.r' → logprob: -2.2145185470581055
    3. '.sz' → logprob: -2.5895185470581055
    4. '.u' → logprob: -5.9645185470581055
    5. '.rank' → logprob: -6.0895185470581055
    6. 's' → logprob: -6.7145185470581055
    7. '.size' → logprob: -6.7145185470581055
    8. '.c' → logprob: -8.089518547058105
    9. '.v' → logprob: -8.464518547058105
    10. '.i' → logprob: -8.464518547058105

Token 272: '=' (ID: 28)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.48848193883895874
    2. '=' → logprob: -1.7384819984436035
    3. '=[' → logprob: -2.1134819984436035
    4. 'ount' → logprob: -4.2384819984436035
    5. 'sz' → logprob: -4.3634819984436035
    6. '=size' → logprob: -4.4884819984436035
    7. 's' → logprob: -4.6134819984436035
    8. 'sl' → logprob: -4.9884819984436035
    9. '=[]' → logprob: -5.1134819984436035
    10. 'nts' → logprob: -5.3634819984436035

Token 273: '0' (ID: 15)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.2725370228290558
    2. '[' → logprob: -1.6475369930267334
    3. 'N' → logprob: -3.2725369930267334
    4. '0' → logprob: -4.8975372314453125
    5. ' [' → logprob: -7.5225372314453125
    6. '[x' → logprob: -10.022537231445312
    7. '[-' → logprob: -10.647537231445312
    8. ' N' → logprob: -10.772537231445312
    9. '1' → logprob: -11.647537231445312
    10. '[s' → logprob: -12.897537231445312

Token 274: ';' (ID: 26)
  Prédit: '	def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	def' → logprob: -0.6247909665107727
    2. ' def' → logprob: -1.999790906906128
    3. 'def' → logprob: -1.999790906906128
    4. '<|end|>' → logprob: -2.124790906906128
    5. '	s' → logprob: -3.499790906906128
    6. '	sl' → logprob: -3.749790906906128
    7. ';' → logprob: -4.624791145324707
    8. '
' → logprob: -5.874791145324707
    9. '<|end|>' → logprob: -5.999791145324707
    10. ' ' → logprob: -6.249791145324707

Token 275: 'sl' (ID: 4500)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14477483928203583
    2. 'def' → logprob: -2.019774913787842
    3. '	def' → logprob: -6.394774913787842
    4. 's' → logprob: -8.894774436950684
    5. '<|end|>' → logprob: -8.894774436950684
    6. 'sl' → logprob: -9.769774436950684
    7. ' sl' → logprob: -10.644774436950684
    8. 'd' → logprob: -11.394774436950684
    9. '
' → logprob: -11.894774436950684
    10. '   ' → logprob: -11.894774436950684

Token 276: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'ф' → logprob: -16.75
    3. 'fl' → logprob: -17.125
    4. 'ف' → logprob: -17.375
    5. 'p' → logprob: -17.625
    6. '[' → logprob: -17.875
    7. '```' → logprob: -18.0
    8. 's' → logprob: -18.375
    9. 'F' → logprob: -18.375
    10. '_f' → logprob: -18.75

Token 277: '.r' (ID: 2951)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.7679664492607117
    2. '.sz' → logprob: -0.7679664492607117
    3. 'sz' → logprob: -4.267966270446777
    4. 'size' → logprob: -4.392966270446777
    5. '.rank' → logprob: -4.642966270446777
    6. 's' → logprob: -4.767966270446777
    7. 'sizes' → logprob: -5.267966270446777
    8. '.size' → logprob: -5.517966270446777
    9. '_sz' → logprob: -5.642966270446777
    10. '_sizes' → logprob: -6.142966270446777

Token 278: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.019296646118164062
    2. '=' → logprob: -4.269296646118164
    3. 'ank' → logprob: -6.269296646118164
    4. '=[]' → logprob: -7.269296646118164
    5. '=[]
' → logprob: -7.519296646118164
    6. 'anks' → logprob: -7.644296646118164
    7. '={[' → logprob: -8.394296646118164
    8. '={' → logprob: -8.644296646118164
    9. '=[[' → logprob: -8.644296646118164
    10. '={}
' → logprob: -8.894296646118164

Token 279: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20196639001369476
    2. '0' → logprob: -1.701966404914856
    3. ' ' → logprob: -7.701966285705566
    4. '-' → logprob: -9.326966285705566
    5. ' -' → logprob: -12.326966285705566
    6. 'False' → logprob: -12.451966285705566
    7. 'True' → logprob: -14.326966285705566
    8. '```' → logprob: -14.451966285705566
    9. '``' → logprob: -14.701966285705566
    10. '2' → logprob: -14.951966285705566

Token 280: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.021211212500929832
    2. ']*(' → logprob: -4.27121114730835
    3. ' for' → logprob: -5.39621114730835
    4. ']' → logprob: -6.52121114730835
    5. 'for' → logprob: -7.02121114730835
    6. ' ]' → logprob: -9.271211624145508
    7. ']+' → logprob: -10.646211624145508
    8. ' ' → logprob: -13.146211624145508
    9. ',' → logprob: -13.771211624145508
    10. '0' → logprob: -14.021211624145508

Token 281: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.069664333248511e-05
    2. '(N' → logprob: -11.000020980834961
    3. '(' → logprob: -12.500020980834961
    4. ' N' → logprob: -15.375020980834961
    5. ' (' → logprob: -17.12502098083496
    6. ' ' → logprob: -18.87502098083496
    7. '   ' → logprob: -19.50002098083496
    8. '100' → logprob: -19.87502098083496
    9. '  ' → logprob: -20.12502098083496
    10. 'K' → logprob: -20.50002098083496

Token 282: '
' (ID: 198)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.007809023838490248
    2. 'def' → logprob: -5.632809162139893
    3. '
' → logprob: -5.882809162139893
    4. '	def' → logprob: -6.632809162139893
    5. ' 
' → logprob: -10.007808685302734
    6. ';' → logprob: -11.257808685302734
    7. ' sl' → logprob: -11.257808685302734
    8. ' ' → logprob: -11.507808685302734
    9. ' ' → logprob: -12.757808685302734
    10. '
' → logprob: -12.882808685302734

Token 283: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04916520044207573
    2. '<|end|>' → logprob: -3.1741652488708496
    3. 'def' → logprob: -5.79916524887085
    4. ' 
' → logprob: -6.54916524887085
    5. '
' → logprob: -6.79916524887085
    6. '	def' → logprob: -8.424164772033691
    7. ' ' → logprob: -8.799164772033691
    8. '   ' → logprob: -9.424164772033691
    9. '<|end|>' → logprob: -9.924164772033691
    10. '  
' → logprob: -11.049164772033691

Token 284: ' f' (ID: 285)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.07613351196050644
    2. 'f' → logprob: -3.4511334896087646
    3. ' find' → logprob: -3.7011334896087646
    4. 'root' → logprob: -4.451133728027344
    5. 'r' → logprob: -5.451133728027344
    6. '_find' → logprob: -8.826133728027344
    7. '
' → logprob: -8.951133728027344
    8. ' root' → logprob: -8.951133728027344
    9. 'fin' → logprob: -9.826133728027344
    10. 'get' → logprob: -9.826133728027344

Token 285: '(s' (ID: 1858)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.004469285253435373
    2. '(ind' → logprob: -6.129469394683838
    3. '(x' → logprob: -6.754469394683838
    4. 'nd' → logprob: -7.254469394683838
    5. '(nd' → logprob: -9.62946891784668
    6. '(parent' → logprob: -9.87946891784668
    7. '(i' → logprob: -10.12946891784668
    8. 'find' → logprob: -10.12946891784668
    9. '
' → logprob: -10.37946891784668
    10. '(find' → logprob: -10.37946891784668

Token 286: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -8.661626634420827e-05
    2. 'l' → logprob: -9.375086784362793
    3. '
' → logprob: -14.750086784362793
    4. 'sl' → logprob: -14.750086784362793
    5. '```' → logprob: -15.500086784362793
    6. 'elf' → logprob: -16.000085830688477
    7. '1' → logprob: -16.250085830688477
    8. 'rf' → logprob: -16.250085830688477
    9. '

' → logprob: -16.750085830688477
    10. 'ltf' → logprob: -16.875085830688477

Token 287: ',a' (ID: 26776)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.03210285305976868
    2. ',' → logprob: -4.407103061676025
    3. ',a' → logprob: -4.407103061676025
    4. 'a' → logprob: -6.407103061676025
    5. 'x' → logprob: -6.657103061676025
    6. ',p' → logprob: -7.032103061676025
    7. ',n' → logprob: -7.282103061676025
    8. 'ind' → logprob: -7.407103061676025
    9. ',f' → logprob: -7.657103061676025
    10. ',self' → logprob: -7.782103061676025

Token 288: '):' (ID: 3127)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.0995400920510292
    2. ',' → logprob: -3.5995399951934814
    3. ',x' → logprob: -3.8495399951934814
    4. '):
' → logprob: -3.9745399951934814
    5. ' ,' → logprob: -4.0995402336120605
    6. '):' → logprob: -5.0995402336120605
    7. ',b' → logprob: -6.8495402336120605
    8. ',int' → logprob: -7.2245402336120605
    9. ',s' → logprob: -7.9745402336120605
    10. ',v' → logprob: -8.224539756774902

Token 289: 'return' (ID: 1034)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12674717605113983
    2. ' while' → logprob: -2.6267471313476562
    3. 'if' → logprob: -3.2517471313476562
    4. ' p' → logprob: -5.501747131347656
    5. 'while' → logprob: -6.001747131347656
    6. 'p' → logprob: -6.751747131347656
    7. ' sl' → logprob: -8.626747131347656
    8. 'sl' → logprob: -9.251747131347656
    9. 'a' → logprob: -12.251747131347656
    10. '   ' → logprob: -12.751747131347656

Token 290: ' a' (ID: 261)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.47684308886528015
    2. 'a' → logprob: -1.3518431186676025
    3. ' sl' → logprob: -2.6018431186676025
    4. ' a' → logprob: -3.1018431186676025
    5. '(a' → logprob: -7.351842880249023
    6. '(s' → logprob: -7.976842880249023
    7. ' (' → logprob: -8.226842880249023
    8. '(' → logprob: -10.101842880249023
    9. ' ' → logprob: -10.351842880249023
    10. '(sl' → logprob: -11.351842880249023

Token 291: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12714092433452606
    2. 'if' → logprob: -2.127140998840332
    3. '
' → logprob: -9.377140998840332
    4. ' ' → logprob: -9.752140998840332
    5. 'sl' → logprob: -10.377140998840332
    6. 's' → logprob: -11.127140998840332
    7. '<|end|>' → logprob: -11.377140998840332
    8. ';if' → logprob: -12.252140998840332
    9. 'f' → logprob: -12.502140998840332
    10. '	if' → logprob: -13.252140998840332

Token 292: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -5.1689596148207784e-05
    2. ' sl' → logprob: -9.875051498413086
    3. '(s' → logprob: -16.375051498413086
    4. 'a' → logprob: -17.250051498413086
    5. 's' → logprob: -17.625051498413086
    6. 'sk' → logprob: -19.500051498413086
    7. '
' → logprob: -20.000051498413086
    8. 'sn' → logprob: -20.125051498413086
    9. '(sl' → logprob: -20.625051498413086
    10. 'sle' → logprob: -20.875051498413086

Token 293: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.1008713702030946e-06
    2. 'fl' → logprob: -14.625001907348633
    3. '[' → logprob: -14.875001907348633
    4. '.f' → logprob: -15.125001907348633
    5. '[f' → logprob: -15.500001907348633
    6. 'lf' → logprob: -15.750001907348633
    7. '
' → logprob: -16.125001907348633
    8. '(f' → logprob: -16.375001907348633
    9. 'sl' → logprob: -16.500001907348633
    10. ' sl' → logprob: -16.625001907348633

Token 294: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0013286912580952048
    2. 'p' → logprob: -6.626328468322754
    3. '.r' → logprob: -14.251328468322754
    4. '<p' → logprob: -14.376328468322754
    5. 'a' → logprob: -14.501328468322754
    6. '```' → logprob: -15.376328468322754
    7. ' .' → logprob: -15.501328468322754
    8. 'sl' → logprob: -15.876328468322754
    9. '.' → logprob: -16.37632942199707
    10. ' p' → logprob: -16.62632942199707

Token 295: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.494741632603109e-05
    2. 'a' → logprob: -9.37508487701416
    3. '[' → logprob: -17.250085830688477
    4. '(a' → logprob: -17.625085830688477
    5. '<a' → logprob: -17.625085830688477
    6. ' a' → logprob: -17.750085830688477
    7. '	a' → logprob: -18.000085830688477
    8. '[
' → logprob: -18.000085830688477
    9. '```' → logprob: -18.000085830688477
    10. '#a' → logprob: -18.500085830688477

Token 296: ']==' (ID: 34128)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.2663169205188751
    2. ']==' → logprob: -1.5163168907165527
    3. 'a' → logprob: -4.391316890716553
    4. '==' → logprob: -6.516316890716553
    5. ']' → logprob: -7.891316890716553
    6. ' a' → logprob: -11.391317367553711
    7. '[' → logprob: -11.766317367553711
    8. '[
' → logprob: -12.516317367553711
    9. '']==' → logprob: -12.516317367553711
    10. '```' → logprob: -12.516317367553711

Token 297: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6240566083070007e-06
    2. ' a' → logprob: -13.375001907348633
    3. '	a' → logprob: -19.875001907348633
    4. '>a' → logprob: -21.250001907348633
    5. '<a' → logprob: -21.875001907348633
    6. '[a' → logprob: -22.250001907348633
    7. ')a' → logprob: -22.750001907348633
    8. '
' → logprob: -23.750001907348633
    9. '_a' → logprob: -23.875001907348633
    10. 'sl' → logprob: -24.000001907348633

Token 298: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10020699352025986
    2. 'else' → logprob: -2.3502070903778076
    3. 'sl' → logprob: -15.225207328796387
    4. ' ' → logprob: -16.85020637512207
    5. '```' → logprob: -18.22520637512207
    6. ' sl' → logprob: -18.72520637512207
    7. '	else' → logprob: -18.97520637512207
    8. ' 
' → logprob: -20.22520637512207
    9. '
' → logprob: -20.22520637512207
    10. '   ' → logprob: -20.60020637512207

Token 299: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.002833053469657898
    2. ' sl' → logprob: -5.877832889556885
    3. 'uf' → logprob: -10.627833366394043
    4. ' uf' → logprob: -13.752833366394043
    5. '(s' → logprob: -14.127833366394043
    6. 'sf' → logprob: -14.377833366394043
    7. '(sl' → logprob: -14.752833366394043
    8. 'self' → logprob: -15.127833366394043
    9. '[' → logprob: -15.377833366394043
    10. 'f' → logprob: -15.752833366394043

Token 300: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002553793019615114
    2. 'p' → logprob: -8.500255584716797
    3. '.p' → logprob: -10.125255584716797
    4. '.f' → logprob: -11.625255584716797
    5. '
' → logprob: -15.250255584716797
    6. 'ф' → logprob: -15.437755584716797
    7. 'fl' → logprob: -15.687755584716797
    8. '(p' → logprob: -15.750255584716797
    9. 'pf' → logprob: -15.750255584716797
    10. '```' → logprob: -15.750255584716797

Token 301: '.r' (ID: 2951)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.00019829542725346982
    2. '.p' → logprob: -8.875198364257812
    3. ' .' → logprob: -10.875198364257812
    4. 'p' → logprob: -11.000198364257812
    5. 'f' → logprob: -11.125198364257812
    6. '.' → logprob: -12.750198364257812
    7. '```' → logprob: -13.125198364257812
    8. '	f' → logprob: -15.000198364257812
    9. '(f' → logprob: -15.250198364257812
    10. '._' → logprob: -15.750198364257812

Token 302: 'st' (ID: 302)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.740470826625824
    2. 'f' → logprob: -1.2404708862304688
    3. 'a' → logprob: -2.2404708862304688
    4. '.setdefault' → logprob: -3.6154708862304688
    5. 'sl' → logprob: -3.7404708862304688
    6. 'update' → logprob: -4.365470886230469
    7. 'p' → logprob: -4.740470886230469
    8. 'set' → logprob: -4.740470886230469
    9. '(s' → logprob: -4.865470886230469
    10. 'ef' → logprob: -4.990470886230469

Token 303: '(a' (ID: 6271)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.021307364106178284
    2. 'sl' → logprob: -4.271307468414307
    3. '[' → logprob: -5.521307468414307
    4. 's' → logprob: -7.271307468414307
    5. 'uf' → logprob: -7.521307468414307
    6. 'f' → logprob: -7.896307468414307
    7. '(sl' → logprob: -7.896307468414307
    8. '(' → logprob: -8.021306991577148
    9. '(f' → logprob: -8.521306991577148
    10. 'set' → logprob: -8.896306991577148

Token 304: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.432449609041214
    2. '(s' → logprob: -1.1824495792388916
    3. ',s' → logprob: -3.8074495792388916
    4. ',f' → logprob: -5.057449817657471
    5. ',(' → logprob: -5.807449817657471
    6. 'f' → logprob: -5.932449817657471
    7. ',[' → logprob: -6.182449817657471
    8. 's' → logprob: -6.682449817657471
    9. ' ,' → logprob: -6.682449817657471
    10. '),' → logprob: -6.807449817657471

Token 305: ' def' (ID: 1056)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3600021302700043
    2. 's' → logprob: -2.110002040863037
    3. 'rst' → logprob: -2.610002040863037
    4. 'r' → logprob: -3.610002040863037
    5. 'ef' → logprob: -3.610002040863037
    6. 'et' → logprob: -3.735002040863037
    7. 'st' → logprob: -4.360002040863037
    8. 'rf' → logprob: -5.610002040863037
    9. 't' → logprob: -6.360002040863037
    10. 'set' → logprob: -6.360002040863037

Token 306: ' rst' (ID: 96922)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3750171661376953
    2. 'rst' → logprob: -1.2500171661376953
    3. ' f' → logprob: -4.375017166137695
    4. 'r' → logprob: -4.500017166137695
    5. ' rst' → logprob: -6.875017166137695
    6. 'fst' → logprob: -7.875017166137695
    7. '_rst' → logprob: -7.875017166137695
    8. 'rf' → logprob: -8.000017166137695
    9. '_f' → logprob: -9.000017166137695
    10. 'rest' → logprob: -10.125017166137695

Token 307: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3050503730773926
    2. '<|end|>' → logprob: -1.4300503730773926
    3. '(' → logprob: -4.680050373077393
    4. '(a' → logprob: -5.805050373077393
    5. '=lambda' → logprob: -6.305050373077393
    6. '(lambda' → logprob: -6.555050373077393
    7. '=' → logprob: -6.805050373077393
    8. 's' → logprob: -6.805050373077393
    9. '<|end|>' → logprob: -6.805050373077393
    10. 'def' → logprob: -7.680050373077393

Token 308: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -2.045823566731997e-05
    2. ' lf' → logprob: -11.625020027160645
    3. 'l' → logprob: -12.250020027160645
    4. 'f' → logprob: -12.375020027160645
    5. 'elf' → logprob: -14.250020027160645
    6. '(' → logprob: -15.250020027160645
    7. '{' → logprob: -15.375020027160645
    8. 'fl' → logprob: -16.00002098083496
    9. 'rf' → logprob: -16.12502098083496
    10. '1' → logprob: -16.25002098083496

Token 309: ',a' (ID: 26776)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1496819704771042
    2. 'f' → logprob: -2.89968204498291
    3. ',' → logprob: -3.52468204498291
    4. 'elf' → logprob: -3.52468204498291
    5. 'a' → logprob: -5.02468204498291
    6. 'r' → logprob: -5.64968204498291
    7. '(a' → logprob: -5.77468204498291
    8. '<|end|>' → logprob: -6.27468204498291
    9. ')' → logprob: -6.52468204498291
    10. 's' → logprob: -6.89968204498291

Token 310: '):
' (ID: 1883)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.37629610300064087
    2. ',' → logprob: -1.501296043395996
    3. '(a' → logprob: -2.751296043395996
    4. '(sl' → logprob: -4.376296043395996
    5. ',s' → logprob: -5.001296043395996
    6. '(s' → logprob: -5.376296043395996
    7. 'a' → logprob: -7.126296043395996
    8. '):' → logprob: -7.626296043395996
    9. '(' → logprob: -7.876296043395996
    10. ' ,' → logprob: -8.001296043395996

Token 311: ' ' (ID: 220)
  Prédit: ' sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sl' → logprob: -0.07890917360782623
    2. 'sl' → logprob: -2.578909158706665
    3. '	sl' → logprob: -12.203908920288086
    4. 's' → logprob: -12.328908920288086
    5. '/sl' → logprob: -13.078908920288086
    6. '```' → logprob: -14.203908920288086
    7. '.sl' → logprob: -14.328908920288086
    8. ' return' → logprob: -14.578908920288086
    9. '_sl' → logprob: -14.703908920288086
    10. ' if' → logprob: -14.703908920288086

Token 312: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.02082855999469757
    2. ' sl' → logprob: -3.8958284854888916
    3. ' ' → logprob: -8.645828247070312
    4. 's' → logprob: -11.270828247070312
    5. ' b' → logprob: -11.395828247070312
    6. 'b' → logprob: -11.645828247070312
    7. '```' → logprob: -11.770828247070312
    8. ' s' → logprob: -11.895828247070312
    9. '[' → logprob: -12.270828247070312
    10. '``' → logprob: -12.270828247070312

Token 313: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.125
    3. ' f' → logprob: -16.625
    4. '_f' → logprob: -18.25
    5. '.f' → logprob: -18.25
    6. '
' → logprob: -18.5
    7. '[f' → logprob: -18.625
    8. 'ф' → logprob: -19.625
    9. 'r' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 314: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0015298592625185847
    2. 'p' → logprob: -7.376529693603516
    3. ' .' → logprob: -7.876529693603516
    4. '.r' → logprob: -7.876529693603516
    5. 'r' → logprob: -10.251529693603516
    6. '.' → logprob: -10.501529693603516
    7. '=' → logprob: -10.876529693603516
    8. ' ' → logprob: -11.001529693603516
    9. '.c' → logprob: -11.501529693603516
    10. ' p' → logprob: -11.876529693603516

Token 315: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.003782023908570409
    2. '[' → logprob: -5.628781795501709
    3. 'a' → logprob: -8.878782272338867
    4. '[s' → logprob: -10.128782272338867
    5. '[p' → logprob: -13.878782272338867
    6. '(a' → logprob: -14.378782272338867
    7. ' a' → logprob: -15.253782272338867
    8. '<|end|>' → logprob: -15.503782272338867
    9. ' ' → logprob: -15.753782272338867
    10. '#a' → logprob: -16.253782272338867

Token 316: ']=' (ID: 9539)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.48901262879371643
    2. ']=' → logprob: -1.864012598991394
    3. ']' → logprob: -2.6140127182006836
    4. ']==' → logprob: -2.8640127182006836
    5. '=' → logprob: -2.9890127182006836
    6. ']!=' → logprob: -3.3640127182006836
    7. '=a' → logprob: -4.864012718200684
    8. '!=' → logprob: -5.739012718200684
    9. '==' → logprob: -6.114012718200684
    10. 'a' → logprob: -6.239012718200684

Token 317: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.00020473242329899222
    2. ' sl' → logprob: -8.500205039978027
    3. ' ' → logprob: -14.750205039978027
    4. 's' → logprob: -15.375205039978027
    5. '
' → logprob: -15.875205039978027
    6. '(s' → logprob: -16.25020408630371
    7. '[' → logprob: -16.25020408630371
    8. ' s' → logprob: -16.62520408630371
    9. 'st' → logprob: -17.62520408630371
    10. 'spl' → logprob: -17.62520408630371

Token 318: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017246805364266038
    2. '.f' → logprob: -7.501724720001221
    3. '.r' → logprob: -7.501724720001221
    4. 'p' → logprob: -8.126724243164062
    5. 'r' → logprob: -8.876724243164062
    6. '.p' → logprob: -9.126724243164062
    7. 'rst' → logprob: -10.626724243164062
    8. '.rf' → logprob: -11.876724243164062
    9. '.rest' → logprob: -12.001724243164062
    10. '.__' → logprob: -12.626724243164062

Token 319: '.f' (ID: 1196)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.011613822542130947
    2. '.f' → logprob: -4.636613845825195
    3. 'rst' → logprob: -6.511613845825195
    4. 'f' → logprob: -8.761613845825195
    5. '_rst' → logprob: -9.136613845825195
    6. ' rst' → logprob: -10.261613845825195
    7. '.rest' → logprob: -10.261613845825195
    8. 'r' → logprob: -11.386613845825195
    9. '.rs' → logprob: -11.886613845825195
    10. '_RST' → logprob: -12.136613845825195

Token 320: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001158211671281606
    2. 'sl' → logprob: -9.125115394592285
    3. 's' → logprob: -12.000115394592285
    4. '(l' → logprob: -15.375115394592285
    5. 'Sl' → logprob: -16.0001163482666
    6. '((' → logprob: -16.0001163482666
    7. '(f' → logprob: -16.0001163482666
    8. '(' → logprob: -16.2501163482666
    9. '(sl' → logprob: -17.1251163482666
    10. '(p' → logprob: -17.2501163482666

Token 321: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -4.842555426876061e-06
    2. 'l' → logprob: -13.750004768371582
    3. 'sl' → logprob: -14.000004768371582
    4. 'lg' → logprob: -14.125004768371582
    5. ' lf' → logprob: -14.125004768371582
    6. '(l' → logprob: -14.375004768371582
    7. 'lp' → logprob: -14.750004768371582
    8. 'fl' → logprob: -15.625004768371582
    9. 'f' → logprob: -16.2500057220459
    10. '(sl' → logprob: -16.8750057220459

Token 322: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.13259997963905334
    2. 'p' → logprob: -2.1326000690460205
    3. '(p' → logprob: -5.507599830627441
    4. 'sl' → logprob: -7.007599830627441
    5. '(s' → logprob: -8.382599830627441
    6. ',p' → logprob: -8.632599830627441
    7. ' p' → logprob: -9.257599830627441
    8. 'a' → logprob: -9.632599830627441
    9. '(a' → logprob: -10.132599830627441
    10. '(sl' → logprob: -11.382599830627441

Token 323: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.0683535037969705e-05
    2. 'a' → logprob: -11.50001049041748
    3. '[' → logprob: -15.75001049041748
    4. '(a' → logprob: -16.000011444091797
    5. ' a' → logprob: -16.500011444091797
    6. '[s' → logprob: -16.750011444091797
    7. '```' → logprob: -17.000011444091797
    8. ')a' → logprob: -17.375011444091797
    9. '[A' → logprob: -17.500011444091797
    10. '[
' → logprob: -18.125011444091797

Token 324: ']);' (ID: 34389)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.896309739408025e-07
    2. 'a' → logprob: -14.250000953674316
    3. '(a' → logprob: -17.5
    4. ')a' → logprob: -19.375
    5. '[A' → logprob: -19.625
    6. '[' → logprob: -19.625
    7. '	a' → logprob: -20.25
    8. ' a' → logprob: -20.25
    9. '[s' → logprob: -20.375
    10. '```' → logprob: -20.875

Token 325: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06352266669273376
    2. 'return' → logprob: -3.4385225772857666
    3. ' ' → logprob: -3.5635225772857666
    4. ' sl' → logprob: -7.563522815704346
    5. ' ' → logprob: -8.063522338867188
    6. 'sl' → logprob: -8.438522338867188
    7. '  ' → logprob: -10.813522338867188
    8. '	return' → logprob: -11.188522338867188
    9. '   ' → logprob: -12.688522338867188
    10. '```' → logprob: -12.688522338867188

Token 326: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.002476724097505212
    2. ' sl' → logprob: -6.002476692199707
    3. 's' → logprob: -14.877476692199707
    4. ' ' → logprob: -15.002476692199707
    5. 'sf' → logprob: -16.502477645874023
    6. 'lf' → logprob: -16.627477645874023
    7. '	sl' → logprob: -17.002477645874023
    8. 'slu' → logprob: -17.377477645874023
    9. ' ' → logprob: -17.502477645874023
    10. 'q' → logprob: -18.002477645874023

Token 327: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0002326224057469517
    2. 'p' → logprob: -8.375232696533203
    3. 'fp' → logprob: -13.875232696533203
    4. 'a' → logprob: -15.750232696533203
    5. 'fl' → logprob: -15.750232696533203
    6. 'ф' → logprob: -16.250232696533203
    7. '[p' → logprob: -16.375232696533203
    8. 'fsp' → logprob: -16.375232696533203
    9. 'ف' → logprob: -16.500232696533203
    10. '.p' → logprob: -16.500232696533203

Token 328: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.39141735434532166
    2. 'p' → logprob: -1.141417384147644
    3. 'f' → logprob: -5.766417503356934
    4. '.r' → logprob: -7.641417503356934
    5. 'def' → logprob: -7.891417503356934
    6. '.f' → logprob: -8.391417503356934
    7. ' p' → logprob: -9.266417503356934
    8. 'rst' → logprob: -9.891417503356934
    9. 'r' → logprob: -10.141417503356934
    10. 'a' → logprob: -10.266417503356934

Token 329: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3673184812068939
    2. '<|end|>' → logprob: -1.2423185110092163
    3. '[' → logprob: -4.367318630218506
    4. '[
' → logprob: -6.742318630218506
    5. 'a' → logprob: -6.867318630218506
    6. '[s' → logprob: -6.992318630218506
    7. '[class' → logprob: -7.367318630218506
    8. 'def' → logprob: -7.492318630218506
    9. '[user' → logprob: -7.492318630218506
    10. '<|end|>' → logprob: -8.242318153381348

Token 330: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0014737951569259167
    2. 'def' → logprob: -6.751473903656006
    3. ' ' → logprob: -8.751473426818848
    4. '<|end|>' → logprob: -9.001473426818848
    5. ' for' → logprob: -12.126473426818848
    6. ' class' → logprob: -12.376473426818848
    7. '   ' → logprob: -13.001473426818848
    8. '	def' → logprob: -13.376473426818848
    9. '```' → logprob: -13.376473426818848
    10. ' ' → logprob: -13.626473426818848

Token 332: ' same' (ID: 2684)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.05264389142394066
    2. ' u' → logprob: -4.177643775939941
    3. 'r' → logprob: -4.427643775939941
    4. 'm' → logprob: -4.552643775939941
    5. 'un' → logprob: -4.802643775939941
    6. ' unite' → logprob: -6.802643775939941
    7. 'a' → logprob: -7.302643775939941
    8. ' m' → logprob: -7.427643775939941
    9. 'union' → logprob: -7.677643775939941
    10. 'c' → logprob: -7.927643775939941

Token 333: '(w' (ID: 7420)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.02089090459048748
    2. '(' → logprob: -3.895890951156616
    3. '(sl' → logprob: -8.145891189575195
    4. '<|end|>' → logprob: -10.145891189575195
    5. '(self' → logprob: -12.395891189575195
    6. ' (' → logprob: -12.645891189575195
    7. '(ss' → logprob: -12.770891189575195
    8. '(
' → logprob: -13.145891189575195
    9. 's' → logprob: -13.520891189575195
    10. '(S' → logprob: -14.020891189575195

Token 334: ',a' (ID: 26776)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.019625745713710785
    2. '(u' → logprob: -4.769625663757324
    3. '(' → logprob: -5.894625663757324
    4. '(a' → logprob: -6.019625663757324
    5. ')(' → logprob: -6.269625663757324
    6. '(sl' → logprob: -7.019625663757324
    7. ' (' → logprob: -7.269625663757324
    8. ',' → logprob: -7.394625663757324
    9. 'sl' → logprob: -7.894625663757324
    10. '(w' → logprob: -8.019625663757324

Token 335: ',b' (ID: 17568)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.03202458843588829
    2. ',' → logprob: -3.657024621963501
    3. ',b' → logprob: -5.282024383544922
    4. ' ,' → logprob: -7.407024383544922
    5. ',a' → logprob: -11.532024383544922
    6. 'w' → logprob: -12.157024383544922
    7. ',v' → logprob: -13.657024383544922
    8. ',s' → logprob: -14.282024383544922
    9. ',d' → logprob: -14.532024383544922
    10. ' w' → logprob: -14.657024383544922

Token 336: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07396901398897171
    2. ',w' → logprob: -3.3239691257476807
    3. '):
' → logprob: -4.073968887329102
    4. ' ):' → logprob: -4.198968887329102
    5. ',' → logprob: -6.198968887329102
    6. ' ):
' → logprob: -7.948968887329102
    7. ' ,' → logprob: -8.323968887329102
    8. ')' → logprob: -8.448968887329102
    9. ',s' → logprob: -9.073968887329102
    10. ' )' → logprob: -9.323968887329102

Token 337: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.018542848527431488
    2. ' w' → logprob: -4.768542766571045
    3. ' False' → logprob: -5.643542766571045
    4. ' True' → logprob: -6.018542766571045
    5. ' sl' → logprob: -6.643542766571045
    6. '<|end|>' → logprob: -7.768542766571045
    7. 'return' → logprob: -7.893542766571045
    8. ' if' → logprob: -8.018543243408203
    9. 'w' → logprob: -8.643543243408203
    10. ' ' → logprob: -8.768543243408203

Token 338: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.25321099162101746
    2. ' w' → logprob: -1.8782110214233398
    3. 'a' → logprob: -3.00321102142334
    4. ' a' → logprob: -4.37821102142334
    5. ' sl' → logprob: -5.75321102142334
    6. 'False' → logprob: -6.00321102142334
    7. 'sl' → logprob: -6.50321102142334
    8. ' False' → logprob: -7.62821102142334
    9. ' (' → logprob: -8.25321102142334
    10. '(w' → logprob: -8.62821102142334

Token 339: '.f' (ID: 1196)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0003540542966220528
    2. '.f' → logprob: -8.750353813171387
    3. '==' → logprob: -9.625353813171387
    4. 'p' → logprob: -10.000353813171387
    5. '.r' → logprob: -10.375353813171387
    6. 'f' → logprob: -11.625353813171387
    7. ' ==' → logprob: -11.750353813171387
    8. '.same' → logprob: -12.000353813171387
    9. '.s' → logprob: -12.125353813171387
    10. '.' → logprob: -12.500353813171387

Token 340: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2558121979236603
    2. '(w' → logprob: -1.505812168121338
    3. '(s' → logprob: -6.380812168121338
    4. 'w' → logprob: -6.630812168121338
    5. 'a' → logprob: -7.255812168121338
    6. '(' → logprob: -9.380812644958496
    7. ' a' → logprob: -10.880812644958496
    8. ' w' → logprob: -11.005812644958496
    9. ' (' → logprob: -11.130812644958496
    10. ' ' → logprob: -12.380812644958496

Token 341: ')==' (ID: 35269)
  Prédit: ')=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.1009497418999672
    2. ')' → logprob: -2.350949764251709
    3. '==' → logprob: -7.600949764251709
    4. ' )' → logprob: -9.22594928741455
    5. ']==' → logprob: -9.72594928741455
    6. ',b' → logprob: -10.47594928741455
    7. 'w' → logprob: -10.60094928741455
    8. ',' → logprob: -11.85094928741455
    9. ',w' → logprob: -12.10094928741455
    10. ')!=' → logprob: -12.47594928741455

Token 342: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00861456897109747
    2. ' w' → logprob: -4.758614540100098
    3. '	w' → logprob: -17.133615493774414
    4. '<|end|>' → logprob: -17.508615493774414
    5. ' ' → logprob: -17.883615493774414
    6. 'q' → logprob: -18.258615493774414
    7. 'user' → logprob: -19.008615493774414
    8. '<|end|>' → logprob: -19.258615493774414
    9. '```' → logprob: -20.258615493774414
    10. '   ' → logprob: -20.383615493774414

Token 343: '.f' (ID: 1196)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001100087771192193
    2. '.f' → logprob: -6.876100063323975
    3. ' f' → logprob: -9.626100540161133
    4. 'p' → logprob: -14.501100540161133
    5. ' ' → logprob: -15.876100540161133
    6. '<f' → logprob: -15.876100540161133
    7. '```' → logprob: -15.876100540161133
    8. 'def' → logprob: -16.376100540161133
    9. '	f' → logprob: -16.626100540161133
    10. 's' → logprob: -16.751100540161133

Token 344: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005715470295399427
    2. 'a' → logprob: -5.630715370178223
    3. ' b' → logprob: -6.505715370178223
    4. '(b' → logprob: -7.630715370178223
    5. '(a' → logprob: -10.130715370178223
    6. 'w' → logprob: -10.380715370178223
    7. '(s' → logprob: -10.630715370178223
    8. 'sl' → logprob: -11.630715370178223
    9. '(w' → logprob: -11.755715370178223
    10. ' a' → logprob: -11.880715370178223

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022567142732441425
    2. '<|end|>' → logprob: -6.127256870269775
    3. ' )' → logprob: -9.752256393432617
    4. ')
' → logprob: -12.502256393432617
    5. ')return' → logprob: -12.752256393432617
    6. '<|end|>' → logprob: -13.377256393432617
    7. ' ' → logprob: -14.002256393432617
    8. '')' → logprob: -14.252256393432617
    9. '),' → logprob: -14.377256393432617
    10. '())' → logprob: -14.502256393432617

Token 346: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.027117418125271797
    2. ' ' → logprob: -4.1521172523498535
    3. '<|end|>' → logprob: -6.1521172523498535
    4. '```' → logprob: -6.4021172523498535
    5. 'def' → logprob: -6.6521172523498535
    6. '[' → logprob: -7.1521172523498535
    7. ' w' → logprob: -7.1521172523498535
    8. ' 
' → logprob: -7.6521172523498535
    9. '  ' → logprob: -7.9021172523498535
    10. ' f' → logprob: -7.9021172523498535

Token 347: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.06122387945652008
    2. 'un' → logprob: -3.4362239837646484
    3. 'r' → logprob: -3.9362239837646484
    4. 'm' → logprob: -5.811223983764648
    5. 'union' → logprob: -6.686223983764648
    6. 'uni' → logprob: -7.061223983764648
    7. 'uf' → logprob: -7.186223983764648
    8. 'merge' → logprob: -8.936223983764648
    9. ' u' → logprob: -9.061223983764648
    10. 'ug' → logprob: -9.061223983764648

Token 348: '(s' (ID: 1858)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06475764513015747
    2. 'n' → logprob: -2.8147575855255127
    3. 'pd' → logprob: -7.439757823944092
    4. '(n' → logprob: -7.814757823944092
    5. 'def' → logprob: -8.064757347106934
    6. '(s' → logprob: -8.189757347106934
    7. 'pf' → logprob: -8.189757347106934
    8. 'nst' → logprob: -8.439757347106934
    9. 'nit' → logprob: -9.189757347106934
    10. '(p' → logprob: -9.439757347106934

Token 349: 'lf' (ID: 12632)
  Prédit: 'lf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lf' → logprob: -0.0052304440177977085
    2. 'l' → logprob: -5.38023042678833
    3. 'elf' → logprob: -8.505230903625488
    4. '(s' → logprob: -8.880230903625488
    5. '(l' → logprob: -9.130230903625488
    6. ' lf' → logprob: -10.255230903625488
    7. 'sl' → logprob: -10.505230903625488
    8. '(w' → logprob: -11.005230903625488
    9. 'self' → logprob: -11.255230903625488
    10. 'f' → logprob: -11.380230903625488

Token 350: ',a' (ID: 26776)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5835065245628357
    2. ',' → logprob: -2.0835065841674805
    3. 's' → logprob: -2.4585065841674805
    4. '(a' → logprob: -3.0835065841674805
    5. ',s' → logprob: -3.2085065841674805
    6. 'a' → logprob: -3.9585065841674805
    7. 'self' → logprob: -4.5835065841674805
    8. '(u' → logprob: -4.5835065841674805
    9. '<|end|>' → logprob: -4.5835065841674805
    10. '(' → logprob: -4.7085065841674805

Token 351: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.00880991481244564
    2. ',' → logprob: -5.508810043334961
    3. ',s' → logprob: -5.883810043334961
    4. ' ,' → logprob: -6.258810043334961
    5. ',a' → logprob: -11.758810043334961
    6. 'b' → logprob: -12.133810043334961
    7. ',w' → logprob: -12.258810043334961
    8. 'sl' → logprob: -14.008810043334961
    9. ',v' → logprob: -14.133810043334961
    10. ',int' → logprob: -14.508810043334961

Token 352: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3135148286819458
    2. '):
' → logprob: -1.3135148286819458
    3. ' ):' → logprob: -9.188514709472656
    4. '):
' → logprob: -9.563514709472656
    5. ' ):
' → logprob: -10.188514709472656
    6. '):

' → logprob: -10.688514709472656
    7. ')' → logprob: -11.438514709472656
    8. ':' → logprob: -11.813514709472656
    9. '):(' → logprob: -14.688514709472656
    10. ':
' → logprob: -15.188514709472656

Token 353: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01328704971820116
    2. 'a' → logprob: -5.01328706741333
    3. ' sl' → logprob: -5.26328706741333
    4. ' s' → logprob: -7.01328706741333
    5. ' sa' → logprob: -9.013286590576172
    6. ' x' → logprob: -9.138286590576172
    7. ' w' → logprob: -9.638286590576172
    8. '	a' → logprob: -10.388286590576172
    9. ' ' → logprob: -10.513286590576172
    10. ' c' → logprob: -10.763286590576172

Token 354: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23199664056301117
    2. ' a' → logprob: -1.7319966554641724
    3. ' sl' → logprob: -4.606996536254883
    4. 'pa' → logprob: -4.981996536254883
    5. 'sl' → logprob: -5.106996536254883
    6. 'p' → logprob: -6.981996536254883
    7. 'if' → logprob: -6.981996536254883
    8. ' pa' → logprob: -6.981996536254883
    9. 'sa' → logprob: -6.981996536254883
    10. ' if' → logprob: -7.481996536254883

Token 355: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0792188048362732
    2. ' =' → logprob: -2.954218864440918
    3. '=a' → logprob: -5.079218864440918
    4. '=B' → logprob: -5.454218864440918
    5. '=s' → logprob: -5.704218864440918
    6. '=f' → logprob: -5.954218864440918
    7. 'f' → logprob: -6.079218864440918
    8. 'a' → logprob: -6.454218864440918
    9. ',b' → logprob: -7.579218864440918
    10. '=A' → logprob: -7.579218864440918

Token 356: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -5.538490950129926e-05
    2. ' sl' → logprob: -9.875055313110352
    3. 's' → logprob: -13.125055313110352
    4. 'sf' → logprob: -14.250055313110352
    5. 'self' → logprob: -14.750055313110352
    6. 'uf' → logprob: -14.875055313110352
    7. ' ' → logprob: -15.875055313110352
    8. 'Slf' → logprob: -16.50005531311035
    9. 'A' → logprob: -16.75005531311035
    10. 'slu' → logprob: -17.12505531311035

Token 357: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1875571544806007e-05
    2. 'p' → logprob: -11.750011444091797
    3. '.f' → logprob: -12.750011444091797
    4. '.p' → logprob: -14.500011444091797
    5. 'fl' → logprob: -16.625011444091797
    6. 'sf' → logprob: -16.750011444091797
    7. 'sl' → logprob: -17.625011444091797
    8. 'F' → logprob: -17.625011444091797
    9. '
' → logprob: -17.625011444091797
    10. 'fp' → logprob: -17.750011444091797

Token 358: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0004944138927385211
    2. '.u' → logprob: -8.000494003295898
    3. '.r' → logprob: -9.000494003295898
    4. 'f' → logprob: -10.375494003295898
    5. 'u' → logprob: -13.125494003295898
    6. ' .' → logprob: -14.250494003295898
    7. 'rst' → logprob: -14.500494003295898
    8. '.' → logprob: -15.125494003295898
    9. ' f' → logprob: -15.375494003295898
    10. '.uf' → logprob: -15.625494003295898

Token 359: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011251768097281456
    2. 'a' → logprob: -4.761251926422119
    3. '(s' → logprob: -6.011251926422119
    4. ' a' → logprob: -8.886251449584961
    5. 'A' → logprob: -11.136251449584961
    6. 's' → logprob: -11.761251449584961
    7. 'sl' → logprob: -11.761251449584961
    8. ',a' → logprob: -12.386251449584961
    9. '(' → logprob: -12.886251449584961
    10. '(sl' → logprob: -12.886251449584961

Token 360: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13918139040470123
    2. ');' → logprob: -2.63918137550354
    3. ')' → logprob: -2.88918137550354
    4. ')b' → logprob: -6.264181613922119
    5. ')
' → logprob: -7.014181613922119
    6. ' )
' → logprob: -10.639181137084961
    7. ' ' → logprob: -10.889181137084961
    8. '),' → logprob: -11.139181137084961
    9. ';b' → logprob: -12.014181137084961
    10. ' );' → logprob: -12.139181137084961

Token 361: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05024084821343422
    2. ' B' → logprob: -3.0502407550811768
    3. ' ' → logprob: -6.425240993499756
    4. 'b' → logprob: -10.675240516662598
    5. '  
' → logprob: -12.925240516662598
    6. ' b' → logprob: -13.425240516662598
    7. ' 
' → logprob: -13.675240516662598
    8. '  ' → logprob: -13.925240516662598
    9. 's' → logprob: -14.175240516662598
    10. ' if' → logprob: -14.675240516662598

Token 362: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033226627856492996
    2. '(s' → logprob: -3.658226728439331
    3. ' =' → logprob: -5.283226490020752
    4. '=s' → logprob: -6.533226490020752
    5. '=B' → logprob: -8.65822696685791
    6. '=f' → logprob: -9.53322696685791
    7. '=
' → logprob: -10.53322696685791
    8. '<|end|>' → logprob: -10.53322696685791
    9. ' ' → logprob: -10.78322696685791
    10. '=b' → logprob: -11.40822696685791

Token 363: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -15.125000953674316
    3. ' sl' → logprob: -15.125000953674316
    4. 'sf' → logprob: -16.375
    5. 'sk' → logprob: -18.125
    6. '(s' → logprob: -18.25
    7. 'spl' → logprob: -19.0
    8. 'sv' → logprob: -19.375
    9. '(sl' → logprob: -19.625
    10. ' ' → logprob: -19.875

Token 364: 'f' (ID: 69)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.06996777653694153
    2. 'f' → logprob: -2.694967746734619
    3. '.b' → logprob: -11.569968223571777
    4. 'p' → logprob: -11.819968223571777
    5. 'u' → logprob: -12.819968223571777
    6. '.r' → logprob: -13.319968223571777
    7. '.s' → logprob: -13.319968223571777
    8. 'r' → logprob: -13.819968223571777
    9. '.u' → logprob: -13.819968223571777
    10. '(f' → logprob: -14.069968223571777

Token 365: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -1.3782830137643032e-05
    2. 'f' → logprob: -11.87501335144043
    3. '(f' → logprob: -12.50001335144043
    4. '.u' → logprob: -14.12501335144043
    5. 'u' → logprob: -14.50001335144043
    6. ' .' → logprob: -14.87501335144043
    7. '	f' → logprob: -14.87501335144043
    8. ' f' → logprob: -15.00001335144043
    9. ' ' → logprob: -15.25001335144043
    10. '.' → logprob: -15.87501335144043

Token 366: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06996844708919525
    2. 'b' → logprob: -2.6949684619903564
    3. ' b' → logprob: -11.694968223571777
    4. 'sl' → logprob: -12.319968223571777
    5. '	b' → logprob: -12.569968223571777
    6. '[b' → logprob: -12.694968223571777
    7. ' ' → logprob: -12.694968223571777
    8. ')b' → logprob: -13.444968223571777
    9. ' (' → logprob: -13.819968223571777
    10. '(s' → logprob: -13.819968223571777

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7417502999305725
    2. ')
' → logprob: -0.8667502999305725
    3. ');' → logprob: -2.3667502403259277
    4. ' ' → logprob: -5.991750240325928
    5. ';if' → logprob: -5.991750240325928
    6. ';' → logprob: -6.241750240325928
    7. ' if' → logprob: -6.991750240325928
    8. 'if' → logprob: -7.741750240325928
    9. 'A' → logprob: -7.991750240325928
    10. '
' → logprob: -8.116750717163086

Token 368: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7974622249603271
    2. '<|end|>' → logprob: -1.2974622249603271
    3. ' ' → logprob: -1.5474622249603271
    4. '
' → logprob: -3.672462224960327
    5. ' 
' → logprob: -3.797462224960327
    6. '  
' → logprob: -4.547462463378906
    7. ';if' → logprob: -5.922462463378906
    8. '<|end|>' → logprob: -7.547462463378906
    9. '[' → logprob: -7.672462463378906
    10. ';' → logprob: -8.172462463378906

Token 369: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0004963174578733742
    2. 'if' → logprob: -7.6254963874816895
    3. '```' → logprob: -12.625495910644531
    4. ' ' → logprob: -13.000495910644531
    5. ' return' → logprob: -13.500495910644531
    6. '
' → logprob: -15.500495910644531
    7. ';if' → logprob: -15.500495910644531
    8. '	if' → logprob: -15.500495910644531
    9. '<|end|>' → logprob: -15.625495910644531
    10. 'If' → logprob: -15.875495910644531

Token 370: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0619683600962162
    2. ' A' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.936968803405762
    4. '	A' → logprob: -15.811968803405762
    5. '>A' → logprob: -16.686967849731445
    6. 'a' → logprob: -16.811967849731445
    7. ' ' → logprob: -17.311967849731445
    8. '(A' → logprob: -17.936967849731445
    9. '
' → logprob: -18.061967849731445
    10. '=A' → logprob: -18.186967849731445

Token 371: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.010136863216757774
    2. ' ==' → logprob: -5.01013708114624
    3. '!=' → logprob: -5.76013708114624
    4. '=' → logprob: -8.760136604309082
    5. '==
' → logprob: -10.135136604309082
    6. ' !=' → logprob: -10.260136604309082
    7. '<|end|>' → logprob: -11.010136604309082
    8. ']==' → logprob: -12.135136604309082
    9. ' ' → logprob: -12.510136604309082
    10. '==-' → logprob: -12.635136604309082

Token 372: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023095356300473213
    2. ' B' → logprob: -8.37523078918457
    3. 'A' → logprob: -15.37523078918457
    4. 'a' → logprob: -16.62523078918457
    5. ' ' → logprob: -17.00023078918457
    6. 'b' → logprob: -17.37523078918457
    7. 'sl' → logprob: -19.25023078918457
    8. '>B' → logprob: -19.62523078918457
    9. '```' → logprob: -19.62523078918457
    10. '=B' → logprob: -19.87523078918457

Token 373: ':return' (ID: 188357)
  Prédit: ':return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.3910837173461914
    2. ':' → logprob: -1.1410837173461914
    3. ':
' → logprob: -5.516083717346191
    4. ' :' → logprob: -8.766083717346191
    5. ')return' → logprob: -11.766083717346191
    6. ' ' → logprob: -12.141083717346191
    7. ' return' → logprob: -12.141083717346191
    8. 'return' → logprob: -12.391083717346191
    9. '{return' → logprob: -13.516083717346191
    10. '  ' → logprob: -14.766083717346191

Token 374: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.14595335721969604
    2. '0' → logprob: -2.145953416824341
    3. 'None' → logprob: -4.770953178405762
    4. ' False' → logprob: -5.020953178405762
    5. ' ' → logprob: -6.020953178405762
    6. '
' → logprob: -6.895953178405762
    7. ' None' → logprob: -8.145953178405762
    8. 'sl' → logprob: -10.645953178405762
    9. ' 
' → logprob: -12.145953178405762
    10. '(False' → logprob: -12.145953178405762

Token 375: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03862258419394493
    2. ' ' → logprob: -3.4136226177215576
    3. ' else' → logprob: -6.0386223793029785
    4. 'if' → logprob: -6.4136223793029785
    5. ' sl' → logprob: -8.163622856140137
    6. ' elif' → logprob: -8.163622856140137
    7. '
' → logprob: -9.413622856140137
    8. '<|end|>' → logprob: -9.788622856140137
    9. 'sl' → logprob: -10.038622856140137
    10. '  
' → logprob: -10.163622856140137

Token 376: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30311715602874756
    2. 'if' → logprob: -1.4281171560287476
    3. 'sl' → logprob: -3.928117275238037
    4. ' ' → logprob: -6.303117275238037
    5. ' sl' → logprob: -8.678116798400879
    6. '```' → logprob: -10.428116798400879
    7. '[' → logprob: -12.053116798400879
    8. '  ' → logprob: -13.303116798400879
    9. '``' → logprob: -13.428116798400879
    10. '
' → logprob: -13.803116798400879

Token 377: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.0028071331325918436
    2. ' sl' → logprob: -5.877807140350342
    3. ' ' → logprob: -13.252806663513184
    4. '
' → logprob: -15.377806663513184
    5. '	sl' → logprob: -15.502806663513184
    6. '(sl' → logprob: -17.0028076171875
    7. 's' → logprob: -17.6278076171875
    8. '  ' → logprob: -17.6278076171875
    9. 'len' → logprob: -17.6278076171875
    10. 'sf' → logprob: -18.0653076171875

Token 378: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.153795766294934e-06
    2. 'sf' → logprob: -12.125005722045898
    3. 'sl' → logprob: -14.625005722045898
    4. 'p' → logprob: -16.3750057220459
    5. ' ' → logprob: -17.1250057220459
    6. 'lf' → logprob: -17.1250057220459
    7. 'pf' → logprob: -17.1250057220459
    8. ' sl' → logprob: -17.8750057220459
    9. 'fl' → logprob: -18.1250057220459
    10. 'ф' → logprob: -18.8750057220459

Token 379: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -8.180258191714529e-06
    2. 'r' → logprob: -11.750008583068848
    3. '.' → logprob: -16.25000762939453
    4. ' r' → logprob: -16.37500762939453
    5. '	r' → logprob: -16.87500762939453
    6. ' .' → logprob: -17.50000762939453
    7. ' ' → logprob: -18.62500762939453
    8. '
' → logprob: -18.62500762939453
    9. '.c' → logprob: -19.75000762939453
    10. '_r' → logprob: -20.12500762939453

Token 380: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0006460758158937097
    2. 'A' → logprob: -7.500646114349365
    3. '[a' → logprob: -9.500645637512207
    4. ' A' → logprob: -11.125645637512207
    5. '[' → logprob: -14.000645637512207
    6. '[B' → logprob: -14.000645637512207
    7. '>A' → logprob: -15.125645637512207
    8. '	A' → logprob: -15.250645637512207
    9. '<A' → logprob: -15.250645637512207
    10. 'a' → logprob: -15.625645637512207

Token 381: ']<' (ID: 80424)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.9295331239700317
    2. ']<' → logprob: -1.3045331239700317
    3. '<A' → logprob: -1.6795331239700317
    4. '[' → logprob: -2.429533004760742
    5. '<' → logprob: -3.429533004760742
    6. ' <' → logprob: -4.054533004760742
    7. '[a' → logprob: -5.804533004760742
    8. ']' → logprob: -6.179533004760742
    9. 'A' → logprob: -6.679533004760742
    10. '<a' → logprob: -7.179533004760742

Token 382: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -1.9027791495318525e-05
    2. ' sl' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.250019073486328
    4. 's' → logprob: -16.250019073486328
    5. '
' → logprob: -16.500019073486328
    6. '  ' → logprob: -16.750019073486328
    7. '[' → logprob: -17.250019073486328
    8. '	sl' → logprob: -17.375019073486328
    9. 'slu' → logprob: -17.500019073486328
    10. '=' → logprob: -17.500019073486328

Token 383: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00040660108788870275
    2. 'sl' → logprob: -8.375406265258789
    3. '[' → logprob: -8.750406265258789
    4. '[s' → logprob: -11.500406265258789
    5. ' sl' → logprob: -12.750406265258789
    6. '[f' → logprob: -14.375406265258789
    7. 'r' → logprob: -14.500406265258789
    8. 'sf' → logprob: -15.000406265258789
    9. ' ' → logprob: -15.000406265258789
    10. '```' → logprob: -15.000406265258789

Token 384: '.r' (ID: 2951)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.42802396416664124
    2. 'r' → logprob: -1.3030239343643188
    3. '[B' → logprob: -2.6780240535736084
    4. '.r' → logprob: -5.678023815155029
    5. '-r' → logprob: -6.928023815155029
    6. '[R' → logprob: -7.303023815155029
    7. '[a' → logprob: -7.428023815155029
    8. '	r' → logprob: -7.678023815155029
    9. '[s' → logprob: -7.803023815155029
    10. '[A' → logprob: -7.928023815155029

Token 385: '[B' (ID: 95385)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0027881229761987925
    2. 'a' → logprob: -6.127788066864014
    3. 'A' → logprob: -7.627788066864014
    4. '[a' → logprob: -9.752788543701172
    5. ' B' → logprob: -10.502788543701172
    6. '[B' → logprob: -10.502788543701172
    7. 'b' → logprob: -13.502788543701172
    8. '[b' → logprob: -15.002788543701172
    9. ' ' → logprob: -15.502788543701172
    10. ' a' → logprob: -15.502788543701172

Token 386: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019849101081490517
    2. ']:
' → logprob: -4.3948493003845215
    3. ':' → logprob: -5.1448493003845215
    4. ':
' → logprob: -7.0198493003845215
    5. ' :' → logprob: -8.519848823547363
    6. '>:' → logprob: -8.769848823547363
    7. ' ]' → logprob: -9.644848823547363
    8. ']' → logprob: -10.144848823547363
    9. ' ):' → logprob: -10.644848823547363
    10. '):' → logprob: -11.144848823547363

Token 387: 'sl' (ID: 4500)
  Prédit: ' sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sl' → logprob: -0.9893079400062561
    2. ' A' → logprob: -1.4893078804016113
    3. 'A' → logprob: -1.6143078804016113
    4. 'sl' → logprob: -1.6143078804016113
    5. ' ' → logprob: -5.489307880401611
    6. ' a' → logprob: -9.11430835723877
    7. 'a' → logprob: -9.11430835723877
    8. 'Sl' → logprob: -9.23930835723877
    9. 's' → logprob: -9.73930835723877
    10. '	sl' → logprob: -11.48930835723877

Token 388: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1637164789135568e-05
    2. '.sl' → logprob: -12.000011444091797
    3. 'sl' → logprob: -13.375011444091797
    4. 'p' → logprob: -13.500011444091797
    5. 'r' → logprob: -13.750011444091797
    6. '.f' → logprob: -14.375011444091797
    7. '.r' → logprob: -15.125011444091797
    8. ' sl' → logprob: -15.500011444091797
    9. '
' → logprob: -15.750011444091797
    10. '.p' → logprob: -16.500011444091797

Token 389: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.03992603346705437
    2. 'p' → logprob: -3.289926052093506
    3. ' p' → logprob: -6.539926052093506
    4. 'u' → logprob: -9.164925575256348
    5. '.u' → logprob: -9.289925575256348
    6. 'r' → logprob: -9.789925575256348
    7. ' ' → logprob: -9.914925575256348
    8. 'A' → logprob: -9.914925575256348
    9. '.r' → logprob: -10.414925575256348
    10. '_p' → logprob: -10.789925575256348

Token 390: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00013500562636181712
    2. 'A' → logprob: -9.75013542175293
    3. '[B' → logprob: -9.87513542175293
    4. '=A' → logprob: -11.50013542175293
    5. '[a' → logprob: -11.62513542175293
    6. '[' → logprob: -12.87513542175293
    7. '(A' → logprob: -13.37513542175293
    8. ',A' → logprob: -13.87513542175293
    9. ' A' → logprob: -14.75013542175293
    10. '<A' → logprob: -15.75013542175293

Token 391: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3562728464603424
    2. '=B' → logprob: -1.60627281665802
    3. '=b' → logprob: -2.3562729358673096
    4. '=A' → logprob: -6.3562726974487305
    5. ' =' → logprob: -6.4812726974487305
    6. ']=' → logprob: -7.1062726974487305
    7. '=a' → logprob: -8.85627269744873
    8. '=s' → logprob: -10.98127269744873
    9. ']' → logprob: -11.85627269744873
    10. ')=' → logprob: -11.85627269744873

Token 392: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -6.2729995988775045e-06
    2. ' B' → logprob: -12.000006675720215
    3. 'b' → logprob: -18.7500057220459
    4. '	B' → logprob: -19.6250057220459
    5. '>B' → logprob: -20.2500057220459
    6. ' ' → logprob: -20.6250057220459
    7. '=B' → logprob: -21.8750057220459
    8. '<B' → logprob: -22.6250057220459
    9. '[' → logprob: -23.6250057220459
    10. '  ' → logprob: -23.6250057220459

Token 393: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1397172212600708
    2. 'else' → logprob: -1.1397172212600708
    3. ';' → logprob: -1.3897172212600708
    4. ' else' → logprob: -2.2647171020507812
    5. 'sl' → logprob: -6.264717102050781
    6. ' ' → logprob: -6.264717102050781
    7. '<|end|>' → logprob: -6.639717102050781
    8. '  
' → logprob: -7.639717102050781
    9. ' 
' → logprob: -7.764717102050781
    10. 'elif' → logprob: -8.014717102050781

Token 394: ' ' (ID: 220)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.0266687870025635
    2. 'else' → logprob: -1.1516687870025635
    3. ' ' → logprob: -1.7766687870025635
    4. ';' → logprob: -2.1516687870025635
    5. 'elif' → logprob: -3.6516687870025635
    6. ' elif' → logprob: -4.776668548583984
    7. '<|end|>' → logprob: -6.026668548583984
    8. ';s' → logprob: -7.151668548583984
    9. '
' → logprob: -7.526668548583984
    10. 'sl' → logprob: -8.026668548583984

Token 395: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33056125044822693
    2. ' else' → logprob: -1.3305612802505493
    3. ' ' → logprob: -4.08056116104126
    4. '<|end|>' → logprob: -9.330561637878418
    5. '  ' → logprob: -9.580561637878418
    6. 'elif' → logprob: -9.955561637878418
    7. '	else' → logprob: -10.955561637878418
    8. ';' → logprob: -11.580561637878418
    9. ' elif' → logprob: -12.205561637878418
    10. '  
' → logprob: -12.580561637878418

Token 396: ':
' (ID: 734)
  Prédit: ' sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sl' → logprob: -0.137526273727417
    2. 'sl' → logprob: -2.762526273727417
    3. ':' → logprob: -2.887526273727417
    4. '	sl' → logprob: -5.887526512145996
    5. '(sl' → logprob: -5.887526512145996
    6. ':
' → logprob: -6.012526512145996
    7. '  ' → logprob: -7.637526512145996
    8. ' ' → logprob: -8.137526512145996
    9. ' Sl' → logprob: -8.262526512145996
    10. 'Sl' → logprob: -8.262526512145996

Token 397: '  ' (ID: 256)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.11489682644605637
    2. ' sl' → logprob: -2.239896774291992
    3. '(sl' → logprob: -7.489896774291992
    4. '	sl' → logprob: -7.739896774291992
    5. '{
' → logprob: -8.114896774291992
    6. ':
' → logprob: -8.364896774291992
    7. ':' → logprob: -8.864896774291992
    8. '{' → logprob: -9.114896774291992
    9. ' ' → logprob: -9.239896774291992
    10. 's' → logprob: -9.614896774291992

Token 398: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' (adapté à ' sl') → logprob: -1.9146995327901095e-05
    2. '  ' → logprob: -11.625019073486328
    3. ' sl' → logprob: -11.625019073486328
    4. ' ' → logprob: -15.125019073486328
    5. '	sl' → logprob: -15.250019073486328
    6. '   ' → logprob: -15.625019073486328
    7. 'slu' → logprob: -15.875019073486328
    8. '
' → logprob: -16.000019073486328
    9. '    ' → logprob: -16.125019073486328
    10. '{
' → logprob: -16.250019073486328

Token 399: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '_f' → logprob: -18.75
    4. '.f' → logprob: -19.625
    5. 'ф' → logprob: -20.5
    6. '[f' → logprob: -20.625
    7. 'p' → logprob: -21.25
    8. ' f' → logprob: -21.75
    9. 'r' → logprob: -21.75
    10. '	f' → logprob: -21.875

Token 400: '.p' (ID: 1201)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.011264383792877197
    2. '.p' → logprob: -4.511264324188232
    3. 'r' → logprob: -8.76126480102539
    4. ' .' → logprob: -10.26126480102539
    5. 'p' → logprob: -11.01126480102539
    6. '```' → logprob: -12.88626480102539
    7. '
' → logprob: -13.13626480102539
    8. '.' → logprob: -14.38626480102539
    9. '	r' → logprob: -14.51126480102539
    10. 'def' → logprob: -14.63626480102539

Token 401: '[B' (ID: 95385)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.10047483444213867
    2. '[B' → logprob: -2.3504748344421387
    3. '[' → logprob: -8.600475311279297
    4. 'A' → logprob: -9.975475311279297
    5. '[a' → logprob: -11.600475311279297
    6. '(A' → logprob: -11.850475311279297
    7. 'B' → logprob: -12.100475311279297
    8. '(B' → logprob: -12.100475311279297
    9. '  ' → logprob: -12.225475311279297
    10. '```' → logprob: -12.850475311279297

Token 402: ']=' (ID: 9539)
  Prédit: '=A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=A' → logprob: -0.052000150084495544
    2. ']=' → logprob: -3.302000045776367
    3. '=' → logprob: -4.302000045776367
    4. '=a' → logprob: -8.427000045776367
    5. ')=' → logprob: -9.427000045776367
    6. ' =' → logprob: -11.302000045776367
    7. ']' → logprob: -12.552000045776367
    8. '[A' → logprob: -12.927000045776367
    9. '}=' → logprob: -14.552000045776367
    10. '=
' → logprob: -14.677000045776367

Token 403: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.306760805164231e-05
    2. ' A' → logprob: -11.25001335144043
    3. ' ' → logprob: -18.87501335144043
    4. '	A' → logprob: -19.37501335144043
    5. '  ' → logprob: -20.62501335144043
    6. '>A' → logprob: -21.37501335144043
    7. '   ' → logprob: -22.50001335144043
    8. 'a' → logprob: -22.87501335144043
    9. '=A' → logprob: -23.12501335144043
    10. '<|end|>' → logprob: -23.12501335144043

Token 404: '
' (ID: 198)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.11845162510871887
    2. 'if' → logprob: -2.2434515953063965
    3. ' ' → logprob: -5.7434515953063965
    4. ' if' → logprob: -6.1184515953063965
    5. '```' → logprob: -9.493452072143555
    6. 'sl' → logprob: -9.743452072143555
    7. '   ' → logprob: -10.243452072143555
    8. ';if' → logprob: -10.868452072143555
    9. ';' → logprob: -12.243452072143555
    10. ',' → logprob: -12.368452072143555

Token 405: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8095612525939941
    2. '  ' → logprob: -1.4345612525939941
    3. ' if' → logprob: -1.6845612525939941
    4. ' ' → logprob: -2.434561252593994
    5. '```' → logprob: -3.184561252593994
    6. ';if' → logprob: -6.809561252593994
    7. '   ' → logprob: -8.184560775756836
    8. '<|end|>' → logprob: -8.684560775756836
    9. '	if' → logprob: -9.309560775756836
    10. '  
' → logprob: -9.309560775756836

Token 406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00031890018726699054
    2. ' if' → logprob: -8.37531852722168
    3. '  ' → logprob: -9.50031852722168
    4. '
' → logprob: -11.37531852722168
    5. ';if' → logprob: -14.12531852722168
    6. ' ' → logprob: -14.37531852722168
    7. '```' → logprob: -15.12531852722168
    8. '   ' → logprob: -15.50031852722168
    9. '	if' → logprob: -16.25031852722168
    10. 'sl' → logprob: -17.25031852722168

Token 407: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -5.836499985889532e-05
    2. ' sl' → logprob: -9.7500581741333
    3. '	sl' → logprob: -18.125059127807617
    4. '(sl' → logprob: -18.375059127807617
    5. '
' → logprob: -21.625059127807617
    6. '_sl' → logprob: -21.875059127807617
    7. '.sl' → logprob: -21.875059127807617
    8. ' ' → logprob: -22.750059127807617
    9. 's' → logprob: -23.125059127807617
    10. 'Sl' → logprob: -23.125059127807617

Token 408: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. ' sl' → logprob: -17.75
    4. '(sl' → logprob: -18.375
    5. 'F' → logprob: -19.0
    6. '.sl' → logprob: -19.25
    7. 'r' → logprob: -19.25
    8. 'sl' → logprob: -20.375
    9. 'fl' → logprob: -20.75
    10. 'p' → logprob: -21.125

Token 409: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -6.392202976712724e-06
    2. '.sl' → logprob: -12.625006675720215
    3. '.' → logprob: -13.625006675720215
    4. '.s' → logprob: -14.125006675720215
    5. 'r' → logprob: -15.125006675720215
    6. '
' → logprob: -15.250006675720215
    7. '[' → logprob: -16.1250057220459
    8. '	r' → logprob: -16.2500057220459
    9. ' .' → logprob: -16.5000057220459
    10. '[r' → logprob: -16.5000057220459

Token 410: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -3.292907877039397e-06
    2. 'A' → logprob: -12.87500286102295
    3. '[' → logprob: -14.37500286102295
    4. '[a' → logprob: -16.000003814697266
    5. 'sl' → logprob: -18.750003814697266
    6. ' A' → logprob: -19.125003814697266
    7. '[s' → logprob: -19.250003814697266
    8. '(A' → logprob: -19.375003814697266
    9. '=A' → logprob: -19.875003814697266
    10. '	A' → logprob: -20.125003814697266

Token 411: ']==' (ID: 34128)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.000351670227246359
    2. '==' → logprob: -8.000351905822754
    3. '[a' → logprob: -11.125351905822754
    4. 'A' → logprob: -14.000351905822754
    5. ' ==' → logprob: -15.250351905822754
    6. '[' → logprob: -15.750351905822754
    7. ']==' → logprob: -16.375350952148438
    8. '[B' → logprob: -16.875350952148438
    9. '=A' → logprob: -17.000350952148438
    10. '```' → logprob: -17.125350952148438

Token 412: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -3.128163257315464e-07
    2. ' sl' → logprob: -15.5
    3. '	sl' → logprob: -18.5
    4. 's' → logprob: -18.75
    5. '
' → logprob: -19.375
    6. '[' → logprob: -20.25
    7. 'B' → logprob: -20.375
    8. 'сл' → logprob: -20.5
    9. 'sk' → logprob: -20.75
    10. ' ' → logprob: -20.875

Token 413: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01616891473531723
    2. 'r' → logprob: -4.14116907119751
    3. '[r' → logprob: -9.016168594360352
    4. '[' → logprob: -12.141168594360352
    5. '.r' → logprob: -12.766168594360352
    6. 'rf' → logprob: -13.266168594360352
    7. ' r' → logprob: -13.891168594360352
    8. '[f' → logprob: -14.141168594360352
    9. '[A' → logprob: -14.891168594360352
    10. '[s' → logprob: -15.266168594360352

Token 414: '.r' (ID: 2951)
  Prédit: '[B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.0027476961258798838
    2. 'r' → logprob: -6.002747535705566
    3. '[r' → logprob: -8.877747535705566
    4. '[R' → logprob: -9.377747535705566
    5. '[b' → logprob: -11.002747535705566
    6. '[' → logprob: -11.627747535705566
    7. '   ' → logprob: -12.127747535705566
    8. '[A' → logprob: -12.377747535705566
    9. '_r' → logprob: -13.127747535705566
    10. '```' → logprob: -13.377747535705566

Token 415: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.008638797327876091
    2. 'B' → logprob: -4.758638858795166
    3. '(B' → logprob: -10.883638381958008
    4. '	B' → logprob: -13.508638381958008
    5. '[b' → logprob: -13.633638381958008
    6. '```' → logprob: -13.883638381958008
    7. '   ' → logprob: -14.133638381958008
    8. ' B' → logprob: -14.508638381958008
    9. '<B' → logprob: -15.258638381958008
    10. '  ' → logprob: -16.008638381958008

Token 416: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09112517535686493
    2. ']:' → logprob: -2.466125249862671
    3. ':
' → logprob: -6.966125011444092
    4. ':return' → logprob: -7.841125011444092
    5. ':def' → logprob: -8.59112548828125
    6. ']:
' → logprob: -8.96612548828125
    7. ']' → logprob: -9.09112548828125
    8. '):' → logprob: -9.34112548828125
    9. ':s' → logprob: -9.46612548828125
    10. ':ss' → logprob: -10.21612548828125

Token 417: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.06196970492601395
    2. ' sl' → logprob: -2.811969757080078
    3. '	sl' → logprob: -13.436969757080078
    4. ' ' → logprob: -15.436969757080078
    5. '  ' → logprob: -15.936969757080078
    6. '_sl' → logprob: -16.436969757080078
    7. '   ' → logprob: -16.936969757080078
    8. '
' → logprob: -16.936969757080078
    9. '(sl' → logprob: -18.061969757080078
    10. '.sl' → logprob: -18.686969757080078

Token 418: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0280383548888494e-06
    2. 'r' → logprob: -14.000000953674316
    3. '.f' → logprob: -17.500001907348633
    4. '.sl' → logprob: -17.625001907348633
    5. ' sl' → logprob: -17.750001907348633
    6. '[' → logprob: -17.750001907348633
    7. 'sl' → logprob: -17.875001907348633
    8. 'fl' → logprob: -17.875001907348633
    9. '
' → logprob: -19.375001907348633
    10. 'ф' → logprob: -19.625001907348633

Token 419: '.r' (ID: 2951)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.01817581057548523
    2. 'r' → logprob: -4.0181756019592285
    3. '[a' → logprob: -11.393176078796387
    4. 'A' → logprob: -12.143176078796387
    5. '[R' → logprob: -13.018176078796387
    6. 'a' → logprob: -13.393176078796387
    7. '[r' → logprob: -13.768176078796387
    8. 's' → logprob: -13.768176078796387
    9. '```' → logprob: -13.893176078796387
    10. '[S' → logprob: -14.143176078796387

Token 420: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -4.320199877838604e-07
    2. 'A' → logprob: -15.625
    3. '[a' → logprob: -16.0
    4. '
' → logprob: -17.125
    5. '[
' → logprob: -17.75
    6. '	A' → logprob: -18.25
    7. '[I' → logprob: -19.25
    8. '   ' → logprob: -19.75
    9. ' [' → logprob: -19.75
    10. '(A' → logprob: -19.75

Token 421: ']+=' (ID: 123635)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005674490821547806
    2. ']+=' → logprob: -7.500567436218262
    3. ' +=' → logprob: -11.250567436218262
    4. '[' → logprob: -13.750567436218262
    5. '+='' → logprob: -16.125568389892578
    6. '+=(' → logprob: -16.250568389892578
    7. '+' → logprob: -16.375568389892578
    8. '```' → logprob: -16.875568389892578
    9. '+="' → logprob: -17.000568389892578
    10. '[int' → logprob: -18.500568389892578

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '+' → logprob: -21.250001907348633
    4. '```' → logprob: -22.625001907348633
    5. '１' → logprob: -22.750001907348633
    6. '
' → logprob: -22.875001907348633
    7. '   ' → logprob: -22.875001907348633
    8. '  ' → logprob: -23.625001907348633
    9. '۱' → logprob: -24.250001907348633
    10. '[' → logprob: -24.625001907348633

Token 423: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 424: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' sl' (ID: 1925)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43586304783821106
    2. ' for' → logprob: -1.6858630180358887
    3. '<|end|>' → logprob: -2.3108630180358887
    4. 's' → logprob: -4.185863018035889
    5. 'while' → logprob: -4.435863018035889
    6. 'print' → logprob: -4.935863018035889
    7. 'n' → logprob: -5.185863018035889
    8. 'w' → logprob: -5.685863018035889
    9. ' while' → logprob: -6.060863018035889
    10. 'ans' → logprob: -6.310863018035889

Token 426: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.512236498361744e-07
    2. 'fl' → logprob: -15.500000953674316
    3. 'p' → logprob: -15.875000953674316
    4. '.f' → logprob: -16.0
    5. 'ф' → logprob: -17.875
    6. 'r' → logprob: -18.125
    7. '[' → logprob: -18.875
    8. 'F' → logprob: -18.875
    9. '=' → logprob: -19.125
    10. '_f' → logprob: -19.25

Token 427: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -1.9862216504407115e-05
    2. '.' → logprob: -11.125020027160645
    3. ' .' → logprob: -12.500020027160645
    4. '.C' → logprob: -14.125020027160645
    5. 'c' → logprob: -15.250020027160645
    6. '.r' → logprob: -16.625019073486328
    7. '.q' → logprob: -16.750019073486328
    8. '```' → logprob: -17.125019073486328
    9. 'C' → logprob: -17.375019073486328
    10. '
' → logprob: -17.375019073486328

Token 428: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01453319750726223
    2. ' +=' → logprob: -4.264533042907715
    3. '+' → logprob: -8.014533042907715
    4. '=' → logprob: -10.264533042907715
    5. '+='' → logprob: -13.889533042907715
    6. '-=' → logprob: -14.264533042907715
    7. '+=(' → logprob: -14.264533042907715
    8. '+="' → logprob: -14.639533042907715
    9. ']+=' → logprob: -14.764533042907715
    10. '<|end|>' → logprob: -15.139533042907715

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001048646867275238
    2. '-' → logprob: -6.876048564910889
    3. ' ' → logprob: -11.126049041748047
    4. ' -' → logprob: -13.751049041748047
    5. '+' → logprob: -18.251049041748047
    6. '```' → logprob: -18.501049041748047
    7. '<|end|>' → logprob: -18.876049041748047
    8. '0' → logprob: -19.751049041748047
    9. '−' → logprob: -20.126049041748047
    10. '–' → logprob: -20.501049041748047

Token 430: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2839556038379669
    2. 'for' → logprob: -2.2839555740356445
    3. ' for' → logprob: -2.7839555740356445
    4. 'w' → logprob: -4.4089555740356445
    5. 'n' → logprob: -4.6589555740356445
    6. 's' → logprob: -4.6589555740356445
    7. 'i' → logprob: -4.9089555740356445
    8. 'res' → logprob: -4.9089555740356445
    9. 'ans' → logprob: -5.1589555740356445
    10. 'x' → logprob: -5.4089555740356445

Token 431: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6786447763442993
    2. 'r' → logprob: -1.0536447763442993
    3. 'i' → logprob: -3.5536446571350098
    4. ' for' → logprob: -3.5536446571350098
    5. 'x' → logprob: -4.30364465713501
    6. 'res' → logprob: -4.42864465713501
    7. 'ans' → logprob: -4.42864465713501
    8. 'w' → logprob: -4.80364465713501
    9. 's' → logprob: -5.05364465713501
    10. 'm' → logprob: -5.55364465713501

Token 432: ' cnt' (ID: 27340)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7406507730484009
    2. 'count' → logprob: -1.3656507730484009
    3. 'g' → logprob: -2.7406506538391113
    4. 'size' → logprob: -2.9906506538391113
    5. 's' → logprob: -3.8656506538391113
    6. 'q' → logprob: -3.9906506538391113
    7. 'c' → logprob: -4.115650653839111
    8. 'sz' → logprob: -4.240650653839111
    9. 'get' → logprob: -4.490650653839111
    10. 'm' → logprob: -4.740650653839111

Token 433: '(x' (ID: 4061)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.15126390755176544
    2. '(self' → logprob: -2.526263952255249
    3. '(' → logprob: -2.901263952255249
    4. '(sl' → logprob: -5.40126371383667
    5. '()' → logprob: -7.65126371383667
    6. '=' → logprob: -8.526264190673828
    7. 'self' → logprob: -9.651264190673828
    8. '():' → logprob: -10.151264190673828
    9. ' (' → logprob: -10.401264190673828
    10. '()(' → logprob: -10.526264190673828

Token 434: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019436011090874672
    2. '):
' → logprob: -4.769435882568359
    3. ')' → logprob: -5.394435882568359
    4. ' ):' → logprob: -5.644435882568359
    5. ',' → logprob: -6.769435882568359
    6. '(x' → logprob: -7.644435882568359
    7. '()' → logprob: -8.14443588256836
    8. ',x' → logprob: -8.51943588256836
    9. '():' → logprob: -8.76943588256836
    10. '(sl' → logprob: -9.64443588256836

Token 435: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0019299437990412116
    2. 'return' → logprob: -7.126929759979248
    3. ' pass' → logprob: -7.626929759979248
    4. '   ' → logprob: -8.126930236816406
    5. '	return' → logprob: -8.501930236816406
    6. ' ' → logprob: -9.001930236816406
    7. ' x' → logprob: -11.751930236816406
    8. ' def' → logprob: -13.126930236816406
    9. ' print' → logprob: -13.751930236816406
    10. 'pass' → logprob: -14.001930236816406

Token 436: ' len' (ID: 4631)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5937728881835938
    2. ' x' → logprob: -0.8437728881835938
    3. '0' → logprob: -4.718772888183594
    4. 'len' → logprob: -5.093772888183594
    5. ' len' → logprob: -6.468772888183594
    6. ' ' → logprob: -7.218772888183594
    7. '1' → logprob: -9.343772888183594
    8. 'N' → logprob: -9.468772888183594
    9. ' N' → logprob: -9.593772888183594
    10. '(x' → logprob: -10.218772888183594

Token 437: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013512886129319668
    2. '(set' → logprob: -4.638513088226318
    3. '([' → logprob: -5.888513088226318
    4. '({' → logprob: -7.013513088226318
    5. '(list' → logprob: -10.26351261138916
    6. '(' → logprob: -11.01351261138916
    7. 'x' → logprob: -11.26351261138916
    8. '[x' → logprob: -11.76351261138916
    9. '((' → logprob: -13.26351261138916
    10. '{x' → logprob: -13.38851261138916

Token 438: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.16164372861385345
    2. ')' → logprob: -1.9116437435150146
    3. ' )' → logprob: -7.4116435050964355
    4. '.' → logprob: -8.536643981933594
    5. '.s' → logprob: -8.911643981933594
    6. ' .' → logprob: -9.411643981933594
    7. '(p' → logprob: -9.411643981933594
    8. '())' → logprob: -9.411643981933594
    9. '[' → logprob: -9.661643981933594
    10. '(.' → logprob: -10.661643981933594

Token 439: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. '[' → logprob: -11.250028610229492
    3. ' )' → logprob: -12.250028610229492
    4. ')
' → logprob: -12.375028610229492
    5. '<|end|>' → logprob: -12.625028610229492
    6. ')-' → logprob: -13.250028610229492
    7. ')#' → logprob: -14.250028610229492
    8. '[])' → logprob: -14.750028610229492
    9. '),' → logprob: -15.625028610229492
    10. ' ' → logprob: -16.125028610229492

Token 440: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00039063513395376503
    2. ' x' → logprob: -7.875390529632568
    3. '1' → logprob: -12.875391006469727
    4. '<|end|>' → logprob: -12.875391006469727
    5. 'len' → logprob: -13.000391006469727
    6. '<|end|>' → logprob: -13.500391006469727
    7. '(x' → logprob: -14.125391006469727
    8. 'assistant' → logprob: -14.875391006469727
    9. '0' → logprob: -16.375391006469727
    10. '  ' → logprob: -16.625391006469727

Token 441: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -4.35837464465294e-05
    2. '.' → logprob: -10.625043869018555
    3. ' .' → logprob: -11.125043869018555
    4. 'c' → logprob: -12.875043869018555
    5. '<|end|>' → logprob: -14.125043869018555
    6. '```' → logprob: -15.500043869018555
    7. '.q' → logprob: -15.875043869018555
    8. '._' → logprob: -16.000043869018555
    9. ' ' → logprob: -16.375043869018555
    10. '
' → logprob: -16.500043869018555

Token 442: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: 'uf' (ID: 1427)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31768184900283813
    2. 'print' → logprob: -2.4426817893981934
    3. '<|end|>' → logprob: -2.4426817893981934
    4. ' for' → logprob: -3.1926817893981934
    5. 'n' → logprob: -3.9426817893981934
    6. 'x' → logprob: -4.317681789398193
    7. 'K' → logprob: -5.817681789398193
    8. 's' → logprob: -5.817681789398193
    9. 'N' → logprob: -5.942681789398193
    10. 'r' → logprob: -6.192681789398193

Token 444: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025218553841114044
    2. '=u' → logprob: -4.150218486785889
    3. ' =' → logprob: -5.525218486785889
    4. '.u' → logprob: -6.025218486785889
    5. '.' → logprob: -6.400218486785889
    6. '.=' → logprob: -7.150218486785889
    7. '=.' → logprob: -8.400218963623047
    8. '.uf' → logprob: -10.650218963623047
    9. '=user' → logprob: -11.400218963623047
    10. '=new' → logprob: -11.900218963623047

Token 445: 'UF' (ID: 54005)
  Prédit: 'UF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UF' → logprob: -1.735893965815194e-05
    2. ' UF' → logprob: -11.000017166137695
    3. 'uf' → logprob: -14.250017166137695
    4. 'Uf' → logprob: -18.750017166137695
    5. 'U' → logprob: -19.750017166137695
    6. 'UM' → logprob: -20.750017166137695
    7. 'UG' → logprob: -20.750017166137695
    8. 'UFF' → logprob: -21.125017166137695
    9. '(' → logprob: -21.625017166137695
    10. '(U' → logprob: -22.000017166137695

Token 446: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005195511621423066
    2. '(len' → logprob: -8.250519752502441
    3. '(' → logprob: -8.750519752502441
    4. '(K' → logprob: -9.750519752502441
    5. ' (' → logprob: -11.250519752502441
    6. 'N' → logprob: -11.500519752502441
    7. '((' → logprob: -12.000519752502441
    8. '(z' → logprob: -12.375519752502441
    9. '(n' → logprob: -12.500519752502441
    10. '(
' → logprob: -13.125519752502441

Token 447: '-K' (ID: 12249)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014175384305417538
    2. ')
' → logprob: -4.2641754150390625
    3. ' )' → logprob: -12.139175415039062
    4. ');' → logprob: -12.889175415039062
    5. ')
' → logprob: -13.264175415039062
    6. ')

' → logprob: -14.514175415039062
    7. ')`' → logprob: -15.139175415039062
    8. '))' → logprob: -15.764175415039062
    9. '),' → logprob: -15.764175415039062
    10. '')' → logprob: -15.764175415039062

Token 448: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014335629530251026
    2. ')' → logprob: -6.876433372497559
    3. '+)' → logprob: -8.001433372497559
    4. ' +' → logprob: -10.501433372497559
    5. '+
' → logprob: -10.751433372497559
    6. '))' → logprob: -12.501433372497559
    7. ')
' → logprob: -13.001433372497559
    8. '+')' → logprob: -13.001433372497559
    9. '+")' → logprob: -13.251433372497559
    10. ')+' → logprob: -13.751433372497559

Token 449: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.125008583068848
    3. '+' → logprob: -12.750008583068848
    4. ')' → logprob: -16.375009536743164
    5. '```' → logprob: -17.250009536743164
    6. '2' → logprob: -17.375009536743164
    7. '
' → logprob: -17.750009536743164
    8. '   ' → logprob: -18.375009536743164
    9. ' +' → logprob: -18.375009536743164
    10. '１' → logprob: -18.687509536743164

Token 450: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ')
' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.625029563903809
    4. ');' → logprob: -15.000029563903809
    5. ')return' → logprob: -16.500030517578125
    6. ')

' → logprob: -16.750030517578125
    7. '))' → logprob: -16.875030517578125
    8. '),' → logprob: -16.875030517578125
    9. ')add' → logprob: -16.875030517578125
    10. '<|end|>' → logprob: -17.250030517578125

Token 451: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.190235897898674
    2. 'res' → logprob: -2.0652358531951904
    3. 'ans' → logprob: -3.4402358531951904
    4. 'r' → logprob: -4.3152360916137695
    5. 'rs' → logprob: -8.44023609161377
    6. 'ret' → logprob: -8.56523609161377
    7. ' for' → logprob: -9.19023609161377
    8. 'pr' → logprob: -9.19023609161377
    9. 'out' → logprob: -9.94023609161377
    10. 'an' → logprob: -10.06523609161377

Token 452: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1605100780725479
    2. 'i' → logprob: -1.9105100631713867
    3. '(i' → logprob: -8.535510063171387
    4. 'x' → logprob: -10.910510063171387
    5. ' x' → logprob: -11.285510063171387
    6. ' ' → logprob: -11.910510063171387
    7. '_i' → logprob: -12.160510063171387
    8. ' idx' → logprob: -12.410510063171387
    9. ' j' → logprob: -12.785510063171387
    10. 'I' → logprob: -12.785510063171387

Token 453: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07892702519893646
    2. 'in' → logprob: -2.5789270401000977
    3. ' ' → logprob: -11.078927040100098
    4. ',' → logprob: -11.828927040100098
    5. ',z' → logprob: -12.203927040100098
    6. 'range' → logprob: -12.953927040100098
    7. ',n' → logprob: -13.953927040100098
    8. '0' → logprob: -14.328927040100098
    9. ',in' → logprob: -14.328927040100098
    10. ',_' → logprob: -14.578927040100098

Token 454: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40829792618751526
    2. 'x' → logprob: -1.4082978963851929
    3. 'i' → logprob: -3.4082980155944824
    4. 'v' → logprob: -3.5332980155944824
    5. 'A' → logprob: -4.408298015594482
    6. 's' → logprob: -5.658298015594482
    7. 'b' → logprob: -5.658298015594482
    8. 'val' → logprob: -6.033298015594482
    9. 'u' → logprob: -6.533298015594482
    10. 'e' → logprob: -6.908298015594482

Token 455: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.01262642815709114
    2. ',v' → logprob: -4.512626647949219
    3. ',' → logprob: -7.387626647949219
    4. ',m' → logprob: -8.387626647949219
    5. ',b' → logprob: -8.887626647949219
    6. ',x' → logprob: -9.012626647949219
    7. ',s' → logprob: -9.512626647949219
    8. ',a' → logprob: -9.762626647949219
    9. ',t' → logprob: -10.137626647949219
    10. ' ,' → logprob: -10.262626647949219

Token 456: ',m' (ID: 26648)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012475410767365247
    2. ' )' → logprob: -9.25012493133545
    3. ')=' → logprob: -10.62512493133545
    4. 'in' → logprob: -13.62512493133545
    5. ')
' → logprob: -14.12512493133545
    6. '),(' → logprob: -14.25012493133545
    7. '
' → logprob: -15.12512493133545
    8. ' in' → logprob: -15.62512493133545
    9. ',)' → logprob: -15.62512493133545
    10. ')=>{
' → logprob: -16.500123977661133

Token 457: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ' )' → logprob: -12.125009536743164
    3. ')=' → logprob: -13.000009536743164
    4. 'in' → logprob: -14.250009536743164
    5. ')
' → logprob: -15.500009536743164
    6. ',)' → logprob: -16.000009536743164
    7. ' in' → logprob: -16.500009536743164
    8. '
' → logprob: -17.000009536743164
    9. '))' → logprob: -17.250009536743164
    10. 'a' → logprob: -17.375009536743164

Token 458: ',m' (ID: 26648)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03321601822972298
    2. '),(' → logprob: -4.2832159996032715
    3. ')=' → logprob: -4.5332159996032715
    4. ',r' → logprob: -5.0332159996032715
    5. ',' → logprob: -7.5332159996032715
    6. ' )' → logprob: -7.6582159996032715
    7. ',l' → logprob: -9.03321647644043
    8. ',n' → logprob: -9.03321647644043
    9. '),' → logprob: -9.40821647644043
    10. ',s' → logprob: -9.65821647644043

Token 459: 'x' (ID: 87)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.07718683034181595
    2. 'x' → logprob: -3.0771868228912354
    3. 'a' → logprob: -3.9521868228912354
    4. ')' → logprob: -5.3271870613098145
    5. 'r' → logprob: -5.8271870613098145
    6. 'n' → logprob: -7.4521870613098145
    7. ',' → logprob: -8.452186584472656
    8. ',r' → logprob: -8.952186584472656
    9. 'in' → logprob: -9.827186584472656
    10. ')=' → logprob: -10.077186584472656

Token 460: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4272752852994017e-05
    2. ' )' → logprob: -11.12502384185791
    3. 'in' → logprob: -12.00002384185791
    4. ')=' → logprob: -13.12502384185791
    5. ')
' → logprob: -14.37502384185791
    6. '
' → logprob: -15.37502384185791
    7. 'a' → logprob: -15.75002384185791
    8. '))' → logprob: -16.375024795532227
    9. ',)' → logprob: -16.625024795532227
    10. '_)' → logprob: -16.875024795532227

Token 461: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.693159818649292
    2. ' in' → logprob: -0.693159818649292
    3. ')' → logprob: -12.318160057067871
    4. '
' → logprob: -13.193160057067871
    5. 'In' → logprob: -13.818160057067871
    6. '	in' → logprob: -13.943160057067871
    7. ',in' → logprob: -13.943160057067871
    8. ' ' → logprob: -14.068160057067871
    9. '```' → logprob: -14.443160057067871
    10. '_in' → logprob: -15.318160057067871

Token 462: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.20358051359653473
    2. 'enumer' → logprob: -1.7035804986953735
    3. ' zip' → logprob: -6.453580379486084
    4. 'zip' → logprob: -7.453580379486084
    5. ' in' → logprob: -12.328580856323242
    6. 'A' → logprob: -13.328580856323242
    7. '(zip' → logprob: -13.828580856323242
    8. '[(' → logprob: -14.078580856323242
    9. 'in' → logprob: -14.203580856323242
    10. 'en' → logprob: -14.203580856323242

Token 463: '(zip' (ID: 87520)
  Prédit: '(zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.1808113306760788
    2. 'zip' → logprob: -1.9308112859725952
    3. 'enumer' → logprob: -4.180811405181885
    4. '(en' → logprob: -5.805811405181885
    5. 'A' → logprob: -7.180811405181885
    6. ' zip' → logprob: -7.305811405181885
    7. '((' → logprob: -8.055810928344727
    8. '(z' → logprob: -8.805810928344727
    9. ' enumerate' → logprob: -9.430810928344727
    10. '([(' → logprob: -10.180810928344727

Token 464: '(P' (ID: 8952)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9803962707519531
    2. '(A' → logprob: -1.1053962707519531
    3. '(range' → logprob: -1.7303962707519531
    4. '(z' → logprob: -2.230396270751953
    5. 'A' → logprob: -5.355396270751953
    6. '(' → logprob: -6.730396270751953
    7. '((' → logprob: -6.980396270751953
    8. '(a' → logprob: -7.605396270751953
    9. 'range' → logprob: -7.855396270751953
    10. 's' → logprob: -8.605396270751953

Token 465: ',P' (ID: 64255)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0951497554779053
    2. '[i' → logprob: -1.4701497554779053
    3. ',s' → logprob: -1.8451497554779053
    4. '[N' → logprob: -2.4701497554779053
    5. '[s' → logprob: -3.2201497554779053
    6. ',z' → logprob: -3.2201497554779053
    7. ',K' → logprob: -3.5951497554779053
    8. ',N' → logprob: -3.9701497554779053
    9. ',i' → logprob: -4.095149993896484
    10. '[z' → logprob: -4.720149993896484

Token 466: '[K' (ID: 137571)
  Prédit: '[K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[K' → logprob: -0.12206932157278061
    2. '[i' → logprob: -2.4970693588256836
    3. '[' → logprob: -3.9970693588256836
    4. '[N' → logprob: -4.872069358825684
    5. '[:-' → logprob: -5.497069358825684
    6. ',' → logprob: -7.122069358825684
    7. '
' → logprob: -7.622069358825684
    8. ',K' → logprob: -8.372069358825684
    9. ' [' → logprob: -8.622069358825684
    10. '[len' → logprob: -9.122069358825684

Token 467: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.3593365550041199
    2. ':,' → logprob: -1.4843366146087646
    3. ':' → logprob: -2.7343366146087646
    4. '-' → logprob: -5.1093363761901855
    5. ':-' → logprob: -5.9843363761901855
    6. ':i' → logprob: -7.6093363761901855
    7. ':]' → logprob: -8.109336853027344
    8. ' :,' → logprob: -8.234336853027344
    9. ':N' → logprob: -8.609336853027344
    10. ' :' → logprob: -8.859336853027344

Token 468: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012675516307353973
    2. ' s' → logprob: -4.3876752853393555
    3. 'P' → logprob: -9.137675285339355
    4. ' ' → logprob: -10.887675285339355
    5. ' P' → logprob: -11.637675285339355
    6. '   ' → logprob: -12.012675285339355
    7. 'S' → logprob: -12.637675285339355
    8. '  ' → logprob: -12.637675285339355
    9. '[s' → logprob: -12.637675285339355
    10. '    ' → logprob: -13.575175285339355

Token 469: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015024791937321424
    2. 'max' → logprob: -6.501502513885498
    3. 'm' → logprob: -16.001502990722656
    4. 'mn' → logprob: -17.001502990722656
    5. 'mint' → logprob: -18.376502990722656
    6. ' min' → logprob: -18.501502990722656
    7. 'mx' → logprob: -18.876502990722656
    8. 'mini' → logprob: -18.876502990722656
    9. 's' → logprob: -19.126502990722656
    10. 'mi' → logprob: -19.376502990722656

Token 470: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.0003229494614060968
    2. ' ,' → logprob: -8.125323295593262
    3. ',' → logprob: -10.625323295593262
    4. 's' → logprob: -13.250323295593262
    5. ',
' → logprob: -15.375323295593262
    6. '[s' → logprob: -15.750323295593262
    7. '[' → logprob: -16.250322341918945
    8. ' ' → logprob: -16.375322341918945
    9. '   ' → logprob: -16.625322341918945
    10. ',b' → logprob: -17.500322341918945

Token 471: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05322922766208649
    2. 's' → logprob: -3.553229331970215
    3. 'ax' → logprob: -3.803229331970215
    4. 'min' → logprob: -7.053229331970215
    5. 'x' → logprob: -11.803229331970215
    6. 'in' → logprob: -12.178229331970215
    7. ' s' → logprob: -12.178229331970215
    8. '+' → logprob: -12.678229331970215
    9. 'mx' → logprob: -13.178229331970215
    10. ')' → logprob: -13.303229331970215

Token 472: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.6424087285995483
    2. ')):' → logprob: -0.7674087285995483
    3. ')):
' → logprob: -5.267408847808838
    4. '))' → logprob: -6.017408847808838
    5. '):' → logprob: -6.767408847808838
    6. '):
' → logprob: -7.142408847808838
    7. ' ' → logprob: -10.01740837097168
    8. ',' → logprob: -10.51740837097168
    9. ':' → logprob: -10.64240837097168
    10. ')' → logprob: -10.64240837097168

Token 473: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003406563075259328
    2. '   ' → logprob: -6.253406524658203
    3. '<|end|>' → logprob: -6.753406524658203
    4. ' ' → logprob: -9.753406524658203
    5. ' while' → logprob: -9.878406524658203
    6. ' i' → logprob: -10.003406524658203
    7. '	if' → logprob: -10.253406524658203
    8. ' 
' → logprob: -11.378406524658203
    9. ',' → logprob: -11.628406524658203
    10. ' n' → logprob: -11.628406524658203

Token 474: ' l' (ID: 305)
  Prédit: ' mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mx' → logprob: -1.2176353931427002
    2. ' mn' → logprob: -1.2176353931427002
    3. 'mx' → logprob: -2.2176353931427
    4. 'mn' → logprob: -2.5926353931427
    5. ' (' → logprob: -2.9676353931427
    6. '(mx' → logprob: -3.3426353931427
    7. ' l' → logprob: -3.4676353931427
    8. '(m' → logprob: -3.7176353931427
    9. 'r' → logprob: -4.342635154724121
    10. 'l' → logprob: -4.467635154724121

Token 475: '==' (ID: 560)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17617784440517426
    2. '==' → logprob: -2.551177740097046
    3. '<' → logprob: -2.676177740097046
    4. '<m' → logprob: -5.176177978515625
    5. ' <=' → logprob: -5.676177978515625
    6. '>=' → logprob: -5.926177978515625
    7. '!=' → logprob: -6.926177978515625
    8. ' <' → logprob: -7.676177978515625
    9. '>' → logprob: -7.801177978515625
    10. '+' → logprob: -8.176177978515625

Token 476: 'mn' (ID: 34579)
  Prédit: 'mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.014905073679983616
    2. ' mn' → logprob: -4.389904975891113
    3. 'r' → logprob: -6.514904975891113
    4. 'mx' → logprob: -7.514904975891113
    5. 'm' → logprob: -8.389904975891113
    6. 's' → logprob: -10.139904975891113
    7. 'l' → logprob: -10.264904975891113
    8. 'min' → logprob: -10.264904975891113
    9. ' r' → logprob: -11.889904975891113
    10. 'max' → logprob: -12.514904975891113

Token 477: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.043040867894887924
    2. 'and' → logprob: -3.1680407524108887
    3. ' or' → logprob: -10.668041229248047
    4. '==' → logprob: -11.293041229248047
    5. ' ' → logprob: -12.543041229248047
    6. ')' → logprob: -14.043041229248047
    7. 'or' → logprob: -14.793041229248047
    8. ' ==' → logprob: -15.543041229248047
    9. ':
' → logprob: -15.793041229248047
    10. '&&' → logprob: -16.043041229248047

Token 478: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2705775201320648
    2. 'mx' → logprob: -1.6455775499343872
    3. ' r' → logprob: -3.5205774307250977
    4. ' mx' → logprob: -4.270577430725098
    5. 'max' → logprob: -8.270577430725098
    6. 'm' → logprob: -8.895577430725098
    7. 'mn' → logprob: -10.020577430725098
    8. ' ' → logprob: -10.020577430725098
    9. '(mx' → logprob: -10.395577430725098
    10. '   ' → logprob: -10.645577430725098

Token 479: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0036447341553866863
    2. ' ==' → logprob: -5.628644943237305
    3. ']==' → logprob: -11.003644943237305
    4. ')==' → logprob: -12.378644943237305
    5. '<|end|>' → logprob: -12.503644943237305
    6. '[' → logprob: -12.753644943237305
    7. '=' → logprob: -12.878644943237305
    8. '[max' → logprob: -13.253644943237305
    9. '!=' → logprob: -13.378644943237305
    10. 'max' → logprob: -13.503644943237305

Token 480: 'mx' (ID: 32467)
  Prédit: 'mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.0011745095252990723
    2. ' mx' → logprob: -6.751174449920654
    3. 'max' → logprob: -12.501174926757812
    4. '(mx' → logprob: -15.876174926757812
    5. 'mn' → logprob: -16.001174926757812
    6. ' ' → logprob: -16.126174926757812
    7. 'm' → logprob: -16.376174926757812
    8. 'ms' → logprob: -16.876174926757812
    9. '.mx' → logprob: -17.251174926757812
    10. '
' → logprob: -17.626174926757812

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012388390488922596
    2. ':
' → logprob: -4.637388229370117
    3. ' and' → logprob: -6.262388229370117
    4. ' :' → logprob: -7.637388229370117
    5. 'uf' → logprob: -9.762388229370117
    6. '):' → logprob: -9.762388229370117
    7. ' uf' → logprob: -9.762388229370117
    8. ':
' → logprob: -10.762388229370117
    9. ' :
' → logprob: -11.637388229370117
    10. ':def' → logprob: -11.887388229370117

Token 482: 'uf' (ID: 1427)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.25247302651405334
    2. 'uf' → logprob: -1.502472996711731
    3. '   ' → logprob: -7.752472877502441
    4. '```' → logprob: -10.252472877502441
    5. '.uf' → logprob: -10.877472877502441
    6. ' ' → logprob: -11.002472877502441
    7. '
' → logprob: -12.127472877502441
    8. 'ufi' → logprob: -12.127472877502441
    9. '``' → logprob: -12.752472877502441
    10. ' ' → logprob: -12.752472877502441

Token 483: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -14.125001907348633
    3. ' .' → logprob: -14.375001907348633
    4. '.' → logprob: -16.750001907348633
    5. ' u' → logprob: -18.375001907348633
    6. '<u' → logprob: -20.125001907348633
    7. '	u' → logprob: -20.750001907348633
    8. '.uf' → logprob: -20.875001907348633
    9. '```' → logprob: -21.125001907348633
    10. '.i' → logprob: -21.250001907348633

Token 484: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02884196676313877
    2. 'i' → logprob: -4.028841972351074
    3. 'uf' → logprob: -4.778841972351074
    4. '(' → logprob: -6.153841972351074
    5. '(u' → logprob: -10.028841972351074
    6. ' i' → logprob: -11.528841972351074
    7. ' uf' → logprob: -11.653841972351074
    8. 'f' → logprob: -11.778841972351074
    9. '(N' → logprob: -12.028841972351074
    10. ' (' → logprob: -12.528841972351074

Token 485: ',i' (ID: 25032)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24962668120861053
    2. ' i' → logprob: -1.999626636505127
    3. ',i' → logprob: -2.499626636505127
    4. ',' → logprob: -5.749626636505127
    5. ' ,' → logprob: -8.499627113342285
    6. '(i' → logprob: -11.499627113342285
    7. '	i' → logprob: -12.749627113342285
    8. ' ' → logprob: -13.624627113342285
    9. '
' → logprob: -14.249627113342285
    10. '   ' → logprob: -14.374627113342285

Token 486: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043341092532500625
    2. '1' → logprob: -7.750433444976807
    3. ' +' → logprob: -12.875432968139648
    4. '+
' → logprob: -16.50043296813965
    5. ' ' → logprob: -17.87543296813965
    6. '+i' → logprob: -18.62543296813965
    7. ')+' → logprob: -18.87543296813965
    8. '＋' → logprob: -19.25043296813965
    9. '+)' → logprob: -19.37543296813965
    10. '```' → logprob: -19.50043296813965

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '+' → logprob: -16.375001907348633
    4. '```' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '  ' → logprob: -20.375001907348633
    8. '۱' → logprob: -20.812501907348633
    9. '0' → logprob: -20.937501907348633
    10. '2' → logprob: -20.937501907348633

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.209963900502771e-05
    2. '())' → logprob: -10.125092506408691
    3. ' )' → logprob: -10.500092506408691
    4. ')
' → logprob: -10.750092506408691
    5. '))' → logprob: -14.375092506408691
    6. ')return' → logprob: -14.375092506408691
    7. ')#' → logprob: -14.750092506408691
    8. '()' → logprob: -14.875092506408691
    9. '+)' → logprob: -15.750092506408691
    10. ')}' → logprob: -16.125091552734375

Token 489: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.050913017243146896
    2. 'for' → logprob: -3.550913095474243
    3. 'r' → logprob: -5.175912857055664
    4. 'pr' → logprob: -5.550912857055664
    5. 'x' → logprob: -6.050912857055664
    6. 'p' → logprob: -6.300912857055664
    7. 'n' → logprob: -6.675912857055664
    8. 'ans' → logprob: -7.175912857055664
    9. 's' → logprob: -7.425912857055664
    10. 'a' → logprob: -7.425912857055664

Token 490: ' not' (ID: 625)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.6346627473831177
    2. 'uf' → logprob: -0.7596627473831177
    3. 'len' → logprob: -7.509662628173828
    4. ' len' → logprob: -7.759662628173828
    5. 'print' → logprob: -8.009662628173828
    6. '(' → logprob: -8.759662628173828
    7. ' print' → logprob: -9.384662628173828
    8. 'K' → logprob: -9.384662628173828
    9. 'sum' → logprob: -9.759662628173828
    10. ' ' → logprob: -9.759662628173828

Token 491: ' any' (ID: 1062)
  Prédit: ' uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.06967028975486755
    2. 'uf' → logprob: -3.5696702003479004
    3. ' all' → logprob: -3.6946702003479004
    4. ' any' → logprob: -4.6946702003479
    5. 'all' → logprob: -6.3196702003479
    6. 'any' → logprob: -6.5696702003479
    7. ' A' → logprob: -6.9446702003479
    8. 'A' → logprob: -7.3196702003479
    9. ' max' → logprob: -9.444670677185059
    10. '(' → logprob: -10.444670677185059

Token 492: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0011515287915244699
    2. 'A' → logprob: -7.7511515617370605
    3. '(s' → logprob: -7.7511515617370605
    4. '(a' → logprob: -9.126151084899902
    5. '(' → logprob: -9.626151084899902
    6. '(x' → logprob: -9.626151084899902
    7. '((' → logprob: -11.251151084899902
    8. '(i' → logprob: -11.626151084899902
    9. '([' → logprob: -12.001151084899902
    10. '(u' → logprob: -12.126151084899902

Token 493: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0036767981946468353
    2. '):
' → logprob: -6.003676891326904
    3. ')' → logprob: -7.628676891326904
    4. '[:' → logprob: -8.003676414489746
    5. '[i' → logprob: -8.253676414489746
    6. '[' → logprob: -9.503676414489746
    7. ' ):' → logprob: -11.878676414489746
    8. ')==' → logprob: -11.878676414489746
    9. '):

' → logprob: -12.003676414489746
    10. '):
' → logprob: -12.378676414489746

Token 494: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.00286918506026268
    2. 'print' → logprob: -5.877869129180908
    3. '```' → logprob: -10.627869606018066
    4. '
' → logprob: -11.127869606018066
    5. '	print' → logprob: -11.377869606018066
    6. '   ' → logprob: -12.377869606018066
    7. ' return' → logprob: -12.502869606018066
    8. ' exit' → logprob: -13.627869606018066
    9. ' for' → logprob: -13.877869606018066
    10. '``' → logprob: -14.002869606018066

Token 495: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13271628320217133
    2. '(-' → logprob: -2.382716178894043
    3. '(N' → logprob: -3.757716178894043
    4. '0' → logprob: -5.382716178894043
    5. '
' → logprob: -7.007716178894043
    6. '("' → logprob: -7.132716178894043
    7. '(K' → logprob: -7.507716178894043
    8. '(
' → logprob: -7.632716178894043
    9. '-' → logprob: -8.257716178894043
    10. '((' → logprob: -8.507716178894043

Token 496: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003721622342709452
    2. 'uf' → logprob: -8.000371932983398
    3. '(A' → logprob: -11.125371932983398
    4. '(u' → logprob: -11.375371932983398
    5. ' uf' → logprob: -13.125371932983398
    6. ' (' → logprob: -13.250371932983398
    7. ')' → logprob: -13.250371932983398
    8. '(U' → logprob: -13.500371932983398
    9. ')(' → logprob: -14.125371932983398
    10. '(s' → logprob: -14.250371932983398

Token 497: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.10455979406833649
    2. 'A' → logprob: -2.729559898376465
    3. 'P' → logprob: -3.479559898376465
    4. 's' → logprob: -6.104559898376465
    5. ' uf' → logprob: -8.604559898376465
    6. 'K' → logprob: -8.854559898376465
    7. 'N' → logprob: -9.354559898376465
    8. '[' → logprob: -9.479559898376465
    9. 'range' → logprob: -9.479559898376465
    10. ')' → logprob: -9.979559898376465

Token 498: ')-' (ID: 14080)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21250946819782257
    2. '.uf' → logprob: -2.0875093936920166
    3. '))' → logprob: -2.8375093936920166
    4. '.' → logprob: -4.837509632110596
    5. ')' → logprob: -8.212509155273438
    6. '))
' → logprob: -8.587509155273438
    7. ' (' → logprob: -9.087509155273438
    8. 'uf' → logprob: -9.212509155273438
    9. '.(' → logprob: -9.337509155273438
    10. ' ))' → logprob: -10.212509155273438

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067176250740885735
    2. ' ' → logprob: -5.006717681884766
    3. '
' → logprob: -14.506717681884766
    4. '+' → logprob: -15.256717681884766
    5. '0' → logprob: -15.381717681884766
    6. 'len' → logprob: -15.506717681884766
    7. ' K' → logprob: -15.756717681884766
    8. 'sum' → logprob: -15.881717681884766
    9. '```' → logprob: -15.944217681884766
    10. '  ' → logprob: -16.006717681884766

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00477068405598402
    2. ')
' → logprob: -5.379770755767822
    3. ' )' → logprob: -8.879770278930664
    4. '())' → logprob: -12.504770278930664
    5. ' )
' → logprob: -13.004770278930664
    6. ')
' → logprob: -14.129770278930664
    7. ')`' → logprob: -14.129770278930664
    8. '```' → logprob: -14.129770278930664
    9. ')return' → logprob: -14.879770278930664
    10. '+' → logprob: -15.004770278930664

Token 501: ' exit' (ID: 10654)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2458014190196991
    2. 'print' → logprob: -2.7458014488220215
    3. ')' → logprob: -2.8708014488220215
    4. '
' → logprob: -2.9958014488220215
    5. '<|end|>' → logprob: -4.2458014488220215
    6. 'else' → logprob: -4.7458014488220215
    7. ' for' → logprob: -4.9958014488220215
    8. 'if' → logprob: -5.4958014488220215
    9. ')
' → logprob: -5.6208014488220215
    10. '[' → logprob: -6.4958014488220215

Token 503: 'di' (ID: 4091)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14397114515304565
    2. 'for' → logprob: -2.6439712047576904
    3. '<|end|>' → logprob: -3.1439712047576904
    4. ' for' → logprob: -5.143970966339111
    5. ' print' → logprob: -5.143970966339111
    6. '
' → logprob: -6.268970966339111
    7. 'def' → logprob: -6.393970966339111
    8. '```' → logprob: -6.393970966339111
    9. 'if' → logprob: -7.143970966339111
    10. 'n' → logprob: -7.143970966339111

Token 504: '=N' (ID: 143132)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.17056474089622498
    2. 'f' → logprob: -2.420564651489258
    3. 'c' → logprob: -3.795564651489258
    4. 'ff' → logprob: -4.420564651489258
    5. 'm' → logprob: -4.920564651489258
    6. 'r' → logprob: -5.170564651489258
    7. 'ction' → logprob: -5.545564651489258
    8. 'x' → logprob: -5.545564651489258
    9. 'st' → logprob: -5.795564651489258
    10. 'v' → logprob: -6.045564651489258

Token 505: '-K' (ID: 12249)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6551755666732788
    2. '=' → logprob: -0.9051755666732788
    3. ' =' → logprob: -3.7801756858825684
    4. 'ct' → logprob: -4.405175685882568
    5. '+' → logprob: -4.530175685882568
    6. 'x' → logprob: -4.905175685882568
    7. '-' → logprob: -5.030175685882568
    8. 'for' → logprob: -5.780175685882568
    9. ' ' → logprob: -6.280175685882568
    10. ' -' → logprob: -7.155175685882568

Token 506: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031879288144409657
    2. '-' → logprob: -6.753188133239746
    3. 'f' → logprob: -7.003188133239746
    4. 'x' → logprob: -8.253188133239746
    5. 'c' → logprob: -8.628188133239746
    6. 'v' → logprob: -9.378188133239746
    7. 's' → logprob: -9.503188133239746
    8. '1' → logprob: -9.628188133239746
    9. 'cs' → logprob: -10.128188133239746
    10. ' +' → logprob: -10.253188133239746

Token 507: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004021764732897282
    2. '1' → logprob: -5.629021644592285
    3. '+' → logprob: -7.879021644592285
    4. '3' → logprob: -10.129021644592285
    5. ' ' → logprob: -13.629021644592285
    6. '0' → logprob: -14.379021644592285
    7. '4' → logprob: -14.754021644592285
    8. ' +' → logprob: -15.504021644592285
    9. '```' → logprob: -15.566521644592285
    10. '+
' → logprob: -15.691521644592285

Token 508: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30687397718429565
    2. 'di' → logprob: -2.9318740367889404
    3. ';' → logprob: -3.3068740367889404
    4. '
' → logprob: -3.4318740367889404
    5. 'for' → logprob: -3.5568740367889404
    6. 'D' → logprob: -3.8068740367889404
    7. ',' → logprob: -4.431873798370361
    8. 'i' → logprob: -4.681873798370361
    9. 'from' → logprob: -4.806873798370361
    10. 'f' → logprob: -4.806873798370361

Token 509: 'for' (ID: 1938)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0287548303604126
    2. 'ans' → logprob: -1.5287548303604126
    3. 'd' → logprob: -1.7787548303604126
    4. 'D' → logprob: -2.778754711151123
    5. 'from' → logprob: -2.903754711151123
    6. 'for' → logprob: -3.028754711151123
    7. 'res' → logprob: -3.653754711151123
    8. 'di' → logprob: -3.778754711151123
    9. 'import' → logprob: -5.028754711151123
    10. 'dist' → logprob: -5.278754711151123

Token 510: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022646168246865273
    2. 'x' → logprob: -4.397645950317383
    3. 'd' → logprob: -5.397645950317383
    4. 'l' → logprob: -6.897645950317383
    5. 'v' → logprob: -7.022645950317383
    6. '_i' → logprob: -7.772645950317383
    7. 'a' → logprob: -7.897645950317383
    8. 'w' → logprob: -8.147645950317383
    9. 'r' → logprob: -8.147645950317383
    10. '_' → logprob: -8.147645950317383

Token 511: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20742954313755035
    2. 'in' → logprob: -1.7074295282363892
    3. ',' → logprob: -5.4574294090271
    4. ',in' → logprob: -7.4574294090271
    5. ',n' → logprob: -7.9574294090271
    6. ' ,' → logprob: -9.457429885864258
    7. ',l' → logprob: -9.457429885864258
    8. ',i' → logprob: -9.707429885864258
    9. ',d' → logprob: -9.957429885864258
    10. ',(' → logprob: -10.082429885864258

Token 512: 'flag' (ID: 17665)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0175611972808838
    2. 'v' → logprob: -1.3925611972808838
    3. 'x' → logprob: -1.6425611972808838
    4. 'b' → logprob: -2.767561197280884
    5. '(a' → logprob: -3.142561197280884
    6. '(v' → logprob: -4.017560958862305
    7. '(x' → logprob: -4.142560958862305
    8. 'val' → logprob: -4.267560958862305
    9. 'j' → logprob: -4.642560958862305
    10. '(b' → logprob: -5.267560958862305

Token 513: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035653453320264816
    2. ',value' → logprob: -4.285653591156006
    3. ' in' → logprob: -4.535653591156006
    4. ',val' → logprob: -5.910653591156006
    5. ',v' → logprob: -6.285653591156006
    6. 'in' → logprob: -6.410653591156006
    7. ',in' → logprob: -6.410653591156006
    8. ',f' → logprob: -7.285653591156006
    9. ',(' → logprob: -8.285653114318848
    10. ',b' → logprob: -8.285653114318848

Token 514: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0003373694489710033
    2. ' enumerate' → logprob: -8.000337600708008
    3. 'zip' → logprob: -13.500337600708008
    4. 'en' → logprob: -14.500337600708008
    5. 'enum' → logprob: -17.500337600708008
    6. 'in' → logprob: -19.250337600708008
    7. 'range' → logprob: -20.375337600708008
    8. 'z' → logprob: -21.000337600708008
    9. '(en' → logprob: -21.000337600708008
    10. 'Enumer' → logprob: -21.500337600708008

Token 515: '(A' (ID: 10706)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005075433291494846
    2. '(A' → logprob: -6.005075454711914
    3. 'enumer' → logprob: -6.255075454711914
    4. 'zip' → logprob: -7.880075454711914
    5. 'range' → logprob: -8.755075454711914
    6. '(zip' → logprob: -9.255075454711914
    7. ' A' → logprob: -11.005075454711914
    8. ' enumerate' → logprob: -11.505075454711914
    9. '(range' → logprob: -11.505075454711914
    10. '(' → logprob: -13.130075454711914

Token 516: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06725126504898071
    2. '):' → logprob: -3.442251205444336
    3. ',' → logprob: -3.567251205444336
    4. ':' → logprob: -6.067251205444336
    5. '[i' → logprob: -7.067251205444336
    6. '[' → logprob: -7.317251205444336
    7. ':
' → logprob: -8.567251205444336
    8. ' if' → logprob: -8.817251205444336
    9. '):
' → logprob: -8.817251205444336
    10. ',i' → logprob: -8.942251205444336

Token 517: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -8.745069499127567e-05
    2. 'if' → logprob: -10.62508773803711
    3. '   ' → logprob: -10.75008773803711
    4. '	if' → logprob: -11.37508773803711
    5. ' ' → logprob: -11.87508773803711
    6. ' for' → logprob: -12.12508773803711
    7. ' import' → logprob: -12.75008773803711
    8. '```' → logprob: -12.87508773803711
    9. ' uf' → logprob: -13.00008773803711
    10. ' while' → logprob: -13.25008773803711

Token 518: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.08170631527900696
    2. ' flag' → logprob: -2.5817062854766846
    3. ' not' → logprob: -6.456706523895264
    4. 'not' → logprob: -6.706706523895264
    5. '	flag' → logprob: -11.581706047058105
    6. '(flag' → logprob: -12.331706047058105
    7. ' ' → logprob: -12.956706047058105
    8. 'i' → logprob: -14.081706047058105
    9. ' i' → logprob: -14.081706047058105
    10. ' ' → logprob: -14.956706047058105

Token 519: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8742773532867432
    2. '==' → logprob: -0.8742773532867432
    3. ':
' → logprob: -1.8742773532867432
    4. ' ==' → logprob: -4.999277114868164
    5. '=' → logprob: -5.874277114868164
    6. ' :' → logprob: -6.874277114868164
    7. '=True' → logprob: -7.499277114868164
    8. ' :
' → logprob: -7.749277114868164
    9. ':i' → logprob: -8.999277114868164
    10. '==
' → logprob: -8.999277114868164

Token 520: 'uf' (ID: 1427)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.26388418674468994
    2. ' uf' → logprob: -2.1388840675354004
    3. ' print' → logprob: -2.7638840675354004
    4. ' if' → logprob: -3.5138840675354004
    5. 'di' → logprob: -4.5138840675354
    6. ' ' → logprob: -6.0138840675354
    7. 'print' → logprob: -6.3888840675354
    8. ' for' → logprob: -6.5138840675354
    9. '   ' → logprob: -6.5138840675354
    10. 'uf' → logprob: -6.8888840675354

Token 521: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -1.5048530030981055e-06
    2. ' .' → logprob: -13.875001907348633
    3. 'u' → logprob: -14.750001907348633
    4. '.' → logprob: -17.250001907348633
    5. '.uf' → logprob: -17.750001907348633
    6. '.c' → logprob: -18.125001907348633
    7. '.i' → logprob: -18.250001907348633
    8. '<u' → logprob: -18.250001907348633
    9. '	u' → logprob: -18.375001907348633
    10. ' u' → logprob: -19.625001907348633

Token 522: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00023071514442563057
    2. '(di' → logprob: -8.75023078918457
    3. 'i' → logprob: -10.25023078918457
    4. ' i' → logprob: -11.12523078918457
    5. '(' → logprob: -11.62523078918457
    6. 'di' → logprob: -11.75023078918457
    7. ' (' → logprob: -12.37523078918457
    8. ' di' → logprob: -14.25023078918457
    9. ',i' → logprob: -15.37523078918457
    10. '(N' → logprob: -16.50023078918457

Token 523: ',' (ID: 11)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.24740687012672424
    2. ',' → logprob: -2.4974069595336914
    3. 'i' → logprob: -2.8724069595336914
    4. ' ,' → logprob: -2.9974069595336914
    5. ' i' → logprob: -3.4974069595336914
    6. ' ' → logprob: -10.997406959533691
    7. ',N' → logprob: -11.122406959533691
    8. ' ,
' → logprob: -11.122406959533691
    9. ',
' → logprob: -11.247406959533691
    10. 'di' → logprob: -11.372406959533691

Token 524: 'di' (ID: 4091)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012518247589468956
    2. ' i' → logprob: -4.387518405914307
    3. 'di' → logprob: -11.887517929077148
    4. ' ' → logprob: -14.512517929077148
    5. ' di' → logprob: -14.512517929077148
    6. '
' → logprob: -15.762517929077148
    7. '	i' → logprob: -16.01251792907715
    8. '0' → logprob: -16.13751792907715
    9. ' ' → logprob: -16.63751792907715
    10. '(i' → logprob: -16.88751792907715

Token 525: ')
' (ID: 446)
  Prédit: '+i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+i' → logprob: -0.2887786328792572
    2. ')' → logprob: -1.6637786626815796
    3. '+' → logprob: -3.03877854347229
    4. ')
' → logprob: -4.913778781890869
    5. '+)' → logprob: -6.163778781890869
    6. ' )' → logprob: -6.413778781890869
    7. ');' → logprob: -6.788778781890869
    8. ' +' → logprob: -7.038778781890869
    9. '+
' → logprob: -9.038778305053711
    10. ' )
' → logprob: -9.038778305053711

Token 526: 'print' (ID: 1598)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.050550300627946854
    2. ' di' → logprob: -3.4255502223968506
    3. 'print' → logprob: -4.55055046081543
    4. '<|end|>' → logprob: -5.67555046081543
    5. ' for' → logprob: -7.05055046081543
    6. ' print' → logprob: -7.42555046081543
    7. 'for' → logprob: -7.92555046081543
    8. 'if' → logprob: -8.80055046081543
    9. 'i' → logprob: -8.92555046081543
    10. '```' → logprob: -9.17555046081543

Token 527: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20307809114456177
    2. '(cnt' → logprob: -1.703078031539917
    3. '(len' → logprob: -6.578078269958496
    4. 'uf' → logprob: -9.078078269958496
    5. '(U' → logprob: -9.578078269958496
    6. '(u' → logprob: -11.078078269958496
    7. '((' → logprob: -11.078078269958496
    8. '(count' → logprob: -11.203078269958496
    9. '(max' → logprob: -11.203078269958496
    10. 'cnt' → logprob: -11.953078269958496

Token 528: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.25
    3. '(u' → logprob: -17.0
    4. 'uf' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '(U' → logprob: -18.375
    7. '(
' → logprob: -18.75
    8. '(ui' → logprob: -18.75
    9. ')(' → logprob: -19.125
    10. ')' → logprob: -19.25

Token 529: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0001170132018160075
    2. ' uf' → logprob: -9.125117301940918
    3. '(' → logprob: -11.750117301940918
    4. '.uf' → logprob: -17.2501163482666
    5. 'UF' → logprob: -18.0001163482666
    6. 'u' → logprob: -18.3751163482666
    7. ' ' → logprob: -18.6251163482666
    8. 'uff' → logprob: -18.6251163482666
    9. 'ufs' → logprob: -18.6251163482666
    10. ')' → logprob: -19.1251163482666

Token 530: '))' (ID: 915)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007859650067985058
    2. ')' → logprob: -4.882859706878662
    3. '))' → logprob: -8.382859230041504
    4. ')+' → logprob: -11.507859230041504
    5. 'uf' → logprob: -12.132859230041504
    6. ')`' → logprob: -12.382859230041504
    7. ' (' → logprob: -13.507859230041504
    8. ')-' → logprob: -13.757859230041504
    9. ')(' → logprob: -14.007859230041504
    10. '`)' → logprob: -14.632859230041504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 528
Tokens correctement prédits (1ère position, stricte): 266
Tokens correctement prédits (1ère position, avec adaptation): 268
Tokens correctement prédits (top 10): 440
Précision stricte (1ère position): 50.38%
Précision adaptée (1ère position): 50.76%
Précision (top 10): 83.33%
================================================================================
