================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import eq, itemgetter
from itertools import chain
from collections import deque
import sys

# Input parsing, exuberantly chained and map-lambda'd
n, m = map(int, sys.stdin.readline().split())
p = list(map(int, sys.stdin.readline().split()))
p = [0] + p  # Redundant but preserves original intent

# Graph build via nested comprehensions and a mapping from indices to sets for fun
edges = [tuple(map(int, sys.stdin.readline().split())) for _ in range(m)]
l = dict(zip(range(n + 1), [set() for _ in range(n + 1)]))
list(map(lambda e: [l[e[0]].add(e[1]), l[e[1]].add(e[0])], edges))

# Union-Find implemented with superfluous functional shenanigans and memoization
parents = list(range(n + 1))

def r(x):
    return x if parents[x] == x else (
        (lambda rx: [setitem(parents, x, rx), rx][-1])
        (r(parents[x]))
    )

def setitem(lst, i, v):
    lst[i] = v
    return lst

def d(x, y):
    return r(x) == r(y)

def u(x, y):
    a, b = r(x), r(y)
    a != b and setitem(parents, a, b)
    return parents

# Highly unnecessary recursive breadth-first search using generators and sets
visited = set()
def bfs(start):
    queue = deque([start])
    while queue:
        v = queue.popleft()
        for j in l[v]:
            if j not in visited:
                visited.add(j)
                u(j, start)
                queue.append(j)

list(map(lambda i: (i not in visited) and (visited.add(i), bfs(i)), range(1, n + 1)))

# Intricate reduce over zip to count fixed points in permutation
print(reduce(lambda acc, pair: acc + int(d(*pair)), zip(p[1:], range(1, n + 1)), 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.13064074516296387
    2. 'partial' → logprob: -2.630640745162964
    3. ' wraps' → logprob: -3.505640745162964
    4. 'reduce' → logprob: -4.005640983581543
    5. 'l' → logprob: -6.755640983581543
    6. ' partial' → logprob: -7.630640983581543
    7. 'cached' → logprob: -9.130640983581543
    8. 'cmp' → logprob: -9.380640983581543
    9. '```' → logprob: -9.380640983581543
    10. 'cache' → logprob: -9.380640983581543

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01442087721079588
    2. '(
' → logprob: -5.139420986175537
    3. '(lambda' → logprob: -5.389420986175537
    4. 'def' → logprob: -6.639420986175537
    5. ',' → logprob: -7.139420986175537
    6. '\' → logprob: -8.139420509338379
    7. ' ' → logprob: -8.264420509338379
    8. ' (' → logprob: -8.389420509338379
    9. '' → logprob: -9.139420509338379
    10. '
' → logprob: -9.139420509338379

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.044668834656476974
    2. 'import' → logprob: -3.6696689128875732
    3. '.' → logprob: -4.169668674468994
    4. ' ' → logprob: -6.044668674468994
    5. ' .' → logprob: -8.419669151306152
    6. '.import' → logprob: -9.169669151306152
    7. '	import' → logprob: -11.419669151306152
    8. '_import' → logprob: -11.544669151306152
    9. '<|end|>' → logprob: -11.794669151306152
    10. ' Import' → logprob: -13.169669151306152

Token 8: ' eq' (ID: 18955)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.22591231763362885
    2. ' import' → logprob: -1.97591233253479
    3. ' mul' → logprob: -3.60091233253479
    4. 'add' → logprob: -3.97591233253479
    5. ' ' → logprob: -4.350912094116211
    6. 'import' → logprob: -5.975912094116211
    7. 'mul' → logprob: -6.600912094116211
    8. ' item' → logprob: -8.100912094116211
    9. ' icon' → logprob: -9.475912094116211
    10. ' ad' → logprob: -10.100912094116211

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09127610921859741
    2. ',' → logprob: -2.591276168823242
    3. '(
' → logprob: -5.716276168823242
    4. '.' → logprob: -6.091276168823242
    5. ' (' → logprob: -6.591276168823242
    6. '\' → logprob: -6.841276168823242
    7. ')' → logprob: -7.216276168823242
    8. '\n' → logprob: -7.216276168823242
    9. ',
' → logprob: -7.591276168823242
    10. '[' → logprob: -7.716276168823242

Token 10: ' item' (ID: 2169)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.04531237855553627
    2. 'lt' → logprob: -4.170312404632568
    3. 'gt' → logprob: -4.920312404632568
    4. 'item' → logprob: -5.045312404632568
    5. 'ge' → logprob: -5.670312404632568
    6. 'le' → logprob: -5.920312404632568
    7. 'getitem' → logprob: -6.045312404632568
    8. 'is' → logprob: -6.170312404632568
    9. 'not' → logprob: -6.920312404632568
    10. 'contains' → logprob: -6.920312404632568

Token 11: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0015572358388453722
    2. 'get' → logprob: -6.501557350158691
    3. 'getitem' → logprob: -9.876557350158691
    4. 'gett' → logprob: -13.376557350158691
    5. 'item' → logprob: -14.001557350158691
    6. 'gets' → logprob: -14.501557350158691
    7. 'gt' → logprob: -15.501557350158691
    8. 'ge' → logprob: -16.001556396484375
    9. '_get' → logprob: -16.626556396484375
    10. 'Getter' → logprob: -17.001556396484375

Token 12: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21561725437641144
    2. '(
' → logprob: -2.4656171798706055
    3. ',' → logprob: -3.0906171798706055
    4. '\' → logprob: -3.5906171798706055
    5. '\n' → logprob: -4.2156171798706055
    6. ',
' → logprob: -4.9656171798706055
    7. '.' → logprob: -5.5906171798706055
    8. '(

' → logprob: -6.3406171798706055
    9. '`' → logprob: -6.8406171798706055
    10. 'def' → logprob: -7.0906171798706055

Token 13: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7796174883842468
    2. '(' → logprob: -1.4046175479888916
    3. ',
' → logprob: -1.9046175479888916
    4. '(
' → logprob: -3.0296175479888916
    5. ',

' → logprob: -3.2796175479888916
    6. '\n' → logprob: -4.2796173095703125
    7. 'def' → logprob: -4.4046173095703125
    8. '\' → logprob: -4.9046173095703125
    9. '```' → logprob: -5.0296173095703125
    10. '(

' → logprob: -5.5296173095703125

Token 14: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.050290048122406006
    2. ' collections' → logprob: -4.175290107727051
    3. 'operator' → logprob: -4.800290107727051
    4. 'collections' → logprob: -4.925290107727051
    5. ' operator' → logprob: -5.050290107727051
    6. ' math' → logprob: -5.925290107727051
    7. 'math' → logprob: -6.050290107727051
    8. 'it' → logprob: -6.050290107727051
    9. ' typing' → logprob: -6.675290107727051
    10. ' functools' → logprob: -7.050290107727051

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.058767568320035934
    2. 'import' → logprob: -3.058767557144165
    3. '.' → logprob: -4.683767795562744
    4. ' .' → logprob: -8.058767318725586
    5. ' ' → logprob: -8.183767318725586
    6. '.import' → logprob: -8.558767318725586
    7. '	import' → logprob: -10.308767318725586
    8. '.im' → logprob: -10.933767318725586
    9. ' itertools' → logprob: -11.683767318725586
    10. '_import' → logprob: -12.183767318725586

Token 16: ' chain' (ID: 13464)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.825570285320282
    2. 'is' → logprob: -2.2005703449249268
    3. 'product' → logprob: -2.5755703449249268
    4. 'count' → logprob: -2.5755703449249268
    5. 'chain' → logprob: -2.7005703449249268
    6. 'com' → logprob: -2.7005703449249268
    7. 'acc' → logprob: -3.0755703449249268
    8. 'per' → logprob: -3.2005703449249268
    9. ' group' → logprob: -3.5755703449249268
    10. 'filter' → logprob: -4.700570106506348

Token 17: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6599264740943909
    2. '(' → logprob: -1.159926414489746
    3. '(
' → logprob: -2.784926414489746
    4. ',
' → logprob: -3.409926414489746
    5. 'def' → logprob: -4.159926414489746
    6. '\n' → logprob: -4.409926414489746
    7. '\' → logprob: -4.409926414489746
    8. '.' → logprob: -4.909926414489746
    9. '(

' → logprob: -5.284926414489746
    10. '
' → logprob: -5.409926414489746

Token 18: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32966506481170654
    2. ',' → logprob: -1.7046650648117065
    3. '(
' → logprob: -3.329665184020996
    4. 'def' → logprob: -3.454665184020996
    5. ',
' → logprob: -4.329665184020996
    6. '.' → logprob: -5.079665184020996
    7. '(

' → logprob: -5.954665184020996
    8. ')' → logprob: -6.454665184020996
    9. ',

' → logprob: -6.579665184020996
    10. 'import' → logprob: -6.954665184020996

Token 19: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6206730008125305
    2. ' operator' → logprob: -1.4956729412078857
    3. 'collections' → logprob: -2.4956729412078857
    4. ' functools' → logprob: -2.8706729412078857
    5. ' more' → logprob: -3.2456729412078857
    6. 'operator' → logprob: -3.9956729412078857
    7. ' math' → logprob: -3.9956729412078857
    8. ' typing' → logprob: -4.870673179626465
    9. ' ' → logprob: -5.620673179626465
    10. ' built' → logprob: -5.870673179626465

Token 20: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07000267505645752
    2. ' import' → logprob: -2.695002555847168
    3. '.' → logprob: -10.695002555847168
    4. '```' → logprob: -10.695002555847168
    5. 'abc' → logprob: -11.195002555847168
    6. '	import' → logprob: -13.070002555847168
    7. '_import' → logprob: -13.945002555847168
    8. 's' → logprob: -14.695002555847168
    9. '.import' → logprob: -14.945002555847168
    10. 'from' → logprob: -15.070002555847168

Token 21: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.7179346680641174
    2. ' defaultdict' → logprob: -1.2179346084594727
    3. ' abc' → logprob: -1.8429346084594727
    4. 'deque' → logprob: -3.7179346084594727
    5. 'named' → logprob: -4.217934608459473
    6. 'default' → logprob: -4.842934608459473
    7. ' named' → logprob: -4.842934608459473
    8. ' deque' → logprob: -6.842934608459473
    9. ' Counter' → logprob: -6.967934608459473
    10. 'Counter' → logprob: -7.092934608459473

Token 22: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5691412687301636
    2. '

' → logprob: -1.4441412687301636
    3. '
' → logprob: -2.569141387939453
    4. ',' → logprob: -2.569141387939453
    5. '(' → logprob: -4.944141387939453
    6. '#' → logprob: -5.444141387939453
    7. ',
' → logprob: -5.569141387939453
    8. ',

' → logprob: -5.694141387939453
    9. '```' → logprob: -5.819141387939453
    10. '\n' → logprob: -5.944141387939453

Token 23: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22879627346992493
    2. ',' → logprob: -2.7287962436676025
    3. '

' → logprob: -2.7287962436676025
    4. '
' → logprob: -3.4787962436676025
    5. '```' → logprob: -4.228796482086182
    6. '#' → logprob: -5.603796482086182
    7. '\n' → logprob: -5.603796482086182
    8. ',
' → logprob: -5.853796482086182
    9. 'import' → logprob: -5.978796482086182
    10. ',

' → logprob: -6.103796482086182

Token 24: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.7735000848770142
    2. ' functools' → logprob: -1.8985000848770142
    3. ' collections' → logprob: -2.0234999656677246
    4. ' re' → logprob: -2.2734999656677246
    5. ' itertools' → logprob: -3.0234999656677246
    6. ' sys' → logprob: -3.0234999656677246
    7. ' ' → logprob: -3.5234999656677246
    8. ' math' → logprob: -3.8984999656677246
    9. ' operator' → logprob: -6.523499965667725
    10. ' abc' → logprob: -7.023499965667725

Token 25: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6437316536903381
    2. ',' → logprob: -2.1437315940856934
    3. '.' → logprob: -2.3937315940856934
    4. 'def' → logprob: -2.3937315940856934
    5. '

' → logprob: -2.7687315940856934
    6. '\n' → logprob: -3.6437315940856934
    7. '<|end|>' → logprob: -3.6437315940856934
    8. '[' → logprob: -4.643731594085693
    9. '#' → logprob: -4.643731594085693
    10. '\' → logprob: -4.768731594085693

Token 26: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026877345517277718
    2. 'class' → logprob: -4.526877403259277
    3. 'd' → logprob: -5.151877403259277
    4. '```' → logprob: -5.401877403259277
    5. '
' → logprob: -6.401877403259277
    6. 'de' → logprob: -7.151877403259277
    7. '#' → logprob: -7.401877403259277
    8. '`' → logprob: -7.526877403259277
    9. '\' → logprob: -7.651877403259277
    10. 'import' → logprob: -8.901877403259277

Token 27: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.542341411113739
    2. 'def' → logprob: -1.2923414707183838
    3. ' def' → logprob: -2.667341470718384
    4. 'class' → logprob: -3.417341470718384
    5. ' class' → logprob: -4.167341232299805
    6. '#' → logprob: -4.167341232299805
    7. ' #' → logprob: -5.292341232299805
    8. '_' → logprob: -6.667341232299805
    9. 'd' → logprob: -7.667341232299805
    10. ' 
' → logprob: -7.792341232299805

Token 28: ' parsing' (ID: 51039)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14774611592292786
    2. '()' → logprob: -3.0227460861206055
    3. '=' → logprob: -3.5227460861206055
    4. 'data' → logprob: -3.6477460861206055
    5. '_' → logprob: -4.7727460861206055
    6. 's' → logprob: -4.7727460861206055
    7. ' =' → logprob: -5.3977460861206055
    8. ':' → logprob: -5.7727460861206055
    9. ',' → logprob: -6.2727460861206055
    10. '[' → logprob: -6.5227460861206055

Token 29: ',' (ID: 11)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.12421818822622299
    2. 'input' → logprob: -2.874218225479126
    3. 'n' → logprob: -3.249218225479126
    4. 'for' → logprob: -4.499217987060547
    5. 'def' → logprob: -5.874217987060547
    6. ' data' → logprob: -6.624217987060547
    7. '```' → logprob: -6.749217987060547
    8. 's' → logprob: -6.874217987060547
    9. 'line' → logprob: -7.749217987060547
    10. 'user' → logprob: -8.124217987060547

Token 30: ' exuber' (ID: 144484)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.45020559430122375
    2. 'data' → logprob: -1.3252055644989014
    3. ' ' → logprob: -4.0752058029174805
    4. ' lines' → logprob: -4.2002058029174805
    5. 'def' → logprob: -4.8252058029174805
    6. 'n' → logprob: -4.9502058029174805
    7. ' tokens' → logprob: -5.5752058029174805
    8. ' input' → logprob: -5.7002058029174805
    9. ' def' → logprob: -5.7002058029174805
    10. ' n' → logprob: -5.8252058029174805

Token 31: 'antly' (ID: 29180)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2533770799636841
    2. 'ance' → logprob: -1.878377079963684
    3. 'antly' → logprob: -2.7533769607543945
    4. 'a' → logprob: -5.5033769607543945
    5. 'an' → logprob: -6.8783769607543945
    6. 'anc' → logprob: -7.6283769607543945
    7. 'd' → logprob: -7.7533769607543945
    8. 'ate' → logprob: -8.878376960754395
    9. ' ant' → logprob: -9.065876960754395
    10. 'ation' → logprob: -9.315876960754395

Token 32: ' chained' (ID: 147277)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2625006437301636
    2. ':' → logprob: -1.7625006437301636
    3. ',' → logprob: -1.8875006437301636
    4. 'data' → logprob: -2.762500762939453
    5. 'def' → logprob: -2.762500762939453
    6. '_' → logprob: -2.887500762939453
    7. 's' → logprob: -3.137500762939453
    8. ' for' → logprob: -3.262500762939453
    9. 'input' → logprob: -3.512500762939453
    10. '=' → logprob: -4.137500762939453

Token 33: ' and' (ID: 326)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.5490801334381104
    2. '(' → logprob: -1.7990801334381104
    3. 'data' → logprob: -1.9240801334381104
    4. ' =' → logprob: -1.9240801334381104
    5. 'lines' → logprob: -2.7990801334381104
    6. ',' → logprob: -3.2990801334381104
    7. '_' → logprob: -3.7990801334381104
    8. '=' → logprob: -3.9240801334381104
    9. ':' → logprob: -4.049079895019531
    10. 's' → logprob: -4.174079895019531

Token 34: ' map' (ID: 4014)
  Prédit: ' nested'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nested' → logprob: -1.408998966217041
    2. ' functional' → logprob: -2.408998966217041
    3. 'nested' → logprob: -2.658998966217041
    4. 'com' → logprob: -3.033998966217041
    5. 'split' → logprob: -3.283998966217041
    6. ' commented' → logprob: -3.471498966217041
    7. 'compressed' → logprob: -3.533998966217041
    8. 'functional' → logprob: -3.658998966217041
    9. 'validated' → logprob: -3.846498966217041
    10. 'filtered' → logprob: -3.908998966217041

Token 35: '-l' (ID: 2887)
  Prédit: 'ping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ping' → logprob: -0.40317076444625854
    2. '(' → logprob: -1.9031708240509033
    3. 's' → logprob: -2.6531708240509033
    4. '(lambda' → logprob: -2.7781708240509033
    5. 'per' → logprob: -4.028170585632324
    6. 'ped' → logprob: -4.403170585632324
    7. '(
' → logprob: -5.028170585632324
    8. '(p' → logprob: -5.278170585632324
    9. '(s' → logprob: -6.403170585632324
    10. 'pers' → logprob: -6.778170585632324

Token 36: 'ambda' (ID: 12104)
  Prédit: 'ambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.552284300327301
    2. 'amb' → logprob: -1.5522842407226562
    3. 'ine' → logprob: -1.9272842407226562
    4. 'ines' → logprob: -4.052284240722656
    5. 'ist' → logprob: -4.427284240722656
    6. 'map' → logprob: -4.677284240722656
    7. 'oad' → logprob: -5.677284240722656
    8. 'en' → logprob: -6.302284240722656
    9. 'am' → logprob: -6.552284240722656
    10. 'ib' → logprob: -6.739784240722656

Token 37: ''d' (ID: 11062)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07917717099189758
    2. '(' → logprob: -3.079177141189575
    3. '(
' → logprob: -4.079177379608154
    4. ',' → logprob: -6.204177379608154
    5. '(s' → logprob: -6.829177379608154
    6. ' =' → logprob: -6.829177379608154
    7. ' s' → logprob: -7.329177379608154
    8. ')' → logprob: -7.454177379608154
    9. ' (' → logprob: -7.454177379608154
    10. 'result' → logprob: -7.454177379608154

Token 38: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6233397722244263
    2. '(
' → logprob: -1.6233397722244263
    3. '(' → logprob: -1.9983397722244263
    4. 'lines' → logprob: -2.3733396530151367
    5. ',' → logprob: -2.7483396530151367
    6. ' lines' → logprob: -2.8733396530151367
    7. 'input' → logprob: -3.1233396530151367
    8. ':' → logprob: -3.2483396530151367
    9. 'data' → logprob: -3.4983396530151367
    10. 'def' → logprob: -4.123339653015137

Token 39: 'n' (ID: 77)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.063711404800415
    2. 'input' → logprob: -1.438711404800415
    3. 'lines' → logprob: -2.688711404800415
    4. 's' → logprob: -2.688711404800415
    5. ' lines' → logprob: -2.938711404800415
    6. ' data' → logprob: -2.938711404800415
    7. ' input' → logprob: -3.563711404800415
    8. 'inputs' → logprob: -3.563711404800415
    9. 'n' → logprob: -4.313711166381836
    10. 'a' → logprob: -4.688711166381836

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08015942573547363
    2. ',' → logprob: -3.3301594257354736
    3. '=' → logprob: -3.9551594257354736
    4. ' ' → logprob: -4.2051591873168945
    5. ' ,' → logprob: -4.9551591873168945
    6. '  ' → logprob: -10.330159187316895
    7. '=int' → logprob: -10.705159187316895
    8. ' =
' → logprob: -10.830159187316895
    9. '_' → logprob: -11.080159187316895
    10. 's' → logprob: -11.830159187316895

Token 41: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2088429927825928
    2. ' m' → logprob: -1.2088429927825928
    3. ' k' → logprob: -1.7088429927825928
    4. 'k' → logprob: -1.9588429927825928
    5. '*m' → logprob: -3.7088429927825928
    6. '*k' → logprob: -4.333843231201172
    7. '*' → logprob: -4.458843231201172
    8. 'q' → logprob: -5.583843231201172
    9. ' q' → logprob: -5.958843231201172
    10. '=' → logprob: -6.083843231201172

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06207568570971489
    2. '=' → logprob: -2.812075614929199
    3. ',' → logprob: -9.1870756149292
    4. '=input' → logprob: -12.9370756149292
    5. ' ' → logprob: -13.3120756149292
    6. ' =
' → logprob: -14.6870756149292
    7. '=int' → logprob: -14.8120756149292
    8. ')' → logprob: -15.5620756149292
    9. ' =
' → logprob: -16.187076568603516
    10. '=

' → logprob: -16.187076568603516

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10024808347225189
    2. 'map' → logprob: -2.350248098373413
    3. ' ' → logprob: -11.100248336791992
    4. ' list' → logprob: -11.600248336791992
    5. 'list' → logprob: -12.350248336791992
    6. '	map' → logprob: -12.475248336791992
    7. '[' → logprob: -13.225248336791992
    8. 'int' → logprob: -13.600248336791992
    9. '(map' → logprob: -13.975248336791992
    10. ' [' → logprob: -13.975248336791992

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0067864167504012585
    2. '(' → logprob: -5.006786346435547
    3. '(lambda' → logprob: -9.631786346435547
    4. '(str' → logprob: -12.756786346435547
    5. 'int' → logprob: -14.256786346435547
    6. '=int' → logprob: -14.506786346435547
    7. '<int' → logprob: -14.756786346435547
    8. '(
' → logprob: -14.881786346435547
    9. ' (' → logprob: -15.756786346435547
    10. '(input' → logprob: -16.131786346435547

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18857914209365845
    2. ',input' → logprob: -1.8135790824890137
    3. '(input' → logprob: -5.563579082489014
    4. '(' → logprob: -6.063579082489014
    5. '(sys' → logprob: -6.563579082489014
    6. 'input' → logprob: -7.063579082489014
    7. ',int' → logprob: -9.188579559326172
    8. ',(' → logprob: -9.688579559326172
    9. ' ,' → logprob: -9.813579559326172
    10. '=sys' → logprob: -10.563579559326172

Token 46: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4275743067264557
    2. 'input' → logprob: -1.1775742769241333
    3. ' sys' → logprob: -3.427574396133423
    4. ' input' → logprob: -4.927574157714844
    5. 'lambda' → logprob: -9.427574157714844
    6. '(sys' → logprob: -10.427574157714844
    7. ')' → logprob: -10.802574157714844
    8. '=sys' → logprob: -11.052574157714844
    9. 'str' → logprob: -11.802574157714844
    10. 'open' → logprob: -11.927574157714844

Token 47: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0023466343991458416
    2. '.' → logprob: -6.752346515655518
    3. '.argv' → logprob: -6.752346515655518
    4. '.readline' → logprob: -12.752346992492676
    5. '.stdout' → logprob: -12.877346992492676
    6. '.std' → logprob: -14.252346992492676
    7. ' .' → logprob: -15.502346992492676
    8. '.stderr' → logprob: -15.502346992492676
    9. '.input' → logprob: -15.877346992492676
    10. '._' → logprob: -15.877346992492676

Token 48: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0037728892639279366
    2. '.read' → logprob: -6.003772735595703
    3. '.stdin' → logprob: -7.003772735595703
    4. '.' → logprob: -8.128772735595703
    5. '.readlines' → logprob: -9.378772735595703
    6. '.input' → logprob: -12.753772735595703
    7. '.buffer' → logprob: -13.253772735595703
    8. '.argv' → logprob: -13.628772735595703
    9. ').' → logprob: -13.878772735595703
    10. ')' → logprob: -15.128772735595703

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00022010602697264403
    2. '()' → logprob: -9.12522029876709
    3. '())' → logprob: -9.12522029876709
    4. '()[' → logprob: -14.12522029876709
    5. '(' → logprob: -14.37522029876709
    6. ' ().' → logprob: -14.87522029876709
    7. ')' → logprob: -15.50022029876709
    8. '()).' → logprob: -15.87522029876709
    9. '()
' → logprob: -16.125219345092773
    10. '()))' → logprob: -17.125219345092773

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6958006024360657
    2. 'strip' → logprob: -0.6958006024360657
    3. 'read' → logprob: -6.57080078125
    4. 'rstrip' → logprob: -6.69580078125
    5. ' strip' → logprob: -12.19580078125
    6. ' split' → logprob: -12.32080078125
    7. ')' → logprob: -13.44580078125
    8. '(split' → logprob: -14.44580078125
    9. '().' → logprob: -14.44580078125
    10. '-strip' → logprob: -15.44580078125

Token 51: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027873005717992783
    2. '())' → logprob: -3.6528730392456055
    3. '()' → logprob: -6.6528730392456055
    4. '))' → logprob: -8.277873039245605
    5. '(' → logprob: -12.027873039245605
    6. ')
' → logprob: -12.402873039245605
    7. ')`' → logprob: -12.652873039245605
    8. '),' → logprob: -12.902873039245605
    9. '()))' → logprob: -13.152873039245605
    10. '`)' → logprob: -13.402873039245605

Token 52: 'p' (ID: 79)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2173864096403122
    2. 'data' → logprob: -2.217386484146118
    3. '\n' → logprob: -3.717386484146118
    4. ')' → logprob: -4.592386245727539
    5. ' 
' → logprob: -4.842386245727539
    6. 's' → logprob: -5.342386245727539
    7. 'n' → logprob: -5.342386245727539
    8. '
' → logprob: -5.592386245727539
    9. 'items' → logprob: -5.842386245727539
    10. '  
' → logprob: -5.967386245727539

Token 53: ' =' (ID: 314)
  Prédit: 'layers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layers' → logprob: -0.9293522834777832
    2. ' =' → logprob: -2.554352283477783
    3. 'aths' → logprob: -2.929352283477783
    4. 'l' → logprob: -3.054352283477783
    5. 'airs' → logprob: -3.054352283477783
    6. 'os' → logprob: -3.179352283477783
    7. 'laces' → logprob: -3.304352283477783
    8. 'erm' → logprob: -3.429352283477783
    9. 'ro' → logprob: -3.679352283477783
    10. 'ar' → logprob: -3.804352283477783

Token 54: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5115598440170288
    2. ' list' → logprob: -1.0115598440170288
    3. 'deque' → logprob: -4.386559963226318
    4. ' [' → logprob: -5.136559963226318
    5. ' deque' → logprob: -5.511559963226318
    6. 'map' → logprob: -5.511559963226318
    7. ' map' → logprob: -5.761559963226318
    8. '[' → logprob: -5.886559963226318
    9. '[]' → logprob: -6.011559963226318
    10. ' []' → logprob: -7.511559963226318

Token 55: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.389305979013443
    2. '(' → logprob: -1.1393059492111206
    3. '(chain' → logprob: -6.88930606842041
    4. '(int' → logprob: -7.26430606842041
    5. '(range' → logprob: -7.38930606842041
    6. '(filter' → logprob: -10.26430606842041
    7. '(lambda' → logprob: -10.88930606842041
    8. '(input' → logprob: -11.88930606842041
    9. '(s' → logprob: -12.13930606842041
    10. '(
' → logprob: -12.38930606842041

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000920869642868638
    2. '(' → logprob: -7.00092077255249
    3. '(lambda' → logprob: -11.875921249389648
    4. '(
' → logprob: -14.625921249389648
    5. '[int' → logprob: -14.750921249389648
    6. 'int' → logprob: -14.750921249389648
    7. '<int' → logprob: -15.375921249389648
    8. '(float' → logprob: -15.625921249389648
    9. ')' → logprob: -15.750921249389648
    10. '(str' → logprob: -15.750921249389648

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004386440385133028
    2. '(sys' → logprob: -5.5043864250183105
    3. '(' → logprob: -8.504386901855469
    4. ' ,' → logprob: -10.254386901855469
    5. 'sys' → logprob: -10.379386901855469
    6. '=sys' → logprob: -11.504386901855469
    7. ',input' → logprob: -11.629386901855469
    8. '(),' → logprob: -11.879386901855469
    9. ',int' → logprob: -12.879386901855469
    10. ',(' → logprob: -13.129386901855469

Token 58: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.021169891580939293
    2. ' sys' → logprob: -3.896169900894165
    3. '(sys' → logprob: -7.521169662475586
    4. 'input' → logprob: -10.521169662475586
    5. '=sys' → logprob: -10.771169662475586
    6. '	sys' → logprob: -11.021169662475586
    7. ')' → logprob: -11.146169662475586
    8. ' ' → logprob: -13.396169662475586
    9. '   ' → logprob: -13.521169662475586
    10. '.sys' → logprob: -14.521169662475586

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.7146746763028204e-05
    2. 'stdin' → logprob: -11.37503719329834
    3. '.readline' → logprob: -11.50003719329834
    4. '.stdout' → logprob: -11.50003719329834
    5. '(stdin' → logprob: -13.12503719329834
    6. '.' → logprob: -13.50003719329834
    7. '.std' → logprob: -14.25003719329834
    8. '.argv' → logprob: -14.25003719329834
    9. '.stderr' → logprob: -15.00003719329834
    10. ').' → logprob: -15.75003719329834

Token 60: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.5107177862082608e-05
    2. '().' → logprob: -11.375024795532227
    3. '.readlines' → logprob: -11.625024795532227
    4. '.read' → logprob: -13.250024795532227
    5. '.' → logprob: -13.500024795532227
    6. '.stdin' → logprob: -13.875024795532227
    7. '())' → logprob: -16.125024795532227
    8. '(stdin' → logprob: -16.125024795532227
    9. ')' → logprob: -16.625024795532227
    10. 'read' → logprob: -16.875024795532227

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0564331205387134e-05
    2. '()' → logprob: -11.50001049041748
    3. '.readline' → logprob: -15.75001049041748
    4. ' ().' → logprob: -15.75001049041748
    5. '()))' → logprob: -17.375011444091797
    6. '().__' → logprob: -17.875011444091797
    7. '(' → logprob: -17.875011444091797
    8. '())' → logprob: -18.000011444091797
    9. ')' → logprob: -18.250011444091797
    10. '()));' → logprob: -18.750011444091797

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006818497087806463
    2. 'strip' → logprob: -5.0068182945251465
    3. 'rstrip' → logprob: -9.256818771362305
    4. 'read' → logprob: -11.881818771362305
    5. ' split' → logprob: -14.256818771362305
    6. '(split' → logprob: -16.256818771362305
    7. ' strip' → logprob: -18.006818771362305
    8. 'spl' → logprob: -18.131818771362305
    9. 'decode' → logprob: -18.256818771362305
    10. 's' → logprob: -19.381818771362305

Token 63: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7008358836174011
    2. '()))' → logprob: -0.7008358836174011
    3. '())' → logprob: -5.325835704803467
    4. '()' → logprob: -6.575835704803467
    5. ')' → logprob: -6.700835704803467
    6. '(' → logprob: -8.825836181640625
    7. '()))
' → logprob: -11.575836181640625
    8. '()));' → logprob: -12.450836181640625
    9. ' ))' → logprob: -12.825836181640625
    10. '()),' → logprob: -13.825836181640625

Token 64: 'p' (ID: 79)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7649325132369995
    2. 'p' → logprob: -1.3899325132369995
    3. ')' → logprob: -1.6399325132369995
    4. 'd' → logprob: -4.014932632446289
    5. 'a' → logprob: -4.014932632446289
    6. '\n' → logprob: -4.764932632446289
    7. 'q' → logprob: -5.014932632446289
    8. '[' → logprob: -5.139932632446289
    9. '#' → logprob: -5.514932632446289
    10. 'm' → logprob: -6.014932632446289

Token 65: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' [' (ID: 723)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0000057220458984
    2. '[p' → logprob: -1.7500057220458984
    3. ' deque' → logprob: -2.1250057220458984
    4. '[' → logprob: -2.5000057220458984
    5. ' p' → logprob: -2.7500057220458984
    6. ' list' → logprob: -3.1250057220458984
    7. 'list' → logprob: -3.2500057220458984
    8. 'p' → logprob: -3.2500057220458984
    9. 'sorted' → logprob: -3.3750057220458984
    10. ' [' → logprob: -3.8750057220458984

Token 67: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03151867166161537
    2. 'i' → logprob: -3.9065186977386475
    3. 'pi' → logprob: -5.656518459320068
    4. '(x' → logprob: -5.906518459320068
    5. 'p' → logprob: -6.406518459320068
    6. '0' → logprob: -7.406518459320068
    7. '(i' → logprob: -7.906518459320068
    8. ' x' → logprob: -7.906518459320068
    9. '-' → logprob: -8.031518936157227
    10. 'xi' → logprob: -8.281518936157227

Token 68: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007633127737790346
    2. ']+' → logprob: -4.882633209228516
    3. ',' → logprob: -11.132633209228516
    4. ' ]' → logprob: -12.382633209228516
    5. '-' → logprob: -12.882633209228516
    6. ']-' → logprob: -13.882633209228516
    7. '()]' → logprob: -14.132633209228516
    8. '`]' → logprob: -14.132633209228516
    9. ']+=' → logprob: -14.382633209228516
    10. '+]' → logprob: -14.507633209228516

Token 69: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023133324459195137
    2. '+p' → logprob: -4.398133277893066
    3. ' +' → logprob: -4.648133277893066
    4. '*' → logprob: -7.398133277893066
    5. '+[' → logprob: -8.398133277893066
    6. '+m' → logprob: -9.898133277893066
    7. '*p' → logprob: -10.273133277893066
    8. '+n' → logprob: -10.773133277893066
    9. ']+' → logprob: -11.773133277893066
    10. ' *' → logprob: -12.023133277893066

Token 70: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004084808751940727
    2. ' p' → logprob: -5.504084587097168
    3. 'list' → logprob: -12.129084587097168
    4. '[' → logprob: -14.754084587097168
    5. '[p' → logprob: -14.879084587097168
    6. ' list' → logprob: -15.504084587097168
    7. ' [' → logprob: -17.129085540771484
    8. 'chain' → logprob: -17.379085540771484
    9. '	p' → logprob: -17.879085540771484
    10. ' ' → logprob: -18.379085540771484

Token 71: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' Red' (ID: 5952)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7305393218994141
    2. 'p' → logprob: -1.230539321899414
    3. '[' → logprob: -2.355539321899414
    4. ' [' → logprob: -3.105539321899414
    5. ' list' → logprob: -3.355539321899414
    6. 'list' → logprob: -3.355539321899414
    7. '[p' → logprob: -4.230539321899414
    8. '[-' → logprob: -7.355539321899414
    9. '#' → logprob: -7.980539321899414
    10. ' ' → logprob: -8.605539321899414

Token 74: 'undant' (ID: 170136)
  Prédit: 'irect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irect' → logprob: -0.24539171159267426
    2. 'uce' → logprob: -2.995391607284546
    3. 'irection' → logprob: -3.370391607284546
    4. 'is' → logprob: -3.370391607284546
    5. 'ef' → logprob: -3.870391607284546
    6. 'undant' → logprob: -3.870391607284546
    7. 'irected' → logprob: -3.870391607284546
    8. 'uced' → logprob: -4.495391845703125
    9. 'uction' → logprob: -4.870391845703125
    10. 'ux' → logprob: -5.370391845703125

Token 75: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' preserves' (ID: 139241)
  Prédit: ' convenient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convenient' → logprob: -0.3989679217338562
    2. 'con' → logprob: -2.773967981338501
    3. 'makes' → logprob: -3.148967981338501
    4. ' helps' → logprob: -3.398967981338501
    5. ' makes' → logprob: -3.523967981338501
    6. ' helpful' → logprob: -3.773967981338501
    7. ' useful' → logprob: -3.898967981338501
    8. 'helps' → logprob: -4.398967742919922
    9. 'use' → logprob: -4.523967742919922
    10. 'sometimes' → logprob: -4.898967742919922

Token 77: ' original' (ID: 4756)
  Prédit: ' indexing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.3262641131877899
    2. '1' → logprob: -1.7012641429901123
    3. 'index' → logprob: -3.7012641429901123
    4. ' ' → logprob: -4.076263904571533
    5. ' alignment' → logprob: -4.076263904571533
    6. 'alignment' → logprob: -4.201263904571533
    7. 'p' → logprob: -5.201263904571533
    8. ' p' → logprob: -5.576263904571533
    9. ' index' → logprob: -6.076263904571533
    10. ' the' → logprob: -6.076263904571533

Token 78: ' intent' (ID: 9841)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3673590123653412
    2. 's' → logprob: -2.617358922958374
    3. ' p' → logprob: -2.867358922958374
    4. '<|end|>' → logprob: -3.117358922958374
    5. 'positions' → logprob: -3.242358922958374
    6. 'indices' → logprob: -4.492359161376953
    7. '_p' → logprob: -4.617359161376953
    8. ' code' → logprob: -5.492359161376953
    9. '_positions' → logprob: -5.492359161376953
    10. '#' → logprob: -5.617359161376953

Token 79: '

' (ID: 279)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.166685938835144
    2. 'd' → logprob: -2.0416860580444336
    3. '
' → logprob: -2.4166860580444336
    4. '#' → logprob: -2.7916860580444336
    5. 'positions' → logprob: -3.1666860580444336
    6. 's' → logprob: -3.4166860580444336
    7. 'p' → logprob: -3.4166860580444336
    8. 'dist' → logprob: -3.9166860580444336
    9. 'visited' → logprob: -4.041686058044434
    10. 'b' → logprob: -4.166686058044434

Token 80: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6603251695632935
    2. 'a' → logprob: -2.035325050354004
    3. '#' → logprob: -2.535325050354004
    4. 'd' → logprob: -2.660325050354004
    5. 'visited' → logprob: -2.910325050354004
    6. 'dp' → logprob: -3.035325050354004
    7. 'positions' → logprob: -3.160325050354004
    8. 'b' → logprob: -3.410325050354004
    9. 'pos' → logprob: -3.410325050354004
    10. 'p' → logprob: -3.910325050354004

Token 81: ' Graph' (ID: 15559)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.300588846206665
    2. '#' → logprob: -1.925588846206665
    3. 'a' → logprob: -2.550588846206665
    4. 'adj' → logprob: -2.550588846206665
    5. 'edges' → logprob: -3.300588846206665
    6. 'dp' → logprob: -3.425588846206665
    7. 'pos' → logprob: -3.550588846206665
    8. 'd' → logprob: -3.675588846206665
    9. 'visited' → logprob: -3.925588846206665
    10. 'g' → logprob: -3.925588846206665

Token 82: ' build' (ID: 3024)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1799914836883545
    2. ' =' → logprob: -1.8049914836883545
    3. '=[]' → logprob: -9.554991722106934
    4. '_edges' → logprob: -9.804991722106934
    5. '=[' → logprob: -10.554991722106934
    6. 'edges' → logprob: -10.679991722106934
    7. 'adj' → logprob: -10.929991722106934
    8. '={' → logprob: -11.179991722106934
    9. 's' → logprob: -11.429991722106934
    10. '={}' → logprob: -11.929991722106934

Token 83: ' via' (ID: 4493)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4069133400917053
    2. 'g' → logprob: -2.0319132804870605
    3. 'adj' → logprob: -2.6569132804870605
    4. 'graph' → logprob: -2.9069132804870605
    5. ' edges' → logprob: -3.0319132804870605
    6. ' =' → logprob: -4.6569132804870605
    7. 's' → logprob: -4.7819132804870605
    8. ' adjacency' → logprob: -6.1569132804870605
    9. ':' → logprob: -6.2819132804870605
    10. '=' → logprob: -6.4069132804870605

Token 84: ' nested' (ID: 47576)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.34676429629325867
    2. '[' → logprob: -2.346764326095581
    3. 'adj' → logprob: -3.221764326095581
    4. 'default' → logprob: -3.346764326095581
    5. ' defaultdict' → logprob: -3.596764326095581
    6. 'deque' → logprob: -3.971764326095581
    7. 'list' → logprob: -4.346764087677002
    8. 'collections' → logprob: -4.471764087677002
    9. ' [[]' → logprob: -4.596764087677002
    10. 'sys' → logprob: -4.596764087677002

Token 85: ' compreh' (ID: 13576)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8451914191246033
    2. 'list' → logprob: -1.220191478729248
    3. ' loops' → logprob: -1.720191478729248
    4. 'loops' → logprob: -2.845191478729248
    5. 'map' → logprob: -4.345191478729248
    6. ' for' → logprob: -4.845191478729248
    7. 'loop' → logprob: -5.470191478729248
    8. ' list' → logprob: -6.095191478729248
    9. 'range' → logprob: -6.095191478729248
    10. '(lambda' → logprob: -6.470191478729248

Token 86: 'ensions' (ID: 7401)
  Prédit: 'ension'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ension' → logprob: -0.07918444275856018
    2. 'ensions' → logprob: -2.5791845321655273
    3. 'h' → logprob: -9.204184532165527
    4. 's' → logprob: -9.329184532165527
    5. '```' → logprob: -9.579184532165527
    6. '[' → logprob: -12.704184532165527
    7. 'ens' → logprob: -12.829184532165527
    8. 'hs' → logprob: -12.829184532165527
    9. '``' → logprob: -12.829184532165527
    10. 'e' → logprob: -12.954184532165527

Token 87: ' and' (ID: 326)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7521142363548279
    2. 'g' → logprob: -0.8771142363548279
    3. 'adj' → logprob: -3.0021142959594727
    4. 'edges' → logprob: -3.3771142959594727
    5. 'G' → logprob: -3.8771142959594727
    6. 'neighbors' → logprob: -6.377114295959473
    7. ' graph' → logprob: -6.752114295959473
    8. '```' → logprob: -7.377114295959473
    9. 'e' → logprob: -7.752114295959473
    10. 'E' → logprob: -7.752114295959473

Token 88: ' a' (ID: 261)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.0883896350860596
    2. 'chain' → logprob: -1.4633896350860596
    3. 'zip' → logprob: -3.0883896350860596
    4. 'default' → logprob: -3.0883896350860596
    5. 'deque' → logprob: -3.0883896350860596
    6. ' chain' → logprob: -3.2133896350860596
    7. 'range' → logprob: -3.4633896350860596
    8. 'list' → logprob: -3.7133896350860596
    9. 'adj' → logprob: -3.7133896350860596
    10. 'filter' → logprob: -3.8383896350860596

Token 89: ' mapping' (ID: 22573)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.7305837273597717
    2. 'd' → logprob: -0.9805837273597717
    3. 'dd' → logprob: -2.980583667755127
    4. 'pp' → logprob: -3.105583667755127
    5. 'p' → logprob: -5.105583667755127
    6. 'rray' → logprob: -5.605583667755127
    7. 'adj' → logprob: -5.605583667755127
    8. 'deque' → logprob: -5.605583667755127
    9. 'range' → logprob: -6.105583667755127
    10. 'ss' → logprob: -6.355583667755127

Token 90: ' from' (ID: 591)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9896374344825745
    2. 'graph' → logprob: -1.3646373748779297
    3. 'edges' → logprob: -1.6146373748779297
    4. 'adj' → logprob: -2.3646373748779297
    5. ' edges' → logprob: -4.23963737487793
    6. 'a' → logprob: -4.23963737487793
    7. 'p' → logprob: -4.73963737487793
    8. '[' → logprob: -4.73963737487793
    9. 'G' → logprob: -4.86463737487793
    10. ' graph' → logprob: -5.73963737487793

Token 91: ' indices' (ID: 30378)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1504916548728943
    2. '(range' → logprob: -3.150491714477539
    3. ' range' → logprob: -3.650491714477539
    4. '(i' → logprob: -4.150491714477539
    5. '(lambda' → logprob: -4.150491714477539
    6. 'lambda' → logprob: -4.275491714477539
    7. '(' → logprob: -5.525491714477539
    8. 'node' → logprob: -5.775491714477539
    9. 'i' → logprob: -5.900491714477539
    10. 'item' → logprob: -6.275491714477539

Token 92: ' to' (ID: 316)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.273103952407837
    2. 'p' → logprob: -1.523103952407837
    3. 'g' → logprob: -1.648103952407837
    4. '[' → logprob: -3.148103952407837
    5. 'adj' → logprob: -3.148103952407837
    6. ' edges' → logprob: -3.523103952407837
    7. ':' → logprob: -3.648103952407837
    8. ',' → logprob: -3.898103952407837
    9. 'graph' → logprob: -4.148103713989258
    10. 'G' → logprob: -4.523103713989258

Token 93: ' sets' (ID: 11982)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4999191462993622
    2. 'neighbors' → logprob: -1.9999191761016846
    3. 'edges' → logprob: -3.3749191761016846
    4. 'adj' → logprob: -3.6249191761016846
    5. 'p' → logprob: -3.6249191761016846
    6. ' range' → logprob: -3.8749191761016846
    7. 'vertices' → logprob: -4.1249189376831055
    8. 'lambda' → logprob: -4.4999189376831055
    9. '(lambda' → logprob: -4.6249189376831055
    10. ' edges' → logprob: -4.8749189376831055

Token 94: ' for' (ID: 395)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9503180980682373
    2. 'adj' → logprob: -1.5753180980682373
    3. 'graph' → logprob: -1.7003180980682373
    4. 'edges' → logprob: -1.9503180980682373
    5. 'G' → logprob: -4.075318336486816
    6. 'neighbors' → logprob: -4.825318336486816
    7. 'a' → logprob: -5.075318336486816
    8. 's' → logprob: -5.200318336486816
    9. 'e' → logprob: -5.200318336486816
    10. 'E' → logprob: -5.700318336486816

Token 95: ' fun' (ID: 2827)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.6960490345954895
    2. 'neighbors' → logprob: -1.5710489749908447
    3. ' neighbors' → logprob: -2.1960489749908447
    4. 'adj' → logprob: -3.1960489749908447
    5. 'range' → logprob: -3.4460489749908447
    6. ' range' → logprob: -3.8210489749908447
    7. ' edges' → logprob: -3.8210489749908447
    8. '_' → logprob: -4.321049213409424
    9. 'edges' → logprob: -4.446049213409424
    10. '_neighbors' → logprob: -5.071049213409424

Token 96: '
' (ID: 198)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.28824880719184875
    2. 'graph' → logprob: -1.9132487773895264
    3. 'edges' → logprob: -3.0382487773895264
    4. 'adj' → logprob: -3.1632487773895264
    5. 'G' → logprob: -5.6632490158081055
    6. 'e' → logprob: -5.7882490158081055
    7. 'neighbors' → logprob: -6.6632490158081055
    8. 'a' → logprob: -7.1632490158081055
    9. '```' → logprob: -7.5382490158081055
    10. '
' → logprob: -7.6632490158081055

Token 97: 'edges' (ID: 39127)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5524342060089111
    2. 'graph' → logprob: -1.3024342060089111
    3. 'edges' → logprob: -2.552434206008911
    4. 'adj' → logprob: -2.802434206008911
    5. 'G' → logprob: -5.552433967590332
    6. 'neighbors' → logprob: -5.677433967590332
    7. '```' → logprob: -6.927433967590332
    8. 'e' → logprob: -7.177433967590332
    9. ' graph' → logprob: -7.177433967590332
    10. ' edges' → logprob: -7.427433967590332

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523171603679657
    2. '=' → logprob: -0.898171603679657
    3. '=set' → logprob: -11.023171424865723
    4. '=[' → logprob: -11.398171424865723
    5. 's' → logprob: -12.023171424865723
    6. '=[]' → logprob: -13.273171424865723
    7. ' =[' → logprob: -13.273171424865723
    8. '=list' → logprob: -13.398171424865723
    9. ',' → logprob: -13.523171424865723
    10. ' ' → logprob: -13.523171424865723

Token 99: ' [' (ID: 723)
  Prédit: '[{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[{' → logprob: -0.6418473720550537
    2. '[' → logprob: -1.6418473720550537
    3. ' [' → logprob: -1.7668473720550537
    4. ' [{' → logprob: -2.7668473720550537
    5. '{' → logprob: -3.6418473720550537
    6. ' {' → logprob: -4.016847610473633
    7. '[[' → logprob: -7.641847610473633
    8. '[list' → logprob: -7.891847610473633
    9. '[(' → logprob: -8.266847610473633
    10. ' [[' → logprob: -8.891847610473633

Token 100: 'tuple' (ID: 52834)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.05817873403429985
    2. '(set' → logprob: -3.433178663253784
    3. '{' → logprob: -3.933178663253784
    4. 'tuple' → logprob: -6.433178901672363
    5. '[]' → logprob: -6.558178901672363
    6. ' set' → logprob: -8.683178901672363
    7. '{
' → logprob: -8.808178901672363
    8. '(i' → logprob: -8.933178901672363
    9. 'list' → logprob: -8.933178901672363
    10. '   ' → logprob: -9.183178901672363

Token 101: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6461220979690552
    2. '(sorted' → logprob: -0.8961220979690552
    3. '(chain' → logprob: -3.2711219787597656
    4. '(p' → logprob: -4.396121978759766
    5. '(item' → logprob: -5.646121978759766
    6. '(int' → logprob: -5.771121978759766
    7. '(range' → logprob: -5.896121978759766
    8. 'sorted' → logprob: -6.521121978759766
    9. 'map' → logprob: -6.521121978759766
    10. '(' → logprob: -6.646121978759766

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022517223842442036
    2. 'int' → logprob: -6.127251625061035
    3. '(' → logprob: -9.877251625061035
    4. '(lambda' → logprob: -12.127251625061035
    5. '(map' → logprob: -12.877251625061035
    6. ' int' → logprob: -13.377251625061035
    7. '<int' → logprob: -13.627251625061035
    8. 'lambda' → logprob: -14.252251625061035
    9. '[int' → logprob: -14.252251625061035
    10. ',int' → logprob: -14.502251625061035

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004058858612552285
    2. '(sys' → logprob: -8.375406265258789
    3. 'sys' → logprob: -8.750406265258789
    4. '=sys' → logprob: -12.000406265258789
    5. ' ,' → logprob: -12.625406265258789
    6. ',
' → logprob: -13.375406265258789
    7. ' sys' → logprob: -13.500406265258789
    8. ',input' → logprob: -14.375406265258789
    9. ',(' → logprob: -14.500406265258789
    10. ',s' → logprob: -14.750406265258789

Token 104: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.033948108553886414
    2. ' sys' → logprob: -3.4089481830596924
    3. 'x' → logprob: -9.408947944641113
    4. 'input' → logprob: -9.658947944641113
    5. 'line' → logprob: -9.783947944641113
    6. '(sys' → logprob: -11.033947944641113
    7. '   ' → logprob: -11.158947944641113
    8. ')' → logprob: -11.658947944641113
    9. ' ' → logprob: -11.783947944641113
    10. '))' → logprob: -12.033947944641113

Token 105: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.16024595499038696
    2. '.stdin' → logprob: -1.9102458953857422
    3. '=sys' → logprob: -11.660245895385742
    4. 'stdin' → logprob: -12.160245895385742
    5. 'sys' → logprob: -12.285245895385742
    6. '.stdout' → logprob: -13.660245895385742
    7. '(stdin' → logprob: -13.910245895385742
    8. '.readlines' → logprob: -15.410245895385742
    9. '```' → logprob: -15.660245895385742
    10. '.sys' → logprob: -15.660245895385742

Token 106: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: 0.0
    2. '.' → logprob: -17.125
    3. '.readlines' → logprob: -18.5
    4. ' readline' → logprob: -18.625
    5. '().' → logprob: -18.75
    6. '.read' → logprob: -18.75
    7. 'read' → logprob: -20.5
    8. '```' → logprob: -20.625
    9. 'buffer' → logprob: -22.25
    10. '.buffer' → logprob: -22.375

Token 107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.392202976712724e-06
    2. ' ().' → logprob: -12.500006675720215
    3. '()' → logprob: -13.125006675720215
    4. '.readline' → logprob: -15.000006675720215
    5. ' ' → logprob: -16.5000057220459
    6. ')' → logprob: -16.7500057220459
    7. '.' → logprob: -16.8750057220459
    8. '(' → logprob: -17.3750057220459
    9. ').' → logprob: -18.2500057220459
    10. '()
' → logprob: -18.6250057220459

Token 108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043829824426211417
    2. 'strip' → logprob: -7.750438213348389
    3. 'rstrip' → logprob: -12.375438690185547
    4. ' split' → logprob: -12.625438690185547
    5. ' ' → logprob: -17.125438690185547
    6. '.split' → logprob: -18.000438690185547
    7. '(split' → logprob: -18.500438690185547
    8. ' strip' → logprob: -18.625438690185547
    9. 'read' → logprob: -19.250438690185547
    10. '   ' → logprob: -20.750438690185547

Token 109: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006168505642563105
    2. '()))' → logprob: -5.131168365478516
    3. '))
' → logprob: -8.506168365478516
    4. '()))
' → logprob: -11.631168365478516
    5. ' ))' → logprob: -11.631168365478516
    6. ' ' → logprob: -11.756168365478516
    7. '()' → logprob: -11.881168365478516
    8. '))}
' → logprob: -13.631168365478516
    9. ')))' → logprob: -14.506168365478516
    10. ')' → logprob: -14.631168365478516

Token 110: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28361979126930237
    2. 'for' → logprob: -1.40861976146698
    3. ')' → logprob: -6.0336198806762695
    4. ' ' → logprob: -10.53361988067627
    5. '   ' → logprob: -10.90861988067627
    6. '()' → logprob: -11.15861988067627
    7. '	for' → logprob: -12.28361988067627
    8. ']' → logprob: -13.15861988067627
    9. ' )' → logprob: -13.40861988067627
    10. '  ' → logprob: -14.15861988067627

Token 111: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007964789867401123
    2. ' range' → logprob: -5.007964611053467
    3. 'range' → logprob: -6.882964611053467
    4. ' _' → logprob: -8.757965087890625
    5. '_range' → logprob: -9.632965087890625
    6. ' in' → logprob: -15.382965087890625
    7. '_in' → logprob: -15.757965087890625
    8. '	range' → logprob: -16.132965087890625
    9. '(range' → logprob: -16.382965087890625
    10. '_=' → logprob: -16.507965087890625

Token 112: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.48663565516471863
    2. 'in' → logprob: -0.986635684967041
    3. ' in' → logprob: -4.486635684967041
    4. ' range' → logprob: -6.736635684967041
    5. ' ' → logprob: -11.361635208129883
    6. '(range' → logprob: -11.861635208129883
    7. '_' → logprob: -12.361635208129883
    8. '  ' → logprob: -12.861635208129883
    9. 'n' → logprob: -13.736635208129883
    10. 'm' → logprob: -13.861635208129883

Token 113: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.5577775128767826e-06
    2. ' range' → logprob: -12.125005722045898
    3. '(range' → logprob: -16.2500057220459
    4. '	range' → logprob: -17.8750057220459
    5. 'rang' → logprob: -18.6250057220459
    6. '```' → logprob: -18.7500057220459
    7. '[' → logprob: -19.0000057220459
    8. 'r' → logprob: -19.2500057220459
    9. '
' → logprob: -20.0000057220459
    10. ')' → logprob: -20.3750057220459

Token 114: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.537180211627856e-05
    2. '(n' → logprob: -10.500045776367188
    3. 'm' → logprob: -11.250045776367188
    4. '(' → logprob: -12.375045776367188
    5. ' m' → logprob: -15.125045776367188
    6. ' (' → logprob: -15.875045776367188
    7. '	m' → logprob: -17.000045776367188
    8. 'n' → logprob: -17.500045776367188
    9. ')m' → logprob: -17.875045776367188
    10. '(M' → logprob: -18.750045776367188

Token 115: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019381542224436998
    2. ')' → logprob: -6.251938343048096
    3. ']' → logprob: -11.876937866210938
    4. ')])' → logprob: -14.251937866210938
    5. ')],' → logprob: -14.501937866210938
    6. ')]
' → logprob: -14.876937866210938
    7. ' )' → logprob: -15.001937866210938
    8. ')
' → logprob: -15.376937866210938
    9. '))' → logprob: -15.751937866210938
    10. ')][' → logprob: -16.376937866210938

Token 116: 'l' (ID: 75)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.40067824721336365
    2. 'adj' → logprob: -1.275678277015686
    3. 'g' → logprob: -3.2756781578063965
    4. 'neighbors' → logprob: -5.2756781578063965
    5. 'G' → logprob: -5.9006781578063965
    6. '#' → logprob: -5.9006781578063965
    7. '
' → logprob: -6.9006781578063965
    8. ' graph' → logprob: -8.650678634643555
    9. 'visited' → logprob: -8.650678634643555
    10. ')' → logprob: -8.650678634643555

Token 117: ' =' (ID: 314)
  Prédit: 'inks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inks' → logprob: -0.5635938048362732
    2. ' =' → logprob: -1.313593864440918
    3. 'ist' → logprob: -3.063593864440918
    4. 'abel' → logprob: -4.063593864440918
    5. '=' → logprob: -4.188593864440918
    6. 'ink' → logprob: -4.438593864440918
    7. 'eft' → logprob: -4.688593864440918
    8. 'ast' → logprob: -4.688593864440918
    9. 'og' → logprob: -5.063593864440918
    10. 'ists' → logprob: -5.188593864440918

Token 118: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18545317649841309
    2. '[{' → logprob: -2.310453176498413
    3. '[len' → logprob: -3.310453176498413
    4. '[list' → logprob: -3.685453176498413
    5. ' [' → logprob: -5.810453414916992
    6. 'list' → logprob: -6.060453414916992
    7. 'len' → logprob: -6.935453414916992
    8. '[n' → logprob: -7.310453414916992
    9. '{' → logprob: -8.060453414916992
    10. '[[' → logprob: -8.185453414916992

Token 119: '(zip' (ID: 87520)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5691429972648621
    2. '(chain' → logprob: -1.0691430568695068
    3. '()' → logprob: -3.069143056869507
    4. '(map' → logprob: -4.194142818450928
    5. '(en' → logprob: -4.319142818450928
    6. '(' → logprob: -4.569142818450928
    7. '([(' → logprob: -6.694142818450928
    8. '(item' → logprob: -7.444142818450928
    9. '(
' → logprob: -7.569142818450928
    10. '(zip' → logprob: -7.569142818450928

Token 120: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.014016937464475632
    2. '(p' → logprob: -4.514017105102539
    3. '(chain' → logprob: -6.014017105102539
    4. '(' → logprob: -8.264017105102539
    5. 'range' → logprob: -8.389017105102539
    6. '((' → logprob: -11.014017105102539
    7. '(map' → logprob: -12.514017105102539
    8. '(list' → logprob: -12.639017105102539
    9. 'p' → logprob: -12.764017105102539
    10. 'chain' → logprob: -13.639017105102539

Token 121: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023454172536730766
    2. '(n' → logprob: -3.773454189300537
    3. '(len' → logprob: -8.648453712463379
    4. '1' → logprob: -11.023453712463379
    5. 'n' → logprob: -11.523453712463379
    6. '(m' → logprob: -12.898453712463379
    7. '(l' → logprob: -13.773453712463379
    8. 'len' → logprob: -14.148453712463379
    9. ',' → logprob: -14.648453712463379
    10. '(
' → logprob: -15.148453712463379

Token 122: ' +' (ID: 659)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017444390105083585
    2. 'n' → logprob: -6.751744270324707
    3. ',' → logprob: -8.501744270324707
    4. '(n' → logprob: -8.626744270324707
    5. '+' → logprob: -9.751744270324707
    6. ')' → logprob: -10.376744270324707
    7. ' ),' → logprob: -10.751744270324707
    8. '1' → logprob: -11.251744270324707
    9. '(' → logprob: -11.251744270324707
    10. '),
' → logprob: -12.001744270324707

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -11.250028610229492
    3. '(' → logprob: -11.500028610229492
    4. 'm' → logprob: -12.875028610229492
    5. '(n' → logprob: -13.875028610229492
    6. 'n' → logprob: -13.875028610229492
    7. '(m' → logprob: -14.750028610229492
    8. 'len' → logprob: -15.375028610229492
    9. '2' → logprob: -16.125028610229492
    10. '0' → logprob: -16.375028610229492

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -12.500007629394531
    3. 'n' → logprob: -13.500007629394531
    4. '2' → logprob: -14.000007629394531
    5. 'm' → logprob: -14.250007629394531
    6. '0' → logprob: -15.500007629394531
    7. '   ' → logprob: -16.06250762939453
    8. '(' → logprob: -16.56250762939453
    9. '```' → logprob: -16.93750762939453
    10. 'len' → logprob: -17.00000762939453

Token 125: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0010088731069117785
    2. ',' → logprob: -7.001008987426758
    3. ' ),' → logprob: -9.751008987426758
    4. ',),' → logprob: -11.126008987426758
    5. ')' → logprob: -11.751008987426758
    6. '),
' → logprob: -12.126008987426758
    7. '),(' → logprob: -13.001008987426758
    8. '()),' → logprob: -13.251008987426758
    9. '},' → logprob: -13.626008987426758
    10. '],' → logprob: -14.001008987426758

Token 126: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12175760418176651
    2. '(map' → logprob: -2.7467575073242188
    3. 'map' → logprob: -3.3717575073242188
    4. '[{' → logprob: -4.621757507324219
    5. '({' → logprob: -5.996757507324219
    6. '(chain' → logprob: -6.746757507324219
    7. ' [' → logprob: -6.871757507324219
    8. 'chain' → logprob: -7.496757507324219
    9. '(' → logprob: -7.871757507324219
    10. ' map' → logprob: -8.371757507324219

Token 127: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0001290454383706674
    2. '{' → logprob: -9.625128746032715
    3. ' set' → logprob: -10.750128746032715
    4. '(set' → logprob: -11.000128746032715
    5. 'deque' → logprob: -11.625128746032715
    6. '{}' → logprob: -11.875128746032715
    7. '
' → logprob: -13.250128746032715
    8. '   ' → logprob: -13.375128746032715
    9. '[]' → logprob: -13.625128746032715
    10. 'fro' → logprob: -14.250128746032715

Token 128: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020587317645549774
    2. '()]' → logprob: -3.895587205886841
    3. '()
' → logprob: -11.270586967468262
    4. '([]' → logprob: -11.520586967468262
    5. ' ()' → logprob: -11.770586967468262
    6. '(),' → logprob: -12.645586967468262
    7. '())' → logprob: -13.645586967468262
    8. '()}' → logprob: -13.645586967468262
    9. '()]
' → logprob: -13.770586967468262
    10. '()

' → logprob: -14.145586967468262

Token 129: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000624514592345804
    2. 'for' → logprob: -7.750624656677246
    3. '()]' → logprob: -8.750624656677246
    4. ' for' → logprob: -10.875624656677246
    5. '()
' → logprob: -11.875624656677246
    6. ' ()' → logprob: -12.625624656677246
    7. '())' → logprob: -12.750624656677246
    8. '(),' → logprob: -14.500624656677246
    9. '()))' → logprob: -15.000624656677246
    10. '()])
' → logprob: -15.250624656677246

Token 130: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00041327282087877393
    2. ' _' → logprob: -7.875413417816162
    3. '_range' → logprob: -11.375412940979004
    4. 'range' → logprob: -12.125412940979004
    5. ' range' → logprob: -12.375412940979004
    6. '_in' → logprob: -13.000412940979004
    7. '_
' → logprob: -13.125412940979004
    8. ' in' → logprob: -13.125412940979004
    9. '_

' → logprob: -13.375412940979004
    10. '()' → logprob: -14.000412940979004

Token 131: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6694963574409485
    2. 'in' → logprob: -0.7944963574409485
    3. '_' → logprob: -4.044496536254883
    4. ' in' → logprob: -4.169496536254883
    5. ' range' → logprob: -5.919496536254883
    6. '(range' → logprob: -7.919496536254883
    7. '_range' → logprob: -9.419496536254883
    8. '_in' → logprob: -10.919496536254883
    9. 'i' → logprob: -11.294496536254883
    10. '...' → logprob: -11.419496536254883

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007210802752524614
    2. ' range' → logprob: -5.007210731506348
    3. '_' → logprob: -7.632210731506348
    4. '_range' → logprob: -12.757210731506348
    5. '(range' → logprob: -13.007210731506348
    6. '	range' → logprob: -13.757210731506348
    7. 'chain' → logprob: -14.257210731506348
    8. '[' → logprob: -14.507210731506348
    9. 'p' → logprob: -14.507210731506348
    10. ' ' → logprob: -14.882210731506348

Token 133: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009925569174811244
    2. 'n' → logprob: -7.000992774963379
    3. '(' → logprob: -9.625992774963379
    4. 'range' → logprob: -11.750992774963379
    5. '(range' → logprob: -13.000992774963379
    6. '((' → logprob: -13.250992774963379
    7. ' (' → logprob: -13.625992774963379
    8. ' n' → logprob: -14.000992774963379
    9. '
' → logprob: -15.500992774963379
    10. '(i' → logprob: -15.875992774963379

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038092438131570816
    2. ' +' → logprob: -3.2880923748016357
    3. '()+' → logprob: -11.413092613220215
    4. '(n' → logprob: -11.538092613220215
    5. ')])' → logprob: -12.038092613220215
    6. ')]' → logprob: -12.288092613220215
    7. '+
' → logprob: -12.413092613220215
    8. '(' → logprob: -12.413092613220215
    9. ')' → logprob: -12.663092613220215
    10. 'n' → logprob: -13.413092613220215

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.049755782238208e-05
    2. '(n' → logprob: -11.12505054473877
    3. '2' → logprob: -11.50005054473877
    4. '(' → logprob: -11.87505054473877
    5. '+' → logprob: -11.87505054473877
    6. ' ' → logprob: -12.12505054473877
    7. 'n' → logprob: -12.87505054473877
    8. '
' → logprob: -14.00005054473877
    9. '   ' → logprob: -14.12505054473877
    10. 'm' → logprob: -15.00005054473877

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021807955636177212
    2. '+' → logprob: -8.875218391418457
    3. '2' → logprob: -10.375218391418457
    4. 'n' → logprob: -11.125218391418457
    5. ' ' → logprob: -11.500218391418457
    6. '(n' → logprob: -11.750218391418457
    7. '(' → logprob: -11.875218391418457
    8. '
' → logprob: -13.875218391418457
    9. '   ' → logprob: -14.000218391418457
    10. '```' → logprob: -14.000218391418457

Token 137: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06511256843805313
    2. '])' → logprob: -3.190112590789795
    3. ']))' → logprob: -4.690112590789795
    4. ')])' → logprob: -4.815112590789795
    5. '])))' → logprob: -5.815112590789795
    6. '])]' → logprob: -7.315112590789795
    7. ']' → logprob: -8.065112113952637
    8. '()' → logprob: -8.565112113952637
    9. ')' → logprob: -8.690112113952637
    10. '])))
' → logprob: -9.565112113952637

Token 138: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.160358265042305
    2. '))
' → logprob: -1.9103583097457886
    3. ')' → logprob: -9.660358428955078
    4. '))

' → logprob: -10.410358428955078
    5. '))
' → logprob: -11.285358428955078
    6. ')))' → logprob: -11.785358428955078
    7. ' ))' → logprob: -12.160358428955078
    8. ' ))
' → logprob: -12.160358428955078
    9. '));' → logprob: -12.535358428955078
    10. ')
' → logprob: -13.285358428955078

Token 139: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023512568441219628
    2. ' for' → logprob: -8.750235557556152
    3. ')' → logprob: -9.500235557556152
    4. ')
' → logprob: -15.000235557556152
    5. '
' → logprob: -15.250235557556152
    6. ']' → logprob: -15.375235557556152
    7. '<|end|>' → logprob: -16.000234603881836
    8. '[' → logprob: -16.250234603881836
    9. 'i' → logprob: -16.250234603881836
    10. ';' → logprob: -16.375234603881836

Token 140: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6989273428916931
    2. '(chain' → logprob: -0.6989273428916931
    3. '(' → logprob: -5.948927402496338
    4. 'for' → logprob: -7.073927402496338
    5. '(l' → logprob: -7.448927402496338
    6. '(edges' → logprob: -7.698927402496338
    7. 'chain' → logprob: -8.07392692565918
    8. '(
' → logprob: -8.07392692565918
    9. 'map' → logprob: -8.69892692565918
    10. 'edges' → logprob: -9.19892692565918

Token 141: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.002350314985960722
    2. '(' → logprob: -6.127350330352783
    3. '(l' → logprob: -9.377349853515625
    4. '((' → logprob: -9.502349853515625
    5. '(
' → logprob: -12.502349853515625
    6. ' (' → logprob: -14.627349853515625
    7. 'lambda' → logprob: -15.002349853515625
    8. '```' → logprob: -15.502349853515625
    9. '(

' → logprob: -15.877349853515625
    10. '(operator' → logprob: -16.127349853515625

Token 142: ' e' (ID: 319)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1861983835697174
    2. 'lambda' → logprob: -2.1861984729766846
    3. ' lambda' → logprob: -3.4361984729766846
    4. ' (' → logprob: -4.9361982345581055
    5. 'x' → logprob: -5.1861982345581055
    6. 'e' → logprob: -5.3111982345581055
    7. '(' → logprob: -6.3111982345581055
    8. 'edge' → logprob: -6.9361982345581055
    9. ' x' → logprob: -7.0611982345581055
    10. ' e' → logprob: -7.3111982345581055

Token 143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2142510861158371
    2. ' :' → logprob: -2.2142510414123535
    3. ' e' → logprob: -2.8392510414123535
    4. 'e' → logprob: -4.4642510414123535
    5. ' lambda' → logprob: -5.5892510414123535
    6. ' l' → logprob: -5.7142510414123535
    7. 'lambda' → logprob: -6.7142510414123535
    8. '=lambda' → logprob: -6.8392510414123535
    9. ':l' → logprob: -7.2142510414123535
    10. ':e' → logprob: -7.9642510414123535

Token 144: ' [' (ID: 723)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.44642525911331177
    2. ' l' → logprob: -1.571425199508667
    3. '(l' → logprob: -2.071425199508667
    4. ' (' → logprob: -3.821425199508667
    5. '   ' → logprob: -5.946425437927246
    6. '(lambda' → logprob: -7.321425437927246
    7. '	l' → logprob: -8.446425437927246
    8. ' ' → logprob: -8.821425437927246
    9. '  ' → logprob: -8.946425437927246
    10. '    ' → logprob: -9.071425437927246

Token 145: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011850044131278992
    2. ' l' → logprob: -4.636849880218506
    3. '(l' → logprob: -6.386849880218506
    4. '   ' → logprob: -8.136850357055664
    5. ' (' → logprob: -10.136850357055664
    6. '	l' → logprob: -10.636850357055664
    7. ' ' → logprob: -11.386850357055664
    8. '
' → logprob: -11.511850357055664
    9. '  ' → logprob: -11.511850357055664
    10. '[l' → logprob: -11.886850357055664

Token 146: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0003265255654696375
    2. '[' → logprob: -8.250326156616211
    3. 'e' → logprob: -10.000326156616211
    4. '
' → logprob: -12.500326156616211
    5. '

' → logprob: -13.250326156616211
    6. '[l' → logprob: -13.375326156616211
    7. '[u' → logprob: -13.375326156616211
    8. ' [' → logprob: -13.875326156616211
    9. '.setdefault' → logprob: -13.875326156616211
    10. '```' → logprob: -13.875326156616211

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002647927321959287
    2. '[e' → logprob: -9.000265121459961
    3. '0' → logprob: -10.250265121459961
    4. '].' → logprob: -10.500265121459961
    5. 'e' → logprob: -10.625265121459961
    6. '1' → logprob: -11.000265121459961
    7. '][' → logprob: -11.625265121459961
    8. '[u' → logprob: -12.000265121459961
    9. '[i' → logprob: -12.750265121459961
    10. '.' → logprob: -13.125265121459961

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5481498837471008
    2. '[' → logprob: -1.048149824142456
    3. '1' → logprob: -2.673149824142456
    4. 'e' → logprob: -6.673150062561035
    5. ' ' → logprob: -8.923150062561035
    6. '2' → logprob: -9.173150062561035
    7. ']' → logprob: -9.423150062561035
    8. '```' → logprob: -9.485650062561035
    9. 'x' → logprob: -9.548150062561035
    10. '-' → logprob: -9.548150062561035

Token 149: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00014704519708175212
    2. '()].' → logprob: -9.000146865844727
    3. ']].' → logprob: -11.375146865844727
    4. '.add' → logprob: -12.750146865844727
    5. '[' → logprob: -13.250146865844727
    6. ''].' → logprob: -13.375146865844727
    7. '"].' → logprob: -13.625146865844727
    8. ' ].' → logprob: -13.750146865844727
    9. 'e' → logprob: -14.125146865844727
    10. ']' → logprob: -14.250146865844727

Token 150: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -7.465036105713807e-06
    2. ' add' → logprob: -12.625007629394531
    3. 'update' → logprob: -12.750007629394531
    4. '.add' → logprob: -13.750007629394531
    5. 'append' → logprob: -16.00000762939453
    6. ')add' → logprob: -18.00000762939453
    7. '
' → logprob: -18.62500762939453
    8. '	add' → logprob: -19.12500762939453
    9. '```' → logprob: -19.12500762939453
    10. '   ' → logprob: -19.37500762939453

Token 151: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.9862216504407115e-05
    2. '(' → logprob: -11.500020027160645
    3. ' (' → logprob: -11.875020027160645
    4. ')(' → logprob: -14.000020027160645
    5. '(
' → logprob: -14.500020027160645
    6. '((' → logprob: -14.750020027160645
    7. 'e' → logprob: -14.875020027160645
    8. '](' → logprob: -15.000020027160645
    9. ')' → logprob: -16.750019073486328
    10. ',' → logprob: -17.125019073486328

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005801965016871691
    2. '1' → logprob: -7.500580310821533
    3. ')' → logprob: -12.500579833984375
    4. 'e' → logprob: -12.500579833984375
    5. '[
' → logprob: -12.750579833984375
    6. '(' → logprob: -13.125579833984375
    7. ']' → logprob: -13.250579833984375
    8. '
' → logprob: -13.375579833984375
    9. '```' → logprob: -13.375579833984375
    10. '])' → logprob: -13.500579833984375

Token 153: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.596781946020201e-05
    2. '[' → logprob: -10.250045776367188
    3. ' ' → logprob: -12.250045776367188
    4. '])' → logprob: -14.000045776367188
    5. '```' → logprob: -14.187545776367188
    6. ']' → logprob: -14.250045776367188
    7. '-' → logprob: -14.500045776367188
    8. '

' → logprob: -14.562545776367188
    9. '
' → logprob: -14.750045776367188
    10. '   ' → logprob: -14.750045776367188

Token 154: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.036031387746334076
    2. ')' → logprob: -3.411031484603882
    3. ')],' → logprob: -6.786031246185303
    4. '),
' → logprob: -7.036031246185303
    5. ')]' → logprob: -8.411031723022461
    6. '()),' → logprob: -9.911031723022461
    7. ')])' → logprob: -10.536031723022461
    8. ')
' → logprob: -10.661031723022461
    9. ' ),' → logprob: -10.786031723022461
    10. '),

' → logprob: -11.786031723022461

Token 155: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.524921178817749
    2. 'l' → logprob: -0.899921178817749
    3. '        ' → logprob: -8.024921417236328
    4. '          ' → logprob: -8.024921417236328
    5. '         ' → logprob: -8.274921417236328
    6. '            ' → logprob: -8.649921417236328
    7. '           ' → logprob: -8.774921417236328
    8. '    ' → logprob: -9.149921417236328
    9. '      ' → logprob: -9.524921417236328
    10. '       ' → logprob: -9.899921417236328

Token 156: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -2.963691804325208e-05
    2. 'e' → logprob: -11.125029563903809
    3. '[' → logprob: -11.625029563903809
    4. ' [' → logprob: -13.500029563903809
    5. '][' → logprob: -13.875029563903809
    6. '

' → logprob: -14.000029563903809
    7. '
' → logprob: -14.125029563903809
    8. '[
' → logprob: -14.250029563903809
    9. '(e' → logprob: -14.625029563903809
    10. '```' → logprob: -15.750029563903809

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.200166469876422e-06
    2. '0' → logprob: -13.125004768371582
    3. '[
' → logprob: -13.750004768371582
    4. '1' → logprob: -14.500004768371582
    5. '][' → logprob: -14.750004768371582
    6. ']' → logprob: -15.750004768371582
    7. '
' → logprob: -16.2500057220459
    8. '```' → logprob: -16.3750057220459
    9. '.' → logprob: -16.5000057220459
    10. '...' → logprob: -16.5625057220459

Token 158: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013878924772143364
    2. '[' → logprob: -4.51387882232666
    3. '1' → logprob: -5.88887882232666
    4. '```' → logprob: -11.13887882232666
    5. '
' → logprob: -11.88887882232666
    6. '-' → logprob: -12.13887882232666
    7. ' ' → logprob: -12.26387882232666
    8. '(' → logprob: -12.45137882232666
    9. '   ' → logprob: -12.88887882232666
    10. '2' → logprob: -13.20137882232666

Token 159: ']].' (ID: 47690)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0004341261519584805
    2. '[' → logprob: -7.875433921813965
    3. ']' → logprob: -11.000433921813965
    4. ']].' → logprob: -11.000433921813965
    5. ' ].' → logprob: -11.125433921813965
    6. '][' → logprob: -13.375433921813965
    7. '0' → logprob: -14.000433921813965
    8. '.' → logprob: -14.000433921813965
    9. '[e' → logprob: -14.750433921813965
    10. ':].' → logprob: -14.750433921813965

Token 160: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.3213025744771585e-05
    2. '.add' → logprob: -10.625033378601074
    3. ' add' → logprob: -12.375033378601074
    4. '0' → logprob: -13.000033378601074
    5. '[' → logprob: -13.625033378601074
    6. '1' → logprob: -15.125033378601074
    7. '.' → logprob: -15.500033378601074
    8. ')add' → logprob: -16.000032424926758
    9. '(add' → logprob: -16.000032424926758
    10. '```' → logprob: -16.250032424926758

Token 161: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '(
' → logprob: -16.750003814697266
    4. ' (' → logprob: -17.000003814697266
    5. 'e' → logprob: -17.375003814697266
    6. '<|end|>' → logprob: -19.125003814697266
    7. '](' → logprob: -19.250003814697266
    8. '((' → logprob: -19.375003814697266
    9. ')(' → logprob: -20.125003814697266
    10. '```' → logprob: -20.750003814697266

Token 162: '[' (ID: 58)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.006036750040948391
    2. '[' → logprob: -5.631036758422852
    3. '(' → logprob: -6.881036758422852
    4. '[e' → logprob: -7.006036758422852
    5. 'e' → logprob: -7.631036758422852
    6. ' (' → logprob: -12.631036758422852
    7. ' e' → logprob: -13.381036758422852
    8. '](' → logprob: -13.506036758422852
    9. ']' → logprob: -13.756036758422852
    10. '(
' → logprob: -13.756036758422852

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00152009935118258
    2. '[' → logprob: -6.626520156860352
    3. 'e' → logprob: -9.126520156860352
    4. '(' → logprob: -10.001520156860352
    5. ' ' → logprob: -10.251520156860352
    6. ' e' → logprob: -13.501520156860352
    7. '   ' → logprob: -14.001520156860352
    8. '
' → logprob: -14.251520156860352
    9. '(e' → logprob: -15.126520156860352
    10. '  ' → logprob: -15.564020156860352

Token 164: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.29024645686149597
    2. ')])' → logprob: -1.6652464866638184
    3. ')]' → logprob: -3.2902464866638184
    4. ')],' → logprob: -4.290246486663818
    5. '])]' → logprob: -5.415246486663818
    6. ')' → logprob: -5.665246486663818
    7. '())' → logprob: -6.040246486663818
    8. '()' → logprob: -7.165246486663818
    9. ']])' → logprob: -8.04024600982666
    10. ']),' → logprob: -8.79024600982666

Token 165: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0005176475970074534
    2. '),' → logprob: -7.750517845153809
    3. ']' → logprob: -9.750517845153809
    4. ']),' → logprob: -11.375517845153809
    5. ',' → logprob: -12.375517845153809
    6. ')],' → logprob: -12.750517845153809
    7. '],
' → logprob: -13.000517845153809
    8. ' ],' → logprob: -13.125517845153809
    9. '()],' → logprob: -13.125517845153809
    10. ']))' → logprob: -13.875517845153809

Token 166: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.043014831840991974
    2. ' edges' → logprob: -3.1680147647857666
    3. '   ' → logprob: -11.918014526367188
    4. '(edges' → logprob: -12.168014526367188
    5. ' ' → logprob: -13.918014526367188
    6. '.edges' → logprob: -14.168014526367188
    7. 'edge' → logprob: -14.293014526367188
    8. '  ' → logprob: -15.043014526367188
    9. '    ' → logprob: -15.418014526367188
    10. 'Edges' → logprob: -15.418014526367188

Token 167: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.349075556499884e-05
    2. ')' → logprob: -9.7500638961792
    3. ')))' → logprob: -13.1250638961792
    4. '))
' → logprob: -13.2500638961792
    5. '));' → logprob: -14.6250638961792
    6. '),' → logprob: -15.0000638961792
    7. ' ))' → logprob: -15.1250638961792
    8. ')),' → logprob: -16.000062942504883
    9. '()))' → logprob: -17.000062942504883
    10. '))

' → logprob: -17.500062942504883

Token 168: '#' (ID: 2)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0692079067230225
    2. 'visited' → logprob: -1.1942079067230225
    3. 'for' → logprob: -2.9442079067230225
    4. 'd' → logprob: -3.3192079067230225
    5. 'res' → logprob: -3.5692079067230225
    6. '#' → logprob: -3.5692079067230225
    7. 'used' → logprob: -3.8192079067230225
    8. 'ans' → logprob: -3.9442079067230225
    9. 'v' → logprob: -4.194208145141602
    10. 'p' → logprob: -4.194208145141602

Token 169: ' Union' (ID: 14746)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6487381458282471
    2. '#' → logprob: -1.773738145828247
    3. 'q' → logprob: -1.898738145828247
    4. 'def' → logprob: -2.773738145828247
    5. 'seen' → logprob: -3.773738145828247
    6. 'dist' → logprob: -4.648737907409668
    7. 'vis' → logprob: -4.648737907409668
    8. 'used' → logprob: -5.148737907409668
    9. 'd' → logprob: -5.273737907409668
    10. 'queue' → logprob: -5.523737907409668

Token 170: '-F' (ID: 8074)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5431382656097412
    2. '-find' → logprob: -0.9181382656097412
    3. '_find' → logprob: -4.04313850402832
    4. ' find' → logprob: -6.66813850402832
    5. 'Find' → logprob: -7.04313850402832
    6. '-F' → logprob: -9.91813850402832
    7. '-' → logprob: -9.91813850402832
    8. '(find' → logprob: -12.54313850402832
    9. '_FIND' → logprob: -12.66813850402832
    10. ' Find' → logprob: -12.66813850402832

Token 171: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.00033045929740183055
    2. 'find' → logprob: -8.750330924987793
    3. '```' → logprob: -9.750330924987793
    4. 'or' → logprob: -10.250330924987793
    5. 'Find' → logprob: -11.000330924987793
    6. 'in' → logprob: -11.750330924987793
    7. 'i' → logprob: -12.000330924987793
    8. 'nd' → logprob: -12.125330924987793
    9. 'def' → logprob: -12.125330924987793
    10. 'set' → logprob: -12.250330924987793

Token 172: ' implemented' (ID: 20681)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6622341275215149
    2. 'parent' → logprob: -0.9122341275215149
    3. ' class' → logprob: -3.03723406791687
    4. ' parent' → logprob: -4.287234306335449
    5. '
' → logprob: -4.912234306335449
    6. 'parents' → logprob: -5.537234306335449
    7. 'data' → logprob: -5.662234306335449
    8. ' =' → logprob: -6.162234306335449
    9. 'par' → logprob: -6.412234306335449
    10. ' data' → logprob: -7.662234306335449

Token 173: ' with' (ID: 483)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2617344260215759
    2. 'parents' → logprob: -2.6367344856262207
    3. 'class' → logprob: -2.7617344856262207
    4. '_parent' → logprob: -3.1367344856262207
    5. ' parent' → logprob: -3.7617344856262207
    6. ' parents' → logprob: -4.636734485626221
    7. ' class' → logprob: -5.761734485626221
    8. 'data' → logprob: -5.886734485626221
    9. '
' → logprob: -6.011734485626221
    10. '(parent' → logprob: -6.511734485626221

Token 174: ' super' (ID: 2539)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.08064157515764236
    2. 'path' → logprob: -3.830641508102417
    3. ' parent' → logprob: -3.955641508102417
    4. 'parents' → logprob: -4.205641746520996
    5. 'list' → logprob: -4.955641746520996
    6. 'l' → logprob: -5.830641746520996
    7. 'a' → logprob: -6.080641746520996
    8. ' path' → logprob: -6.205641746520996
    9. 'class' → logprob: -6.330641746520996
    10. 'lambda' → logprob: -6.580641746520996

Token 175: 'flu' (ID: 32844)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2546713650226593
    2. 'root' → logprob: -3.004671335220337
    3. 'class' → logprob: -3.379671335220337
    4. 'linear' → logprob: -4.129671573638916
    5. 'visor' → logprob: -4.254671573638916
    6. 'def' → logprob: -4.379671573638916
    7. 'ior' → logprob: -4.504671573638916
    8. 'user' → logprob: -4.754671573638916
    9. 'lazy' → logprob: -4.754671573638916
    10. 'dict' → logprob: -5.129671573638916

Token 176: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -0.03654296696186066
    2. 'se' → logprob: -4.661542892456055
    3. 'uous' → logprob: -5.286542892456055
    4. 'lus' → logprob: -5.286542892456055
    5. 'us' → logprob: -6.161542892456055
    6. 'ise' → logprob: -6.536542892456055
    7. 'ously' → logprob: -6.536542892456055
    8. '```' → logprob: -6.911542892456055
    9. 's' → logprob: -7.036542892456055
    10. 'sed' → logprob: -7.161542892456055

Token 177: ' functional' (ID: 20483)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6422600150108337
    2. 'class' → logprob: -1.6422600746154785
    3. 'path' → logprob: -2.7672600746154785
    4. ' parent' → logprob: -3.2672600746154785
    5. 'parents' → logprob: -3.3922600746154785
    6. 'verbosity' → logprob: -4.2672600746154785
    7. ' class' → logprob: -4.5172600746154785
    8. 'functions' → logprob: -4.7672600746154785
    9. ' verbosity' → logprob: -4.7672600746154785
    10. 'depth' → logprob: -5.0172600746154785

Token 178: ' sh' (ID: 641)
  Prédit: 'style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'style' → logprob: -0.8572078943252563
    2. ' style' → logprob: -1.9822078943252563
    3. ' constructs' → logprob: -2.607207775115967
    4. 'def' → logprob: -3.232207775115967
    5. ' programming' → logprob: -3.357207775115967
    6. 'appro' → logprob: -3.482207775115967
    7. 'ism' → logprob: -3.732207775115967
    8. 'construct' → logprob: -3.982207775115967
    9. 'program' → logprob: -3.982207775115967
    10. 'wr' → logprob: -3.982207775115967

Token 179: 'enan' (ID: 102036)
  Prédit: 'ell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ell' → logprob: -0.6654016375541687
    2. 'ort' → logprob: -1.4154016971588135
    3. 'e' → logprob: -2.0404016971588135
    4. 'uffle' → logprob: -4.415401458740234
    5. 'orthand' → logprob: -4.415401458740234
    6. 'adow' → logprob: -4.665401458740234
    7. 'elf' → logprob: -4.665401458740234
    8. 'orth' → logprob: -4.790401458740234
    9. 'def' → logprob: -5.040401458740234
    10. 'uffling' → logprob: -5.665401458740234

Token 180: 'igans' (ID: 136884)
  Prédit: 'igans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igans' → logprob: -0.9886779189109802
    2. 'ell' → logprob: -1.113677978515625
    3. 'e' → logprob: -2.113677978515625
    4. 'ery' → logprob: -2.988677978515625
    5. 'elling' → logprob: -3.488677978515625
    6. 'u' → logprob: -3.988677978515625
    7. 'eries' → logprob: -4.238677978515625
    8. 'eing' → logprob: -4.988677978515625
    9. 'iffs' → logprob: -5.363677978515625
    10. 'uffles' → logprob: -5.488677978515625

Token 181: ' and' (ID: 326)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.014640684239566326
    2. 'parents' → logprob: -5.139640808105469
    3. 'fa' → logprob: -5.514640808105469
    4. 'uf' → logprob: -6.639640808105469
    5. 'class' → logprob: -6.764640808105469
    6. 'par' → logprob: -6.889640808105469
    7. ' parent' → logprob: -7.889640808105469
    8. 'f' → logprob: -8.014640808105469
    9. 'father' → logprob: -9.514640808105469
    10. 'find' → logprob: -9.514640808105469

Token 182: ' memo' (ID: 46393)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.9122349619865417
    2. 'reduce' → logprob: -1.7872350215911865
    3. 'lambda' → logprob: -2.1622350215911865
    4. 'map' → logprob: -2.9122350215911865
    5. 'l' → logprob: -3.5372350215911865
    6. 'side' → logprob: -3.5372350215911865
    7. 'class' → logprob: -3.6622350215911865
    8. 'a' → logprob: -3.9122350215911865
    9. 'list' → logprob: -4.162234783172607
    10. 'deque' → logprob: -4.412234783172607

Token 183: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.007948472164571285
    2. 'ized' → logprob: -5.007948398590088
    3. 'ize' → logprob: -7.257948398590088
    4. '=' → logprob: -9.132948875427246
    5. 'z' → logprob: -9.507948875427246
    6. 'r' → logprob: -9.507948875427246
    7. ' =' → logprob: -9.507948875427246
    8. '@' → logprob: -10.132948875427246
    9. 'def' → logprob: -10.757948875427246
    10. 'ry' → logprob: -10.882948875427246

Token 184: '
' (ID: 198)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.06745242327451706
    2. 'class' → logprob: -3.6924524307250977
    3. 'parents' → logprob: -3.8174524307250977
    4. 'fa' → logprob: -5.442452430725098
    5. 'par' → logprob: -5.442452430725098
    6. 'find' → logprob: -6.317452430725098
    7. 'uf' → logprob: -6.442452430725098
    8. 'f' → logprob: -6.442452430725098
    9. 'father' → logprob: -6.817452430725098
    10. 'p' → logprob: -7.317452430725098

Token 185: 'parents' (ID: 40404)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.012720598839223385
    2. 'parents' → logprob: -5.012720584869385
    3. 'class' → logprob: -5.762720584869385
    4. 'par' → logprob: -7.012720584869385
    5. 'fa' → logprob: -7.137720584869385
    6. 'uf' → logprob: -7.887720584869385
    7. 'root' → logprob: -8.637721061706543
    8. 'find' → logprob: -9.012721061706543
    9. 'from' → logprob: -9.262721061706543
    10. 'def' → logprob: -9.262721061706543

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931719779968262
    2. ' =' → logprob: -0.6931719779968262
    3. ',' → logprob: -11.568172454833984
    4. '=[]' → logprob: -12.068172454833984
    5. '=lambda' → logprob: -13.068172454833984
    6. '={}' → logprob: -13.443172454833984
    7. '=None' → logprob: -13.818172454833984
    8. ':' → logprob: -13.818172454833984
    9. ' ' → logprob: -13.943172454833984
    10. '=int' → logprob: -14.693172454833984

Token 187: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.027868136763572693
    2. '[' → logprob: -4.152868270874023
    3. '{' → logprob: -5.152868270874023
    4. '[-' → logprob: -6.152868270874023
    5. '{}' → logprob: -6.402868270874023
    6. '[list' → logprob: -6.652868270874023
    7. 'dict' → logprob: -7.777868270874023
    8. ' list' → logprob: -7.902868270874023
    9. ' [' → logprob: -10.152868270874023
    10. '{-' → logprob: -10.902868270874023

Token 188: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0002614550176076591
    2. 'range' → logprob: -8.250261306762695
    3. '(' → logprob: -16.750261306762695
    4. '(map' → logprob: -18.500261306762695
    5. ' range' → logprob: -19.000261306762695
    6. '(chain' → logprob: -19.625261306762695
    7. '	range' → logprob: -20.875261306762695
    8. '```' → logprob: -21.000261306762695
    9. '(
' → logprob: -21.125261306762695
    10. '(i' → logprob: -21.875261306762695

Token 189: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009200352360494435
    2. 'n' → logprob: -7.000919818878174
    3. '(' → logprob: -12.000920295715332
    4. '(len' → logprob: -13.500920295715332
    5. ' n' → logprob: -15.000920295715332
    6. ' (' → logprob: -15.000920295715332
    7. 'len' → logprob: -16.000919342041016
    8. '	n' → logprob: -16.125919342041016
    9. ')n' → logprob: -16.375919342041016
    10. '(
' → logprob: -17.750919342041016

Token 190: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023278793320059776
    2. ' +' → logprob: -3.7732787132263184
    3. '(n' → logprob: -11.148279190063477
    4. '+
' → logprob: -12.398279190063477
    5. '+n' → logprob: -12.398279190063477
    6. '))' → logprob: -12.773279190063477
    7. '
' → logprob: -13.398279190063477
    8. '(' → logprob: -13.398279190063477
    9. 'n' → logprob: -13.898279190063477
    10. '1' → logprob: -13.898279190063477

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002502535644453019
    2. '(n' → logprob: -9.375249862670898
    3. '+' → logprob: -9.625249862670898
    4. 'n' → logprob: -9.875249862670898
    5. ' ' → logprob: -10.500249862670898
    6. '(' → logprob: -11.000249862670898
    7. '-' → logprob: -13.625249862670898
    8. '2' → logprob: -14.750249862670898
    9. '```' → logprob: -15.125249862670898
    10. ' +' → logprob: -15.375249862670898

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001146291324403137
    2. '(n' → logprob: -9.625114440917969
    3. 'n' → logprob: -11.000114440917969
    4. '(' → logprob: -11.000114440917969
    5. '+' → logprob: -11.250114440917969
    6. ' ' → logprob: -13.250114440917969
    7. '2' → logprob: -15.875114440917969
    8. '```' → logprob: -16.62511444091797
    9. '-' → logprob: -17.12511444091797
    10. '
' → logprob: -17.25011444091797

Token 193: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5851770639419556
    2. '))
' → logprob: -0.8351770639419556
    3. '))

' → logprob: -4.710176944732666
    4. '))
' → logprob: -8.960177421569824
    5. ')' → logprob: -11.085177421569824
    6. ' ))
' → logprob: -11.585177421569824
    7. '))

' → logprob: -11.710177421569824
    8. '))


' → logprob: -11.960177421569824
    9. '));' → logprob: -12.085177421569824
    10. ')))' → logprob: -12.335177421569824

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007423263159580529
    2. ')' → logprob: -7.250742435455322
    3. '```' → logprob: -11.000741958618164
    4. '
' → logprob: -12.125741958618164
    5. ' def' → logprob: -13.500741958618164
    6. '#' → logprob: -13.500741958618164
    7. ')
' → logprob: -13.625741958618164
    8. '  
' → logprob: -14.375741958618164
    9. '   ' → logprob: -14.500741958618164
    10. 'for' → logprob: -14.750741958618164

Token 195: ' r' (ID: 428)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.002701089484617114
    2. ' find' → logprob: -6.252701282501221
    3. 'root' → logprob: -8.002700805664062
    4. 'get' → logprob: -9.002700805664062
    5. 'union' → logprob: -9.002700805664062
    6. 'uf' → logprob: -9.252700805664062
    7. '_find' → logprob: -10.127700805664062
    8. 'f' → logprob: -10.877700805664062
    9. 'finder' → logprob: -11.877700805664062
    10. 'parent' → logprob: -12.502700805664062

Token 196: '(x' (ID: 4061)
  Prédit: 'oot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oot' → logprob: -0.14200641214847565
    2. 'ef' → logprob: -2.1420063972473145
    3. 'e' → logprob: -5.2670063972473145
    4. 'ep' → logprob: -5.8920063972473145
    5. '(root' → logprob: -6.3920063972473145
    6. 'find' → logprob: -6.6420063972473145
    7. 'u' → logprob: -7.0170063972473145
    8. 'ec' → logprob: -7.1420063972473145
    9. 'ead' → logprob: -7.2670063972473145
    10. 'a' → logprob: -8.017006874084473

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1605721116065979
    2. '):
' → logprob: -1.9105720520019531
    3. ')' → logprob: -8.285572052001953
    4. '):
' → logprob: -9.660572052001953
    5. ' ):' → logprob: -11.035572052001953
    6. ':' → logprob: -11.910572052001953
    7. '):

' → logprob: -12.160572052001953
    8. ' ):
' → logprob: -13.785572052001953
    9. 'def' → logprob: -14.035572052001953
    10. '=' → logprob: -15.035572052001953

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6999298930168152
    2. ' if' → logprob: -0.6999298930168152
    3. 'if' → logprob: -5.824929714202881
    4. ' return' → logprob: -6.199929714202881
    5. ' while' → logprob: -6.449929714202881
    6. 'return' → logprob: -9.199930191040039
    7. '	if' → logprob: -10.449930191040039
    8. 'while' → logprob: -10.449930191040039
    9. '    ' → logprob: -11.574930191040039
    10. ' ' → logprob: -12.199930191040039

Token 199: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18912580609321594
    2. 'return' (adapté à ' return') → logprob: -1.9391257762908936
    3. 'while' → logprob: -3.6891257762908936
    4. ' if' → logprob: -6.314126014709473
    5. '   ' → logprob: -6.939126014709473
    6. ' return' → logprob: -7.439126014709473
    7. ' while' → logprob: -9.064126014709473
    8. '
' → logprob: -12.564126014709473
    9. 'parents' → logprob: -13.314126014709473
    10. '	if' → logprob: -14.189126014709473

Token 200: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01852424442768097
    2. 'parents' → logprob: -4.643524169921875
    3. 'r' → logprob: -5.018524169921875
    4. ' x' → logprob: -6.268524169921875
    5. ' parents' → logprob: -8.643524169921875
    6. ' r' → logprob: -10.643524169921875
    7. '(x' → logprob: -11.643524169921875
    8. 'par' → logprob: -12.268524169921875
    9. 'p' → logprob: -13.268524169921875
    10. 'parent' → logprob: -13.643524169921875

Token 201: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.012683751061558723
    2. 'if' → logprob: -4.387683868408203
    3. 'f' → logprob: -8.887683868408203
    4. '	if' → logprob: -12.262683868408203
    5. ' ' → logprob: -12.387683868408203
    6. 's' → logprob: -12.762683868408203
    7. 'parents' → logprob: -12.762683868408203
    8. '
' → logprob: -12.887683868408203
    9. 'x' → logprob: -12.887683868408203
    10. ' f' → logprob: -13.137683868408203

Token 202: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.0005986657342873514
    2. ' parents' → logprob: -7.500598430633545
    3. 'x' → logprob: -10.000598907470703
    4. 'par' → logprob: -15.750598907470703
    5. 'parent' → logprob: -16.500598907470703
    6. '.parents' → logprob: -16.625598907470703
    7. 'Parents' → logprob: -17.250598907470703
    8. '(par' → logprob: -17.750598907470703
    9. ' x' → logprob: -18.375598907470703
    10. '   ' → logprob: -18.750598907470703

Token 203: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -8.97155623533763e-05
    2. '[' → logprob: -9.500089645385742
    3. 'x' → logprob: -11.250089645385742
    4. '[parent' → logprob: -14.875089645385742
    5. '```' → logprob: -14.875089645385742
    6. '[p' → logprob: -15.000089645385742
    7. '[r' → logprob: -15.875089645385742
    8. '(x' → logprob: -15.875089645385742
    9. '[i' → logprob: -16.375089645385742
    10. '[
' → logprob: -16.375089645385742

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12693378329277039
    2. ']==' → logprob: -2.1269338130950928
    3. '==' → logprob: -12.376934051513672
    4. 'x' → logprob: -13.751934051513672
    5. '[' → logprob: -15.376934051513672
    6. ')==' → logprob: -16.376934051513672
    7. '']==' → logprob: -16.626934051513672
    8. ']!=' → logprob: -17.001934051513672
    9. ']=' → logprob: -17.751934051513672
    10. ')' → logprob: -18.126934051513672

Token 205: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008618000894784927
    2. ' ==' → logprob: -4.758617877960205
    3. ']==' → logprob: -13.633618354797363
    4. '==
' → logprob: -13.633618354797363
    5. '=' → logprob: -14.258618354797363
    6. '===' → logprob: -15.633618354797363
    7. 'x' → logprob: -15.633618354797363
    8. ')==' → logprob: -16.508617401123047
    9. '!=' → logprob: -16.758617401123047
    10. 'else' → logprob: -17.758617401123047

Token 206: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '	x' → logprob: -18.500431060791016
    4. ')x' → logprob: -19.250431060791016
    5. '
' → logprob: -20.500431060791016
    6. '<|end|>' → logprob: -20.875431060791016
    7. '(x' → logprob: -21.250431060791016
    8. ' ' → logprob: -21.875431060791016
    9. '   ' → logprob: -22.000431060791016
    10. '>x' → logprob: -22.375431060791016

Token 207: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931697130203247
    2. 'else' → logprob: -0.6931697130203247
    3. '   ' → logprob: -10.818169593811035
    4. '	else' → logprob: -13.193169593811035
    5. '    ' → logprob: -15.568169593811035
    6. ' ' → logprob: -15.943169593811035
    7. '  ' → logprob: -16.31817054748535
    8. ' or' → logprob: -17.69317054748535
    9. '_else' → logprob: -18.06817054748535
    10. 'or' → logprob: -18.06817054748535

Token 208: ' (
' (ID: 4112)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.030075011774897575
    2. ' r' → logprob: -3.5300750732421875
    3. ' parents' → logprob: -9.405075073242188
    4. 'parents' → logprob: -9.530075073242188
    5. '(r' → logprob: -9.780075073242188
    6. ' (' → logprob: -10.155075073242188
    7. '   ' → logprob: -10.155075073242188
    8. '(' → logprob: -11.155075073242188
    9. ' ' → logprob: -11.655075073242188
    10. '  ' → logprob: -12.905075073242188

Token 209: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03492121398448944
    2. 'parents' → logprob: -3.534921169281006
    3. ' r' → logprob: -6.284921169281006
    4. ' parents' → logprob: -6.534921169281006
    5. '   ' → logprob: -6.534921169281006
    6. ')' → logprob: -9.034921646118164
    7. ' ' → logprob: -9.909921646118164
    8. '  ' → logprob: -10.409921646118164
    9. '(r' → logprob: -10.409921646118164
    10. 'lambda' → logprob: -11.159921646118164

Token 210: ' (' (ID: 350)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.21358582377433777
    2. 'r' → logprob: -1.7135858535766602
    3. 'set' → logprob: -5.08858585357666
    4. ' parents' → logprob: -6.08858585357666
    5. '(lambda' → logprob: -7.08858585357666
    6. '   ' → logprob: -7.08858585357666
    7. 'lambda' → logprob: -7.33858585357666
    8. 'parent' → logprob: -9.08858585357666
    9. '(r' → logprob: -9.08858585357666
    10. ' ' → logprob: -9.21358585357666

Token 211: 'lambda' (ID: 35280)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.40956467390060425
    2. 'r' → logprob: -1.159564733505249
    3. 'lambda' → logprob: -4.28456449508667
    4. '(lambda' → logprob: -5.90956449508667
    5. ' parents' → logprob: -6.28456449508667
    6. 'p' → logprob: -7.03456449508667
    7. ')' → logprob: -7.03456449508667
    8. '   ' → logprob: -7.90956449508667
    9. 'x' → logprob: -8.034564971923828
    10. ' lambda' → logprob: -8.534564971923828

Token 212: ' rx' (ID: 37623)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8619225025177002
    2. 'parents' → logprob: -1.3619225025177002
    3. 'p' → logprob: -1.9869225025177002
    4. 'lambda' → logprob: -2.1119225025177
    5. 'r' → logprob: -3.3619225025177
    6. ' parents' → logprob: -5.111922264099121
    7. ' y' → logprob: -5.236922264099121
    8. 'px' → logprob: -5.236922264099121
    9. ' lambda' → logprob: -5.736922264099121
    10. 'v' → logprob: -5.986922264099121

Token 213: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004102623555809259
    2. '=' → logprob: -5.75410270690918
    3. ' :' → logprob: -7.50410270690918
    4. ':
' → logprob: -8.75410270690918
    5. ':=' → logprob: -9.37910270690918
    6. '=lambda' → logprob: -9.62910270690918
    7. 'r' → logprob: -11.50410270690918
    8. ':x' → logprob: -11.62910270690918
    9. '_:' → logprob: -12.00410270690918
    10. ':r' → logprob: -12.12910270690918

Token 214: ' [' (ID: 723)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.07832767814397812
    2. '(par' → logprob: -2.9533276557922363
    3. '[' → logprob: -4.953327655792236
    4. '   ' → logprob: -4.953327655792236
    5. ' parents' → logprob: -5.453327655792236
    6. '(
' → logprob: -7.078327655792236
    7. '           ' → logprob: -7.078327655792236
    8. ' (' → logprob: -7.328327655792236
    9. '       ' → logprob: -7.703327655792236
    10. '(lambda' → logprob: -8.578328132629395

Token 215: 'set' (ID: 977)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.01058802381157875
    2. 'set' → logprob: -5.5105881690979
    3. ' parents' → logprob: -6.2605881690979
    4. '(par' → logprob: -7.1355881690979
    5. '   ' → logprob: -7.5105881690979
    6. '(lambda' → logprob: -7.5105881690979
    7. 'r' → logprob: -7.7605881690979
    8. 'rx' → logprob: -7.7605881690979
    9. '[' → logprob: -8.010587692260742
    10. '(' → logprob: -8.010587692260742

Token 216: 'item' (ID: 2057)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.7136737704277039
    2. 'item' → logprob: -1.2136738300323486
    3. '(par' → logprob: -1.8386738300323486
    4. 'attr' → logprob: -3.9636738300323486
    5. 'par' → logprob: -4.4636735916137695
    6. '_par' → logprob: -4.8386735916137695
    7. 'default' → logprob: -5.0886735916137695
    8. '([' → logprob: -6.0886735916137695
    9. 'parent' → logprob: -6.5886735916137695
    10. '(lambda' → logprob: -6.7136735916137695

Token 217: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.0785355418920517
    2. 'parents' → logprob: -2.828535556793213
    3. ')' → logprob: -4.453535556793213
    4. ')(' → logprob: -6.328535556793213
    5. ',' → logprob: -6.703535556793213
    6. 'par' → logprob: -7.578535556793213
    7. ')(
' → logprob: -8.828535079956055
    8. '```' → logprob: -8.953535079956055
    9. '),' → logprob: -9.078535079956055
    10. ' (' → logprob: -9.328535079956055

Token 218: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.004285195842385292
    2. 'ent' → logprob: -6.8792853355407715
    3. 'nts' → logprob: -7.0042853355407715
    4. 'parents' → logprob: -7.7542853355407715
    5. ')' → logprob: -7.7542853355407715
    6. 's' → logprob: -8.379284858703613
    7. '   ' → logprob: -8.504284858703613
    8. 'ants' → logprob: -8.629284858703613
    9. '```' → logprob: -8.754284858703613
    10. '<|end|>' → logprob: -8.879284858703613

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023192723747342825
    2. ',x' → logprob: -7.5023193359375
    3. 'parents' → logprob: -7.6273193359375
    4. ' ,' → logprob: -8.1273193359375
    5. '),' → logprob: -8.2523193359375
    6. ',p' → logprob: -8.6273193359375
    7. ')' → logprob: -8.8773193359375
    8. ',
' → logprob: -9.3773193359375
    9. ',r' → logprob: -10.1273193359375
    10. 'import' → logprob: -10.1273193359375

Token 220: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13785909116268158
    2. 'rx' → logprob: -2.2628591060638428
    3. 'parents' → logprob: -4.137858867645264
    4. ')' → logprob: -5.512858867645264
    5. ')x' → logprob: -7.012858867645264
    6. ' x' → logprob: -7.387858867645264
    7. '[x' → logprob: -7.762858867645264
    8. '[' → logprob: -8.137859344482422
    9. '0' → logprob: -8.262859344482422
    10. ' parents' → logprob: -8.387859344482422

Token 221: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010602882131934166
    2. ',x' → logprob: -5.260602951049805
    3. ',r' → logprob: -6.260602951049805
    4. '(rx' → logprob: -6.510602951049805
    5. '),' → logprob: -7.260602951049805
    6. 'rx' → logprob: -8.010602951049805
    7. '(x' → logprob: -8.510602951049805
    8. ' ,' → logprob: -8.760602951049805
    9. 'x' → logprob: -8.885602951049805
    10. ')' → logprob: -9.635602951049805

Token 222: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0008456025971099734
    2. ' rx' → logprob: -7.375845432281494
    3. ')' → logprob: -9.750845909118652
    4. 'r' → logprob: -9.875845909118652
    5. '(rx' → logprob: -10.500845909118652
    6. '   ' → logprob: -10.750845909118652
    7. ']' → logprob: -11.250845909118652
    8. 'parents' → logprob: -11.625845909118652
    9. '
' → logprob: -11.875845909118652
    10. '])' → logprob: -12.375845909118652

Token 223: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2464337944984436
    2. ')]' → logprob: -2.371433734893799
    3. ')][' → logprob: -2.871433734893799
    4. ')' → logprob: -3.371433734893799
    5. ',' → logprob: -3.996433734893799
    6. ')],' → logprob: -5.246433734893799
    7. ')])' → logprob: -5.371433734893799
    8. '[' → logprob: -6.246433734893799
    9. '))' → logprob: -6.871433734893799
    10. ')[' → logprob: -7.621433734893799

Token 224: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.20953083038330078
    2. ' rx' → logprob: -2.459530830383301
    3. 'r' → logprob: -2.834530830383301
    4. 'parents' → logprob: -3.459530830383301
    5. ' parents' → logprob: -5.334530830383301
    6. 'lambda' → logprob: -6.084530830383301
    7. '(rx' → logprob: -7.084530830383301
    8. ')' → logprob: -7.209530830383301
    9. ']' → logprob: -7.709530830383301
    10. ' r' → logprob: -7.709530830383301

Token 225: '][-' (ID: 162298)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.059441857039928436
    2. '[' → logprob: -3.3094418048858643
    3. '])[' → logprob: -4.559442043304443
    4. '])' → logprob: -5.809442043304443
    5. ')][' → logprob: -5.934442043304443
    6. ']' → logprob: -6.059442043304443
    7. '][-' → logprob: -7.059442043304443
    8. ')[' → logprob: -7.434442043304443
    9. '
' → logprob: -8.059441566467285
    10. '],' → logprob: -8.559441566467285

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004080301150679588
    2. '2' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.379080772399902
    4. '   ' → logprob: -16.379079818725586
    5. '```' → logprob: -17.004079818725586
    6. '
' → logprob: -17.129079818725586
    7. ']' → logprob: -17.629079818725586
    8. '])' → logprob: -17.754079818725586
    9. '0' → logprob: -17.879079818725586
    10. 'len' → logprob: -17.879079818725586

Token 227: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.17409373819828033
    2. ']' → logprob: -2.924093723297119
    3. '](' → logprob: -3.549093723297119
    4. ')' → logprob: -3.799093723297119
    5. '])(' → logprob: -4.049093723297119
    6. ']))' → logprob: -4.174093723297119
    7. ')])' → logprob: -4.424093723297119
    8. '])
' → logprob: -5.549093723297119
    9. '(' → logprob: -6.924093723297119
    10. ']
' → logprob: -7.049093723297119

Token 228: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9573116302490234
    2. ')' → logprob: -1.3323116302490234
    3. '(x' → logprob: -1.9573116302490234
    4. ')(' → logprob: -2.3323116302490234
    5. '   ' → logprob: -3.5823116302490234
    6. ')(
' → logprob: -3.5823116302490234
    7. '(
' → logprob: -3.7073116302490234
    8. 'import' → logprob: -5.457311630249023
    9. '[' → logprob: -5.457311630249023
    10. ',' → logprob: -5.707311630249023

Token 229: ' (' (ID: 350)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -1.0587104558944702
    2. '(x' → logprob: -1.4337104558944702
    3. ')' → logprob: -2.3087105751037598
    4. '(' (adapté à ' (') → logprob: -2.5587105751037598
    5. '(lambda' → logprob: -2.9337105751037598
    6. ')(
' → logprob: -2.9337105751037598
    7. '[' → logprob: -3.4337105751037598
    8. '(
' → logprob: -3.6837105751037598
    9. '   ' → logprob: -3.9337105751037598
    10. '(rx' → logprob: -4.80871057510376

Token 230: 'r' (ID: 81)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.4792827367782593
    2. 'r' → logprob: -0.9792827367782593
    3. ' parents' → logprob: -5.854282855987549
    4. 'lambda' → logprob: -6.604282855987549
    5. ' r' → logprob: -8.10428237915039
    6. ')' → logprob: -8.22928237915039
    7. '(lambda' → logprob: -9.72928237915039
    8. '(' → logprob: -9.97928237915039
    9. 'parent' → logprob: -10.22928237915039
    10. '   ' → logprob: -10.22928237915039

Token 231: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.0007451872224919498
    2. 'parents' → logprob: -7.2507452964782715
    3. ')' → logprob: -11.875744819641113
    4. '(' → logprob: -12.250744819641113
    5. '(paren' → logprob: -12.250744819641113
    6. ' (' → logprob: -12.625744819641113
    7. ' parents' → logprob: -12.750744819641113
    8. 'par' → logprob: -12.875744819641113
    9. '(parent' → logprob: -13.000744819641113
    10. '(x' → logprob: -13.125744819641113

Token 232: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.000227496653678827
    2. '[x' → logprob: -8.625227928161621
    3. '(x' → logprob: -11.250227928161621
    4. 'e' → logprob: -11.750227928161621
    5. 'x' → logprob: -11.750227928161621
    6. '[' → logprob: -11.875227928161621
    7. 'ent' → logprob: -12.250227928161621
    8. 'parents' → logprob: -13.250227928161621
    9. 'nts' → logprob: -13.250227928161621
    10. '   ' → logprob: -13.625227928161621

Token 233: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0026896751951426268
    2. 'x' → logprob: -6.127689838409424
    3. '[' → logprob: -8.002689361572266
    4. ')x' → logprob: -10.127689361572266
    5. '(x' → logprob: -10.252689361572266
    6. ')' → logprob: -10.252689361572266
    7. ',x' → logprob: -11.377689361572266
    8. '[parent' → logprob: -11.627689361572266
    9. ' x' → logprob: -12.002689361572266
    10. '```' → logprob: -12.377689361572266

Token 234: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.38516879081726074
    2. '])' → logprob: -1.2601687908172607
    3. ')])' → logprob: -4.63516902923584
    4. ')]' → logprob: -4.63516902923584
    5. '])))' → logprob: -4.76016902923584
    6. '))' → logprob: -5.63516902923584
    7. ']))
' → logprob: -6.26016902923584
    8. ')' → logprob: -7.38516902923584
    9. ')))' → logprob: -7.38516902923584
    10. '])
' → logprob: -8.01016902923584

Token 235: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009590452536940575
    2. '))' → logprob: -4.7595906257629395
    3. '   ' → logprob: -7.1345906257629395
    4. ')))' → logprob: -9.009590148925781
    5. '       ' → logprob: -10.259590148925781
    6. ')
' → logprob: -11.384590148925781
    7. ' )' → logprob: -12.759590148925781
    8. 'def' → logprob: -13.384590148925781
    9. '  ' → logprob: -14.259590148925781
    10. ' ' → logprob: -14.509590148925781

Token 236: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029351349803619087
    2. '))' → logprob: -8.250293731689453
    3. '   ' → logprob: -10.875293731689453
    4. ')
' → logprob: -12.125293731689453
    5. ')))' → logprob: -12.875293731689453
    6. ' )' → logprob: -13.000293731689453
    7. 'def' → logprob: -13.500293731689453
    8. '       ' → logprob: -14.875293731689453
    9. ' ' → logprob: -15.000293731689453
    10. ')

' (adapté à ' )

') → logprob: -15.250293731689453

Token 237: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10433212667703629
    2. '(' → logprob: -2.604332208633423
    3. '[' → logprob: -4.229331970214844
    4. ':' → logprob: -6.229331970214844
    5. '   ' → logprob: -6.479331970214844
    6. '(
' → logprob: -6.604331970214844
    7. 'def' → logprob: -6.604331970214844
    8. ' ' → logprob: -7.229331970214844
    9. 'import' → logprob: -7.479331970214844
    10. ' (' → logprob: -7.604331970214844

Token 238: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6616689562797546
    2. 'union' → logprob: -0.7866689562797546
    3. ' union' → logprob: -4.28666877746582
    4. ' set' → logprob: -4.78666877746582
    5. 'u' → logprob: -5.78666877746582
    6. 'un' → logprob: -6.53666877746582
    7. 's' → logprob: -7.28666877746582
    8. ' unite' → logprob: -7.66166877746582
    9. 'find' → logprob: -7.91166877746582
    10. '_union' → logprob: -9.16166877746582

Token 239: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.00018077615823131055
    2. '_item' → logprob: -8.750181198120117
    3. 'attr' → logprob: -11.125181198120117
    4. 'uptools' → logprob: -13.125181198120117
    5. 'def' → logprob: -13.500181198120117
    6. 'items' → logprob: -13.625181198120117
    7. ' item' → logprob: -14.250181198120117
    8. 'getitem' → logprob: -15.125181198120117
    9. '(item' → logprob: -15.250181198120117
    10. '-item' → logprob: -15.250181198120117

Token 240: '(lst' (ID: 95688)
  Prédit: '(par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(par' → logprob: -0.002162752440199256
    2. '(' → logprob: -6.502162933349609
    3. '(obj' → logprob: -8.75216293334961
    4. '(l' → logprob: -9.25216293334961
    5. '(paren' → logprob: -9.25216293334961
    6. '(lambda' → logprob: -9.50216293334961
    7. 'import' → logprob: -10.00216293334961
    8. '(import' → logprob: -10.62716293334961
    9. '(object' → logprob: -10.87716293334961
    10. '<|end|>' → logprob: -11.00216293334961

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028529314324259758
    2. ')' → logprob: -4.778529167175293
    3. '(lst' → logprob: -4.903529167175293
    4. '<|end|>' → logprob: -4.903529167175293
    5. '):
' → logprob: -6.403529167175293
    6. '):' → logprob: -7.153529167175293
    7. '   ' → logprob: -7.528529167175293
    8. '<|end|>' → logprob: -7.778529167175293
    9. ',l' → logprob: -8.278529167175293
    10. '):

' → logprob: -8.653529167175293

Token 242: ' i' (ID: 575)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2301870584487915
    2. 'idx' → logprob: -1.7301870584487915
    3. 'i' → logprob: -3.730186939239502
    4. ' index' → logprob: -5.855186939239502
    5. ' idx' → logprob: -6.605186939239502
    6. ' i' → logprob: -9.60518741607666
    7. 'key' → logprob: -10.48018741607666
    8. 'indx' → logprob: -10.60518741607666
    9. 'ix' → logprob: -11.85518741607666
    10. 'inx' → logprob: -11.98018741607666

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -12.12501049041748
    3. ',value' → logprob: -13.00001049041748
    4. ',val' → logprob: -14.00001049041748
    5. ',i' → logprob: -14.50001049041748
    6. '   ' → logprob: -15.00001049041748
    7. '‌,' → logprob: -16.125009536743164
    8. ',obj' → logprob: -16.125009536743164
    9. ',item' → logprob: -16.125009536743164
    10. '),' → logprob: -16.375009536743164

Token 244: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0032614883966743946
    2. 'val' → logprob: -5.753261566162109
    3. 'value' → logprob: -10.25326156616211
    4. ' v' → logprob: -10.50326156616211
    5. 'x' → logprob: -10.87826156616211
    6. ' val' → logprob: -13.25326156616211
    7. 'b' → logprob: -15.62826156616211
    8. '	v' → logprob: -15.75326156616211
    9. 'y' → logprob: -16.87826156616211
    10. 'item' → logprob: -17.12826156616211

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02985045313835144
    2. '):
' → logprob: -3.529850482940674
    3. '):
' → logprob: -9.529850006103516
    4. ')' → logprob: -10.654850006103516
    5. '):

' → logprob: -13.154850006103516
    6. ' ):' → logprob: -13.654850006103516
    7. ']:' → logprob: -15.779850006103516
    8. ':' → logprob: -16.279850006103516
    9. ' ' → logprob: -16.654850006103516
    10. ')：' → logprob: -16.654850006103516

Token 246: '   ' (ID: 271)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.3304729461669922
    2. ' lst' → logprob: -1.3304729461669922
    3. '   ' → logprob: -4.080472946166992
    4. 'def' → logprob: -9.830472946166992
    5. '```' → logprob: -9.830472946166992
    6. '(lst' → logprob: -10.705472946166992
    7. '_lst' → logprob: -10.955472946166992
    8. 'l' → logprob: -12.455472946166992
    9. '	l' → logprob: -12.580472946166992
    10. '   ' → logprob: -12.705472946166992

Token 247: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.004102977458387613
    2. ' lst' → logprob: -5.504103183746338
    3. '   ' → logprob: -10.75410270690918
    4. 'def' → logprob: -13.37910270690918
    5. 'while' → logprob: -14.75410270690918
    6. '_lst' → logprob: -15.12910270690918
    7. '
' → logprob: -15.37910270690918
    8. '(lst' → logprob: -15.37910270690918
    9. '```' → logprob: -15.75410270690918
    10. '.lst' → logprob: -16.37910270690918

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08970563858747482
    2. '.__' → logprob: -2.4647057056427
    3. '__' → logprob: -7.464705467224121
    4. '[' → logprob: -8.964705467224121
    5. ' __' → logprob: -11.089705467224121
    6. '```' → logprob: -11.089705467224121
    7. ',i' → logprob: -12.339705467224121
    8. '[:]' → logprob: -12.464705467224121
    9. '   ' → logprob: -12.589705467224121
    10. '[int' → logprob: -12.589705467224121

Token 249: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002799279463943094
    2. ']=' → logprob: -8.250280380249023
    3. ' ]' → logprob: -11.625280380249023
    4. ')' → logprob: -11.625280380249023
    5. '])' → logprob: -14.500280380249023
    6. ']
' → logprob: -15.875280380249023
    7. '=' → logprob: -16.125280380249023
    8. ']

' → logprob: -18.250280380249023
    9. ']='' → logprob: -18.250280380249023
    10. '],' → logprob: -18.500280380249023

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234594456851482
    2. ' =' → logprob: -5.255234718322754
    3. '=v' → logprob: -14.505234718322754
    4. ']=' → logprob: -15.505234718322754
    5. '=
' → logprob: -16.130233764648438
    6. ']' → logprob: -16.880233764648438
    7. ')=' → logprob: -17.005233764648438
    8. '=

' → logprob: -17.755233764648438
    9. ')' → logprob: -17.880233764648438
    10. '=}' → logprob: -18.380233764648438

Token 251: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00861456897109747
    2. ' v' → logprob: -4.758614540100098
    3. '	v' → logprob: -17.008615493774414
    4. ' ' → logprob: -19.883615493774414
    5. '   ' → logprob: -20.383615493774414
    6. ')v' → logprob: -21.508615493774414
    7. 'vi' → logprob: -21.883615493774414
    8. 'vj' → logprob: -21.883615493774414
    9. '```' → logprob: -22.258615493774414
    10. 'vq' → logprob: -22.258615493774414

Token 252: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022829007357358932
    2. '
' → logprob: -4.522829055786133
    3. '<|end|>' → logprob: -5.022829055786133
    4. ')' → logprob: -5.647829055786133
    5. '    
' → logprob: -7.772829055786133
    6. ',' → logprob: -8.272829055786133
    7. ' ' → logprob: -9.147829055786133
    8. ';' → logprob: -9.272829055786133
    9. ' and' → logprob: -9.397829055786133
    10. '  ' → logprob: -9.397829055786133

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38059186935424805
    2. ')' → logprob: -1.255591869354248
    3. '<|end|>' → logprob: -4.255591869354248
    4. '
' → logprob: -5.380591869354248
    5. '    
' → logprob: -5.505591869354248
    6. '\n' → logprob: -6.130591869354248
    7. 'r' → logprob: -6.880591869354248
    8. ',' → logprob: -7.130591869354248
    9. ' ' → logprob: -7.380591869354248
    10. '    ' → logprob: -7.880591869354248

Token 254: ' return' (ID: 622)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00641360878944397
    2. ' v' → logprob: -5.131413459777832
    3. ' None' → logprob: -8.506413459777832
    4. 'None' → logprob: -8.631413459777832
    5. ' i' → logprob: -10.881413459777832
    6. 'i' → logprob: -10.881413459777832
    7. '   ' → logprob: -11.006413459777832
    8. 'return' (adapté à ' return') → logprob: -11.006413459777832
    9. ' return' → logprob: -11.256413459777832
    10. '0' → logprob: -11.256413459777832

Token 255: ' lst' (ID: 33384)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1315544992685318
    2. 'None' → logprob: -2.13155460357666
    3. ' None' → logprob: -5.63155460357666
    4. ' v' → logprob: -6.88155460357666
    5. 'lst' → logprob: -13.00655460357666
    6. '(None' → logprob: -13.13155460357666
    7. ' ' → logprob: -14.75655460357666
    8. '_None' → logprob: -15.13155460357666
    9. '0' → logprob: -15.25655460357666
    10. '[]' → logprob: -15.63155460357666

Token 256: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4947052001953125
    2. '<|end|>' → logprob: -1.7447052001953125
    3. 'def' → logprob: -1.7447052001953125
    4. '_' → logprob: -4.6197052001953125
    5. '
' → logprob: -4.7447052001953125
    6. '#' → logprob: -4.9947052001953125
    7. 'r' → logprob: -5.4947052001953125
    8. '<|end|>' → logprob: -6.3697052001953125
    9. '(' → logprob: -6.4947052001953125
    10. '(
' → logprob: -6.9947052001953125

Token 257: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013713110238313675
    2. ')' → logprob: -7.501371383666992
    3. '#' → logprob: -8.126371383666992
    4. '<|end|>' → logprob: -8.126371383666992
    5. '_' → logprob: -10.501371383666992
    6. '(' → logprob: -10.876371383666992
    7. 'd' → logprob: -11.001371383666992
    8. 'u' → logprob: -11.126371383666992
    9. '<|end|>' → logprob: -11.251371383666992
    10. ' def' → logprob: -11.251371383666992

Token 258: ' d' (ID: 272)
  Prédit: ' union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' union' → logprob: -0.4273907244205475
    2. 'union' → logprob: -1.177390694618225
    3. ' unite' → logprob: -3.5523908138275146
    4. 'un' → logprob: -5.5523905754089355
    5. 'u' → logprob: -5.9273905754089355
    6. ' find' → logprob: -7.0523905754089355
    7. ' u' → logprob: -7.1773905754089355
    8. '_union' → logprob: -7.4273905754089355
    9. ' unify' → logprob: -7.6773905754089355
    10. ' unions' → logprob: -7.6773905754089355

Token 259: '(x' (ID: 4061)
  Prédit: 'fs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.5835232734680176
    2. 'e' → logprob: -1.3335232734680176
    3. 'ef' → logprob: -2.2085232734680176
    4. 'is' → logprob: -3.5835232734680176
    5. 'eep' → logprob: -4.083523273468018
    6. 'efs' → logprob: -4.333523273468018
    7. 'f' → logprob: -6.833523273468018
    8. 'efe' → logprob: -6.833523273468018
    9. 'FS' → logprob: -6.958523273468018
    10. '(e' → logprob: -7.083523273468018

Token 260: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3486580550670624
    2. '):
' → logprob: -1.2236580848693848
    3. '):
' → logprob: -9.098657608032227
    4. ',' → logprob: -9.473657608032227
    5. ' ):' → logprob: -11.598657608032227
    6. ')' → logprob: -12.098657608032227
    7. '):

' → logprob: -12.348657608032227
    8. ' ):
' → logprob: -13.598657608032227
    9. '   ' → logprob: -13.848657608032227
    10. 'def' → logprob: -14.098657608032227

Token 261: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5181761980056763
    2. ' y' → logprob: -1.0181761980056763
    3. 'p' → logprob: -4.143176078796387
    4. 'x' → logprob: -4.643176078796387
    5. ' p' → logprob: -4.768176078796387
    6. ' x' → logprob: -6.393176078796387
    7. 'l' → logprob: -6.393176078796387
    8. ' l' → logprob: -6.768176078796387
    9. ' parents' → logprob: -7.268176078796387
    10. 'parents' → logprob: -7.268176078796387

Token 262: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.201519176363945
    2. '):
' → logprob: -1.7015191316604614
    3. ')' → logprob: -10.451519012451172
    4. '):
' → logprob: -10.576519012451172
    5. ' ):' → logprob: -10.701519012451172
    6. '):

' → logprob: -11.326519012451172
    7. '   ' → logprob: -11.951519012451172
    8. 'def' → logprob: -12.576519012451172
    9. ' ):
' → logprob: -12.951519012451172
    10. ',' → logprob: -13.326519012451172

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43336156010627747
    2. ' r' → logprob: -1.433361530303955
    3. 'r' → logprob: -2.683361530303955
    4. ' parents' → logprob: -3.808361530303955
    5. ' set' → logprob: -4.558361530303955
    6. ' return' → logprob: -5.058361530303955
    7. 'parents' → logprob: -6.558361530303955
    8. 'set' → logprob: -6.558361530303955
    9. 'return' → logprob: -7.183361530303955
    10. ' ' → logprob: -7.433361530303955

Token 264: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.017816485837101936
    2. 'parents' → logprob: -5.517816543579102
    3. 'set' → logprob: -5.642816543579102
    4. ' r' → logprob: -5.892816543579102
    5. 'eq' → logprob: -6.017816543579102
    6. '(r' → logprob: -6.267816543579102
    7. '0' → logprob: -7.642816543579102
    8. '1' → logprob: -7.767816543579102
    9. ' parents' → logprob: -7.892816543579102
    10. '(eq' → logprob: -8.017816543579102

Token 265: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2516261339187622
    2. 'eq' → logprob: -1.8766261339187622
    3. ' r' → logprob: -3.3766260147094727
    4. ' eq' → logprob: -3.6266260147094727
    5. '(eq' → logprob: -5.376626014709473
    6. 'p' → logprob: -7.001626014709473
    7. ' p' → logprob: -7.376626014709473
    8. '0' → logprob: -7.751626014709473
    9. ' ' → logprob: -7.876626014709473
    10. '(r' → logprob: -8.001626014709473

Token 266: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00045438710367307067
    2. 'x' → logprob: -7.750454425811768
    3. '(' → logprob: -11.37545394897461
    4. ')' → logprob: -12.75045394897461
    5. '(y' → logprob: -13.00045394897461
    6. ' (' → logprob: -13.12545394897461
    7. ')(' → logprob: -13.50045394897461
    8. 'def' → logprob: -14.12545394897461
    9. ' x' → logprob: -14.25045394897461
    10. ')x' → logprob: -14.50045394897461

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0057912045158445835
    2. ')==' → logprob: -5.255791187286377
    3. ')!=' → logprob: -7.505791187286377
    4. ' )' → logprob: -12.755791664123535
    5. '==' → logprob: -13.505791664123535
    6. '())' → logprob: -14.130791664123535
    7. ')
' → logprob: -14.380791664123535
    8. ']==' → logprob: -15.630791664123535
    9. ')=' → logprob: -15.880791664123535
    10. '(' → logprob: -15.880791664123535

Token 268: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026975184679031372
    2. ' ==' → logprob: -3.776975154876709
    3. ')' → logprob: -6.276975154876709
    4. '!=' → logprob: -7.651975154876709
    5. ')==' → logprob: -7.651975154876709
    6. '()==' → logprob: -8.026975631713867
    7. '()' → logprob: -8.526975631713867
    8. 'if' → logprob: -8.901975631713867
    9. ']==' → logprob: -9.026975631713867
    10. ' !=' → logprob: -10.651975631713867

Token 269: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0564331205387134e-05
    2. ' r' → logprob: -11.50001049041748
    3. 'y' → logprob: -14.87501049041748
    4. ' ' → logprob: -18.125011444091797
    5. '   ' → logprob: -19.125011444091797
    6. ')' → logprob: -19.750011444091797
    7. 'd' → logprob: -20.375011444091797
    8. '
' → logprob: -20.375011444091797
    9. '  ' → logprob: -20.500011444091797
    10. '(r' → logprob: -20.625011444091797

Token 270: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.029800137504935265
    2. 'y' → logprob: -3.5298001766204834
    3. '(' → logprob: -10.029800415039062
    4. ' y' → logprob: -12.529800415039062
    5. ' (' → logprob: -14.029800415039062
    6. '(x' → logprob: -15.154800415039062
    7. '(
' → logprob: -15.529800415039062
    8. ')y' → logprob: -15.904800415039062
    9. ')' → logprob: -16.154800415039062
    10. '	y' → logprob: -16.529800415039062

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.023293538717553e-05
    2. '<|end|>' → logprob: -11.250030517578125
    3. ')
' → logprob: -11.500030517578125
    4. '   ' → logprob: -13.125030517578125
    5. ' )' → logprob: -13.125030517578125
    6. '<|end|>' → logprob: -13.875030517578125
    7. ')return' → logprob: -14.375030517578125
    8. '')' → logprob: -14.875030517578125
    9. ')

' → logprob: -15.875030517578125
    10. '  ' → logprob: -15.875030517578125

Token 272: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00039968726923689246
    2. ')' → logprob: -8.000399589538574
    3. '<|end|>' → logprob: -10.625399589538574
    4. '#' → logprob: -10.875399589538574
    5. 'for' → logprob: -12.000399589538574
    6. ' def' → logprob: -13.375399589538574
    7. '
' → logprob: -13.500399589538574
    8. '```' → logprob: -13.750399589538574
    9. '),' → logprob: -14.250399589538574
    10. '[' → logprob: -14.250399589538574

Token 273: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6442143321037292
    2. 'union' → logprob: -1.019214391708374
    3. ' union' → logprob: -2.519214391708374
    4. ' u' → logprob: -4.144214153289795
    5. 'un' → logprob: -5.144214153289795
    6. 'set' → logprob: -5.644214153289795
    7. ' unite' → logprob: -6.019214153289795
    8. '(u' → logprob: -6.519214153289795
    9. 'a' → logprob: -6.769214153289795
    10. ' set' → logprob: -7.644214153289795

Token 274: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6670941710472107
    2. '(p' → logprob: -1.4170942306518555
    3. '(x' → logprob: -1.9170942306518555
    4. 'p' → logprob: -3.5420942306518555
    5. 's' → logprob: -3.6670942306518555
    6. 'n' → logprob: -4.5420942306518555
    7. 'sers' → logprob: -4.6670942306518555
    8. '(' → logprob: -4.7920942306518555
    9. 'ser' → logprob: -5.2920942306518555
    10. '(s' → logprob: -5.9170942306518555

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013977376511320472
    2. ' ,' → logprob: -9.125140190124512
    3. ',y' → logprob: -10.500140190124512
    4. ',x' → logprob: -13.875140190124512
    5. ',
' → logprob: -14.000140190124512
    6. '<|end|>' → logprob: -14.625140190124512
    7. '   ' → logprob: -15.250140190124512
    8. ',u' → logprob: -15.375140190124512
    9. '‌,' → logprob: -15.750140190124512
    10. 'y' → logprob: -16.375139236450195

Token 276: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804229199886322
    2. ' y' → logprob: -3.2880423069000244
    3. 'x' → logprob: -14.913042068481445
    4. '   ' → logprob: -15.788042068481445
    5. ' ' → logprob: -15.913042068481445
    6. '	y' → logprob: -16.288042068481445
    7. ',y' → logprob: -16.913042068481445
    8. ')y' → logprob: -17.538042068481445
    9. '  ' → logprob: -17.663042068481445
    10. '    ' → logprob: -17.788042068481445

Token 277: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869287669658661
    2. '):' → logprob: -1.1369287967681885
    3. '):
' → logprob: -10.01192855834961
    4. '):

' → logprob: -11.88692855834961
    5. ')' → logprob: -12.26192855834961
    6. ' ):' → logprob: -14.88692855834961
    7. ' ):
' → logprob: -15.13692855834961
    8. '   ' → logprob: -15.51192855834961
    9. 'def' → logprob: -15.63692855834961
    10. ':' → logprob: -16.38692855834961

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00046689616283401847
    2. 'parents' → logprob: -8.250467300415039
    3. ' parents' → logprob: -8.875467300415039
    4. '```' → logprob: -11.125467300415039
    5. 'p' → logprob: -11.375467300415039
    6. '    
' → logprob: -11.750467300415039
    7. ' p' → logprob: -12.125467300415039
    8. 'if' → logprob: -12.375467300415039
    9. 'def' → logprob: -12.625467300415039
    10. 'set' → logprob: -12.875467300415039

Token 279: ' a' (ID: 261)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.1663360297679901
    2. 'set' → logprob: -2.4163360595703125
    3. 'def' → logprob: -3.7913360595703125
    4. '   ' → logprob: -3.9163360595703125
    5. ' parents' → logprob: -4.2913360595703125
    6. 'u' → logprob: -6.0413360595703125
    7. 'r' → logprob: -6.2913360595703125
    8. 'p' → logprob: -7.2913360595703125
    9. '(set' → logprob: -7.2913360595703125
    10. ' set' → logprob: -7.7913360595703125

Token 280: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034728143364191055
    2. ' =' → logprob: -3.4097280502319336
    3. ',' → logprob: -8.284728050231934
    4. 's' → logprob: -8.534728050231934
    5. '=r' → logprob: -9.284728050231934
    6. 'b' → logprob: -9.409728050231934
    7. 'r' → logprob: -9.534728050231934
    8. 'a' → logprob: -9.534728050231934
    9. '=
' → logprob: -10.034728050231934
    10. '(r' → logprob: -10.159728050231934

Token 281: ' b' (ID: 287)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2317800521850586
    2. 'b' → logprob: -1.8567800521850586
    3. ' r' → logprob: -3.8567800521850586
    4. 'a' → logprob: -4.231780052185059
    5. ' b' → logprob: -4.856780052185059
    6. 'u' → logprob: -5.231780052185059
    7. 'x' → logprob: -7.606780052185059
    8. ' a' → logprob: -7.981780052185059
    9. 'ra' → logprob: -7.981780052185059
    10. ' u' → logprob: -8.231780052185059

Token 282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12698332965373993
    2. ' =' → logprob: -2.126983404159546
    3. '=r' → logprob: -10.376983642578125
    4. '=u' → logprob: -11.376983642578125
    5. '=a' → logprob: -12.126983642578125
    6. '   ' → logprob: -13.376983642578125
    7. ',' → logprob: -13.501983642578125
    8. '=
' → logprob: -14.001983642578125
    9. '=set' → logprob: -14.251983642578125
    10. ' ' → logprob: -14.501983642578125

Token 283: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014600858092308044
    2. ' r' → logprob: -4.26460075378418
    3. '   ' → logprob: -8.38960075378418
    4. '(r' → logprob: -8.76460075378418
    5. ' ' → logprob: -11.26460075378418
    6. '  ' → logprob: -11.38960075378418
    7. 'map' → logprob: -11.51460075378418
    8. ' map' → logprob: -11.88960075378418
    9. ' (' → logprob: -12.13960075378418
    10. '	r' → logprob: -13.51460075378418

Token 284: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00976116769015789
    2. 'x' → logprob: -4.634761333465576
    3. '(' → logprob: -14.009760856628418
    4. ' x' → logprob: -14.134760856628418
    5. '   ' → logprob: -14.259760856628418
    6. ' (' → logprob: -14.384760856628418
    7. ')' → logprob: -14.509760856628418
    8. ',x' → logprob: -14.509760856628418
    9. ')(' → logprob: -14.884760856628418
    10. ',' → logprob: -14.884760856628418

Token 285: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0001801801408873871
    2. '   ' → logprob: -9.8751802444458
    3. ')' → logprob: -10.2501802444458
    4. ' ),' → logprob: -10.3751802444458
    5. '(x' → logprob: -10.7501802444458
    6. ',' → logprob: -10.7501802444458
    7. ' ' → logprob: -12.1251802444458
    8. '(y' → logprob: -12.7501802444458
    9. 'a' → logprob: -12.8751802444458
    10. ')
' → logprob: -13.2501802444458

Token 286: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014172682538628578
    2. ' r' → logprob: -4.264172554016113
    3. '   ' → logprob: -11.889172554016113
    4. ' ' → logprob: -13.264172554016113
    5. '  ' → logprob: -15.014172554016113
    6. 'b' → logprob: -15.639172554016113
    7. '    ' → logprob: -17.01417350769043
    8. ' b' → logprob: -18.01417350769043
    9. '	r' → logprob: -18.26417350769043
    10. '     ' → logprob: -18.63917350769043

Token 287: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.3139299154281616
    2. 'y' → logprob: -1.3139299154281616
    3. 'r' → logprob: -7.938930034637451
    4. ' y' → logprob: -8.688929557800293
    5. '   ' → logprob: -9.938929557800293
    6. ')' → logprob: -10.438929557800293
    7. '(' → logprob: -10.938929557800293
    8. '(r' → logprob: -11.438929557800293
    9. ' ' → logprob: -11.563929557800293
    10. ' (' → logprob: -12.063929557800293

Token 288: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01357263419777155
    2. ')' → logprob: -4.388572692871094
    3. '   ' → logprob: -7.513572692871094
    4. ')
' → logprob: -7.763572692871094
    5. 'def' → logprob: -10.138572692871094
    6. ');' → logprob: -11.263572692871094
    7. ' )
' → logprob: -11.388572692871094
    8. '
' → logprob: -11.888572692871094
    9. ' ' → logprob: -12.138572692871094
    10. '  ' → logprob: -12.763572692871094

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050643566995859146
    2. 'if' → logprob: -3.3006436824798584
    3. 'parents' → logprob: -4.800643444061279
    4. ' if' → logprob: -5.800643444061279
    5. ' parents' → logprob: -7.550643444061279
    6. 'def' → logprob: -7.800643444061279
    7. '
' → logprob: -8.550643920898438
    8. '    
' → logprob: -9.300643920898438
    9. '```' → logprob: -10.675643920898438
    10. '[' → logprob: -11.800643920898438

Token 290: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2603919804096222
    2. ' if' → logprob: -2.0103919506073
    3. 'parents' → logprob: -2.7603919506073
    4. '   ' → logprob: -3.6353919506073
    5. ' parents' → logprob: -5.260392189025879
    6. '```' → logprob: -8.010392189025879
    7. '    
' → logprob: -9.635392189025879
    8. 'def' → logprob: -10.385392189025879
    9. '[' → logprob: -10.885392189025879
    10. '
' → logprob: -11.385392189025879

Token 291: ' !=' (ID: 1666)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.601578950881958
    2. ' if' → logprob: -1.476578950881958
    3. ',' → logprob: -1.601578950881958
    4. '=' → logprob: -4.726578712463379
    5. 'a' → logprob: -5.351578712463379
    6. ',a' → logprob: -5.976578712463379
    7. ' =' → logprob: -6.101578712463379
    8. '!=' → logprob: -6.726578712463379
    9. ',b' → logprob: -6.976578712463379
    10. ' ,' → logprob: -7.726578712463379

Token 292: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01830621249973774
    2. ' b' → logprob: -4.018306255340576
    3. 'a' → logprob: -8.893305778503418
    4. ' a' → logprob: -11.893305778503418
    5. ' ' → logprob: -12.393305778503418
    6. '=' → logprob: -12.393305778503418
    7. '=b' → logprob: -13.768305778503418
    8. '0' → logprob: -14.268305778503418
    9. 'None' → logprob: -14.893305778503418
    10. ' None' → logprob: -15.768305778503418

Token 293: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693849205970764
    2. 'and' → logprob: -2.126938581466675
    3. ' ' → logprob: -12.251938819885254
    4. '	and' → logprob: -12.876938819885254
    5. '   ' → logprob: -13.751938819885254
    6. ' or' → logprob: -14.376938819885254
    7. '  ' → logprob: -15.251938819885254
    8. ')' → logprob: -15.251938819885254
    9. '&&' → logprob: -15.626938819885254
    10. '    ' → logprob: -15.751938819885254

Token 294: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.242582768201828
    2. '(set' → logprob: -1.6175827980041504
    3. 'parents' → logprob: -4.24258279800415
    4. '(par' → logprob: -6.36758279800415
    5. ' set' → logprob: -7.36758279800415
    6. ' (' → logprob: -8.992582321166992
    7. ' parents' → logprob: -9.867582321166992
    8. '(p' → logprob: -10.242582321166992
    9. '(parent' → logprob: -10.492582321166992
    10. '(
' → logprob: -11.367582321166992

Token 295: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -6.682846287731081e-05
    2. 'parents' → logprob: -9.625066757202148
    3. '(item' → logprob: -15.000066757202148
    4. 'items' → logprob: -15.000066757202148
    5. 'par' → logprob: -17.00006675720215
    6. '(par' → logprob: -17.62506675720215
    7. 'parent' → logprob: -17.62506675720215
    8. '(' → logprob: -18.62506675720215
    9. 'attr' → logprob: -19.00006675720215
    10. '```' → logprob: -19.75006675720215

Token 296: '(par' (ID: 34455)
  Prédit: '(par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(par' → logprob: -1.9743012671824545e-05
    2. ' (' → logprob: -11.125020027160645
    3. 'parents' → logprob: -12.375020027160645
    4. '(paren' → logprob: -15.375020027160645
    5. '(parent' → logprob: -15.500020027160645
    6. '```' → logprob: -16.250019073486328
    7. ' parents' → logprob: -17.000019073486328
    8. '(' → logprob: -17.500019073486328
    9. '(
' → logprob: -17.750019073486328
    10. '(players' → logprob: -18.250019073486328

Token 297: 'ents' (ID: 1094)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.1938256025314331
    2. 'ents' → logprob: -2.3188257217407227
    3. 'parents' → logprob: -3.0688257217407227
    4. '(par' → logprob: -3.5688257217407227
    5. 'ants' → logprob: -7.693825721740723
    6. 's' → logprob: -7.818825721740723
    7. 'arts' → logprob: -7.943825721740723
    8. 'ars' → logprob: -8.193825721740723
    9. '```' → logprob: -8.568825721740723
    10. 'par' → logprob: -8.568825721740723

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028998551424592733
    2. '(par' → logprob: -5.877899646759033
    3. ',a' → logprob: -10.377900123596191
    4. ' ,' → logprob: -10.377900123596191
    5. '(a' → logprob: -11.502900123596191
    6. 'a' → logprob: -11.627900123596191
    7. ',
' → logprob: -12.377900123596191
    8. '```' → logprob: -12.502900123596191
    9. ',parent' → logprob: -13.877900123596191
    10. ')' → logprob: -14.127900123596191

Token 299: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0061189825646579266
    2. 'b' → logprob: -5.1311187744140625
    3. ' a' → logprob: -8.631118774414062
    4. ' b' → logprob: -12.381118774414062
    5. ')' → logprob: -12.631118774414062
    6. '   ' → logprob: -13.131118774414062
    7. ')a' → logprob: -14.006118774414062
    8. ' ' → logprob: -14.881118774414062
    9. 'parents' → logprob: -15.131118774414062
    10. '	a' → logprob: -15.506118774414062

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0131565872579813
    2. ',b' → logprob: -4.388156414031982
    3. ' ,' → logprob: -7.763156414031982
    4. 'b' → logprob: -8.63815689086914
    5. ' b' → logprob: -10.63815689086914
    6. ',a' → logprob: -11.38815689086914
    7. '(b' → logprob: -12.76315689086914
    8. 'a' → logprob: -13.13815689086914
    9. ',y' → logprob: -13.26315689086914
    10. '   ' → logprob: -14.01315689086914

Token 301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. ')b' → logprob: -18.875045776367188
    4. '   ' → logprob: -20.125045776367188
    5. '	b' → logprob: -20.875045776367188
    6. ' ' → logprob: -21.875045776367188
    7. '  ' → logprob: -22.625045776367188
    8. '_b' → logprob: -22.875045776367188
    9. '>b' → logprob: -22.875045776367188
    10. ')' → logprob: -23.250045776367188

Token 302: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.460291767027229e-05
    2. ')
' → logprob: -9.625094413757324
    3. ')a' → logprob: -11.250094413757324
    4. ' )' → logprob: -13.125094413757324
    5. '(' → logprob: -13.250094413757324
    6. '(a' → logprob: -13.500094413757324
    7. '),' → logprob: -13.500094413757324
    8. '))' → logprob: -13.625094413757324
    9. '[' → logprob: -13.750094413757324
    10. ',' → logprob: -13.875094413757324

Token 303: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' parents' (ID: 8783)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.08545058220624924
    2. ' None' → logprob: -2.5854506492614746
    3. 'u' → logprob: -5.335450649261475
    4. ' u' → logprob: -6.710450649261475
    5. '()' → logprob: -9.085450172424316
    6. '[]' → logprob: -9.085450172424316
    7. ' ' → logprob: -9.585450172424316
    8. '0' → logprob: -9.710450172424316
    9. 'b' → logprob: -9.835450172424316
    10. '(None' → logprob: -10.460450172424316

Token 306: '

' (ID: 279)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6938909292221069
    2. '<|end|>' → logprob: -1.068890929222107
    3. 'def' → logprob: -2.8188910484313965
    4. '#' → logprob: -3.1938910484313965
    5. ')' → logprob: -3.6938910484313965
    6. 'for' → logprob: -3.9438910484313965
    7. '<|end|>' → logprob: -5.6938910484313965
    8. 'parents' → logprob: -6.3188910484313965
    9. '[u' → logprob: -6.8188910484313965
    10. '
' → logprob: -7.1938910484313965

Token 307: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0613107793033123
    2. '#' → logprob: -3.5613107681274414
    3. 'u' → logprob: -4.061310768127441
    4. 'p' → logprob: -5.186310768127441
    5. 'def' → logprob: -5.936310768127441
    6. 'res' → logprob: -6.561310768127441
    7. 'while' → logprob: -7.436310768127441
    8. 'print' → logprob: -7.561310768127441
    9. 'result' → logprob: -7.811310768127441
    10. 'next' → logprob: -7.811310768127441

Token 308: ' Highly' (ID: 60173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8747817873954773
    2. 'p' → logprob: -1.874781847000122
    3. 'q' → logprob: -1.874781847000122
    4. '#' → logprob: -2.124781847000122
    5. 'def' → logprob: -3.749781847000122
    6. 'res' → logprob: -3.749781847000122
    7. 'visited' → logprob: -3.999781847000122
    8. 'u' → logprob: -4.249781608581543
    9. 'result' → logprob: -4.374781608581543
    10. 'while' → logprob: -4.749781608581543

Token 309: ' unnecessary' (ID: 42963)
  Prédit: 'optimized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optimized' → logprob: -0.374966561794281
    2. 'compressed' → logprob: -2.124966621398926
    3. 'python' → logprob: -3.374966621398926
    4. 'ob' → logprob: -3.624966621398926
    5. 'lambda' → logprob: -4.374966621398926
    6. '```' → logprob: -4.499966621398926
    7. 'functional' → logprob: -4.624966621398926
    8. '#' → logprob: -4.874966621398926
    9. 'cont' → logprob: -5.124966621398926
    10. 'nested' → logprob: -5.249966621398926

Token 310: ' recursive' (ID: 66711)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.407995343208313
    2. 'deque' → logprob: -1.657995343208313
    3. 'p' → logprob: -1.782995343208313
    4. 'from' → logprob: -2.1579952239990234
    5. '#' → logprob: -2.6579952239990234
    6. 'q' → logprob: -2.7829952239990234
    7. 'lambda' → logprob: -4.157995223999023
    8. 'for' → logprob: -4.282995223999023
    9. 'd' → logprob: -4.407995223999023
    10. 'f' → logprob: -4.907995223999023

Token 311: ' breadth' (ID: 76853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17278356850147247
    2. 'dfs' → logprob: -1.922783613204956
    3. 'f' → logprob: -5.672783374786377
    4. 'function' → logprob: -5.797783374786377
    5. '#' → logprob: -6.297783374786377
    6. 'DFS' → logprob: -7.547783374786377
    7. 'search' → logprob: -7.797783374786377
    8. 'depth' → logprob: -8.172783851623535
    9. 'lambda' → logprob: -8.172783851623535
    10. 'from' → logprob: -8.297783851623535

Token 312: '-first' (ID: 70119)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1453700065612793
    2. '_first' → logprob: -2.8953700065612793
    3. '-first' → logprob: -3.3953700065612793
    4. 'First' → logprob: -4.145370006561279
    5. 'def' → logprob: -4.270370006561279
    6. 'f' → logprob: -4.895370006561279
    7. 'fs' → logprob: -5.270370006561279
    8. 's' → logprob: -7.145370006561279
    9. 't' → logprob: -7.770370006561279
    10. 'search' → logprob: -7.770370006561279

Token 313: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.009276202879846096
    2. 'def' → logprob: -4.759276390075684
    3. ' search' → logprob: -8.134276390075684
    4. 'earch' → logprob: -9.009276390075684
    5. '_search' → logprob: -9.634276390075684
    6. 's' → logprob: -10.384276390075684
    7. 'd' → logprob: -10.509276390075684
    8. 'r' → logprob: -10.759276390075684
    9. 'for' → logprob: -11.509276390075684
    10. 'from' → logprob: -11.509276390075684

Token 314: ' using' (ID: 2360)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004573480691760778
    2. 'from' → logprob: -5.504573345184326
    3. '
' → logprob: -8.504573822021484
    4. 'visited' → logprob: -8.754573822021484
    5. 'q' → logprob: -9.504573822021484
    6. 'd' → logprob: -10.754573822021484
    7. 'deque' → logprob: -10.754573822021484
    8. 'queue' → logprob: -12.379573822021484
    9. '```' → logprob: -12.379573822021484
    10. 'dq' → logprob: -13.379573822021484

Token 315: ' generators' (ID: 74652)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.15562357008457184
    2. 'def' → logprob: -2.0306236743927
    3. 'lambda' → logprob: -4.530623435974121
    4. 'd' → logprob: -7.655623435974121
    5. 'l' → logprob: -7.655623435974121
    6. 'queue' → logprob: -8.030623435974121
    7. 'de' → logprob: -8.280623435974121
    8. 'q' → logprob: -8.655623435974121
    9. 'dq' → logprob: -9.155623435974121
    10. '(lambda' → logprob: -9.655623435974121

Token 316: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015605698572471738
    2. 'from' → logprob: -6.501560688018799
    3. '
' → logprob: -9.87656021118164
    4. '```' → logprob: -12.75156021118164
    5. 'deque' → logprob: -13.00156021118164
    6. 'de' → logprob: -13.87656021118164
    7. 'import' → logprob: -15.87656021118164
    8. '  
' → logprob: -15.87656021118164
    9. 'd' → logprob: -16.25156021118164
    10. 'visited' → logprob: -16.25156021118164

Token 317: ' sets' (ID: 11982)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.42112982273101807
    2. 'def' → logprob: -1.671129822731018
    3. 'yield' → logprob: -1.921129822731018
    4. 'de' → logprob: -5.1711297035217285
    5. 'lambda' → logprob: -6.2961297035217285
    6. 'from' → logprob: -7.2961297035217285
    7. 'chain' → logprob: -7.6711297035217285
    8. 'collections' → logprob: -8.796130180358887
    9. 'dfs' → logprob: -9.671130180358887
    10. '   ' → logprob: -10.296130180358887

Token 318: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002846840536221862
    2. 'from' → logprob: -6.377846717834473
    3. 'visited' → logprob: -7.377846717834473
    4. '
' → logprob: -7.627846717834473
    5. 'deque' → logprob: -11.627846717834473
    6. 'q' → logprob: -12.127846717834473
    7. 'd' → logprob: -12.502846717834473
    8. 'seen' → logprob: -12.502846717834473
    9. 'de' → logprob: -13.127846717834473
    10. '```' → logprob: -13.502846717834473

Token 319: 'visited' (ID: 52453)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002031538402661681
    2. 'visited' → logprob: -6.502031326293945
    3. 'from' → logprob: -7.627031326293945
    4. '
' → logprob: -10.877031326293945
    5. 'seen' → logprob: -11.502031326293945
    6. 'd' → logprob: -12.002031326293945
    7. 'deque' → logprob: -12.752031326293945
    8. 'q' → logprob: -13.127031326293945
    9. 'de' → logprob: -14.752031326293945
    10. 'queue' → logprob: -15.002031326293945

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11313554644584656
    2. ' =' → logprob: -2.238135576248169
    3. '=set' → logprob: -8.11313533782959
    4. ',' → logprob: -11.48813533782959
    5. ' ' → logprob: -13.73813533782959
    6. '  ' → logprob: -14.48813533782959
    7. '   ' → logprob: -14.61313533782959
    8. ')' → logprob: -15.11313533782959
    9. '=lambda' → logprob: -15.11313533782959
    10. '=
' → logprob: -15.48813533782959

Token 321: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.003514667972922325
    2. ' set' → logprob: -6.003514766693115
    3. '{' → logprob: -6.878514766693115
    4. '(set' → logprob: -12.378514289855957
    5. ' {' → logprob: -13.253514289855957
    6. '   ' → logprob: -14.128514289855957
    7. '=set' → logprob: -14.253514289855957
    8. '	set' → logprob: -14.628514289855957
    9. ' ' → logprob: -14.628514289855957
    10. 'deque' → logprob: -15.628514289855957

Token 322: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.7820386290550232
    2. '()' → logprob: -1.282038688659668
    3. 'def' → logprob: -1.407038688659668
    4. '(queue' → logprob: -5.407038688659668
    5. '()

' → logprob: -5.532038688659668
    6. '
' → logprob: -5.532038688659668
    7. 'deque' → logprob: -5.782038688659668
    8. '(' → logprob: -6.657038688659668
    9. ',' → logprob: -7.032038688659668
    10. ' =' → logprob: -7.907038688659668

Token 323: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31790444254875183
    2. 'queue' → logprob: -1.8179044723510742
    3. 'q' → logprob: -2.317904472351074
    4. 'from' → logprob: -4.692904472351074
    5. 'deque' → logprob: -7.067904472351074
    6. 'to' → logprob: -7.692904472351074
    7. 'dq' → logprob: -7.817904472351074
    8. 'front' → logprob: -8.442904472351074
    9. 'stack' → logprob: -8.817904472351074
    10. 'Q' → logprob: -9.817904472351074

Token 324: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004271307960152626
    2. 'dfs' → logprob: -6.629271507263184
    3. 'bf' → logprob: -6.879271507263184
    4. ' bfs' → logprob: -7.129271507263184
    5. '_b' → logprob: -8.629271507263184
    6. 'q' → logprob: -9.129271507263184
    7. 'search' → logprob: -9.129271507263184
    8. 'bread' → logprob: -9.254271507263184
    9. 'br' → logprob: -9.504271507263184
    10. 'f' → logprob: -9.629271507263184

Token 325: '(start' (ID: 20008)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7707791924476624
    2. '(q' → logprob: -1.0207791328430176
    3. '(start' → logprob: -2.0207791328430176
    4. '(node' → logprob: -4.020779132843018
    5. '(u' → logprob: -4.770779132843018
    6. '(x' → logprob: -5.020779132843018
    7. '(v' → logprob: -5.145779132843018
    8. '(queue' → logprob: -6.020779132843018
    9. '(root' → logprob: -6.520779132843018
    10. '(' → logprob: -7.645779132843018

Token 326: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5180695056915283
    2. '):' → logprob: -1.2680695056915283
    3. ',' → logprob: -2.1430695056915283
    4. '(start' → logprob: -5.768069267272949
    5. '):
' → logprob: -6.268069267272949
    6. ',start' → logprob: -8.26806926727295
    7. '   ' → logprob: -8.64306926727295
    8. ')' → logprob: -9.51806926727295
    9. '):

' → logprob: -9.89306926727295
    10. 'start' → logprob: -10.89306926727295

Token 327: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010139751975657418
    2. ' if' → logprob: -9.625101089477539
    3. 'if' → logprob: -10.750101089477539
    4. ' queue' → logprob: -12.375101089477539
    5. 'queue' → logprob: -12.750101089477539
    6. '	queue' → logprob: -13.250101089477539
    7. 'visited' → logprob: -13.625101089477539
    8. 'q' → logprob: -13.875101089477539
    9. ' visited' → logprob: -14.375101089477539
    10. ' ' → logprob: -14.875101089477539

Token 328: ' queue' (ID: 13661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41172465682029724
    2. 'q' → logprob: -1.6617246866226196
    3. 'queue' (adapté à ' queue') → logprob: -2.53672456741333
    4. 'visited' → logprob: -3.28672456741333
    5. 'if' → logprob: -3.66172456741333
    6. 'yield' → logprob: -6.41172456741333
    7. ' queue' → logprob: -6.66172456741333
    8. ' q' → logprob: -6.91172456741333
    9. ' visited' → logprob: -7.66172456741333
    10. 'to' → logprob: -8.161725044250488

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020581945776939392
    2. ' =' → logprob: -3.8955819606781006
    3. '(queue' → logprob: -11.52058219909668
    4. '   ' → logprob: -12.52058219909668
    5. ':' → logprob: -12.77058219909668
    6. ')' → logprob: -12.77058219909668
    7. '=
' → logprob: -12.89558219909668
    8. '.append' → logprob: -13.02058219909668
    9. '(' → logprob: -13.14558219909668
    10. ',' → logprob: -13.14558219909668

Token 330: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.016035541892051697
    2. ' deque' → logprob: -4.141035556793213
    3. 'Deque' → logprob: -15.141035079956055
    4. 'de' → logprob: -15.141035079956055
    5. ' ' → logprob: -15.266035079956055
    6. '   ' → logprob: -15.391035079956055
    7. '[' → logprob: -16.016035079956055
    8. '	de' → logprob: -16.891035079956055
    9. '(de' → logprob: -17.266035079956055
    10. 'collections' → logprob: -17.266035079956055

Token 331: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.625007629394531
    3. '([(' → logprob: -13.125007629394531
    4. '()
' → logprob: -14.000007629394531
    5. '((' → logprob: -14.875007629394531
    6. '[(' → logprob: -15.250007629394531
    7. '()' → logprob: -15.250007629394531
    8. '(' → logprob: -15.875007629394531
    9. '
' → logprob: -17.87500762939453
    10. '(([' → logprob: -18.62500762939453

Token 332: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.4974866644479334e-05
    2. ' start' → logprob: -11.250015258789062
    3. '(start' → logprob: -13.375015258789062
    4. '[start' → logprob: -15.000015258789062
    5. '   ' → logprob: -20.125015258789062
    6. '	start' → logprob: -20.375015258789062
    7. '
' → logprob: -21.375015258789062
    8. ',start' → logprob: -21.750015258789062
    9. ' ' → logprob: -22.000015258789062
    10. ')' → logprob: -22.625015258789062

Token 333: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6931783556938171
    2. '])
' → logprob: -0.6931783556938171
    3. '])
' → logprob: -11.318178176879883
    4. '])

' → logprob: -11.693178176879883
    5. ')
' → logprob: -12.443178176879883
    6. ')' → logprob: -12.943178176879883
    7. '   ' → logprob: -13.693178176879883
    8. ' ])
' → logprob: -14.193178176879883
    9. ']);' → logprob: -14.443178176879883
    10. ' ])' → logprob: -14.568178176879883

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00522961001843214
    2. ' while' → logprob: -6.005229473114014
    3. 'while' → logprob: -6.505229473114014
    4. '
' → logprob: -7.380229473114014
    5. '    
' → logprob: -7.630229473114014
    6. '	while' → logprob: -9.255229949951172
    7. 'visited' → logprob: -10.880229949951172
    8. '<|end|>' → logprob: -12.255229949951172
    9. ' visited' → logprob: -12.380229949951172
    10. 'def' → logprob: -12.630229949951172

Token 335: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2032032012939453
    2. 'visited' → logprob: -1.7032032012939453
    3. '   ' → logprob: -6.453203201293945
    4. ' while' → logprob: -9.203203201293945
    5. 'result' → logprob: -10.453203201293945
    6. ' visited' → logprob: -10.703203201293945
    7. 'yield' → logprob: -10.703203201293945
    8. 'def' → logprob: -11.703203201293945
    9. 'for' → logprob: -12.078203201293945
    10. 'seen' → logprob: -12.203203201293945

Token 336: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.018163753673434258
    2. ' queue' → logprob: -4.018163681030273
    3. '(queue' → logprob: -11.643163681030273
    4. 'len' → logprob: -12.393163681030273
    5. '	queue' → logprob: -14.393163681030273
    6. ' ' → logprob: -15.768163681030273
    7. '   ' → logprob: -16.268163681030273
    8. ' len' → logprob: -17.518163681030273
    9. '
' → logprob: -17.643163681030273
    10. '  ' → logprob: -17.768163681030273

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06033007428050041
    2. ':
' → logprob: -3.3103301525115967
    3. '):' → logprob: -4.435329914093018
    4. 'and' → logprob: -5.685329914093018
    5. ' and' → logprob: -6.185329914093018
    6. '):
' → logprob: -6.435329914093018
    7. '   ' → logprob: -7.310329914093018
    8. '.pop' → logprob: -8.060330390930176
    9. 'not' → logprob: -8.310330390930176
    10. '():' → logprob: -8.435330390930176

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013696423266083002
    2. ' node' → logprob: -7.876369476318359
    3. '   ' → logprob: -8.12636947631836
    4. 'v' → logprob: -8.87636947631836
    5. ' v' → logprob: -8.87636947631836
    6. ' x' → logprob: -9.12636947631836
    7. 'node' → logprob: -9.50136947631836
    8. ' current' → logprob: -9.62636947631836
    9. ' u' → logprob: -9.75136947631836
    10. '```' → logprob: -10.37636947631836

Token 339: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.523808479309082
    2. 'node' → logprob: -2.148808479309082
    3. ' v' → logprob: -2.648808479309082
    4. 'cur' → logprob: -2.898808479309082
    5. 'current' → logprob: -2.898808479309082
    6. ' node' → logprob: -3.148808479309082
    7. 'x' → logprob: -3.398808479309082
    8. ' current' → logprob: -4.398808479309082
    9. 'u' → logprob: -4.898808479309082
    10. 'curr' → logprob: -5.273808479309082

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520240545272827
    2. '=' → logprob: -1.5020240545272827
    3. '   ' → logprob: -9.502023696899414
    4. ' ' → logprob: -11.877023696899414
    5. ')' → logprob: -12.752023696899414
    6. '.append' → logprob: -12.877023696899414
    7. '	' → logprob: -13.377023696899414
    8. '  ' → logprob: -13.502023696899414
    9. '    ' → logprob: -13.877023696899414
    10. 'v' → logprob: -14.377023696899414

Token 341: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.16022686660289764
    2. ' queue' → logprob: -1.910226821899414
    3. '(queue' → logprob: -13.410226821899414
    4. '	queue' → logprob: -14.660226821899414
    5. '   ' → logprob: -14.910226821899414
    6. 'deque' → logprob: -15.785226821899414
    7. ' ' → logprob: -16.410226821899414
    8. 'que' → logprob: -16.535226821899414
    9. '.queue' → logprob: -16.910226821899414
    10. '  ' → logprob: -17.410226821899414

Token 342: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00023166877508629113
    2. '.pop' → logprob: -8.500231742858887
    3. '.' → logprob: -10.750231742858887
    4. '   ' → logprob: -12.250231742858887
    5. ' .' → logprob: -14.125231742858887
    6. ').' → logprob: -14.750231742858887
    7. 'p' → logprob: -15.375231742858887
    8. '.append' → logprob: -15.875231742858887
    9. 'opleft' → logprob: -16.12523078918457
    10. '().' → logprob: -16.25023078918457

Token 343: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0006638261256739497
    2. 'op' → logprob: -7.375663757324219
    3. 'ople' → logprob: -10.250663757324219
    4. 'opl' → logprob: -14.000663757324219
    5. 'p' → logprob: -15.125663757324219
    6. 'oplevel' → logprob: -15.750663757324219
    7. 'left' → logprob: -15.875663757324219
    8. '```' → logprob: -16.00066375732422
    9. 'opf' → logprob: -16.37566375732422
    10. 'opt' → logprob: -16.50066375732422

Token 344: '()
' (ID: 1234)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3870188593864441
    2. '       ' → logprob: -1.8870189189910889
    3. '()
' → logprob: -2.262018918991089
    4. ')' → logprob: -3.387018918991089
    5. '()' → logprob: -4.01201868057251
    6. '
' → logprob: -4.38701868057251
    7. '())
' → logprob: -8.012019157409668
    8. '   ' → logprob: -9.012019157409668
    9. 'for' → logprob: -9.387019157409668
    10. 'v' → logprob: -10.262019157409668

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00406474806368351
    2. 'if' → logprob: -6.129064559936523
    3. ' if' → logprob: -6.379064559936523
    4. 'yield' → logprob: -9.629064559936523
    5. '   ' → logprob: -10.004064559936523
    6. '        
' → logprob: -10.629064559936523
    7. 'visited' → logprob: -11.129064559936523
    8. '
' → logprob: -11.504064559936523
    9. ' yield' → logprob: -11.879064559936523
    10. ' visited' → logprob: -12.504064559936523

Token 346: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04751710593700409
    2. 'yield' → logprob: -3.6725170612335205
    3. 'visited' → logprob: -4.1725172996521
    4. '       ' → logprob: -5.2975172996521
    5. '   ' → logprob: -7.6725172996521
    6. ' if' → logprob: -9.672516822814941
    7. '
' → logprob: -10.797516822814941
    8. 'for' (adapté à ' for') → logprob: -12.047516822814941
    9. ' yield' → logprob: -12.172516822814941
    10. ' visited' → logprob: -12.672516822814941

Token 347: ' j' (ID: 441)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.020151861011981964
    2. 'u' → logprob: -4.5201520919799805
    3. ' w' → logprob: -5.3951520919799805
    4. 'n' → logprob: -5.7701520919799805
    5. 'nbr' → logprob: -7.8951520919799805
    6. 'neighbor' → logprob: -8.14515209197998
    7. 'nei' → logprob: -8.64515209197998
    8. 'nv' → logprob: -8.77015209197998
    9. ' nxt' → logprob: -9.77015209197998
    10. 'to' → logprob: -9.89515209197998

Token 348: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6326161623001099
    2. ' in' → logprob: -0.7576161623001099
    3. '	in' → logprob: -12.38261604309082
    4. ' ' → logprob: -12.63261604309082
    5. '_in' → logprob: -13.50761604309082
    6. '  ' → logprob: -13.88261604309082
    7. ',' → logprob: -14.00761604309082
    8. '
' → logprob: -14.38261604309082
    9. 'n' → logprob: -14.38261604309082
    10. 'i' → logprob: -14.50761604309082

Token 349: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015418806578963995
    2. ' l' → logprob: -6.501542091369629
    3. 'list' → logprob: -10.876542091369629
    4. 'sorted' → logprob: -11.876542091369629
    5. 'range' → logprob: -12.376542091369629
    6. '	l' → logprob: -12.876542091369629
    7. 'chain' → logprob: -13.001542091369629
    8. '   ' → logprob: -13.501542091369629
    9. '[l' → logprob: -13.876542091369629
    10. ' ' → logprob: -14.501542091369629

Token 350: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.000116655595775228
    2. 'v' → logprob: -9.250116348266602
    3. '(v' → logprob: -11.250116348266602
    4. '][' → logprob: -13.125116348266602
    5. '[j' → logprob: -13.375116348266602
    6. '[' → logprob: -13.750116348266602
    7. ' [' → logprob: -14.625116348266602
    8. '   ' → logprob: -15.125116348266602
    9. ')v' → logprob: -15.250116348266602
    10. ',v' → logprob: -15.375116348266602

Token 351: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1634080410003662
    2. ']:
' → logprob: -1.9134080410003662
    3. ']' → logprob: -6.538408279418945
    4. ']:
' → logprob: -7.288408279418945
    5. ']):' → logprob: -8.038408279418945
    6. ']):
' → logprob: -8.788408279418945
    7. '):
' → logprob: -9.038408279418945
    8. '):' → logprob: -9.038408279418945
    9. ':' → logprob: -9.538408279418945
    10. '}:' → logprob: -10.288408279418945

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027812200132757425
    2. ' if' → logprob: -6.002781391143799
    3. '	       ' → logprob: -9.12778091430664
    4. '<|end|>' → logprob: -9.50278091430664
    5. 'if' → logprob: -9.75278091430664
    6. ',' → logprob: -11.00278091430664
    7. '          ' → logprob: -11.50278091430664
    8. '            
' → logprob: -11.75278091430664
    9. '<|end|>' → logprob: -12.00278091430664
    10. '               ' → logprob: -12.62778091430664

Token 353: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.253300279378891
    2. ' if' → logprob: -1.6283003091812134
    3. 'if' (adapté à ' if') → logprob: -3.628300189971924
    4. '           ' → logprob: -7.503300189971924
    5. '	           ' → logprob: -8.753300666809082
    6. '	       ' → logprob: -9.503300666809082
    7. '		       ' → logprob: -9.753300666809082
    8. '            ' → logprob: -11.003300666809082
    9. '	if' → logprob: -11.128300666809082
    10. '                
' → logprob: -11.503300666809082

Token 354: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07893451303243637
    2. ' j' → logprob: -2.57893443107605
    3. '   ' → logprob: -10.828934669494629
    4. '           ' → logprob: -11.703934669494629
    5. '(j' → logprob: -11.953934669494629
    6. 'not' → logprob: -13.328934669494629
    7. '	j' → logprob: -13.328934669494629
    8. ' ' → logprob: -13.453934669494629
    9. ' not' → logprob: -14.078934669494629
    10. '    ' → logprob: -14.078934669494629

Token 355: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04859180003404617
    2. 'not' → logprob: -3.0485918521881104
    3. ')' → logprob: -12.923591613769531
    4. '	not' → logprob: -13.423591613769531
    5. ' ' → logprob: -15.798591613769531
    6. '   ' → logprob: -16.42359161376953
    7. ':not' → logprob: -16.92359161376953
    8. 'if' → logprob: -17.17359161376953
    9. '_not' → logprob: -17.17359161376953
    10. ' j' → logprob: -17.29859161376953

Token 356: ' in' (ID: 306)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.03663031384348869
    2. ' visited' → logprob: -3.911630392074585
    3. ' in' → logprob: -4.536630153656006
    4. 'in' → logprob: -5.286630153656006
    5. '           ' → logprob: -9.786630630493164
    6. '   ' → logprob: -9.911630630493164
    7. '       ' → logprob: -9.911630630493164
    8. ' ' → logprob: -12.161630630493164
    9. 'Visited' → logprob: -12.411630630493164
    10. '  ' → logprob: -12.786630630493164

Token 357: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.026300877332687378
    2. ' visited' → logprob: -3.6513009071350098
    3. '
' → logprob: -15.901300430297852
    4. ' ' → logprob: -16.15130043029785
    5. '   ' → logprob: -16.27630043029785
    6. 'v' → logprob: -16.77630043029785
    7. 'Visited' → logprob: -16.90130043029785
    8. 'visible' → logprob: -17.90130043029785
    9. 'visit' → logprob: -18.15130043029785
    10. '	' → logprob: -18.40130043029785

Token 358: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.026624439284205437
    2. ':' → logprob: -4.4016242027282715
    3. ' and' → logprob: -4.6516242027282715
    4. '):
' → logprob: -5.9016242027282715
    5. '               ' → logprob: -6.6516242027282715
    6. '           ' → logprob: -8.15162467956543
    7. 'and' → logprob: -10.52662467956543
    8. ':

' → logprob: -10.65162467956543
    9. '():
' → logprob: -10.77662467956543
    10. ' :
' → logprob: -11.02662467956543

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009195583988912404
    2. ' visited' → logprob: -7.500919342041016
    3. 'visited' → logprob: -8.500919342041016
    4. '```' → logprob: -9.750919342041016
    5. ':
' → logprob: -10.375919342041016
    6. ' and' → logprob: -10.500919342041016
    7. '                
' → logprob: -11.000919342041016
    8. ',' → logprob: -12.125919342041016
    9. '                   ' → logprob: -12.375919342041016
    10. '           ' → logprob: -12.500919342041016

Token 360: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.1787656992673874
    2. '                   ' → logprob: -2.1787657737731934
    3. 'visited' (adapté à ' visited') → logprob: -3.0537657737731934
    4. '               ' → logprob: -5.803765773773193
    5. '                       ' → logprob: -8.553765296936035
    6. '                ' → logprob: -10.303765296936035
    7. 'Visited' → logprob: -11.053765296936035
    8. '
' → logprob: -11.053765296936035
    9. '```' → logprob: -11.178765296936035
    10. ' queue' → logprob: -11.928765296936035

Token 361: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00033784625702537596
    2. '.' → logprob: -8.000337600708008
    3. ' .' → logprob: -13.625337600708008
    4. 'add' → logprob: -13.750337600708008
    5. ' add' → logprob: -16.250337600708008
    6. ')add' → logprob: -16.875337600708008
    7. '.Add' → logprob: -17.750337600708008
    8. '.update' → logprob: -17.875337600708008
    9. '	add' → logprob: -18.625337600708008
    10. '.append' → logprob: -19.375337600708008

Token 362: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -18.125
    4. '((' → logprob: -19.375
    5. 'j' → logprob: -20.5
    6. '(i' → logprob: -20.875
    7. '(v' → logprob: -21.125
    8. '(
' → logprob: -21.25
    9. '	j' → logprob: -21.25
    10. ',j' → logprob: -21.25

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5936278700828552
    2. '               ' → logprob: -1.0936279296875
    3. ')
' → logprob: -2.3436279296875
    4. ',' → logprob: -4.5936279296875
    5. '):
' → logprob: -5.5936279296875
    6. '<|end|>' → logprob: -6.4686279296875
    7. '),' → logprob: -7.8436279296875
    8. '                   ' → logprob: -8.9686279296875
    9. ')
' → logprob: -9.2186279296875
    10. '           ' → logprob: -9.2186279296875

Token 364: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001640546484850347
    2. ' queue' → logprob: -6.876640319824219
    3. 'queue' → logprob: -8.001640319824219
    4. '                   ' → logprob: -8.751640319824219
    5. '
' → logprob: -10.376640319824219
    6. '(queue' → logprob: -10.751640319824219
    7. '                
' → logprob: -11.126640319824219
    8. '           ' → logprob: -11.376640319824219
    9. '```' → logprob: -11.626640319824219
    10. '                       ' → logprob: -11.751640319824219

Token 365: ' u' (ID: 337)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.001504982472397387
    2. ' queue' → logprob: -6.501504898071289
    3. '               ' → logprob: -13.126504898071289
    4. '                   ' → logprob: -15.001504898071289
    5. '	queue' → logprob: -15.876504898071289
    6. '```' → logprob: -16.12650489807129
    7. '
' → logprob: -17.00150489807129
    8. '(queue' → logprob: -17.12650489807129
    9. '.queue' → logprob: -17.37650489807129
    10. 'yield' → logprob: -18.12650489807129

Token 366: '(j' (ID: 4997)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.04314534366130829
    2. '(j' → logprob: -3.1681454181671143
    3. '(' → logprob: -9.168145179748535
    4. '(u' → logprob: -11.168145179748535
    5. 'j' → logprob: -11.668145179748535
    6. '(p' → logprob: -12.043145179748535
    7. ' (' → logprob: -13.043145179748535
    8. '(queue' → logprob: -13.293145179748535
    9. 'v' → logprob: -13.543145179748535
    10. '(l' → logprob: -13.793145179748535

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09059996157884598
    2. ',v' → logprob: -2.46560001373291
    3. ',j' → logprob: -6.46560001373291
    4. '(v' → logprob: -10.09060001373291
    5. ' ,' → logprob: -10.46560001373291
    6. 'v' → logprob: -10.71560001373291
    7. 'j' → logprob: -12.21560001373291
    8. ',
' → logprob: -12.71560001373291
    9. '(' → logprob: -14.34060001373291
    10. '(j' → logprob: -14.46560001373291

Token 368: ' start' (ID: 1604)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001197966979816556
    2. ' v' → logprob: -7.376197814941406
    3. 'start' → logprob: -7.501197814941406
    4. 'j' → logprob: -11.376197814941406
    5. ' start' → logprob: -12.751197814941406
    6. '   ' → logprob: -13.501197814941406
    7. 'p' → logprob: -13.751197814941406
    8. ' ' → logprob: -14.501197814941406
    9. 'vj' → logprob: -14.626197814941406
    10. '	v' → logprob: -15.501197814941406

Token 369: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062089577317237854
    2. ')
' → logprob: -2.812089681625366
    3. ')
' → logprob: -9.187089920043945
    4. '               ' → logprob: -11.937089920043945
    5. '))' → logprob: -12.437089920043945
    6. ')

' → logprob: -13.187089920043945
    7. ');' → logprob: -13.437089920043945
    8. '),' → logprob: -13.812089920043945
    9. ')v' → logprob: -13.812089920043945
    10. ' )' → logprob: -14.812089920043945

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013285996101330966
    2. '                
' → logprob: -9.87513256072998
    3. '<|end|>' → logprob: -10.87513256072998
    4. ',' → logprob: -11.25013256072998
    5. '              ' → logprob: -11.50013256072998
    6. '
' → logprob: -11.75013256072998
    7. '                ' → logprob: -12.00013256072998
    8. '                   ' → logprob: -12.12513256072998
    9. '(queue' → logprob: -12.37513256072998
    10. ' queue' → logprob: -12.62513256072998

Token 371: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -8.041768160182983e-05
    2. ' queue' → logprob: -9.500080108642578
    3. '               ' → logprob: -12.375080108642578
    4. '	queue' → logprob: -14.375080108642578
    5. '                   ' → logprob: -15.250080108642578
    6. '
' → logprob: -15.625080108642578
    7. '```' → logprob: -16.750080108642578
    8. '           ' → logprob: -17.000080108642578
    9. '   ' → logprob: -17.250080108642578
    10. '(queue' → logprob: -17.500080108642578

Token 372: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.824579784530215e-05
    2. '.extend' → logprob: -9.8750581741333
    3. '.' → logprob: -12.1250581741333
    4. '.enqueue' → logprob: -14.8750581741333
    5. 'append' → logprob: -15.1250581741333
    6. '.app' → logprob: -15.5000581741333
    7. '.add' → logprob: -15.6250581741333
    8. '.Append' → logprob: -15.8750581741333
    9. '.push' → logprob: -16.875059127807617
    10. '_append' → logprob: -17.125059127807617

Token 373: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -18.750003814697266
    4. '(
' → logprob: -20.000003814697266
    5. '((' → logprob: -20.000003814697266
    6. '(J' → logprob: -20.500003814697266
    7. '(s' → logprob: -20.625003814697266
    8. '(i' → logprob: -20.750003814697266
    9. '(b' → logprob: -20.875003814697266
    10. '(v' → logprob: -21.000003814697266

Token 374: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038145645521581173
    2. ')
' → logprob: -7.8753814697265625
    3. ' )' → logprob: -14.750381469726562
    4. ')

' → logprob: -15.750381469726562
    5. '))' → logprob: -15.875381469726562
    6. ')
' → logprob: -16.250381469726562
    7. 'j' → logprob: -16.500381469726562
    8. '               ' → logprob: -16.750381469726562
    9. ')return' → logprob: -16.875381469726562
    10. '       ' → logprob: -16.875381469726562

Token 375: 'list' (ID: 2641)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20537050068378448
    2. 'visited' → logprob: -1.705370545387268
    3. 'b' → logprob: -6.7053704261779785
    4. 'list' → logprob: -7.0803704261779785
    5. '_' → logprob: -7.3303704261779785
    6. '#' → logprob: -8.455370903015137
    7. 'p' → logprob: -8.455370903015137
    8. 'while' → logprob: -8.580370903015137
    9. '[' → logprob: -8.705370903015137
    10. 'u' → logprob: -9.830370903015137

Token 376: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0374685563147068
    2. '(chain' → logprob: -4.162468433380127
    3. '(' → logprob: -4.287468433380127
    4. '(list' → logprob: -5.662468433380127
    5. '(filter' → logprob: -6.037468433380127
    6. '(range' → logprob: -7.662468433380127
    7. 'map' → logprob: -8.037468910217285
    8. '(lambda' → logprob: -8.537468910217285
    9. '(b' → logprob: -8.537468910217285
    10. '(queue' → logprob: -9.912468910217285

Token 377: '(lambda' (ID: 43341)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07998831570148468
    2. '(lambda' → logprob: -2.5799882411956787
    3. '(' → logprob: -6.829988479614258
    4. '(
' → logprob: -11.829988479614258
    5. 'b' → logprob: -12.204988479614258
    6. ' (' → logprob: -14.204988479614258
    7. '(int' → logprob: -14.329988479614258
    8. '(f' → logprob: -14.329988479614258
    9. '(u' → logprob: -14.579988479614258
    10. '((' → logprob: -14.704988479614258

Token 378: ' i' (ID: 575)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.808074951171875
    2. '(lambda' → logprob: -1.683074951171875
    3. 'x' → logprob: -2.558074951171875
    4. 'v' → logprob: -2.683074951171875
    5. ' (' → logprob: -3.433074951171875
    6. '(i' → logprob: -3.433074951171875
    7. 'b' → logprob: -3.683074951171875
    8. '(' → logprob: -3.683074951171875
    9. '(x' → logprob: -3.808074951171875
    10. '(j' → logprob: -4.183074951171875

Token 379: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005981054622679949
    2. ' :' → logprob: -5.255980968475342
    3. '(i' → logprob: -8.2559814453125
    4. ':
' → logprob: -8.6309814453125
    5. ':i' → logprob: -9.0059814453125
    6. ':(' → logprob: -9.5059814453125
    7. ' i' → logprob: -10.8809814453125
    8. ':[' → logprob: -11.1309814453125
    9. '=lambda' → logprob: -11.3809814453125
    10. '   ' → logprob: -11.6309814453125

Token 380: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10747940838336945
    2. '(' → logprob: -3.4824793338775635
    3. ' bfs' → logprob: -3.4824793338775635
    4. 'visited' → logprob: -3.8574793338775635
    5. '(b' → logprob: -5.107479572296143
    6. '[' → logprob: -6.232479572296143
    7. '[b' → logprob: -6.232479572296143
    8. 'p' → logprob: -6.357479572296143
    9. '(i' → logprob: -6.482479572296143
    10. ' (' → logprob: -6.607479572296143

Token 381: 'i' (ID: 72)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.3511621654033661
    2. 'b' → logprob: -1.3511621952056885
    3. 'p' → logprob: -3.7261621952056885
    4. 'lambda' → logprob: -5.976161956787109
    5. 'not' → logprob: -6.226161956787109
    6. 'i' → logprob: -6.601161956787109
    7. '(' → logprob: -6.976161956787109
    8. ' visited' → logprob: -6.976161956787109
    9. ' bfs' → logprob: -7.226161956787109
    10. 'l' → logprob: -7.226161956787109

Token 382: ' not' (ID: 625)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3616848587989807
    2. ',' → logprob: -1.486684799194336
    3. ' not' → logprob: -3.611684799194336
    4. 'not' → logprob: -4.361684799194336
    5. 'if' → logprob: -4.986684799194336
    6. ' if' → logprob: -5.111684799194336
    7. ':not' → logprob: -5.111684799194336
    8. '),' → logprob: -5.361684799194336
    9. ' in' → logprob: -5.361684799194336
    10. ')' → logprob: -5.986684799194336

Token 383: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16142769157886505
    2. ' in' → logprob: -1.9114277362823486
    3. 'visited' → logprob: -6.9114274978637695
    4. ' ' → logprob: -9.16142749786377
    5. 'not' → logprob: -10.91142749786377
    6. ' visited' → logprob: -11.03642749786377
    7. '  ' → logprob: -11.28642749786377
    8. ',' → logprob: -11.78642749786377
    9. '   ' → logprob: -12.16142749786377
    10. ')' → logprob: -12.41142749786377

Token 384: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0009130131802521646
    2. ' visited' → logprob: -7.000913143157959
    3. '
' → logprob: -14.7509126663208
    4. '   ' → logprob: -15.3759126663208
    5. 'p' → logprob: -15.5009126663208
    6. '  ' → logprob: -15.7509126663208
    7. ' ' → logprob: -15.8759126663208
    8. 'vis' → logprob: -16.000913619995117
    9. 'Visited' → logprob: -16.625913619995117
    10. 'parents' → logprob: -17.000913619995117

Token 385: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4574810862541199
    2. ')' → logprob: -1.0824811458587646
    3. 'and' → logprob: -3.7074811458587646
    4. ',' → logprob: -6.0824809074401855
    5. ' )' → logprob: -6.9574809074401855
    6. '),' → logprob: -7.9574809074401855
    7. '   ' → logprob: -8.707481384277344
    8. ' ' → logprob: -10.582481384277344
    9. '    ' → logprob: -11.582481384277344
    10. '       ' → logprob: -12.082481384277344

Token 386: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08836695551872253
    2. ',' → logprob: -2.838366985321045
    3. 'and' → logprob: -3.713366985321045
    4. '   ' → logprob: -7.338366985321045
    5. ')' → logprob: -8.338366508483887
    6. '),' → logprob: -8.338366508483887
    7. ':' → logprob: -8.463366508483887
    8. ' ,' → logprob: -9.338366508483887
    9. ' ' → logprob: -9.713366508483887
    10. ',
' → logprob: -10.463366508483887

Token 387: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2760673463344574
    2. '(b' → logprob: -1.9010673761367798
    3. 'visited' → logprob: -3.2760672569274902
    4. '[' → logprob: -3.4010672569274902
    5. 'b' → logprob: -4.77606725692749
    6. '[b' → logprob: -5.02606725692749
    7. ' (' → logprob: -5.52606725692749
    8. '([' → logprob: -7.90106725692749
    9. '(vis' → logprob: -8.276067733764648
    10. ' visited' → logprob: -8.401067733764648

Token 388: 'visited' (ID: 52453)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.737862765789032
    2. 'visited' → logprob: -1.2378628253936768
    3. '(b' → logprob: -2.2378628253936768
    4. 'b' → logprob: -2.7378628253936768
    5. '[' → logprob: -3.2378628253936768
    6. '[b' → logprob: -3.9878628253936768
    7. ' (' → logprob: -7.612862586975098
    8. '(vis' → logprob: -7.987862586975098
    9. ' visited' → logprob: -8.112862586975098
    10. '   ' → logprob: -8.112862586975098

Token 389: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0013105978723615408
    2. '.' → logprob: -6.8763108253479
    3. 'add' → logprob: -8.251310348510742
    4. ' .' → logprob: -11.376310348510742
    5. '.update' → logprob: -13.501310348510742
    6. '
' → logprob: -14.126310348510742
    7. ').' → logprob: -14.501310348510742
    8. '   ' → logprob: -15.001310348510742
    9. '.append' → logprob: -15.126310348510742
    10. '.Add' → logprob: -15.126310348510742

Token 390: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. ' (' → logprob: -17.125
    4. '(
' → logprob: -17.625
    5. '((' → logprob: -19.25
    6. 'i' → logprob: -20.0
    7. '
' → logprob: -20.375
    8. '(ii' → logprob: -20.625
    9. '```' → logprob: -21.125
    10. '   ' → logprob: -21.25

Token 391: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9566619992256165
    2. ' and' → logprob: -0.9566619992256165
    3. '()' → logprob: -2.0816619396209717
    4. ',' → logprob: -2.4566619396209717
    5. 'and' → logprob: -4.581662178039551
    6. '(),' → logprob: -5.581662178039551
    7. '),' → logprob: -5.831662178039551
    8. '())' → logprob: -6.331662178039551
    9. ' ,' → logprob: -7.331662178039551
    10. '   ' → logprob: -7.331662178039551

Token 392: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10034458339214325
    2. ' bfs' → logprob: -2.350344657897949
    3. '   ' → logprob: -9.97534465789795
    4. ' ' → logprob: -10.85034465789795
    5. 'queue' → logprob: -10.85034465789795
    6. '[b' → logprob: -11.22534465789795
    7. ' queue' → logprob: -12.22534465789795
    8. ' b' → logprob: -12.35034465789795
    9. ')' → logprob: -12.47534465789795
    10. '  ' → logprob: -12.72534465789795

Token 393: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.4849443838757e-06
    2. ' (' → logprob: -13.125004768371582
    3. 'i' → logprob: -13.500004768371582
    4. ')(' → logprob: -14.125004768371582
    5. '(' → logprob: -15.625004768371582
    6. ')' → logprob: -16.000003814697266
    7. '(
' → logprob: -17.750003814697266
    8. '```' → logprob: -18.000003814697266
    9. ')i' → logprob: -18.625003814697266
    10. ' i' → logprob: -18.875003814697266

Token 394: ')),' (ID: 12098)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.22200003266334534
    2. ')),' → logprob: -2.3470001220703125
    3. ')))' → logprob: -3.2220001220703125
    4. '))' → logprob: -3.4720001220703125
    5. ')' → logprob: -3.9720001220703125
    6. '))),' → logprob: -4.7220001220703125
    7. '))(' → logprob: -6.9720001220703125
    8. ')(' → logprob: -6.9720001220703125
    9. '))))' → logprob: -7.3470001220703125
    10. ')i' → logprob: -7.4720001220703125

Token 395: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019395847339183092
    2. ' range' → logprob: -6.25193977355957
    3. 'filter' → logprob: -11.87693977355957
    4. '   ' → logprob: -13.50193977355957
    5. '  ' → logprob: -14.25193977355957
    6. ' ' → logprob: -14.37693977355957
    7. 'p' → logprob: -14.87693977355957
    8. '(range' → logprob: -15.00193977355957
    9. '	range' → logprob: -15.37693977355957
    10. 'chain' → logprob: -15.62693977355957

Token 396: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004092235758434981
    2. '(n' → logprob: -7.875409126281738
    3. '1' → logprob: -10.500409126281738
    4. ' (' → logprob: -13.875409126281738
    5. 'n' → logprob: -15.125409126281738
    6. '   ' → logprob: -16.250410079956055
    7. '(
' → logprob: -16.375410079956055
    8. ' ' → logprob: -17.500410079956055
    9. '```' → logprob: -17.750410079956055
    10. '`' → logprob: -18.437910079956055

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038940184749662876
    2. 'n' → logprob: -6.003893852233887
    3. '(' → logprob: -6.628893852233887
    4. '(n' → logprob: -9.378893852233887
    5. ' ' → logprob: -12.378893852233887
    6. '   ' → logprob: -12.503893852233887
    7. '0' → logprob: -13.878893852233887
    8. '
' → logprob: -14.128893852233887
    9. ' n' → logprob: -14.878893852233887
    10. '```' → logprob: -15.628893852233887

Token 398: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6419289112091064
    2. ',' → logprob: -1.1419289112091064
    3. '(' → logprob: -1.8919289112091064
    4. ' (' → logprob: -6.266928672790527
    5. ' ,' → logprob: -7.266928672790527
    6. 'n' → logprob: -7.266928672790527
    7. ',n' → logprob: -7.891928672790527
    8. ' ' → logprob: -10.766928672790527
    9. '1' → logprob: -10.891928672790527
    10. ' n' → logprob: -11.141928672790527

Token 399: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005250949412584305
    2. ' n' → logprob: -5.255250930786133
    3. '   ' → logprob: -11.130250930786133
    4. '(n' → logprob: -14.130250930786133
    5. ' ' → logprob: -14.255250930786133
    6. '  ' → logprob: -14.505250930786133
    7. '	n' → logprob: -15.130250930786133
    8. '    ' → logprob: -15.755250930786133
    9. '
' → logprob: -16.255250930786133
    10. '```' → logprob: -16.630250930786133

Token 400: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04300662875175476
    2. ' +' → logprob: -3.168006658554077
    3. '()+' → logprob: -12.918006896972656
    4. ' ' → logprob: -13.168006896972656
    5. '+
' → logprob: -13.918006896972656
    6. '(n' → logprob: -14.918006896972656
    7. '+n' → logprob: -14.918006896972656
    8. '1' → logprob: -15.168006896972656
    9. '   ' → logprob: -15.168006896972656
    10. ' +
' → logprob: -15.668006896972656

Token 401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.00006675720215
    4. 'n' → logprob: -17.25006675720215
    5. '(' → logprob: -18.87506675720215
    6. '
' → logprob: -19.00006675720215
    7. '```' → logprob: -19.00006675720215
    8. '2' → logprob: -19.12506675720215
    9. '  ' → logprob: -19.12506675720215
    10. ' n' → logprob: -20.12506675720215

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.000003814697266
    4. 'n' → logprob: -17.000003814697266
    5. '2' → logprob: -18.125003814697266
    6. '
' → logprob: -18.375003814697266
    7. '```' → logprob: -18.375003814697266
    8. '  ' → logprob: -19.187503814697266
    9. '(' → logprob: -19.562503814697266
    10. '`' → logprob: -19.875003814697266

Token 403: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4099609851837158
    2. '))' → logprob: -1.1599609851837158
    3. ')' → logprob: -3.784960985183716
    4. '))))' → logprob: -9.284960746765137
    5. '),' → logprob: -12.534960746765137
    6. ')));' → logprob: -12.534960746765137
    7. ' ' → logprob: -12.659960746765137
    8. ')])' → logprob: -13.284960746765137
    9. '()))' → logprob: -13.284960746765137
    10. ']))' → logprob: -13.409960746765137

Token 404: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3524312376976013
    2. 'for' → logprob: -1.602431297302246
    3. '#' → logprob: -2.602431297302246
    4. 'result' → logprob: -5.227431297302246
    5. 'def' → logprob: -5.852431297302246
    6. 'answer' → logprob: -5.852431297302246
    7. 'p' → logprob: -6.227431297302246
    8. 'True' → logprob: -7.352431297302246
    9. 'from' → logprob: -7.727431297302246
    10. 'ans' → logprob: -7.727431297302246

Token 405: ' Intr' (ID: 76942)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26783064007759094
    2. 'all' → logprob: -1.8928306102752686
    3. 'ans' → logprob: -3.2678306102752686
    4. 'result' → logprob: -3.7678306102752686
    5. 'any' → logprob: -5.267830848693848
    6. 'res' → logprob: -5.767830848693848
    7. 'valid' → logprob: -6.267830848693848
    8. 'p' → logprob: -6.517830848693848
    9. 'set' → logprob: -6.517830848693848
    10. 'reduce' → logprob: -6.642830848693848

Token 406: 'icate' (ID: 8091)
  Prédit: 'insic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insic' → logprob: -1.0343754291534424
    2. 'os' → logprob: -1.2843754291534424
    3. 'od' → logprob: -1.5343754291534424
    4. 'o' → logprob: -2.9093754291534424
    5. 'ic' → logprob: -4.159375190734863
    6. 'icate' → logprob: -4.284375190734863
    7. 'insics' → logprob: -5.159375190734863
    8. '#' → logprob: -5.284375190734863
    9. 'odu' → logprob: -5.284375190734863
    10. 'ans' → logprob: -5.534375190734863

Token 407: ' reduce' (ID: 10389)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.6563807725906372
    2. 'ans' → logprob: -1.9063807725906372
    3. 'result' → logprob: -1.9063807725906372
    4. ' res' → logprob: -3.0313806533813477
    5. ' ans' → logprob: -3.0313806533813477
    6. ' result' → logprob: -3.5313806533813477
    7. 'p' → logprob: -3.7813806533813477
    8. 's' → logprob: -4.031380653381348
    9. 'r' → logprob: -4.031380653381348
    10. 'pairs' → logprob: -4.031380653381348

Token 408: ' over' (ID: 1072)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.020509077236056328
    2. '(
' → logprob: -4.770509243011475
    3. '(' → logprob: -5.645509243011475
    4. 'result' → logprob: -6.020509243011475
    5. 'def' → logprob: -6.395509243011475
    6. 'lambda' → logprob: -6.770509243011475
    7. '(eq' → logprob: -6.895509243011475
    8. 'eq' → logprob: -8.270508766174316
    9. '(p' → logprob: -8.520508766174316
    10. '(False' → logprob: -8.770508766174316

Token 409: ' zip' (ID: 16216)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1329636573791504
    2. 'p' → logprob: -2.2579636573791504
    3. 'chain' → logprob: -4.25796365737915
    4. 'zip' → logprob: -5.88296365737915
    5. 'filter' → logprob: -7.00796365737915
    6. 'enumer' → logprob: -7.50796365737915
    7. 'map' → logprob: -7.88296365737915
    8. '(p' → logprob: -8.257963180541992
    9. '(range' → logprob: -8.382963180541992
    10. '(' → logprob: -9.507963180541992

Token 410: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8633924126625061
    2. 'result' → logprob: -1.1133923530578613
    3. '(p' → logprob: -2.3633923530578613
    4. 'res' → logprob: -3.4883923530578613
    5. 'for' → logprob: -4.238392353057861
    6. 'range' → logprob: -4.488392353057861
    7. '(
' → logprob: -4.488392353057861
    8. '_result' → logprob: -4.738392353057861
    9. 'results' → logprob: -4.988392353057861
    10. '(range' → logprob: -4.988392353057861

Token 411: ' count' (ID: 3605)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.350468635559082
    2. 'chain' → logprob: -1.475468635559082
    3. 'all' → logprob: -1.600468635559082
    4. 'map' → logprob: -2.350468635559082
    5. 'filter' → logprob: -2.725468635559082
    6. 'p' → logprob: -2.725468635559082
    7. 'zip' → logprob: -3.725468635559082
    8. 'reduce' → logprob: -4.350468635559082
    9. '(i' → logprob: -4.475468635559082
    10. '(p' → logprob: -4.725468635559082

Token 412: ' fixed' (ID: 13213)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0465174913406372
    2. 'p' → logprob: -1.7965174913406372
    3. 'range' → logprob: -2.6715173721313477
    4. '1' → logprob: -2.9215173721313477
    5. 'count' → logprob: -2.9215173721313477
    6. '(
' → logprob: -2.9215173721313477
    7. '(p' → logprob: -3.2965173721313477
    8. 'map' → logprob: -3.2965173721313477
    9. 'filter' → logprob: -3.2965173721313477
    10. 'sum' → logprob: -3.2965173721313477

Token 413: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02165040373802185
    2. 'p' → logprob: -4.646650314331055
    3. 'point' → logprob: -5.146650314331055
    4. '_points' → logprob: -6.396650314331055
    5. '(p' → logprob: -6.521650314331055
    6. 'filter' → logprob: -7.396650314331055
    7. 'map' → logprob: -7.521650314331055
    8. 'zip' → logprob: -7.896650314331055
    9. 'count' → logprob: -8.146650314331055
    10. '(zip' → logprob: -8.396650314331055

Token 414: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2973612546920776
    2. 'count' → logprob: -1.5473612546920776
    3. 'result' → logprob: -1.6723612546920776
    4. 'reduce' → logprob: -2.297361373901367
    5. 'p' → logprob: -2.422361373901367
    6. 'fixed' → logprob: -2.672361373901367
    7. 'res' → logprob: -4.547361373901367
    8. 'sum' → logprob: -5.047361373901367
    9. 'for' → logprob: -5.047361373901367
    10. '(
' → logprob: -5.047361373901367

Token 415: ' permutation' (ID: 135200)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.7486538290977478
    2. 'p' → logprob: -1.6236538887023926
    3. 'range' → logprob: -1.6236538887023926
    4. 'map' → logprob: -2.3736538887023926
    5. 'filter' → logprob: -3.3736538887023926
    6. 'enumer' → logprob: -6.123653888702393
    7. 'chain' → logprob: -6.748653888702393
    8. '(p' → logprob: -7.498653888702393
    9. '(' → logprob: -7.873653888702393
    10. '(zip' → logprob: -8.373653411865234

Token 416: '
' (ID: 198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5594122409820557
    2. 'reduce' → logprob: -1.1844122409820557
    3. 'count' → logprob: -3.5594122409820557
    4. 'print' → logprob: -3.8094122409820557
    5. '(p' → logprob: -4.059412002563477
    6. '(' → logprob: -4.184412002563477
    7. '1' → logprob: -4.934412002563477
    8. 'result' → logprob: -5.059412002563477
    9. 'sum' → logprob: -5.184412002563477
    10. 'fixed' → logprob: -5.559412002563477

Token 417: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01762922666966915
    2. 'result' → logprob: -5.142629146575928
    3. 'count' → logprob: -5.517629146575928
    4. 'sum' → logprob: -5.892629146575928
    5. 'fixed' → logprob: -6.017629146575928
    6. 'reduce' → logprob: -7.017629146575928
    7. 'res' → logprob: -7.517629146575928
    8. 'from' → logprob: -8.267629623413086
    9. 'ans' → logprob: -8.517629623413086
    10. 'cnt' → logprob: -9.142629623413086

Token 418: '(re' (ID: 8178)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.3899466097354889
    2. '(re' → logprob: -1.1399465799331665
    3. '(' → logprob: -5.889946460723877
    4. '(
' → logprob: -9.014946937561035
    5. 'sum' → logprob: -9.139946937561035
    6. '(len' → logprob: -9.764946937561035
    7. 'reduce' → logprob: -12.514946937561035
    8. '(list' → logprob: -12.639946937561035
    9. '(f' → logprob: -12.639946937561035
    10. '((' → logprob: -13.014946937561035

Token 419: 'duce' (ID: 21375)
  Prédit: 'duce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duce' → logprob: -8.220573363360018e-05
    2. 'd' → logprob: -9.500082015991211
    3. 'du' → logprob: -12.625082015991211
    4. 'de' → logprob: -13.250082015991211
    5. '(' → logprob: -13.375082015991211
    6. '[' → logprob: -15.125082015991211
    7. 'duced' → logprob: -15.750082015991211
    8. '
' → logprob: -16.75008201599121
    9. 'duc' → logprob: -16.87508201599121
    10. '

' → logprob: -17.00008201599121

Token 420: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03185855597257614
    2. '(' → logprob: -3.781858444213867
    3. '(
' → logprob: -4.781858444213867
    4. '((' → logprob: -9.156858444213867
    5. '(int' → logprob: -10.156858444213867
    6. '(operator' → logprob: -10.656858444213867
    7. '(

' → logprob: -11.906858444213867
    8. 'lambda' → logprob: -12.156858444213867
    9. '(
' → logprob: -12.406858444213867
    10. '   ' → logprob: -12.906858444213867

Token 421: ' acc' (ID: 1259)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.989766538143158
    2. 'acc' → logprob: -1.2397665977478027
    3. ' acc' → logprob: -1.4897665977478027
    4. 'x' → logprob: -2.6147665977478027
    5. ' a' → logprob: -4.114766597747803
    6. 'lambda' → logprob: -4.239766597747803
    7. ' x' → logprob: -5.364766597747803
    8. ' lambda' → logprob: -5.864766597747803
    9. 'ac' → logprob: -7.364766597747803
    10. 'i' → logprob: -8.364766120910645

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007661513052880764
    2. ',x' → logprob: -5.00766134262085
    3. ',i' → logprob: -8.007661819458008
    4. ',p' → logprob: -8.507661819458008
    5. ',a' → logprob: -8.882661819458008
    6. ' ,' → logprob: -9.757661819458008
    7. ',t' → logprob: -9.882661819458008
    8. 'acc' → logprob: -10.257661819458008
    9. ',(' → logprob: -10.632661819458008
    10. ',v' → logprob: -11.382661819458008

Token 423: ' pair' (ID: 10610)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.18704739212989807
    2. 'x' → logprob: -1.8120473623275757
    3. 'ab' → logprob: -6.187047481536865
    4. 'ij' → logprob: -6.312047481536865
    5. 'xz' → logprob: -7.062047481536865
    6. 'pair' → logprob: -7.312047481536865
    7. 't' → logprob: -7.312047481536865
    8. 'kv' → logprob: -8.312047004699707
    9. 'ix' → logprob: -8.437047004699707
    10. 'tp' → logprob: -9.062047004699707

Token 424: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003473825636319816
    2. ',' → logprob: -8.500347137451172
    3. ' :' → logprob: -9.000347137451172
    4. ':
' → logprob: -11.625347137451172
    5. 'acc' → logprob: -13.000347137451172
    6. ':(' → logprob: -13.000347137451172
    7. '_:' → logprob: -13.625347137451172
    8. ':eq' → logprob: -14.000347137451172
    9. 's' → logprob: -14.375347137451172
    10. '=' → logprob: -14.500347137451172

Token 425: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.02326015569269657
    2. ' acc' → logprob: -3.7732601165771484
    3. '(acc' → logprob: -11.398260116577148
    4. '   ' → logprob: -13.148260116577148
    5. ' ' → logprob: -14.523260116577148
    6. '	acc' → logprob: -14.648260116577148
    7. '  ' → logprob: -15.523260116577148
    8. '(' → logprob: -15.523260116577148
    9. 'ac' → logprob: -17.14826011657715
    10. '    ' → logprob: -17.39826011657715

Token 426: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006752905435860157
    2. ' +' → logprob: -5.006752967834473
    3. '+(' → logprob: -10.256752967834473
    4. 'acc' → logprob: -14.131752967834473
    5. '+[' → logprob: -14.256752967834473
    6. '+
' → logprob: -14.506752967834473
    7. 'if' → logprob: -15.506752967834473
    8. '+=' → logprob: -15.756752967834473
    9. '＋' → logprob: -16.756752014160156
    10. '+

' → logprob: -17.006752014160156

Token 427: ' int' (ID: 677)
  Prédit: '(eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(eq' → logprob: -0.03565229848027229
    2. 'eq' → logprob: -4.160652160644531
    3. '(p' → logprob: -4.910652160644531
    4. '1' → logprob: -5.660652160644531
    5. '(int' → logprob: -6.035652160644531
    6. '(' → logprob: -6.160652160644531
    7. 'int' → logprob: -6.535652160644531
    8. '(e' → logprob: -7.035652160644531
    9. '(pair' → logprob: -7.035652160644531
    10. '(item' → logprob: -7.785652160644531

Token 428: '(d' (ID: 2572)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5078190565109253
    2. '(pair' → logprob: -1.5078190565109253
    3. '(d' → logprob: -2.382819175720215
    4. '(eq' → logprob: -2.632819175720215
    5. 'p' → logprob: -6.007819175720215
    6. 'd' → logprob: -6.007819175720215
    7. 'eq' → logprob: -6.132819175720215
    8. 'pair' → logprob: -6.257819175720215
    9. '(r' → logprob: -6.257819175720215
    10. '(' → logprob: -7.257819175720215

Token 429: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.5262715816497803
    2. '(pair' → logprob: -0.9012715816497803
    3. '(p' → logprob: -6.151271820068359
    4. 'pair' → logprob: -7.526271820068359
    5. '*' → logprob: -8.40127182006836
    6. '(' → logprob: -9.27627182006836
    7. '*p' → logprob: -9.52627182006836
    8. '(*(' → logprob: -9.77627182006836
    9. ' pair' → logprob: -12.40127182006836
    10. '(
' → logprob: -12.65127182006836

Token 430: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.07047206908464432
    2. '(pair' → logprob: -2.695472002029419
    3. '(p' → logprob: -8.69547176361084
    4. 'map' → logprob: -9.32047176361084
    5. 'tuple' → logprob: -9.69547176361084
    6. 'p' → logprob: -9.82047176361084
    7. '(' → logprob: -9.94547176361084
    8. '[p' → logprob: -10.32047176361084
    9. ' pair' → logprob: -10.44547176361084
    10. '   ' → logprob: -11.57047176361084

Token 431: ')),' (ID: 12098)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.27269676327705383
    2. ')),' → logprob: -1.6476967334747314
    3. '(p' → logprob: -3.7726967334747314
    4. 'pair' → logprob: -4.1476969718933105
    5. ')' → logprob: -5.6476969718933105
    6. '),' → logprob: -6.8976969718933105
    7. 'p' → logprob: -7.5226969718933105
    8. '))' → logprob: -7.7726969718933105
    9. ')
' → logprob: -8.022696495056152
    10. '((' → logprob: -8.147696495056152

Token 432: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.6336576342582703
    2. 'enumer' → logprob: -0.7586576342582703
    3. ' enumerate' → logprob: -7.383657455444336
    4. '(zip' → logprob: -8.258657455444336
    5. ' zip' → logprob: -9.258657455444336
    6. '(en' → logprob: -11.133657455444336
    7. 'filter' → logprob: -11.258657455444336
    8. '
' → logprob: -11.258657455444336
    9. 'chain' → logprob: -11.508657455444336
    10. '[(' → logprob: -12.258657455444336

Token 433: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.28140076994895935
    2. '(range' → logprob: -1.4064007997512817
    3. 'range' → logprob: -9.156400680541992
    4. '(en' → logprob: -10.031400680541992
    5. '(' → logprob: -10.156400680541992
    6. 'p' → logprob: -10.281400680541992
    7. '(chain' → logprob: -11.781400680541992
    8. '((' → logprob: -12.156400680541992
    9. '(list' → logprob: -12.406400680541992
    10. '(
' → logprob: -12.781400680541992

Token 434: '[' (ID: 58)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0014363046502694488
    2. 'range' → logprob: -6.626436233520508
    3. '(p' → logprob: -9.251436233520508
    4. '(' → logprob: -11.876436233520508
    5. ' range' → logprob: -12.626436233520508
    6. '(chain' → logprob: -13.501436233520508
    7. '(list' → logprob: -13.876436233520508
    8. 'p' → logprob: -14.251436233520508
    9. '	range' → logprob: -15.001436233520508
    10. ',' → logprob: -15.626436233520508

Token 435: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.73183855926618e-05
    2. ' range' → logprob: -9.625077247619629
    3. '(range' → logprob: -12.125077247619629
    4. '1' → logprob: -12.875077247619629
    5. 'list' → logprob: -14.000077247619629
    6. '
' → logprob: -14.250077247619629
    7. 'p' → logprob: -14.500077247619629
    8. '   ' → logprob: -14.500077247619629
    9. '[' → logprob: -15.250077247619629
    10. 'r' → logprob: -15.875077247619629

Token 436: ':],' (ID: 117284)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19998644292354584
    2. ',n' → logprob: -2.449986457824707
    3. 'range' → logprob: -3.074986457824707
    4. '(n' → logprob: -3.824986457824707
    5. '(range' → logprob: -5.074986457824707
    6. ':],' → logprob: -5.074986457824707
    7. ':n' → logprob: -5.199986457824707
    8. 'n' → logprob: -5.699986457824707
    9. ':,' → logprob: -6.074986457824707
    10. ',p' → logprob: -6.324986457824707

Token 437: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00031270162435248494
    2. ' range' → logprob: -8.125312805175781
    3. 'list' → logprob: -11.125312805175781
    4. 'p' → logprob: -14.125312805175781
    5. '(range' → logprob: -14.375312805175781
    6. '   ' → logprob: -15.875312805175781
    7. 'chain' → logprob: -16.12531280517578
    8. '	range' → logprob: -16.12531280517578
    9. ' ' → logprob: -16.62531280517578
    10. '[' → logprob: -16.62531280517578

Token 438: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06196925416588783
    2. '1' → logprob: -2.81196928024292
    3. '(n' → logprob: -14.186968803405762
    4. 'n' → logprob: -14.686968803405762
    5. ' ' → logprob: -14.686968803405762
    6. ' (' → logprob: -16.186969757080078
    7. '   ' → logprob: -16.936969757080078
    8. '```' → logprob: -19.186969757080078
    9. '2' → logprob: -19.311969757080078
    10. '  ' → logprob: -19.311969757080078

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006413076189346611
    2. '(' → logprob: -7.375641345977783
    3. 'n' → logprob: -11.750640869140625
    4. ' ' → logprob: -12.750640869140625
    5. '2' → logprob: -12.875640869140625
    6. '(n' → logprob: -13.875640869140625
    7. '   ' → logprob: -15.125640869140625
    8. '  ' → logprob: -17.875640869140625
    9. '```' → logprob: -18.375640869140625
    10. '１' → logprob: -18.438140869140625

Token 440: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009945318102836609
    2. ',n' → logprob: -4.634945392608643
    3. 'n' → logprob: -9.259944915771484
    4. '1' → logprob: -10.134944915771484
    5. ' ,' → logprob: -10.259944915771484
    6. '(n' → logprob: -11.009944915771484
    7. '(' → logprob: -13.759944915771484
    8. ',
' → logprob: -14.009944915771484
    9. ' n' → logprob: -15.134944915771484
    10. ' ' → logprob: -15.259944915771484

Token 441: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006722944788634777
    2. ' n' → logprob: -5.006722927093506
    3. '   ' → logprob: -12.131723403930664
    4. ' ' → logprob: -13.881723403930664
    5. '  ' → logprob: -14.006723403930664
    6. '    ' → logprob: -15.506723403930664
    7. '	n' → logprob: -15.631723403930664
    8. '```' → logprob: -16.006723403930664
    9. '(n' → logprob: -18.006723403930664
    10. '1' → logprob: -18.006723403930664

Token 442: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0889490619301796
    2. ' +' → logprob: -2.463948965072632
    3. '1' → logprob: -11.963949203491211
    4. '+n' → logprob: -13.713949203491211
    5. 'n' → logprob: -14.463949203491211
    6. ' ' → logprob: -14.838949203491211
    7. '+p' → logprob: -15.463949203491211
    8. '()+' → logprob: -15.713949203491211
    9. '```' → logprob: -15.713949203491211
    10. '+
' → logprob: -15.713949203491211

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. '+' → logprob: -10.87502670288086
    3. ' ' → logprob: -12.00002670288086
    4. 'n' → logprob: -13.75002670288086
    5. '2' → logprob: -18.00002670288086
    6. '```' → logprob: -18.25002670288086
    7. '(n' → logprob: -18.37502670288086
    8. '   ' → logprob: -18.50002670288086
    9. ' n' → logprob: -18.62502670288086
    10. ' +' → logprob: -19.00002670288086

Token 444: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00025680975522845984
    2. ' n' → logprob: -8.875256538391113
    3. '1' → logprob: -9.375256538391113
    4. '+' → logprob: -10.625256538391113
    5. '(n' → logprob: -11.875256538391113
    6. '   ' → logprob: -14.750256538391113
    7. ' ' → logprob: -15.625256538391113
    8. 'len' → logprob: -16.75025749206543
    9. '```' → logprob: -16.87525749206543
    10. '_n' → logprob: -17.37525749206543

Token 445: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6715994477272034
    2. ')),' → logprob: -0.7965994477272034
    3. ')))' → logprob: -3.4215993881225586
    4. '))' → logprob: -5.546599388122559
    5. ')' → logprob: -6.546599388122559
    6. '))))' → logprob: -9.046599388122559
    7. '))),' → logprob: -10.046599388122559
    8. ' ),' → logprob: -10.171599388122559
    9. ' ' → logprob: -11.421599388122559
    10. ')))
' → logprob: -11.546599388122559

Token 446: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.500003814697266
    4. '  ' → logprob: -20.125003814697266
    5. '۰' → logprob: -20.125003814697266
    6. '０' → logprob: -20.625003814697266
    7. '000' → logprob: -20.750003814697266
    8. ')' → logprob: -21.000003814697266
    9. '[' → logprob: -21.437503814697266
    10. '`' → logprob: -21.437503814697266

Token 447: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. '000' → logprob: -18.00001335144043
    5. '  ' → logprob: -18.25001335144043
    6. '۰' → logprob: -18.62501335144043
    7. '０' → logprob: -18.87501335144043
    8. '00' → logprob: -18.87501335144043
    9. '    ' → logprob: -19.87501335144043
    10. ')' → logprob: -19.93751335144043

Token 448: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0485910028219223
    2. ')' → logprob: -3.048590898513794
    3. ')))' → logprob: -13.423590660095215
    4. ')
' → logprob: -13.673590660095215
    5. '))
' → logprob: -14.423590660095215
    6. '),' → logprob: -16.29859161376953
    7. '));' → logprob: -16.92359161376953
    8. '])' → logprob: -17.67359161376953
    9. ' ))' → logprob: -17.67359161376953
    10. ').' → logprob: -17.92359161376953


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 446
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 338
Précision stricte (1ère position): 34.53%
Précision adaptée (1ère position): 35.43%
Précision (top 10): 75.78%
================================================================================
