================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    return input()

def convert_to_int(s):
    return int(s)

def int_to_str(n):
    return str(n)

def get_length(s):
    return len(s)

def char_at(s, i):
    return s[i]

def char_to_int(c):
    return int(c)

def add(a, b):
    return a + b

def sum_digits(n_str):
    length = get_length(n_str)
    total = 0
    for i in range(length):
        digit_char = char_at(n_str, i)
        digit_int = char_to_int(digit_char)
        total = add(total, digit_int)
    return total

def is_divisible(a, b):
    return a % b == 0

def print_yes():
    print("Yes")

def print_no():
    print("No")

def process(n_input):
    n = convert_to_int(n_input)
    n_str = int_to_str(n)
    s = sum_digits(n_str)
    if is_divisible(n, s):
        print_yes()
    else:
        print_no()

def main():
    n_input = read_input()
    process(n_input)
    return

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2547767758369446
    2. '_' → logprob: -1.5047767162322998
    3. ' (' → logprob: -6.504776954650879
    4. '_line' → logprob: -7.379776954650879
    5. ':' → logprob: -9.504776954650879
    6. '```' → logprob: -9.504776954650879
    7. ' ' → logprob: -9.629776954650879
    8. '_input' → logprob: -9.879776954650879
    9. 's' → logprob: -9.879776954650879
    10. '_data' → logprob: -10.004776954650879

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011178919114172459
    2. '_' → logprob: -4.636178970336914
    3. '():' → logprob: -7.136178970336914
    4. ' (' → logprob: -8.761178970336914
    5. '(_' → logprob: -9.386178970336914
    6. ':' → logprob: -9.886178970336914
    7. '```' → logprob: -9.886178970336914
    8. '(_:' → logprob: -9.886178970336914
    9. '):' → logprob: -10.636178970336914
    10. '_:' → logprob: -10.761178970336914

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21430249512195587
    2. '   ' → logprob: -1.9643025398254395
    3. '\' → logprob: -4.4643025398254395
    4. ' return' → logprob: -4.9643025398254395
    5. '()' → logprob: -5.3393025398254395
    6. '(
' → logprob: -5.7143025398254395
    7. ' (' → logprob: -5.7143025398254395
    8. '```' → logprob: -5.7143025398254395
    9. '(return' → logprob: -5.9643025398254395
    10. ' ' → logprob: -5.9643025398254395

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2776060104370117
    2. 'return' (adapté à ' return') → logprob: -1.7776060104370117
    3. 'data' → logprob: -3.7776060104370117
    4. ' return' → logprob: -4.027606010437012
    5. 'input' → logprob: -4.527606010437012
    6. ' ' → logprob: -4.652606010437012
    7. '    ' → logprob: -6.277606010437012
    8. 'r' → logprob: -6.402606010437012
    9. 'user' → logprob: -6.652606010437012
    10. 'n' → logprob: -6.902606010437012

Token 9: ' input' (ID: 3422)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.005234594456851482
    2. ' ' → logprob: -5.880234718322754
    3. ' input' → logprob: -6.755234718322754
    4. 'sys' → logprob: -6.755234718322754
    5. 'input' → logprob: -9.380234718322754
    6. ' int' → logprob: -12.755234718322754
    7. ' None' → logprob: -13.005234718322754
    8. ' list' → logprob: -13.255234718322754
    9. '	sys' → logprob: -13.380234718322754
    10. '(sys' → logprob: -13.880234718322754

Token 10: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5243173837661743
    2. '(' → logprob: -0.8993173837661743
    3. '(
' → logprob: -7.274317264556885
    4. '(

' → logprob: -9.274317741394043
    5. '('' → logprob: -9.399317741394043
    6. '()
' → logprob: -10.149317741394043
    7. '("")' → logprob: -10.274317741394043
    8. '().' → logprob: -10.399317741394043
    9. '("("' → logprob: -10.649317741394043
    10. ')' → logprob: -10.649317741394043

Token 11: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8851327896118164
    2. '
' → logprob: -1.2601327896118164
    3. '\' → logprob: -2.6351327896118164
    4. 'def' → logprob: -2.7601327896118164
    5. '<|end|>' → logprob: -3.1351327896118164
    6. '#' → logprob: -3.6351327896118164
    7. '.' → logprob: -3.8851327896118164
    8. '' → logprob: -4.135132789611816
    9. '    
' → logprob: -4.135132789611816
    10. '```' → logprob: -5.010132789611816

Token 12: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.025701768696308136
    2. ' process' → logprob: -4.150701999664307
    3. ' calculate' → logprob: -5.025701999664307
    4. ' write' → logprob: -6.900701999664307
    5. ' parse' → logprob: -8.025701522827148
    6. '_main' → logprob: -8.150701522827148
    7. ' print' → logprob: -8.275701522827148
    8. '_' → logprob: -8.650701522827148
    9. ' compute' → logprob: -9.025701522827148
    10. 'main' → logprob: -9.275701522827148

Token 13: '_to' (ID: 5089)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6527312397956848
    2. '_to' → logprob: -0.7777312397956848
    3. '(' → logprob: -4.652731418609619
    4. '_string' → logprob: -5.527731418609619
    5. '_token' → logprob: -6.402731418609619
    6. '_text' → logprob: -7.277731418609619
    7. '_line' → logprob: -7.277731418609619
    8. '_case' → logprob: -7.652731418609619
    9. '_value' → logprob: -7.902731418609619
    10. '_lower' → logprob: -8.027730941772461

Token 14: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.10887067019939423
    2. '_lower' → logprob: -2.9838707447052
    3. '_upper' → logprob: -3.9838707447052
    4. '_string' → logprob: -4.733870506286621
    5. '_float' → logprob: -5.483870506286621
    6. '_number' → logprob: -5.483870506286621
    7. '_str' → logprob: -5.483870506286621
    8. '_bytes' → logprob: -5.608870506286621
    9. '_binary' → logprob: -5.858870506286621
    10. '_' → logprob: -6.358870506286621

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023832572624087334
    2. 's' → logprob: -6.377383232116699
    3. '():' → logprob: -9.0023832321167
    4. ' (' → logprob: -9.1273832321167
    5. '("("' → logprob: -9.1273832321167
    6. '_' → logprob: -9.7523832321167
    7. '(s' → logprob: -10.0023832321167
    8. '(token' → logprob: -10.6273832321167
    9. '```' → logprob: -10.6273832321167
    10. '()' → logprob: -10.8773832321167

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01308105606585741
    2. ')' → logprob: -4.388081073760986
    3. '):
' → logprob: -8.013080596923828
    4. ' ):' → logprob: -8.638080596923828
    5. '   ' → logprob: -12.013080596923828
    6. 's' → logprob: -12.013080596923828
    7. 'int' → logprob: -12.013080596923828
    8. ' )' → logprob: -12.263080596923828
    9. ':' → logprob: -12.388080596923828
    10. '  ' → logprob: -12.763080596923828

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004492546431720257
    2. 'int' → logprob: -5.87949275970459
    3. ' return' → logprob: -6.75449275970459
    4. 'return' → logprob: -8.25449275970459
    5. ' int' → logprob: -8.37949275970459
    6. ':int' → logprob: -11.75449275970459
    7. '    ' → logprob: -12.25449275970459
    8. '(int' → logprob: -12.62949275970459
    9. '[int' → logprob: -12.62949275970459
    10. '    
' → logprob: -13.12949275970459

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002833649516105652
    2. ' return' → logprob: -6.752833843231201
    3. ' try' → logprob: -7.502833843231201
    4. 'try' → logprob: -7.627833843231201
    5. 'return' (adapté à ' return') → logprob: -7.752833843231201
    6. 'int' → logprob: -8.752833366394043
    7. ' int' → logprob: -10.752833366394043
    8. '    ' → logprob: -11.502833366394043
    9. '       ' → logprob: -13.502833366394043
    10. '```' → logprob: -13.752833366394043

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.020547257736325264
    2. 'int' → logprob: -3.8955471515655518
    3. ' ' → logprob: -12.770546913146973
    4. '   ' → logprob: -13.770546913146973
    5. '(int' → logprob: -14.895546913146973
    6. '=int' → logprob: -15.395546913146973
    7. '[int' → logprob: -15.395546913146973
    8. '	int' → logprob: -15.645546913146973
    9. '  ' → logprob: -15.770546913146973
    10. '```' → logprob: -15.895546913146973

Token 20: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0297551192343235
    2. '(' → logprob: -3.529755115509033
    3. 's' → logprob: -12.529755592346191
    4. ' (' → logprob: -14.154755592346191
    5. ')' → logprob: -17.029754638671875
    6. '(`' → logprob: -17.404754638671875
    7. '(ss' → logprob: -17.654754638671875
    8. '(
' → logprob: -17.779754638671875
    9. '(

' → logprob: -17.904754638671875
    10. '('' → logprob: -17.904754638671875

Token 21: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -13.500001907348633
    3. ' )' → logprob: -14.875001907348633
    4. ')))' → logprob: -15.375001907348633
    5. ')
' → logprob: -17.000001907348633
    6. ')return' → logprob: -18.250001907348633
    7. ')`' → logprob: -18.750001907348633
    8. '')' → logprob: -19.000001907348633
    9. ')])' → logprob: -19.250001907348633
    10. '())' → logprob: -19.250001907348633

Token 22: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6623334884643555
    2. 'def' → logprob: -1.2873334884643555
    3. '
' → logprob: -1.7873334884643555
    4. '\n' → logprob: -3.7873334884643555
    5. '#' → logprob: -5.1623334884643555
    6. '\' → logprob: -5.4123334884643555
    7. '<|end|>' → logprob: -5.6623334884643555
    8. 'n' → logprob: -6.6623334884643555
    9. 'd' → logprob: -7.1623334884643555
    10. '<|end|>' → logprob: -7.5373334884643555

Token 23: ' int' (ID: 677)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01193803921341896
    2. ' process' → logprob: -5.886938095092773
    3. ' calculate' → logprob: -6.011938095092773
    4. ' multiply' → logprob: -6.636938095092773
    5. ' add' → logprob: -6.761938095092773
    6. 'main' → logprob: -6.886938095092773
    7. ' def' → logprob: -7.261938095092773
    8. ' factorial' → logprob: -7.511938095092773
    9. ' sum' → logprob: -8.136938095092773
    10. ' convert' → logprob: -8.261938095092773

Token 24: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4958217740058899
    2. 'er' → logprob: -1.9958217144012451
    3. 'o' → logprob: -2.495821714401245
    4. 'eger' → logprob: -2.495821714401245
    5. 's' → logprob: -3.870821714401245
    6. 'rodu' → logprob: -4.120821952819824
    7. 'ERRUP' → logprob: -4.870821952819824
    8. 'erval' → logprob: -4.995821952819824
    9. 'ent' → logprob: -5.245821952819824
    10. '_div' → logprob: -5.370821952819824

Token 25: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.1617249697446823
    2. '_string' → logprob: -1.9117249250411987
    3. '_' → logprob: -6.786725044250488
    4. '_s' → logprob: -8.286725044250488
    5. ' _' → logprob: -9.286725044250488
    6. 'str' → logprob: -11.161725044250488
    7. 'string' → logprob: -12.536725044250488
    8. ' str' → logprob: -13.036725044250488
    9. 's' → logprob: -13.911725044250488
    10. ' string' → logprob: -13.911725044250488

Token 26: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005325904581695795
    2. '(s' → logprob: -5.505325794219971
    3. 's' → logprob: -8.130326271057129
    4. '(a' → logprob: -8.130326271057129
    5. '("("' → logprob: -8.880326271057129
    6. '(n' → logprob: -9.130326271057129
    7. '(e' → logprob: -9.380326271057129
    8. '(value' → logprob: -10.130326271057129
    9. '(x' → logprob: -10.130326271057129
    10. ' (' → logprob: -10.255326271057129

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47411954402923584
    2. ')' → logprob: -0.9741195440292358
    3. '):
' → logprob: -10.224119186401367
    4. ' ):' → logprob: -13.099119186401367
    5. ' )' → logprob: -13.849119186401367
    6. ')n' → logprob: -14.599119186401367
    7. ')：' → logprob: -14.849119186401367
    8. ')
' → logprob: -15.099119186401367
    9. ':' → logprob: -15.349119186401367
    10. ')**' → logprob: -15.599119186401367

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006195522844791412
    2. ' return' → logprob: -5.256195545196533
    3. 'return' → logprob: -7.131195545196533
    4. '    ' → logprob: -9.006195068359375
    5. ' str' → logprob: -11.131195068359375
    6. '   ' → logprob: -11.506195068359375
    7. ' ' → logprob: -12.881195068359375
    8. ' ' → logprob: -12.881195068359375
    9. '  ' → logprob: -13.006195068359375
    10. '	return' → logprob: -13.381195068359375

Token 29: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20732451975345612
    2. 'return' (adapté à ' return') → logprob: -1.707324504852295
    3. '   ' → logprob: -5.207324504852295
    4. ' str' → logprob: -7.832324504852295
    5. 'str' → logprob: -10.957324981689453
    6. '	return' → logprob: -13.457324981689453
    7. ' ' → logprob: -13.582324981689453
    8. '  ' → logprob: -15.582324981689453
    9. '```' → logprob: -16.082324981689453
    10. '    ' → logprob: -16.582324981689453

Token 30: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.00524667976424098
    2. 'str' → logprob: -5.255246639251709
    3. ' ' → logprob: -11.755247116088867
    4. ' ' → logprob: -12.755247116088867
    5. '	str' → logprob: -13.130247116088867
    6. '(str' → logprob: -16.630247116088867
    7. '=str' → logprob: -17.005247116088867
    8. ' f' → logprob: -17.130247116088867
    9. '  ' → logprob: -17.505247116088867
    10. '   ' → logprob: -18.130247116088867

Token 31: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06197250634431839
    2. '(' → logprob: -2.8119726181030273
    3. ' (' → logprob: -12.686972618103027
    4. '<|end|>' → logprob: -14.561972618103027
    5. 'n' → logprob: -15.311972618103027
    6. '(nn' → logprob: -16.18697166442871
    7. ')' → logprob: -16.18697166442871
    8. '("("' → logprob: -16.31197166442871
    9. '()' → logprob: -16.43697166442871
    10. '(
' → logprob: -16.56197166442871

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')n' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '))' → logprob: -16.000001907348633
    5. ' )' → logprob: -16.125001907348633
    6. '}' → logprob: -16.625001907348633
    7. ')))' → logprob: -17.125001907348633
    8. ')return' → logprob: -17.500001907348633
    9. ')}}' → logprob: -18.625001907348633
    10. ')...' → logprob: -19.125001907348633

Token 33: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020115643739700317
    2. 'd' → logprob: -4.770115852355957
    3. '#' → logprob: -5.520115852355957
    4. 'n' → logprob: -5.895115852355957
    5. '
' → logprob: -6.270115852355957
    6. '\' → logprob: -6.770115852355957
    7. '

' → logprob: -7.145115852355957
    8. '\n' → logprob: -8.270115852355957
    9. '<|end|>' → logprob: -9.395115852355957
    10. '```' → logprob: -9.520115852355957

Token 34: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06966716796159744
    2. ' add' → logprob: -2.944667100906372
    3. ' multiply' → logprob: -5.569667339324951
    4. ' calculate' → logprob: -5.819667339324951
    5. ' factorial' → logprob: -5.944667339324951
    6. ' sum' → logprob: -5.944667339324951
    7. 'main' → logprob: -7.194667339324951
    8. ' ' → logprob: -8.069666862487793
    9. ' compute' → logprob: -8.444666862487793
    10. ' solve' → logprob: -8.444666862487793

Token 35: '_length' (ID: 11514)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1718635559082031
    2. '_max' → logprob: -1.2968635559082031
    3. '_input' → logprob: -1.6718635559082031
    4. '_user' → logprob: -1.9218635559082031
    5. '_factor' → logprob: -3.796863555908203
    6. '_' → logprob: -4.421863555908203
    7. '_next' → logprob: -5.046863555908203
    8. '_square' → logprob: -5.171863555908203
    9. '_total' → logprob: -5.296863555908203
    10. '_result' → logprob: -5.921863555908203

Token 36: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4796238839626312
    2. '(s' → logprob: -0.9796239137649536
    3. ' (' → logprob: -6.979623794555664
    4. '(_' → logprob: -7.229623794555664
    5. '_' → logprob: -7.479623794555664
    6. '_(' → logprob: -7.479623794555664
    7. '_of' → logprob: -7.854623794555664
    8. '(n' → logprob: -8.229623794555664
    9. '("("' → logprob: -8.229623794555664
    10. '()' → logprob: -8.729623794555664

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004648234229534864
    2. ')' → logprob: -5.379648208618164
    3. ' ):' → logprob: -11.004648208618164
    4. '):
' → logprob: -12.504648208618164
    5. 's' → logprob: -13.504648208618164
    6. '():' → logprob: -13.629648208618164
    7. '   ' → logprob: -14.004648208618164
    8. ':' → logprob: -14.379648208618164
    9. '(s' → logprob: -14.379648208618164
    10. ')):' → logprob: -14.504648208618164

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018911674851551652
    2. 'return' → logprob: -9.250188827514648
    3. ' return' → logprob: -9.750188827514648
    4. 'len' → logprob: -10.500188827514648
    5. '    ' → logprob: -12.875188827514648
    6. ' len' → logprob: -13.000188827514648
    7. '```' → logprob: -14.500188827514648
    8. '	return' → logprob: -14.875188827514648
    9. '    
' → logprob: -14.875188827514648
    10. '  ' → logprob: -15.250188827514648

Token 39: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01660984195768833
    2. ' return' → logprob: -4.2666096687316895
    3. 'return' (adapté à ' return') → logprob: -6.0166096687316895
    4. 'len' → logprob: -12.766610145568848
    5. ' len' → logprob: -13.266610145568848
    6. '    ' → logprob: -15.391610145568848
    7. '```' → logprob: -15.391610145568848
    8. '	return' → logprob: -15.641610145568848
    9. '   ' → logprob: -16.01660919189453
    10. '  ' → logprob: -16.39160919189453

Token 40: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.005234121344983578
    2. 'len' → logprob: -5.255234241485596
    3. '(len' → logprob: -16.005233764648438
    4. ' ' → logprob: -16.255233764648438
    5. ' ' → logprob: -16.630233764648438
    6. '	len' → logprob: -17.380233764648438
    7. '   ' → logprob: -18.130233764648438
    8. '=len' → logprob: -19.880233764648438
    9. '[len' → logprob: -20.005233764648438
    10. ',len' → logprob: -20.380233764648438

Token 41: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011793931480497122
    2. '(' → logprob: -6.751179218292236
    3. ' (' → logprob: -11.751179695129395
    4. 's' → logprob: -14.001179695129395
    5. '(n' → logprob: -15.126179695129395
    6. ' ' → logprob: -17.501178741455078
    7. '(
' → logprob: -17.501178741455078
    8. '(ss' → logprob: -17.626178741455078
    9. '<|end|>' → logprob: -17.751178741455078
    10. '(

' → logprob: -17.876178741455078

Token 42: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4034345187828876e-05
    2. ')s' → logprob: -11.00002384185791
    3. 's' → logprob: -12.12502384185791
    4. ')
' → logprob: -14.50002384185791
    5. ')return' → logprob: -14.62502384185791
    6. ' )' → logprob: -15.87502384185791
    7. ')n' → logprob: -15.87502384185791
    8. '(s' → logprob: -16.000024795532227
    9. '))' → logprob: -16.125024795532227
    10. '   ' → logprob: -16.750024795532227

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31300970911979675
    2. '#' → logprob: -1.8130097389221191
    3. '<|end|>' → logprob: -3.438009738922119
    4. '\n' → logprob: -3.563009738922119
    5. '\' → logprob: -3.563009738922119
    6. '
' → logprob: -5.188009738922119
    7. '```' → logprob: -5.938009738922119
    8. 'n' → logprob: -6.438009738922119
    9. '.' → logprob: -6.938009738922119
    10. '<|end|>' → logprob: -6.938009738922119

Token 44: ' char' (ID: 1826)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01990683376789093
    2. ' reverse' → logprob: -5.019906997680664
    3. ' calculate' → logprob: -6.269906997680664
    4. ' convert' → logprob: -6.394906997680664
    5. ' get' → logprob: -6.519906997680664
    6. ' factorial' → logprob: -6.894906997680664
    7. ' multiply' → logprob: -7.019906997680664
    8. ' count' → logprob: -7.394906997680664
    9. ' is' → logprob: -7.394906997680664
    10. '_' → logprob: -7.394906997680664

Token 45: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.25658226013183594
    2. '_count' → logprob: -2.006582260131836
    3. 'acter' → logprob: -3.506582260131836
    4. '_' → logprob: -3.631582260131836
    5. '_to' → logprob: -4.381582260131836
    6. 'acters' → logprob: -4.631582260131836
    7. '_frequency' → logprob: -5.381582260131836
    8. '_counts' → logprob: -5.506582260131836
    9. '_index' → logprob: -6.881582260131836
    10. 's' → logprob: -7.506582260131836

Token 46: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1132260337471962
    2. '(s' → logprob: -2.4882259368896484
    3. ' (' → logprob: -3.7382259368896484
    4. 's' → logprob: -8.863225936889648
    5. '_' → logprob: -10.863225936889648
    6. ' ' → logprob: -11.738225936889648
    7. '(n' → logprob: -11.988225936889648
    8. ')' → logprob: -12.613225936889648
    9. '(x' → logprob: -13.113225936889648
    10. '(a' → logprob: -13.113225936889648

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031217450741678476
    2. ')' → logprob: -6.253121852874756
    3. ' ,' → logprob: -7.253121852874756
    4. '[' → logprob: -8.878121376037598
    5. ',index' → logprob: -9.503121376037598
    6. ',s' → logprob: -9.628121376037598
    7. '(' → logprob: -9.753121376037598
    8. '   ' → logprob: -10.003121376037598
    9. 's' → logprob: -10.378121376037598
    10. ',i' → logprob: -10.878121376037598

Token 48: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28710517287254333
    2. 'index' → logprob: -1.9121052026748657
    3. ' i' → logprob: -2.662105083465576
    4. ' index' → logprob: -3.787105083465576
    5. 'idx' → logprob: -5.662105083465576
    6. ' idx' → logprob: -6.037105083465576
    7. ')' → logprob: -6.162105083465576
    8. 'pos' → logprob: -7.912105083465576
    9. 'n' → logprob: -7.912105083465576
    10. ' pos' → logprob: -8.162105560302734

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520328462123871
    2. ')' → logprob: -1.5020328760147095
    3. ' ):' → logprob: -9.877033233642578
    4. '):
' → logprob: -10.502033233642578
    5. ' )' → logprob: -11.002033233642578
    6. '[' → logprob: -13.627033233642578
    7. '   ' → logprob: -14.252033233642578
    8. ')：' → logprob: -14.377033233642578
    9. ':' → logprob: -14.502033233642578
    10. ' ' → logprob: -14.627033233642578

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059478795155882835
    2. 's' → logprob: -5.880948066711426
    3. ' return' → logprob: -6.255948066711426
    4. 'return' → logprob: -6.880948066711426
    5. ' s' → logprob: -8.755948066711426
    6. '    ' → logprob: -10.505948066711426
    7. '	return' → logprob: -13.005948066711426
    8. '(s' → logprob: -14.005948066711426
    9. '[' → logprob: -14.630948066711426
    10. '```' → logprob: -14.755948066711426

Token 51: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33311083912849426
    2. ' return' → logprob: -1.5831108093261719
    3. '   ' → logprob: -2.583110809326172
    4. 's' → logprob: -6.083110809326172
    5. ' s' → logprob: -9.083110809326172
    6. '	return' → logprob: -10.583110809326172
    7. ' ' → logprob: -12.083110809326172
    8. '    ' → logprob: -12.583110809326172
    9. '```' → logprob: -13.333110809326172
    10. ':return' → logprob: -13.333110809326172

Token 52: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2519298195838928
    2. 's' → logprob: -1.501929759979248
    3. '	s' → logprob: -15.501930236816406
    4. ' ' → logprob: -15.876930236816406
    5. '(s' → logprob: -16.251930236816406
    6. '_s' → logprob: -16.376930236816406
    7. ' ' → logprob: -16.751930236816406
    8. '`s' → logprob: -17.001930236816406
    9. ''s' → logprob: -17.251930236816406
    10. '   ' → logprob: -17.376930236816406

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010403135092929006
    2. '[' → logprob: -6.876040458679199
    3. '[int' → logprob: -12.1260404586792
    4. '[I' → logprob: -14.3760404586792
    5. '[index' → logprob: -15.2510404586792
    6. '[s' → logprob: -15.2510404586792
    7. '```' → logprob: -15.7510404586792
    8. '[
' → logprob: -16.001039505004883
    9. '[e' → logprob: -16.501039505004883
    10. ' [' → logprob: -16.626039505004883

Token 54: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5233791470527649
    2. ')' → logprob: -0.8983791470527649
    3. ')]' → logprob: -9.5233793258667
    4. '])' → logprob: -9.6483793258667
    5. ' ]' → logprob: -10.0233793258667
    6. ' )' → logprob: -10.6483793258667
    7. '}' → logprob: -11.6483793258667
    8. ')
' → logprob: -11.8983793258667
    9. ']
' → logprob: -12.0233793258667
    10. '<|end|>' → logprob: -12.0233793258667

Token 55: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2840717136859894
    2. 'd' → logprob: -2.284071683883667
    3. '#' → logprob: -2.534071683883667
    4. '\' → logprob: -3.409071683883667
    5. '
' → logprob: -4.284071922302246
    6. '\n' → logprob: -5.409071922302246
    7. 'n' → logprob: -5.909071922302246
    8. '<|end|>' → logprob: -6.159071922302246
    9. '

' → logprob: -6.409071922302246
    10. 'a' → logprob: -6.659071922302246

Token 56: ' char' (ID: 1826)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5064144730567932
    2. ' is' → logprob: -2.0064144134521484
    3. ' reverse' → logprob: -2.7564144134521484
    4. ' str' → logprob: -3.3814144134521484
    5. ' split' → logprob: -4.256414413452148
    6. ' print' → logprob: -4.256414413452148
    7. ' get' → logprob: -4.506414413452148
    8. ' write' → logprob: -4.506414413452148
    9. ' append' → logprob: -4.506414413452148
    10. ' find' → logprob: -4.631414413452148

Token 57: '_to' (ID: 5089)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.17715540528297424
    2. 's' → logprob: -2.0521554946899414
    3. '_a' → logprob: -5.052155494689941
    4. '_code' → logprob: -5.052155494689941
    5. 'acters' → logprob: -5.177155494689941
    6. '_count' → logprob: -5.302155494689941
    7. '_' → logprob: -5.552155494689941
    8. '_s' → logprob: -6.427155494689941
    9. '_index' → logprob: -6.927155494689941
    10. '_to' → logprob: -7.552155494689941

Token 58: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.04562002047896385
    2. '_str' → logprob: -3.2956199645996094
    3. '_ord' → logprob: -5.170619964599609
    4. 'int' → logprob: -6.795619964599609
    5. '_chr' → logprob: -8.42061996459961
    6. '_' → logprob: -8.67061996459961
    7. ' int' → logprob: -9.42061996459961
    8. 'str' → logprob: -9.79561996459961
    9. '_char' → logprob: -9.79561996459961
    10. '_digit' → logprob: -10.29561996459961

Token 59: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0591268464922905
    2. '(s' → logprob: -2.934126853942871
    3. '(a' → logprob: -6.184126853942871
    4. '(c' → logprob: -6.934126853942871
    5. '(char' → logprob: -8.059126853942871
    6. '(x' → logprob: -8.434126853942871
    7. 's' → logprob: -8.934126853942871
    8. '(ord' → logprob: -9.184126853942871
    9. '(n' → logprob: -9.434126853942871
    10. '(i' → logprob: -9.934126853942871

Token 60: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2263229787349701
    2. '):' → logprob: -1.6013230085372925
    3. '):
' → logprob: -7.101323127746582
    4. ' )' → logprob: -10.976323127746582
    5. '(' → logprob: -11.226323127746582
    6. ')c' → logprob: -11.476323127746582
    7. ' ):' → logprob: -11.726323127746582
    8. ')=' → logprob: -11.851323127746582
    9. '):

' → logprob: -11.851323127746582
    10. ')**' → logprob: -12.476323127746582

Token 61: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6982921957969666
    2. 'return' → logprob: -1.3232922554016113
    3. ' ord' → logprob: -2.3232922554016113
    4. '   ' → logprob: -2.5732922554016113
    5. 'int' → logprob: -3.5732922554016113
    6. 'ord' → logprob: -3.5732922554016113
    7. ' int' → logprob: -5.198292255401611
    8. '0' → logprob: -9.198291778564453
    9. '=int' → logprob: -9.323291778564453
    10. '```' → logprob: -9.698291778564453

Token 62: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9075382351875305
    2. ' ord' → logprob: -0.9075382351875305
    3. 'int' → logprob: -2.6575381755828857
    4. 'return' (adapté à ' return') → logprob: -2.7825381755828857
    5. ' int' → logprob: -3.0325381755828857
    6. 'ord' → logprob: -4.407538414001465
    7. '   ' → logprob: -7.657538414001465
    8. 'def' → logprob: -10.532538414001465
    9. '0' → logprob: -10.782538414001465
    10. '```' → logprob: -10.907538414001465

Token 63: ' int' (ID: 677)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.044932134449481964
    2. ' int' → logprob: -3.2949321269989014
    3. 'ord' → logprob: -5.2949323654174805
    4. 'int' → logprob: -6.2949323654174805
    5. ' ' → logprob: -12.91993236541748
    6. '(ord' → logprob: -13.54493236541748
    7. '0' → logprob: -15.16993236541748
    8. ' ' → logprob: -16.169931411743164
    9. '1' → logprob: -16.294931411743164
    10. '  ' → logprob: -16.669931411743164

Token 64: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06203490495681763
    2. '(c' → logprob: -2.812034845352173
    3. '('' → logprob: -10.312034606933594
    4. 'c' → logprob: -11.687034606933594
    5. '(ord' → logprob: -12.062034606933594
    6. '((' → logprob: -12.437034606933594
    7. '(char' → logprob: -12.937034606933594
    8. ' (' → logprob: -13.062034606933594
    9. '(chr' → logprob: -13.562034606933594
    10. '(`' → logprob: -13.562034606933594

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. '))' → logprob: -17.0
    4. ')
' → logprob: -18.125
    5. ')c' → logprob: -18.375
    6. '())' → logprob: -18.625
    7. ')return' → logprob: -18.875
    8. ')}' → logprob: -19.125
    9. '}' → logprob: -19.375
    10. '()' → logprob: -19.375

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4296818971633911
    2. '#' → logprob: -1.8046818971633911
    3. '
' → logprob: -2.8046817779541016
    4. '\' → logprob: -3.3046817779541016
    5. '<|end|>' → logprob: -3.4296817779541016
    6. '\n' → logprob: -3.6796817779541016
    7. '```' → logprob: -5.429681777954102
    8. 'd' → logprob: -5.929681777954102
    9. '(' → logprob: -6.054681777954102
    10. 'n' → logprob: -6.179681777954102

Token 67: ' add' (ID: 1147)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.17181195318698883
    2. ' add' → logprob: -3.296812057495117
    3. ' char' → logprob: -3.296812057495117
    4. ' def' → logprob: -4.171812057495117
    5. ' reverse' → logprob: -4.296812057495117
    6. ' sum' → logprob: -4.296812057495117
    7. ' is' → logprob: -4.796812057495117
    8. 'main' → logprob: -5.296812057495117
    9. ' str' → logprob: -5.671812057495117
    10. ' convert' → logprob: -5.671812057495117

Token 68: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6599338054656982
    2. '_' → logprob: -1.0349338054656982
    3. '(a' → logprob: -2.1599338054656982
    4. '<|end|>' → logprob: -5.409934043884277
    5. ' (' → logprob: -5.534934043884277
    6. '_numbers' → logprob: -6.409934043884277
    7. '_(' → logprob: -8.034934043884277
    8. '<|end|>' → logprob: -8.159934043884277
    9. '(n' → logprob: -8.284934043884277
    10. '(x' → logprob: -8.409934043884277

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012759669683873653
    2. ' ,' → logprob: -4.637759685516357
    3. ')' → logprob: -6.137759685516357
    4. ',a' → logprob: -7.762759685516357
    5. ',b' → logprob: -7.887759685516357
    6. ' )' → logprob: -11.6377592086792
    7. ',)' → logprob: -12.3877592086792
    8. 'a' → logprob: -12.7627592086792
    9. '_,' → logprob: -12.8877592086792
    10. ' ' → logprob: -12.8877592086792

Token 70: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38687393069267273
    2. ' b' → logprob: -1.1368739604949951
    3. ')' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.386874198913574
    5. ')b' → logprob: -14.511874198913574
    6. '   ' → logprob: -15.136874198913574
    7. '	b' → logprob: -15.886874198913574
    8. ',b' → logprob: -15.886874198913574
    9. '    ' → logprob: -16.011873245239258
    10. ' )' → logprob: -17.011873245239258

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11287565529346466
    2. ')' → logprob: -2.2378756999969482
    3. '):
' → logprob: -10.487875938415527
    4. ' ):' → logprob: -11.362875938415527
    5. ',' → logprob: -12.487875938415527
    6. ':' → logprob: -13.237875938415527
    7. ' )' → logprob: -13.362875938415527
    8. 'a' → logprob: -13.862875938415527
    9. ')：' → logprob: -14.112875938415527
    10. ')a' → logprob: -14.362875938415527

Token 72: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6384088397026062
    2. 'a' → logprob: -0.7634088397026062
    3. '   ' → logprob: -5.388408660888672
    4. ' return' → logprob: -7.013408660888672
    5. ':' → logprob: -9.513408660888672
    6. 'return' → logprob: -9.763408660888672
    7. ')' → logprob: -9.888408660888672
    8. '(a' → logprob: -9.888408660888672
    9. '	a' → logprob: -11.013408660888672
    10. '    ' → logprob: -11.013408660888672

Token 73: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889804989099503
    2. ' a' → logprob: -2.5788979530334473
    3. '   ' → logprob: -12.078898429870605
    4. '	a' → logprob: -14.203898429870605
    5. ' ' → logprob: -14.453898429870605
    6. ' return' → logprob: -14.578898429870605
    7. 'return' (adapté à ' return') → logprob: -14.703898429870605
    8. '  ' → logprob: -15.453898429870605
    9. '    ' → logprob: -16.07889747619629
    10. '(a' → logprob: -16.95389747619629

Token 74: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3132627606391907
    2. ' a' → logprob: -1.313262701034546
    3. '	a' → logprob: -14.938262939453125
    4. '(a' → logprob: -15.438262939453125
    5. '   ' → logprob: -15.438262939453125
    6. ' ' → logprob: -15.563262939453125
    7. '_a' → logprob: -16.938262939453125
    8. ' ' → logprob: -17.563262939453125
    9. '  ' → logprob: -17.688262939453125
    10. 'int' → logprob: -18.188262939453125

Token 75: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16024108231067657
    2. '+' → logprob: -1.9102411270141602
    3. '+b' → logprob: -11.03524112701416
    4. ' ' → logprob: -14.41024112701416
    5. ' +
' → logprob: -16.285240173339844
    6. ' plus' → logprob: -16.535240173339844
    7. ' ' → logprob: -17.535240173339844
    8. '+B' → logprob: -18.035240173339844
    9. ' +

' → logprob: -18.535240173339844
    10. '+
' → logprob: -18.660240173339844

Token 76: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020720958709717
    2. ' b' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.350207328796387
    4. '	b' → logprob: -17.22520637512207
    5. '1' → logprob: -17.60020637512207
    6. '   ' → logprob: -18.85020637512207
    7. ' б' → logprob: -18.85020637512207
    8. '<|end|>' → logprob: -19.35020637512207
    9. ')b' → logprob: -19.35020637512207
    10. '    ' → logprob: -20.10020637512207

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19974066317081451
    2. '
' → logprob: -2.4497406482696533
    3. '#' → logprob: -2.5747406482696533
    4. '

' → logprob: -5.449740886688232
    5. '<|end|>' → logprob: -5.699740886688232
    6. '_' → logprob: -6.074740886688232
    7. '(' → logprob: -6.574740886688232
    8. '[' → logprob: -6.574740886688232
    9. '\n' → logprob: -6.699740886688232
    10. '\' → logprob: -6.824740886688232

Token 79: ' sum' (ID: 4215)
  Prédit: ' subtract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subtract' → logprob: -0.4893381893634796
    2. ' main' → logprob: -1.9893381595611572
    3. ' multiply' → logprob: -2.1143381595611572
    4. 'subtract' → logprob: -2.3643381595611572
    5. ' sub' → logprob: -3.7393381595611572
    6. 'multiply' → logprob: -5.114338397979736
    7. 'sub' → logprob: -6.489338397979736
    8. ' factorial' → logprob: -6.614338397979736
    9. ' mul' → logprob: -7.864338397979736
    10. ' def' → logprob: -7.864338397979736

Token 80: '_digits' (ID: 108638)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2513449490070343
    2. '(' → logprob: -2.376344919204712
    3. '_' → logprob: -2.376344919204712
    4. '_numbers' → logprob: -3.626344919204712
    5. '_(' → logprob: -5.251345157623291
    6. '_digits' → logprob: -7.126345157623291
    7. '(_' → logprob: -7.251345157623291
    8. '_strings' → logprob: -7.501345157623291
    9. ' (' → logprob: -7.751345157623291
    10. '_list' → logprob: -8.001344680786133

Token 81: '(n' (ID: 2406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011855937540531158
    2. '(' → logprob: -5.0118560791015625
    3. '(s' → logprob: -5.5118560791015625
    4. ' (' → logprob: -7.2618560791015625
    5. '(n' → logprob: -7.8868560791015625
    6. '(num' → logprob: -12.636856079101562
    7. '(numbers' → logprob: -13.386856079101562
    8. '(nums' → logprob: -13.636856079101562
    9. '(x' → logprob: -13.761856079101562
    10. '(d' → logprob: -14.261856079101562

Token 82: '_str' (ID: 6182)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011876109056174755
    2. ')' → logprob: -6.876187801361084
    3. '):
' → logprob: -9.251187324523926
    4. ' ):' → logprob: -10.376187324523926
    5. '(n' → logprob: -10.876187324523926
    6. ':' → logprob: -12.626187324523926
    7. '(' → logprob: -13.376187324523926
    8. '):
' → logprob: -13.876187324523926
    9. ',' → logprob: -14.126187324523926
    10. '   ' → logprob: -14.751187324523926

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015872239600867033
    2. ')' → logprob: -6.501587390899658
    3. ' ):' → logprob: -10.2515869140625
    4. '):
' → logprob: -10.7515869140625
    5. ',' → logprob: -11.0015869140625
    6. '   ' → logprob: -12.8765869140625
    7. 's' → logprob: -13.1265869140625
    8. '_' → logprob: -13.6265869140625
    9. ':' → logprob: -13.8765869140625
    10. '):
' → logprob: -14.0015869140625

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016791060334071517
    2. 'sum' → logprob: -7.001678943634033
    3. 's' → logprob: -7.876678943634033
    4. 'def' → logprob: -9.751679420471191
    5. ' sum' → logprob: -9.751679420471191
    6. '(' → logprob: -10.251679420471191
    7. 'return' → logprob: -10.251679420471191
    8. ' return' → logprob: -10.626679420471191
    9. ' s' → logprob: -10.626679420471191
    10. 'total' → logprob: -10.626679420471191

Token 85: ' length' (ID: 5517)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9772221446037292
    2. 'return' → logprob: -1.477222204208374
    3. 'total' → logprob: -2.102222204208374
    4. '   ' → logprob: -2.102222204208374
    5. 'result' → logprob: -2.477222204208374
    6. ' return' → logprob: -3.227222204208374
    7. ' total' → logprob: -4.727221965789795
    8. 's' → logprob: -4.852221965789795
    9. ' sum' → logprob: -4.977221965789795
    10. ' result' → logprob: -6.227221965789795

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6756362318992615
    2. '=' → logprob: -0.9256362318992615
    3. '(' → logprob: -2.5506362915039062
    4. '(s' → logprob: -4.675636291503906
    5. ')' → logprob: -5.800636291503906
    6. '_' → logprob: -5.925636291503906
    7. 's' → logprob: -6.800636291503906
    8. ' ' → logprob: -8.300636291503906
    9. ',' → logprob: -9.175636291503906
    10. '   ' → logprob: -9.550636291503906

Token 87: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.47495517134666443
    2. ' get' → logprob: -0.9749552011489868
    3. 'len' → logprob: -7.474955081939697
    4. ' len' → logprob: -8.224955558776855
    5. '	get' → logprob: -10.974955558776855
    6. '   ' → logprob: -11.474955558776855
    7. ' ' → logprob: -11.974955558776855
    8. '(get' → logprob: -12.724955558776855
    9. ')get' → logprob: -14.099955558776855
    10. '  ' → logprob: -14.224955558776855

Token 88: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. '_len' → logprob: -15.000000953674316
    3. '_l' → logprob: -15.125000953674316
    4. 'length' → logprob: -15.625000953674316
    5. '_le' → logprob: -18.0
    6. '_lengths' → logprob: -18.25
    7. '(length' → logprob: -18.5
    8. '_Length' → logprob: -19.25
    9. '_n' → logprob: -19.5
    10. '```' → logprob: -19.625

Token 89: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0044633508659899235
    2. '(' → logprob: -5.504463195800781
    3. ' (' → logprob: -7.879463195800781
    4. ' ' → logprob: -13.129463195800781
    5. '(s' → logprob: -13.254463195800781
    6. ')' → logprob: -13.629463195800781
    7. '(
' → logprob: -14.254463195800781
    8. '('' → logprob: -15.504463195800781
    9. ')(' → logprob: -15.629463195800781
    10. '((' → logprob: -16.12946319580078

Token 90: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00173467886634171
    2. '_s' → logprob: -7.001734733581543
    3. '_n' → logprob: -8.376734733581543
    4. '_' → logprob: -8.626734733581543
    5. 'str' → logprob: -8.751734733581543
    6. ')_' → logprob: -9.626734733581543
    7. '```' → logprob: -9.876734733581543
    8. ' _' → logprob: -10.751734733581543
    9. '"_' → logprob: -11.126734733581543
    10. ''_' → logprob: -11.751734733581543

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017964430153369904
    2. ' )' → logprob: -6.501796245574951
    3. ')
' → logprob: -8.25179672241211
    4. '())' → logprob: -11.37679672241211
    5. '   ' → logprob: -12.00179672241211
    6. ' ' → logprob: -12.62679672241211
    7. '()' → logprob: -12.62679672241211
    8. '):' → logprob: -13.12679672241211
    9. ' )
' → logprob: -13.25179672241211
    10. 'def' → logprob: -13.37679672241211

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2706654667854309
    2. '
' → logprob: -2.020665407180786
    3. '    
' → logprob: -3.395665407180786
    4. 'result' → logprob: -3.895665407180786
    5. ' ' → logprob: -4.520665645599365
    6. ' result' → logprob: -4.645665645599365
    7. '  
' → logprob: -5.520665645599365
    8. 'def' → logprob: -5.520665645599365
    9. 'sum' → logprob: -6.020665645599365
    10. 'total' → logprob: -6.270665645599365

Token 93: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.14949598908424377
    2. 'result' → logprob: -2.524496078491211
    3. ' total' → logprob: -3.399496078491211
    4. 'sum' → logprob: -4.649496078491211
    5. 's' → logprob: -4.899496078491211
    6. '   ' → logprob: -5.149496078491211
    7. ' result' → logprob: -6.399496078491211
    8. 'res' → logprob: -8.024496078491211
    9. ' s' → logprob: -8.524496078491211
    10. ' ' → logprob: -9.024496078491211

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430079810321331
    2. '=' → logprob: -3.1680080890655518
    3. ' ' → logprob: -12.168007850646973
    4. ' +=' → logprob: -13.418007850646973
    5. '  ' → logprob: -14.418007850646973
    6. '_' → logprob: -14.418007850646973
    7. ')' → logprob: -15.293007850646973
    8. ',' → logprob: -15.668007850646973
    9. '   ' → logprob: -15.668007850646973
    10. 's' → logprob: -16.16800880432129

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.625295639038086
    4. 'add' → logprob: -18.625295639038086
    5. '۰' → logprob: -18.750295639038086
    6. '  ' → logprob: -20.000295639038086
    7. '０' → logprob: -20.250295639038086
    8. '```' → logprob: -20.375295639038086
    9. ' add' → logprob: -20.500295639038086
    10. ' ' → logprob: -20.500295639038086

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -20.25
    4. '０' → logprob: -21.875
    5. '```' → logprob: -22.0
    6. '   ' → logprob: -22.125
    7. '000' → logprob: -22.625
    8. 'add' → logprob: -22.625
    9. 'int' → logprob: -23.0
    10. '00' → logprob: -23.25

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07106447964906693
    2. '<|end|>' → logprob: -3.0710644721984863
    3. '   ' → logprob: -3.9460644721984863
    4. '  
' → logprob: -7.196064472198486
    5. '    
' → logprob: -7.571064472198486
    6. '<|end|>' → logprob: -7.571064472198486
    7. ' for' → logprob: -8.196064949035645
    8. ' 
' → logprob: -8.446064949035645
    9. ' ' → logprob: -8.696064949035645
    10. '' → logprob: -9.321064949035645

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014352009631693363
    2. '
' → logprob: -4.389351844787598
    3. ' for' → logprob: -7.139351844787598
    4. '    
' → logprob: -7.389351844787598
    5. '<|end|>' → logprob: -8.889351844787598
    6. '	for' → logprob: -9.014351844787598
    7. 'for' → logprob: -9.764351844787598
    8. 'i' → logprob: -10.639351844787598
    9. '<|end|>' → logprob: -11.139351844787598
    10. ' i' → logprob: -11.639351844787598

Token 99: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.042053595185279846
    2. ' for' → logprob: -4.042053699493408
    3. 'i' → logprob: -4.292053699493408
    4. '   ' → logprob: -4.792053699493408
    5. ' i' → logprob: -6.417053699493408
    6. ' ' → logprob: -11.79205322265625
    7. '	for' → logprob: -12.79205322265625
    8. '  ' → logprob: -13.29205322265625
    9. '    
' → logprob: -13.54205322265625
    10. '
' → logprob: -14.91705322265625

Token 100: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759844779968262
    2. 'i' → logprob: -0.8259844779968262
    3. ' c' → logprob: -11.825984954833984
    4. ' ' → logprob: -12.075984954833984
    5. 'digit' → logprob: -12.075984954833984
    6. 'c' → logprob: -12.200984954833984
    7. '_' → logprob: -12.200984954833984
    8. ' digit' → logprob: -12.325984954833984
    9. '	i' → logprob: -12.700984954833984
    10. ' _' → logprob: -12.825984954833984

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03495483100414276
    2. 'in' → logprob: -3.409954786300659
    3. ' ' → logprob: -6.659955024719238
    4. '	in' → logprob: -11.534955024719238
    5. '  ' → logprob: -12.159955024719238
    6. '0' → logprob: -13.034955024719238
    7. ' i' → logprob: -13.159955024719238
    8. 'n' → logprob: -14.034955024719238
    9. ',' → logprob: -14.222455024719238
    10. 'range' → logprob: -14.284955024719238

Token 102: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759462714195251
    2. 'range' → logprob: -0.8259462714195251
    3. '	range' → logprob: -12.325945854187012
    4. ' ' → logprob: -13.450945854187012
    5. '(range' → logprob: -14.575945854187012
    6. ' xrange' → logprob: -15.325945854187012
    7. '   ' → logprob: -16.075946807861328
    8. '  ' → logprob: -16.700946807861328
    9. '    ' → logprob: -17.825946807861328
    10. ')' → logprob: -17.950946807861328

Token 103: '(length' (ID: 47037)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3893890976905823
    2. '(length' → logprob: -1.1393890380859375
    3. ' (' → logprob: -6.0143890380859375
    4. '(len' → logprob: -10.014389038085938
    5. ')' → logprob: -11.514389038085938
    6. ' length' → logprob: -11.639389038085938
    7. 'length' → logprob: -12.264389038085938
    8. '(
' → logprob: -13.764389038085938
    9. '(l' → logprob: -14.514389038085938
    10. ',length' → logprob: -15.014389038085938

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002077217446640134
    2. '):
' → logprob: -6.502077102661133
    3. ' ):' → logprob: -7.502077102661133
    4. ')' → logprob: -11.377077102661133
    5. '   ' → logprob: -12.252077102661133
    6. ':' → logprob: -12.877077102661133
    7. '):
' → logprob: -13.377077102661133
    8. ' ):
' → logprob: -13.627077102661133
    9. ' ' → logprob: -14.252077102661133
    10. '+' → logprob: -16.002077102661133

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003421285655349493
    2. ' total' → logprob: -6.628421306610107
    3. 'total' → logprob: -7.128421306610107
    4. '   ' → logprob: -7.753421306610107
    5. ' ' → logprob: -8.50342082977295
    6. '
' → logprob: -8.62842082977295
    7. '        
' → logprob: -9.50342082977295
    8. '(total' → logprob: -10.00342082977295
    9. ' +' → logprob: -10.25342082977295
    10. '    
' → logprob: -10.25342082977295

Token 106: ' digit' (ID: 19181)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4101172983646393
    2. ' total' → logprob: -1.785117268562317
    3. '       ' → logprob: -1.910117268562317
    4. '   ' → logprob: -3.9101173877716064
    5. 'c' → logprob: -8.910117149353027
    6. ' ' → logprob: -9.035117149353027
    7. '           ' → logprob: -9.660117149353027
    8. '  ' → logprob: -9.785117149353027
    9. ' c' → logprob: -10.160117149353027
    10. '     ' → logprob: -10.285117149353027

Token 107: '_char' (ID: 23398)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06209002807736397
    2. '=' → logprob: -2.8120899200439453
    3. ')' → logprob: -10.312089920043945
    4. ' ' → logprob: -10.937089920043945
    5. 's' → logprob: -11.062089920043945
    6. '_digit' → logprob: -11.062089920043945
    7. ' +=' → logprob: -11.312089920043945
    8. '_' → logprob: -11.687089920043945
    9. '=int' → logprob: -12.437089920043945
    10. '   ' → logprob: -13.187089920043945

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038161750882864
    2. '=' → logprob: -3.2881617546081543
    3. ' ' → logprob: -9.538161277770996
    4. ')' → logprob: -10.038161277770996
    5. ' )' → logprob: -13.288161277770996
    6. 's' → logprob: -13.663161277770996
    7. '  ' → logprob: -14.413161277770996
    8. ' =)' → logprob: -15.288161277770996
    9. ' ' → logprob: -15.413161277770996
    10. '    ' → logprob: -15.538161277770996

Token 109: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.25194013118743896
    2. ' char' → logprob: -1.501940131187439
    3. '	char' → logprob: -12.37693977355957
    4. '   ' → logprob: -12.50193977355957
    5. '<char' → logprob: -14.37693977355957
    6. '.char' → logprob: -14.50193977355957
    7. ',char' → logprob: -14.50193977355957
    8. '_char' → logprob: -14.62693977355957
    9. ' ' → logprob: -14.87693977355957
    10. '(char' → logprob: -15.00193977355957

Token 110: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -2.6656825866666622e-05
    2. '_to' → logprob: -10.87502670288086
    3. '_a' → logprob: -12.37502670288086
    4. '_' → logprob: -12.62502670288086
    5. '_as' → logprob: -16.87502670288086
    6. '__' → logprob: -17.87502670288086
    7. ' _' → logprob: -17.87502670288086
    8. '_ar' → logprob: -18.25002670288086
    9. '_t' → logprob: -18.50002670288086
    10. '_AT' → logprob: -19.00002670288086

Token 111: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029852005536668
    2. '(' → logprob: -8.125298500061035
    3. ' (' → logprob: -13.000298500061035
    4. '(
' → logprob: -16.25029945373535
    5. '(s' → logprob: -16.25029945373535
    6. ' ' → logprob: -18.25029945373535
    7. 's' → logprob: -18.25029945373535
    8. '```' → logprob: -19.12529945373535
    9. ')' → logprob: -19.25029945373535
    10. '(num' → logprob: -19.62529945373535

Token 112: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00018685187387745827
    2. 'str' → logprob: -8.875186920166016
    3. 's' → logprob: -10.125186920166016
    4. '_s' → logprob: -12.500186920166016
    5. 'Str' → logprob: -14.250186920166016
    6. '_st' → logprob: -14.500186920166016
    7. '_' → logprob: -14.625186920166016
    8. '_Str' → logprob: -14.875186920166016
    9. '```' → logprob: -15.125186920166016
    10. '_STR' → logprob: -15.250186920166016

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006582858040928841
    2. '(n' → logprob: -6.006582736968994
    3. ',i' → logprob: -7.006582736968994
    4. ',n' → logprob: -7.131582736968994
    5. '(i' → logprob: -7.256582736968994
    6. ' ,' → logprob: -7.506582736968994
    7. ')' → logprob: -7.756582736968994
    8. '(' → logprob: -8.131583213806152
    9. ',d' → logprob: -8.256583213806152
    10. ',s' → logprob: -10.256583213806152

Token 114: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002478627720847726
    2. ' i' → logprob: -6.00247859954834
    3. ')' → logprob: -12.87747859954834
    4. ')i' → logprob: -15.37747859954834
    5. ' ' → logprob: -15.62747859954834
    6. '   ' → logprob: -16.377479553222656
    7. '	i' → logprob: -17.502479553222656
    8. '```' → logprob: -18.002479553222656
    9. '<|end|>' → logprob: -18.627479553222656
    10. '  ' → logprob: -19.002479553222656

Token 115: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4761175215244293
    2. ')' → logprob: -0.9761174917221069
    3. '       ' → logprob: -6.2261176109313965
    4. ')
' → logprob: -10.101117134094238
    5. ' )
' → logprob: -11.851117134094238
    6. '   ' → logprob: -12.101117134094238
    7. ')

' → logprob: -12.976117134094238
    8. ' )' → logprob: -13.226117134094238
    9. ')`
' → logprob: -13.726117134094238
    10. '):
' → logprob: -14.601117134094238

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003831252979580313
    2. 'total' → logprob: -8.625383377075195
    3. ' total' → logprob: -9.625383377075195
    4. ')' → logprob: -10.000383377075195
    5. '        
' → logprob: -10.625383377075195
    6. '   ' → logprob: -11.125383377075195
    7. '<|end|>' → logprob: -11.500383377075195
    8. '        ' → logprob: -11.750383377075195
    9. ' ' → logprob: -12.250383377075195
    10. ',' → logprob: -12.375383377075195

Token 117: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' (adapté à ' digit') → logprob: -0.34532126784324646
    2. '       ' → logprob: -1.9703212976455688
    3. ' digit' → logprob: -2.5953211784362793
    4. 'total' → logprob: -2.7203211784362793
    5. ' total' → logprob: -4.595321178436279
    6. 'd' → logprob: -6.595321178436279
    7. '   ' → logprob: -8.470321655273438
    8. 'num' → logprob: -9.220321655273438
    9. ' ' → logprob: -9.970321655273438
    10. '        
' → logprob: -10.220321655273438

Token 118: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6722236275672913
    2. '_int' → logprob: -1.2972235679626465
    3. ' =' → logprob: -1.9222235679626465
    4. '_val' → logprob: -3.2972235679626465
    5. '=' → logprob: -4.0472235679626465
    6. '_value' → logprob: -4.9222235679626465
    7. '_num' → logprob: -5.5472235679626465
    8. '_to' → logprob: -6.7972235679626465
    9. ')' → logprob: -7.0472235679626465
    10. '=_' → logprob: -7.4222235679626465

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022716224193573
    2. '=' → logprob: -2.350227117538452
    3. ' ' → logprob: -11.100227355957031
    4. ')' → logprob: -12.600227355957031
    5. ' +=' → logprob: -14.475227355957031
    6. '    ' → logprob: -14.475227355957031
    7. '  ' → logprob: -15.475227355957031
    8. '   ' → logprob: -15.600227355957031
    9. 's' → logprob: -16.10022735595703
    10. ' =)' → logprob: -16.72522735595703

Token 120: ' char' (ID: 1826)
  Prédit: ' char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.4740796685218811
    2. 'char' → logprob: -0.9740796685218811
    3. 'int' → logprob: -13.849080085754395
    4. ' int' → logprob: -14.099080085754395
    5. '	char' → logprob: -15.224080085754395
    6. '(char' → logprob: -15.724080085754395
    7. ' ' → logprob: -16.099079132080078
    8. ',char' → logprob: -16.224079132080078
    9. '<char' → logprob: -16.599079132080078
    10. ' add' → logprob: -16.974079132080078

Token 121: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. '_TO' → logprob: -15.625
    3. '-to' → logprob: -16.625
    4. '_t' → logprob: -17.125
    5. 'to' → logprob: -17.125
    6. 't' → logprob: -19.375
    7. 'To' → logprob: -19.375
    8. '	to' → logprob: -20.125
    9. '(to' → logprob: -20.375
    10. 'o' → logprob: -20.75

Token 122: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.002476724097505212
    2. 'int' → logprob: -6.002476692199707
    3. 'Int' → logprob: -14.252476692199707
    4. ' int' → logprob: -15.627476692199707
    5. 'nt' → logprob: -16.502477645874023
    6. 'd' → logprob: -17.627477645874023
    7. '<int' → logprob: -17.877477645874023
    8. '_in' → logprob: -17.877477645874023
    9. '-int' → logprob: -18.377477645874023
    10. '_INT' → logprob: -18.877477645874023

Token 123: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0619683600962162
    2. '(' → logprob: -2.8119683265686035
    3. '(
' → logprob: -15.061968803405762
    4. 'digit' → logprob: -15.561968803405762
    5. ' (' → logprob: -15.811968803405762
    6. ')' → logprob: -17.936967849731445
    7. '(decimal' → logprob: -18.061967849731445
    8. '(

' → logprob: -18.186967849731445
    9. ' digit' → logprob: -18.186967849731445
    10. '("("' → logprob: -18.311967849731445

Token 124: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -8.017927029868588e-05
    2. 'git' → logprob: -10.875080108642578
    3. 'digit' → logprob: -11.000080108642578
    4. '(d' → logprob: -11.125080108642578
    5. 'igt' → logprob: -11.750080108642578
    6. 'it' → logprob: -12.125080108642578
    7. 'ig' → logprob: -12.625080108642578
    8. ')' → logprob: -12.625080108642578
    9. 'ight' → logprob: -13.125080108642578
    10. '(' → logprob: -13.500080108642578

Token 125: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0019037702586501837
    2. ')' → logprob: -6.501903533935547
    3. 'char' → logprob: -8.251903533935547
    4. 's' → logprob: -10.251903533935547
    5. '(i' → logprob: -10.626903533935547
    6. '_c' → logprob: -11.501903533935547
    7. 'c' → logprob: -11.501903533935547
    8. '(' → logprob: -11.876903533935547
    9. '(char' → logprob: -11.876903533935547
    10. 'Char' → logprob: -12.251903533935547

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31352606415748596
    2. ')
' → logprob: -1.3135260343551636
    3. '       ' → logprob: -8.438526153564453
    4. ')
' → logprob: -10.438526153564453
    5. ')

' → logprob: -11.938526153564453
    6. '   ' → logprob: -12.438526153564453
    7. ')add' → logprob: -12.563526153564453
    8. 'def' → logprob: -14.188526153564453
    9. '),' → logprob: -14.688526153564453
    10. ')`
' → logprob: -14.938526153564453

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.17420256882906e-05
    2. ' total' → logprob: -11.000091552734375
    3. '   ' → logprob: -11.000091552734375
    4. '        
' → logprob: -11.250091552734375
    5. 'total' → logprob: -11.375091552734375
    6. ')' → logprob: -11.875091552734375
    7. '
' → logprob: -12.000091552734375
    8. '<|end|>' → logprob: -12.250091552734375
    9. '=' → logprob: -12.875091552734375
    10. ',' → logprob: -12.875091552734375

Token 128: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.36509183049201965
    2. ' total' → logprob: -1.2400918006896973
    3. '       ' → logprob: -4.490091800689697
    4. '
' → logprob: -5.490091800689697
    5. '   ' → logprob: -7.115091800689697
    6. '        
' → logprob: -8.615092277526855
    7. '	total' → logprob: -10.115092277526855
    8. ' ' → logprob: -10.240092277526855
    9. ' 
' → logprob: -10.490092277526855
    10. '    
' → logprob: -11.240092277526855

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4749196171760559
    2. '=' → logprob: -0.9749196171760559
    3. ' +=' → logprob: -7.22491979598999
    4. '+=' → logprob: -9.099919319152832
    5. ' ' → logprob: -13.224919319152832
    6. '+' → logprob: -14.849919319152832
    7. '.=' → logprob: -16.84992027282715
    8. ')' → logprob: -16.97492027282715
    9. ' =)' → logprob: -17.97492027282715
    10. '＝' → logprob: -18.22492027282715

Token 130: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0067639220505952835
    2. 'add' → logprob: -5.006763935089111
    3. ' total' → logprob: -10.131763458251953
    4. 'total' → logprob: -12.006763458251953
    5. ' ' → logprob: -13.381763458251953
    6. '	add' → logprob: -14.381763458251953
    7. '   ' → logprob: -16.131763458251953
    8. ')add' → logprob: -16.256763458251953
    9. '```' → logprob: -16.881763458251953
    10. '(add' → logprob: -16.881763458251953

Token 131: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00017147827020380646
    2. '(' → logprob: -8.875171661376953
    3. 'total' → logprob: -10.375171661376953
    4. ' total' → logprob: -15.125171661376953
    5. '(t' → logprob: -16.875171661376953
    6. ' (' → logprob: -16.875171661376953
    7. '	total' → logprob: -16.875171661376953
    8. ',total' → logprob: -17.500171661376953
    9. '(
' → logprob: -18.125171661376953
    10. ' ' → logprob: -19.250171661376953

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005367156583815813
    2. ',d' → logprob: -5.255367279052734
    3. ' ,' → logprob: -9.130367279052734
    4. 'digit' → logprob: -10.880367279052734
    5. ',
' → logprob: -13.130367279052734
    6. '(d' → logprob: -13.755367279052734
    7. ',b' → logprob: -13.880367279052734
    8. '+,' → logprob: -14.255367279052734
    9. 'd' → logprob: -15.130367279052734
    10. '(' → logprob: -15.380367279052734

Token 133: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.693149983882904
    2. 'digit' → logprob: -0.693149983882904
    3. ')' → logprob: -14.44314956665039
    4. ' ' → logprob: -14.56814956665039
    5. '-digit' → logprob: -14.56814956665039
    6. '_digit' → logprob: -14.81814956665039
    7. ' ' → logprob: -15.56814956665039
    8. '	d' → logprob: -15.81814956665039
    9. '   ' → logprob: -15.81814956665039
    10. 'd' → logprob: -16.06814956665039

Token 134: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.00031866179779171944
    2. 'int' → logprob: -8.12531852722168
    3. 'digit' → logprob: -11.62531852722168
    4. '_digit' → logprob: -11.87531852722168
    5. '_char' → logprob: -12.50031852722168
    6. ')' → logprob: -13.87531852722168
    7. 'Int' → logprob: -13.87531852722168
    8. '_' → logprob: -15.37531852722168
    9. '_,' → logprob: -15.75031852722168
    10. '-int' → logprob: -15.87531852722168

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0516156367957592
    2. ')
' → logprob: -3.1766157150268555
    3. '   ' → logprob: -4.8016157150268555
    4. ')return' → logprob: -8.551615715026855
    5. 'return' → logprob: -8.926615715026855
    6. '
' → logprob: -10.676615715026855
    7. ')

' → logprob: -12.551615715026855
    8. ')
' → logprob: -12.801615715026855
    9. ' return' → logprob: -13.301615715026855
    10. '    
' → logprob: -13.551615715026855

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023966653272509575
    2. 'return' → logprob: -4.1489667892456055
    3. ' return' → logprob: -5.5239667892456055
    4. '
' → logprob: -5.6489667892456055
    5. '    
' → logprob: -8.023966789245605
    6. '	return' → logprob: -11.023966789245605
    7. ')' → logprob: -11.898966789245605
    8. '  
' → logprob: -12.023966789245605
    9. ' ' → logprob: -12.148966789245605
    10. '<|end|>' → logprob: -12.398966789245605

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031413789838552475
    2. 'return' (adapté à ' return') → logprob: -3.9064137935638428
    3. ' return' → logprob: -4.531413555145264
    4. '	return' → logprob: -11.406414031982422
    5. '    
' → logprob: -11.656414031982422
    6. '
' → logprob: -11.906414031982422
    7. '<|end|>' → logprob: -12.031414031982422
    8. ' ' → logprob: -12.156414031982422
    9. ')' → logprob: -12.406414031982422
    10. '       ' → logprob: -13.656414031982422

Token 138: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6931551098823547
    2. 'total' → logprob: -0.6931551098823547
    3. ' ' → logprob: -12.693155288696289
    4. 't' → logprob: -13.443155288696289
    5. ' str' → logprob: -13.818155288696289
    6. 'str' → logprob: -14.068155288696289
    7. 'to' → logprob: -15.068155288696289
    8. ' t' → logprob: -15.693155288696289
    9. ' add' → logprob: -15.693155288696289
    10. '  ' → logprob: -15.818155288696289

Token 139: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27186182141304016
    2. '<|end|>' → logprob: -2.1468617916107178
    3. '
' → logprob: -2.2718617916107178
    4. '(' → logprob: -5.271862030029297
    5. '#' → logprob: -6.021862030029297
    6. '

' → logprob: -6.396862030029297
    7. 'n' → logprob: -6.646862030029297
    8. '\n' → logprob: -6.646862030029297
    9. '(
' → logprob: -6.771862030029297
    10. '+' → logprob: -6.896862030029297

Token 140: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09193506091833115
    2. '
' → logprob: -3.466935157775879
    3. 'n' → logprob: -3.966935157775879
    4. '<|end|>' → logprob: -4.091935157775879
    5. '#' → logprob: -4.716935157775879
    6. '(' → logprob: -5.841935157775879
    7. '\n' → logprob: -6.091935157775879
    8. '+' → logprob: -6.591935157775879
    9. '

' → logprob: -7.091935157775879
    10. '[' → logprob: -7.216935157775879

Token 141: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3287043273448944
    2. 'main' → logprob: -1.4537043571472168
    3. ' multiply' → logprob: -3.703704357147217
    4. 'multiply' → logprob: -4.078704357147217
    5. ' factorial' → logprob: -7.078704357147217
    6. 'sum' → logprob: -7.203704357147217
    7. ' product' → logprob: -7.453704357147217
    8. ' sum' → logprob: -7.578704357147217
    9. 'digit' → logprob: -8.078703880310059
    10. 'product' → logprob: -8.203703880310059

Token 142: '_div' (ID: 36926)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.173651322722435
    2. '_prime' → logprob: -1.9236513376235962
    3. '_even' → logprob: -4.798651218414307
    4. '_' → logprob: -5.923651218414307
    5. '_arm' → logprob: -6.923651218414307
    6. '_digit' → logprob: -7.798651218414307
    7. '_sum' → logprob: -8.423651695251465
    8. '_multiple' → logprob: -8.548651695251465
    9. '_valid' → logprob: -8.798651695251465
    10. '_div' → logprob: -9.423651695251465

Token 143: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -4.246537173457909e-06
    2. 'is' → logprob: -13.375003814697266
    3. 'isable' → logprob: -13.500003814697266
    4. '_by' → logprob: -14.375003814697266
    5. '_' → logprob: -15.375003814697266
    6. 'ISIBLE' → logprob: -15.500003814697266
    7. 'sible' → logprob: -16.500003814697266
    8. 'isor' → logprob: -17.500003814697266
    9. '3' → logprob: -18.125003814697266
    10. '_is' → logprob: -18.500003814697266

Token 144: '(a' (ID: 6271)
  Prédit: '_by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.1259501874446869
    2. '(n' → logprob: -2.7509500980377197
    3. '(' → logprob: -3.6259500980377197
    4. 'by' → logprob: -3.7509500980377197
    5. '_' → logprob: -6.375950336456299
    6. 'By' → logprob: -6.625950336456299
    7. ' by' → logprob: -7.625950336456299
    8. '_(' → logprob: -9.37594985961914
    9. '(num' → logprob: -9.37594985961914
    10. '9' → logprob: -9.62594985961914

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09732818603515625
    2. 'by' → logprob: -3.2223281860351562
    3. '_by' → logprob: -3.8473281860351562
    4. '(a' → logprob: -5.097328186035156
    5. '(n' → logprob: -5.222328186035156
    6. ',n' → logprob: -5.222328186035156
    7. ',a' → logprob: -5.472328186035156
    8. ',b' → logprob: -5.472328186035156
    9. 'By' → logprob: -6.847328186035156
    10. ')' → logprob: -6.847328186035156

Token 146: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.145280122756958
    2. '3' → logprob: -2.395280122756958
    3. ' b' → logprob: -3.520280122756958
    4. 'n' → logprob: -5.270279884338379
    5. ' ' → logprob: -5.520279884338379
    6. 's' → logprob: -7.145279884338379
    7. ' n' → logprob: -7.145279884338379
    8. 'div' → logprob: -7.395279884338379
    9. 'sum' → logprob: -7.395279884338379
    10. '9' → logprob: -7.520279884338379

Token 147: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030721822986379266
    2. ')' → logprob: -8.125307083129883
    3. '):
' → logprob: -12.125307083129883
    4. ':' → logprob: -12.500307083129883
    5. ' ):' → logprob: -14.125307083129883
    6. 'a' → logprob: -15.375307083129883
    7. ',' → logprob: -15.625307083129883
    8. '   ' → logprob: -16.000307083129883
    9. '(a' → logprob: -16.250307083129883
    10. '=' → logprob: -16.375307083129883

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4876573979854584
    2. ' return' → logprob: -1.2376574277877808
    3. ' a' → logprob: -2.612657308578491
    4. 'return' → logprob: -4.11265754699707
    5. 'a' → logprob: -5.11265754699707
    6. ' ' → logprob: -9.48765754699707
    7. '	return' → logprob: -10.73765754699707
    8. '  ' → logprob: -11.36265754699707
    9. ')' → logprob: -11.98765754699707
    10. '    ' → logprob: -12.11265754699707

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1009860560297966
    2. ' return' → logprob: -2.6009860038757324
    3. '   ' → logprob: -3.8509860038757324
    4. 'a' → logprob: -7.475986003875732
    5. ' a' → logprob: -10.72598648071289
    6. '	return' → logprob: -12.97598648071289
    7. ' ' → logprob: -13.10098648071289
    8. '
' → logprob: -13.60098648071289
    9. '    
' → logprob: -14.72598648071289
    10. '```' → logprob: -15.85098648071289

Token 150: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006089949980378151
    2. ' a' → logprob: -5.13109016418457
    3. '(a' → logprob: -8.75609016418457
    4. ' (' → logprob: -13.00609016418457
    5. '(' → logprob: -13.50609016418457
    6. '	a' → logprob: -15.63109016418457
    7. ' ' → logprob: -16.88109016418457
    8. 'add' → logprob: -17.63109016418457
    9. ' add' → logprob: -18.00609016418457
    10. '   ' → logprob: -18.38109016418457

Token 151: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38687989115715027
    2. ' %' → logprob: -1.1368799209594727
    3. '%b' → logprob: -12.386879920959473
    4. ' ' → logprob: -12.886879920959473
    5. ' ' → logprob: -13.761879920959473
    6. '%s' → logprob: -14.761879920959473
    7. '[' → logprob: -16.011878967285156
    8. '%d' → logprob: -16.136878967285156
    9. 'a' → logprob: -16.261878967285156
    10. '```' → logprob: -16.636878967285156

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.339278580620885e-06
    2. ' b' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.125001907348633
    4. '	b' → logprob: -21.000001907348633
    5. '  ' → logprob: -22.875001907348633
    6. ' ' → logprob: -23.000001907348633
    7. '```' → logprob: -24.000001907348633
    8. ')b' → logprob: -24.375001907348633
    9. '>b' → logprob: -24.875001907348633
    10. '    ' → logprob: -25.000001907348633

Token 153: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25241804122924805
    2. ' ==' → logprob: -1.502418041229248
    3. '=' → logprob: -7.752418041229248
    4. '0' → logprob: -10.127418518066406
    5. ' ' → logprob: -11.752418518066406
    6. '===' → logprob: -12.627418518066406
    7. '()==' → logprob: -12.877418518066406
    8. ' ' → logprob: -13.127418518066406
    9. ' =' → logprob: -13.502418518066406
    10. ')==' → logprob: -14.252418518066406

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. ' ' → logprob: -22.500024795532227
    4. '۰' → logprob: -22.750024795532227
    5. '   ' → logprob: -22.875024795532227
    6. '```' → logprob: -23.000024795532227
    7. '00' → logprob: -23.375024795532227
    8. '  ' → logprob: -23.875024795532227
    9. '０' → logprob: -24.750024795532227
    10. ' ' → logprob: -24.750024795532227

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.875001907348633
    4. '```' → logprob: -21.125001907348633
    5. '٠' → logprob: -21.812501907348633
    6. '０' → logprob: -21.812501907348633
    7. '०' → logprob: -21.875001907348633
    8. '00' → logprob: -21.937501907348633
    9. ' ' → logprob: -22.437501907348633
    10. '   ' → logprob: -22.500001907348633

Token 156: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2716166377067566
    2. '<|end|>' → logprob: -2.1466166973114014
    3. '(' → logprob: -3.0216166973114014
    4. '()' → logprob: -3.2716166973114014
    5. '

' → logprob: -4.146616458892822
    6. '
' → logprob: -4.646616458892822
    7. '()

' → logprob: -5.896616458892822
    8. '(

' → logprob: -7.021616458892822
    9. '(
' → logprob: -7.146616458892822
    10. '(def' → logprob: -7.271616458892822

Token 157: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09021291136741638
    2. 'n' → logprob: -2.590212821960449
    3. 'number' → logprob: -5.090212821960449
    4. 'if' → logprob: -6.340212821960449
    5. 's' → logprob: -6.715212821960449
    6. 'num' → logprob: -6.965212821960449
    7. 'print' → logprob: -8.34021282196045
    8. 'x' → logprob: -8.46521282196045
    9. 'input' → logprob: -8.84021282196045
    10. '#' → logprob: -9.09021282196045

Token 158: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.40959468483924866
    2. ' main' → logprob: -1.1595946550369263
    3. 'is' → logprob: -5.034594535827637
    4. 'def' → logprob: -5.284594535827637
    5. ' is' → logprob: -5.534594535827637
    6. 'check' → logprob: -6.284594535827637
    7. 'sum' → logprob: -6.284594535827637
    8. ' check' → logprob: -6.534594535827637
    9. ' sum' → logprob: -7.284594535827637
    10. ' def' → logprob: -7.534594535827637

Token 159: '_yes' (ID: 151898)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1178765818476677
    2. '()' → logprob: -2.2428765296936035
    3. '("")' → logprob: -5.6178765296936035
    4. '("' → logprob: -7.4928765296936035
    5. '("("' → logprob: -8.117877006530762
    6. '(output' → logprob: -8.867877006530762
    7. '('' → logprob: -8.992877006530762
    8. '_' → logprob: -10.492877006530762
    9. '(print' → logprob: -10.617877006530762
    10. '<|end|>' → logprob: -10.742877006530762

Token 160: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07909346371889114
    2. '():' → logprob: -2.5790934562683105
    3. '():
' → logprob: -9.454093933105469
    4. '()
' → logprob: -10.204093933105469
    5. '("' → logprob: -10.329093933105469
    6. '(' → logprob: -10.579093933105469
    7. ' ()' → logprob: -11.829093933105469
    8. '()"' → logprob: -11.954093933105469
    9. '()

' → logprob: -12.704093933105469
    10. '()`' → logprob: -12.954093933105469

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00864506047219038
    2. 'print' → logprob: -4.758645057678223
    3. ' print' → logprob: -10.883645057678223
    4. '(' → logprob: -12.258645057678223
    5. '()' → logprob: -12.383645057678223
    6. '   ' → logprob: -13.633645057678223
    7. '```' → logprob: -13.883645057678223
    8. '    
' → logprob: -16.00864601135254
    9. '	print' → logprob: -16.00864601135254
    10. 'def' → logprob: -16.25864601135254

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -11.50001335144043
    3. ' print' → logprob: -12.75001335144043
    4. 'pr' → logprob: -19.00001335144043
    5. '```' → logprob: -19.37501335144043
    6. '
' → logprob: -20.37501335144043
    7. '	print' → logprob: -20.75001335144043
    8. 'prin' → logprob: -20.87501335144043
    9. 'printf' → logprob: -22.62501335144043
    10. '    
' → logprob: -23.50001335144043

Token 163: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.007879876531660557
    2. '(' → logprob: -5.007879734039307
    3. '('' → logprob: -6.757879734039307
    4. '"' → logprob: -14.007880210876465
    5. '(
' → logprob: -14.007880210876465
    6. '("("' → logprob: -15.507880210876465
    7. '(True' → logprob: -15.632880210876465
    8. '()' → logprob: -16.50787925720215
    9. '(

' → logprob: -17.13287925720215
    10. ' ("' → logprob: -17.50787925720215

Token 164: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.4783056378364563
    2. 'YES' → logprob: -0.9783056378364563
    3. 'yes' → logprob: -5.478305816650391
    4. '"' → logprob: -10.97830581665039
    5. 'Y' → logprob: -11.22830581665039
    6. ' Yes' → logprob: -12.72830581665039
    7. '_yes' → logprob: -13.47830581665039
    8. 'YA' → logprob: -13.85330581665039
    9. ' yes' → logprob: -13.97830581665039
    10. 'Ye' → logprob: -13.97830581665039

Token 165: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.537868779967539e-06
    2. '")
' → logprob: -11.750008583068848
    3. '"' → logprob: -15.375008583068848
    4. '")

' → logprob: -15.875008583068848
    5. 'def' → logprob: -16.00000762939453
    6. ')' → logprob: -16.62500762939453
    7. ')")' → logprob: -16.75000762939453
    8. '!")' → logprob: -18.00000762939453
    9. ' ")' → logprob: -18.25000762939453
    10. '()' → logprob: -18.25000762939453

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. '```' → logprob: -16.75
    5. ' def' → logprob: -16.875
    6. 'ndef' → logprob: -18.375
    7. '	def' → logprob: -19.125
    8. '

' → logprob: -19.375
    9. '    
' → logprob: -19.5
    10. '\' → logprob: -19.75

Token 167: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0985972210764885
    2. ' print' → logprob: -2.473597288131714
    3. 'def' → logprob: -4.723597049713135
    4. '_print' → logprob: -7.598597049713135
    5. ' def' → logprob: -8.848597526550293
    6. '_' → logprob: -9.848597526550293
    7. ' ' → logprob: -11.223597526550293
    8. '
' → logprob: -12.473597526550293
    9. ' 
' → logprob: -12.598597526550293
    10. '.print' → logprob: -12.848597526550293

Token 168: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0005311102140694857
    2. '("_' → logprob: -8.250531196594238
    3. '_No' → logprob: -8.750531196594238
    4. '_NO' → logprob: -9.875531196594238
    5. '_n' → logprob: -10.375531196594238
    6. '_' → logprob: -11.250531196594238
    7. '("' → logprob: -12.125531196594238
    8. 'No' → logprob: -12.625531196594238
    9. '_not' → logprob: -13.625531196594238
    10. '_none' → logprob: -14.250531196594238

Token 169: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.833878508885391e-05
    2. '():
' → logprob: -10.750038146972656
    3. '()' → logprob: -11.625038146972656
    4. ' ():' → logprob: -11.750038146972656
    5. '():
' → logprob: -17.250038146972656
    6. '():

' → logprob: -18.375038146972656
    7. ' ()' → logprob: -18.875038146972656
    8. '(' → logprob: -20.250038146972656
    9. '()>' → logprob: -20.250038146972656
    10. ':' → logprob: -20.875038146972656

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018198171630501747
    2. 'print' → logprob: -4.018198013305664
    3. ' print' → logprob: -10.018198013305664
    4. '```' → logprob: -13.143198013305664
    5. '	print' → logprob: -14.268198013305664
    6. '   ' → logprob: -14.643198013305664
    7. '(print' → logprob: -15.893198013305664
    8. '()' → logprob: -16.018198013305664
    9. '(' → logprob: -16.143198013305664
    10. '    
' → logprob: -16.393198013305664

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.6934557505883276e-05
    2. '   ' → logprob: -10.250057220458984
    3. ' print' → logprob: -10.750057220458984
    4. '	print' → logprob: -18.000057220458984
    5. '(print' → logprob: -20.250057220458984
    6. '```' → logprob: -21.000057220458984
    7. 'pr' → logprob: -21.125057220458984
    8. 'println' → logprob: -22.000057220458984
    9. 'def' → logprob: -22.000057220458984
    10. '.print' → logprob: -22.000057220458984

Token 172: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.004086828324943781
    2. '()' → logprob: -6.004086971282959
    3. '(' → logprob: -6.504086971282959
    4. '"No' → logprob: -10.0040864944458
    5. 'No' → logprob: -10.2540864944458
    6. '("")' → logprob: -11.1290864944458
    7. '(No' → logprob: -11.2540864944458
    8. '(no' → logprob: -13.2540864944458
    9. '('' → logprob: -14.1290864944458
    10. '_no' → logprob: -14.2540864944458

Token 173: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.018162935972213745
    2. '"No' → logprob: -4.018162727355957
    3. '"' → logprob: -11.518162727355957
    4. '")' → logprob: -12.768162727355957
    5. '“No' → logprob: -15.768162727355957
    6. ' No' → logprob: -16.518163681030273
    7. 'NO' → logprob: -16.768163681030273
    8. '""' → logprob: -16.893163681030273
    9. 'no' → logprob: -18.018163681030273
    10. '"""' → logprob: -18.768163681030273

Token 174: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16171716153621674
    2. '()' → logprob: -1.911717176437378
    3. '")' → logprob: -6.786716938018799
    4. '())' → logprob: -8.161717414855957
    5. '()
' → logprob: -10.161717414855957
    6. 'def' → logprob: -11.036717414855957
    7. ')
' → logprob: -11.161717414855957
    8. ')")' → logprob: -13.536717414855957
    9. ' )' → logprob: -13.661717414855957
    10. '()

' → logprob: -13.786717414855957

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016100063920021057
    2. 'n' → logprob: -4.39109992980957
    3. 'number' → logprob: -6.26609992980957
    4. 's' → logprob: -7.51609992980957
    5. 'num' → logprob: -7.51609992980957
    6. 'if' → logprob: -7.64109992980957
    7. 'input' → logprob: -9.26609992980957
    8. 'N' → logprob: -12.01609992980957
    9. '
' → logprob: -12.14109992980957
    10. 'ndef' → logprob: -12.89109992980957

Token 176: ' process' (ID: 2273)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20247960090637207
    2. 'def' → logprob: -1.702479600906372
    3. ' main' → logprob: -7.452479362487793
    4. 'check' → logprob: -8.077479362487793
    5. 'is' → logprob: -8.952479362487793
    6. ' def' → logprob: -10.702479362487793
    7. 'sum' → logprob: -11.202479362487793
    8. 'solve' → logprob: -12.327479362487793
    9. 'if' → logprob: -13.452479362487793
    10. 'process' → logprob: -13.702479362487793

Token 177: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1792263686656952
    2. '_input' → logprob: -1.9292263984680176
    3. '()' → logprob: -5.554226398468018
    4. '_' → logprob: -5.679226398468018
    5. '(' → logprob: -6.179226398468018
    6. '()(' → logprob: -6.179226398468018
    7. '():
' → logprob: -6.679226398468018
    8. '_number' → logprob: -6.804226398468018
    9. '_numbers' → logprob: -7.304226398468018
    10. '(s' → logprob: -7.429226398468018

Token 178: '_input' (ID: 12507)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6532508134841919
    2. '_str' → logprob: -1.028250813484192
    3. '_' → logprob: -2.1532506942749023
    4. '_n' → logprob: -6.153250694274902
    5. '):
' → logprob: -6.778250694274902
    6. '_string' → logprob: -6.903250694274902
    7. '_s' → logprob: -7.153250694274902
    8. 's' → logprob: -8.403250694274902
    9. ')' → logprob: -8.653250694274902
    10. ')_' → logprob: -9.028250694274902

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010170908644795418
    2. '_' → logprob: -7.251017093658447
    3. '):
' → logprob: -8.626016616821289
    4. '_n' → logprob: -9.751016616821289
    5. ')' → logprob: -10.126016616821289
    6. '_str' → logprob: -11.501016616821289
    7. ':' → logprob: -12.376016616821289
    8. '_input' → logprob: -12.501016616821289
    9. ' ):' → logprob: -12.626016616821289
    10. 's' → logprob: -13.001016616821289

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000661684141959995
    2. '    
' → logprob: -8.375661849975586
    3. 'n' → logprob: -8.500661849975586
    4. ' n' → logprob: -9.000661849975586
    5. '
' → logprob: -11.000661849975586
    6. '    ' → logprob: -11.250661849975586
    7. ' length' → logprob: -11.375661849975586
    8. 's' → logprob: -11.625661849975586
    9. ' s' → logprob: -11.875661849975586
    10. 'length' → logprob: -11.875661849975586

Token 181: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10850806534290314
    2. 'n' (adapté à ' n') → logprob: -2.9835081100463867
    3. 'sum' → logprob: -3.6085081100463867
    4. 'digit' → logprob: -4.858508110046387
    5. 's' → logprob: -5.108508110046387
    6. ' n' → logprob: -5.358508110046387
    7. 'total' → logprob: -5.858508110046387
    8. 'num' → logprob: -6.858508110046387
    9. ' s' → logprob: -7.608508110046387
    10. 'number' → logprob: -7.608508110046387

Token 182: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1285421997308731
    2. '_str' → logprob: -2.503542184829712
    3. '_input' → logprob: -3.753542184829712
    4. '=' → logprob: -4.753542423248291
    5. ' =' → logprob: -5.253542423248291
    6. '_int' → logprob: -8.378541946411133
    7. '_sum' → logprob: -8.503541946411133
    8. '_len' → logprob: -8.628541946411133
    9. '=_' → logprob: -8.628541946411133
    10. '_length' → logprob: -8.753541946411133

Token 183: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.47603753209114075
    2. 'read' → logprob: -1.6010375022888184
    3. 'int' → logprob: -2.6010375022888184
    4. 'n' → logprob: -2.6010375022888184
    5. ' convert' → logprob: -3.9760375022888184
    6. ' n' → logprob: -5.476037502288818
    7. ' read' → logprob: -5.851037502288818
    8. ' int' → logprob: -5.976037502288818
    9. 'get' → logprob: -8.476037979125977
    10. 'str' → logprob: -10.726037979125977

Token 184: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.0
    3. '(n' → logprob: -18.75
    4. '_t' → logprob: -18.75
    5. ' _' → logprob: -19.75
    6. '_' → logprob: -19.875
    7. 'int' → logprob: -20.125
    8. '_from' → logprob: -20.125
    9. '(_' → logprob: -20.25
    10. '##_' → logprob: -20.375

Token 185: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.16023387014865875
    2. 'int' → logprob: -1.9102338552474976
    3. 'nt' → logprob: -11.910233497619629
    4. '_str' → logprob: -13.535233497619629
    5. ' int' → logprob: -13.910233497619629
    6. 'Int' → logprob: -14.535233497619629
    7. 'str' → logprob: -15.660233497619629
    8. 'n' → logprob: -16.910234451293945
    9. '(int' → logprob: -18.035234451293945
    10. '<int' → logprob: -18.160234451293945

Token 186: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. ' (' → logprob: -16.37509536743164
    4. '(s' → logprob: -17.25009536743164
    5. '('' → logprob: -18.50009536743164
    6. '((' → logprob: -19.00009536743164
    7. '(N' → logprob: -19.00009536743164
    8. '(
' → logprob: -19.37509536743164
    9. ')(' → logprob: -19.50009536743164
    10. '("("' → logprob: -19.62509536743164

Token 187: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0921942703134846e-05
    2. 'input' → logprob: -11.50001049041748
    3. '(input' → logprob: -15.50001049041748
    4. 'n' → logprob: -16.375011444091797
    5. 'Input' → logprob: -16.375011444091797
    6. '_str' → logprob: -16.875011444091797
    7. 'put' → logprob: -16.875011444091797
    8. '_' → logprob: -17.000011444091797
    9. '_in' → logprob: -17.000011444091797
    10. '(_' → logprob: -17.250011444091797

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.643152740551159e-05
    2. ')
' → logprob: -10.250036239624023
    3. ')n' → logprob: -15.125036239624023
    4. '   ' → logprob: -15.625036239624023
    5. ' )' → logprob: -15.625036239624023
    6. '))' → logprob: -16.000036239624023
    7. ')

' → logprob: -16.375036239624023
    8. ')`' → logprob: -16.625036239624023
    9. ')
' → logprob: -17.125036239624023
    10. ')#' → logprob: -17.375036239624023

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3704090118408203
    2. '
' → logprob: -1.3704090118408203
    3. '    
' → logprob: -3.6204090118408203
    4. 'sum' → logprob: -4.87040901184082
    5. 'if' → logprob: -5.12040901184082
    6. 's' → logprob: -5.24540901184082
    7. ' if' → logprob: -5.74540901184082
    8. '  
' → logprob: -6.74540901184082
    9. ' 
' → logprob: -6.87040901184082
    10. 'digit' → logprob: -7.37040901184082

Token 190: ' n' (ID: 297)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.19201844930648804
    2. 's' → logprob: -2.692018508911133
    3. 'sum' → logprob: -2.942018508911133
    4. 'if' → logprob: -3.442018508911133
    5. 'digits' → logprob: -4.192018508911133
    6. 'total' → logprob: -6.067018508911133
    7. 'n' (adapté à ' n') → logprob: -6.317018508911133
    8. 'sd' → logprob: -7.192018508911133
    9. '   ' → logprob: -7.192018508911133
    10. 'd' → logprob: -7.942018508911133

Token 191: '_str' (ID: 6182)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9526529312133789
    2. '_str' → logprob: -1.327652931213379
    3. ' %' → logprob: -1.827652931213379
    4. '%' → logprob: -2.077652931213379
    5. '_sum' → logprob: -3.827652931213379
    6. '>' → logprob: -4.577652931213379
    7. ' >' → logprob: -4.577652931213379
    8. ' ' → logprob: -5.202652931213379
    9. ')' → logprob: -5.827652931213379
    10. '=' → logprob: -6.327652931213379

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193944573402405
    2. ' =' → logprob: -1.5019394159317017
    3. ')' → logprob: -12.00193977355957
    4. ',' → logprob: -13.62693977355957
    5. '   ' → logprob: -14.50193977355957
    6. 's' → logprob: -14.87693977355957
    7. '_' → logprob: -14.87693977355957
    8. '>' → logprob: -15.50193977355957
    9. '=n' → logprob: -15.62693977355957
    10. ' ' → logprob: -15.75193977355957

Token 193: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03823380917310715
    2. ' int' → logprob: -3.288233757019043
    3. 'str' → logprob: -8.663233757019043
    4. ' str' → logprob: -11.538233757019043
    5. 'n' → logprob: -12.163233757019043
    6. ' n' → logprob: -13.163233757019043
    7. '   ' → logprob: -13.788233757019043
    8. ' ' → logprob: -14.288233757019043
    9. '  ' → logprob: -14.788233757019043
    10. '```' → logprob: -15.788233757019043

Token 194: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.896309739408025e-07
    2. '_t' → logprob: -15.500000953674316
    3. ''_' → logprob: -15.500000953674316
    4. '"_' → logprob: -16.0
    5. '_' → logprob: -16.75
    6. '_str' → logprob: -17.125
    7. 'To' → logprob: -17.25
    8. 'to' → logprob: -17.5
    9. '```' → logprob: -18.125
    10. ' _' → logprob: -18.25

Token 195: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0015041481237858534
    2. 'str' → logprob: -6.501503944396973
    3. 's' → logprob: -14.001503944396973
    4. '_s' → logprob: -14.876503944396973
    5. ' str' → logprob: -14.876503944396973
    6. '(str' → logprob: -16.37650489807129
    7. 'r' → logprob: -16.50150489807129
    8. '_' → logprob: -17.12650489807129
    9. 'n' → logprob: -17.37650489807129
    10. '_st' → logprob: -18.00150489807129

Token 196: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001171056181192398
    2. '(' → logprob: -6.751171112060547
    3. ' (' → logprob: -14.501171112060547
    4. '(
' → logprob: -15.126171112060547
    5. 'n' → logprob: -16.876171112060547
    6. '((' → logprob: -17.876171112060547
    7. '()' → logprob: -19.376171112060547
    8. '(abs' → logprob: -19.376171112060547
    9. '(

' → logprob: -19.501171112060547
    10. '(num' → logprob: -19.626171112060547

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004689880646765232
    2. ')
' → logprob: -5.379689693450928
    3. '[' → logprob: -10.504690170288086
    4. '   ' → logprob: -11.004690170288086
    5. ' )' → logprob: -11.379690170288086
    6. ')

' → logprob: -11.879690170288086
    7. '())' → logprob: -13.504690170288086
    8. ')
' → logprob: -14.129690170288086
    9. '[n' → logprob: -14.379690170288086
    10. ')n' → logprob: -14.379690170288086

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03341618552803993
    2. 'sum' → logprob: -3.658416271209717
    3. 'total' → logprob: -6.158416271209717
    4. ' sum' → logprob: -6.283416271209717
    5. 's' → logprob: -6.908416271209717
    6. 'digit' → logprob: -6.908416271209717
    7. ' total' → logprob: -8.158415794372559
    8. 'digits' → logprob: -8.533415794372559
    9. '    
' → logprob: -8.658415794372559
    10. ' s' → logprob: -9.283415794372559

Token 199: ' s' (ID: 265)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.061680469661951065
    2. 'total' → logprob: -3.811680555343628
    3. 'sum' → logprob: -4.061680316925049
    4. 's' (adapté à ' s') → logprob: -4.061680316925049
    5. 'digits' → logprob: -5.936680316925049
    6. ' digit' → logprob: -8.561680793762207
    7. 'sd' → logprob: -8.811680793762207
    8. 'd' → logprob: -9.186680793762207
    9. '   ' → logprob: -9.561680793762207
    10. 'if' → logprob: -11.061680793762207

Token 200: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.00031055594445206225
    2. ' =' → logprob: -9.000310897827148
    3. '_sum' → logprob: -9.250310897827148
    4. '_' → logprob: -10.000310897827148
    5. '=' → logprob: -11.250310897827148
    6. '_um' → logprob: -11.625310897827148
    7. 'sum' → logprob: -11.750310897827148
    8. 'u' → logprob: -12.625310897827148
    9. '_length' → logprob: -13.125310897827148
    10. '_digits' → logprob: -13.250310897827148

Token 201: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.1389094889163971
    2. ' sum' → logprob: -2.2639095783233643
    3. 'n' → logprob: -4.263909339904785
    4. ' n' → logprob: -5.138909339904785
    5. 'str' → logprob: -6.013909339904785
    6. 'um' → logprob: -6.638909339904785
    7. 'int' → logprob: -6.888909339904785
    8. ' str' → logprob: -7.138909339904785
    9. ' int' → logprob: -9.888909339904785
    10. 'm' → logprob: -10.638909339904785

Token 202: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -1.3544423381972592e-05
    2. '_' → logprob: -12.25001335144043
    3. '(n' → logprob: -12.62501335144043
    4. 'digits' → logprob: -12.75001335144043
    5. '_chars' → logprob: -13.75001335144043
    6. '(_' → logprob: -14.75001335144043
    7. '_d' → logprob: -15.37501335144043
    8. '(' → logprob: -15.75001335144043
    9. '_(' → logprob: -16.12501335144043
    10. '```' → logprob: -16.25001335144043

Token 203: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038251712918281555
    2. '(' → logprob: -3.2882516384124756
    3. ' (' → logprob: -9.038251876831055
    4. '(
' → logprob: -9.413251876831055
    5. '("("' → logprob: -11.913251876831055
    6. '('' → logprob: -13.163251876831055
    7. '(

' → logprob: -14.038251876831055
    8. '(
' → logprob: -15.788251876831055
    9. '(noun' → logprob: -16.288251876831055
    10. '((' → logprob: -16.663251876831055

Token 204: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0016357855638489127
    2. '(n' → logprob: -7.001635551452637
    3. 'str' → logprob: -7.626635551452637
    4. '_n' → logprob: -9.126635551452637
    5. ')' → logprob: -9.876635551452637
    6. 'n' → logprob: -10.001635551452637
    7. 's' → logprob: -11.626635551452637
    8. '(str' → logprob: -12.626635551452637
    9. '_s' → logprob: -12.626635551452637
    10. ')_' → logprob: -13.001635551452637

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0327029675245285
    2. ')
' → logprob: -4.032702922821045
    3. '())' → logprob: -5.032702922821045
    4. '   ' → logprob: -5.157702922821045
    5. '()' → logprob: -6.282702922821045
    6. '())
' → logprob: -8.282703399658203
    7. '()
' → logprob: -11.282703399658203
    8. ')
' → logprob: -11.907703399658203
    9. ' )' → logprob: -12.032703399658203
    10. '(n' → logprob: -12.032703399658203

Token 206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5390030145645142
    2. '   ' → logprob: -0.9140030145645142
    3. '    
' → logprob: -4.539002895355225
    4. '  
' → logprob: -6.414002895355225
    5. ' if' → logprob: -6.539002895355225
    6. 'if' → logprob: -7.414002895355225
    7. '<|end|>' → logprob: -7.539002895355225
    8. '\n' → logprob: -8.164003372192383
    9. ' 
' → logprob: -8.539003372192383
    10. '   
' → logprob: -8.664003372192383

Token 207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0035154952201992273
    2. '   ' → logprob: -6.128515720367432
    3. ' if' → logprob: -6.628515720367432
    4. '
' → logprob: -12.253515243530273
    5. ' ' → logprob: -13.628515243530273
    6. '	if' → logprob: -14.878515243530273
    7. '```' → logprob: -15.128515243530273
    8. '    
' → logprob: -15.378515243530273
    9. '  ' → logprob: -15.878515243530273
    10. 'for' → logprob: -16.753515243530273

Token 208: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16044041514396667
    2. 'is' → logprob: -1.910440444946289
    3. '(is' → logprob: -8.660440444946289
    4. '(' → logprob: -10.660440444946289
    5. ' (' → logprob: -11.535440444946289
    6. ' s' → logprob: -12.160440444946289
    7. '   ' → logprob: -13.160440444946289
    8. 's' → logprob: -13.660440444946289
    9. ' ' → logprob: -14.660440444946289
    10. '	is' → logprob: -15.535440444946289

Token 209: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.2020991056924686e-05
    2. 'div' → logprob: -10.375032424926758
    3. '<div' → logprob: -16.000032424926758
    4. '_' → logprob: -16.000032424926758
    5. '_DIV' → logprob: -16.125032424926758
    6. ' divisible' → logprob: -16.500032424926758
    7. 'is' → logprob: -17.000032424926758
    8. '(div' → logprob: -17.125032424926758
    9. '_di' → logprob: -17.375032424926758
    10. 's' → logprob: -17.625032424926758

Token 210: 'isible' (ID: 181386)
  Prédit: 'isible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -2.7014437364414334e-05
    2. 'is' → logprob: -10.62502670288086
    3. 'ISIBLE' → logprob: -13.00002670288086
    4. 'isable' → logprob: -14.75002670288086
    5. 'sible' → logprob: -17.62502670288086
    6. '(is' → logprob: -19.37502670288086
    7. '   ' → logprob: -19.50002670288086
    8. 's' → logprob: -20.37502670288086
    9. 'ible' → logprob: -20.50002670288086
    10. 'visible' → logprob: -20.62502670288086

Token 211: '(n' (ID: 2406)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007897856645286083
    2. '(n' → logprob: -5.007897853851318
    3. '(' → logprob: -6.757897853851318
    4. ' (' → logprob: -11.007898330688477
    5. 's' → logprob: -13.007898330688477
    6. '(
' → logprob: -13.882898330688477
    7. '(a' → logprob: -15.882898330688477
    8. ')' → logprob: -16.507898330688477
    9. '((' → logprob: -17.132898330688477
    10. 'n' → logprob: -17.757898330688477

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18876156210899353
    2. 's' → logprob: -2.4387614727020264
    3. ',s' → logprob: -2.5637614727020264
    4. ' ,' → logprob: -5.0637617111206055
    5. '(s' → logprob: -6.8137617111206055
    6. '(' → logprob: -8.813761711120605
    7. ',
' → logprob: -9.063761711120605
    8. ' s' → logprob: -11.813761711120605
    9. ',(' → logprob: -11.938761711120605
    10. ' ' → logprob: -12.438761711120605

Token 213: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005305500701069832
    2. ' s' → logprob: -5.255305290222168
    3. '3' → logprob: -9.630305290222168
    4. '9' → logprob: -13.005305290222168
    5. ' ' → logprob: -13.505305290222168
    6. '   ' → logprob: -14.505305290222168
    7. ' ' → logprob: -15.005305290222168
    8. '7' → logprob: -15.130305290222168
    9. '	s' → logprob: -15.255305290222168
    10. ')' → logprob: -15.755305290222168

Token 214: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004742831224575639
    2. ')' → logprob: -8.375473976135254
    3. '):
' → logprob: -8.375473976135254
    4. ' ):' → logprob: -11.625473976135254
    5. ':' → logprob: -12.875473976135254
    6. '):
' → logprob: -14.125473976135254
    7. '   ' → logprob: -15.000473976135254
    8. '):

' → logprob: -15.875473976135254
    9. ')):' → logprob: -16.12547492980957
    10. '"):' → logprob: -16.37547492980957

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001210591522976756
    2. 'print' → logprob: -6.751210689544678
    3. ' print' → logprob: -10.50121021270752
    4. '   ' → logprob: -11.62621021270752
    5. '      ' → logprob: -14.37621021270752
    6. '(print' → logprob: -14.50121021270752
    7. '```' → logprob: -14.87621021270752
    8. '	' → logprob: -15.00121021270752
    9. '    ' → logprob: -15.12621021270752
    10. '        
' → logprob: -15.25121021270752

Token 216: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0008015265921130776
    2. ' print' → logprob: -7.7508015632629395
    3. '       ' → logprob: -8.000801086425781
    4. '   ' → logprob: -10.250801086425781
    5. '	print' → logprob: -15.875801086425781
    6. '
' → logprob: -16.75080108642578
    7. '(print' → logprob: -18.00080108642578
    8. '.print' → logprob: -18.12580108642578
    9. '```' → logprob: -18.37580108642578
    10. ' ' → logprob: -18.50080108642578

Token 217: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -13.875001907348633
    3. '_no' → logprob: -14.500001907348633
    4. 'Yes' → logprob: -17.000001907348633
    5. 'yes' → logprob: -17.750001907348633
    6. '("_' → logprob: -19.875001907348633
    7. '(' → logprob: -20.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. ' Yes' → logprob: -20.500001907348633
    10. '_you' → logprob: -20.750001907348633

Token 218: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029754657298326492
    2. '()
' → logprob: -3.529754638671875
    3. '   ' → logprob: -13.279754638671875
    4. '()

' → logprob: -13.779754638671875
    5. '()\' → logprob: -14.654754638671875
    6. '()
' → logprob: -14.779754638671875
    7. '())' → logprob: -15.529754638671875
    8. ' ()' → logprob: -16.029754638671875
    9. '(' → logprob: -16.654754638671875
    10. '()`' → logprob: -16.779754638671875

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004144407343119383
    2. 'else' → logprob: -5.504144191741943
    3. ' else' → logprob: -9.629144668579102
    4. '    
' → logprob: -16.7541446685791
    5. '	else' → logprob: -16.7541446685791
    6. '```' → logprob: -17.5041446685791
    7. '       ' → logprob: -18.5041446685791
    8. 'elif' → logprob: -18.5041446685791
    9. 'def' → logprob: -18.7541446685791
    10. '
' → logprob: -18.7541446685791

Token 220: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12722362577915192
    2. 'else' (adapté à ' else') → logprob: -2.1272237300872803
    3. ' else' → logprob: -8.12722396850586
    4. '	else' → logprob: -16.12722396850586
    5. '    
' → logprob: -17.62722396850586
    6. '```' → logprob: -18.00222396850586
    7. '       ' → logprob: -18.12722396850586
    8. ' ' → logprob: -18.12722396850586
    9. '  ' → logprob: -18.25222396850586
    10. 'elif' → logprob: -18.50222396850586

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036070786882191896
    2. ':
' → logprob: -5.628607273101807
    3. '():' → logprob: -12.253606796264648
    4. '():
' → logprob: -13.878606796264648
    5. '   ' → logprob: -14.753606796264648
    6. ' :' → logprob: -15.253606796264648
    7. '       ' → logprob: -15.503606796264648
    8. ':
' → logprob: -16.12860679626465
    9. ':

' → logprob: -16.12860679626465
    10. ' :
' → logprob: -16.62860679626465

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000552555953618139
    2. 'print' → logprob: -8.0005521774292
    3. ' print' → logprob: -8.5005521774292
    4. '   ' → logprob: -11.2505521774292
    5. '(print' → logprob: -15.1255521774292
    6. '     ' → logprob: -16.000553131103516
    7. '      ' → logprob: -16.375553131103516
    8. '           ' → logprob: -16.750553131103516
    9. '	print' → logprob: -17.000553131103516
    10. '    ' → logprob: -17.875553131103516

Token 223: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.836499985889532e-05
    2. ' print' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.750059127807617
    4. '(print' → logprob: -20.125059127807617
    5. '	print' → logprob: -20.375059127807617
    6. '       ' → logprob: -20.375059127807617
    7. '.print' → logprob: -21.500059127807617
    8. '_print' → logprob: -22.750059127807617
    9. '```' → logprob: -23.875059127807617
    10. '
' → logprob: -24.500059127807617

Token 224: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -5.512236498361744e-07
    2. 'no' → logprob: -14.750000953674316
    3. '_n' → logprob: -17.125
    4. '_' → logprob: -17.25
    5. 'No' → logprob: -19.625
    6. '_none' → logprob: -20.125
    7. '```' → logprob: -20.25
    8. '_No' → logprob: -20.375
    9. '_yes' → logprob: -20.625
    10. '_NO' → logprob: -21.0

Token 225: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10057272017002106
    2. '()
' → logprob: -2.3505728244781494
    3. '()\' → logprob: -8.85057258605957
    4. '()

' → logprob: -9.22557258605957
    5. '(' → logprob: -9.35057258605957
    6. '(
' → logprob: -10.72557258605957
    7. '()`' → logprob: -12.35057258605957
    8. '
' → logprob: -12.60057258605957
    9. '()
' → logprob: -13.35057258605957
    10. '(n' → logprob: -13.47557258605957

Token 226: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0340520404279232
    2. 'n' → logprob: -3.7840521335601807
    3. 'def' → logprob: -4.534051895141602
    4. ' if' → logprob: -12.034051895141602
    5. '
' → logprob: -13.409051895141602
    6. '#' → logprob: -14.284051895141602
    7. '  
' → logprob: -14.284051895141602
    8. '```' → logprob: -14.284051895141602
    9. 'ndef' → logprob: -14.534051895141602
    10. '\n' → logprob: -15.034051895141602

Token 227: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.018155913800001144
    2. 'main' → logprob: -4.018156051635742
    3. '_main' → logprob: -12.143156051635742
    4. '__' → logprob: -14.393156051635742
    5. ' __' → logprob: -15.893156051635742
    6. '	main' → logprob: -17.018156051635742
    7. ' run' → logprob: -18.143156051635742
    8. 'if' → logprob: -18.268156051635742
    9. '
' → logprob: -18.643156051635742
    10. '_' → logprob: -19.518156051635742

Token 228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.259079363080673e-05
    2. '():
' → logprob: -11.875012397766113
    3. ' ():' → logprob: -12.125012397766113
    4. '()' → logprob: -16.25001335144043
    5. '(' → logprob: -18.37501335144043
    6. '():
' → logprob: -18.62501335144043
    7. '():

' → logprob: -19.75001335144043
    8. '(":' → logprob: -20.62501335144043
    9. '_' → logprob: -21.00001335144043
    10. '().' → logprob: -21.25001335144043

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053844597190618515
    2. 'n' → logprob: -3.053844690322876
    3. ' n' → logprob: -5.678844451904297
    4. '	n' → logprob: -6.428844451904297
    5. '    
' → logprob: -9.428844451904297
    6. '
' → logprob: -9.803844451904297
    7. 'input' → logprob: -10.428844451904297
    8. 'import' → logprob: -11.803844451904297
    9. '```' → logprob: -11.803844451904297
    10. '   ' → logprob: -12.053844451904297

Token 230: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0032852557487785816
    2. ' n' → logprob: -5.8782854080200195
    3. '   ' → logprob: -8.12828540802002
    4. 't' → logprob: -9.25328540802002
    5. 'input' → logprob: -9.62828540802002
    6. 'num' → logprob: -11.87828540802002
    7. 'N' → logprob: -12.62828540802002
    8. 'line' → logprob: -13.00328540802002
    9. 'for' → logprob: -13.12828540802002
    10. 's' → logprob: -13.25328540802002

Token 231: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.4855663721391466e-05
    2. '_' → logprob: -11.750015258789062
    3. ' =' → logprob: -12.375015258789062
    4. '=' → logprob: -13.750015258789062
    5. '_in' → logprob: -14.375015258789062
    6. 'input' → logprob: -15.250015258789062
    7. '=input' → logprob: -15.250015258789062
    8. '_inputs' → logprob: -15.625015258789062
    9. '=_' → logprob: -15.875015258789062
    10. '_n' → logprob: -17.000015258789062

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687169551849365
    2. '=' → logprob: -1.1368716955184937
    3. '   ' → logprob: -15.011871337890625
    4. '()' → logprob: -15.636871337890625
    5. '	' → logprob: -16.761871337890625
    6. ' ' → logprob: -16.886871337890625
    7. ')' → logprob: -18.011871337890625
    8. '(' → logprob: -18.011871337890625
    9. ' ' → logprob: -18.261871337890625
    10. '=sys' → logprob: -18.511871337890625

Token 233: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12692926824092865
    2. ' read' → logprob: -2.12692928314209
    3. 'input' → logprob: -14.12692928314209
    4. ' input' → logprob: -15.25192928314209
    5. '	read' → logprob: -15.50192928314209
    6. '   ' → logprob: -17.501928329467773
    7. '(read' → logprob: -17.626928329467773
    8. ' sys' → logprob: -18.251928329467773
    9. ' readline' → logprob: -18.251928329467773
    10. 'sys' → logprob: -18.501928329467773

Token 234: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.006839810870587826
    2. '_' → logprob: -5.631839752197266
    3. '()' → logprob: -5.756839752197266
    4. '_line' → logprob: -9.881839752197266
    5. 'input' → logprob: -11.381839752197266
    6. '__' → logprob: -13.256839752197266
    7. '_Input' → logprob: -13.506839752197266
    8. '()
' → logprob: -13.881839752197266
    9. ' _' → logprob: -14.006839752197266
    10. '_in' → logprob: -14.256839752197266

Token 235: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006280870293267071
    2. '()
' → logprob: -7.3756279945373535
    3. '()

' → logprob: -14.375628471374512
    4. '()
' → logprob: -15.625628471374512
    5. '()\' → logprob: -15.875628471374512
    6. ')' → logprob: -16.000627517700195
    7. '()`' → logprob: -16.000627517700195
    8. ' ()' → logprob: -16.375627517700195
    9. '(' → logprob: -16.375627517700195
    10. '())' → logprob: -16.500627517700195

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031046250835061073
    2. 'process' → logprob: -3.531046152114868
    3. ' process' → logprob: -7.156046390533447
    4. '
' → logprob: -8.031045913696289
    5. '	process' → logprob: -8.656045913696289
    6. '    
' → logprob: -12.281045913696289
    7. '(process' → logprob: -12.406045913696289
    8. '_process' → logprob: -13.031045913696289
    9. '```' → logprob: -13.031045913696289
    10. 'def' → logprob: -14.281045913696289

Token 237: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.02334575727581978
    2. ' process' → logprob: -3.773345708847046
    3. '   ' → logprob: -9.273345947265625
    4. '	process' → logprob: -12.023345947265625
    5. '.process' → logprob: -16.148345947265625
    6. '(process' → logprob: -16.148345947265625
    7. '_process' → logprob: -16.648345947265625
    8. '
' → logprob: -17.148345947265625
    9. '/process' → logprob: -17.898345947265625
    10. 'proces' → logprob: -18.398345947265625

Token 238: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759473443031311
    2. '(n' → logprob: -0.8259473443031311
    3. '(
' → logprob: -12.200947761535645
    4. ' (' → logprob: -13.075947761535645
    5. '(

' → logprob: -14.700947761535645
    6. '("("' → logprob: -15.825947761535645
    7. '('' → logprob: -16.075946807861328
    8. '(noun' → logprob: -16.575946807861328
    9. '()' → logprob: -17.075946807861328
    10. '((' → logprob: -17.825946807861328

Token 239: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.941850526549388e-06
    2. 'input' → logprob: -11.875007629394531
    3. '_' → logprob: -14.375007629394531
    4. ')' → logprob: -15.125007629394531
    5. '_in' → logprob: -16.87500762939453
    6. 'Input' → logprob: -18.25000762939453
    7. '(input' → logprob: -18.25000762939453
    8. '_)' → logprob: -18.62500762939453
    9. '_INPUT' → logprob: -18.62500762939453
    10. ')_' → logprob: -18.62500762939453

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. ')
' → logprob: -11.875008583068848
    3. '())' → logprob: -14.125008583068848
    4. ' )' → logprob: -15.000008583068848
    5. '()' → logprob: -16.25000762939453
    6. ')n' → logprob: -16.50000762939453
    7. ')

' → logprob: -17.25000762939453
    8. ')#' → logprob: -17.62500762939453
    9. '#' → logprob: -17.87500762939453
    10. '))' → logprob: -18.00000762939453

Token 241: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6556729078292847
    2. 'if' → logprob: -0.7806729078292847
    3. '\n' → logprob: -4.030673027038574
    4. '<|end|>' → logprob: -5.655673027038574
    5. '```' → logprob: -7.405673027038574
    6. 'main' → logprob: -8.030673027038574
    7. '\' → logprob: -8.780673027038574
    8. ' if' → logprob: -9.155673027038574
    9. '#' → logprob: -9.405673027038574
    10. '

' → logprob: -9.405673027038574

Token 242: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4565869867801666
    2. 'if' → logprob: -1.3315869569778442
    3. '<|end|>' → logprob: -2.331587076187134
    4. '\n' → logprob: -5.456586837768555
    5. '```' → logprob: -7.456586837768555
    6. '    
' → logprob: -9.581586837768555
    7. '<|end|>' → logprob: -9.581586837768555
    8. ' if' → logprob: -9.581586837768555
    9. '

' → logprob: -9.706586837768555
    10. '  
' → logprob: -9.706586837768555

Token 243: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04850049689412117
    2. '

' → logprob: -3.4235005378723145
    3. '<|end|>' → logprob: -4.6735005378723145
    4. 'if' → logprob: -5.7985005378723145
    5. '\n' → logprob: -7.0485005378723145
    6. 'main' → logprob: -7.0485005378723145
    7. '```' → logprob: -8.423500061035156
    8. '0' → logprob: -9.923500061035156
    9. '' → logprob: -9.923500061035156
    10. '
    
' → logprob: -10.048500061035156

Token 244: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.796184723294573e-06
    2. 'main' → logprob: -12.250005722045898
    3. ' if' → logprob: -14.375005722045898
    4. '```' → logprob: -15.375005722045898
    5. '#' → logprob: -17.3750057220459
    6. '
' → logprob: -17.3750057220459
    7. '\n' → logprob: -18.2500057220459
    8. '\' → logprob: -19.1250057220459
    9. '#if' → logprob: -19.1250057220459
    10. 'i' → logprob: -19.3750057220459

Token 245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004640284460037947
    2. '__' → logprob: -5.379640102386475
    3. '_' → logprob: -11.254640579223633
    4. ' ' → logprob: -12.629640579223633
    5. '_name' → logprob: -13.629640579223633
    6. '___' → logprob: -14.379640579223633
    7. ' ___' → logprob: -14.504640579223633
    8. ' _' → logprob: -14.629640579223633
    9. ' ' → logprob: -14.879640579223633
    10. 'name' → logprob: -15.129640579223633

Token 246: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.048978716135025024
    2. ' ==' → logprob: -3.298978805541992
    3. '==' → logprob: -5.298978805541992
    4. ' __' → logprob: -5.298978805541992
    5. '__.__' → logprob: -7.923978805541992
    6. '.__' → logprob: -8.673978805541992
    7. '=="' → logprob: -9.298978805541992
    8. '__.' → logprob: -9.798978805541992
    9. ' .' → logprob: -9.923978805541992
    10. '.' → logprob: -10.298978805541992

Token 247: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.190178904333152e-05
    2. '==' → logprob: -10.500031471252441
    3. '__.__' → logprob: -13.000031471252441
    4. ' ==' → logprob: -14.375031471252441
    5. '___' → logprob: -14.500031471252441
    6. '=="' → logprob: -14.625031471252441
    7. '____' → logprob: -15.750031471252441
    8. '__('' → logprob: -16.625032424926758
    9. '__
' → logprob: -16.875032424926758
    10. '_' → logprob: -17.000032424926758

Token 248: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4664697051048279
    2. '==' → logprob: -1.0914697647094727
    3. ' ==' → logprob: -3.3414697647094727
    4. '=="' → logprob: -6.466469764709473
    5. '=='' → logprob: -9.716469764709473
    6. '_' → logprob: -10.591469764709473
    7. '=' → logprob: -11.216469764709473
    8. '===' → logprob: -11.591469764709473
    9. '"' → logprob: -12.091469764709473
    10. '___' → logprob: -12.341469764709473

Token 249: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006732303183525801
    2. ''' → logprob: -5.00673246383667
    3. ' "__' → logprob: -11.131731986999512
    4. '__' → logprob: -13.256731986999512
    5. '"user' → logprob: -15.131731986999512
    6. ' '__' → logprob: -16.256732940673828
    7. ' "' → logprob: -16.256732940673828
    8. '"name' → logprob: -17.256732940673828
    9. '"type' → logprob: -18.506732940673828
    10. ''"' → logprob: -18.631732940673828

Token 250: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0010130415903404355
    2. 'name' → logprob: -7.001013278961182
    3. '__' → logprob: -9.251012802124023
    4. '_main' → logprob: -12.126012802124023
    5. '_name' → logprob: -17.251012802124023
    6. 'm' → logprob: -17.626012802124023
    7. ' main' → logprob: -17.626012802124023
    8. 'ma' → logprob: -18.751012802124023
    9. '__':
' → logprob: -18.751012802124023
    10. '_MAIN' → logprob: -19.376012802124023

Token 251: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.008663497865200043
    2. '__' → logprob: -4.758663654327393
    3. '__:' → logprob: -10.883663177490234
    4. '__":
' → logprob: -11.008663177490234
    5. '':' → logprob: -11.508663177490234
    6. '_' → logprob: -13.508663177490234
    7. '':
' → logprob: -13.633663177490234
    8. ':' → logprob: -14.758663177490234
    9. '__('' → logprob: -16.008663177490234
    10. '':'' → logprob: -16.008663177490234

Token 252: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.018174059689044952
    2. ' main' → logprob: -4.018174171447754
    3. '	main' → logprob: -10.893174171447754
    4. '_main' → logprob: -12.143174171447754
    5. '   ' → logprob: -15.268174171447754
    6. '__' → logprob: -17.643173217773438
    7. '    
' → logprob: -17.768173217773438
    8. '.main' → logprob: -18.268173217773438
    9. '
' → logprob: -18.393173217773438
    10. '(main' → logprob: -18.518173217773438

Token 253: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.547789674485102e-05
    2. ' main' → logprob: -10.250035285949707
    3. '	main' → logprob: -17.375036239624023
    4. '   ' → logprob: -20.750036239624023
    5. '(main' → logprob: -22.500036239624023
    6. '_main' → logprob: -22.750036239624023
    7. '.main' → logprob: -23.375036239624023
    8. '  ' → logprob: -24.000036239624023
    9. ' ' → logprob: -24.250036239624023
    10. '
' → logprob: -24.750036239624023

Token 254: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.021249841898679733
    2. '(' → logprob: -4.146249771118164
    3. '<|end|>' → logprob: -5.896249771118164
    4. '
' → logprob: -6.771249771118164
    5. '()
' → logprob: -7.646249771118164
    6. '\n' → logprob: -8.396249771118164
    7. '#' → logprob: -8.771249771118164
    8. '```' → logprob: -8.896249771118164
    9. '(
' → logprob: -9.021249771118164
    10. '();' → logprob: -10.271249771118164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 252
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 128
Tokens correctement prédits (top 10): 220
Précision stricte (1ère position): 45.24%
Précision adaptée (1ère position): 50.79%
Précision (top 10): 87.30%
================================================================================
