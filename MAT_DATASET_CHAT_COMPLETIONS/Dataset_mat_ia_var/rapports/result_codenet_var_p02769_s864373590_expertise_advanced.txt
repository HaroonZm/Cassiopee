================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache
from operator import mul
from itertools import accumulate

n, k = map(int, input().split())
mod = 10**9 + 7
max_m = min(n - 1, k)

# Precompute factorials and inverse factorials with accumulate for efficiency
f = [1, *accumulate(range(1, n + 1), lambda x, y: x * y % mod)]
fi = [pow(f[-1], mod - 2, mod)]
for x in reversed(f[1:-1]):
    fi.append(fi[-1] * x % mod)
fi = fi[::-1]

def comb_mod(n, r):
    if r < 0 or r > n: return 0
    return f[n] * fi[r] % mod * fi[n - r] % mod

ans = sum(comb_mod(n, m) * comb_mod(n - 1, m) % mod for m in range(max_m + 1)) % mod
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00033165133208967745
    2. 'partial' → logprob: -9.12533187866211
    3. 'wrap' → logprob: -9.62533187866211
    4. 'z' → logprob: -9.87533187866211
    5. 'r' → logprob: -10.25033187866211
    6. 'ruz' → logprob: -10.75033187866211
    7. 'ambda' → logprob: -11.00033187866211
    8. 'reduce' → logprob: -11.37533187866211
    9. '```' → logprob: -12.37533187866211
    10. 'rl' → logprob: -13.12533187866211

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.0006982576451264322
    2. 'cache' → logprob: -7.750698089599609
    3. '_c' → logprob: -8.50069808959961
    4. '_' → logprob: -10.75069808959961
    5. 'c' → logprob: -11.37569808959961
    6. '_cached' → logprob: -11.87569808959961
    7. '_ca' → logprob: -12.25069808959961
    8. '\' → logprob: -12.50069808959961
    9. '```' → logprob: -12.62569808959961
    10. '__' → logprob: -13.37569808959961

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029721444472670555
    2. '@' → logprob: -4.029721260070801
    3. 'def' → logprob: -4.654721260070801
    4. '\(' → logprob: -7.154721260070801
    5. '```' → logprob: -7.279721260070801
    6. '(
' → logprob: -8.0297212600708
    7. '\' → logprob: -10.0297212600708
    8. 'd' → logprob: -10.6547212600708
    9. ':' → logprob: -10.6547212600708
    10. '.' → logprob: -11.2797212600708

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004563511349260807
    2. 'def' → logprob: -6.504563331604004
    3. '(
' → logprob: -7.004563331604004
    4. '\(' → logprob: -7.129563331604004
    5. '@' → logprob: -7.379563331604004
    6. '```' → logprob: -7.754563331604004
    7. '\' → logprob: -9.379563331604004
    8. 'd' → logprob: -9.379563331604004
    9. '(def' → logprob: -11.129563331604004
    10. '
' → logprob: -11.254563331604004

Token 8: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6466947197914124
    2. ' collections' → logprob: -1.0216946601867676
    3. ' typing' → logprob: -2.5216946601867676
    4. ' time' → logprob: -4.771694660186768
    5. ' sys' → logprob: -4.771694660186768
    6. ' os' → logprob: -5.021694660186768
    7. ' ' → logprob: -5.521694660186768
    8. 'collections' → logprob: -6.396694660186768
    9. ' fast' → logprob: -6.521694660186768
    10. ' itertools' → logprob: -6.771694660186768

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04604381322860718
    2. 'import' → logprob: -3.171043872833252
    3. '.' → logprob: -6.046043872833252
    4. ' .' → logprob: -8.171043395996094
    5. '.import' → logprob: -8.796043395996094
    6. ' ' → logprob: -9.046043395996094
    7. '_import' → logprob: -9.796043395996094
    8. '```' → logprob: -10.921043395996094
    9. '	import' → logprob: -11.296043395996094
    10. '._' → logprob: -11.546043395996094

Token 10: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.25589630007743835
    2. ' item' → logprob: -1.6308963298797607
    3. ' import' → logprob: -4.505896091461182
    4. ' attr' → logprob: -5.005896091461182
    5. 'add' → logprob: -5.380896091461182
    6. ' mul' → logprob: -6.005896091461182
    7. 'item' → logprob: -6.130896091461182
    8. ' method' → logprob: -6.255896091461182
    9. 'import' → logprob: -8.63089656829834
    10. ' ' → logprob: -9.00589656829834

Token 11: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8893364071846008
    2. '\' → logprob: -1.014336347579956
    3. ',' → logprob: -2.639336347579956
    4. '(' → logprob: -3.139336347579956
    5. '```' → logprob: -3.389336347579956
    6. '(
' → logprob: -3.514336347579956
    7. ',
' → logprob: -4.514336585998535
    8. '`' → logprob: -4.889336585998535
    9. '<|end|>' → logprob: -4.889336585998535
    10. '\(' → logprob: -5.639336585998535

Token 12: 'from' (ID: 2845)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1756523847579956
    2. '```' → logprob: -1.1756523847579956
    3. '\n' → logprob: -2.300652503967285
    4. '(' → logprob: -2.800652503967285
    5. '`' → logprob: -2.925652503967285
    6. ',' → logprob: -3.050652503967285
    7. '(
' → logprob: -3.800652503967285
    8. '@' → logprob: -3.800652503967285
    9. '<|end|>' → logprob: -3.800652503967285
    10. 'from' → logprob: -4.050652503967285

Token 13: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.17186598479747772
    2. ' math' → logprob: -2.546865940093994
    3. ' itertools' → logprob: -2.671865940093994
    4. 'operator' → logprob: -4.796865940093994
    5. 'it' → logprob: -6.671865940093994
    6. 'fun' → logprob: -8.046866416931152
    7. ' functools' → logprob: -8.421866416931152
    8. ' ' → logprob: -9.421866416931152
    9. ' operator' → logprob: -9.671866416931152
    10. 'collections' → logprob: -9.796866416931152

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4463241398334503
    2. ' import' → logprob: -1.071324110031128
    3. '.' → logprob: -4.696324348449707
    4. ' .' → logprob: -5.321324348449707
    5. 'ertools' → logprob: -6.696324348449707
    6. '.import' → logprob: -7.321324348449707
    7. '_import' → logprob: -8.321324348449707
    8. '.chain' → logprob: -8.446324348449707
    9. '	import' → logprob: -8.571324348449707
    10. '._' → logprob: -8.696324348449707

Token 15: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6938160061836243
    2. 'acc' → logprob: -1.3188159465789795
    3. 'count' → logprob: -2.1938159465789795
    4. 'com' → logprob: -2.8188159465789795
    5. ' product' → logprob: -3.3188159465789795
    6. 'per' → logprob: -4.318816184997559
    7. ' accumulate' → logprob: -4.943816184997559
    8. ' combinations' → logprob: -6.443816184997559
    9. ' permutations' → logprob: -6.943816184997559
    10. 'import' → logprob: -7.068816184997559

Token 16: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1473807841539383
    2. 'def' → logprob: -2.647380828857422
    3. '\' → logprob: -3.772380828857422
    4. '(
' → logprob: -4.022380828857422
    5. ',' → logprob: -4.647380828857422
    6. ')' → logprob: -5.647380828857422
    7. '\n' → logprob: -6.147380828857422
    8. '@' → logprob: -6.522380828857422
    9. '#' → logprob: -6.647380828857422
    10. '[' → logprob: -6.647380828857422

Token 17: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8017879128456116
    2. 'def' → logprob: -0.9267879128456116
    3. '@' → logprob: -2.176787853240967
    4. '(
' → logprob: -3.551787853240967
    5. '\' → logprob: -5.801787853240967
    6. '#' → logprob: -6.176787853240967
    7. ',' → logprob: -6.176787853240967
    8. '```' → logprob: -6.676787853240967
    9. 'd' → logprob: -6.926787853240967
    10. '`' → logprob: -7.176787853240967

Token 18: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7221824526786804
    2. ' =' → logprob: -1.0971825122833252
    3. ' ' → logprob: -2.722182512283325
    4. '_' → logprob: -2.972182512283325
    5. 'u' → logprob: -3.347182512283325
    6. ',' → logprob: -4.222182273864746
    7. '.' → logprob: -5.222182273864746
    8. ')' → logprob: -5.972182273864746
    9. '  ' → logprob: -6.722182273864746
    10. '[' → logprob: -7.847182273864746

Token 19: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3094736337661743
    2. 'k' → logprob: -1.5594736337661743
    3. ' m' → logprob: -3.5594735145568848
    4. 'm' → logprob: -3.9344735145568848
    5. ' ' → logprob: -5.434473514556885
    6. '=' → logprob: -6.684473514556885
    7. ' =' → logprob: -7.684473514556885
    8. 'a' → logprob: -8.434473991394043
    9. '=k' → logprob: -8.809473991394043
    10. 'x' → logprob: -9.059473991394043

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033665526658296585
    2. '=' → logprob: -3.408665418624878
    3. ',' → logprob: -11.158665657043457
    4. ' ' → logprob: -13.783665657043457
    5. '<|end|>' → logprob: -13.908665657043457
    6. ' ,' → logprob: -14.033665657043457
    7. ' =
' → logprob: -14.033665657043457
    8. ')' → logprob: -14.908665657043457
    9. ' =",' → logprob: -15.408665657043457
    10. '  ' → logprob: -15.408665657043457

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.30682191252708435
    2. ' ' → logprob: -1.8068219423294067
    3. 'map' → logprob: -2.431821823120117
    4. '0' → logprob: -5.056821823120117
    5. '10' → logprob: -6.056821823120117
    6. ' int' → logprob: -6.431821823120117
    7. 'int' → logprob: -7.306821823120117
    8. '20' → logprob: -8.306821823120117
    9. '5' → logprob: -8.306821823120117
    10. '1' → logprob: -8.681821823120117

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23471373319625854
    2. '(int' → logprob: -1.9847137928009033
    3. '(lambda' → logprob: -3.2347137928009033
    4. '<|end|>' → logprob: -4.109713554382324
    5. '(str' → logprob: -4.359713554382324
    6. 'int' → logprob: -7.359713554382324
    7. '(range' → logprob: -7.734713554382324
    8. '(input' → logprob: -7.984713554382324
    9. '(len' → logprob: -8.734713554382324
    10. 'str' → logprob: -8.734713554382324

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3055601418018341
    2. '(' → logprob: -2.0555601119995117
    3. 'input' → logprob: -3.0555601119995117
    4. ')' → logprob: -3.0555601119995117
    5. ',' → logprob: -3.5555601119995117
    6. ',input' → logprob: -4.555560111999512
    7. ' input' → logprob: -6.930560111999512
    8. '=input' → logprob: -8.430560111999512
    9. ' ,' → logprob: -9.180560111999512
    10. '()' → logprob: -9.180560111999512

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602490097284317
    2. ' input' → logprob: -1.9102489948272705
    3. ')' → logprob: -11.410248756408691
    4. '(input' → logprob: -11.410248756408691
    5. ',input' → logprob: -13.785248756408691
    6. ' ' → logprob: -14.035248756408691
    7. ' )' → logprob: -15.035248756408691
    8. '=input' → logprob: -15.535248756408691
    9. '```' → logprob: -16.285249710083008
    10. '	input' → logprob: -16.910249710083008

Token 25: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7522317171096802
    2. '()' → logprob: -1.6272317171096802
    3. '().' → logprob: -1.6272317171096802
    4. ')' → logprob: -2.6272315979003906
    5. '(' → logprob: -2.8772315979003906
    6. '(()' → logprob: -6.502231597900391
    7. '(""))' → logprob: -7.377231597900391
    8. '()))' → logprob: -7.377231597900391
    9. '('' → logprob: -7.627231597900391
    10. '(),' → logprob: -7.752231597900391

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005635190173052251
    2. 'strip' → logprob: -7.500563621520996
    3. 'rstrip' → logprob: -11.875563621520996
    4. ' split' → logprob: -13.500563621520996
    5. ')' → logprob: -13.750563621520996
    6. 'spl' → logprob: -14.375563621520996
    7. 'read' → logprob: -15.375563621520996
    8. '(split' → logprob: -15.375563621520996
    9. '_split' → logprob: -18.00056266784668
    10. '```' → logprob: -18.62556266784668

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892558723688126
    2. '))' → logprob: -2.578925609588623
    3. '),' → logprob: -11.078925132751465
    4. ')))' → logprob: -11.953925132751465
    5. '())' → logprob: -12.703925132751465
    6. ')`' → logprob: -12.953925132751465
    7. '()' → logprob: -13.328925132751465
    8. ')
' → logprob: -13.328925132751465
    9. '`)' → logprob: -13.703925132751465
    10. '(' → logprob: -13.953925132751465

Token 28: 'mod' (ID: 4847)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12882888317108154
    2. ')
' → logprob: -3.003829002380371
    3. '```' → logprob: -3.628829002380371
    4. 'def' → logprob: -4.378829002380371
    5. '
' → logprob: -4.878829002380371
    6. ')

' → logprob: -5.378829002380371
    7. '@' → logprob: -6.003829002380371
    8. '\n' → logprob: -6.128829002380371
    9. 'n' → logprob: -6.378829002380371
    10. '\' → logprob: -6.503829002380371

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806937485933304
    2. '=' → logprob: -3.288069486618042
    3. ' ' → logprob: -11.038069725036621
    4. ',' → logprob: -12.788069725036621
    5. ' =
' → logprob: -12.788069725036621
    6. '_' → logprob: -12.913069725036621
    7. ' =)' → logprob: -13.663069725036621
    8. '.' → logprob: -14.413069725036621
    9. ' ,' → logprob: -15.038069725036621
    10. ')' → logprob: -15.038069725036621

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12695613503456116
    2. '10' → logprob: -2.1269562244415283
    3. '100' → logprob: -10.62695598602295
    4. '1' → logprob: -12.87695598602295
    5. '998' → logprob: -14.00195598602295
    6. ' ' → logprob: -15.37695598602295
    7. '0' → logprob: -16.626956939697266
    8. 'int' → logprob: -16.751956939697266
    9. '​' → logprob: -17.376956939697266
    10. '109' → logprob: -17.501956939697266

Token 31: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001265355502255261
    2. '100' → logprob: -6.751265525817871
    3. ' ' → logprob: -9.501265525817871
    4. '1' → logprob: -11.001265525817871
    5. '998' → logprob: -12.626265525817871
    6. 'int' → logprob: -15.126265525817871
    7. '(' → logprob: -16.501264572143555
    8. '0' → logprob: -17.251264572143555
    9. '`' → logprob: -17.626264572143555
    10. '```' → logprob: -17.876264572143555

Token 32: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10041165351867676
    2. '**' → logprob: -2.8504116535186768
    3. '7' → logprob: -3.8504116535186768
    4. '09' → logprob: -4.475411415100098
    5. '000' → logprob: -6.350411415100098
    6. '07' → logprob: -6.725411415100098
    7. '0' → logprob: -7.475411415100098
    8. '00' → logprob: -7.600411415100098
    9. '13' → logprob: -8.600411415100098
    10. '49' → logprob: -8.975411415100098

Token 33: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -14.875
    3. '```' → logprob: -17.125
    4. '+' → logprob: -17.875
    5. ' ' → logprob: -17.875
    6. '10' → logprob: -17.875
    7. '18' → logprob: -18.75
    8. '4' → logprob: -19.875
    9. '19' → logprob: -20.125
    10. '8' → logprob: -20.375

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008626393973827362
    2. '7' → logprob: -4.758626461029053
    3. ' +' → logprob: -12.633625984191895
    4. '+
' → logprob: -13.133625984191895
    5. '+

' → logprob: -13.258625984191895
    6. '```' → logprob: -13.258625984191895
    7. '9' → logprob: -13.383625984191895
    8. '＋' → logprob: -14.008625984191895
    9. 'plus' → logprob: -15.508625984191895
    10. '+</' → logprob: -15.633625984191895

Token 35: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '+' → logprob: -17.0
    4. '9' → logprob: -17.75
    5. '```' → logprob: -20.5
    6. '07' → logprob: -20.75
    7. '   ' → logprob: -21.5625
    8. '７' → logprob: -22.25
    9. '

' → logprob: -22.375
    10. '' → logprob: -22.6875

Token 36: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -15.875
    3. '9' → logprob: -17.25
    4. ' ' → logprob: -19.25
    5. '```' → logprob: -19.625
    6. '07' → logprob: -20.125
    7. '   ' → logprob: -21.25
    8. '

' → logprob: -21.5
    9. '' → logprob: -21.75
    10. '87' → logprob: -22.5625

Token 37: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7930355072021484
    2. '```' → logprob: -1.0430355072021484
    3. 'n' → logprob: -2.6680355072021484
    4. 'fact' → logprob: -3.6680355072021484
    5. '\n' → logprob: -4.043035507202148
    6. '' → logprob: -4.293035507202148
    7. '

' → logprob: -4.543035507202148
    8. '
' → logprob: -4.793035507202148
    9. 'def' → logprob: -4.793035507202148
    10. 'a' → logprob: -4.793035507202148

Token 38: 'max' (ID: 3228)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.12809008359909058
    2. 'factor' → logprob: -3.3780901432037354
    3. '```' → logprob: -4.003089904785156
    4. 'def' → logprob: -4.253089904785156
    5. 'f' → logprob: -4.378089904785156
    6. 'facts' → logprob: -5.128089904785156
    7. 'n' → logprob: -5.378089904785156
    8. '\n' → logprob: -5.753089904785156
    9. '#' → logprob: -5.753089904785156
    10. ')' → logprob: -6.003089904785156

Token 39: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.039008453488349915
    2. '_n' → logprob: -4.164008617401123
    3. '_factor' → logprob: -4.164008617401123
    4. '_val' → logprob: -5.164008617401123
    5. '_fact' → logprob: -7.914008617401123
    6. '_size' → logprob: -8.039008140563965
    7. '_len' → logprob: -8.539008140563965
    8. '_f' → logprob: -8.914008140563965
    9. '_fac' → logprob: -9.164008140563965
    10. 'n' → logprob: -9.414008140563965

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41312915086746216
    2. '=' → logprob: -1.1631290912628174
    3. 'ax' → logprob: -4.2881293296813965
    4. 'ult' → logprob: -5.5381293296813965
    5. '_factor' → logprob: -6.9131293296813965
    6. '_' → logprob: -7.1631293296813965
    7. 'a' → logprob: -7.1631293296813965
    8. 'um' → logprob: -7.5381293296813965
    9. 'ultip' → logprob: -7.6631293296813965
    10. '_n' → logprob: -7.7881293296813965

Token 41: ' min' (ID: 1349)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8074039220809937
    2. 'n' → logprob: -1.0574039220809937
    3. ' ' → logprob: -2.807404041290283
    4. 'k' → logprob: -2.932404041290283
    5. ' k' → logprob: -3.807404041290283
    6. '100' → logprob: -3.932404041290283
    7. 'max' → logprob: -4.182404041290283
    8. '10' → logprob: -4.307404041290283
    9. ' max' → logprob: -4.432404041290283
    10. '200' → logprob: -6.182404041290283

Token 42: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.10365116596221924
    2. '(n' → logprob: -2.4786510467529297
    3. '(' → logprob: -4.22865104675293
    4. '(s' → logprob: -12.22865104675293
    5. '(max' → logprob: -12.47865104675293
    6. '(
' → logprob: -12.47865104675293
    7. '(m' → logprob: -12.60365104675293
    8. ')' → logprob: -12.60365104675293
    9. ' (' → logprob: -12.85365104675293
    10. '((' → logprob: -12.97865104675293

Token 43: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011846511624753475
    2. ' ,' → logprob: -4.761846542358398
    3. ',k' → logprob: -5.761846542358398
    4. 'k' → logprob: -10.261846542358398
    5. '-' → logprob: -11.386846542358398
    6. ',n' → logprob: -11.886846542358398
    7. '//' → logprob: -12.386846542358398
    8. '-k' → logprob: -12.511846542358398
    9. ' -' → logprob: -12.636846542358398
    10. ',
' → logprob: -12.886846542358398

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.629967451095581
    2. 'k' → logprob: -1.129967451095581
    3. ' k' → logprob: -2.254967451095581
    4. ' ' → logprob: -3.254967451095581
    5. '2' → logprob: -7.75496768951416
    6. '(k' → logprob: -8.37996768951416
    7. ' (' → logprob: -9.12996768951416
    8. '(' → logprob: -10.56746768951416
    9. '3' → logprob: -11.50496768951416
    10. '	k' → logprob: -11.56746768951416

Token 45: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14372286200523376
    2. '1' → logprob: -2.0187227725982666
    3. ' k' → logprob: -7.768723011016846
    4. '2' → logprob: -8.018722534179688
    5. '(k' → logprob: -8.768722534179688
    6. ' ' → logprob: -9.643722534179688
    7. ' (' → logprob: -10.956222534179688
    8. '(' → logprob: -11.643722534179688
    9. '0' → logprob: -12.143722534179688
    10. 'i' → logprob: -12.268722534179688

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005549389868974686
    2. ' ,' → logprob: -5.380549430847168
    3. ',k' → logprob: -7.005549430847168
    4. ')' → logprob: -12.005549430847168
    5. ',n' → logprob: -12.630549430847168
    6. '+' → logprob: -13.005549430847168
    7. ' ' → logprob: -13.005549430847168
    8. ',
' → logprob: -13.505549430847168
    9. ' +' → logprob: -13.755549430847168
    10. ',

' → logprob: -13.880549430847168

Token 47: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6934556365013123
    2. ' k' → logprob: -0.6934556365013123
    3. ' ' → logprob: -8.193455696105957
    4. '2' → logprob: -12.068455696105957
    5. '	k' → logprob: -12.068455696105957
    6. ' ' → logprob: -12.693455696105957
    7. ' n' → logprob: -12.818455696105957
    8. '10' → logprob: -13.068455696105957
    9. '20' → logprob: -13.068455696105957
    10. ')' → logprob: -13.818455696105957

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.067117840051651
    2. '+' → logprob: -3.067117929458618
    3. ' +' → logprob: -4.442117691040039
    4. ' )' → logprob: -5.192117691040039
    5. ')+' → logprob: -7.567117691040039
    6. '-' → logprob: -8.567117691040039
    7. ')
' → logprob: -8.942117691040039
    8. '//' → logprob: -9.942117691040039
    9. ' -' → logprob: -10.317117691040039
    10. '))' → logprob: -10.567117691040039

Token 49: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7188656330108643
    2. ')' → logprob: -0.9688656330108643
    3. 'factor' → logprob: -2.5938656330108643
    4. 'f' → logprob: -3.5938656330108643
    5. 'fac' → logprob: -5.218865394592285
    6. 'facts' → logprob: -5.343865394592285
    7. '#' → logprob: -5.968865394592285
    8. '```' → logprob: -5.968865394592285
    9. '*' → logprob: -6.343865394592285
    10. '_fact' → logprob: -6.593865394592285

Token 50: ' Pre' (ID: 4659)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4116475284099579
    2. ' fact' → logprob: -2.2866475582122803
    3. 'fac' → logprob: -2.4116475582122803
    4. 'factor' → logprob: -3.2866475582122803
    5. 'dp' → logprob: -4.036647319793701
    6. 'f' → logprob: -4.286647319793701
    7. ' dp' → logprob: -4.411647319793701
    8. ' f' → logprob: -4.536647319793701
    9. ' factorial' → logprob: -4.661647319793701
    10. ' fac' → logprob: -4.786647319793701

Token 51: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.03478675335645676
    2. 'fix' → logprob: -4.284786701202393
    3. 'computed' → logprob: -5.284786701202393
    4. 'calculate' → logprob: -5.409786701202393
    5. 'f' → logprob: -5.909786701202393
    6. 'pare' → logprob: -7.034786701202393
    7. 'comput' → logprob: -7.159786701202393
    8. 'sum' → logprob: -7.159786701202393
    9. 'calc' → logprob: -7.284786701202393
    10. '```' → logprob: -7.284786701202393

Token 52: ' factorial' (ID: 111204)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.2172757089138031
    2. 'factor' → logprob: -1.9672757387161255
    3. ' fact' → logprob: -3.967275619506836
    4. 'fac' → logprob: -4.217275619506836
    5. ' factorial' → logprob: -4.467275619506836
    6. '```' → logprob: -5.342275619506836
    7. 'facts' → logprob: -5.467275619506836
    8. 'f' → logprob: -7.592275619506836
    9. 'ifact' → logprob: -9.592275619506836
    10. '_fact' → logprob: -9.717275619506836

Token 53: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00043007321073673666
    2. '_s' → logprob: -8.7504301071167
    3. '(' → logprob: -9.1254301071167
    4. '_' → logprob: -9.2504301071167
    5. '_factor' → logprob: -10.5004301071167
    6. '(s' → logprob: -11.8754301071167
    7. ' and' → logprob: -12.1254301071167
    8. '[' → logprob: -12.1254301071167
    9. '_fact' → logprob: -12.5004301071167
    10. '```' → logprob: -12.7504301071167

Token 54: ' and' (ID: 326)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.15805666148662567
    2. '_fact' → logprob: -2.9080567359924316
    3. '_factor' → logprob: -3.6580567359924316
    4. 'factor' → logprob: -3.9080567359924316
    5. '```' → logprob: -4.408056735992432
    6. 'f' → logprob: -4.408056735992432
    7. 'fac' → logprob: -5.408056735992432
    8. ':' → logprob: -5.783056735992432
    9. '_fac' → logprob: -5.908056735992432
    10. '_' → logprob: -6.033056735992432

Token 55: ' inverse' (ID: 53743)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6614797115325928
    2. 'inverse' → logprob: -0.9114797115325928
    3. 'inv' → logprob: -3.0364797115325928
    4. ' invers' → logprob: -4.036479949951172
    5. ' inverse' → logprob: -4.161479949951172
    6. ' inv' → logprob: -7.661479949951172
    7. ' factorial' → logprob: -8.786479949951172
    8. ' their' → logprob: -10.161479949951172
    9. '```' → logprob: -10.911479949951172
    10. 'their' → logprob: -11.411479949951172

Token 56: ' factorial' (ID: 111204)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.14952583611011505
    2. 's' → logprob: -2.2745258808135986
    3. '_' → logprob: -3.7745258808135986
    4. '_fact' → logprob: -5.3995256423950195
    5. ' factorial' → logprob: -5.8995256423950195
    6. '```' → logprob: -6.3995256423950195
    7. 'factor' → logprob: -6.3995256423950195
    8. '_fac' → logprob: -6.8995256423950195
    9. 'fac' → logprob: -7.8995256423950195
    10. '_f' → logprob: -8.14952564239502

Token 57: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.179569077678025e-05
    2. '_s' → logprob: -10.875041961669922
    3. '_' → logprob: -11.125041961669922
    4. '[' → logprob: -13.125041961669922
    5. ':' → logprob: -13.375041961669922
    6. 'es' → logprob: -13.875041961669922
    7. '_factor' → logprob: -14.000041961669922
    8. '```' → logprob: -14.125041961669922
    9. '(' → logprob: -15.250041961669922
    10. 'n' → logprob: -15.625041961669922

Token 58: ' with' (ID: 483)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.8434719443321228
    2. '
' → logprob: -1.3434720039367676
    3. '```' → logprob: -1.7184720039367676
    4. 'n' → logprob: -3.5934720039367676
    5. '\n' → logprob: -3.7184720039367676
    6. 'f' → logprob: -3.8434720039367676
    7. 'factor' → logprob: -3.9684720039367676
    8. '_fact' → logprob: -4.343472003936768
    9. '_factor' → logprob: -4.843472003936768
    10. ':' → logprob: -5.468472003936768

Token 59: ' accumulate' (ID: 74226)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5616865158081055
    2. '```' → logprob: -1.3116865158081055
    3. 'pow' → logprob: -2.1866865158081055
    4. ' modular' → logprob: -5.1866865158081055
    5. 'length' → logprob: -5.3116865158081055
    6. ' mod' → logprob: -5.4366865158081055
    7. 'l' → logprob: -5.5616865158081055
    8. 'in' → logprob: -5.8116865158081055
    9. 'n' → logprob: -6.0616865158081055
    10. 'def' → logprob: -6.0616865158081055

Token 60: ' for' (ID: 395)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.154008150100708
    2. 'factor' → logprob: -2.779008150100708
    3. 'f' → logprob: -3.529008150100708
    4. '
' → logprob: -4.779007911682129
    5. 'facts' → logprob: -4.779007911682129
    6. 'fac' → logprob: -5.029007911682129
    7. 's' → logprob: -5.154007911682129
    8. '(f' → logprob: -5.404007911682129
    9. '```' → logprob: -5.529007911682129
    10. '_fact' → logprob: -5.654007911682129

Token 61: ' efficiency' (ID: 17456)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.38223397731781
    2. ' multiplication' → logprob: -2.0072340965270996
    3. ' factorial' → logprob: -2.6322340965270996
    4. 'mul' → logprob: -2.6322340965270996
    5. ' efficient' → logprob: -2.7572340965270996
    6. ' range' → logprob: -3.1322340965270996
    7. ' modular' → logprob: -3.1322340965270996
    8. ' the' → logprob: -3.3822340965270996
    9. ' multip' → logprob: -3.5072340965270996
    10. ' fast' → logprob: -3.6322340965270996

Token 62: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.13823655247688293
    2. 'factor' → logprob: -2.7632365226745605
    3. 'f' → logprob: -3.6382365226745605
    4. '
' → logprob: -4.1382365226745605
    5. 'fac' → logprob: -5.1382365226745605
    6. 'facts' → logprob: -5.1382365226745605
    7. '```' → logprob: -5.2632365226745605
    8. '_fact' → logprob: -6.3882365226745605
    9. 'n' → logprob: -6.7632365226745605
    10. '_factor' → logprob: -7.2632365226745605

Token 63: 'f' (ID: 69)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.07970072329044342
    2. 'factor' → logprob: -2.9547007083892822
    3. '
' → logprob: -4.454700946807861
    4. 'fac' → logprob: -5.204700946807861
    5. 'f' → logprob: -5.954700946807861
    6. 'facts' → logprob: -6.079700946807861
    7. '```' → logprob: -6.954700946807861
    8. '_fact' → logprob: -8.079700469970703
    9. ' 
' → logprob: -8.329700469970703
    10. ' fact' → logprob: -8.329700469970703

Token 64: ' =' (ID: 314)
  Prédit: 'act'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.6967935562133789
    2. 'acs' → logprob: -1.696793556213379
    3. 'actor' → logprob: -1.946793556213379
    4. 'acts' → logprob: -2.446793556213379
    5. 'ac' → logprob: -2.446793556213379
    6. ' =' → logprob: -6.571793556213379
    7. 'actors' → logprob: -7.821793556213379
    8. 'a' → logprob: -8.321793556213379
    9. '=' → logprob: -8.446793556213379
    10. 'acto' → logprob: -8.571793556213379

Token 65: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.44021153450012207
    2. '[' → logprob: -1.690211534500122
    3. ' [' → logprob: -2.815211534500122
    4. 'acc' → logprob: -2.940211534500122
    5. ' list' → logprob: -3.065211534500122
    6. ' accumulate' → logprob: -5.065211296081543
    7. '[list' → logprob: -5.440211296081543
    8. '[*' → logprob: -7.440211296081543
    9. '[f' → logprob: -8.940211296081543
    10. '[int' → logprob: -9.065211296081543

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001576506474521011
    2. ' ' → logprob: -9.250157356262207
    3. 'mul' → logprob: -9.750157356262207
    4. '0' → logprob: -14.125157356262207
    5. '  ' → logprob: -15.375157356262207
    6. '   ' → logprob: -15.375157356262207
    7. '*' → logprob: -15.375157356262207
    8. ']' → logprob: -15.375157356262207
    9. ' mul' → logprob: -15.562657356262207
    10. 'factor' → logprob: -15.875157356262207

Token 67: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037794087547808886
    2. ',' → logprob: -6.753779411315918
    3. ']*' → logprob: -7.003779411315918
    4. ']
' → logprob: -7.378779411315918
    5. ']*(' → logprob: -7.878779411315918
    6. '*' → logprob: -7.878779411315918
    7. ']+' → logprob: -8.503779411315918
    8. ']
' → logprob: -10.503779411315918
    9. ' ]' → logprob: -10.628779411315918
    10. ' *' → logprob: -11.003779411315918

Token 68: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43603548407554626
    2. ']' → logprob: -1.5610355138778687
    3. '*' → logprob: -2.186035394668579
    4. ' ' → logprob: -4.061035633087158
    5. '2' → logprob: -4.811035633087158
    6. ' *' → logprob: -5.936035633087158
    7. ' ]' → logprob: -7.061035633087158
    8. '*(' → logprob: -7.311035633087158
    9. ']*' → logprob: -7.561035633087158
    10. '*f' → logprob: -8.18603515625

Token 69: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.011194946244359016
    2. '(acc' → logprob: -4.636195182800293
    3. ' accumulate' → logprob: -6.636195182800293
    4. 'range' → logprob: -10.386195182800293
    5. 'map' → logprob: -10.761195182800293
    6. 'ac' → logprob: -11.511195182800293
    7. 'list' → logprob: -11.511195182800293
    8. ' ' → logprob: -11.636195182800293
    9. '	acc' → logprob: -11.761195182800293
    10. '(map' → logprob: -11.886195182800293

Token 70: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -2.5107177862082608e-05
    2. 'um' → logprob: -11.625024795532227
    3. 'om' → logprob: -11.875024795532227
    4. 'ulate' → logprob: -12.125024795532227
    5. 'umul' → logprob: -13.125024795532227
    6. '**' → logprob: -15.250024795532227
    7. '```' → logprob: -15.250024795532227
    8. '[' → logprob: -15.375024795532227
    9. '=' → logprob: -15.750024795532227
    10. 'umu' → logprob: -16.000024795532227

Token 71: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.07115264236927032
    2. '(m' → logprob: -2.821152687072754
    3. '(map' → logprob: -5.196152687072754
    4. '(' → logprob: -6.196152687072754
    5. '(lambda' → logprob: -6.821152687072754
    6. ' (' → logprob: -8.571152687072754
    7. '(list' → logprob: -9.321152687072754
    8. '([' → logprob: -9.571152687072754
    9. '(r' → logprob: -9.946152687072754
    10. '((' → logprob: -10.946152687072754

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013574945041909814
    2. '1' → logprob: -6.626357555389404
    3. '2' → logprob: -11.251357078552246
    4. ' ' → logprob: -11.501357078552246
    5. ' (' → logprob: -12.251357078552246
    6. 'n' → logprob: -13.126357078552246
    7. ')(' → logprob: -14.876357078552246
    8. ',' → logprob: -15.251357078552246
    9. '
' → logprob: -15.501357078552246
    10. 'from' → logprob: -16.126358032226562

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003565575461834669
    2. '2' → logprob: -8.125356674194336
    3. ' ' → logprob: -10.000356674194336
    4. '(' → logprob: -11.750356674194336
    5. '   ' → logprob: -13.250356674194336
    6. ',' → logprob: -13.625356674194336
    7. '  ' → logprob: -13.750356674194336
    8. 'n' → logprob: -14.000356674194336
    9. '    ' → logprob: -14.500356674194336
    10. ')' → logprob: -14.500356674194336

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002978048287332058
    2. ',n' → logprob: -8.375297546386719
    3. ' ,' → logprob: -10.125297546386719
    4. '2' → logprob: -10.875297546386719
    5. ',max' → logprob: -12.125297546386719
    6. ',k' → logprob: -14.250297546386719
    7. '1' → logprob: -14.375297546386719
    8. ' ' → logprob: -14.750297546386719
    9. ',m' → logprob: -14.875297546386719
    10. ',
' → logprob: -15.375297546386719

Token 75: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11165373027324677
    2. 'max' → logprob: -2.3616538047790527
    3. ' n' → logprob: -4.736653804779053
    4. ' max' → logprob: -6.111653804779053
    5. '1' → logprob: -9.236653327941895
    6. '   ' → logprob: -9.986653327941895
    7. ',' → logprob: -10.111653327941895
    8. 'k' → logprob: -10.236653327941895
    9. ' ' → logprob: -10.236653327941895
    10. ')' → logprob: -10.361653327941895

Token 76: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1798504739999771
    2. ' +' → logprob: -1.804850459098816
    3. '),' → logprob: -9.679850578308105
    4. '1' → logprob: -11.554850578308105
    5. ' ' → logprob: -11.679850578308105
    6. '+n' → logprob: -11.679850578308105
    7. ',' → logprob: -11.929850578308105
    8. '2' → logprob: -12.804850578308105
    9. '+k' → logprob: -13.054850578308105
    10. ')' → logprob: -13.304850578308105

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07011160999536514
    2. ' ' → logprob: -2.6951115131378174
    3. '2' → logprob: -9.070111274719238
    4. '+' → logprob: -10.070111274719238
    5. '),' → logprob: -12.320111274719238
    6. ' +' → logprob: -12.320111274719238
    7. ')' → logprob: -12.820111274719238
    8. '```' → logprob: -13.445111274719238
    9. 'n' → logprob: -13.820111274719238
    10. '   ' → logprob: -14.070111274719238

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.750001907348633
    3. '2' → logprob: -14.250001907348633
    4. '+' → logprob: -16.125001907348633
    5. '```' → logprob: -17.437501907348633
    6. ')' → logprob: -18.500001907348633
    7. 'n' → logprob: -18.750001907348633
    8. '１' → logprob: -18.937501907348633
    9. '۱' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.125001907348633

Token 79: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.024326227605342865
    2. ',' → logprob: -3.7743263244628906
    3. 'mul' → logprob: -7.024326324462891
    4. ' ),' → logprob: -9.52432632446289
    5. ',),' → logprob: -10.02432632446289
    6. ' mul' → logprob: -11.14932632446289
    7. '   ' → logprob: -11.14932632446289
    8. '},' → logprob: -11.39932632446289
    9. ' ,' → logprob: -12.27432632446289
    10. ' ' → logprob: -12.27432632446289

Token 80: ' lambda' (ID: 27871)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.016281981021165848
    2. ' mul' → logprob: -4.141282081604004
    3. 'lambda' → logprob: -8.891282081604004
    4. ' ' → logprob: -10.141282081604004
    5. 'mu' → logprob: -10.266282081604004
    6. ' lambda' → logprob: -11.641282081604004
    7. '  ' → logprob: -11.891282081604004
    8. '   ' → logprob: -12.016282081604004
    9. '```' → logprob: -12.891282081604004
    10. 'multip' → logprob: -13.266282081604004

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5682746767997742
    2. ' x' → logprob: -0.9432746767997742
    3. 'a' → logprob: -3.318274736404419
    4. ' a' → logprob: -5.06827449798584
    5. 'acc' → logprob: -6.69327449798584
    6. ' acc' → logprob: -7.94327449798584
    7. '	x' → logprob: -11.19327449798584
    8. ' ' → logprob: -11.31827449798584
    9. 'f' → logprob: -12.69327449798584
    10. 'b' → logprob: -12.94327449798584

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006390500930137932
    2. ',m' → logprob: -7.375638961791992
    3. ',x' → logprob: -12.250638961791992
    4. ' ,' → logprob: -12.375638961791992
    5. ',y' → logprob: -13.125638961791992
    6. ',a' → logprob: -15.125638961791992
    7. ',
' → logprob: -15.375638961791992
    8. ',*' → logprob: -15.375638961791992
    9. ',n' → logprob: -16.125638961791992
    10. ',

' → logprob: -16.625638961791992

Token 83: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023246292024850845
    2. ' y' → logprob: -3.7732462882995605
    3. 'x' → logprob: -15.023246765136719
    4. 'a' → logprob: -15.648246765136719
    5. ' ' → logprob: -16.64824676513672
    6. '	y' → logprob: -16.89824676513672
    7. 'b' → logprob: -17.02324676513672
    8. 'acc' → logprob: -17.52324676513672
    9. '*y' → logprob: -17.89824676513672
    10. 'v' → logprob: -18.27324676513672

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001205946202389896
    2. ' :' → logprob: -6.751205921173096
    3. ',' → logprob: -11.126206398010254
    4. '=' → logprob: -11.501206398010254
    5. ',m' → logprob: -12.126206398010254
    6. ':m' → logprob: -12.751206398010254
    7. 'mul' → logprob: -13.876206398010254
    8. ':
' → logprob: -14.376206398010254
    9. '   ' → logprob: -15.251206398010254
    10. '_mul' → logprob: -16.126205444335938

Token 85: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.378593385219574
    2. 'x' → logprob: -1.6285934448242188
    3. ' (' → logprob: -2.8785934448242188
    4. '(' → logprob: -3.2535934448242188
    5. ' x' → logprob: -3.7535934448242188
    6. ' ' → logprob: -8.128593444824219
    7. 'mul' → logprob: -8.628593444824219
    8. '(m' → logprob: -9.753593444824219
    9. '  ' → logprob: -10.128593444824219
    10. '((' → logprob: -10.503593444824219

Token 86: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2014537751674652
    2. ' *' → logprob: -1.7014538049697876
    3. 'mul' → logprob: -10.701454162597656
    4. ' ' → logprob: -11.701454162597656
    5. '*m' → logprob: -12.451454162597656
    6. ' mul' → logprob: -12.701454162597656
    7. '   ' → logprob: -14.326454162597656
    8. '  ' → logprob: -14.951454162597656
    9. '_mul' → logprob: -14.951454162597656
    10. '*y' → logprob: -15.076454162597656

Token 87: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132721483707428
    2. ' y' → logprob: -1.3132721185684204
    3. '(y' → logprob: -12.438272476196289
    4. '	y' → logprob: -12.938272476196289
    5. ' (' → logprob: -13.188272476196289
    6. ' ' → logprob: -13.563272476196289
    7. '(' → logprob: -14.313272476196289
    8. '*y' → logprob: -16.06327247619629
    9. 'mul' → logprob: -17.56327247619629
    10. ' mul' → logprob: -17.81327247619629

Token 88: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2815367877483368
    2. '%' → logprob: -1.4065368175506592
    3. ')' → logprob: -9.281537055969238
    4. '%n' → logprob: -9.531537055969238
    5. '%m' → logprob: -9.781537055969238
    6. '%c' → logprob: -9.906537055969238
    7. '%d' → logprob: -10.156537055969238
    8. '%x' → logprob: -10.656537055969238
    9. '%i' → logprob: -11.406537055969238
    10. ' ' → logprob: -11.656537055969238

Token 89: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019300628919154406
    2. ' mod' → logprob: -6.251930236816406
    3. '(mod' → logprob: -13.626930236816406
    4. '	mod' → logprob: -15.501930236816406
    5. ' ' → logprob: -17.251930236816406
    6. '10' → logprob: -18.251930236816406
    7. 'MOD' → logprob: -18.751930236816406
    8. ' мод' → logprob: -19.251930236816406
    9. 'm' → logprob: -19.251930236816406
    10. 'moder' → logprob: -20.126930236816406

Token 90: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005729287513531744
    2. ')' → logprob: -7.75057315826416
    3. '))' → logprob: -9.87557315826416
    4. ' )' → logprob: -10.12557315826416
    5. ')])' → logprob: -10.37557315826416
    6. ')],' → logprob: -11.75057315826416
    7. '),' → logprob: -12.25057315826416
    8. ')]
' → logprob: -12.37557315826416
    9. ')]

' → logprob: -14.50057315826416
    10. ']' → logprob: -14.75057315826416

Token 91: 'fi' (ID: 9608)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1816387176513672
    2. '<|end|>' → logprob: -1.5566387176513672
    3. 'f' → logprob: -1.8066387176513672
    4. ',' → logprob: -1.9316387176513672
    5. ' 
' → logprob: -3.556638717651367
    6. ' ,' → logprob: -3.556638717651367
    7. '  
' → logprob: -3.806638717651367
    8. ' f' → logprob: -3.931638717651367
    9. ')' → logprob: -4.306638717651367
    10. ',f' → logprob: -4.681638717651367

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5238059163093567
    2. '=' → logprob: -0.8988059163093567
    3. 'f' → logprob: -7.523806095123291
    4. 'n' → logprob: -9.148805618286133
    5. 's' → logprob: -12.273805618286133
    6. '=[' → logprob: -12.273805618286133
    7. ' ' → logprob: -12.773805618286133
    8. '=f' → logprob: -12.898805618286133
    9. '[' → logprob: -13.148805618286133
    10. 'b' → logprob: -13.523805618286133

Token 93: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2025216519832611
    2. ' [' → logprob: -1.7025216817855835
    3. '[f' → logprob: -7.452521800994873
    4. '[len' → logprob: -8.452521324157715
    5. '[n' → logprob: -9.327521324157715
    6. 'f' → logprob: -9.452521324157715
    7. ' f' → logprob: -9.827521324157715
    8. ' ' → logprob: -10.702521324157715
    9. '[l' → logprob: -10.952521324157715
    10. '[]' → logprob: -11.827521324157715

Token 94: 'pow' (ID: 30304)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031174797913990915
    2. 'pow' → logprob: -8.625311851501465
    3. ' ' → logprob: -9.000311851501465
    4. '0' → logprob: -12.500311851501465
    5. 'None' → logprob: -13.125311851501465
    6. ' pow' → logprob: -14.000311851501465
    7. '-' → logprob: -14.500311851501465
    8. 'f' → logprob: -15.000311851501465
    9. '...' → logprob: -15.062811851501465
    10. '  ' → logprob: -15.687811851501465

Token 95: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.05109754949808121
    2. '(' → logprob: -3.0510976314544678
    3. '(i' → logprob: -6.926097393035889
    4. '(x' → logprob: -7.301097393035889
    5. 'f' → logprob: -7.801097393035889
    6. ']' → logprob: -9.176097869873047
    7. '(a' → logprob: -9.676097869873047
    8. '(fi' → logprob: -10.051097869873047
    9. '(n' → logprob: -10.301097869873047
    10. '](' → logprob: -10.426097869873047

Token 96: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002919638354796916
    2. '[n' → logprob: -8.75029182434082
    3. '[' → logprob: -9.87529182434082
    4. '-' → logprob: -10.00029182434082
    5. '[i' → logprob: -10.37529182434082
    6. 'n' → logprob: -13.37529182434082
    7. '[j' → logprob: -13.75029182434082
    8. '[k' → logprob: -14.00029182434082
    9. ' [-' → logprob: -14.87529182434082
    10. '1' → logprob: -15.12529182434082

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6895233531831764e-05
    2. '2' → logprob: -11.12502670288086
    3. ' ' → logprob: -12.06252670288086
    4. '```' → logprob: -13.87502670288086
    5. '11' → logprob: -14.81252670288086
    6. '...' → logprob: -15.37502670288086
    7. '  ' → logprob: -15.37502670288086
    8. '   ' → logprob: -15.43752670288086
    9. ',' → logprob: -15.43752670288086
    10. '
' → logprob: -15.43752670288086

Token 98: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05631335824728012
    2. '],' → logprob: -2.9313132762908936
    3. ' ,' → logprob: -7.056313514709473
    4. '},' → logprob: -8.181313514709473
    5. '),' → logprob: -8.931313514709473
    6. '>,' → logprob: -9.431313514709473
    7. ' ' → logprob: -11.181313514709473
    8. ',n' → logprob: -11.806313514709473
    9. ']' → logprob: -12.056313514709473
    10. '  ' → logprob: -12.431313514709473

Token 99: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0016480415361002088
    2. ' mod' → logprob: -6.50164794921875
    3. '-' → logprob: -9.00164794921875
    4. '	mod' → logprob: -11.50164794921875
    5. '(mod' → logprob: -12.25164794921875
    6. ' ' → logprob: -13.12664794921875
    7. '-mod' → logprob: -13.12664794921875
    8. ' -' → logprob: -13.25164794921875
    9. '.mod' → logprob: -13.62664794921875
    10. 'modal' → logprob: -15.62664794921875

Token 100: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005233763717114925
    2. ' -' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.130233764648438
    4. '```' → logprob: -17.130233764648438
    5. '−' → logprob: -17.630233764648438
    6. '–' → logprob: -18.505233764648438
    7. ' ' → logprob: -19.005233764648438
    8. '{-' → logprob: -19.505233764648438
    9. '  ' → logprob: -19.505233764648438
    10. '2' → logprob: -21.005233764648438

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '-' → logprob: -15.875000953674316
    5. '

' → logprob: -17.000001907348633
    6. '۲' → logprob: -17.187501907348633
    7. '
' → logprob: -17.500001907348633
    8. '3' → logprob: -17.875001907348633
    9. '' → logprob: -17.875001907348633
    10. '٢' → logprob: -17.937501907348633

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -14.500000953674316
    3. '-' → logprob: -15.375000953674316
    4. ' ' → logprob: -15.500000953674316
    5. '

' → logprob: -15.812500953674316
    6. '
' → logprob: -17.625001907348633
    7. '' → logprob: -17.937501907348633
    8. '۲' → logprob: -18.000001907348633
    9. '3' → logprob: -18.062501907348633
    10. '２' → logprob: -18.250001907348633

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005234848940744996
    2. ' ,' → logprob: -7.625523567199707
    3. ')' → logprob: -11.125523567199707
    4. ',
' → logprob: -12.250523567199707
    5. ' ' → logprob: -12.750523567199707
    6. 'import' → logprob: -13.125523567199707
    7. 'mod' → logprob: -13.375523567199707
    8. '   ' → logprob: -13.500523567199707
    9. '```' → logprob: -13.875523567199707
    10. ',module' → logprob: -14.375523567199707

Token 104: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.038043901324272156
    2. ' mod' → logprob: -3.288043975830078
    3. '	mod' → logprob: -13.663043975830078
    4. ')' → logprob: -13.913043975830078
    5. ' ' → logprob: -15.413043975830078
    6. '   ' → logprob: -16.288043975830078
    7. '(mod' → logprob: -17.038043975830078
    8. '  ' → logprob: -17.663043975830078
    9. '
' → logprob: -17.913043975830078
    10. ' ' → logprob: -18.163043975830078

Token 105: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.870499849319458
    2. ',' → logprob: -1.495499849319458
    3. ')]' → logprob: -1.745499849319458
    4. ')]
' → logprob: -1.870499849319458
    5. ')]

' → logprob: -3.870499849319458
    6. '),' → logprob: -5.870499610900879
    7. ')
' → logprob: -6.245499610900879
    8. ')]
' → logprob: -7.370499610900879
    9. ',)' → logprob: -7.995499610900879
    10. ')][' → logprob: -8.120499610900879

Token 106: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6170510649681091
    2. ',' → logprob: -0.9920510649681091
    3. '+' → logprob: -3.367051124572754
    4. ' for' → logprob: -3.867051124572754
    5. ',
' → logprob: -4.867051124572754
    6. 'f' → logprob: -5.242051124572754
    7. '[' → logprob: -5.492051124572754
    8. ' ,' → logprob: -5.492051124572754
    9. '```' → logprob: -6.117051124572754
    10. ' +' → logprob: -6.367051124572754

Token 107: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004690418136306107
    2. ' i' → logprob: -7.750469207763672
    3. 'x' → logprob: -10.500469207763672
    4. '_i' → logprob: -11.500469207763672
    5. '	i' → logprob: -15.125469207763672
    6. '_' → logprob: -15.250469207763672
    7. ' ' → logprob: -16.500469207763672
    8. '```' → logprob: -17.250469207763672
    9. '   ' → logprob: -17.500469207763672
    10. ' ' → logprob: -17.625469207763672

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34849730134010315
    2. 'in' → logprob: -1.2234972715377808
    3. ' ' → logprob: -10.59849739074707
    4. 'n' → logprob: -11.34849739074707
    5. 'x' → logprob: -12.34849739074707
    6. '  ' → logprob: -12.59849739074707
    7. 'i' → logprob: -13.22349739074707
    8. '   ' → logprob: -13.72349739074707
    9. ' i' → logprob: -14.34849739074707
    10. '_in' → logprob: -14.34849739074707

Token 109: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009983942145481706
    2. ' range' → logprob: -7.000998497009277
    3. 're' → logprob: -9.375998497009277
    4. ' reversed' → logprob: -13.625998497009277
    5. 'reverse' → logprob: -14.250998497009277
    6. '(range' → logprob: -15.500998497009277
    7. ' ' → logprob: -17.12599754333496
    8. '	range' → logprob: -17.62599754333496
    9. '  ' → logprob: -18.00099754333496
    10. 'list' → logprob: -18.00099754333496

Token 110: '(f' (ID: 1526)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0005439769593067467
    2. 'range' → logprob: -8.000543594360352
    3. '(f' → logprob: -8.500543594360352
    4. ' range' → logprob: -12.875543594360352
    5. '(' → logprob: -13.125543594360352
    6. '(list' → logprob: -15.500543594360352
    7. 'f' → logprob: -16.00054359436035
    8. '(r' → logprob: -16.25054359436035
    9. '	range' → logprob: -16.87554359436035
    10. '_range' → logprob: -18.00054359436035

Token 111: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8764071464538574
    2. '[:-' → logprob: -1.1264071464538574
    3. '[' → logprob: -1.3764071464538574
    4. '(range' → logprob: -5.126407146453857
    5. ' range' → logprob: -7.251407146453857
    6. '(' → logprob: -8.126407623291016
    7. '[:' → logprob: -10.251407623291016
    8. '   ' → logprob: -10.501407623291016
    9. 'f' → logprob: -11.376407623291016
    10. '	range' → logprob: -11.876407623291016

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.081001877784729
    2. ':-' → logprob: -2.5810017585754395
    3. ':' → logprob: -7.0810017585754395
    4. '[:-' → logprob: -7.2060017585754395
    5. '2' → logprob: -7.8310017585754395
    6. ' :-' → logprob: -10.081002235412598
    7. '
' → logprob: -10.706002235412598
    8. ' ' → logprob: -10.831002235412598
    9. '-' → logprob: -10.956002235412598
    10. '   ' → logprob: -11.081002235412598

Token 113: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.002876676619052887
    2. ':' → logprob: -5.8778767585754395
    3. ':n' → logprob: -10.252876281738281
    4. ':]' → logprob: -10.752876281738281
    5. ' :' → logprob: -12.252876281738281
    6. ':],' → logprob: -12.377876281738281
    7. ' :-' → logprob: -13.002876281738281
    8. '[:-' → logprob: -13.377876281738281
    9. '::-' → logprob: -13.877876281738281
    10. ':].' → logprob: -14.627876281738281

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -15.000000953674316
    3. '
' → logprob: -15.250000953674316
    4. '-' → logprob: -15.375000953674316
    5. 'len' → logprob: -15.750000953674316
    6. ' ' → logprob: -16.125001907348633
    7. '2' → logprob: -16.875001907348633
    8. '0' → logprob: -17.250001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '

' → logprob: -17.500001907348633

Token 115: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.04283634200692177
    2. ']):' → logprob: -3.4178364276885986
    3. ']' → logprob: -4.7928361892700195
    4. '):
' → logprob: -8.41783618927002
    5. '']):
' → logprob: -8.54283618927002
    6. '])' → logprob: -9.04283618927002
    7. ',' → logprob: -9.66783618927002
    8. '],' → logprob: -9.91783618927002
    9. '])):
' → logprob: -10.04283618927002
    10. ' ]' → logprob: -10.41783618927002

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3152276873588562
    2. '	fi' → logprob: -1.815227746963501
    3. ' fi' → logprob: -2.815227746963501
    4. 'fi' → logprob: -3.065227746963501
    5. '(fi' → logprob: -8.565227508544922
    6. '	f' → logprob: -8.690227508544922
    7. ' ' → logprob: -8.940227508544922
    8. '```' → logprob: -8.940227508544922
    9. ':' → logprob: -9.690227508544922
    10. '
' → logprob: -9.940227508544922

Token 117: ' fi' (ID: 6134)
  Prédit: ' fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fi' → logprob: -0.7147119045257568
    2. 'fi' (adapté à ' fi') → logprob: -0.8397119045257568
    3. '   ' → logprob: -2.589711904525757
    4. '	fi' → logprob: -5.714712142944336
    5. ' fii' → logprob: -8.464712142944336
    6. '(fi' → logprob: -8.714712142944336
    7. '    ' → logprob: -10.339712142944336
    8. '       ' → logprob: -10.964712142944336
    9. ' ' → logprob: -10.964712142944336
    10. ' fie' → logprob: -11.214712142944336

Token 118: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009140860638581216
    2. '.' → logprob: -7.000914096832275
    3. '.ap' → logprob: -13.875913619995117
    4. '.app' → logprob: -14.250913619995117
    5. ' .' → logprob: -14.500913619995117
    6. 'append' → logprob: -15.125913619995117
    7. '_append' → logprob: -16.375913619995117
    8. '=' → logprob: -17.125913619995117
    9. '.extend' → logprob: -17.375913619995117
    10. '+=' → logprob: -17.500913619995117

Token 119: '(fi' (ID: 180137)
  Prédit: '(fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fi' → logprob: -0.2199883759021759
    2. '((' → logprob: -2.2199883460998535
    3. '(' → logprob: -2.4699883460998535
    4. '(f' → logprob: -6.2199883460998535
    5. 'fi' → logprob: -6.2199883460998535
    6. '(pow' → logprob: -8.594988822937012
    7. '(((' → logprob: -10.219988822937012
    8. ' (' → logprob: -10.844988822937012
    9. ' fi' → logprob: -11.594988822937012
    10. '(pi' → logprob: -11.594988822937012

Token 120: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. '   ' → logprob: -15.125001907348633
    4. '
' → logprob: -16.750001907348633
    5. '[m' → logprob: -16.875001907348633
    6. '[
' → logprob: -17.000001907348633
    7. '-' → logprob: -17.000001907348633
    8. '*' → logprob: -17.625001907348633
    9. '1' → logprob: -18.250001907348633
    10. ' [-' → logprob: -18.250001907348633

Token 121: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015467704273760319
    2. '1' → logprob: -4.515467643737793
    3. ' -' → logprob: -5.765467643737793
    4. 'x' → logprob: -6.765467643737793
    5. '-x' → logprob: -9.890467643737793
    6. '(-' → logprob: -10.890467643737793
    7. ' x' → logprob: -11.265467643737793
    8. ' ' → logprob: -11.390467643737793
    9. '(x' → logprob: -12.015467643737793
    10. '[-' → logprob: -12.265467643737793

Token 122: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11798941344022751
    2. ' *' → logprob: -2.2429893016815186
    3. ' ' → logprob: -5.867989540100098
    4. '   ' → logprob: -6.617989540100098
    5. 'mul' → logprob: -8.117989540100098
    6. ' mul' → logprob: -8.492989540100098
    7. ')' → logprob: -8.492989540100098
    8. ',' → logprob: -9.867989540100098
    9. '_mul' → logprob: -9.867989540100098
    10. '	' → logprob: -10.492989540100098

Token 123: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10448376834392548
    2. ' *' → logprob: -2.3544838428497314
    3. ' mul' → logprob: -5.854483604431152
    4. 'mul' → logprob: -7.229483604431152
    5. ' ' → logprob: -7.854483604431152
    6. '   ' → logprob: -8.604483604431152
    7. '_mul' → logprob: -10.104483604431152
    8. '.mul' → logprob: -10.479483604431152
    9. ',' → logprob: -12.104483604431152
    10. '	' → logprob: -12.229483604431152

Token 124: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. ' x' → logprob: -9.000123023986816
    3. '(x' → logprob: -17.125123977661133
    4. ' ' → logprob: -19.000123977661133
    5. '	x' → logprob: -19.125123977661133
    6. '
' → logprob: -19.250123977661133
    7. '   ' → logprob: -19.375123977661133
    8. '<|end|>' → logprob: -19.875123977661133
    9. 'pow' → logprob: -20.750123977661133
    10. '(' → logprob: -20.875123977661133

Token 125: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10143669694662094
    2. '%' → logprob: -2.3514366149902344
    3. ')' → logprob: -6.726436614990234
    4. ')%' → logprob: -11.976436614990234
    5. ' mod' → logprob: -11.976436614990234
    6. ' ' → logprob: -12.476436614990234
    7. '   ' → logprob: -12.726436614990234
    8. ',' → logprob: -13.351436614990234
    9. '	' → logprob: -13.476436614990234
    10. 'mod' → logprob: -13.476436614990234

Token 126: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.2729995988775045e-06
    2. ' mod' → logprob: -12.000006675720215
    3. '(mod' → logprob: -20.1250057220459
    4. '
' → logprob: -20.6250057220459
    5. '	mod' → logprob: -21.5000057220459
    6. ' ' → logprob: -21.8750057220459
    7. '   ' → logprob: -22.1250057220459
    8. '```' → logprob: -22.3750057220459
    9. 'moder' → logprob: -22.5000057220459
    10. 'm' → logprob: -23.1250057220459

Token 127: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10063222795724869
    2. ')' → logprob: -2.3506321907043457
    3. ')

' → logprob: -8.225632667541504
    4. ')
' → logprob: -8.850632667541504
    5. ' )
' → logprob: -11.975632667541504
    6. ')`
' → logprob: -13.600632667541504
    7. ')


' → logprob: -13.600632667541504
    8. ')`' → logprob: -14.350632667541504
    9. ')\' → logprob: -14.475632667541504
    10. '[' → logprob: -14.475632667541504

Token 128: 'fi' (ID: 9608)
  Prédit: 'fi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.08194950968027115
    2. '```' → logprob: -2.706949472427368
    3. '``' → logprob: -5.331949710845947
    4. 'f' → logprob: -6.081949710845947
    5. '\n' → logprob: -6.206949710845947
    6. '  
' → logprob: -7.206949710845947
    7. '
' → logprob: -7.456949710845947
    8. ')' → logprob: -8.081949234008789
    9. ')
' → logprob: -8.331949234008789
    10. '`
' → logprob: -8.956949234008789

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6697664260864258
    2. '.reverse' → logprob: -0.7947664260864258
    3. '.' → logprob: -4.294766426086426
    4. ' =' → logprob: -4.419766426086426
    5. '=f' → logprob: -4.919766426086426
    6. '.append' → logprob: -6.169766426086426
    7. 'fi' → logprob: -7.669766426086426
    8. '[::-' → logprob: -8.419766426086426
    9. '=[' → logprob: -8.794766426086426
    10. '=.' → logprob: -8.919766426086426

Token 130: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0022418468724936247
    2. 'list' → logprob: -6.252241611480713
    3. '[' → logprob: -8.127242088317871
    4. ' fi' → logprob: -11.752242088317871
    5. ' list' → logprob: -12.877242088317871
    6. '   ' → logprob: -13.127242088317871
    7. 'li' → logprob: -13.877242088317871
    8. 'f' → logprob: -13.877242088317871
    9. '[
' → logprob: -14.752242088317871
    10. '	fi' → logprob: -14.752242088317871

Token 131: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.005326262209564447
    2. '[' → logprob: -5.255326271057129
    3. '[-' → logprob: -9.380326271057129
    4. '[:' → logprob: -12.005326271057129
    5. '[len' → logprob: -14.755326271057129
    6. 're' → logprob: -15.130326271057129
    7. '[n' → logprob: -15.255326271057129
    8. '[:-' → logprob: -15.505326271057129
    9. ' [' → logprob: -15.755326271057129
    10. '1' → logprob: -16.130325317382812

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1179935485124588
    2. '[' → logprob: -3.1179935932159424
    3. '-' → logprob: -4.117993354797363
    4. 's' → logprob: -4.992993354797363
    5. 'len' → logprob: -5.117993354797363
    6. 'st' → logprob: -5.242993354797363
    7. 'index' → logprob: -5.617993354797363
    8. 'slice' → logprob: -5.617993354797363
    9. ']' → logprob: -5.742993354797363
    10. 'start' → logprob: -5.867993354797363

Token 133: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4750557839870453
    2. ')' → logprob: -0.9750558137893677
    3. '])' → logprob: -7.725055694580078
    4. ')]' → logprob: -8.475055694580078
    5. '<|end|>' → logprob: -8.725055694580078
    6. ' ]' → logprob: -9.600055694580078
    7. '#' → logprob: -9.975055694580078
    8. ' )' → logprob: -10.725055694580078
    9. 'def' → logprob: -12.225055694580078
    10. '[' → logprob: -12.600055694580078

Token 134: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04106121137738228
    2. ')' → logprob: -3.2910611629486084
    3. ']' → logprob: -6.0410614013671875
    4. '#' → logprob: -8.166061401367188
    5. '(' → logprob: -9.166061401367188
    6. '[' → logprob: -10.291061401367188
    7. '```' → logprob: -10.291061401367188
    8. ' def' → logprob: -10.541061401367188
    9. '<|end|>' → logprob: -10.666061401367188
    10. '(
' → logprob: -11.041061401367188

Token 135: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3834928572177887
    2. 'comb' → logprob: -2.008492946624756
    3. ' n' → logprob: -2.508492946624756
    4. 'n' → logprob: -2.758492946624756
    5. 'C' → logprob: -4.258492946624756
    6. ' combination' → logprob: -5.258492946624756
    7. ' C' → logprob: -5.258492946624756
    8. 'choose' → logprob: -5.508492946624756
    9. ' cmb' → logprob: -5.508492946624756
    10. ' choose' → logprob: -6.008492946624756

Token 136: '_mod' (ID: 15325)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007141007808968425
    2. '(' → logprob: -7.375714302062988
    3. 'ination' → logprob: -10.500714302062988
    4. ' (' → logprob: -10.625714302062988
    5. '(i' → logprob: -11.500714302062988
    6. '(r' → logprob: -11.750714302062988
    7. '(N' → logprob: -11.875714302062988
    8. '(
' → logprob: -13.125714302062988
    9. '(k' → logprob: -13.250714302062988
    10. '(num' → logprob: -13.375714302062988

Token 137: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004924308508634567
    2. '(' → logprob: -5.379924297332764
    3. '(a' → logprob: -8.504924774169922
    4. '(i' → logprob: -10.254924774169922
    5. '(k' → logprob: -10.754924774169922
    6. ' (' → logprob: -10.879924774169922
    7. '(
' → logprob: -11.504924774169922
    8. '(N' → logprob: -12.254924774169922
    9. '(x' → logprob: -12.379924774169922
    10. '(r' → logprob: -12.754924774169922

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008280907059088349
    2. ' ,' → logprob: -7.125828266143799
    3. ',n' → logprob: -11.12582778930664
    4. ',k' → logprob: -11.87582778930664
    5. ',
' → logprob: -14.25082778930664
    6. 'n' → logprob: -14.75082778930664
    7. 's' → logprob: -16.12582778930664
    8. '‌,' → logprob: -16.37582778930664
    9. '<|end|>' → logprob: -16.37582778930664
    10. '```' → logprob: -16.75082778930664

Token 139: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38698697090148926
    2. 'r' → logprob: -1.1369869709014893
    3. ' r' → logprob: -9.51198673248291
    4. ' k' → logprob: -10.13698673248291
    5. 'm' → logprob: -13.38698673248291
    6. 'n' → logprob: -14.63698673248291
    7. '
' → logprob: -15.88698673248291
    8. ' ' → logprob: -16.136987686157227
    9. 'x' → logprob: -16.761987686157227
    10. '```' → logprob: -16.761987686157227

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007689916528761387
    2. '):
' → logprob: -4.882689952850342
    3. ')' → logprob: -9.632689476013184
    4. '):
' → logprob: -11.132689476013184
    5. ' ):' → logprob: -13.132689476013184
    6. ':' → logprob: -14.507689476013184
    7. '**' → logprob: -15.507689476013184
    8. ')：' → logprob: -16.0076904296875
    9. ',' → logprob: -16.2576904296875
    10. '   ' → logprob: -16.3826904296875

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021750046871602535
    2. ' if' → logprob: -6.8771748542785645
    3. ' return' → logprob: -7.1271748542785645
    4. '<|end|>' → logprob: -8.627175331115723
    5. ':' → logprob: -9.252175331115723
    6. '    
' → logprob: -11.377175331115723
    7. ',' → logprob: -11.752175331115723
    8. '	return' → logprob: -12.002175331115723
    9. ':return' → logprob: -12.002175331115723
    10. 'return' → logprob: -12.127175331115723

Token 142: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41204795241355896
    2. ' return' → logprob: -1.6620479822158813
    3. 'if' (adapté à ' if') → logprob: -2.662047863006592
    4. 'return' → logprob: -2.662047863006592
    5. '   ' → logprob: -4.787047863006592
    6. '	return' → logprob: -12.53704833984375
    7. '    ' → logprob: -12.91204833984375
    8. '	if' → logprob: -13.16204833984375
    9. '```' → logprob: -14.03704833984375
    10. ' ' → logprob: -14.16204833984375

Token 143: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.14295035600662231
    2. ' r' → logprob: -2.0179502964019775
    3. 'n' → logprob: -8.767950057983398
    4. ' n' → logprob: -9.392950057983398
    5. '   ' → logprob: -10.642950057983398
    6. ' not' → logprob: -11.767950057983398
    7. ' ' → logprob: -13.017950057983398
    8. '0' → logprob: -14.017950057983398
    9. '	r' → logprob: -14.642950057983398
    10. 'not' → logprob: -14.892950057983398

Token 144: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2606494724750519
    2. ' >' → logprob: -1.5106494426727295
    3. '<' → logprob: -4.885649681091309
    4. ' <' → logprob: -6.885649681091309
    5. '<n' → logprob: -9.510649681091309
    6. '><' → logprob: -12.260649681091309
    7. ' >
' → logprob: -12.760649681091309
    8. '0' → logprob: -13.010649681091309
    9. '==' → logprob: -13.010649681091309
    10. 'n' → logprob: -13.260649681091309

Token 145: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010306637705070898
    2. ' ' → logprob: -9.250102996826172
    3. '=' → logprob: -12.000102996826172
    4. 'or' → logprob: -14.750102996826172
    5. '1' → logprob: -16.375102996826172
    6. ' or' → logprob: -16.750102996826172
    7. '```' → logprob: -16.750102996826172
    8. ' =' → logprob: -17.375102996826172
    9. '۰' → logprob: -17.875102996826172
    10. ')' → logprob: -18.375102996826172

Token 146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '=' → logprob: -15.00000286102295
    4. 'or' → logprob: -17.125003814697266
    5. '```' → logprob: -17.500003814697266
    6. '۰' → logprob: -17.750003814697266
    7. ' or' → logprob: -19.062503814697266
    8. '1' → logprob: -19.562503814697266
    9. ' =' → logprob: -19.625003814697266
    10. '०' → logprob: -19.812503814697266

Token 147: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019405345665290952
    2. 'or' → logprob: -6.251940727233887
    3. '	or' → logprob: -12.251940727233887
    4. '<|end|>' → logprob: -12.251940727233887
    5. ' ' → logprob: -13.126940727233887
    6. '<|end|>' → logprob: -16.37693977355957
    7. 'n' → logprob: -16.75193977355957
    8. ')' → logprob: -16.87693977355957
    9. '   ' → logprob: -17.00193977355957
    10. ',' → logprob: -17.12693977355957

Token 148: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0042390236631035805
    2. ' r' → logprob: -5.504239082336426
    3. 'n' → logprob: -8.754239082336426
    4. ' n' → logprob: -13.254239082336426
    5. '>' → logprob: -14.379239082336426
    6. '   ' → logprob: -15.629239082336426
    7. '```' → logprob: -15.629239082336426
    8. '	r' → logprob: -16.75423812866211
    9. ' ' → logprob: -17.31673812866211
    10. '_r' → logprob: -17.94173812866211

Token 149: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16028311848640442
    2. ' >' → logprob: -1.910283088684082
    3. ' n' → logprob: -10.410283088684082
    4. 'n' → logprob: -10.535283088684082
    5. ' ' → logprob: -14.285283088684082
    6. '```' → logprob: -14.785283088684082
    7. ' >
' → logprob: -15.785283088684082
    8. '>
' → logprob: -16.0352840423584
    9. '>NN' → logprob: -16.1602840423584
    10. '   ' → logprob: -16.1602840423584

Token 150: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815052703022957
    2. ' n' → logprob: -4.018150329589844
    3. '	n' → logprob: -15.268150329589844
    4. '<|end|>' → logprob: -15.768150329589844
    5. '   ' → logprob: -16.268150329589844
    6. ' ' → logprob: -16.643150329589844
    7. '(n' → logprob: -17.518150329589844
    8. ')n' → logprob: -18.518150329589844
    9. '```' → logprob: -18.643150329589844
    10. '_n' → logprob: -18.768150329589844

Token 151: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7760328054428101
    2. ':
' → logprob: -0.9010328054428101
    3. ' or' → logprob: -2.5260329246520996
    4. ':return' → logprob: -3.0260329246520996
    5. '   ' → logprob: -5.4010329246521
    6. '):
' → logprob: -8.151032447814941
    7. 'or' → logprob: -9.651032447814941
    8. '):' → logprob: -9.776032447814941
    9. ')' → logprob: -9.901032447814941
    10. ' return' → logprob: -10.026032447814941

Token 152: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4842299818992615
    2. '       ' → logprob: -1.7342300415039062
    3. '   ' → logprob: -1.8592300415039062
    4. '
' → logprob: -3.7342300415039062
    5. 'return' → logprob: -4.109230041503906
    6. ' 
' → logprob: -5.609230041503906
    7. '    ' → logprob: -5.984230041503906
    8. ':return' → logprob: -6.859230041503906
    9. '```' → logprob: -6.859230041503906
    10. '<|end|>' → logprob: -7.234230041503906

Token 153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.631715774536133
    4. ' ' → logprob: -17.631715774536133
    5. '```' → logprob: -18.006715774536133
    6. '  ' → logprob: -18.756715774536133
    7. '
' → logprob: -19.131715774536133
    8. '۰' → logprob: -19.381715774536133
    9. '00' → logprob: -20.694215774536133
    10. '000' → logprob: -20.881715774536133

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.625003814697266
    4. '```' → logprob: -18.750003814697266
    5. '
' → logprob: -18.875003814697266
    6. 'return' → logprob: -20.375003814697266
    7. '1' → logprob: -20.500003814697266
    8. '000' → logprob: -20.500003814697266
    9. 'None' → logprob: -20.625003814697266
    10. '۰' → logprob: -20.750003814697266

Token 155: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006191133987158537
    2. '
' → logprob: -5.881191253662109
    3. ' return' → logprob: -6.881191253662109
    4. '    
' → logprob: -6.881191253662109
    5. 'return' → logprob: -7.256191253662109
    6. '<|end|>' → logprob: -7.881191253662109
    7. '  
' → logprob: -9.75619125366211
    8. '  ' → logprob: -10.13119125366211
    9. 'n' → logprob: -10.25619125366211
    10. ' 
' → logprob: -10.50619125366211

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043521471321582794
    2. ' return' → logprob: -4.293521404266357
    3. ' 
' → logprob: -4.543521404266357
    4. '```' → logprob: -5.168521404266357
    5. '<|end|>' → logprob: -5.668521404266357
    6. '    
' → logprob: -5.793521404266357
    7. 'return' → logprob: -6.418521404266357
    8. '
' → logprob: -7.168521404266357
    9. '    ' → logprob: -7.668521404266357
    10. '	return' → logprob: -7.668521404266357

Token 157: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3450125753879547
    2. 'return' (adapté à ' return') → logprob: -1.3450125455856323
    3. ' return' → logprob: -3.470012664794922
    4. '	return' → logprob: -9.095012664794922
    5. '
' → logprob: -12.220012664794922
    6. '    
' → logprob: -12.470012664794922
    7. ' ' → logprob: -12.720012664794922
    8. '  ' → logprob: -12.970012664794922
    9. '   ' → logprob: -13.220012664794922
    10. '    ' → logprob: -13.470012664794922

Token 158: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03050881437957287
    2. ' f' → logprob: -3.5305087566375732
    3. '(f' → logprob: -7.280508995056152
    4. ' (' → logprob: -9.905508995056152
    5. '   ' → logprob: -11.280508995056152
    6. '(' → logprob: -12.405508995056152
    7. '	f' → logprob: -13.530508995056152
    8. ' ' → logprob: -14.530508995056152
    9. '    ' → logprob: -15.155508995056152
    10. '
' → logprob: -15.405508995056152

Token 159: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.896309739408025e-07
    2. 'n' → logprob: -14.125000953674316
    3. '[' → logprob: -18.375
    4. '	n' → logprob: -19.5
    5. '[
' → logprob: -20.625
    6. '```' → logprob: -21.125
    7. '(n' → logprob: -21.5
    8. ' n' → logprob: -21.625
    9. '[m' → logprob: -22.0
    10. '[r' → logprob: -22.0

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020022729877382517
    2. ']*' → logprob: -6.502002239227295
    3. '[n' → logprob: -8.752002716064453
    4. '][' → logprob: -8.877002716064453
    5. '[' → logprob: -10.002002716064453
    6. '[r' → logprob: -10.002002716064453
    7. ' ]' → logprob: -10.127002716064453
    8. '],' → logprob: -10.377002716064453
    9. '   ' → logprob: -11.002002716064453
    10. ']
' → logprob: -11.377002716064453

Token 161: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04335266351699829
    2. ' *' → logprob: -3.1683526039123535
    3. 'fi' → logprob: -8.668353080749512
    4. 'mul' → logprob: -9.043353080749512
    5. '```' → logprob: -11.543353080749512
    6. ' fi' → logprob: -11.793353080749512
    7. '*
' → logprob: -12.043353080749512
    8. '*f' → logprob: -12.168353080749512
    9. ' mul' → logprob: -12.168353080749512
    10. '`' → logprob: -12.418353080749512

Token 162: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -0.0018747396534308791
    2. '(fi' → logprob: -6.376874923706055
    3. ' fi' → logprob: -9.001874923706055
    4. '(' → logprob: -10.001874923706055
    5. ' (' → logprob: -12.751874923706055
    6. '	fi' → logprob: -13.876874923706055
    7. '   ' → logprob: -16.251874923706055
    8. '(f' → logprob: -16.751874923706055
    9. '```' → logprob: -17.251874923706055
    10. 'ffi' → logprob: -17.501874923706055

Token 163: '[r' (ID: 33265)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.006742015480995178
    2. '[r' → logprob: -5.006742000579834
    3. '[' → logprob: -11.381742477416992
    4. '[
' → logprob: -12.006742477416992
    5. '```' → logprob: -12.506742477416992
    6. '[f' → logprob: -13.381742477416992
    7. 'n' → logprob: -13.631742477416992
    8. '[k' → logprob: -14.006742477416992
    9. '[[' → logprob: -15.006742477416992
    10. '[m' → logprob: -15.506742477416992

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.5120287066092715e-05
    2. ']%' → logprob: -10.500035285949707
    3. ' ]' → logprob: -12.875035285949707
    4. '[' → logprob: -13.250035285949707
    5. '[n' → logprob: -14.000035285949707
    6. '%' → logprob: -14.000035285949707
    7. '[-' → logprob: -14.875035285949707
    8. ']
' → logprob: -15.750035285949707
    9. ')' → logprob: -15.750035285949707
    10. '   ' → logprob: -15.875035285949707

Token 165: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10071103274822235
    2. '*' → logprob: -2.4757111072540283
    3. '%' → logprob: -4.475710868835449
    4. ' %' → logprob: -8.60071086883545
    5. '*f' → logprob: -9.72571086883545
    6. '   ' → logprob: -10.22571086883545
    7. ' ' → logprob: -11.22571086883545
    8. '[' → logprob: -11.60071086883545
    9. '```' → logprob: -12.60071086883545
    10. '  ' → logprob: -13.47571086883545

Token 166: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.1008713702030946e-06
    2. ' mod' → logprob: -13.125001907348633
    3. '(mod' → logprob: -17.750001907348633
    4. '```' → logprob: -19.375001907348633
    5. '	mod' → logprob: -19.625001907348633
    6. '
' → logprob: -20.125001907348633
    7. 'moder' → logprob: -22.250001907348633
    8. '`' → logprob: -22.500001907348633
    9. ' мод' → logprob: -22.750001907348633
    10. '{' → logprob: -22.875001907348633

Token 167: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005577721633017063
    2. '*' → logprob: -5.255577564239502
    3. '   ' → logprob: -8.50557804107666
    4. '*f' → logprob: -9.50557804107666
    5. ' ' → logprob: -10.00557804107666
    6. '%' → logprob: -11.88057804107666
    7. '  ' → logprob: -12.50557804107666
    8. '```' → logprob: -13.00557804107666
    9. '<|end|>' → logprob: -13.63057804107666
    10. 'f' → logprob: -13.75557804107666

Token 168: ' fi' (ID: 6134)
  Prédit: 'fi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fi' → logprob: -3.082895273109898e-05
    2. ' fi' → logprob: -10.500030517578125
    3. '(fi' → logprob: -13.000030517578125
    4. '	fi' → logprob: -13.875030517578125
    5. 'ffi' → logprob: -18.625030517578125
    6. 'f' → logprob: -18.750030517578125
    7. 'fa' → logprob: -18.875030517578125
    8. 'fe' → logprob: -19.125030517578125
    9. '   ' → logprob: -19.250030517578125
    10. '
' → logprob: -19.375030517578125

Token 169: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.3458322731312364e-06
    2. 'n' → logprob: -11.875007629394531
    3. '(n' → logprob: -15.875007629394531
    4. '[' → logprob: -16.12500762939453
    5. '```' → logprob: -17.00000762939453
    6. '[r' → logprob: -18.25000762939453
    7. '[
' → logprob: -18.37500762939453
    8. '[-' → logprob: -18.50000762939453
    9. '<n' → logprob: -19.50000762939453
    10. '`' → logprob: -19.50000762939453

Token 170: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.660297155380249
    2. '[r' → logprob: -0.910297155380249
    3. 'r' → logprob: -3.285297155380249
    4. '-' → logprob: -3.410297155380249
    5. ' -' → logprob: -4.910297393798828
    6. '[' → logprob: -5.910297393798828
    7. ' r' → logprob: -8.910297393798828
    8. '[n' → logprob: -9.785297393798828
    9. '(r' → logprob: -10.535297393798828
    10. '[-' → logprob: -11.035297393798828

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2664456789934775e-06
    2. ' r' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '	r' → logprob: -21.000001907348633
    5. '<|end|>' → logprob: -21.000001907348633
    6. 'р' → logprob: -21.500001907348633
    7. '[r' → logprob: -21.750001907348633
    8. ' ' → logprob: -21.875001907348633
    9. ']' → logprob: -22.625001907348633
    10. '_r' → logprob: -22.750001907348633

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.0948158382670954e-05
    2. ']%' → logprob: -10.500030517578125
    3. ' ]' → logprob: -12.875030517578125
    4. ']
' → logprob: -14.750030517578125
    5. '])' → logprob: -16.500030517578125
    6. 'r' → logprob: -16.750030517578125
    7. '%' → logprob: -17.000030517578125
    8. '']' → logprob: -17.000030517578125
    9. '[' → logprob: -17.125030517578125
    10. '}' → logprob: -17.375030517578125

Token 173: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31352633237838745
    2. ' %' → logprob: -1.3135263919830322
    3. '%n' → logprob: -9.438526153564453
    4. ')' → logprob: -9.563526153564453
    5. '[n' → logprob: -10.313526153564453
    6. ')%' → logprob: -10.438526153564453
    7. ']' → logprob: -10.938526153564453
    8. '[' → logprob: -11.563526153564453
    9. ']%' → logprob: -11.938526153564453
    10. '```' → logprob: -12.188526153564453

Token 174: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.339278580620885e-06
    2. ' mod' → logprob: -13.000001907348633
    3. '(mod' → logprob: -18.625001907348633
    4. '	mod' → logprob: -20.500001907348633
    5. '```' → logprob: -20.875001907348633
    6. '
' → logprob: -22.125001907348633
    7. 'moder' → logprob: -22.500001907348633
    8. '   ' → logprob: -23.125001907348633
    9. ' ' → logprob: -23.375001907348633
    10. ' мод' → logprob: -23.500001907348633

Token 175: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0462076663970947
    2. 'res' → logprob: -1.6712076663970947
    3. 'ans' → logprob: -1.6712076663970947
    4. 'answer' → logprob: -1.7962076663970947
    5. '@' → logprob: -2.7962076663970947
    6. 'dp' → logprob: -3.6712076663970947
    7. 'total' → logprob: -4.796207427978516
    8. 'def' → logprob: -5.546207427978516
    9. 's' → logprob: -5.796207427978516
    10. 'print' → logprob: -6.921207427978516

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896531164646149
    2. '=' → logprob: -2.46396541595459
    3. ':' → logprob: -12.08896541595459
    4. 's' → logprob: -12.71396541595459
    5. ',' → logprob: -12.83896541595459
    6. ' ' → logprob: -12.96396541595459
    7. '_' → logprob: -13.33896541595459
    8. ')' → logprob: -13.33896541595459
    9. ' =
' → logprob: -13.96396541595459
    10. '<|end|>' → logprob: -13.96396541595459

Token 178: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04295637086033821
    2. ' ' → logprob: -3.2929563522338867
    3. '1' → logprob: -5.667956352233887
    4. ' n' → logprob: -7.917956352233887
    5. 'n' → logprob: -8.292956352233887
    6. ' k' → logprob: -8.667956352233887
    7. ' (' → logprob: -8.792956352233887
    8. 'k' → logprob: -8.917956352233887
    9. '(n' → logprob: -9.417956352233887
    10. 'sum' → logprob: -9.417956352233887

Token 179: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.002057000296190381
    2. 'comb' → logprob: -7.002057075500488
    3. '(' → logprob: -7.377057075500488
    4. '((' → logprob: -8.127057075500488
    5. '(
' → logprob: -9.502057075500488
    6. '(m' → logprob: -10.252057075500488
    7. '(pow' → logprob: -10.377057075500488
    8. '(comm' → logprob: -10.627057075500488
    9. '(range' → logprob: -11.627057075500488
    10. '(f' → logprob: -12.127057075500488

Token 180: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.8590300139039755e-05
    2. 'f' → logprob: -11.250048637390137
    3. '[b' → logprob: -11.875048637390137
    4. '_mod' → logprob: -12.125048637390137
    5. '```' → logprob: -12.875048637390137
    6. 'mod' → logprob: -13.000048637390137
    7. '(b' → logprob: -13.125048637390137
    8. '[' → logprob: -13.375048637390137
    9. 'p' → logprob: -13.375048637390137
    10. '(' → logprob: -13.750048637390137

Token 181: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.981667537620524e-06
    2. '_MOD' → logprob: -14.125001907348633
    3. 'mod' → logprob: -14.875001907348633
    4. '(n' → logprob: -15.875001907348633
    5. '_ans' → logprob: -16.125001907348633
    6. 'n' → logprob: -16.375001907348633
    7. '_max' → logprob: -16.500001907348633
    8. '(' → logprob: -16.500001907348633
    9. '(_' → logprob: -16.875001907348633
    10. '(mod' → logprob: -17.000001907348633

Token 182: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00042923877481371164
    2. '(' → logprob: -8.125429153442383
    3. '(max' → logprob: -9.250429153442383
    4. '(k' → logprob: -11.000429153442383
    5. 'n' → logprob: -11.125429153442383
    6. '(
' → logprob: -13.375429153442383
    7. '((' → logprob: -13.750429153442383
    8. '(m' → logprob: -13.875429153442383
    9. '(i' → logprob: -14.500429153442383
    10. ')' → logprob: -14.625429153442383

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10585665702819824
    2. '-' → logprob: -2.4808566570281982
    3. ',k' → logprob: -5.355856895446777
    4. ' -' → logprob: -6.230856895446777
    5. ')' → logprob: -6.355856895446777
    6. '(n' → logprob: -6.480856895446777
    7. '(' → logprob: -6.855856895446777
    8. ',n' → logprob: -7.105856895446777
    9. 'k' → logprob: -7.355856895446777
    10. ',i' → logprob: -7.605856895446777

Token 184: ' m' (ID: 284)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03146357834339142
    2. 'k' → logprob: -4.156463623046875
    3. 'x' → logprob: -5.281463623046875
    4. 'm' → logprob: -5.531463623046875
    5. 'r' → logprob: -5.781463623046875
    6. 'max' → logprob: -6.281463623046875
    7. 'j' → logprob: -8.156463623046875
    8. ' i' → logprob: -8.656463623046875
    9. 'n' → logprob: -8.781463623046875
    10. '2' → logprob: -8.781463623046875

Token 185: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009774327045306563
    2. 'for' → logprob: -7.250977516174316
    3. ')*' → logprob: -9.375977516174316
    4. ' for' → logprob: -9.875977516174316
    5. '))' → logprob: -10.250977516174316
    6. ' )' → logprob: -11.250977516174316
    7. ')
' → logprob: -11.500977516174316
    8. '*' → logprob: -11.500977516174316
    9. '```' → logprob: -11.500977516174316
    10. '   ' → logprob: -11.750977516174316

Token 186: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1607816368341446
    2. 'for' → logprob: -1.9107816219329834
    3. ' *' → logprob: -8.410781860351562
    4. '*' → logprob: -8.660781860351562
    5. ')' → logprob: -9.035781860351562
    6. ',' → logprob: -11.285781860351562
    7. ' ' → logprob: -11.285781860351562
    8. '%' → logprob: -12.285781860351562
    9. '   ' → logprob: -13.285781860351562
    10. ' %' → logprob: -13.535781860351562

Token 187: ' comb' (ID: 4134)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3619704842567444
    2. 'comb' → logprob: -1.2369704246520996
    3. '2' → logprob: -4.7369704246521
    4. '(' → logprob: -6.4869704246521
    5. '   ' → logprob: -7.9869704246521
    6. 'mul' → logprob: -8.111970901489258
    7. '(pow' → logprob: -8.111970901489258
    8. 'k' → logprob: -8.236970901489258
    9. 'com' → logprob: -8.486970901489258
    10. 'mod' → logprob: -8.611970901489258

Token 188: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.005993967410176992
    2. '(n' → logprob: -5.130993843078613
    3. 'mod' → logprob: -10.630993843078613
    4. '(' → logprob: -11.255993843078613
    5. '(k' → logprob: -11.380993843078613
    6. '(m' → logprob: -13.255993843078613
    7. '_(' → logprob: -13.255993843078613
    8. '
' → logprob: -13.630993843078613
    9. '(mod' → logprob: -13.630993843078613
    10. '_MOD' → logprob: -13.755993843078613

Token 189: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02470346726477146
    2. '(k' → logprob: -3.8997035026550293
    3. '(max' → logprob: -6.149703502655029
    4. '(' → logprob: -7.399703502655029
    5. '((' → logprob: -7.399703502655029
    6. '(m' → logprob: -7.899703502655029
    7. 'n' → logprob: -8.024703025817871
    8. '(
' → logprob: -10.524703025817871
    9. 'k' → logprob: -10.774703025817871
    10. '
' → logprob: -11.024703025817871

Token 190: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40410709381103516
    2. '-' → logprob: -2.279107093811035
    3. 'm' → logprob: -2.279107093811035
    4. ',m' → logprob: -2.529107093811035
    5. '(m' → logprob: -4.029107093811035
    6. ',k' → logprob: -4.404107093811035
    7. 'k' → logprob: -5.154107093811035
    8. '(n' → logprob: -5.529107093811035
    9. ',n' → logprob: -6.279107093811035
    10. ',
' → logprob: -6.404107093811035

Token 191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4405096173286438
    2. 'm' → logprob: -1.065509557723999
    3. 'k' → logprob: -4.690509796142578
    4. ' m' → logprob: -7.315509796142578
    5. 'max' → logprob: -7.315509796142578
    6. '2' → logprob: -7.690509796142578
    7. 'n' → logprob: -7.815509796142578
    8. ' ' → logprob: -8.190509796142578
    9. '(m' → logprob: -11.253009796142578
    10. ' k' → logprob: -11.315509796142578

Token 192: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.058743055909872055
    2. '1' → logprob: -2.9337430000305176
    3. 'k' → logprob: -5.683743000030518
    4. 'max' → logprob: -8.433743476867676
    5. 'n' → logprob: -9.058743476867676
    6. '2' → logprob: -9.558743476867676
    7. ' m' → logprob: -10.433743476867676
    8. ' ' → logprob: -12.558743476867676
    9. '
' → logprob: -12.683743476867676
    10. '(m' → logprob: -13.121243476867676

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00662158103659749
    2. ',m' → logprob: -5.381621360778809
    3. ' ,' → logprob: -7.256621360778809
    4. 'm' → logprob: -7.506621360778809
    5. '(m' → logprob: -8.131621360778809
    6. '(n' → logprob: -8.631621360778809
    7. ',n' → logprob: -9.006621360778809
    8. 'n' → logprob: -9.756621360778809
    9. ',
' → logprob: -10.381621360778809
    10. ')' → logprob: -11.256621360778809

Token 194: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0021397899836301804
    2. ' m' → logprob: -6.752139568328857
    3. 'max' → logprob: -7.252139568328857
    4. 'n' → logprob: -8.752140045166016
    5. 'k' → logprob: -9.377140045166016
    6. ' max' → logprob: -11.877140045166016
    7. '   ' → logprob: -12.252140045166016
    8. ' n' → logprob: -13.127140045166016
    9. ' ' → logprob: -14.002140045166016
    10. ' k' → logprob: -14.752140045166016

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05993463099002838
    2. ' for' → logprob: -3.559934616088867
    3. 'for' → logprob: -3.559934616088867
    4. '   ' → logprob: -8.184934616088867
    5. ' %' → logprob: -8.309934616088867
    6. '%' → logprob: -8.559934616088867
    7. ',' → logprob: -8.684934616088867
    8. ')%' → logprob: -8.934934616088867
    9. ')
' → logprob: -9.684934616088867
    10. '```' → logprob: -9.934934616088867

Token 196: ' %' (ID: 1851)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7820091843605042
    2. ' %' → logprob: -1.0320091247558594
    3. 'for' → logprob: -2.0320091247558594
    4. '%' → logprob: -2.9070091247558594
    5. '%m' → logprob: -7.782009124755859
    6. ' *' → logprob: -10.28200912475586
    7. ' ' → logprob: -10.65700912475586
    8. ')' → logprob: -11.28200912475586
    9. '
' → logprob: -12.15700912475586
    10. '*' → logprob: -12.15700912475586

Token 197: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.012845352292060852
    2. ' mod' → logprob: -5.512845516204834
    3. 'm' → logprob: -5.637845516204834
    4. '(mod' → logprob: -6.012845516204834
    5. ')' → logprob: -6.387845516204834
    6. 'max' → logprob: -7.887845516204834
    7. '(n' → logprob: -8.762845039367676
    8. '(m' → logprob: -9.137845039367676
    9. ' m' → logprob: -9.512845039367676
    10. 'n' → logprob: -9.637845039367676

Token 198: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07300484925508499
    2. 'for' → logprob: -2.698004961013794
    3. ')' → logprob: -5.823004722595215
    4. ' *' → logprob: -10.198004722595215
    5. '%' → logprob: -10.448004722595215
    6. ' %' → logprob: -11.323004722595215
    7. '   ' → logprob: -11.823004722595215
    8. ',' → logprob: -12.073004722595215
    9. ' ' → logprob: -12.823004722595215
    10. '*' → logprob: -12.823004722595215

Token 199: ' m' (ID: 284)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.649091362953186
    2. 'm' → logprob: -1.024091362953186
    3. ' range' → logprob: -2.1490912437438965
    4. ' m' → logprob: -6.3990912437438965
    5. '(range' → logprob: -10.149091720581055
    6. ')' → logprob: -11.149091720581055
    7. '[' → logprob: -11.649091720581055
    8. '	range' → logprob: -11.649091720581055
    9. ' ' → logprob: -11.774091720581055
    10. '   ' → logprob: -12.399091720581055

Token 200: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01993687078356743
    2. 'range' → logprob: -4.769937038421631
    3. ' range' → logprob: -4.769937038421631
    4. 'in' → logprob: -5.894937038421631
    5. ')' → logprob: -11.769936561584473
    6. '(range' → logprob: -12.144936561584473
    7. ' ' → logprob: -12.269936561584473
    8. '<|end|>' → logprob: -12.394936561584473
    9. '	range' → logprob: -13.769936561584473
    10. ' xrange' → logprob: -14.019936561584473

Token 201: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '(range' → logprob: -16.62747573852539
    4. '	range' → logprob: -18.12747573852539
    5. 'r' → logprob: -20.25247573852539
    6. 'ran' → logprob: -20.50247573852539
    7. ')' → logprob: -20.50247573852539
    8. '
' → logprob: -20.62747573852539
    9. ' ' → logprob: -20.87747573852539
    10. '```' → logprob: -21.50247573852539

Token 202: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.01451075542718172
    2. '(' → logprob: -4.264510631561279
    3. 'max' → logprob: -8.014511108398438
    4. '1' → logprob: -11.139511108398438
    5. ' max' → logprob: -13.764511108398438
    6. '(k' → logprob: -15.514511108398438
    7. '(min' → logprob: -15.639511108398438
    8. '(m' → logprob: -16.014511108398438
    9. '(
' → logprob: -16.764511108398438
    10. ')' → logprob: -16.889511108398438

Token 203: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -5.796184723294573e-06
    2. 'm' → logprob: -13.500005722045898
    3. '_max' → logprob: -13.625005722045898
    4. '(max' → logprob: -13.875005722045898
    5. '(m' → logprob: -14.125005722045898
    6. '+' → logprob: -14.375005722045898
    7. 'max' → logprob: -14.625005722045898
    8. '(' → logprob: -15.000005722045898
    9. '_' → logprob: -17.3750057220459
    10. ')' → logprob: -17.7500057220459

Token 204: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03368385508656502
    2. ' +' → logprob: -3.4086837768554688
    3. ')' → logprob: -10.908683776855469
    4. '))' → logprob: -11.408683776855469
    5. '+
' → logprob: -12.533683776855469
    6. ')+' → logprob: -14.033683776855469
    7. '```' → logprob: -14.408683776855469
    8. ' +
' → logprob: -14.658683776855469
    9. '1' → logprob: -14.658683776855469
    10. '+)' → logprob: -14.783683776855469

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007106438861228526
    2. ' ' → logprob: -7.250710487365723
    3. '(' → logprob: -15.250710487365723
    4. ')' → logprob: -15.250710487365723
    5. '```' → logprob: -16.75071144104004
    6. '   ' → logprob: -16.87571144104004
    7. '0' → logprob: -17.25071144104004
    8. '
' → logprob: -17.37571144104004
    9. '2' → logprob: -17.50071144104004
    10. ',' → logprob: -18.50071144104004

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. ')' → logprob: -16.500011444091797
    4. '```' → logprob: -16.687511444091797
    5. '
' → logprob: -17.062511444091797
    6. '(' → logprob: -17.625011444091797
    7. '   ' → logprob: -17.812511444091797
    8. '0' → logprob: -18.125011444091797
    9. '2' → logprob: -18.437511444091797
    10. '{' → logprob: -18.500011444091797

Token 207: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019901065388694406
    2. '))' → logprob: -8.750199317932129
    3. ')+' → logprob: -11.125199317932129
    4. ' )' → logprob: -12.250199317932129
    5. '):' → logprob: -12.500199317932129
    6. ')))' → logprob: -12.625199317932129
    7. ')}' → logprob: -12.875199317932129
    8. ')
' → logprob: -13.125199317932129
    9. ')**' → logprob: -13.125199317932129
    10. ')}}' → logprob: -13.750199317932129

Token 208: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6879374384880066
    2. '
' → logprob: -1.1879374980926514
    3. ' %' → logprob: -1.6879374980926514
    4. ')' → logprob: -5.562937259674072
    5. '<|end|>' → logprob: -6.312937259674072
    6. 'print' → logprob: -6.812937259674072
    7. '
' → logprob: -8.06293773651123
    8. ' 
' → logprob: -8.68793773651123
    9. '%n' → logprob: -8.93793773651123
    10. ')%' → logprob: -9.43793773651123

Token 209: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.030004214495420456
    2. ' mod' → logprob: -3.5300042629241943
    3. '(mod' → logprob: -8.280004501342773
    4. '```' → logprob: -16.280004501342773
    5. '	mod' → logprob: -16.655004501342773
    6. '10' → logprob: -17.655004501342773
    7. ' (' → logprob: -18.030004501342773
    8. '(' → logprob: -18.530004501342773
    9. ' ' → logprob: -18.905004501342773
    10. ' ' → logprob: -19.030004501342773

Token 210: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6930815577507019
    2. '<|end|>' → logprob: -0.8180815577507019
    3. '
' → logprob: -2.9430816173553467
    4. ')' → logprob: -5.568081378936768
    5. '\n' → logprob: -6.943081378936768
    6. ' print' → logprob: -8.068081855773926
    7. '#' → logprob: -8.693081855773926
    8. '```' → logprob: -8.943081855773926
    9. '<|end|>' → logprob: -8.943081855773926
    10. '[' → logprob: -9.443081855773926

Token 211: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5512170791625977
    2. '<|end|>' → logprob: -0.9262170791625977
    3. '
' → logprob: -3.6762170791625977
    4. '\n' → logprob: -6.426217079162598
    5. ')' → logprob: -8.426217079162598
    6. ' print' → logprob: -8.801217079162598
    7. '<|end|>' → logprob: -9.176217079162598
    8. '```' → logprob: -9.301217079162598
    9. '#' → logprob: -10.426217079162598
    10. '\' → logprob: -10.426217079162598

Token 212: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0024923032615333796
    2. '(' → logprob: -6.002492427825928
    3. 'ans' → logprob: -11.37749195098877
    4. '()' → logprob: -13.12749195098877
    5. '(answer' → logprob: -13.50249195098877
    6. '(`' → logprob: -14.25249195098877
    7. '(
' → logprob: -15.12749195098877
    8. '('' → logprob: -15.75249195098877
    9. ' (' → logprob: -16.127492904663086
    10. '```' → logprob: -16.252492904663086

Token 213: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0445127372804563e-05
    2. ')
' → logprob: -11.87501049041748
    3. ' )' → logprob: -13.62501049041748
    4. '`)' → logprob: -14.00001049041748
    5. '))' → logprob: -14.87501049041748
    6. ')`' → logprob: -14.87501049041748
    7. '```' → logprob: -15.62501049041748
    8. '')' → logprob: -15.75001049041748
    9. '#' → logprob: -16.250009536743164
    10. '**' → logprob: -16.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 211
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 182
Précision stricte (1ère position): 42.18%
Précision adaptée (1ère position): 42.18%
Précision (top 10): 86.26%
================================================================================
