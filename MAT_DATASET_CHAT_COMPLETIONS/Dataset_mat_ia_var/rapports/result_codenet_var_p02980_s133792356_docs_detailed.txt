================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Lit les entiers N et M depuis l'entrée standard et calcule un résultat modulo 998244353
    selon une combinaison de coefficients binomiaux, de puissances et de factorielles.
    Affiche le résultat.
    """
    N, M = map(int, input().split())
    mod = 998244353  # Modulo utilisé pour toutes les opérations

    # Échange N et M pour s'assurer que N <= M, ce qui optimise certaines boucles
    if N > M:
        N, M = M, N

    # Initialisation des tableaux pour les factorielles, les puissances de (M+1), (N+1)
    fact = [0] * (M + 1)   # fact[i] : i!
    powm = [0] * (M + 1)   # powm[i] : (M+1)^i
    pown = [0] * (M + 1)   # pown[i] : (N+1)^i
    fact[0] = powm[0] = pown[0] = 1  # Initialisation de la base des puissances et factorielles

    # Pré-calcul des factorielles et des puissances jusqu'à M inclus
    for i in range(1, M + 1):
        fact[i] = fact[i - 1] * i % mod
        powm[i] = powm[i - 1] * (M + 1) % mod
        pown[i] = pown[i - 1] * (N + 1) % mod

    def mod_pow(n, m):
        """
        Calcule la puissance n^m modulo mod de manière récursive et efficace (exponentiation rapide).

        Args:
            n (int): La base.
            m (int): L'exposant.
        Returns:
            int: Le résultat de n^m % mod.
        """
        if m == 0:
            return 1
        elif m == 1:
            return n % mod
        elif m % 2 == 0:
            tmp = mod_pow(n, m // 2)
            return tmp * tmp % mod
        else:
            tmp = mod_pow(n, m // 2)
            return tmp * tmp % mod * n % mod

    # Pré-calcul des inverses des factorielles modulo mod (nécessaires pour les combinaisons)
    inv_fact = [0] * (M + 1)  # inv_fact[i] : inverse modulaire de fact[i]
    inv_fact[M] = mod_pow(fact[M], mod - 2)  # L'inverse de fact[M] avec le petit théorème de Fermat
    for i in reversed(range(0, M)):
        # inv_fact[i] = inv_fact[i+1] * (i+1) % mod, d'où inv_fact[0] = 1 à la fin
        inv_fact[i] = inv_fact[i + 1] * (i + 1) % mod

    def comb(n, r):
        """
        Calcule la combinaison C(n, r) modulo mod à l'aide des factorielles pré-calculées.

        Args:
            n (int): Le nombre total d'éléments.
            r (int): Le nombre d'éléments à choisir.
        Returns:
            int: La combinaison C(n, r) % mod, ou 0 si r > n ou r < 0.
        """
        if r < 0 or r > n:
            return 0
        return fact[n] * inv_fact[r] % mod * inv_fact[n - r] % mod

    # Calcul de la somme alternée selon la formule donnée
    ans = 0
    for i in range(N + 1):
        # Pour chaque i, on calcule le terme selon la formule :
        # (-1)^i * C(N, i) * C(M, i) * i! * (M+1)^(N-i) * (N+1)^(M-i)
        sign = -1 if (i % 2) else 1  # (-1)^i
        term = (
            sign *
            comb(N, i) *
            comb(M, i) *
            fact[i] %
            mod *
            powm[N - i] % mod *
            pown[M - i] % mod
        )
        ans = (ans + term) % mod  # On veille toujours à ne pas dépasser le modulo

    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8402498960494995
    2. '   ' → logprob: -0.8402498960494995
    3. '\n' → logprob: -2.840250015258789
    4. '```' → logprob: -3.840250015258789
    5. ''' → logprob: -4.340250015258789
    6. '    
' → logprob: -4.465250015258789
    7. ' ' → logprob: -4.965250015258789
    8. '(' → logprob: -5.340250015258789
    9. '    ' → logprob: -5.465250015258789
    10. ' 
' → logprob: -5.715250015258789

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7377256751060486
    2. 'This' → logprob: -1.8627257347106934
    3. 'Calculate' → logprob: -1.9877257347106934
    4. 'Initialize' → logprob: -2.4877257347106934
    5. '   ' → logprob: -3.7377257347106934
    6. 'Returns' → logprob: -3.8627257347106934
    7. 'Run' → logprob: -3.9877257347106934
    8. 'Show' → logprob: -5.112725734710693
    9. 'Runs' → logprob: -5.237725734710693
    10. 'Starts' → logprob: -5.237725734710693

Token 6: ' Lit' (ID: 45595)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3030856847763062
    2. 'This' → logprob: -1.8030856847763062
    3. 'Calculate' → logprob: -1.8030856847763062
    4. 'Initialize' → logprob: -1.9280856847763062
    5. 'Print' → logprob: -2.8030858039855957
    6. 'Start' → logprob: -3.8030858039855957
    7. 'Process' → logprob: -3.9280858039855957
    8. 'Main' → logprob: -4.178085803985596
    9. 'Runs' → logprob: -4.303085803985596
    10. '"""' → logprob: -4.428085803985596

Token 7: ' les' (ID: 1341)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.26003775000572205
    2. 'tle' → logprob: -1.7600377798080444
    3. 'e' → logprob: -3.385037660598755
    4. '   ' → logprob: -5.260037899017334
    5. '"""
' → logprob: -5.635037899017334
    6. 't' → logprob: -5.760037899017334
    7. '```' → logprob: -6.260037899017334
    8. 'ral' → logprob: -6.385037899017334
    9. 'r' → logprob: -7.010037899017334
    10. '  ' → logprob: -7.135037899017334

Token 8: ' ent' (ID: 1121)
  Prédit: ' fichiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fichiers' → logprob: -1.0520920753479004
    2. 'f' → logprob: -1.6770920753479004
    3. '   ' → logprob: -1.6770920753479004
    4. ' ' → logprob: -2.3020920753479004
    5. ' données' → logprob: -2.8020920753479004
    6. ' fichier' → logprob: -3.4270920753479004
    7. 'd' → logprob: -3.8020920753479004
    8. ' le' → logprob: -4.3020920753479
    9. 'le' → logprob: -4.9270920753479
    10. ' lignes' → logprob: -4.9270920753479

Token 9: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3870256841182709
    2. 'r' → logprob: -1.3870257139205933
    3. 'êtes' → logprob: -3.3870255947113037
    4. 'ières' → logprob: -3.8870255947113037
    5. 'etes' → logprob: -5.262025833129883
    6. 'ier' → logprob: -5.637025833129883
    7. 'rée' → logprob: -6.012025833129883
    8. 'ête' → logprob: -6.887025833129883
    9. 'er' → logprob: -7.262025833129883
    10. 'i' → logprob: -7.387025833129883

Token 10: ' N' (ID: 478)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9195355772972107
    2. ' ' → logprob: -1.4195356369018555
    3. ' d' → logprob: -2.6695356369018555
    4. ' à' → logprob: -2.9195356369018555
    5. ' du' → logprob: -3.2945356369018555
    6. '   ' → logprob: -3.2945356369018555
    7. ' suivants' → logprob: -3.5445356369018555
    8. '\n' → logprob: -3.9195356369018555
    9. ' \' → logprob: -4.2945356369018555
    10. ' et' → logprob: -4.4195356369018555

Token 11: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2208815962076187
    2. ',' → logprob: -2.470881700515747
    3. ' ' → logprob: -2.720881700515747
    4. 'et' → logprob: -4.720881462097168
    5. ''' → logprob: -5.095881462097168
    6. '```' → logprob: -5.345881462097168
    7. ' et' → logprob: -5.345881462097168
    8. '    ' → logprob: -5.595881462097168
    9. ' ,' → logprob: -5.970881462097168
    10. '  ' → logprob: -6.095881462097168

Token 12: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6552090644836426
    2. 'M' → logprob: -0.7802090644836426
    3. ' K' → logprob: -5.155209064483643
    4. 'K' → logprob: -5.530209064483643
    5. '   ' → logprob: -5.655209064483643
    6. 's' → logprob: -6.155209064483643
    7. 'les' → logprob: -6.655209064483643
    8. '```' → logprob: -6.780209064483643
    9. ' ' → logprob: -7.405209064483643
    10. 'P' → logprob: -8.030208587646484

Token 13: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1261466145515442
    2. '\n' → logprob: -2.7511465549468994
    3. '```' → logprob: -3.5011465549468994
    4. ',' → logprob: -5.2511467933654785
    5. '\' → logprob: -5.3761467933654785
    6. '    
' → logprob: -5.5011467933654785
    7. '`' → logprob: -6.5011467933654785
    8. '
' → logprob: -6.8761467933654785
    9. '    ' → logprob: -7.0011467933654785
    10. ' ' → logprob: -7.0011467933654785

Token 14: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.376965194940567
    2. ' input' → logprob: -1.7519651651382446
    3. ' l' → logprob: -2.626965284347534
    4. '   ' → logprob: -3.876965284347534
    5. ' stdin' → logprob: -3.876965284347534
    6. 'input' → logprob: -4.376965045928955
    7. 'le' → logprob: -5.126965045928955
    8. 'stdin' → logprob: -6.126965045928955
    9. 'les' → logprob: -6.501965045928955
    10. ' la' → logprob: -7.001965045928955

Token 15: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.06327641010284424
    2. 'entrée' → logprob: -3.5632762908935547
    3. 'a' → logprob: -4.063276290893555
    4. ''' → logprob: -4.313276290893555
    5. 'e' → logprob: -7.063276290893555
    6. 'input' → logprob: -7.438276290893555
    7. 'es' → logprob: -8.813276290893555
    8. '_' → logprob: -8.938276290893555
    9. '’entrée' → logprob: -9.313276290893555
    10. ''ent' → logprob: -9.438276290893555

Token 16: ' standard' (ID: 7024)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9050013422966003
    2. '   ' → logprob: -0.9050013422966003
    3. '\n' → logprob: -2.655001401901245
    4. '\' → logprob: -4.030001163482666
    5. ',
' → logprob: -4.030001163482666
    6. ' ,' → logprob: -4.405001163482666
    7. ')' → logprob: -4.655001163482666
    8. '    
' → logprob: -4.905001163482666
    9. '```' → logprob: -4.905001163482666
    10. ' ' → logprob: -5.155001163482666

Token 17: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04967554286122322
    2. ',' → logprob: -3.549675464630127
    3. '\n' → logprob: -4.424675464630127
    4. '    
' → logprob: -6.174675464630127
    5. '    ' → logprob: -6.674675464630127
    6. '```' → logprob: -6.799675464630127
    7. ')' → logprob: -7.174675464630127
    8. '  ' → logprob: -8.049675941467285
    9. '
' → logprob: -8.174675941467285
    10. '.' → logprob: -8.299675941467285

Token 18: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004134560935199261
    2. '    ' → logprob: -7.004134654998779
    3. '```' → logprob: -7.254134654998779
    4. ''' → logprob: -8.004134178161621
    5. '`' → logprob: -8.004134178161621
    6. '    
' → logprob: -8.629134178161621
    7. ' ' → logprob: -8.754134178161621
    8. 'return' → logprob: -8.754134178161621
    9. 'print' → logprob: -9.004134178161621
    10. 'continue' → logprob: -9.129134178161621

Token 19: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00015800826076883823
    2. 'ul' → logprob: -10.000158309936523
    3. 'ulé' → logprob: -10.375158309936523
    4. '\' → logprob: -10.500158309936523
    5. '```' → logprob: -10.500158309936523
    6. '_' → logprob: -12.500158309936523
    7. '#' → logprob: -13.125158309936523
    8. '**' → logprob: -13.375158309936523
    9. 'ù' → logprob: -13.500158309936523
    10. '   ' → logprob: -13.500158309936523

Token 20: ' un' (ID: 537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1064702272415161
    2. ' ' → logprob: -1.2314702272415161
    3. '```' → logprob: -2.1064701080322266
    4. '   ' → logprob: -2.3564701080322266
    5. '`' → logprob: -3.8564701080322266
    6. ' l' → logprob: -4.106470108032227
    7. 'l' → logprob: -4.231470108032227
    8. 'e' → logprob: -4.231470108032227
    9. ''' → logprob: -4.356470108032227
    10. ' la' → logprob: -4.606470108032227

Token 21: ' résultat' (ID: 62556)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0006476640701294
    2. ' ' → logprob: -1.3756476640701294
    3. ' espace' → logprob: -1.5006476640701294
    4. 'es' → logprob: -3.25064754486084
    5. '   ' → logprob: -3.87564754486084
    6. ' nombre' → logprob: -4.37564754486084
    7. 's' → logprob: -4.62564754486084
    8. '\' → logprob: -4.62564754486084
    9. ' \' → logprob: -5.12564754486084
    10. ' résultat' → logprob: -5.25064754486084

Token 22: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13569463789463043
    2. ' ' → logprob: -3.510694742202759
    3. '.' → logprob: -3.635694742202759
    4. ',' → logprob: -4.38569450378418
    5. '    
' → logprob: -4.38569450378418
    6. '
' → logprob: -5.01069450378418
    7. '\n' → logprob: -5.26069450378418
    8. '    ' → logprob: -5.51069450378418
    9. '```' → logprob: -5.51069450378418
    10. 's' → logprob: -5.63569450378418

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40995103120803833
    2. '32' → logprob: -1.7849509716033936
    3. '_' → logprob: -2.5349509716033936
    4. '```' → logprob: -3.1599509716033936
    5. '`' → logprob: -4.159951210021973
    6. ''' → logprob: -4.659951210021973
    7. '"' → logprob: -4.909951210021973
    8. '   ' → logprob: -6.284951210021973
    9. '\' → logprob: -6.534951210021973
    10. ' ' → logprob: -6.659951210021973

Token 24: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3898393213748932
    2. '100' → logprob: -1.1398392915725708
    3. ' ' → logprob: -6.639839172363281
    4. '`' → logprob: -8.139839172363281
    5. '998' → logprob: -8.139839172363281
    6. '```' → logprob: -8.139839172363281
    7. '1' → logprob: -8.889839172363281
    8. '101' → logprob: -9.639839172363281
    9. 'M' → logprob: -9.639839172363281
    10. '2' → logprob: -9.639839172363281

Token 25: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.4272752852994017e-05
    2. '_' → logprob: -11.00002384185791
    3. '247' → logprob: -12.75002384185791
    4. '```' → logprob: -13.50002384185791
    5. '444' → logprob: -13.75002384185791
    6. ',' → logprob: -14.37502384185791
    7. '2' → logprob: -15.25002384185791
    8. '\' → logprob: -15.50002384185791
    9. '344' → logprob: -15.87502384185791
    10. '24' → logprob: -15.87502384185791

Token 26: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -1.5048530030981055e-06
    2. '853' → logprob: -14.125001907348633
    3. '```' → logprob: -14.875001907348633
    4. '3' → logprob: -15.375001907348633
    5. '357' → logprob: -16.875001907348633
    6. '333' → logprob: -17.125001907348633
    7. '53' → logprob: -17.750001907348633
    8. '355' → logprob: -18.125001907348633
    9. '354' → logprob: -18.625001907348633
    10. '153' → logprob: -18.875001907348633

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38077759742736816
    2. '\n' → logprob: -1.5057775974273682
    3. '
' → logprob: -2.880777597427368
    4. '```' → logprob: -4.380777359008789
    5. '\' → logprob: -4.505777359008789
    6. '    
' → logprob: -5.505777359008789
    7. ')' → logprob: -6.255777359008789
    8. '  
' → logprob: -6.380777359008789
    9. ' ' → logprob: -6.380777359008789
    10. '' → logprob: -7.005777359008789

Token 28: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.141078233718872
    2. '   ' → logprob: -1.141078233718872
    3. '\n' → logprob: -2.266078233718872
    4. '```' → logprob: -2.266078233718872
    5. ' ' → logprob: -2.766078233718872
    6. ')
' → logprob: -3.766078233718872
    7. ',' → logprob: -4.766077995300293
    8. '  
' → logprob: -4.766077995300293
    9. '
' → logprob: -4.891077995300293
    10. '\' → logprob: -4.891077995300293

Token 29: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5937033295631409
    2. '\n' → logprob: -0.9687033295631409
    3. '```' → logprob: -3.093703269958496
    4. '\' → logprob: -4.343703269958496
    5. '    
' → logprob: -6.093703269958496
    6. '"""
' → logprob: -6.593703269958496
    7. '"""' → logprob: -6.968703269958496
    8. '
' → logprob: -6.968703269958496
    9. '  
' → logprob: -7.343703269958496
    10. 'n' → logprob: -7.468703269958496

Token 30: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1913512796163559
    2. ' ' → logprob: -3.0663511753082275
    3. ' les' → logprob: -3.0663511753082275
    4. ' le' → logprob: -3.6913511753082275
    5. ' l' → logprob: -3.8163511753082275
    6. ' une' → logprob: -4.566351413726807
    7. ' un' → logprob: -4.941351413726807
    8. '```' → logprob: -5.566351413726807
    9. ' ' → logprob: -5.941351413726807
    10. '   ' → logprob: -6.441351413726807

Token 31: ' combinaison' (ID: 165933)
  Prédit: ' règle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règle' → logprob: -1.3030864000320435
    2. ' certaine' → logprob: -1.4280864000320435
    3. ' formule' → logprob: -1.9280864000320435
    4. 'certain' → logprob: -2.678086280822754
    5. ' combinaison' → logprob: -2.803086280822754
    6. 's' → logprob: -4.053086280822754
    7. 'form' → logprob: -4.053086280822754
    8. ' méthode' → logprob: -4.178086280822754
    9. ' suite' → logprob: -4.303086280822754
    10. ' logique' → logprob: -4.303086280822754

Token 32: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18662342429161072
    2. ' ' → logprob: -2.9366233348846436
    3. ')' → logprob: -3.8116233348846436
    4. '_' → logprob: -4.186623573303223
    5. '    ' → logprob: -4.561623573303223
    6. '(' → logprob: -4.936623573303223
    7. 'n' → logprob: -5.061623573303223
    8. '\' → logprob: -5.186623573303223
    9. '    
' → logprob: -5.186623573303223
    10. ' )' → logprob: -5.311623573303223

Token 33: ' coefficients' (ID: 76338)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.5902838706970215
    2. 's' → logprob: -1.8402838706970215
    3. ' comb' → logprob: -2.7152838706970215
    4. 'l' → logprob: -2.8402838706970215
    5. ' N' → logprob: -2.9652838706970215
    6. ' nombres' → logprob: -3.2152838706970215
    7. ' l' → logprob: -3.3402838706970215
    8. ' dynamic' → logprob: -3.4652838706970215
    9. ' form' → logprob: -3.4652838706970215
    10. '```' → logprob: -4.0902838706970215

Token 34: ' bin' (ID: 6958)
  Prédit: ' bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.518892228603363
    2. ' de' → logprob: -2.268892288208008
    3. 'bin' → logprob: -2.268892288208008
    4. '_bin' → logprob: -2.268892288208008
    5. '_' → logprob: -3.143892288208008
    6. 's' → logprob: -4.143892288208008
    7. 'from' → logprob: -4.268892288208008
    8. 'import' → logprob: -4.643892288208008
    9. 'def' → logprob: -6.143892288208008
    10. ' from' → logprob: -6.268892288208008

Token 35: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.11726413667201996
    2. 'o' → logprob: -2.7422640323638916
    3. 'ôm' → logprob: -3.8672640323638916
    4. 'omial' → logprob: -3.8672640323638916
    5. 'omia' → logprob: -6.492264270782471
    6. 'ômes' → logprob: -7.617264270782471
    7. '```' → logprob: -7.617264270782471
    8. 'ô' → logprob: -8.117263793945312
    9. '\' → logprob: -8.367263793945312
    10. 'ôme' → logprob: -8.617263793945312

Token 36: 'iaux' (ID: 35231)
  Prédit: 'iaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iaux' → logprob: -0.30931439995765686
    2. 'i' → logprob: -2.059314489364624
    3. '```' → logprob: -2.309314489364624
    4. '``' → logprob: -4.934314250946045
    5. '\' → logprob: -5.184314250946045
    6. '**' → logprob: -5.809314250946045
    7. 'ial' → logprob: -6.059314250946045
    8. '{' → logprob: -6.184314250946045
    9. '*' → logprob: -6.184314250946045
    10. '   ' → logprob: -6.559314250946045

Token 37: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34995752573013306
    2. '\n' → logprob: -2.0999574661254883
    3. '\' → logprob: -2.7249574661254883
    4. '
' → logprob: -3.4749574661254883
    5. '    
' → logprob: -4.224957466125488
    6. ')' → logprob: -4.349957466125488
    7. ' ' → logprob: -4.724957466125488
    8. ' 
' → logprob: -4.974957466125488
    9. '```' → logprob: -4.974957466125488
    10. '  
' → logprob: -5.099957466125488

Token 38: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8469039797782898
    2. ' ' → logprob: -1.0969040393829346
    3. '    ' → logprob: -1.5969040393829346
    4. '  ' → logprob: -5.2219038009643555
    5. ' ' → logprob: -5.4719038009643555
    6. ' 
' → logprob: -5.9719038009643555
    7. ' """
' → logprob: -6.0969038009643555
    8. ' et' → logprob: -6.2219038009643555
    9. ' )' → logprob: -6.4719038009643555
    10. '```' → logprob: -6.5969038009643555

Token 39: ' puiss' (ID: 102546)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.1515603065490723
    2. 's' → logprob: -2.4015603065490723
    3. ' nombres' → logprob: -2.4015603065490723
    4. ' la' → logprob: -2.5265603065490723
    5. ' facteurs' → logprob: -2.5265603065490723
    6. ' coefficients' → logprob: -3.1515603065490723
    7. ' chaînes' → logprob: -3.7765603065490723
    8. ' combin' → logprob: -3.7765603065490723
    9. ' factor' → logprob: -3.9015603065490723
    10. ' puiss' → logprob: -4.026560306549072

Token 40: 'ances' (ID: 3528)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002536782529205084
    2. 'e' → logprob: -6.502536773681641
    3. 'an' → logprob: -7.127536773681641
    4. 'ances' → logprob: -8.87753677368164
    5. 'é' → logprob: -10.12753677368164
    6. 'ance' → logprob: -11.00253677368164
    7. '#' → logprob: -11.50253677368164
    8. 'á' → logprob: -12.50253677368164
    9. '=' → logprob: -12.62753677368164
    10. 'anc' → logprob: -12.75253677368164

Token 41: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3055959939956665
    2. ' de' → logprob: -2.555595874786377
    3. ')' → logprob: -2.680595874786377
    4. '  ' → logprob: -3.680595874786377
    5. ' )' → logprob: -3.805595874786377
    6. '_' → logprob: -4.180595874786377
    7. ' ,' → logprob: -4.555595874786377
    8. ',' → logprob: -4.555595874786377
    9. ' et' → logprob: -4.930595874786377
    10. '   ' → logprob: -5.180595874786377

Token 42: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3800411820411682
    2. ' de' → logprob: -1.2550411224365234
    3. ' des' → logprob: -4.255041122436523
    4. 'd' → logprob: -4.755041122436523
    5. 'de' → logprob: -5.130041122436523
    6. ' ' → logprob: -7.880041122436523
    7. 'def' → logprob: -8.380041122436523
    8. 'des' → logprob: -8.630041122436523
    9. ' commentaires' → logprob: -8.880041122436523
    10. '   ' → logprob: -8.880041122436523

Token 43: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -1.5603021383285522
    2. ' multip' → logprob: -1.6853021383285522
    3. ' facteurs' → logprob: -1.9353021383285522
    4. ' factor' → logprob: -2.935302257537842
    5. ' opérations' → logprob: -3.060302257537842
    6. ' fonctions' → logprob: -3.560302257537842
    7. ' exponent' → logprob: -3.685302257537842
    8. 'factor' → logprob: -3.810302257537842
    9. ' logarith' → logprob: -3.810302257537842
    10. ' produits' → logprob: -3.810302257537842

Token 44: 'ori' (ID: 6510)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0002116462419508025
    2. '```' → logprob: -9.125211715698242
    3. 'u' → logprob: -10.375211715698242
    4. 'ori' → logprob: -10.625211715698242
    5. '\' → logprob: -11.500211715698242
    6. 'i' → logprob: -11.750211715698242
    7. 'or' → logprob: -12.000211715698242
    8. 'e' → logprob: -12.500211715698242
    9. 'orial' → logprob: -12.750211715698242
    10. '``' → logprob: -13.375211715698242

Token 45: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.10928851366043091
    2. 'els' → logprob: -2.484288454055786
    3. 'el' → logprob: -5.109288692474365
    4. 'elle' → logprob: -5.234288692474365
    5. '```' → logprob: -6.484288692474365
    6. 'eles' → logprob: -6.609288692474365
    7. '``' → logprob: -7.234288692474365
    8. 'e' → logprob: -7.234288692474365
    9. '`' → logprob: -7.484288692474365
    10. 'al' → logprob: -7.609288692474365

Token 46: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22800251841545105
    2. '\' → logprob: -2.8530025482177734
    3. '\n' → logprob: -3.1030025482177734
    4. '
' → logprob: -3.1030025482177734
    5. '    
' → logprob: -3.6030025482177734
    6. 'n' → logprob: -4.853002548217773
    7. '   
' → logprob: -5.603002548217773
    8. '  
' → logprob: -5.853002548217773
    9. ' ' → logprob: -5.978002548217773
    10. '    ' → logprob: -6.228002548217773

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013192851329222322
    2. '"""' → logprob: -7.626319408416748
    3. '```' → logprob: -8.50131893157959
    4. '    
' → logprob: -8.50131893157959
    5. '\n' → logprob: -8.75131893157959
    6. 'n' → logprob: -9.62631893157959
    7. '    ' → logprob: -9.75131893157959
    8. '"' → logprob: -10.37631893157959
    9. '\' → logprob: -10.87631893157959
    10. ')' → logprob: -11.12631893157959

Token 48: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03089219331741333
    2. '
' → logprob: -4.780892372131348
    3. 'n' → logprob: -5.030892372131348
    4. '\n' → logprob: -5.155892372131348
    5. ' 
' → logprob: -6.030892372131348
    6. '    
' → logprob: -6.155892372131348
    7. '```' → logprob: -6.280892372131348
    8. '\' → logprob: -7.405892372131348
    9. '"""' → logprob: -7.405892372131348
    10. ' ' → logprob: -8.030892372131348

Token 49: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.026714753359556198
    2. 'ic' → logprob: -3.65171480178833
    3. 'i' → logprob: -8.651714324951172
    4. '   ' → logprob: -9.151714324951172
    5. 'icher' → logprob: -9.901714324951172
    6. 'ich' → logprob: -10.526714324951172
    7. 'ichage' → logprob: -11.151714324951172
    8. 'che' → logprob: -11.776714324951172
    9. '       ' → logprob: -12.276714324951172
    10. ' iche' → logprob: -12.776714324951172

Token 50: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02517496421933174
    2. ' le' → logprob: -4.275175094604492
    3. '(' → logprob: -5.650175094604492
    4. ' un' → logprob: -6.400175094604492
    5. ' la' → logprob: -6.525175094604492
    6. 's' → logprob: -6.900175094604492
    7. ' l' → logprob: -7.400175094604492
    8. ' les' → logprob: -7.525175094604492
    9. '    ' → logprob: -7.775175094604492
    10. '  ' → logprob: -7.900175094604492

Token 51: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.11601799726486206
    2. ' ' → logprob: -2.866018056869507
    3. ' resultat' → logprob: -3.616018056869507
    4. ' result' → logprob: -4.116017818450928
    5. 's' → logprob: -5.616017818450928
    6. 'result' → logprob: -6.741017818450928
    7. 'r' → logprob: -6.866017818450928
    8. ' nombre' → logprob: -6.991017818450928
    9. 'rés' → logprob: -7.616017818450928
    10. ' résultats' → logprob: -7.866017818450928

Token 52: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24600130319595337
    2. '```' → logprob: -3.2460012435913086
    3. '.' → logprob: -3.3710012435913086
    4. '\n' → logprob: -3.6210012435913086
    5. '
' → logprob: -3.7460012435913086
    6. ' ' → logprob: -3.8710012435913086
    7. '  ' → logprob: -4.121001243591309
    8. ')' → logprob: -4.496001243591309
    9. '    
' → logprob: -4.996001243591309
    10. '<|end|>' → logprob: -5.121001243591309

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22611697018146515
    2. '"""' → logprob: -1.7261170148849487
    3. '"""
' → logprob: -4.726117134094238
    4. '```' → logprob: -4.851117134094238
    5. '"' → logprob: -5.601117134094238
    6. '""' → logprob: -6.601117134094238
    7. ' """' → logprob: -6.976117134094238
    8. '
' → logprob: -7.601117134094238
    9. ' """
' → logprob: -8.101117134094238
    10. ')' → logprob: -8.601117134094238

Token 54: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07885541021823883
    2. '```' → logprob: -3.578855514526367
    3. '
' → logprob: -3.953855514526367
    4. '\n' → logprob: -4.078855514526367
    5. '"""' → logprob: -4.828855514526367
    6. '    
' → logprob: -7.203855514526367
    7. '"""
' (adapté à ' """
') → logprob: -7.453855514526367
    8. 'n' → logprob: -7.453855514526367
    9. '\' → logprob: -7.578855514526367
    10. ' 
' → logprob: -7.828855514526367

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011378013528883457
    2. '
' → logprob: -5.386377811431885
    3. '    
' → logprob: -6.011377811431885
    4. '\n' → logprob: -6.136377811431885
    5. 'n' → logprob: -6.886377811431885
    6. 'import' → logprob: -8.011378288269043
    7. '```' → logprob: -8.761378288269043
    8. '    ' → logprob: -8.886378288269043
    9. '\' → logprob: -8.886378288269043
    10. 'N' → logprob: -9.011378288269043

Token 56: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30256617069244385
    2. 'N' (adapté à ' N') → logprob: -1.5525661706924438
    3. '   ' → logprob: -3.9275660514831543
    4. '\n' → logprob: -4.177566051483154
    5. '#' → logprob: -5.552566051483154
    6. ' 
' → logprob: -5.802566051483154
    7. ' \' → logprob: -6.552566051483154
    8. 'import' → logprob: -6.927566051483154
    9. '_' → logprob: -7.052566051483154
    10. '\' → logprob: -7.052566051483154

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010881858179345727
    2. ' ,' → logprob: -6.8760881423950195
    3. ' =' → logprob: -10.00108814239502
    4. '=' → logprob: -11.75108814239502
    5. ',N' → logprob: -14.62608814239502
    6. ',n' → logprob: -14.87608814239502
    7. '   ' → logprob: -15.12608814239502
    8. ' ' → logprob: -15.12608814239502
    9. ')' → logprob: -15.25108814239502
    10. ',int' → logprob: -16.251089096069336

Token 58: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.13694877922534943
    2. 'M' → logprob: -2.136948823928833
    3. ' ' → logprob: -4.761948585510254
    4. ' =' → logprob: -7.511948585510254
    5. ' ' → logprob: -8.136948585510254
    6. '  ' → logprob: -8.511948585510254
    7. '=' → logprob: -9.136948585510254
    8. 'space' → logprob: -9.761948585510254
    9. '<|end|>' → logprob: -9.761948585510254
    10. '    ' → logprob: -9.886948585510254

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020545274019241333
    2. '=' → logprob: -3.895545244216919
    3. ',' → logprob: -13.02054500579834
    4. '=input' → logprob: -14.02054500579834
    5. '=int' → logprob: -15.64554500579834
    6. ' ' → logprob: -16.270545959472656
    7. ')' → logprob: -16.520545959472656
    8. ' =
' → logprob: -17.520545959472656
    9. ' =
' → logprob: -18.770545959472656
    10. '```' → logprob: -18.770545959472656

Token 60: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.003222510451450944
    2. 'map' → logprob: -5.753222465515137
    3. ' list' → logprob: -10.878222465515137
    4. ' ' → logprob: -11.128222465515137
    5. ' ' → logprob: -12.878222465515137
    6. ' [' → logprob: -12.878222465515137
    7. ' input' → logprob: -13.128222465515137
    8. ' tuple' → logprob: -13.378222465515137
    9. '	map' → logprob: -14.128222465515137
    10. ' int' → logprob: -14.503222465515137

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2524992525577545
    2. '(' → logprob: -1.5024992227554321
    3. '(input' → logprob: -7.502499103546143
    4. '(
' → logprob: -11.6274995803833
    5. 'int' → logprob: -12.1274995803833
    6. '(str' → logprob: -13.0024995803833
    7. 'input' → logprob: -15.0024995803833
    8. '(list' → logprob: -15.1274995803833
    9. '(eval' → logprob: -15.3774995803833
    10. '<int' → logprob: -15.5024995803833

Token 62: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22789128124713898
    2. 'input' → logprob: -1.8528913259506226
    3. ')' → logprob: -3.477891206741333
    4. ',input' → logprob: -5.227891445159912
    5. ' input' → logprob: -5.352891445159912
    6. '(' → logprob: -5.352891445159912
    7. ',' → logprob: -6.852891445159912
    8. '=input' → logprob: -8.852890968322754
    9. '   ' → logprob: -10.852890968322754
    10. '	input' → logprob: -11.227890968322754

Token 63: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04858986660838127
    2. 'input' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.423589706420898
    4. ')' → logprob: -14.548589706420898
    5. '	input' → logprob: -15.298589706420898
    6. '=input' → logprob: -16.2985897064209
    7. '(input' → logprob: -16.4235897064209
    8. '   ' → logprob: -16.7985897064209
    9. ',input' → logprob: -17.0485897064209
    10. ' )' → logprob: -17.4235897064209

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003722884226590395
    2. '())' → logprob: -6.128722667694092
    3. '()' → logprob: -6.503722667694092
    4. ')' → logprob: -10.25372314453125
    5. ' ().' → logprob: -13.75372314453125
    6. '(' → logprob: -14.37872314453125
    7. '()
' → logprob: -14.75372314453125
    8. '()))' → logprob: -15.00372314453125
    9. ' ())' → logprob: -15.75372314453125
    10. '()).' → logprob: -15.87872314453125

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012582694762386382
    2. 'strip' → logprob: -9.000125885009766
    3. 'rstrip' → logprob: -13.625125885009766
    4. ')' → logprob: -14.250125885009766
    5. ' split' → logprob: -15.125125885009766
    6. '(split' → logprob: -15.625125885009766
    7. 'spl' → logprob: -16.000125885009766
    8. 'read' → logprob: -17.750125885009766
    9. '()' → logprob: -18.500125885009766
    10. 's' → logprob: -19.000125885009766

Token 66: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003640215378254652
    2. '))' → logprob: -5.628640174865723
    3. ')))' → logprob: -11.253640174865723
    4. '(' → logprob: -11.753640174865723
    5. '())' → logprob: -11.753640174865723
    6. '()' → logprob: -12.628640174865723
    7. ' )' → logprob: -13.253640174865723
    8. ')`' → logprob: -13.628640174865723
    9. '),' → logprob: -13.753640174865723
    10. ')")' → logprob: -14.253640174865723

Token 67: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7264626622200012
    2. '
' → logprob: -1.6014626026153564
    3. '\' → logprob: -1.9764626026153564
    4. ' 
' → logprob: -2.8514626026153564
    5. 'n' → logprob: -3.7264626026153564
    6. ' ' → logprob: -4.2264628410339355
    7. '   ' → logprob: -4.2264628410339355
    8. '```' → logprob: -4.2264628410339355
    9. '    
' → logprob: -4.4764628410339355
    10. '' → logprob: -4.8514628410339355

Token 68: ' mod' (ID: 1812)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.217571496963501
    2. 'result' → logprob: -1.842571496963501
    3. ' 
' → logprob: -1.967571496963501
    4. ' ' → logprob: -2.092571496963501
    5. 'n' → logprob: -2.342571496963501
    6. '\' → logprob: -3.217571496963501
    7. '   ' → logprob: -3.592571496963501
    8. 'c' → logprob: -3.967571496963501
    9. '```' → logprob: -4.217571258544922
    10. '\n' → logprob: -4.342571258544922

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20158357918262482
    2. '=' → logprob: -1.7015836238861084
    3. ',' → logprob: -9.826583862304688
    4. ')' → logprob: -10.576583862304688
    5. '<|end|>' → logprob: -10.576583862304688
    6. ' ' → logprob: -10.826583862304688
    7. '_' → logprob: -11.201583862304688
    8. ' ' → logprob: -12.451583862304688
    9. '.' → logprob: -12.451583862304688
    10. '  ' → logprob: -12.701583862304688

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015040287980809808
    2. '998' → logprob: -6.501503944396973
    3. '999' → logprob: -13.751503944396973
    4. ''' → logprob: -15.501503944396973
    5. ' ' → logprob: -15.751503944396973
    6. '9' → logprob: -16.62650489807129
    7. '"' → logprob: -16.75150489807129
    8. ' )' → logprob: -17.00150489807129
    9. ' 

' → logprob: -17.87650489807129
    10. '`' → logprob: -18.00150489807129

Token 71: '998' (ID: 34589)
  Prédit: '998'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '998' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -8.750161170959473
    3. '999' → logprob: -12.875161170959473
    4. '9' → logprob: -16.75016212463379
    5. '988' → logprob: -17.87516212463379
    6. '`' → logprob: -18.12516212463379
    7. '   ' → logprob: -19.00016212463379
    8. '997' → logprob: -19.25016212463379
    9. '10' → logprob: -19.75016212463379
    10. '  ' → logprob: -20.00016212463379

Token 72: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -6.511406809295295e-06
    2. '2' → logprob: -12.250006675720215
    3. '24' → logprob: -13.750006675720215
    4. ' ' → logprob: -15.625006675720215
    5. '```' → logprob: -16.2500057220459
    6. ',' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.7500057220459
    8. '234' → logprob: -17.0000057220459
    9. '344' → logprob: -17.0000057220459
    10. '`' → logprob: -17.7500057220459

Token 73: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -1.8624639324116288e-06
    2. '3' → logprob: -14.250001907348633
    3. '354' → logprob: -14.625001907348633
    4. '35' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.250001907348633
    6. '343' → logprob: -16.250001907348633
    7. '53' → logprob: -16.500001907348633
    8. '_' → logprob: -17.000001907348633
    9. '453' → logprob: -17.125001907348633
    10. '```' → logprob: -17.375001907348633

Token 74: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0370367132127285
    2. '    
' → logprob: -4.162036895751953
    3. '   ' → logprob: -5.662036895751953
    4. '' → logprob: -5.912036895751953
    5. ' 
' → logprob: -5.912036895751953
    6. '\n' → logprob: -6.162036895751953
    7. 'n' → logprob: -6.412036895751953
    8. '<|end|>' → logprob: -6.412036895751953
    9. '     
' → logprob: -7.037036895751953
    10. '
    
' → logprob: -7.162036895751953

Token 75: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03373560309410095
    2. '' → logprob: -4.783735752105713
    3. '\n' → logprob: -4.908735752105713
    4. 'n' → logprob: -5.408735752105713
    5. '   ' → logprob: -5.783735752105713
    6. '    
' → logprob: -6.033735752105713
    7. '<|end|>' → logprob: -6.658735752105713
    8. '
' → logprob: -6.908735752105713
    9. '\' → logprob: -7.158735752105713
    10. '
    
' → logprob: -7.283735752105713

Token 76: ' Mod' (ID: 7191)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21120162308216095
    2. '#' → logprob: -3.3362016677856445
    3. ' 
' → logprob: -3.3362016677856445
    4. ' #' → logprob: -3.8362016677856445
    5. 'mod' → logprob: -3.8362016677856445
    6. ' mod' → logprob: -3.9612016677856445
    7. 'n' → logprob: -4.7112016677856445
    8. '<|end|>' → logprob: -4.7112016677856445
    9. ' ' → logprob: -4.9612016677856445
    10. '```' → logprob: -5.7112016677856445

Token 77: 'ulo' (ID: 5953)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.7724823355674744
    2. '=' → logprob: -1.7724823951721191
    3. ' =' → logprob: -2.147482395172119
    4. 'ulus' → logprob: -2.522482395172119
    5. 'ulo' → logprob: -2.897482395172119
    6. 'ular' → logprob: -2.897482395172119
    7. 'ul' → logprob: -3.647482395172119
    8. 'ulaire' → logprob: -3.897482395172119
    9. 'ulu' → logprob: -6.022482395172119
    10. 'ULO' → logprob: -6.022482395172119

Token 78: ' utilisé' (ID: 53138)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2895216941833496
    2. '
' → logprob: -1.4145216941833496
    3. '<|end|>' → logprob: -1.4145216941833496
    4. '\n' → logprob: -2.7895216941833496
    5. '<|end|>' → logprob: -3.1645216941833496
    6. '' → logprob: -3.7895216941833496
    7. '    
' → logprob: -3.7895216941833496
    8. '   ' → logprob: -4.16452169418335
    9. '```' → logprob: -4.41452169418335
    10. ' ' → logprob: -4.53952169418335

Token 79: ' pour' (ID: 1930)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.9049533009529114
    2. '   ' → logprob: -1.1549532413482666
    3. '
' → logprob: -2.0299532413482666
    4. '<|end|>' → logprob: -3.1549532413482666
    5. 'n' → logprob: -4.029953479766846
    6. '<|end|>' → logprob: -4.154953479766846
    7. '    ' → logprob: -4.279953479766846
    8. '\n' → logprob: -4.654953479766846
    9. ' 
' → logprob: -5.029953479766846
    10. ' ' → logprob: -5.029953479766846

Token 80: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4586390256881714
    2. ' le' → logprob: -1.2086390256881714
    3. ' la' → logprob: -3.208639144897461
    4. 'le' → logprob: -4.958639144897461
    5. 'les' → logprob: -4.958639144897461
    6. ' calcul' → logprob: -5.583639144897461
    7. 'calcul' → logprob: -5.583639144897461
    8. ' effectuer' → logprob: -6.458639144897461
    9. 'la' → logprob: -7.208639144897461
    10. ' l' → logprob: -7.333639144897461

Token 81: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03291730582714081
    2. 'les' → logprob: -3.9079172611236572
    3. ' ' → logprob: -4.657917499542236
    4. ' opérations' → logprob: -7.282917499542236
    5. ' l' → logprob: -7.907917499542236
    6. ' le' → logprob: -7.907917499542236
    7. 'l' → logprob: -7.907917499542236
    8. ' operations' → logprob: -8.157917022705078
    9. 'calcul' → logprob: -8.532917022705078
    10. ' calculations' → logprob: -9.032917022705078

Token 82: ' opérations' (ID: 102793)
  Prédit: ' opérations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' opérations' → logprob: -0.21717335283756256
    2. 'op' → logprob: -2.0921733379364014
    3. ' op' → logprob: -3.2171733379364014
    4. ' ' → logprob: -4.0921735763549805
    5. 'calcul' → logprob: -4.7171735763549805
    6. ' calcul' → logprob: -6.3421735763549805
    7. 'operations' → logprob: -6.5921735763549805
    8. ' operations' → logprob: -6.7171735763549805
    9. ''op' → logprob: -7.4671735763549805
    10. '   ' → logprob: -8.09217357635498

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13086353242397308
    2. 'n' → logprob: -3.0058634281158447
    3. '\n' → logprob: -3.7558634281158447
    4. '```' → logprob: -4.380863666534424
    5. '\' → logprob: -4.630863666534424
    6. '    
' → logprob: -4.755863666534424
    7. '   ' → logprob: -5.130863666534424
    8. '' → logprob: -6.005863666534424
    9. '  
' → logprob: -6.380863666534424
    10. '<|end|>' → logprob: -6.630863666534424

Token 84: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5795375108718872
    2. '   ' → logprob: -1.4545375108718872
    3. ' 
' → logprob: -2.5795373916625977
    4. '    
' → logprob: -3.4545373916625977
    5. '#' → logprob: -3.5795373916625977
    6. '
' → logprob: -3.8295373916625977
    7. '```' → logprob: -4.454537391662598
    8. 'f' → logprob: -4.704537391662598
    9. ' ' → logprob: -5.079537391662598
    10. '  
' → logprob: -5.704537391662598

Token 85: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.17390449345111847
    2. 'max' → logprob: -2.4239044189453125
    3. 'factor' → logprob: -3.1739044189453125
    4. 'fac' → logprob: -4.0489044189453125
    5. '#' (adapté à ' #') → logprob: -4.7989044189453125
    6. 'if' → logprob: -6.5489044189453125
    7. 'def' → logprob: -7.5489044189453125
    8. 'f' → logprob: -7.5489044189453125
    9. 'MAX' → logprob: -7.9239044189453125
    10. 'facts' → logprob: -8.423904418945312

Token 86: ' É' (ID: 10055)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9766436815261841
    2. 'max' → logprob: -1.476643681526184
    3. 'f' → logprob: -1.726643681526184
    4. 'factor' → logprob: -2.3516435623168945
    5. 'fac' → logprob: -2.7266435623168945
    6. '#' → logprob: -3.8516435623168945
    7. ' max' → logprob: -4.6016435623168945
    8. 'n' → logprob: -5.3516435623168945
    9. '   ' → logprob: -5.7266435623168945
    10. 'MAX' → logprob: -5.8516435623168945

Token 87: 'change' (ID: 4939)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13668344914913177
    2. 'fac' → logprob: -3.261683464050293
    3. 'n' → logprob: -4.261683464050293
    4. 'f' → logprob: -4.511683464050293
    5. 'factor' → logprob: -4.511683464050293
    6. 'fact' → logprob: -4.636683464050293
    7. ' #' → logprob: -5.011683464050293
    8. 'tab' → logprob: -5.011683464050293
    9. 'max' → logprob: -5.386683464050293
    10. 'x' → logprob: -5.386683464050293

Token 88: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6644991040229797
    2. '(' → logprob: -2.039499044418335
    3. ' N' → logprob: -2.664499044418335
    4. 's' → logprob: -3.164499044418335
    5. 'N' → logprob: -3.289499044418335
    6. ' ' → logprob: -3.289499044418335
    7. ' =' → logprob: -3.414499044418335
    8. '(N' → logprob: -3.789499044418335
    9. '    ' → logprob: -4.164499282836914
    10. 'n' → logprob: -4.539499282836914

Token 89: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003550297114998102
    2. ' ,' → logprob: -6.7535505294799805
    3. ' et' → logprob: -7.1285505294799805
    4. ' ' → logprob: -7.6285505294799805
    5. 'et' → logprob: -7.7535505294799805
    6. '=' → logprob: -9.00355052947998
    7. '>' → logprob: -9.25355052947998
    8. '<' → logprob: -9.62855052947998
    9. 'and' → logprob: -10.12855052947998
    10. ' and' → logprob: -10.25355052947998

Token 90: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.38699617981910706
    2. 'M' → logprob: -1.1369961500167847
    3. '   ' → logprob: -9.761996269226074
    4. ' ' → logprob: -10.511996269226074
    5. ' ' → logprob: -11.011996269226074
    6. '<|end|>' → logprob: -12.136996269226074
    7. '    ' → logprob: -12.261996269226074
    8. '  ' → logprob: -12.261996269226074
    9. '```' → logprob: -13.511996269226074
    10. 's' → logprob: -13.511996269226074

Token 91: ' pour' (ID: 1930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026317138224840164
    2. '   ' → logprob: -4.151317119598389
    3. ',
' → logprob: -5.776317119598389
    4. '    
' → logprob: -6.651317119598389
    5. ' if' → logprob: -6.776317119598389
    6. 'N' → logprob: -7.276317119598389
    7. 'if' → logprob: -7.276317119598389
    8. ' ' → logprob: -7.526317119598389
    9. ' ,' → logprob: -7.526317119598389
    10. '
' → logprob: -8.151317596435547

Token 92: ' s' (ID: 265)
  Prédit: ' garantir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' garantir' → logprob: -0.6627668142318726
    2. ' assurer' → logprob: -1.4127668142318726
    3. ' M' → logprob: -2.162766933441162
    4. ' s' → logprob: -3.162766933441162
    5. ' N' → logprob: -3.412766933441162
    6. ' que' → logprob: -4.662766933441162
    7. '   ' → logprob: -4.787766933441162
    8. 'M' → logprob: -5.787766933441162
    9. ' ensure' → logprob: -5.787766933441162
    10. ' if' → logprob: -5.912766933441162

Token 93: ''assurer' (ID: 193756)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5214088559150696
    2. ''assurer' → logprob: -1.3964087963104248
    3. '   ' → logprob: -3.396408796310425
    4. 'e' → logprob: -3.521408796310425
    5. '>' → logprob: -3.771408796310425
    6. ' if' → logprob: -4.396409034729004
    7. 'u' → logprob: -4.896409034729004
    8. 'if' → logprob: -5.146409034729004
    9. '    ' → logprob: -5.271409034729004
    10. '’assurer' → logprob: -5.396409034729004

Token 94: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.738679826259613
    2. ' que' → logprob: -1.3636798858642578
    3. '    ' → logprob: -1.6136798858642578
    4. ' ' → logprob: -4.113679885864258
    5. '  ' → logprob: -4.238679885864258
    6. ' N' → logprob: -4.488679885864258
    7. ' that' → logprob: -5.613679885864258
    8. ' if' → logprob: -5.738679885864258
    9. ' ' → logprob: -5.863679885864258
    10. ' M' → logprob: -5.988679885864258

Token 95: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.08719634264707565
    2. 'N' → logprob: -2.5871963500976562
    3. ' M' → logprob: -4.837196350097656
    4. 'M' → logprob: -8.087196350097656
    5. ' ' → logprob: -11.212196350097656
    6. '   ' → logprob: -11.587196350097656
    7. 'n' → logprob: -12.587196350097656
    8. ' ' → logprob: -13.087196350097656
    9. ' n' → logprob: -13.337196350097656
    10. ' le' → logprob: -14.087196350097656

Token 96: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23423132300376892
    2. ' >=' → logprob: -1.7342313528060913
    3. '<=' → logprob: -3.6092312335968018
    4. '>=' → logprob: -5.359231472015381
    5. ' >' → logprob: -8.859230995178223
    6. ' <' → logprob: -9.109230995178223
    7. ' ≤' → logprob: -9.859230995178223
    8. '<|end|>' → logprob: -9.859230995178223
    9. ' ' → logprob: -10.734230995178223
    10. '>' → logprob: -10.859230995178223

Token 97: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1269553005695343
    2. ' M' → logprob: -2.126955270767212
    3. ' ' → logprob: -10.626955032348633
    4. ' ' → logprob: -13.626955032348633
    5. '  ' → logprob: -14.376955032348633
    6. '   ' → logprob: -14.876955032348633
    7. '    ' → logprob: -15.251955032348633
    8. '	M' → logprob: -15.626955032348633
    9. '<|end|>' → logprob: -15.626955032348633
    10. '```' → logprob: -16.751955032348633

Token 98: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01153049897402525
    2. '   ' → logprob: -5.76153039932251
    3. '<|end|>' → logprob: -6.13653039932251
    4. '    
' → logprob: -6.38653039932251
    5. '  
' → logprob: -6.38653039932251
    6. 'if' → logprob: -7.01153039932251
    7. ' if' → logprob: -7.13653039932251
    8. '\n' → logprob: -7.88653039932251
    9. ' 
' → logprob: -8.386530876159668
    10. '```' → logprob: -9.136530876159668

Token 99: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2699514329433441
    2. ' if' → logprob: -2.269951343536377
    3. 'if' → logprob: -2.519951343536377
    4. '    
' → logprob: -3.894951343536377
    5. ' 
' → logprob: -4.769951343536377
    6. '    ' → logprob: -4.769951343536377
    7. '```' → logprob: -5.644951343536377
    8. ' N' → logprob: -6.769951343536377
    9. '    

' → logprob: -6.894951343536377
    10. ' ' → logprob: -7.019951343536377

Token 100: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3285901546478271
    2. ''' → logprob: -1.7035901546478271
    3. 'n' → logprob: -2.078590154647827
    4. '   ' → logprob: -2.453590154647827
    5. ' '' → logprob: -3.078590154647827
    6. 'l' → logprob: -3.078590154647827
    7. 'u' → logprob: -3.453590154647827
    8. 'pend' → logprob: -3.578590154647827
    9. ' n' → logprob: -3.828590154647827
    10. '    ' → logprob: -4.328590393066406

Token 101: ' optimise' (ID: 143741)
  Prédit: ' garantit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' garantit' → logprob: -0.5468388795852661
    2. ' permet' → logprob: -1.6718388795852661
    3. ' est' → logprob: -2.5468387603759766
    4. ':' → logprob: -3.2968387603759766
    5. ' assure' → logprob: -3.6718387603759766
    6. ' permettra' → logprob: -3.9218387603759766
    7. ' facilite' → logprob: -4.671838760375977
    8. 's' → logprob: -4.921838760375977
    9. ' garant' → logprob: -5.046838760375977
    10. ' garanti' → logprob: -5.296838760375977

Token 102: ' certaines' (ID: 46662)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9497308731079102
    2. '   ' → logprob: -1.9497308731079102
    3. ' ' → logprob: -2.07473087310791
    4. ' l' → logprob: -2.57473087310791
    5. ' N' → logprob: -2.94973087310791
    6. '    
' → logprob: -3.44973087310791
    7. '```' → logprob: -3.44973087310791
    8. '<|end|>' → logprob: -3.57473087310791
    9. ' la' → logprob: -3.69973087310791
    10. ' le' → logprob: -3.69973087310791

Token 103: ' bou' (ID: 17573)
  Prédit: '  
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  
' → logprob: -1.332398772239685
    2. ' 
' → logprob: -1.582398772239685
    3. '    
' → logprob: -1.707398772239685
    4. ' opérations' → logprob: -1.832398772239685
    5. '
' → logprob: -2.0823988914489746
    6. '   
' → logprob: -3.4573988914489746
    7. '   ' → logprob: -4.832398891448975
    8. ' lignes' → logprob: -5.082398891448975
    9. '\n' → logprob: -5.707398891448975
    10. ' operations' → logprob: -5.957398891448975

Token 104: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.07061249017715454
    2. '   ' → logprob: -3.6956124305725098
    3. 'c' → logprob: -4.57061243057251
    4. 'cl' → logprob: -5.19561243057251
    5. '```' → logprob: -5.19561243057251
    6. 'n' → logprob: -5.57061243057251
    7. 'ff' → logprob: -5.57061243057251
    8. 'cle' → logprob: -5.94561243057251
    9. 'f' → logprob: -6.69561243057251
    10. 'nd' → logprob: -6.69561243057251

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015655387192964554
    2. '
' → logprob: -4.390655517578125
    3. '    
' → logprob: -5.890655517578125
    4. 'if' → logprob: -8.515655517578125
    5. ' if' → logprob: -9.140655517578125
    6. '  
' → logprob: -11.015655517578125
    7. ' 
' → logprob: -11.765655517578125
    8. '\n' → logprob: -11.890655517578125
    9. '   
' → logprob: -12.015655517578125
    10. '    ' → logprob: -12.515655517578125

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06328995525836945
    2. '
' → logprob: -2.9382898807525635
    3. '    
' → logprob: -4.938290119171143
    4. 'if' → logprob: -7.563290119171143
    5. '  
' → logprob: -8.438289642333984
    6. ' if' → logprob: -8.563289642333984
    7. '   
' → logprob: -9.438289642333984
    8. '  ' → logprob: -10.063289642333984
    9. '```' → logprob: -10.188289642333984
    10. '\n' → logprob: -10.313289642333984

Token 107: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10016590356826782
    2. 'if' (adapté à ' if') → logprob: -2.725165843963623
    3. ' if' → logprob: -3.850165843963623
    4. '    
' → logprob: -5.725165843963623
    5. '
' → logprob: -6.100165843963623
    6. ' 
' → logprob: -6.225165843963623
    7. '  
' → logprob: -8.100166320800781
    8. '```' → logprob: -8.475166320800781
    9. ' ' → logprob: -8.850166320800781
    10. '\n' → logprob: -9.225166320800781

Token 108: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.013240472413599491
    2. 'N' → logprob: -4.388240337371826
    3. ' ' → logprob: -7.638240337371826
    4. ' M' → logprob: -8.638240814208984
    5. ' ' → logprob: -10.013240814208984
    6. '	N' → logprob: -11.888240814208984
    7. ' not' → logprob: -12.138240814208984
    8. '   ' → logprob: -12.638240814208984
    9. '  ' → logprob: -13.013240814208984
    10. 'M' → logprob: -13.138240814208984

Token 109: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01820414699614048
    2. '>' → logprob: -4.018204212188721
    3. ' ' → logprob: -10.393203735351562
    4. ' <' → logprob: -11.018203735351562
    5. ' >
' → logprob: -12.768203735351562
    6. '>N' → logprob: -13.393203735351562
    7. ' >
' → logprob: -14.518203735351562
    8. '<' → logprob: -14.768203735351562
    9. ' >

' → logprob: -15.018203735351562
    10. ',' → logprob: -15.018203735351562

Token 110: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.03851992264389992
    2. 'M' → logprob: -3.288519859313965
    3. ' ' → logprob: -7.663519859313965
    4. ' ' → logprob: -12.288519859313965
    5. '    ' → logprob: -13.663519859313965
    6. '=' → logprob: -13.913519859313965
    7. '  ' → logprob: -14.038519859313965
    8. '	M' → logprob: -15.288519859313965
    9. '   ' → logprob: -15.288519859313965
    10. '<|end|>' → logprob: -15.913519859313965

Token 111: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4332559108734131
    2. ':' → logprob: -1.058255910873413
    3. '   ' → logprob: -6.433256149291992
    4. ':
' → logprob: -6.933256149291992
    5. ' :' → logprob: -7.308256149291992
    6. '):' → logprob: -7.433256149291992
    7. ')' → logprob: -7.808256149291992
    8. ' ,' → logprob: -9.808256149291992
    9. ',
' → logprob: -9.808256149291992
    10. '):
' → logprob: -10.058256149291992

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4883391857147217
    2. ' N' → logprob: -1.9883391857147217
    3. '    ' → logprob: -2.2383391857147217
    4. '       ' → logprob: -2.2383391857147217
    5. ' ' → logprob: -4.488339424133301
    6. ',' → logprob: -5.238339424133301
    7. '<|end|>' → logprob: -5.238339424133301
    8. '    
' → logprob: -5.613339424133301
    9. '  ' → logprob: -5.988339424133301
    10. 'N' → logprob: -6.613339424133301

Token 113: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.32978373765945435
    2. 'N' (adapté à ' N') → logprob: -1.3297836780548096
    3. '   ' → logprob: -4.204783916473389
    4. '       ' → logprob: -6.829783916473389
    5. '    ' → logprob: -8.20478343963623
    6. 'n' → logprob: -9.95478343963623
    7. '    
' → logprob: -11.32978343963623
    8. ' ' → logprob: -11.57978343963623
    9. '  ' → logprob: -11.70478343963623
    10. '	N' → logprob: -12.07978343963623

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.514650183613412e-05
    2. ' ,' → logprob: -10.000055313110352
    3. ',M' → logprob: -11.750055313110352
    4. ',N' → logprob: -13.375055313110352
    5. ' ' → logprob: -16.50005531311035
    6. '‌,' → logprob: -17.50005531311035
    7. ',

' → logprob: -17.75005531311035
    8. 'M' → logprob: -18.00005531311035
    9. '=' → logprob: -18.12505531311035
    10. ' M' → logprob: -18.25005531311035

Token 115: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.14373411238193512
    2. 'M' → logprob: -2.0187342166900635
    3. ' ' → logprob: -7.018733978271484
    4. '<|end|>' → logprob: -9.018733978271484
    5. '    ' → logprob: -10.893733978271484
    6. ' ' → logprob: -11.643733978271484
    7. ' 
' → logprob: -11.893733978271484
    8. '   ' → logprob: -12.893733978271484
    9. '  ' → logprob: -13.268733978271484
    10. '<|end|>' → logprob: -14.643733978271484

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231612324714661
    2. '=' → logprob: -0.8981612324714661
    3. ',' → logprob: -10.398160934448242
    4. '<|end|>' → logprob: -12.648160934448242
    5. ' ' → logprob: -13.773160934448242
    6. '    ' → logprob: -14.273160934448242
    7. '   ' → logprob: -14.398160934448242
    8. ')' → logprob: -14.898160934448242
    9. '=

' → logprob: -15.148160934448242
    10. '=N' → logprob: -15.148160934448242

Token 117: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.04860973358154297
    2. 'M' → logprob: -3.048609733581543
    3. ' ' → logprob: -11.298609733581543
    4. '    ' → logprob: -12.423609733581543
    5. ' ' → logprob: -12.673609733581543
    6. '   ' → logprob: -13.673609733581543
    7. '	M' → logprob: -13.673609733581543
    8. '  ' → logprob: -15.923609733581543
    9. ' 
' → logprob: -16.29861068725586
    10. ',' → logprob: -17.04861068725586

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006320207612589002
    2. ',N' → logprob: -8.000632286071777
    3. '<|end|>' → logprob: -9.000632286071777
    4. 'N' → logprob: -9.250632286071777
    5. ' ,' → logprob: -10.000632286071777
    6. ' ' → logprob: -11.375632286071777
    7. ',
' → logprob: -11.625632286071777
    8. ' N' → logprob: -12.625632286071777
    9. '<|end|>' → logprob: -13.625632286071777
    10. '
' → logprob: -14.375632286071777

Token 119: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3132660686969757
    2. ' N' → logprob: -1.3132660388946533
    3. ' ' → logprob: -12.813265800476074
    4. '	N' → logprob: -14.188265800476074
    5. '   ' → logprob: -14.313265800476074
    6. '    ' → logprob: -15.938265800476074
    7. ' ' → logprob: -16.31326675415039
    8. ' 
' → logprob: -16.81326675415039
    9. '  ' → logprob: -17.18826675415039
    10. '    
' → logprob: -17.43826675415039

Token 120: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03318038582801819
    2. ' 
' → logprob: -3.7831804752349854
    3. '    
' → logprob: -5.283180236816406
    4. '  
' → logprob: -6.033180236816406
    5. '   ' → logprob: -7.283180236816406
    6. '\n' → logprob: -7.783180236816406
    7. '

' → logprob: -8.033180236816406
    8. '
' → logprob: -8.158180236816406
    9. '   
' → logprob: -8.283180236816406
    10. ' 

' → logprob: -9.408180236816406

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03326963633298874
    2. 'fact' → logprob: -4.03326940536499
    3. '    
' → logprob: -5.03326940536499
    4. 'factor' → logprob: -5.28326940536499
    5. '#' → logprob: -6.53326940536499
    6. 'fac' → logprob: -7.40826940536499
    7. 'f' → logprob: -8.158269882202148
    8. 'max' → logprob: -8.283269882202148
    9. '
' → logprob: -8.908269882202148
    10. 'def' → logprob: -9.158269882202148

Token 122: ' #' (ID: 1069)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.10733529180288315
    2. 'max' → logprob: -3.232335329055786
    3. 'factor' → logprob: -3.732335329055786
    4. '#' (adapté à ' #') → logprob: -3.982335329055786
    5. 'fac' → logprob: -4.107335090637207
    6. '   ' → logprob: -6.232335090637207
    7. 'facts' → logprob: -7.857335090637207
    8. 'f' → logprob: -8.357335090637207
    9. 'MAX' → logprob: -8.357335090637207
    10. 'dp' → logprob: -9.107335090637207

Token 123: ' Initial' (ID: 9209)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.3068830370903015
    2. 'max' → logprob: -1.6818830966949463
    3. 'factor' → logprob: -3.6818830966949463
    4. 'fac' → logprob: -3.8068830966949463
    5. '#' → logprob: -4.056882858276367
    6. ' fact' → logprob: -5.556882858276367
    7. ' max' → logprob: -5.806882858276367
    8. 'MAX' → logprob: -6.306882858276367
    9. 'from' → logprob: -6.431882858276367
    10. 'def' → logprob: -7.181882858276367

Token 124: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -1.0524455308914185
    2. 'iser' → logprob: -1.3024455308914185
    3. 'ize' → logprob: -1.9274455308914185
    4. 'izer' → logprob: -2.052445411682129
    5. 'ization' → logprob: -2.427445411682129
    6. 'izing' → logprob: -5.427445411682129
    7. 'er' → logprob: -5.677445411682129
    8. 'isez' → logprob: -6.302445411682129
    9. 'izes' → logprob: -6.802445411682129
    10. 'i' → logprob: -7.302445411682129

Token 125: ' des' (ID: 731)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.36640554666519165
    2. '   ' → logprob: -2.116405487060547
    3. 'factor' → logprob: -2.866405487060547
    4. 'max' → logprob: -2.866405487060547
    5. 'fac' → logprob: -2.991405487060547
    6. ' max' → logprob: -5.116405487060547
    7. 'f' → logprob: -5.366405487060547
    8. 'n' → logprob: -5.991405487060547
    9. ' ' → logprob: -6.616405487060547
    10. 'dp' → logprob: -6.741405487060547

Token 126: ' tableaux' (ID: 176599)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0662197470664978
    2. 'factor' → logprob: -3.4412198066711426
    3. ' fact' → logprob: -3.5662198066711426
    4. 'fac' → logprob: -6.691219806671143
    5. 'f' → logprob: -6.941219806671143
    6. ' facto' → logprob: -7.316219806671143
    7. 'facts' → logprob: -7.566219806671143
    8. ' factorial' → logprob: -9.566219329833984
    9. 'fait' → logprob: -9.691219329833984
    10. '#' → logprob: -9.941219329833984

Token 127: ' pour' (ID: 1930)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06342533975839615
    2. 'fac' → logprob: -3.438425302505493
    3. ' fact' → logprob: -3.813425302505493
    4. 'factor' → logprob: -5.563425540924072
    5. 'f' → logprob: -6.813425540924072
    6. '   ' → logprob: -7.188425540924072
    7. ' fac' → logprob: -7.438425540924072
    8. ' de' → logprob: -8.688425064086914
    9. ' factorial' → logprob: -8.938425064086914
    10. 'max' → logprob: -8.938425064086914

Token 128: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3943951725959778
    2. ' fact' → logprob: -2.144395112991333
    3. ' la' → logprob: -2.394395112991333
    4. 'les' → logprob: -3.019395112991333
    5. 'factor' → logprob: -3.769395112991333
    6. 'fact' → logprob: -4.519395351409912
    7. ' factor' → logprob: -4.769395351409912
    8. ' factorial' → logprob: -5.019395351409912
    9. 'la' → logprob: -5.144395351409912
    10. ' ' → logprob: -5.644395351409912

Token 129: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.01605513133108616
    2. 'fact' → logprob: -4.391055107116699
    3. 'factor' → logprob: -5.766055107116699
    4. ' factor' → logprob: -8.7660551071167
    5. ' factorial' → logprob: -8.7660551071167
    6. ' facto' → logprob: -10.0160551071167
    7. ' facteurs' → logprob: -10.8910551071167
    8. ' coefficients' → logprob: -12.0160551071167
    9. '_factor' → logprob: -12.1410551071167
    10. '_fact' → logprob: -12.7660551071167

Token 130: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.8194383978843689
    2. 'ori' → logprob: -1.5694384574890137
    3. 'o' → logprob: -1.8194384574890137
    4. 'ors' → logprob: -2.5694384574890137
    5. 'eurs' → logprob: -2.5694384574890137
    6. 'orial' → logprob: -4.194438457489014
    7. 'ories' → logprob: -4.944438457489014
    8. 'oires' → logprob: -5.819438457489014
    9. 'ials' → logprob: -5.944438457489014
    10. '```' → logprob: -6.319438457489014

Token 131: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0012048733187839389
    2. 'els' → logprob: -7.251204967498779
    3. 'ales' → logprob: -8.751204490661621
    4. 'eles' → logprob: -9.001204490661621
    5. 'lles' → logprob: -9.626204490661621
    6. 'alles' → logprob: -10.001204490661621
    7. 'les' → logprob: -10.501204490661621
    8. 'elle' → logprob: -10.876204490661621
    9. 'es' → logprob: -11.126204490661621
    10. 'al' → logprob: -11.876204490661621

Token 132: ',' (ID: 11)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.32695525884628296
    2. ',' → logprob: -2.0769553184509277
    3. '   ' → logprob: -3.2019553184509277
    4. 'factor' → logprob: -3.4519553184509277
    5. '_fact' → logprob: -3.4519553184509277
    6. '_factor' → logprob: -4.326955318450928
    7. 'fac' → logprob: -4.701955318450928
    8. 'f' → logprob: -5.451955318450928
    9. ' et' → logprob: -5.451955318450928
    10. '_fac' → logprob: -5.826955318450928

Token 133: ' les' (ID: 1341)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.3430184125900269
    2. 'inverse' → logprob: -1.3430184125900269
    3. ' invers' → logprob: -1.9680184125900269
    4. ' inverse' → logprob: -2.2180185317993164
    5. 'in' → logprob: -2.8430185317993164
    6. 'factor' → logprob: -3.0930185317993164
    7. ' inv' → logprob: -3.0930185317993164
    8. 'fact' → logprob: -3.4680185317993164
    9. '```' → logprob: -4.468018531799316
    10. ' fact' → logprob: -4.468018531799316

Token 134: ' puiss' (ID: 102546)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fact' → logprob: -1.0188227891921997
    2. ' invers' → logprob: -1.5188227891921997
    3. 'factor' → logprob: -1.7688227891921997
    4. 'fact' → logprob: -2.26882266998291
    5. ' inverse' → logprob: -2.89382266998291
    6. 'in' → logprob: -3.26882266998291
    7. 'inverse' → logprob: -3.51882266998291
    8. 'inv' → logprob: -4.26882266998291
    9. ' factor' → logprob: -5.89382266998291
    10. ' facteurs' → logprob: -7.14382266998291

Token 135: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0021355098579078913
    2. 'ences' → logprob: -7.377135276794434
    3. 'ages' → logprob: -8.502135276794434
    4. 'iences' → logprob: -8.627135276794434
    5. 'ces' → logprob: -9.002135276794434
    6. 'ores' → logprob: -9.127135276794434
    7. 'ance' → logprob: -9.252135276794434
    8. 'es' → logprob: -9.377135276794434
    9. 'ions' → logprob: -9.502135276794434
    10. '   ' → logprob: -9.627135276794434

Token 136: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47029146552085876
    2. ' ,' → logprob: -1.5952914953231812
    3. ' et' → logprob: -2.4702913761138916
    4. 'et' → logprob: -2.9702913761138916
    5. ' ' → logprob: -4.220291614532471
    6. '   ' → logprob: -5.720291614532471
    7. 'de' → logprob: -5.845291614532471
    8. '[' → logprob: -5.970291614532471
    9. 'factor' → logprob: -6.095291614532471
    10. ' and' → logprob: -6.470291614532471

Token 137: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07166919112205505
    2. ' ' → logprob: -2.696669101715088
    3. 'i' → logprob: -7.946669101715088
    4. 'de' → logprob: -8.321669578552246
    5. '10' → logprob: -8.571669578552246
    6. ' i' → logprob: -8.696669578552246
    7. '3' → logprob: -9.071669578552246
    8. '1' → logprob: -9.071669578552246
    9. '```' → logprob: -9.446669578552246
    10. ' two' → logprob: -9.571669578552246

Token 138: 'M' (ID: 44)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04528401046991348
    2. 'M' → logprob: -3.9202840328216553
    3. ' ' → logprob: -4.670283794403076
    4. 'N' → logprob: -4.920283794403076
    5. '3' → logprob: -6.545283794403076
    6. 'i' → logprob: -6.545283794403076
    7. ' M' → logprob: -6.670283794403076
    8. '10' → logprob: -7.045283794403076
    9. ')' → logprob: -7.420283794403076
    10. '1' → logprob: -7.670283794403076

Token 139: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2249854952096939
    2. ' -' → logprob: -1.8499854803085327
    3. '+' → logprob: -3.3499855995178223
    4. ')' → logprob: -5.599985599517822
    5. ' +' → logprob: -6.099985599517822
    6. ' )' → logprob: -6.849985599517822
    7. '-N' → logprob: -7.349985599517822
    8. ' ' → logprob: -7.724985599517822
    9. '-)' → logprob: -7.724985599517822
    10. '   ' → logprob: -8.599985122680664

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001408805139362812
    2. ' ' → logprob: -7.001408576965332
    3. '2' → logprob: -7.751408576965332
    4. ')' → logprob: -10.501408576965332
    5. '   ' → logprob: -11.876408576965332
    6. '  ' → logprob: -12.001408576965332
    7. '-' → logprob: -12.001408576965332
    8. '3' → logprob: -12.126408576965332
    9. '4' → logprob: -13.063908576965332
    10. '```' → logprob: -13.126408576965332

Token 141: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10717487335205078
    2. '),' → logprob: -2.607174873352051
    3. ' )' → logprob: -4.357174873352051
    4. '-' → logprob: -5.232174873352051
    5. ' ),' → logprob: -5.482174873352051
    6. ' -' → logprob: -5.982174873352051
    7. ' ' → logprob: -6.982174873352051
    8. '+' → logprob: -7.232174873352051
    9. '   ' → logprob: -8.10717487335205
    10. 'def' → logprob: -8.73217487335205

Token 142: ' (' (ID: 350)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.1139696836471558
    2. ' et' → logprob: -1.3639696836471558
    3. ' les' → logprob: -1.8639696836471558
    4. ' des' → logprob: -2.9889698028564453
    5. ' and' → logprob: -3.7389698028564453
    6. 'and' → logprob: -3.8639698028564453
    7. ' inverse' → logprob: -3.8639698028564453
    8. 'inverse' → logprob: -3.8639698028564453
    9. 'les' → logprob: -3.9889698028564453
    10. 'des' → logprob: -4.363969802856445

Token 143: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8665651679039001
    2. 'M' → logprob: -0.9915651679039001
    3. ')' → logprob: -1.866565227508545
    4. 'i' → logprob: -3.616565227508545
    5. '1' → logprob: -5.241565227508545
    6. '2' → logprob: -5.741565227508545
    7. 'm' → logprob: -6.366565227508545
    8. ' M' → logprob: -6.366565227508545
    9. '0' → logprob: -6.491565227508545
    10. 'mod' → logprob: -6.616565227508545

Token 144: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01754138059914112
    2. ' +' → logprob: -4.642541408538818
    3. ')' → logprob: -5.517541408538818
    4. '-' → logprob: -6.642541408538818
    5. '),' → logprob: -7.142541408538818
    6. 'plus' → logprob: -7.767541408538818
    7. '+)' → logprob: -8.14254093170166
    8. ')+' → logprob: -8.76754093170166
    9. ' -' → logprob: -9.14254093170166
    10. ' plus' → logprob: -9.26754093170166

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007815174758434296
    2. ')' → logprob: -5.007815361022949
    3. ' ' → logprob: -7.632815361022949
    4. '2' → logprob: -8.63281536102295
    5. '-' → logprob: -9.25781536102295
    6. '),' → logprob: -9.88281536102295
    7. ' )' → logprob: -10.50781536102295
    8. '```' → logprob: -10.75781536102295
    9. '  ' → logprob: -10.88281536102295
    10. 'M' → logprob: -11.19531536102295

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7133157253265381
    2. '),' → logprob: -0.7133157253265381
    3. ' ),' → logprob: -4.963315963745117
    4. ',' → logprob: -5.463315963745117
    5. '   ' → logprob: -5.713315963745117
    6. ' )' → logprob: -5.838315963745117
    7. ' et' → logprob: -7.213315963745117
    8. 'et' → logprob: -7.463315963745117
    9. ' ,' → logprob: -8.088315963745117
    10. ' ' → logprob: -8.213315963745117

Token 147: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042497310787439346
    2. ' et' → logprob: -4.042497158050537
    3. '   ' → logprob: -4.792497158050537
    4. ' ,' → logprob: -5.167497158050537
    5. 'et' → logprob: -5.167497158050537
    6. ' and' → logprob: -7.042497158050537
    7. ' ' → logprob: -7.042497158050537
    8. 'and' → logprob: -7.292497158050537
    9. 'factor' → logprob: -8.042497634887695
    10. ',
' → logprob: -8.917497634887695

Token 148: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.1674082726240158
    2. 'factor' → logprob: -2.6674082279205322
    3. '   ' → logprob: -3.5424082279205322
    4. ' fact' → logprob: -3.7924082279205322
    5. ',' → logprob: -4.167408466339111
    6. 'fac' → logprob: -4.792408466339111
    7. ' factorial' → logprob: -6.292408466339111
    8. ' ,' → logprob: -6.792408466339111
    9. '!' → logprob: -6.917408466339111
    10. 'f' → logprob: -7.292408466339111

Token 149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.871080756187439
    2. ' =' → logprob: -0.871080756187439
    3. 'al' → logprob: -2.3710808753967285
    4. ',' → logprob: -3.3710808753967285
    5. 's' → logprob: -4.4960808753967285
    6. '_' → logprob: -5.2460808753967285
    7. ' ' → logprob: -5.4960808753967285
    8. 'rial' → logprob: -5.4960808753967285
    9. 'orial' → logprob: -5.6210808753967285
    10. '[' → logprob: -6.8710808753967285

Token 150: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3133052587509155
    2. '[' → logprob: -1.3133052587509155
    3. '[N' → logprob: -10.688304901123047
    4. '[n' → logprob: -11.188304901123047
    5. ' ' → logprob: -13.438304901123047
    6. '[int' → logprob: -13.688304901123047
    7. '[i' → logprob: -14.438304901123047
    8. '[num' → logprob: -14.688304901123047
    9. '[class' → logprob: -15.188304901123047
    10. '[p' → logprob: -15.313304901123047

Token 151: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.250001907348633
    4. ']' → logprob: -18.500001907348633
    5. '  ' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. '```' → logprob: -19.125001907348633
    8. '

' → logprob: -19.500001907348633
    9. ')' → logprob: -20.250001907348633
    10. '0' → logprob: -20.750001907348633

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06525719910860062
    2. ',' → logprob: -2.8152573108673096
    3. ']*' → logprob: -6.6902570724487305
    4. ' ]' → logprob: -7.0652570724487305
    5. ']*(' → logprob: -7.5652570724487305
    6. ' for' → logprob: -7.8152570724487305
    7. ']+' → logprob: -9.69025707244873
    8. ' ,' → logprob: -10.06525707244873
    9. ' ' → logprob: -10.56525707244873
    10. 'for' → logprob: -10.69025707244873

Token 153: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39604824781417847
    2. ']*(' → logprob: -1.5210483074188232
    3. ']*' → logprob: -3.6460483074188232
    4. ',' → logprob: -3.6460483074188232
    5. '*(' → logprob: -3.8960483074188232
    6. ' *' → logprob: -4.521048069000244
    7. ' for' → logprob: -4.896048069000244
    8. '*' → logprob: -5.146048069000244
    9. '[' → logprob: -5.646048069000244
    10. ')' → logprob: -6.021048069000244

Token 154: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.21657000482082367
    2. '(max' → logprob: -1.7165700197219849
    3. ' (' → logprob: -4.841569900512695
    4. '(MAX' → logprob: -5.591569900512695
    5. 'max' → logprob: -6.716569900512695
    6. '(' → logprob: -6.966569900512695
    7. ' ' → logprob: -8.091569900512695
    8. 'M' → logprob: -8.341569900512695
    9. '(Max' → logprob: -8.466569900512695
    10. ' max' → logprob: -8.716569900512695

Token 155: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03496553376317024
    2. ' M' → logprob: -3.4099655151367188
    3. 'max' → logprob: -7.909965515136719
    4. '   ' → logprob: -7.909965515136719
    5. '(M' → logprob: -8.284965515136719
    6. ' ' → logprob: -9.034965515136719
    7. ' max' → logprob: -9.534965515136719
    8. ' (' → logprob: -9.659965515136719
    9. '(' → logprob: -10.534965515136719
    10. '    ' → logprob: -11.784965515136719

Token 156: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02978033944964409
    2. ' +' → logprob: -3.529780387878418
    3. '+
' → logprob: -11.154780387878418
    4. ' ' → logprob: -12.279780387878418
    5. '2' → logprob: -12.654780387878418
    6. ' +
' → logprob: -12.779780387878418
    7. '1' → logprob: -12.904780387878418
    8. ' plus' → logprob: -14.779780387878418
    9. '
' → logprob: -15.404780387878418
    10. ')+' → logprob: -15.404780387878418

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0328027606010437
    2. '2' → logprob: -3.7828028202056885
    3. ' ' → logprob: -4.657802581787109
    4. '10' → logprob: -12.15780258178711
    5. '+' → logprob: -12.28280258178711
    6. '11' → logprob: -13.09530258178711
    7. '101' → logprob: -13.34530258178711
    8. '3' → logprob: -13.40780258178711
    9. '   ' → logprob: -13.53280258178711
    10. '  ' → logprob: -13.72030258178711

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01860768161714077
    2. '2' → logprob: -4.0186076164245605
    3. ' ' → logprob: -7.7686076164245605
    4. '10' → logprob: -11.143608093261719
    5. '11' → logprob: -12.268608093261719
    6. '101' → logprob: -12.643608093261719
    7. '3' → logprob: -13.018608093261719
    8. '100' → logprob: -13.331108093261719
    9. '5' → logprob: -13.518608093261719
    10. '+' → logprob: -13.768608093261719

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001830346300266683
    2. ')
' → logprob: -6.376830577850342
    3. ' )' → logprob: -9.126830101013184
    4. ')

' → logprob: -11.501830101013184
    5. '<|end|>' → logprob: -13.126830101013184
    6. ' )
' → logprob: -13.501830101013184
    7. '+' → logprob: -13.626830101013184
    8. ')
' → logprob: -14.376830101013184
    9. ']' → logprob: -14.751830101013184
    10. ')n' → logprob: -14.876830101013184

Token 160: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07995277643203735
    2. 'fact' → logprob: -2.5799527168273926
    3. ' 
' → logprob: -8.32995319366455
    4. '    
' → logprob: -8.32995319366455
    5. '  
' → logprob: -8.70495319366455
    6. ' fact' → logprob: -9.07995319366455
    7. '
' → logprob: -9.45495319366455
    8. ',
' → logprob: -10.20495319366455
    9. '

' → logprob: -10.20495319366455
    10. ',' → logprob: -10.20495319366455

Token 161: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017656518146395683
    2. 'fact' → logprob: -4.142656326293945
    3. '<|end|>' → logprob: -7.142656326293945
    4. '  
' → logprob: -8.642656326293945
    5. ' 
' → logprob: -8.642656326293945
    6. '    
' → logprob: -9.142656326293945
    7. ' fact' → logprob: -9.517656326293945
    8. '\n' → logprob: -9.517656326293945
    9. ',
' → logprob: -10.392656326293945
    10. ',' → logprob: -10.517656326293945

Token 162: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.010023565031588078
    2. '
' → logprob: -5.260023593902588
    3. ' fact' → logprob: -6.135023593902588
    4. 'factor' → logprob: -7.010023593902588
    5. '   ' → logprob: -7.885023593902588
    6. '    
' → logprob: -8.13502311706543
    7. '<|end|>' → logprob: -8.51002311706543
    8. '1' → logprob: -8.88502311706543
    9. ' 
' → logprob: -8.88502311706543
    10. '  
' → logprob: -9.13502311706543

Token 163: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007929549552500248
    2. 'fact' → logprob: -5.75792932510376
    3. '
' → logprob: -6.13292932510376
    4. '_fact' → logprob: -6.88292932510376
    5. ' =' → logprob: -7.63292932510376
    6. '=' → logprob: -8.132929801940918
    7. '_' → logprob: -9.257929801940918
    8. '  
' → logprob: -9.632929801940918
    9. '[
' → logprob: -9.757929801940918
    10. '   ' → logprob: -9.882929801940918

Token 164: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08257962763309479
    2. '=' → logprob: -3.3325796127319336
    3. ' =' → logprob: -3.9575796127319336
    4. ']' → logprob: -4.707579612731934
    5. ' )' → logprob: -4.957579612731934
    6. ')=' → logprob: -5.707579612731934
    7. ')
' → logprob: -5.832579612731934
    8. '
' → logprob: -7.957579612731934
    9. ' ' → logprob: -7.957579612731934
    10. ' )
' → logprob: -8.457579612731934

Token 165: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30117958784103394
    2. '<|end|>' → logprob: -1.8011796474456787
    3. '=' → logprob: -2.5511796474456787
    4. '
' → logprob: -4.6761794090271
    5. 'fact' → logprob: -5.3011794090271
    6. '<|end|>' → logprob: -7.3011794090271
    7. '_fact' → logprob: -8.176179885864258
    8. ' =
' → logprob: -8.676179885864258
    9. 'def' → logprob: -8.676179885864258
    10. '  
' → logprob: -8.801179885864258

Token 166: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032288136426359415
    2. ' ' → logprob: -5.753228664398193
    3. 'fact' → logprob: -10.628229141235352
    4. 'factor' → logprob: -11.253229141235352
    5. '0' → logprob: -12.503229141235352
    6. ' fact' → logprob: -12.753229141235352
    7. '  ' → logprob: -13.003229141235352
    8. ' factorial' → logprob: -13.628229141235352
    9. '   ' → logprob: -14.378229141235352
    10. 'Fact' → logprob: -14.378229141235352

Token 167: '!
' (ID: 4175)
  Prédit: '!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!' → logprob: -0.0003710894088726491
    2. ' !' → logprob: -8.750370979309082
    3. ' factorial' → logprob: -9.000370979309082
    4. '!)' → logprob: -10.125370979309082
    5. ')' → logprob: -11.750370979309082
    6. '!=' → logprob: -12.125370979309082
    7. 'factor' → logprob: -12.125370979309082
    8. '=' → logprob: -12.250370979309082
    9. ')!' → logprob: -12.375370979309082
    10. ' i' → logprob: -13.125370979309082

Token 168: '   ' (ID: 271)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6523864269256592
    2. '
' → logprob: -0.7773864269256592
    3. ' 
' → logprob: -4.902386665344238
    4. '  
' → logprob: -5.902386665344238
    5. '    
' → logprob: -5.902386665344238
    6. ' fact' → logprob: -6.152386665344238
    7. '\n' → logprob: -6.652386665344238
    8. '   ' → logprob: -7.152386665344238
    9. '<|end|>' → logprob: -7.527386665344238
    10. ')' → logprob: -7.527386665344238

Token 169: ' pow' (ID: 9779)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.005024306010454893
    2. ' fact' → logprob: -5.880024433135986
    3. '1' → logprob: -6.380024433135986
    4. '[' → logprob: -8.380023956298828
    5. 'factor' → logprob: -8.505023956298828
    6. '
' → logprob: -10.630023956298828
    7. '   ' → logprob: -11.380023956298828
    8. '0' → logprob: -11.380023956298828
    9. ' ' → logprob: -11.505023956298828
    10. 'facts' → logprob: -12.130023956298828

Token 170: 'm' (ID: 76)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29199931025505066
    2. '_' → logprob: -2.416999340057373
    3. 'er' → logprob: -2.416999340057373
    4. '(' → logprob: -2.666999340057373
    5. 'ers' → logprob: -6.791999340057373
    6. '```' → logprob: -7.666999340057373
    7. '[' → logprob: -7.791999340057373
    8. '(M' → logprob: -7.916999340057373
    9. 'e' → logprob: -8.041998863220215
    10. '_list' → logprob: -8.166998863220215

Token 171: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4184098541736603
    2. ' =' → logprob: -2.293409824371338
    3. '=' → logprob: -3.168409824371338
    4. '1' → logprob: -3.543409824371338
    5. '(M' → logprob: -3.543409824371338
    6. '   ' → logprob: -3.918409824371338
    7. '(' → logprob: -3.918409824371338
    8. ')' → logprob: -4.043409824371338
    9. '[(' → logprob: -4.293409824371338
    10. ']' → logprob: -4.418409824371338

Token 172: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20142202079296112
    2. ' [' → logprob: -1.7014219760894775
    3. ' ' → logprob: -12.076421737670898
    4. '[M' → logprob: -13.576421737670898
    5. '   ' → logprob: -14.826421737670898
    6. '[N' → logprob: -15.076421737670898
    7. '  ' → logprob: -15.451421737670898
    8. '0' → logprob: -15.451421737670898
    9. '[m' → logprob: -15.451421737670898
    10. '[i' → logprob: -16.3264217376709

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002241727663204074
    2. ' ' → logprob: -6.127241611480713
    3. 'M' → logprob: -10.752242088317871
    4. ' M' → logprob: -11.627242088317871
    5. '(M' → logprob: -11.877242088317871
    6. '   ' → logprob: -12.252242088317871
    7. '(' → logprob: -12.752242088317871
    8. ' (' → logprob: -13.002242088317871
    9. '1' → logprob: -13.127242088317871
    10. '  ' → logprob: -13.252242088317871

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013417120499070734
    2. ' ]' → logprob: -9.125134468078613
    3. ')' → logprob: -11.750134468078613
    4. '(M' → logprob: -12.375134468078613
    5. ']
' → logprob: -13.125134468078613
    6. ' (' → logprob: -13.375134468078613
    7. ' *' → logprob: -13.500134468078613
    8. '](' → logprob: -13.500134468078613
    9. ']*' → logprob: -13.500134468078613
    10. '*' → logprob: -14.000134468078613

Token 175: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1082305908203125
    2. '*' → logprob: -3.2332305908203125
    3. '(M' → logprob: -3.3582305908203125
    4. ']' → logprob: -3.8582305908203125
    5. ' (' → logprob: -5.2332305908203125
    6. '*(' → logprob: -7.1082305908203125
    7. ')' → logprob: -8.483230590820312
    8. '(N' → logprob: -8.608230590820312
    9. '(m' → logprob: -8.983230590820312
    10. '(' → logprob: -8.983230590820312

Token 176: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.06250613182783127
    2. ' (' → logprob: -2.8125061988830566
    3. '(N' → logprob: -8.187505722045898
    4. '(' → logprob: -8.562505722045898
    5. '(m' → logprob: -11.187505722045898
    6. '((' → logprob: -11.312505722045898
    7. ' ' → logprob: -11.437505722045898
    8. '   ' → logprob: -11.687505722045898
    9. 'M' → logprob: -11.937505722045898
    10. ' M' → logprob: -11.937505722045898

Token 177: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0024673326406627893
    2. '(M' → logprob: -6.752467155456543
    3. ' M' → logprob: -6.877467155456543
    4. '   ' → logprob: -8.502467155456543
    5. ' ' → logprob: -10.877467155456543
    6. 'N' → logprob: -11.002467155456543
    7. 'm' → logprob: -11.502467155456543
    8. ' (' → logprob: -11.752467155456543
    9. '(' → logprob: -12.252467155456543
    10. '  ' → logprob: -14.127467155456543

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05491534620523453
    2. ' +' → logprob: -2.929915428161621
    3. '+
' → logprob: -11.429915428161621
    4. ' ' → logprob: -11.804915428161621
    5. '1' → logprob: -12.679915428161621
    6. ')' → logprob: -12.804915428161621
    7. '   ' → logprob: -13.054915428161621
    8. ' +
' → logprob: -13.429915428161621
    9. '+)' → logprob: -13.679915428161621
    10. ')+' → logprob: -14.054915428161621

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000747332873288542
    2. ' ' → logprob: -7.250747203826904
    3. '2' → logprob: -10.375747680664062
    4. '   ' → logprob: -12.625747680664062
    5. '(' → logprob: -14.813247680664062
    6. '  ' → logprob: -14.813247680664062
    7. '
' → logprob: -15.188247680664062
    8. ')' → logprob: -15.688247680664062
    9. '    ' → logprob: -15.813247680664062
    10. '```' → logprob: -15.813247680664062

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.621933451038785e-05
    2. ' ' → logprob: -10.000056266784668
    3. '2' → logprob: -12.000056266784668
    4. '+' → logprob: -13.562556266784668
    5. '   ' → logprob: -14.125056266784668
    6. '(' → logprob: -15.125056266784668
    7. '6' → logprob: -15.625056266784668
    8. '01' → logprob: -15.625056266784668
    9. '  ' → logprob: -15.937556266784668
    10. '```' → logprob: -16.18755531311035

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019054718723054975
    2. ')
' → logprob: -8.625190734863281
    3. ']' → logprob: -12.625190734863281
    4. '   ' → logprob: -12.750190734863281
    5. '<|end|>' → logprob: -13.500190734863281
    6. ' )' → logprob: -13.625190734863281
    7. ')

' → logprob: -13.875190734863281
    8. '
' → logprob: -15.500190734863281
    9. ')]' → logprob: -15.625190734863281
    10. ' ' → logprob: -15.875190734863281

Token 182: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6049869060516357
    2. '
' → logprob: -1.2299869060516357
    3. 'pow' → logprob: -2.4799869060516357
    4. '    
' → logprob: -3.2299869060516357
    5. '  
' → logprob: -3.8549869060516357
    6. ' 
' → logprob: -5.104987144470215
    7. '   
' → logprob: -5.104987144470215
    8. '  ' → logprob: -6.354987144470215
    9. '(pow' → logprob: -7.354987144470215
    10. ' ' → logprob: -7.604987144470215

Token 183: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29334282875061035
    2. 'pow' → logprob: -1.9183428287506104
    3. ' 
' → logprob: -3.5433428287506104
    4. '  
' → logprob: -4.168342590332031
    5. '<|end|>' → logprob: -4.168342590332031
    6. '    
' → logprob: -4.293342590332031
    7. '   
' → logprob: -4.793342590332031
    8. '   ' → logprob: -5.418342590332031
    9. '(pow' → logprob: -5.418342590332031
    10. ' ' → logprob: -5.543342590332031

Token 184: ' pow' (ID: 9779)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0959765911102295
    2. 'pow' → logprob: -1.4709765911102295
    3. '(M' → logprob: -1.5959765911102295
    4. '1' → logprob: -1.8459765911102295
    5. ' ' → logprob: -3.5959765911102295
    6. ')' → logprob: -4.345976829528809
    7. ' (' → logprob: -4.345976829528809
    8. '(' → logprob: -5.095976829528809
    9. '
' → logprob: -5.720976829528809
    10. 'M' → logprob: -6.095976829528809

Token 185: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0038619511760771275
    2. '(' → logprob: -6.003861904144287
    3. '(m' → logprob: -7.753861904144287
    4. ' (' → logprob: -8.753862380981445
    5. 'er' → logprob: -8.878862380981445
    6. '   ' → logprob: -9.128862380981445
    7. ')' → logprob: -9.253862380981445
    8. 'M' → logprob: -9.378862380981445
    9. 'e' → logprob: -9.628862380981445
    10. '(M' → logprob: -9.753862380981445

Token 186: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7434647083282471
    2. '   ' → logprob: -1.243464708328247
    3. ')' → logprob: -1.993464708328247
    4. '<|end|>' → logprob: -3.618464708328247
    5. 'def' → logprob: -4.118464469909668
    6. ']' → logprob: -4.243464469909668
    7. '(' → logprob: -4.493464469909668
    8. ' ' → logprob: -5.118464469909668
    9. '  ' → logprob: -5.243464469909668
    10. ' =' → logprob: -5.368464469909668

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011927806917810813
    2. ' ]' → logprob: -9.62511920928955
    3. ']
' → logprob: -10.87511920928955
    4. ']=' → logprob: -11.25011920928955
    5. ')' → logprob: -11.50011920928955
    6. 'def' → logprob: -12.00011920928955
    7. '=' → logprob: -13.87511920928955
    8. '   ' → logprob: -13.87511920928955
    9. ')]' → logprob: -14.12511920928955
    10. ']

' → logprob: -14.62511920928955

Token 188: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22563371062278748
    2. ' =' → logprob: -1.6006337404251099
    3. '=
' → logprob: -9.10063362121582
    4. ' =
' → logprob: -9.85063362121582
    5. ' ' → logprob: -10.72563362121582
    6. '<|end|>' → logprob: -11.10063362121582
    7. 'def' → logprob: -12.35063362121582
    8. ')' → logprob: -12.72563362121582
    9. '   ' → logprob: -12.85063362121582
    10. ',' → logprob: -12.97563362121582

Token 189: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.15819965302944183
    2. ' (' → logprob: -2.2831995487213135
    3. 'pow' → logprob: -3.6581995487213135
    4. '(N' → logprob: -4.408199787139893
    5. '(pow' → logprob: -5.908199787139893
    6. '(m' → logprob: -6.408199787139893
    7. '1' → logprob: -7.533199787139893
    8. '(' → logprob: -7.533199787139893
    9. '((' → logprob: -8.158199310302734
    10. '(i' → logprob: -8.283199310302734

Token 190: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02069556899368763
    2. '(M' → logprob: -4.020695686340332
    3. ' M' → logprob: -6.145695686340332
    4. ' (' → logprob: -8.145695686340332
    5. '   ' → logprob: -9.395695686340332
    6. '(' → logprob: -11.895695686340332
    7. ')' → logprob: -12.520695686340332
    8. ' ' → logprob: -13.020695686340332
    9. '1' → logprob: -13.145695686340332
    10. 'm' → logprob: -13.270695686340332

Token 191: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002838276559486985
    2. ' +' → logprob: -5.877838134765625
    3. '+
' → logprob: -11.002838134765625
    4. '   ' → logprob: -12.127838134765625
    5. '
' → logprob: -12.752838134765625
    6. '1' → logprob: -13.502838134765625
    7. 'plus' → logprob: -13.502838134765625
    8. ' ' → logprob: -14.002838134765625
    9. ')+' → logprob: -14.252838134765625
    10. ' +
' → logprob: -14.627838134765625

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046844579628668725
    2. ' ' → logprob: -8.250468254089355
    3. '+' → logprob: -8.500468254089355
    4. ' +' → logprob: -13.375468254089355
    5. ')' → logprob: -14.750468254089355
    6. '
' → logprob: -15.000468254089355
    7. '   ' → logprob: -15.125468254089355
    8. '  ' → logprob: -15.250468254089355
    9. '[' → logprob: -15.875468254089355
    10. '```' → logprob: -15.875468254089355

Token 193: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32594215869903564
    2. '+' → logprob: -1.3259421586990356
    3. ')**' → logprob: -4.950942039489746
    4. ' +' → logprob: -5.575942039489746
    5. ' )' → logprob: -7.075942039489746
    6. ')+' → logprob: -8.450942039489746
    7. '+i' → logprob: -8.575942039489746
    8. ')
' → logprob: -9.325942039489746
    9. '```' → logprob: -9.950942039489746
    10. '-' → logprob: -9.950942039489746

Token 194: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00026300468016415834
    2. ' i' → logprob: -8.250263214111328
    3. ' ' → logprob: -14.000263214111328
    4. '	i' → logprob: -14.875263214111328
    5. '
' → logprob: -15.125263214111328
    6. '   ' → logprob: -16.500263214111328
    7. '```' → logprob: -16.625263214111328
    8. '(i' → logprob: -16.875263214111328
    9. '_i' → logprob: -17.375263214111328
    10. '-i' → logprob: -17.375263214111328

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016449686139822006
    2. 'fact' → logprob: -5.141449451446533
    3. '   ' → logprob: -5.891449451446533
    4. 'pow' → logprob: -6.016449451446533
    5. '  
' → logprob: -6.266449451446533
    6. ' 
' → logprob: -6.516449451446533
    7. '    
' → logprob: -7.016449451446533
    8. '   
' → logprob: -8.141449928283691
    9. ')' → logprob: -8.641449928283691
    10. '
' → logprob: -9.391449928283691

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19321732223033905
    2. 'pow' → logprob: -1.8182172775268555
    3. 'fact' → logprob: -4.9432172775268555
    4. '
' → logprob: -5.9432172775268555
    5. '    
' → logprob: -6.1932172775268555
    6. ' pow' → logprob: -7.5682172775268555
    7. ',' → logprob: -8.443217277526855
    8. ' fact' → logprob: -8.568217277526855
    9. ' 
' → logprob: -8.943217277526855
    10. '   
' → logprob: -9.193217277526855

Token 197: ' p' (ID: 275)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.005412215366959572
    2. ' pow' → logprob: -5.3804121017456055
    3. 'fact' → logprob: -7.5054121017456055
    4. 'p' (adapté à ' p') → logprob: -9.130412101745605
    5. 'inv' → logprob: -10.505412101745605
    6. '   ' → logprob: -10.880412101745605
    7. 'def' → logprob: -11.755412101745605
    8. 'power' → logprob: -11.880412101745605
    9. 'pw' → logprob: -12.005412101745605
    10. ' fact' → logprob: -12.130412101745605

Token 198: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.1967586725950241
    2. 'ow' → logprob: -1.8217586278915405
    3. 'o' → logprob: -4.94675874710083
    4. 'owa' → logprob: -6.19675874710083
    5. 'owi' → logprob: -6.32175874710083
    6. 'awn' → logprob: -6.57175874710083
    7. 'ovn' → logprob: -7.44675874710083
    8. 'owo' → logprob: -7.82175874710083
    9. 'n' → logprob: -7.94675874710083
    10. 'ewn' → logprob: -8.321758270263672

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07927507907152176
    2. '=' → logprob: -2.579275131225586
    3. ' ' → logprob: -8.954275131225586
    4. '[' → logprob: -9.079275131225586
    5. '=[' → logprob: -9.954275131225586
    6. ' =[' → logprob: -10.329275131225586
    7. 'o' → logprob: -10.579275131225586
    8. 'n' → logprob: -10.704275131225586
    9. 'm' → logprob: -12.829275131225586
    10. '  ' → logprob: -13.204275131225586

Token 200: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47408533096313477
    2. ' [' → logprob: -0.9740853309631348
    3. ' ' → logprob: -11.849084854125977
    4. '   ' → logprob: -14.099084854125977
    5. '  ' → logprob: -16.099084854125977
    6. '    ' → logprob: -16.599084854125977
    7. '0' → logprob: -16.974084854125977
    8. ' ' → logprob: -17.474084854125977
    9. '	' → logprob: -18.224084854125977
    10. '([' → logprob: -18.474084854125977

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01692412607371807
    2. '(M' → logprob: -5.141923904418945
    3. '[' → logprob: -5.516923904418945
    4. ' ' → logprob: -6.266923904418945
    5. '[M' → logprob: -6.266923904418945
    6. ']' → logprob: -6.266923904418945
    7. ' (' → logprob: -7.516923904418945
    8. ' [' → logprob: -7.516923904418945
    9. '(' → logprob: -9.516923904418945
    10. ')' → logprob: -11.266923904418945

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018196819291915745
    2. ')' → logprob: -9.250182151794434
    3. ' ]' → logprob: -10.250182151794434
    4. '[' → logprob: -11.375182151794434
    5. '*' → logprob: -11.750182151794434
    6. ' (' → logprob: -12.000182151794434
    7. ' *' → logprob: -12.000182151794434
    8. '(' → logprob: -12.375182151794434
    9. '   ' → logprob: -12.750182151794434
    10. '(M' → logprob: -13.125182151794434

Token 203: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0796240046620369
    2. '*' → logprob: -2.5796239376068115
    3. ' (' → logprob: -8.32962417602539
    4. '(M' → logprob: -8.45462417602539
    5. '[' → logprob: -8.82962417602539
    6. '=' → logprob: -9.70462417602539
    7. ' [' → logprob: -11.07962417602539
    8. ' =' → logprob: -11.20462417602539
    9. '   ' → logprob: -11.57962417602539
    10. '(' → logprob: -11.57962417602539

Token 204: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.041131000965833664
    2. '(N' → logprob: -3.791131019592285
    3. ' (' → logprob: -4.041131019592285
    4. 'N' → logprob: -9.916131019592285
    5. '(' → logprob: -10.166131019592285
    6. '   ' → logprob: -10.666131019592285
    7. 'M' → logprob: -10.916131019592285
    8. ' M' → logprob: -12.041131019592285
    9. ' ' → logprob: -12.416131019592285
    10. ' N' → logprob: -13.041131019592285

Token 205: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1649959236383438
    2. 'N' → logprob: -1.9149959087371826
    3. '(M' → logprob: -5.914996147155762
    4. ' M' → logprob: -6.664996147155762
    5. '(N' → logprob: -7.914996147155762
    6. '   ' → logprob: -8.664996147155762
    7. ' N' → logprob: -8.914996147155762
    8. ')' → logprob: -10.289996147155762
    9. ' (' → logprob: -10.289996147155762
    10. ' ' → logprob: -10.789996147155762

Token 206: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031806828919798136
    2. ' +' → logprob: -5.753180503845215
    3. '1' → logprob: -14.003180503845215
    4. ' ' → logprob: -14.378180503845215
    5. '+
' → logprob: -14.503180503845215
    6. '0' → logprob: -15.503180503845215
    7. ')' → logprob: -15.753180503845215
    8. ' plus' → logprob: -16.00318145751953
    9. '   ' → logprob: -16.12818145751953
    10. '+i' → logprob: -16.25318145751953

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007722244481556118
    2. ' ' → logprob: -7.250771999359131
    3. '+' → logprob: -10.000772476196289
    4. '(M' → logprob: -12.250772476196289
    5. '(' → logprob: -12.625772476196289
    6. 'M' → logprob: -13.500772476196289
    7. '   ' → logprob: -13.625772476196289
    8. ')' → logprob: -13.625772476196289
    9. '(N' → logprob: -14.375772476196289
    10. 'i' → logprob: -14.375772476196289

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046737297088839114
    2. '+' → logprob: -7.875467300415039
    3. ' ' → logprob: -9.375467300415039
    4. '   ' → logprob: -14.125467300415039
    5. 'N' → logprob: -15.187967300415039
    6. 'M' → logprob: -15.250467300415039
    7. ' +' → logprob: -15.250467300415039
    8. '0' → logprob: -15.312967300415039
    9. '```' → logprob: -15.812967300415039
    10. '  ' → logprob: -16.62546730041504

Token 209: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018625585653353482
    2. ']' → logprob: -8.6251859664917
    3. '   ' → logprob: -12.7501859664917
    4. ')
' → logprob: -12.8751859664917
    5. ' )' → logprob: -15.0001859664917
    6. '#' → logprob: -15.3751859664917
    7. ')]' → logprob: -15.5001859664917
    8. '[' → logprob: -16.000186920166016
    9. ')

' → logprob: -16.500186920166016
    10. 'def' → logprob: -16.625186920166016

Token 210: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42828506231307983
    2. '[' → logprob: -1.5532851219177246
    3. ' ' → logprob: -2.1782851219177246
    4. ' =' → logprob: -4.428285121917725
    5. ' [' → logprob: -5.428285121917725
    6. '  ' → logprob: -6.178285121917725
    7. 'def' → logprob: -7.053285121917725
    8. '    ' → logprob: -7.303285121917725
    9. ')' → logprob: -7.428285121917725
    10. '=' → logprob: -7.553285121917725

Token 211: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5975341200828552
    2. ' =' → logprob: -2.2225341796875
    3. '   ' → logprob: -2.4725341796875
    4. '=' → logprob: -2.4725341796875
    5. 'def' → logprob: -2.5975341796875
    6. ' #' → logprob: -3.5975341796875
    7. ' ' → logprob: -3.9725341796875
    8. '
' → logprob: -4.2225341796875
    9. '[' → logprob: -4.3475341796875
    10. ' (' → logprob: -5.2225341796875

Token 212: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1665298193693161
    2. ' p' → logprob: -2.291529893875122
    3. ' [' → logprob: -4.541529655456543
    4. ' (' → logprob: -4.791529655456543
    5. '(p' → logprob: -5.166529655456543
    6. '[' → logprob: -5.291529655456543
    7. '[p' → logprob: -5.291529655456543
    8. '[N' → logprob: -5.291529655456543
    9. '[n' → logprob: -5.416529655456543
    10. '(N' → logprob: -5.791529655456543

Token 213: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.004207444377243519
    2. 'o' → logprob: -6.004207611083984
    3. 'ow' → logprob: -6.379207611083984
    4. 'Own' → logprob: -11.504207611083984
    5. 'awn' → logprob: -12.004207611083984
    6. ' own' → logprob: -12.629207611083984
    7. ' o' → logprob: -12.879207611083984
    8. '[' → logprob: -13.254207611083984
    9. 'owl' → logprob: -13.504207611083984
    10. 'OWN' → logprob: -14.004207611083984

Token 214: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24945968389511108
    2. '[' → logprob: -2.374459743499756
    3. '[i' → logprob: -2.749459743499756
    4. ' =' → logprob: -2.874459743499756
    5. ']' → logprob: -4.999459743499756
    6. '[]' → logprob: -8.749459266662598
    7. ' ' → logprob: -8.999459266662598
    8. ' [' → logprob: -9.374459266662598
    9. ')' → logprob: -9.874459266662598
    10. '=[' → logprob: -9.999459266662598

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001884015218820423
    2. ')' → logprob: -9.500188827514648
    3. '=' → logprob: -9.500188827514648
    4. ']=' → logprob: -10.500188827514648
    5. '[' → logprob: -11.875188827514648
    6. ' ]' → logprob: -13.375188827514648
    7. ' =' → logprob: -14.250188827514648
    8. ':' → logprob: -14.500188827514648
    9. ']
' → logprob: -15.000188827514648
    10. '```' → logprob: -15.250188827514648

Token 216: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872068226337433
    2. ' =' → logprob: -1.137206792831421
    3. '[' → logprob: -8.13720703125
    4. ' [' → logprob: -11.01220703125
    5. ' ' → logprob: -11.13720703125
    6. ']' → logprob: -12.01220703125
    7. '=[' → logprob: -13.01220703125
    8. ')' → logprob: -13.88720703125
    9. ' =[' → logprob: -13.88720703125
    10. ']=' → logprob: -14.26220703125

Token 217: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11299788951873779
    2. ' (' → logprob: -2.2379980087280273
    3. '(n' → logprob: -9.112998008728027
    4. '(M' → logprob: -10.487998008728027
    5. '(' → logprob: -10.862998008728027
    6. ' ' → logprob: -11.737998008728027
    7. '
' → logprob: -12.487998008728027
    8. '   ' → logprob: -12.737998008728027
    9. '((' → logprob: -13.862998008728027
    10. '

' → logprob: -14.612998008728027

Token 218: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00039492646465077996
    2. 'M' → logprob: -8.625394821166992
    3. '(N' → logprob: -8.750394821166992
    4. ' N' → logprob: -10.250394821166992
    5. 'n' → logprob: -11.250394821166992
    6. '   ' → logprob: -12.625394821166992
    7. '(M' → logprob: -13.250394821166992
    8. '
' → logprob: -14.500394821166992
    9. '	N' → logprob: -14.625394821166992
    10. ' (' → logprob: -15.062894821166992

Token 219: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00027099132421426475
    2. ' +' → logprob: -8.25027084350586
    3. ')' → logprob: -12.62527084350586
    4. '+
' → logprob: -13.00027084350586
    5. '
' → logprob: -14.00027084350586
    6. ')+' → logprob: -14.12527084350586
    7. '+n' → logprob: -14.62527084350586
    8. '+i' → logprob: -14.87527084350586
    9. 'plus' → logprob: -15.12527084350586
    10. '+)' → logprob: -15.25027084350586

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.551721889991313e-05
    2. ' ' → logprob: -9.750065803527832
    3. '+' → logprob: -12.000065803527832
    4. ')' → logprob: -14.500065803527832
    5. 'i' → logprob: -15.625065803527832
    6. '```' → logprob: -16.125064849853516
    7. '0' → logprob: -17.250064849853516
    8. ']' → logprob: -17.500064849853516
    9. '

' → logprob: -17.500064849853516
    10. ' +' → logprob: -17.625064849853516

Token 221: ')^' (ID: 73602)
  Prédit: ')^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')^' → logprob: -0.7715197801589966
    2. ')**' → logprob: -1.1465197801589966
    3. ')' → logprob: -1.5215197801589966
    4. '[i' → logprob: -6.646519660949707
    5. ')
' → logprob: -9.646519660949707
    6. '**' → logprob: -9.771519660949707
    7. ' )' → logprob: -10.396519660949707
    8. ')i' → logprob: -10.521519660949707
    9. ')[' → logprob: -11.271519660949707
    10. ')`' → logprob: -11.396519660949707

Token 222: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2007883671903983e-05
    2. ' i' → logprob: -10.750021934509277
    3. ' ' → logprob: -15.375021934509277
    4. '```' → logprob: -16.000022888183594
    5. '   ' → logprob: -16.500022888183594
    6. ')' → logprob: -17.500022888183594
    7. '
' → logprob: -17.875022888183594
    8. ')i' → logprob: -18.250022888183594
    9. '  ' → logprob: -18.500022888183594
    10. '	i' → logprob: -18.750022888183594

Token 223: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.24854625761508942
    2. '
' → logprob: -1.6235462427139282
    3. '   ' → logprob: -3.9985463619232178
    4. '    
' → logprob: -6.373546123504639
    5. ' 
' → logprob: -7.623546123504639
    6. '  
' → logprob: -7.748546123504639
    7. ' fact' → logprob: -7.998546123504639
    8. ')' → logprob: -8.123546600341797
    9. ')
' → logprob: -8.373546600341797
    10. '

' → logprob: -8.373546600341797

Token 224: '   ' (ID: 271)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.09312015026807785
    2. '   ' → logprob: -2.4681200981140137
    3. '
' → logprob: -5.718120098114014
    4. ' fact' → logprob: -7.843120098114014
    5. '    
' → logprob: -7.968120098114014
    6. '```' → logprob: -9.968120574951172
    7. ' 
' → logprob: -10.593120574951172
    8. '  
' → logprob: -10.593120574951172
    9. '_fact' → logprob: -11.343120574951172
    10. '   
' → logprob: -11.843120574951172

Token 225: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -8.77627644513268e-06
    2. '
' → logprob: -12.750008583068848
    3. ' fact' → logprob: -12.875008583068848
    4. '   ' → logprob: -13.250008583068848
    5. 'factor' → logprob: -14.625008583068848
    6. '```' → logprob: -14.750008583068848
    7. '    
' → logprob: -16.000009536743164
    8. 'def' → logprob: -16.500009536743164
    9. '_fact' → logprob: -16.500009536743164
    10. 'for' → logprob: -16.625009536743164

Token 226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. ' =' → logprob: -12.625008583068848
    3. ' [' → logprob: -13.000008583068848
    4. '=' → logprob: -13.500008583068848
    5. '[
' → logprob: -14.375008583068848
    6. ']' → logprob: -15.875008583068848
    7. 'fact' → logprob: -16.00000762939453
    8. '```' → logprob: -16.12500762939453
    9. '=[' → logprob: -16.62500762939453
    10. '][' → logprob: -16.75000762939453

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.750009536743164
    3. ']' → logprob: -13.250009536743164
    4. '[' → logprob: -16.875009536743164
    5. '
' → logprob: -18.750009536743164
    6. ')' → logprob: -18.750009536743164
    7. ']=' → logprob: -18.750009536743164
    8. '1' → logprob: -19.500009536743164
    9. '   ' → logprob: -20.000009536743164
    10. '۰' → logprob: -20.750009536743164

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.876193169271573e-05
    2. ']=' → logprob: -9.375088691711426
    3. '=' → logprob: -13.000088691711426
    4. ' ]' → logprob: -13.375088691711426
    5. ')' → logprob: -18.250089645385742
    6. ' =' → logprob: -18.250089645385742
    7. ']
' → logprob: -18.500089645385742
    8. '],' → logprob: -19.000089645385742
    9. ',' → logprob: -19.500089645385742
    10. ']+=' → logprob: -20.000089645385742

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020752996206284
    2. ' =' → logprob: -2.350207567214966
    3. '=
' → logprob: -15.100207328796387
    4. ',' → logprob: -15.350207328796387
    5. ' =
' → logprob: -16.100208282470703
    6. ']=' → logprob: -16.350208282470703
    7. ']' → logprob: -16.600208282470703
    8. ' ' → logprob: -16.850208282470703
    9. '＝' → logprob: -16.975208282470703
    10. '<|end|>' → logprob: -17.225208282470703

Token 230: ' pow' (ID: 9779)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.12502670288086
    4. 'fact' → logprob: -18.37502670288086
    5. '  ' → logprob: -19.00002670288086
    6. '۱' → logprob: -20.25002670288086
    7. 'factor' → logprob: -20.50002670288086
    8. '১' → logprob: -20.62502670288086
    9. '```' → logprob: -21.25002670288086
    10. '１' → logprob: -21.37502670288086

Token 231: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10474981367588043
    2. '(' → logprob: -2.354749917984009
    3. '1' → logprob: -5.47974967956543
    4. '=' → logprob: -8.97974967956543
    5. ' ' → logprob: -9.10474967956543
    6. '(
' → logprob: -10.72974967956543
    7. '   ' → logprob: -11.10474967956543
    8. '0' → logprob: -11.22974967956543
    9. 'fact' → logprob: -11.22974967956543
    10. '[' → logprob: -11.60474967956543

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013642854755744338
    2. '0' → logprob: -7.376364231109619
    3. '1' → logprob: -7.751364231109619
    4. '=' → logprob: -8.501364707946777
    5. ' =' → logprob: -9.501364707946777
    6. ' ' → logprob: -11.376364707946777
    7. 'def' → logprob: -12.626364707946777
    8. ' [' → logprob: -12.751364707946777
    9. '```' → logprob: -12.876364707946777
    10. '(' → logprob: -13.001364707946777

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '1' → logprob: -15.125012397766113
    4. ']' → logprob: -16.375011444091797
    5. ')' → logprob: -17.375011444091797
    6. '=' → logprob: -18.000011444091797
    7. 'pow' → logprob: -18.000011444091797
    8. '  ' → logprob: -18.375011444091797
    9. '   ' → logprob: -18.375011444091797
    10. 'fact' → logprob: -18.875011444091797

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036993662361055613
    2. '=' → logprob: -6.12869930267334
    3. ']=' → logprob: -6.50369930267334
    4. ' =' → logprob: -12.00369930267334
    5. ' ]' → logprob: -12.75369930267334
    6. ')' → logprob: -12.87869930267334
    7. '<|end|>' → logprob: -13.12869930267334
    8. '1' → logprob: -14.37869930267334
    9. ',' → logprob: -15.87869930267334
    10. '[' → logprob: -15.87869930267334

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975604310631752
    2. ' =' → logprob: -3.5297560691833496
    3. '=
' → logprob: -13.154755592346191
    4. '=p' → logprob: -13.154755592346191
    5. 'p' → logprob: -13.654755592346191
    6. ' =
' → logprob: -16.279756546020508
    7. 'pow' → logprob: -16.279756546020508
    8. '<|end|>' → logprob: -16.404756546020508
    9. '1' → logprob: -16.529756546020508
    10. '=

' → logprob: -16.779756546020508

Token 236: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002911384915933013
    2. ' p' → logprob: -6.002911567687988
    3. '1' → logprob: -7.752911567687988
    4. ' ' → logprob: -12.127911567687988
    5. '0' → logprob: -15.002911567687988
    6. '  ' → logprob: -16.127910614013672
    7. '	p' → logprob: -16.502910614013672
    8. '   ' → logprob: -16.502910614013672
    9. '<p' → logprob: -17.127910614013672
    10. 'pow' → logprob: -17.127910614013672

Token 237: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.0035740535240620375
    2. '0' → logprob: -6.378573894500732
    3. '1' → logprob: -6.628573894500732
    4. 'ow' → logprob: -8.25357437133789
    5. 'awn' → logprob: -9.25357437133789
    6. 'wn' → logprob: -9.62857437133789
    7. 'o' → logprob: -10.25357437133789
    8. 'OWN' → logprob: -10.87857437133789
    9. '[' → logprob: -11.00357437133789
    10. 'w' → logprob: -11.50357437133789

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.612634362885728e-05
    2. '0' → logprob: -9.500076293945312
    3. '=' → logprob: -14.500076293945312
    4. '1' → logprob: -15.750076293945312
    5. ' [' → logprob: -15.750076293945312
    6. '```' → logprob: -15.875076293945312
    7. '[
' → logprob: -15.875076293945312
    8. '\[' → logprob: -17.000076293945312
    9. ' =' → logprob: -17.250076293945312
    10. ' ' → logprob: -18.625076293945312

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -16.0000057220459
    4. '[' → logprob: -16.2500057220459
    5. '1' → logprob: -18.1875057220459
    6. ')' → logprob: -18.3125057220459
    7. '```' → logprob: -18.4375057220459
    8. ']' → logprob: -18.5000057220459
    9. '  ' → logprob: -18.7500057220459
    10. '۰' → logprob: -18.8750057220459

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05300302430987358
    2. '=' → logprob: -3.0530030727386475
    3. ']=' → logprob: -5.428002834320068
    4. ' =' → logprob: -11.928003311157227
    5. '1' → logprob: -12.428003311157227
    6. ')' → logprob: -13.803003311157227
    7. ' ]' → logprob: -14.553003311157227
    8. '']=' → logprob: -15.303003311157227
    9. '<|end|>' → logprob: -15.303003311157227
    10. '[' → logprob: -15.428003311157227

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9623810658231378e-05
    2. ' =' → logprob: -10.875020027160645
    3. '1' → logprob: -14.250020027160645
    4. '=
' → logprob: -16.625019073486328
    5. '=

' → logprob: -20.000019073486328
    6. '=int' → logprob: -21.500019073486328
    7. '0' → logprob: -21.625019073486328
    8. 's' → logprob: -21.750019073486328
    9. '=}' → logprob: -21.750019073486328
    10. '<|end|>' → logprob: -22.000019073486328

Token 242: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -16.875123977661133
    4. '  ' → logprob: -18.625123977661133
    5. '۱' → logprob: -20.375123977661133
    6. '    ' → logprob: -21.187623977661133
    7. '```' → logprob: -21.187623977661133
    8. '১' → logprob: -21.437623977661133
    9. ' ' → logprob: -21.500123977661133
    10. '１' → logprob: -21.500123977661133

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '  ' → logprob: -20.375001907348633
    5. '۱' → logprob: -21.000001907348633
    6. '１' → logprob: -21.375001907348633
    7. '১' → logprob: -22.125001907348633
    8. '```' → logprob: -22.125001907348633
    9. '१' → logprob: -22.750001907348633
    10. 'pow' → logprob: -23.000001907348633

Token 244: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4256807565689087
    2. '   ' → logprob: -1.4256807565689087
    3. 'for' → logprob: -3.550680637359619
    4. '    
' → logprob: -3.925680637359619
    5. ' for' → logprob: -4.050680637359619
    6. '  
' → logprob: -4.175680637359619
    7. '\n' → logprob: -5.050680637359619
    8. '<|end|>' → logprob: -5.175680637359619
    9. ' 
' → logprob: -5.425680637359619
    10. 'fact' → logprob: -5.550680637359619

Token 245: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39500370621681213
    2. '   ' → logprob: -1.2700036764144897
    3. '    
' → logprob: -3.8950037956237793
    4. '\n' → logprob: -4.895003795623779
    5. '  
' → logprob: -4.895003795623779
    6. ' for' → logprob: -5.645003795623779
    7. 'for' → logprob: -5.645003795623779
    8. ' 
' → logprob: -6.770003795623779
    9. '   
' → logprob: -7.145003795623779
    10. '' → logprob: -8.020003318786621

Token 246: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.073183573782444
    2. ' for' → logprob: -2.823183536529541
    3. '   ' → logprob: -4.573183536529541
    4. 'fact' → logprob: -8.6981840133667
    5. '<|end|>' → logprob: -8.8231840133667
    6. ')' → logprob: -8.8231840133667
    7. '
' → logprob: -9.1981840133667
    8. ' ' → logprob: -9.4481840133667
    9. 'def' → logprob: -9.8231840133667
    10. '```' → logprob: -10.1981840133667

Token 247: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.19692395627498627
    2. 'ization' → logprob: -2.1969239711761475
    3. 'iser' → logprob: -3.0719239711761475
    4. 'ized' → logprob: -4.821923732757568
    5. 'ize' → logprob: -5.321923732757568
    6. 'fact' → logprob: -6.071923732757568
    7. 'isé' → logprob: -6.446923732757568
    8. 'is' → logprob: -6.696923732757568
    9. 'isez' → logprob: -7.196923732757568
    10. 'i' → logprob: -7.946923732757568

Token 248: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3023884892463684
    2. '   ' → logprob: -1.5523884296417236
    3. '    
' → logprob: -4.177388668060303
    4. '\n' → logprob: -4.802388668060303
    5. '  
' → logprob: -4.927388668060303
    6. '<|end|>' → logprob: -5.052388668060303
    7. ' for' → logprob: -5.177388668060303
    8. 'for' → logprob: -5.927388668060303
    9. 'fact' → logprob: -7.177388668060303
    10. ' 
' → logprob: -7.177388668060303

Token 249: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' base' (ID: 3611)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5389683246612549
    2. 'fact' → logprob: -1.2889683246612549
    3. 'base' → logprob: -2.413968324661255
    4. 'prem' → logprob: -3.538968324661255
    5. 'factor' → logprob: -3.913968324661255
    6. ' base' → logprob: -8.038968086242676
    7. '
' → logprob: -8.163968086242676
    8. 'val' → logprob: -8.413968086242676
    9. '...' → logprob: -8.538968086242676
    10. 'multip' → logprob: -8.538968086242676

Token 251: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3103732168674469
    2. '
' → logprob: -1.6853731870651245
    3. '    
' → logprob: -3.310373306274414
    4. ' for' → logprob: -4.310373306274414
    5. '  
' → logprob: -4.685373306274414
    6. 'for' → logprob: -4.685373306274414
    7. '<|end|>' → logprob: -5.685373306274414
    8. '\n' → logprob: -5.935373306274414
    9. ' 
' → logprob: -6.435373306274414
    10. '   
' → logprob: -6.810373306274414

Token 252: ' puiss' (ID: 102546)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.10216571390628815
    2. 'factor' → logprob: -2.352165699005127
    3. ' fact' → logprob: -6.352165699005127
    4. ' factorial' → logprob: -10.227166175842285
    5. ' ' → logprob: -10.352166175842285
    6. '   ' → logprob: -10.602166175842285
    7. '```' → logprob: -10.727166175842285
    8. 'multip' → logprob: -11.477166175842285
    9. 'calcul' → logprob: -11.477166175842285
    10. ' factor' → logprob: -11.602166175842285

Token 253: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.04972420632839203
    2. 'es' → logprob: -3.0497241020202637
    3. 'ies' → logprob: -8.049724578857422
    4. 'ces' → logprob: -8.299724578857422
    5. 'ences' → logprob: -8.674724578857422
    6. 'ance' → logprob: -9.049724578857422
    7. 'e' → logprob: -9.299724578857422
    8. 'i' → logprob: -10.049724578857422
    9. 'ans' → logprob: -11.049724578857422
    10. 'aces' → logprob: -11.049724578857422

Token 254: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4677012860774994
    2. '   ' → logprob: -1.3427013158798218
    3. '    
' → logprob: -3.5927011966705322
    4. '  
' → logprob: -3.7177011966705322
    5. '<|end|>' → logprob: -4.092701435089111
    6. ' for' → logprob: -4.717701435089111
    7. 'fact' → logprob: -4.717701435089111
    8. 'for' → logprob: -4.717701435089111
    9. '\n' → logprob: -5.092701435089111
    10. ' 
' → logprob: -5.717701435089111

Token 255: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.41755491495132446
    2. 'factor' → logprob: -1.1675548553466797
    3. 'des' → logprob: -3.6675548553466797
    4. ' fact' → logprob: -6.04255485534668
    5. ' des' → logprob: -7.54255485534668
    6. 'fac' → logprob: -7.91755485534668
    7. '   ' → logprob: -8.29255485534668
    8. ' ' → logprob: -8.29255485534668
    9. 'de' → logprob: -8.66755485534668
    10. '  ' → logprob: -9.29255485534668

Token 256: 'ori' (ID: 6510)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1824208498001099
    2. 'or' → logprob: -1.3074208498001099
    3. '[' → logprob: -2.0574207305908203
    4. ']' → logprob: -2.5574207305908203
    5. 'orial' → logprob: -2.6824207305908203
    6. 'ial' → logprob: -3.1824207305908203
    7. '```' → logprob: -3.1824207305908203
    8. '[i' → logprob: -3.8074207305908203
    9. ')' → logprob: -4.93242073059082
    10. '       ' → logprob: -5.68242073059082

Token 257: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0022513647563755512
    2. 'elle' → logprob: -6.502251148223877
    3. 'lles' → logprob: -8.752251625061035
    4. 'eles' → logprob: -9.002251625061035
    5. 'ales' → logprob: -9.002251625061035
    6. 'els' → logprob: -9.877251625061035
    7. 'el' → logprob: -10.252251625061035
    8. 'es' → logprob: -10.252251625061035
    9. 'nelles' → logprob: -10.252251625061035
    10. 'alles' → logprob: -10.502251625061035

Token 258: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2643546760082245
    2. ' for' → logprob: -2.264354705810547
    3. 'for' → logprob: -2.264354705810547
    4. '    
' → logprob: -4.764354705810547
    5. '
' → logprob: -5.514354705810547
    6. 'fact' → logprob: -5.764354705810547
    7. '  
' → logprob: -5.889354705810547
    8. '\n' → logprob: -6.639354705810547
    9. '   
' → logprob: -6.889354705810547
    10. ' 
' → logprob: -7.139354705810547

Token 259: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10301884263753891
    2. '   ' → logprob: -2.7280187606811523
    3. ' for' → logprob: -3.4780187606811523
    4. 'fact' → logprob: -6.478018760681152
    5. '```' → logprob: -9.978018760681152
    6. '	for' → logprob: -10.853018760681152
    7. 'factor' → logprob: -10.978018760681152
    8. ' ' → logprob: -11.103018760681152
    9. '    
' → logprob: -11.353018760681152
    10. '
' → logprob: -11.853018760681152

Token 260: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016204221174120903
    2. '   ' → logprob: -4.766204357147217
    3. ' for' → logprob: -4.891204357147217
    4. 'fact' → logprob: -10.266203880310059
    5. '	for' → logprob: -11.891203880310059
    6. '```' → logprob: -12.641203880310059
    7. '    
' → logprob: -13.766203880310059
    8. ' ' → logprob: -13.891203880310059
    9. 'factor' → logprob: -14.766203880310059
    10. '  ' → logprob: -15.266203880310059

Token 261: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011726059019565582
    2. ' for' → logprob: -6.7511725425720215
    3. 'fact' → logprob: -13.50117301940918
    4. '   ' → logprob: -14.75117301940918
    5. '```' → logprob: -15.50117301940918
    6. ' ' → logprob: -15.87617301940918
    7. 'from' → logprob: -16.50117301940918
    8. 'factor' → logprob: -17.12617301940918
    9. 'i' → logprob: -17.50117301940918
    10. 'fo' → logprob: -17.75117301940918

Token 262: '-cal' (ID: 84920)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -1.4414308071136475
    2. 'calc' → logprob: -1.4414308071136475
    3. 'paration' → logprob: -1.6914308071136475
    4. 'for' → logprob: -2.0664308071136475
    5. 'calcul' → logprob: -2.8164308071136475
    6. 'c' → logprob: -2.9414308071136475
    7. '   ' → logprob: -4.066431045532227
    8. 'rem' → logprob: -4.066431045532227
    9. '-cal' → logprob: -4.316431045532227
    10. 'comput' → logprob: -4.316431045532227

Token 263: 'cul' (ID: 2885)
  Prédit: 'culation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.45141586661338806
    2. 'al' → logprob: -1.4514158964157104
    3. 'c' → logprob: -2.326415777206421
    4. 'cul' → logprob: -3.701415777206421
    5. 'ulation' → logprob: -6.326416015625
    6. 'ac' → logprob: -6.951416015625
    7. 'cal' → logprob: -7.326416015625
    8. '#' → logprob: -7.951416015625
    9. 'l' → logprob: -8.201416015625
    10. '
' → logprob: -8.201416015625

Token 264: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.05003959685564041
    2. ' for' → logprob: -3.300039529800415
    3. ' de' → logprob: -5.425039768218994
    4. 'for' → logprob: -5.425039768218994
    5. 'des' → logprob: -6.175039768218994
    6. ' pour' → logprob: -8.050039291381836
    7. '   ' → logprob: -8.425039291381836
    8. ' ' → logprob: -8.800039291381836
    9. ' i' → logprob: -9.425039291381836
    10. 'fact' → logprob: -9.675039291381836

Token 265: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.055048152804374695
    2. 'factor' → logprob: -3.5550482273101807
    3. 'for' → logprob: -4.305047988891602
    4. ' fact' → logprob: -4.555047988891602
    5. 'i' → logprob: -7.430047988891602
    6. ' for' → logprob: -9.555047988891602
    7. 'range' → logprob: -10.180047988891602
    8. 'fac' → logprob: -10.305047988891602
    9. ' factorial' → logprob: -10.305047988891602
    10. ' i' → logprob: -10.430047988891602

Token 266: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.40913712978363037
    2. 'or' → logprob: -1.2841371297836304
    3. 'i' → logprob: -3.40913724899292
    4. 'orial' → logprob: -4.90913724899292
    5. 'act' → logprob: -5.15913724899292
    6. 'ort' → logprob: -5.90913724899292
    7. 'actor' → logprob: -6.78413724899292
    8. 'ac' → logprob: -6.78413724899292
    9. '```' → logprob: -6.90913724899292
    10. '#' → logprob: -7.28413724899292

Token 267: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -3.166338137816638e-05
    2. 'alles' → logprob: -11.375031471252441
    3. 'nelles' → logprob: -12.125031471252441
    4. 'lles' → logprob: -12.375031471252441
    5. 'elli' → logprob: -12.500031471252441
    6. 'ell' → logprob: -12.750031471252441
    7. 'elle' → logprob: -13.750031471252441
    8. 'els' → logprob: -14.500031471252441
    9. 'e' → logprob: -15.250031471252441
    10. 'a' → logprob: -15.375031471252441

Token 268: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1644827127456665
    2. ' for' → logprob: -2.039482593536377
    3. '   ' → logprob: -4.039482593536377
    4. ' and' → logprob: -6.289482593536377
    5. ',' → logprob: -6.664482593536377
    6. 'and' → logprob: -8.414483070373535
    7. '<|end|>' → logprob: -8.789483070373535
    8. 'fact' → logprob: -9.289483070373535
    9. ' et' → logprob: -9.289483070373535
    10. '.' → logprob: -10.164483070373535

Token 269: ' des' (ID: 731)
  Prédit: ' puiss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.7725028395652771
    2. ' des' → logprob: -1.0225028991699219
    3. 'des' → logprob: -2.647502899169922
    4. 'pu' → logprob: -2.772502899169922
    5. 'pow' → logprob: -3.647502899169922
    6. 'powers' → logprob: -4.522502899169922
    7. ' puissance' → logprob: -6.272502899169922
    8. ' powers' → logprob: -6.897502899169922
    9. 'p' → logprob: -6.897502899169922
    10. ' ' → logprob: -7.022502899169922

Token 270: ' puiss' (ID: 102546)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.07787387073040009
    2. ' puiss' → logprob: -3.452873945236206
    3. 'pow' → logprob: -3.452873945236206
    4. 'powers' → logprob: -5.327873706817627
    5. 'in' → logprob: -5.452873706817627
    6. 'p' → logprob: -7.202873706817627
    7. 'inverse' → logprob: -7.952873706817627
    8. 'inv' → logprob: -8.577874183654785
    9. '   ' → logprob: -8.702874183654785
    10. 'ex' → logprob: -8.827874183654785

Token 271: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.08969266712665558
    2. 'i' → logprob: -3.7146925926208496
    3. 'ences' → logprob: -4.46469259262085
    4. 'anci' → logprob: -4.46469259262085
    5. 'ivi' → logprob: -5.08969259262085
    6. 'iv' → logprob: -5.21469259262085
    7. 'iences' → logprob: -5.33969259262085
    8. 'enti' → logprob: -6.08969259262085
    9. 'onn' → logprob: -6.21469259262085
    10. 'anc' → logprob: -6.46469259262085

Token 272: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6587126851081848
    2. ' for' → logprob: -1.15871262550354
    3. 'for' → logprob: -1.78371262550354
    4. '    
' → logprob: -8.783712387084961
    5. '
' → logprob: -9.283712387084961
    6. 'fact' → logprob: -9.283712387084961
    7. ',' → logprob: -9.408712387084961
    8. '	for' → logprob: -10.158712387084961
    9. '  
' → logprob: -10.158712387084961
    10. '```' → logprob: -11.158712387084961

Token 273: ''à' (ID: 33688)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.4991092085838318
    2. 'à' → logprob: -1.7491092681884766
    3. ''à' → logprob: -1.8741092681884766
    4. ''au' → logprob: -3.1241092681884766
    5. '   ' → logprob: -4.624109268188477
    6. '’à' → logprob: -5.749109268188477
    7. ' au' → logprob: -5.749109268188477
    8. 'a' → logprob: -6.374109268188477
    9. ' à' → logprob: -6.374109268188477
    10. '’au' → logprob: -6.499109268188477

Token 274: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005976554471999407
    2. ' M' → logprob: -5.130976676940918
    3. '   ' → logprob: -10.005976676940918
    4. ' ' → logprob: -14.505976676940918
    5. '```' → logprob: -14.630976676940918
    6. 'm' → logprob: -15.005976676940918
    7. '1' → logprob: -15.005976676940918
    8. '[M' → logprob: -15.005976676940918
    9. '>M' → logprob: -15.630976676940918
    10. '<M' → logprob: -16.0059757232666

Token 275: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4216821789741516
    2. ' for' → logprob: -1.2966821193695068
    3. '   ' → logprob: -2.671682119369507
    4. '
' → logprob: -6.796682357788086
    5. '    
' → logprob: -8.796682357788086
    6. '	for' → logprob: -9.421682357788086
    7. '  
' → logprob: -10.171682357788086
    8. '```' → logprob: -10.421682357788086
    9. ',' → logprob: -11.171682357788086
    10. '<|end|>' → logprob: -11.421682357788086

Token 276: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7851261496543884
    2. '   ' → logprob: -0.9101261496543884
    3. ' for' → logprob: -2.160126209259033
    4. '
' → logprob: -3.660126209259033
    5. '    
' → logprob: -8.660125732421875
    6. ',' → logprob: -9.785125732421875
    7. '```' → logprob: -9.910125732421875
    8. 'fact' → logprob: -10.160125732421875
    9. '  
' → logprob: -10.410125732421875
    10. '	for' → logprob: -11.410125732421875

Token 277: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5248233079910278
    2. ' for' → logprob: -1.0248233079910278
    3. '
' → logprob: -3.6498231887817383
    4. '   ' → logprob: -3.7748231887817383
    5. '    
' → logprob: -8.524823188781738
    6. '```' → logprob: -8.649823188781738
    7. '  
' → logprob: -9.649823188781738
    8. ' 
' → logprob: -10.149823188781738
    9. 'fact' → logprob: -10.524823188781738
    10. '	for' → logprob: -11.149823188781738

Token 278: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025069285184144974
    2. ' for' → logprob: -6.002506732940674
    3. '   ' → logprob: -10.377507209777832
    4. '```' → logprob: -16.502506256103516
    5. 'fact' → logprob: -16.752506256103516
    6. '
' → logprob: -17.752506256103516
    7. ' ' → logprob: -17.877506256103516
    8. '	for' → logprob: -18.377506256103516
    9. 'i' → logprob: -18.877506256103516
    10. '    
' → logprob: -18.877506256103516

Token 279: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0040838588029146194
    2. 'i' → logprob: -5.504083633422852
    3. '	i' → logprob: -12.504083633422852
    4. ' ' → logprob: -13.379083633422852
    5. '   ' → logprob: -16.50408363342285
    6. 'I' → logprob: -16.87908363342285
    7. '  ' → logprob: -17.75408363342285
    8. ' ' → logprob: -17.75408363342285
    9. '```' → logprob: -19.87908363342285
    10. '_i' → logprob: -19.87908363342285

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016109207645058632
    2. 'in' → logprob: -4.141108989715576
    3. ' ' → logprob: -9.766109466552734
    4. ' i' → logprob: -12.391109466552734
    5. '  ' → logprob: -12.766109466552734
    6. '	in' → logprob: -13.016109466552734
    7. 'In' → logprob: -13.391109466552734
    8. '1' → logprob: -13.516109466552734
    9. 'range' → logprob: -14.266109466552734
    10. 'import' → logprob: -14.391109466552734

Token 281: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12694679200649261
    2. 'range' → logprob: -2.1269466876983643
    3. ' ' → logprob: -11.251946449279785
    4. '   ' → logprob: -13.126946449279785
    5. '1' → logprob: -13.251946449279785
    6. '	range' → logprob: -14.626946449279785
    7. '  ' → logprob: -14.751946449279785
    8. '(range' → logprob: -15.376946449279785
    9. ' rang' → logprob: -15.626946449279785
    10. '    ' → logprob: -15.876946449279785

Token 282: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1270095854997635
    2. '1' → logprob: -2.127009630203247
    3. '   ' → logprob: -9.877009391784668
    4. ' ' → logprob: -10.877009391784668
    5. ' (' → logprob: -11.502009391784668
    6. '(
' → logprob: -14.377009391784668
    7. '(M' → logprob: -15.627009391784668
    8. '```' → logprob: -16.627010345458984
    9. '[' → logprob: -16.752010345458984
    10. '2' → logprob: -17.127010345458984

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. 'M' → logprob: -14.250123977661133
    4. '   ' → logprob: -15.625123977661133
    5. ' M' → logprob: -17.000123977661133
    6. '(' → logprob: -19.875123977661133
    7. '  ' → logprob: -20.375123977661133
    8. '    ' → logprob: -21.125123977661133
    9. '0' → logprob: -21.250123977661133
    10. '(M' → logprob: -22.000123977661133

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020592104643583298
    2. ' ,' → logprob: -3.895592212677002
    3. ',M' → logprob: -10.145591735839844
    4. '   ' → logprob: -11.770591735839844
    5. ')' → logprob: -14.145591735839844
    6. ' ' → logprob: -14.645591735839844
    7. ',
' → logprob: -14.895591735839844
    8. '):' → logprob: -15.020591735839844
    9. '  ' → logprob: -15.145591735839844
    10. '(M' → logprob: -15.645591735839844

Token 285: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.20141635835170746
    2. ' M' → logprob: -1.7014163732528687
    3. '   ' → logprob: -12.826416015625
    4. ' ' → logprob: -15.201416015625
    5. '(M' → logprob: -16.826416015625
    6. ')' → logprob: -17.201416015625
    7. 'm' → logprob: -17.451416015625
    8. '    ' → logprob: -17.701416015625
    9. '	M' → logprob: -17.951416015625
    10. '  ' → logprob: -18.076416015625

Token 286: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02980511076748371
    2. ' +' → logprob: -3.5298051834106445
    3. '   ' → logprob: -10.654805183410645
    4. '):
' → logprob: -11.029805183410645
    5. '):' → logprob: -11.279805183410645
    6. '+
' → logprob: -13.404805183410645
    7. ')' → logprob: -15.279805183410645
    8. '+i' → logprob: -16.279804229736328
    9. ' +
' → logprob: -16.404804229736328
    10. ')+' → logprob: -16.654804229736328

Token 287: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.375059127807617
    4. ')' → logprob: -18.000059127807617
    5. '
' → logprob: -19.000059127807617
    6. '```' → logprob: -19.000059127807617
    7. '+' → logprob: -20.250059127807617
    8. '2' → logprob: -21.062559127807617
    9. '

' → logprob: -21.125059127807617
    10. '  ' → logprob: -21.562559127807617

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. ')' → logprob: -17.250001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '+' → logprob: -18.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. '
' → logprob: -19.125001907348633
    8. '):
' → logprob: -20.500001907348633
    9. '2' → logprob: -21.250001907348633
    10. '

' → logprob: -22.375001907348633

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030171135440468788
    2. '):
' → logprob: -3.5301711559295654
    3. ':' → logprob: -8.030171394348145
    4. ')' → logprob: -9.405171394348145
    5. '):
' → logprob: -11.780171394348145
    6. '   ' → logprob: -12.905171394348145
    7. ':
' → logprob: -13.655171394348145
    8. ' ):' → logprob: -13.780171394348145
    9. '):

' → logprob: -16.030170440673828
    10. ' ):
' → logprob: -16.155170440673828

Token 290: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17639881372451782
    2. '   ' → logprob: -2.801398754119873
    3. ' fact' → logprob: -2.926398754119873
    4. 'fact' → logprob: -3.051398754119873
    5. '    ' → logprob: -10.051399230957031
    6. '```' → logprob: -10.551399230957031
    7. '      ' → logprob: -12.051399230957031
    8. '     ' → logprob: -12.176399230957031
    9. '_fact' → logprob: -12.301399230957031
    10. '   ' → logprob: -12.426399230957031

Token 291: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.25245118141174316
    2. ' fact' → logprob: -1.5024511814117432
    3. '   ' → logprob: -7.627450942993164
    4. '       ' → logprob: -10.627450942993164
    5. '_fact' → logprob: -12.377450942993164
    6. '    ' → logprob: -13.252450942993164
    7. '.fact' → logprob: -13.877450942993164
    8. 'Fact' → logprob: -14.002450942993164
    9. ' fakt' → logprob: -14.377450942993164
    10. ' ' → logprob: -14.877450942993164

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001593195047462359
    2. '[' → logprob: -8.75015926361084
    3. ' [' → logprob: -15.00015926361084
    4. '   ' → logprob: -15.75015926361084
    5. '[I' → logprob: -16.500160217285156
    6. 'i' → logprob: -17.250160217285156
    7. '```' → logprob: -17.750160217285156
    8. ')[' → logprob: -18.000160217285156
    9. '[f' → logprob: -18.125160217285156
    10. '=' → logprob: -18.875160217285156

Token 293: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45767563581466675
    2. '=' → logprob: -1.0826756954193115
    3. ']=' → logprob: -4.082675457000732
    4. ' =' → logprob: -4.457675457000732
    5. ' ]' → logprob: -9.45767593383789
    6. '=i' → logprob: -10.83267593383789
    7. ')' → logprob: -12.95767593383789
    8. ']=(' → logprob: -13.58267593383789
    9. ' ' → logprob: -13.70767593383789
    10. ')=' → logprob: -13.70767593383789

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005235648714005947
    2. ' =' → logprob: -5.25523567199707
    3. '=i' → logprob: -13.38023567199707
    4. '=int' → logprob: -16.00523567199707
    5. '=

' → logprob: -16.00523567199707
    6. '=f' → logprob: -17.00523567199707
    7. '=
' → logprob: -17.13023567199707
    8. ',' → logprob: -17.25523567199707
    9. ']=' → logprob: -17.63023567199707
    10. '＝' → logprob: -17.63023567199707

Token 295: ' fact' (ID: 2840)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8031534552574158
    2. ' fact' → logprob: -1.4281535148620605
    3. 'fact' → logprob: -1.8031535148620605
    4. '(f' → logprob: -1.9281535148620605
    5. '(' → logprob: -6.4281535148620605
    6. '(i' → logprob: -8.428153038024902
    7. '_fact' → logprob: -9.303153038024902
    8. ' ' → logprob: -9.678153038024902
    9. ' fakt' → logprob: -10.553153038024902
    10. ' factorial' → logprob: -10.678153038024902

Token 296: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.625000953674316
    3. '[I' → logprob: -18.750001907348633
    4. 'i' → logprob: -18.875001907348633
    5. '[
' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. ' [' → logprob: -20.625001907348633
    9. '(i' → logprob: -21.625001907348633
    10. '
' → logprob: -21.625001907348633

Token 297: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00403411453589797
    2. '[i' → logprob: -5.629034042358398
    3. ' -' → logprob: -8.004034042358398
    4. '[-' → logprob: -9.504034042358398
    5. '[' → logprob: -10.754034042358398
    6. 'i' → logprob: -13.379034042358398
    7. ']' → logprob: -13.504034042358398
    8. '-i' → logprob: -15.254034042358398
    9. '   ' → logprob: -15.754034042358398
    10. '−' → logprob: -16.1290340423584

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'i' → logprob: -14.750004768371582
    4. '   ' → logprob: -16.875003814697266
    5. ']' → logprob: -17.625003814697266
    6. '
' → logprob: -18.500003814697266
    7. ' i' → logprob: -19.500003814697266
    8. '  ' → logprob: -19.625003814697266
    9. '```' → logprob: -19.750003814697266
    10. ')' → logprob: -19.875003814697266

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '```' → logprob: -17.437501907348633
    7. ']' → logprob: -17.562501907348633
    8. '

' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.437501907348633
    10. '    ' → logprob: -19.125001907348633

Token 300: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5762661695480347
    2. ' *' → logprob: -0.8262661695480347
    3. '*i' → logprob: -8.076266288757324
    4. ' ' → logprob: -12.326266288757324
    5. ')' → logprob: -12.326266288757324
    6. ' ' → logprob: -12.451266288757324
    7. ']' → logprob: -13.201266288757324
    8. '**' → logprob: -15.201266288757324
    9. '   ' → logprob: -15.451266288757324
    10. ',' → logprob: -15.826266288757324

Token 301: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2521628439426422
    2. ' *' → logprob: -1.5021628141403198
    3. '*i' → logprob: -8.37716293334961
    4. ' ' → logprob: -13.00216293334961
    5. ' ' → logprob: -14.00216293334961
    6. '   ' → logprob: -15.25216293334961
    7. '
' → logprob: -15.37716293334961
    8. '*object' → logprob: -16.37716293334961
    9. '**' → logprob: -16.50216293334961
    10. '*
' → logprob: -17.50216293334961

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005536287208087742
    2. ' i' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.750554084777832
    4. '	i' → logprob: -15.500554084777832
    5. ' ' → logprob: -19.750553131103516
    6. '    ' → logprob: -20.000553131103516
    7. '  ' → logprob: -20.125553131103516
    8. '*i' → logprob: -21.250553131103516
    9. '(i' → logprob: -21.750553131103516
    10. '```' → logprob: -22.000553131103516

Token 303: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03804229199886322
    2. '%' → logprob: -3.2880423069000244
    3. ')' → logprob: -14.913042068481445
    4. ' ' → logprob: -15.038042068481445
    5. '%n' → logprob: -16.538042068481445
    6. '%i' → logprob: -17.288042068481445
    7. ' %=' → logprob: -17.788042068481445
    8. ')%' → logprob: -18.538042068481445
    9. '%m' → logprob: -18.663042068481445
    10. ' mod' → logprob: -19.038042068481445

Token 304: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.01815006136894226
    2. ' mod' → logprob: -4.0181498527526855
    3. '998' → logprob: -16.643150329589844
    4. '(mod' → logprob: -17.393150329589844
    5. '	mod' → logprob: -17.893150329589844
    6. ' ' → logprob: -18.893150329589844
    7. ' мод' → logprob: -21.018150329589844
    8. ' modul' → logprob: -21.393150329589844
    9. '999' → logprob: -21.643150329589844
    10. '.mod' → logprob: -22.268150329589844

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003169749164953828
    2. '
' → logprob: -6.628169536590576
    3. '   ' → logprob: -7.378169536590576
    4. '        
' → logprob: -7.753169536590576
    5. ',' → logprob: -9.003170013427734
    6. '  
' → logprob: -9.128170013427734
    7. '    
' → logprob: -9.253170013427734
    8. ' 
' → logprob: -9.503170013427734
    9. '<|end|>' → logprob: -9.503170013427734
    10. ')' → logprob: -9.628170013427734

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005966596305370331
    2. 'pow' → logprob: -5.130966663360596
    3. '   ' → logprob: -10.380966186523438
    4. ' pow' → logprob: -12.255966186523438
    5. '```' → logprob: -14.130966186523438
    6. '      ' → logprob: -15.130966186523438
    7. '           ' → logprob: -15.255966186523438
    8. '        
' → logprob: -15.630966186523438
    9. 'p' → logprob: -15.630966186523438
    10. '    ' → logprob: -15.880966186523438

Token 307: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -0.00013905855303164572
    2. ' pow' → logprob: -9.000139236450195
    3. '       ' → logprob: -11.250139236450195
    4. '   ' → logprob: -12.875139236450195
    5. '(pow' → logprob: -17.500139236450195
    6. 'power' → logprob: -18.125139236450195
    7. '_pow' → logprob: -18.500139236450195
    8. ' ' → logprob: -18.625139236450195
    9. '    ' → logprob: -18.750139236450195
    10. '  ' → logprob: -19.250139236450195

Token 308: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. '(m' → logprob: -16.5
    3. ' m' → logprob: -17.5
    4. 'м' → logprob: -18.5
    5. 'pow' → logprob: -18.5
    6. '	m' → logprob: -19.0
    7. '(pow' → logprob: -19.25
    8. '[m' → logprob: -19.375
    9. '   ' → logprob: -19.375
    10. ' ' → logprob: -19.875

Token 309: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4378848391061183e-05
    2. '[' → logprob: -11.250014305114746
    3. ' [' → logprob: -13.875014305114746
    4. '[I' → logprob: -15.250014305114746
    5. ')[' → logprob: -17.750015258789062
    6. '
' → logprob: -18.375015258789062
    7. ']' → logprob: -18.375015258789062
    8. '   ' → logprob: -18.500015258789062
    9. '=' → logprob: -18.625015258789062
    10. ')' → logprob: -18.875015258789062

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011140963062644005
    2. '=' → logprob: -4.761140823364258
    3. ' =' → logprob: -6.636140823364258
    4. ' ]' → logprob: -6.761140823364258
    5. ']=' → logprob: -9.886140823364258
    6. ')' → logprob: -13.261140823364258
    7. ' ' → logprob: -15.011140823364258
    8. ' ' → logprob: -17.136140823364258
    9. ',' → logprob: -17.136140823364258
    10. '>' → logprob: -17.511140823364258

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.224077224731445
    4. ']' → logprob: -17.724077224731445
    5. ')' → logprob: -17.724077224731445
    6. '>' → logprob: -18.974077224731445
    7. '＝' → logprob: -19.099077224731445
    8. ',' → logprob: -19.349077224731445
    9. '[' → logprob: -19.599077224731445
    10. ' =(' → logprob: -20.349077224731445

Token 312: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07966208457946777
    2. ' pow' → logprob: -2.5796620845794678
    3. '(pow' → logprob: -7.454662322998047
    4. ' (' → logprob: -8.829662322998047
    5. ' ' → logprob: -10.954662322998047
    6. '   ' → logprob: -11.954662322998047
    7. '((' → logprob: -12.454662322998047
    8. '(p' → logprob: -13.017162322998047
    9. 'mul' → logprob: -13.079662322998047
    10. '_pow' → logprob: -13.204662322998047

Token 313: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004345971625298262
    2. '(m' → logprob: -5.629345893859863
    3. '(pow' → logprob: -7.504345893859863
    4. '(M' → logprob: -9.379345893859863
    5. 'pow' → logprob: -9.629345893859863
    6. '((' → logprob: -11.504345893859863
    7. ' (' → logprob: -11.504345893859863
    8. '(' → logprob: -11.504345893859863
    9. 'mod' → logprob: -12.504345893859863
    10. 'M' → logprob: -12.879345893859863

Token 314: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. 'i' → logprob: -15.5
    4. ' [' → logprob: -19.0
    5. '(i' → logprob: -19.125
    6. '[I' → logprob: -19.25
    7. '```' → logprob: -19.375
    8. ' i' → logprob: -19.5
    9. '   ' → logprob: -19.75
    10. '{i' → logprob: -20.5

Token 315: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02043338678777218
    2. '[i' → logprob: -4.02043342590332
    3. 'i' → logprob: -6.27043342590332
    4. ' -' → logprob: -7.89543342590332
    5. '[' → logprob: -12.14543342590332
    6. ' i' → logprob: -12.64543342590332
    7. '-i' → logprob: -12.77043342590332
    8. '[-' → logprob: -13.14543342590332
    9. '(i' → logprob: -14.02043342590332
    10. '   ' → logprob: -14.02043342590332

Token 316: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010224303230643272
    2. '-' → logprob: -5.135224342346191
    3. ' ' → logprob: -5.510224342346191
    4. ' -' → logprob: -8.760224342346191
    5. '   ' → logprob: -10.135224342346191
    6. '```' → logprob: -11.260224342346191
    7. ']' → logprob: -11.385224342346191
    8. '       ' → logprob: -12.822724342346191
    9. '  ' → logprob: -12.947724342346191
    10. ')' → logprob: -13.072724342346191

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009737557265907526
    2. ' ' → logprob: -7.000973701477051
    3. 'i' → logprob: -10.50097370147705
    4. 'm' → logprob: -11.75097370147705
    5. '```' → logprob: -12.25097370147705
    6. ' i' → logprob: -12.56347370147705
    7. '(i' → logprob: -12.75097370147705
    8. '   ' → logprob: -13.06347370147705
    9. '[i' → logprob: -13.56347370147705
    10. '0' → logprob: -13.62597370147705

Token 318: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4744129478931427
    2. ' *' → logprob: -0.9744129180908203
    3. ')' → logprob: -8.47441291809082
    4. ']' → logprob: -9.22441291809082
    5. '*(' → logprob: -11.09941291809082
    6. ' ' → logprob: -11.84941291809082
    7. ',' → logprob: -13.59941291809082
    8. ' ' → logprob: -13.97441291809082
    9. '   ' → logprob: -14.09941291809082
    10. '}' → logprob: -14.47441291809082

Token 319: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10039298981428146
    2. ' *' → logprob: -2.350393056869507
    3. '*(' → logprob: -8.600393295288086
    4. ' ' → logprob: -13.475393295288086
    5. '   ' → logprob: -15.350393295288086
    6. '**' → logprob: -15.975393295288086
    7. ' ' → logprob: -16.600393295288086
    8. '```' → logprob: -16.725393295288086
    9. '*
' → logprob: -16.850393295288086
    10. ' (' → logprob: -16.850393295288086

Token 320: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.014214630238711834
    2. ' (' → logprob: -4.264214515686035
    3. '(m' → logprob: -10.139214515686035
    4. '(' → logprob: -12.139214515686035
    5. '(mod' → logprob: -13.014214515686035
    6. '((' → logprob: -13.389214515686035
    7. '(Mod' → logprob: -13.764214515686035
    8. '   ' → logprob: -14.389214515686035
    9. '(
' → logprob: -15.139214515686035
    10. '
' → logprob: -15.764214515686035

Token 321: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.008695526979863644
    2. '(M' → logprob: -4.758695602416992
    3. ' M' → logprob: -9.508695602416992
    4. ' (' → logprob: -12.133695602416992
    5. '   ' → logprob: -14.133695602416992
    6. '(' → logprob: -15.133695602416992
    7. '[M' → logprob: -15.883695602416992
    8. ')' → logprob: -16.383695602416992
    9. '	M' → logprob: -17.008695602416992
    10. '(
' → logprob: -17.133695602416992

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023269588127732277
    2. ' +' → logprob: -3.7732696533203125
    3. '   ' → logprob: -11.648269653320312
    4. '+
' → logprob: -11.773269653320312
    5. ' ' → logprob: -12.898269653320312
    6. ' +
' → logprob: -13.023269653320312
    7. '1' → logprob: -13.898269653320312
    8. ' plus' → logprob: -15.023269653320312
    9. ')+' → logprob: -15.148269653320312
    10. '+i' → logprob: -15.773269653320312

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -15.750027656555176
    4. '```' → logprob: -16.125028610229492
    5. '<|end|>' → logprob: -16.250028610229492
    6. '   ' → logprob: -16.375028610229492
    7. '+' → logprob: -16.875028610229492
    8. '
' → logprob: -18.000028610229492
    9. '  ' → logprob: -18.625028610229492
    10. '[' → logprob: -19.500028610229492

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -15.375001907348633
    4. '```' → logprob: -15.500001907348633
    5. '
' → logprob: -16.625001907348633
    6. '+' → logprob: -16.750001907348633
    7. ')' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '

' → logprob: -18.375001907348633
    10. '[' → logprob: -18.437501907348633

Token 325: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022928470571059734
    2. ')%' → logprob: -8.625228881835938
    3. ')
' → logprob: -10.250228881835938
    4. ' )' → logprob: -11.375228881835938
    5. ')`' → logprob: -14.500228881835938
    6. '%' → logprob: -14.875228881835938
    7. '   ' → logprob: -14.875228881835938
    8. '),' → logprob: -15.250228881835938
    9. '<|end|>' → logprob: -15.625228881835938
    10. ')#' → logprob: -15.750228881835938

Token 326: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3873046040534973
    2. '%' → logprob: -1.1373045444488525
    3. ')' → logprob: -8.637304306030273
    4. '<|end|>' → logprob: -8.887304306030273
    5. ')%' → logprob: -10.137304306030273
    6. '   ' → logprob: -11.137304306030273
    7. '%i' → logprob: -11.637304306030273
    8. '       ' → logprob: -11.637304306030273
    9. '<|end|>' → logprob: -11.762304306030273
    10. ' ' → logprob: -11.762304306030273

Token 327: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.10020752996206284
    2. ' mod' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.725207328796387
    4. '998' → logprob: -15.225207328796387
    5. '	mod' → logprob: -15.850207328796387
    6. ' ' → logprob: -16.975208282470703
    7. '   ' → logprob: -17.725208282470703
    8. '(mod' → logprob: -17.725208282470703
    9. ' modul' → logprob: -18.850208282470703
    10. 'm' → logprob: -18.975208282470703

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033977674320340157
    2. '   ' → logprob: -6.3783979415893555
    3. '
' → logprob: -7.3783979415893555
    4. ' p' → logprob: -7.8783979415893555
    5. 'p' → logprob: -8.253397941589355
    6. '        
' → logprob: -8.628397941589355
    7. '	' → logprob: -10.253397941589355
    8. '    
' → logprob: -10.628397941589355
    9. '     ' → logprob: -10.753397941589355
    10. '      ' → logprob: -10.878397941589355

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3444230854511261
    2. '   ' → logprob: -1.8444230556488037
    3. 'p' → logprob: -2.5944230556488037
    4. ' p' → logprob: -2.8444230556488037
    5. '	p' → logprob: -8.219423294067383
    6. ' ' → logprob: -9.344423294067383
    7. '  ' → logprob: -10.594423294067383
    8. '      ' → logprob: -12.094423294067383
    9. '    ' → logprob: -12.469423294067383
    10. '     ' → logprob: -12.594423294067383

Token 330: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.2017754465341568
    2. ' p' → logprob: -1.7017754316329956
    3. '   ' → logprob: -7.951775550842285
    4. ' ' → logprob: -12.451775550842285
    5. '       ' → logprob: -12.701775550842285
    6. '  ' → logprob: -12.951775550842285
    7. '    ' → logprob: -14.951775550842285
    8. '	p' → logprob: -15.076775550842285
    9. '(p' → logprob: -16.82677459716797
    10. '    
' → logprob: -17.70177459716797

Token 331: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.000631543982308358
    2. 'o' → logprob: -7.875631332397461
    3. 'ow' → logprob: -8.750631332397461
    4. 'awn' → logprob: -9.500631332397461
    5. 'p' → logprob: -12.125631332397461
    6. ' own' → logprob: -12.500631332397461
    7. 'w' → logprob: -12.875631332397461
    8. ' ' → logprob: -12.875631332397461
    9. ' p' → logprob: -14.000631332397461
    10. ' o' → logprob: -14.625631332397461

Token 332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.5
    4. '[I' → logprob: -18.125
    5. 'i' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '[p' → logprob: -20.125
    9. '[
' → logprob: -20.5
    10. '=' → logprob: -20.5

Token 333: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012236819602549076
    2. '=' → logprob: -6.751223564147949
    3. ']=' → logprob: -10.00122356414795
    4. ' ]' → logprob: -12.12622356414795
    5. ' =' → logprob: -13.00122356414795
    6. ')' → logprob: -14.75122356414795
    7. '   ' → logprob: -16.126224517822266
    8. '[' → logprob: -17.001224517822266
    9. ' ' → logprob: -17.251224517822266
    10. ']
' → logprob: -17.626224517822266

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. ']' → logprob: -16.38604736328125
    4. ')' → logprob: -17.26104736328125
    5. ' ' → logprob: -18.26104736328125
    6. '=p' → logprob: -18.76104736328125
    7. ']=' → logprob: -18.88604736328125
    8. '＝' → logprob: -19.01104736328125
    9. '[' → logprob: -19.13604736328125
    10. '=
' → logprob: -19.26104736328125

Token 335: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12694290280342102
    2. 'p' → logprob: -2.1269428730010986
    3. '   ' → logprob: -11.50194263458252
    4. ' ' → logprob: -12.87694263458252
    5. '(p' → logprob: -14.75194263458252
    6. '  ' → logprob: -14.87694263458252
    7. '    ' → logprob: -15.43944263458252
    8. ' ' → logprob: -15.62694263458252
    9. '_p' → logprob: -15.81444263458252
    10. '	p' → logprob: -15.93944263458252

Token 336: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -8.77627644513268e-06
    2. 'awn' → logprob: -12.500008583068848
    3. 'wn' → logprob: -13.000008583068848
    4. 'ow' → logprob: -14.000008583068848
    5. ' own' → logprob: -14.375008583068848
    6. 'p' → logprob: -14.625008583068848
    7. 'o' → logprob: -15.250008583068848
    8. 'Own' → logprob: -15.875008583068848
    9. 'ohn' → logprob: -16.125009536743164
    10. 'OWN' → logprob: -16.250009536743164

Token 337: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.875
    3. 'i' → logprob: -17.875
    4. '[I' → logprob: -20.375
    5. '[
' → logprob: -20.75
    6. ' [' → logprob: -20.75
    7. '[j' → logprob: -22.125
    8. '   ' → logprob: -22.125
    9. '[id' → logprob: -22.625
    10. '[-' → logprob: -22.75

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07040885090827942
    2. ' -' → logprob: -2.695408821105957
    3. '[' → logprob: -7.820408821105957
    4. '[i' → logprob: -9.945408821105957
    5. '[-' → logprob: -10.945408821105957
    6. ' ' → logprob: -12.945408821105957
    7. ' [' → logprob: -13.570408821105957
    8. ']' → logprob: -14.695408821105957
    9. '1' → logprob: -14.945408821105957
    10. '   ' → logprob: -15.320408821105957

Token 339: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020551813766360283
    2. ' ' → logprob: -3.895551919937134
    3. '   ' → logprob: -12.020551681518555
    4. '<|end|>' → logprob: -14.020551681518555
    5. '```' → logprob: -14.395551681518555
    6. '[' → logprob: -14.645551681518555
    7. '       ' → logprob: -14.645551681518555
    8. '  ' → logprob: -14.645551681518555
    9. '    ' → logprob: -15.333051681518555
    10. '           ' → logprob: -16.458051681518555

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003386806638445705
    2. ' ' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.625338554382324
    4. '```' → logprob: -14.187838554382324
    5. '-' → logprob: -15.687838554382324
    6. '
' → logprob: -15.812838554382324
    7. '  ' → logprob: -15.812838554382324
    8. ']' → logprob: -16.18783950805664
    9. '    ' → logprob: -16.31283950805664
    10. '１' → logprob: -16.87533950805664

Token 341: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.030156446620821953
    2. '*' → logprob: -3.530156373977661
    3. ')' → logprob: -7.90515661239624
    4. ' ' → logprob: -10.905156135559082
    5. ']' → logprob: -11.905156135559082
    6. '   ' → logprob: -12.405156135559082
    7. ' ' → logprob: -13.280156135559082
    8. '*(' → logprob: -13.530156135559082
    9. '    ' → logprob: -13.655156135559082
    10. '```' → logprob: -14.030156135559082

Token 342: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.201441690325737
    2. '*' → logprob: -1.7014416456222534
    3. '*(' → logprob: -10.576441764831543
    4. ' ' → logprob: -13.201441764831543
    5. '   ' → logprob: -14.826441764831543
    6. ' ' → logprob: -15.201441764831543
    7. '**' → logprob: -15.451441764831543
    8. '`' → logprob: -16.451440811157227
    9. ' *(' → logprob: -16.701440811157227
    10. '(' → logprob: -16.826440811157227

Token 343: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.11290600150823593
    2. ' (' → logprob: -2.237905979156494
    3. '(' → logprob: -9.612906455993652
    4. '(n' → logprob: -11.362906455993652
    5. '   ' → logprob: -13.112906455993652
    6. ' ' → logprob: -13.737906455993652
    7. '((' → logprob: -14.612906455993652
    8. 'N' → logprob: -14.987906455993652
    9. '  ' → logprob: -15.362906455993652
    10. '    ' → logprob: -15.487906455993652

Token 344: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25209158658981323
    2. '(N' → logprob: -1.502091646194458
    3. ' (' → logprob: -9.377091407775879
    4. ' N' → logprob: -9.877091407775879
    5. '(' → logprob: -10.877091407775879
    6. '   ' → logprob: -12.502091407775879
    7. ')' → logprob: -13.752091407775879
    8. '	N' → logprob: -14.502091407775879
    9. '(
' → logprob: -14.877091407775879
    10. ' ' → logprob: -14.877091407775879

Token 345: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889121770858765
    2. ' +' → logprob: -2.5788912773132324
    3. '+
' → logprob: -14.453890800476074
    4. ' +
' → logprob: -15.203890800476074
    5. ' plus' → logprob: -15.953890800476074
    6. ' ' → logprob: -16.45389175415039
    7. '   ' → logprob: -16.45389175415039
    8. ')' → logprob: -16.45389175415039
    9. '+)' → logprob: -16.45389175415039
    10. '＋' → logprob: -16.45389175415039

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000297685619443655
    2. ' ' → logprob: -8.125297546386719
    3. ')' → logprob: -14.250297546386719
    4. '   ' → logprob: -14.750297546386719
    5. '
' → logprob: -15.250297546386719
    6. '```' → logprob: -15.750297546386719
    7. '  ' → logprob: -16.87529754638672
    8. '<|end|>' → logprob: -17.00029754638672
    9. '

' → logprob: -17.75029754638672
    10. '+' → logprob: -18.06279754638672

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -16.7500057220459
    4. ')' → logprob: -17.3750057220459
    5. '```' → logprob: -17.7500057220459
    6. '   ' → logprob: -17.8750057220459
    7. '

' → logprob: -18.5000057220459
    8. '  ' → logprob: -19.3750057220459
    9. '۱' → logprob: -20.0625057220459
    10. '１' → logprob: -20.3750057220459

Token 348: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001462107611587271
    2. ' )' → logprob: -9.12514591217041
    3. ')%' → logprob: -10.37514591217041
    4. ')
' → logprob: -12.50014591217041
    5. '%' → logprob: -13.62514591217041
    6. '   ' → logprob: -14.62514591217041
    7. ' %' → logprob: -15.87514591217041
    8. '```' → logprob: -16.500146865844727
    9. '%)' → logprob: -16.625146865844727
    10. ']' → logprob: -17.000146865844727

Token 349: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3868875801563263
    2. ' %' → logprob: -1.136887550354004
    3. ')' → logprob: -11.636887550354004
    4. ' ' → logprob: -13.511887550354004
    5. ')%' → logprob: -13.511887550354004
    6. '%i' → logprob: -13.886887550354004
    7. '```' → logprob: -14.011887550354004
    8. '   ' → logprob: -14.011887550354004
    9. ' ' → logprob: -14.136887550354004
    10. '       ' → logprob: -15.136887550354004

Token 350: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2519296407699585
    2. ' mod' → logprob: -1.5019296407699585
    3. '	mod' → logprob: -15.75192928314209
    4. '(mod' → logprob: -16.001930236816406
    5. ' ' → logprob: -16.501930236816406
    6. ' ' → logprob: -16.751930236816406
    7. 'm' → logprob: -16.751930236816406
    8. ' modul' → logprob: -17.251930236816406
    9. '_mod' → logprob: -17.376930236816406
    10. ' мод' → logprob: -18.001930236816406

Token 351: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5780065059661865
    2. '<|end|>' → logprob: -1.3280065059661865
    3. '
' → logprob: -2.5780065059661865
    4. '\n' → logprob: -3.4530065059661865
    5. ' ' → logprob: -4.203006744384766
    6. ':' → logprob: -4.578006744384766
    7. '```' → logprob: -4.703006744384766
    8. ')' → logprob: -5.203006744384766
    9. '<|end|>' → logprob: -5.453006744384766
    10. '    
' → logprob: -5.578006744384766

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05634017661213875
    2. 'def' → logprob: -3.806340217590332
    3. 'for' → logprob: -4.431340217590332
    4. 'inv' → logprob: -5.181340217590332
    5. ')' → logprob: -5.556340217590332
    6. ' for' → logprob: -5.931340217590332
    7. 'inverse' → logprob: -6.181340217590332
    8. 'comb' → logprob: -6.931340217590332
    9. '#' → logprob: -7.181340217590332
    10. 'factor' → logprob: -7.431340217590332

Token 353: ' def' (ID: 1056)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.04195186868309975
    2. 'def' (adapté à ' def') → logprob: -3.291951894760132
    3. 'result' → logprob: -6.416951656341553
    4. '#' → logprob: -7.166951656341553
    5. 'res' → logprob: -7.541951656341553
    6. 'fact' → logprob: -7.791951656341553
    7. 'inverse' → logprob: -8.666952133178711
    8. 'in' → logprob: -8.916952133178711
    9. 'comb' → logprob: -10.166952133178711
    10. 'C' → logprob: -10.416952133178711

Token 354: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.2701134979724884
    2. ' comb' → logprob: -2.145113468170166
    3. ' inv' → logprob: -2.645113468170166
    4. ' bin' → logprob: -3.270113468170166
    5. 'mod' → logprob: -5.645113468170166
    6. ' pow' → logprob: -6.520113468170166
    7. ' def' → logprob: -7.145113468170166
    8. ' fact' → logprob: -7.395113468170166
    9. 'pow' → logprob: -7.395113468170166
    10. 'bin' → logprob: -7.520113468170166

Token 355: '_pow' (ID: 160965)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.40530532598495483
    2. '_inv' → logprob: -1.1553053855895996
    3. '_inverse' → logprob: -4.6553053855896
    4. 'pow' → logprob: -5.6553053855896
    5. '_pow' → logprob: -5.6553053855896
    6. '_factor' → logprob: -6.7803053855896
    7. 'ular' → logprob: -8.530304908752441
    8. 'exp' → logprob: -8.530304908752441
    9. '_exp' → logprob: -9.030304908752441
    10. '_fact' → logprob: -10.030304908752441

Token 356: '(n' (ID: 2406)
  Prédit: '(base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.08447625488042831
    2. '(' → logprob: -3.3344762325286865
    3. '(x' → logprob: -3.8344762325286865
    4. '(a' → logprob: -3.8344762325286865
    5. '(b' → logprob: -6.209476470947266
    6. ' (' → logprob: -9.084476470947266
    7. '(p' → logprob: -12.334476470947266
    8. '(
' → logprob: -12.459476470947266
    9. '(exp' → logprob: -12.834476470947266
    10. 'a' → logprob: -12.959476470947266

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017878713551908731
    2. ' ,' → logprob: -6.5017876625061035
    3. ',n' → logprob: -8.876788139343262
    4. ')' → logprob: -10.501788139343262
    5. 'def' → logprob: -11.001788139343262
    6. 'a' → logprob: -11.126788139343262
    7. ',p' → logprob: -11.501788139343262
    8. ',a' → logprob: -11.876788139343262
    9. '<|end|>' → logprob: -11.876788139343262
    10. 'e' → logprob: -12.001788139343262

Token 358: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03695261478424072
    2. 'p' → logprob: -3.786952495574951
    3. 'exp' → logprob: -5.786952495574951
    4. 'm' → logprob: -6.036952495574951
    5. 'r' → logprob: -6.161952495574951
    6. 'e' → logprob: -6.286952495574951
    7. ' k' → logprob: -6.786952495574951
    8. 'b' → logprob: -6.911952495574951
    9. 'mod' → logprob: -7.161952495574951
    10. 'x' → logprob: -7.411952495574951

Token 359: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6345510482788086
    2. '):' → logprob: -0.7595510482788086
    3. '):
' → logprob: -6.759551048278809
    4. ')' → logprob: -8.259551048278809
    5. ':' → logprob: -8.384551048278809
    6. ' ,' → logprob: -9.634551048278809
    7. ',
' → logprob: -9.759551048278809
    8. '-' → logprob: -9.884551048278809
    9. ' ):' → logprob: -9.884551048278809
    10. '   ' → logprob: -11.759551048278809

Token 360: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24223178625106812
    2. ':' → logprob: -1.617231845855713
    3. ',' → logprob: -4.492231845855713
    4. '       ' → logprob: -6.242231845855713
    5. '    ' → logprob: -7.117231845855713
    6. ' :' → logprob: -7.242231845855713
    7. '<|end|>' → logprob: -7.617231845855713
    8. ')' → logprob: -8.117231369018555
    9. ' ' → logprob: -8.617231369018555
    10. '.' → logprob: -9.242231369018555

Token 361: ' """
' (ID: 7037)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.09996378421783447
    2. 'res' → logprob: -2.849963665008545
    3. 'r' → logprob: -3.349963665008545
    4. '   ' → logprob: -7.224963665008545
    5. ' result' → logprob: -7.349963665008545
    6. 'if' → logprob: -7.724963665008545
    7. ' res' → logprob: -8.099964141845703
    8. 'ans' → logprob: -10.974964141845703
    9. ' r' → logprob: -11.349964141845703
    10. 'x' → logprob: -11.349964141845703

Token 362: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3984289765357971
    2. 'result' → logprob: -1.1484289169311523
    3. '   ' → logprob: -4.898428916931152
    4. 'res' → logprob: -5.648428916931152
    5. 'if' → logprob: -7.898428916931152
    6. ' result' → logprob: -9.648428916931152
    7. '"""' → logprob: -10.773428916931152
    8. '       ' → logprob: -11.148428916931152
    9. 'return' → logprob: -11.148428916931152
    10. ' r' → logprob: -11.648428916931152

Token 363: ' Cal' (ID: 4453)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37749630212783813
    2. 'result' → logprob: -1.3774962425231934
    3. 'res' → logprob: -3.3774962425231934
    4. ' result' → logprob: -3.8774962425231934
    5. ' res' → logprob: -5.877496242523193
    6. ' r' → logprob: -6.252496242523193
    7. ' if' → logprob: -6.627496242523193
    8. 'if' → logprob: -7.002496242523193
    9. '   ' → logprob: -8.002496719360352
    10. 's' → logprob: -10.627496719360352

Token 364: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.3236551284790039
    2. 'c' → logprob: -1.948655128479004
    3. 'cul' → logprob: -2.073655128479004
    4. 'culate' → logprob: -5.198655128479004
    5. '
' → logprob: -7.073655128479004
    6. '   ' → logprob: -7.198655128479004
    7. 'cu' → logprob: -7.573655128479004
    8. 'cula' → logprob: -8.573655128479004
    9. 'cular' → logprob: -9.448655128479004
    10. '       ' → logprob: -9.573655128479004

Token 365: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6722987294197083
    2. 'res' → logprob: -1.1722986698150635
    3. 'r' → logprob: -1.7972986698150635
    4. '   ' → logprob: -5.547298908233643
    5. ' res' → logprob: -5.672298908233643
    6. ' result' → logprob: -5.922298908233643
    7. 'pow' → logprob: -5.922298908233643
    8. 'n' → logprob: -8.297298431396484
    9. 'rés' → logprob: -8.672298431396484
    10. '       ' → logprob: -9.047298431396484

Token 366: ' puissance' (ID: 63494)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1007002517580986
    2. 'pu' → logprob: -2.8507001399993896
    3. 'result' → logprob: -4.475700378417969
    4. 'rés' → logprob: -4.725700378417969
    5. '(pow' → logprob: -5.225700378417969
    6. '1' → logprob: -5.850700378417969
    7. ' pow' → logprob: -5.975700378417969
    8. 'res' → logprob: -5.975700378417969
    9. ' puissance' → logprob: -6.600700378417969
    10. 'n' → logprob: -7.100700378417969

Token 367: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08245009928941727
    2. 'result' → logprob: -3.0824501514434814
    3. 'n' → logprob: -3.9574501514434814
    4. 'def' → logprob: -5.332449913024902
    5. '(' → logprob: -5.832449913024902
    6. '(pow' → logprob: -6.457449913024902
    7. 'pow' → logprob: -6.582449913024902
    8. 'return' → logprob: -6.707449913024902
    9. ' (' → logprob: -7.832449913024902
    10. 'res' → logprob: -7.832449913024902

Token 368: '^' (ID: 61)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.8263106942176819
    2. 'pow' → logprob: -1.326310634613037
    3. '**' → logprob: -2.701310634613037
    4. 'def' → logprob: -2.826310634613037
    5. '```' → logprob: -2.951310634613037
    6. ' mod' → logprob: -3.451310634613037
    7. ' ' → logprob: -3.451310634613037
    8. '%' → logprob: -4.201310634613037
    9. ' n' → logprob: -4.826310634613037
    10. '   ' → logprob: -5.451310634613037

Token 369: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9146995327901095e-05
    2. ' m' → logprob: -10.875019073486328
    3. 'mod' → logprob: -15.875019073486328
    4. '%m' → logprob: -19.250019073486328
    5. '   ' → logprob: -19.750019073486328
    6. '
' → logprob: -20.000019073486328
    7. 'pow' → logprob: -20.125019073486328
    8. 'м' → logprob: -20.250019073486328
    9. ' mod' → logprob: -20.250019073486328
    10. '```' → logprob: -20.875019073486328

Token 370: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2480480819940567
    2. '%' → logprob: -1.8730480670928955
    3. ' ' → logprob: -3.9980480670928955
    4. '   ' → logprob: -4.248048305511475
    5. ' modulo' → logprob: -4.623048305511475
    6. '<|end|>' → logprob: -5.373048305511475
    7. ' mod' → logprob: -5.748048305511475
    8. ',' → logprob: -5.873048305511475
    9. ' :' → logprob: -6.123048305511475
    10. ' %=' → logprob: -6.498048305511475

Token 371: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5320847034454346
    2. ' mod' → logprob: -0.9070847034454346
    3. '(mod' → logprob: -4.9070844650268555
    4. '998' → logprob: -7.1570844650268555
    5. ' (' → logprob: -7.9070844650268555
    6. ' ' → logprob: -8.282084465026855
    7. '(' → logprob: -10.407084465026855
    8. '```' → logprob: -10.907084465026855
    9. '	mod' → logprob: -11.157084465026855
    10. '_mod' → logprob: -11.657084465026855

Token 372: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03813076764345169
    2. ' :' → logprob: -4.538130760192871
    3. ':
' → logprob: -4.663130760192871
    4. '   ' → logprob: -4.913130760192871
    5. '):' → logprob: -5.288130760192871
    6. ',' → logprob: -6.538130760192871
    7. '<|end|>' → logprob: -6.913130760192871
    8. '):
' → logprob: -7.288130760192871
    9. ' :
' → logprob: -7.913130760192871
    10. ')' → logprob: -7.913130760192871

Token 373: ' manière' (ID: 35013)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2887816429138184
    2. 'mod' → logprob: -1.2887816429138184
    3. ' n' → logprob: -1.6637816429138184
    4. 'm' → logprob: -2.6637816429138184
    5. ' mod' → logprob: -2.9137816429138184
    6. '<|end|>' → logprob: -3.0387816429138184
    7. ' ' → logprob: -3.5387816429138184
    8. ')' → logprob: -4.913781642913818
    9. ' m' → logprob: -5.038781642913818
    10. ' façon' → logprob: -5.413781642913818

Token 374: ' réc' (ID: 36254)
  Prédit: ' efficace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.5943831205368042
    2. 'rap' → logprob: -1.0943831205368042
    3. ' rapide' → logprob: -3.0943832397460938
    4. ' effic' → logprob: -3.5943832397460938
    5. 'efficient' → logprob: -3.8443832397460938
    6. 'r' → logprob: -4.844383239746094
    7. 'ex' → logprob: -5.219383239746094
    8. 'eff' → logprob: -6.719383239746094
    9. ' eficiente' → logprob: -6.719383239746094
    10. 'ef' → logprob: -6.844383239746094

Token 375: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.007254838477820158
    2. 'c' → logprob: -5.757254600524902
    3. 'urs' → logprob: -7.007254600524902
    4. '#' → logprob: -7.507254600524902
    5. 'ur' → logprob: -8.257254600524902
    6. '
' → logprob: -8.257254600524902
    7. '```' → logprob: -8.507254600524902
    8. 'r' → logprob: -8.507254600524902
    9. 'usr' → logprob: -8.632254600524902
    10. 'usive' → logprob: -8.757254600524902

Token 376: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1206697225570679
    2. ' :' → logprob: -1.6206697225570679
    3. ':' → logprob: -1.7456697225570679
    4. '.' → logprob: -1.9956697225570679
    5. '       ' → logprob: -2.8706698417663574
    6. ',' → logprob: -2.8706698417663574
    7. ':
' → logprob: -3.9956698417663574
    8. ' :
' → logprob: -4.370669841766357
    9. '.
' → logprob: -5.620669841766357
    10. '
' → logprob: -5.870669841766357

Token 377: ' efficace' (ID: 54338)
  Prédit: ' efficace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficace' → logprob: -0.11933637410402298
    2. ' effic' → logprob: -2.8693363666534424
    3. 'eff' → logprob: -4.2443366050720215
    4. ' it' → logprob: -4.8693366050720215
    5. 'optim' → logprob: -4.9943366050720215
    6. 'it' → logprob: -4.9943366050720215
    7. 'iter' → logprob: -5.2443366050720215
    8. 'efficient' → logprob: -5.2443366050720215
    9. ' rapide' → logprob: -5.7443366050720215
    10. 'ex' → logprob: -5.7443366050720215

Token 378: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22756633162498474
    2. ':' → logprob: -2.2275662422180176
    3. ':
' → logprob: -2.9775662422180176
    4. '       ' → logprob: -4.227566242218018
    5. ' :' → logprob: -4.602566242218018
    6. ' :
' → logprob: -5.102566242218018
    7. '
' → logprob: -5.602566242218018
    8. '.' → logprob: -5.602566242218018
    9. '(n' → logprob: -6.352566242218018
    10. ' if' → logprob: -6.602566242218018

Token 379: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.66331547498703
    2. ' n' → logprob: -2.163315534591675
    3. '):
' → logprob: -2.163315534591675
    4. '   ' → logprob: -2.288315534591675
    5. 'n' → logprob: -3.288315534591675
    6. '
' → logprob: -3.538315534591675
    7. '):' → logprob: -3.663315534591675
    8. '       ' → logprob: -3.913315534591675
    9. 'def' → logprob: -4.913315296173096
    10. ' ' → logprob: -5.288315296173096

Token 380: 'ponent' (ID: 1758)
  Prédit: 'ponent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.006295160390436649
    2. 'p' → logprob: -5.881295204162598
    3. 'ponential' → logprob: -6.881295204162598
    4. 'def' → logprob: -7.006295204162598
    5. '
' → logprob: -7.756295204162598
    6. 'pow' → logprob: -7.881295204162598
    7. '   ' → logprob: -8.256295204162598
    8. 'pon' → logprob: -9.381295204162598
    9. 'po' → logprob: -9.506295204162598
    10. 'pl' → logprob: -9.631295204162598

Token 381: 'iation' (ID: 23408)
  Prédit: 'iation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iation' → logprob: -0.5001043081283569
    2. ')' → logprob: -2.0001044273376465
    3. 'i' → logprob: -2.0001044273376465
    4. '   ' → logprob: -3.0001044273376465
    5. '<|end|>' → logprob: -3.5001044273376465
    6. 'def' → logprob: -5.2501044273376465
    7. 'iable' → logprob: -5.3751044273376465
    8. 'ielle' → logprob: -5.6251044273376465
    9. '       ' → logprob: -5.6251044273376465
    10. '
' → logprob: -5.7501044273376465

Token 382: ' rapide' (ID: 44887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2801835536956787
    2. '_fast' → logprob: -1.4051835536956787
    3. '_' → logprob: -1.9051835536956787
    4. ' ' → logprob: -2.7801835536956787
    5. '(' → logprob: -3.2801835536956787
    6. '(n' → logprob: -3.5301835536956787
    7. '   ' → logprob: -3.7801835536956787
    8. '(
' → logprob: -3.9051835536956787
    9. ' by' → logprob: -4.155183792114258
    10. '_binary' → logprob: -4.405183792114258

Token 383: ').

' (ID: 3991)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7231056690216064
    2. ')' → logprob: -0.9731056690216064
    3. '):
' → logprob: -2.0981056690216064
    4. '(n' → logprob: -4.723105430603027
    5. '   ' → logprob: -5.973105430603027
    6. ').' → logprob: -7.223105430603027
    7. '):

' → logprob: -7.348105430603027
    8. '       ' → logprob: -7.598105430603027
    9. ')
' → logprob: -8.598105430603027
    10. '```' → logprob: -8.973105430603027

Token 384: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021400602534413338
    2. '       ' → logprob: -4.146400451660156
    3. ' 
' → logprob: -6.021400451660156
    4. '
' → logprob: -6.771400451660156
    5. ')' → logprob: -7.396400451660156
    6. '    
' → logprob: -8.396400451660156
    7. ' ' → logprob: -9.021400451660156
    8. ':' → logprob: -9.146400451660156
    9. '):
' → logprob: -9.146400451660156
    10. ' if' → logprob: -9.146400451660156

Token 385: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7687737345695496
    2. ' if' → logprob: -0.7687737345695496
    3. 'if' → logprob: -2.6437737941741943
    4. '       ' → logprob: -6.393773555755615
    5. '	if' → logprob: -11.018774032592773
    6. '    ' → logprob: -11.518774032592773
    7. '"""' → logprob: -11.768774032592773
    8. '
' → logprob: -12.143774032592773
    9. ' ' → logprob: -12.518774032592773
    10. '    
' → logprob: -12.768774032592773

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4347061514854431
    2. ' :' → logprob: -1.434706211090088
    3. '):' → logprob: -2.684706211090088
    4. '):
' → logprob: -4.059706211090088
    5. '(n' → logprob: -4.434706211090088
    6. ' (' → logprob: -5.434706211090088
    7. ':
' → logprob: -5.559706211090088
    8. ',' → logprob: -5.559706211090088
    9. ')' → logprob: -5.934706211090088
    10. ' :
' → logprob: -6.684706211090088

Token 387: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07205504924058914
    2. ' n' → logprob: -3.0720551013946533
    3. 'self' → logprob: -4.197054862976074
    4. ' self' → logprob: -5.572054862976074
    5. '       ' → logprob: -6.072054862976074
    6. '           ' → logprob: -6.322054862976074
    7. '   ' → logprob: -9.572054862976074
    8. '(n' → logprob: -10.322054862976074
    9. '
' → logprob: -10.697054862976074
    10. '        ' → logprob: -10.947054862976074

Token 388: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00017410075815860182
    2. '   ' → logprob: -9.000174522399902
    3. ' n' → logprob: -10.250174522399902
    4. '       ' → logprob: -11.250174522399902
    5. '	n' → logprob: -14.625174522399902
    6. '           ' → logprob: -14.875174522399902
    7. '```' → logprob: -15.000174522399902
    8. 'self' → logprob: -15.250174522399902
    9. ')' → logprob: -16.125173568725586
    10. ')n' → logprob: -16.125173568725586

Token 389: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07168639451265335
    2. ':' → logprob: -3.0716865062713623
    3. ' :' → logprob: -4.321686267852783
    4. ' ,' → logprob: -5.196686267852783
    5. '):' → logprob: -6.321686267852783
    6. ':int' → logprob: -6.696686267852783
    7. '   ' → logprob: -7.946686267852783
    8. '<|end|>' → logprob: -8.071686744689941
    9. 'int' → logprob: -10.071686744689941
    10. '(int' → logprob: -10.196686744689941

Token 390: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.47495681833243e-05
    2. ' int' → logprob: -11.500024795532227
    3. ',' → logprob: -12.125024795532227
    4. '   ' → logprob: -12.375024795532227
    5. ':int' → logprob: -13.125024795532227
    6. ')' → logprob: -13.750024795532227
    7. ',int' → logprob: -14.875024795532227
    8. '```' → logprob: -15.375024795532227
    9. ':' → logprob: -15.500024795532227
    10. '):' → logprob: -15.625024795532227

Token 391: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001415618316968903
    2. ' ,' → logprob: -9.625141143798828
    3. '<|end|>' → logprob: -10.250141143798828
    4. '   ' → logprob: -11.125141143798828
    5. ',n' → logprob: -11.625141143798828
    6. ',
' → logprob: -11.750141143798828
    7. ')' → logprob: -13.125141143798828
    8. '<|end|>' → logprob: -13.875141143798828
    9. 'n' → logprob: -14.000141143798828
    10. '):' → logprob: -14.125141143798828

Token 392: ' La' (ID: 3038)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1847238391637802
    2. '           ' → logprob: -2.5597238540649414
    3. '       ' → logprob: -3.0597238540649414
    4. 'n' → logprob: -3.9347238540649414
    5. ' int' → logprob: -4.184723854064941
    6. 'The' → logprob: -5.434723854064941
    7. '   ' → logprob: -6.059723854064941
    8. ')' → logprob: -7.809723854064941
    9. '[int' → logprob: -8.059723854064941
    10. 'Exponent' → logprob: -8.059723854064941

Token 393: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.08910076320171356
    2. 'nombre' → logprob: -2.8391008377075195
    3. 'n' → logprob: -3.9641008377075195
    4. ' base' → logprob: -5.2141008377075195
    5. 'number' → logprob: -6.9641008377075195
    6. 'pu' → logprob: -7.4641008377075195
    7. ' nombre' → logprob: -8.46410083770752
    8. ')' → logprob: -9.33910083770752
    9. '(base' → logprob: -9.33910083770752
    10. 'pow' → logprob: -9.71410083770752

Token 394: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2951687276363373
    2. ')' → logprob: -2.29516863822937
    3. ',' → logprob: -2.29516863822937
    4. '           ' → logprob: -3.67016863822937
    5. '<|end|>' → logprob: -4.045168876647949
    6. ',
' → logprob: -5.670168876647949
    7. 'n' → logprob: -6.045168876647949
    8. '        
' → logprob: -6.795168876647949
    9. '   ' → logprob: -6.920168876647949
    10. '<|end|>' → logprob: -7.045168876647949

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1824127584695816
    2. '       ' → logprob: -2.18241286277771
    3. 'm' → logprob: -2.93241286277771
    4. ' m' → logprob: -8.057413101196289
    5. '   ' → logprob: -9.057413101196289
    6. '        
' → logprob: -9.932413101196289
    7. '
' → logprob: -10.182413101196289
    8. '        ' → logprob: -10.682413101196289
    9. '            
' → logprob: -10.932413101196289
    10. 'n' → logprob: -10.932413101196289

Token 396: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.016576431691646576
    2. ' m' → logprob: -4.141576290130615
    3. '           ' → logprob: -7.891576290130615
    4. '       ' → logprob: -8.766576766967773
    5. '   ' → logprob: -11.516576766967773
    6. 'n' → logprob: -13.891576766967773
    7. '	m' → logprob: -14.891576766967773
    8. '    ' → logprob: -15.516576766967773
    9. ' ' → logprob: -15.641576766967773
    10. '        ' → logprob: -16.141576766967773

Token 397: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.05961538478732109
    2. '(int' → logprob: -3.05961537361145
    3. ')' → logprob: -5.434615612030029
    4. ':' → logprob: -5.684615612030029
    5. ':int' → logprob: -6.184615612030029
    6. '   ' → logprob: -7.184615612030029
    7. 'int' → logprob: -9.434615135192871
    8. ',' → logprob: -9.684615135192871
    9. ' int' → logprob: -9.684615135192871
    10. '[int' → logprob: -9.809615135192871

Token 398: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012523093027994037
    2. ' int' → logprob: -9.00012493133545
    3. ')' → logprob: -13.25012493133545
    4. '(int' → logprob: -18.500125885009766
    5. '   ' → logprob: -18.875125885009766
    6. '[int' → logprob: -19.500125885009766
    7. '           ' → logprob: -19.750125885009766
    8. ':int' → logprob: -19.750125885009766
    9. '<int' → logprob: -19.750125885009766
    10. '=int' → logprob: -19.875125885009766

Token 399: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08325355499982834
    2. ')' → logprob: -3.0832536220550537
    3. 'int' → logprob: -3.9582536220550537
    4. '):
' → logprob: -5.458253383636475
    5. ':int' → logprob: -5.708253383636475
    6. '(int' → logprob: -6.083253383636475
    7. ':' → logprob: -6.208253383636475
    8. '   ' → logprob: -6.458253383636475
    9. '[int' → logprob: -7.333253383636475
    10. ' int' → logprob: -8.208253860473633

Token 400: ' L' (ID: 451)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006724249105900526
    2. ' int' → logprob: -5.0067243576049805
    3. '(int' → logprob: -11.88172435760498
    4. '<int' → logprob: -14.25672435760498
    5. '[int' → logprob: -14.50672435760498
    6. '   ' → logprob: -15.13172435760498
    7. '           ' → logprob: -15.50672435760498
    8. '	int' → logprob: -16.131723403930664
    9. ']int' → logprob: -16.256723403930664
    10. ':int' → logprob: -16.256723403930664

Token 401: ''ex' (ID: 23472)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13261470198631287
    2. ')' → logprob: -2.6326146125793457
    3. ' int' → logprob: -4.132614612579346
    4. 'ent' → logprob: -4.882614612579346
    5. 'e' → logprob: -5.257614612579346
    6. '=int' → logprob: -5.257614612579346
    7. '   ' → logprob: -5.757614612579346
    8. 'ex' → logprob: -6.007614612579346
    9. ' entier' → logprob: -6.257614612579346
    10. ':int' → logprob: -6.632614612579346

Token 402: 'pos' (ID: 1103)
  Prédit: 'ponent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ponent' → logprob: -0.5777236819267273
    2. 'p' → logprob: -0.8277236819267273
    3. ')' → logprob: -7.452723503112793
    4. 'ponente' → logprob: -7.952723503112793
    5. 'pow' → logprob: -8.452723503112793
    6. 'pon' → logprob: -9.077723503112793
    7. '):
' → logprob: -9.327723503112793
    8. 'ponential' → logprob: -9.452723503112793
    9. 'pos' → logprob: -9.827723503112793
    10. 'po' → logprob: -10.077723503112793

Token 403: 'ant' (ID: 493)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.380043625831604
    2. 'ponent' → logprob: -1.255043625831604
    3. ')' → logprob: -3.6300435066223145
    4. 'onent' → logprob: -7.0050435066223145
    5. 'ent' → logprob: -7.1300435066223145
    6. 'e' → logprob: -7.5050435066223145
    7. 'pos' → logprob: -7.8800435066223145
    8. 't' → logprob: -8.255043983459473
    9. 'ponential' → logprob: -8.505043983459473
    10. 'port' → logprob: -8.630043983459473

Token 404: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4367765784263611
    2. '):' → logprob: -1.3117766380310059
    3. '   ' → logprob: -2.686776638031006
    4. ')' → logprob: -4.186776638031006
    5. '       ' → logprob: -7.311776638031006
    6. '):
' → logprob: -7.686776638031006
    7. '):

' → logprob: -10.061776161193848
    8. '
' → logprob: -11.186776161193848
    9. ' ):
' → logprob: -11.436776161193848
    10. '```' → logprob: -11.436776161193848

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06761699914932251
    2. ')' → logprob: -3.0676169395446777
    3. '   ' → logprob: -4.942616939544678
    4. '
' → logprob: -5.442616939544678
    5. '        
' → logprob: -5.942616939544678
    6. '):' → logprob: -6.442616939544678
    7. '):
' → logprob: -6.442616939544678
    8. ' )' → logprob: -7.817616939544678
    9. ' 
' → logprob: -8.317617416381836
    10. '    ' → logprob: -8.567617416381836

Token 406: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36621057987213135
    2. ')' → logprob: -2.241210460662842
    3. 'Returns' (adapté à ' Returns') → logprob: -2.366210460662842
    4. '"""' → logprob: -3.491210460662842
    5. '"""
' → logprob: -3.616210460662842
    6. '   ' → logprob: -3.741210460662842
    7. 'if' → logprob: -4.991210460662842
    8. '        
' → logprob: -5.741210460662842
    9. '):
' → logprob: -5.866210460662842
    10. ' if' → logprob: -5.866210460662842

Token 407: ':
' (ID: 734)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11415374279022217
    2. 'n' → logprob: -2.4891538619995117
    3. ':' → logprob: -3.8641538619995117
    4. ' :' → logprob: -6.614153861999512
    5. '(n' → logprob: -7.239153861999512
    6. ' int' → logprob: -7.614153861999512
    7. ':
' → logprob: -7.864153861999512
    8. ' (' → logprob: -8.364153861999512
    9. '   ' → logprob: -9.364153861999512
    10. 'int' → logprob: -9.489153861999512

Token 408: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0231282711029053
    2. 'n' → logprob: -1.2731282711029053
    3. '1' → logprob: -1.7731282711029053
    4. 'int' → logprob: -2.0231282711029053
    5. ' int' → logprob: -3.5231282711029053
    6. 'pow' → logprob: -4.398128509521484
    7. ' pow' → logprob: -4.648128509521484
    8. ' (' → logprob: -6.148128509521484
    9. '       ' → logprob: -6.398128509521484
    10. '           ' → logprob: -7.273128509521484

Token 409: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -3.650518920039758e-06
    2. ' int' → logprob: -12.750003814697266
    3. '(int' → logprob: -14.750003814697266
    4. '   ' → logprob: -16.250003814697266
    5. 'pow' → logprob: -16.875003814697266
    6. 'n' → logprob: -17.625003814697266
    7. '[int' → logprob: -17.625003814697266
    8. '
' → logprob: -18.375003814697266
    9. '<int' → logprob: -18.875003814697266
    10. 'Int' → logprob: -18.875003814697266

Token 410: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028669485822319984
    2. ' :' → logprob: -4.653669357299805
    3. '       ' → logprob: -5.653669357299805
    4. '(n' → logprob: -6.028669357299805
    5. ')' → logprob: -6.153669357299805
    6. ' =' → logprob: -6.528669357299805
    7. '
' → logprob: -6.778669357299805
    8. ' n' → logprob: -6.778669357299805
    9. ':
' → logprob: -6.778669357299805
    10. '(pow' → logprob: -7.278669357299805

Token 411: ' Le' (ID: 2018)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09833870828151703
    2. 'n' → logprob: -3.0983386039733887
    3. 'pow' → logprob: -3.0983386039733887
    4. '(n' → logprob: -6.973338603973389
    5. ' n' → logprob: -7.473338603973389
    6. ' pow' → logprob: -7.598338603973389
    7. 'result' → logprob: -7.598338603973389
    8. '
' → logprob: -8.473339080810547
    9. '(' → logprob: -8.598339080810547
    10. ' ' → logprob: -8.973339080810547

Token 412: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.8371803164482117
    2. 'result' → logprob: -1.3371803760528564
    3. 'rés' → logprob: -1.5871803760528564
    4. 'res' → logprob: -3.2121803760528564
    5. 'n' → logprob: -3.7121803760528564
    6. ' result' → logprob: -3.7121803760528564
    7. ' resultat' → logprob: -5.087180137634277
    8. 'r' → logprob: -6.712180137634277
    9. ' res' → logprob: -6.712180137634277
    10. ' n' → logprob: -7.212180137634277

Token 413: ' de' (ID: 334)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.800004780292511
    2. ' n' → logprob: -1.4250047206878662
    3. ' mod' → logprob: -1.5500047206878662
    4. ' pow' → logprob: -2.925004720687866
    5. '(n' → logprob: -4.550004959106445
    6. 'n' → logprob: -4.675004959106445
    7. ' (' → logprob: -5.300004959106445
    8. 'mod' → logprob: -5.550004959106445
    9. ' de' → logprob: -5.550004959106445
    10. 'pow' → logprob: -6.050004959106445

Token 414: ' n' (ID: 297)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3731360137462616
    2. ' pow' → logprob: -1.998136043548584
    3. 'n' → logprob: -2.873136043548584
    4. ' (' → logprob: -3.123136043548584
    5. '(n' → logprob: -3.623136043548584
    6. ' n' → logprob: -3.748136043548584
    7. '(pow' → logprob: -3.748136043548584
    8. '1' → logprob: -7.123136043548584
    9. '(' → logprob: -8.248135566711426
    10. '   ' → logprob: -8.748135566711426

Token 415: '^' (ID: 61)
  Prédit: ' pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pow' → logprob: -0.8006659746170044
    2. '**' → logprob: -1.1756659746170044
    3. 'pow' → logprob: -1.8006659746170044
    4. '_pow' → logprob: -3.425665855407715
    5. ' **' → logprob: -3.675665855407715
    6. '(pow' → logprob: -4.925665855407715
    7. '.pow' → logprob: -5.175665855407715
    8. ' puissance' → logprob: -5.925665855407715
    9. '^' → logprob: -6.300665855407715
    10. '```' → logprob: -7.800665855407715

Token 416: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00023810577113181353
    2. ' m' → logprob: -8.375238418579102
    3. '(m' → logprob: -12.250238418579102
    4. 'pow' → logprob: -13.125238418579102
    5. ' (' → logprob: -15.375238418579102
    6. '```' → logprob: -15.375238418579102
    7. 'mod' → logprob: -15.625238418579102
    8. '(' → logprob: -16.7502384185791
    9. '{' → logprob: -17.2502384185791
    10. '   ' → logprob: -17.5002384185791

Token 417: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.41122955083847046
    2. ' modulo' → logprob: -1.1612296104431152
    3. ' mod' → logprob: -4.286229610443115
    4. '%' → logprob: -4.661229610443115
    5. 'mod' → logprob: -7.286229610443115
    6. ' ' → logprob: -10.411229133605957
    7. '%n' → logprob: -10.661229133605957
    8. ')' → logprob: -11.161229133605957
    9. '%m' → logprob: -11.161229133605957
    10. '```' → logprob: -11.286229133605957

Token 418: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.07891292124986649
    2. ' mod' → logprob: -2.5789129734039307
    3. '(mod' → logprob: -10.703912734985352
    4. ' ' → logprob: -14.828912734985352
    5. '	mod' → logprob: -15.703912734985352
    6. '_mod' → logprob: -17.20391273498535
    7. '998' → logprob: -17.32891273498535
    8. '`' → logprob: -17.95391273498535
    9. '```' → logprob: -18.07891273498535
    10. ' modulo' → logprob: -18.57891273498535

Token 419: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14568011462688446
    2. '   ' → logprob: -2.1456801891326904
    3. '       ' → logprob: -4.770679950714111
    4. '.' → logprob: -5.520679950714111
    5. '.
' → logprob: -5.645679950714111
    6. '```' → logprob: -7.020679950714111
    7. '"""
' → logprob: -7.895679950714111
    8. '    
' → logprob: -8.39568042755127
    9. '"""' → logprob: -8.39568042755127
    10. '\n' → logprob: -8.64568042755127

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012141917832195759
    2. '   ' → logprob: -5.387141704559326
    3. '"""
' → logprob: -5.512141704559326
    4. '"""' → logprob: -6.012141704559326
    5. ' """
' → logprob: -8.012142181396484
    6. '    ' → logprob: -8.137142181396484
    7. '        
' → logprob: -10.012142181396484
    8. ' """' → logprob: -10.137142181396484
    9. '```' → logprob: -10.262142181396484
    10. '        ' → logprob: -10.262142181396484

Token 421: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2917216122150421
    2. '"""
' (adapté à ' """
') → logprob: -2.0417215824127197
    3. '"""' → logprob: -2.5417215824127197
    4. '   ' → logprob: -4.041721820831299
    5. ' """
' → logprob: -4.666721820831299
    6. ' if' → logprob: -5.166721820831299
    7. 'if' → logprob: -5.291721820831299
    8. ' """' → logprob: -5.666721820831299
    9. '```' → logprob: -6.041721820831299
    10. '    ' → logprob: -7.791721820831299

Token 422: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09302467107772827
    2. '       ' → logprob: -2.843024730682373
    3. '   ' → logprob: -3.843024730682373
    4. ' if' → logprob: -4.718024730682373
    5. '	if' → logprob: -8.593024253845215
    6. 'result' → logprob: -10.718024253845215
    7. 'return' → logprob: -11.968024253845215
    8. '	' → logprob: -14.343024253845215
    9. '           ' → logprob: -14.593024253845215
    10. 'pow' → logprob: -14.718024253845215

Token 423: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.9385402993066236e-05
    2. 'return' → logprob: -11.375019073486328
    3. ' if' → logprob: -12.000019073486328
    4. 'result' → logprob: -13.750019073486328
    5. '   ' → logprob: -14.875019073486328
    6. 'res' → logprob: -15.375019073486328
    7. '	if' → logprob: -17.625019073486328
    8. 'r' → logprob: -17.625019073486328
    9. '       ' → logprob: -17.875019073486328
    10. 'i' → logprob: -18.875019073486328

Token 424: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02975558675825596
    2. ' m' → logprob: -3.5297555923461914
    3. '   ' → logprob: -12.279755592346191
    4. '	m' → logprob: -15.029755592346191
    5. ' ' → logprob: -16.654754638671875
    6. '    ' → logprob: -17.154754638671875
    7. '       ' → logprob: -17.779754638671875
    8. '
' → logprob: -18.279754638671875
    9. '  ' → logprob: -18.529754638671875
    10. '_m' → logprob: -18.654754638671875

Token 425: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326892375946045
    2. ' ==' → logprob: -0.7576892375946045
    3. '=' → logprob: -10.132689476013184
    4. '0' → logprob: -10.257689476013184
    5. ' ' → logprob: -12.257689476013184
    6. '==
' → logprob: -12.757689476013184
    7. ' =' → logprob: -13.132689476013184
    8. '   ' → logprob: -13.882689476013184
    9. '[' → logprob: -14.132689476013184
    10. ')==' → logprob: -14.257689476013184

Token 426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '1' → logprob: -17.877185821533203
    4. '   ' → logprob: -18.752185821533203
    5. '00' → logprob: -19.502185821533203
    6. '۰' → logprob: -20.127185821533203
    7. '  ' → logprob: -20.252185821533203
    8. '
' → logprob: -20.314685821533203
    9. '    ' → logprob: -20.877185821533203
    10. ' ' → logprob: -21.252185821533203

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -21.125001907348633
    4. '1' → logprob: -21.500001907348633
    5. '00' → logprob: -21.625001907348633
    6. '   ' → logprob: -23.250001907348633
    7. '000' → logprob: -23.750001907348633
    8. '０' → logprob: -24.625001907348633
    9. '    ' → logprob: -24.625001907348633
    10. '  ' → logprob: -24.750001907348633

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3495127260684967
    2. ':
' → logprob: -1.2245126962661743
    3. ':return' → logprob: -6.974512577056885
    4. '       ' → logprob: -9.724513053894043
    5. '   ' → logprob: -10.599513053894043
    6. ':
' → logprob: -11.224513053894043
    7. ' :' → logprob: -11.474513053894043
    8. '1' → logprob: -11.849513053894043
    9. ' :
' → logprob: -12.099513053894043
    10. '           ' → logprob: -12.724513053894043

Token 429: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0779590606689453
    2. 'return' → logprob: -1.0779590606689453
    3. '1' → logprob: -1.7029590606689453
    4. '           ' → logprob: -2.3279590606689453
    5. ' return' → logprob: -3.3279590606689453
    6. '   ' → logprob: -5.702959060668945
    7. ' ' → logprob: -8.202959060668945
    8. '2' → logprob: -9.327959060668945
    9. '0' → logprob: -10.327959060668945
    10. '	return' → logprob: -10.577959060668945

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04047534242272377
    2. ' return' → logprob: -3.290475368499756
    3. '1' → logprob: -6.040475368499756
    4. '   ' → logprob: -11.040474891662598
    5. '           ' → logprob: -11.040474891662598
    6. '       ' → logprob: -11.165474891662598
    7. ' ' → logprob: -13.290474891662598
    8. ':return' → logprob: -13.415474891662598
    9. '	return' → logprob: -14.915474891662598
    10. 'eturn' → logprob: -15.415474891662598

Token 431: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. '       ' → logprob: -17.625335693359375
    5. '```' → logprob: -21.000335693359375
    6. ' ' → logprob: -21.125335693359375
    7. '
' → logprob: -21.250335693359375
    8. '           ' → logprob: -22.000335693359375
    9. '  ' → logprob: -22.000335693359375
    10. '     ' → logprob: -22.500335693359375

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -21.75
    4. '   ' → logprob: -22.5
    5. '۱' → logprob: -23.375
    6. '
' → logprob: -24.125
    7. '`' → logprob: -24.125
    8. 'pow' → logprob: -24.375
    9. '' → logprob: -24.625
    10. '১' → logprob: -24.875

Token 433: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19050472974777222
    2. '       ' → logprob: -2.190504789352417
    3. '    
' → logprob: -3.690504789352417
    4. ' 
' → logprob: -3.815504789352417
    5. '        
' → logprob: -4.440504550933838
    6. '   
' → logprob: -7.190504550933838
    7. '\n' → logprob: -7.440504550933838
    8. '  
' → logprob: -7.565504550933838
    9. '     
' → logprob: -7.565504550933838
    10. '       
' → logprob: -8.815505027770996

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003843173326458782
    2. '   ' → logprob: -8.375384330749512
    3. 'n' → logprob: -9.875384330749512
    4. ' if' → logprob: -10.750384330749512
    5. '        
' → logprob: -10.750384330749512
    6. 'if' → logprob: -11.500384330749512
    7. '
' → logprob: -11.625384330749512
    8. 's' → logprob: -11.875384330749512
    9. '```' → logprob: -11.875384330749512
    10. '    
' → logprob: -12.250384330749512

Token 435: ' elif' (ID: 9497)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.27463266253471375
    2. 'x' → logprob: -2.149632692337036
    3. ' half' → logprob: -2.274632692337036
    4. 'if' → logprob: -5.399632453918457
    5. 'p' → logprob: -5.399632453918457
    6. 'temp' → logprob: -5.524632453918457
    7. ' x' → logprob: -5.899632453918457
    8. 'res' → logprob: -6.399632453918457
    9. 'r' → logprob: -6.899632453918457
    10. ' if' → logprob: -7.649632453918457

Token 436: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005233882926404476
    2. ' m' → logprob: -5.2552337646484375
    3. '	m' → logprob: -16.130233764648438
    4. '   ' → logprob: -18.630233764648438
    5. '(m' → logprob: -19.255233764648438
    6. '
' → logprob: -19.755233764648438
    7. ' ' → logprob: -20.130233764648438
    8. '
' → logprob: -21.005233764648438
    9. '    ' → logprob: -21.130233764648438
    10. 'n' → logprob: -21.130233764648438

Token 437: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5760794281959534
    2. '%' → logprob: -0.8260794281959534
    3. ' &' → logprob: -10.326079368591309
    4. '[' → logprob: -10.326079368591309
    5. ' ' → logprob: -10.326079368591309
    6. '==' → logprob: -11.576079368591309
    7. ' ==' → logprob: -11.701079368591309
    8. '&' → logprob: -11.951079368591309
    9. ' ' → logprob: -12.326079368591309
    10. '1' → logprob: -12.576079368591309

Token 438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '0' → logprob: -19.00000762939453
    4. '2' → logprob: -20.50000762939453
    5. '۱' → logprob: -21.12500762939453
    6. '<|end|>' → logprob: -21.37500762939453
    7. '```' → logprob: -22.12500762939453
    8. '   ' → logprob: -22.18750762939453
    9. '%' → logprob: -22.37500762939453
    10. '﻿' → logprob: -22.81250762939453

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -16.625003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '
' → logprob: -19.875003814697266
    6. '2' → logprob: -20.250003814697266
    7. '

' → logprob: -20.687503814697266
    8. '{' → logprob: -21.250003814697266
    9. '۱' → logprob: -21.312503814697266
    10. '%' → logprob: -21.500003814697266

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31559422612190247
    2. ':
' → logprob: -1.31559419631958
    3. ' :
' → logprob: -6.94059419631958
    4. ':return' → logprob: -7.44059419631958
    5. '       ' → logprob: -7.69059419631958
    6. ' :' → logprob: -8.190594673156738
    7. '   ' → logprob: -11.565594673156738
    8. '        ' → logprob: -12.065594673156738
    9. '           ' → logprob: -12.065594673156738
    10. ':
' → logprob: -12.565594673156738

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020574236288666725
    2. ' return' → logprob: -4.27057409286499
    3. '       ' → logprob: -5.77057409286499
    4. 'return' → logprob: -5.77057409286499
    5. '	       ' → logprob: -9.520574569702148
    6. ' ' → logprob: -11.020574569702148
    7. '               ' → logprob: -11.145574569702148
    8. '   ' → logprob: -11.270574569702148
    9. '        ' → logprob: -11.645574569702148
    10. 'n' → logprob: -12.270574569702148

Token 442: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038198474794626236
    2. ' return' → logprob: -3.288198471069336
    3. 'n' → logprob: -9.413198471069336
    4. '       ' → logprob: -9.538198471069336
    5. '	return' → logprob: -13.538198471069336
    6. 'eturn' → logprob: -14.788198471069336
    7. ':return' → logprob: -14.913198471069336
    8. '{return' → logprob: -15.163198471069336
    9. '   ' → logprob: -15.288198471069336
    10. '           ' → logprob: -15.413198471069336

Token 443: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020720958709717
    2. ' n' → logprob: -2.3502073287963867
    3. '	n' → logprob: -14.475207328796387
    4. '(n' → logprob: -16.60020637512207
    5. ' ' → logprob: -19.85020637512207
    6. '   ' → logprob: -20.85020637512207
    7. ',n' → logprob: -21.10020637512207
    8. '
' → logprob: -21.35020637512207
    9. '    ' → logprob: -21.35020637512207
    10. ' (' → logprob: -21.35020637512207

Token 444: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00558447977527976
    2. '%' → logprob: -5.630584716796875
    3. ' *' → logprob: -6.255584716796875
    4. '%n' → logprob: -10.255584716796875
    5. '*' → logprob: -11.130584716796875
    6. ' ' → logprob: -12.005584716796875
    7. '   ' → logprob: -13.130584716796875
    8. ' ' → logprob: -13.505584716796875
    9. '*n' → logprob: -14.880584716796875
    10. '    ' → logprob: -14.880584716796875

Token 445: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.7697225252486533e-06
    2. ' mod' → logprob: -12.500003814697266
    3. '998' → logprob: -21.750003814697266
    4. '(mod' → logprob: -22.125003814697266
    5. '	mod' → logprob: -22.125003814697266
    6. 'moder' → logprob: -23.750003814697266
    7. ' ' → logprob: -24.375003814697266
    8. '```' → logprob: -24.375003814697266
    9. '999' → logprob: -24.500003814697266
    10. 'modal' → logprob: -24.625003814697266

Token 446: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4314451515674591
    2. '
' → logprob: -1.1814451217651367
    3. '        
' → logprob: -3.4314451217651367
    4. '    
' → logprob: -5.056445121765137
    5. ' 
' → logprob: -5.931445121765137
    6. '  
' → logprob: -7.056445121765137
    7. '   
' → logprob: -7.681445121765137
    8. '   ' → logprob: -8.431445121765137
    9. '       
' → logprob: -8.806445121765137
    10. '<|end|>' → logprob: -9.056445121765137

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002920303028076887
    2. 'n' → logprob: -6.752920150756836
    3. 'else' → logprob: -7.877920150756836
    4. '   ' → logprob: -8.002920150756836
    5. 'result' → logprob: -8.252920150756836
    6. ' else' → logprob: -8.627920150756836
    7. '        
' → logprob: -8.627920150756836
    8. 'return' → logprob: -9.252920150756836
    9. 'res' → logprob: -9.752920150756836
    10. '
' → logprob: -9.752920150756836

Token 448: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0924958735704422
    2. '       ' → logprob: -3.467495918273926
    3. 'half' → logprob: -3.717495918273926
    4. ' else' → logprob: -4.342495918273926
    5. 'n' → logprob: -4.842495918273926
    6. 'res' → logprob: -5.342495918273926
    7. 'temp' → logprob: -6.217495918273926
    8. 'return' → logprob: -6.967495918273926
    9. 'x' → logprob: -6.967495918273926
    10. 'r' → logprob: -7.467495918273926

Token 449: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08894796669483185
    2. ' m' → logprob: -2.4639480113983154
    3. '(m' → logprob: -12.088948249816895
    4. '   ' → logprob: -13.963948249816895
    5. ' ' → logprob: -14.088948249816895
    6. '	m' → logprob: -14.338948249816895
    7. ' (' → logprob: -14.963948249816895
    8. '(' → logprob: -15.713948249816895
    9. '
' → logprob: -16.963947296142578
    10. ' ' → logprob: -17.088947296142578

Token 450: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04860439524054527
    2. ' %' → logprob: -3.0486044883728027
    3. '2' → logprob: -12.423604011535645
    4. ' ' → logprob: -12.673604011535645
    5. '   ' → logprob: -12.923604011535645
    6. '	' → logprob: -13.298604011535645
    7. '
' → logprob: -13.548604011535645
    8. '[' → logprob: -14.048604011535645
    9. ' ' → logprob: -14.548604011535645
    10. '```' → logprob: -14.923604011535645

Token 451: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.251171112060547
    4. '
' → logprob: -15.751171112060547
    5. '```' → logprob: -16.626171112060547
    6. '<|end|>' → logprob: -17.126171112060547
    7. '  ' → logprob: -17.376171112060547
    8. '

' → logprob: -17.813671112060547
    9. '[' → logprob: -17.938671112060547
    10. '    ' → logprob: -18.063671112060547

Token 452: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.12501335144043
    4. '```' → logprob: -17.62501335144043
    5. '
' → logprob: -18.12501335144043
    6. '

' → logprob: -19.25001335144043
    7. '۲' → logprob: -19.31251335144043
    8. '  ' → logprob: -19.43751335144043
    9. '{' → logprob: -19.93751335144043
    10. '[' → logprob: -20.12501335144043

Token 453: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38691169023513794
    2. '==' → logprob: -1.1369116306304932
    3. ' ' → logprob: -11.261911392211914
    4. ')==' → logprob: -11.636911392211914
    5. ' !=' → logprob: -12.261911392211914
    6. '=' → logprob: -12.386911392211914
    7. '0' → logprob: -13.261911392211914
    8. ':' → logprob: -13.386911392211914
    9. '!=' → logprob: -13.761911392211914
    10. '==
' → logprob: -13.886911392211914

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023357603640761226
    2. ' ' → logprob: -8.37523365020752
    3. '1' → logprob: -12.75023365020752
    4. '2' → logprob: -16.375232696533203
    5. '
' → logprob: -17.000232696533203
    6. '00' → logprob: -18.750232696533203
    7. '   ' → logprob: -18.750232696533203
    8. '```' → logprob: -19.000232696533203
    9. ' ' → logprob: -19.062732696533203
    10. '۰' → logprob: -19.812732696533203

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3319124011322856e-05
    2. '1' → logprob: -11.000022888183594
    3. ' ' → logprob: -12.000022888183594
    4. '2' → logprob: -14.625022888183594
    5. '۰' → logprob: -18.687522888183594
    6. '00' → logprob: -19.000022888183594
    7. '```' → logprob: -19.312522888183594
    8. '   ' → logprob: -19.812522888183594
    9. '01' → logprob: -20.000022888183594
    10. '
' → logprob: -20.187522888183594

Token 456: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22553612291812897
    2. ':' → logprob: -1.6005361080169678
    3. ':return' → logprob: -9.475536346435547
    4. '       ' → logprob: -11.100536346435547
    5. ' :
' → logprob: -11.350536346435547
    6. ':
' → logprob: -12.350536346435547
    7. ':

' → logprob: -12.350536346435547
    8. '):
' → logprob: -12.475536346435547
    9. ' :' → logprob: -12.725536346435547
    10. '   ' → logprob: -13.725536346435547

Token 457: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2691430449485779
    2. '           ' → logprob: -1.7691431045532227
    3. ' return' → logprob: -3.0191431045532227
    4. '       ' → logprob: -4.394143104553223
    5. 'n' → logprob: -5.894143104553223
    6. '	       ' → logprob: -7.144143104553223
    7. '	return' → logprob: -8.519143104553223
    8. '   ' → logprob: -9.019143104553223
    9. 'result' → logprob: -9.144143104553223
    10. ' n' → logprob: -9.644143104553223

Token 458: ' tmp' (ID: 8919)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.11562440544366837
    2. 'temp' → logprob: -2.36562442779541
    3. 'tmp' (adapté à ' tmp') → logprob: -4.86562442779541
    4. ' half' → logprob: -5.74062442779541
    5. 'return' → logprob: -6.24062442779541
    6. 'y' → logprob: -6.86562442779541
    7. 't' → logprob: -7.61562442779541
    8. 'r' → logprob: -7.99062442779541
    9. 'x' → logprob: -8.36562442779541
    10. '   ' → logprob: -9.99062442779541

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931484341621399
    2. ' =' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.068148612976074
    4. '	' → logprob: -16.693147659301758
    5. ' ' → logprob: -16.693147659301758
    6. '_=' → logprob: -17.068147659301758
    7. ',' → logprob: -17.193147659301758
    8. 'return' → logprob: -17.443147659301758
    9. '=
' → logprob: -17.568147659301758
    10. ':' → logprob: -17.568147659301758

Token 460: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.006766886916011572
    2. ' mod' → logprob: -5.0067667961120605
    3. '(mod' → logprob: -9.881767272949219
    4. '	mod' → logprob: -15.381767272949219
    5. 'pow' → logprob: -16.13176727294922
    6. ' (' → logprob: -17.75676727294922
    7. '   ' → logprob: -17.88176727294922
    8. ' мод' → logprob: -18.13176727294922
    9. 'n' → logprob: -18.25676727294922
    10. '_mod' → logprob: -18.88176727294922

Token 461: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '_mul' → logprob: -15.625000953674316
    4. '_power' → logprob: -16.625
    5. '_po' → logprob: -17.375
    6. '_p' → logprob: -17.625
    7. 'pow' → logprob: -17.75
    8. ' _' → logprob: -18.25
    9. '_P' → logprob: -18.625
    10. '(pow' → logprob: -19.75

Token 462: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.76759916334413e-05
    2. '(' → logprob: -9.500077247619629
    3. 'n' → logprob: -12.875077247619629
    4. '(
' → logprob: -15.750077247619629
    5. ' (' → logprob: -18.500078201293945
    6. ' n' → logprob: -20.875078201293945
    7. '((' → logprob: -21.500078201293945
    8. '(N' → logprob: -21.625078201293945
    9. 'def' → logprob: -21.875078201293945
    10. 's' → logprob: -22.000078201293945

Token 463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002285694790771231
    2. ' ,' → logprob: -8.625228881835938
    3. ',m' → logprob: -10.125228881835938
    4. '   ' → logprob: -12.750228881835938
    5. ',n' → logprob: -13.000228881835938
    6. ' ' → logprob: -13.625228881835938
    7. ',
' → logprob: -14.000228881835938
    8. 'm' → logprob: -14.125228881835938
    9. 'n' → logprob: -15.750228881835938
    10. ',(' → logprob: -15.875228881835938

Token 464: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.572941179503687e-05
    2. ' m' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.375045776367188
    4. ' ' → logprob: -17.500045776367188
    5. '	m' → logprob: -19.375045776367188
    6. '    ' → logprob: -19.875045776367188
    7. '(m' → logprob: -21.000045776367188
    8. '  ' → logprob: -21.125045776367188
    9. '[m' → logprob: -23.125045776367188
    10. ')m' → logprob: -23.375045776367188

Token 465: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.019126253202557564
    2. ' //' → logprob: -4.0191264152526855
    3. '   ' → logprob: -7.3941264152526855
    4. ' ' → logprob: -8.144125938415527
    5. '
' → logprob: -10.894125938415527
    6. '#' → logprob: -11.394125938415527
    7. '2' → logprob: -11.394125938415527
    8. '```' → logprob: -11.644125938415527
    9. '>>' → logprob: -11.894125938415527
    10. '  ' → logprob: -13.019125938415527

Token 466: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.625003814697266
    4. '
' → logprob: -17.625003814697266
    5. '```' → logprob: -19.250003814697266
    6. '  ' → logprob: -19.875003814697266
    7. '۲' → logprob: -20.000003814697266
    8. '[' → logprob: -20.250003814697266
    9. '    ' → logprob: -20.312503814697266
    10. '২' → logprob: -20.562503814697266

Token 467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '
' → logprob: -17.750001907348633
    5. '```' → logprob: -19.000001907348633
    6. '۲' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.250001907348633
    8. '[' → logprob: -20.375001907348633
    9. ')' → logprob: -20.437501907348633
    10. '1' → logprob: -20.562501907348633

Token 468: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016136184334754944
    2. ')
' → logprob: -4.141136169433594
    3. ')**' → logprob: -9.766136169433594
    4. ' )' → logprob: -10.641136169433594
    5. ')
' → logprob: -11.266136169433594
    6. ')

' → logprob: -13.266136169433594
    7. ' ' → logprob: -13.266136169433594
    8. ')*' → logprob: -13.891136169433594
    9. '   ' → logprob: -14.016136169433594
    10. ' )
' → logprob: -14.141136169433594

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23450234532356262
    2. 'return' → logprob: -2.2345023155212402
    3. '
' → logprob: -3.1095023155212402
    4. '       ' → logprob: -3.4845023155212402
    5. ' return' → logprob: -3.7345023155212402
    6. '   ' → logprob: -6.98450231552124
    7. '            
' → logprob: -7.85950231552124
    8. '	return' → logprob: -8.109502792358398
    9. ' 
' → logprob: -8.484502792358398
    10. '    
' → logprob: -8.484502792358398

Token 470: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001331667648628354
    2. ' return' → logprob: -6.751331806182861
    3. '           ' → logprob: -8.751331329345703
    4. '       ' → logprob: -13.501331329345703
    5. '	return' → logprob: -14.501331329345703
    6. 'result' → logprob: -15.251331329345703
    7. '   ' → logprob: -15.251331329345703
    8. '```' → logprob: -15.376331329345703
    9. 'tmp' → logprob: -15.501331329345703
    10. '
' → logprob: -15.626331329345703

Token 471: ' tmp' (ID: 8919)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.11769912391901016
    2. 'tmp' → logprob: -2.617699146270752
    3. ' (' → logprob: -3.617699146270752
    4. ' tmp' → logprob: -4.492699146270752
    5. '[tmp' → logprob: -11.117698669433594
    6. '(' → logprob: -12.242698669433594
    7. ',tmp' → logprob: -12.242698669433594
    8. '	tmp' → logprob: -13.117698669433594
    9. '/tmp' → logprob: -13.117698669433594
    10. '(t' → logprob: -13.867698669433594

Token 472: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5759598016738892
    2. '*' → logprob: -0.8259598016738892
    3. ' ' → logprob: -10.950960159301758
    4. ' ' → logprob: -13.075960159301758
    5. '**' → logprob: -15.450960159301758
    6. '   ' → logprob: -15.575960159301758
    7. '(' → logprob: -16.450960159301758
    8. '  ' → logprob: -17.325960159301758
    9. '*(' → logprob: -17.325960159301758
    10. '	' → logprob: -17.450960159301758

Token 473: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -9.627176768844947e-05
    2. ' tmp' → logprob: -9.250096321105957
    3. 'temp' → logprob: -17.75009536743164
    4. '	tmp' → logprob: -18.12509536743164
    5. '(tmp' → logprob: -18.75009536743164
    6. '/tmp' → logprob: -20.12509536743164
    7. '_tmp' → logprob: -20.37509536743164
    8. '$tmp' → logprob: -20.37509536743164
    9. '[tmp' → logprob: -21.37509536743164
    10. 'tm' → logprob: -21.50009536743164

Token 474: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02324594371020794
    2. '%' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.023245811462402
    4. ')' → logprob: -17.14824676513672
    5. ' ' → logprob: -17.77324676513672
    6. ' %
' → logprob: -17.89824676513672
    7. ' %=' → logprob: -18.02324676513672
    8. '%n' → logprob: -18.27324676513672
    9. '%s' → logprob: -18.64824676513672
    10. '%c' → logprob: -18.64824676513672

Token 475: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1002068892121315
    2. ' mod' → logprob: -2.3502068519592285
    3. '(mod' → logprob: -15.475207328796387
    4. '	mod' → logprob: -17.97520637512207
    5. ' ' → logprob: -19.60020637512207
    6. ' modul' → logprob: -19.60020637512207
    7. '_mod' → logprob: -19.72520637512207
    8. ' ' → logprob: -20.47520637512207
    9. ' мод' → logprob: -21.10020637512207
    10. '.mod' → logprob: -22.85020637512207

Token 476: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055645380169153214
    2. '
' → logprob: -3.80564546585083
    3. ' else' → logprob: -3.80564546585083
    4. 'else' → logprob: -4.93064546585083
    5. '   ' → logprob: -7.30564546585083
    6. '<|end|>' → logprob: -7.43064546585083
    7. ' 
' → logprob: -7.55564546585083
    8. '        
' → logprob: -7.93064546585083
    9. '  
' → logprob: -10.305644989013672
    10. ' return' → logprob: -10.430644989013672

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010805641068145633
    2. ' else' → logprob: -7.501080513000488
    3. 'else' → logprob: -7.876080513000488
    4. '   ' → logprob: -9.001080513000488
    5. '	else' → logprob: -11.376080513000488
    6. '<|end|>' → logprob: -12.376080513000488
    7. '	' → logprob: -13.251080513000488
    8. '        
' → logprob: -13.876080513000488
    9. '
' → logprob: -14.001080513000488
    10. '    
' → logprob: -14.501080513000488

Token 478: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5010051131248474
    2. 'else' (adapté à ' else') → logprob: -1.0010051727294922
    3. '       ' → logprob: -3.751005172729492
    4. '   ' → logprob: -5.876005172729492
    5. '	else' → logprob: -8.876005172729492
    6. 'return' → logprob: -9.501005172729492
    7. ' return' → logprob: -10.751005172729492
    8. '
' → logprob: -11.126005172729492
    9. ' ' → logprob: -11.376005172729492
    10. '	' → logprob: -13.751005172729492

Token 479: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20961280167102814
    2. ' :' → logprob: -2.5846128463745117
    3. ':
' → logprob: -3.7096128463745117
    4. ' return' → logprob: -3.7096128463745117
    5. ' ' → logprob: -4.084612846374512
    6. '           ' → logprob: -4.209612846374512
    7. '        ' → logprob: -4.334612846374512
    8. ' :
' → logprob: -4.709612846374512
    9. '       ' → logprob: -6.084612846374512
    10. ':return' → logprob: -6.334612846374512

Token 480: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2609921395778656
    2. 'n' → logprob: -2.2609920501708984
    3. ' (' → logprob: -2.3859920501708984
    4. '(n' → logprob: -3.5109920501708984
    5. ' return' → logprob: -6.635992050170898
    6. '(' → logprob: -6.885992050170898
    7. 'return' → logprob: -7.385992050170898
    8. '       ' → logprob: -7.885992050170898
    9. '           ' → logprob: -8.385992050170898
    10. '   ' → logprob: -10.885992050170898

Token 481: ' tmp' (ID: 8919)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3812165856361389
    2. 'return' → logprob: -1.7562165260314941
    3. '(n' → logprob: -2.006216526031494
    4. ' return' → logprob: -5.256216526031494
    5. ' n' → logprob: -5.881216526031494
    6. ' (' → logprob: -6.756216526031494
    7. '(' → logprob: -7.506216526031494
    8. '   ' → logprob: -10.631217002868652
    9. '(return' → logprob: -10.756217002868652
    10. '```' → logprob: -12.881217002868652

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. '*' → logprob: -17.251930236816406
    4. ')' → logprob: -17.876930236816406
    5. ' ' → logprob: -17.876930236816406
    6. ' *' → logprob: -18.001930236816406
    7. '_' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.126930236816406
    9. ',' → logprob: -18.876930236816406
    10. '.' → logprob: -19.376930236816406

Token 483: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.029772130772471428
    2. ' mod' → logprob: -3.5297720432281494
    3. '(mod' → logprob: -10.77977180480957
    4. '	mod' → logprob: -15.15477180480957
    5. 'n' → logprob: -15.40477180480957
    6. ' n' → logprob: -16.27977180480957
    7. ' ' → logprob: -16.65477180480957
    8. 'tmp' → logprob: -17.15477180480957
    9. '(n' → logprob: -17.27977180480957
    10. '
' → logprob: -17.65477180480957

Token 484: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -5.512236498361744e-07
    2. 'pow' → logprob: -14.500000953674316
    3. '_' → logprob: -18.0
    4. '_mul' → logprob: -18.875
    5. 'Pow' → logprob: -19.5
    6. '_mod' → logprob: -20.0
    7. '(pow' → logprob: -20.125
    8. ' _' → logprob: -20.5
    9. '_p' → logprob: -20.625
    10. '_put' → logprob: -20.625

Token 485: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.673547563375905e-05
    2. '(' → logprob: -9.375086784362793
    3. 'n' → logprob: -13.250086784362793
    4. '(
' → logprob: -16.625085830688477
    5. ' (' → logprob: -17.500085830688477
    6. '```' → logprob: -20.625085830688477
    7. ')n' → logprob: -20.875085830688477
    8. ')' → logprob: -20.875085830688477
    9. ',n' → logprob: -21.000085830688477
    10. '(mod' → logprob: -21.125085830688477

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5252596464706585e-05
    2. ',n' → logprob: -10.625044822692871
    3. '(n' → logprob: -11.125044822692871
    4. ' ,' → logprob: -12.500044822692871
    5. 'n' → logprob: -13.375044822692871
    6. '(' → logprob: -14.000044822692871
    7. ',m' → logprob: -17.000045776367188
    8. ',
' → logprob: -17.750045776367188
    9. ' n' → logprob: -17.875045776367188
    10. '```' → logprob: -18.375045776367188

Token 487: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03127087652683258
    2. 'n' → logprob: -4.156270980834961
    3. ' m' → logprob: -4.281270980834961
    4. ' n' → logprob: -6.656270980834961
    5. 'mod' → logprob: -12.281270980834961
    6. '(n' → logprob: -13.281270980834961
    7. '(m' → logprob: -13.656270980834961
    8. ' ' → logprob: -13.781270980834961
    9. '   ' → logprob: -14.406270980834961
    10. '    ' → logprob: -14.906270980834961

Token 488: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23857271671295166
    2. '-' → logprob: -1.6135727167129517
    3. ',' → logprob: -4.613572597503662
    4. ' //' → logprob: -5.988572597503662
    5. ' ,' → logprob: -7.863572597503662
    6. '//' → logprob: -8.61357307434082
    7. ' ' → logprob: -9.61357307434082
    8. '   ' → logprob: -12.48857307434082
    9. '```' → logprob: -12.48857307434082
    10. ' ' → logprob: -13.36357307434082

Token 489: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '
' → logprob: -16.62523078918457
    4. '   ' → logprob: -16.62523078918457
    5. '```' → logprob: -16.75023078918457
    6. '۲' → logprob: -17.75023078918457
    7. '1' → logprob: -18.56273078918457
    8. '       ' → logprob: -19.06273078918457
    9. ')' → logprob: -19.12523078918457
    10. '           ' → logprob: -19.12523078918457

Token 490: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '
' → logprob: -16.375001907348633
    4. '۲' → logprob: -17.750001907348633
    5. '```' → logprob: -18.500001907348633
    6. '1' → logprob: -19.312501907348633
    7. '٢' → logprob: -19.437501907348633
    8. '   ' → logprob: -19.687501907348633
    9. '२' → logprob: -20.062501907348633
    10. '

' → logprob: -20.125001907348633

Token 491: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.386898398399353
    2. ')' → logprob: -1.136898398399353
    3. ')
' → logprob: -10.886898040771484
    4. ' )
' → logprob: -13.011898040771484
    5. ')n' → logprob: -13.011898040771484
    6. '   ' → logprob: -13.761898040771484
    7. ')

' → logprob: -14.386898040771484
    8. '       ' → logprob: -14.511898040771484
    9. ')return' → logprob: -14.636898040771484
    10. '           ' → logprob: -15.011898040771484

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33878397941589355
    2. ' return' → logprob: -1.3387839794158936
    3. 'return' → logprob: -4.088784217834473
    4. '   ' → logprob: -5.588784217834473
    5. '       ' → logprob: -5.963784217834473
    6. ' ' → logprob: -7.463784217834473
    7. '	return' → logprob: -7.588784217834473
    8. ' 
' → logprob: -8.338784217834473
    9. ' ' → logprob: -9.213784217834473
    10. '
' → logprob: -9.588784217834473

Token 493: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1810876876115799
    2. ' return' → logprob: -1.8060877323150635
    3. '           ' → logprob: -7.056087493896484
    4. 'tmp' → logprob: -7.931087493896484
    5. ' tmp' → logprob: -10.056087493896484
    6. '(tmp' → logprob: -10.806087493896484
    7. '   ' → logprob: -11.181087493896484
    8. ' (' → logprob: -11.431087493896484
    9. 'n' → logprob: -11.931087493896484
    10. ' ' → logprob: -12.681087493896484

Token 494: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.23204512894153595
    2. '(tmp' → logprob: -1.7320451736450195
    3. ' (' → logprob: -4.7320451736450195
    4. ' tmp' → logprob: -4.7320451736450195
    5. '(n' → logprob: -4.8570451736450195
    6. 'n' → logprob: -5.4820451736450195
    7. '(' → logprob: -7.8570451736450195
    8. '((' → logprob: -9.23204517364502
    9. ' n' → logprob: -9.85704517364502
    10. '   ' → logprob: -11.73204517364502

Token 495: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0004315036640036851
    2. '*' → logprob: -7.750431537628174
    3. ' ' → logprob: -14.500431060791016
    4. ' ' → logprob: -15.250431060791016
    5. '   ' → logprob: -17.250431060791016
    6. '
' → logprob: -17.750431060791016
    7. ' *
' → logprob: -18.250431060791016
    8. ' tmp' → logprob: -18.250431060791016
    9. 'tmp' → logprob: -18.375431060791016
    10. '(tmp' → logprob: -18.625431060791016

Token 496: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -2.236549335066229e-05
    2. ' tmp' → logprob: -10.750021934509277
    3. '(tmp' → logprob: -14.625021934509277
    4. '	tmp' → logprob: -16.125022888183594
    5. 'tm' → logprob: -16.375022888183594
    6. '$tmp' → logprob: -16.625022888183594
    7. 'temp' → logprob: -16.875022888183594
    8. 't' → logprob: -16.875022888183594
    9. 'n' → logprob: -17.875022888183594
    10. '/tmp' → logprob: -18.625022888183594

Token 497: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0026566318701952696
    2. ' %' → logprob: -6.00265645980835
    3. '*' → logprob: -9.127656936645508
    4. '%' → logprob: -10.377656936645508
    5. ' ' → logprob: -10.377656936645508
    6. ' ' → logprob: -11.627656936645508
    7. 'import' → logprob: -15.002656936645508
    8. '```' → logprob: -15.252656936645508
    9. 'mod' → logprob: -16.002656936645508
    10. '*n' → logprob: -16.502656936645508

Token 498: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009114635176956654
    2. ' mod' → logprob: -7.000911235809326
    3. '(mod' → logprob: -19.000911712646484
    4. '	mod' → logprob: -20.125911712646484
    5. ' ' → logprob: -21.750911712646484
    6. '```' → logprob: -22.125911712646484
    7. '
' → logprob: -22.250911712646484
    8. 'moder' → logprob: -22.500911712646484
    9. ' ' → logprob: -22.875911712646484
    10. '998' → logprob: -22.875911712646484

Token 499: ' *' (ID: 425)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4915529787540436
    2. 'n' → logprob: -0.9915529489517212
    3. '(n' → logprob: -4.116552829742432
    4. ' (' → logprob: -7.241552829742432
    5. '(' → logprob: -8.49155330657959
    6. ' 
' → logprob: -10.11655330657959
    7. ' ' → logprob: -11.24155330657959
    8. '```' → logprob: -11.49155330657959
    9. '`' → logprob: -11.74155330657959
    10. 'mod' → logprob: -11.99155330657959

Token 500: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01160227321088314
    2. ' n' → logprob: -4.511602401733398
    3. '(n' → logprob: -7.511602401733398
    4. ' (' → logprob: -11.886602401733398
    5. '(' → logprob: -15.011602401733398
    6. '	n' → logprob: -15.386602401733398
    7. '   ' → logprob: -16.1366024017334
    8. '```' → logprob: -18.1366024017334
    9. ' ' → logprob: -18.3866024017334
    10. '
' → logprob: -18.6366024017334

Token 501: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0087038055062294
    2. '%' → logprob: -4.758703708648682
    3. ' ' → logprob: -9.38370418548584
    4. ' ' → logprob: -12.63370418548584
    5. '```' → logprob: -14.50870418548584
    6. ')' → logprob: -14.88370418548584
    7. ' %
' → logprob: -15.00870418548584
    8. ' %#' → logprob: -16.258703231811523
    9. ' ```' → logprob: -16.258703231811523
    10. '       ' → logprob: -16.508703231811523

Token 502: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.061967913061380386
    2. ' mod' → logprob: -2.8119678497314453
    3. '(mod' → logprob: -15.186967849731445
    4. '	mod' → logprob: -17.061967849731445
    5. ' ' → logprob: -17.436967849731445
    6. ' modul' → logprob: -17.936967849731445
    7. '_mod' → logprob: -18.436967849731445
    8. ' мод' → logprob: -18.936967849731445
    9. ' ' → logprob: -19.561967849731445
    10. '```' → logprob: -20.061967849731445

Token 503: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21871955692768097
    2. '<|end|>' → logprob: -1.7187196016311646
    3. '    
' → logprob: -4.593719482421875
    4. 'def' → logprob: -5.718719482421875
    5. '<|end|>' → logprob: -6.343719482421875
    6. '
' → logprob: -7.593719482421875
    7. '  
' → logprob: -8.218719482421875
    8. ' 
' → logprob: -8.468719482421875
    9. '\n' → logprob: -8.718719482421875
    10. ')' → logprob: -8.968719482421875

Token 504: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00235542980954051
    2. 'def' → logprob: -6.377355575561523
    3. '    
' → logprob: -7.502355575561523
    4. ')' → logprob: -10.002355575561523
    5. '<|end|>' → logprob: -11.377355575561523
    6. '   
' → logprob: -11.752355575561523
    7. '(' → logprob: -12.002355575561523
    8. '       ' → logprob: -12.002355575561523
    9. '  ' → logprob: -12.627355575561523
    10. '  
' → logprob: -13.002355575561523

Token 505: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030925124883651733
    2. '   ' → logprob: -5.878092288970947
    3. 'inv' → logprob: -8.253092765808105
    4. ' def' → logprob: -12.128092765808105
    5. 'inverse' → logprob: -12.253092765808105
    6. 'fact' → logprob: -12.503092765808105
    7. '#' (adapté à ' #') → logprob: -12.503092765808105
    8. '```' → logprob: -13.128092765808105
    9. '
' → logprob: -13.378092765808105
    10. 'result' → logprob: -13.378092765808105

Token 506: ' Pré' (ID: 86400)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.02382708713412285
    2. 'def' → logprob: -4.273827075958252
    3. '#' → logprob: -5.148827075958252
    4. 'fact' → logprob: -5.898827075958252
    5. 'inverse' → logprob: -7.273827075958252
    6. 'in' → logprob: -8.52382755279541
    7. 'ifact' → logprob: -10.02382755279541
    8. ' inv' → logprob: -10.52382755279541
    9. 'INV' → logprob: -10.89882755279541
    10. 'pow' → logprob: -11.14882755279541

Token 507: '-cal' (ID: 84920)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1408994048833847
    2. 'inv' → logprob: -2.390899419784546
    3. 'cis' → logprob: -4.765899181365967
    4. 'cision' → logprob: -4.890899181365967
    5. '_inv' → logprob: -5.265899181365967
    6. 'calc' → logprob: -5.640899181365967
    7. 'paration' → logprob: -5.765899181365967
    8. '_c' → logprob: -6.265899181365967
    9. 'cal' → logprob: -6.515899181365967
    10. '#' → logprob: -6.640899181365967

Token 508: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.0019438649760559201
    2. 'c' → logprob: -6.501944065093994
    3. 'culation' → logprob: -8.126943588256836
    4. 'cule' → logprob: -9.001943588256836
    5. '```' → logprob: -11.501943588256836
    6. 'ul' → logprob: -12.751943588256836
    7. '``' → logprob: -13.376943588256836
    8. ' cul' → logprob: -13.876943588256836
    9. '#' → logprob: -13.876943588256836
    10. 'cu' → logprob: -14.126943588256836

Token 509: ' des' (ID: 731)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.08632750809192657
    2. '   ' → logprob: -2.58632755279541
    3. 'inverse' → logprob: -5.58632755279541
    4. ' inv' → logprob: -6.96132755279541
    5. 'def' → logprob: -7.21132755279541
    6. 'in' → logprob: -7.33632755279541
    7. '_inv' → logprob: -7.58632755279541
    8. '[' → logprob: -8.46132755279541
    9. '(inv' → logprob: -8.96132755279541
    10. '[in' → logprob: -9.08632755279541

Token 510: ' invers' (ID: 38721)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.002992440015077591
    2. 'ifact' → logprob: -6.127992630004883
    3. 'fact' → logprob: -7.377992630004883
    4. 'in' → logprob: -9.377992630004883
    5. 'inverse' → logprob: -10.377992630004883
    6. ' inv' → logprob: -11.252992630004883
    7. '#' → logprob: -11.752992630004883
    8. 'if' → logprob: -11.752992630004883
    9. 'pow' → logprob: -11.877992630004883
    10. 'iv' → logprob: -11.877992630004883

Token 511: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0005031120381318033
    2. 'és' → logprob: -7.875503063201904
    3. 'e' → logprob: -9.750503540039062
    4. 'ions' → logprob: -10.875503540039062
    5. 'ées' → logprob: -11.125503540039062
    6. 's' → logprob: -11.375503540039062
    7. 'ces' → logprob: -12.250503540039062
    8. 'ses' → logprob: -13.125503540039062
    9. 'eurs' → logprob: -13.125503540039062
    10. 'é' → logprob: -13.250503540039062

Token 512: ' des' (ID: 731)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.06452621519565582
    2. 'inv' → logprob: -3.439526319503784
    3. ' fact' → logprob: -3.564526319503784
    4. 'in' → logprob: -7.064526081085205
    5. '_fact' → logprob: -7.439526081085205
    6. ' inv' → logprob: -8.189526557922363
    7. '_inv' → logprob: -8.939526557922363
    8. 'ifact' → logprob: -9.439526557922363
    9. 'factor' → logprob: -10.189526557922363
    10. '   ' → logprob: -10.689526557922363

Token 513: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.4617256056226324e-05
    2. 'factor' → logprob: -11.375014305114746
    3. ' fact' → logprob: -13.375014305114746
    4. 'facts' → logprob: -14.500014305114746
    5. '[' → logprob: -14.875014305114746
    6. 'fait' → logprob: -15.000014305114746
    7. '[i' → logprob: -15.375014305114746
    8. 'fac' → logprob: -15.750014305114746
    9. 'f' → logprob: -16.375015258789062
    10. '_fact' → logprob: -18.375015258789062

Token 514: 'ori' (ID: 6510)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.28400295972824097
    2. 'ori' → logprob: -1.6590030193328857
    3. 'orial' → logprob: -3.0340030193328857
    4. 'eurs' → logprob: -6.659002780914307
    5. 'ors' → logprob: -6.784002780914307
    6. '[' → logprob: -7.034002780914307
    7. 'fact' → logprob: -7.034002780914307
    8. 'i' → logprob: -7.284002780914307
    9. 'ières' → logprob: -7.284002780914307
    10. 'ories' → logprob: -7.784002780914307

Token 515: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0009672032319940627
    2. 'els' → logprob: -7.125967025756836
    3. 'alles' → logprob: -9.125967025756836
    4. 'aux' → logprob: -11.875967025756836
    5. 'ales' → logprob: -12.000967025756836
    6. 'lles' → logprob: -12.125967025756836
    7. '```' → logprob: -12.125967025756836
    8. '[' → logprob: -12.500967025756836
    9. 'als' → logprob: -12.500967025756836
    10. 'a' → logprob: -12.500967025756836

Token 516: ' modulo' (ID: 112372)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.20992518961429596
    2. ' inv' → logprob: -1.9599251747131348
    3. '   ' → logprob: -3.9599251747131348
    4. 'fact' → logprob: -4.084925174713135
    5. ' fact' → logprob: -4.959925174713135
    6. 'inverse' → logprob: -6.209925174713135
    7. '_inv' → logprob: -6.709925174713135
    8. ',' → logprob: -6.834925174713135
    9. ' inverse' → logprob: -7.459925174713135
    10. '(inv' → logprob: -8.584925651550293

Token 517: ' mod' (ID: 1812)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.08406918495893478
    2. ' fact' → logprob: -2.70906925201416
    3. '[' → logprob: -4.45906925201416
    4. '[m' → logprob: -7.83406925201416
    5. '```' → logprob: -7.83406925201416
    6. '[M' → logprob: -8.08406925201416
    7. ' [' → logprob: -8.58406925201416
    8. '[]' → logprob: -8.83406925201416
    9. '[n' → logprob: -8.83406925201416
    10. '[i' → logprob: -8.95906925201416

Token 518: ' (' (ID: 350)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.3474271893501282
    2. '   ' → logprob: -1.5974271297454834
    3. 'fact' → logprob: -2.7224271297454834
    4. ' inv' → logprob: -4.0974273681640625
    5. ' fact' → logprob: -5.5974273681640625
    6. ',' → logprob: -6.2224273681640625
    7. 'ifact' → logprob: -6.4724273681640625
    8. 'inverse' → logprob: -6.8474273681640625
    9. '_inv' → logprob: -8.972427368164062
    10. 'in' → logprob: -9.472427368164062

Token 519: 'né' (ID: 10149)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.012805456295609474
    2. ' inv' → logprob: -4.512805461883545
    3. 'ifact' → logprob: -6.512805461883545
    4. ')' → logprob: -9.137804985046387
    5. 'fact' → logprob: -9.387804985046387
    6. 'inverse' → logprob: -10.762804985046387
    7. ')
' → logprob: -11.512804985046387
    8. ' fact' → logprob: -11.512804985046387
    9. '   ' → logprob: -11.637804985046387
    10. 'if' → logprob: -11.887804985046387

Token 520: 'cess' (ID: 1185)
  Prédit: 'cess'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.00022392053506337106
    2. 'ces' → logprob: -8.625224113464355
    3. 'g' → logprob: -10.250224113464355
    4. 'ccess' → logprob: -12.750224113464355
    5. 'anmoins' → logprob: -13.000224113464355
    6. 'ess' → logprob: -14.125224113464355
    7. 'cces' → logprob: -14.500224113464355
    8. 'cesse' → logprob: -15.250224113464355
    9. '...' → logprob: -15.500224113464355
    10. 'ed' → logprob: -15.500224113464355

Token 521: 'aires' (ID: 8507)
  Prédit: 'cess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.016459299251437187
    2. '   ' → logprob: -4.5164594650268555
    3. 'ces' → logprob: -5.5164594650268555
    4. 'ess' → logprob: -7.6414594650268555
    5. 's' → logprob: -8.641459465026855
    6. '=' → logprob: -8.766459465026855
    7. 'aire' → logprob: -9.266459465026855
    8. 'essary' → logprob: -9.641459465026855
    9. 'aires' → logprob: -9.891459465026855
    10. 'cesse' → logprob: -10.391459465026855

Token 522: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.9760229587554932
    2. 'pour' → logprob: -1.1010229587554932
    3. ')' → logprob: -1.4760229587554932
    4. 'for' → logprob: -3.101022958755493
    5. ' for' → logprob: -4.101022720336914
    6. '   ' → logprob: -9.226022720336914
    7. ' à' → logprob: -9.226022720336914
    8. ' )' → logprob: -9.476022720336914
    9. ' для' → logprob: -9.601022720336914
    10. ',' → logprob: -9.976022720336914

Token 523: ' les' (ID: 1341)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.0056158304214478
    2. 'comb' → logprob: -1.5056158304214478
    3. ' la' → logprob: -1.8806158304214478
    4. ' comb' → logprob: -2.380615711212158
    5. ' calcul' → logprob: -3.255615711212158
    6. 'la' → logprob: -3.630615711212158
    7. 'def' → logprob: -3.755615711212158
    8. 'inv' → logprob: -4.255615711212158
    9. '#' → logprob: -4.630615711212158
    10. ' le' → logprob: -4.755615711212158

Token 524: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.2912634611129761
    2. ' comb' → logprob: -1.916263461112976
    3. 'calcul' → logprob: -3.4162635803222656
    4. 'coeff' → logprob: -3.9162635803222656
    5. 'com' → logprob: -3.9162635803222656
    6. 'bin' → logprob: -4.291263580322266
    7. 'fact' → logprob: -5.291263580322266
    8. 'inv' → logprob: -6.041263580322266
    9. 'inverse' → logprob: -6.166263580322266
    10. ' fact' → logprob: -6.166263580322266

Token 525: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.1442379504442215
    2. 'inations' → logprob: -2.894237995147705
    3. 'ina' → logprob: -3.394237995147705
    4. 'in' → logprob: -3.394237995147705
    5. 'i' → logprob: -5.394237995147705
    6. 'ination' → logprob: -6.394237995147705
    7. '[i' → logprob: -6.394237995147705
    8. ')' → logprob: -7.519237995147705
    9. 'initions' → logprob: -7.769237995147705
    10. 'def' → logprob: -8.019237518310547

Token 526: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -1.9027791495318525e-05
    2. 'ais' → logprob: -11.500019073486328
    3. 'on' → logprob: -12.375019073486328
    4. 'sons' → logprob: -13.125019073486328
    5. '#' → logprob: -13.875019073486328
    6. 'a' → logprob: -14.000019073486328
    7. '0' → logprob: -15.500019073486328
    8. '```' → logprob: -15.875019073486328
    9. 'son' → logprob: -16.750019073486328
    10. 's' → logprob: -16.750019073486328

Token 527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020592615474015474
    2. ')
' → logprob: -7.252059459686279
    3. '   ' → logprob: -8.127058982849121
    4. ',' → logprob: -8.502058982849121
    5. '):' → logprob: -8.502058982849121
    6. ').' → logprob: -8.877058982849121
    7. 'fact' → logprob: -8.877058982849121
    8. 'factor' → logprob: -9.127058982849121
    9. 'bin' → logprob: -10.002058982849121
    10. ')#' → logprob: -10.377058982849121

Token 528: '   ' (ID: 271)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.007265847641974688
    2. ' inv' → logprob: -5.257266044616699
    3. '   ' → logprob: -6.632266044616699
    4. 'fact' → logprob: -7.632266044616699
    5. 'ifact' → logprob: -8.5072660446167
    6. 'inverse' → logprob: -11.3822660446167
    7. ' fact' → logprob: -11.7572660446167
    8. 'in' → logprob: -12.8822660446167
    9. 'fin' → logprob: -13.1322660446167
    10. '_inv' → logprob: -13.6322660446167

Token 529: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0003199730417691171
    2. 'ifact' → logprob: -8.625320434570312
    3. 'fact' → logprob: -9.125320434570312
    4. ' inv' → logprob: -10.500320434570312
    5. 'inverse' → logprob: -13.000320434570312
    6. 'in' → logprob: -14.250320434570312
    7. 'inf' → logprob: -14.500320434570312
    8. 'if' → logprob: -16.125320434570312
    9. ' fact' → logprob: -16.250320434570312
    10. '#' → logprob: -16.375320434570312

Token 530: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.14428015053272247
    2. 'fact' → logprob: -2.019280195236206
    3. ' =' → logprob: -6.644279956817627
    4. 'Fact' → logprob: -9.394280433654785
    5. '_factor' → logprob: -9.644280433654785
    6. '=' → logprob: -9.644280433654785
    7. 'f' → logprob: -10.394280433654785
    8. ' fact' → logprob: -10.769280433654785
    9. '_fac' → logprob: -10.769280433654785
    10. '_f' → logprob: -12.144280433654785

Token 531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024186015129089355
    2. '=' → logprob: -3.774186134338379
    3. '[' → logprob: -7.024186134338379
    4. '=[' → logprob: -10.774186134338379
    5. ' =[' → logprob: -11.524186134338379
    6. '_' → logprob: -13.024186134338379
    7. 's' → logprob: -13.274186134338379
    8. ' [' → logprob: -13.399186134338379
    9. ' ' → logprob: -13.524186134338379
    10. ']' → logprob: -13.524186134338379

Token 532: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005234002135694027
    2. ' [' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.630233764648438
    4. '   ' → logprob: -16.880233764648438
    5. 'fact' → logprob: -18.130233764648438
    6. '[len' → logprob: -18.130233764648438
    7. '=[' → logprob: -18.755233764648438
    8. '[n' → logprob: -18.880233764648438
    9. '1' → logprob: -19.130233764648438
    10. '([' → logprob: -19.130233764648438

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163628220558167
    2. '1' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.514163970947266
    4. '```' → logprob: -17.389163970947266
    5. 'None' → logprob: -18.014163970947266
    6. '
' → logprob: -18.139163970947266
    7. '-' → logprob: -18.764163970947266
    8. '   ' → logprob: -19.014163970947266
    9. ']' → logprob: -19.014163970947266
    10. '``' → logprob: -19.139163970947266

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1041145626222715e-05
    2. ']*(' → logprob: -12.125011444091797
    3. ' ]' → logprob: -13.375011444091797
    4. '   ' → logprob: -14.000011444091797
    5. ')' → logprob: -14.000011444091797
    6. ']*' → logprob: -14.625011444091797
    7. '](' → logprob: -15.250011444091797
    8. '0' → logprob: -15.375011444091797
    9. ']+' → logprob: -15.375011444091797
    10. ' for' → logprob: -15.500011444091797

Token 535: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04666315019130707
    2. ' *' → logprob: -3.2966630458831787
    3. ']*(' → logprob: -5.296663284301758
    4. '*' → logprob: -6.171663284301758
    5. '*(' → logprob: -7.546663284301758
    6. ' for' → logprob: -7.796663284301758
    7. ']*' → logprob: -8.296663284301758
    8. '   ' → logprob: -8.546663284301758
    9. ',' → logprob: -10.796663284301758
    10. 'for' → logprob: -10.796663284301758

Token 536: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0011752246646210551
    2. ' (' → logprob: -6.876175403594971
    3. '(m' → logprob: -9.001174926757812
    4. '   ' → logprob: -11.501174926757812
    5. '(mod' → logprob: -12.251174926757812
    6. '(' → logprob: -12.876174926757812
    7. '
' → logprob: -15.126174926757812
    8. '((' → logprob: -15.251174926757812
    9. '(max' → logprob: -15.376174926757812
    10. '(Mod' → logprob: -15.376174926757812

Token 537: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.09015844762325287
    2. '(M' → logprob: -2.465158462524414
    3. '   ' → logprob: -6.965158462524414
    4. ' M' → logprob: -8.340158462524414
    5. ' (' → logprob: -10.840158462524414
    6. '(' → logprob: -12.340158462524414
    7. '[M' → logprob: -12.715158462524414
    8. '	M' → logprob: -13.215158462524414
    9. 'm' → logprob: -13.465158462524414
    10. ''M' → logprob: -14.090158462524414

Token 538: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022828221321106
    2. ' +' → logprob: -1.9102282524108887
    3. '+
' → logprob: -13.535228729248047
    4. '   ' → logprob: -13.785228729248047
    5. '[' → logprob: -14.785228729248047
    6. ' +
' → logprob: -14.910228729248047
    7. ' plus' → logprob: -15.035228729248047
    8. ' ' → logprob: -15.035228729248047
    9. '1' → logprob: -16.410228729248047
    10. '＋' → logprob: -16.410228729248047

Token 539: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3464544432936236e-05
    2. ' ' → logprob: -10.125043869018555
    3. '2' → logprob: -12.875043869018555
    4. '   ' → logprob: -14.625043869018555
    5. '
' → logprob: -15.750043869018555
    6. '```' → logprob: -16.250043869018555
    7. '+' → logprob: -16.687543869018555
    8. '  ' → logprob: -17.687543869018555
    9. '

' → logprob: -18.125043869018555
    10. '7' → logprob: -18.375043869018555

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -15.75000286102295
    4. '   ' → logprob: -17.687503814697266
    5. '  ' → logprob: -18.937503814697266
    6. '
' → logprob: -18.937503814697266
    7. '```' → logprob: -19.125003814697266
    8. '+' → logprob: -19.250003814697266
    9. '۱' → logprob: -19.250003814697266
    10. '１' → logprob: -19.562503814697266

Token 541: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07896061986684799
    2. ')
' → logprob: -2.578960657119751
    3. ')
' → logprob: -10.328960418701172
    4. ')

' → logprob: -10.953960418701172
    5. '   ' → logprob: -11.953960418701172
    6. ' )' → logprob: -11.953960418701172
    7. ' )
' → logprob: -12.328960418701172
    8. ']' → logprob: -13.453960418701172
    9. '
' → logprob: -15.078960418701172
    10. ')\' → logprob: -15.203960418701172

Token 542: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07943055778741837
    2. '   ' → logprob: -3.32943058013916
    3. '  
' → logprob: -4.20443058013916
    4. '    
' → logprob: -4.57943058013916
    5. '<|end|>' → logprob: -4.57943058013916
    6. '```' → logprob: -6.57943058013916
    7. 'inv' → logprob: -6.82943058013916
    8. '   
' → logprob: -7.20443058013916
    9. ',' → logprob: -7.57943058013916
    10. ')' → logprob: -8.32943058013916

Token 543: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.6401360630989075
    2. '
' → logprob: -0.7651360630989075
    3. 'fact' → logprob: -5.390136241912842
    4. '<|end|>' → logprob: -6.890136241912842
    5. '   ' → logprob: -7.265136241912842
    6. ',' → logprob: -8.015135765075684
    7. '```' → logprob: -8.765135765075684
    8. '    
' → logprob: -8.765135765075684
    9. '  
' → logprob: -9.015135765075684
    10. ' inv' → logprob: -9.265135765075684

Token 544: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -7.147740689106286e-05
    2. 'fact' → logprob: -9.87507152557373
    3. ' inv' → logprob: -10.87507152557373
    4. 'inverse' → logprob: -14.75007152557373
    5. '```' → logprob: -15.87507152557373
    6. 'import' → logprob: -16.000070571899414
    7. 'mod' → logprob: -16.250070571899414
    8. '_inv' → logprob: -16.375070571899414
    9. '   ' → logprob: -16.875070571899414
    10. '1' → logprob: -17.000070571899414

Token 545: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.00048763392260298133
    2. '_fac' → logprob: -7.750487804412842
    3. '_' → logprob: -10.625487327575684
    4. '_f' → logprob: -10.875487327575684
    5. ' _' → logprob: -12.375487327575684
    6. '
' → logprob: -12.875487327575684
    7. '_factor' → logprob: -13.000487327575684
    8. '_FACT' → logprob: -13.875487327575684
    9. '_factory' → logprob: -14.500487327575684
    10. '   ' → logprob: -14.625487327575684

Token 546: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022103239316493273
    2. '   ' → logprob: -7.2522101402282715
    3. ' =' → logprob: -8.00221061706543
    4. '
' → logprob: -8.25221061706543
    5. ')' → logprob: -8.37721061706543
    6. '=' → logprob: -8.62721061706543
    7. ']' → logprob: -9.37721061706543
    8. 'inv' → logprob: -9.75221061706543
    9. '```' → logprob: -9.75221061706543
    10. 'fact' → logprob: -9.87721061706543

Token 547: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006118826568126678
    2. ']=' → logprob: -7.500611782073975
    3. ' ]' → logprob: -10.000612258911133
    4. '=' → logprob: -12.000612258911133
    5. ']
' → logprob: -12.375612258911133
    6. ')' → logprob: -14.000612258911133
    7. ' =' → logprob: -14.625612258911133
    8. ']

' → logprob: -15.000612258911133
    9. ']=-' → logprob: -15.125612258911133
    10. 'def' → logprob: -15.500612258911133

Token 548: ' :' (ID: 712)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1605081409215927
    2. ' =' → logprob: -1.910508155822754
    3. ']' → logprob: -8.660508155822754
    4. '[' → logprob: -10.660508155822754
    5. ']=' → logprob: -10.910508155822754
    6. 'def' → logprob: -11.285508155822754
    7. '=
' → logprob: -11.410508155822754
    8. '<|end|>' → logprob: -11.535508155822754
    9. ')' → logprob: -12.035508155822754
    10. '   ' → logprob: -12.160508155822754

Token 549: ' inverse' (ID: 53743)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05535554513335228
    2. '1' → logprob: -2.9303555488586426
    3. ' ' → logprob: -8.555355072021484
    4. 'pow' → logprob: -8.555355072021484
    5. 'fact' → logprob: -9.680355072021484
    6. 'factor' → logprob: -11.555355072021484
    7. 'None' → logprob: -12.680355072021484
    8. '(' → logprob: -12.930355072021484
    9. '
' → logprob: -13.180355072021484
    10. 'inv' → logprob: -14.180355072021484

Token 550: ' mod' (ID: 1812)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.7183184027671814
    2. '_fact' → logprob: -1.4683184623718262
    3. '[' → logprob: -2.718318462371826
    4. '<|end|>' → logprob: -2.843318462371826
    5. 'fact' → logprob: -3.843318462371826
    6. '   ' → logprob: -3.968318462371826
    7. ')' → logprob: -3.968318462371826
    8. 'factor' → logprob: -4.218318462371826
    9. ' factorial' → logprob: -4.593318462371826
    10. '[i' → logprob: -4.843318462371826

Token 551: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.18645595014095306
    2. ' des' → logprob: -3.0614559650421143
    3. '_fact' → logprob: -3.4364559650421143
    4. 'fact' → logprob: -3.6864559650421143
    5. ' fact' → logprob: -3.6864559650421143
    6. ' of' → logprob: -5.311455726623535
    7. 'ulo' → logprob: -5.686455726623535
    8. ' factorial' → logprob: -5.811455726623535
    9. 'arith' → logprob: -5.811455726623535
    10. ')' → logprob: -5.811455726623535

Token 552: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2663973867893219
    2. ' des' → logprob: -2.641397476196289
    3. ' de' → logprob: -3.516397476196289
    4. ')' → logprob: -3.516397476196289
    5. '   ' → logprob: -3.891397476196289
    6. 'fact' → logprob: -4.016397476196289
    7. '[' → logprob: -4.141397476196289
    8. 'of' → logprob: -4.141397476196289
    9. ']' → logprob: -5.266397476196289
    10. '(' → logprob: -5.391397476196289

Token 553: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.014170682057738304
    2. ' fact' → logprob: -4.2641706466674805
    3. 'factor' → logprob: -12.26417064666748
    4. '_fact' → logprob: -14.13917064666748
    5. '.fact' → logprob: -14.38917064666748
    6. 'f' → logprob: -15.76417064666748
    7. '(f' → logprob: -15.88917064666748
    8. ' facto' → logprob: -16.014171600341797
    9. ' ' → logprob: -16.139171600341797
    10. '(' → logprob: -16.264171600341797

Token 554: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.017353594303131104
    2. '[M' → logprob: -4.142353534698486
    3. '[' → logprob: -7.267353534698486
    4. 'fact' → logprob: -8.017354011535645
    5. 'i' → logprob: -10.142354011535645
    6. ']' → logprob: -10.142354011535645
    7. '_fact' → logprob: -10.267354011535645
    8. '(i' → logprob: -10.767354011535645
    9. 'factor' → logprob: -11.142354011535645
    10. '[I' → logprob: -11.267354011535645

Token 555: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005676941480487585
    2. ']
' → logprob: -6.130676746368408
    3. '])' → logprob: -6.130676746368408
    4. ')' → logprob: -7.505676746368408
    5. ' ]' → logprob: -8.255677223205566
    6. '[i' → logprob: -8.380677223205566
    7. '[' → logprob: -9.505677223205566
    8. ')]' → logprob: -9.505677223205566
    9. '])
' → logprob: -11.130677223205566
    10. 'def' → logprob: -11.255677223205566

Token 556: '   ' (ID: 271)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.066973477602005
    2. '   ' → logprob: -2.8169734477996826
    3. ' inv' → logprob: -5.941973686218262
    4. 'fact' → logprob: -7.066973686218262
    5. '
' → logprob: -7.566973686218262
    6. ')' → logprob: -8.191973686218262
    7. ',' → logprob: -8.441973686218262
    8. '_inv' → logprob: -9.066973686218262
    9. 'import' → logprob: -9.316973686218262
    10. '    
' → logprob: -9.816973686218262

Token 557: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -7.465036105713807e-06
    2. 'fact' → logprob: -12.000007629394531
    3. 'import' → logprob: -14.125007629394531
    4. ' inv' → logprob: -15.000007629394531
    5. 'def' → logprob: -16.87500762939453
    6. '#' → logprob: -17.37500762939453
    7. '   ' → logprob: -17.37500762939453
    8. 'inverse' → logprob: -17.75000762939453
    9. '_inv' → logprob: -17.87500762939453
    10. 'from' → logprob: -18.37500762939453

Token 558: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.0011995165841653943
    2. '_fac' → logprob: -6.876199722290039
    3. '_factor' → logprob: -10.126199722290039
    4. 'fact' → logprob: -10.376199722290039
    5. '[' → logprob: -10.876199722290039
    6. '_f' → logprob: -11.001199722290039
    7. '_' → logprob: -11.251199722290039
    8. '[_' → logprob: -11.751199722290039
    9. '
' → logprob: -12.001199722290039
    10. '   ' → logprob: -12.251199722290039

Token 559: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.000831782293971628
    2. '[-' → logprob: -7.375831604003906
    3. '[' → logprob: -8.500831604003906
    4. '[m' → logprob: -14.250831604003906
    5. ' [' → logprob: -14.375831604003906
    6. '[
' → logprob: -16.250831604003906
    7. '=M' → logprob: -16.250831604003906
    8. ']' → logprob: -16.375831604003906
    9. ' =' → logprob: -16.625831604003906
    10. '=' → logprob: -16.750831604003906

Token 560: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.255023956531659e-05
    2. ']=' → logprob: -10.125072479248047
    3. ' ]' → logprob: -10.500072479248047
    4. ']
' → logprob: -12.500072479248047
    5. '=' → logprob: -14.875072479248047
    6. '()]' → logprob: -15.500072479248047
    7. '   ' → logprob: -16.000072479248047
    8. '']' → logprob: -16.625072479248047
    9. ']
' → logprob: -16.750072479248047
    10. ']

' → logprob: -16.750072479248047

Token 561: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196914613246918
    2. ' =' → logprob: -2.811969041824341
    3. '=
' → logprob: -14.936968803405762
    4. ',' → logprob: -15.311968803405762
    5. '＝' → logprob: -15.311968803405762
    6. '=

' → logprob: -15.436968803405762
    7. '=int' → logprob: -15.936968803405762
    8. '%=' → logprob: -16.186969757080078
    9. '=}' → logprob: -16.811969757080078
    10. ' =
' → logprob: -17.686969757080078

Token 562: ' mod' (ID: 1812)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0003558423195499927
    2. ' pow' → logprob: -8.12535572052002
    3. '1' → logprob: -10.25035572052002
    4. 'mod' → logprob: -10.75035572052002
    5. '   ' → logprob: -13.37535572052002
    6. '(pow' → logprob: -14.12535572052002
    7. ' ' → logprob: -14.75035572052002
    8. '  ' → logprob: -16.750356674194336
    9. 'power' → logprob: -17.250356674194336
    10. '```' → logprob: -17.500356674194336

Token 563: '_pow' (ID: 160965)
  Prédit: '_pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.007691104896366596
    2. 'pow' → logprob: -5.007690906524658
    3. '-' → logprob: -7.132690906524658
    4. ' -' → logprob: -8.757691383361816
    5. ' pow' → logprob: -11.757691383361816
    6. 'Pow' → logprob: -12.382691383361816
    7. '.pow' → logprob: -13.507691383361816
    8. '-p' → logprob: -13.757691383361816
    9. '(pow' → logprob: -13.882691383361816
    10. '_power' → logprob: -13.882691383361816

Token 564: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00019221604452468455
    2. 'fact' → logprob: -8.875192642211914
    3. '(' → logprob: -9.875192642211914
    4. '_fact' → logprob: -15.250192642211914
    5. ' fact' → logprob: -15.625192642211914
    6. '.fact' → logprob: -16.375192642211914
    7. '(
' → logprob: -16.625192642211914
    8. 'f' → logprob: -16.750192642211914
    9. '	f' → logprob: -16.750192642211914
    10. 'Fact' → logprob: -16.750192642211914

Token 565: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -4.2987729102605954e-05
    2. '(act' → logprob: -10.500042915344238
    3. 'ac' → logprob: -12.625042915344238
    4. '```' → logprob: -13.000042915344238
    5. ')' → logprob: -13.500042915344238
    6. ''act' → logprob: -14.250042915344238
    7. '(' → logprob: -14.250042915344238
    8. '[' → logprob: -14.375042915344238
    9. '	act' → logprob: -14.625042915344238
    10. 'a' → logprob: -14.625042915344238

Token 566: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -7.612634362885728e-05
    2. '[' → logprob: -10.125076293945312
    3. ')' → logprob: -11.125076293945312
    4. 'M' → logprob: -12.250076293945312
    5. '(M' → logprob: -12.250076293945312
    6. ',' → logprob: -12.875076293945312
    7. '[
' → logprob: -13.000076293945312
    8. '[-' → logprob: -13.125076293945312
    9. ' [' → logprob: -13.125076293945312
    10. ')[' → logprob: -14.125076293945312

Token 567: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02587115950882435
    2. '],' → logprob: -4.150871276855469
    3. '[M' → logprob: -4.900871276855469
    4. ' ,' → logprob: -6.275871276855469
    5. ',M' → logprob: -7.900871276855469
    6. ']' → logprob: -9.525871276855469
    7. '   ' → logprob: -12.525871276855469
    8. '(M' → logprob: -12.650871276855469
    9. ',
' → logprob: -13.025871276855469
    10. '],[' → logprob: -13.650871276855469

Token 568: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.002230428857728839
    2. ' mod' → logprob: -6.252230644226074
    3. '998' → logprob: -8.127230644226074
    4. '-' → logprob: -12.877230644226074
    5. '(mod' → logprob: -13.502230644226074
    6. ' ' → logprob: -13.752230644226074
    7. '	mod' → logprob: -14.127230644226074
    8. '   ' → logprob: -15.502230644226074
    9. '.mod' → logprob: -15.752230644226074
    10. ' modul' → logprob: -16.502229690551758

Token 569: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017994173686020076
    2. ' -' → logprob: -8.6251802444458
    3. '−' → logprob: -15.7501802444458
    4. '–' → logprob: -16.500179290771484
    5. '```' → logprob: -16.875179290771484
    6. '-
' → logprob: -17.250179290771484
    7. ')' → logprob: -18.125179290771484
    8. '()-' → logprob: -18.375179290771484
    9. '2' → logprob: -18.500179290771484
    10. '   ' → logprob: -18.500179290771484

Token 570: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -12.000008583068848
    3. '-' → logprob: -14.125008583068848
    4. '۲' → logprob: -15.000008583068848
    5. '
' → logprob: -15.250008583068848
    6. '```' → logprob: -15.312508583068848
    7. '' → logprob: -15.750008583068848
    8. '٢' → logprob: -15.750008583068848
    9. '   ' → logprob: -16.062509536743164
    10. '२' → logprob: -16.250009536743164

Token 571: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '
' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.1875057220459
    5. '```' → logprob: -16.3125057220459
    6. '۲' → logprob: -16.3750057220459
    7. '-' → logprob: -16.4375057220459
    8. '٢' → logprob: -17.3750057220459
    9. '  ' → logprob: -17.6875057220459
    10. '22' → logprob: -17.7500057220459

Token 572: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.664371848164592e-05
    2. ')
' → logprob: -11.125016212463379
    3. ' )' → logprob: -13.875016212463379
    4. '   ' → logprob: -14.250016212463379
    5. ')
' → logprob: -16.625017166137695
    6. ')

' → logprob: -17.125017166137695
    7. ')`' → logprob: -17.250017166137695
    8. ' ' → logprob: -18.375017166137695
    9. '),' → logprob: -18.500017166137695
    10. ' ' → logprob: -18.875017166137695

Token 573: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033337296918034554
    2. '
' → logprob: -6.503333568572998
    3. '    
' → logprob: -7.128333568572998
    4. ' for' → logprob: -7.253333568572998
    5. 'for' → logprob: -8.128334045410156
    6. '	for' → logprob: -11.378334045410156
    7. '  
' → logprob: -12.628334045410156
    8. '   
' → logprob: -13.003334045410156
    9. '	
' → logprob: -13.128334045410156
    10. '<|end|>' → logprob: -13.253334045410156

Token 574: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05298424884676933
    2. 'for' → logprob: -3.0529842376708984
    3. ' for' → logprob: -5.552984237670898
    4. '
' → logprob: -7.802984237670898
    5. '    
' → logprob: -9.677984237670898
    6. '	for' → logprob: -10.302984237670898
    7. '```' → logprob: -12.802984237670898
    8. ',' → logprob: -13.927984237670898
    9. '<|end|>' → logprob: -14.177984237670898
    10. '  
' → logprob: -14.552984237670898

Token 575: ' L' (ID: 451)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00040874676778912544
    2. '   ' → logprob: -8.125409126281738
    3. ' for' → logprob: -9.125409126281738
    4. '	for' → logprob: -13.750409126281738
    5. '
' → logprob: -14.125409126281738
    6. '    
' → logprob: -14.125409126281738
    7. 'For' → logprob: -15.125409126281738
    8. 'i' → logprob: -15.625409126281738
    9. 'inv' → logprob: -15.875409126281738
    10. '  ' → logprob: -16.000408172607422

Token 576: ''in' (ID: 17942)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.14275814592838287
    2. 'for' → logprob: -2.5177581310272217
    3. 'a' → logprob: -4.392758369445801
    4. 'e' → logprob: -4.517758369445801
    5. 'inverse' → logprob: -5.267758369445801
    6. '   ' → logprob: -5.642758369445801
    7. '[' → logprob: -5.767758369445801
    8. ' for' → logprob: -6.142758369445801
    9. ''in' → logprob: -6.142758369445801
    10. 'n' → logprob: -6.142758369445801

Token 577: 'verse' (ID: 7093)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16897904872894287
    2. 'verse' → logprob: -1.9189790487289429
    3. '[' → logprob: -5.918979167938232
    4. '   ' → logprob: -6.043979167938232
    5. '_fact' → logprob: -6.168979167938232
    6. ']' → logprob: -7.793979167938232
    7. 'fact' → logprob: -8.293978691101074
    8. 'vers' → logprob: -8.543978691101074
    9. '```' → logprob: -9.043978691101074
    10. '_' → logprob: -9.293978691101074

Token 578: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5374725461006165
    2. '<|end|>' → logprob: -2.0374724864959717
    3. ' modulo' → logprob: -2.2874724864959717
    4. ')' → logprob: -2.2874724864959717
    5. '[' → logprob: -4.037472724914551
    6. 'des' → logprob: -4.287472724914551
    7. '   ' → logprob: -4.537472724914551
    8. ' mod' → logprob: -4.912472724914551
    9. 'de' → logprob: -4.912472724914551
    10. ']' → logprob: -5.537472724914551

Token 579: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00011474833445390686
    2. ' fact' → logprob: -9.375114440917969
    3. 'factor' → logprob: -11.000114440917969
    4. '_fact' → logprob: -12.125114440917969
    5. '<|end|>' → logprob: -12.125114440917969
    6. '.fact' → logprob: -14.375114440917969
    7. 'fait' → logprob: -14.500114440917969
    8. 'Fact' → logprob: -14.750114440917969
    9. ')' → logprob: -15.875114440917969
    10. 'f' → logprob: -16.00011444091797

Token 580: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.00035798799945041537
    2. '[' → logprob: -8.125357627868652
    3. '   ' → logprob: -10.875357627868652
    4. '(M' → logprob: -11.500357627868652
    5. ' [' → logprob: -12.250357627868652
    6. '```' → logprob: -12.250357627868652
    7. ']' → logprob: -12.375357627868652
    8. ')' → logprob: -12.625357627868652
    9. 'M' → logprob: -12.750357627868652
    10. '[m' → logprob: -12.750357627868652

Token 581: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006201040814630687
    2. ' )' → logprob: -8.250619888305664
    3. ')
' → logprob: -8.375619888305664
    4. '   ' → logprob: -9.875619888305664
    5. '[' → logprob: -10.125619888305664
    6. ']' → logprob: -10.625619888305664
    7. '<|end|>' → logprob: -12.875619888305664
    8. ' ' → logprob: -13.000619888305664
    9. ' ' → logprob: -13.625619888305664
    10. ')

' → logprob: -13.750619888305664

Token 582: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024174263700842857
    2. '
' → logprob: -3.899174213409424
    3. '<|end|>' → logprob: -6.274174213409424
    4. '    
' → logprob: -6.649174213409424
    5. '  
' → logprob: -8.774174690246582
    6. ')' → logprob: -9.899174690246582
    7. '   
' → logprob: -10.024174690246582
    8. ' for' → logprob: -10.524174690246582
    9. ' 
' → logprob: -10.524174690246582
    10. '  ' → logprob: -10.899174690246582

Token 583: ' le' (ID: 505)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5928394794464111
    2. 'mod' → logprob: -0.8428394794464111
    3. 'l' → logprob: -4.967839241027832
    4. '998' → logprob: -5.842839241027832
    5. 'ex' → logprob: -6.217839241027832
    6. 'la' → logprob: -6.217839241027832
    7. ')' → logprob: -7.217839241027832
    8. 'le' → logprob: -7.592839241027832
    9. ' pow' → logprob: -8.717839241027832
    10. '<|end|>' → logprob: -8.717839241027832

Token 584: ' petit' (ID: 20577)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.011454503983259201
    2. 'pow' → logprob: -4.7614545822143555
    3. 'module' → logprob: -6.5114545822143555
    4. 'ex' → logprob: -8.011454582214355
    5. '998' → logprob: -8.511454582214355
    6. 'alg' → logprob: -8.761454582214355
    7. ')' → logprob: -9.011454582214355
    8. 'mode' → logprob: -9.511454582214355
    9. 'code' → logprob: -10.136454582214355
    10. 'method' → logprob: -10.386454582214355

Token 585: ' thé' (ID: 34740)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.10530746728181839
    2. '```' → logprob: -2.9803075790405273
    3. 'te' → logprob: -4.230307579040527
    4. 'the' → logprob: -4.355307579040527
    5. 'lemme' → logprob: -4.730307579040527
    6. 'pr' → logprob: -5.355307579040527
    7. ' thé' → logprob: -6.480307579040527
    8. 'prin' → logprob: -6.855307579040527
    9. 'lemma' → logprob: -7.605307579040527
    10. ' ' → logprob: -7.605307579040527

Token 586: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0077186631970107555
    2. 'ore' → logprob: -5.382718563079834
    3. 'orem' → logprob: -6.757718563079834
    4. '```' → logprob: -7.757718563079834
    5. 'ор' → logprob: -8.007719039916992
    6. 'orme' → logprob: -8.132719039916992
    7. 'orique' → logprob: -8.632719039916992
    8. 'o' → logprob: -8.882719039916992
    9. 'é' → logprob: -8.882719039916992
    10. 'orm' → logprob: -9.507719039916992

Token 587: 'ème' (ID: 9767)
  Prédit: 'ème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ème' → logprob: -0.3032630383968353
    2. 'me' → logprob: -1.8032630681991577
    3. 'or' → logprob: -2.678262948989868
    4. 'ère' → logprob: -4.678263187408447
    5. 'ême' → logprob: -5.178263187408447
    6. 'ore' → logprob: -5.303263187408447
    7. 'e' → logprob: -6.428263187408447
    8. 'r' → logprob: -6.678263187408447
    9. '```' → logprob: -6.803263187408447
    10. '#' → logprob: -7.553263187408447

Token 588: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9463946223258972
    2. ')' → logprob: -1.571394681930542
    3. '   ' → logprob: -2.071394681930542
    4. ' modulo' → logprob: -2.446394681930542
    5. 'de' → logprob: -2.821394681930542
    6. '(' → logprob: -3.696394681930542
    7. ' (' → logprob: -3.696394681930542
    8. '(mod' → logprob: -3.821394681930542
    9. ' de' → logprob: -3.821394681930542
    10. ',' → logprob: -4.946394443511963

Token 589: ' Ferm' (ID: 156422)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.040168147534132004
    2. ' Ferm' → logprob: -3.540168046951294
    3. 'ferm' → logprob: -5.415168285369873
    4. 'fer' → logprob: -6.540168285369873
    5. 'Euler' → logprob: -7.415168285369873
    6. 'f' → logprob: -7.415168285369873
    7. 'Fer' → logprob: -7.790168285369873
    8. '```' → logprob: -8.165167808532715
    9. '#' → logprob: -8.415167808532715
    10. 'Little' → logprob: -8.415167808532715

Token 590: 'at' (ID: 266)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.07136000692844391
    2. 'man' → logprob: -3.6963601112365723
    3. 'ain' → logprob: -3.8213601112365723
    4. 'me' → logprob: -5.321360111236572
    5. 'm' → logprob: -5.571360111236572
    6. 'pé' → logprob: -6.196360111236572
    7. 'od' → logprob: -6.946360111236572
    8. 'mage' → logprob: -7.071360111236572
    9. 'pl' → logprob: -7.196360111236572
    10. 'a' → logprob: -7.446360111236572

Token 591: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01170265395194292
    2. 'for' → logprob: -5.136702537536621
    3. '
' → logprob: -5.261702537536621
    4. ' for' → logprob: -7.636702537536621
    5. '    
' → logprob: -9.511702537536621
    6. '	for' → logprob: -12.386702537536621
    7. ')' → logprob: -13.011702537536621
    8. '<|end|>' → logprob: -13.261702537536621
    9. '```' → logprob: -13.386702537536621
    10. '  
' → logprob: -13.636702537536621

Token 592: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018008425831794739
    2. 'for' → logprob: -6.501801013946533
    3. ' for' → logprob: -8.126800537109375
    4. '	for' → logprob: -13.501800537109375
    5. '    
' → logprob: -13.626800537109375
    6. '
' → logprob: -14.751800537109375
    7. ',' → logprob: -16.001800537109375
    8. '       ' → logprob: -16.876800537109375
    9. '```' → logprob: -17.001800537109375
    10. '<|end|>' → logprob: -17.251800537109375

Token 593: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.280175097752362e-05
    2. '   ' → logprob: -9.500082969665527
    3. ' for' → logprob: -11.750082969665527
    4. '	for' → logprob: -17.12508201599121
    5. '
' → logprob: -18.75008201599121
    6. 'i' → logprob: -19.25008201599121
    7. '    
' → logprob: -20.00008201599121
    8. '```' → logprob: -20.37508201599121
    9. '_for' → logprob: -23.12508201599121
    10. 'For' → logprob: -23.12508201599121

Token 594: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020839422941208
    2. ' i' → logprob: -2.350208282470703
    3. '	i' → logprob: -13.975208282470703
    4. '   ' → logprob: -14.100208282470703
    5. ' ' → logprob: -15.850208282470703
    6. '    ' → logprob: -19.100208282470703
    7. 'j' → logprob: -19.475208282470703
    8. '  ' → logprob: -19.850208282470703
    9. ' ' → logprob: -20.225208282470703
    10. 'x' → logprob: -20.600208282470703

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009760101325809956
    2. 'in' → logprob: -4.634759902954102
    3. '	in' → logprob: -13.884759902954102
    4. '   ' → logprob: -14.259759902954102
    5. 'M' → logprob: -14.384759902954102
    6. ' ' → logprob: -14.759759902954102
    7. ' i' → logprob: -14.884759902954102
    8. 'i' → logprob: -15.259759902954102
    9. 's' → logprob: -15.509759902954102
    10. 'In' → logprob: -15.634759902954102

Token 596: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806525096297264
    2. ' range' → logprob: -3.288065195083618
    3. 're' → logprob: -11.163064956665039
    4. ' reversed' → logprob: -11.663064956665039
    5. '	range' → logprob: -15.038064956665039
    6. '   ' → logprob: -15.288064956665039
    7. ' ' → logprob: -15.538064956665039
    8. 'reverse' → logprob: -15.788064956665039
    9. '(range' → logprob: -16.78806495666504
    10. '  ' → logprob: -17.28806495666504

Token 597: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.38688141107559204
    2. 'range' → logprob: -1.1368813514709473
    3. ' range' → logprob: -11.511881828308105
    4. '(' → logprob: -15.261881828308105
    5. '	range' → logprob: -16.01188087463379
    6. '   ' → logprob: -16.76188087463379
    7. 'rang' → logprob: -19.63688087463379
    8. 'rage' → logprob: -20.26188087463379
    9. '
' → logprob: -20.38688087463379
    10. '  ' → logprob: -20.63688087463379

Token 598: '(' (ID: 7)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0019293478690087795
    2. '(' → logprob: -6.25192928314209
    3. '1' → logprob: -15.12692928314209
    4. 'M' → logprob: -15.50192928314209
    5. ' (' → logprob: -15.62692928314209
    6. '((' → logprob: -16.626930236816406
    7. '(
' → logprob: -17.251930236816406
    8. '(m' → logprob: -17.876930236816406
    9. '[M' → logprob: -19.001930236816406
    10. '   ' → logprob: -19.251930236816406

Token 599: '0' (ID: 15)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.874882430769503e-05
    2. '(M' → logprob: -9.500079154968262
    3. '1' → logprob: -12.750079154968262
    4. ' M' → logprob: -14.000079154968262
    5. '0' → logprob: -16.125078201293945
    6. ',M' → logprob: -17.125078201293945
    7. '[M' → logprob: -17.125078201293945
    8. '(' → logprob: -17.875078201293945
    9. '<M' → logprob: -18.625078201293945
    10. '	M' → logprob: -18.750078201293945

Token 600: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067955441772937775
    2. 'M' → logprob: -5.756795406341553
    3. ',M' → logprob: -5.881795406341553
    4. '(M' → logprob: -7.506795406341553
    5. '   ' → logprob: -8.381795883178711
    6. ' ,' → logprob: -10.381795883178711
    7. '(' → logprob: -12.006795883178711
    8. '1' → logprob: -13.256795883178711
    9. ' M' → logprob: -13.756795883178711
    10. ',
' → logprob: -13.756795883178711

Token 601: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -5.512236498361744e-07
    2. ' M' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.125
    4. '(M' → logprob: -20.0
    5. '	M' → logprob: -21.0
    6. '
' → logprob: -21.0
    7. '<M' → logprob: -21.125
    8. ',M' → logprob: -22.875
    9. '[M' → logprob: -23.375
    10. ' ' → logprob: -23.625

Token 602: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.626905083656311
    2. '):
' → logprob: -1.501905083656311
    3. ')):
' → logprob: -2.1269049644470215
    4. '   ' → logprob: -3.1269049644470215
    5. ')):' → logprob: -4.0019049644470215
    6. '):' → logprob: -4.1269049644470215
    7. '+' → logprob: -4.7519049644470215
    8. '))' → logprob: -4.7519049644470215
    9. ')}' → logprob: -5.1269049644470215
    10. ',' → logprob: -5.1269049644470215

Token 603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005042217671871185
    2. '   ' → logprob: -5.88004207611084
    3. ' inv' → logprob: -6.75504207611084
    4. 'inv' → logprob: -6.88004207611084
    5. '(inv' → logprob: -11.25504207611084
    6. '	   ' → logprob: -11.75504207611084
    7. '_inv' → logprob: -12.13004207611084
    8. '    ' → logprob: -12.75504207611084
    9. '```' → logprob: -13.13004207611084
    10. '      ' → logprob: -13.38004207611084

Token 604: ' #' (ID: 1069)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.002268254989758134
    2. '   ' → logprob: -6.502268314361572
    3. '       ' → logprob: -7.752268314361572
    4. ' inv' → logprob: -8.002267837524414
    5. '           ' → logprob: -15.002267837524414
    6. 'in' → logprob: -15.127267837524414
    7. '(inv' → logprob: -15.252267837524414
    8. '  ' → logprob: -16.377267837524414
    9. ' ' → logprob: -16.377267837524414
    10. '_inv' → logprob: -16.502267837524414

Token 605: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00016313401283696294
    2. ' inv' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.375163078308105
    4. '       ' → logprob: -15.625163078308105
    5. '(inv' → logprob: -16.875164031982422
    6. '_inv' → logprob: -17.375164031982422
    7. 'inverse' → logprob: -17.750164031982422
    8. '.inv' → logprob: -17.750164031982422
    9. 'in' → logprob: -17.875164031982422
    10. '  ' → logprob: -18.500164031982422

Token 606: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -9.849109119386412e-06
    2. 'fact' → logprob: -11.875009536743164
    3. '_fac' → logprob: -13.250009536743164
    4. '_inv' → logprob: -14.000009536743164
    5. '_f' → logprob: -16.375009536743164
    6. '_' → logprob: -16.750009536743164
    7. '_FACT' → logprob: -17.375009536743164
    8. 'Fact' → logprob: -17.750009536743164
    9. '[i' → logprob: -18.750009536743164
    10. ' fact' → logprob: -18.875009536743164

Token 607: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -13.000007629394531
    3. '
' → logprob: -13.750007629394531
    4. 'fact' → logprob: -13.750007629394531
    5. 's' → logprob: -14.625007629394531
    6. 'i' → logprob: -14.625007629394531
    7. '_fact' → logprob: -14.750007629394531
    8. 'Fact' → logprob: -14.875007629394531
    9. '[
' → logprob: -15.000007629394531
    10. ' [' → logprob: -15.000007629394531

Token 608: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010740406811237335
    2. '=' → logprob: -5.635740280151367
    3. ' =' → logprob: -6.010740280151367
    4. '[i' → logprob: -6.010740280151367
    5. ']=' → logprob: -6.510740280151367
    6. ' ]' → logprob: -8.135740280151367
    7. '+' → logprob: -8.510740280151367
    8. '   ' → logprob: -9.385740280151367
    9. '
' → logprob: -10.010740280151367
    10. 's' → logprob: -10.385740280151367

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06210683286190033
    2. ' =' → logprob: -2.8121068477630615
    3. '=
' → logprob: -10.18710708618164
    4. '=i' → logprob: -10.18710708618164
    5. '[i' → logprob: -11.06210708618164
    6. '   ' → logprob: -11.06210708618164
    7. ']' → logprob: -11.43710708618164
    8. ']=' → logprob: -11.68710708618164
    9. '[' → logprob: -13.18710708618164
    10. 's' → logprob: -13.18710708618164

Token 610: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.020693931728601456
    2. '(inv' → logprob: -3.8956940174102783
    3. ' inv' → logprob: -8.8956937789917
    4. ' (' → logprob: -11.8956937789917
    5. '(in' → logprob: -12.7706937789917
    6. '(' → logprob: -12.7706937789917
    7. '   ' → logprob: -13.5206937789917
    8. '_inv' → logprob: -15.0206937789917
    9. '.inv' → logprob: -15.2706937789917
    10. 'in' → logprob: -15.7706937789917

Token 611: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -7.588793960167095e-05
    2. '_fac' → logprob: -10.000076293945312
    3. '_' → logprob: -11.000076293945312
    4. '_f' → logprob: -12.375076293945312
    5. 'fact' → logprob: -12.500076293945312
    6. '[i' → logprob: -12.750076293945312
    7. '_FACT' → logprob: -14.375076293945312
    8. '_[' → logprob: -14.875076293945312
    9. '   ' → logprob: -15.500076293945312
    10. ' _' → logprob: -15.500076293945312

Token 612: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.750006675720215
    3. 'i' → logprob: -12.875006675720215
    4. '[
' → logprob: -15.125006675720215
    5. '(i' → logprob: -15.750006675720215
    6. 's' → logprob: -15.875006675720215
    7. ' [' → logprob: -16.12500762939453
    8. '```' → logprob: -16.25000762939453
    9. '[I' → logprob: -16.37500762939453
    10. '
' → logprob: -16.62500762939453

Token 613: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05499545484781265
    2. '+' → logprob: -3.429995536804199
    3. '[' → logprob: -4.429995536804199
    4. ']' → logprob: -4.929995536804199
    5. ' +' → logprob: -7.179995536804199
    6. 'i' → logprob: -7.929995536804199
    7. ' i' → logprob: -8.8049955368042
    8. '   ' → logprob: -9.0549955368042
    9. '[
' → logprob: -9.3049955368042
    10. '(i' → logprob: -9.3049955368042

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020520923135336488
    2. ' ' → logprob: -9.250205039978027
    3. ']' → logprob: -9.375205039978027
    4. '```' → logprob: -11.500205039978027
    5. 'i' → logprob: -11.625205039978027
    6. '   ' → logprob: -12.750205039978027
    7. '`' → logprob: -13.750205039978027
    8. '
' → logprob: -14.875205039978027
    9. '  ' → logprob: -15.375205039978027
    10. ' i' → logprob: -15.750205039978027

Token 615: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038360210601240396
    2. '   ' → logprob: -8.750383377075195
    3. ']*' → logprob: -8.750383377075195
    4. '*' → logprob: -11.250383377075195
    5. ']*(' → logprob: -11.375383377075195
    6. '[i' → logprob: -11.750383377075195
    7. '       ' → logprob: -12.375383377075195
    8. ')' → logprob: -12.500383377075195
    9. ' ]' → logprob: -12.500383377075195
    10. '    ' → logprob: -12.625383377075195

Token 616: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5765271186828613
    2. '*' → logprob: -0.9515271186828613
    3. '[i' → logprob: -3.0765271186828613
    4. ']' → logprob: -6.326527118682861
    5. '   ' → logprob: -6.951527118682861
    6. '*i' → logprob: -7.076527118682861
    7. '[' → logprob: -7.201527118682861
    8. '=' → logprob: -8.076526641845703
    9. 'fact' → logprob: -8.201526641845703
    10. ')' → logprob: -8.201526641845703

Token 617: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.453737710718997e-05
    2. ' (' → logprob: -10.250044822692871
    3. '(' → logprob: -12.125044822692871
    4. '[i' → logprob: -13.125044822692871
    5. 'i' → logprob: -14.000044822692871
    6. '((' → logprob: -15.000044822692871
    7. '   ' → logprob: -15.125044822692871
    8. '{i' → logprob: -15.625044822692871
    9. '
' → logprob: -17.125043869018555
    10. '(
' → logprob: -17.625043869018555

Token 618: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0076858894899487495
    2. '(i' → logprob: -4.882685661315918
    3. ' i' → logprob: -10.007685661315918
    4. '   ' → logprob: -11.132685661315918
    5. '[i' → logprob: -11.882685661315918
    6. ' (' → logprob: -11.882685661315918
    7. '{i' → logprob: -12.632685661315918
    8. '(' → logprob: -13.382685661315918
    9. '	i' → logprob: -14.382685661315918
    10. ')i' → logprob: -16.132686614990234

Token 619: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012345058843493462
    2. ' +' → logprob: -4.512344837188721
    3. '1' → logprob: -6.887344837188721
    4. '+i' → logprob: -8.762345314025879
    5. 'i' → logprob: -10.012345314025879
    6. '+
' → logprob: -10.762345314025879
    7. ' ' → logprob: -11.012345314025879
    8. ' i' → logprob: -11.512345314025879
    9. '[i' → logprob: -11.637345314025879
    10. '   ' → logprob: -12.387345314025879

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.644463479053229e-05
    2. '+' → logprob: -10.375046730041504
    3. ' ' → logprob: -11.125046730041504
    4. '   ' → logprob: -15.625046730041504
    5. '```' → logprob: -16.375045776367188
    6. '  ' → logprob: -16.625045776367188
    7. '
' → logprob: -17.000045776367188
    8. ' +' → logprob: -17.875045776367188
    9. 'i' → logprob: -18.125045776367188
    10. '    ' → logprob: -18.312545776367188

Token 621: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007162876892834902
    2. ')%' → logprob: -5.632163047790527
    3. ' )' → logprob: -6.132163047790527
    4. '[i' → logprob: -7.507163047790527
    5. ' %' → logprob: -7.632163047790527
    6. '%' → logprob: -8.382163047790527
    7. '%i' → logprob: -10.132163047790527
    8. ']' → logprob: -10.257163047790527
    9. '   ' → logprob: -12.007163047790527
    10. ')
' → logprob: -12.132163047790527

Token 622: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.021083638072013855
    2. '%' → logprob: -3.8960835933685303
    3. ')' → logprob: -7.771083831787109
    4. ' ' → logprob: -10.77108383178711
    5. ')%' → logprob: -10.89608383178711
    6. '[' → logprob: -11.14608383178711
    7. '   ' → logprob: -11.27108383178711
    8. ']' → logprob: -11.27108383178711
    9. ' %=' → logprob: -11.89608383178711
    10. '[i' → logprob: -12.14608383178711

Token 623: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.023259222507476807
    2. ' mod' → logprob: -3.773259162902832
    3. '(mod' → logprob: -11.523259162902832
    4. 'fact' → logprob: -13.023259162902832
    5. ' i' → logprob: -14.898259162902832
    6. ' ' → logprob: -14.898259162902832
    7. 'i' → logprob: -15.148259162902832
    8. ' fact' → logprob: -15.148259162902832
    9. '	mod' → logprob: -15.773259162902832
    10. '_mod' → logprob: -16.77326011657715

Token 624: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6890527009963989
    2. '       ' → logprob: -0.8140527009963989
    3. '<|end|>' → logprob: -3.5640525817871094
    4. ')' → logprob: -3.9390525817871094
    5. 'fact' → logprob: -6.189052581787109
    6. ' fact' → logprob: -7.314052581787109
    7. '
' → logprob: -7.439052581787109
    8. ':' → logprob: -7.689052581787109
    9. ']' → logprob: -8.06405258178711
    10. '  ' → logprob: -8.06405258178711

Token 625: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2239837795495987
    2. ' i' → logprob: -1.9739837646484375
    3. '<|end|>' → logprob: -3.7239837646484375
    4. 'i' → logprob: -4.0989837646484375
    5. ' ' → logprob: -5.2239837646484375
    6. '   ' → logprob: -5.4739837646484375
    7. ')' → logprob: -5.7239837646484375
    8. ' 
' → logprob: -5.8489837646484375
    9. '[i' → logprob: -6.3489837646484375
    10. '	i' → logprob: -7.2239837646484375

Token 626: ''où' (ID: 186468)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41456079483032227
    2. ')' → logprob: -1.5395607948303223
    3. 'i' → logprob: -2.9145607948303223
    4. '<|end|>' → logprob: -3.6645607948303223
    5. ']' → logprob: -3.9145607948303223
    6. '   ' → logprob: -5.039560794830322
    7. ' ' → logprob: -6.039560794830322
    8. '```' → logprob: -6.164560794830322
    9. '<|end|>' → logprob: -6.414560794830322
    10. 'space' → logprob: -6.539560794830322

Token 627: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.43939632177352905
    2. ' inv' → logprob: -1.4393963813781738
    3. '       ' → logprob: -3.314396381378174
    4. ' i' → logprob: -3.439396381378174
    5. '   ' → logprob: -3.564396381378174
    6. 'i' → logprob: -4.189396381378174
    7. ')' → logprob: -6.439396381378174
    8. ' fact' → logprob: -7.064396381378174
    9. 'fact' → logprob: -7.064396381378174
    10. '    ' → logprob: -7.314396381378174

Token 628: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -0.00016802136087790132
    2. '_fac' → logprob: -9.500167846679688
    3. 'fact' → logprob: -10.000167846679688
    4. '_f' → logprob: -10.875167846679688
    5. '_' → logprob: -11.250167846679688
    6. '   ' → logprob: -12.500167846679688
    7. '_FACT' → logprob: -12.625167846679688
    8. 'Fact' → logprob: -12.875167846679688
    9. '[i' → logprob: -12.875167846679688
    10. '_factor' → logprob: -14.750167846679688

Token 629: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005800772923976183
    2. '[' → logprob: -7.750580310821533
    3. ' =' → logprob: -10.250579833984375
    4. '=' → logprob: -10.625579833984375
    5. '   ' → logprob: -11.250579833984375
    6. 's' → logprob: -11.500579833984375
    7. '=i' → logprob: -11.500579833984375
    8. '\[' → logprob: -11.750579833984375
    9. ' [' → logprob: -11.875579833984375
    10. '=[' → logprob: -12.125579833984375

Token 630: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006537011358886957
    2. ']' → logprob: -8.375653266906738
    3. ' i' → logprob: -8.375653266906738
    4. '(i' → logprob: -9.875653266906738
    5. '[i' → logprob: -10.500653266906738
    6. '   ' → logprob: -10.500653266906738
    7. '```' → logprob: -10.500653266906738
    8. '<|end|>' → logprob: -11.000653266906738
    9. ' ' → logprob: -11.500653266906738
    10. '`' → logprob: -11.625653266906738

Token 631: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006842299364507198
    2. ']=' → logprob: -5.256842136383057
    3. ')' → logprob: -7.256842136383057
    4. '[i' → logprob: -7.506842136383057
    5. '=' → logprob: -8.756842613220215
    6. ' ]' → logprob: -9.881842613220215
    7. '   ' → logprob: -10.006842613220215
    8. ' =' → logprob: -10.756842613220215
    9. ']
' → logprob: -11.381842613220215
    10. '[' → logprob: -11.506842613220215

Token 632: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02990136854350567
    2. ' =' → logprob: -3.5299012660980225
    3. '   ' → logprob: -9.279901504516602
    4. ']' → logprob: -10.654901504516602
    5. ')' → logprob: -11.779901504516602
    6. '=
' → logprob: -12.529901504516602
    7. ']=' → logprob: -12.654901504516602
    8. ':' → logprob: -12.654901504516602
    9. '[i' → logprob: -12.904901504516602
    10. '=i' → logprob: -13.029901504516602

Token 633: ' ' (ID: 220)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.5483444333076477
    2. '1' → logprob: -1.298344373703003
    3. ' inv' → logprob: -2.048344373703003
    4. ' ' → logprob: -4.798344612121582
    5. 'fact' → logprob: -5.673344612121582
    6. '(inv' → logprob: -5.798344612121582
    7. ' (' → logprob: -6.048344612121582
    8. '(' → logprob: -6.923344612121582
    9. ' fact' → logprob: -7.298344612121582
    10. 'pow' → logprob: -7.923344612121582

Token 634: '1' (ID: 16)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.009164824150502682
    2. '1' → logprob: -5.009164810180664
    3. '(inv' → logprob: -7.259164810180664
    4. ' inv' → logprob: -7.384164810180664
    5. 'fact' → logprob: -8.009164810180664
    6. 'mod' → logprob: -8.134164810180664
    7. '(' → logprob: -8.509164810180664
    8. 'pow' → logprob: -8.634164810180664
    9. '0' → logprob: -10.509164810180664
    10. '(mod' → logprob: -11.009164810180664

Token 635: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46876800060272217
    2. '   ' → logprob: -1.0937680006027222
    3. ':' → logprob: -3.4687681198120117
    4. ':
' → logprob: -5.843768119812012
    5. '=' → logprob: -6.843768119812012
    6. '
' → logprob: -6.968768119812012
    7. '<|end|>' → logprob: -7.218768119812012
    8. ')' → logprob: -8.218768119812012
    9. '           ' → logprob: -8.343768119812012
    10. ' ' → logprob: -8.343768119812012

Token 636: ' la' (ID: 557)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.0673518180847168
    2. ' la' → logprob: -2.067351818084717
    3. 'la' → logprob: -2.192351818084717
    4. 'fin' → logprob: -2.567351818084717
    5. 'termin' → logprob: -2.817351818084717
    6. 'faire' → logprob: -2.942351818084717
    7. ' terminer' → logprob: -3.067351818084717
    8. 'final' → logprob: -3.192351818084717
    9. 'i' → logprob: -3.817351818084717
    10. 'calcul' → logprob: -4.442351818084717

Token 637: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.4897772967815399
    2. '=' → logprob: -1.6147773265838623
    3. 'i' → logprob: -2.9897773265838623
    4. 'fact' → logprob: -3.4897773265838623
    5. '#' → logprob: -4.114777088165283
    6. 'finish' → logprob: -4.239777088165283
    7. '0' → logprob: -4.739777088165283
    8. '1' → logprob: -4.739777088165283
    9. ')' → logprob: -4.739777088165283
    10. '-' → logprob: -4.989777088165283

Token 638: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.642932653427124
    2. '   ' → logprob: -0.767932653427124
    3. ':' → logprob: -5.392932891845703
    4. '
' → logprob: -6.392932891845703
    5. ':
' → logprob: -7.017932891845703
    6. '<|end|>' → logprob: -7.642932891845703
    7. '[i' → logprob: -7.892932891845703
    8. '```' → logprob: -8.267932891845703
    9. ')' → logprob: -8.392932891845703
    10. '):
' → logprob: -8.517932891845703

Token 639: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10825937241315842
    2. '       ' → logprob: -2.358259439468384
    3. 'inv' → logprob: -5.608259201049805
    4. '```' → logprob: -5.983259201049805
    5. ':' → logprob: -6.858259201049805
    6. '(inv' → logprob: -9.233259201049805
    7. '  ' → logprob: -9.233259201049805
    8. ' inv' → logprob: -9.733259201049805
    9. '    ' → logprob: -9.733259201049805
    10. '           ' → logprob: -9.983259201049805

Token 640: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.17450840771198273
    2. '   ' → logprob: -2.4245083332061768
    3. '       ' → logprob: -2.7995083332061768
    4. ' inv' → logprob: -4.549508571624756
    5. 'i' → logprob: -9.549508094787598
    6. 'in' → logprob: -10.674508094787598
    7. '```' → logprob: -10.924508094787598
    8. '(inv' → logprob: -11.549508094787598
    9. ' i' → logprob: -11.674508094787598
    10. '           ' → logprob: -11.799508094787598

Token 641: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -1.3544423381972592e-05
    2. '_fac' → logprob: -11.75001335144043
    3. '_' → logprob: -12.87501335144043
    4. '_f' → logprob: -13.12501335144043
    5. '_FACT' → logprob: -15.12501335144043
    6. '_factor' → logprob: -15.37501335144043
    7. ' _' → logprob: -16.25001335144043
    8. '\' → logprob: -17.00001335144043
    9. 'fact' → logprob: -17.25001335144043
    10. '```' → logprob: -17.37501335144043

Token 642: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002187972189858556
    2. '[' → logprob: -6.127188205718994
    3. ' [' → logprob: -13.377187728881836
    4. '[I' → logprob: -15.502187728881836
    5. '[
' → logprob: -15.627187728881836
    6. '=' → logprob: -15.752187728881836
    7. '[...]' → logprob: -15.752187728881836
    8. '   ' → logprob: -16.002187728881836
    9. ' =' → logprob: -16.377187728881836
    10. '[in' → logprob: -16.752187728881836

Token 643: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009113446809351444
    2. '=' → logprob: -5.259113311767578
    3. ' ]' → logprob: -6.259113311767578
    4. ' =' → logprob: -6.759113311767578
    5. ']=' → logprob: -7.134113311767578
    6. ' ' → logprob: -14.259113311767578
    7. '[' → logprob: -15.759113311767578
    8. ',' → logprob: -15.759113311767578
    9. ')' → logprob: -15.884113311767578
    10. ']
' → logprob: -16.134113311767578

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015024791937321424
    2. ' =' → logprob: -6.501502513885498
    3. '=

' → logprob: -16.376502990722656
    4. '=
' → logprob: -16.501502990722656
    5. '＝' → logprob: -18.751502990722656
    6. ',' → logprob: -20.501502990722656
    7. ')=' → logprob: -20.751502990722656
    8. '   ' → logprob: -20.876502990722656
    9. ']=' → logprob: -21.001502990722656
    10. '=int' → logprob: -21.126502990722656

Token 645: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0009997017914429307
    2. '(inv' → logprob: -7.000999927520752
    3. ' inv' → logprob: -9.375999450683594
    4. '(in' → logprob: -13.875999450683594
    5. ' (' → logprob: -14.125999450683594
    6. 'in' → logprob: -14.125999450683594
    7. '   ' → logprob: -14.625999450683594
    8. 'inf' → logprob: -15.875999450683594
    9. '(' → logprob: -16.250999450683594
    10. '_inv' → logprob: -16.375999450683594

Token 646: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -7.226628895296017e-06
    2. '_fac' → logprob: -12.375007629394531
    3. '_' → logprob: -13.625007629394531
    4. 'fact' → logprob: -13.875007629394531
    5. '_f' → logprob: -15.000007629394531
    6. '_FACT' → logprob: -15.250007629394531
    7. '_factor' → logprob: -15.625007629394531
    8. ' _' → logprob: -17.75000762939453
    9. 'Fact' → logprob: -18.00000762939453
    10. '[' → logprob: -19.12500762939453

Token 647: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.75000286102295
    3. '[
' → logprob: -16.625003814697266
    4. 'i' → logprob: -16.875003814697266
    5. ' [' → logprob: -18.750003814697266
    6. '[I' → logprob: -19.250003814697266
    7. '(i' → logprob: -20.500003814697266
    8. 's' → logprob: -21.000003814697266
    9. '```' → logprob: -21.125003814697266
    10. '
' → logprob: -21.250003814697266

Token 648: ' +' (ID: 659)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.032964371144771576
    2. '[' → logprob: -3.9079644680023193
    3. '+' → logprob: -4.40796422958374
    4. 'i' → logprob: -9.907964706420898
    5. '[
' → logprob: -10.157964706420898
    6. ' +' → logprob: -10.532964706420898
    7. ' [' → logprob: -11.407964706420898
    8. '   ' → logprob: -11.657964706420898
    9. '+i' → logprob: -11.657964706420898
    10. '1' → logprob: -11.907964706420898

Token 649: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.00000762939453
    4. '```' → logprob: -16.12500762939453
    5. '0' → logprob: -16.87500762939453
    6. '
' → logprob: -17.12500762939453
    7. '  ' → logprob: -17.25000762939453
    8. '<|end|>' → logprob: -17.87500762939453
    9. ']' → logprob: -18.87500762939453
    10. '	' → logprob: -19.68750762939453

Token 650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -15.875000953674316
    4. '```' → logprob: -17.750001907348633
    5. ']' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -18.875001907348633
    8. '0' → logprob: -19.437501907348633
    9. '  ' → logprob: -19.625001907348633
    10. '

' → logprob: -19.687501907348633

Token 651: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17981752753257751
    2. '*' → logprob: -1.8048175573349
    3. '*(' → logprob: -10.179817199707031
    4. '   ' → logprob: -11.054817199707031
    5. ' ' → logprob: -11.929817199707031
    6. '*i' → logprob: -12.554817199707031
    7. ')' → logprob: -12.554817199707031
    8. ']' → logprob: -13.929817199707031
    9. '	' → logprob: -14.179817199707031
    10. ' ' → logprob: -14.429817199707031

Token 652: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06199580803513527
    2. '*' → logprob: -2.8119957447052
    3. '*(' → logprob: -10.686995506286621
    4. '*object' → logprob: -13.811995506286621
    5. '<|end|>' → logprob: -13.936995506286621
    6. '*i' → logprob: -14.186995506286621
    7. ' ' → logprob: -14.436995506286621
    8. ' ' → logprob: -14.936995506286621
    9. '   ' → logprob: -14.936995506286621
    10. '**' → logprob: -15.186995506286621

Token 653: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029766106978058815
    2. ' (' → logprob: -3.529766082763672
    3. '(' → logprob: -11.279766082763672
    4. '(ii' → logprob: -13.529766082763672
    5. '(I' → logprob: -13.904766082763672
    6. '   ' → logprob: -15.654766082763672
    7. ' ' → logprob: -15.904766082763672
    8. '[i' → logprob: -16.279766082763672
    9. '((' → logprob: -16.779766082763672
    10. '(in' → logprob: -17.029766082763672

Token 654: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0625278577208519
    2. 'i' → logprob: -2.812527894973755
    3. ' (' → logprob: -8.062527656555176
    4. '(' → logprob: -8.937527656555176
    5. ' i' → logprob: -9.562527656555176
    6. '[i' → logprob: -10.687527656555176
    7. '   ' → logprob: -11.312527656555176
    8. '{i' → logprob: -12.062527656555176
    9. '	i' → logprob: -14.187527656555176
    10. '(
' → logprob: -14.312527656555176

Token 655: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014164221473038197
    2. ' +' → logprob: -4.264164447784424
    3. '+
' → logprob: -14.639163970947266
    4. '1' → logprob: -16.389163970947266
    5. '[' → logprob: -16.889163970947266
    6. ' +
' → logprob: -17.264163970947266
    7. ' plus' → logprob: -17.639163970947266
    8. '＋' → logprob: -17.639163970947266
    9. ' ' → logprob: -17.764163970947266
    10. '+i' → logprob: -18.014163970947266

Token 656: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -16.25001335144043
    4. '   ' → logprob: -18.12501335144043
    5. '  ' → logprob: -18.87501335144043
    6. '```' → logprob: -19.00001335144043
    7. '

' → logprob: -19.31251335144043
    8. '+' → logprob: -19.37501335144043
    9. '۱' → logprob: -19.62501335144043
    10. '2' → logprob: -19.62501335144043

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -16.250001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '  ' → logprob: -21.375001907348633
    6. '```' → logprob: -21.500001907348633
    7. '
' → logprob: -21.625001907348633
    8. '۱' → logprob: -22.375001907348633
    9. '2' → logprob: -22.500001907348633
    10. '{' → logprob: -22.750001907348633

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012284684635233134
    2. ' )' → logprob: -9.750123023986816
    3. ')%' → logprob: -9.750123023986816
    4. '%' → logprob: -12.750123023986816
    5. ' %' → logprob: -13.125123023986816
    6. ')
' → logprob: -14.375123023986816
    7. '   ' → logprob: -14.500123023986816
    8. '```' → logprob: -16.6251220703125
    9. ']' → logprob: -17.2501220703125
    10. '`)' → logprob: -17.8751220703125

Token 659: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.038042180240154266
    2. '%' → logprob: -3.2880420684814453
    3. ')' → logprob: -14.663042068481445
    4. ' ' → logprob: -16.663042068481445
    5. ' %=' → logprob: -17.163042068481445
    6. ')%' → logprob: -17.163042068481445
    7. '	' → logprob: -17.788042068481445
    8. '
' → logprob: -17.913042068481445
    9. ' ' → logprob: -17.913042068481445
    10. '%c' → logprob: -18.413042068481445

Token 660: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0019286326132714748
    2. ' mod' → logprob: -6.251928806304932
    3. '	mod' → logprob: -18.126928329467773
    4. '(mod' → logprob: -18.251928329467773
    5. ' ' → logprob: -19.251928329467773
    6. 'moder' → logprob: -20.501928329467773
    7. '_mod' → logprob: -20.876928329467773
    8. '```' → logprob: -20.876928329467773
    9. ' мод' → logprob: -21.001928329467773
    10. ' ' → logprob: -21.001928329467773

Token 661: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0364837720990181
    2. '
' → logprob: -4.1614837646484375
    3. 'return' → logprob: -4.5364837646484375
    4. '<|end|>' → logprob: -5.4114837646484375
    5. '    
' → logprob: -5.5364837646484375
    6. '```' → logprob: -7.5364837646484375
    7. ' return' → logprob: -8.536483764648438
    8. '  
' → logprob: -9.161483764648438
    9. '

' → logprob: -10.161483764648438
    10. '   
' → logprob: -10.411483764648438

Token 662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012203442165628076
    2. 'result' → logprob: -7.876220226287842
    3. '    
' → logprob: -7.876220226287842
    4. '
' → logprob: -8.751220703125
    5. '<|end|>' → logprob: -8.751220703125
    6. '```' → logprob: -9.876220703125
    7. 'return' → logprob: -10.751220703125
    8. ')' → logprob: -10.751220703125
    9. 'def' → logprob: -11.376220703125
    10. 'for' → logprob: -11.626220703125

Token 663: ' def' (ID: 1056)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6292440891265869
    2. '   ' → logprob: -1.379244089126587
    3. 'res' → logprob: -2.004244089126587
    4. 'comb' → logprob: -3.004244089126587
    5. 'def' (adapté à ' def') → logprob: -3.629244089126587
    6. 'inv' → logprob: -6.504243850708008
    7. 'ans' → logprob: -6.754243850708008
    8. 'answer' → logprob: -7.129243850708008
    9. 'C' → logprob: -7.629243850708008
    10. '    
' → logprob: -9.379243850708008

Token 664: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.08003564178943634
    2. ' comb' → logprob: -2.83003568649292
    3. 'C' → logprob: -4.83003568649292
    4. 'choose' → logprob: -5.95503568649292
    5. 'combine' → logprob: -6.08003568649292
    6. ' C' → logprob: -6.70503568649292
    7. 'bin' → logprob: -6.95503568649292
    8. 'n' → logprob: -7.20503568649292
    9. 'cmb' → logprob: -7.45503568649292
    10. 'combo' → logprob: -7.45503568649292

Token 665: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09469062089920044
    2. '(i' → logprob: -2.5946905612945557
    3. '(' → logprob: -4.344690799713135
    4. ' (' → logprob: -5.969690799713135
    5. 'ination' → logprob: -10.219690322875977
    6. '(k' → logprob: -10.844690322875977
    7. '(x' → logprob: -10.844690322875977
    8. '(
' → logprob: -11.469690322875977
    9. '(N' → logprob: -11.844690322875977
    10. '(num' → logprob: -11.844690322875977

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000721487682312727
    2. ',k' → logprob: -7.375721454620361
    3. ' ,' → logprob: -9.87572193145752
    4. ',n' → logprob: -10.37572193145752
    5. ',i' → logprob: -12.25072193145752
    6. ',
' → logprob: -13.37572193145752
    7. ',x' → logprob: -14.00072193145752
    8. ',j' → logprob: -14.50072193145752
    9. ',a' → logprob: -14.62572193145752
    10. ',y' → logprob: -15.00072193145752

Token 667: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02977629378437996
    2. 'r' → logprob: -3.5297763347625732
    3. 'n' → logprob: -10.779776573181152
    4. ' k' → logprob: -12.654776573181152
    5. 'm' → logprob: -14.154776573181152
    6. ' r' → logprob: -14.779776573181152
    7. ')' → logprob: -14.904776573181152
    8. 'x' → logprob: -15.654776573181152
    9. 'i' → logprob: -16.029775619506836
    10. '<|end|>' → logprob: -16.404775619506836

Token 668: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1130799800157547
    2. '):
' → logprob: -2.4880800247192383
    3. ')' → logprob: -3.7380800247192383
    4. '):
' → logprob: -11.113080024719238
    5. ',' → logprob: -11.488080024719238
    6. '   ' → logprob: -11.613080024719238
    7. ' ):' → logprob: -12.113080024719238
    8. '):

' → logprob: -12.863080024719238
    9. ')**' → logprob: -13.363080024719238
    10. ':' → logprob: -13.488080024719238

Token 669: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9203952550888062
    2. ':' → logprob: -1.1703952550888062
    3. '   ' → logprob: -2.0453953742980957
    4. '<|end|>' → logprob: -2.9203953742980957
    5. '(n' → logprob: -3.0453953742980957
    6. '):' → logprob: -3.2953953742980957
    7. '(r' → logprob: -5.420395374298096
    8. '():' → logprob: -5.420395374298096
    9. ')' → logprob: -5.920395374298096
    10. '       ' → logprob: -6.420395374298096

Token 670: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20353782176971436
    2. '       ' → logprob: -2.828537940979004
    3. ' 
' → logprob: -3.578537940979004
    4. ' if' → logprob: -3.703537940979004
    5. ' return' → logprob: -3.828537940979004
    6. '<|end|>' → logprob: -3.953537940979004
    7. ' ' → logprob: -4.453537940979004
    8. '    ' → logprob: -5.078537940979004
    9. 'return' → logprob: -5.328537940979004
    10. 'if' → logprob: -5.953537940979004

Token 671: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.871929407119751
    2. ' if' → logprob: -0.996929407119751
    3. '       ' → logprob: -2.121929407119751
    4. 'if' → logprob: -2.746929407119751
    5. ' 
' → logprob: -4.746929168701172
    6. ' return' → logprob: -4.746929168701172
    7. ')' → logprob: -5.371929168701172
    8. 'return' → logprob: -5.871929168701172
    9. '    ' → logprob: -6.746929168701172
    10. '           ' → logprob: -7.496929168701172

Token 672: ' Cal' (ID: 4453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5149713158607483
    2. '   ' → logprob: -1.2649712562561035
    3. ' if' → logprob: -2.2649712562561035
    4. '       ' → logprob: -4.8899712562561035
    5. 'return' → logprob: -4.8899712562561035
    6. ' return' → logprob: -7.3899712562561035
    7. '	if' → logprob: -8.389971733093262
    8. '    ' → logprob: -9.014971733093262
    9. ' 
' → logprob: -9.264971733093262
    10. '  ' → logprob: -9.514971733093262

Token 673: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.2509536147117615
    2. 'cul' → logprob: -2.0009536743164062
    3. 'culate' → logprob: -2.5009536743164062
    4. 'c' → logprob: -6.125953674316406
    5. 'cula' → logprob: -6.250953674316406
    6. 'cules' → logprob: -7.875953674316406
    7. '   ' → logprob: -9.250953674316406
    8. '       ' → logprob: -10.375953674316406
    9. '
' → logprob: -10.500953674316406
    10. 'cu' → logprob: -10.625953674316406

Token 674: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.961862325668335
    2. ' n' → logprob: -1.836862325668335
    3. ' (' → logprob: -2.336862325668335
    4. 'r' → logprob: -2.586862325668335
    5. 'n' → logprob: -2.836862325668335
    6. 'fact' → logprob: -2.961862325668335
    7. '(n' → logprob: -3.336862325668335
    8. ' comb' → logprob: -3.336862325668335
    9. '(' → logprob: -3.461862325668335
    10. '   ' → logprob: -3.711862325668335

Token 675: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.06232627481222153
    2. ' combinaison' → logprob: -3.187326192855835
    3. ' comb' → logprob: -4.812326431274414
    4. 'c' → logprob: -5.937326431274414
    5. ' combination' → logprob: -6.437326431274414
    6. '   ' → logprob: -6.562326431274414
    7. 'C' → logprob: -6.812326431274414
    8. 'return' → logprob: -7.687326431274414
    9. ' ' → logprob: -7.687326431274414
    10. '(' → logprob: -7.812326431274414

Token 676: ' C' (ID: 363)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.38132622838020325
    2. ' (' → logprob: -1.6313261985778809
    3. '(' → logprob: -2.131326198577881
    4. '(
' → logprob: -6.006326198577881
    5. ' (
' → logprob: -9.381326675415039
    6. 's' → logprob: -10.256326675415039
    7. '   ' → logprob: -10.381326675415039
    8. '```' → logprob: -10.631326675415039
    9. 'n' → logprob: -11.881326675415039
    10. 'def' → logprob: -11.881326675415039

Token 677: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018289341824129224
    2. '(' → logprob: -6.376829147338867
    3. ' (' → logprob: -9.376829147338867
    4. 'n' → logprob: -10.376829147338867
    5. '```' → logprob: -12.376829147338867
    6. '(
' → logprob: -12.876829147338867
    7. ')' → logprob: -13.751829147338867
    8. '[n' → logprob: -15.001829147338867
    9. '\(' → logprob: -15.001829147338867
    10. '   ' → logprob: -15.501829147338867

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04765760898590088
    2. ',r' → logprob: -3.4226574897766113
    3. ',n' → logprob: -4.547657489776611
    4. ' ,' → logprob: -5.922657489776611
    5. ',k' → logprob: -7.547657489776611
    6. '(n' → logprob: -9.42265796661377
    7. ',
' → logprob: -11.67265796661377
    8. 'r' → logprob: -12.54765796661377
    9. 'n' → logprob: -12.79765796661377
    10. ',i' → logprob: -12.92265796661377

Token 679: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002812124788761139
    2. ' r' → logprob: -5.877811908721924
    3. ')' → logprob: -11.877812385559082
    4. '```' → logprob: -16.127811431884766
    5. '
' → logprob: -16.377811431884766
    6. ' ' → logprob: -17.002811431884766
    7. '   ' → logprob: -17.252811431884766
    8. ',' → logprob: -17.377811431884766
    9. '_r' → logprob: -18.127811431884766
    10. 'n' → logprob: -18.252811431884766

Token 680: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001941130612976849
    2. '):' → logprob: -6.876941204071045
    3. '):
' → logprob: -7.876941204071045
    4. '(n' → logprob: -8.376940727233887
    5. ')
' → logprob: -9.251940727233887
    6. ')`' → logprob: -9.501940727233887
    7. '   ' → logprob: -9.876940727233887
    8. ',' → logprob: -11.001940727233887
    9. ')=' → logprob: -11.126940727233887
    10. ' )' → logprob: -11.501940727233887

Token 681: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7134066224098206
    2. '(n' → logprob: -1.3384065628051758
    3. ')' → logprob: -2.338406562805176
    4. '       ' → logprob: -3.588406562805176
    5. '):' → logprob: -3.588406562805176
    6. '(' → logprob: -3.838406562805176
    7. ':' → logprob: -4.588406562805176
    8. ' (' → logprob: -4.588406562805176
    9. '(
' → logprob: -4.713406562805176
    10. '<|end|>' → logprob: -4.838406562805176

Token 682: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2025078386068344
    2. ' mod' → logprob: -1.7025078535079956
    3. '(mod' → logprob: -6.952507972717285
    4. '998' → logprob: -9.077507972717285
    5. ')' → logprob: -11.452507972717285
    6. '_mod' → logprob: -11.702507972717285
    7. ' (' → logprob: -14.077507972717285
    8. '	mod' → logprob: -14.077507972717285
    9. '```' → logprob: -14.452507972717285
    10. ' ' → logprob: -14.452507972717285

Token 683: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18770644068717957
    2. '       ' → logprob: -2.937706470489502
    3. ':' → logprob: -3.062706470489502
    4. '):' → logprob: -3.437706470489502
    5. ')' → logprob: -3.812706470489502
    6. '(n' → logprob: -4.687706470489502
    7. ' :' → logprob: -6.062706470489502
    8. ',' → logprob: -6.562706470489502
    9. ':
' → logprob: -6.562706470489502
    10. '(' → logprob: -7.187706470489502

Token 684: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.661288857460022
    2. 'return' → logprob: -1.036288857460022
    3. 'l' → logprob: -3.1612887382507324
    4. '```' → logprob: -3.7862887382507324
    5. 'condition' → logprob: -4.286288738250732
    6. '   ' → logprob: -4.286288738250732
    7. '
' → logprob: -4.661288738250732
    8. ')' → logprob: -5.661288738250732
    9. ' if' → logprob: -5.911288738250732
    10. ':' → logprob: -6.286288738250732

Token 685: ''aide' (ID: 75684)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02072744630277157
    2. 'return' → logprob: -4.395727634429932
    3. '   ' → logprob: -5.520727634429932
    4. ' if' → logprob: -6.395727634429932
    5. '```' → logprob: -6.645727634429932
    6. ')' → logprob: -8.270727157592773
    7. '       ' → logprob: -8.895727157592773
    8. 'n' → logprob: -9.020727157592773
    9. '"""' → logprob: -9.020727157592773
    10. ' return' → logprob: -9.145727157592773

Token 686: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.7570170164108276
    2. ' des' → logprob: -1.1320170164108276
    3. 'fact' → logprob: -2.132017135620117
    4. '   ' → logprob: -2.632017135620117
    5. 'def' → logprob: -5.132017135620117
    6. 'de' → logprob: -5.632017135620117
    7. '```' → logprob: -6.257017135620117
    8. '(' → logprob: -6.382017135620117
    9. ' de' → logprob: -6.632017135620117
    10. ')' → logprob: -7.132017135620117

Token 687: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.002094349591061473
    2. 'inv' → logprob: -6.252094268798828
    3. ' fact' → logprob: -8.752094268798828
    4. 'factor' → logprob: -12.377094268798828
    5. ' inv' → logprob: -13.627094268798828
    6. 'fac' → logprob: -14.127094268798828
    7. 'facts' → logprob: -14.752094268798828
    8. 'fait' → logprob: -14.877094268798828
    9. 'Fact' → logprob: -15.377094268798828
    10. '_fact' → logprob: -15.502094268798828

Token 688: 'ori' (ID: 6510)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5374636054039001
    2. 'or' → logprob: -1.162463665008545
    3. '[i' → logprob: -3.287463665008545
    4. 'orial' → logprob: -4.162463665008545
    5. ')' → logprob: -4.537463665008545
    6. '```' → logprob: -5.287463665008545
    7. '[]' → logprob: -5.412463665008545
    8. '_fact' → logprob: -5.537463665008545
    9. ']' → logprob: -5.787463665008545
    10. 'ory' → logprob: -5.787463665008545

Token 689: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.0037184846587479115
    2. 'els' → logprob: -5.628718376159668
    3. '[' → logprob: -10.003718376159668
    4. 'eles' → logprob: -10.378718376159668
    5. 'alles' → logprob: -10.878718376159668
    6. '```' → logprob: -12.128718376159668
    7. 'als' → logprob: -12.753718376159668
    8. '   ' → logprob: -12.878718376159668
    9. 'èles' → logprob: -13.378718376159668
    10. 'a' → logprob: -13.628718376159668

Token 690: ' pré' (ID: 9424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3346264362335205
    2. '(n' → logprob: -1.5846264362335205
    3. '[n' → logprob: -3.4596264362335205
    4. '       ' → logprob: -4.459626197814941
    5. ')' → logprob: -4.584626197814941
    6. '(' → logprob: -5.334626197814941
    7. ',' → logprob: -5.584626197814941
    8. ' (' → logprob: -5.584626197814941
    9. '```' → logprob: -5.584626197814941
    10. '[' → logprob: -6.084626197814941

Token 691: '-cal' (ID: 84920)
  Prédit: 'computed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.1480213701725006
    2. 'calcul' → logprob: -2.7730214595794678
    3. 'cal' → logprob: -3.8980214595794678
    4. '   ' → logprob: -4.148021221160889
    5. 'compute' → logprob: -5.148021221160889
    6. 'c' → logprob: -5.273021221160889
    7. 'al' → logprob: -5.648021221160889
    8. '[' → logprob: -5.648021221160889
    9. ']' → logprob: -6.023021221160889
    10. 'processed' → logprob: -6.148021221160889

Token 692: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.041630588471889496
    2. 'c' → logprob: -3.416630506515503
    3. 'ul' → logprob: -5.166630744934082
    4. 'culated' → logprob: -7.666630744934082
    5. '```' → logprob: -7.791630744934082
    6. 'cu' → logprob: -9.166630744934082
    7. 'cult' → logprob: -9.291630744934082
    8. '``' → logprob: -9.291630744934082
    9. 'isées' → logprob: -9.416630744934082
    10. 'ées' → logprob: -9.416630744934082

Token 693: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0005032312474213541
    2. 'és' → logprob: -7.875503063201904
    3. '[' → logprob: -9.750503540039062
    4. 'es' → logprob: -10.750503540039062
    5. 'isées' → logprob: -11.000503540039062
    6. 'ees' → logprob: -11.000503540039062
    7. 'nées' → logprob: -12.750503540039062
    8. 'é' → logprob: -13.375503540039062
    9. 'ée' → logprob: -13.500503540039062
    10. '```' → logprob: -13.875503540039062

Token 694: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9320883750915527
    2. '(n' → logprob: -1.0570883750915527
    3. '(' → logprob: -1.8070883750915527
    4. ')' → logprob: -3.4320883750915527
    5. '       ' → logprob: -3.9320883750915527
    6. ':' → logprob: -4.057088375091553
    7. '):' → logprob: -4.182088375091553
    8. ' (' → logprob: -6.057088375091553
    9. ',' → logprob: -6.682088375091553
    10. '(
' → logprob: -6.807088375091553

Token 695: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36005422472953796
    2. ')' → logprob: -1.2350542545318604
    3. '       ' → logprob: -5.110054016113281
    4. '<|end|>' → logprob: -6.360054016113281
    5. '```' → logprob: -7.235054016113281
    6. '    
' → logprob: -7.235054016113281
    7. '):
' → logprob: -7.860054016113281
    8. '(n' → logprob: -7.860054016113281
    9. ' 
' → logprob: -8.110054016113281
    10. '  
' → logprob: -8.735054016113281

Token 696: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05337105691432953
    2. '       ' → logprob: -3.178370952606201
    3. ')' → logprob: -4.803370952606201
    4. ' if' → logprob: -7.303370952606201
    5. ' ' → logprob: -7.803370952606201
    6. '<|end|>' → logprob: -8.30337142944336
    7. '```' → logprob: -8.92837142944336
    8. '    ' → logprob: -9.05337142944336
    9. 'if' → logprob: -9.42837142944336
    10. '  ' → logprob: -9.55337142944336

Token 697: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1541842222213745
    2. '   ' → logprob: -2.529184341430664
    3. '       ' → logprob: -4.279184341430664
    4. ',' → logprob: -4.529184341430664
    5. '):
' → logprob: -4.529184341430664
    6. ':
' → logprob: -5.029184341430664
    7. ')' → logprob: -5.029184341430664
    8. '):' → logprob: -5.529184341430664
    9. ' :' → logprob: -5.654184341430664
    10. '(n' → logprob: -5.779184341430664

Token 698: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.205796480178833
    2. '   ' → logprob: -1.205796480178833
    3. '           ' → logprob: -1.205796480178833
    4. '       ' → logprob: -2.330796480178833
    5. ' n' → logprob: -6.080796241760254
    6. 'r' → logprob: -6.330796241760254
    7. '```' → logprob: -9.955796241760254
    8. '   ' → logprob: -10.080796241760254
    9. '          ' → logprob: -10.330796241760254
    10. '    
' → logprob: -10.705796241760254

Token 699: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5802285075187683
    2. 'n' (adapté à ' n') → logprob: -0.8302285075187683
    3. ' n' → logprob: -6.330228328704834
    4. '   ' → logprob: -6.455228328704834
    5. ' r' → logprob: -7.080228328704834
    6. '       ' → logprob: -9.955228805541992
    7. '           ' → logprob: -10.830228805541992
    8. ' ' → logprob: -12.580228805541992
    9. '```' → logprob: -12.580228805541992
    10. '
' → logprob: -12.830228805541992

Token 700: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001822024118155241
    2. ' ,' → logprob: -6.501821994781494
    3. ',r' → logprob: -8.376822471618652
    4. ':' → logprob: -10.501822471618652
    5. '   ' → logprob: -10.876822471618652
    6. ',int' → logprob: -11.501822471618652
    7. ':int' → logprob: -11.501822471618652
    8. 'int' → logprob: -11.751822471618652
    9. ',n' → logprob: -12.501822471618652
    10. ',
' → logprob: -13.126822471618652

Token 701: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.3750057220459
    4. 'n' → logprob: -18.8750057220459
    5. ')' → logprob: -19.3750057220459
    6. ':int' → logprob: -20.3750057220459
    7. '(int' → logprob: -20.3750057220459
    8. '[int' → logprob: -20.7500057220459
    9. '       ' → logprob: -21.2500057220459
    10. '```' → logprob: -21.5000057220459

Token 702: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036204091156832874
    2. ':' → logprob: -8.875362396240234
    3. '   ' → logprob: -8.875362396240234
    4. ' ,' → logprob: -9.625362396240234
    5. ',r' → logprob: -11.625362396240234
    6. '):' → logprob: -12.750362396240234
    7. ',
' → logprob: -13.875362396240234
    8. '       ' → logprob: -14.125362396240234
    9. ' :' → logprob: -14.375362396240234
    10. 'r' → logprob: -14.625362396240234

Token 703: ' Le' (ID: 2018)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006717505399137735
    2. ' int' → logprob: -5.006717681884766
    3. 'n' → logprob: -14.256717681884766
    4. '[int' → logprob: -14.506717681884766
    5. '(int' → logprob: -15.131717681884766
    6. '=int' → logprob: -16.006717681884766
    7. '   ' → logprob: -16.131717681884766
    8. ')' → logprob: -16.256717681884766
    9. ' n' → logprob: -16.506717681884766
    10. 'Int' → logprob: -16.631717681884766

Token 704: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08871598541736603
    2. 'int' → logprob: -3.0887160301208496
    3. 'n' → logprob: -3.3387160301208496
    4. ')' → logprob: -6.46371603012085
    5. ' int' → logprob: -8.088715553283691
    6. '```' → logprob: -8.463715553283691
    7. ' r' → logprob: -8.963715553283691
    8. 'i' → logprob: -8.963715553283691
    9. '   ' → logprob: -9.276215553283691
    10. '1' → logprob: -9.338715553283691

Token 705: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21371956169605255
    2. '       ' → logprob: -2.338719606399536
    3. ')' → logprob: -2.963719606399536
    4. ',' → logprob: -3.838719606399536
    5. ' des' → logprob: -4.838719367980957
    6. '           ' → logprob: -6.338719367980957
    7. '    ' → logprob: -6.338719367980957
    8. ' )' → logprob: -6.463719367980957
    9. ' ,' → logprob: -6.588719367980957
    10. '  ' → logprob: -6.963719367980957

Token 706: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5490192770957947
    2. ')' → logprob: -2.0490193367004395
    3. '       ' → logprob: -2.2990193367004395
    4. '
' → logprob: -3.0490193367004395
    5. ')
' → logprob: -3.0490193367004395
    6. '           ' → logprob: -3.2990193367004395
    7. ',' → logprob: -3.7990193367004395
    8. ',
' → logprob: -4.4240193367004395
    9. 'tokens' → logprob: -4.9240193367004395
    10. ' des' → logprob: -5.7990193367004395

Token 707: ''' (ID: 6)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.5019482970237732
    2. 'élé' → logprob: -1.126948356628418
    3. '   ' → logprob: -3.751948356628418
    4. 'obj' → logprob: -4.126948356628418
    5. ' objets' → logprob: -4.376948356628418
    6. ' elements' → logprob: -5.626948356628418
    7. 'elements' → logprob: -5.876948356628418
    8. 'items' → logprob: -6.251948356628418
    9. 'é' → logprob: -6.376948356628418
    10. ' items' → logprob: -6.751948356628418

Token 708: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.07755423337221146
    2. 'elements' → logprob: -3.327554225921631
    3. ' éléments' → logprob: -4.202554225921631
    4. 'obj' → logprob: -4.452554225921631
    5. 'items' → logprob: -4.577554225921631
    6. 'objects' → logprob: -6.952554225921631
    7. ' elements' → logprob: -7.952554225921631
    8. '   ' → logprob: -9.077554702758789
    9. ' objets' → logprob: -9.077554702758789
    10. 'elem' → logprob: -9.702554702758789

Token 709: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.1758805215358734
    2. 'ements' → logprob: -2.1758804321289062
    3. 'éments' → logprob: -3.0508804321289062
    4. 'ents' → logprob: -9.050880432128906
    5. '```' → logprob: -9.050880432128906
    6. 'e' → logprob: -9.425880432128906
    7. '   ' → logprob: -10.175880432128906
    8. 'iments' → logprob: -10.800880432128906
    9. 'em' → logprob: -11.175880432128906
    10. 'ts' → logprob: -11.175880432128906

Token 710: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2941857874393463
    2. ')' → logprob: -2.0441858768463135
    3. '       ' → logprob: -2.4191858768463135
    4. ')
' → logprob: -4.419185638427734
    5. '
' → logprob: -5.044185638427734
    6. '<|end|>' → logprob: -5.044185638427734
    7. ',' → logprob: -5.919185638427734
    8. '```' → logprob: -6.294185638427734
    9. '):
' → logprob: -6.669185638427734
    10. '           ' → logprob: -6.794185638427734

Token 711: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022796381264925003
    2. '   ' → logprob: -4.522796154022217
    3. ')' → logprob: -4.897796154022217
    4. '           ' → logprob: -5.897796154022217
    5. '```' → logprob: -7.272796154022217
    6. '<|end|>' → logprob: -8.522796630859375
    7. ',' → logprob: -8.897796630859375
    8. '):
' → logprob: -9.022796630859375
    9. '[' → logprob: -9.772796630859375
    10. '        
' → logprob: -10.022796630859375

Token 712: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.01318024005740881
    2. '           ' → logprob: -4.638180255889893
    3. ' r' → logprob: -6.013180255889893
    4. '   ' → logprob: -7.013180255889893
    5. '       ' → logprob: -9.638179779052734
    6. ' ' → logprob: -13.138179779052734
    7. '```' → logprob: -14.138179779052734
    8. '	r' → logprob: -14.263179779052734
    9. '  ' → logprob: -14.513179779052734
    10. 'return' → logprob: -14.513179779052734

Token 713: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27433884143829346
    2. '):' → logprob: -1.7743388414382935
    3. '   ' → logprob: -3.774338722229004
    4. '):
' → logprob: -4.149338722229004
    5. '<|end|>' → logprob: -5.024338722229004
    6. ' ==' → logprob: -5.274338722229004
    7. '```' → logprob: -5.399338722229004
    8. ':' → logprob: -5.649338722229004
    9. '           ' → logprob: -5.774338722229004
    10. '       ' → logprob: -6.399338722229004

Token 714: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. ' int' → logprob: -10.250035285949707
    3. ')' → logprob: -16.250036239624023
    4. '   ' → logprob: -20.000036239624023
    5. '[int' → logprob: -20.375036239624023
    6. '(int' → logprob: -20.625036239624023
    7. ':int' → logprob: -21.000036239624023
    8. '           ' → logprob: -21.375036239624023
    9. '=int' → logprob: -22.000036239624023
    10. '```' → logprob: -22.250036239624023

Token 715: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020829729735851288
    2. ')' → logprob: -4.020829677581787
    3. '   ' → logprob: -6.645829677581787
    4. '):
' → logprob: -6.895829677581787
    5. ':' → logprob: -8.770830154418945
    6. ' ):' → logprob: -9.270830154418945
    7. '           ' → logprob: -10.145830154418945
    8. '       ' → logprob: -10.770830154418945
    9. '```' → logprob: -11.145830154418945
    10. '):
' → logprob: -11.395830154418945

Token 716: ' Le' (ID: 2018)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1334763765335083
    2. ' r' → logprob: -1.5084763765335083
    3. 'int' → logprob: -1.6334763765335083
    4. ' int' → logprob: -1.6334763765335083
    5. ')' → logprob: -2.7584762573242188
    6. '<|end|>' → logprob: -6.133476257324219
    7. ' )' → logprob: -8.133476257324219
    8. 'n' → logprob: -9.133476257324219
    9. ' n' → logprob: -9.508476257324219
    10. '   ' → logprob: -9.883476257324219

Token 717: ' nombre' (ID: 9733)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46354439854621887
    2. ')' → logprob: -1.4635443687438965
    3. ' ' → logprob: -3.4635443687438965
    4. ' )' → logprob: -3.4635443687438965
    5. ' r' → logprob: -3.4635443687438965
    6. '1' → logprob: -3.7135443687438965
    7. '```' → logprob: -5.5885443687438965
    8. ' int' → logprob: -5.9635443687438965
    9. 'int' → logprob: -5.9635443687438965
    10. '   ' → logprob: -6.4635443687438965

Token 718: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4649418294429779
    2. ' des' → logprob: -1.2149418592453003
    3. ' )' → logprob: -3.4649417400360107
    4. '   ' → logprob: -4.58994197845459
    5. '<|end|>' → logprob: -4.58994197845459
    6. ' d' → logprob: -5.08994197845459
    7. ' de' → logprob: -5.96494197845459
    8. '           ' → logprob: -5.96494197845459
    9. ' à' → logprob: -6.08994197845459
    10. 'des' → logprob: -6.33994197845459

Token 719: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.028501518070697784
    2. ' éléments' → logprob: -3.778501510620117
    3. '   ' → logprob: -6.903501510620117
    4. ' ' → logprob: -7.278501510620117
    5. ' elements' → logprob: -7.278501510620117
    6. ')' → logprob: -7.403501510620117
    7. ' ' → logprob: -7.528501510620117
    8. '```' → logprob: -7.903501510620117
    9. 'elements' → logprob: -8.278501510620117
    10. ' )' → logprob: -8.403501510620117

Token 720: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0013069062260910869
    2. ' éléments' → logprob: -7.001307010650635
    3. 'elements' → logprob: -8.126306533813477
    4. 'items' → logprob: -10.626306533813477
    5. '```' → logprob: -11.126306533813477
    6. 'él' → logprob: -11.126306533813477
    7. ' ' → logprob: -11.501306533813477
    8. 'r' → logprob: -11.626306533813477
    9. 'obj' → logprob: -11.751306533813477
    10. 'é' → logprob: -12.126306533813477

Token 721: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -4.286852345103398e-05
    2. 'm' → logprob: -10.500042915344238
    3. 'ment' → logprob: -11.625042915344238
    4. 'éments' → logprob: -12.625042915344238
    5. 'ents' → logprob: -14.375042915344238
    6. '```' → logprob: -14.875042915344238
    7. 'me' → logprob: -15.000042915344238
    8. ')' → logprob: -15.000042915344238
    9. 'nts' → logprob: -15.250042915344238
    10. 'mentation' → logprob: -15.375042915344238

Token 722: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2298786640167236
    2. '):' → logprob: -1.2298786640167236
    3. '   ' → logprob: -1.3548786640167236
    4. '):
' → logprob: -2.7298786640167236
    5. '       ' → logprob: -3.7298786640167236
    6. ' à' → logprob: -3.8548786640167236
    7. 'à' → logprob: -3.8548786640167236
    8. '           ' → logprob: -3.9798786640167236
    9. '
' → logprob: -6.6048784255981445
    10. '```' → logprob: -6.8548784255981445

Token 723: ' choisir' (ID: 47004)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.4610721170902252
    2. ' choisir' → logprob: -1.0860720872879028
    3. 'prendre' → logprob: -4.586071968078613
    4. 'choose' → logprob: -4.836071968078613
    5. ' chooser' → logprob: -5.461071968078613
    6. ' sélectionner' → logprob: -5.836071968078613
    7. ' prendre' → logprob: -6.961071968078613
    8. 'chooser' → logprob: -6.961071968078613
    9. ' chos' → logprob: -7.461071968078613
    10. 'select' → logprob: -7.711071968078613

Token 724: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.753537654876709
    2. '):
' → logprob: -1.378537654876709
    3. '   ' → logprob: -1.628537654876709
    4. '       ' → logprob: -3.253537654876709
    5. ')
' → logprob: -3.253537654876709
    6. '):' → logprob: -6.128537654876709
    7. '):
' → logprob: -7.753537654876709
    8. '           ' → logprob: -8.003538131713867
    9. '```' → logprob: -8.753538131713867
    10. ')**' → logprob: -9.253538131713867

Token 725: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13385099172592163
    2. '       ' → logprob: -2.5088510513305664
    3. ')' → logprob: -3.1338510513305664
    4. '    
' → logprob: -9.383851051330566
    5. '```' → logprob: -9.383851051330566
    6. ')
' → logprob: -10.008851051330566
    7. '):
' → logprob: -10.258851051330566
    8. '<|end|>' → logprob: -10.508851051330566
    9. ' 
' → logprob: -11.008851051330566
    10. '        
' → logprob: -11.133851051330566

Token 726: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02669978141784668
    2. '       ' → logprob: -3.7766997814178467
    3. ')' → logprob: -5.776700019836426
    4. '```' → logprob: -8.776700019836426
    5. '):
' → logprob: -9.526700019836426
    6. ' if' → logprob: -9.901700019836426
    7. '):' → logprob: -11.151700019836426
    8. 'if' → logprob: -11.276700019836426
    9. ')
' → logprob: -11.651700019836426
    10. '           ' → logprob: -12.276700019836426

Token 727: ':
' (ID: 734)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.5481882095336914
    2. '       ' → logprob: -1.5481882095336914
    3. ' (' → logprob: -1.5481882095336914
    4. '           ' → logprob: -1.5481882095336914
    5. 'n' → logprob: -2.9231882095336914
    6. '(n' → logprob: -3.0481882095336914
    7. ':' → logprob: -4.548188209533691
    8. '   ' → logprob: -5.423188209533691
    9. '            ' → logprob: -5.423188209533691
    10. ')' → logprob: -5.548188209533691

Token 728: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5501669645309448
    2. '       ' → logprob: -1.6751669645309448
    3. '0' → logprob: -2.0501670837402344
    4. '   ' → logprob: -3.4251670837402344
    5. 'n' → logprob: -3.8001670837402344
    6. ' (' → logprob: -3.9251670837402344
    7. ' r' → logprob: -4.425167083740234
    8. ' int' → logprob: -5.175167083740234
    9. 'r' → logprob: -5.925167083740234
    10. ' None' → logprob: -5.925167083740234

Token 729: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.008648845367133617
    2. ' int' → logprob: -4.758648872375488
    3. '           ' → logprob: -10.383648872375488
    4. '(int' → logprob: -13.758648872375488
    5. '       ' → logprob: -14.508648872375488
    6. '
' → logprob: -14.508648872375488
    7. '```' → logprob: -14.633648872375488
    8. '0' → logprob: -14.883648872375488
    9. '[int' → logprob: -15.258648872375488
    10. '   ' → logprob: -15.883648872375488

Token 730: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08230827003717422
    2. '       ' → logprob: -2.957308292388916
    3. ' :' → logprob: -4.332308292388916
    4. '           ' → logprob: -5.457308292388916
    5. '   ' → logprob: -5.582308292388916
    6. ')' → logprob: -5.832308292388916
    7. '```' → logprob: -7.082308292388916
    8. '):' → logprob: -7.582308292388916
    9. '    ' → logprob: -8.082307815551758
    10. '        ' → logprob: -8.332307815551758

Token 731: ' La' (ID: 3038)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.12885244190692902
    2. ' fact' → logprob: -2.503852367401123
    3. ' (' → logprob: -3.878852367401123
    4. 'fact' → logprob: -4.503852367401123
    5. 'comb' → logprob: -5.378852367401123
    6. '0' → logprob: -6.753852367401123
    7. '(com' → logprob: -7.378852367401123
    8. ' combin' → logprob: -8.503852844238281
    9. '   ' → logprob: -8.503852844238281
    10. ' return' → logprob: -8.878852844238281

Token 732: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.04666975140571594
    2. ' comb' → logprob: -3.5466697216033936
    3. '0' → logprob: -4.421669960021973
    4. '(' → logprob: -6.671669960021973
    5. ' combinaison' → logprob: -6.921669960021973
    6. ' (' → logprob: -7.671669960021973
    7. '   ' → logprob: -7.796669960021973
    8. 'c' → logprob: -8.046669960021973
    9. 'com' → logprob: -8.046669960021973
    10. ' ' → logprob: -8.296669960021973

Token 733: ' C' (ID: 363)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4984380602836609
    2. '(n' → logprob: -0.9984380602836609
    3. ' C' → logprob: -4.623437881469727
    4. 'C' → logprob: -5.498437881469727
    5. '   ' → logprob: -5.498437881469727
    6. '(' → logprob: -5.873437881469727
    7. '```' → logprob: -6.623437881469727
    8. '       ' → logprob: -7.123437881469727
    9. '`' → logprob: -8.123437881469727
    10. ')' → logprob: -8.748437881469727

Token 734: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03716949746012688
    2. ' (' → logprob: -3.4121694564819336
    3. '(' → logprob: -5.662169456481934
    4. ')' → logprob: -10.912169456481934
    5. '(
' → logprob: -11.912169456481934
    6. '   ' → logprob: -12.037169456481934
    7. 'n' → logprob: -12.412169456481934
    8. '```' → logprob: -12.787169456481934
    9. '       ' → logprob: -13.912169456481934
    10. '`' → logprob: -14.162169456481934

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16557037830352783
    2. '(n' → logprob: -2.1655702590942383
    3. ' ,' → logprob: -3.5405702590942383
    4. ',n' → logprob: -4.790570259094238
    5. ',r' → logprob: -8.290570259094238
    6. ')' → logprob: -9.290570259094238
    7. '(' → logprob: -9.540570259094238
    8. 'n' → logprob: -10.040570259094238
    9. '(r' → logprob: -10.165570259094238
    10. '   ' → logprob: -10.415570259094238

Token 736: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014165629632771015
    2. ' r' → logprob: -4.26416540145874
    3. ')' → logprob: -13.389165878295898
    4. 'n' → logprob: -15.514165878295898
    5. '
' → logprob: -15.764165878295898
    6. '```' → logprob: -16.1391658782959
    7. ' ' → logprob: -17.1391658782959
    8. '	r' → logprob: -17.3891658782959
    9. ' ' → logprob: -17.5141658782959
    10. '   ' → logprob: -17.6391658782959

Token 737: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019793107639998198
    2. ')
' → logprob: -7.001979351043701
    3. '   ' → logprob: -7.751979351043701
    4. '(n' → logprob: -8.001978874206543
    5. ')%' → logprob: -9.251978874206543
    6. ')`' → logprob: -9.751978874206543
    7. '       ' → logprob: -10.126978874206543
    8. '[n' → logprob: -10.376978874206543
    9. ')
' → logprob: -10.626978874206543
    10. '```' → logprob: -11.376978874206543

Token 738: ' %' (ID: 1851)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.742705762386322
    2. '%' → logprob: -1.3677058219909668
    3. ' %' → logprob: -2.242705821990967
    4. '   ' → logprob: -2.617705821990967
    5. ')' → logprob: -2.742705821990967
    6. ')
' → logprob: -4.867705821990967
    7. '%
' → logprob: -4.992705821990967
    8. '           ' → logprob: -5.617705821990967
    9. '```' → logprob: -6.617705821990967
    10. '
' → logprob: -6.867705821990967

Token 739: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.47407862544059753
    2. 'mod' → logprob: -0.9740786552429199
    3. '(mod' → logprob: -14.474078178405762
    4. '	mod' → logprob: -14.724078178405762
    5. '_mod' → logprob: -15.099078178405762
    6. ' modul' → logprob: -15.599078178405762
    7. ')' → logprob: -16.474079132080078
    8. '```' → logprob: -16.474079132080078
    9. ' modu' → logprob: -16.974079132080078
    10. ' мод' → logprob: -17.474079132080078

Token 740: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05309922993183136
    2. '       ' → logprob: -3.5530991554260254
    3. ')' → logprob: -4.053099155426025
    4. '):
' → logprob: -5.553099155426025
    5. '
' → logprob: -7.178099155426025
    6. '):' → logprob: -7.303099155426025
    7. ')
' → logprob: -8.678099632263184
    8. '```' → logprob: -9.678099632263184
    9. ':
' → logprob: -9.928099632263184
    10. '    
' → logprob: -10.303099632263184

Token 741: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10699580609798431
    2. '       ' → logprob: -2.3569958209991455
    3. '
' → logprob: -5.481995582580566
    4. ')' → logprob: -6.731995582580566
    5. '```' → logprob: -8.106995582580566
    6. '    
' → logprob: -8.231995582580566
    7. '    ' → logprob: -8.606995582580566
    8. ' 
' → logprob: -8.856995582580566
    9. '<|end|>' → logprob: -8.856995582580566
    10. ' ' → logprob: -9.356995582580566

Token 742: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006308287265710533
    2. ' ' → logprob: -7.375630855560303
    3. '           ' → logprob: -13.625630378723145
    4. '   ' → logprob: -13.750630378723145
    5. '       ' → logprob: -14.000630378723145
    6. '
' → logprob: -14.125630378723145
    7. '1' → logprob: -15.875630378723145
    8. '```' → logprob: -16.00063133239746
    9. '  ' → logprob: -17.00063133239746
    10. ' ' → logprob: -17.37563133239746

Token 743: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -10.87502670288086
    3. '```' → logprob: -13.00002670288086
    4. '   ' → logprob: -13.37502670288086
    5. '           ' → logprob: -13.87502670288086
    6. '
' → logprob: -13.87502670288086
    7. '       ' → logprob: -14.00002670288086
    8. '1' → logprob: -14.50002670288086
    9. 'return' → logprob: -16.00002670288086
    10. '`' → logprob: -16.50002670288086

Token 744: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013741017319262028
    2. 'if' → logprob: -4.8887410163879395
    3. '       ' → logprob: -5.5137410163879395
    4. '   ' → logprob: -6.2637410163879395
    5. '           ' → logprob: -9.138741493225098
    6. '0' → logprob: -10.763741493225098
    7. '(n' → logprob: -11.763741493225098
    8. '```' → logprob: -11.763741493225098
    9. '               ' → logprob: -12.013741493225098
    10. '        
' → logprob: -12.263741493225098

Token 745: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20161955058574677
    2. ' r' → logprob: -1.7016195058822632
    3. ' not' → logprob: -9.576619148254395
    4. 'n' → logprob: -9.576619148254395
    5. ' n' → logprob: -10.326619148254395
    6. '(r' → logprob: -11.201619148254395
    7. 'not' → logprob: -11.701619148254395
    8. '   ' → logprob: -12.076619148254395
    9. ' (' → logprob: -13.201619148254395
    10. '```' → logprob: -13.326619148254395

Token 746: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43344253301620483
    2. '>' → logprob: -1.0584425926208496
    3. ' <' → logprob: -5.93344259262085
    4. '<' → logprob: -6.18344259262085
    5. ' ' → logprob: -12.308442115783691
    6. ' >
' → logprob: -12.933442115783691
    7. '```' → logprob: -13.308442115783691
    8. '<|end|>' → logprob: -13.933442115783691
    9. '<n' → logprob: -14.183442115783691
    10. ' >
' → logprob: -14.183442115783691

Token 747: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003357006062287837
    2. ' n' → logprob: -8.000335693359375
    3. '```' → logprob: -15.750335693359375
    4. '	n' → logprob: -16.750335693359375
    5. ')n' → logprob: -16.875335693359375
    6. ')' → logprob: -17.625335693359375
    7. '0' → logprob: -17.750335693359375
    8. '_n' → logprob: -17.750335693359375
    9. '   ' → logprob: -18.125335693359375
    10. '(n' → logprob: -18.500335693359375

Token 748: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7094277143478394
    2. '       ' → logprob: -0.7094277143478394
    3. ' or' → logprob: -5.209427833557129
    4. '```' → logprob: -5.334427833557129
    5. ')' → logprob: -6.084427833557129
    6. '.' → logprob: -6.584427833557129
    7. '
' → logprob: -7.084427833557129
    8. ' if' → logprob: -8.209427833557129
    9. '           ' → logprob: -8.459427833557129
    10. '<|end|>' → logprob: -8.584427833557129

Token 749: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.009860800579190254
    2. ' r' → logprob: -4.634860992431641
    3. 'n' → logprob: -9.25986099243164
    4. ' n' → logprob: -12.38486099243164
    5. '   ' → logprob: -12.50986099243164
    6. '(r' → logprob: -14.25986099243164
    7. '
' → logprob: -15.63486099243164
    8. '       ' → logprob: -15.75986099243164
    9. ' or' → logprob: -16.13486099243164
    10. '```' → logprob: -16.25986099243164

Token 750: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5290303826332092
    2. '>' → logprob: -1.2790303230285645
    3. ' <' → logprob: -2.6540303230285645
    4. ' >' → logprob: -2.7790303230285645
    5. '```' → logprob: -10.904030799865723
    6. '   ' → logprob: -11.279030799865723
    7. 'or' → logprob: -12.654030799865723
    8. '[' → logprob: -13.279030799865723
    9. ' or' → logprob: -13.404030799865723
    10. '><' → logprob: -13.654030799865723

Token 751: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '```' → logprob: -17.375431060791016
    4. '۰' → logprob: -17.500431060791016
    5. '<|end|>' → logprob: -17.500431060791016
    6. ' or' → logprob: -19.062931060791016
    7. '<' → logprob: -19.562931060791016
    8. ' ' → logprob: -19.687931060791016
    9. '=' → logprob: -20.062931060791016
    10. '  ' → logprob: -20.125431060791016

Token 752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -15.00001049041748
    4. '۰' → logprob: -17.625011444091797
    5. '<|end|>' → logprob: -18.625011444091797
    6. '=' → logprob: -18.875011444091797
    7. 'r' → logprob: -19.000011444091797
    8. 'or' → logprob: -19.250011444091797
    9. '   ' → logprob: -19.375011444091797
    10. ' or' → logprob: -19.625011444091797

Token 753: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06767226755619049
    2. '       ' → logprob: -2.8176722526550293
    3. ')' → logprob: -5.942672252655029
    4. '
' → logprob: -6.567672252655029
    5. ' or' → logprob: -7.317672252655029
    6. '```' → logprob: -8.067672729492188
    7. ')
' → logprob: -8.942672729492188
    8. '):
' → logprob: -9.067672729492188
    9. ' if' → logprob: -9.317672729492188
    10. ':
' → logprob: -9.442672729492188

Token 754: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016104355454444885
    2. '       ' → logprob: -6.751610279083252
    3. '```' → logprob: -8.25161075592041
    4. ')' → logprob: -10.12661075592041
    5. '<|end|>' → logprob: -10.12661075592041
    6. ' if' → logprob: -10.25161075592041
    7. '    
' → logprob: -10.37661075592041
    8. ' 
' → logprob: -12.37661075592041
    9. '    ' → logprob: -12.37661075592041
    10. ' ' → logprob: -12.37661075592041

Token 755: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3135700821876526
    2. '       ' → logprob: -1.3135700225830078
    3. '```' → logprob: -8.313570022583008
    4. ' if' → logprob: -10.563570022583008
    5. ')' → logprob: -10.938570022583008
    6. '<|end|>' → logprob: -12.188570022583008
    7. '   ' → logprob: -12.938570022583008
    8. '    ' → logprob: -13.063570022583008
    9. 'if' → logprob: -13.313570022583008
    10. '    
' → logprob: -13.438570022583008

Token 756: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018171247094869614
    2. '       ' → logprob: -4.018171310424805
    3. '```' → logprob: -11.393171310424805
    4. ' if' → logprob: -12.268171310424805
    5. '    
' → logprob: -12.768171310424805
    6. '   ' → logprob: -14.268171310424805
    7. '    ' → logprob: -14.893171310424805
    8. '
' → logprob: -15.518171310424805
    9. '        
' → logprob: -15.643171310424805
    10. '           ' → logprob: -15.643171310424805

Token 757: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008651299867779016
    2. '   ' → logprob: -7.2508649826049805
    3. ' if' → logprob: -9.25086498260498
    4. '       ' → logprob: -9.75086498260498
    5. '	if' → logprob: -14.37586498260498
    6. 'return' → logprob: -15.00086498260498
    7. '```' → logprob: -18.125865936279297
    8. '    ' → logprob: -19.125865936279297
    9. '  ' → logprob: -19.375865936279297
    10. '           ' → logprob: -20.375865936279297

Token 758: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0619683600962162
    2. ' r' → logprob: -2.8119683265686035
    3. '(r' → logprob: -14.936968803405762
    4. '	r' → logprob: -15.311968803405762
    5. '   ' → logprob: -15.936968803405762
    6. ' not' → logprob: -16.686967849731445
    7. '0' → logprob: -16.936967849731445
    8. ' ' → logprob: -17.686967849731445
    9. '_r' → logprob: -17.686967849731445
    10. ' ' → logprob: -18.061967849731445

Token 759: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47456809878349304
    2. ' <' → logprob: -0.9745681285858154
    3. ' >' → logprob: -7.849567890167236
    4. '>' → logprob: -9.349568367004395
    5. ' ' → logprob: -12.224568367004395
    6. '<|end|>' → logprob: -12.724568367004395
    7. '><' → logprob: -13.099568367004395
    8. ' ><' → logprob: -14.599568367004395
    9. '   ' → logprob: -14.724568367004395
    10. '0' → logprob: -14.724568367004395

Token 760: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '=' → logprob: -17.8750057220459
    4. '```' → logprob: -20.0000057220459
    5. '۰' → logprob: -20.2500057220459
    6. 'or' → logprob: -20.3750057220459
    7. '<|end|>' → logprob: -20.7500057220459
    8. '
' → logprob: -21.7500057220459
    9. '   ' → logprob: -22.1250057220459
    10. '(' → logprob: -22.5000057220459

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '=' → logprob: -17.0
    3. ' ' → logprob: -18.375
    4. '۰' → logprob: -20.375
    5. '```' → logprob: -20.75
    6. 'or' → logprob: -21.125
    7. '1' → logprob: -23.125
    8. '(' → logprob: -23.5
    9. '০' → logprob: -23.75
    10. '<|end|>' → logprob: -24.125

Token 762: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019389885710552335
    2. 'or' → logprob: -6.251938819885254
    3. '	or' → logprob: -12.626938819885254
    4. '<|end|>' → logprob: -12.626938819885254
    5. ' ' → logprob: -13.001938819885254
    6. '   ' → logprob: -15.126938819885254
    7. '  ' → logprob: -15.626938819885254
    8. ' o' → logprob: -15.751938819885254
    9. '       ' → logprob: -16.00193977355957
    10. ' أو' → logprob: -16.00193977355957

Token 763: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.843177233240567e-05
    2. ' r' → logprob: -11.375018119812012
    3. 'n' → logprob: -11.875018119812012
    4. '   ' → logprob: -18.625019073486328
    5. '	r' → logprob: -19.875019073486328
    6. ' n' → logprob: -20.125019073486328
    7. '<|end|>' → logprob: -21.125019073486328
    8. '```' → logprob: -21.750019073486328
    9. '_r' → logprob: -23.000019073486328
    10. '<|end|>' → logprob: -23.375019073486328

Token 764: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31327685713768005
    2. '>' → logprob: -1.3132768869400024
    3. 'n' → logprob: -12.438277244567871
    4. ' n' → logprob: -12.813277244567871
    5. ' or' → logprob: -13.688277244567871
    6. '>N' → logprob: -13.938277244567871
    7. '```' → logprob: -14.063277244567871
    8. ' >
' → logprob: -14.313277244567871
    9. '<|end|>' → logprob: -14.313277244567871
    10. '">' → logprob: -14.313277244567871

Token 765: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014025058771949261
    2. ' n' → logprob: -8.875140190124512
    3. '	n' → logprob: -15.125140190124512
    4. '<|end|>' → logprob: -17.000141143798828
    5. ')n' → logprob: -18.375141143798828
    6. '_n' → logprob: -19.250141143798828
    7. '   ' → logprob: -20.250141143798828
    8. '(n' → logprob: -20.250141143798828
    9. '[n' → logprob: -21.125141143798828
    10. '<|end|>' → logprob: -21.750141143798828

Token 766: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058636829257011414
    2. ':
' → logprob: -2.9336369037628174
    3. ':return' → logprob: -6.308636665344238
    4. '       ' → logprob: -6.808636665344238
    5. ' or' → logprob: -7.433636665344238
    6. '   ' → logprob: -8.558636665344238
    7. '<|end|>' → logprob: -11.058636665344238
    8. ':
' → logprob: -12.308636665344238
    9. ' :' → logprob: -12.308636665344238
    10. '           ' → logprob: -12.433636665344238

Token 767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09004157036542892
    2. '       ' → logprob: -2.4650416374206543
    3. 'return' → logprob: -8.090041160583496
    4. '```' → logprob: -8.340041160583496
    5. ':return' → logprob: -8.965041160583496
    6. '   ' → logprob: -9.090041160583496
    7. ' return' → logprob: -9.215041160583496
    8. '<|end|>' → logprob: -9.590041160583496
    9. ':' → logprob: -9.715041160583496
    10. '0' → logprob: -10.090041160583496

Token 768: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015056940028443933
    2. 'return' (adapté à ' return') → logprob: -6.5015058517456055
    3. ' return' → logprob: -13.001505851745605
    4. ' ' → logprob: -14.376505851745605
    5. '       ' → logprob: -15.376505851745605
    6. '           ' → logprob: -15.376505851745605
    7. '```' → logprob: -16.87650489807129
    8. '   ' → logprob: -17.37650489807129
    9. '{return' → logprob: -18.75150489807129
    10. '	return' → logprob: -20.00150489807129

Token 769: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -20.625030517578125
    4. ' ' → logprob: -22.250030517578125
    5. '
' → logprob: -23.125030517578125
    6. '۰' → logprob: -23.125030517578125
    7. '000' → logprob: -23.375030517578125
    8. '  ' → logprob: -24.125030517578125
    9. '```' → logprob: -24.125030517578125
    10. '00' → logprob: -24.375030517578125

Token 770: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -22.25
    4. '۰' → logprob: -22.375
    5. '   ' → logprob: -22.875
    6. '00' → logprob: -23.75
    7. '000' → logprob: -23.75
    8. '
' → logprob: -23.75
    9. '０' → logprob: -24.3125
    10. '  ' → logprob: -25.0

Token 771: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012705412693321705
    2. '   ' → logprob: -4.387705326080322
    3. '<|end|>' → logprob: -9.38770580291748
    4. '    
' → logprob: -10.26270580291748
    5. '```' → logprob: -10.51270580291748
    6. '        
' → logprob: -11.63770580291748
    7. '	' → logprob: -12.01270580291748
    8. '
' → logprob: -12.13770580291748
    9. ')' → logprob: -12.38770580291748
    10. '  
' → logprob: -12.51270580291748

Token 773: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41337117552757263
    2. 'return' (adapté à ' return') → logprob: -1.163371205329895
    3. '   ' → logprob: -3.7883710861206055
    4. 'res' → logprob: -6.9133710861206055
    5. ' return' → logprob: -6.9133710861206055
    6. 'if' → logprob: -7.0383710861206055
    7. 'result' → logprob: -8.163371086120605
    8. 'ret' → logprob: -8.788371086120605
    9. 'r' → logprob: -10.038371086120605
    10. '	return' → logprob: -10.413371086120605

Token 774: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.005361940711736679
    2. ' fact' → logprob: -5.255362033843994
    3. '(f' → logprob: -9.380361557006836
    4. ' (' → logprob: -10.505361557006836
    5. '_fact' → logprob: -12.255361557006836
    6. 'factor' → logprob: -12.505361557006836
    7. '(' → logprob: -13.380361557006836
    8. '.fact' → logprob: -13.630361557006836
    9. 'Fact' → logprob: -13.755361557006836
    10. '   ' → logprob: -13.880361557006836

Token 775: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.375000953674316
    3. '[r' → logprob: -16.75
    4. '[' → logprob: -17.25
    5. '	n' → logprob: -20.25
    6. '[N' → logprob: -20.875
    7. '[m' → logprob: -21.375
    8. '```' → logprob: -22.25
    9. '[f' → logprob: -22.5
    10. '(n' → logprob: -22.75

Token 776: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005075671710073948
    2. '[n' → logprob: -5.630075454711914
    3. '[r' → logprob: -6.630075454711914
    4. '[i' → logprob: -9.505075454711914
    5. '[' → logprob: -10.130075454711914
    6. ']*' → logprob: -10.380075454711914
    7. '   ' → logprob: -12.380075454711914
    8. '[
' → logprob: -13.880075454711914
    9. '[x' → logprob: -14.630075454711914
    10. '```' → logprob: -14.755075454711914

Token 777: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3876948952674866
    2. ' *' → logprob: -1.1376948356628418
    3. '   ' → logprob: -7.137694835662842
    4. ' ' → logprob: -11.3876953125
    5. '
' → logprob: -12.2626953125
    6. '**' → logprob: -12.7626953125
    7. ' ' → logprob: -12.7626953125
    8. '```' → logprob: -13.2626953125
    9. '    ' → logprob: -13.5126953125
    10. '[' → logprob: -14.0126953125

Token 778: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0012957158032804728
    2. '(inv' → logprob: -6.876295566558838
    3. ' inv' → logprob: -8.251296043395996
    4. '(' → logprob: -13.501296043395996
    5. '   ' → logprob: -15.376296043395996
    6. ' (' → logprob: -16.12629508972168
    7. '_inv' → logprob: -16.50129508972168
    8. '((' → logprob: -17.50129508972168
    9. '.inv' → logprob: -17.75129508972168
    10. '(in' → logprob: -17.75129508972168

Token 779: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -1.306760805164231e-05
    2. '_fac' → logprob: -11.50001335144043
    3. '_' → logprob: -13.62501335144043
    4. 'fact' → logprob: -13.87501335144043
    5. '_f' → logprob: -14.75001335144043
    6. '_factor' → logprob: -16.00001335144043
    7. '_inv' → logprob: -16.87501335144043
    8. '
' → logprob: -17.12501335144043
    9. ''_' → logprob: -17.12501335144043
    10. '```' → logprob: -17.50001335144043

Token 780: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -7.73183855926618e-05
    2. 'r' → logprob: -9.500077247619629
    3. '[n' → logprob: -13.375077247619629
    4. '[' → logprob: -14.375077247619629
    5. '	r' → logprob: -16.000078201293945
    6. '```' → logprob: -16.625078201293945
    7. '(r' → logprob: -17.000078201293945
    8. '   ' → logprob: -18.875078201293945
    9. '
' → logprob: -19.250078201293945
    10. ' [' → logprob: -19.250078201293945

Token 781: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001405232702381909
    2. '%' → logprob: -6.751405239105225
    3. '*' → logprob: -9.376404762268066
    4. ']%' → logprob: -9.501404762268066
    5. '}' → logprob: -10.626404762268066
    6. ' ]' → logprob: -11.251404762268066
    7. ']*' → logprob: -11.251404762268066
    8. ')' → logprob: -11.501404762268066
    9. ' *' → logprob: -12.001404762268066
    10. ' %' → logprob: -12.126404762268066

Token 782: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.017791660502552986
    2. '*' → logprob: -4.392791748046875
    3. '   ' → logprob: -5.767791748046875
    4. '%' → logprob: -6.892791748046875
    5. '<|end|>' → logprob: -7.017791748046875
    6. ' %' → logprob: -9.642791748046875
    7. '       ' → logprob: -9.642791748046875
    8. '```' → logprob: -10.767791748046875
    9. ')' → logprob: -11.392791748046875
    10. ' ' → logprob: -11.392791748046875

Token 783: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.3544423381972592e-05
    2. ' mod' → logprob: -11.25001335144043
    3. '998' → logprob: -14.87501335144043
    4. '(mod' → logprob: -16.37501335144043
    5. 'fact' → logprob: -16.87501335144043
    6. '	mod' → logprob: -19.25001335144043
    7. 'm' → logprob: -19.50001335144043
    8. '
' → logprob: -20.25001335144043
    9. '```' → logprob: -20.37501335144043
    10. 'moder' → logprob: -20.50001335144043

Token 784: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20496734976768494
    2. '<|end|>' → logprob: -1.9549673795700073
    3. '   ' → logprob: -3.7049672603607178
    4. '*' → logprob: -4.454967498779297
    5. '       ' → logprob: -5.704967498779297
    6. '```' → logprob: -6.829967498779297
    7. ' ' → logprob: -7.579967498779297
    8. '    ' → logprob: -7.829967498779297
    9. ' 
' → logprob: -7.954967498779297
    10. ')' → logprob: -8.079967498779297

Token 785: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0003971839905716479
    2. ' inv' → logprob: -7.875397205352783
    3. '(inv' → logprob: -11.000396728515625
    4. '   ' → logprob: -15.375396728515625
    5. '_inv' → logprob: -17.250396728515625
    6. '```' → logprob: -17.875396728515625
    7. '(' → logprob: -18.000396728515625
    8. '       ' → logprob: -18.125396728515625
    9. '
' → logprob: -18.250396728515625
    10. 'inf' → logprob: -18.375396728515625

Token 786: '_fact' (ID: 111916)
  Prédit: '_fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fact' → logprob: -3.35706390615087e-05
    2. '_fac' → logprob: -10.500033378601074
    3. 'fact' → logprob: -12.250033378601074
    4. '_f' → logprob: -14.875033378601074
    5. '_' → logprob: -15.500033378601074
    6. '_inv' → logprob: -15.625033378601074
    7. 'Fact' → logprob: -16.37503433227539
    8. '_FACT' → logprob: -16.37503433227539
    9. '_factor' → logprob: -16.50003433227539
    10. '_prob' → logprob: -17.00003433227539

Token 787: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01417115144431591
    2. '[r' → logprob: -4.264171123504639
    3. '[' → logprob: -11.889171600341797
    4. '[
' → logprob: -14.639171600341797
    5. ' [' → logprob: -15.764171600341797
    6. 'n' → logprob: -16.639171600341797
    7. '   ' → logprob: -16.639171600341797
    8. '[(' → logprob: -17.639171600341797
    9. '[[' → logprob: -18.264171600341797
    10. 'r' → logprob: -18.389171600341797

Token 788: ' -' (ID: 533)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.026668090373277664
    2. '[n' → logprob: -3.776668071746826
    3. '[' → logprob: -6.026668071746826
    4. '-r' → logprob: -7.026668071746826
    5. '[-' → logprob: -10.526668548583984
    6. 'r' → logprob: -10.651668548583984
    7. '-' → logprob: -11.276668548583984
    8. ']' → logprob: -11.526668548583984
    9. '[
' → logprob: -11.776668548583984
    10. ' -' → logprob: -11.901668548583984

Token 789: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5048530030981055e-06
    2. ' r' → logprob: -13.500001907348633
    3. '	r' → logprob: -19.625001907348633
    4. '[r' → logprob: -19.750001907348633
    5. '   ' → logprob: -20.625001907348633
    6. '
' → logprob: -23.250001907348633
    7. '­r' → logprob: -23.750001907348633
    8. '_r' → logprob: -24.000001907348633
    9. '$r' → logprob: -24.500001907348633
    10. '
' → logprob: -24.500001907348633

Token 790: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.349075556499884e-05
    2. ' ]' → logprob: -10.2500638961792
    3. ']%' → logprob: -10.5000638961792
    4. '']' → logprob: -15.2500638961792
    5. ']
' → logprob: -15.5000638961792
    6. 'r' → logprob: -17.000062942504883
    7. 's' → logprob: -17.250062942504883
    8. '}' → logprob: -17.875062942504883
    9. '[' → logprob: -17.875062942504883
    10. '%' → logprob: -18.000062942504883

Token 791: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1277300864458084
    2. '%' → logprob: -2.127730131149292
    3. '   ' → logprob: -8.127730369567871
    4. ')' → logprob: -9.002730369567871
    5. '[' → logprob: -9.377730369567871
    6. '<|end|>' → logprob: -9.377730369567871
    7. ' ' → logprob: -10.377730369567871
    8. ' ' → logprob: -10.627730369567871
    9. ' %
' → logprob: -10.877730369567871
    10. '	' → logprob: -10.877730369567871

Token 792: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.842555426876061e-06
    2. ' mod' → logprob: -12.250004768371582
    3. '(mod' → logprob: -21.0000057220459
    4. '	mod' → logprob: -21.7500057220459
    5. '```' → logprob: -23.5000057220459
    6. 'moder' → logprob: -23.6250057220459
    7. 'modal' → logprob: -24.0000057220459
    8. ' мод' → logprob: -24.2500057220459
    9. ' ' → logprob: -24.2500057220459
    10. '_mod' → logprob: -24.7500057220459

Token 793: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08144163340330124
    2. 'result' → logprob: -2.581441640853882
    3. '    
' → logprob: -6.206441402435303
    4. '
' → logprob: -8.706441879272461
    5. 'res' → logprob: -9.081441879272461
    6. '```' → logprob: -9.206441879272461
    7. ' result' → logprob: -9.331441879272461
    8. 'sum' → logprob: -11.206441879272461
    9. '  
' → logprob: -11.706441879272461
    10. '   
' → logprob: -11.956441879272461

Token 795: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.009488075040280819
    2. 'res' → logprob: -4.759488105773926
    3. '   ' → logprob: -7.634488105773926
    4. 'answer' → logprob: -8.384488105773926
    5. 'ans' → logprob: -9.759488105773926
    6. 'rés' → logprob: -9.884488105773926
    7. 'total' → logprob: -10.259488105773926
    8. 's' → logprob: -12.634488105773926
    9. 'r' → logprob: -12.759488105773926
    10. 'results' → logprob: -13.134488105773926

Token 796: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018868695944547653
    2. 'res' → logprob: -4.143868923187256
    3. 'answer' → logprob: -6.268868923187256
    4. 'ans' → logprob: -7.143868923187256
    5. 'total' → logprob: -9.893868446350098
    6. 'rés' → logprob: -10.018868446350098
    7. '   ' → logprob: -10.643868446350098
    8. ' result' → logprob: -12.018868446350098
    9. 'ret' → logprob: -12.143868446350098
    10. 'r' → logprob: -12.893868446350098

Token 797: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2808358669281006
    2. '   ' → logprob: -1.9058358669281006
    3. ' result' → logprob: -2.4058358669281006
    4. 'res' → logprob: -5.90583610534668
    5. 'total' → logprob: -7.53083610534668
    6. ' ans' → logprob: -7.78083610534668
    7. 's' → logprob: -7.90583610534668
    8. 'ans' → logprob: -8.03083610534668
    9. 'answer' → logprob: -8.15583610534668
    10. 'r' → logprob: -8.65583610534668

Token 798: ' la' (ID: 557)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05761779844760895
    2. 'res' → logprob: -3.0576179027557373
    3. ' result' → logprob: -5.307617664337158
    4. 'answer' → logprob: -5.932617664337158
    5. 'ans' → logprob: -6.807617664337158
    6. ' res' → logprob: -9.557618141174316
    7. ' answer' → logprob: -10.182618141174316
    8. 'rés' → logprob: -10.307618141174316
    9. 'r' → logprob: -10.432618141174316
    10. 'total' → logprob: -10.682618141174316

Token 799: ' somme' (ID: 64484)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.017301347106695175
    2. 'res' → logprob: -4.142301559448242
    3. 'rés' → logprob: -7.267301559448242
    4. 'answer' → logprob: -8.017301559448242
    5. ' result' → logprob: -8.767301559448242
    6. 'ans' → logprob: -10.142301559448242
    7. 'r' → logprob: -11.392301559448242
    8. 's' → logprob: -12.017301559448242
    9. 'total' → logprob: -12.017301559448242
    10. 'resultado' → logprob: -12.142301559448242

Token 800: ' altern' (ID: 7310)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05517800152301788
    2. 'res' → logprob: -3.805177927017212
    3. ' result' → logprob: -4.180178165435791
    4. '   ' → logprob: -4.305178165435791
    5. 'total' → logprob: -6.555178165435791
    6. ' res' → logprob: -8.555177688598633
    7. 's' → logprob: -8.680177688598633
    8. ' =' → logprob: -8.805177688598633
    9. '```' → logprob: -8.805177688598633
    10. 'ans' → logprob: -8.930177688598633

Token 801: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7337802052497864
    2. '   ' → logprob: -0.9837802052497864
    3. 'atoire' → logprob: -2.4837801456451416
    4. 'ée' → logprob: -3.2337801456451416
    5. '#' → logprob: -4.233780384063721
    6. 'a' → logprob: -5.858780384063721
    7. 'ative' → logprob: -6.608780384063721
    8. 'ance' → logprob: -6.858780384063721
    9. 'ate' → logprob: -7.108780384063721
    10. 'ante' → logprob: -7.483780384063721

Token 802: ' selon' (ID: 27571)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13991722464561462
    2. 'res' → logprob: -2.2649171352386475
    3. ' result' → logprob: -4.264917373657227
    4. '   ' → logprob: -4.764917373657227
    5. 'total' → logprob: -6.139917373657227
    6. ' res' → logprob: -7.514917373657227
    7. 's' → logprob: -8.264917373657227
    8. '
' → logprob: -8.264917373657227
    9. 'ans' → logprob: -8.264917373657227
    10. 'answer' → logprob: -8.639917373657227

Token 803: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8101788759231567
    2. 'k' → logprob: -0.8101788759231567
    3. 'M' → logprob: -3.435178756713867
    4. 'l' → logprob: -3.560178756713867
    5. 'j' → logprob: -4.185178756713867
    6. 'la' → logprob: -4.185178756713867
    7. 'range' → logprob: -4.560178756713867
    8. 'le' → logprob: -6.185178756713867
    9. 'r' → logprob: -6.185178756713867
    10. 'm' → logprob: -6.935178756713867

Token 804: ' formule' (ID: 84316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6867346167564392
    2. 'range' → logprob: -0.8117346167564392
    3. 'form' → logprob: -4.311734676361084
    4. '#' → logprob: -4.436734676361084
    5. 's' → logprob: -4.811734676361084
    6. 'sum' → logprob: -5.686734676361084
    7. 'formula' → logprob: -5.936734676361084
    8. '
' → logprob: -6.436734676361084
    9. 'M' → logprob: -6.436734676361084
    10. 'def' → logprob: -6.936734676361084

Token 805: ' donnée' (ID: 130126)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11161629855632782
    2. '   ' → logprob: -2.986616373062134
    3. 'res' → logprob: -2.986616373062134
    4. 'total' → logprob: -5.986616134643555
    5. ' result' → logprob: -7.611616134643555
    6. 'ans' → logprob: -7.736616134643555
    7. 's' → logprob: -7.736616134643555
    8. 'answer' → logprob: -7.986616134643555
    9. 'r' → logprob: -8.861616134643555
    10. '```' → logprob: -8.861616134643555

Token 806: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07241126149892807
    2. '   ' → logprob: -2.947411298751831
    3. 'res' → logprob: -4.572411060333252
    4. ' result' → logprob: -5.197411060333252
    5. 'total' → logprob: -6.947411060333252
    6. '
' → logprob: -8.57241153717041
    7. 'sum' → logprob: -9.44741153717041
    8. 's' → logprob: -10.07241153717041
    9. ' res' → logprob: -10.07241153717041
    10. '```' → logprob: -10.07241153717041

Token 807: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.29697367548942566
    2. '   ' → logprob: -1.796973705291748
    3. ' result' → logprob: -3.046973705291748
    4. 'res' → logprob: -3.421973705291748
    5. ' res' → logprob: -4.796973705291748
    6. 's' → logprob: -7.296973705291748
    7. 'total' → logprob: -7.671973705291748
    8. ' for' → logprob: -8.29697322845459
    9. 'sum' → logprob: -8.54697322845459
    10. 'for' → logprob: -8.54697322845459

Token 808: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.00900711677968502
    2. 'res' → logprob: -4.759006977081299
    3. '   ' → logprob: -8.884007453918457
    4. 'total' → logprob: -9.134007453918457
    5. 'answer' → logprob: -9.634007453918457
    6. ' result' → logprob: -10.134007453918457
    7. 'ans' (adapté à ' ans') → logprob: -10.759007453918457
    8. 'rés' → logprob: -11.634007453918457
    9. 's' → logprob: -12.009007453918457
    10. 'r' → logprob: -13.759007453918457

Token 809: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008619539439678192
    2. '=' → logprob: -4.75861930847168
    3. '   ' → logprob: -13.50861930847168
    4. '_' → logprob: -13.88361930847168
    5. ' ' → logprob: -14.00861930847168
    6. ' +=' → logprob: -14.88361930847168
    7. ',' → logprob: -14.88361930847168
    8. '  ' → logprob: -15.00861930847168
    9. ' =
' → logprob: -15.38361930847168
    10. 's' → logprob: -16.00861930847168

Token 810: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009505256894044578
    2. ' ' → logprob: -7.000950336456299
    3. '1' → logprob: -10.625950813293457
    4. '(' → logprob: -12.000950813293457
    5. '   ' → logprob: -12.375950813293457
    6. 'pow' → logprob: -12.750950813293457
    7. ' (' → logprob: -15.500950813293457
    8. '```' → logprob: -15.563450813293457
    9. ' ' → logprob: -15.688450813293457
    10. ' pow' → logprob: -16.50094985961914

Token 811: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023250321100931615
    2. '1' → logprob: -9.250232696533203
    3. 'pow' → logprob: -9.625232696533203
    4. '(' → logprob: -10.125232696533203
    5. 'fact' → logprob: -11.250232696533203
    6. 'sum' → logprob: -11.750232696533203
    7. ' ' → logprob: -13.250232696533203
    8. 'ans' → logprob: -13.500232696533203
    9. '(pow' → logprob: -14.000232696533203
    10. '```' → logprob: -14.187732696533203

Token 812: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8069853186607361
    2. '   ' → logprob: -1.3069853782653809
    3. ' for' → logprob: -1.8069853782653809
    4. 'for' → logprob: -2.931985378265381
    5. '<|end|>' → logprob: -3.056985378265381
    6. '    
' → logprob: -5.056985378265381
    7. ',' → logprob: -5.931985378265381
    8. '+' → logprob: -6.181985378265381
    9. ' 
' → logprob: -6.556985378265381
    10. '[' → logprob: -7.056985378265381

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2716567814350128
    2. ' for' → logprob: -1.6466567516326904
    3. 'for' → logprob: -3.1466567516326904
    4. '
' → logprob: -6.2716569900512695
    5. '	for' → logprob: -8.89665699005127
    6. '    
' → logprob: -9.27165699005127
    7. ' 
' → logprob: -11.02165699005127
    8. ',' → logprob: -11.27165699005127
    9. '<|end|>' → logprob: -11.64665699005127
    10. ' ' → logprob: -11.77165699005127

Token 814: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.041527099907398224
    2. ' for' → logprob: -3.291527032852173
    3. '   ' → logprob: -5.666527271270752
    4. 'i' → logprob: -11.541526794433594
    5. '	for' → logprob: -12.291526794433594
    6. ' i' → logprob: -13.291526794433594
    7. '
' → logprob: -13.541526794433594
    8. '```' → logprob: -13.791526794433594
    9. ' ' → logprob: -14.041526794433594
    10. '    
' → logprob: -15.666526794433594

Token 815: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28763875365257263
    2. 'k' → logprob: -1.412638783454895
    3. 'j' → logprob: -5.7876386642456055
    4. 'x' → logprob: -6.7876386642456055
    5. 'r' → logprob: -7.1626386642456055
    6. 'a' → logprob: -7.6626386642456055
    7. 'd' → logprob: -7.9126386642456055
    8. ' i' → logprob: -8.162638664245605
    9. 's' → logprob: -9.287638664245605
    10. ' k' → logprob: -9.412638664245605

Token 816: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02652820758521557
    2. 'in' → logprob: -3.6515281200408936
    3. ' ' → logprob: -8.651528358459473
    4. '	in' → logprob: -11.151528358459473
    5. ' i' → logprob: -11.651528358459473
    6. '0' → logprob: -12.026528358459473
    7. ' ,' → logprob: -12.651528358459473
    8. ',' → logprob: -12.776528358459473
    9. 'In' → logprob: -13.276528358459473
    10. '1' → logprob: -13.276528358459473

Token 817: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717267446219921
    2. ' range' → logprob: -5.006717205047607
    3. '(range' → logprob: -13.881717681884766
    4. '0' → logprob: -14.256717681884766
    5. 'r' → logprob: -16.256717681884766
    6. 'rang' → logprob: -16.506717681884766
    7. '	range' → logprob: -16.756717681884766
    8. ' ' → logprob: -17.381717681884766
    9. '   ' → logprob: -17.881717681884766
    10. 'M' → logprob: -17.881717681884766

Token 818: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.9816749691963196
    2. '(N' → logprob: -1.1066749095916748
    3. '(' → logprob: -1.2316749095916748
    4. '(i' → logprob: -6.106675148010254
    5. '0' → logprob: -8.106675148010254
    6. '(K' → logprob: -9.606675148010254
    7. '((' → logprob: -10.106675148010254
    8. '(n' → logprob: -10.231675148010254
    9. '(
' → logprob: -10.231675148010254
    10. '(L' → logprob: -10.731675148010254

Token 819: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12806187570095062
    2. ' +' → logprob: -2.1280617713928223
    3. '   ' → logprob: -7.253061771392822
    4. '):
' → logprob: -8.75306224822998
    5. '):' → logprob: -9.00306224822998
    6. ',' → logprob: -9.12806224822998
    7. '1' → logprob: -11.75306224822998
    8. ')' → logprob: -12.00306224822998
    9. '+
' → logprob: -12.00306224822998
    10. '
' → logprob: -13.12806224822998

Token 820: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002624086628202349
    2. ' ' → logprob: -8.250262260437012
    3. '
' → logprob: -14.625262260437012
    4. '   ' → logprob: -15.375262260437012
    5. '2' → logprob: -15.625262260437012
    6. '+' → logprob: -16.875263214111328
    7. '```' → logprob: -17.000263214111328
    8. '0' → logprob: -17.250263214111328
    9. '  ' → logprob: -17.812763214111328
    10. ')' → logprob: -18.750263214111328

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '
' → logprob: -15.875007629394531
    4. '2' → logprob: -16.62500762939453
    5. '   ' → logprob: -16.62500762939453
    6. '```' → logprob: -16.75000762939453
    7. 'M' → logprob: -17.37500762939453
    8. 'i' → logprob: -17.50000762939453
    9. '+' → logprob: -17.93750762939453
    10. '0' → logprob: -18.18750762939453

Token 822: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10040916502475739
    2. '):' → logprob: -2.3504092693328857
    3. '):
' → logprob: -9.225409507751465
    4. ')' → logprob: -10.100409507751465
    5. '   ' → logprob: -10.225409507751465
    6. ':' → logprob: -10.850409507751465
    7. ':
' → logprob: -13.475409507751465
    8. '):

' → logprob: -13.600409507751465
    9. '+' → logprob: -13.725409507751465
    10. ' ):
' → logprob: -13.975409507751465

Token 823: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030817187507636845
    2. '   ' → logprob: -9.0003080368042
    3. '	   ' → logprob: -9.8753080368042
    4. '<|end|>' → logprob: -10.7503080368042
    5. '```' → logprob: -10.8753080368042
    6. '        
' → logprob: -11.2503080368042
    7. '[' → logprob: -11.5003080368042
    8. '    ' → logprob: -11.5003080368042
    9. ':' → logprob: -11.7503080368042
    10. ',' → logprob: -12.0003080368042

Token 824: ' #' (ID: 1069)
  Prédit: ' sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sign' → logprob: -0.6841555833816528
    2. 'sign' → logprob: -0.9341555833816528
    3. '       ' → logprob: -3.6841554641723633
    4. ' if' → logprob: -4.309155464172363
    5. 'tmp' → logprob: -4.434155464172363
    6. 'term' → logprob: -4.809155464172363
    7. ' s' → logprob: -5.309155464172363
    8. 'temp' → logprob: -5.309155464172363
    9. 'coef' → logprob: -5.434155464172363
    10. 'val' → logprob: -5.559155464172363

Token 825: ' Pour' (ID: 13931)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.24888908863067627
    2. 'term' → logprob: -2.4988889694213867
    3. 'val' → logprob: -2.6238889694213867
    4. 'tmp' → logprob: -3.7488889694213867
    5. 'temp' → logprob: -4.248888969421387
    6. 'coef' → logprob: -4.748888969421387
    7. ' sign' → logprob: -5.248888969421387
    8. 's' → logprob: -5.498888969421387
    9. 'c' → logprob: -6.498888969421387
    10. 'coeff' → logprob: -6.498888969421387

Token 826: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.43290960788726807
    2. 'i' → logprob: -1.432909607887268
    3. ' j' → logprob: -2.5579094886779785
    4. 'j' → logprob: -3.8079094886779785
    5. ' s' → logprob: -5.3079094886779785
    6. ' ans' → logprob: -6.4329094886779785
    7. 'ans' → logprob: -6.9329094886779785
    8. 's' → logprob: -7.0579094886779785
    9. ' ' → logprob: -7.3079094886779785
    10. '   ' → logprob: -8.057909965515137

Token 827: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18104073405265808
    2. 'i' → logprob: -1.8060407638549805
    3. '   ' → logprob: -7.4310407638549805
    4. ' ' → logprob: -7.9310407638549805
    5. '	i' → logprob: -9.43104076385498
    6. '    ' → logprob: -10.43104076385498
    7. ' ' → logprob: -10.68104076385498
    8. '  ' → logprob: -10.68104076385498
    9. ' 
' → logprob: -10.68104076385498
    10. '    
' → logprob: -10.80604076385498

Token 828: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6295098066329956
    2. '       ' → logprob: -1.5045098066329956
    3. ',' → logprob: -2.504509925842285
    4. '   ' → logprob: -2.629509925842285
    5. ':
' → logprob: -2.629509925842285
    6. ' :' → logprob: -4.504509925842285
    7. ' :
' → logprob: -6.129509925842285
    8. ' ,' → logprob: -7.004509925842285
    9. '):
' → logprob: -7.129509925842285
    10. '           ' → logprob: -7.254509925842285

Token 829: ' on' (ID: 402)
  Prédit: ' sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sign' → logprob: -1.5743106603622437
    2. ' term' → logprob: -1.6993106603622437
    3. ' c' → logprob: -1.9493106603622437
    4. ' comb' → logprob: -2.574310779571533
    5. '       ' → logprob: -2.699310779571533
    6. ' val' → logprob: -2.949310779571533
    7. ' temp' → logprob: -3.074310779571533
    8. 'sign' → logprob: -3.074310779571533
    9. 'term' → logprob: -3.199310779571533
    10. ' tmp' → logprob: -3.824310779571533

Token 830: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1625306606292725
    2. ' for' → logprob: -1.7875306606292725
    3. 'for' → logprob: -2.2875306606292725
    4. '       ' → logprob: -2.4125306606292725
    5. ' comb' → logprob: -2.4125306606292725
    6. 'comb' → logprob: -3.0375306606292725
    7. '    ' → logprob: -3.6625306606292725
    8. ' =' → logprob: -3.6625306606292725
    9. 's' → logprob: -3.7875306606292725
    10. 'ans' → logprob: -4.162530899047852

Token 831: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00021629150433000177
    2. 'cule' → logprob: -9.250216484069824
    3. 'le' → logprob: -10.375216484069824
    4. '   ' → logprob: -11.125216484069824
    5. 'ulate' → logprob: -11.125216484069824
    6. '=' → logprob: -11.250216484069824
    7. '       ' → logprob: -11.250216484069824
    8. '```' → logprob: -12.125216484069824
    9. 'ul' → logprob: -12.250216484069824
    10. 'l' → logprob: -12.500216484069824

Token 832: ' le' (ID: 505)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.1522856950759888
    2. ' term' → logprob: -2.152285575866699
    3. '       ' → logprob: -2.277285575866699
    4. 'term' → logprob: -2.652285575866699
    5. '(-' → logprob: -2.902285575866699
    6. ' (' → logprob: -3.152285575866699
    7. ' temp' → logprob: -3.402285575866699
    8. 'temp' → logprob: -3.652285575866699
    9. ' (-' → logprob: -3.652285575866699
    10. 'comb' → logprob: -3.777285575866699

Token 833: ' terme' (ID: 42959)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.5789243578910828
    2. 'comb' → logprob: -2.4539244174957275
    3. 'val' → logprob: -2.7039244174957275
    4. 'tmp' → logprob: -2.9539244174957275
    5. 'coef' → logprob: -3.0789244174957275
    6. 'coeff' → logprob: -3.2039244174957275
    7. '(-' → logprob: -3.2039244174957275
    8. 'c' → logprob: -3.3289244174957275
    9. 'temp' → logprob: -3.8289244174957275
    10. 'sign' → logprob: -3.9539244174957275

Token 834: ' selon' (ID: 27571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37301284074783325
    2. ' =' → logprob: -1.6230127811431885
    3. '=' → logprob: -2.4980127811431885
    4. '   ' → logprob: -5.373013019561768
    5. 'term' → logprob: -5.373013019561768
    6. ' term' → logprob: -5.873013019561768
    7. 'ans' → logprob: -5.998013019561768
    8. ',' → logprob: -5.998013019561768
    9. ' s' → logprob: -6.248013019561768
    10. '        ' → logprob: -6.373013019561768

Token 835: ' la' (ID: 557)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.037365436553955
    2. ' (-' → logprob: -1.412365436553955
    3. ' (' → logprob: -1.787365436553955
    4. '       ' → logprob: -2.787365436553955
    5. '(i' → logprob: -3.162365436553955
    6. ' i' → logprob: -3.412365436553955
    7. '(' → logprob: -3.412365436553955
    8. '((-' → logprob: -4.162365436553955
    9. '((' → logprob: -4.412365436553955
    10. 'i' → logprob: -4.412365436553955

Token 836: ' formule' (ID: 84316)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.1949404925107956
    2. '((-' → logprob: -2.5699405670166016
    3. '(' → logprob: -3.1949405670166016
    4. 'pow' → logprob: -4.069940567016602
    5. '(
' → logprob: -4.569940567016602
    6. '(i' → logprob: -4.569940567016602
    7. '((' → logprob: -4.694940567016602
    8. 'comb' → logprob: -4.819940567016602
    9. ' (-' → logprob: -6.569940567016602
    10. 'i' → logprob: -6.569940567016602

Token 837: ' :
' (ID: 10039)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022596294060349464
    2. ':' → logprob: -4.39759635925293
    3. '   ' → logprob: -5.39759635925293
    4. ',' → logprob: -5.89759635925293
    5. ' :' → logprob: -7.39759635925293
    6. ' =' → logprob: -7.77259635925293
    7. '=' → logprob: -8.27259635925293
    8. '        
' → logprob: -8.27259635925293
    9. '           ' → logprob: -8.52259635925293
    10. ':
' → logprob: -9.14759635925293

Token 838: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017203854396939278
    2. 'term' → logprob: -4.7672038078308105
    3. ' term' → logprob: -5.1422038078308105
    4. '   ' → logprob: -7.1422038078308105
    5. ' s' → logprob: -8.267204284667969
    6. '```' → logprob: -8.267204284667969
    7. ' for' → logprob: -8.517204284667969
    8. '        
' → logprob: -9.267204284667969
    9. 't' → logprob: -9.392204284667969
    10. '        ' → logprob: -9.517204284667969

Token 839: ' #' (ID: 1069)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.8629270792007446
    2. 'sign' → logprob: -1.1129270792007446
    3. '       ' → logprob: -2.237926959991455
    4. ' term' → logprob: -3.237926959991455
    5. ' sign' → logprob: -3.362926959991455
    6. 'coef' → logprob: -4.487926959991455
    7. ' comb' → logprob: -4.862926959991455
    8. 'temp' → logprob: -4.987926959991455
    9. 'coeff' → logprob: -4.987926959991455
    10. 'comb' → logprob: -5.112926959991455

Token 840: ' (-' (ID: 21382)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0332452058792114
    2. 'term' → logprob: -1.2832452058792114
    3. '       ' → logprob: -2.533245086669922
    4. ' sign' → logprob: -3.158245086669922
    5. 'coef' → logprob: -3.158245086669922
    6. 'c' → logprob: -3.283245086669922
    7. 'comb' → logprob: -3.408245086669922
    8. 'val' → logprob: -3.658245086669922
    9. 'coeff' → logprob: -3.908245086669922
    10. ' c' → logprob: -4.158245086669922

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. 'pow' → logprob: -13.62500286102295
    3. '   ' → logprob: -14.50000286102295
    4. ')' → logprob: -14.87500286102295
    5. '(' → logprob: -15.12500286102295
    6. ' ' → logprob: -15.50000286102295
    7. 'i' → logprob: -15.62500286102295
    8. 'int' → logprob: -17.125001907348633
    9. ' (' → logprob: -17.375001907348633
    10. '       ' → logprob: -17.562501907348633

Token 842: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017075657844543457
    2. ')**' → logprob: -4.142075538635254
    3. ' )' → logprob: -7.142075538635254
    4. '**' → logprob: -8.892075538635254
    5. '1' → logprob: -10.142075538635254
    6. ')^' → logprob: -10.517075538635254
    7. ' ' → logprob: -10.767075538635254
    8. '   ' → logprob: -12.017075538635254
    9. ')
' → logprob: -12.267075538635254
    10. ')*' → logprob: -12.392075538635254

Token 843: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020389800192788243
    2. ' i' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.750204086303711
    4. '	i' → logprob: -16.25020408630371
    5. '
' → logprob: -16.75020408630371
    6. '```' → logprob: -16.75020408630371
    7. '<|end|>' → logprob: -17.75020408630371
    8. ' ' → logprob: -17.87520408630371
    9. '*i' → logprob: -18.37520408630371
    10. '(i' → logprob: -18.37520408630371

Token 844: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0003613256849348545
    2. ' ' → logprob: -9.000361442565918
    3. '*' → logprob: -9.125361442565918
    4. '   ' → logprob: -9.375361442565918
    5. ' ' → logprob: -10.750361442565918
    6. '       ' → logprob: -11.875361442565918
    7. ',' → logprob: -12.250361442565918
    8. '  ' → logprob: -12.625361442565918
    9. '    ' → logprob: -12.750361442565918
    10. ' ,' → logprob: -13.500361442565918

Token 845: ' C' (ID: 363)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0003559615579433739
    2. ' comb' → logprob: -8.12535572052002
    3. 'pow' → logprob: -9.87535572052002
    4. 'com' → logprob: -12.87535572052002
    5. 'fact' → logprob: -13.00035572052002
    6. '   ' → logprob: -14.37535572052002
    7. 'Comb' → logprob: -14.50035572052002
    8. 'comm' → logprob: -14.87535572052002
    9. 'ans' → logprob: -15.37535572052002
    10. '(' → logprob: -15.50035572052002

Token 846: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2098255306482315
    2. 'N' → logprob: -1.7098255157470703
    3. '(M' → logprob: -5.20982551574707
    4. 'M' → logprob: -5.95982551574707
    5. '(' → logprob: -8.95982551574707
    6. 'n' → logprob: -9.33482551574707
    7. '(n' → logprob: -9.95982551574707
    8. ' N' → logprob: -10.70982551574707
    9. ' (' → logprob: -11.58482551574707
    10. '[N' → logprob: -12.08482551574707

Token 847: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4373323917388916
    2. ',i' → logprob: -1.0623323917388916
    3. 'i' → logprob: -5.5623321533203125
    4. ',N' → logprob: -6.4373321533203125
    5. ' ,' → logprob: -7.4373321533203125
    6. '   ' → logprob: -7.4373321533203125
    7. '(i' → logprob: -7.9373321533203125
    8. '','' → logprob: -7.9373321533203125
    9. ')' → logprob: -8.187332153320312
    10. ' i' → logprob: -8.812332153320312

Token 848: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012725738633889705
    2. ' i' → logprob: -9.000126838684082
    3. '<|end|>' → logprob: -13.375126838684082
    4. ')i' → logprob: -13.875126838684082
    5. '	i' → logprob: -14.875126838684082
    6. '   ' → logprob: -15.125126838684082
    7. ')' → logprob: -15.625126838684082
    8. '
' → logprob: -15.875126838684082
    9. '```' → logprob: -16.0001277923584
    10. '{i' → logprob: -16.6251277923584

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021796036162413657
    2. '   ' → logprob: -9.125218391418457
    3. ')
' → logprob: -9.875218391418457
    4. ' )' → logprob: -10.500218391418457
    5. ',' → logprob: -11.750218391418457
    6. ')*' → logprob: -12.500218391418457
    7. '*' → logprob: -12.750218391418457
    8. '```' → logprob: -12.750218391418457
    9. '       ' → logprob: -13.125218391418457
    10. ' *' → logprob: -13.625218391418457

Token 850: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02732565440237522
    2. '       ' → logprob: -3.7773256301879883
    3. '*' → logprob: -5.652325630187988
    4. '   ' → logprob: -7.652325630187988
    5. ' ' → logprob: -11.152325630187988
    6. ')' → logprob: -11.277325630187988
    7. ' ' → logprob: -11.527325630187988
    8. '  ' → logprob: -11.652325630187988
    9. '        ' → logprob: -11.652325630187988
    10. ',' → logprob: -12.027325630187988

Token 851: ' C' (ID: 363)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.23337513208389282
    2. 'comb' → logprob: -2.358375072479248
    3. 'fact' → logprob: -2.858375072479248
    4. 'p' → logprob: -2.983375072479248
    5. '(' → logprob: -6.983375072479248
    6. '(pow' → logprob: -7.108375072479248
    7. '(p' → logprob: -7.108375072479248
    8. ' pow' → logprob: -7.233375072479248
    9. '((' → logprob: -7.858375072479248
    10. '   ' → logprob: -7.983375072479248

Token 852: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0007717476109974086
    2. 'M' → logprob: -7.750771522521973
    3. '(' → logprob: -8.250771522521973
    4. '(N' → logprob: -9.750771522521973
    5. ' (' → logprob: -11.750771522521973
    6. '(
' → logprob: -12.875771522521973
    7. '[M' → logprob: -13.125771522521973
    8. '((' → logprob: -13.375771522521973
    9. '{' → logprob: -13.875771522521973
    10. '   ' → logprob: -14.000771522521973

Token 853: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7643269300460815
    2. ',' → logprob: -1.6393269300460815
    3. 'M' → logprob: -1.7643269300460815
    4. ',i' → logprob: -2.139327049255371
    5. 'N' → logprob: -3.639327049255371
    6. ',M' → logprob: -4.514327049255371
    7. '+' → logprob: -5.639327049255371
    8. ',N' → logprob: -5.764327049255371
    9. 'K' → logprob: -6.264327049255371
    10. '+i' → logprob: -6.514327049255371

Token 854: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016188504174351692
    2. 'N' → logprob: -4.266188621520996
    3. 'M' → logprob: -6.266188621520996
    4. ' i' → logprob: -9.391188621520996
    5. '   ' → logprob: -10.891188621520996
    6. ' ' → logprob: -12.516188621520996
    7. '2' → logprob: -12.516188621520996
    8. ' N' → logprob: -12.766188621520996
    9. '
' → logprob: -13.141188621520996
    10. 'K' → logprob: -13.891188621520996

Token 855: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010139751975657418
    2. ')
' → logprob: -10.125101089477539
    3. '   ' → logprob: -10.500101089477539
    4. ' )' → logprob: -11.125101089477539
    5. '%' → logprob: -12.750101089477539
    6. '*' → logprob: -12.875101089477539
    7. '```' → logprob: -13.375101089477539
    8. '`)' → logprob: -13.875101089477539
    9. ']' → logprob: -14.000101089477539
    10. ')*' → logprob: -14.125101089477539

Token 856: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39489611983299255
    2. ' *' → logprob: -1.144896149635315
    3. '*' → logprob: -5.394896030426025
    4. '   ' → logprob: -5.894896030426025
    5. '<|end|>' → logprob: -8.019896507263184
    6. ')' → logprob: -9.394896507263184
    7. ' ' → logprob: -10.144896507263184
    8. ' ' → logprob: -10.144896507263184
    9. '      ' → logprob: -10.394896507263184
    10. '  ' → logprob: -10.644896507263184

Token 857: ' i' (ID: 575)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5074198246002197
    2. 'pow' → logprob: -1.1324198246002197
    3. 'p' → logprob: -2.6324198246002197
    4. '((' → logprob: -7.632419586181641
    5. '   ' → logprob: -7.632419586181641
    6. '(' → logprob: -7.757419586181641
    7. '(pow' → logprob: -8.00741958618164
    8. ' fact' → logprob: -8.00741958618164
    9. '(p' → logprob: -8.25741958618164
    10. 'factor' → logprob: -8.25741958618164

Token 858: '!' (ID: 0)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3461436629295349
    2. ' *' → logprob: -1.4711437225341797
    3. '**' → logprob: -4.09614372253418
    4. '%' → logprob: -4.22114372253418
    5. '<|end|>' → logprob: -4.59614372253418
    6. '!' → logprob: -5.22114372253418
    7. '   ' → logprob: -5.84614372253418
    8. '```' → logprob: -6.09614372253418
    9. ' ' → logprob: -6.47114372253418
    10. ')' → logprob: -6.59614372253418

Token 859: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6604228019714355
    2. ' *' → logprob: -0.7854228019714355
    3. '   ' → logprob: -4.1604228019714355
    4. '*' → logprob: -4.6604228019714355
    5. '<|end|>' → logprob: -7.0354228019714355
    6. ' ' → logprob: -8.285423278808594
    7. '    ' → logprob: -8.285423278808594
    8. '  ' → logprob: -8.660423278808594
    9. ')' → logprob: -8.660423278808594
    10. '      ' → logprob: -9.035423278808594

Token 860: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.07149996608495712
    2. 'p' → logprob: -2.696500062942505
    3. 'fact' → logprob: -7.446499824523926
    4. '(p' → logprob: -7.946499824523926
    5. '(pow' → logprob: -8.321499824523926
    6. ' pow' → logprob: -9.071499824523926
    7. '(' → logprob: -9.571499824523926
    8. '   ' → logprob: -10.071499824523926
    9. '((' → logprob: -10.196499824523926
    10. 'comb' → logprob: -10.321499824523926

Token 861: 'M' (ID: 44)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5922641754150391
    2. 'p' → logprob: -0.8422641754150391
    3. '(N' → logprob: -4.967264175415039
    4. ' p' → logprob: -6.342264175415039
    5. '   ' → logprob: -6.592264175415039
    6. '(p' → logprob: -6.717264175415039
    7. '(M' → logprob: -6.842264175415039
    8. ' pow' → logprob: -6.967264175415039
    9. '(pow' → logprob: -7.467264175415039
    10. ' (' → logprob: -7.842264175415039

Token 862: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12761519849300385
    2. ' +' → logprob: -2.127615213394165
    3. ' -' → logprob: -8.252614974975586
    4. '   ' → logprob: -8.752614974975586
    5. '-' → logprob: -8.877614974975586
    6. ')' → logprob: -10.752614974975586
    7. '+i' → logprob: -11.127614974975586
    8. '```' → logprob: -11.565114974975586
    9. '<|end|>' → logprob: -11.565114974975586
    10. ')+' → logprob: -11.752614974975586

Token 863: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.52788148727268e-05
    2. '
' → logprob: -10.750064849853516
    3. ' ' → logprob: -10.875064849853516
    4. '```' → logprob: -11.625064849853516
    5. ')' → logprob: -12.250064849853516
    6. '   ' → logprob: -12.375064849853516
    7. '+' → logprob: -12.500064849853516
    8. '`' → logprob: -14.375064849853516
    9. '<|end|>' → logprob: -14.875064849853516
    10. '  ' → logprob: -15.000064849853516

Token 864: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25459760427474976
    2. '-' → logprob: -1.8795976638793945
    3. ' -' → logprob: -2.8795976638793945
    4. ' )' → logprob: -5.2545976638793945
    5. '   ' → logprob: -5.7545976638793945
    6. '-i' → logprob: -6.7545976638793945
    7. '+' → logprob: -7.0045976638793945
    8. '```' → logprob: -7.1295976638793945
    9. ')**' → logprob: -7.1295976638793945
    10. ')^' → logprob: -7.2545976638793945

Token 865: '^(' (ID: 32612)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7858876585960388
    2. '-i' → logprob: -1.1608877182006836
    3. ' -' → logprob: -2.0358877182006836
    4. 'pow' → logprob: -3.5358877182006836
    5. '^' → logprob: -4.535887718200684
    6. '-p' → logprob: -4.910887718200684
    7. ' ' → logprob: -4.910887718200684
    8. '   ' → logprob: -4.910887718200684
    9. '**' → logprob: -4.910887718200684
    10. 'i' → logprob: -5.785887718200684

Token 866: 'N' (ID: 45)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15558376908302307
    2. 'M' → logprob: -2.2805838584899902
    3. '(M' → logprob: -3.2805838584899902
    4. 'N' → logprob: -5.90558385848999
    5. '(i' → logprob: -7.65558385848999
    6. '(N' → logprob: -7.78058385848999
    7. '(' → logprob: -8.655583381652832
    8. ' (' → logprob: -8.905583381652832
    9. ' i' → logprob: -9.030583381652832
    10. ' ' → logprob: -9.905583381652832

Token 867: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.37249332666397095
    2. '-' → logprob: -1.3724932670593262
    3. ' -' → logprob: -2.872493267059326
    4. ')' → logprob: -7.497493267059326
    5. 'i' → logprob: -8.247493743896484
    6. ' ' → logprob: -10.622493743896484
    7. ' i' → logprob: -10.747493743896484
    8. '   ' → logprob: -10.997493743896484
    9. '-N' → logprob: -10.997493743896484
    10. '+' → logprob: -11.497493743896484

Token 868: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003479620208963752
    2. ' )' → logprob: -6.628479480743408
    3. '-' → logprob: -7.003479480743408
    4. '   ' → logprob: -7.378479480743408
    5. ' -' → logprob: -8.003479957580566
    6. '*' → logprob: -10.003479957580566
    7. ' ' → logprob: -10.253479957580566
    8. '```' → logprob: -10.503479957580566
    9. ')*' → logprob: -10.753479957580566
    10. '       ' → logprob: -10.753479957580566

Token 869: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03381616622209549
    2. ' *' → logprob: -3.53381609916687
    3. '*' → logprob: -5.908816337585449
    4. '   ' → logprob: -6.908816337585449
    5. '      ' → logprob: -9.40881633758545
    6. '	' → logprob: -9.78381633758545
    7. ' ' → logprob: -10.15881633758545
    8. ' ' → logprob: -10.53381633758545
    9. '    ' → logprob: -10.65881633758545
    10. '        ' → logprob: -10.78381633758545

Token 870: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.09957797825336456
    2. 'p' → logprob: -2.9745779037475586
    3. ' (' → logprob: -3.2245779037475586
    4. ' p' → logprob: -6.724577903747559
    5. '   ' → logprob: -7.349577903747559
    6. '(n' → logprob: -7.474577903747559
    7. '(' → logprob: -7.599577903747559
    8. '(M' → logprob: -7.849577903747559
    9. 'pow' → logprob: -9.099577903747559
    10. '((' → logprob: -9.099577903747559

Token 871: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08947785943746567
    2. '(N' → logprob: -2.464477777481079
    3. '   ' → logprob: -8.8394775390625
    4. ' (' → logprob: -8.9644775390625
    5. 'i' → logprob: -9.2144775390625
    6. ' N' → logprob: -9.3394775390625
    7. ' ' → logprob: -11.0894775390625
    8. '
' → logprob: -11.0894775390625
    9. 'p' → logprob: -11.8394775390625
    10. 'n' → logprob: -11.8394775390625

Token 872: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006415460375137627
    2. ' +' → logprob: -7.500641345977783
    3. 'plus' → logprob: -10.750641822814941
    4. '+i' → logprob: -11.125641822814941
    5. 'p' → logprob: -11.375641822814941
    6. '1' → logprob: -11.500641822814941
    7. '-i' → logprob: -11.750641822814941
    8. '
' → logprob: -11.875641822814941
    9. ' ' → logprob: -12.500641822814941
    10. '   ' → logprob: -13.125641822814941

Token 873: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.875041007995605
    3. ')' → logprob: -12.250041007995605
    4. 'i' → logprob: -12.375041007995605
    5. '```' → logprob: -12.875041007995605
    6. '   ' → logprob: -13.125041007995605
    7. '...' → logprob: -13.375041007995605
    8. '+' → logprob: -13.500041007995605
    9. '-' → logprob: -14.250041007995605
    10. ' -' → logprob: -14.562541007995605

Token 874: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5601483583450317
    2. '-i' → logprob: -1.0601483583450317
    3. ')^' → logprob: -2.810148239135742
    4. ' -' → logprob: -4.560148239135742
    5. '-' → logprob: -5.310148239135742
    6. ')**' → logprob: -6.435148239135742
    7. '^' → logprob: -6.810148239135742
    8. ' ' → logprob: -6.935148239135742
    9. '   ' → logprob: -7.185148239135742
    10. ' )' → logprob: -7.435148239135742

Token 875: '^(' (ID: 32612)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6164405941963196
    2. '**' → logprob: -1.2414405345916748
    3. '   ' → logprob: -3.116440534591675
    4. '-i' → logprob: -3.116440534591675
    5. '-' → logprob: -3.241440534591675
    6. ' ' → logprob: -4.866440773010254
    7. ' -' → logprob: -4.991440773010254
    8. '^' → logprob: -5.241440773010254
    9. '[N' → logprob: -5.491440773010254
    10. '[' → logprob: -5.991440773010254

Token 876: 'M' (ID: 44)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6952567100524902
    2. 'M' → logprob: -0.8202567100524902
    3. '(M' → logprob: -2.8202567100524902
    4. 'N' → logprob: -7.82025671005249
    5. '(N' → logprob: -8.320257186889648
    6. '(i' → logprob: -8.570257186889648
    7. '   ' → logprob: -9.195257186889648
    8. ' M' → logprob: -9.445257186889648
    9. ' i' → logprob: -9.570257186889648
    10. ' (' → logprob: -10.445257186889648

Token 877: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.041936542838811874
    2. '-' → logprob: -3.5419366359710693
    3. ' -' → logprob: -4.41693639755249
    4. '-I' → logprob: -11.166936874389648
    5. '   ' → logprob: -11.666936874389648
    6. '-ai' → logprob: -12.791936874389648
    7. '-N' → logprob: -12.916936874389648
    8. '-n' → logprob: -13.041936874389648
    9. 'i' → logprob: -13.416936874389648
    10. '-ip' → logprob: -13.666936874389648

Token 878: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04184897243976593
    2. '   ' → logprob: -3.29184889793396
    3. '       ' → logprob: -5.791849136352539
    4. ')
' → logprob: -8.166849136352539
    5. ' )' → logprob: -8.916849136352539
    6. '*' → logprob: -9.666849136352539
    7. ')*' → logprob: -9.916849136352539
    8. ' ' → logprob: -9.916849136352539
    9. '%' → logprob: -10.166849136352539
    10. ' *' → logprob: -10.666849136352539

Token 879: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024687999859452248
    2. '   ' → logprob: -3.7746880054473877
    3. '<|end|>' → logprob: -7.399687767028809
    4. '        
' → logprob: -8.774687767028809
    5. '    
' → logprob: -8.899687767028809
    6. ' for' → logprob: -9.399687767028809
    7. '	' → logprob: -9.524687767028809
    8. 'for' → logprob: -9.649687767028809
    9. '
' → logprob: -9.774687767028809
    10. ' ' → logprob: -10.524687767028809

Token 880: ' sign' (ID: 2232)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.11249414831399918
    2. '       ' → logprob: -2.7374942302703857
    3. 'ans' → logprob: -3.8624942302703857
    4. 'sign' (adapté à ' sign') → logprob: -4.862493991851807
    5. '   ' → logprob: -5.112493991851807
    6. ' term' → logprob: -5.862493991851807
    7. 'temp' → logprob: -7.112493991851807
    8. 't' → logprob: -7.112493991851807
    9. 'tmp' → logprob: -7.237493991851807
    10. 'val' → logprob: -7.612493991851807

Token 881: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329306960105896
    2. '=' → logprob: -1.3132930994033813
    3. '   ' → logprob: -10.81329345703125
    4. '=(-' → logprob: -11.81329345703125
    5. ' ' → logprob: -13.56329345703125
    6. '    ' → logprob: -14.68829345703125
    7. '	' → logprob: -15.06329345703125
    8. ')' → logprob: -15.31329345703125
    9. '=-' → logprob: -15.31329345703125
    10. ' ' → logprob: -15.43829345703125

Token 882: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3390747308731079
    2. '(-' → logprob: -1.339074730873108
    3. '1' → logprob: -4.339074611663818
    4. ' -' → logprob: -5.089074611663818
    5. ' (-' → logprob: -5.089074611663818
    6. ' ' → logprob: -9.464075088500977
    7. '(' → logprob: -11.339075088500977
    8. '   ' → logprob: -11.589075088500977
    9. '((-' → logprob: -12.089075088500977
    10. 'pow' → logprob: -13.464075088500977

Token 883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.722539834911004e-05
    2. ' ' → logprob: -10.000097274780273
    3. '(' → logprob: -10.125097274780273
    4. ' (' → logprob: -11.375097274780273
    5. 'sign' → logprob: -16.875097274780273
    6. '(i' → logprob: -16.875097274780273
    7. '(-' → logprob: -17.000097274780273
    8. '((' → logprob: -17.375097274780273
    9. '   ' → logprob: -17.500097274780273
    10. 'pow' → logprob: -17.625097274780273

Token 884: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20381885766983032
    2. '**' → logprob: -1.7038187980651855
    3. ' **' → logprob: -6.4538187980651855
    4. 'if' → logprob: -7.3288187980651855
    5. ')' → logprob: -9.078819274902344
    6. ')**' → logprob: -10.703819274902344
    7. '*i' → logprob: -11.578819274902344
    8. '*' → logprob: -11.828819274902344
    9. '```' → logprob: -12.078819274902344
    10. '   ' → logprob: -12.453819274902344

Token 885: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3134491443634033
    2. ' i' → logprob: -1.3134491443634033
    3. '(i' → logprob: -8.938448905944824
    4. ' (' → logprob: -9.813448905944824
    5. '(' → logprob: -13.813448905944824
    6. '   ' → logprob: -15.188448905944824
    7. ' ' → logprob: -16.31344985961914
    8. '	i' → logprob: -16.93844985961914
    9. ' ' → logprob: -18.43844985961914
    10. '[i' → logprob: -19.43844985961914

Token 886: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052342405542731285
    2. ' i' → logprob: -5.255234241485596
    3. '   ' → logprob: -15.005233764648438
    4. ' ' → logprob: -16.630233764648438
    5. '	i' → logprob: -18.755233764648438
    6. '(i' → logprob: -18.880233764648438
    7. '  ' → logprob: -19.380233764648438
    8. ' (' → logprob: -19.505233764648438
    9. '(' → logprob: -20.505233764648438
    10. ')i' → logprob: -21.005233764648438

Token 887: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12838400900363922
    2. ' %' → logprob: -2.1283841133117676
    3. ')' → logprob: -6.753384113311768
    4. '   ' → logprob: -8.75338363647461
    5. ')%' → logprob: -9.87838363647461
    6. '
' → logprob: -10.37838363647461
    7. '%i' → logprob: -10.62838363647461
    8. ' ' → logprob: -12.50338363647461
    9. ' ' → logprob: -12.62838363647461
    10. '+' → logprob: -13.37838363647461

Token 888: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125141143798828
    4. '```' → logprob: -16.250141143798828
    5. '
' → logprob: -16.500141143798828
    6. '  ' → logprob: -17.375141143798828
    7. ')' → logprob: -18.562641143798828
    8. '

' → logprob: -18.625141143798828
    9. '۲' → logprob: -18.750141143798828
    10. '    ' → logprob: -19.000141143798828

Token 889: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '
' → logprob: -19.875003814697266
    5. '```' → logprob: -20.500003814697266
    6. '۲' → logprob: -20.750003814697266
    7. '  ' → logprob: -21.000003814697266
    8. '

' → logprob: -21.250003814697266
    9. '２' → logprob: -21.500003814697266
    10. ')' → logprob: -21.625003814697266

Token 890: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3373531699180603
    2. ' else' → logprob: -1.462353229522705
    3. 'else' → logprob: -3.087353229522705
    4. ' ==' → logprob: -4.837353229522705
    5. '!=' → logprob: -6.962353229522705
    6. ')' → logprob: -9.462352752685547
    7. ' !=' → logprob: -10.337352752685547
    8. '1' → logprob: -11.212352752685547
    9. ' ' → logprob: -11.712352752685547
    10. ')==' → logprob: -11.962352752685547

Token 891: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5876291394233704
    2. '==' → logprob: -1.3376290798187256
    3. ' else' → logprob: -1.7126290798187256
    4. '!=' → logprob: -6.712629318237305
    5. ' ==' → logprob: -8.212629318237305
    6. '1' → logprob: -12.837629318237305
    7. ' !=' → logprob: -12.962629318237305
    8. '```' → logprob: -13.212629318237305
    9. '	else' → logprob: -13.337629318237305
    10. '=' → logprob: -14.212629318237305

Token 892: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.273244857788086
    4. '+' → logprob: -18.648244857788086
    5. '  ' → logprob: -18.773244857788086
    6. '    ' → logprob: -20.273244857788086
    7. ' +' → logprob: -20.648244857788086
    8. '１' → logprob: -21.523244857788086
    9. ' ' → logprob: -21.898244857788086
    10. '     ' → logprob: -22.398244857788086

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '+' → logprob: -21.750051498413086
    4. '   ' → logprob: -22.250051498413086
    5. '１' → logprob: -22.625051498413086
    6. '  ' → logprob: -23.750051498413086
    7. '۱' → logprob: -24.250051498413086
    8. '```' → logprob: -24.625051498413086
    9. '`' → logprob: -24.750051498413086
    10. ' +' → logprob: -25.250051498413086

Token 894: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008582543581724167
    2. '   ' → logprob: -5.133582592010498
    3. '<|end|>' → logprob: -6.133582592010498
    4. '        
' → logprob: -8.75858211517334
    5. '
' → logprob: -9.25858211517334
    6. '        ' → logprob: -10.13358211517334
    7. '    ' → logprob: -10.63358211517334
    8. '    
' → logprob: -10.75858211517334
    9. ')' → logprob: -10.88358211517334
    10. '           ' → logprob: -11.13358211517334

Token 895: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001144145498983562
    2. '
' → logprob: -7.876143932342529
    3. 'ans' → logprob: -8.501144409179688
    4. '   ' → logprob: -8.626144409179688
    5. '        
' → logprob: -8.626144409179688
    6. 'term' → logprob: -10.001144409179688
    7. ' ans' → logprob: -10.501144409179688
    8. '	ans' → logprob: -10.751144409179688
    9. '<|end|>' → logprob: -11.001144409179688
    10. ',' → logprob: -11.251144409179688

Token 896: ' (-' (ID: 21382)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.14559334516525269
    2. '       ' → logprob: -2.5205934047698975
    3. 'ans' → logprob: -3.7705934047698975
    4. '   ' → logprob: -4.270593166351318
    5. ' term' → logprob: -4.395593166351318
    6. 'comb' → logprob: -6.645593166351318
    7. 'ter' → logprob: -6.770593166351318
    8. ' ans' → logprob: -7.020593166351318
    9. 'for' → logprob: -7.270593166351318
    10. 'factor' → logprob: -7.770593166351318

Token 897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057693962007761
    2. ')' → logprob: -5.2557692527771
    3. 'sign' → logprob: -7.6307692527771
    4. ' ' → logprob: -10.630769729614258
    5. ' sign' → logprob: -11.755769729614258
    6. '   ' → logprob: -11.755769729614258
    7. ' )' → logprob: -12.005769729614258
    8. 'i' → logprob: -13.880769729614258
    9. '  ' → logprob: -14.130769729614258
    10. ' ' → logprob: -14.630769729614258

Token 898: ')^' (ID: 73602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2829539477825165
    2. ')**' → logprob: -1.4079539775848389
    3. ')^' → logprob: -6.78295373916626
    4. '**' → logprob: -7.40795373916626
    5. ' )' → logprob: -10.407954216003418
    6. '<|end|>' → logprob: -11.532954216003418
    7. '**)' → logprob: -11.782954216003418
    8. ')*' → logprob: -12.907954216003418
    9. ')i' → logprob: -13.032954216003418
    10. ')
' → logprob: -13.157954216003418

Token 899: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.896309739408025e-07
    2. ' i' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -16.125
    4. '
' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '[i' → logprob: -18.75
    7. '   ' → logprob: -18.875
    8. '{i' → logprob: -19.125
    9. '(i' → logprob: -19.125
    10. ')' → logprob: -19.25

Token 900: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06020436808466911
    2. '   ' → logprob: -2.935204267501831
    3. 'ans' → logprob: -6.68520450592041
    4. 'comb' → logprob: -6.93520450592041
    5. ' ans' → logprob: -6.93520450592041
    6. 'term' → logprob: -7.31020450592041
    7. ' comb' → logprob: -7.68520450592041
    8. '	ans' → logprob: -8.68520450592041
    9. 'com' → logprob: -9.18520450592041
    10. '    
' → logprob: -9.31020450592041

Token 902: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' (adapté à ' term') → logprob: -0.05584561079740524
    2. 'c' → logprob: -3.6808454990386963
    3. 'comb' → logprob: -3.9308454990386963
    4. 'temp' → logprob: -5.805845737457275
    5. 'val' → logprob: -6.055845737457275
    6. 'ans' → logprob: -6.930845737457275
    7. 'ci' → logprob: -7.305845737457275
    8. 'coef' → logprob: -7.430845737457275
    9. 'tmp' → logprob: -7.555845737457275
    10. 'C' → logprob: -7.555845737457275

Token 903: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. ' ' → logprob: -15.410224914550781
    4. '   ' → logprob: -17.16022491455078
    5. ' ' → logprob: -17.53522491455078
    6. ' =
' → logprob: -17.78522491455078
    7. ')' → logprob: -18.16022491455078
    8. 's' → logprob: -18.28522491455078
    9. ' *=' → logprob: -18.41022491455078
    10. '＝' → logprob: -18.66022491455078

Token 904: ' (
' (ID: 4112)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.008771865628659725
    2. ' sign' → logprob: -5.008771896362305
    3. '(sign' → logprob: -6.633771896362305
    4. 'comb' → logprob: -8.008771896362305
    5. ' (' → logprob: -8.383771896362305
    6. '(' → logprob: -9.133771896362305
    7. ' comb' → logprob: -10.883771896362305
    8. '   ' → logprob: -11.133771896362305
    9. 'fact' → logprob: -11.133771896362305
    10. 'sig' → logprob: -12.008771896362305

Token 905: '           ' (ID: 352)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.031753819435834885
    2. 'fact' → logprob: -3.9067537784576416
    3. '       ' → logprob: -4.781754016876221
    4. ' sign' → logprob: -6.406754016876221
    5. '           ' → logprob: -7.531754016876221
    6. '   ' → logprob: -7.656754016876221
    7. ' fact' → logprob: -10.281753540039062
    8. '(sign' → logprob: -10.656753540039062
    9. 'comb' → logprob: -11.156753540039062
    10. 'factor' → logprob: -12.156753540039062

Token 906: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' (adapté à ' sign') → logprob: -1.700132997939363e-05
    2. 'fact' → logprob: -11.250017166137695
    3. '(sign' → logprob: -13.250017166137695
    4. 'comb' → logprob: -13.750017166137695
    5. 'sig' → logprob: -14.750017166137695
    6. '   ' → logprob: -14.750017166137695
    7. ' sign' → logprob: -16.250017166137695
    8. '(' → logprob: -16.375017166137695
    9. '           ' → logprob: -16.500017166137695
    10. 'pow' → logprob: -16.875017166137695

Token 907: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0067208209075033665
    2. '*' → logprob: -5.006721019744873
    3. '   ' → logprob: -13.131720542907715
    4. ' ' → logprob: -13.756720542907715
    5. ' *
' → logprob: -14.006720542907715
    6. ')' → logprob: -14.631720542907715
    7. '       ' → logprob: -15.131720542907715
    8. ' ' → logprob: -15.381720542907715
    9. '           ' → logprob: -15.506720542907715
    10. ',' → logprob: -16.25672149658203

Token 908: '           ' (ID: 352)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -1.1756367712223437e-05
    2. 'fact' → logprob: -11.375011444091797
    3. ' comb' → logprob: -15.625011444091797
    4. '   ' → logprob: -16.750011444091797
    5. 'com' → logprob: -17.125011444091797
    6. 'combo' → logprob: -18.375011444091797
    7. '       ' → logprob: -19.250011444091797
    8. '           ' → logprob: -19.250011444091797
    9. '(' → logprob: -19.750011444091797
    10. 'pow' → logprob: -19.875011444091797

Token 909: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -0.0001589618914294988
    2. 'fact' → logprob: -8.75015926361084
    3. ' comb' → logprob: -15.87515926361084
    4. 'com' → logprob: -16.125158309936523
    5. '(' → logprob: -16.750158309936523
    6. 'combo' → logprob: -17.250158309936523
    7. '   ' → logprob: -18.000158309936523
    8. '((' → logprob: -18.625158309936523
    9. 'pow' → logprob: -18.625158309936523
    10. 'Comb' → logprob: -18.750158309936523

Token 910: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16024616360664368
    2. 'N' → logprob: -1.9102461338043213
    3. '(' → logprob: -11.410245895385742
    4. '   ' → logprob: -12.285245895385742
    5. '[N' → logprob: -13.160245895385742
    6. '(M' → logprob: -13.910245895385742
    7. '	N' → logprob: -14.035245895385742
    8. '(
' → logprob: -14.535245895385742
    9. ')' → logprob: -14.785245895385742
    10. 'M' → logprob: -15.285245895385742

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012789799831807613
    2. ',i' → logprob: -4.887789726257324
    3. ',N' → logprob: -5.387789726257324
    4. ',M' → logprob: -8.762789726257324
    5. '(' → logprob: -8.887789726257324
    6. '(i' → logprob: -9.512789726257324
    7. '(N' → logprob: -9.887789726257324
    8. ' ,' → logprob: -10.262789726257324
    9. ')' → logprob: -10.637789726257324
    10. 'i' → logprob: -10.762789726257324

Token 912: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.13388703338569e-06
    2. ' i' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.875009536743164
    4. '   ' → logprob: -17.500009536743164
    5. '	i' → logprob: -17.500009536743164
    6. ')i' → logprob: -17.750009536743164
    7. ')' → logprob: -18.125009536743164
    8. '[i' → logprob: -18.625009536743164
    9. '{i' → logprob: -19.000009536743164
    10. '_i' → logprob: -19.750009536743164

Token 913: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010568885772954673
    2. ')
' → logprob: -10.000105857849121
    3. '           ' → logprob: -10.875105857849121
    4. '   ' → logprob: -11.375105857849121
    5. ')*' → logprob: -11.375105857849121
    6. '       ' → logprob: -11.750105857849121
    7. '```' → logprob: -12.250105857849121
    8. ',' → logprob: -13.000105857849121
    9. '*' → logprob: -14.625105857849121
    10. ' )' → logprob: -14.625105857849121

Token 914: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.050128716975450516
    2. '*' → logprob: -3.050128698348999
    3. '           ' → logprob: -7.550128936767578
    4. '<|end|>' → logprob: -8.175128936767578
    5. ' *
' → logprob: -8.300128936767578
    6. '   ' → logprob: -8.300128936767578
    7. '       ' → logprob: -9.425128936767578
    8. '*
' → logprob: -9.675128936767578
    9. ')' → logprob: -9.925128936767578
    10. ' ' → logprob: -11.675128936767578

Token 915: '           ' (ID: 352)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0005077573587186635
    2. '           ' → logprob: -8.125507354736328
    3. ' comb' → logprob: -9.000507354736328
    4. 'fact' → logprob: -9.375507354736328
    5. 'com' → logprob: -12.875507354736328
    6. '       ' → logprob: -14.500507354736328
    7. 'Comb' → logprob: -16.375507354736328
    8. 'pow' → logprob: -16.750507354736328
    9. '(com' → logprob: -17.125507354736328
    10. '   ' → logprob: -17.125507354736328

Token 916: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' (adapté à ' comb') → logprob: -5.796184723294573e-06
    2. 'fact' → logprob: -12.125005722045898
    3. 'com' → logprob: -16.3750057220459
    4. ' comb' → logprob: -16.3750057220459
    5. '   ' → logprob: -18.2500057220459
    6. 'comm' → logprob: -19.6250057220459
    7. 'combo' → logprob: -19.8750057220459
    8. 'Comb' → logprob: -20.0000057220459
    9. 'comp' → logprob: -21.0000057220459
    10. '```' → logprob: -21.2500057220459

Token 917: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.016037650406360626
    2. 'M' → logprob: -4.141037464141846
    3. '(' → logprob: -13.391037940979004
    4. '   ' → logprob: -14.391037940979004
    5. ' M' → logprob: -14.891037940979004
    6. '<|end|>' → logprob: -15.016037940979004
    7. ' (' → logprob: -16.141036987304688
    8. '[M' → logprob: -16.141036987304688
    9. '	M' → logprob: -16.891036987304688
    10. ',M' → logprob: -16.891036987304688

Token 918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10467629134654999
    2. 'M' → logprob: -2.4796762466430664
    3. 'i' → logprob: -4.854676246643066
    4. ',i' → logprob: -4.979676246643066
    5. ',M' → logprob: -7.479676246643066
    6. '(i' → logprob: -8.729676246643066
    7. '(' → logprob: -9.229676246643066
    8. '(M' → logprob: -9.479676246643066
    9. ' ,' → logprob: -10.854676246643066
    10. ')' → logprob: -12.229676246643066

Token 919: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.988221684878226e-06
    2. ' i' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -18.37500762939453
    4. ')i' → logprob: -19.00000762939453
    5. '   ' → logprob: -19.37500762939453
    6. '	i' → logprob: -19.50000762939453
    7. '{i' → logprob: -20.37500762939453
    8. '(i' → logprob: -20.50000762939453
    9. '[i' → logprob: -20.75000762939453
    10. ')' → logprob: -20.87500762939453

Token 920: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011927806917810813
    2. ')*' → logprob: -9.25011920928955
    3. '   ' → logprob: -12.00011920928955
    4. '       ' → logprob: -12.75011920928955
    5. '<|end|>' → logprob: -12.75011920928955
    6. ' )' → logprob: -12.87511920928955
    7. '           ' → logprob: -13.12511920928955
    8. ')
' → logprob: -13.37511920928955
    9. '*' → logprob: -13.62511920928955
    10. '*)' → logprob: -14.00011920928955

Token 921: ' *
' (ID: 2099)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.534758448600769
    2. ' *' → logprob: -0.909758448600769
    3. '           ' → logprob: -5.534758567810059
    4. '   ' → logprob: -5.534758567810059
    5. '       ' → logprob: -6.534758567810059
    6. '*
' → logprob: -7.034758567810059
    7. '<|end|>' → logprob: -7.159758567810059
    8. ')' → logprob: -9.034758567810059
    9. 'fact' → logprob: -9.534758567810059
    10. '```' → logprob: -9.784758567810059

Token 922: '           ' (ID: 352)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.3856492842023727e-06
    2. ' fact' → logprob: -14.000000953674316
    3. 'factor' → logprob: -14.750000953674316
    4. '_fact' → logprob: -18.000001907348633
    5. '.fact' → logprob: -18.375001907348633
    6. 'Fact' → logprob: -19.000001907348633
    7. '
' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.500001907348633
    9. 'fac' → logprob: -19.750001907348633
    10. '       ' → logprob: -19.750001907348633

Token 923: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -4.320199877838604e-07
    2. ' fact' → logprob: -14.75
    3. 'factor' → logprob: -18.0
    4. '_fact' → logprob: -19.75
    5. '.fact' → logprob: -20.25
    6. 'fac' → logprob: -20.5
    7. 'Fact' → logprob: -21.5
    8. '```' → logprob: -23.0
    9. 'f' → logprob: -23.5
    10. 'facts' → logprob: -23.75

Token 924: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.50000286102295
    3. 'i' → logprob: -13.62500286102295
    4. '[I' → logprob: -15.12500286102295
    5. '[
' → logprob: -17.625003814697266
    6. ' [' → logprob: -18.000003814697266
    7. '(i' → logprob: -18.375003814697266
    8. '```' → logprob: -18.750003814697266
    9. '   ' → logprob: -19.500003814697266
    10. '{i' → logprob: -19.625003814697266

Token 925: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003909927327185869
    2. ')' → logprob: -8.000391006469727
    3. '])' → logprob: -10.375391006469727
    4. ']*' → logprob: -11.625391006469727
    5. ']
' → logprob: -12.625391006469727
    6. '   ' → logprob: -12.750391006469727
    7. ' ]' → logprob: -13.250391006469727
    8. '       ' → logprob: -13.375391006469727
    9. '[' → logprob: -13.750391006469727
    10. ']%' → logprob: -13.750391006469727

Token 926: ' %
' (ID: 51295)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7024667263031006
    2. ' *' → logprob: -0.7024667263031006
    3. '           ' → logprob: -5.32746696472168
    4. '*
' → logprob: -6.57746696472168
    5. '   ' → logprob: -6.70246696472168
    6. '       ' → logprob: -6.82746696472168
    7. ' *
' → logprob: -7.82746696472168
    8. ')' → logprob: -9.45246696472168
    9. '```' → logprob: -10.20246696472168
    10. '  ' → logprob: -10.32746696472168

Token 927: '           ' (ID: 352)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.4021237802808173e-05
    2. ' mod' → logprob: -11.250014305114746
    3. '998' → logprob: -14.000014305114746
    4. '(mod' → logprob: -16.50001335144043
    5. '	mod' → logprob: -18.75001335144043
    6. 'moder' → logprob: -20.37501335144043
    7. '_mod' → logprob: -21.25001335144043
    8. 'modal' → logprob: -22.00001335144043
    9. '
' → logprob: -22.00001335144043
    10. ' мод' → logprob: -22.50001335144043

Token 928: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -6.32523515378125e-05
    2. ' mod' → logprob: -10.250062942504883
    3. '(mod' → logprob: -10.500062942504883
    4. 'pow' → logprob: -15.375062942504883
    5. '	mod' → logprob: -17.125062942504883
    6. '998' → logprob: -17.375062942504883
    7. '(' → logprob: -19.125062942504883
    8. '   ' → logprob: -19.500062942504883
    9. '_mod' → logprob: -19.625062942504883
    10. 'MOD' → logprob: -19.750062942504883

Token 929: ' *
' (ID: 2099)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.029457002878189087
    2. ' *' → logprob: -3.9044570922851562
    3. '*
' → logprob: -5.029457092285156
    4. '           ' → logprob: -6.154457092285156
    5. ' *
' → logprob: -8.904457092285156
    6. '   ' → logprob: -10.904457092285156
    7. '*
' → logprob: -11.029457092285156
    8. '       ' → logprob: -11.154457092285156
    9. '          ' → logprob: -11.779457092285156
    10. '\' → logprob: -12.029457092285156

Token 930: '           ' (ID: 352)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0013985719997435808
    2. '           ' → logprob: -6.75139856338501
    3. ' pow' → logprob: -8.501399040222168
    4. 'p' → logprob: -11.126399040222168
    5. '(pow' → logprob: -11.751399040222168
    6. '       ' → logprob: -13.876399040222168
    7. '(p' → logprob: -14.501399040222168
    8. '   ' → logprob: -15.001399040222168
    9. '               ' → logprob: -15.126399040222168
    10. '(' → logprob: -15.626399040222168

Token 931: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -7.028536492725834e-05
    2. ' pow' → logprob: -10.000070571899414
    3. '(pow' → logprob: -10.750070571899414
    4. 'p' → logprob: -12.750070571899414
    5. '   ' → logprob: -15.500070571899414
    6. '(p' → logprob: -15.875070571899414
    7. '(' → logprob: -17.375070571899414
    8. 'power' → logprob: -17.750070571899414
    9. '       ' → logprob: -18.375070571899414
    10. 'pw' → logprob: -18.500070571899414

Token 932: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -13.000005722045898
    3. '(m' → logprob: -14.250005722045898
    4. '(pow' → logprob: -14.250005722045898
    5. 'pow' → logprob: -14.250005722045898
    6. 'м' → logprob: -14.875005722045898
    7. '   ' → logprob: -15.750005722045898
    8. '```' → logprob: -16.0000057220459
    9. 'mod' → logprob: -16.2500057220459
    10. 'p' → logprob: -16.2500057220459

Token 933: '[N' (ID: 49776)
  Prédit: '[N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -3.380904672667384e-05
    2. '[' → logprob: -10.375033378601074
    3. '[M' → logprob: -13.625033378601074
    4. 'N' → logprob: -14.250033378601074
    5. '[
' → logprob: -15.250033378601074
    6. ' [' → logprob: -15.875033378601074
    7. '   ' → logprob: -16.00003433227539
    8. '(N' → logprob: -16.25003433227539
    9. '[(' → logprob: -16.75003433227539
    10. '[n' → logprob: -17.00003433227539

Token 934: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.059862203896045685
    2. '-N' → logprob: -3.4348621368408203
    3. ' -' → logprob: -3.6848621368408203
    4. '-i' → logprob: -7.93486213684082
    5. '[N' → logprob: -8.30986213684082
    6. '[-' → logprob: -9.55986213684082
    7. '   ' → logprob: -10.18486213684082
    8. '[' → logprob: -10.80986213684082
    9. ' ' → logprob: -10.93486213684082
    10. ']' → logprob: -12.30986213684082

Token 935: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.451116051815916e-05
    2. ' i' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.250024795532227
    4. '	i' → logprob: -18.125024795532227
    5. ' ' → logprob: -19.000024795532227
    6. '[i' → logprob: -19.500024795532227
    7. '{i' → logprob: -20.250024795532227
    8. '
' → logprob: -20.625024795532227
    9. '_i' → logprob: -20.750024795532227
    10. '  ' → logprob: -21.000024795532227

Token 936: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.623244553338736e-05
    2. ' ]' → logprob: -9.875065803527832
    3. ']
' → logprob: -11.750065803527832
    4. ']%' → logprob: -12.750065803527832
    5. '   ' → logprob: -13.750065803527832
    6. ')' → logprob: -14.000065803527832
    7. '%' → logprob: -14.250065803527832
    8. '])' → logprob: -14.750065803527832
    9. '']' → logprob: -15.375065803527832
    10. '`]' → logprob: -15.625065803527832

Token 937: ' %' (ID: 1851)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05729286000132561
    2. '%' → logprob: -3.182292938232422
    3. ' *' → logprob: -4.307292938232422
    4. '*
' → logprob: -7.557292938232422
    5. '   ' → logprob: -9.432292938232422
    6. '%
' → logprob: -9.682292938232422
    7. ' %' → logprob: -11.182292938232422
    8. '       ' → logprob: -11.807292938232422
    9. '```' → logprob: -11.932292938232422
    10. ' *
' → logprob: -12.057292938232422

Token 938: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000431861262768507
    2. ' mod' → logprob: -7.750432014465332
    3. '(mod' → logprob: -14.000432014465332
    4. 'pow' → logprob: -15.250432014465332
    5. '           ' → logprob: -16.500431060791016
    6. '	mod' → logprob: -17.250431060791016
    7. ' ' → logprob: -17.375431060791016
    8. 'm' → logprob: -18.375431060791016
    9. '   ' → logprob: -19.250431060791016
    10. '```' → logprob: -19.500431060791016

Token 939: ' *
' (ID: 2099)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43850642442703247
    2. '*' → logprob: -1.0635063648223877
    3. '           ' → logprob: -4.938506603240967
    4. '   ' → logprob: -6.688506603240967
    5. '       ' → logprob: -7.688506603240967
    6. '*
' → logprob: -8.063506126403809
    7. ' *
' → logprob: -8.688506126403809
    8. ' ' → logprob: -9.438506126403809
    9. ' ' → logprob: -9.813506126403809
    10. ' p' → logprob: -10.188506126403809

Token 940: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003244262421503663
    2. ' p' → logprob: -5.753244400024414
    3. '   ' → logprob: -9.753244400024414
    4. '           ' → logprob: -12.378244400024414
    5. '       ' → logprob: -13.003244400024414
    6. '	p' → logprob: -13.753244400024414
    7. ' ' → logprob: -14.503244400024414
    8. '(p' → logprob: -16.503244400024414
    9. '    ' → logprob: -16.503244400024414
    10. '  ' → logprob: -16.753244400024414

Token 941: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.00014084660506341606
    2. ' p' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.125141143798828
    4. ' ' → logprob: -16.500141143798828
    5. '(p' → logprob: -17.750141143798828
    6. 'pow' → logprob: -17.875141143798828
    7. '           ' → logprob: -18.125141143798828
    8. '       ' → logprob: -18.250141143798828
    9. '  ' → logprob: -18.375141143798828
    10. '     ' → logprob: -18.500141143798828

Token 942: 'own' (ID: 940)
  Prédit: 'own'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.00036287534749135375
    2. 'ow' → logprob: -8.75036334991455
    3. 'awn' → logprob: -9.12536334991455
    4. 'w' → logprob: -9.87536334991455
    5. 'o' → logprob: -11.12536334991455
    6. 'p' → logprob: -11.75036334991455
    7. 'wn' → logprob: -12.12536334991455
    8. '[' → logprob: -12.87536334991455
    9. 'm' → logprob: -13.37536334991455
    10. 'rown' → logprob: -13.37536334991455

Token 943: '[M' (ID: 98407)
  Prédit: '[M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. 'M' → logprob: -16.25
    4. '   ' → logprob: -17.0
    5. '(M' → logprob: -17.625
    6. '[
' → logprob: -17.875
    7. ' [' → logprob: -18.75
    8. '```' → logprob: -19.625
    9. '[[' → logprob: -20.0
    10. '`' → logprob: -20.0

Token 944: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3342674970626831
    2. ' -' → logprob: -1.834267497062683
    3. '-i' → logprob: -2.0842676162719727
    4. '-I' → logprob: -12.084267616271973
    5. ' ' → logprob: -13.959267616271973
    6. '   ' → logprob: -14.209267616271973
    7. '-u' → logprob: -14.459267616271973
    8. '[' → logprob: -15.459267616271973
    9. '-ip' → logprob: -15.959267616271973
    10. '-
' → logprob: -16.084266662597656

Token 945: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '	i' → logprob: -17.500036239624023
    4. '   ' → logprob: -18.250036239624023
    5. '[i' → logprob: -19.875036239624023
    6. '_i' → logprob: -20.625036239624023
    7. ' ' → logprob: -20.625036239624023
    8. '  ' → logprob: -21.500036239624023
    9. ''i' → logprob: -21.875036239624023
    10. '{i' → logprob: -22.500036239624023

Token 946: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.203409844194539e-05
    2. ')' → logprob: -10.750041961669922
    3. ']%' → logprob: -11.500041961669922
    4. ']
' → logprob: -11.875041961669922
    5. ' ]' → logprob: -13.125041961669922
    6. '])' → logprob: -13.875041961669922
    7. '']' → logprob: -15.875041961669922
    8. '   ' → logprob: -16.000041961669922
    9. '%' → logprob: -16.875041961669922
    10. '```' → logprob: -17.000041961669922

Token 947: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14157263934612274
    2. '%' → logprob: -2.1415727138519287
    3. ')%' → logprob: -4.26657247543335
    4. '       ' → logprob: -7.89157247543335
    5. '   ' → logprob: -9.516572952270508
    6. ')
' → logprob: -10.391572952270508
    7. ' %' → logprob: -11.016572952270508
    8. '%)' → logprob: -12.391572952270508
    9. '```' → logprob: -12.641572952270508
    10. '%
' → logprob: -13.141572952270508

Token 948: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001170225441455841
    2. ' mod' → logprob: -6.7511701583862305
    3. '(mod' → logprob: -18.626171112060547
    4. '	mod' → logprob: -20.001171112060547
    5. ' ' → logprob: -21.876171112060547
    6. '_mod' → logprob: -22.376171112060547
    7. ' ' → logprob: -22.876171112060547
    8. 'm' → logprob: -23.126171112060547
    9. '```' → logprob: -23.251171112060547
    10. ' мод' → logprob: -23.376171112060547

Token 949: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1077846959233284
    2. ')
' → logprob: -2.7327847480773926
    3. '   ' → logprob: -3.4827847480773926
    4. ')%' → logprob: -5.357784748077393
    5. '       ' → logprob: -6.982784748077393
    6. '
' → logprob: -8.107784271240234
    7. ' )' → logprob: -9.357784271240234
    8. '%' → logprob: -9.357784271240234
    9. '    
' → logprob: -9.857784271240234
    10. '```' → logprob: -10.232784271240234

Token 950: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43090468645095825
    2. '   ' → logprob: -1.5559046268463135
    3. '       ' → logprob: -2.0559046268463135
    4. ')
' → logprob: -4.930904865264893
    5. '<|end|>' → logprob: -7.055904865264893
    6. 'ans' → logprob: -7.305904865264893
    7. '	ans' → logprob: -7.555904865264893
    8. ')%' → logprob: -7.930904865264893
    9. '    
' → logprob: -8.055904388427734
    10. '```' → logprob: -8.305904388427734

Token 951: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10584056377410889
    2. ')%' → logprob: -2.4808406829833984
    3. ')
' (adapté à ' )
') → logprob: -4.730840682983398
    4. '       ' → logprob: -5.730840682983398
    5. '%' → logprob: -5.980840682983398
    6. '   ' → logprob: -6.230840682983398
    7. 'ans' → logprob: -8.980840682983398
    8. '    
' → logprob: -11.730840682983398
    9. ')
' → logprob: -11.730840682983398
    10. '")' → logprob: -11.855840682983398

Token 952: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006919018924236298
    2. 'ans' → logprob: -5.131918907165527
    3. '       ' → logprob: -7.881918907165527
    4. '	ans' → logprob: -8.506918907165527
    5. '
' → logprob: -8.756918907165527
    6. '    
' → logprob: -9.381918907165527
    7. '```' → logprob: -9.381918907165527
    8. ' ans' → logprob: -10.506918907165527
    9. '  ' → logprob: -11.381918907165527
    10. '<|end|>' → logprob: -11.756918907165527

Token 953: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.004119242075830698
    2. '   ' → logprob: -5.504119396209717
    3. ' ans' → logprob: -10.754118919372559
    4. '(ans' → logprob: -11.629118919372559
    5. '	ans' → logprob: -12.379118919372559
    6. '       ' → logprob: -12.379118919372559
    7. '```' → logprob: -13.379118919372559
    8. 'answer' → logprob: -15.129118919372559
    9. '``' → logprob: -15.629118919372559
    10. '_ans' → logprob: -16.254119873046875

Token 954: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3245377540588379
    2. '+=' → logprob: -1.324537754058838
    3. ' =' → logprob: -4.949537754058838
    4. ' +=' → logprob: -6.074537754058838
    5. '%=' → logprob: -6.449537754058838
    6. '   ' → logprob: -8.57453727722168
    7. ' %=' → logprob: -10.32453727722168
    8. '```' → logprob: -11.57453727722168
    9. '       ' → logprob: -12.57453727722168
    10. '*=' → logprob: -13.07453727722168

Token 955: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0012119027087464929
    2. ' (' → logprob: -6.751212120056152
    3. '(' → logprob: -10.126212120056152
    4. '   ' → logprob: -13.751212120056152
    5. '(answer' → logprob: -15.876212120056152
    6. '(ast' → logprob: -16.001211166381836
    7. '(ax' → logprob: -16.126211166381836
    8. '(acc' → logprob: -16.876211166381836
    9. '(a' → logprob: -17.501211166381836
    10. ' ' → logprob: -17.751211166381836

Token 956: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1602514386177063
    2. '(ans' → logprob: -1.9102513790130615
    3. ' ans' → logprob: -10.78525161743164
    4. '	ans' → logprob: -12.41025161743164
    5. '_ans' → logprob: -13.53525161743164
    6. '   ' → logprob: -14.28525161743164
    7. 'answer' → logprob: -15.28525161743164
    8. 'Ans' → logprob: -15.91025161743164
    9. 'ANS' → logprob: -16.41025161743164
    10. ' (' → logprob: -16.66025161743164

Token 957: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868715465068817
    2. '+' → logprob: -1.136871576309204
    3. ' ans' → logprob: -15.261871337890625
    4. '＋' → logprob: -16.261871337890625
    5. '(ans' → logprob: -16.636871337890625
    6. ' ' → logprob: -17.011871337890625
    7. 'ans' → logprob: -17.136871337890625
    8. ' plus' → logprob: -18.136871337890625
    9. '```' → logprob: -18.136871337890625
    10. ' ' → logprob: -18.136871337890625

Token 958: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -4.5491004129871726e-05
    2. ' term' → logprob: -10.000045776367188
    3. 'ter' → logprob: -17.750045776367188
    4. '   ' → logprob: -18.500045776367188
    5. 'token' → logprob: -18.875045776367188
    6. '(term' → logprob: -19.125045776367188
    7. ' ' → logprob: -20.625045776367188
    8. 'Term' → logprob: -21.875045776367188
    9. '-term' → logprob: -22.125045776367188
    10. '_term' → logprob: -22.625045776367188

Token 959: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002612878568470478
    2. ' )' → logprob: -6.377613067626953
    3. '%' → logprob: -7.502613067626953
    4. ')%' → logprob: -8.627613067626953
    5. ' %' → logprob: -8.627613067626953
    6. ' ' → logprob: -15.377613067626953
    7. '   ' → logprob: -16.752613067626953
    8. '%)' → logprob: -16.752613067626953
    9. '```' → logprob: -17.002613067626953
    10. ']' → logprob: -17.127613067626953

Token 960: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08035371452569962
    2. '%' → logprob: -2.5803537368774414
    3. ' ans' → logprob: -6.705353736877441
    4. 'ans' → logprob: -9.205353736877441
    5. ')' → logprob: -9.330353736877441
    6. '
' → logprob: -10.955353736877441
    7. ' mod' → logprob: -11.830353736877441
    8. ' ' → logprob: -11.830353736877441
    9. ' 
' → logprob: -12.455353736877441
    10. ' ' → logprob: -13.080353736877441

Token 961: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. '998' → logprob: -15.75
    3. ' mod' → logprob: -17.25
    4. '(mod' → logprob: -20.125
    5. '	mod' → logprob: -21.375
    6. '```' → logprob: -22.5
    7. 'moder' → logprob: -24.125
    8. '_mod' → logprob: -24.625
    9. ' мод' → logprob: -25.125
    10. 'modal' → logprob: -25.125

Token 962: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13234959542751312
    2. '
' → logprob: -2.1323494911193848
    3. 'print' → logprob: -5.632349491119385
    4. '    
' → logprob: -6.382349491119385
    5. '```' → logprob: -9.757349967956543
    6. 'return' → logprob: -10.507349967956543
    7. '  
' → logprob: -10.882349967956543
    8. '<|end|>' → logprob: -11.257349967956543
    9. '
' → logprob: -12.007349967956543
    10. '   
' → logprob: -12.882349967956543

Token 963: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5828157663345337
    2. 'print' → logprob: -0.8328157663345337
    3. '
' → logprob: -5.207815647125244
    4. '```' → logprob: -7.082815647125244
    5. '    
' → logprob: -7.582815647125244
    6. ' print' → logprob: -11.582816123962402
    7. '  
' → logprob: -11.957816123962402
    8. '<|end|>' → logprob: -12.332816123962402
    9. 'return' → logprob: -12.957816123962402
    10. '``' → logprob: -13.207816123962402

Token 964: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.616245687007904
    2. '   ' → logprob: -1.2412457466125488
    3. 'return' → logprob: -1.9912457466125488
    4. 'pass' → logprob: -4.116245746612549
    5. '
' → logprob: -4.491245746612549
    6. 'ans' → logprob: -5.991245746612549
    7. '```' → logprob: -6.366245746612549
    8. 'continue' → logprob: -6.866245746612549
    9. '<|end|>' → logprob: -8.11624526977539
    10. '
' → logprob: -8.61624526977539

Token 965: ' veille' (ID: 103675)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.030378146097064018
    2. '   ' → logprob: -4.155378341674805
    3. ' return' → logprob: -5.405378341674805
    4. 'continue' → logprob: -5.530378341674805
    5. 'print' → logprob: -6.405378341674805
    6. '```' → logprob: -6.655378341674805
    7. ')' → logprob: -6.905378341674805
    8. '
' → logprob: -7.655378341674805
    9. 'def' → logprob: -7.780378341674805
    10. 'pass' → logprob: -8.655378341674805

Token 966: ' toujours' (ID: 16867)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.19780641794204712
    2. ' à' → logprob: -1.8228063583374023
    3. '```' → logprob: -5.197806358337402
    4. '   ' → logprob: -5.322806358337402
    5. ' ' → logprob: -5.697806358337402
    6. 'to' → logprob: -6.447806358337402
    7. '  ' → logprob: -7.197806358337402
    8. 'a' → logprob: -7.447806358337402
    9. ''à' → logprob: -8.197806358337402
    10. '       ' → logprob: -8.572806358337402

Token 967: ' à' (ID: 1221)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.20907829701900482
    2. ' to' → logprob: -2.834078311920166
    3. ' à' → logprob: -3.459078311920166
    4. 'à' → logprob: -3.459078311920166
    5. '```' → logprob: -3.459078311920166
    6. '   ' → logprob: -4.334078311920166
    7. '<|end|>' → logprob: -5.459078311920166
    8. ')' → logprob: -5.459078311920166
    9. '  ' → logprob: -5.834078311920166
    10. ' ' → logprob: -5.959078311920166

Token 968: ' ne' (ID: 453)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.253727525472641
    2. '(ans' → logprob: -1.5037275552749634
    3. ' ans' → logprob: -6.878727436065674
    4. '   ' → logprob: -8.128727912902832
    5. '```' → logprob: -8.253727912902832
    6. 'maint' → logprob: -9.503727912902832
    7. 'aj' → logprob: -10.503727912902832
    8. '(' → logprob: -11.128727912902832
    9. '	ans' → logprob: -11.128727912902832
    10. ' (' → logprob: -11.253727912902832

Token 969: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.05018768087029457
    2. ' pas' → logprob: -3.675187587738037
    3. 'ans' → logprob: -3.925187587738037
    4. ' ans' → logprob: -5.925187587738037
    5. '(ans' → logprob: -7.425187587738037
    6. 'pass' → logprob: -8.550188064575195
    7. ')' → logprob: -9.425188064575195
    8. 's' → logprob: -10.050188064575195
    9. '_pas' → logprob: -10.300188064575195
    10. '+' → logprob: -10.550188064575195

Token 970: ' dépasser' (ID: 187375)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.8002086877822876
    2. 'oub' → logprob: -1.9252086877822876
    3. 'mettre' → logprob: -2.800208568572998
    4. 'per' → logprob: -2.925208568572998
    5. 'dé' → logprob: -3.050208568572998
    6. 'lais' → logprob: -3.425208568572998
    7. ' oublier' → logprob: -3.675208568572998
    8. 'sort' → logprob: -3.675208568572998
    9. 'ans' → logprob: -3.925208568572998
    10. '   ' → logprob: -4.175208568572998

Token 971: ' le' (ID: 505)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0008990773931145668
    2. ' mod' → logprob: -7.625899314880371
    3. '998' → logprob: -8.000899314880371
    4. '(mod' → logprob: -10.500899314880371
    5. '   ' → logprob: -10.750899314880371
    6. 'ans' → logprob: -11.625899314880371
    7. '       ' → logprob: -12.125899314880371
    8. '```' → logprob: -12.500899314880371
    9. '0' → logprob: -13.000899314880371
    10. '           ' → logprob: -13.375899314880371

Token 972: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -6.504040356958285e-05
    2. '998' → logprob: -9.750064849853516
    3. '```' → logprob: -12.875064849853516
    4. ' mod' → logprob: -13.000064849853516
    5. 'module' → logprob: -14.500064849853516
    6. '0' → logprob: -14.875064849853516
    7. '999' → logprob: -15.250064849853516
    8. '[' → logprob: -15.625064849853516
    9. '...' → logprob: -16.000064849853516
    10. '	mod' → logprob: -16.750064849853516

Token 973: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019017834216356277
    2. '
' → logprob: -4.019017696380615
    3. '    
' → logprob: -7.519017696380615
    4. '<|end|>' → logprob: -8.769018173217773
    5. 'print' → logprob: -9.894018173217773
    6. 'return' → logprob: -10.144018173217773
    7. '```' → logprob: -10.144018173217773
    8. '  
' → logprob: -11.644018173217773
    9. '
' → logprob: -11.894018173217773
    10. '        
' → logprob: -12.394018173217773

Token 974: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1306113600730896
    2. '   ' → logprob: -2.1306114196777344
    3. '
' → logprob: -5.755611419677734
    4. '```' → logprob: -8.255611419677734
    5. '    
' → logprob: -8.380611419677734
    6. ' print' → logprob: -11.880611419677734
    7. 'return' → logprob: -12.380611419677734
    8. '  
' → logprob: -12.505611419677734
    9. '	print' → logprob: -12.505611419677734
    10. 'if' → logprob: -13.630611419677734

Token 975: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.668304245569743e-05
    2. '   ' → logprob: -10.000046730041504
    3. '```' → logprob: -13.750046730041504
    4. ' print' → logprob: -15.750046730041504
    5. 'return' → logprob: -18.000045776367188
    6. '
' → logprob: -18.125045776367188
    7. '	print' → logprob: -20.500045776367188
    8. '``' → logprob: -20.625045776367188
    9. '    
' → logprob: -20.875045776367188
    10. '#print' → logprob: -21.000045776367188

Token 976: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005286053754389286
    2. '(' → logprob: -5.25528621673584
    3. '()' → logprob: -10.00528621673584
    4. '((' → logprob: -12.88028621673584
    5. 'ans' → logprob: -13.00528621673584
    6. ' (' → logprob: -14.00528621673584
    7. '(
' → logprob: -14.38028621673584
    8. '(abs' → logprob: -15.50528621673584
    9. '(answer' → logprob: -16.005285263061523
    10. '(expr' → logprob: -16.005285263061523

Token 977: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. '())' → logprob: -11.000024795532227
    3. '()' → logprob: -12.125024795532227
    4. ' )' → logprob: -13.500024795532227
    5. ')`' → logprob: -14.250024795532227
    6. ')
' → logprob: -15.000024795532227
    7. '))' → logprob: -15.625024795532227
    8. ')}' → logprob: -16.500024795532227
    9. '   ' → logprob: -16.625024795532227
    10. '`)' → logprob: -17.375024795532227

Token 978: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 979: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003219899022951722
    2. '__' → logprob: -5.753220081329346
    3. '_' → logprob: -10.253219604492188
    4. '_name' → logprob: -12.628219604492188
    5. ' _' → logprob: -13.128219604492188
    6. ' ' → logprob: -14.128219604492188
    7. ' ___' → logprob: -15.128219604492188
    8. '___' → logprob: -15.378219604492188
    9. '.__' → logprob: -16.128219604492188
    10. ' ' → logprob: -16.628219604492188

Token 980: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21526235342025757
    2. ' __' → logprob: -1.7152624130249023
    3. ' ==' → logprob: -4.340262413024902
    4. '==' → logprob: -7.840262413024902
    5. '_' → logprob: -8.840262413024902
    6. '=="' → logprob: -10.340262413024902
    7. '_name' → logprob: -10.465262413024902
    8. 'name' → logprob: -10.590262413024902
    9. ' =="' → logprob: -10.715262413024902
    10. ' ' → logprob: -10.840262413024902

Token 981: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. '==' → logprob: -12.87500286102295
    3. '__.__' → logprob: -16.250001907348633
    4. ' ==' → logprob: -17.125001907348633
    5. '__('' → logprob: -17.375001907348633
    6. '___' → logprob: -17.375001907348633
    7. '____' → logprob: -17.750001907348633
    8. '_' → logprob: -17.750001907348633
    9. '=="' → logprob: -18.125001907348633
    10. '__
' → logprob: -18.875001907348633

Token 982: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22177860140800476
    2. '==' → logprob: -1.8467786312103271
    3. '=="' → logprob: -3.471778631210327
    4. '__' → logprob: -4.721778392791748
    5. '=='' → logprob: -6.846778392791748
    6. '_' → logprob: -9.846778869628906
    7. ' =="' → logprob: -10.596778869628906
    8. '"' → logprob: -10.971778869628906
    9. '=' → logprob: -11.346778869628906
    10. '.__' → logprob: -12.471778869628906

Token 983: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00862876046448946
    2. ''' → logprob: -4.758628845214844
    3. ' "__' → logprob: -11.383628845214844
    4. '__' → logprob: -12.883628845214844
    5. '   ' → logprob: -16.133628845214844
    6. ' '__' → logprob: -16.258628845214844
    7. '"_' → logprob: -17.258628845214844
    8. '"user' → logprob: -17.758628845214844
    9. '"class' → logprob: -17.883628845214844
    10. ''"' → logprob: -18.008628845214844

Token 984: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005728095420636237
    2. '__' → logprob: -7.500572681427002
    3. '"' → logprob: -11.00057315826416
    4. 'name' → logprob: -13.50057315826416
    5. ''' → logprob: -13.87557315826416
    6. ' main' → logprob: -14.62557315826416
    7. '_main' → logprob: -15.37557315826416
    8. '	main' → logprob: -17.000572204589844
    9. '__":
' → logprob: -17.750572204589844
    10. '   ' → logprob: -17.750572204589844

Token 985: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1008557677268982
    2. '__' → logprob: -2.350855827331543
    3. '__':
' → logprob: -7.350855827331543
    4. '__
' → logprob: -13.100855827331543
    5. '__["' → logprob: -13.225855827331543
    6. '__:' → logprob: -13.225855827331543
    7. '__.' → logprob: -14.600855827331543
    8. '__.__' → logprob: -15.100855827331543
    9. '__
' → logprob: -16.100854873657227
    10. '```' → logprob: -17.100854873657227

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05475182458758354
    2. '	main' → logprob: -3.4297518730163574
    3. 'main' → logprob: -3.9297518730163574
    4. ' main' → logprob: -7.054751873016357
    5. '   ' → logprob: -8.0547513961792
    6. '_main' → logprob: -11.0547513961792
    7. ' ' → logprob: -11.1797513961792
    8. '    
' → logprob: -12.1797513961792
    9. '(main' → logprob: -12.3047513961792
    10. ' ' → logprob: -12.5547513961792

Token 987: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -23.625
    5. '_main' → logprob: -24.75
    6. '(main' → logprob: -24.875
    7. 'import' → logprob: -25.125
    8. '.main' → logprob: -25.125
    9. 'Main' → logprob: -27.5
    10. 'mainwindow' → logprob: -28.125

Token 988: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 986
Tokens correctement prédits (1ère position, stricte): 365
Tokens correctement prédits (1ère position, avec adaptation): 399
Tokens correctement prédits (top 10): 759
Précision stricte (1ère position): 37.02%
Précision adaptée (1ère position): 40.47%
Précision (top 10): 76.98%
================================================================================
