================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x, y, a, b, c = map(int, input().split())
p = list(map(int, input().split()))
q = list(map(int, input().split()))
r = list(map(int, input().split()))

p.sort()
q.sort()
p_pick = []
for i in range(x):
    p_pick.append(p[len(p)-1-i])
p_pick.reverse()

q_pick = []
for i in range(y):
    q_pick.append(q[len(q)-1-i])
q_pick.reverse()

combined = p_pick + q_pick + r
combined.sort()

ans = 0
for i in range(x + y):
    ans += combined[len(combined)-1-i]

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' y' (ID: 342)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06138712167739868
    2. ' =' → logprob: -3.436387062072754
    3. ',' → logprob: -3.686387062072754
    4. '+' → logprob: -7.186387062072754
    5. '.' → logprob: -7.311387062072754
    6. ' ' → logprob: -8.061387062072754
    7. ')' → logprob: -8.811387062072754
    8. '<|end|>' → logprob: -9.311387062072754
    9. '```' → logprob: -9.561387062072754
    10. '[' → logprob: -9.686387062072754

Token 4: ' a' (ID: 261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1831888109445572
    2. ' =' → logprob: -1.808188796043396
    3. ',' → logprob: -6.0581889152526855
    4. ' ' → logprob: -7.0581889152526855
    5. ')' → logprob: -9.433188438415527
    6. '.' → logprob: -10.058188438415527
    7. ' ,' → logprob: -10.183188438415527
    8. '_' → logprob: -11.058188438415527
    9. 'z' → logprob: -11.308188438415527
    10. '```' → logprob: -11.683188438415527

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017709736712276936
    2. ' =' → logprob: -6.751770973205566
    3. '+' → logprob: -7.626770973205566
    4. ',' → logprob: -9.251770973205566
    5. ' ' → logprob: -12.251770973205566
    6. '*' → logprob: -12.626770973205566
    7. '+=' → logprob: -13.376770973205566
    8. '_' → logprob: -13.626770973205566
    9. ')' → logprob: -13.751770973205566
    10. '.' → logprob: -14.251770973205566

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1016693264245987
    2. ',' → logprob: -2.9766693115234375
    3. ' =' → logprob: -3.1016693115234375
    4. ' ' → logprob: -7.9766693115234375
    5. 'b' → logprob: -9.101669311523438
    6. ',b' → logprob: -9.476669311523438
    7. '_' → logprob: -9.726669311523438
    8. '.' → logprob: -9.851669311523438
    9. ' ,' → logprob: -11.101669311523438
    10. ')' → logprob: -11.101669311523438

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00790529977530241
    2. '+' → logprob: -5.25790548324585
    3. ' =' → logprob: -6.50790548324585
    4. ',' → logprob: -7.75790548324585
    5. '```' → logprob: -8.507905006408691
    6. '*' → logprob: -8.632905006408691
    7. '[' → logprob: -9.257905006408691
    8. '_' → logprob: -10.007905006408691
    9. ')' → logprob: -10.007905006408691
    10. '(' → logprob: -10.257905006408691

Token 8: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029536932706832886
    2. ' =' → logprob: -5.87795352935791
    3. ',' → logprob: -8.87795352935791
    4. ')' → logprob: -13.12795352935791
    5. ' ' → logprob: -13.37795352935791
    6. '=
' → logprob: -13.50295352935791
    7. '.' → logprob: -13.75295352935791
    8. '+' → logprob: -13.75295352935791
    9. ';' → logprob: -14.25295352935791
    10. 'x' → logprob: -14.37795352935791

Token 9: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005138642620295286
    2. ' =' → logprob: -5.380138874053955
    3. ',' → logprob: -8.255138397216797
    4. '+' → logprob: -8.630138397216797
    5. '```' → logprob: -11.005138397216797
    6. ')' → logprob: -11.380138397216797
    7. '_' → logprob: -11.380138397216797
    8. '.' → logprob: -11.505138397216797
    9. '[' → logprob: -12.255138397216797
    10. ':' → logprob: -12.505138397216797

Token 10: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6081685423851013
    2. ' ' → logprob: -0.8581685423851013
    3. '1' → logprob: -4.233168601989746
    4. ' [' → logprob: -4.483168601989746
    5. '[' → logprob: -5.483168601989746
    6. '10' → logprob: -7.483168601989746
    7. '<|end|>' → logprob: -7.858168601989746
    8. ' x' → logprob: -8.983168601989746
    9. ' (' → logprob: -9.233168601989746
    10. 'map' → logprob: -9.483168601989746

Token 11: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012675516307353973
    2. '<|end|>' → logprob: -5.0126752853393555
    3. '(lambda' → logprob: -5.6376752853393555
    4. '```' → logprob: -6.5126752853393555
    5. ')' → logprob: -8.637675285339355
    6. '<|end|>' → logprob: -8.762675285339355
    7. '(user' → logprob: -9.262675285339355
    8. 'user' → logprob: -10.137675285339355
    9. '(int' → logprob: -10.137675285339355
    10. '(token' → logprob: -10.387675285339355

Token 12: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5582078099250793
    2. '<|end|>' → logprob: -1.0582077503204346
    3. '(input' → logprob: -3.0582077503204346
    4. '(' → logprob: -4.558207988739014
    5. '<|end|>' → logprob: -5.183207988739014
    6. '(user' → logprob: -5.433207988739014
    7. '(x' → logprob: -5.933207988739014
    8. ')(' → logprob: -6.308207988739014
    9. '```' → logprob: -6.433207988739014
    10. '`)' → logprob: -7.183207988739014

Token 13: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16134966909885406
    2. ' input' → logprob: -1.9113496541976929
    3. '(input' → logprob: -6.911349773406982
    4. ')' → logprob: -9.161349296569824
    5. ' ' → logprob: -11.536349296569824
    6. ',input' → logprob: -12.286349296569824
    7. '=input' → logprob: -12.786349296569824
    8. '	input' → logprob: -14.036349296569824
    9. ' )' → logprob: -14.161349296569824
    10. '```' → logprob: -14.286349296569824

Token 14: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4024764597415924
    2. '(' → logprob: -1.90247642993927
    3. '<|end|>' → logprob: -2.5274765491485596
    4. '()' → logprob: -3.0274765491485596
    5. '())' → logprob: -3.9024765491485596
    6. '(()' → logprob: -4.6524763107299805
    7. '(token' → logprob: -5.1524763107299805
    8. '<|end|>' → logprob: -5.4024763107299805
    9. '```' → logprob: -6.1524763107299805
    10. '('' → logprob: -6.2774763107299805

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.351697033504024e-05
    2. 'strip' → logprob: -9.500083923339844
    3. ' split' → logprob: -12.375083923339844
    4. 'rstrip' → logprob: -12.625083923339844
    5. '(split' → logprob: -14.625083923339844
    6. ')' → logprob: -15.125083923339844
    7. 'spl' → logprob: -15.250083923339844
    8. 'read' → logprob: -17.125083923339844
    9. '```' → logprob: -17.875083923339844
    10. 's' → logprob: -18.375083923339844

Token 16: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04532251134514809
    2. '())' → logprob: -3.2953224182128906
    3. '))' → logprob: -5.045322418212891
    4. '()' → logprob: -7.795322418212891
    5. '`)' → logprob: -8.67032241821289
    6. '(' → logprob: -9.17032241821289
    7. '()))' → logprob: -9.92032241821289
    8. ')`' → logprob: -11.04532241821289
    9. ')))' → logprob: -11.92032241821289
    10. ' )' → logprob: -12.04532241821289

Token 17: 'p' (ID: 79)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8189763426780701
    2. '#' → logprob: -1.8189764022827148
    3. 'i' → logprob: -2.568976402282715
    4. 'if' → logprob: -2.568976402282715
    5. '\n' → logprob: -2.693976402282715
    6. '*' → logprob: -2.818976402282715
    7. ',' → logprob: -3.818976402282715
    8. ':' → logprob: -4.193976402282715
    9. '\' → logprob: -4.443976402282715
    10. '.' → logprob: -4.443976402282715

Token 18: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00980378221720457
    2. ',' → logprob: -5.884803771972656
    3. '=' → logprob: -5.884803771972656
    4. ' =' → logprob: -6.009803771972656
    5. ',r' → logprob: -7.759803771972656
    6. '+' → logprob: -7.884803771972656
    7. '1' → logprob: -8.759803771972656
    8. ')' → logprob: -9.134803771972656
    9. 'ro' → logprob: -9.384803771972656
    10. 'l' → logprob: -9.509803771972656

Token 19: ' list' (ID: 1562)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4656626880168915
    2. 'a' → logprob: -1.0906627178192139
    3. '(x' → logprob: -4.715662479400635
    4. 'max' → logprob: -5.590662479400635
    5. '0' → logprob: -5.715662479400635
    6. 'abs' → logprob: -5.715662479400635
    7. ' x' → logprob: -5.840662479400635
    8. '[]' → logprob: -6.090662479400635
    9. 'int' → logprob: -6.215662479400635
    10. '(a' → logprob: -6.590662479400635

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004772341810166836
    2. 's' → logprob: -6.504772186279297
    3. '(p' → logprob: -6.504772186279297
    4. '(range' → logprob: -8.004772186279297
    5. '()' → logprob: -8.129772186279297
    6. '<|end|>' → logprob: -8.254772186279297
    7. ')' → logprob: -9.379772186279297
    8. '(
' → logprob: -9.504772186279297
    9. '[' → logprob: -9.754772186279297
    10. '(map' → logprob: -10.004772186279297

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005987219978123903
    2. '(' → logprob: -5.130987167358398
    3. 'int' → logprob: -10.630987167358398
    4. '<int' → logprob: -11.005987167358398
    5. '[int' → logprob: -12.255987167358398
    6. '=int' → logprob: -12.755987167358398
    7. '(str' → logprob: -12.755987167358398
    8. '(
' → logprob: -13.380987167358398
    9. ',int' → logprob: -13.380987167358398
    10. '(lambda' → logprob: -14.255987167358398

Token 22: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8868003487586975
    2. ',' → logprob: -1.2618002891540527
    3. ',input' → logprob: -1.2618002891540527
    4. '(' → logprob: -3.8868002891540527
    5. ' ,' → logprob: -7.761800289154053
    6. 'input' → logprob: -8.386800765991211
    7. '(),' → logprob: -8.386800765991211
    8. ')' → logprob: -8.636800765991211
    9. ',int' → logprob: -10.636800765991211
    10. '(int' → logprob: -11.011800765991211

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06201978027820587
    2. ' input' → logprob: -2.8120198249816895
    3. '(input' → logprob: -10.312019348144531
    4. ',input' → logprob: -11.937019348144531
    5. ')' → logprob: -12.437019348144531
    6. 'list' → logprob: -13.312019348144531
    7. '=input' → logprob: -13.437019348144531
    8. '[input' → logprob: -13.562019348144531
    9. ' ' → logprob: -13.937019348144531
    10. '<input' → logprob: -14.562019348144531

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001256780233234167
    2. '()' → logprob: -6.751256942749023
    3. '()))' → logprob: -10.376256942749023
    4. '())' → logprob: -10.876256942749023
    5. ')' → logprob: -10.876256942749023
    6. '(' → logprob: -12.876256942749023
    7. ' ().' → logprob: -13.001256942749023
    8. '>().' → logprob: -13.001256942749023
    9. '()).' → logprob: -13.126256942749023
    10. '()));' → logprob: -13.626256942749023

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -13.875000953674316
    3. ' split' → logprob: -15.875000953674316
    4. '(split' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -18.500001907348633
    6. 'plit' → logprob: -19.250001907348633
    7. 'spl' → logprob: -19.750001907348633
    8. '.split' → logprob: -21.000001907348633
    9. 'read' → logprob: -21.000001907348633
    10. ')' → logprob: -21.000001907348633

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3583720326423645
    2. '())' → logprob: -1.8583719730377197
    3. '))' → logprob: -2.4833719730377197
    4. ')' → logprob: -3.2333719730377197
    5. '()' → logprob: -3.8583719730377197
    6. '(' → logprob: -6.733372211456299
    7. '()));' → logprob: -10.98337173461914
    8. '())))' → logprob: -11.35837173461914
    9. '(),' → logprob: -11.85837173461914
    10. ')))' → logprob: -11.98337173461914

Token 27: 'q' (ID: 80)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8112219572067261
    2. 'for' → logprob: -1.311221957206726
    3. '[' → logprob: -1.811221957206726
    4. 'if' → logprob: -3.4362220764160156
    5. 'a' → logprob: -4.561222076416016
    6. 'i' → logprob: -4.686222076416016
    7. 'x' → logprob: -4.811222076416016
    8. 'p' → logprob: -4.936222076416016
    9. 'r' → logprob: -4.936222076416016
    10. 's' → logprob: -5.186222076416016

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018168438225984573
    2. '=' → logprob: -4.0181684494018555
    3. '.' → logprob: -12.268168449401855
    4. ',' → logprob: -12.268168449401855
    5. '[' → logprob: -12.768168449401855
    6. ' ' → logprob: -13.643168449401855
    7. '(' → logprob: -13.893168449401855
    8. '_' → logprob: -14.643168449401855
    9. ')' → logprob: -14.643168449401855
    10. 'space' → logprob: -14.643168449401855

Token 29: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16054874658584595
    2. 'list' → logprob: -1.9105486869812012
    3. ' p' → logprob: -8.53554916381836
    4. '[' → logprob: -10.03554916381836
    5. '[]' → logprob: -10.66054916381836
    6. ' [' → logprob: -10.78554916381836
    7. ' []' → logprob: -10.91054916381836
    8. 'p' → logprob: -11.41054916381836
    9. '(list' → logprob: -12.78554916381836
    10. '[list' → logprob: -12.78554916381836

Token 30: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4778982698917389
    2. '(map' → logprob: -0.9778982400894165
    3. '(int' → logprob: -5.602898120880127
    4. '(list' → logprob: -10.102898597717285
    5. '((' → logprob: -10.727898597717285
    6. '(
' → logprob: -10.852898597717285
    7. ' (' → logprob: -11.602898597717285
    8. '(

' → logprob: -11.727898597717285
    9. '(range' → logprob: -12.602898597717285
    10. '(lambda' → logprob: -12.602898597717285

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.496052371105179e-05
    2. '<int' → logprob: -10.12509536743164
    3. '(' → logprob: -10.75009536743164
    4. 'int' → logprob: -10.87509536743164
    5. '=int' → logprob: -11.87509536743164
    6. '[int' → logprob: -12.37509536743164
    7. '(str' → logprob: -14.50009536743164
    8. ' (' → logprob: -14.50009536743164
    9. ',int' → logprob: -14.50009536743164
    10. ']int' → logprob: -14.87509536743164

Token 32: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.43853315711021423
    2. ',' → logprob: -1.3135331869125366
    3. ',int' → logprob: -3.188533067703247
    4. '(input' → logprob: -3.563533067703247
    5. ',input' → logprob: -5.063533306121826
    6. '=int' → logprob: -5.688533306121826
    7. '(' → logprob: -6.188533306121826
    8. '<int' → logprob: -6.813533306121826
    9. '[int' → logprob: -7.688533306121826
    10. ' ,' → logprob: -7.688533306121826

Token 33: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009083203040063381
    2. 'input' → logprob: -4.759083271026611
    3. ' int' → logprob: -8.009082794189453
    4. '(int' → logprob: -9.384082794189453
    5. ' input' → logprob: -10.009082794189453
    6. '[int' → logprob: -12.509082794189453
    7. '<int' → logprob: -14.259082794189453
    8. ',int' → logprob: -14.384082794189453
    9. '=int' → logprob: -14.759082794189453
    10. '(input' → logprob: -14.884082794189453

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.5
    3. '.' → logprob: -16.375
    4. ' ().' → logprob: -17.5
    5. ').' → logprob: -18.75
    6. '(.' → logprob: -19.5
    7. '(' → logprob: -19.875
    8. '()).' → logprob: -20.625
    9. '().
' → logprob: -21.25
    10. '>().' → logprob: -21.25

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. ' split' → logprob: -14.25000286102295
    3. 'strip' → logprob: -14.50000286102295
    4. ')' → logprob: -14.75000286102295
    5. 's' → logprob: -15.12500286102295
    6. 'spl' → logprob: -16.000001907348633
    7. '(split' → logprob: -16.000001907348633
    8. '())' → logprob: -16.250001907348633
    9. '```' → logprob: -16.250001907348633
    10. '()' → logprob: -16.375001907348633

Token 36: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1292521953582764
    2. '))' → logprob: -1.2542521953582764
    3. '()))' → logprob: -1.3792521953582764
    4. '())' → logprob: -2.1292521953582764
    5. '()' → logprob: -3.8792521953582764
    6. '()))
' → logprob: -10.754252433776855
    7. '(' → logprob: -11.379252433776855
    8. '())
' → logprob: -12.129252433776855
    9. ')))' → logprob: -12.379252433776855
    10. '()));' → logprob: -12.379252433776855

Token 37: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.326995611190796
    2. 'd' → logprob: -1.451995611190796
    3. 'for' → logprob: -1.826995611190796
    4. '[' → logprob: -2.201995611190796
    5. 'i' → logprob: -2.951995611190796
    6. '=' → logprob: -3.076995611190796
    7. 's' → logprob: -3.576995611190796
    8. '```' → logprob: -3.826995611190796
    9. 'p' → logprob: -4.451995849609375
    10. '.' → logprob: -4.576995849609375

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10091903060674667
    2. '=' → logprob: -2.350919008255005
    3. '.' → logprob: -8.350918769836426
    4. ',' → logprob: -8.725918769836426
    5. '[' → logprob: -8.850918769836426
    6. ' ' → logprob: -9.975918769836426
    7. '_' → logprob: -10.225918769836426
    8. 's' → logprob: -10.600918769836426
    9. '(' → logprob: -11.100918769836426
    10. ')' → logprob: -11.100918769836426

Token 39: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.055294644087553024
    2. 'list' → logprob: -2.9302947521209717
    3. '(list' → logprob: -8.93029499053955
    4. '[' → logprob: -9.43029499053955
    5. ' []' → logprob: -9.55529499053955
    6. ' [' → logprob: -10.18029499053955
    7. ' p' → logprob: -10.18029499053955
    8. '[]' → logprob: -10.68029499053955
    9. '[list' → logprob: -11.80529499053955
    10. ' map' → logprob: -11.93029499053955

Token 40: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0249660424888134
    2. '(int' → logprob: -3.77496600151062
    3. '(list' → logprob: -7.399966239929199
    4. '(map' → logprob: -8.0249662399292
    5. '(range' → logprob: -9.0249662399292
    6. '((' → logprob: -9.1499662399292
    7. '("("' → logprob: -9.2749662399292
    8. '(lambda' → logprob: -9.5249662399292
    9. '(
' → logprob: -10.0249662399292
    10. ' (' → logprob: -10.1499662399292

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006291598547250032
    2. '(' → logprob: -7.37562894821167
    3. '<int' → logprob: -13.875629425048828
    4. '(list' → logprob: -14.500629425048828
    5. '(
' → logprob: -15.125629425048828
    6. '(in' → logprob: -15.375629425048828
    7. '=int' → logprob: -15.750629425048828
    8. '[int' → logprob: -15.875629425048828
    9. ' (' → logprob: -16.000629425048828
    10. 'int' → logprob: -16.125629425048828

Token 42: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022681720554828644
    2. ',' → logprob: -4.522681713104248
    3. ',int' → logprob: -4.772681713104248
    4. '(input' → logprob: -6.647681713104248
    5. '(' → logprob: -7.397681713104248
    6. '=int' → logprob: -7.647681713104248
    7. '<int' → logprob: -8.397682189941406
    8. '```' → logprob: -8.647682189941406
    9. 'int' → logprob: -9.397682189941406
    10. ')' → logprob: -9.772682189941406

Token 43: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0827661007642746
    2. 'input' → logprob: -2.582766056060791
    3. ' input' → logprob: -6.082766056060791
    4. '(int' → logprob: -6.832766056060791
    5. ' int' → logprob: -7.707766056060791
    6. '(input' → logprob: -10.08276653289795
    7. '[int' → logprob: -11.33276653289795
    8. '<int' → logprob: -12.45776653289795
    9. ',int' → logprob: -14.33276653289795
    10. '=int' → logprob: -14.45776653289795

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8908587662735954e-05
    2. '()' → logprob: -11.625019073486328
    3. '.' → logprob: -12.500019073486328
    4. ' ().' → logprob: -13.000019073486328
    5. ').' → logprob: -13.125019073486328
    6. '()).' → logprob: -14.500019073486328
    7. '>().' → logprob: -14.625019073486328
    8. '(.' → logprob: -15.000019073486328
    9. '(' → logprob: -15.125019073486328
    10. ' .' → logprob: -15.875019073486328

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'spl' → logprob: -14.500000953674316
    3. ')' → logprob: -15.125000953674316
    4. ' split' → logprob: -15.500000953674316
    5. '(split' → logprob: -15.750000953674316
    6. '```' → logprob: -16.500001907348633
    7. 's' → logprob: -16.625001907348633
    8. 'sp' → logprob: -17.625001907348633
    9. 'strip' → logprob: -17.875001907348633
    10. 'rstrip' → logprob: -19.375001907348633

Token 46: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8863094449043274
    2. ')' → logprob: -1.0113093852996826
    3. '()))' → logprob: -1.8863093852996826
    4. '))' → logprob: -3.2613093852996826
    5. '()' → logprob: -3.3863093852996826
    6. '(' → logprob: -9.136309623718262
    7. '()))
' → logprob: -9.636309623718262
    8. '())
' → logprob: -10.511309623718262
    9. ' ())' → logprob: -11.136309623718262
    10. '()[' → logprob: -12.386309623718262

Token 47: 'p' (ID: 79)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8782097101211548
    2. 'd' → logprob: -1.2532097101211548
    3. 'i' → logprob: -2.3782095909118652
    4. 's' → logprob: -3.1282095909118652
    5. 'result' → logprob: -3.6282095909118652
    6. 'x' → logprob: -3.8782095909118652
    7. 'p' → logprob: -3.8782095909118652
    8. 'f' → logprob: -4.378209590911865
    9. 't' → logprob: -4.878209590911865
    10. '=' → logprob: -5.003209590911865

Token 48: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.060391224920749664
    2. '.' → logprob: -3.1853911876678467
    3. '[:]' → logprob: -4.685391426086426
    4. '+' → logprob: -5.935391426086426
    5. '[p' → logprob: -6.310391426086426
    6. '[::-' → logprob: -8.060391426086426
    7. '\[' → logprob: -8.060391426086426
    8. '[q' → logprob: -8.185391426086426
    9. '```' → logprob: -8.185391426086426
    10. '_' → logprob: -8.185391426086426

Token 49: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06362413614988327
    2. '()' → logprob: -2.813624143600464
    3. '(p' → logprob: -7.063623905181885
    4. '((' → logprob: -8.188624382019043
    5. '(.' → logprob: -9.063624382019043
    6. '.' → logprob: -9.438624382019043
    7. '(()' → logprob: -9.688624382019043
    8. '```' → logprob: -10.063624382019043
    9. '(.)' → logprob: -10.188624382019043
    10. '("("' → logprob: -10.313624382019043

Token 50: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0014449955197051167
    2. 'r' → logprob: -7.7514448165893555
    3. 'for' → logprob: -8.251444816589355
    4. 'p' → logprob: -8.626444816589355
    5. 'c' → logprob: -9.376444816589355
    6. '(
' → logprob: -9.501444816589355
    7. '(' → logprob: -9.751444816589355
    8. 'a' → logprob: -9.876444816589355
    9. 'if' → logprob: -10.126444816589355
    10. ',' → logprob: -10.501444816589355

Token 51: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07903354614973068
    2. '.' → logprob: -2.579033613204956
    3. '.reverse' → logprob: -9.329033851623535
    4. '().' → logprob: -10.829033851623535
    5. 'sort' → logprob: -11.454033851623535
    6. '.s' → logprob: -11.704033851623535
    7. '()' → logprob: -12.079033851623535
    8. ' .' → logprob: -12.329033851623535
    9. '.sorted' → logprob: -13.079033851623535
    10. '.q' → logprob: -14.954033851623535

Token 52: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012571455910801888
    2. '(' → logprob: -4.387571334838867
    3. '(q' → logprob: -10.637571334838867
    4. '()
' → logprob: -11.387571334838867
    5. '().' → logprob: -11.887571334838867
    6. '(
' → logprob: -12.762571334838867
    7. '()`' → logprob: -12.762571334838867
    8. '(p' → logprob: -13.137571334838867
    9. '()(' → logprob: -13.137571334838867
    10. '()

' → logprob: -13.387571334838867

Token 53: 'p' (ID: 79)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007335089612752199
    2. '```' → logprob: -7.875733375549316
    3. 'q' → logprob: -9.375733375549316
    4. 'p' → logprob: -9.625733375549316
    5. 'c' → logprob: -10.000733375549316
    6. ' r' → logprob: -10.250733375549316
    7. 'for' → logprob: -10.750733375549316
    8. '``' → logprob: -11.500733375549316
    9. '`' → logprob: -11.625733375549316
    10. '
' → logprob: -11.750733375549316

Token 54: '_pick' (ID: 139233)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02553178183734417
    2. '[-' → logprob: -5.400531768798828
    3. ',' → logprob: -5.525531768798828
    4. '[:]' → logprob: -5.525531768798828
    5. '+' → logprob: -6.150531768798828
    6. '[::-' → logprob: -6.275531768798828
    7. '<|end|>' → logprob: -6.275531768798828
    8. '[]' → logprob: -6.525531768798828
    9. '[p' → logprob: -6.900531768798828
    10. ')' → logprob: -7.650531768798828

Token 55: ' =' (ID: 314)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.0457714796066284
    2. '(' → logprob: -1.4207714796066284
    3. '_idx' → logprob: -2.045771598815918
    4. '_' → logprob: -2.295771598815918
    5. ' =' → logprob: -2.795771598815918
    6. '(p' → logprob: -3.420771598815918
    7. 's' → logprob: -3.670771598815918
    8. '()' → logprob: -4.545771598815918
    9. '=' → logprob: -4.920771598815918
    10. '_count' → logprob: -5.170771598815918

Token 56: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015036956407129765
    2. 'p' → logprob: -4.7650370597839355
    3. ' ' → logprob: -5.7650370597839355
    4. 'len' → logprob: -7.0150370597839355
    5. 'b' → logprob: -7.1400370597839355
    6. 'x' → logprob: -7.8900370597839355
    7. ' p' → logprob: -8.015036582946777
    8. 'a' → logprob: -8.265036582946777
    9. '[' → logprob: -9.015036582946777
    10. '[]' → logprob: -9.140036582946777

Token 57: 'for' (ID: 1938)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1632881611585617
    2. 'for' → logprob: -3.163288116455078
    3. 'p' → logprob: -3.413288116455078
    4. ' i' → logprob: -3.538288116455078
    5. ' for' → logprob: -4.038288116455078
    6. 'q' → logprob: -4.413288116455078
    7. 'j' → logprob: -4.788288116455078
    8. ' p' → logprob: -6.288288116455078
    9. ' ' → logprob: -6.538288116455078
    10. 'idx' → logprob: -6.538288116455078

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06430032849311829
    2. ' _' → logprob: -3.314300298690796
    3. ' p' → logprob: -4.314300537109375
    4. ' ' → logprob: -5.814300537109375
    5. ' pi' → logprob: -5.814300537109375
    6. '_' → logprob: -6.564300537109375
    7. ' x' → logprob: -6.689300537109375
    8. ' v' → logprob: -6.814300537109375
    9. 'i' → logprob: -7.189300537109375
    10. ' val' → logprob: -7.189300537109375

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08981406688690186
    2. 'in' → logprob: -2.4648141860961914
    3. ' ' → logprob: -7.464814186096191
    4. 'n' → logprob: -8.464814186096191
    5. '	in' → logprob: -10.589814186096191
    6. ' n' → logprob: -11.089814186096191
    7. ',' → logprob: -11.589814186096191
    8. 'p' → logprob: -11.839814186096191
    9. '_' → logprob: -11.964814186096191
    10. '  ' → logprob: -12.464814186096191

Token 60: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3648442327976227
    2. 'range' → logprob: -1.2398442029953003
    3. 'p' → logprob: -4.86484432220459
    4. ' p' → logprob: -4.98984432220459
    5. 'q' → logprob: -7.36484432220459
    6. 'r' → logprob: -7.73984432220459
    7. ' q' → logprob: -8.11484432220459
    8. ' r' → logprob: -8.48984432220459
    9. 'b' → logprob: -9.98984432220459
    10. ' ' → logprob: -10.23984432220459

Token 61: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.044758789241313934
    2. '(c' → logprob: -4.0447587966918945
    3. '(' → logprob: -4.4197587966918945
    4. '(b' → logprob: -4.6697587966918945
    5. '(len' → logprob: -5.5447587966918945
    6. '(x' → logprob: -7.6697587966918945
    7. '(n' → logprob: -8.419758796691895
    8. '(y' → logprob: -9.294758796691895
    9. '(p' → logprob: -9.794758796691895
    10. '(q' → logprob: -10.669758796691895

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026194164529442787
    2. ' ):' → logprob: -6.50261926651001
    3. ')' → logprob: -7.62761926651001
    4. '+' → logprob: -7.87761926651001
    5. '):
' → logprob: -9.002619743347168
    6. ':' → logprob: -9.877619743347168
    7. ',' → logprob: -10.127619743347168
    8. '-' → logprob: -11.252619743347168
    9. ' +' → logprob: -11.877619743347168
    10. ']:' → logprob: -13.252619743347168

Token 63: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.63071209192276
    2. ' ' → logprob: -1.8807120323181152
    3. ' if' → logprob: -2.0057120323181152
    4. '   ' → logprob: -2.2557120323181152
    5. 'p' → logprob: -3.2557120323181152
    6. 'if' → logprob: -3.8807120323181152
    7. '    ' → logprob: -5.380712032318115
    8. ' while' → logprob: -6.380712032318115
    9. '  ' → logprob: -6.505712032318115
    10. ' for' → logprob: -6.880712032318115

Token 64: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9021301865577698
    2. 'p' (adapté à ' p') → logprob: -1.402130126953125
    3. 'if' → logprob: -1.902130126953125
    4. ' p' → logprob: -2.277130126953125
    5. ' ' → logprob: -2.652130126953125
    6. '   ' → logprob: -4.277130126953125
    7. 'i' → logprob: -5.277130126953125
    8. ' i' → logprob: -5.777130126953125
    9. '    ' → logprob: -6.652130126953125
    10. '  ' → logprob: -8.027130126953125

Token 65: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.0376497320830822
    2. '_' → logprob: -3.537649631500244
    3. '_p' → logprob: -5.287649631500244
    4. ' _' → logprob: -7.037649631500244
    5. '_pickle' → logprob: -8.287650108337402
    6. '_i' → logprob: -8.287650108337402
    7. '_choose' → logprob: -8.537650108337402
    8. '_append' → logprob: -8.787650108337402
    9. '_picker' → logprob: -8.912650108337402
    10. ' ' → logprob: -8.912650108337402

Token 66: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013593669980764389
    2. '.' → logprob: -4.513593673706055
    3. ' +=' → logprob: -6.638593673706055
    4. ' .' → logprob: -7.138593673706055
    5. '.extend' → logprob: -8.263593673706055
    6. ' ' → logprob: -10.138593673706055
    7. '+=' → logprob: -10.138593673706055
    8. 'append' → logprob: -10.763593673706055
    9. ' =' → logprob: -10.888593673706055
    10. '+' → logprob: -11.138593673706055

Token 67: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0015849737683311105
    2. '(' → logprob: -6.501585006713867
    3. '(q' → logprob: -10.126585006713867
    4. '((' → logprob: -10.876585006713867
    5. '(r' → logprob: -11.876585006713867
    6. 'p' → logprob: -12.626585006713867
    7. '(
' → logprob: -13.251585006713867
    8. '()' → logprob: -13.251585006713867
    9. '(max' → logprob: -13.751585006713867
    10. '(len' → logprob: -13.876585006713867

Token 68: '[len' (ID: 57582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007764681242406368
    2. '[' → logprob: -5.38276481628418
    3. '[-' → logprob: -6.75776481628418
    4. '[p' → logprob: -7.13276481628418
    5. '.pop' → logprob: -8.13276481628418
    6. '[q' → logprob: -8.50776481628418
    7. '[b' → logprob: -8.50776481628418
    8. ')' → logprob: -8.75776481628418
    9. '[y' → logprob: -8.88276481628418
    10. '[x' → logprob: -10.00776481628418

Token 69: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0010348338400945067
    2. 'p' → logprob: -7.501034736633301
    3. '(' → logprob: -7.876034736633301
    4. '(q' → logprob: -10.0010347366333
    5. '-' → logprob: -10.7510347366333
    6. ' -' → logprob: -12.2510347366333
    7. '-p' → logprob: -12.5010347366333
    8. '(
' → logprob: -12.5010347366333
    9. '(a' → logprob: -12.6260347366333
    10. '(x' → logprob: -13.0010347366333

Token 70: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.194562315940857
    2. ')-' → logprob: -1.319562315940857
    3. '-' → logprob: -1.444562315940857
    4. ' -' → logprob: -2.4445624351501465
    5. '-p' → logprob: -2.4445624351501465
    6. 'p' → logprob: -5.4445624351501465
    7. ']' → logprob: -5.5695624351501465
    8. ']-' → logprob: -5.6945624351501465
    9. '-i' → logprob: -5.8195624351501465
    10. '(p' → logprob: -6.5695624351501465

Token 71: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7363476753234863
    2. '1' → logprob: -0.8613476753234863
    3. 'i' → logprob: -2.3613476753234863
    4. ' x' → logprob: -6.236347675323486
    5. ' i' → logprob: -7.486347675323486
    6. 'y' → logprob: -7.611347675323486
    7. ' ' → logprob: -7.986347675323486
    8. 'a' → logprob: -8.236347198486328
    9. 'b' → logprob: -8.986347198486328
    10. '(x' → logprob: -9.236347198486328

Token 72: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.46423467993736267
    2. '-i' → logprob: -1.339234709739685
    3. '-' → logprob: -2.2142345905303955
    4. '])' → logprob: -10.464234352111816
    5. ' ' → logprob: -11.089234352111816
    6. ']' → logprob: -11.089234352111816
    7. ']-' → logprob: -12.089234352111816
    8. ')' → logprob: -12.214234352111816
    9. '-
' → logprob: -12.839234352111816
    10. '-k' → logprob: -12.964234352111816

Token 73: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.035878196358680725
    2. ')' → logprob: -3.4108781814575195
    3. ']' → logprob: -6.2858781814575195
    4. ')])' → logprob: -8.41087818145752
    5. '))' → logprob: -9.91087818145752
    6. ' ])' → logprob: -10.03587818145752
    7. ')]' → logprob: -11.28587818145752
    8. '])
' → logprob: -11.41087818145752
    9. ']))' → logprob: -11.53587818145752
    10. ' )' → logprob: -12.28587818145752

Token 74: 'p' (ID: 79)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8775531053543091
    2. 'for' → logprob: -1.627553105354309
    3. 'q' → logprob: -1.752553105354309
    4. 'p' → logprob: -2.8775529861450195
    5. 'b' → logprob: -3.0025529861450195
    6. ' for' → logprob: -3.2525529861450195
    7. ' ' → logprob: -3.8775529861450195
    8. 'c' → logprob: -4.3775529861450195
    9. '<|end|>' → logprob: -4.3775529861450195
    10. 'a' → logprob: -6.1275529861450195

Token 75: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.13506411015987396
    2. '[' → logprob: -2.885064125061035
    3. '[p' → logprob: -3.635064125061035
    4. '_' → logprob: -4.010064125061035
    5. '_p' → logprob: -4.635064125061035
    6. '[len' → logprob: -5.010064125061035
    7. '<|end|>' → logprob: -6.010064125061035
    8. '_pickle' → logprob: -7.010064125061035
    9. '[-' → logprob: -7.260064125061035
    10. '[:]' → logprob: -7.510064125061035

Token 76: '.reverse' (ID: 65426)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03368857875466347
    2. '(' → logprob: -3.408688545227051
    3. '```' → logprob: -11.78368854522705
    4. ' ()' → logprob: -11.90868854522705
    5. '`()' → logprob: -12.15868854522705
    6. '()`' → logprob: -12.40868854522705
    7. '().' → logprob: -12.65868854522705
    8. ']()' → logprob: -13.28368854522705
    9. '.' → logprob: -13.40868854522705
    10. ' parentheses' → logprob: -13.65868854522705

Token 78: 'q' (ID: 80)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.926718831062317
    2. 'for' → logprob: -1.926718831062317
    3. 'q' → logprob: -2.0517187118530273
    4. 'a' → logprob: -2.3017187118530273
    5. 'b' → logprob: -2.5517187118530273
    6. 'c' → logprob: -2.6767187118530273
    7. 'p' → logprob: -2.6767187118530273
    8. ' for' → logprob: -3.0517187118530273
    9. ')' → logprob: -3.1767187118530273
    10. '<|end|>' → logprob: -3.1767187118530273

Token 79: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.07254596799612045
    2. '_p' → logprob: -3.8225460052490234
    3. '_sort' → logprob: -4.322546005249023
    4. '.' → logprob: -4.697546005249023
    5. '[' → logprob: -4.947546005249023
    6. '.sort' → logprob: -5.697546005249023
    7. '[q' → logprob: -6.197546005249023
    8. '_append' → logprob: -6.322546005249023
    9. '_q' → logprob: -6.572546005249023
    10. '_' → logprob: -6.947546005249023

Token 80: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06693389266729355
    2. '.append' → logprob: -3.0669338703155518
    3. '[:]' → logprob: -5.191934108734131
    4. ' .' → logprob: -5.566934108734131
    5. '[' → logprob: -5.816934108734131
    6. '.sort' → logprob: -6.566934108734131
    7. '.extend' → logprob: -6.941934108734131
    8. '<|end|>' → logprob: -7.191934108734131
    9. '.reverse' → logprob: -7.691934108734131
    10. '.setdefault' → logprob: -8.441933631896973

Token 81: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6712813973426819
    2. '[]' → logprob: -1.171281337738037
    3. ' [' → logprob: -2.546281337738037
    4. '[q' → logprob: -3.046281337738037
    5. ' q' → logprob: -3.921281337738037
    6. 'q' → logprob: -3.921281337738037
    7. '[' → logprob: -5.046281337738037
    8. '[]
' → logprob: -5.796281337738037
    9. ' []
' → logprob: -6.046281337738037
    10. '[
' → logprob: -7.921281337738037

Token 82: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.837811088189483e-05
    2. 'q' → logprob: -9.875068664550781
    3. 'count' → logprob: -12.375068664550781
    4. 'index' → logprob: -12.500068664550781
    5. 'idx' → logprob: -13.000068664550781
    6. 'while' → logprob: -13.375068664550781
    7. ' for' → logprob: -14.250068664550781
    8. 'j' → logprob: -14.250068664550781
    9. 'i' → logprob: -14.625068664550781
    10. 'fo' → logprob: -15.125068664550781

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18726912140846252
    2. 'i' → logprob: -2.0622692108154297
    3. ' j' → logprob: -3.3122692108154297
    4. 'j' → logprob: -5.06226921081543
    5. ' ' → logprob: -7.56226921081543
    6. ' range' → logprob: -9.68726921081543
    7. 'range' → logprob: -9.81226921081543
    8. '  ' → logprob: -10.31226921081543
    9. '_i' → logprob: -10.56226921081543
    10. ' _' → logprob: -10.87476921081543

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029846634715795517
    2. 'in' → logprob: -3.529846668243408
    3. ' ' → logprob: -9.40484619140625
    4. 'n' → logprob: -13.02984619140625
    5. 'range' → logprob: -13.02984619140625
    6. '  ' → logprob: -13.15484619140625
    7. 'In' → logprob: -13.65484619140625
    8. 's' → logprob: -14.65484619140625
    9. 'import' → logprob: -14.65484619140625
    10. '	in' → logprob: -14.77984619140625

Token 85: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.42871618270874023
    2. ' range' → logprob: -1.0537161827087402
    3. ' ' → logprob: -12.178716659545898
    4. '(range' → logprob: -12.553716659545898
    5. '   ' → logprob: -13.803716659545898
    6. '  ' → logprob: -13.803716659545898
    7. 'r' → logprob: -13.928716659545898
    8. 'ran' → logprob: -14.553716659545898
    9. 're' → logprob: -14.678716659545898
    10. '	range' → logprob: -14.803716659545898

Token 86: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2703839838504791
    2. '(b' → logprob: -1.6453839540481567
    3. '(c' → logprob: -3.8953840732574463
    4. '(a' → logprob: -4.270383834838867
    5. 'y' → logprob: -5.770383834838867
    6. '(x' → logprob: -6.020383834838867
    7. '(' → logprob: -6.145383834838867
    8. 'b' → logprob: -7.020383834838867
    9. '(q' → logprob: -8.395383834838867
    10. 'a' → logprob: -8.520383834838867

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07082939893007278
    2. '):
' → logprob: -2.945829391479492
    3. ':' → logprob: -4.320829391479492
    4. '+' → logprob: -6.070829391479492
    5. '+:' → logprob: -9.695829391479492
    6. ' ):' → logprob: -9.820829391479492
    7. ')' → logprob: -10.195829391479492
    8. ':
' → logprob: -10.445829391479492
    9. '):
' → logprob: -11.820829391479492
    10. ',' → logprob: -12.320829391479492

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04146992415189743
    2. 'q' → logprob: -3.2914698123931885
    3. ' q' → logprob: -5.791470050811768
    4. '	q' → logprob: -8.16646957397461
    5. '  ' → logprob: -11.04146957397461
    6. '```' → logprob: -11.16646957397461
    7. ',q' → logprob: -11.29146957397461
    8. ' ' → logprob: -11.41646957397461
    9. '<|end|>' → logprob: -12.04146957397461
    10. ':q' → logprob: -12.54146957397461

Token 89: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.38746142387390137
    2. ' q' → logprob: -1.1374614238739014
    3. '   ' → logprob: -7.6374616622924805
    4. '	q' → logprob: -10.38746166229248
    5. 'b' → logprob: -11.26246166229248
    6. 'range' → logprob: -11.51246166229248
    7. 'p' → logprob: -12.01246166229248
    8. ' ' → logprob: -12.01246166229248
    9. ' range' → logprob: -12.76246166229248
    10. '    ' → logprob: -13.07496166229248

Token 90: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -1.0325924449716695e-05
    2. 'pick' → logprob: -12.75001049041748
    3. '_p' → logprob: -13.37501049041748
    4. '_pickle' → logprob: -13.62501049041748
    5. '_append' → logprob: -14.00001049041748
    6. '_picker' → logprob: -14.12501049041748
    7. '_choose' → logprob: -14.75001049041748
    8. 'Pick' → logprob: -15.00001049041748
    9. '_take' → logprob: -15.12501049041748
    10. 'len' → logprob: -15.25001049041748

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015293825417757034
    2. '.' → logprob: -6.501529216766357
    3. ' .' → logprob: -10.876529693603516
    4. 'append' → logprob: -12.376529693603516
    5. '.extend' → logprob: -13.626529693603516
    6. '.p' → logprob: -13.626529693603516
    7. '_append' → logprob: -14.501529693603516
    8. '.ap' → logprob: -15.501529693603516
    9. '.pick' → logprob: -16.251529693603516
    10. '   ' → logprob: -16.376529693603516

Token 92: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0015164113137871027
    2. '(' → logprob: -6.501516342163086
    3. '(r' → logprob: -11.751516342163086
    4. ' (' → logprob: -12.876516342163086
    5. 'q' → logprob: -14.001516342163086
    6. '(a' → logprob: -14.501516342163086
    7. '((' → logprob: -14.501516342163086
    8. '(p' → logprob: -15.001516342163086
    9. '(i' → logprob: -15.501516342163086
    10. '(s' → logprob: -15.751516342163086

Token 93: '[len' (ID: 57582)
  Prédit: '[len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.016680890694260597
    2. '[i' → logprob: -4.141680717468262
    3. '[-' → logprob: -7.516680717468262
    4. '[' → logprob: -9.766680717468262
    5. 'len' → logprob: -11.141680717468262
    6. '[:' → logprob: -11.266680717468262
    7. '[l' → logprob: -13.516680717468262
    8. '(len' → logprob: -13.516680717468262
    9. '[(' → logprob: -13.516680717468262
    10. '[b' → logprob: -13.641680717468262

Token 94: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0001427538663847372
    2. '(' → logprob: -8.875143051147461
    3. '(p' → logprob: -14.250143051147461
    4. 'q' → logprob: -14.250143051147461
    5. ' (' → logprob: -14.375143051147461
    6. '(Q' → logprob: -16.12514305114746
    7. '[q' → logprob: -16.50014305114746
    8. '(r' → logprob: -16.62514305114746
    9. ')' → logprob: -16.62514305114746
    10. ' ' → logprob: -16.62514305114746

Token 95: ')-' (ID: 14080)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.3328390121459961
    2. '-q' → logprob: -1.832839012145996
    3. ')-' → logprob: -2.582839012145996
    4. ')' → logprob: -3.582839012145996
    5. 'q' → logprob: -4.457839012145996
    6. ' -' → logprob: -5.832839012145996
    7. '-' → logprob: -6.457839012145996
    8. ' (' → logprob: -7.457839012145996
    9. '[q' → logprob: -7.457839012145996
    10. '(' → logprob: -7.582839012145996

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.513339445111342e-05
    2. ' ' → logprob: -10.625044822692871
    3. '-' → logprob: -11.375044822692871
    4. 'b' → logprob: -13.250044822692871
    5. 'y' → logprob: -13.312544822692871
    6. 'i' → logprob: -13.500044822692871
    7. '2' → logprob: -14.125044822692871
    8. '   ' → logprob: -14.625044822692871
    9. ' -' → logprob: -14.812544822692871
    10. '
' → logprob: -15.000044822692871

Token 97: '-i' (ID: 18499)
  Prédit: '-i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.06276366859674454
    2. '-' → logprob: -2.8127636909484863
    3. ' -' → logprob: -7.437763690948486
    4. '-ai' → logprob: -9.687763214111328
    5. '<|end|>' → logprob: -10.187763214111328
    6. '-python' → logprob: -10.937763214111328
    7. '-q' → logprob: -11.062763214111328
    8. '-user' → logprob: -11.562763214111328
    9. '-ui' → logprob: -11.687763214111328
    10. '   ' → logprob: -11.687763214111328

Token 98: '])
' (ID: 5169)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.01301856990903616
    2. '])' → logprob: -5.013018608093262
    3. '-' → logprob: -5.263018608093262
    4. ' -' → logprob: -6.888018608093262
    5. '   ' → logprob: -10.888018608093262
    6. ' ' → logprob: -11.138018608093262
    7. '-)' → logprob: -11.513018608093262
    8. ')' → logprob: -11.513018608093262
    9. ' ])' → logprob: -12.138018608093262
    10. '])
' → logprob: -12.263018608093262

Token 99: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011852304451167583
    2. ' q' → logprob: -6.751185417175293
    3. '	q' → logprob: -12.376185417175293
    4. 'reverse' → logprob: -12.876185417175293
    5. '   ' → logprob: -13.751185417175293
    6. 'b' → logprob: -13.751185417175293
    7. ' 
' → logprob: -13.876185417175293
    8. '_q' → logprob: -14.001185417175293
    9. '
' → logprob: -14.126185417175293
    10. ' ' → logprob: -14.501185417175293

Token 100: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -2.069664333248511e-05
    2. '_pickle' → logprob: -11.875020980834961
    3. '_p' → logprob: -12.125020980834961
    4. '_choose' → logprob: -13.500020980834961
    5. 'pick' → logprob: -13.875020980834961
    6. 'Pick' → logprob: -13.875020980834961
    7. 'q' → logprob: -14.125020980834961
    8. '_picker' → logprob: -14.125020980834961
    9. '_append' → logprob: -14.625020980834961
    10. '_select' → logprob: -14.750020980834961

Token 101: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.03327678516507149
    2. '.' → logprob: -3.5332767963409424
    3. '[::-' → logprob: -5.908276557922363
    4. 'reverse' → logprob: -7.908276557922363
    5. '.sort' → logprob: -8.158276557922363
    6. ' .' → logprob: -9.908276557922363
    7. '[' → logprob: -10.033276557922363
    8. ' reverse' → logprob: -11.283276557922363
    9. '_reverse' → logprob: -11.783276557922363
    10. '(reverse' → logprob: -12.283276557922363

Token 102: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.507972572464496e-05
    2. '(' → logprob: -9.50009536743164
    3. '()
' → logprob: -11.00009536743164
    4. '()

' → logprob: -13.50009536743164
    5. '()`' → logprob: -14.25009536743164
    6. '(
' → logprob: -15.12509536743164
    7. '()]' → logprob: -15.37509536743164
    8. '())' → logprob: -15.75009536743164
    9. '()\' → logprob: -16.12509536743164
    10. '()
' → logprob: -16.12509536743164

Token 103: 'combined' (ID: 140567)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03941159322857857
    2. 'c' → logprob: -4.039411544799805
    3. 'ans' → logprob: -5.789411544799805
    4. 'result' → logprob: -5.789411544799805
    5. 'res' → logprob: -5.914411544799805
    6. 'max' → logprob: -6.164411544799805
    7. 'merged' → logprob: -6.539411544799805
    8. 'combined' → logprob: -6.664411544799805
    9. 'answer' → logprob: -6.914411544799805
    10. 'total' → logprob: -7.414411544799805

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18210545182228088
    2. '=' → logprob: -1.8071054220199585
    3. '_' → logprob: -6.182105541229248
    4. '_p' → logprob: -9.18210506439209
    5. '=[]' → logprob: -9.43210506439209
    6. '_scores' → logprob: -10.68210506439209
    7. ' ' → logprob: -10.80710506439209
    8. '_sorted' → logprob: -11.18210506439209
    9. '=[]
' → logprob: -11.93210506439209
    10. 's' → logprob: -12.30710506439209

Token 105: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09492667019367218
    2. ' p' → logprob: -3.219926595687866
    3. 'sorted' → logprob: -3.344926595687866
    4. '[]' → logprob: -4.969926834106445
    5. '[p' → logprob: -5.344926834106445
    6. ' sorted' → logprob: -5.969926834106445
    7. '[]
' → logprob: -7.969926834106445
    8. ' ' → logprob: -8.469926834106445
    9. ' []' → logprob: -8.844926834106445
    10. '   ' → logprob: -9.219926834106445

Token 106: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -4.787507714354433e-05
    2. 'pick' → logprob: -11.00004768371582
    3. '_pickle' → logprob: -11.50004768371582
    4. '_p' → logprob: -12.12504768371582
    5. 'Pick' → logprob: -13.00004768371582
    6. '_' → logprob: -13.12504768371582
    7. '_picker' → logprob: -13.25004768371582
    8. '_copy' → logprob: -14.00004768371582
    9. '_keep' → logprob: -14.12504768371582
    10. '_PICK' → logprob: -14.12504768371582

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932122707366943
    2. ' +' → logprob: -0.6932122707366943
    3. '+p' → logprob: -10.568212509155273
    4. '+b' → logprob: -10.943212509155273
    5. '+r' → logprob: -11.943212509155273
    6. '+y' → logprob: -12.693212509155273
    7. '+[' → logprob: -13.068212509155273
    8. '+k' → logprob: -13.568212509155273
    9. '+c' → logprob: -13.693212509155273
    10. '[' → logprob: -13.818212509155273

Token 108: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.029760906472802162
    2. ' q' → logprob: -3.5297608375549316
    3. ' ' → logprob: -12.40476131439209
    4. '	q' → logprob: -13.52976131439209
    5. '[q' → logprob: -13.52976131439209
    6. '   ' → logprob: -14.27976131439209
    7. 'r' → logprob: -14.71726131439209
    8. '(q' → logprob: -14.71726131439209
    9. '_q' → logprob: -14.90476131439209
    10. '  ' → logprob: -14.90476131439209

Token 109: '_pick' (ID: 139233)
  Prédit: '_pick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pick' → logprob: -0.013149288482964039
    2. '_' → logprob: -5.638149261474609
    3. '[' → logprob: -5.763149261474609
    4. '_sorted' → logprob: -6.888149261474609
    5. '<|end|>' → logprob: -6.888149261474609
    6. 'pick' → logprob: -7.263149261474609
    7. '[q' → logprob: -7.263149261474609
    8. '_p' → logprob: -7.763149261474609
    9. '_sort' → logprob: -8.01314926147461
    10. 'q' → logprob: -8.13814926147461

Token 110: ' +' (ID: 659)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.45032182335853577
    2. 'combined' → logprob: -1.5753217935562134
    3. '.' → logprob: -2.700321912765503
    4. 'c' → logprob: -3.575321912765503
    5. 'sorted' → logprob: -3.700321912765503
    6. 's' → logprob: -4.450321674346924
    7. ' combined' → logprob: -5.200321674346924
    8. '+' → logprob: -5.450321674346924
    9. '[' → logprob: -6.200321674346924
    10. 'r' → logprob: -6.200321674346924

Token 111: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001242017257027328
    2. ' r' → logprob: -6.751242160797119
    3. 'sorted' → logprob: -9.751241683959961
    4. '[r' → logprob: -11.626241683959961
    5. ' sorted' → logprob: -13.376241683959961
    6. '	r' → logprob: -14.126241683959961
    7. 'c' → logprob: -14.251241683959961
    8. '[' → logprob: -14.251241683959961
    9. '   ' → logprob: -14.751241683959961
    10. 'list' → logprob: -15.501241683959961

Token 112: '
' (ID: 198)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.030854981392621994
    2. '
' → logprob: -3.5308549404144287
    3. '<|end|>' → logprob: -7.780855178833008
    4. 'sorted' → logprob: -7.905855178833008
    5. '.sorted' → logprob: -9.280855178833008
    6. '.' → logprob: -9.530855178833008
    7. 'combined' → logprob: -10.030855178833008
    8. 'sort' → logprob: -10.030855178833008
    9. '_sorted' → logprob: -10.905855178833008
    10. '

' → logprob: -11.530855178833008

Token 113: 'combined' (ID: 140567)
  Prédit: 'combined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -5.5577775128767826e-06
    2. ' combined' → logprob: -12.500005722045898
    3. 'sorted' → logprob: -13.750005722045898
    4. '
' → logprob: -15.375005722045898
    5. 'comb' → logprob: -16.2500057220459
    6. '```' → logprob: -16.3750057220459
    7. 'from' → logprob: -16.5000057220459
    8. 'import' → logprob: -16.6250057220459
    9. 'com' → logprob: -17.1250057220459
    10. '.' → logprob: -17.6250057220459

Token 114: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.016669638454914093
    2. '.' → logprob: -4.141669750213623
    3. '.sorted' → logprob: -8.391669273376465
    4. '_sorted' → logprob: -8.891669273376465
    5. '<|end|>' → logprob: -9.016669273376465
    6. 'sort' → logprob: -9.516669273376465
    7. 'sorted' → logprob: -10.016669273376465
    8. '.s' → logprob: -12.266669273376465
    9. '[' → logprob: -12.641669273376465
    10. '[:]' → logprob: -12.766669273376465

Token 115: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0067266179248690605
    2. '(' → logprob: -5.0067267417907715
    3. '(reverse' → logprob: -12.256726264953613
    4. '()
' → logprob: -12.506726264953613
    5. '()`' → logprob: -14.381726264953613
    6. '(True' → logprob: -15.256726264953613
    7. '();' → logprob: -15.256726264953613
    8. '()

' → logprob: -16.00672721862793
    9. '()\' → logprob: -16.00672721862793
    10. '()>' → logprob: -16.13172721862793

Token 116: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8265478610992432
    2. 'combined' → logprob: -1.2015478610992432
    3. 'for' → logprob: -1.8265478610992432
    4. 'result' → logprob: -2.451547861099243
    5. 'c' → logprob: -5.701547622680664
    6. 'ans' → logprob: -6.201547622680664
    7. 'total' → logprob: -6.326547622680664
    8. 'answer' → logprob: -6.826547622680664
    9. 'p' → logprob: -7.076547622680664
    10. 'r' → logprob: -7.201547622680664

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27671632170677185
    2. ' =' → logprob: -1.5267163515090942
    3. '[-' → logprob: -4.276716232299805
    4. '=[]' → logprob: -5.901716232299805
    5. '[' → logprob: -6.526716232299805
    6. '.' → logprob: -6.651716232299805
    7. '_' → logprob: -6.776716232299805
    8. '=len' → logprob: -7.151716232299805
    9. '(' → logprob: -7.401716232299805
    10. ' ' → logprob: -7.901716232299805

Token 118: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07179180532693863
    2. ' sum' → logprob: -2.696791887283325
    3. '0' → logprob: -6.946791648864746
    4. 'combined' → logprob: -7.571791648864746
    5. ' combined' → logprob: -8.321791648864746
    6. '(sum' → logprob: -9.821791648864746
    7. ' ' → logprob: -10.571791648864746
    8. 'len' → logprob: -11.196791648864746
    9. '1' → logprob: -11.946791648864746
    10. 'max' → logprob: -12.446791648864746

Token 119: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00044675805838778615
    2. '0' → logprob: -7.875446796417236
    3. ' sum' → logprob: -9.875446319580078
    4. 'combined' → logprob: -11.625446319580078
    5. '(sum' → logprob: -13.250446319580078
    6. 'len' → logprob: -13.375446319580078
    7. '
' → logprob: -14.250446319580078
    8. '1' → logprob: -14.500446319580078
    9. 'max' → logprob: -14.875446319580078
    10. '```' → logprob: -15.375446319580078

Token 120: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020091790065634996
    2. 'while' → logprob: -9.125201225280762
    3. 'i' → logprob: -10.625201225280762
    4. '
' → logprob: -11.500201225280762
    5. 'total' → logprob: -11.500201225280762
    6. 'combined' → logprob: -11.500201225280762
    7. 'print' → logprob: -11.625201225280762
    8. 'ans' → logprob: -11.875201225280762
    9. 'count' → logprob: -12.000201225280762
    10. ' for' → logprob: -12.375201225280762

Token 121: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000217006730963476
    2. 'i' → logprob: -9.50021743774414
    3. 'count' → logprob: -10.25021743774414
    4. 'while' → logprob: -11.00021743774414
    5. 'total' → logprob: -11.37521743774414
    6. 'ans' → logprob: -11.37521743774414
    7. ' for' → logprob: -11.37521743774414
    8. 'length' → logprob: -11.75021743774414
    9. 'cnt' → logprob: -11.75021743774414
    10. 'combined' → logprob: -11.75021743774414

Token 122: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45159846544265747
    2. ' i' → logprob: -1.5765984058380127
    3. 'v' → logprob: -3.8265984058380127
    4. 'item' → logprob: -3.9515984058380127
    5. 'value' → logprob: -3.9515984058380127
    6. 'val' → logprob: -4.201598644256592
    7. 'num' → logprob: -4.201598644256592
    8. ' val' → logprob: -4.326598644256592
    9. ' v' → logprob: -4.701598644256592
    10. ' value' → logprob: -4.826598644256592

Token 123: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055021077394485474
    2. 'in' → logprob: -2.930021047592163
    3. ' ' → logprob: -9.430021286010742
    4. ',' → logprob: -10.180021286010742
    5. ')' → logprob: -12.680021286010742
    6. '  ' → logprob: -12.930021286010742
    7. '=' → logprob: -12.930021286010742
    8. ' ,' → logprob: -13.430021286010742
    9. 'range' → logprob: -13.430021286010742
    10. ' =' → logprob: -13.680021286010742

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23438458144664764
    2. ' range' → logprob: -1.609384536743164
    3. 'combined' → logprob: -4.859384536743164
    4. ' combined' → logprob: -6.859384536743164
    5. 're' → logprob: -9.734384536743164
    6. ' reversed' → logprob: -11.484384536743164
    7. 'r' → logprob: -11.859384536743164
    8. '[-' → logprob: -12.109384536743164
    9. 'ran' → logprob: -12.234384536743164
    10. ' ' → logprob: -12.421884536743164

Token 125: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.015090390108525753
    2. '(x' → logprob: -4.890090465545654
    3. '(len' → logprob: -5.015090465545654
    4. '(' → logprob: -7.765090465545654
    5. 'a' → logprob: -8.640089988708496
    6. ' (' → logprob: -9.265089988708496
    7. '(c' → logprob: -10.265089988708496
    8. 'len' → logprob: -10.765089988708496
    9. ' a' → logprob: -11.015089988708496
    10. '   ' → logprob: -11.140089988708496

Token 126: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22399206459522247
    2. '+' → logprob: -1.723992109298706
    3. '+y' → logprob: -3.848992109298706
    4. '+x' → logprob: -6.973991870880127
    5. '+b' → logprob: -10.848992347717285
    6. '
' → logprob: -11.223992347717285
    7. ' ' → logprob: -11.473992347717285
    8. '+
' → logprob: -11.598992347717285
    9. '

' → logprob: -11.848992347717285
    10. 'x' → logprob: -12.348992347717285

Token 127: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012561452575027943
    2. ' y' → logprob: -4.387561321258545
    3. 'b' → logprob: -10.387561798095703
    4. 'a' → logprob: -11.137561798095703
    5. ' ' → logprob: -12.637561798095703
    6. '	y' → logprob: -13.887561798095703
    7. '   ' → logprob: -14.887561798095703
    8. 'c' → logprob: -15.137561798095703
    9. '+y' → logprob: -15.262561798095703
    10. ' b' → logprob: -15.262561798095703

Token 128: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016635635867714882
    2. '+' → logprob: -4.141635417938232
    3. '+c' → logprob: -7.516635417938232
    4. '):' → logprob: -11.14163589477539
    5. ' ' → logprob: -11.39163589477539
    6. ')' → logprob: -12.14163589477539
    7. ',' → logprob: -12.26663589477539
    8. '
' → logprob: -12.76663589477539
    9. '):
' → logprob: -12.89163589477539
    10. '   ' → logprob: -13.01663589477539

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06747204065322876
    2. 'ans' → logprob: -2.942471981048584
    3. ' ans' → logprob: -4.567471981048584
    4. '	ans' → logprob: -6.192471981048584
    5. '(ans' → logprob: -9.817472457885742
    6. '_ans' → logprob: -12.067472457885742
    7. '```' → logprob: -12.817472457885742
    8. '  ' → logprob: -12.942472457885742
    9. '    
' → logprob: -12.942472457885742
    10. '   ' → logprob: -13.192472457885742

Token 130: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0014810555148869753
    2. ' ans' → logprob: -7.001481056213379
    3. '   ' → logprob: -7.751481056213379
    4. '	ans' → logprob: -9.251481056213379
    5. 'if' → logprob: -10.501481056213379
    6. '(ans' → logprob: -12.001481056213379
    7. '    
' → logprob: -13.126481056213379
    8. '
' → logprob: -13.501481056213379
    9. '```' → logprob: -13.626481056213379
    10. 'answer' → logprob: -13.626481056213379

Token 131: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.01285265851765871
    2. '+=' → logprob: -4.387852668762207
    3. ' =' → logprob: -8.137852668762207
    4. '=' → logprob: -10.387852668762207
    5. ' +' → logprob: -11.387852668762207
    6. '+' → logprob: -12.012852668762207
    7. ' -=' → logprob: -13.887852668762207
    8. ']+=' → logprob: -15.012852668762207
    9. ' *=' → logprob: -15.637852668762207
    10. ' ^=' → logprob: -15.887852668762207

Token 132: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' → logprob: -0.048589982092380524
    2. ' combined' → logprob: -3.0485899448394775
    3. 'com' → logprob: -14.173589706420898
    4. '   ' → logprob: -14.298589706420898
    5. 'int' → logprob: -14.673589706420898
    6. '1' → logprob: -15.548589706420898
    7. ' ' → logprob: -15.673589706420898
    8. 'comb' → logprob: -15.798589706420898
    9. 'Combined' → logprob: -16.6735897064209
    10. '
' → logprob: -16.6735897064209

Token 133: '[len' (ID: 57582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.028363512828946114
    2. '[len' → logprob: -4.0283637046813965
    3. '[-' → logprob: -4.6533637046813965
    4. '[' → logprob: -7.5283637046813965
    5. '[x' → logprob: -9.653363227844238
    6. 'i' → logprob: -11.653363227844238
    7. '[n' → logprob: -12.153363227844238
    8. '[
' → logprob: -13.403363227844238
    9. '

' → logprob: -13.528363227844238
    10. '[num' → logprob: -13.653363227844238

Token 134: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.250038146972656
    3. 'combined' → logprob: -13.125038146972656
    4. ' combined' → logprob: -16.000038146972656
    5. '(ans' → logprob: -16.000038146972656
    6. '(
' → logprob: -16.500038146972656
    7. '(p' → logprob: -17.625038146972656
    8. 'Combined' → logprob: -18.375038146972656
    9. '(combo' → logprob: -18.750038146972656
    10. '(con' → logprob: -18.750038146972656

Token 135: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.14363881945610046
    2. 'ined' → logprob: -2.018638849258423
    3. 'combined' → logprob: -7.393638610839844
    4. '(com' → logprob: -8.518638610839844
    5. '_comb' → logprob: -9.768638610839844
    6. '(b' → logprob: -10.768638610839844
    7. ' combined' → logprob: -10.768638610839844
    8. 'b' → logprob: -11.268638610839844
    9. '(' → logprob: -11.518638610839844
    10. ')' → logprob: -12.518638610839844

Token 136: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.43782809376716614
    2. '-' → logprob: -1.1878280639648438
    3. ' -' → logprob: -3.6878280639648438
    4. ')' → logprob: -3.8128280639648438
    5. ']-' → logprob: -6.687828063964844
    6. ' )' → logprob: -8.187828063964844
    7. '1' → logprob: -8.562828063964844
    8. ' ' → logprob: -8.812828063964844
    9. '()-' → logprob: -8.937828063964844
    10. '[' → logprob: -9.187828063964844

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. 'i' → logprob: -11.625014305114746
    3. ' ' → logprob: -12.875014305114746
    4. '
' → logprob: -13.625014305114746
    5. '   ' → logprob: -14.250014305114746
    6. '(' → logprob: -14.375014305114746
    7. '-' → logprob: -14.875014305114746
    8. '```' → logprob: -16.875015258789062
    9. '(i' → logprob: -16.875015258789062
    10. '[i' → logprob: -17.500015258789062

Token 138: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7586737871170044
    2. '-' → logprob: -0.8836737871170044
    3. '-i' → logprob: -2.133673667907715
    4. '-
' → logprob: -10.883673667907715
    5. '-int' → logprob: -12.383673667907715
    6. ' ' → logprob: -12.758673667907715
    7. '-e' → logprob: -12.883673667907715
    8. ']-' → logprob: -12.883673667907715
    9. '   ' → logprob: -13.133673667907715
    10. '-ai' → logprob: -13.258673667907715

Token 139: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034510623663663864
    2. ']' → logprob: -3.409510612487793
    3. ' )' → logprob: -8.034510612487793
    4. ')
' → logprob: -8.159510612487793
    5. '])' → logprob: -9.034510612487793
    6. ')]' → logprob: -9.534510612487793
    7. '+' → logprob: -11.284510612487793
    8. ' ]' → logprob: -11.284510612487793
    9. '*' → logprob: -12.034510612487793
    10. '```' → logprob: -12.159510612487793

Token 140: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. ' print' → logprob: -12.87500286102295
    3. '```' → logprob: -15.50000286102295
    4. '\n' → logprob: -16.125003814697266
    5. '#print' → logprob: -17.250003814697266
    6. 'pr' → logprob: -17.375003814697266
    7. '(print' → logprob: -17.375003814697266
    8. '
' → logprob: -17.500003814697266
    9. '\' → logprob: -17.500003814697266
    10. '<|end|>' → logprob: -17.750003814697266

Token 141: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014206168241798878
    2. '(ans' → logprob: -4.2642059326171875
    3. '("("' → logprob: -11.014205932617188
    4. '('' → logprob: -11.514205932617188
    5. '(
' → logprob: -12.014205932617188
    6. ' (' → logprob: -12.764205932617188
    7. '(`' → logprob: -13.139205932617188
    8. '(

' → logprob: -13.139205932617188
    9. '((' → logprob: -14.014205932617188
    10. '(answer' → logprob: -14.889205932617188

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -16.125
    4. '))' → logprob: -17.375
    5. '+' → logprob: -17.875
    6. '`)' → logprob: -18.0
    7. ')`' → logprob: -18.0
    8. '')' → logprob: -18.375
    9. '）' → logprob: -18.625
    10. '}' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 40.71%
Précision adaptée (1ère position): 42.14%
Précision (top 10): 84.29%
================================================================================
