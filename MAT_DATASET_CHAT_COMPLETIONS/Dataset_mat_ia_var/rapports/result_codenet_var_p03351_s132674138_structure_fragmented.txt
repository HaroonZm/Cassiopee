================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def parse_input(s):
    return map(int, s.split())

def get_a(nums):
    return nums[0]

def get_b(nums):
    return nums[1]

def get_c(nums):
    return nums[2]

def get_d(nums):
    return nums[3]

def calc_abs(x, y):
    return abs(x - y)

def check_condition1(a, b, d):
    return calc_abs(a, b) <= d

def check_condition2(b, c, d):
    return calc_abs(b, c) <= d

def check_subconditions(a, b, c, d):
    return check_condition1(a, b, d) and check_condition2(b, c, d)

def check_condition3(a, c, d):
    return calc_abs(a, c) <= d

def is_yes(a, b, c, d):
    return check_subconditions(a, b, c, d) or check_condition3(a, c, d)

def get_output(a, b, c, d):
    return "Yes" if is_yes(a, b, c, d) else "No"

def main():
    s = get_input()
    nums = list(parse_input(s))
    a = get_a(nums)
    b = get_b(nums)
    c = get_c(nums)
    d = get_d(nums)
    result = get_output(a, b, c, d)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002158825984224677
    2. '_' → logprob: -6.2521586418151855
    3. '():' → logprob: -9.252159118652344
    4. ' (' → logprob: -10.252159118652344
    5. '()' → logprob: -10.627159118652344
    6. '```' → logprob: -10.627159118652344
    7. '(_' → logprob: -11.502159118652344
    8. '(:' → logprob: -11.627159118652344
    9. '(_:' → logprob: -12.127159118652344
    10. ':' → logprob: -12.502159118652344

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5172414183616638
    2. '\' → logprob: -1.3922414779663086
    3. '\n' → logprob: -3.3922414779663086
    4. '   ' → logprob: -3.5172414779663086
    5. '(' → logprob: -3.7672414779663086
    6. '    
' → logprob: -4.517241477966309
    7. ':' → logprob: -4.642241477966309
    8. ''' → logprob: -5.392241477966309
    9. '()' → logprob: -5.392241477966309
    10. ''\' → logprob: -5.517241477966309

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4519650936126709
    2. 'input' → logprob: -2.076965093612671
    3. '   ' → logprob: -2.326965093612671
    4. ' ' → logprob: -3.326965093612671
    5. 'i' → logprob: -3.451965093612671
    6. 'x' → logprob: -3.951965093612671
    7. 'user' → logprob: -3.951965093612671
    8. '```' → logprob: -4.45196533203125
    9. 'a' → logprob: -5.70196533203125
    10. 'r' → logprob: -5.82696533203125

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5008310079574585
    2. ' input' → logprob: -1.1258310079574585
    3. 'input' → logprob: -3.000831127166748
    4. '"' → logprob: -4.375831127166748
    5. ''' → logprob: -5.750831127166748
    6. ' "' → logprob: -6.375831127166748
    7. '  ' → logprob: -7.000831127166748
    8. ' '' → logprob: -7.750831127166748
    9. ' None' → logprob: -8.37583065032959
    10. '(input' → logprob: -8.62583065032959

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015279557555913925
    2. '()' → logprob: -6.876527786254883
    3. '('' → logprob: -8.251527786254883
    4. '("("' → logprob: -9.126527786254883
    5. ' (' → logprob: -10.376527786254883
    6. '(
' → logprob: -10.626527786254883
    7. ''' → logprob: -10.751527786254883
    8. '("")' → logprob: -11.376527786254883
    9. ' ' → logprob: -11.501527786254883
    10. '"' → logprob: -12.001527786254883

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11275766044855118
    2. '.' → logprob: -3.362757682800293
    3. '(
' → logprob: -4.237757682800293
    4. '()' → logprob: -4.487757682800293
    5. '\n' → logprob: -4.612757682800293
    6. '#' → logprob: -4.737757682800293
    7. ':' → logprob: -5.112757682800293
    8. ')' → logprob: -5.737757682800293
    9. 'def' → logprob: -5.737757682800293
    10. '\' → logprob: -5.862757682800293

Token 9: ' parse' (ID: 8420)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7357314825057983
    2. ' calculate' → logprob: -1.1107314825057983
    3. ' process' → logprob: -2.985731601715088
    4. ' user' → logprob: -3.235731601715088
    5. ' main' → logprob: -4.110731601715088
    6. ' print' → logprob: -4.110731601715088
    7. ' add' → logprob: -4.360731601715088
    8. ' space' → logprob: -4.985731601715088
    9. '_' → logprob: -4.985731601715088
    10. ' check' → logprob: -5.235731601715088

Token 10: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28251609206199646
    2. '_' → logprob: -1.4075161218643188
    3. '_input' → logprob: -7.407516002655029
    4. '_token' → logprob: -8.407516479492188
    5. '(_)' → logprob: -9.657516479492188
    6. ' (' → logprob: -10.032516479492188
    7. '_(' → logprob: -10.282516479492188
    8. '_line' → logprob: -10.282516479492188
    9. '(_' → logprob: -10.407516479492188
    10. '('_' → logprob: -10.407516479492188

Token 11: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011460978537797928
    2. '("("' → logprob: -4.886460781097412
    3. '_input' → logprob: -7.511460781097412
    4. '_' → logprob: -7.511460781097412
    5. '(input' → logprob: -7.886460781097412
    6. '(_)' → logprob: -7.886460781097412
    7. '```' → logprob: -8.13646125793457
    8. '(_' → logprob: -8.38646125793457
    9. '('_' → logprob: -8.51146125793457
    10. '()' → logprob: -8.88646125793457

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02475370280444622
    2. ')' → logprob: -3.7747538089752197
    3. ':' → logprob: -6.774753570556641
    4. ' ):' → logprob: -9.02475357055664
    5. '):
' → logprob: -9.52475357055664
    6. ',' → logprob: -10.27475357055664
    7. '_' → logprob: -10.77475357055664
    8. ' :' → logprob: -11.02475357055664
    9. 'tring' → logprob: -11.14975357055664
    10. '_input' → logprob: -11.52475357055664

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027025986462831497
    2. ' return' → logprob: -4.277026176452637
    3. ' s' → logprob: -4.652026176452637
    4. 's' → logprob: -6.152026176452637
    5. 'return' → logprob: -8.277026176452637
    6. '    ' → logprob: -8.402026176452637
    7. '(s' → logprob: -8.902026176452637
    8. ' tokens' → logprob: -9.402026176452637
    9. ')' → logprob: -10.027026176452637
    10. 'int' → logprob: -10.152026176452637

Token 14: ' return' (ID: 622)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6487860679626465
    2. 's' → logprob: -1.0237860679626465
    3. '   ' → logprob: -2.6487860679626465
    4. ' return' → logprob: -3.5237860679626465
    5. 'return' (adapté à ' return') → logprob: -4.2737860679626465
    6. 'int' → logprob: -6.0237860679626465
    7. ' int' → logprob: -7.5237860679626465
    8. ' list' → logprob: -7.8987860679626465
    9. ' tokens' → logprob: -8.773786544799805
    10. 'tokens' → logprob: -9.148786544799805

Token 15: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9852163195610046
    2. ' s' → logprob: -1.2352163791656494
    3. 'int' → logprob: -1.8602163791656494
    4. 's' → logprob: -1.8602163791656494
    5. ' list' → logprob: -3.9852163791656494
    6. 'list' → logprob: -5.73521614074707
    7. '[int' → logprob: -6.36021614074707
    8. ' [' → logprob: -8.23521614074707
    9. ' ' → logprob: -8.48521614074707
    10. '[s' → logprob: -8.73521614074707

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5776033997535706
    2. '(' → logprob: -0.8276033997535706
    3. '(str' → logprob: -6.702603340148926
    4. '(lambda' → logprob: -7.827603340148926
    5. '(
' → logprob: -11.077603340148926
    6. '(s' → logprob: -11.952603340148926
    7. '(float' → logprob: -12.452603340148926
    8. '(

' → logprob: -12.702603340148926
    9. 'int' → logprob: -12.952603340148926
    10. '(eval' → logprob: -14.327603340148926

Token 17: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18071523308753967
    2. '(' → logprob: -1.8057152032852173
    3. ')' → logprob: -7.805715084075928
    4. 's' → logprob: -8.180715560913086
    5. ' (' → logprob: -8.680715560913086
    6. ',' → logprob: -9.805715560913086
    7. ' s' → logprob: -10.680715560913086
    8. ')(' → logprob: -11.430715560913086
    9. '(
' → logprob: -11.430715560913086
    10. ',s' → logprob: -13.180715560913086

Token 18: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06996077299118042
    2. 's' → logprob: -2.694960832595825
    3. ')' → logprob: -10.819960594177246
    4. ')s' → logprob: -13.569960594177246
    5. '(s' → logprob: -13.569960594177246
    6. ' ' → logprob: -14.444960594177246
    7. '   ' → logprob: -14.444960594177246
    8. ' )' → logprob: -14.819960594177246
    9. '	s' → logprob: -15.944960594177246
    10. '  ' → logprob: -16.694961547851562

Token 19: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3470439910888672
    2. '.split' → logprob: -1.3470439910888672
    3. '().' → logprob: -3.972043991088867
    4. '.strip' → logprob: -4.597043991088867
    5. ' .' → logprob: -5.472043991088867
    6. ')' → logprob: -10.222043991088867
    7. 'split' → logprob: -10.472043991088867
    8. ').' → logprob: -11.472043991088867
    9. '()' → logprob: -11.722043991088867
    10. '   ' → logprob: -11.972043991088867

Token 20: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.389580637216568
    2. '())' → logprob: -1.1395806074142456
    3. '()' → logprob: -6.139580726623535
    4. '(' → logprob: -8.139580726623535
    5. '()))' → logprob: -9.139580726623535
    6. '("' → logprob: -9.264580726623535
    7. ')' → logprob: -11.264580726623535
    8. '(','' → logprob: -11.264580726623535
    9. '("("' → logprob: -11.264580726623535
    10. ' ())' → logprob: -11.639580726623535

Token 21: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018848584964871407
    2. 'd' → logprob: -4.143848419189453
    3. '\' → logprob: -6.518848419189453
    4. '#' → logprob: -8.268848419189453
    5. 'n' → logprob: -8.643848419189453
    6. '
' → logprob: -8.643848419189453
    7. 'for' → logprob: -8.768848419189453
    8. 'de' → logprob: -9.143848419189453
    9. '```' → logprob: -9.518848419189453
    10. '    
' → logprob: -9.768848419189453

Token 22: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01195735763758421
    2. ' solve' → logprob: -5.011957168579102
    3. 'main' → logprob: -5.886957168579102
    4. ' process' → logprob: -7.011957168579102
    5. ' sum' → logprob: -7.136957168579102
    6. ' calculate' → logprob: -8.261957168579102
    7. ' get' → logprob: -8.511957168579102
    8. 'solve' → logprob: -9.261957168579102
    9. ' add' → logprob: -9.761957168579102
    10. ' compute' → logprob: -9.886957168579102

Token 23: '_a' (ID: 10852)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.18844081461429596
    2. '_numbers' → logprob: -3.4384407997131348
    3. '_sum' → logprob: -3.5634407997131348
    4. '_data' → logprob: -3.8134407997131348
    5. '_' → logprob: -3.9384407997131348
    6. '_max' → logprob: -4.313440799713135
    7. '_values' → logprob: -4.438440799713135
    8. '_user' → logprob: -4.563440799713135
    9. '_output' → logprob: -4.688440799713135
    10. '_value' → logprob: -5.313440799713135

Token 24: '(nums' (ID: 40372)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0120058059692383
    2. '()' → logprob: -1.3870058059692383
    3. 'rray' → logprob: -2.2620058059692383
    4. 'rg' → logprob: -2.5120058059692383
    5. '_b' → logprob: -2.7620058059692383
    6. '_and' → logprob: -3.2620058059692383
    7. '_values' → logprob: -3.5120058059692383
    8. '_value' → logprob: -4.637005805969238
    9. '_input' → logprob: -5.137005805969238
    10. 'r' → logprob: -5.137005805969238

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02154645137488842
    2. ')' → logprob: -4.146546363830566
    3. ',' → logprob: -5.396546363830566
    4. '[' → logprob: -7.146546363830566
    5. '):
' → logprob: -10.271546363830566
    6. '[]):' → logprob: -10.271546363830566
    7. ' ):' → logprob: -10.521546363830566
    8. '   ' → logprob: -11.271546363830566
    9. '[i' → logprob: -11.396546363830566
    10. ')):' → logprob: -11.646546363830566

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037170578725636005
    2. ' return' → logprob: -6.378716945648193
    3. 'return' → logprob: -6.378716945648193
    4. 'nums' → logprob: -9.253717422485352
    5. '    
' → logprob: -9.628717422485352
    6. ' nums' → logprob: -10.128717422485352
    7. '    ' → logprob: -10.753717422485352
    8. ' next' → logprob: -10.753717422485352
    9. '(nums' → logprob: -11.003717422485352
    10. '```' → logprob: -11.003717422485352

Token 27: ' return' (ID: 622)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.21496441960334778
    2. 'next' → logprob: -2.4649643898010254
    3. ' nums' → logprob: -3.2149643898010254
    4. ' return' → logprob: -3.4649643898010254
    5. 'nums' → logprob: -3.4649643898010254
    6. 'return' (adapté à ' return') → logprob: -5.589964389801025
    7. '   ' → logprob: -6.339964389801025
    8. ' for' → logprob: -10.214964866638184
    9. 'a' → logprob: -10.464964866638184
    10. ' a' → logprob: -10.464964866638184

Token 28: ' nums' (ID: 18117)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.1299028843641281
    2. ' nums' → logprob: -3.0049028396606445
    3. 'next' → logprob: -3.0049028396606445
    4. 'nums' → logprob: -3.8799028396606445
    5. ' list' → logprob: -6.7549028396606445
    6. ' max' → logprob: -7.8799028396606445
    7. 'list' → logprob: -8.379902839660645
    8. ' ' → logprob: -9.254902839660645
    9. ' int' → logprob: -10.129902839660645
    10. ' min' → logprob: -10.254902839660645

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09790384024381638
    2. '.__' → logprob: -2.5979037284851074
    3. '.' → logprob: -4.472903728485107
    4. '.next' → logprob: -5.972903728485107
    5. '__' → logprob: -7.097903728485107
    6. '[next' → logprob: -7.222903728485107
    7. '<|end|>' → logprob: -7.347903728485107
    8. '.readline' → logprob: -7.597903728485107
    9. '[:]' → logprob: -7.597903728485107
    10. '```' → logprob: -8.097904205322266

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.786196975852363e-05
    2. ' ' → logprob: -10.500038146972656
    3. '1' → logprob: -11.875038146972656
    4. '-' → logprob: -13.000038146972656
    5. ']' → logprob: -15.312538146972656
    6. '   ' → logprob: -15.625038146972656
    7. '2' → logprob: -16.000038146972656
    8. ':' → logprob: -16.187538146972656
    9. '[' → logprob: -16.500038146972656
    10. ')' → logprob: -16.750038146972656

Token 31: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2525938153266907
    2. ']' → logprob: -1.502593755722046
    3. '])' → logprob: -8.627593994140625
    4. ' )' → logprob: -8.752593994140625
    5. '}' → logprob: -8.877593994140625
    6. ' ]' → logprob: -9.252593994140625
    7. ')]' → logprob: -10.377593994140625
    8. ',' → logprob: -11.377593994140625
    9. '<|end|>' → logprob: -11.877593994140625
    10. '   ' → logprob: -12.127593994140625

Token 32: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19398438930511475
    2. '<|end|>' → logprob: -1.8189843893051147
    3. '
' → logprob: -4.318984508514404
    4. '<|end|>' → logprob: -7.693984508514404
    5. '```' → logprob: -9.193984031677246
    6. '

' → logprob: -9.443984031677246
    7. ' def' → logprob: -9.693984031677246
    8. '\n' → logprob: -10.568984031677246
    9. 'newline' → logprob: -10.568984031677246
    10. '  
' → logprob: -10.693984031677246

Token 33: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0006347587914206088
    2. 'get' → logprob: -7.875634670257568
    3. ' ' → logprob: -9.125635147094727
    4. '_' → logprob: -9.750635147094727
    5. '_get' → logprob: -9.750635147094727
    6. ' g' → logprob: -12.000635147094727
    7. ' def' → logprob: -12.000635147094727
    8. ' _' → logprob: -12.000635147094727
    9. ' space' → logprob: -12.875635147094727
    10. ' ' → logprob: -13.500635147094727

Token 34: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0016736338147893548
    2. '_a' → logprob: -6.626673698425293
    3. '_' → logprob: -8.751673698425293
    4. '_input' → logprob: -9.376673698425293
    5. ' ' → logprob: -11.001673698425293
    6. 'b' → logprob: -11.001673698425293
    7. '_length' → logprob: -11.251673698425293
    8. '_c' → logprob: -12.001673698425293
    9. '_s' → logprob: -12.126673698425293
    10. '_sum' → logprob: -12.251673698425293

Token 35: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.03408315032720566
    2. '(' → logprob: -3.409083127975464
    3. ' (' → logprob: -8.034083366394043
    4. '(num' → logprob: -9.659083366394043
    5. '(s' → logprob: -10.534083366394043
    6. 's' → logprob: -11.659083366394043
    7. 'nums' → logprob: -12.784083366394043
    8. ' ' → logprob: -12.909083366394043
    9. '(numbers' → logprob: -13.159083366394043
    10. ' nums' → logprob: -13.409083366394043

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026691153179854155
    2. '):
' → logprob: -7.002669334411621
    3. ')' → logprob: -7.127669334411621
    4. '[' → logprob: -7.127669334411621
    5. '   ' → logprob: -9.502669334411621
    6. '[]):' → logprob: -10.377669334411621
    7. ' ):' → logprob: -10.377669334411621
    8. '):
' → logprob: -12.377669334411621
    9. ',' → logprob: -12.877669334411621
    10. '):

' → logprob: -13.002669334411621

Token 37: '   ' (ID: 271)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.009078001603484154
    2. '   ' → logprob: -5.384078025817871
    3. 'nums' → logprob: -5.509078025817871
    4. '    ' → logprob: -8.634078025817871
    5. ' return' → logprob: -8.634078025817871
    6. '(nums' → logprob: -10.884078025817871
    7. ' ' → logprob: -11.259078025817871
    8. ')' → logprob: -12.884078025817871
    9. ' numbers' → logprob: -13.009078025817871
    10. ' num' → logprob: -13.259078025817871

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02220916375517845
    2. 'return' (adapté à ' return') → logprob: -4.272209167480469
    3. ' nums' → logprob: -5.022209167480469
    4. '   ' → logprob: -6.772209167480469
    5. 'nums' → logprob: -8.272209167480469
    6. ' ' → logprob: -11.022209167480469
    7. '    ' → logprob: -12.772209167480469
    8. '  ' → logprob: -13.897209167480469
    9. '	return' → logprob: -14.022209167480469
    10. ' num' → logprob: -15.147209167480469

Token 39: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.01606135070323944
    2. 'nums' → logprob: -4.141061305999756
    3. ' ' → logprob: -11.141061782836914
    4. ' num' → logprob: -12.641061782836914
    5. '(nums' → logprob: -12.641061782836914
    6. ' int' → logprob: -13.766061782836914
    7. ' len' → logprob: -14.016061782836914
    8. 'num' → logprob: -14.141061782836914
    9. '   ' → logprob: -14.266061782836914
    10. ' b' → logprob: -14.891061782836914

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.996708104154095e-05
    2. '[-' → logprob: -9.625100135803223
    3. '1' → logprob: -10.375100135803223
    4. ' [' → logprob: -13.875100135803223
    5. '```' → logprob: -14.000100135803223
    6. '(' → logprob: -15.250100135803223
    7. 'def' → logprob: -15.625100135803223
    8. '[len' → logprob: -15.875100135803223
    9. '\[' → logprob: -16.000099182128906
    10. '   ' → logprob: -16.875099182128906

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '-' → logprob: -17.500001907348633
    5. '])' → logprob: -17.625001907348633
    6. ')' → logprob: -18.000001907348633
    7. ']' → logprob: -18.250001907348633
    8. '```' → logprob: -18.250001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '' → logprob: -20.062501907348633

Token 42: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '}' → logprob: -15.000000953674316
    3. ')}' → logprob: -17.375
    4. ')
' → logprob: -17.5
    5. ']' → logprob: -17.5
    6. '),' → logprob: -18.125
    7. '))' → logprob: -18.375
    8. '()' → logprob: -19.0
    9. ')`' → logprob: -19.125
    10. ' )' → logprob: -19.375

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001004823949187994
    2. '\' → logprob: -8.001005172729492
    3. '<|end|>' → logprob: -8.751005172729492
    4. '\n' → logprob: -8.876005172729492
    5. '```' → logprob: -9.001005172729492
    6. '
' → logprob: -9.751005172729492
    7. 'n' → logprob: -9.876005172729492
    8. '#' → logprob: -10.501005172729492
    9. '<|end|>' → logprob: -10.626005172729492
    10. 'a' → logprob: -11.001005172729492

Token 44: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3988112211227417
    2. ' calculate' → logprob: -1.7738112211227417
    3. ' main' → logprob: -2.3988113403320312
    4. ' compute' → logprob: -3.5238113403320312
    5. ' solve' → logprob: -3.7738113403320312
    6. ' sum' → logprob: -5.523811340332031
    7. ' find' → logprob: -6.023811340332031
    8. ' process' → logprob: -6.648811340332031
    9. ' multiply' → logprob: -6.898811340332031
    10. ' def' → logprob: -7.023811340332031

Token 45: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.040995411574840546
    2. '_sum' → logprob: -3.4159953594207764
    3. '_' → logprob: -6.5409955978393555
    4. '_max' → logprob: -6.6659955978393555
    5. '_result' → logprob: -7.2909955978393555
    6. '_a' → logprob: -7.2909955978393555
    7. '_s' → logprob: -7.5409955978393555
    8. '_total' → logprob: -7.7909955978393555
    9. '_n' → logprob: -8.165995597839355
    10. '_product' → logprob: -8.290995597839355

Token 46: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.5237199068069458
    2. '(' → logprob: -0.8987199068069458
    3. '(s' → logprob: -8.898719787597656
    4. '(num' → logprob: -9.273719787597656
    5. '_' → logprob: -9.398719787597656
    6. '_nums' → logprob: -9.398719787597656
    7. '(_' → logprob: -9.523719787597656
    8. 'nums' → logprob: -11.148719787597656
    9. '(numbers' → logprob: -11.148719787597656
    10. '(_)' → logprob: -11.273719787597656

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.458980300929397e-05
    2. '):
' → logprob: -10.12508487701416
    3. ')' → logprob: -10.62508487701416
    4. '[' → logprob: -11.12508487701416
    5. '[]):' → logprob: -12.87508487701416
    6. ' ):' → logprob: -13.37508487701416
    7. ':' → logprob: -14.75008487701416
    8. '):
' → logprob: -15.37508487701416
    9. '   ' → logprob: -15.50008487701416
    10. ']:' → logprob: -15.75008487701416

Token 48: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14610931277275085
    2. ' nums' → logprob: -2.1461093425750732
    3. '   ' → logprob: -4.646109104156494
    4. 'return' → logprob: -4.771109104156494
    5. 'nums' → logprob: -7.021109104156494
    6. '(nums' → logprob: -11.271109580993652
    7. ' ' → logprob: -11.521109580993652
    8. '    ' → logprob: -11.646109580993652
    9. '  ' → logprob: -14.021109580993652
    10. ' returns' → logprob: -14.146109580993652

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2176247388124466
    2. ' return' → logprob: -1.7176247835159302
    3. 'nums' → logprob: -4.467624664306641
    4. '   ' → logprob: -5.967624664306641
    5. ' nums' → logprob: -6.217624664306641
    6. ' ' → logprob: -10.34262466430664
    7. '  ' → logprob: -11.46762466430664
    8. '	return' → logprob: -12.84262466430664
    9. '    ' → logprob: -13.21762466430664
    10. '(nums' → logprob: -13.34262466430664

Token 50: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.5759561061859131
    2. 'nums' → logprob: -0.8259561061859131
    3. '(nums' → logprob: -11.575956344604492
    4. 'num' → logprob: -12.825956344604492
    5. '0' → logprob: -13.575956344604492
    6. ' ' → logprob: -13.700956344604492
    7. 'c' → logprob: -14.825956344604492
    8. 'int' → logprob: -15.075956344604492
    9. '_nums' → logprob: -15.325956344604492
    10. ' num' → logprob: -15.450956344604492

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007730589131824672
    2. '2' → logprob: -7.875772953033447
    3. '[-' → logprob: -8.750773429870605
    4. '.' → logprob: -9.250773429870605
    5. '[]' → logprob: -10.625773429870605
    6. 's' → logprob: -10.750773429870605
    7. '<|end|>' → logprob: -11.125773429870605
    8. '```' → logprob: -11.375773429870605
    9. '[len' → logprob: -11.500773429870605
    10. '\[' → logprob: -11.500773429870605

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.625000953674316
    3. '1' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. ' ' → logprob: -16.250001907348633
    6. '3' → logprob: -16.812501907348633
    7. '-' → logprob: -17.500001907348633
    8. ']' → logprob: -17.562501907348633
    9. '   ' → logprob: -17.937501907348633
    10. '２' → logprob: -18.062501907348633

Token 53: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.75
    3. '}' → logprob: -16.0
    4. ']' → logprob: -17.875
    5. ' )' → logprob: -18.0
    6. '）' → logprob: -18.375
    7. ')}' → logprob: -18.5
    8. '),' → logprob: -18.75
    9. '()' → logprob: -19.0
    10. '))' → logprob: -19.125

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010173292830586433
    2. 'd' → logprob: -7.876017093658447
    3. 'n' → logprob: -8.251017570495605
    4. 'a' → logprob: -9.001017570495605
    5. '#' → logprob: -9.751017570495605
    6. '\' → logprob: -10.251017570495605
    7. 'for' → logprob: -10.376017570495605
    8. '\n' → logprob: -10.751017570495605
    9. '```' → logprob: -10.876017570495605
    10. 'x' → logprob: -11.501017570495605

Token 55: ' get' (ID: 717)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8408258557319641
    2. ' main' → logprob: -0.9658258557319641
    3. ' calculate' → logprob: -1.8408257961273193
    4. 'solve' → logprob: -4.465826034545898
    5. ' compute' → logprob: -4.840826034545898
    6. 'calculate' → logprob: -5.715826034545898
    7. ' solution' → logprob: -6.465826034545898
    8. ' get' → logprob: -7.090826034545898
    9. ' find' → logprob: -7.590826034545898
    10. 'main' → logprob: -7.590826034545898

Token 56: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.11974106729030609
    2. '_sum' → logprob: -3.6197409629821777
    3. '_input' → logprob: -4.119740962982178
    4. '_a' → logprob: -4.244740962982178
    5. '_' → logprob: -4.619740962982178
    6. '_n' → logprob: -4.869740962982178
    7. '_nums' → logprob: -5.119740962982178
    8. '_num' → logprob: -5.119740962982178
    9. '_c' → logprob: -5.494740962982178
    10. '_result' → logprob: -5.619740962982178

Token 57: '(nums' (ID: 40372)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6337636709213257
    2. '(nums' → logprob: -0.7587636709213257
    3. '(num' → logprob: -8.258763313293457
    4. '(s' → logprob: -8.383763313293457
    5. '_nums' → logprob: -8.383763313293457
    6. '(args' → logprob: -9.633763313293457
    7. '("("' → logprob: -9.883763313293457
    8. '(params' → logprob: -9.883763313293457
    9. '():' → logprob: -10.008763313293457
    10. '_' → logprob: -10.258763313293457

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.706686690449715e-05
    2. '):
' → logprob: -10.250066757202148
    3. ')' → logprob: -11.000066757202148
    4. '[' → logprob: -11.375066757202148
    5. '[]):' → logprob: -13.125066757202148
    6. ' ):' → logprob: -14.750066757202148
    7. '():' → logprob: -14.875066757202148
    8. '   ' → logprob: -15.500066757202148
    9. ']:' → logprob: -15.875066757202148
    10. ':' → logprob: -16.25006675720215

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08075174689292908
    2. ' return' → logprob: -2.580751657485962
    3. 'return' → logprob: -6.330751895904541
    4. ' nums' → logprob: -9.705751419067383
    5. '    ' → logprob: -11.330751419067383
    6. '```' → logprob: -12.830751419067383
    7. 'nums' → logprob: -13.330751419067383
    8. ' ' → logprob: -13.955751419067383
    9. '  ' → logprob: -14.580751419067383
    10. '	return' → logprob: -15.330751419067383

Token 60: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12135782092809677
    2. 'return' (adapté à ' return') → logprob: -2.3713579177856445
    3. '   ' → logprob: -3.8713579177856445
    4. ' nums' → logprob: -9.371357917785645
    5. 'nums' → logprob: -11.996357917785645
    6. '    ' → logprob: -12.871357917785645
    7. ' ' → logprob: -12.996357917785645
    8. '```' → logprob: -13.996357917785645
    9. '	return' → logprob: -14.871357917785645
    10. '  ' → logprob: -14.996357917785645

Token 61: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.3875751793384552
    2. ' nums' → logprob: -1.1375751495361328
    3. '(nums' → logprob: -8.512575149536133
    4. '0' → logprob: -8.637575149536133
    5. '[]' → logprob: -9.512575149536133
    6. ' ' → logprob: -10.137575149536133
    7. ' None' → logprob: -10.137575149536133
    8. 'None' → logprob: -10.387575149536133
    9. '[' → logprob: -10.387575149536133
    10. 'int' → logprob: -10.637575149536133

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007570966263301671
    2. '.' → logprob: -7.875757217407227
    3. '3' → logprob: -9.000757217407227
    4. '1' → logprob: -9.000757217407227
    5. '0' → logprob: -10.625757217407227
    6. '[-' → logprob: -10.750757217407227
    7. '```' → logprob: -10.875757217407227
    8. '<|end|>' → logprob: -11.250757217407227
    9. '(' → logprob: -11.625757217407227
    10. '2' → logprob: -11.875757217407227

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4378848391061183e-05
    2. ')' → logprob: -11.375014305114746
    3. '])' → logprob: -12.875014305114746
    4. '0' → logprob: -16.250015258789062
    5. '2' → logprob: -18.000015258789062
    6. '```' → logprob: -18.250015258789062
    7. '   ' → logprob: -18.375015258789062
    8. ']' → logprob: -18.500015258789062
    9. ')])' → logprob: -18.500015258789062
    10. ' ' → logprob: -19.500015258789062

Token 64: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '):' → logprob: -12.87500286102295
    3. ')
' → logprob: -16.000001907348633
    4. ':' → logprob: -17.375001907348633
    5. ' )' → logprob: -17.750001907348633
    6. '}' → logprob: -17.750001907348633
    7. '))' → logprob: -18.000001907348633
    8. ')}' → logprob: -18.250001907348633
    9. '')' → logprob: -18.250001907348633
    10. '),' → logprob: -18.375001907348633

Token 65: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00398876192048192
    2. 'e' → logprob: -6.503988742828369
    3. 'a' → logprob: -7.003988742828369
    4. 'd' → logprob: -7.378988742828369
    5. 'n' → logprob: -8.253989219665527
    6. '#' → logprob: -8.378989219665527
    7. '\' → logprob: -8.878989219665527
    8. '```' → logprob: -9.253989219665527
    9. 'x' → logprob: -9.628989219665527
    10. 'for' → logprob: -10.628989219665527

Token 66: ' calc' (ID: 25691)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7195601463317871
    2. ' main' → logprob: -1.594560146331787
    3. ' solve' → logprob: -1.844560146331787
    4. ' process' → logprob: -2.844560146331787
    5. ' compute' → logprob: -2.844560146331787
    6. ' get' → logprob: -4.469560146331787
    7. ' multiply' → logprob: -5.344560146331787
    8. ' evaluate' → logprob: -5.469560146331787
    9. ' calc' → logprob: -6.469560146331787
    10. 'calculate' → logprob: -6.469560146331787

Token 67: '_abs' (ID: 81310)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3397365212440491
    2. '_' → logprob: -1.7147364616394043
    3. '(' → logprob: -3.4647364616394043
    4. '(a' → logprob: -4.464736461639404
    5. '_a' → logprob: -4.714736461639404
    6. '_result' → logprob: -4.714736461639404
    7. '_difference' → logprob: -4.964736461639404
    8. '_value' → logprob: -5.339736461639404
    9. '_diff' → logprob: -5.464736461639404
    10. '_s' → logprob: -5.589736461639404

Token 68: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19316218793392181
    2. '_val' → logprob: -2.568162202835083
    3. '(_' → logprob: -3.193162202835083
    4. '_' → logprob: -4.193161964416504
    5. '_diff' → logprob: -4.193161964416504
    6. '_value' → logprob: -4.318161964416504
    7. '(_)' → logprob: -5.818161964416504
    8. '('_' → logprob: -5.818161964416504
    9. '_sum' → logprob: -6.068161964416504
    10. '_tol' → logprob: -6.818161964416504

Token 69: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25267428159713745
    2. '):' → logprob: -1.5026743412017822
    3. '(' → logprob: -8.502674102783203
    4. '(x' → logprob: -9.002674102783203
    5. '):
' → logprob: -9.252674102783203
    6. '_' → logprob: -10.002674102783203
    7. '_abs' → logprob: -10.377674102783203
    8. ',' → logprob: -10.502674102783203
    9. ')=' → logprob: -10.752674102783203
    10. ')**' → logprob: -10.877674102783203

Token 70: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08933200687170029
    2. 'y' → logprob: -2.464332103729248
    3. ' ' → logprob: -8.46433162689209
    4. '   ' → logprob: -10.46433162689209
    5. '  ' → logprob: -10.58933162689209
    6. ' )' → logprob: -10.58933162689209
    7. ')' → logprob: -10.83933162689209
    8. ' n' → logprob: -11.65183162689209
    9. 'a' → logprob: -11.83933162689209
    10. ' a' → logprob: -11.90183162689209

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003246183041483164
    2. ' ):' → logprob: -8.250324249267578
    3. ')' → logprob: -10.000324249267578
    4. '):
' → logprob: -12.125324249267578
    5. ',' → logprob: -12.125324249267578
    6. ':' → logprob: -13.125324249267578
    7. '   ' → logprob: -13.500324249267578
    8. '_' → logprob: -14.000324249267578
    9. ' ' → logprob: -14.375324249267578
    10. '  ' → logprob: -14.625324249267578

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20376354455947876
    2. 'abs' → logprob: -2.078763484954834
    3. ' abs' → logprob: -2.953763484954834
    4. ' return' → logprob: -5.203763484954834
    5. 'return' → logprob: -6.703763484954834
    6. '    ' → logprob: -8.953763961791992
    7. '(abs' → logprob: -9.328763961791992
    8. ' ' → logprob: -9.953763961791992
    9. ')' → logprob: -10.328763961791992
    10. ' x' → logprob: -10.453763961791992

Token 73: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5125776529312134
    2. ' abs' → logprob: -1.6375776529312134
    3. '   ' → logprob: -2.262577533721924
    4. ' return' → logprob: -3.387577533721924
    5. 'return' (adapté à ' return') → logprob: -3.512577533721924
    6. 'x' → logprob: -3.637577533721924
    7. ' x' → logprob: -4.887577533721924
    8. ' ' → logprob: -6.137577533721924
    9. '    ' → logprob: -6.762577533721924
    10. '(abs' → logprob: -8.137578010559082

Token 74: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.05105937644839287
    2. 'abs' → logprob: -3.0510594844818115
    3. ' x' → logprob: -6.176059246063232
    4. 'x' → logprob: -8.67605972290039
    5. '(abs' → logprob: -8.80105972290039
    6. '   ' → logprob: -10.05105972290039
    7. ' max' → logprob: -12.17605972290039
    8. ' ' → logprob: -12.17605972290039
    9. ' (' → logprob: -12.30105972290039
    10. ' int' → logprob: -12.42605972290039

Token 75: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197776645421982
    2. '(x' → logprob: -2.8119778633117676
    3. '(
' → logprob: -12.18697738647461
    4. ' (' → logprob: -13.18697738647461
    5. '((' → logprob: -13.43697738647461
    6. '(y' → logprob: -13.81197738647461
    7. '(

' → logprob: -15.43697738647461
    8. 'x' → logprob: -15.68697738647461
    9. '(s' → logprob: -16.43697738647461
    10. ' ' → logprob: -16.81197738647461

Token 76: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08432188630104065
    2. ' -' → logprob: -2.584321975708008
    3. '-y' → logprob: -5.459321975708008
    4. ')' → logprob: -7.334321975708008
    5. ' ' → logprob: -7.709321975708008
    6. ',' → logprob: -10.209321975708008
    7. '+' → logprob: -12.459321975708008
    8. ' )' → logprob: -12.584321975708008
    9. '   ' → logprob: -13.084321975708008
    10. ' y' → logprob: -13.209321975708008

Token 77: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014165159314870834
    2. ' y' → logprob: -4.264164924621582
    3. '	y' → logprob: -14.139164924621582
    4. ' ' → logprob: -14.764164924621582
    5. '<|end|>' → logprob: -15.139164924621582
    6. ')y' → logprob: -15.639164924621582
    7. ')' → logprob: -16.3891658782959
    8. '   ' → logprob: -17.1391658782959
    9. '<|end|>' → logprob: -18.3891658782959
    10. '    ' → logprob: -18.5141658782959

Token 78: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.875000953674316
    3. '))' → logprob: -15.500000953674316
    4. ' )' → logprob: -16.0
    5. '   ' → logprob: -18.625
    6. ')return' → logprob: -19.125
    7. ')`' → logprob: -19.25
    8. ')

' → logprob: -19.25
    9. '}' → logprob: -19.375
    10. ')}' → logprob: -19.375

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013619070872664452
    2. '<|end|>' → logprob: -5.8886189460754395
    3. '(' → logprob: -6.2636189460754395
    4. '```' → logprob: -6.3886189460754395
    5. '
' → logprob: -6.6386189460754395
    6. '\n' → logprob: -6.7636189460754395
    7. '\' → logprob: -6.8886189460754395
    8. '()' → logprob: -7.2636189460754395
    9. '_' → logprob: -7.3886189460754395
    10. '

' → logprob: -7.3886189460754395

Token 80: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.609266996383667
    2. ' calc' → logprob: -0.984266996383667
    3. ' calculate' → logprob: -3.484266996383667
    4. ' get' → logprob: -4.609267234802246
    5. 'calc' → logprob: -4.609267234802246
    6. ' max' → logprob: -4.734267234802246
    7. 'main' → logprob: -5.109267234802246
    8. ' def' → logprob: -5.984267234802246
    9. ' solve' → logprob: -6.234267234802246
    10. ' abs' → logprob: -6.359267234802246

Token 81: '_condition' (ID: 64948)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45659464597702026
    2. '(' → logprob: -1.206594705581665
    3. '_a' → logprob: -3.331594705581665
    4. '_(' → logprob: -4.081594467163086
    5. '(a' → logprob: -6.206594467163086
    6. '_equal' → logprob: -6.331594467163086
    7. '(_)' → logprob: -6.706594467163086
    8. '(x' → logprob: -7.331594467163086
    9. '_diff' → logprob: -7.331594467163086
    10. '_d' → logprob: -7.456594467163086

Token 82: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004944950807839632
    2. '(s' → logprob: -6.004944801330566
    3. '(x' → logprob: -6.254944801330566
    4. '()' → logprob: -9.254944801330566
    5. '():' → logprob: -9.254944801330566
    6. 's' → logprob: -9.504944801330566
    7. '(a' → logprob: -10.254944801330566
    8. '(_)' → logprob: -10.254944801330566
    9. '_' → logprob: -10.379944801330566
    10. '('' → logprob: -10.504944801330566

Token 83: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008660893887281418
    2. ' (' → logprob: -5.883660793304443
    3. '()' → logprob: -6.008660793304443
    4. '(x' → logprob: -6.008660793304443
    5. '():' → logprob: -7.383660793304443
    6. ' ()' → logprob: -9.133661270141602
    7. '(a' → logprob: -10.008661270141602
    8. '(s' → logprob: -10.258661270141602
    9. '("("' → logprob: -10.883661270141602
    10. '('' → logprob: -11.258661270141602

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12261498719453812
    2. ' ,' → logprob: -2.247615098953247
    3. ')' → logprob: -5.122614860534668
    4. ' )' → logprob: -6.122614860534668
    5. '):' → logprob: -7.122614860534668
    6. ' ):' → logprob: -8.622614860534668
    7. ',a' → logprob: -8.747614860534668
    8. ',b' → logprob: -8.872614860534668
    9. ' >' → logprob: -9.622614860534668
    10. ' ' → logprob: -9.872614860534668

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.29587239027023315
    2. ' b' → logprob: -1.420872449874878
    3. 'c' → logprob: -5.420872211456299
    4. ' c' → logprob: -5.545872211456299
    5. 'd' → logprob: -5.795872211456299
    6. ' d' → logprob: -5.795872211456299
    7. ' ' → logprob: -9.170872688293457
    8. 'a' → logprob: -10.045872688293457
    9. ')' → logprob: -11.295872688293457
    10. ' a' → logprob: -11.420872688293457

Token 86: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07487339526414871
    2. ',' → logprob: -3.074873447418213
    3. ')' → logprob: -3.949873447418213
    4. ' ):' → logprob: -5.074873447418213
    5. ' ,' → logprob: -8.574872970581055
    6. ' )' → logprob: -8.824872970581055
    7. ' ' → logprob: -11.074872970581055
    8. ',b' → logprob: -11.199872970581055
    9. ')>' → logprob: -11.449872970581055
    10. '):
' → logprob: -11.699872970581055

Token 87: ' d' (ID: 272)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2536553740501404
    2. ' c' → logprob: -1.5036554336547852
    3. 'd' → logprob: -6.878655433654785
    4. ' d' → logprob: -7.753655433654785
    5. ' ' → logprob: -9.128655433654785
    6. 'a' → logprob: -10.441155433654785
    7. 'b' → logprob: -10.503655433654785
    8. '	c' → logprob: -10.941155433654785
    9. '   ' → logprob: -11.253655433654785
    10. ')c' → logprob: -11.378655433654785

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031597800552845
    2. ')' → logprob: -3.531597852706909
    3. ',' → logprob: -6.90659761428833
    4. ' ):' → logprob: -7.15659761428833
    5. ' )' → logprob: -11.281598091125488
    6. '):
' → logprob: -11.281598091125488
    7. ')>' → logprob: -11.781598091125488
    8. '_' → logprob: -12.281598091125488
    9. '>' → logprob: -12.406598091125488
    10. '=' → logprob: -12.656598091125488

Token 89: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2351243793964386
    2. '):' → logprob: -2.360124349594116
    3. '(' → logprob: -3.235124349594116
    4. '   ' → logprob: -3.360124349594116
    5. '(a' → logprob: -3.485124349594116
    6. ' :' → logprob: -5.610124588012695
    7. '():' → logprob: -6.110124588012695
    8. '>' → logprob: -7.110124588012695
    9. ':return' → logprob: -7.735124588012695
    10. ')' → logprob: -7.735124588012695

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8841872215270996
    2. 'return' (adapté à ' return') → logprob: -1.1341872215270996
    3. 'a' → logprob: -2.1341872215270996
    4. '   ' → logprob: -2.7591872215270996
    5. ' a' → logprob: -3.2591872215270996
    6. '(' → logprob: -4.1341872215271
    7. 'd' → logprob: -5.0091872215271
    8. 'b' → logprob: -5.1341872215271
    9. ' (' → logprob: -5.3841872215271
    10. '(a' → logprob: -5.8841872215271

Token 91: ' calc' (ID: 25691)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7286476492881775
    2. 'a' → logprob: -1.2286477088928223
    3. '(a' → logprob: -2.2286477088928223
    4. ' (' → logprob: -2.4786477088928223
    5. ' d' → logprob: -4.603647708892822
    6. '(' → logprob: -4.728647708892822
    7. ' abs' → logprob: -5.103647708892822
    8. 'd' → logprob: -5.853647708892822
    9. 'abs' → logprob: -6.728647708892822
    10. ' b' → logprob: -6.853647708892822

Token 92: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -1.1994775377388578e-05
    2. '_a' → logprob: -12.000012397766113
    3. 'abs' → logprob: -12.625012397766113
    4. '_ab' → logprob: -13.250012397766113
    5. '_' → logprob: -14.500012397766113
    6. '_absolute' → logprob: -15.875012397766113
    7. '(abs' → logprob: -16.750011444091797
    8. '__' → logprob: -16.875011444091797
    9. 'a' → logprob: -17.000011444091797
    10. '_(' → logprob: -18.125011444091797

Token 93: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009964196011424065
    2. '(' → logprob: -4.6349639892578125
    3. '(b' → logprob: -8.759963989257812
    4. '(d' → logprob: -10.009963989257812
    5. 'a' → logprob: -13.009963989257812
    6. '(x' → logprob: -14.009963989257812
    7. ' (' → logprob: -14.259963989257812
    8. '(abs' → logprob: -14.509963989257812
    9. '(s' → logprob: -14.634963989257812
    10. '((' → logprob: -15.259963989257812

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005852947011590004
    2. ',b' → logprob: -6.005853176116943
    3. 'd' → logprob: -7.130853176116943
    4. 'b' → logprob: -7.380853176116943
    5. ' ,' → logprob: -7.380853176116943
    6. '(' → logprob: -7.380853176116943
    7. '(b' → logprob: -8.755852699279785
    8. ' ' → logprob: -8.880852699279785
    9. ',d' → logprob: -9.005852699279785
    10. ')' → logprob: -9.130852699279785

Token 95: ' b' (ID: 287)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17233766615390778
    2. 'b' → logprob: -1.9223376512527466
    3. 'c' → logprob: -4.672337532043457
    4. ' d' → logprob: -6.047337532043457
    5. ' b' → logprob: -8.422337532043457
    6. '0' → logprob: -10.297337532043457
    7. ' c' → logprob: -10.547337532043457
    8. ' ' → logprob: -11.422337532043457
    9. '	d' → logprob: -11.922337532043457
    10. 'a' → logprob: -12.047337532043457

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013279760023579001
    2. ' )' → logprob: -6.751327991485596
    3. ' ' → logprob: -10.001327514648438
    4. ')<=' → logprob: -10.501327514648438
    5. ')==' → logprob: -10.876327514648438
    6. 'd' → logprob: -11.501327514648438
    7. ')>' → logprob: -11.626327514648438
    8. '=' → logprob: -11.876327514648438
    9. ')+' → logprob: -11.876327514648438
    10. ')>=' → logprob: -12.001327514648438

Token 97: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8637725710868835
    2. ' >' → logprob: -1.7387726306915283
    3. '>' → logprob: -1.8637726306915283
    4. ' <' → logprob: -1.9887726306915283
    5. '==' → logprob: -3.7387726306915283
    6. ' <=' → logprob: -3.9887726306915283
    7. '+' → logprob: -3.9887726306915283
    8. '<=' → logprob: -4.363772392272949
    9. ' ==' → logprob: -4.488772392272949
    10. ' ' → logprob: -4.613772392272949

Token 98: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04051976278424263
    2. ' d' → logprob: -3.2905197143554688
    3. 'calc' → logprob: -6.415519714355469
    4. ' calc' → logprob: -8.540519714355469
    5. ' ' → logprob: -8.665519714355469
    6. '	d' → logprob: -9.290519714355469
    7. 'c' → logprob: -9.290519714355469
    8. '1' → logprob: -9.290519714355469
    9. '   ' → logprob: -10.415519714355469
    10. '10' → logprob: -10.415519714355469

Token 99: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16811850666999817
    2. 'and' → logprob: -2.168118476867676
    3. '
' → logprob: -4.043118476867676
    4. '<|end|>' → logprob: -4.418118476867676
    5. 'def' → logprob: -5.293118476867676
    6. '\n' → logprob: -6.043118476867676
    7. ' ' → logprob: -7.418118476867676
    8. ')' → logprob: -7.793118476867676
    9. '' → logprob: -8.043118476867676
    10. '

' → logprob: -8.168118476867676

Token 100: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7659271359443665
    2. '\' → logprob: -1.2659270763397217
    3. '
' → logprob: -2.1409270763397217
    4. '<|end|>' → logprob: -2.7659270763397217
    5. ')' → logprob: -4.140927314758301
    6. '```' → logprob: -4.765927314758301
    7. 'def' → logprob: -5.015927314758301
    8. '' → logprob: -5.515927314758301
    9. '.' → logprob: -5.515927314758301
    10. '(' → logprob: -5.515927314758301

Token 101: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.3874174654483795
    2. 'check' → logprob: -1.1374174356460571
    3. ' ' → logprob: -8.012417793273926
    4. '
' → logprob: -9.512417793273926
    5. 'def' → logprob: -9.762417793273926
    6. '_check' → logprob: -10.512417793273926
    7. '`' → logprob: -10.637417793273926
    8. '	check' → logprob: -11.762417793273926
    9. ' def' → logprob: -12.137417793273926
    10. 'c' → logprob: -13.074917793273926

Token 102: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.0021841649431735277
    2. '_' → logprob: -7.0021843910217285
    3. ' _' → logprob: -7.0021843910217285
    4. '```' → logprob: -9.50218391418457
    5. ''_' → logprob: -10.00218391418457
    6. ' ' → logprob: -10.75218391418457
    7. '_conditions' → logprob: -10.75218391418457
    8. '"_' → logprob: -11.12718391418457
    9. '_c' → logprob: -11.12718391418457
    10. '_s' → logprob: -11.25218391418457

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -9.375204086303711
    3. '_' → logprob: -9.875204086303711
    4. '(' → logprob: -9.875204086303711
    5. '1' → logprob: -12.125204086303711
    6. '3' → logprob: -13.125204086303711
    7. '23' → logprob: -13.375204086303711
    8. '234' → logprob: -13.687704086303711
    9. '25' → logprob: -13.937704086303711
    10. '```' → logprob: -13.937704086303711

Token 104: '(b' (ID: 3229)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.022610273212194443
    2. ' (' → logprob: -5.022610187530518
    3. '(c' → logprob: -5.022610187530518
    4. '(b' → logprob: -5.147610187530518
    5. '(' → logprob: -5.772610187530518
    6. '(d' → logprob: -8.397610664367676
    7. 'a' → logprob: -12.272610664367676
    8. 'def' → logprob: -12.397610664367676
    9. '(s' → logprob: -12.647610664367676
    10. ' ' → logprob: -12.897610664367676

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2637123167514801
    2. ' ,' → logprob: -1.6387122869491577
    3. ' +' → logprob: -3.8887124061584473
    4. ')' → logprob: -5.013712406158447
    5. '+' → logprob: -5.638712406158447
    6. ' <=' → logprob: -5.638712406158447
    7. ' ' → logprob: -7.013712406158447
    8. ' >' → logprob: -7.763712406158447
    9. ' ==' → logprob: -7.763712406158447
    10. ' -' → logprob: -8.138711929321289

Token 106: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.25595083832740784
    2. ' c' → logprob: -1.5059508085250854
    3. 'd' → logprob: -6.005950927734375
    4. ' d' → logprob: -7.380950927734375
    5. 'a' → logprob: -7.505950927734375
    6. ' ' → logprob: -9.380950927734375
    7. ' a' → logprob: -9.505950927734375
    8. '<|end|>' → logprob: -10.130950927734375
    9. 'def' → logprob: -10.505950927734375
    10. ')' → logprob: -10.505950927734375

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15083813667297363
    2. '):' → logprob: -2.0258381366729736
    3. ' ,' → logprob: -5.5258378982543945
    4. ')' → logprob: -6.1508378982543945
    5. ' ):' → logprob: -6.7758378982543945
    6. '):
' → logprob: -8.025837898254395
    7. 'd' → logprob: -8.775837898254395
    8. ',d' → logprob: -9.275837898254395
    9. '   ' → logprob: -9.775837898254395
    10. ',c' → logprob: -9.775837898254395

Token 108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07961783558130264
    2. ' d' → logprob: -2.704617738723755
    3. 'c' → logprob: -4.954617977142334
    4. ' c' → logprob: -6.829617977142334
    5. 'a' → logprob: -6.954617977142334
    6. ')d' → logprob: -8.829617500305176
    7. ')' → logprob: -9.204617500305176
    8. 'b' → logprob: -9.579617500305176
    9. ' a' → logprob: -9.579617500305176
    10. ' ' → logprob: -10.454617500305176

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013971416046842933
    2. ')' → logprob: -6.626397132873535
    3. '):
' → logprob: -9.751397132873535
    4. ' ):' → logprob: -11.626397132873535
    5. '   ' → logprob: -13.501397132873535
    6. ',' → logprob: -13.751397132873535
    7. ':' → logprob: -14.126397132873535
    8. ' ' → logprob: -15.626397132873535
    9. ')>' → logprob: -16.12639808654785
    10. '):
' → logprob: -16.25139808654785

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22094611823558807
    2. ' return' → logprob: -1.8459460735321045
    3. 'return' → logprob: -3.2209460735321045
    4. ')' → logprob: -8.720946311950684
    5. '    ' → logprob: -9.595946311950684
    6. ':return' → logprob: -10.095946311950684
    7. '>' → logprob: -10.595946311950684
    8. ' ' → logprob: -10.720946311950684
    9. '```' → logprob: -11.095946311950684
    10. '	return' → logprob: -11.345946311950684

Token 111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5244364142417908
    2. ' return' → logprob: -0.8994364142417908
    3. '   ' → logprob: -7.0244364738464355
    4. 'calc' → logprob: -9.024435997009277
    5. 'abs' → logprob: -9.524435997009277
    6. 'c' → logprob: -9.774435997009277
    7. ' calc' → logprob: -9.899435997009277
    8. 'b' → logprob: -10.274435997009277
    9. 'd' → logprob: -10.649435997009277
    10. 'eturn' → logprob: -11.399435997009277

Token 112: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.6434829235076904
    2. ' calc' → logprob: -0.8934829235076904
    3. 'abs' → logprob: -3.8934829235076904
    4. ' abs' → logprob: -4.5184831619262695
    5. 'b' → logprob: -4.6434831619262695
    6. ' b' → logprob: -5.1434831619262695
    7. '(calc' → logprob: -5.2684831619262695
    8. '(c' → logprob: -5.3934831619262695
    9. 'c' → logprob: -5.6434831619262695
    10. ' (' → logprob: -6.8934831619262695

Token 113: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -3.5954712075181305e-05
    2. 'abs' → logprob: -10.250036239624023
    3. '_ab' → logprob: -15.250036239624023
    4. 'Abs' → logprob: -16.000036239624023
    5. '(abs' → logprob: -16.875036239624023
    6. '_' → logprob: -17.125036239624023
    7. '2' → logprob: -17.250036239624023
    8. '.abs' → logprob: -17.875036239624023
    9. ' abs' → logprob: -18.000036239624023
    10. '_len' → logprob: -18.500036239624023

Token 114: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0004636776284314692
    2. '(c' → logprob: -7.875463485717773
    3. '(' → logprob: -9.875463485717773
    4. 'b' → logprob: -10.375463485717773
    5. ' (' → logprob: -14.500463485717773
    6. ' b' → logprob: -15.375463485717773
    7. '(a' → logprob: -16.625463485717773
    8. '(
' → logprob: -17.250463485717773
    9. '	b' → logprob: -17.375463485717773
    10. '(d' → logprob: -17.500463485717773

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016362625174224377
    2. ',c' → logprob: -6.626636028289795
    3. ' ,' → logprob: -8.126636505126953
    4. 'c' → logprob: -11.376636505126953
    5. ',
' → logprob: -14.001636505126953
    6. ',d' → logprob: -14.376636505126953
    7. ' ' → logprob: -14.751636505126953
    8. ')' → logprob: -14.876636505126953
    9. ' c' → logprob: -15.126636505126953
    10. ',b' → logprob: -16.126636505126953

Token 116: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036334465257823467
    2. ' c' → logprob: -5.628633499145508
    3. 'd' → logprob: -10.503633499145508
    4. ' ' → logprob: -13.253633499145508
    5. ')c' → logprob: -13.253633499145508
    6. ')' → logprob: -14.003633499145508
    7. ' d' → logprob: -14.753633499145508
    8. '	c' → logprob: -15.378633499145508
    9. '   ' → logprob: -15.753633499145508
    10. ',' → logprob: -16.503633499145508

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3544423381972592e-05
    2. ' )' → logprob: -11.37501335144043
    3. ')<=' → logprob: -13.37501335144043
    4. '')' → logprob: -16.50001335144043
    5. 'd' → logprob: -16.62501335144043
    6. '`)' → logprob: -17.00001335144043
    7. ',' → logprob: -17.37501335144043
    8. ')
' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.75001335144043
    10. ' <=' → logprob: -17.87501335144043

Token 118: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.18569092452526093
    2. '<=' → logprob: -1.8106908798217773
    3. '<' → logprob: -5.810690879821777
    4. ' <' → logprob: -6.060690879821777
    5. '>' → logprob: -8.935690879821777
    6. '+' → logprob: -9.310690879821777
    7. ' >' → logprob: -9.435690879821777
    8. ' ' → logprob: -9.560690879821777
    9. ' >=' → logprob: -10.060690879821777
    10. '==' → logprob: -10.185690879821777

Token 119: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0791764035820961
    2. 'd' → logprob: -2.579176425933838
    3. ' ' → logprob: -8.45417594909668
    4. '1' → logprob: -10.32917594909668
    5. ' ' → logprob: -11.45417594909668
    6. '	d' → logprob: -11.82917594909668
    7. '2' → logprob: -12.95417594909668
    8. '(d' → logprob: -13.07917594909668
    9. '20' → logprob: -13.07917594909668
    10. '10' → logprob: -13.45417594909668

Token 120: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01735253818333149
    2. '<|end|>' → logprob: -4.76735258102417
    3. '\' → logprob: -5.64235258102417
    4. '
' → logprob: -6.76735258102417
    5. '\n' → logprob: -6.76735258102417
    6. ')' → logprob: -7.51735258102417
    7. 'and' → logprob: -7.51735258102417
    8. '(' → logprob: -7.76735258102417
    9. '

' → logprob: -8.517352104187012
    10. '()' → logprob: -8.642352104187012

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03840452432632446
    2. '
' → logprob: -3.9134044647216797
    3. '\n' → logprob: -4.91340446472168
    4. '<|end|>' → logprob: -5.28840446472168
    5. '\' → logprob: -5.66340446472168
    6. '```' → logprob: -7.03840446472168
    7. 'd' → logprob: -8.66340446472168
    8. '  
' → logprob: -9.03840446472168
    9. '

' → logprob: -9.16340446472168
    10. ')' → logprob: -9.41340446472168

Token 122: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.39176130294799805
    2. ' check' → logprob: -1.141761302947998
    3. 'def' → logprob: -5.641761302947998
    4. 'main' → logprob: -7.891761302947998
    5. ' main' → logprob: -8.016761779785156
    6. 'calc' → logprob: -8.516761779785156
    7. 'get' → logprob: -8.641761779785156
    8. ' def' → logprob: -9.266761779785156
    9. ' get' → logprob: -10.516761779785156
    10. ' calc' → logprob: -10.766761779785156

Token 123: '_sub' (ID: 11572)
  Prédit: '_condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_condition' → logprob: -8.180258191714529e-06
    2. '_conditions' → logprob: -13.000008583068848
    3. '_' → logprob: -13.750008583068848
    4. 'def' → logprob: -14.125008583068848
    5. '_function' → logprob: -14.625008583068848
    6. '_constraint' → logprob: -15.000008583068848
    7. '_cond' → logprob: -15.000008583068848
    8. ' _' → logprob: -15.125008583068848
    9. '```' → logprob: -15.375008583068848
    10. '_c' → logprob: -15.375008583068848

Token 124: 'conditions' (ID: 33737)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0943499505519867
    2. 'condition' → logprob: -3.3443498611450195
    3. 'string' → logprob: -3.8443498611450195
    4. 'set' → logprob: -4.7193498611450195
    5. 'def' → logprob: -4.8443498611450195
    6. 'tract' → logprob: -5.0943498611450195
    7. 'stract' → logprob: -5.4693498611450195
    8. '_sequence' → logprob: -6.5943498611450195
    9. '_condition' → logprob: -6.7193498611450195
    10. 'ject' → logprob: -6.8443498611450195

Token 125: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03519332408905029
    2. '1' → logprob: -4.28519344329834
    3. '(b' → logprob: -4.53519344329834
    4. '(' → logprob: -4.91019344329834
    5. '(c' → logprob: -6.78519344329834
    6. '(d' → logprob: -7.03519344329834
    7. '2' → logprob: -8.53519344329834
    8. '():' → logprob: -9.28519344329834
    9. '(x' → logprob: -9.53519344329834
    10. '_' → logprob: -9.66019344329834

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008003382245078683
    2. ',b' → logprob: -7.750800132751465
    3. ' ,' → logprob: -8.000800132751465
    4. 'b' → logprob: -11.625800132751465
    5. '):' → logprob: -11.750800132751465
    6. ',c' → logprob: -12.125800132751465
    7. ',a' → logprob: -12.875800132751465
    8. '_,' → logprob: -12.875800132751465
    9. ',
' → logprob: -13.375800132751465
    10. '):
' → logprob: -14.000800132751465

Token 127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25667181611061096
    2. ' b' → logprob: -1.7566717863082886
    3. 'c' → logprob: -3.506671905517578
    4. ' c' → logprob: -3.881671905517578
    5. 'd' → logprob: -6.506671905517578
    6. ' d' → logprob: -6.506671905517578
    7. ' ' → logprob: -9.506671905517578
    8. '   ' → logprob: -10.131671905517578
    9. '  ' → logprob: -11.506671905517578
    10. 'a' → logprob: -11.756671905517578

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006946814828552306
    2. ' ,' → logprob: -8.125694274902344
    3. ',c' → logprob: -8.250694274902344
    4. ',b' → logprob: -9.500694274902344
    5. '):' → logprob: -11.000694274902344
    6. ',
' → logprob: -11.125694274902344
    7. ',d' → logprob: -11.375694274902344
    8. ')' → logprob: -12.125694274902344
    9. 'c' → logprob: -12.250694274902344
    10. ',a' → logprob: -13.250694274902344

Token 129: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3736549913883209
    2. ' c' → logprob: -1.3736549615859985
    3. 'd' → logprob: -3.123655080795288
    4. ' d' → logprob: -4.248654842376709
    5. ')' → logprob: -8.748655319213867
    6. ',' → logprob: -10.623655319213867
    7. 'def' → logprob: -10.811155319213867
    8. ' ' → logprob: -10.873655319213867
    9. ')c' → logprob: -10.998655319213867
    10. ',c' → logprob: -11.436155319213867

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010243549477308989
    2. '):' → logprob: -7.00102424621582
    3. ',d' → logprob: -9.50102424621582
    4. ' ,' → logprob: -11.25102424621582
    5. ')' → logprob: -11.62602424621582
    6. 'd' → logprob: -12.12602424621582
    7. '):
' → logprob: -12.12602424621582
    8. ',
' → logprob: -12.75102424621582
    9. ',b' → logprob: -14.37602424621582
    10. ',c' → logprob: -15.00102424621582

Token 131: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06995655596256256
    2. ' d' → logprob: -2.6949565410614014
    3. ')' → logprob: -12.19495677947998
    4. ' ' → logprob: -12.44495677947998
    5. ')d' → logprob: -12.94495677947998
    6. ',' → logprob: -13.19495677947998
    7. '   ' → logprob: -13.56995677947998
    8. 'c' → logprob: -13.94495677947998
    9. ',d' → logprob: -14.06995677947998
    10. '  ' → logprob: -14.44495677947998

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.9650025428272784e-05
    2. '):
' → logprob: -11.125040054321289
    3. ')' → logprob: -11.375040054321289
    4. ',' → logprob: -11.750040054321289
    5. ':' → logprob: -12.625040054321289
    6. ' ):' → logprob: -13.375040054321289
    7. '   ' → logprob: -14.875040054321289
    8. '():' → logprob: -16.62504005432129
    9. '):
' → logprob: -17.37504005432129
    10. '}:' → logprob: -18.12504005432129

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008064138819463551
    2. ' return' → logprob: -7.5008063316345215
    3. 'return' → logprob: -9.00080680847168
    4. ':' → logprob: -9.75080680847168
    5. '    
' → logprob: -11.12580680847168
    6. '(' → logprob: -11.62580680847168
    7. '	return' → logprob: -12.00080680847168
    8. ':
' → logprob: -12.25080680847168
    9. '       ' → logprob: -12.25080680847168
    10. ':return' → logprob: -12.25080680847168

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45644721388816833
    2. '   ' → logprob: -1.2064472436904907
    3. ' return' → logprob: -2.706447124481201
    4. 'if' → logprob: -8.58144760131836
    5. ' if' → logprob: -9.70644760131836
    6. ' ' → logprob: -10.08144760131836
    7. '	return' → logprob: -10.58144760131836
    8. '(' → logprob: -10.95644760131836
    9. '    
' → logprob: -11.33144760131836
    10. '       ' → logprob: -11.45644760131836

Token 135: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.8690966367721558
    2. ' (' → logprob: -1.1190966367721558
    3. '(check' → logprob: -1.9940966367721558
    4. 'check' → logprob: -2.4940967559814453
    5. ' calc' → logprob: -4.369096755981445
    6. '(calc' → logprob: -4.494096755981445
    7. 'calc' → logprob: -5.744096755981445
    8. '(' → logprob: -5.994096755981445
    9. '(a' → logprob: -6.494096755981445
    10. '   ' → logprob: -7.119096755981445

Token 136: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -3.173704271830502e-06
    2. '_sub' → logprob: -12.87500286102295
    3. '_' → logprob: -15.12500286102295
    4. '_cond' → logprob: -15.25000286102295
    5. '_conditions' → logprob: -17.500003814697266
    6. '_con' → logprob: -18.375003814697266
    7. 'condition' → logprob: -19.125003814697266
    8. '_check' → logprob: -19.500003814697266
    9. '_function' → logprob: -20.250003814697266
    10. 'Condition' → logprob: -20.250003814697266

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.420598219847307e-05
    2. '_condition' → logprob: -9.8750638961792
    3. 'condition' → logprob: -11.3750638961792
    4. '2' → logprob: -14.3750638961792
    5. 'Condition' → logprob: -15.2500638961792
    6. '(condition' → logprob: -16.000064849853516
    7. ' condition' → logprob: -16.250064849853516
    8. '(' → logprob: -16.250064849853516
    9. 's' → logprob: -17.125064849853516
    10. 'tion' → logprob: -17.750064849853516

Token 138: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.625006675720215
    3. ' (' → logprob: -12.875006675720215
    4. '(b' → logprob: -15.500006675720215
    5. 'a' → logprob: -17.0000057220459
    6. '(get' → logprob: -18.1250057220459
    7. '((' → logprob: -18.2500057220459
    8. '(c' → logprob: -18.2500057220459
    9. '(
' → logprob: -18.7500057220459
    10. '(abs' → logprob: -19.6250057220459

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002328790258616209
    2. ',b' → logprob: -6.127328872680664
    3. ' ,' → logprob: -9.127328872680664
    4. ')' → logprob: -11.377328872680664
    5. 'b' → logprob: -11.752328872680664
    6. ',c' → logprob: -11.877328872680664
    7. ',
' → logprob: -13.502328872680664
    8. ',d' → logprob: -13.627328872680664
    9. ',a' → logprob: -14.377328872680664
    10. 'a' → logprob: -14.627328872680664

Token 140: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0016702996799722314
    2. ' b' → logprob: -6.7516703605651855
    3. 'c' → logprob: -7.6266703605651855
    4. 'd' → logprob: -12.001669883728027
    5. ' c' → logprob: -12.251669883728027
    6. ' ' → logprob: -13.626669883728027
    7. ' d' → logprob: -15.751669883728027
    8. '   ' → logprob: -16.001670837402344
    9. ')b' → logprob: -16.626670837402344
    10. ')' → logprob: -16.751670837402344

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008358351769857109
    2. ' ,' → logprob: -7.75083589553833
    3. ',d' → logprob: -8.125835418701172
    4. ')' → logprob: -9.625835418701172
    5. 'd' → logprob: -11.625835418701172
    6. ',b' → logprob: -11.750835418701172
    7. 'a' → logprob: -12.250835418701172
    8. '),' → logprob: -12.625835418701172
    9. ',c' → logprob: -12.750835418701172
    10. '   ' → logprob: -13.000835418701172

Token 142: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16051077842712402
    2. ' d' → logprob: -1.910510778427124
    3. ')' → logprob: -8.410511016845703
    4. ')d' → logprob: -10.535511016845703
    5. ' ' → logprob: -11.410511016845703
    6. 'c' → logprob: -11.910511016845703
    7. ' c' → logprob: -12.035511016845703
    8. '   ' → logprob: -12.660511016845703
    9. '	d' → logprob: -13.160511016845703
    10. ' )' → logprob: -13.285511016845703

Token 143: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013681044802069664
    2. ' and' → logprob: -4.513680934906006
    3. 'and' → logprob: -6.138680934906006
    4. ' or' → logprob: -8.138681411743164
    5. 'or' → logprob: -9.263681411743164
    6. ' )' → logprob: -9.513681411743164
    7. '   ' → logprob: -11.763681411743164
    8. ' ' → logprob: -13.138681411743164
    9. '  ' → logprob: -15.138681411743164
    10. '    ' → logprob: -15.138681411743164

Token 144: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.46677419543266296
    2. ' or' → logprob: -1.3417742252349854
    3. 'and' → logprob: -2.2167742252349854
    4. 'or' → logprob: -5.966773986816406
    5. ' ' → logprob: -10.216773986816406
    6. '   ' → logprob: -10.591773986816406
    7. '()' → logprob: -12.466773986816406
    8. '    ' → logprob: -12.591773986816406
    9. '  ' → logprob: -12.716773986816406
    10. ' ' → logprob: -14.716773986816406

Token 145: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.6992601752281189
    2. 'check' → logprob: -0.6992601752281189
    3. '(check' → logprob: -5.324260234832764
    4. ' (' → logprob: -7.449260234832764
    5. '(' → logprob: -8.324259757995605
    6. 'calc' → logprob: -9.199259757995605
    7. ' calc' → logprob: -9.699259757995605
    8. ' not' → logprob: -10.199259757995605
    9. 'abs' → logprob: -10.324259757995605
    10. '(c' → logprob: -10.699259757995605

Token 146: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -2.339278580620885e-06
    2. '_sub' → logprob: -13.625001907348633
    3. '_' → logprob: -14.625001907348633
    4. ' _' → logprob: -16.375001907348633
    5. 'condition' → logprob: -16.750001907348633
    6. '_function' → logprob: -16.875001907348633
    7. '_conditions' → logprob: -17.000001907348633
    8. '```' → logprob: -17.000001907348633
    9. ''_' → logprob: -17.125001907348633
    10. '_factor' → logprob: -17.375001907348633

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. '_condition' → logprob: -11.87501335144043
    3. 'condition' → logprob: -12.00001335144043
    4. 'Condition' → logprob: -15.50001335144043
    5. '(condition' → logprob: -15.87501335144043
    6. '_' → logprob: -16.25001335144043
    7. '(' → logprob: -16.75001335144043
    8. ' condition' → logprob: -16.87501335144043
    9. '_sub' → logprob: -17.25001335144043
    10. 'cond' → logprob: -17.87501335144043

Token 148: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005581044591963291
    2. '(' → logprob: -5.255580902099609
    3. '(c' → logprob: -8.50558090209961
    4. ' (' → logprob: -8.88058090209961
    5. '(a' → logprob: -13.13058090209961
    6. '(
' → logprob: -13.38058090209961
    7. 'b' → logprob: -13.75558090209961
    8. ' b' → logprob: -15.13058090209961
    9. ' ' → logprob: -15.25558090209961
    10. ')' → logprob: -16.25558090209961

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023549527395516634
    2. ',c' → logprob: -6.627355098724365
    3. 'c' → logprob: -7.377355098724365
    4. ' ,' → logprob: -7.877355098724365
    5. ')' → logprob: -11.377354621887207
    6. ')c' → logprob: -12.502354621887207
    7. '`,' → logprob: -13.127354621887207
    8. '),' → logprob: -13.252354621887207
    9. '(c' → logprob: -13.627354621887207
    10. '(' → logprob: -14.127354621887207

Token 150: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011056780815124512
    2. ' c' → logprob: -4.511056900024414
    3. ' ' → logprob: -12.386056900024414
    4. '   ' → logprob: -13.511056900024414
    5. '	c' → logprob: -13.761056900024414
    6. '<|end|>' → logprob: -13.761056900024414
    7. ')c' → logprob: -14.511056900024414
    8. '  ' → logprob: -14.886056900024414
    9. '    ' → logprob: -16.386056900024414
    10. ')' → logprob: -16.386056900024414

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032807406969368458
    2. ',d' → logprob: -5.7532806396484375
    3. ' ,' → logprob: -9.878280639648438
    4. 'd' → logprob: -10.503280639648438
    5. ')' → logprob: -10.753280639648438
    6. '),' → logprob: -14.003280639648438
    7. ')d' → logprob: -14.503280639648438
    8. ' ' → logprob: -14.628280639648438
    9. ' d' → logprob: -14.753280639648438
    10. '```' → logprob: -15.503280639648438

Token 152: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02630889043211937
    2. ' d' → logprob: -3.65130877494812
    3. ' ' → logprob: -12.2763090133667
    4. '   ' → logprob: -13.2763090133667
    5. '  ' → logprob: -14.2763090133667
    6. '	d' → logprob: -14.7763090133667
    7. ')d' → logprob: -15.5263090133667
    8. ')' → logprob: -15.6513090133667
    9. ' ' → logprob: -16.151308059692383
    10. '
' → logprob: -16.151308059692383

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.87500286102295
    3. ' and' → logprob: -14.50000286102295
    4. ' )' → logprob: -15.00000286102295
    5. ')#' → logprob: -15.75000286102295
    6. '())' → logprob: -16.000001907348633
    7. ')return' → logprob: -16.125001907348633
    8. '))' → logprob: -16.250001907348633
    9. 'and' → logprob: -16.750001907348633
    10. ')a' → logprob: -17.250001907348633

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07937946915626526
    2. '(' → logprob: -3.5793795585632324
    3. '<|end|>' → logprob: -4.079379558563232
    4. ':' → logprob: -4.329379558563232
    5. '()' → logprob: -4.579379558563232
    6. '
' → logprob: -6.079379558563232
    7. '():' → logprob: -6.454379558563232
    8. '(
' → logprob: -6.704379558563232
    9. ':def' → logprob: -6.829379558563232
    10. ' def' → logprob: -7.954379558563232

Token 155: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.31610220670700073
    2. 'main' → logprob: -1.4411022663116455
    3. ' check' → logprob: -4.316102027893066
    4. 'check' → logprob: -4.691102027893066
    5. 'def' → logprob: -5.066102027893066
    6. 'solve' → logprob: -6.441102027893066
    7. ' solve' → logprob: -6.816102027893066
    8. ' def' → logprob: -7.566102027893066
    9. ' is' → logprob: -7.566102027893066
    10. 'is' → logprob: -8.066102027893066

Token 156: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -0.4293396472930908
    2. '_sub' → logprob: -1.0543396472930908
    3. '_conditions' → logprob: -8.054339408874512
    4. '_' → logprob: -8.554339408874512
    5. '_s' → logprob: -11.304339408874512
    6. '_a' → logprob: -11.554339408874512
    7. '_final' → logprob: -11.554339408874512
    8. '_cond' → logprob: -11.804339408874512
    9. '(' → logprob: -11.804339408874512
    10. '_def' → logprob: -11.929339408874512

Token 157: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008310186676681042
    2. '1' → logprob: -5.508310317993164
    3. '4' → logprob: -6.508310317993164
    4. '(a' → logprob: -6.633310317993164
    5. 's' → logprob: -7.133310317993164
    6. '(' → logprob: -8.133310317993164
    7. '2' → logprob: -9.383310317993164
    8. '_' → logprob: -9.758310317993164
    9. '```' → logprob: -10.008310317993164
    10. 'sub' → logprob: -10.508310317993164

Token 158: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.013431142084300518
    2. '(c' → logprob: -5.013431072235107
    3. '(b' → logprob: -5.263431072235107
    4. ' (' → logprob: -7.263431072235107
    5. '(d' → logprob: -7.763431072235107
    6. '(' → logprob: -7.888431072235107
    7. '(s' → logprob: -12.888431549072266
    8. '(e' → logprob: -13.388431549072266
    9. 'def' → logprob: -13.388431549072266
    10. '(
' → logprob: -13.638431549072266

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008091091178357601
    2. ' ,' → logprob: -4.883090972900391
    3. ',b' → logprob: -7.883090972900391
    4. ',c' → logprob: -10.00809097290039
    5. 'c' → logprob: -11.00809097290039
    6. 'b' → logprob: -11.25809097290039
    7. 'a' → logprob: -12.00809097290039
    8. ',a' → logprob: -12.38309097290039
    9. ' b' → logprob: -12.75809097290039
    10. ',
' → logprob: -13.00809097290039

Token 160: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.667461097240448
    2. 'c' → logprob: -1.2924611568450928
    3. ' b' → logprob: -2.2924611568450928
    4. 'b' → logprob: -2.2924611568450928
    5. ' d' → logprob: -5.167460918426514
    6. 'd' → logprob: -5.417460918426514
    7. ' ' → logprob: -8.792461395263672
    8. ' get' → logprob: -11.354961395263672
    9. 'get' → logprob: -11.792461395263672
    10. '	c' → logprob: -11.917461395263672

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017827287956606597
    2. ' ,' → logprob: -9.375178337097168
    3. ',d' → logprob: -10.000178337097168
    4. 'd' → logprob: -10.125178337097168
    5. '):' → logprob: -13.250178337097168
    6. ',
' → logprob: -13.750178337097168
    7. '):
' → logprob: -13.750178337097168
    8. '_,' → logprob: -14.125178337097168
    9. ')' → logprob: -14.250178337097168
    10. 'a' → logprob: -14.750178337097168

Token 162: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.47419705986976624
    2. 'd' → logprob: -0.9741970300674438
    3. ' ' → logprob: -9.974197387695312
    4. ',' → logprob: -11.224197387695312
    5. ',d' → logprob: -11.599197387695312
    6. ')' → logprob: -11.724197387695312
    7. ' c' → logprob: -11.849197387695312
    8. 'b' → logprob: -12.099197387695312
    9. ' b' → logprob: -12.224197387695312
    10. 'c' → logprob: -12.349197387695312

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006859585642814636
    2. '):
' → logprob: -5.00685977935791
    3. ')' → logprob: -8.88185977935791
    4. ' ):' → logprob: -13.13185977935791
    5. ',' → logprob: -13.63185977935791
    6. '):
' → logprob: -13.88185977935791
    7. '):

' → logprob: -14.38185977935791
    8. '   ' → logprob: -15.13185977935791
    9. ':' → logprob: -15.63185977935791
    10. ')
' → logprob: -17.006858825683594

Token 164: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3241956830024719
    2. '   ' → logprob: -1.3241956233978271
    3. ' return' → logprob: -4.574195861816406
    4. 'def' → logprob: -7.699195861816406
    5. '=' → logprob: -10.324195861816406
    6. ')' → logprob: -11.074195861816406
    7. '{return' → logprob: -11.449195861816406
    8. '	return' → logprob: -11.574195861816406
    9. ':return' → logprob: -11.949195861816406
    10. 'eturn' → logprob: -12.074195861816406

Token 165: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003032851731404662
    2. ' return' → logprob: -6.128032684326172
    3. '   ' → logprob: -7.503032684326172
    4. '=' → logprob: -8.253032684326172
    5. 'def' → logprob: -10.378032684326172
    6. '==' → logprob: -14.253032684326172
    7. '	return' → logprob: -14.378032684326172
    8. ')' → logprob: -14.503032684326172
    9. 'eturn' → logprob: -14.628032684326172
    10. 'calc' → logprob: -14.753032684326172

Token 166: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.09710720181465149
    2. ' calc' → logprob: -2.847107172012329
    3. 'check' → logprob: -4.472107410430908
    4. 'abs' → logprob: -4.847107410430908
    5. '(calc' → logprob: -4.972107410430908
    6. 'a' → logprob: -5.472107410430908
    7. ' check' → logprob: -7.097107410430908
    8. '(c' → logprob: -7.472107410430908
    9. 'c' → logprob: -7.597107410430908
    10. ' abs' → logprob: -7.722107410430908

Token 167: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -9.758300438988954e-05
    2. 'abs' → logprob: -9.250097274780273
    3. '_ab' → logprob: -14.000097274780273
    4. ' abs' → logprob: -15.000097274780273
    5. '(abs' → logprob: -16.000097274780273
    6. '_' → logprob: -16.375097274780273
    7. '_a' → logprob: -16.500097274780273
    8. '_absolute' → logprob: -18.000097274780273
    9. 'Abs' → logprob: -18.125097274780273
    10. '_diff' → logprob: -18.500097274780273

Token 168: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.3676733690081164e-05
    2. '(' → logprob: -11.12502384185791
    3. '(c' → logprob: -12.25002384185791
    4. '(abs' → logprob: -13.00002384185791
    5. 'a' → logprob: -13.50002384185791
    6. 'abs' → logprob: -15.37502384185791
    7. '(x' → logprob: -15.75002384185791
    8. ' (' → logprob: -17.750022888183594
    9. '<|end|>' → logprob: -17.750022888183594
    10. '(
' → logprob: -19.250022888183594

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007852102862671018
    2. ',c' → logprob: -7.2507853507995605
    3. ' ,' → logprob: -9.750784873962402
    4. 'c' → logprob: -11.250784873962402
    5. ',
' → logprob: -12.875784873962402
    6. '(' → logprob: -15.250784873962402
    7. ' c' → logprob: -15.375784873962402
    8. 'a' → logprob: -15.500784873962402
    9. ',

' → logprob: -15.500784873962402
    10. ')' → logprob: -16.12578582763672

Token 170: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013363128527998924
    2. ' c' → logprob: -6.626336097717285
    3. 'd' → logprob: -11.751336097717285
    4. ')c' → logprob: -14.376336097717285
    5. ')' → logprob: -14.751336097717285
    6. '<|end|>' → logprob: -14.876336097717285
    7. 'b' → logprob: -15.376336097717285
    8. ' ' → logprob: -15.626336097717285
    9. '	c' → logprob: -15.751336097717285
    10. ',' → logprob: -16.0013370513916

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ',' → logprob: -10.125048637390137
    3. ')<=' → logprob: -12.000048637390137
    4. ' )' → logprob: -13.250048637390137
    5. '<=' → logprob: -15.875048637390137
    6. 'd' → logprob: -16.87504768371582
    7. '),' → logprob: -17.00004768371582
    8. '')' → logprob: -17.12504768371582
    9. ')
' → logprob: -17.37504768371582
    10. ' <=' → logprob: -17.87504768371582

Token 172: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11318867653608322
    2. '<=' → logprob: -2.2381887435913086
    3. '>' → logprob: -8.988188743591309
    4. ' >' → logprob: -9.738188743591309
    5. ')' → logprob: -9.738188743591309
    6. ' ' → logprob: -10.488188743591309
    7. ')<=' → logprob: -11.238188743591309
    8. '<' → logprob: -11.363188743591309
    9. ' >=' → logprob: -11.488188743591309
    10. '()' → logprob: -11.613188743591309

Token 173: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14269860088825226
    2. ' d' → logprob: -2.0176985263824463
    3. ' ' → logprob: -11.392698287963867
    4. '   ' → logprob: -12.267698287963867
    5. '	d' → logprob: -12.642698287963867
    6. ' ' → logprob: -13.017698287963867
    7. '  ' → logprob: -14.392698287963867
    8. '    ' → logprob: -14.892698287963867
    9. '
' → logprob: -15.642698287963867
    10. '```' → logprob: -16.142698287963867

Token 174: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04273686185479164
    2. '<|end|>' → logprob: -3.292736768722534
    3. ')' → logprob: -6.292737007141113
    4. '\' → logprob: -6.542737007141113
    5. '\n' → logprob: -7.667737007141113
    6. '(' → logprob: -8.042737007141113
    7. '
' → logprob: -8.792737007141113
    8. '```' → logprob: -9.417737007141113
    9. '()' → logprob: -9.542737007141113
    10. '<|end|>' → logprob: -9.542737007141113

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004190113395452499
    2. '<|end|>' → logprob: -5.879189968109131
    3. ')' → logprob: -7.254189968109131
    4. 'and' → logprob: -8.754190444946289
    5. ':' → logprob: -9.004190444946289
    6. 'a' → logprob: -9.754190444946289
    7. '
' → logprob: -10.004190444946289
    8. '.' → logprob: -10.254190444946289
    9. '(' → logprob: -10.254190444946289
    10. '\' → logprob: -10.379190444946289

Token 176: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6507596969604492
    2. 'main' → logprob: -1.2757596969604492
    3. ' main' → logprob: -2.400759696960449
    4. 'check' → logprob: -2.650759696960449
    5. ' check' → logprob: -3.525759696960449
    6. ' def' → logprob: -5.150759696960449
    7. 'solve' → logprob: -7.275759696960449
    8. 'process' → logprob: -7.650759696960449
    9. ' ' → logprob: -8.27575969696045
    10. 'get' → logprob: -8.77575969696045

Token 177: '_yes' (ID: 151898)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.5615244507789612
    2. '_possible' → logprob: -1.6865243911743164
    3. '_sub' → logprob: -2.0615243911743164
    4. '_safe' → logprob: -3.4365243911743164
    5. '_connected' → logprob: -4.186524391174316
    6. 'def' → logprob: -4.686524391174316
    7. '_s' → logprob: -4.936524391174316
    8. '_good' → logprob: -5.061524391174316
    9. '_re' → logprob: -5.186524391174316
    10. '_allowed' → logprob: -5.311524391174316

Token 178: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31384360790252686
    2. '():' → logprob: -1.5638436079025269
    3. '(a' → logprob: -3.0638437271118164
    4. '()' → logprob: -5.313843727111816
    5. 'def' → logprob: -5.813843727111816
    6. '(s' → logprob: -6.313843727111816
    7. ':' → logprob: -7.313843727111816
    8. '(x' → logprob: -7.313843727111816
    9. '(def' → logprob: -7.563843727111816
    10. '(":' → logprob: -8.313843727111816

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022153230383992195
    2. ',b' → logprob: -6.252215385437012
    3. ' ,' → logprob: -8.502215385437012
    4. ',c' → logprob: -10.127215385437012
    5. ',a' → logprob: -10.752215385437012
    6. '):' → logprob: -11.627215385437012
    7. ',d' → logprob: -12.502215385437012
    8. ')' → logprob: -13.002215385437012
    9. '_,' → logprob: -13.127215385437012
    10. '   ' → logprob: -14.127215385437012

Token 180: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011247167363762856
    2. ' b' → logprob: -4.511247158050537
    3. 'c' → logprob: -8.636247634887695
    4. ' c' → logprob: -11.386247634887695
    5. '   ' → logprob: -12.136247634887695
    6. ' ' → logprob: -13.136247634887695
    7. ',b' → logprob: -13.886247634887695
    8. ',' → logprob: -14.386247634887695
    9. '  ' → logprob: -14.636247634887695
    10. '	b' → logprob: -14.761247634887695

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.066919301403686e-05
    2. ',b' → logprob: -10.000090599060059
    3. ' ,' → logprob: -10.250090599060059
    4. ',c' → logprob: -12.000090599060059
    5. ',
' → logprob: -14.000090599060059
    6. 'b' → logprob: -14.875090599060059
    7. ',d' → logprob: -14.875090599060059
    8. 'c' → logprob: -15.125090599060059
    9. ')' → logprob: -15.125090599060059
    10. 's' → logprob: -15.250090599060059

Token 182: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009761283174157143
    2. ' c' → logprob: -4.634761333465576
    3. 'd' → logprob: -12.509760856628418
    4. '	c' → logprob: -14.884760856628418
    5. ' ' → logprob: -15.134760856628418
    6. ')c' → logprob: -15.134760856628418
    7. ')' → logprob: -15.509760856628418
    8. ' d' → logprob: -15.759760856628418
    9. '   ' → logprob: -16.259761810302734
    10. ',c' → logprob: -16.509761810302734

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005710251862183213
    2. ',d' → logprob: -7.750571250915527
    3. ' ,' → logprob: -9.000571250915527
    4. 'd' → logprob: -11.125571250915527
    5. ')' → logprob: -14.375571250915527
    6. ',
' → logprob: -14.500571250915527
    7. '_,' → logprob: -15.250571250915527
    8. ' ' → logprob: -15.500571250915527
    9. '‌,' → logprob: -16.37557029724121
    10. ' d' → logprob: -16.37557029724121

Token 184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002186307217925787
    2. ' d' → logprob: -6.127186298370361
    3. '   ' → logprob: -14.37718677520752
    4. ' ' → logprob: -15.50218677520752
    5. ')' → logprob: -15.87718677520752
    6. ')d' → logprob: -16.377185821533203
    7. 'def' → logprob: -16.627185821533203
    8. '```' → logprob: -17.002185821533203
    9. '  ' → logprob: -17.252185821533203
    10. '<|end|>' → logprob: -17.502185821533203

Token 185: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021951000962872058
    2. ')' → logprob: -8.500219345092773
    3. '):
' → logprob: -11.125219345092773
    4. ' ):' → logprob: -14.125219345092773
    5. ':' → logprob: -14.750219345092773
    6. ',' → logprob: -16.750219345092773
    7. '   ' → logprob: -17.750219345092773
    8. '():' → logprob: -18.250219345092773
    9. '):
' → logprob: -18.250219345092773
    10. '):

' → logprob: -18.500219345092773

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005529593210667372
    2. ' return' → logprob: -5.255529403686523
    3. ' check' → logprob: -8.755529403686523
    4. 'return' → logprob: -10.005529403686523
    5. '(' → logprob: -11.005529403686523
    6. ' True' → logprob: -11.130529403686523
    7. ' (' → logprob: -11.380529403686523
    8. ' if' → logprob: -11.630529403686523
    9. '    
' → logprob: -11.755529403686523
    10. ' ' → logprob: -12.755529403686523

Token 187: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45583757758140564
    2. '   ' → logprob: -1.205837607383728
    3. ' return' → logprob: -3.0808374881744385
    4. 'check' → logprob: -3.9558374881744385
    5. ' check' → logprob: -7.080837726593018
    6. '(check' → logprob: -8.33083724975586
    7. 'if' → logprob: -8.45583724975586
    8. 'def' → logprob: -9.20583724975586
    9. ' if' → logprob: -9.70583724975586
    10. ' ' → logprob: -10.33083724975586

Token 188: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.055068012326955795
    2. ' check' → logprob: -3.055068016052246
    3. '(check' → logprob: -5.180068016052246
    4. '(' → logprob: -7.430068016052246
    5. ' (' → logprob: -8.805068016052246
    6. '   ' → logprob: -10.430068016052246
    7. '(
' → logprob: -11.180068016052246
    8. '	check' → logprob: -11.430068016052246
    9. ' ' → logprob: -12.055068016052246
    10. 'a' → logprob: -12.305068016052246

Token 189: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.04862097650766373
    2. '_condition' → logprob: -3.0486209392547607
    3. '_check' → logprob: -10.79862117767334
    4. '_' → logprob: -11.42362117767334
    5. '_conditions' → logprob: -13.79862117767334
    6. 'sub' → logprob: -14.79862117767334
    7. 'condition' → logprob: -14.79862117767334
    8. '_s' → logprob: -16.173620223999023
    9. '_cond' → logprob: -16.298620223999023
    10. '__' → logprob: -17.798620223999023

Token 190: 'conditions' (ID: 33737)
  Prédit: 'conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -8.828512363834307e-05
    2. 'condition' → logprob: -9.375088691711426
    3. '_conditions' → logprob: -12.750088691711426
    4. ' conditions' → logprob: -15.750088691711426
    5. '(a' → logprob: -15.875088691711426
    6. '_condition' → logprob: -16.37508773803711
    7. '(' → logprob: -18.00008773803711
    8. '```' → logprob: -18.12508773803711
    9. '_' → logprob: -18.37508773803711
    10. '1' → logprob: -18.87508773803711

Token 191: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003878934367094189
    2. '(' → logprob: -8.000388145446777
    3. ' (' → logprob: -9.875388145446777
    4. '(
' → logprob: -15.125388145446777
    5. '((' → logprob: -15.625388145446777
    6. '(A' → logprob: -16.50038719177246
    7. '(True' → logprob: -16.62538719177246
    8. '(x' → logprob: -16.75038719177246
    9. '```' → logprob: -17.12538719177246
    10. '(None' → logprob: -17.25038719177246

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005543439765460789
    2. ' ,' → logprob: -8.125554084777832
    3. ',b' → logprob: -8.375554084777832
    4. '(b' → logprob: -11.250554084777832
    5. ')' → logprob: -12.500554084777832
    6. '(' → logprob: -12.500554084777832
    7. 'b' → logprob: -12.625554084777832
    8. 'a' → logprob: -13.875554084777832
    9. ',
' → logprob: -14.000554084777832
    10. '),' → logprob: -14.625554084777832

Token 193: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009758921340107918
    2. ' b' → logprob: -4.634758949279785
    3. 'c' → logprob: -13.509758949279785
    4. '   ' → logprob: -14.259758949279785
    5. ' ' → logprob: -15.134758949279785
    6. ',b' → logprob: -15.759758949279785
    7. ',' → logprob: -16.13475799560547
    8. ' c' → logprob: -16.13475799560547
    9. ')b' → logprob: -16.38475799560547
    10. '	b' → logprob: -16.38475799560547

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001745775662129745
    2. ' ,' → logprob: -9.250174522399902
    3. ',c' → logprob: -9.625174522399902
    4. 'c' → logprob: -12.125174522399902
    5. ')' → logprob: -12.250174522399902
    6. ',b' → logprob: -14.000174522399902
    7. '),' → logprob: -15.000174522399902
    8. ',
' → logprob: -15.375174522399902
    9. ',d' → logprob: -16.00017547607422
    10. '',' → logprob: -16.62517547607422

Token 195: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009132515988312662
    2. ' c' → logprob: -7.000913143157959
    3. '   ' → logprob: -14.500913619995117
    4. 'd' → logprob: -14.750913619995117
    5. ' ' → logprob: -15.250913619995117
    6. '	c' → logprob: -15.625913619995117
    7. ')' → logprob: -16.250913619995117
    8. ')c' → logprob: -16.375913619995117
    9. '  ' → logprob: -16.625913619995117
    10. '```' → logprob: -17.250913619995117

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001069727586582303
    2. ',d' → logprob: -7.25106954574585
    3. ' ,' → logprob: -8.251070022583008
    4. ')' → logprob: -9.626070022583008
    5. 'd' → logprob: -10.626070022583008
    6. ',
' → logprob: -12.501070022583008
    7. '),' → logprob: -13.626070022583008
    8. ' d' → logprob: -14.501070022583008
    9. ',)' → logprob: -14.501070022583008
    10. ' ' → logprob: -14.876070022583008

Token 197: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031794982496649027
    2. ' d' → logprob: -5.753179550170898
    3. ')' → logprob: -14.128179550170898
    4. '   ' → logprob: -14.378179550170898
    5. ' ' → logprob: -15.378179550170898
    6. '
' → logprob: -16.6281795501709
    7. ')d' → logprob: -16.7531795501709
    8. '  ' → logprob: -17.0031795501709
    9. '```' → logprob: -18.2531795501709
    10. '    ' → logprob: -18.2531795501709

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010919966734945774
    2. ' or' → logprob: -7.001091957092285
    3. ' )' → logprob: -9.126091957092285
    4. 'or' → logprob: -10.376091957092285
    5. ' and' → logprob: -10.626091957092285
    6. '   ' → logprob: -11.376091957092285
    7. 'and' → logprob: -12.501091957092285
    8. ' ' → logprob: -15.126091957092285
    9. '    ' → logprob: -15.626091957092285
    10. ')
' → logprob: -16.0010929107666

Token 199: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001777757192030549
    2. 'or' → logprob: -6.501777648925781
    3. ' and' → logprob: -8.376777648925781
    4. '()' → logprob: -11.251777648925781
    5. '<|end|>' → logprob: -11.376777648925781
    6. 'and' → logprob: -11.876777648925781
    7. ' ' → logprob: -12.376777648925781
    8. ')' → logprob: -13.001777648925781
    9. '
' → logprob: -13.251777648925781
    10. '	or' → logprob: -13.501777648925781

Token 200: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.009772500954568386
    2. 'check' → logprob: -4.634772300720215
    3. '(check' → logprob: -11.134772300720215
    4. ' ' → logprob: -14.134772300720215
    5. '	check' → logprob: -15.134772300720215
    6. ' (' → logprob: -16.00977325439453
    7. '\
' → logprob: -16.00977325439453
    8. '(' → logprob: -16.00977325439453
    9. '"' → logprob: -16.63477325439453
    10. ' ' → logprob: -16.75977325439453

Token 201: '_condition' (ID: 64948)
  Prédit: '_condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_condition' → logprob: -4.370294846012257e-05
    2. '_sub' → logprob: -10.125043869018555
    3. '_' → logprob: -14.125043869018555
    4. ''_' → logprob: -14.250043869018555
    5. '```' → logprob: -14.500043869018555
    6. '"_' → logprob: -15.000043869018555
    7. '_constant' → logprob: -15.625043869018555
    8. '_conditions' → logprob: -15.750043869018555
    9. 'condition' → logprob: -15.875043869018555
    10. '_option' → logprob: -16.500043869018555

Token 202: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '(' → logprob: -18.125
    3. '３' → logprob: -18.125
    4. '_' → logprob: -18.25
    5. '۳' → logprob: -18.25
    6. '٣' → logprob: -18.375
    7. '```' → logprob: -19.5
    8. ' ' → logprob: -20.0
    9. '৩' → logprob: -20.125
    10. '_three' → logprob: -20.625

Token 203: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0076744151301681995
    2. '(' → logprob: -4.882674217224121
    3. ' (' → logprob: -9.632674217224121
    4. '(
' → logprob: -13.882674217224121
    5. '(A' → logprob: -14.882674217224121
    6. '```' → logprob: -15.132674217224121
    7. '(x' → logprob: -15.382674217224121
    8. '((' → logprob: -15.507674217224121
    9. '('' → logprob: -15.757674217224121
    10. ' ' → logprob: -15.882674217224121

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003455944824963808
    2. ',c' → logprob: -8.125345230102539
    3. 'c' → logprob: -10.250345230102539
    4. ' ,' → logprob: -11.375345230102539
    5. ',
' → logprob: -13.625345230102539
    6. ')' → logprob: -14.625345230102539
    7. ' ' → logprob: -15.125345230102539
    8. '   ' → logprob: -15.625345230102539
    9. '‌,' → logprob: -16.25034523010254
    10. ' c' → logprob: -16.50034523010254

Token 205: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003610163228586316
    2. ' c' → logprob: -5.628610134124756
    3. 'd' → logprob: -12.003610610961914
    4. ' ' → logprob: -13.003610610961914
    5. '	c' → logprob: -14.378610610961914
    6. 'b' → logprob: -14.878610610961914
    7. '   ' → logprob: -15.253610610961914
    8. ')c' → logprob: -15.253610610961914
    9. ' d' → logprob: -16.003610610961914
    10. '<|end|>' → logprob: -16.878610610961914

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013105978723615408
    2. ',d' → logprob: -6.7513108253479
    3. ' ,' → logprob: -9.126310348510742
    4. 'd' → logprob: -11.001310348510742
    5. ')' → logprob: -11.376310348510742
    6. '```' → logprob: -14.126310348510742
    7. '   ' → logprob: -14.376310348510742
    8. ')d' → logprob: -14.751310348510742
    9. '),' → logprob: -14.876310348510742
    10. ',
' → logprob: -15.001310348510742

Token 207: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.020543403923511505
    2. ' d' → logprob: -3.895543336868286
    3. ')' → logprob: -14.270543098449707
    4. ')d' → logprob: -14.895543098449707
    5. ' ' → logprob: -15.395543098449707
    6. '   ' → logprob: -15.770543098449707
    7. '```' → logprob: -16.520544052124023
    8. '	d' → logprob: -16.895544052124023
    9. ',' → logprob: -17.895544052124023
    10. '    ' → logprob: -17.895544052124023

Token 208: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.500001907348633
    4. '))' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.750001907348633
    6. ')`' → logprob: -17.750001907348633
    7. ')return' → logprob: -18.750001907348633
    8. ')

' → logprob: -19.000001907348633
    9. ')}' → logprob: -19.125001907348633
    10. '}' → logprob: -19.250001907348633

Token 209: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27450990676879883
    2. 'nums' → logprob: -1.5245099067687988
    3. 'a' → logprob: -4.899509906768799
    4. 's' → logprob: -5.399509906768799
    5. 'if' → logprob: -5.399509906768799
    6. 'for' → logprob: -5.649509906768799
    7. 'n' → logprob: -6.274509906768799
    8. 'num' → logprob: -8.77450942993164
    9. 'numbers' → logprob: -9.64950942993164
    10. 'input' → logprob: -10.14950942993164

Token 210: ' get' (ID: 717)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.9437429308891296
    2. ' main' → logprob: -1.3187429904937744
    3. 'def' → logprob: -1.4437429904937744
    4. 'get' → logprob: -2.9437429904937744
    5. '__' → logprob: -3.3187429904937744
    6. ' get' → logprob: -4.443742752075195
    7. ' __' → logprob: -5.943742752075195
    8. ' def' → logprob: -6.068742752075195
    9. ' ' → logprob: -7.818742752075195
    10. '_main' → logprob: -8.068742752075195

Token 211: '_output' (ID: 16732)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.08924783766269684
    2. '()' → logprob: -3.214247941970825
    3. '_' → logprob: -4.214247703552246
    4. '_nums' → logprob: -4.714247703552246
    5. '_a' → logprob: -5.214247703552246
    6. 'input' → logprob: -6.089247703552246
    7. '_numbers' → logprob: -6.214247703552246
    8. '(' → logprob: -6.214247703552246
    9. '_result' → logprob: -6.714247703552246
    10. '_output' → logprob: -6.839247703552246

Token 212: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6485313177108765
    2. '(' → logprob: -0.8985313177108765
    3. '():' → logprob: -3.023531436920166
    4. '(is' → logprob: -4.773531436920166
    5. '(s' → logprob: -5.023531436920166
    6. '((' → logprob: -6.273531436920166
    7. '(nums' → logprob: -6.898531436920166
    8. '(value' → logprob: -7.648531436920166
    9. '(*' → logprob: -7.648531436920166
    10. '()' → logprob: -7.898531436920166

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005020392127335072
    2. ',b' → logprob: -7.625502109527588
    3. ' ,' → logprob: -12.62550163269043
    4. '):' → logprob: -12.62550163269043
    5. '):
' → logprob: -13.00050163269043
    6. ',
' → logprob: -13.12550163269043
    7. 'b' → logprob: -13.62550163269043
    8. ')' → logprob: -14.12550163269043
    9. ',d' → logprob: -14.75050163269043
    10. ',a' → logprob: -16.00050163269043

Token 214: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009114635176956654
    2. ' b' → logprob: -7.000911235809326
    3. '   ' → logprob: -18.750911712646484
    4. ')b' → logprob: -19.875911712646484
    5. ',b' → logprob: -20.250911712646484
    6. ',' → logprob: -20.500911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '	b' → logprob: -20.750911712646484
    9. ')' → logprob: -21.000911712646484
    10. '```' → logprob: -21.750911712646484

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ',c' → logprob: -10.375072479248047
    3. ' ,' → logprob: -10.750072479248047
    4. 'c' → logprob: -10.875072479248047
    5. ',
' → logprob: -14.750072479248047
    6. '‌,' → logprob: -17.625072479248047
    7. ')' → logprob: -17.750072479248047
    8. '),' → logprob: -17.750072479248047
    9. ' c' → logprob: -18.000072479248047
    10. '_,' → logprob: -18.125072479248047

Token 216: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002476135268807411
    2. ' c' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.75247573852539
    4. '	c' → logprob: -15.75247573852539
    5. ' ' → logprob: -16.00247573852539
    6. ')c' → logprob: -17.12747573852539
    7. ',c' → logprob: -17.50247573852539
    8. ',' → logprob: -17.50247573852539
    9. '  ' → logprob: -18.00247573852539
    10. ')' → logprob: -18.75247573852539

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.214019307051785e-05
    2. ',d' → logprob: -10.625032424926758
    3. 'd' → logprob: -12.125032424926758
    4. ' ,' → logprob: -13.250032424926758
    5. ',
' → logprob: -14.875032424926758
    6. '):
' → logprob: -16.250032424926758
    7. 'def' → logprob: -17.000032424926758
    8. '```' → logprob: -17.625032424926758
    9. '):' → logprob: -18.000032424926758
    10. 's' → logprob: -18.625032424926758

Token 218: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001234428636962548
    2. ' d' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.250123977661133
    4. 'def' → logprob: -18.500123977661133
    5. ' ' → logprob: -19.750123977661133
    6. '```' → logprob: -20.000123977661133
    7. ')d' → logprob: -20.000123977661133
    8. ')' → logprob: -20.125123977661133
    9. '  ' → logprob: -21.625123977661133
    10. '_d' → logprob: -22.125123977661133

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024799390230327845
    2. '):
' → logprob: -6.0024800300598145
    3. ')' → logprob: -12.877479553222656
    4. '):
' → logprob: -14.252479553222656
    5. ' ):' → logprob: -14.627479553222656
    6. ':' → logprob: -15.002479553222656
    7. '   ' → logprob: -15.627479553222656
    8. '):

' → logprob: -16.877479553222656
    9. ',' → logprob: -17.002479553222656
    10. '():' → logprob: -17.002479553222656

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02830800600349903
    2. '"' → logprob: -3.6533079147338867
    3. ''' → logprob: -6.903307914733887
    4. 'return' → logprob: -7.653307914733887
    5. 'if' → logprob: -7.903307914733887
    6. ' if' → logprob: -9.403307914733887
    7. ' return' → logprob: -10.528307914733887
    8. ' "' → logprob: -10.528307914733887
    9. '"""' → logprob: -11.528307914733887
    10. ' '' → logprob: -13.153307914733887

Token 221: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42062535881996155
    2. 'if' → logprob: -1.4206253290176392
    3. '"' → logprob: -2.4206254482269287
    4. '   ' → logprob: -4.54562520980835
    5. ''' → logprob: -7.04562520980835
    6. ' return' → logprob: -7.42062520980835
    7. 'print' → logprob: -7.54562520980835
    8. ' if' → logprob: -8.295625686645508
    9. ' "' → logprob: -10.420625686645508
    10. '"""' → logprob: -10.670625686645508

Token 222: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03467079624533653
    2. ' "' → logprob: -3.409670829772949
    3. ''' → logprob: -7.034670829772949
    4. '"is' → logprob: -9.78467082977295
    5. '("' → logprob: -10.65967082977295
    6. '   ' → logprob: -11.03467082977295
    7. '"No' → logprob: -11.28467082977295
    8. ' '' → logprob: -11.65967082977295
    9. '"I' → logprob: -11.90967082977295
    10. '"A' → logprob: -12.40967082977295

Token 223: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.9444273114204407
    2. 'Yes' → logprob: -1.069427251815796
    3. '"' → logprob: -1.319427251815796
    4. ''' → logprob: -7.569427490234375
    5. 'Y' → logprob: -10.319427490234375
    6. 'yes' → logprob: -10.319427490234375
    7. '{"' → logprob: -12.444427490234375
    8. '“Yes' → logprob: -12.944427490234375
    9. '"""' → logprob: -13.194427490234375
    10. ' Yes' → logprob: -13.444427490234375

Token 224: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2664456789934775e-06
    2. 'if' → logprob: -13.875000953674316
    3. '\n' → logprob: -16.500001907348633
    4. ' if' → logprob: -16.875001907348633
    5. '```' → logprob: -17.000001907348633
    6. '"""' → logprob: -17.375001907348633
    7. ' "' → logprob: -17.750001907348633
    8. ''' → logprob: -18.000001907348633
    9. '")' → logprob: -19.750001907348633
    10. '"
' → logprob: -19.750001907348633

Token 225: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38749217987060547
    2. 'if' → logprob: -1.1374921798706055
    3. '<|end|>' → logprob: -7.7624921798706055
    4. '   ' → logprob: -9.262492179870605
    5. 'def' → logprob: -10.137492179870605
    6. '
' → logprob: -10.387492179870605
    7. '```' → logprob: -11.387492179870605
    8. '()' → logprob: -12.137492179870605
    9. '	if' → logprob: -12.887492179870605
    10. '<|end|>' → logprob: -12.887492179870605

Token 226: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01815006136894226
    2. 'is' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.768150329589844
    4. '(is' → logprob: -17.768150329589844
    5. ' ' → logprob: -17.893150329589844
    6. '	is' → logprob: -19.143150329589844
    7. '   ' → logprob: -19.393150329589844
    8. '_is' → logprob: -21.393150329589844
    9. ')is' → logprob: -21.643150329589844
    10. '"is' → logprob: -21.893150329589844

Token 227: '_yes' (ID: 151898)
  Prédit: '_yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_yes' → logprob: -0.0001817297888919711
    2. '_' → logprob: -9.000182151794434
    3. '_is' → logprob: -10.000182151794434
    4. '(a' → logprob: -12.125182151794434
    5. ' _' → logprob: -12.375182151794434
    6. '_you' → logprob: -14.000182151794434
    7. '(_' → logprob: -14.750182151794434
    8. '_y' → logprob: -15.000182151794434
    9. 'Yes' → logprob: -15.250182151794434
    10. '(' → logprob: -15.250182151794434

Token 228: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.910643762443215e-05
    2. ' (' → logprob: -9.625079154968262
    3. '(' → logprob: -11.250079154968262
    4. '(
' → logprob: -17.125078201293945
    5. '   ' → logprob: -18.750078201293945
    6. '```' → logprob: -18.750078201293945
    7. ' ' → logprob: -19.000078201293945
    8. 'a' → logprob: -19.250078201293945
    9. '

' → logprob: -19.375078201293945
    10. '(A' → logprob: -19.750078201293945

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013365513877943158
    2. ',b' → logprob: -6.751336574554443
    3. ' ,' → logprob: -8.751336097717285
    4. ',
' → logprob: -12.126336097717285
    5. ')' → logprob: -14.126336097717285
    6. 'b' → logprob: -14.876336097717285
    7. ',

' → logprob: -15.126336097717285
    8. '   ' → logprob: -15.376336097717285
    9. ',a' → logprob: -15.376336097717285
    10. ' ' → logprob: -15.501336097717285

Token 230: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011048289015889168
    2. ' b' → logprob: -4.511048316955566
    3. 'c' → logprob: -15.136048316955566
    4. ' ' → logprob: -15.636048316955566
    5. '   ' → logprob: -16.51104736328125
    6. ')b' → logprob: -17.63604736328125
    7. '	b' → logprob: -17.76104736328125
    8. ',b' → logprob: -18.26104736328125
    9. '  ' → logprob: -18.76104736328125
    10. ',' → logprob: -19.26104736328125

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007592422189190984
    2. ',c' → logprob: -7.500759124755859
    3. ' ,' → logprob: -8.62575912475586
    4. 'c' → logprob: -11.00075912475586
    5. ',
' → logprob: -12.50075912475586
    6. ')' → logprob: -13.00075912475586
    7. ',b' → logprob: -13.25075912475586
    8. '),' → logprob: -14.62575912475586
    9. '‌,' → logprob: -15.37575912475586
    10. 'a' → logprob: -15.50075912475586

Token 232: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. '	c' → logprob: -17.500911712646484
    4. ')c' → logprob: -17.500911712646484
    5. ' ' → logprob: -19.375911712646484
    6. '   ' → logprob: -20.250911712646484
    7. 'd' → logprob: -20.500911712646484
    8. ',c' → logprob: -21.000911712646484
    9. '<|end|>' → logprob: -21.125911712646484
    10. '(c' → logprob: -21.500911712646484

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020781708881258965
    2. ',d' → logprob: -6.502078056335449
    3. 'd' → logprob: -7.752078056335449
    4. ' ,' → logprob: -8.87707805633545
    5. ')' → logprob: -13.12707805633545
    6. ',
' → logprob: -13.50207805633545
    7. 'def' → logprob: -14.50207805633545
    8. '```' → logprob: -14.87707805633545
    9. '   ' → logprob: -15.12707805633545
    10. ' d' → logprob: -15.12707805633545

Token 234: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020699729793705046
    2. ' d' → logprob: -8.50020694732666
    3. ')' → logprob: -12.87520694732666
    4. ')d' → logprob: -14.37520694732666
    5. '   ' → logprob: -16.250207901000977
    6. ' ' → logprob: -16.375207901000977
    7. '```' → logprob: -16.500207901000977
    8. '  ' → logprob: -17.625207901000977
    9. '
' → logprob: -17.875207901000977
    10. 'def' → logprob: -17.875207901000977

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. 'else' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.875003814697266
    4. ' else' → logprob: -14.125003814697266
    5. '   ' → logprob: -14.250003814697266
    6. ')
' → logprob: -15.625003814697266
    7. '()' → logprob: -16.625003814697266
    8. '")' → logprob: -16.625003814697266
    9. '))' → logprob: -17.000003814697266
    10. '())' → logprob: -17.375003814697266

Token 236: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141392946243286
    2. 'else' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.701414108276367
    4. '```' → logprob: -15.826414108276367
    5. '	else' → logprob: -16.076414108276367
    6. '()' → logprob: -17.201414108276367
    7. ' ' → logprob: -17.201414108276367
    8. ' ' → logprob: -17.576414108276367
    9. '_else' → logprob: -17.576414108276367
    10. '[]' → logprob: -18.076414108276367

Token 237: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0001882823125924915
    2. ' "' → logprob: -8.625187873840332
    3. ''' → logprob: -11.875187873840332
    4. ' ' → logprob: -14.750187873840332
    5. ' ' → logprob: -14.875187873840332
    6. '""' → logprob: -15.375187873840332
    7. '"""' → logprob: -16.12518882751465
    8. '
' → logprob: -16.25018882751465
    9. '"No' → logprob: -16.25018882751465
    10. '`' → logprob: -16.25018882751465

Token 238: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.03809278458356857
    2. '"No' → logprob: -3.288092851638794
    3. ' No' → logprob: -10.288092613220215
    4. '"' → logprob: -11.038092613220215
    5. 'NO' → logprob: -14.413092613220215
    6. ''' → logprob: -15.038092613220215
    7. '_No' → logprob: -16.03809356689453
    8. '“No' → logprob: -16.41309356689453
    9. ' ' → logprob: -16.66309356689453
    10. '""' → logprob: -17.53809356689453

Token 239: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003528622619342059
    2. '()"' → logprob: -8.62535285949707
    3. '")' → logprob: -8.75035285949707
    4. ')"' → logprob: -11.62535285949707
    5. '```' → logprob: -12.75035285949707
    6. '"`' → logprob: -14.00035285949707
    7. '"
' → logprob: -14.50035285949707
    8. ''"' → logprob: -14.50035285949707
    9. '"""' → logprob: -14.75035285949707
    10. 'def' → logprob: -14.87535285949707

Token 240: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0838015154004097
    2. 'nums' → logprob: -2.583801507949829
    3. 's' → logprob: -5.333801746368408
    4. 'if' → logprob: -10.33380126953125
    5. 'for' → logprob: -10.95880126953125
    6. 'a' → logprob: -12.08380126953125
    7. ' nums' → logprob: -12.20880126953125
    8. 'input' → logprob: -12.45880126953125
    9. 'num' → logprob: -12.70880126953125
    10. 'n' → logprob: -12.95880126953125

Token 241: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0025032442063093185
    2. ' main' → logprob: -6.002503395080566
    3. 'def' → logprob: -10.502503395080566
    4. 'solve' → logprob: -16.25250244140625
    5. '_main' → logprob: -17.62750244140625
    6. 'run' → logprob: -18.00250244140625
    7. ' def' → logprob: -18.12750244140625
    8. 'Main' → logprob: -19.62750244140625
    9. 'process' → logprob: -19.75250244140625
    10. 'if' → logprob: -19.87750244140625

Token 242: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1517960956552997e-05
    2. '():
' → logprob: -11.750011444091797
    3. ' ():' → logprob: -12.625011444091797
    4. '()' → logprob: -15.875011444091797
    5. '(' → logprob: -16.375011444091797
    6. '(":' → logprob: -17.625011444091797
    7. '():
' → logprob: -17.875011444091797
    8. ':' → logprob: -18.875011444091797
    9. '(:' → logprob: -19.125011444091797
    10. '_' → logprob: -19.875011444091797

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003501834347844124
    2. ' nums' → logprob: -6.253501892089844
    3. 'nums' → logprob: -6.878501892089844
    4. 's' → logprob: -8.003501892089844
    5. ' s' → logprob: -8.503501892089844
    6. '(nums' → logprob: -13.378501892089844
    7. ' input' → logprob: -13.503501892089844
    8. 'input' → logprob: -14.378501892089844
    9. '   ' → logprob: -15.378501892089844
    10. ' numbers' → logprob: -15.503501892089844

Token 244: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3194241225719452
    2. 'nums' → logprob: -1.3194241523742676
    3. ' nums' → logprob: -5.944424152374268
    4. ' s' → logprob: -6.069424152374268
    5. '   ' → logprob: -6.944424152374268
    6. 'inputs' → logprob: -9.44442367553711
    7. 'numbers' → logprob: -9.56942367553711
    8. 'input' → logprob: -10.31942367553711
    9. 'raw' → logprob: -11.19442367553711
    10. 'data' → logprob: -11.56942367553711

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021496564149857
    2. '=' → logprob: -2.350214958190918
    3. '=input' → logprob: -11.850214958190918
    4. '   ' → logprob: -14.850214958190918
    5. '_input' → logprob: -14.975214958190918
    6. '_' → logprob: -15.350214958190918
    7. 's' → logprob: -15.850214958190918
    8. ' ' → logprob: -16.475215911865234
    9. 'input' → logprob: -16.475215911865234
    10. ' ' → logprob: -16.475215911865234

Token 246: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004421455319970846
    2. ' get' → logprob: -5.504421234130859
    3. 'input' → logprob: -8.00442123413086
    4. ' input' → logprob: -11.62942123413086
    5. '(get' → logprob: -16.25442123413086
    6. '	get' → logprob: -17.50442123413086
    7. '   ' → logprob: -19.12942123413086
    8. ' ' → logprob: -19.25442123413086
    9. '=get' → logprob: -19.62942123413086
    10. '.get' → logprob: -20.25442123413086

Token 247: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.9981420336989686e-05
    2. '_' → logprob: -11.125020027160645
    3. '()' → logprob: -12.625020027160645
    4. 'input' → logprob: -13.625020027160645
    5. '(input' → logprob: -15.500020027160645
    6. '_output' → logprob: -16.625019073486328
    7. '_Input' → logprob: -16.625019073486328
    8. '_line' → logprob: -16.875019073486328
    9. ' input' → logprob: -17.250019073486328
    10. '(' → logprob: -17.375019073486328

Token 248: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.8889261304575484e-06
    2. '()
' → logprob: -12.625003814697266
    3. '()

' → logprob: -15.875003814697266
    4. ' ()' → logprob: -16.625003814697266
    5. '().' → logprob: -16.625003814697266
    6. '())' → logprob: -16.625003814697266
    7. '()>' → logprob: -17.750003814697266
    8. '()`' → logprob: -17.750003814697266
    9. '()<' → logprob: -18.000003814697266
    10. '()"' → logprob: -18.000003814697266

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0611124150454998
    2. 'nums' → logprob: -2.936112403869629
    3. ' nums' → logprob: -5.561112403869629
    4. '
' → logprob: -7.186112403869629
    5. '(nums' → logprob: -7.186112403869629
    6. '    
' → logprob: -7.436112403869629
    7. '_nums' → logprob: -10.061112403869629
    8. '```' → logprob: -10.311112403869629
    9. 'num' → logprob: -10.436112403869629
    10. '    ' → logprob: -10.811112403869629

Token 250: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.00043805985478684306
    2. ' nums' → logprob: -7.750438213348389
    3. '   ' → logprob: -12.75043773651123
    4. 'numbers' → logprob: -12.75043773651123
    5. 'num' → logprob: -14.37543773651123
    6. '(nums' → logprob: -15.25043773651123
    7. '```' → logprob: -15.62543773651123
    8. '    
' → logprob: -15.75043773651123
    9. 'n' → logprob: -16.250438690185547
    10. '_nums' → logprob: -16.625438690185547

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804333135485649
    2. '=' → logprob: -3.288043260574341
    3. ')' → logprob: -14.163043022155762
    4. ',' → logprob: -14.913043022155762
    5. ' ' → logprob: -15.788043022155762
    6. '   ' → logprob: -16.038043975830078
    7. ' =)' → logprob: -16.038043975830078
    8. '[:]' → logprob: -16.663043975830078
    9. '=[]' → logprob: -16.913043975830078
    10. '    ' → logprob: -17.038043975830078

Token 252: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.0722858102526516e-05
    2. ' list' → logprob: -10.250041007995605
    3. 'tuple' → logprob: -12.250041007995605
    4. 'parse' → logprob: -15.000041007995605
    5. '   ' → logprob: -17.00004005432129
    6. '(list' → logprob: -17.75004005432129
    7. 's' → logprob: -17.75004005432129
    8. '=list' → logprob: -19.00004005432129
    9. ' tuple' → logprob: -19.12504005432129
    10. '	list' → logprob: -19.37504005432129

Token 253: '(parse' (ID: 53040)
  Prédit: '(parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parse' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. 'parse' → logprob: -13.00001049041748
    4. '=parse' → logprob: -17.750009536743164
    5. '(Parse' → logprob: -18.125009536743164
    6. '(map' → logprob: -18.875009536743164
    7. '(parsed' → logprob: -19.250009536743164
    8. '(
' → logprob: -19.375009536743164
    9. ' parse' → logprob: -19.875009536743164
    10. '	parse' → logprob: -20.250009536743164

Token 254: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.001356190419755876
    2. '(s' → logprob: -6.62635612487793
    3. '_(' → logprob: -11.25135612487793
    4. 'input' → logprob: -12.12635612487793
    5. '_' → logprob: -12.25135612487793
    6. '(input' → logprob: -13.50135612487793
    7. ')' → logprob: -13.50135612487793
    8. '(' → logprob: -13.75135612487793
    9. '_inputs' → logprob: -13.75135612487793
    10. '_INPUT' → logprob: -15.37635612487793

Token 255: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.7133641196996905e-05
    2. ' (' → logprob: -10.87502670288086
    3. '(' → logprob: -11.75002670288086
    4. ')' → logprob: -16.12502670288086
    5. 's' → logprob: -16.25002670288086
    6. ')(' → logprob: -17.62502670288086
    7. ')s' → logprob: -18.12502670288086
    8. '```' → logprob: -18.75002670288086
    9. ' ' → logprob: -19.00002670288086
    10. '   ' → logprob: -19.00002670288086

Token 256: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04862279072403908
    2. '))' → logprob: -3.0486228466033936
    3. '(nums' → logprob: -11.423623085021973
    4. '(s' → logprob: -11.673623085021973
    5. '())' → logprob: -12.048623085021973
    6. '(' → logprob: -12.298623085021973
    7. ')))' → logprob: -13.298623085021973
    8. ' )' → logprob: -14.048623085021973
    9. ')
' → logprob: -14.298623085021973
    10. ')}' → logprob: -14.548623085021973

Token 257: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11596692353487015
    2. 'a' → logprob: -2.240967035293579
    3. ' a' → logprob: -5.990966796875
    4. '
' → logprob: -8.365966796875
    5. '    
' → logprob: -8.365966796875
    6. '	a' → logprob: -9.365966796875
    7. '[a' → logprob: -10.365966796875
    8. '(a' → logprob: -11.365966796875
    9. ' ' → logprob: -11.865966796875
    10. '  ' → logprob: -11.865966796875

Token 258: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.015660198405385017
    2. ' a' → logprob: -4.390660285949707
    3. '   ' → logprob: -5.765660285949707
    4. '	a' → logprob: -11.890660285949707
    5. '```' → logprob: -12.765660285949707
    6. ' ' → logprob: -14.015660285949707
    7. '    
' → logprob: -14.640660285949707
    8. '
' → logprob: -14.765660285949707
    9. '[a' → logprob: -15.515660285949707
    10. '  ' → logprob: -15.640660285949707

Token 259: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09778255969285965
    2. ' =' → logprob: -2.472782611846924
    3. '=' → logprob: -5.097782611846924
    4. ' ,' → logprob: -5.972782611846924
    5. ',num' → logprob: -9.347782135009766
    6. ',b' → logprob: -11.347782135009766
    7. ',n' → logprob: -11.472782135009766
    8. '(nums' → logprob: -11.722782135009766
    9. ',a' → logprob: -11.847782135009766
    10. ' nums' → logprob: -12.722782135009766

Token 260: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.011085547506809235
    2. ' get' → logprob: -4.511085510253906
    3. 'nums' → logprob: -10.261085510253906
    4. ' nums' → logprob: -13.011085510253906
    5. '(get' → logprob: -15.386085510253906
    6. '   ' → logprob: -15.886085510253906
    7. '[get' → logprob: -16.886085510253906
    8. '	get' → logprob: -17.136085510253906
    9. '=get' → logprob: -17.511085510253906
    10. '    ' → logprob: -17.511085510253906

Token 261: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00014323067443910986
    2. 'a' → logprob: -8.875143051147461
    3. '_nums' → logprob: -13.625143051147461
    4. '_b' → logprob: -14.375143051147461
    5. 'nums' → logprob: -14.500143051147461
    6. '_' → logprob: -14.625143051147461
    7. '(nums' → logprob: -16.37514305114746
    8. '_s' → logprob: -16.62514305114746
    9. '(a' → logprob: -16.75014305114746
    10. ' a' → logprob: -17.00014305114746

Token 262: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. 'nums' → logprob: -15.375000953674316
    4. '(num' → logprob: -19.125
    5. ' nums' → logprob: -19.375
    6. '(numbers' → logprob: -19.5
    7. ' (' → logprob: -19.625
    8. '(
' → logprob: -21.625
    9. '_nums' → logprob: -22.625
    10. 'Nums' → logprob: -23.5

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002997120900545269
    2. ')
' → logprob: -8.125299453735352
    3. ' )' → logprob: -13.125299453735352
    4. '   ' → logprob: -14.000299453735352
    5. ')
' → logprob: -15.125299453735352
    6. ')a' → logprob: -15.500299453735352
    7. ')

' → logprob: -15.625299453735352
    8. '),' → logprob: -16.50029945373535
    9. ' ' → logprob: -16.75029945373535
    10. ')`' → logprob: -17.25029945373535

Token 264: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6310524940490723
    2. '   ' → logprob: -1.1310524940490723
    3. ' b' → logprob: -2.3810524940490723
    4. ' ' → logprob: -3.1310524940490723
    5. '	b' → logprob: -5.756052494049072
    6. ' 
' → logprob: -6.381052494049072
    7. '    ' → logprob: -6.381052494049072
    8. '<|end|>' → logprob: -7.131052494049072
    9. '    
' → logprob: -7.381052494049072
    10. '  ' → logprob: -8.006052017211914

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0001589618914294988
    2. ' b' → logprob: -8.75015926361084
    3. '	b' → logprob: -15.00015926361084
    4. '   ' → logprob: -17.125158309936523
    5. '```' → logprob: -22.125158309936523
    6. ' ' → logprob: -22.250158309936523
    7. ',b' → logprob: -23.625158309936523
    8. '    
' → logprob: -23.625158309936523
    9. ')b' → logprob: -24.250158309936523
    10. '    ' → logprob: -24.375158309936523

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858850687742233
    2. '=' → logprob: -3.048588514328003
    3. '(nums' → logprob: -14.298588752746582
    4. ' =
' → logprob: -15.923588752746582
    5. ' =)' → logprob: -16.423587799072266
    6. ' ' → logprob: -16.798587799072266
    7. ')' → logprob: -16.798587799072266
    8. ',' → logprob: -16.923587799072266
    9. '<|end|>' → logprob: -17.173587799072266
    10. ' nums' → logprob: -17.173587799072266

Token 267: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0036112358793616295
    2. 'get' → logprob: -5.753611087799072
    3. ' nums' → logprob: -7.753611087799072
    4. 'nums' → logprob: -13.12861156463623
    5. '(get' → logprob: -14.62861156463623
    6. '_get' → logprob: -14.87861156463623
    7. '[get' → logprob: -15.12861156463623
    8. ' b' → logprob: -15.25361156463623
    9. ' gets' → logprob: -15.37861156463623
    10. '(nums' → logprob: -15.62861156463623

Token 268: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.049755782238208e-05
    2. '(nums' → logprob: -10.12505054473877
    3. '[' → logprob: -12.50005054473877
    4. '_a' → logprob: -13.00005054473877
    5. 'b' → logprob: -13.25005054473877
    6. 'nums' → logprob: -13.50005054473877
    7. '_' → logprob: -14.00005054473877
    8. '_nums' → logprob: -16.250049591064453
    9. '(' → logprob: -16.750049591064453
    10. '_c' → logprob: -16.750049591064453

Token 269: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.375014305114746
    3. 'nums' → logprob: -13.125014305114746
    4. ' nums' → logprob: -14.500014305114746
    5. '(numbers' → logprob: -15.875014305114746
    6. '(num' → logprob: -16.87501335144043
    7. ' (' → logprob: -17.00001335144043
    8. '(
' → logprob: -18.00001335144043
    9. '(tokens' → logprob: -19.62501335144043
    10. '(n' → logprob: -20.00001335144043

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2627128064632416
    2. '(nums' → logprob: -1.512712836265564
    3. ')
' → logprob: -4.6377129554748535
    4. '   ' → logprob: -7.1377129554748535
    5. 'nums' → logprob: -8.637712478637695
    6. ' nums' → logprob: -11.137712478637695
    7. '(' → logprob: -11.387712478637695
    8. '[' → logprob: -11.762712478637695
    9. '(
' → logprob: -11.762712478637695
    10. '(n' → logprob: -12.137712478637695

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20492510497570038
    2. ' c' → logprob: -1.9549250602722168
    3. 'c' → logprob: -3.204925060272217
    4. ' ' → logprob: -6.454925060272217
    5. '	c' → logprob: -7.329925060272217
    6. '    
' → logprob: -8.329925537109375
    7. '<|end|>' → logprob: -8.579925537109375
    8. '  ' → logprob: -9.204925537109375
    9. '```' → logprob: -9.454925537109375
    10. '  
' → logprob: -9.704925537109375

Token 272: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.31326186656951904
    2. ' c' → logprob: -1.313261866569519
    3. '	c' → logprob: -16.313261032104492
    4. '   ' → logprob: -16.813261032104492
    5. '(c' → logprob: -17.313261032104492
    6. ' ' → logprob: -18.063261032104492
    7. '_c' → logprob: -18.938261032104492
    8. ')c' → logprob: -19.063261032104492
    9. '```' → logprob: -19.313261032104492
    10. 'nums' → logprob: -19.563261032104492

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4987798035144806
    2. '(nums' → logprob: -1.2487797737121582
    3. '=' → logprob: -2.248779773712158
    4. ' nums' → logprob: -8.373780250549316
    5. 'nums' → logprob: -10.373780250549316
    6. ' (' → logprob: -10.373780250549316
    7. '   ' → logprob: -10.998780250549316
    8. '(' → logprob: -11.873780250549316
    9. '=num' → logprob: -11.873780250549316
    10. ' =
' → logprob: -11.998780250549316

Token 274: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3347229063510895
    2. ' nums' → logprob: -1.334722876548767
    3. 'get' → logprob: -3.9597229957580566
    4. 'nums' → logprob: -6.209722995758057
    5. '(nums' → logprob: -8.834722518920898
    6. ' gets' → logprob: -12.584722518920898
    7. '(get' → logprob: -12.959722518920898
    8. '_get' → logprob: -13.834722518920898
    9. ' ' → logprob: -14.834722518920898
    10. '[get' → logprob: -15.209722518920898

Token 275: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.000561969296541065
    2. '(nums' → logprob: -7.5005621910095215
    3. 'nums' → logprob: -12.500561714172363
    4. '_a' → logprob: -13.375561714172363
    5. 'c' → logprob: -13.375561714172363
    6. '_b' → logprob: -14.000561714172363
    7. '_nums' → logprob: -14.250561714172363
    8. '(' → logprob: -15.750561714172363
    9. '_d' → logprob: -15.875561714172363
    10. '[' → logprob: -15.875561714172363

Token 276: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. '(num' → logprob: -16.000001907348633
    4. 'nums' → logprob: -16.250001907348633
    5. '(numbers' → logprob: -17.000001907348633
    6. ' nums' → logprob: -19.125001907348633
    7. ' (' → logprob: -19.500001907348633
    8. '```' → logprob: -20.625001907348633
    9. '(chars' → logprob: -21.125001907348633
    10. '(
' → logprob: -21.250001907348633

Token 277: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0340496301651001
    2. ')' → logprob: -3.5340495109558105
    3. '(nums' → logprob: -5.5340495109558105
    4. '   ' → logprob: -8.284049987792969
    5. 'nums' → logprob: -9.784049987792969
    6. ')
' → logprob: -11.409049987792969
    7. ')`
' → logprob: -12.159049987792969
    8. '[' → logprob: -12.284049987792969
    9. ' nums' → logprob: -12.409049987792969
    10. ')

' → logprob: -13.159049987792969

Token 278: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.32171517610549927
    2. '   ' → logprob: -1.3217151165008545
    3. ' d' → logprob: -4.821715354919434
    4. '	d' → logprob: -7.946715354919434
    5. ' ' → logprob: -12.696715354919434
    6. '(d' → logprob: -12.946715354919434
    7. '```' → logprob: -13.196715354919434
    8. '  ' → logprob: -13.446715354919434
    9. '    
' → logprob: -14.196715354919434
    10. '    ' → logprob: -14.946715354919434

Token 279: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.005238025914877653
    2. ' d' → logprob: -5.255238056182861
    3. 'get' → logprob: -13.005237579345703
    4. '   ' → logprob: -13.255237579345703
    5. ' get' → logprob: -16.380237579345703
    6. '	d' → logprob: -16.505237579345703
    7. 'def' → logprob: -16.755237579345703
    8. '```' → logprob: -17.880237579345703
    9. '_d' → logprob: -18.005237579345703
    10. '[' → logprob: -18.255237579345703

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022484004497528
    2. '=' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.660224914550781
    4. ',' → logprob: -15.910224914550781
    5. ')' → logprob: -16.28522491455078
    6. ' =)' → logprob: -16.66022491455078
    7. ' =
' → logprob: -17.28522491455078
    8. '(nums' → logprob: -17.28522491455078
    9. '=get' → logprob: -17.53522491455078
    10. '＝' → logprob: -17.53522491455078

Token 281: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12693022191524506
    2. ' get' → logprob: -2.1269302368164062
    3. ' nums' → logprob: -13.626930236816406
    4. 'nums' → logprob: -14.251930236816406
    5. '(get' → logprob: -16.126930236816406
    6. '	get' → logprob: -16.501930236816406
    7. ' gets' → logprob: -17.501930236816406
    8. '.get' → logprob: -18.501930236816406
    9. '_get' → logprob: -18.626930236816406
    10. 'gets' → logprob: -18.626930236816406

Token 282: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0047032954171299934
    2. '_c' → logprob: -5.379703521728516
    3. 'd' → logprob: -10.504703521728516
    4. '_b' → logprob: -10.879703521728516
    5. '_get' → logprob: -11.004703521728516
    6. '[' → logprob: -12.254703521728516
    7. 'get' → logprob: -12.504703521728516
    8. '_' → logprob: -12.629703521728516
    9. '_a' → logprob: -12.629703521728516
    10. '(nums' → logprob: -12.629703521728516

Token 283: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -14.375000953674316
    3. 'nums' → logprob: -14.375000953674316
    4. ' (' → logprob: -16.500001907348633
    5. '(numbers' → logprob: -17.250001907348633
    6. ' nums' → logprob: -17.500001907348633
    7. '(num' → logprob: -18.125001907348633
    8. '(tokens' → logprob: -20.125001907348633
    9. '(chars' → logprob: -20.375001907348633
    10. '```' → logprob: -20.625001907348633

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010604646377032623
    2. ')
' → logprob: -9.250105857849121
    3. '   ' → logprob: -12.250105857849121
    4. ')
' → logprob: -13.625105857849121
    5. ')

' → logprob: -14.000105857849121
    6. 'nums' → logprob: -14.250105857849121
    7. ' )' → logprob: -14.375105857849121
    8. '(nums' → logprob: -14.500105857849121
    9. ')`' → logprob: -15.000105857849121
    10. ' ' → logprob: -15.625105857849121

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06440562754869461
    2. 'print' → logprob: -3.064405679702759
    3. 'output' → logprob: -4.93940544128418
    4. '
' → logprob: -5.81440544128418
    5. 'result' → logprob: -6.18940544128418
    6. ' print' → logprob: -6.56440544128418
    7. '    
' → logprob: -6.68940544128418
    8. '```' → logprob: -7.56440544128418
    9. ' output' → logprob: -8.93940544128418
    10. ' result' → logprob: -9.31440544128418

Token 286: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004593862977344543
    2. 'result' (adapté à ' result') → logprob: -8.000459671020508
    3. 'output' → logprob: -9.250459671020508
    4. ' print' → logprob: -10.875459671020508
    5. '   ' → logprob: -11.875459671020508
    6. 'out' → logprob: -14.000459671020508
    7. 'answer' → logprob: -14.250459671020508
    8. 'res' → logprob: -16.000459671020508
    9. 'pr' → logprob: -16.250459671020508
    10. '```' → logprob: -16.750459671020508

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033692266792058945
    2. '=' → logprob: -3.4086923599243164
    3. '_' → logprob: -10.033692359924316
    4. ')' → logprob: -14.158692359924316
    5. ' ' → logprob: -14.533692359924316
    6. '   ' → logprob: -14.783692359924316
    7. '  ' → logprob: -15.658692359924316
    8. ' =
' → logprob: -15.658692359924316
    9. 's' → logprob: -16.03369140625
    10. ' ' → logprob: -16.28369140625

Token 288: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1002068892121315
    2. ' get' → logprob: -2.3502068519592285
    3. '(get' → logprob: -15.975207328796387
    4. '	get' → logprob: -16.47520637512207
    5. '[get' → logprob: -17.85020637512207
    6. '   ' → logprob: -17.97520637512207
    7. '_get' → logprob: -17.97520637512207
    8. '.get' → logprob: -18.97520637512207
    9. '=get' → logprob: -19.10020637512207
    10. '"' → logprob: -20.22520637512207

Token 289: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. 'output' → logprob: -17.5
    4. '_out' → logprob: -18.375
    5. '"_' → logprob: -19.125
    6. ' _' → logprob: -19.25
    7. '_result' → logprob: -19.375
    8. '_input' → logprob: -20.0
    9. '_a' → logprob: -20.5
    10. '_answer' → logprob: -21.875

Token 290: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006128363311290741
    2. '(' → logprob: -7.625612735748291
    3. ' (' → logprob: -9.00061321258545
    4. '(
' → logprob: -14.25061321258545
    5. '   ' → logprob: -14.37561321258545
    6. '```' → logprob: -16.875612258911133
    7. ' ' → logprob: -17.750612258911133
    8. '(A' → logprob: -18.500612258911133
    9. '((' → logprob: -18.750612258911133
    10. '(i' → logprob: -18.750612258911133

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007125511183403432
    2. ',b' → logprob: -7.2507123947143555
    3. ' ,' → logprob: -13.375712394714355
    4. ',
' → logprob: -14.500712394714355
    5. 'b' → logprob: -14.625712394714355
    6. '‌,' → logprob: -17.500713348388672
    7. ',d' → logprob: -17.750713348388672
    8. ')' → logprob: -18.250713348388672
    9. ',",' → logprob: -18.250713348388672
    10. '',' → logprob: -18.375713348388672

Token 292: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10020667314529419
    2. ' b' → logprob: -2.3502066135406494
    3. '   ' → logprob: -18.47520637512207
    4. '	b' → logprob: -18.97520637512207
    5. ')b' → logprob: -20.22520637512207
    6. ',b' → logprob: -20.60020637512207
    7. ' ' → logprob: -20.97520637512207
    8. ' б' → logprob: -22.22520637512207
    9. '    ' → logprob: -23.10020637512207
    10. '    
' → logprob: -23.35020637512207

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ',c' → logprob: -11.125019073486328
    3. ' ,' → logprob: -13.500019073486328
    4. 'c' → logprob: -13.500019073486328
    5. ',
' → logprob: -13.750019073486328
    6. '',' → logprob: -17.625019073486328
    7. ')' → logprob: -17.625019073486328
    8. '‌,' → logprob: -17.750019073486328
    9. ',b' → logprob: -18.000019073486328
    10. '`,' → logprob: -18.250019073486328

Token 294: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '	c' → logprob: -18.375261306762695
    4. ')c' → logprob: -20.250261306762695
    5. '   ' → logprob: -21.000261306762695
    6. ',c' → logprob: -21.875261306762695
    7. ' ' → logprob: -22.250261306762695
    8. '_c' → logprob: -22.750261306762695
    9. '.c' → logprob: -23.250261306762695
    10. '$c' → logprob: -23.625261306762695

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ',d' → logprob: -11.500011444091797
    3. ' ,' → logprob: -13.625011444091797
    4. ',
' → logprob: -16.375011444091797
    5. 'd' → logprob: -16.625011444091797
    6. '```' → logprob: -18.000011444091797
    7. ')' → logprob: -18.375011444091797
    8. '4' → logprob: -19.125011444091797
    9. '`,' → logprob: -19.250011444091797
    10. '‌,' → logprob: -19.375011444091797

Token 296: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031777136027812958
    2. ' d' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.378177642822266
    4. ' ' → logprob: -17.503177642822266
    5. '	d' → logprob: -18.628177642822266
    6. ')d' → logprob: -19.253177642822266
    7. '  ' → logprob: -20.003177642822266
    8. ')' → logprob: -21.628177642822266
    9. 'b' → logprob: -21.878177642822266
    10. '```' → logprob: -22.003177642822266

Token 297: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. ')
' → logprob: -9.7500581741333
    3. ' )' → logprob: -16.875059127807617
    4. ')
' → logprob: -17.000059127807617
    5. ')`' → logprob: -18.625059127807617
    6. '   ' → logprob: -18.750059127807617
    7. '),' → logprob: -19.625059127807617
    8. ')

' → logprob: -19.875059127807617
    9. '))' → logprob: -20.250059127807617
    10. ')#' → logprob: -20.625059127807617

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007431607809849083
    2. 'print' → logprob: -7.250743389129639
    3. '    
' → logprob: -10.62574291229248
    4. '
' → logprob: -11.75074291229248
    5. ' print' → logprob: -14.62574291229248
    6. '	print' → logprob: -15.25074291229248
    7. '```' → logprob: -16.000743865966797
    8. '  
' → logprob: -16.375743865966797
    9. '' → logprob: -17.500743865966797
    10. '\n' → logprob: -17.750743865966797

Token 299: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00408647395670414
    2. '   ' → logprob: -5.754086494445801
    3. ' print' → logprob: -7.004086494445801
    4. '
' → logprob: -16.254085540771484
    5. '```' → logprob: -16.754085540771484
    6. '	print' → logprob: -16.879085540771484
    7. 'pr' → logprob: -18.504085540771484
    8. '    
' → logprob: -18.629085540771484
    9. '_print' → logprob: -20.754085540771484
    10. 'return' → logprob: -20.754085540771484

Token 300: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.023246755823493004
    2. '(' → logprob: -3.7732467651367188
    3. 'result' → logprob: -14.523246765136719
    4. '()' → logprob: -15.273246765136719
    5. '(
' → logprob: -15.773246765136719
    6. '(results' → logprob: -16.52324676513672
    7. ' (' → logprob: -16.64824676513672
    8. '(

' → logprob: -16.64824676513672
    9. '('' → logprob: -17.14824676513672
    10. '(resultado' → logprob: -17.39824676513672

Token 301: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. '')' → logprob: -17.75
    3. ' )' → logprob: -18.0
    4. '())' → logprob: -18.375
    5. '`)' → logprob: -18.5
    6. ')`' → logprob: -18.625
    7. '")' → logprob: -18.75
    8. ')
' → logprob: -18.75
    9. '()' → logprob: -19.0
    10. '))' → logprob: -20.25

Token 302: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007924937643110752
    2. 'main' → logprob: -5.007925033569336
    3. '
' → logprob: -7.382925033569336
    4. '```' → logprob: -8.632925033569336
    5. '\' → logprob: -9.132925033569336
    6. '#' → logprob: -9.257925033569336
    7. ' if' → logprob: -9.382925033569336
    8. '\n' → logprob: -9.882925033569336
    9. '(main' → logprob: -11.007925033569336
    10. ' main' → logprob: -11.257925033569336

Token 303: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003352140076458454
    2. '(' → logprob: -5.753352165222168
    3. '()
' → logprob: -8.878352165222168
    4. '(
' → logprob: -11.003352165222168
    5. '```' → logprob: -11.878352165222168
    6. '#' → logprob: -12.628352165222168
    7. '\' → logprob: -13.503352165222168
    8. '("")' → logprob: -13.628352165222168
    9. '()\' → logprob: -13.628352165222168
    10. '()

' → logprob: -14.128352165222168


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 301
Tokens correctement prédits (1ère position, stricte): 155
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 274
Précision stricte (1ère position): 51.50%
Précision adaptée (1ère position): 56.15%
Précision (top 10): 91.03%
================================================================================
