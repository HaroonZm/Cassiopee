================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
S = input()
seq = ['A', 'C', 'G', 'T']
res = 0

def check(s):
    return all(x in seq for x in s)

i = 0
while i < len(S):
    if S[i] not in seq:
        i += 1
        continue
    j = i
    current = ''
    while True:
        try:
            if S[j] in seq:
                current += S[j]
                if len(current) > res:
                    res = len(current)
                j += 1
            else:
                break
        except:
            break
    i += 1

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'S' (ID: 50)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004614776466041803
    2. ''' → logprob: -6.37961483001709
    3. '('' → logprob: -7.00461483001709
    4. '()' → logprob: -7.12961483001709
    5. '"' → logprob: -7.37961483001709
    6. '(
' → logprob: -8.62961483001709
    7. '`' → logprob: -9.50461483001709
    8. '("("' → logprob: -9.75461483001709
    9. '```' → logprob: -10.12961483001709
    10. '.' → logprob: -10.37961483001709

Token 4: 'seq' (ID: 27794)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13282400369644165
    2. '[::-' → logprob: -2.632823944091797
    3. '[' → logprob: -3.757823944091797
    4. 'if' → logprob: -4.632823944091797
    5. '.strip' → logprob: -5.257823944091797
    6. 'print' → logprob: -5.632823944091797
    7. '+' → logprob: -6.132823944091797
    8. '.lower' → logprob: -6.507823944091797
    9. '.count' → logprob: -6.507823944091797
    10. '.upper' → logprob: -6.757823944091797

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01872679404914379
    2. '_' → logprob: -5.393726825714111
    3. 'uen' → logprob: -5.643726825714111
    4. '_len' → logprob: -5.768726825714111
    5. 'ue' → logprob: -6.643726825714111
    6. 'uent' → logprob: -6.893726825714111
    7. 's' → logprob: -7.268726825714111
    8. ' =' → logprob: -7.268726825714111
    9. '[' → logprob: -7.393726825714111
    10. '.' → logprob: -7.768726825714111

Token 6: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13008157908916473
    2. ' []' → logprob: -2.1300816535949707
    3. 'S' → logprob: -7.005081653594971
    4. '""' → logprob: -7.255081653594971
    5. ' S' → logprob: -7.505081653594971
    6. '[' → logprob: -7.755081653594971
    7. '''' → logprob: -9.380081176757812
    8. ' ""' → logprob: -9.755081176757812
    9. 'list' → logprob: -9.755081176757812
    10. ' [' → logprob: -10.130081176757812

Token 7: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5948182344436646
    2. 'a' → logprob: -1.8448182344436646
    3. 'S' → logprob: -1.8448182344436646
    4. '0' → logprob: -3.094818115234375
    5. '('' → logprob: -3.094818115234375
    6. '[' → logprob: -3.219818115234375
    7. 'H' → logprob: -3.719818115234375
    8. 'I' → logprob: -3.719818115234375
    9. 'R' → logprob: -3.844818115234375
    10. '"' → logprob: -4.094818115234375

Token 8: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.9174693822860718
    2. 'C' → logprob: -1.7924693822860718
    3. '','' → logprob: -1.7924693822860718
    4. '']' → logprob: -2.2924695014953613
    5. 'B' → logprob: -2.6674695014953613
    6. ''' → logprob: -3.1674695014953613
    7. 'T' → logprob: -3.6674695014953613
    8. 'G' → logprob: -4.917469501495361
    9. 'A' → logprob: -5.042469501495361
    10. 'P' → logprob: -5.792469501495361

Token 9: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04432849958539009
    2. ' '' → logprob: -3.919328451156616
    3. ''C' → logprob: -4.169328689575195
    4. ''T' → logprob: -5.044328689575195
    5. ''S' → logprob: -7.044328689575195
    6. ''A' → logprob: -8.044328689575195
    7. ' ' → logprob: -9.044328689575195
    8. '"' → logprob: -9.669328689575195
    9. 'B' → logprob: -9.919328689575195
    10. ''D' → logprob: -10.419328689575195

Token 10: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0188288688659668
    2. 'G' → logprob: -1.2688288688659668
    3. 'B' → logprob: -1.5188288688659668
    4. 'T' → logprob: -2.018828868865967
    5. 'A' → logprob: -6.143828868865967
    6. 'R' → logprob: -6.768828868865967
    7. 'a' → logprob: -7.643828868865967
    8. ''' → logprob: -8.018829345703125
    9. 'N' → logprob: -8.143829345703125
    10. 'I' → logprob: -8.268829345703125

Token 11: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.018531501293182373
    2. ''' → logprob: -4.643531322479248
    3. 'G' → logprob: -4.893531322479248
    4. '','' → logprob: -7.018531322479248
    5. 'T' → logprob: -9.018531799316406
    6. ',' → logprob: -9.393531799316406
    7. ''T' → logprob: -9.518531799316406
    8. '']' → logprob: -10.268531799316406
    9. ','' → logprob: -11.393531799316406
    10. ''',' → logprob: -11.768531799316406

Token 12: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2025216519832611
    2. ' '' → logprob: -1.7025216817855835
    3. ' ' → logprob: -7.452521800994873
    4. ''GC' → logprob: -8.327521324157715
    5. ''T' → logprob: -8.577521324157715
    6. ' ' → logprob: -11.327521324157715
    7. ' G' → logprob: -11.327521324157715
    8. 'G' → logprob: -11.577521324157715
    9. '"G' → logprob: -11.702521324157715
    10. '  ' → logprob: -11.827521324157715

Token 13: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.008778009563684464
    2. 'T' → logprob: -5.133778095245361
    3. ''' → logprob: -6.008778095245361
    4. 'A' → logprob: -8.883777618408203
    5. 'C' → logprob: -9.008777618408203
    6. '']' → logprob: -11.008777618408203
    7. '''' → logprob: -11.133777618408203
    8. ''T' → logprob: -11.508777618408203
    9. 'F' → logprob: -11.821277618408203
    10. 'B' → logprob: -11.946277618408203

Token 14: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.005570728797465563
    2. 'T' → logprob: -5.755570888519287
    3. ''T' → logprob: -6.505570888519287
    4. ''' → logprob: -7.255570888519287
    5. '','' → logprob: -9.380570411682129
    6. '']' → logprob: -9.380570411682129
    7. ',' → logprob: -11.505570411682129
    8. ''',' → logprob: -12.755570411682129
    9. ','' → logprob: -13.505570411682129
    10. ' ',' → logprob: -13.880570411682129

Token 15: ' '' (ID: 461)
  Prédit: ''T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''T' → logprob: -0.0010356683051213622
    2. ' '' → logprob: -7.251035690307617
    3. ''' → logprob: -8.251035690307617
    4. 'T' → logprob: -10.126035690307617
    5. ''U' → logprob: -11.251035690307617
    6. ' ' → logprob: -12.626035690307617
    7. ' T' → logprob: -13.001035690307617
    8. ''S' → logprob: -13.376035690307617
    9. ''t' → logprob: -13.626035690307617
    10. '',' → logprob: -13.751035690307617

Token 16: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -7.600714161526412e-05
    2. ''T' → logprob: -9.875076293945312
    3. ''' → logprob: -11.000076293945312
    4. 'U' → logprob: -12.375076293945312
    5. ' T' → logprob: -13.625076293945312
    6. '']' → logprob: -14.500076293945312
    7. '_T' → logprob: -15.250076293945312
    8. 'A' → logprob: -16.125076293945312
    9. '"T' → logprob: -16.312576293945312
    10. 'I' → logprob: -16.500076293945312

Token 17: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.00010318557906430215
    2. ''' → logprob: -9.500102996826172
    3. ']' → logprob: -11.125102996826172
    4. '"]' → logprob: -12.000102996826172
    5. '',' → logprob: -12.250102996826172
    6. '']
' → logprob: -13.750102996826172
    7. '']

' → logprob: -14.250102996826172
    8. '')' → logprob: -14.750102996826172
    9. ' ']' → logprob: -15.375102996826172
    10. '[' → logprob: -16.375102996826172

Token 18: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2059565931558609
    2. 'max' → logprob: -2.5809566974639893
    3. 'i' → logprob: -3.8309566974639893
    4. 'n' → logprob: -3.9559566974639893
    5. 'result' → logprob: -4.08095645904541
    6. 'count' → logprob: -4.08095645904541
    7. 'c' → logprob: -5.33095645904541
    8. 'd' → logprob: -5.83095645904541
    9. 'counts' → logprob: -6.20595645904541
    10. 'p' → logprob: -6.20595645904541

Token 19: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.2344677448272705
    2. '[' → logprob: -2.3594677448272705
    3. ' =' → logprob: -2.7344677448272705
    4. '=' → logprob: -3.4844677448272705
    5. '_' → logprob: -5.484467506408691
    6. ' ' → logprob: -5.484467506408691
    7. 'ult' → logprob: -5.609467506408691
    8. 't' → logprob: -6.359467506408691
    9. 's' → logprob: -6.484467506408691
    10. 'ul' → logprob: -6.734467506408691

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.062854528427124
    2. ' []' → logprob: -1.312854528427124
    3. '[]' → logprob: -1.312854528427124
    4. ' ' → logprob: -2.562854528427124
    5. '[' → logprob: -4.187854766845703
    6. '"' → logprob: -4.812854766845703
    7. '1' → logprob: -5.437854766845703
    8. ''' → logprob: -5.562854766845703
    9. ' [' → logprob: -5.812854766845703
    10. '""' → logprob: -7.187854766845703

Token 21: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.452747106552124
    2. '0' → logprob: -1.702747106552124
    3. '[' → logprob: -2.202747106552124
    4. '''' → logprob: -3.077747106552124
    5. '""' → logprob: -4.577747344970703
    6. '1' → logprob: -5.077747344970703
    7. ''' → logprob: -6.327747344970703
    8. '"' → logprob: -6.452747344970703
    9. '[]
' → logprob: -7.077747344970703
    10. '[len' → logprob: -7.202747344970703

Token 22: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021081186830997467
    2. ' for' → logprob: -4.39608097076416
    3. 'i' → logprob: -5.39608097076416
    4. ',' → logprob: -6.77108097076416
    5. '\n' → logprob: -7.27108097076416
    6. '
' → logprob: -8.14608097076416
    7. 'n' → logprob: -8.27108097076416
    8. ''' → logprob: -8.27108097076416
    9. '\' → logprob: -8.27108097076416
    10. '```' → logprob: -8.89608097076416

Token 23: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006027150084264576
    2. 'i' → logprob: -8.000602722167969
    3. ' for' → logprob: -8.375602722167969
    4. '```' → logprob: -10.875602722167969
    5. 'n' → logprob: -11.250602722167969
    6. ')' → logprob: -13.750602722167969
    7. 'f' → logprob: -13.750602722167969
    8. ' ' → logprob: -14.125602722167969
    9. '	for' → logprob: -15.250602722167969
    10. '`' → logprob: -15.500602722167969

Token 24: ' check' (ID: 2371)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7732815742492676
    2. ' count' → logprob: -2.0232815742492676
    3. ' check' → logprob: -2.2732815742492676
    4. ' f' → logprob: -3.0232815742492676
    5. ' l' → logprob: -3.0232815742492676
    6. ' can' → logprob: -3.2732815742492676
    7. ' ' → logprob: -3.8982815742492676
    8. ' solve' → logprob: -4.148281574249268
    9. ' calc' → logprob: -4.148281574249268
    10. ' max' → logprob: -4.273281574249268

Token 25: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018465615808963776
    2. '_' → logprob: -4.018465518951416
    3. '(S' → logprob: -9.893465995788574
    4. 's' → logprob: -10.143465995788574
    5. '_sequence' → logprob: -10.143465995788574
    6. ' (' → logprob: -10.268465995788574
    7. '(s' → logprob: -11.393465995788574
    8. '('' → logprob: -11.518465995788574
    9. '_sub' → logprob: -11.893465995788574
    10. '_char' → logprob: -11.893465995788574

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007467846851795912
    2. '[i' → logprob: -5.507467746734619
    3. ')' → logprob: -5.882467746734619
    4. '[' → logprob: -8.507468223571777
    5. ',' → logprob: -8.632468223571777
    6. ':' → logprob: -10.132468223571777
    7. '):
' → logprob: -10.257468223571777
    8. '[]):' → logprob: -10.882468223571777
    9. 'i' → logprob: -11.132468223571777
    10. '[index' → logprob: -11.757468223571777

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041369497776031494
    2. ' ' → logprob: -3.7913694381713867
    3. ':' → logprob: -5.541369438171387
    4. ')' → logprob: -5.791369438171387
    5. '(' → logprob: -5.791369438171387
    6. '<|end|>' → logprob: -5.791369438171387
    7. '    ' → logprob: -6.291369438171387
    8. '  ' → logprob: -7.291369438171387
    9. ' (' → logprob: -8.166369438171387
    10. ' return' → logprob: -8.416369438171387

Token 28: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7700390219688416
    2. ' for' → logprob: -1.1450390815734863
    3. '   ' → logprob: -1.7700390815734863
    4. 's' → logprob: -4.520039081573486
    5. 'len' → logprob: -4.895039081573486
    6. 'return' (adapté à ' return') → logprob: -5.270039081573486
    7. ' return' → logprob: -5.645039081573486
    8. ' s' → logprob: -5.645039081573486
    9. 'count' → logprob: -5.770039081573486
    10. 'if' → logprob: -5.895039081573486

Token 29: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5410952568054199
    2. ' s' → logprob: -1.54109525680542
    3. 's' → logprob: -2.54109525680542
    4. ' any' → logprob: -3.16609525680542
    5. ' len' → logprob: -3.54109525680542
    6. 'all' → logprob: -4.29109525680542
    7. 'len' → logprob: -4.54109525680542
    8. ' ' → logprob: -4.79109525680542
    9. ' True' → logprob: -5.66609525680542
    10. ''' → logprob: -5.79109525680542

Token 30: '(x' (ID: 4061)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06934689730405807
    2. '(' → logprob: -4.069346904754639
    3. '(s' → logprob: -4.069346904754639
    4. '(x' → logprob: -4.194346904754639
    5. '(ch' → logprob: -4.444346904754639
    6. '(i' → logprob: -5.569346904754639
    7. '(char' → logprob: -6.694346904754639
    8. '((' → logprob: -7.444346904754639
    9. '(a' → logprob: -9.19434642791748
    10. '([' → logprob: -9.81934642791748

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12910225987434387
    2. 'in' → logprob: -2.1291022300720215
    3. '==' → logprob: -7.2541022300720215
    4. 's' → logprob: -7.5041022300720215
    5. ' ==' → logprob: -7.8791022300720215
    6. ' ' → logprob: -8.62910270690918
    7. ' not' → logprob: -9.50410270690918
    8. ' s' → logprob: -10.37910270690918
    9. ' !=' → logprob: -10.62910270690918
    10. '!=' → logprob: -10.87910270690918

Token 32: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.24629198014736176
    2. ' seq' → logprob: -1.621291995048523
    3. 's' → logprob: -4.3712921142578125
    4. ' s' → logprob: -4.8712921142578125
    5. '   ' → logprob: -9.246292114257812
    6. '(seq' → logprob: -9.621292114257812
    7. ' sequence' → logprob: -9.871292114257812
    8. 'sequence' → logprob: -10.246292114257812
    9. 'se' → logprob: -10.246292114257812
    10. '_seq' → logprob: -10.871292114257812

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0702965185046196
    2. 'for' → logprob: -2.6952965259552
    3. ' ' → logprob: -8.820296287536621
    4. ')' → logprob: -8.945296287536621
    5. 's' → logprob: -9.945296287536621
    6. '   ' → logprob: -11.445296287536621
    7. ' s' → logprob: -11.445296287536621
    8. '  ' → logprob: -12.820296287536621
    9. ' )' → logprob: -13.070296287536621
    10. '	for' → logprob: -13.070296287536621

Token 34: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.050538741052150726
    2. ' x' → logprob: -3.4255387783050537
    3. ' ' → logprob: -4.675538539886475
    4. 's' → logprob: -5.050538539886475
    5. 'x' → logprob: -7.175538539886475
    6. '<|end|>' → logprob: -9.550539016723633
    7. '<|end|>' → logprob: -10.175539016723633
    8. ' ' → logprob: -10.300539016723633
    9. '  ' → logprob: -10.425539016723633
    10. ')' → logprob: -10.550539016723633

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033613771200180054
    2. 'in' → logprob: -3.533613681793213
    3. 's' → logprob: -5.783613681793213
    4. ' ' → logprob: -7.408613681793213
    5. ')' → logprob: -9.658614158630371
    6. ' s' → logprob: -9.783614158630371
    7. '  ' → logprob: -11.158614158630371
    8. '<|end|>' → logprob: -11.283614158630371
    9. ' ' → logprob: -12.283614158630371
    10. '=' → logprob: -13.283614158630371

Token 36: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.011050531640648842
    2. 's' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.5110502243042
    4. ')' → logprob: -14.2610502243042
    5. '(s' → logprob: -15.8860502243042
    6. ''s' → logprob: -16.011051177978516
    7. ' list' → logprob: -16.011051177978516
    8. '_s' → logprob: -16.386051177978516
    9. ' range' → logprob: -16.886051177978516
    10. ' )' → logprob: -16.948551177978516

Token 37: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.93448489275761e-05
    2. '[' → logprob: -10.250079154968262
    3. ' )' → logprob: -10.500079154968262
    4. '   ' → logprob: -12.750079154968262
    5. '))' → logprob: -12.875079154968262
    6. 's' → logprob: -13.125079154968262
    7. '[:' → logprob: -13.125079154968262
    8. ')
' → logprob: -13.625079154968262
    9. '])' → logprob: -14.500079154968262
    10. 'def' → logprob: -14.500079154968262

Token 38: 'i' (ID: 72)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0471363365650177
    2. ')' → logprob: -4.047136306762695
    3. '_' → logprob: -4.047136306762695
    4. '<|end|>' → logprob: -5.172136306762695
    5. '.' → logprob: -7.297136306762695
    6. '
' → logprob: -7.547136306762695
    7. '):' → logprob: -7.672136306762695
    8. 'for' → logprob: -7.672136306762695
    9. '\' → logprob: -7.797136306762695
    10. ''s' → logprob: -7.922136306762695

Token 39: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06445056200027466
    2. ' =' → logprob: -4.064450740814209
    3. ' ' → logprob: -4.314450740814209
    4. '=' → logprob: -4.314450740814209
    5. ' n' → logprob: -4.939450740814209
    6. 'f' → logprob: -5.064450740814209
    7. 'nd' → logprob: -6.439450740814209
    8. '+' → logprob: -6.814450740814209
    9. ',' → logprob: -6.939450740814209
    10. ',n' → logprob: -8.31445026397705

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009764114394783974
    2. ' ' → logprob: -4.634764194488525
    3. '1' → logprob: -12.134763717651367
    4. 'len' → logprob: -13.884763717651367
    5. '2' → logprob: -14.634763717651367
    6. '6' → logprob: -15.009763717651367
    7. ' len' → logprob: -16.009763717651367
    8. '3' → logprob: -16.072263717651367
    9. '4' → logprob: -16.197263717651367
    10. ' i' → logprob: -16.572263717651367

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015419373812619597
    2. ' ' → logprob: -9.125154495239258
    3. '1' → logprob: -10.125154495239258
    4. '2' → logprob: -13.125154495239258
    5. 'len' → logprob: -13.625154495239258
    6. '3' → logprob: -15.250154495239258
    7. 'n' → logprob: -15.500154495239258
    8. '6' → logprob: -15.500154495239258
    9. '10' → logprob: -15.500154495239258
    10. '4' → logprob: -15.625154495239258

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003447184106335044
    2. 'i' → logprob: -5.75344705581665
    3. ' len' → logprob: -9.003447532653809
    4. ' ' → logprob: -9.253447532653809
    5. ' True' → logprob: -10.253447532653809
    6. '<|end|>' → logprob: -12.628447532653809
    7. '  ' → logprob: -12.753447532653809
    8. 'True' → logprob: -12.878447532653809
    9. 'len' → logprob: -12.878447532653809
    10. '(i' → logprob: -14.253447532653809

Token 45: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07921957224607468
    2. '<' → logprob: -2.7042195796966553
    3. '<len' → logprob: -4.704219341278076
    4. ' <=' → logprob: -8.829219818115234
    5. '<=' → logprob: -10.829219818115234
    6. '+' → logprob: -11.829219818115234
    7. 'len' → logprob: -12.579219818115234
    8. '<n' → logprob: -12.954219818115234
    9. '<size' → logprob: -13.829219818115234
    10. ' +' → logprob: -13.829219818115234

Token 46: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.386886328458786
    2. 'len' → logprob: -1.1368863582611084
    3. ' ' → logprob: -11.386886596679688
    4. '(len' → logprob: -13.511886596679688
    5. ' n' → logprob: -14.386886596679688
    6. '=len' → logprob: -14.636886596679688
    7. '<len' → logprob: -14.886886596679688
    8. '   ' → logprob: -15.261886596679688
    9. 'n' → logprob: -15.386886596679688
    10. '	len' → logprob: -15.511886596679688

Token 47: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0025028903037309647
    2. '(' → logprob: -6.002502918243408
    3. '(s' → logprob: -10.75250244140625
    4. 'S' → logprob: -12.37750244140625
    5. ' (' → logprob: -14.00250244140625
    6. 's' → logprob: -15.25250244140625
    7. '('' → logprob: -16.37750244140625
    8. '()' → logprob: -16.75250244140625
    9. ' ' → logprob: -16.87750244140625
    10. '(`' → logprob: -16.87750244140625

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26945239305496216
    2. ')' → logprob: -1.5194523334503174
    3. ' and' → logprob: -4.2694525718688965
    4. 'and' → logprob: -6.7694525718688965
    5. '):
' → logprob: -6.8944525718688965
    6. ' ):' → logprob: -7.0194525718688965
    7. ':' → logprob: -8.269452095031738
    8. ' )' → logprob: -10.019452095031738
    9. '):

' → logprob: -11.644452095031738
    10. ' ' → logprob: -11.894452095031738

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09438216686248779
    2. ' if' → logprob: -3.4693822860717773
    3. 'j' → logprob: -4.219382286071777
    4. '<|end|>' → logprob: -4.344382286071777
    5. '    ' → logprob: -4.469382286071777
    6. ' j' → logprob: -4.594382286071777
    7. 'if' → logprob: -6.094382286071777
    8. ' ' → logprob: -6.344382286071777
    9. '  ' → logprob: -6.969382286071777
    10. '    
' → logprob: -7.094382286071777

Token 50: ' if' (ID: 538)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1080509424209595
    2. ' for' → logprob: -1.2330509424209595
    3. '   ' → logprob: -1.6080509424209595
    4. ' j' → logprob: -2.73305082321167
    5. ' if' → logprob: -2.98305082321167
    6. 'for' → logprob: -3.10805082321167
    7. 'if' (adapté à ' if') → logprob: -4.10805082321167
    8. '```' → logprob: -7.60805082321167
    9. ' ' → logprob: -8.608051300048828
    10. '    ' → logprob: -9.108051300048828

Token 51: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.7329415678977966
    2. ' check' → logprob: -1.1079416275024414
    3. 'S' → logprob: -1.8579416275024414
    4. 'check' → logprob: -3.6079416275024414
    5. ' not' → logprob: -5.232941627502441
    6. ' ' → logprob: -7.607941627502441
    7. 'not' → logprob: -9.107941627502441
    8. ' i' → logprob: -10.232941627502441
    9. 'Check' → logprob: -10.232941627502441
    10. '(check' → logprob: -10.357941627502441

Token 52: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03177356719970703
    2. ' in' → logprob: -3.656773567199707
    3. '[' → logprob: -6.031773567199707
    4. ' not' → logprob: -6.531773567199707
    5. '==' → logprob: -6.781773567199707
    6. ' ==' → logprob: -8.406773567199707
    7. 'in' → logprob: -9.156773567199707
    8. ' [' → logprob: -10.406773567199707
    9. ' i' → logprob: -10.781773567199707
    10. 'not' → logprob: -10.781773567199707

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.345584899187088
    2. 'in' → logprob: -1.8455848693847656
    3. ' in' → logprob: -2.8455848693847656
    4. ' not' → logprob: -3.3455848693847656
    5. 'not' → logprob: -3.4705848693847656
    6. '==' → logprob: -5.595584869384766
    7. ' ]' → logprob: -6.220584869384766
    8. ']==' → logprob: -6.595584869384766
    9. ' ' → logprob: -7.345584869384766
    10. ')' → logprob: -8.095584869384766

Token 54: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35773274302482605
    2. 'in' → logprob: -1.6077327728271484
    3. ' not' → logprob: -2.3577327728271484
    4. 'not' → logprob: -5.232732772827148
    5. '==' → logprob: -8.857732772827148
    6. ' ==' → logprob: -8.982732772827148
    7. ' ' → logprob: -9.232732772827148
    8. ' i' → logprob: -11.607732772827148
    9. '   ' → logprob: -12.045232772827148
    10. '[' → logprob: -12.232732772827148

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17018501460552216
    2. ' ' → logprob: -2.295185089111328
    3. 'in' → logprob: -3.295185089111328
    4. '<|end|>' → logprob: -4.420185089111328
    5. ' to' → logprob: -5.295185089111328
    6. '<|end|>' → logprob: -7.420185089111328
    7. 'to' → logprob: -8.795185089111328
    8. ' sequence' → logprob: -8.920185089111328
    9. '  ' → logprob: -9.045185089111328
    10. 'sequence' → logprob: -9.170185089111328

Token 56: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.0337664932012558
    2. 'seq' → logprob: -3.408766508102417
    3. ' ' → logprob: -9.658766746520996
    4. ' sequence' → logprob: -10.033766746520996
    5. '(seq' → logprob: -12.408766746520996
    6. ' sequ' → logprob: -12.533766746520996
    7. '_seq' → logprob: -13.908766746520996
    8. 'se' → logprob: -14.158766746520996
    9. 'sequence' → logprob: -14.158766746520996
    10. ' s' → logprob: -14.533766746520996

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011171156074851751
    2. ':
' → logprob: -6.87611722946167
    3. '):' → logprob: -10.001116752624512
    4. '       ' → logprob: -11.376116752624512
    5. '   ' → logprob: -11.626116752624512
    6. ' :' → logprob: -12.001116752624512
    7. ':return' → logprob: -12.501116752624512
    8. ' or' → logprob: -12.876116752624512
    9. ')' → logprob: -13.001116752624512
    10. ':i' → logprob: -13.501116752624512

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028019072487950325
    2. '   ' → logprob: -4.153018951416016
    3. ' i' → logprob: -4.653018951416016
    4. 'i' → logprob: -6.403018951416016
    5. ':' → logprob: -8.278018951416016
    6. '    ' → logprob: -9.028018951416016
    7. ' ' → logprob: -9.903018951416016
    8. ' break' → logprob: -9.903018951416016
    9. '	i' → logprob: -10.153018951416016
    10. '     ' → logprob: -10.653018951416016

Token 59: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.1177261546254158
    2. '   ' → logprob: -2.6177260875701904
    3. ' i' → logprob: -3.3677260875701904
    4. '       ' → logprob: -5.7427263259887695
    5. 'res' → logprob: -8.99272632598877
    6. ' res' → logprob: -9.86772632598877
    7. '  ' → logprob: -10.11772632598877
    8. ' ' → logprob: -10.11772632598877
    9. '           ' → logprob: -10.36772632598877
    10. 'if' → logprob: -10.36772632598877

Token 60: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3869956433773041
    2. ' +=' → logprob: -1.1369956731796265
    3. '=' → logprob: -9.511995315551758
    4. '+' → logprob: -10.011995315551758
    5. ' =' → logprob: -12.386995315551758
    6. ']+=' → logprob: -14.261995315551758
    7. ' ' → logprob: -15.511995315551758
    8. 'i' → logprob: -15.636995315551758
    9. '+='' → logprob: -15.761995315551758
    10. '++' → logprob: -16.011995315551758

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -16.750045776367188
    4. '   ' → logprob: -17.000045776367188
    5. '１' → logprob: -17.437545776367188
    6. '2' → logprob: -17.500045776367188
    7. '+' → logprob: -18.687545776367188
    8. '  ' → logprob: -18.812545776367188
    9. '10' → logprob: -18.875045776367188
    10. '0' → logprob: -18.875045776367188

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'i' → logprob: -19.250001907348633
    4. '2' → logprob: -19.625001907348633
    5. '１' → logprob: -20.250001907348633
    6. '```' → logprob: -20.625001907348633
    7. '7' → logprob: -20.750001907348633
    8. '0' → logprob: -21.187501907348633
    9. '3' → logprob: -21.250001907348633
    10. '4' → logprob: -21.375001907348633

Token 63: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34861016273498535
    2. '       ' → logprob: -1.8486101627349854
    3. 'continue' → logprob: -2.4736101627349854
    4. ' continue' → logprob: -4.223609924316406
    5. 'else' → logprob: -4.223609924316406
    6. '	continue' → logprob: -4.473609924316406
    7. ' else' → logprob: -5.723609924316406
    8. '```' → logprob: -6.348609924316406
    9. '_continue' → logprob: -6.598609924316406
    10. ':' → logprob: -6.598609924316406

Token 64: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8201585412025452
    2. '       ' → logprob: -0.9451585412025452
    3. 'continue' → logprob: -2.3201584815979004
    4. 'else' → logprob: -2.6951584815979004
    5. ' continue' → logprob: -5.8201584815979
    6. '	continue' → logprob: -7.0701584815979
    7. ' else' → logprob: -7.3201584815979
    8. '```' → logprob: -8.445158958435059
    9. '+' → logprob: -9.320158958435059
    10. '_continue' → logprob: -9.570158958435059

Token 65: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.048852819949388504
    2. '       ' → logprob: -3.4238529205322266
    3. ' continue' → logprob: -5.048852920532227
    4. '   ' → logprob: -5.048852920532227
    5. '	continue' → logprob: -6.673852920532227
    6. 'contin' → logprob: -8.048852920532227
    7. '```' → logprob: -8.173852920532227
    8. '_continue' → logprob: -8.923852920532227
    9. 'cont' → logprob: -9.548852920532227
    10. 'continu' → logprob: -10.048852920532227

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016912758350372314
    2. 'i' → logprob: -4.266912937164307
    3. '    
' → logprob: -6.766912937164307
    4. 'j' → logprob: -7.391912937164307
    5. 's' → logprob: -8.016912460327148
    6. 'res' → logprob: -8.891912460327148
    7. '  ' → logprob: -9.266912460327148
    8. '```' → logprob: -9.391912460327148
    9. '   
' → logprob: -10.266912460327148
    10. ')' → logprob: -10.391912460327148

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16194123029708862
    2. 'j' → logprob: -1.9119412899017334
    3. '```' → logprob: -7.286941051483154
    4. ' j' → logprob: -7.911941051483154
    5. 'i' → logprob: -8.411941528320312
    6. '    
' → logprob: -8.786941528320312
    7. 'for' → logprob: -9.661941528320312
    8. 'count' → logprob: -9.661941528320312
    9. 'start' → logprob: -10.036941528320312
    10. '
' → logprob: -11.036941528320312

Token 68: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.20336733758449554
    2. '   ' → logprob: -1.7033673524856567
    3. '```' → logprob: -7.203367233276367
    4. 'for' → logprob: -7.578367233276367
    5. ' j' → logprob: -7.703367233276367
    6. 'end' → logprob: -9.703367233276367
    7. '    
' → logprob: -9.953367233276367
    8. ' for' → logprob: -10.453367233276367
    9. 'length' → logprob: -10.953367233276367
    10. 'l' → logprob: -11.078367233276367

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631736546754837
    2. '=' → logprob: -3.6513173580169678
    3. '=i' → logprob: -11.151317596435547
    4. '   ' → logprob: -14.026317596435547
    5. '    ' → logprob: -14.651317596435547
    6. ' ' → logprob: -14.776317596435547
    7. '=j' → logprob: -15.026317596435547
    8. '=int' → logprob: -15.651317596435547
    9. ')' → logprob: -16.276317596435547
    10. '＝' → logprob: -16.276317596435547

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078997299075127
    2. ' i' → logprob: -5.5040788650512695
    3. '	i' → logprob: -14.87907886505127
    4. '   ' → logprob: -15.50407886505127
    5. '```' → logprob: -17.504079818725586
    6. '<|end|>' → logprob: -17.754079818725586
    7. ' ' → logprob: -17.879079818725586
    8. '=i' → logprob: -18.004079818725586
    9. 'j' → logprob: -19.004079818725586
    10. ')i' → logprob: -19.129079818725586

Token 71: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002663765801116824
    2. '<|end|>' → logprob: -6.627663612365723
    3. ' +' → logprob: -6.752663612365723
    4. 'while' → logprob: -9.252663612365723
    5. '+
' → logprob: -10.377663612365723
    6. '<|end|>' → logprob: -10.877663612365723
    7. '+j' → logprob: -12.127663612365723
    8. '```' → logprob: -12.252663612365723
    9. ' while' → logprob: -12.377663612365723
    10. '   ' → logprob: -12.877663612365723

Token 72: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5367047190666199
    2. '   ' → logprob: -1.2867047786712646
    3. '<|end|>' → logprob: -2.6617047786712646
    4. ' while' → logprob: -3.0367047786712646
    5. 'while' → logprob: -4.0367045402526855
    6. ' +' → logprob: -6.5367045402526855
    7. '<|end|>' → logprob: -7.2867045402526855
    8. '```' → logprob: -7.4117045402526855
    9. '	while' → logprob: -8.661705017089844
    10. '  ' → logprob: -8.786705017089844

Token 73: ' current' (ID: 2208)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.24228857457637787
    2. '+' → logprob: -2.117288589477539
    3. ' while' → logprob: -2.367288589477539
    4. '<|end|>' → logprob: -7.867288589477539
    5. '   ' → logprob: -8.367288589477539
    6. 'While' → logprob: -8.867288589477539
    7. ' +' → logprob: -9.367288589477539
    8. '	while' → logprob: -9.367288589477539
    9. '```' → logprob: -10.117288589477539
    10. '+
' → logprob: -10.367288589477539

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4127781391143799
    2. '_length' → logprob: -2.53777813911438
    3. '+' → logprob: -2.78777813911438
    4. '_' → logprob: -3.41277813911438
    5. '_len' → logprob: -3.41277813911438
    6. '=' → logprob: -3.53777813911438
    7. ' +=' → logprob: -3.91277813911438
    8. '_seq' → logprob: -4.037777900695801
    9. '_j' → logprob: -4.162777900695801
    10. 'j' → logprob: -4.662777900695801

Token 75: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.8445062637329102
    2. ' ''' → logprob: -1.4695062637329102
    3. '''' → logprob: -1.4695062637329102
    4. ' ""' → logprob: -2.34450626373291
    5. ' []' → logprob: -5.21950626373291
    6. '[]' → logprob: -5.59450626373291
    7. ' ' → logprob: -6.34450626373291
    8. '"' → logprob: -6.46950626373291
    9. '0' → logprob: -7.21950626373291
    10. ' S' → logprob: -7.96950626373291

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48555052280426025
    2. '<|end|>' → logprob: -1.1105505228042603
    3. ' while' → logprob: -3.2355504035949707
    4. '<|end|>' → logprob: -5.360550403594971
    5. '	while' → logprob: -5.610550403594971
    6. 'while' → logprob: -5.735550403594971
    7. '
' → logprob: -6.360550403594971
    8. '\n' → logprob: -7.110550403594971
    9. ' 
' → logprob: -7.610550403594971
    10. '  
' → logprob: -7.735550403594971

Token 77: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09014876186847687
    2. ' while' → logprob: -2.840148687362671
    3. '   ' → logprob: -3.590148687362671
    4. '	while' → logprob: -8.71514892578125
    5. '<|end|>' → logprob: -10.96514892578125
    6. 'While' → logprob: -11.71514892578125
    7. '```' → logprob: -13.71514892578125
    8. '  ' → logprob: -13.84014892578125
    9. '    ' → logprob: -14.84014892578125
    10. ' ' → logprob: -14.96514892578125

Token 78: ' True' (ID: 6432)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10021217912435532
    2. ' j' → logprob: -2.3502120971679688
    3. ' ' → logprob: -12.850212097167969
    4. '	j' → logprob: -13.475212097167969
    5. '   ' → logprob: -14.100212097167969
    6. 'S' → logprob: -14.600212097167969
    7. ' S' → logprob: -15.975212097167969
    8. '(j' → logprob: -16.35021209716797
    9. ' ' → logprob: -16.85021209716797
    10. '```' → logprob: -17.35021209716797

Token 79: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10457417368888855
    2. ':' → logprob: -3.354574203491211
    3. '   ' → logprob: -3.729574203491211
    4. '       ' → logprob: -3.854574203491211
    5. 'and' → logprob: -4.604574203491211
    6. '<|end|>' → logprob: -5.729574203491211
    7. ':
' → logprob: -6.229574203491211
    8. ' ' → logprob: -6.354574203491211
    9. '    ' → logprob: -6.604574203491211
    10. '           ' → logprob: -8.729574203491211

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03214164823293686
    2. ' if' → logprob: -4.28214168548584
    3. '<|end|>' → logprob: -4.28214168548584
    4. ' ' → logprob: -6.53214168548584
    5. '   ' → logprob: -7.03214168548584
    6. '    ' → logprob: -7.15714168548584
    7. 'if' → logprob: -8.53214168548584
    8. 'j' → logprob: -8.78214168548584
    9. '<|end|>' → logprob: -9.53214168548584
    10. ' and' → logprob: -9.53214168548584

Token 81: ' try' (ID: 2075)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6337483525276184
    2. ' j' → logprob: -0.7587483525276184
    3. ' if' → logprob: -7.258748531341553
    4. '       ' → logprob: -8.758748054504395
    5. '           ' → logprob: -8.883748054504395
    6. 'if' → logprob: -9.133748054504395
    7. '        ' → logprob: -11.133748054504395
    8. '   ' → logprob: -11.883748054504395
    9. '    ' → logprob: -12.508748054504395
    10. '	j' → logprob: -13.133748054504395

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035784533247351646
    2. ':
' → logprob: -6.1285786628723145
    3. '           ' → logprob: -6.7535786628723145
    4. '<|end|>' → logprob: -9.253578186035156
    5. ' :' → logprob: -9.878578186035156
    6. '<|end|>' → logprob: -10.628578186035156
    7. '   ' → logprob: -10.878578186035156
    8. '       ' → logprob: -11.753578186035156
    9. '):' → logprob: -11.878578186035156
    10. '```' → logprob: -12.503578186035156

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002858881198335439
    2. ' if' → logprob: -9.625286102294922
    3. ' current' → logprob: -10.000286102294922
    4. '   ' → logprob: -10.375286102294922
    5. '               ' → logprob: -10.500286102294922
    6. '<|end|>' → logprob: -11.125286102294922
    7. '          ' → logprob: -11.375286102294922
    8. '       ' → logprob: -11.625286102294922
    9. '```' → logprob: -11.625286102294922
    10. '	       ' → logprob: -11.875286102294922

Token 84: ' if' (ID: 538)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.05860647186636925
    2. '               ' → logprob: -3.9336063861846924
    3. ' s' → logprob: -4.0586066246032715
    4. '           ' → logprob: -4.8086066246032715
    5. 'current' → logprob: -5.3086066246032715
    6. ' if' → logprob: -5.6836066246032715
    7. ' S' → logprob: -6.3086066246032715
    8. 's' → logprob: -6.9336066246032715
    9. ' x' → logprob: -8.558606147766113
    10. 'S' → logprob: -8.683606147766113

Token 85: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16322548687458038
    2. ' S' → logprob: -1.913225531578064
    3. ' check' → logprob: -6.5382256507873535
    4. 'check' → logprob: -6.7882256507873535
    5. ' current' → logprob: -8.413225173950195
    6. 'current' → logprob: -9.163225173950195
    7. 'j' → logprob: -10.288225173950195
    8. ' j' → logprob: -11.038225173950195
    9. ' not' → logprob: -11.538225173950195
    10. ' ' → logprob: -11.663225173950195

Token 86: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.6047699318733066e-05
    2. '[i' → logprob: -11.625016212463379
    3. '[' → logprob: -12.125016212463379
    4. '[S' → logprob: -13.625016212463379
    5. 'j' → logprob: -15.250016212463379
    6. '```' → logprob: -16.500015258789062
    7. '[J' → logprob: -17.000015258789062
    8. '[js' → logprob: -17.875015258789062
    9. '[
' → logprob: -18.250015258789062
    10. '[current' → logprob: -18.250015258789062

Token 87: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5412589907646179
    2. ']' → logprob: -1.0412590503692627
    3. ' in' → logprob: -3.0412590503692627
    4. 'not' → logprob: -4.166258811950684
    5. ' ]' → logprob: -7.416258811950684
    6. ')' → logprob: -7.916258811950684
    7. '<|end|>' → logprob: -8.291258811950684
    8. 'in' → logprob: -8.666258811950684
    9. '<|end|>' → logprob: -9.416258811950684
    10. ' ' → logprob: -9.541258811950684

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4651125371456146
    2. ' not' → logprob: -1.215112566947937
    3. 'in' → logprob: -2.8401124477386475
    4. 'not' → logprob: -4.090112686157227
    5. ' ' → logprob: -10.090112686157227
    6. ')' → logprob: -10.215112686157227
    7. '[' → logprob: -12.215112686157227
    8. '<|end|>' → logprob: -12.215112686157227
    9. ']' → logprob: -12.340112686157227
    10. '   ' → logprob: -13.090112686157227

Token 89: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.06196914613246918
    2. 'seq' → logprob: -2.811969041824341
    3. '(seq' → logprob: -13.936968803405762
    4. ' sequence' → logprob: -15.061968803405762
    5. ' ' → logprob: -15.436968803405762
    6. ' sequ' → logprob: -16.811969757080078
    7. 'Seq' → logprob: -16.936969757080078
    8. 'sequence' → logprob: -17.186969757080078
    9. '_seq' → logprob: -17.561969757080078
    10. '.seq' → logprob: -17.811969757080078

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7059661746025085
    2. ':
' → logprob: -0.7059661746025085
    3. '):
' → logprob: -5.080965995788574
    4. ' and' → logprob: -5.330965995788574
    5. '):' → logprob: -6.705965995788574
    6. ')' → logprob: -8.705965995788574
    7. '       ' → logprob: -9.455965995788574
    8. 'and' → logprob: -10.205965995788574
    9. '<|end|>' → logprob: -10.455965995788574
    10. ' :
' → logprob: -10.580965995788574

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43467316031455994
    2. ':' → logprob: -1.4346731901168823
    3. ' and' → logprob: -2.8096730709075928
    4. '           ' → logprob: -4.434673309326172
    5. ':
' → logprob: -4.434673309326172
    6. ' current' → logprob: -4.809673309326172
    7. '<|end|>' → logprob: -5.059673309326172
    8. ')' → logprob: -5.309673309326172
    9. ' ' → logprob: -6.184673309326172
    10. '                
' → logprob: -6.434673309326172

Token 92: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.009959840215742588
    2. 'current' (adapté à ' current') → logprob: -4.634959697723389
    3. '           ' → logprob: -9.134960174560547
    4. '               ' → logprob: -9.884960174560547
    5. '                   ' → logprob: -10.884960174560547
    6. '	current' → logprob: -11.634960174560547
    7. ' ' → logprob: -11.634960174560547
    8. ',current' → logprob: -13.009960174560547
    9. '                ' → logprob: -13.884960174560547
    10. '[current' → logprob: -14.009960174560547

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.45913806557655334
    2. '+=' → logprob: -1.209138035774231
    3. '+' → logprob: -2.7091381549835205
    4. ' +' → logprob: -5.834137916564941
    5. '+='' → logprob: -9.084137916564941
    6. '<|end|>' → logprob: -10.334137916564941
    7. '+="' → logprob: -10.834137916564941
    8. ']+=' → logprob: -11.209137916564941
    9. '<|end|>' → logprob: -12.334137916564941
    10. '.append' → logprob: -12.584137916564941

Token 94: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.023245595395565033
    2. ' S' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.523244857788086
    4. '   ' → logprob: -17.898244857788086
    5. 's' → logprob: -18.023244857788086
    6. '`' → logprob: -18.148244857788086
    7. ''S' → logprob: -18.523244857788086
    8. '           ' → logprob: -18.773244857788086
    9. '```' → logprob: -19.148244857788086
    10. '	S' → logprob: -19.523244857788086

Token 95: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.625025749206543
    3. 'j' → logprob: -14.500025749206543
    4. '```' → logprob: -15.250025749206543
    5. '[i' → logprob: -16.250024795532227
    6. ' [' → logprob: -16.625024795532227
    7. '[
' → logprob: -17.125024795532227
    8. '[js' → logprob: -17.250024795532227
    9. ' ' → logprob: -17.875024795532227
    10. '[user' → logprob: -18.125024795532227

Token 96: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2023467868566513
    2. ']
' → logprob: -1.7023468017578125
    3. ']
' → logprob: -7.8273468017578125
    4. '']' → logprob: -8.577346801757812
    5. '           ' → logprob: -9.202346801757812
    6. '               ' → logprob: -9.577346801757812
    7. '']
' → logprob: -9.952346801757812
    8. ']

' → logprob: -10.202346801757812
    9. '       ' → logprob: -10.577346801757812
    10. '<|end|>' → logprob: -10.952346801757812

Token 97: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26011666655540466
    2. '           ' → logprob: -1.510116696357727
    3. ' else' → logprob: -5.1351165771484375
    4. '
' → logprob: -7.2601165771484375
    5. 'else' → logprob: -7.3851165771484375
    6. '            
' → logprob: -8.635116577148438
    7. '                
' → logprob: -9.010116577148438
    8. '                   ' → logprob: -9.010116577148438
    9. '       ' → logprob: -9.135116577148438
    10. ',' → logprob: -9.385116577148438

Token 98: ' if' (ID: 538)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.07122313976287842
    2. '               ' → logprob: -3.071223258972168
    3. 'j' → logprob: -3.821223258972168
    4. '                   ' → logprob: -8.821223258972168
    5. '           ' → logprob: -8.946223258972168
    6. '                ' → logprob: -9.321223258972168
    7. '```' → logprob: -10.321223258972168
    8. '	j' → logprob: -10.946223258972168
    9. '   ' → logprob: -11.071223258972168
    10. ' ' → logprob: -11.696223258972168

Token 99: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6516143083572388
    2. ' check' → logprob: -0.7766143083572388
    3. 'check' → logprob: -4.401614189147949
    4. 'not' → logprob: -5.276614189147949
    5. ' len' → logprob: -6.651614189147949
    6. ' current' → logprob: -9.90161418914795
    7. 'len' → logprob: -10.52661418914795
    8. ' j' → logprob: -10.65161418914795
    9. ' ' → logprob: -10.77661418914795
    10. '(check' → logprob: -11.15161418914795

Token 100: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00026741522015072405
    2. '(' → logprob: -8.625267028808594
    3. 'current' → logprob: -9.375267028808594
    4. ' current' → logprob: -13.000267028808594
    5. '	current' → logprob: -15.750267028808594
    6. ' (' → logprob: -16.000267028808594
    7. '(
' → logprob: -16.250267028808594
    8. '$current' → logprob: -16.250267028808594
    9. '=current' → logprob: -16.750267028808594
    10. '(cur' → logprob: -17.125267028808594

Token 101: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07227254658937454
    2. '>' → logprob: -3.072272539138794
    3. ')' → logprob: -4.072272777557373
    4. ' ==' → logprob: -6.447272777557373
    5. ' ' → logprob: -6.572272777557373
    6. ')>' → logprob: -6.947272777557373
    7. ' <=' → logprob: -7.322272777557373
    8. '==' → logprob: -7.822272777557373
    9. ' >=' → logprob: -8.197272300720215
    10. '+' → logprob: -8.197272300720215

Token 102: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08938564360141754
    2. '>' → logprob: -2.464385747909546
    3. ' ' → logprob: -8.464385986328125
    4. '<|end|>' → logprob: -9.339385986328125
    5. ' ==' → logprob: -9.714385986328125
    6. '==' → logprob: -10.964385986328125
    7. ' >
' → logprob: -11.464385986328125
    8. ' >=' → logprob: -11.714385986328125
    9. ' <=' → logprob: -12.214385986328125
    10. '   ' → logprob: -12.464385986328125

Token 103: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00248338864184916
    2. ' res' → logprob: -6.002483367919922
    3. '   ' → logprob: -12.752483367919922
    4. '	res' → logprob: -13.127483367919922
    5. '  ' → logprob: -14.127483367919922
    6. ' ' → logprob: -14.377483367919922
    7. 'len' → logprob: -14.377483367919922
    8. '
' → logprob: -15.127483367919922
    9. '0' → logprob: -15.377483367919922
    10. '1' → logprob: -15.377483367919922

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23398900032043457
    2. ' and' → logprob: -1.6089890003204346
    3. ':
' → logprob: -5.3589887619018555
    4. 'and' → logprob: -6.6089887619018555
    5. '<|end|>' → logprob: -6.9839887619018555
    6. '           ' → logprob: -7.6089887619018555
    7. '                   ' → logprob: -8.233988761901855
    8. '               ' → logprob: -8.608988761901855
    9. '<|end|>' → logprob: -8.608988761901855
    10. ' :' → logprob: -9.233988761901855

Token 105: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07750481367111206
    2. ' res' → logprob: -3.327504873275757
    3. '<|end|>' → logprob: -4.827504634857178
    4. 'res' → logprob: -5.077504634857178
    5. '                       ' → logprob: -5.202504634857178
    6. ' ' → logprob: -5.577504634857178
    7. '                           ' → logprob: -5.702504634857178
    8. '               ' → logprob: -5.827504634857178
    9. '                    ' → logprob: -6.077504634857178
    10. '<|end|>' → logprob: -6.327504634857178

Token 106: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.28056082129478455
    2. '                       ' → logprob: -2.0305607318878174
    3. 'res' (adapté à ' res') → logprob: -2.6555607318878174
    4. '                   ' → logprob: -3.2805607318878174
    5. '                    ' → logprob: -6.2805609703063965
    6. ' ' → logprob: -6.5305609703063965
    7. '               ' → logprob: -7.9055609703063965
    8. '                    
' → logprob: -8.030560493469238
    9. '                           ' → logprob: -8.155560493469238
    10. ' 
' → logprob: -8.655560493469238

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. '＝' → logprob: -16.953889846801758
    5. '=len' → logprob: -17.203889846801758
    6. ',' → logprob: -17.703889846801758
    7. ' =)' → logprob: -17.703889846801758
    8. '<|end|>' → logprob: -17.703889846801758
    9. '=max' → logprob: -19.453889846801758
    10. ' =
' → logprob: -19.578889846801758

Token 108: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.01816187985241413
    2. 'len' → logprob: -4.018161773681641
    3. ' current' → logprob: -12.39316177368164
    4. '(len' → logprob: -12.76816177368164
    5. '[len' → logprob: -13.89316177368164
    6. '	len' → logprob: -14.14316177368164
    7. ' length' → logprob: -14.39316177368164
    8. '                ' → logprob: -14.89316177368164
    9. 'current' → logprob: -14.89316177368164
    10. '                    ' → logprob: -15.39316177368164

Token 109: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0012113067787140608
    2. '(' → logprob: -6.751211166381836
    3. 'current' → logprob: -10.126211166381836
    4. '(
' → logprob: -15.126211166381836
    5. '	current' → logprob: -15.626211166381836
    6. '(cur' → logprob: -16.001211166381836
    7. ' current' → logprob: -16.001211166381836
    8. '$current' → logprob: -16.126211166381836
    9. '(curr' → logprob: -16.251211166381836
    10. ' (' → logprob: -16.251211166381836

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11823632568120956
    2. ')
' → logprob: -2.2432363033294678
    3. '               ' → logprob: -5.618236541748047
    4. ')
' → logprob: -6.493236541748047
    5. ')

' → logprob: -9.243236541748047
    6. '           ' → logprob: -9.868236541748047
    7. '       ' → logprob: -10.868236541748047
    8. '                   ' → logprob: -10.993236541748047
    9. ' )' → logprob: -11.243236541748047
    10. ' )
' → logprob: -11.743236541748047

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04539621248841286
    2. '
' → logprob: -3.920396327972412
    3. '           ' → logprob: -4.795396327972412
    4. '                
' → logprob: -4.920396327972412
    5. '                   ' → logprob: -6.045396327972412
    6. ' else' → logprob: -6.545396327972412
    7. '            
' → logprob: -7.295396327972412
    8. '                    
' → logprob: -7.295396327972412
    9. '                ' → logprob: -7.420396327972412
    10. ' 
' → logprob: -7.670396327972412

Token 112: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.9373893141746521
    2. '               ' → logprob: -1.0623893737792969
    3. '           ' → logprob: -1.9373893737792969
    4. 'j' (adapté à ' j') → logprob: -2.187389373779297
    5. '                   ' → logprob: -5.937389373779297
    6. ' else' → logprob: -6.187389373779297
    7. '   ' → logprob: -7.687389373779297
    8. 'else' → logprob: -7.687389373779297
    9. '       ' → logprob: -8.062389373779297
    10. '                ' → logprob: -9.312389373779297

Token 113: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.041980210691690445
    2. ' +=' → logprob: -3.291980266571045
    3. '+' → logprob: -5.541980266571045
    4. '++' → logprob: -12.291979789733887
    5. '=' → logprob: -12.541979789733887
    6. ']+=' → logprob: -13.791979789733887
    7. '```' → logprob: -14.041979789733887
    8. '   ' → logprob: -14.166979789733887
    9. ')' → logprob: -14.541979789733887
    10. ' +' → logprob: -14.916979789733887

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -16.12510871887207
    4. '   ' → logprob: -16.75010871887207
    5. '  ' → logprob: -19.37510871887207
    6. '１' → logprob: -19.37510871887207
    7. '<|end|>' → logprob: -19.37510871887207
    8. '
' → logprob: -20.56260871887207
    9. '۱' → logprob: -20.56260871887207
    10. '`' → logprob: -21.00010871887207

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.2500057220459
    4. '   ' → logprob: -17.5000057220459
    5. '  ' → logprob: -19.2500057220459
    6. '１' → logprob: -19.6875057220459
    7. '<|end|>' → logprob: -20.4375057220459
    8. '۱' → logprob: -20.5625057220459
    9. '
' → logprob: -20.7500057220459
    10. '१' → logprob: -20.7500057220459

Token 116: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034892551600933075
    2. 'else' → logprob: -3.6598925590515137
    3. ' else' → logprob: -5.034892559051514
    4. '       ' → logprob: -6.409892559051514
    5. '               ' → logprob: -7.909892559051514
    6. '   ' → logprob: -11.409892082214355
    7. 'except' → logprob: -11.409892082214355
    8. ' ' → logprob: -13.284892082214355
    9. 'elif' → logprob: -13.284892082214355
    10. '          ' → logprob: -13.284892082214355

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4919402599334717
    2. 'else' → logprob: -0.9919402599334717
    3. ' else' → logprob: -4.116940498352051
    4. '               ' → logprob: -6.616940498352051
    5. '       ' → logprob: -9.86694049835205
    6. 'except' → logprob: -11.61694049835205
    7. '	else' → logprob: -12.61694049835205
    8. 'elif' → logprob: -12.99194049835205
    9. '```' → logprob: -13.11694049835205
    10. '   ' → logprob: -13.61694049835205

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.032185401767492294
    2. ' else' → logprob: -3.5321853160858154
    3. '       ' → logprob: -6.0321855545043945
    4. '               ' → logprob: -11.282185554504395
    5. 'except' → logprob: -11.407185554504395
    6. '           ' → logprob: -12.532185554504395
    7. '   ' → logprob: -13.282185554504395
    8. '	else' → logprob: -13.657185554504395
    9. 'elif' → logprob: -13.657185554504395
    10. ' except' → logprob: -16.407184600830078

Token 119: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13011391460895538
    2. ':' → logprob: -2.1301138401031494
    3. ':
' → logprob: -6.3801140785217285
    4. '       ' → logprob: -8.00511360168457
    5. '           ' → logprob: -8.38011360168457
    6. ' break' → logprob: -8.63011360168457
    7. '<|end|>' → logprob: -8.63011360168457
    8. '	break' → logprob: -9.00511360168457
    9. ' :' → logprob: -9.63011360168457
    10. 'break' → logprob: -9.63011360168457

Token 120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049760278314352036
    2. 'break' → logprob: -3.549760341644287
    3. ' break' → logprob: -3.924760341644287
    4. '	break' → logprob: -10.174759864807129
    5. '           ' → logprob: -11.674759864807129
    6. '   ' → logprob: -12.424759864807129
    7. '       ' → logprob: -12.799759864807129
    8. ' ' → logprob: -12.799759864807129
    9. '                   ' → logprob: -12.924759864807129
    10. '              ' → logprob: -13.174759864807129

Token 121: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5928549766540527
    2. 'break' (adapté à ' break') → logprob: -0.8428549766540527
    3. '               ' → logprob: -4.092854976654053
    4. '	break' → logprob: -9.592855453491211
    5. '                   ' → logprob: -12.467855453491211
    6. ' ' → logprob: -12.592855453491211
    7. '   ' → logprob: -12.717855453491211
    8. '           ' → logprob: -13.342855453491211
    9. '       ' → logprob: -14.967855453491211
    10. '_break' → logprob: -14.967855453491211

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06910885125398636
    2. 'except' → logprob: -3.0691089630126953
    3. ' except' → logprob: -4.819108963012695
    4. '
' → logprob: -5.069108963012695
    5. '<|end|>' → logprob: -5.569108963012695
    6. '	except' → logprob: -6.569108963012695
    7. ')' → logprob: -8.194108963012695
    8. '<|end|>' → logprob: -9.194108963012695
    9. 'Except' → logprob: -9.444108963012695
    10. ',' → logprob: -9.819108963012695

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03260674700140953
    2. 'except' → logprob: -3.657606840133667
    3. ' except' → logprob: -5.282606601715088
    4. '	except' → logprob: -7.032606601715088
    5. '<|end|>' → logprob: -8.657607078552246
    6. ')' → logprob: -9.907607078552246
    7. 'Except' → logprob: -10.407607078552246
    8. '```' → logprob: -10.532607078552246
    9. '           ' → logprob: -12.157607078552246
    10. ' ' → logprob: -12.157607078552246

Token 124: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6220308542251587
    2. 'except' (adapté à ' except') → logprob: -0.8720308542251587
    3. ' except' → logprob: -3.122030735015869
    4. '	except' → logprob: -7.122030735015869
    5. '   ' → logprob: -8.872031211853027
    6. 'j' → logprob: -11.497031211853027
    7. '           ' → logprob: -11.622031211853027
    8. ',' → logprob: -13.122031211853027
    9. ')' → logprob: -13.872031211853027
    10. '}catch' → logprob: -13.872031211853027

Token 125: ':
' (ID: 734)
  Prédit: 'Index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.000926826149225235
    2. ' Index' → logprob: -7.000926971435547
    3. '(Index' → logprob: -11.125926971435547
    4. '[Index' → logprob: -14.875926971435547
    5. '_Index' → logprob: -16.125926971435547
    6. '_index' → logprob: -16.875926971435547
    7. 'Indexer' → logprob: -17.750926971435547
    8. ' ' → logprob: -18.875926971435547
    9. '
' → logprob: -18.875926971435547
    10. 'Indent' → logprob: -19.125926971435547

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20619377493858337
    2. ' break' → logprob: -1.8311938047409058
    3. '       ' → logprob: -4.331193923950195
    4. 'break' → logprob: -4.581193923950195
    5. '               ' → logprob: -6.706193923950195
    6. '   ' → logprob: -7.331193923950195
    7. 'Index' → logprob: -8.081193923950195
    8. ' Index' → logprob: -8.206193923950195
    9. '	break' → logprob: -9.081193923950195
    10. ' ' → logprob: -9.581193923950195

Token 127: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.003186267102137208
    2. ' break' → logprob: -5.753186225891113
    3. '           ' → logprob: -12.128186225891113
    4. '   ' → logprob: -13.378186225891113
    5. '	break' → logprob: -14.128186225891113
    6. 'Break' → logprob: -14.878186225891113
    7. '       ' → logprob: -15.128186225891113
    8. 'BREAK' → logprob: -16.62818717956543
    9. '```' → logprob: -16.75318717956543
    10. 'b' → logprob: -17.37818717956543

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020342117932159454
    2. '
' → logprob: -9.625203132629395
    3. 'i' → logprob: -9.750203132629395
    4. '       ' → logprob: -10.125203132629395
    5. ' i' → logprob: -11.375203132629395
    6. ')' → logprob: -12.000203132629395
    7. '<|end|>' → logprob: -12.375203132629395
    8. '    
' → logprob: -12.500203132629395
    9. '+' → logprob: -13.125203132629395
    10. '[i' → logprob: -13.500203132629395

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011892046313732862
    2. '       ' → logprob: -9.87511920928955
    3. 'i' → logprob: -10.00011920928955
    4. ' i' → logprob: -12.00011920928955
    5. '
' → logprob: -12.12511920928955
    6. 'print' → logprob: -13.37511920928955
    7. '           ' → logprob: -13.37511920928955
    8. '<|end|>' → logprob: -13.50011920928955
    9. ')' → logprob: -13.62511920928955
    10. '    
' → logprob: -14.12511920928955

Token 130: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5765586495399475
    2. 'i' (adapté à ' i') → logprob: -0.8265586495399475
    3. ' i' → logprob: -7.451558589935303
    4. '       ' → logprob: -10.576559066772461
    5. '	i' → logprob: -12.701559066772461
    6. '```' → logprob: -12.826559066772461
    7. '
' → logprob: -13.826559066772461
    8. ' ' → logprob: -13.826559066772461
    9. '[i' → logprob: -13.951559066772461
    10. 'print' → logprob: -14.076559066772461

Token 131: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.01579819805920124
    2. ' +=' → logprob: -4.515798091888428
    3. '=' → logprob: -5.515798091888428
    4. '+' → logprob: -7.265798091888428
    5. ' =' → logprob: -11.015798568725586
    6. '+='' → logprob: -15.140798568725586
    7. '+="' → logprob: -15.640798568725586
    8. '++' → logprob: -15.640798568725586
    9. '<|end|>' → logprob: -16.015798568725586
    10. ')' → logprob: -16.640798568725586

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004900033236481249
    2. ' ' → logprob: -7.625490188598633
    3. 'res' → logprob: -13.250490188598633
    4. 'current' → logprob: -16.000490188598633
    5. 'len' → logprob: -16.625490188598633
    6. 'max' → logprob: -17.750490188598633
    7. '0' → logprob: -17.812990188598633
    8. '   ' → logprob: -18.437990188598633
    9. '(res' → logprob: -18.687990188598633
    10. '```' → logprob: -18.750490188598633

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'res' → logprob: -14.500015258789062
    4. 'current' → logprob: -16.125015258789062
    5. 'len' → logprob: -17.375015258789062
    6. 'max' → logprob: -18.250015258789062
    7. '１' → logprob: -19.125015258789062
    8. '```' → logprob: -19.562515258789062
    9. '   ' → logprob: -19.687515258789062
    10. '0' → logprob: -19.937515258789062

Token 134: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010193390771746635
    2. '
' → logprob: -4.635193347930908
    3. ' print' → logprob: -8.385193824768066
    4. ')' → logprob: -9.385193824768066
    5. '<|end|>' → logprob: -9.510193824768066
    6. '```' → logprob: -10.760193824768066
    7. '#' → logprob: -11.635193824768066
    8. '#print' → logprob: -12.385193824768066
    9. ')
' → logprob: -12.510193824768066
    10. '  
' → logprob: -12.885193824768066

Token 135: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8624639324116288e-06
    2. ' print' → logprob: -13.875001907348633
    3. '
' → logprob: -15.000001907348633
    4. '#print' → logprob: -16.000001907348633
    5. 'pr' → logprob: -16.375001907348633
    6. 'if' → logprob: -16.500001907348633
    7. '#' → logprob: -16.625001907348633
    8. '```' → logprob: -16.750001907348633
    9. 'i' → logprob: -16.875001907348633
    10. ')' → logprob: -18.125001907348633

Token 136: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.023256074637174606
    2. '(' → logprob: -3.7732560634613037
    3. '(max' → logprob: -11.773256301879883
    4. '(len' → logprob: -13.773256301879883
    5. '('' → logprob: -14.648256301879883
    6. '()' → logprob: -14.773256301879883
    7. 'res' → logprob: -14.773256301879883
    8. ' (' → logprob: -15.148256301879883
    9. '(result' → logprob: -16.523256301879883
    10. '(
' → logprob: -16.898256301879883

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.375000953674316
    3. ')`' → logprob: -15.500000953674316
    4. '()' → logprob: -16.75
    5. ')
' → logprob: -16.75
    6. '`)' → logprob: -16.875
    7. '))' → logprob: -17.125
    8. '')' → logprob: -18.0
    9. '+' → logprob: -18.125
    10. '())' → logprob: -18.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 135
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 44.44%
Précision adaptée (1ère position): 48.89%
Précision (top 10): 84.44%
================================================================================
