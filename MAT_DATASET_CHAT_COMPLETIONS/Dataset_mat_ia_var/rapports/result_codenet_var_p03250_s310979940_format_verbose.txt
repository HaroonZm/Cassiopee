================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_strings_list = list(map(str, input().split()))

input_strings_list.sort(reverse=True)

largest_string = str(input_strings_list[0])
second_largest_string = str(input_strings_list[1])

concatenated_largest_strings = largest_string + second_largest_string

concatenated_number = int(concatenated_largest_strings)

smallest_number = int(input_strings_list[2])

final_sum = concatenated_number + smallest_number

print(final_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_strings' (ID: 87251)
  → Token d'amorce (pas de prédiction)

Token 2: '_list' (ID: 4162)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18253709375858307
    2. '.' → logprob: -1.8075370788574219
    3. '_' → logprob: -6.807537078857422
    4. '=' → logprob: -7.057537078857422
    5. ' =' → logprob: -8.307537078857422
    6. '```' → logprob: -8.682537078857422
    7. '\[' → logprob: -9.682537078857422
    8. '[]' → logprob: -9.932537078857422
    9. '[
' → logprob: -10.057537078857422
    10. '[:]' → logprob: -10.182537078857422

Token 4: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6252820491790771
    2. ' [' → logprob: -1.5002820491790771
    3. ' []' → logprob: -1.5002820491790771
    4. '[]' → logprob: -4.625282287597656
    5. ' ' → logprob: -5.000282287597656
    6. ' ['' → logprob: -7.125282287597656
    7. ' ["' → logprob: -7.750282287597656
    8. '['' → logprob: -8.125282287597656
    9. '["' → logprob: -8.375282287597656
    10. ' [
' → logprob: -8.500282287597656

Token 5: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06748184561729431
    2. '[' → logprob: -2.817481756210327
    3. '```' → logprob: -6.692481994628906
    4. '[input' → logprob: -6.817481994628906
    5. '(input' → logprob: -7.067481994628906
    6. ')' → logprob: -7.192481994628906
    7. '[(' → logprob: -7.942481994628906
    8. '(
' → logprob: -8.442481994628906
    9. '[
' → logprob: -8.567481994628906
    10. ' (' → logprob: -9.692481994628906

Token 6: '(str' (ID: 7946)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4328788220882416
    2. '(' → logprob: -1.307878851890564
    3. '(str' → logprob: -2.5578787326812744
    4. '(int' → logprob: -6.3078789710998535
    5. '(eval' → logprob: -7.1828789710998535
    6. '(input' → logprob: -7.6828789710998535
    7. ')' → logprob: -8.807878494262695
    8. '(
' → logprob: -9.682878494262695
    9. '(open' → logprob: -10.682878494262695
    10. 'lambda' → logprob: -10.807878494262695

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2267664521932602
    2. '(input' → logprob: -2.351766347885132
    3. ',' → logprob: -2.851766347885132
    4. '))' → logprob: -3.851766347885132
    5. ')' → logprob: -4.476766586303711
    6. ',input' → logprob: -4.976766586303711
    7. ')))' → logprob: -6.351766586303711
    8. '_input' → logprob: -6.351766586303711
    9. 'input' → logprob: -6.851766586303711
    10. '(token' → logprob: -6.851766586303711

Token 8: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13087765872478485
    2. ' input' → logprob: -2.130877733230591
    3. 'range' → logprob: -6.755877494812012
    4. 'user' → logprob: -7.005877494812012
    5. '(input' → logprob: -7.630877494812012
    6. ' range' → logprob: -7.880877494812012
    7. '[input' → logprob: -8.005877494812012
    8. ' user' → logprob: -8.755877494812012
    9. ')' → logprob: -9.130877494812012
    10. 'data' → logprob: -9.255877494812012

Token 9: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3852553069591522
    2. 's' → logprob: -1.3852553367614746
    3. '()))' → logprob: -3.5102553367614746
    4. '))' → logprob: -4.260255336761475
    5. '(()' → logprob: -5.260255336761475
    6. '()' → logprob: -6.010255336761475
    7. '_' → logprob: -6.135255336761475
    8. ')))' → logprob: -6.260255336761475
    9. '_input' → logprob: -6.385255336761475
    10. '_strings' → logprob: -6.385255336761475

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0016404271591454744
    2. 'strip' → logprob: -6.501640319824219
    3. 'rstrip' → logprob: -9.376640319824219
    4. ' split' → logprob: -10.001640319824219
    5. ')' → logprob: -12.001640319824219
    6. '(split' → logprob: -14.126640319824219
    7. 'spl' → logprob: -15.001640319824219
    8. 'replace' → logprob: -15.376640319824219
    9. '.split' → logprob: -15.626640319824219
    10. ' strip' → logprob: -16.00164031982422

Token 11: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.392536461353302
    2. '(' → logprob: -1.3925364017486572
    3. '()' → logprob: -3.3925364017486572
    4. '))' → logprob: -3.6425364017486572
    5. '())))' → logprob: -4.767536640167236
    6. '())' → logprob: -5.517536640167236
    7. ')))' → logprob: -6.142536640167236
    8. ')' → logprob: -7.892536640167236
    9. '()));' → logprob: -7.892536640167236
    10. '(()' → logprob: -8.142536163330078

Token 12: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9486437439918518
    2. '[' → logprob: -1.073643684387207
    3. '.' → logprob: -1.323643684387207
    4. '```' → logprob: -6.573643684387207
    5. '.)' → logprob: -7.198643684387207
    6. '+' → logprob: -7.698643684387207
    7. '\n' → logprob: -8.323643684387207
    8. '\' → logprob: -8.448643684387207
    9. '(' → logprob: -8.573643684387207
    10. '.append' → logprob: -8.823643684387207

Token 13: '_strings' (ID: 87251)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03428821265697479
    2. '[' → logprob: -4.53428840637207
    3. '()' → logprob: -4.78428840637207
    4. '('' → logprob: -4.78428840637207
    5. ''' → logprob: -6.03428840637207
    6. '_' → logprob: -7.03428840637207
    7. '("("' → logprob: -7.53428840637207
    8. '```' → logprob: -7.65928840637207
    9. '"' → logprob: -8.03428840637207
    10. ')' → logprob: -8.15928840637207

Token 14: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.33012184500694275
    2. '_strings' → logprob: -2.2051217555999756
    3. '[' → logprob: -2.5801217555999756
    4. '_' → logprob: -2.7051217555999756
    5. ')_' → logprob: -5.330121994018555
    6. '_lists' → logprob: -5.455121994018555
    7. '[_' → logprob: -5.705121994018555
    8. '```' → logprob: -5.830121994018555
    9. ')' → logprob: -6.080121994018555
    10. '_lines' → logprob: -6.830121994018555

Token 15: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09608873724937439
    2. '```' → logprob: -3.3460886478424072
    3. '.' → logprob: -3.4710886478424072
    4. '<|end|>' → logprob: -4.096088886260986
    5. '[:]' → logprob: -6.346088886260986
    6. ')' → logprob: -6.596088886260986
    7. '[
' → logprob: -6.596088886260986
    8. '#' → logprob: -7.346088886260986
    9. '\[' → logprob: -7.471088886260986
    10. '<|end|>' → logprob: -7.721088886260986

Token 16: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6330245137214661
    2. '(' → logprob: -0.7580245137214661
    3. '(`' → logprob: -9.758024215698242
    4. '().' → logprob: -9.883024215698242
    5. '()`' → logprob: -10.008024215698242
    6. '```' → logprob: -10.008024215698242
    7. '("("' → logprob: -10.883024215698242
    8. '`()' → logprob: -11.008024215698242
    9. '('' → logprob: -11.133024215698242
    10. '((' → logprob: -11.133024215698242

Token 17: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.3986111283302307
    2. '=' → logprob: -1.148611068725586
    3. ')' → logprob: -4.773611068725586
    4. '(' → logprob: -7.023611068725586
    5. '))' → logprob: -7.023611068725586
    6. '=False' → logprob: -7.273611068725586
    7. ')=' → logprob: -8.148611068725586
    8. '(True' → logprob: -9.023611068725586
    9. '())' → logprob: -9.273611068725586
    10. '()' → logprob: -9.398611068725586

Token 18: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868764638900757
    2. '))' → logprob: -1.1368764638900757
    3. ')))' → logprob: -13.636876106262207
    4. ')
' → logprob: -14.011876106262207
    5. ')`' → logprob: -14.136876106262207
    6. '),' → logprob: -14.386876106262207
    7. '[' → logprob: -14.636876106262207
    8. '`)' → logprob: -14.886876106262207
    9. '])' → logprob: -15.511876106262207
    10. '()' → logprob: -15.511876106262207

Token 19: 'largest' (ID: 191832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17211800813674927
    2. '[' → logprob: -1.9221179485321045
    3. '#' → logprob: -5.547118186950684
    4. ')' → logprob: -6.047118186950684
    5. '<|end|>' → logprob: -6.172118186950684
    6. 'for' → logprob: -6.422118186950684
    7. '[
' → logprob: -7.172118186950684
    8. '.' → logprob: -8.297118186950684
    9. 'output' → logprob: -8.672118186950684
    10. '```' → logprob: -8.922118186950684

Token 20: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010834212880581617
    2. '_string' → logprob: -7.5010833740234375
    3. '_number' → logprob: -9.126083374023438
    4. '_concat' → logprob: -9.126083374023438
    5. '_token' → logprob: -9.876083374023438
    6. '<|end|>' → logprob: -10.001083374023438
    7. '_value' → logprob: -10.626083374023438
    8. '_con' → logprob: -10.751083374023438
    9. '_val' → logprob: -11.001083374023438
    10. '_key' → logprob: -11.501083374023438

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13294069468975067
    2. ' =' → logprob: -3.0079407691955566
    3. '_' → logprob: -3.3829407691955566
    4. '<|end|>' → logprob: -3.8829407691955566
    5. '+=' → logprob: -4.632940769195557
    6. '+' → logprob: -5.132940769195557
    7. ' +=' → logprob: -5.757940769195557
    8. '+='' → logprob: -7.757940769195557
    9. '_=' → logprob: -8.257940292358398
    10. '```' → logprob: -9.007940292358398

Token 22: ' str' (ID: 989)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2916623055934906
    2. '''.' → logprob: -1.666662335395813
    3. ' input' → logprob: -3.1666622161865234
    4. '''' → logprob: -4.916662216186523
    5. '"' → logprob: -5.041662216186523
    6. ' ''.' → logprob: -5.291662216186523
    7. '""' → logprob: -6.166662216186523
    8. ' "".' → logprob: -7.041662216186523
    9. ''' → logprob: -8.916662216186523
    10. ' ''' → logprob: -12.166662216186523

Token 23: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7043968439102173
    2. 'input' → logprob: -1.7043968439102173
    3. '(max' → logprob: -1.9543968439102173
    4. 'largest' → logprob: -3.0793967247009277
    5. '(input' → logprob: -3.2043967247009277
    6. '('' → logprob: -3.4543967247009277
    7. '(' → logprob: -3.8293967247009277
    8. '().' → logprob: -3.9543967247009277
    9. 'max' → logprob: -5.079396724700928
    10. '("")' → logprob: -5.454396724700928

Token 24: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -10.875062942504883
    3. 'Strings' → logprob: -11.000062942504883
    4. 'strings' → logprob: -11.625062942504883
    5. 's' → logprob: -12.625062942504883
    6. '(strings' → logprob: -13.000062942504883
    7. '('' → logprob: -13.500062942504883
    8. '())' → logprob: -13.500062942504883
    9. '(""))' → logprob: -13.625062942504883
    10. '_string' → logprob: -13.625062942504883

Token 25: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011754630832001567
    2. '_strings' → logprob: -6.751175403594971
    3. ')_' → logprob: -13.251175880432129
    4. '_lists' → logprob: -13.251175880432129
    5. '_string' → logprob: -13.501175880432129
    6. 'List' → logprob: -16.126174926757812
    7. '```' → logprob: -16.626174926757812
    8. '_str' → logprob: -16.626174926757812
    9. '_l' → logprob: -17.376174926757812
    10. '_lst' → logprob: -17.501174926757812

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00047595196519978344
    2. ')' → logprob: -7.750475883483887
    3. '[-' → logprob: -10.500475883483887
    4. ')[' → logprob: -13.000475883483887
    5. '   ' → logprob: -13.125475883483887
    6. '[
' → logprob: -13.125475883483887
    7. '```' → logprob: -13.250475883483887
    8. '[max' → logprob: -13.375475883483887
    9. '[j' → logprob: -13.625475883483887
    10. '[int' → logprob: -13.875475883483887

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. ')' → logprob: -15.687501907348633
    4. '1' → logprob: -17.187501907348633
    5. '```' → logprob: -17.875001907348633
    6. '00' → logprob: -17.937501907348633
    7. '۰' → logprob: -18.250001907348633
    8. '[' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.687501907348633
    10. '  ' → logprob: -19.062501907348633

Token 28: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02505057491362095
    2. ')' → logprob: -4.025050640106201
    3. ']' → logprob: -5.025050640106201
    4. ')])' → logprob: -8.900050163269043
    5. ' ])' → logprob: -10.025050163269043
    6. ']+' → logprob: -10.025050163269043
    7. ']))' → logprob: -10.525050163269043
    8. ''])' → logprob: -11.650050163269043
    9. '+' → logprob: -11.775050163269043
    10. '))' → logprob: -12.025050163269043

Token 29: 'second' (ID: 13901)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07049062103033066
    2. '[' → logprob: -3.070490598678589
    3. '.' → logprob: -4.570490837097168
    4. '<|end|>' → logprob: -4.820490837097168
    5. ')' → logprob: -7.320490837097168
    6. ' ' → logprob: -7.695490837097168
    7. '#' → logprob: -7.820490837097168
    8. '(' → logprob: -8.195490837097168
    9. '```' → logprob: -8.445490837097168
    10. '0' → logprob: -8.820490837097168

Token 30: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3463875353336334
    2. '_string' → logprob: -1.471387505531311
    3. '_l' → logprob: -2.8463876247406006
    4. '_best' → logprob: -6.4713873863220215
    5. '_strings' → logprob: -7.3463873863220215
    6. '_str' → logprob: -7.4713873863220215
    7. '_s' → logprob: -7.9713873863220215
    8. '_m' → logprob: -8.34638786315918
    9. '_large' → logprob: -8.34638786315918
    10. '_value' → logprob: -8.84638786315918

Token 31: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.0018144060159102082
    2. 'arg' → logprob: -7.376814365386963
    3. 'gest' → logprob: -8.251814842224121
    4. 'ist' → logprob: -8.751814842224121
    5. 'arge' → logprob: -8.751814842224121
    6. 'arget' → logprob: -8.751814842224121
    7. '_arg' → logprob: -8.876814842224121
    8. 'est' → logprob: -9.751814842224121
    9. 'ar' → logprob: -9.876814842224121
    10. '=' → logprob: -10.001814842224121

Token 32: '_string' (ID: 8609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1026349812746048
    2. '_string' → logprob: -2.352634906768799
    3. '=' → logprob: -6.727634906768799
    4. '_str' → logprob: -7.852634906768799
    5. ' =' → logprob: -7.977634906768799
    6. '=_' → logprob: -9.102635383605957
    7. ' _' → logprob: -9.352635383605957
    8. '_space' → logprob: -9.477635383605957
    9. '_strings' → logprob: -9.852635383605957
    10. '_=' → logprob: -9.977635383605957

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062325041741132736
    2. '=' → logprob: -2.8123250007629395
    3. '_' → logprob: -8.062325477600098
    4. ' ==' → logprob: -10.687325477600098
    5. ')' → logprob: -12.312325477600098
    6. ' ' → logprob: -12.437325477600098
    7. 'space' → logprob: -13.187325477600098
    8. '==' → logprob: -13.687325477600098
    9. '>' → logprob: -13.687325477600098
    10. '.' → logprob: -14.062325477600098

Token 34: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.20195293426513672
    2. 'str' → logprob: -1.7019529342651367
    3. ' input' → logprob: -8.576952934265137
    4. ''' → logprob: -8.701952934265137
    5. 'input' → logprob: -8.826952934265137
    6. '(str' → logprob: -11.576952934265137
    7. ' ' → logprob: -12.201952934265137
    8. ' '' → logprob: -12.201952934265137
    9. '=str' → logprob: -12.701952934265137
    10. 's' → logprob: -12.951952934265137

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019291093340143561
    2. '(' → logprob: -6.25192928314209
    3. ' (' → logprob: -15.12692928314209
    4. 'input' → logprob: -16.001928329467773
    5. '('' → logprob: -17.626928329467773
    6. '((' → logprob: -18.126928329467773
    7. '(
' → logprob: -18.251928329467773
    8. ' input' → logprob: -18.251928329467773
    9. '(output' → logprob: -18.501928329467773
    10. '(open' → logprob: -18.626928329467773

Token 36: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -1.9623810658231378e-05
    2. '_string' → logprob: -12.125020027160645
    3. '_' → logprob: -12.750020027160645
    4. '_s' → logprob: -13.125020027160645
    5. 'Strings' → logprob: -13.125020027160645
    6. '(' → logprob: -13.250020027160645
    7. 'strings' → logprob: -13.625020027160645
    8. '```' → logprob: -13.875020027160645
    9. '(_' → logprob: -14.125020027160645
    10. '_tokens' → logprob: -14.375020027160645

Token 37: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -10.750025749206543
    3. '_l' → logprob: -12.750025749206543
    4. 'list' → logprob: -14.375025749206543
    5. '_lists' → logprob: -16.125024795532227
    6. '[_' → logprob: -16.250024795532227
    7. '_' → logprob: -16.375024795532227
    8. 'List' → logprob: -17.250024795532227
    9. ')_' → logprob: -17.750024795532227
    10. '_lst' → logprob: -18.125024795532227

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ')[' → logprob: -16.25
    3. ')' → logprob: -16.5
    4. ' [' → logprob: -16.875
    5. '[
' → logprob: -17.25
    6. '```' → logprob: -17.25
    7. '[-' → logprob: -17.875
    8. '1' → logprob: -18.625
    9. ']' → logprob: -19.125
    10. '][' → logprob: -19.5

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.375000953674316
    4. ']' → logprob: -15.500000953674316
    5. '])' → logprob: -16.000001907348633
    6. '0' → logprob: -16.375001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '2' → logprob: -16.875001907348633
    9. '```' → logprob: -17.062501907348633
    10. '-' → logprob: -18.125001907348633

Token 40: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6703628301620483
    2. ')' → logprob: -0.9203628301620483
    3. ']' → logprob: -2.420362949371338
    4. ')])' → logprob: -7.420362949371338
    5. ')]' → logprob: -7.920362949371338
    6. '[' → logprob: -9.29536247253418
    7. '])]' → logprob: -9.79536247253418
    8. ']))' → logprob: -9.79536247253418
    9. ''])' → logprob: -11.42036247253418
    10. '）' → logprob: -11.79536247253418

Token 41: 'conc' (ID: 50621)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038585759699344635
    2. '.' → logprob: -4.163585662841797
    3. '#' → logprob: -4.913585662841797
    4. '[' → logprob: -4.913585662841797
    5. '=' → logprob: -6.038585662841797
    6. '+
' → logprob: -6.663585662841797
    7. ')' → logprob: -6.913585662841797
    8. '<|end|>' → logprob: -7.163585662841797
    9. '
' → logprob: -7.663585662841797
    10. ',' → logprob: -8.288585662841797

Token 42: 'aten' (ID: 5819)
  Prédit: 'atenate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atenate' → logprob: -0.0867810994386673
    2. 'at' → logprob: -2.8367810249328613
    3. 'aten' → logprob: -3.7117810249328613
    4. 'ate' → logprob: -10.21178150177002
    5. '```' → logprob: -11.08678150177002
    6. 'ат' → logprob: -11.96178150177002
    7. 'atten' → logprob: -12.83678150177002
    8. 'ats' → logprob: -12.83678150177002
    9. 'atern' → logprob: -12.96178150177002
    10. 'a' → logprob: -13.58678150177002

Token 43: 'ated' (ID: 780)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00015574338613077998
    2. 'at' → logprob: -9.000155448913574
    3. 'a' → logprob: -10.500155448913574
    4. 'atenate' → logprob: -13.375155448913574
    5. 'ation' → logprob: -13.625155448913574
    6. '```' → logprob: -14.375155448913574
    7. ' ate' → logprob: -14.500155448913574
    8. 'aten' → logprob: -15.125155448913574
    9. 'ате' → logprob: -15.375155448913574
    10. '+' → logprob: -16.37515640258789

Token 44: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013993187807500362
    2. '_string' → logprob: -4.388993263244629
    3. '=' → logprob: -6.763993263244629
    4. '_strings' → logprob: -8.888993263244629
    5. ' =' → logprob: -9.388993263244629
    6. '_str' → logprob: -10.263993263244629
    7. '_output' → logprob: -11.013993263244629
    8. '_=' → logprob: -11.763993263244629
    9. '_result' → logprob: -11.888993263244629
    10. '_concat' → logprob: -12.638993263244629

Token 45: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.00672566844150424
    2. 'ist' → logprob: -5.881725788116455
    3. 'arg' → logprob: -6.631725788116455
    4. 'ar' → logprob: -7.131725788116455
    5. 'arget' → logprob: -7.256725788116455
    6. 'arge' → logprob: -7.881725788116455
    7. 'string' → logprob: -8.756725311279297
    8. 'arger' → logprob: -9.006725311279297
    9. 'atest' → logprob: -9.506725311279297
    10. 'arges' → logprob: -9.631725311279297

Token 46: '_strings' (ID: 87251)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05260474979877472
    2. '_string' → logprob: -3.0526046752929688
    3. '+' → logprob: -5.927604675292969
    4. '_strings' → logprob: -7.802604675292969
    5. '_str' → logprob: -8.052604675292969
    6. '_con' → logprob: -8.802604675292969
    7. '_concat' → logprob: -9.552604675292969
    8. '=' → logprob: -9.677604675292969
    9. '_l' → logprob: -9.927604675292969
    10. '_s' → logprob: -10.302604675292969

Token 47: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04089300334453583
    2. ' +' → logprob: -3.915893077850342
    3. '=' → logprob: -4.790893077850342
    4. ' +=' → logprob: -5.540893077850342
    5. '+=' → logprob: -5.665893077850342
    6. ' =' → logprob: -6.040893077850342
    7. '_' → logprob: -6.665893077850342
    8. '[' → logprob: -7.415893077850342
    9. ')' → logprob: -10.040892601013184
    10. '+='' → logprob: -10.415892601013184

Token 48: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.2811928391456604
    2. 'largest' → logprob: -1.4061927795410156
    3. ' large' → logprob: -11.531192779541016
    4. ' str' → logprob: -11.781192779541016
    5. 'large' → logprob: -12.031192779541016
    6. 'str' → logprob: -12.156192779541016
    7. 'l' → logprob: -13.031192779541016
    8. '(l' → logprob: -13.531192779541016
    9. ' ' → logprob: -13.656192779541016
    10. '(' → logprob: -13.656192779541016

Token 49: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -2.6656825866666622e-05
    2. '_' → logprob: -11.00002670288086
    3. '_strings' → logprob: -11.62502670288086
    4. '_str' → logprob: -14.50002670288086
    5. 'string' → logprob: -14.87502670288086
    6. '_s' → logprob: -17.12502670288086
    7. '_String' → logprob: -17.87502670288086
    8. '_l' → logprob: -18.12502670288086
    9. '_concat' → logprob: -18.12502670288086
    10. 'String' → logprob: -18.25002670288086

Token 50: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.319370302458992e-06
    2. ' +' → logprob: -12.250005722045898
    3. 'second' → logprob: -15.125005722045898
    4. '+
' → logprob: -15.500005722045898
    5. '```' → logprob: -17.3750057220459
    6. '+

' → logprob: -17.6250057220459
    7. '+=' → logprob: -18.0000057220459
    8. '"+"' → logprob: -18.2500057220459
    9. '+r' → logprob: -19.0000057220459
    10. '+s' → logprob: -19.2500057220459

Token 51: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.5759465098381042
    2. ' second' → logprob: -0.8259465098381042
    3. ' ' → logprob: -12.575946807861328
    4. '	second' → logprob: -12.950946807861328
    5. '(second' → logprob: -14.575946807861328
    6. '"' → logprob: -14.575946807861328
    7. ''' → logprob: -16.450946807861328
    8. '_second' → logprob: -16.950946807861328
    9. ' ' → logprob: -17.200946807861328
    10. '.second' → logprob: -17.325946807861328

Token 52: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.005258303135633469
    2. '_' → logprob: -5.255258083343506
    3. '_large' → logprob: -10.880258560180664
    4. ' _' → logprob: -13.630258560180664
    5. '_g' → logprob: -13.630258560180664
    6. '___' → logprob: -14.380258560180664
    7. '_L' → logprob: -14.505258560180664
    8. '_low' → logprob: -15.005258560180664
    9. '_m' → logprob: -15.255258560180664
    10. '__' → logprob: -15.380258560180664

Token 53: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.0006913475226610899
    2. 'largest' → logprob: -8.000691413879395
    3. 'arge' → logprob: -8.875691413879395
    4. 'arg' → logprob: -8.875691413879395
    5. 'arges' → logprob: -10.625691413879395
    6. 'arget' → logprob: -10.875691413879395
    7. 'a' → logprob: -11.500691413879395
    8. 'ar' → logprob: -12.125691413879395
    9. 'Largest' → logprob: -12.250691413879395
    10. 'arger' → logprob: -13.000691413879395

Token 54: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.000351670227246359
    2. '_strings' → logprob: -8.375351905822754
    3. '_' → logprob: -9.500351905822754
    4. '_str' → logprob: -10.250351905822754
    5. '_s' → logprob: -11.875351905822754
    6. 'string' → logprob: -12.625351905822754
    7. '_String' → logprob: -15.500351905822754
    8. '_st' → logprob: -15.875351905822754
    9. 'String' → logprob: -17.000350952148438
    10. '```' → logprob: -17.000350952148438

Token 55: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004324841313064098
    2. '+' → logprob: -5.504324913024902
    3. ')' → logprob: -9.004324913024902
    4. 'result' → logprob: -10.379324913024902
    5. '#' → logprob: -10.754324913024902
    6. '+
' → logprob: -10.754324913024902
    7. ' print' → logprob: -11.629324913024902
    8. 'if' → logprob: -11.629324913024902
    9. 'pr' → logprob: -11.754324913024902
    10. 'p' → logprob: -12.754324913024902

Token 56: 'conc' (ID: 50621)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01810511201620102
    2. 'if' → logprob: -4.5181050300598145
    3. '+' → logprob: -5.2681050300598145
    4. 'result' → logprob: -7.7681050300598145
    5. '+
' → logprob: -7.7681050300598145
    6. '#' → logprob: -8.643105506896973
    7. 'p' → logprob: -9.143105506896973
    8. ')' → logprob: -9.143105506896973
    9. 'conc' → logprob: -9.393105506896973
    10. '.' → logprob: -9.518105506896973

Token 57: 'aten' (ID: 5819)
  Prédit: 'aten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aten' → logprob: -0.00014191943046171218
    2. 'at' → logprob: -9.125142097473145
    3. 'atenate' → logprob: -10.375142097473145
    4. 'atern' → logprob: -14.000142097473145
    5. '```' → logprob: -15.125142097473145
    6. 'ate' → logprob: -15.875142097473145
    7. 'atet' → logprob: -16.000141143798828
    8. 'atten' → logprob: -16.000141143798828
    9. 'a' → logprob: -16.625141143798828
    10. 'atin' → logprob: -17.000141143798828

Token 58: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -6.988221684878226e-06
    2. 'ate' → logprob: -12.375006675720215
    3. 'at' → logprob: -13.375006675720215
    4. ' at' → logprob: -14.500006675720215
    5. 'ATED' → logprob: -15.375006675720215
    6. 'aten' → logprob: -16.12500762939453
    7. '   ' → logprob: -16.87500762939453
    8. '```' → logprob: -16.87500762939453
    9. '_' → logprob: -18.12500762939453
    10. 'a' → logprob: -18.62500762939453

Token 59: '_number' (ID: 11733)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.0005020392127335072
    2. '_' → logprob: -7.750502109527588
    3. '_strings' → logprob: -9.87550163269043
    4. '_string' → logprob: -11.37550163269043
    5. '_large' → logprob: -12.25050163269043
    6. 'largest' → logprob: -13.00050163269043
    7. 'Largest' → logprob: -14.62550163269043
    8. '_max' → logprob: -16.00050163269043
    9. '_str' → logprob: -16.12550163269043
    10. ' largest' → logprob: -16.37550163269043

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8638108968734741
    2. '_' → logprob: -0.9888108968734741
    3. '=' → logprob: -1.8638108968734741
    4. 's' → logprob: -3.4888110160827637
    5. '<|end|>' → logprob: -4.363811016082764
    6. '>' → logprob: -6.613811016082764
    7. '_str' → logprob: -6.613811016082764
    8. '.' → logprob: -6.988811016082764
    9. ')' → logprob: -7.113811016082764
    10. '[' → logprob: -7.113811016082764

Token 61: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196948140859604
    2. ' int' → logprob: -2.811969518661499
    3. '(int' → logprob: -14.186969757080078
    4. 'str' → logprob: -14.436969757080078
    5. '[int' → logprob: -14.811969757080078
    6. ' str' → logprob: -15.936969757080078
    7. '=int' → logprob: -16.311969757080078
    8. 'conc' → logprob: -17.186969757080078
    9. ' ' → logprob: -17.311969757080078
    10. '<int' → logprob: -17.811969757080078

Token 62: '(con' (ID: 37572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1602565199136734
    2. '(con' → logprob: -1.9102565050125122
    3. '('' → logprob: -11.160256385803223
    4. ' (' → logprob: -12.160256385803223
    5. '(com' → logprob: -13.035256385803223
    6. '(
' → logprob: -13.035256385803223
    7. '()' → logprob: -13.285256385803223
    8. '("("' → logprob: -13.285256385803223
    9. '(cont' → logprob: -13.785256385803223
    10. '(cons' → logprob: -14.160256385803223

Token 63: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01117408275604248
    2. 'aten' → logprob: -4.761174201965332
    3. 'cat' → logprob: -6.011174201965332
    4. '```' → logprob: -10.511174201965332
    5. 'conc' → logprob: -10.761174201965332
    6. 'ct' → logprob: -11.261174201965332
    7. 'at' → logprob: -11.636174201965332
    8. 'can' → logprob: -11.636174201965332
    9. 't' → logprob: -11.886174201965332
    10. 's' → logprob: -12.261174201965332

Token 64: 'aten' (ID: 5819)
  Prédit: 'aten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aten' → logprob: -5.550411151489243e-05
    2. 'at' → logprob: -9.875055313110352
    3. 'atenate' → logprob: -12.500055313110352
    4. 'ate' → logprob: -16.25005531311035
    5. 'a' → logprob: -16.37505531311035
    6. 'en' → logprob: -17.00005531311035
    7. 'atern' → logprob: -17.50005531311035
    8. 'atten' → logprob: -18.12505531311035
    9. 'anten' → logprob: -18.75005531311035
    10. '```' → logprob: -18.75005531311035

Token 65: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -1.9361264946837764e-07
    2. 'at' → logprob: -17.125
    3. 'ation' → logprob: -17.625
    4. 'ted' → logprob: -17.875
    5. '   ' → logprob: -18.0
    6. 'ATED' → logprob: -18.375
    7. 'conc' → logprob: -18.375
    8. 'atted' → logprob: -18.375
    9. ' concaten' → logprob: -18.875
    10. '```' → logprob: -19.25

Token 66: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -7.219262624857947e-05
    2. '_number' → logprob: -9.750072479248047
    3. '_' → logprob: -12.125072479248047
    4. '_strings' → logprob: -12.500072479248047
    5. 'largest' → logprob: -13.250072479248047
    6. '_large' → logprob: -13.375072479248047
    7. '_string' → logprob: -13.750072479248047
    8. '_numbers' → logprob: -16.000072479248047
    9. 'Largest' → logprob: -16.500072479248047
    10. ' largest' → logprob: -18.500072479248047

Token 67: 'argest' (ID: 45028)
  Prédit: 'argest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argest' → logprob: -0.001058890949934721
    2. 'arg' → logprob: -7.751059055328369
    3. 'arge' → logprob: -8.001058578491211
    4. 'arget' → logprob: -9.001058578491211
    5. 'largest' → logprob: -9.751058578491211
    6. 'gest' → logprob: -10.376058578491211
    7. 'ar' → logprob: -10.876058578491211
    8. 'string' → logprob: -11.376058578491211
    9. 'ist' → logprob: -11.501058578491211
    10. 'umber' → logprob: -12.001058578491211

Token 68: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.0007310202927328646
    2. '_string' → logprob: -7.250730991363525
    3. 'strings' → logprob: -11.250731468200684
    4. '_' → logprob: -12.875731468200684
    5. '_number' → logprob: -12.875731468200684
    6. '_str' → logprob: -13.250731468200684
    7. '_numbers' → logprob: -14.875731468200684
    8. 'string' → logprob: -15.000731468200684
    9. 'Strings' → logprob: -16.000730514526367
    10. '_s' → logprob: -16.125730514526367

Token 69: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.375001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '))' → logprob: -14.875001907348633
    5. '+' → logprob: -15.875001907348633
    6. '')' → logprob: -16.375001907348633
    7. ']' → logprob: -17.375001907348633
    8. ')
' → logprob: -17.375001907348633
    9. '")' → logprob: -18.125001907348633
    10. '),' → logprob: -18.125001907348633

Token 70: 'small' (ID: 18158)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15089185535907745
    2. 'if' → logprob: -2.4008917808532715
    3. '+' → logprob: -3.4008917808532715
    4. '%' → logprob: -5.0258917808532715
    5. '*' → logprob: -6.2758917808532715
    6. '>' → logprob: -6.4008917808532715
    7. ' if' → logprob: -6.6508917808532715
    8. '#' → logprob: -6.7758917808532715
    9. '<|end|>' → logprob: -7.4008917808532715
    10. ')' → logprob: -7.6508917808532715

Token 71: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.005936621222645044
    2. 'er' → logprob: -5.130936622619629
    3. 'erst' → logprob: -12.630936622619629
    4. 'e' → logprob: -13.255936622619629
    5. '```' → logprob: -14.505936622619629
    6. 'lest' → logprob: -14.880936622619629
    7. 'east' → logprob: -15.130936622619629
    8. '_est' → logprob: -15.380936622619629
    9. '(est' → logprob: -15.380936622619629
    10. 'es' → logprob: -15.505936622619629

Token 72: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8539721965789795
    2. '_string' → logprob: -0.9789721965789795
    3. '_number' → logprob: -1.7289721965789795
    4. '_value' → logprob: -5.103972434997559
    5. '_num' → logprob: -5.353972434997559
    6. '_possible' → logprob: -6.353972434997559
    7. '_con' → logprob: -6.728972434997559
    8. '_concat' → logprob: -6.853972434997559
    9. '_str' → logprob: -7.478972434997559
    10. '_numbers' → logprob: -7.603972434997559

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017775388434529305
    2. '=' → logprob: -4.142775535583496
    3. '_' → logprob: -6.392775535583496
    4. ' ' → logprob: -10.392775535583496
    5. ' _' → logprob: -10.767775535583496
    6. 's' → logprob: -12.267775535583496
    7. '_=' → logprob: -13.267775535583496
    8. ' =
' → logprob: -13.517775535583496
    9. ',' → logprob: -13.892775535583496
    10. ')' → logprob: -14.142775535583496

Token 74: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7484573721885681
    2. 'conc' → logprob: -1.373457431793213
    3. ' int' → logprob: -2.123457431793213
    4. ' concaten' → logprob: -2.748457431793213
    5. 'min' → logprob: -2.998457431793213
    6. ' min' → logprob: -3.998457431793213
    7. '0' → logprob: -4.748457431793213
    8. '999' → logprob: -4.998457431793213
    9. 'max' → logprob: -6.873457431793213
    10. 'float' → logprob: -6.998457431793213

Token 75: '(input' (ID: 10054)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.429172545671463
    2. '(' → logprob: -1.5541725158691406
    3. '("' → logprob: -3.0541725158691406
    4. '(con' → logprob: -3.1791725158691406
    5. '(input' → logprob: -3.3041725158691406
    6. '(min' → logprob: -5.804172515869141
    7. '('_' → logprob: -6.304172515869141
    8. '(str' → logprob: -6.304172515869141
    9. '(l' → logprob: -6.679172515869141
    10. '((' → logprob: -7.054172515869141

Token 76: '_strings' (ID: 87251)
  Prédit: '_strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.0029716379940509796
    2. '()' → logprob: -6.252971649169922
    3. '())' → logprob: -7.252971649169922
    4. '(' → logprob: -8.752971649169922
    5. '().' → logprob: -9.752971649169922
    6. '("_' → logprob: -11.002971649169922
    7. 'Strings' → logprob: -11.127971649169922
    8. 'strings' → logprob: -11.127971649169922
    9. '(strings' → logprob: -11.127971649169922
    10. '()[' → logprob: -11.377971649169922

Token 77: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.5094070477061905e-05
    2. '_strings' → logprob: -11.875015258789062
    3. 'list' → logprob: -12.625015258789062
    4. 'ist' → logprob: -13.000015258789062
    5. '_lists' → logprob: -14.250015258789062
    6. 'List' → logprob: -14.625015258789062
    7. '[' → logprob: -14.875015258789062
    8. '_string' → logprob: -15.000015258789062
    9. ')_' → logprob: -15.500015258789062
    10. ')' → logprob: -16.000015258789062

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10022791475057602
    2. '[-' → logprob: -2.3502278327941895
    3. '[len' → logprob: -11.975228309631348
    4. '[
' → logprob: -12.600228309631348
    5. ' [' → logprob: -13.225228309631348
    6. '   ' → logprob: -13.350228309631348
    7. '```' → logprob: -13.600228309631348
    8. '[::-' → logprob: -13.850228309631348
    9. '\[' → logprob: -13.850228309631348
    10. ')' → logprob: -13.975228309631348

Token 79: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015286451205611229
    2. '2' → logprob: -4.265286445617676
    3. '1' → logprob: -6.890286445617676
    4. ' -' → logprob: -9.890286445617676
    5. '0' → logprob: -10.515286445617676
    6. 'len' → logprob: -11.765286445617676
    7. ')' → logprob: -12.390286445617676
    8. ' ' → logprob: -12.515286445617676
    9. '])' → logprob: -12.890286445617676
    10. ')-' → logprob: -13.140286445617676

Token 80: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007188673131167889
    2. ']' → logprob: -5.13218879699707
    3. ')' → logprob: -6.75718879699707
    4. ' ])' → logprob: -10.50718879699707
    5. ')])' → logprob: -10.50718879699707
    6. ']))' → logprob: -11.25718879699707
    7. ']])' → logprob: -12.13218879699707
    8. ''])' → logprob: -12.13218879699707
    9. '])
' → logprob: -12.38218879699707
    10. ')]' → logprob: -12.63218879699707

Token 81: 'final' (ID: 17196)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3081672489643097
    2. 'if' → logprob: -1.5581672191619873
    3. '*' → logprob: -4.183167457580566
    4. '+
' → logprob: -4.308167457580566
    5. '>' → logprob: -4.683167457580566
    6. 'print' → logprob: -4.808167457580566
    7. '#' → logprob: -6.308167457580566
    8. 'result' → logprob: -6.558167457580566
    9. 'difference' → logprob: -6.683167457580566
    10. ' if' → logprob: -7.058167457580566

Token 82: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47150155901908875
    2. '_result' → logprob: -1.0965015888214111
    3. '_value' → logprob: -3.971501588821411
    4. '_output' → logprob: -4.596501350402832
    5. '_number' → logprob: -4.846501350402832
    6. '_sum' → logprob: -7.221501350402832
    7. '_string' → logprob: -7.471501350402832
    8. '_val' → logprob: -7.971501350402832
    9. '_score' → logprob: -8.096501350402832
    10. '_num' → logprob: -8.096501350402832

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05589567497372627
    2. '=' → logprob: -2.9308955669403076
    3. ' +=' → logprob: -6.930895805358887
    4. '+=' → logprob: -11.305895805358887
    5. '+' → logprob: -12.180895805358887
    6. '_' → logprob: -12.430895805358887
    7. ')' → logprob: -12.555895805358887
    8. ' ' → logprob: -13.305895805358887
    9. ' +' → logprob: -13.305895805358887
    10. 's' → logprob: -13.430895805358887

Token 84: ' concaten' (ID: 121942)
  Prédit: ' concaten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' concaten' → logprob: -0.00015741224342491478
    2. 'conc' → logprob: -8.875157356262207
    3. ' largest' → logprob: -11.875157356262207
    4. ' conc' → logprob: -12.250157356262207
    5. ' smallest' → logprob: -12.875157356262207
    6. ' final' → logprob: -13.500157356262207
    7. ' combined' → logprob: -14.250157356262207
    8. ' ' → logprob: -14.875157356262207
    9. ' ' → logprob: -15.750157356262207
    10. ' concat' → logprob: -16.125158309936523

Token 85: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -1.9361264946837764e-07
    2. 'at' → logprob: -16.375
    3. 'ate' → logprob: -17.0
    4. 'anted' → logprob: -17.375
    5. 'ATED' → logprob: -18.625
    6. 'a' → logprob: -18.75
    7. 'aten' → logprob: -20.125
    8. 'atted' → logprob: -20.25
    9. 'lated' → logprob: -20.875
    10. ' at' → logprob: -21.25

Token 86: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.003263153601437807
    2. '_' → logprob: -5.878262996673584
    3. '_l' → logprob: -8.003263473510742
    4. '_numbers' → logprob: -9.878263473510742
    5. '_large' → logprob: -10.628263473510742
    6. '_string' → logprob: -10.753263473510742
    7. '_n' → logprob: -11.753263473510742
    8. '_small' → logprob: -12.253263473510742
    9. '_num' → logprob: -12.753263473510742
    10. '_final' → logprob: -13.253263473510742

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16029013693332672
    2. ' +' → logprob: -1.9102901220321655
    3. '<|end|>' → logprob: -9.660289764404297
    4. '-' → logprob: -14.410289764404297
    5. ' +
' → logprob: -14.785289764404297
    6. '<|end|>' → logprob: -15.410289764404297
    7. ' plus' → logprob: -15.785289764404297
    8. '+
' → logprob: -16.035289764404297
    9. '+=' → logprob: -16.535289764404297
    10. ' +=' → logprob: -16.660289764404297

Token 88: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.48543456196784973
    2. 'small' → logprob: -0.9854345321655273
    3. ' small' → logprob: -4.485434532165527
    4. '(s' → logprob: -11.860434532165527
    5. '_small' → logprob: -12.360434532165527
    6. 'sm' → logprob: -12.985434532165527
    7. 's' → logprob: -13.360434532165527
    8. ' ' → logprob: -13.485434532165527
    9. '```' → logprob: -14.110434532165527
    10. '.small' → logprob: -14.110434532165527

Token 89: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.018239613622426987
    2. '_' → logprob: -4.018239498138428
    3. '_string' → logprob: -10.018239974975586
    4. '_n' → logprob: -11.143239974975586
    5. '_num' → logprob: -11.643239974975586
    6. ' _' → logprob: -12.143239974975586
    7. '_numbers' → logprob: -12.268239974975586
    8. '_small' → logprob: -12.643239974975586
    9. '_s' → logprob: -13.643239974975586
    10. '```' → logprob: -13.768239974975586

Token 90: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0071632275357842445
    2. '<|end|>' → logprob: -5.632163047790527
    3. '\n' → logprob: -6.257163047790527
    4. '
' → logprob: -6.757163047790527
    5. '\' → logprob: -9.132163047790527
    6. '#' → logprob: -9.507163047790527
    7. '+' → logprob: -9.507163047790527
    8. ' print' → logprob: -9.882163047790527
    9. '```' → logprob: -10.132163047790527
    10. ')' → logprob: -10.257163047790527

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5451681974809617e-05
    2. '
' → logprob: -12.000015258789062
    3. ' print' → logprob: -12.625015258789062
    4. '<|end|>' → logprob: -13.500015258789062
    5. '\n' → logprob: -13.625015258789062
    6. '#print' → logprob: -14.000015258789062
    7. '(print' → logprob: -14.125015258789062
    8. '#' → logprob: -14.500015258789062
    9. '```' → logprob: -14.625015258789062
    10. '.print' → logprob: -15.625015258789062

Token 92: '(final' (ID: 14111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20142844319343567
    2. '(final' → logprob: -1.7014284133911133
    3. '("("' → logprob: -12.076428413391113
    4. '(f' → logprob: -12.826428413391113
    5. '('' → logprob: -13.326428413391113
    6. ' (' → logprob: -13.451428413391113
    7. '(
' → logprob: -14.326428413391113
    8. '((' → logprob: -14.451428413391113
    9. '()' → logprob: -14.576428413391113
    10. 'final' → logprob: -14.576428413391113

Token 93: '_sum' (ID: 29859)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.4938644468784332
    2. '_' → logprob: -1.2438644170761108
    3. '_sum' → logprob: -3.4938645362854004
    4. ')_' → logprob: -3.4938645362854004
    5. ')' → logprob: -3.7438645362854004
    6. '_s' → logprob: -4.2438645362854
    7. '_string' → logprob: -7.2438645362854
    8. '_final' → logprob: -7.2438645362854
    9. '_str' → logprob: -8.493864059448242
    10. '_number' → logprob: -8.743864059448242

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.000001907348633
    4. '')' → logprob: -16.000001907348633
    5. ')
' → logprob: -16.500001907348633
    6. ')`' → logprob: -16.875001907348633
    7. '`)' → logprob: -17.250001907348633
    8. '(' → logprob: -18.000001907348633
    9. '")' → logprob: -18.375001907348633
    10. '）' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 46.74%
Précision adaptée (1ère position): 46.74%
Précision (top 10): 73.91%
================================================================================
