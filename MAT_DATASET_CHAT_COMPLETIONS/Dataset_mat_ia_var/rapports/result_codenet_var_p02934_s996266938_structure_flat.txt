================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
sum = 0
i = 0
while i < n:
    sum += 1 / a[i]
    i += 1
print(1 / sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '()' → logprob: -12.375107765197754
    8. '("("' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31722182035446167
    2. ')' → logprob: -1.4422218799591064
    3. '()' → logprob: -3.5672218799591064
    4. '())' → logprob: -5.192221641540527
    5. '(
' → logprob: -7.692221641540527
    6. '```' → logprob: -8.317221641540527
    7. '(()' → logprob: -9.192221641540527
    8. '('' → logprob: -9.442221641540527
    9. '))' → logprob: -9.442221641540527
    10. '(n' → logprob: -9.692221641540527

Token 5: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1005412340164185
    2. 'i' → logprob: -1.6005412340164185
    3. 'for' → logprob: -1.6005412340164185
    4. 's' → logprob: -2.850541114807129
    5. '*' → logprob: -3.100541114807129
    6. 'x' → logprob: -3.600541114807129
    7. ')' → logprob: -3.850541114807129
    8. 'a' → logprob: -3.850541114807129
    9. '#' → logprob: -4.225541114807129
    10. ' ' → logprob: -4.350541114807129

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007373234839178622
    2. '+' → logprob: -8.000737190246582
    3. '[n' → logprob: -9.500737190246582
    4. '[a' → logprob: -10.125737190246582
    5. '[r' → logprob: -10.125737190246582
    6. '[i' → logprob: -10.250737190246582
    7. '.' → logprob: -10.375737190246582
    8. '\[' → logprob: -10.375737190246582
    9. '[p' → logprob: -10.750737190246582
    10. '[m' → logprob: -10.750737190246582

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.255839228630066
    2. ' []' → logprob: -1.255839228630066
    3. 'list' → logprob: -1.505839228630066
    4. ' list' → logprob: -1.880839228630066
    5. ' [' → logprob: -3.7558393478393555
    6. 'input' → logprob: -4.6308393478393555
    7. '[input' → logprob: -4.7558393478393555
    8. '[' → logprob: -5.1308393478393555
    9. ' input' → logprob: -6.0058393478393555
    10. '[int' → logprob: -6.1308393478393555

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003622793301474303
    2. '(a' → logprob: -8.625362396240234
    3. '()' → logprob: -9.375362396240234
    4. '(range' → logprob: -10.000362396240234
    5. '(input' → logprob: -11.125362396240234
    6. '(`' → logprob: -12.125362396240234
    7. 'a' → logprob: -12.500362396240234
    8. '(
' → logprob: -12.500362396240234
    9. '((' → logprob: -13.000362396240234
    10. '("("' → logprob: -13.000362396240234

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022960085421800613
    2. '(' → logprob: -4.022960186004639
    3. '(str' → logprob: -6.272960186004639
    4. '(lambda' → logprob: -6.772960186004639
    5. '<int' → logprob: -7.522960186004639
    6. '(input' → logprob: -7.772960186004639
    7. '[int' → logprob: -8.77295970916748
    8. '=int' → logprob: -8.89795970916748
    9. '```' → logprob: -9.02295970916748
    10. 'int' → logprob: -9.14795970916748

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0075626065954566
    2. '(' → logprob: -5.382562637329102
    3. '))' → logprob: -6.382562637329102
    4. ',input' → logprob: -7.382562637329102
    5. ')' → logprob: -8.132562637329102
    6. 'input' → logprob: -9.132562637329102
    7. '=input' → logprob: -9.632562637329102
    8. '```' → logprob: -11.007562637329102
    9. '[input' → logprob: -11.257562637329102
    10. ',' → logprob: -11.382562637329102

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014250003732740879
    2. ' input' → logprob: -4.264249801635742
    3. '(input' → logprob: -9.389249801635742
    4. ')' → logprob: -13.639249801635742
    5. ',input' → logprob: -14.264249801635742
    6. '=input' → logprob: -14.889249801635742
    7. '	input' → logprob: -16.014249801635742
    8. '))' → logprob: -16.139249801635742
    9. ' ' → logprob: -16.264249801635742
    10. '<input' → logprob: -16.514249801635742

Token 12: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5270605087280273
    2. '()))' → logprob: -1.2770605087280273
    3. '()' → logprob: -2.5270605087280273
    4. '().' → logprob: -3.0270605087280273
    5. '()));' → logprob: -6.902060508728027
    6. '(' → logprob: -7.527060508728027
    7. '())))' → logprob: -8.152060508728027
    8. ')' → logprob: -8.277060508728027
    9. '());' → logprob: -9.027060508728027
    10. '()>' → logprob: -9.652060508728027

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8085052967071533
    2. '()))' → logprob: -0.8085052967071533
    3. ')' → logprob: -2.9335052967071533
    4. '())' → logprob: -3.0585052967071533
    5. '(' → logprob: -5.308505058288574
    6. '()' → logprob: -6.058505058288574
    7. '('' → logprob: -7.433505058288574
    8. ')))' → logprob: -7.808505058288574
    9. ''))' → logprob: -8.558505058288574
    10. '())))' → logprob: -9.058505058288574

Token 15: 'sum' (ID: 12298)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5533328056335449
    2. 's' → logprob: -1.178332805633545
    3. 'c' → logprob: -3.178332805633545
    4. 'for' → logprob: -3.553332805633545
    5. 'sum' → logprob: -3.928332805633545
    6. 'b' → logprob: -5.303332805633545
    7. 'm' → logprob: -5.303332805633545
    8. 'count' → logprob: -5.678332805633545
    9. 'max' → logprob: -5.803332805633545
    10. 'd' → logprob: -6.303332805633545

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022449202835559845
    2. '(a' → logprob: -3.897449254989624
    3. '_' → logprob: -6.647449016571045
    4. 'a' → logprob: -8.772449493408203
    5. '(sum' → logprob: -9.022449493408203
    6. '_a' → logprob: -9.147449493408203
    7. 's' → logprob: -9.647449493408203
    8. '_sum' → logprob: -10.397449493408203
    9. '()' → logprob: -10.522449493408203
    10. '(s' → logprob: -10.647449493408203

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4346863925457001
    2. '0' → logprob: -1.0596864223480225
    3. 'a' → logprob: -5.559686183929443
    4. ' a' → logprob: -6.309686183929443
    5. ' sum' → logprob: -8.684686660766602
    6. 'sum' → logprob: -9.309686660766602
    7. ' ' → logprob: -11.934686660766602
    8. ' n' → logprob: -11.934686660766602
    9. '(sum' → logprob: -12.059686660766602
    10. ')' → logprob: -12.309686660766602

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3151664435863495
    2. 'a' → logprob: -1.3151664733886719
    3. 'sum' → logprob: -6.815166473388672
    4. ' ' → logprob: -7.815166473388672
    5. ' a' → logprob: -9.065166473388672
    6. '(a' → logprob: -9.690166473388672
    7. '+' → logprob: -9.815166473388672
    8. ')' → logprob: -10.065166473388672
    9. '(sum' → logprob: -10.065166473388672
    10. 'max' → logprob: -10.565166473388672

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.042436301708221436
    2. ' for' → logprob: -4.042436122894287
    3. '_' → logprob: -4.167436122894287
    4. '
' → logprob: -5.792436122894287
    5. '\n' → logprob: -6.292436122894287
    6. ')' → logprob: -7.292436122894287
    7. '+' → logprob: -7.667436122894287
    8. 'a' → logprob: -7.792436122894287
    9. '<|end|>' → logprob: -8.292436599731445
    10. 'n' → logprob: -8.417436599731445

Token 20: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01717093028128147
    2. '
' → logprob: -4.2671709060668945
    3. ' for' → logprob: -6.7671709060668945
    4. 'i' → logprob: -7.1421709060668945
    5. ' 
' → logprob: -8.267170906066895
    6. '```' → logprob: -8.642170906066895
    7. 'f' → logprob: -9.392170906066895
    8. '\n' → logprob: -9.392170906066895
    9. '' → logprob: -9.517170906066895
    10. '  
' → logprob: -10.017170906066895

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6647972464561462
    2. ' ' → logprob: -1.789797306060791
    3. ' =' → logprob: -1.914797306060791
    4. ' +=' → logprob: -2.539797306060791
    5. '+' → logprob: -2.789797306060791
    6. 'n' → logprob: -4.039797306060791
    7. '+=' → logprob: -5.289797306060791
    8. ')' → logprob: -6.164797306060791
    9. '<|end|>' → logprob: -6.539797306060791
    10. 's' → logprob: -6.664797306060791

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.633243203163147
    2. ' ' → logprob: -0.758243203163147
    3. '1' → logprob: -7.383243083953857
    4. ' n' → logprob: -11.508243560791016
    5. '2' → logprob: -12.508243560791016
    6. 'n' → logprob: -12.633243560791016
    7. ' ' → logprob: -14.445743560791016
    8. '+' → logprob: -14.570743560791016
    9. ' i' → logprob: -14.883243560791016
    10. 'a' → logprob: -14.883243560791016

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003832445072475821
    2. ' ' → logprob: -8.125383377075195
    3. '1' → logprob: -9.375383377075195
    4. '2' → logprob: -13.750383377075195
    5. 'n' → logprob: -14.125383377075195
    6. 'i' → logprob: -16.250383377075195
    7. 'a' → logprob: -16.500383377075195
    8. '`' → logprob: -16.500383377075195
    9. '3' → logprob: -17.125383377075195
    10. '+' → logprob: -17.125383377075195

Token 24: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36960601806640625
    2. 'while' → logprob: -2.2446060180664062
    3. '<|end|>' → logprob: -2.2446060180664062
    4. ' while' → logprob: -2.9946060180664062
    5. '
' → logprob: -3.4946060180664062
    6. ' 
' → logprob: -5.119606018066406
    7. '+' → logprob: -6.119606018066406
    8. ',' → logprob: -6.744606018066406
    9. '<|end|>' → logprob: -6.744606018066406
    10. ')' → logprob: -6.994606018066406

Token 25: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9208423495292664
    2. '+' → logprob: -1.0458424091339111
    3. 'while' → logprob: -2.170842409133911
    4. ' while' → logprob: -2.670842409133911
    5. '<|end|>' → logprob: -3.420842409133911
    6. ')' → logprob: -4.795842170715332
    7. 'n' → logprob: -5.920842170715332
    8. ',' → logprob: -6.045842170715332
    9. '<' → logprob: -6.295842170715332
    10. '>' → logprob: -6.295842170715332

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.030963853001594543
    2. 'i' → logprob: -3.780963897705078
    3. ' ' → logprob: -4.905963897705078
    4. '(i' → logprob: -9.405963897705078
    5. ' (' → logprob: -9.530963897705078
    6. '(' → logprob: -9.655963897705078
    7. ' n' → logprob: -11.030963897705078
    8. ' ' → logprob: -11.155963897705078
    9. '  ' → logprob: -11.405963897705078
    10. ' a' → logprob: -12.030963897705078

Token 27: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014542817138135433
    2. '<' → logprob: -4.264542579650879
    3. ' <=' → logprob: -8.014542579650879
    4. ' ' → logprob: -11.264542579650879
    5. '<n' → logprob: -11.639542579650879
    6. ' <
' → logprob: -11.889542579650879
    7. ' !=' → logprob: -12.389542579650879
    8. '<len' → logprob: -12.514542579650879
    9. '<=' → logprob: -12.764542579650879
    10. '<size' → logprob: -13.639542579650879

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12870730459690094
    2. 'n' → logprob: -2.1287074089050293
    3. ' len' → logprob: -6.753707408905029
    4. 'len' → logprob: -7.503707408905029
    5. ' ' → logprob: -9.753706932067871
    6. ' ' → logprob: -14.878706932067871
    7. '	n' → logprob: -15.003706932067871
    8. '  ' → logprob: -15.503706932067871
    9. '   ' → logprob: -15.503706932067871
    10. '(len' → logprob: -15.628706932067871

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005206601694226265
    2. ' :' → logprob: -5.38020658493042
    3. ':
' → logprob: -8.005207061767578
    4. '+:' → logprob: -9.005207061767578
    5. '   ' → logprob: -9.755207061767578
    6. '+' → logprob: -10.380207061767578
    7. ' :
' → logprob: -11.005207061767578
    8. ' ' → logprob: -12.130207061767578
    9. '):' → logprob: -12.255207061767578
    10. ':**' → logprob: -12.630207061767578

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009606152772903442
    2. '    ' → logprob: -5.50960636138916
    3. '   ' → logprob: -6.50960636138916
    4. ' 
' → logprob: -6.63460636138916
    5. 'sum' → logprob: -7.50960636138916
    6. 'a' → logprob: -7.63460636138916
    7. '<|end|>' → logprob: -7.63460636138916
    8. '  ' → logprob: -8.50960636138916
    9. '     
' → logprob: -8.63460636138916
    10. ' sum' → logprob: -8.63460636138916

Token 31: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.6645918488502502
    2. ' sum' → logprob: -0.7895918488502502
    3. ' if' → logprob: -3.9145917892456055
    4. '   ' → logprob: -5.0395917892456055
    5. 'if' → logprob: -5.5395917892456055
    6. ' ' → logprob: -8.039591789245605
    7. '	sum' → logprob: -8.414591789245605
    8. '    ' → logprob: -8.664591789245605
    9. '```' → logprob: -8.914591789245605
    10. 'a' → logprob: -9.414591789245605

Token 32: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.004428931977599859
    2. '+' → logprob: -6.504428863525391
    3. ' ' → logprob: -6.629428863525391
    4. '+=' → logprob: -7.129428863525391
    5. ' +' → logprob: -7.254428863525391
    6. '<|end|>' → logprob: -10.25442886352539
    7. ' =' → logprob: -11.00442886352539
    8. '=' → logprob: -12.00442886352539
    9. ')' → logprob: -12.37942886352539
    10. ' <<=' → logprob: -12.87942886352539

Token 33: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889000326395035
    2. ' a' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.953889846801758
    4. '	a' → logprob: -16.578889846801758
    5. '   ' → logprob: -17.953889846801758
    6. 'ai' → logprob: -18.328889846801758
    7. ' ai' → logprob: -18.328889846801758
    8. '(a' → logprob: -18.453889846801758
    9. '_a' → logprob: -18.578889846801758
    10. '```' → logprob: -18.703889846801758

Token 34: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.024604277219623e-05
    2. ' a' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. '	a' → logprob: -18.00004005432129
    5. ' ' → logprob: -18.25004005432129
    6. 'а' → logprob: -18.37504005432129
    7. '```' → logprob: -18.37504005432129
    8. '(a' → logprob: -18.87504005432129
    9. 'ai' → logprob: -19.12504005432129
    10. '`' → logprob: -19.37504005432129

Token 35: ' /' (ID: 820)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5064392685890198
    2. 'a' → logprob: -2.256439208984375
    3. ' i' → logprob: -2.881439208984375
    4. 'i' → logprob: -3.256439208984375
    5. '0' → logprob: -3.506439208984375
    6. ' a' → logprob: -3.631439208984375
    7. '+' → logprob: -3.881439208984375
    8. ' if' → logprob: -4.131439208984375
    9. '  ' → logprob: -4.256439208984375
    10. ' *' → logprob: -4.256439208984375

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.618001053633634e-05
    2. ' a' → logprob: -11.375025749206543
    3. '(a' → logprob: -11.625025749206543
    4. '(' → logprob: -13.000025749206543
    5. '2' → logprob: -13.000025749206543
    6. '   ' → logprob: -15.625025749206543
    7. 'i' → logprob: -16.00002670288086
    8. ' (' → logprob: -16.37502670288086
    9. '10' → logprob: -16.50002670288086
    10. ' ' → logprob: -16.62502670288086

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0021913025993853807
    2. '[' → logprob: -6.127191066741943
    3. 'i' → logprob: -13.002191543579102
    4. ' [' → logprob: -13.502191543579102
    5. '[a' → logprob: -13.502191543579102
    6. '\[' → logprob: -15.377191543579102
    7. '```' → logprob: -15.502191543579102
    8. '[
' → logprob: -16.1271915435791
    9. '[s' → logprob: -16.1271915435791
    10. ' ' → logprob: -16.2521915435791

Token 38: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.864335834980011
    2. ']' → logprob: -0.989335834980011
    3. '])' → logprob: -1.7393357753753662
    4. '[i' → logprob: -3.614335775375366
    5. ')]' → logprob: -5.614336013793945
    6. '[' → logprob: -8.364336013793945
    7. ')])' → logprob: -8.614336013793945
    8. ' )' → logprob: -10.114336013793945
    9. '])]' → logprob: -10.739336013793945
    10. ')
' → logprob: -10.989336013793945

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2212739884853363
    2. 'i' → logprob: -2.096273899078369
    3. '
' → logprob: -3.221273899078369
    4. '\n' → logprob: -3.846273899078369
    5. ' i' → logprob: -5.096273899078369
    6. '    
' → logprob: -5.471273899078369
    7. '```' → logprob: -7.096273899078369
    8. '  
' → logprob: -7.596273899078369
    9. '	i' → logprob: -7.596273899078369
    10. '[i' → logprob: -7.721273899078369

Token 40: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.007652180269360542
    2. '   ' → logprob: -5.132652282714844
    3. ' i' → logprob: -6.382652282714844
    4. '	i' → logprob: -10.882652282714844
    5. '  ' → logprob: -12.757652282714844
    6. '_i' → logprob: -13.132652282714844
    7. ' ' → logprob: -13.382652282714844
    8. '[i' → logprob: -13.507652282714844
    9. '*i' → logprob: -14.132652282714844
    10. ',i' → logprob: -14.257652282714844

Token 41: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2758219242095947
    2. '+' → logprob: -1.5258219242095947
    3. ' +=' → logprob: -3.7758219242095947
    4. '++' → logprob: -7.400821685791016
    5. '=' → logprob: -10.275821685791016
    6. '+++' → logprob: -10.650821685791016
    7. '<|end|>' → logprob: -12.150821685791016
    8. '+='' → logprob: -12.275821685791016
    9. '+="' → logprob: -12.525821685791016
    10. ' +' → logprob: -12.525821685791016

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -15.750035285949707
    4. '   ' → logprob: -17.750036239624023
    5. '+' → logprob: -18.375036239624023
    6. '１' → logprob: -19.250036239624023
    7. '`' → logprob: -19.750036239624023
    8. '2' → logprob: -20.562536239624023
    9. '0' → logprob: -20.625036239624023
    10. '۱' → logprob: -20.687536239624023

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -19.5
    5. '１' → logprob: -19.75
    6. '+' → logprob: -20.0
    7. '2' → logprob: -20.625
    8. '۱' → logprob: -21.25
    9. '0' → logprob: -21.5625
    10. '१' → logprob: -21.625

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.185889482498169
    2. 'print' → logprob: -1.185889482498169
    3. ')' → logprob: -2.060889482498169
    4. '\n' → logprob: -2.185889482498169
    5. '#' → logprob: -3.810889482498169
    6. 'h' → logprob: -4.68588924407959
    7. 'result' → logprob: -4.68588924407959
    8. 'p' → logprob: -4.81088924407959
    9. '```' → logprob: -4.81088924407959
    10. ' ' → logprob: -4.93588924407959

Token 45: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3618415892124176
    2. 'h' → logprob: -2.1118416786193848
    3. ')' → logprob: -2.2368416786193848
    4. 'p' → logprob: -3.8618416786193848
    5. 'result' → logprob: -4.486841678619385
    6. '#' → logprob: -4.736841678619385
    7. 'b' → logprob: -4.861841678619385
    8. ' ' → logprob: -5.611841678619385
    9. '/' → logprob: -5.986841678619385
    10. 'n' → logprob: -6.111841678619385

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030381962656974792
    2. '(sum' → logprob: -3.530381917953491
    3. '()' → logprob: -8.15538215637207
    4. '(round' → logprob: -8.28038215637207
    5. '((' → logprob: -10.53038215637207
    6. '(s' → logprob: -11.40538215637207
    7. '("("' → logprob: -11.53038215637207
    8. '('' → logprob: -11.78038215637207
    9. '(
' → logprob: -12.15538215637207
    10. '(

' → logprob: -12.15538215637207

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47935205698013306
    2. 'sum' → logprob: -0.9793520569801331
    3. ')' → logprob: -6.229351997375488
    4. '3' → logprob: -6.479351997375488
    5. '(sum' → logprob: -7.479351997375488
    6. '6' → logprob: -8.229351997375488
    7. '(' → logprob: -8.479351997375488
    8. '2' → logprob: -8.979351997375488
    9. 'n' → logprob: -8.979351997375488
    10. ' sum' → logprob: -8.979351997375488

Token 48: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.013071401976048946
    2. ' /' → logprob: -4.388071537017822
    3. ')' → logprob: -7.513071537017822
    4. '/)' → logprob: -11.263071060180664
    5. ' )' → logprob: -14.513071060180664
    6. ' ' → logprob: -14.763071060180664
    7. '/s' → logprob: -14.888071060180664
    8. '/
' → logprob: -15.013071060180664
    9. '/(' → logprob: -15.388071060180664
    10. ')/' → logprob: -15.388071060180664

Token 49: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.5597102396423e-05
    2. ' sum' → logprob: -10.250035285949707
    3. '(sum' → logprob: -16.500036239624023
    4. 's' → logprob: -18.125036239624023
    5. 'summ' → logprob: -18.750036239624023
    6. '	sum' → logprob: -18.875036239624023
    7. '_sum' → logprob: -19.500036239624023
    8. 'su' → logprob: -20.750036239624023
    9. '   ' → logprob: -21.250036239624023
    10. ' ' → logprob: -21.500036239624023

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')`' → logprob: -16.25
    5. ')
' → logprob: -16.5
    6. '`)' → logprob: -17.5
    7. '')' → logprob: -18.375
    8. '）' → logprob: -18.625
    9. ')))' → logprob: -19.125
    10. '")' → logprob: -19.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 35.42%
Précision adaptée (1ère position): 39.58%
Précision (top 10): 81.25%
================================================================================
