================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

def main():
    _, S = map(lambda f: f(), (lambda: int(input()), input))
    ans = reduce(add, map(lambda i: S[i:i+3] == 'ABC', range(len(S) - 2)), 0)
    print(ans)

if __name__ == '__main__':
    (lambda f: f())(main)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0243254154920578
    2. 'import' → logprob: -3.899325370788574
    3. '.' → logprob: -5.774325370788574
    4. ' ' → logprob: -7.399325370788574
    5. ' .' → logprob: -10.149325370788574
    6. '	import' → logprob: -11.899325370788574
    7. '.import' → logprob: -12.774325370788574
    8. '<|end|>' → logprob: -13.274325370788574
    9. ' Import' → logprob: -13.649325370788574
    10. '_import' → logprob: -13.774325370788574

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0797559842467308
    2. '(
' → logprob: -3.204756021499634
    3. '\' → logprob: -3.954756021499634
    4. '\n' → logprob: -4.579755783081055
    5. ',' → logprob: -6.579755783081055
    6. '\(' → logprob: -7.204755783081055
    7. '(

' → logprob: -7.329755783081055
    8. 'def' → logprob: -7.704755783081055
    9. '
' → logprob: -7.704755783081055
    10. '```' → logprob: -7.954755783081055

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03677820786833763
    2. '(
' → logprob: -4.161777973175049
    3. '#' → logprob: -5.161777973175049
    4. ',' → logprob: -5.411777973175049
    5. '\' → logprob: -5.536777973175049
    6. 'def' → logprob: -6.161777973175049
    7. 'print' → logprob: -7.411777973175049
    8. 'result' → logprob: -7.536777973175049
    9. '\n' → logprob: -7.536777973175049
    10. '(

' → logprob: -8.036778450012207

Token 11: ' main' (ID: 2758)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.7040050625801086
    2. ' sum' → logprob: -1.3290050029754639
    3. ' ' → logprob: -2.079005002975464
    4. ' add' → logprob: -3.204005002975464
    5. ' accumulate' → logprob: -3.954005002975464
    6. ' map' → logprob: -4.329005241394043
    7. ' calculate' → logprob: -5.329005241394043
    8. '_reduce' → logprob: -5.329005241394043
    9. 'reduce' → logprob: -5.579005241394043
    10. ' combine' → logprob: -5.829005241394043

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04404599219560623
    2. '():' → logprob: -3.169045925140381
    3. '(:' → logprob: -7.419045925140381
    4. ':' → logprob: -8.044046401977539
    5. ' (' → logprob: -10.544046401977539
    6. '):' → logprob: -11.419046401977539
    7. '(
' → logprob: -11.419046401977539
    8. '()' → logprob: -11.544046401977539
    9. '(event' → logprob: -12.294046401977539
    10. '(user' → logprob: -12.294046401977539

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05310612544417381
    2. ' result' → logprob: -3.9281060695648193
    3. 'result' → logprob: -4.053106307983398
    4. '    ' → logprob: -4.678106307983398
    5. ' a' → logprob: -6.803106307983398
    6. 'a' → logprob: -7.428106307983398
    7. ' ' → logprob: -7.553106307983398
    8. ' return' → logprob: -7.928106307983398
    9. ' data' → logprob: -8.053106307983398
    10. 'data' → logprob: -8.178106307983398

Token 14: ' _,' (ID: 18042)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4348058700561523
    2. ' numbers' → logprob: -1.4348058700561523
    3. 'numbers' → logprob: -1.5598058700561523
    4. ' result' → logprob: -1.8098058700561523
    5. '   ' → logprob: -2.9348058700561523
    6. ' total' → logprob: -3.4348058700561523
    7. 'total' → logprob: -3.9348058700561523
    8. 'lst' → logprob: -5.184805870056152
    9. 'return' → logprob: -5.309805870056152
    10. 'nums' → logprob: -5.309805870056152

Token 15: ' S' (ID: 336)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.961696982383728
    2. ' lst' → logprob: -1.086696982383728
    3. ' data' → logprob: -2.4616971015930176
    4. 'lst' → logprob: -3.2116971015930176
    5. ' b' → logprob: -3.3366971015930176
    6. 'numbers' → logprob: -3.4616971015930176
    7. ' arr' → logprob: -3.8366971015930176
    8. 'data' → logprob: -4.211697101593018
    9. ' nums' → logprob: -4.836697101593018
    10. ' values' → logprob: -5.461697101593018

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789242684841156
    2. '=' → logprob: -2.5789241790771484
    3. ',' → logprob: -10.703924179077148
    4. ' ' → logprob: -12.703924179077148
    5. ')' → logprob: -13.078924179077148
    6. ' =)' → logprob: -13.078924179077148
    7. 's' → logprob: -14.578924179077148
    8. ' =
' → logprob: -14.703924179077148
    9. '=}' → logprob: -14.703924179077148
    10. ' +=' → logprob: -14.828924179077148

Token 17: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6403169631958008
    2. ' input' → logprob: -1.2653169631958008
    3. 'map' → logprob: -2.140316963195801
    4. ' map' → logprob: -2.640316963195801
    5. 'int' → logprob: -7.515316963195801
    6. 'list' → logprob: -7.640316963195801
    7. ' ' → logprob: -9.0153169631958
    8. 'enumer' → logprob: -9.2653169631958
    9. ' list' → logprob: -9.3903169631958
    10. ' int' → logprob: -9.3903169631958

Token 18: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02638947404921055
    2. '(' → logprob: -4.0263895988464355
    3. '(str' → logprob: -4.9013895988464355
    4. '(lambda' → logprob: -7.4013895988464355
    5. 'int' → logprob: -9.401389122009277
    6. '(input' → logprob: -10.651389122009277
    7. '(eval' → logprob: -10.776389122009277
    8. '(tuple' → logprob: -11.651389122009277
    9. 'str' → logprob: -12.026389122009277
    10. '(list' → logprob: -12.651389122009277

Token 19: ' f' (ID: 285)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10536572337150574
    2. ' x' → logprob: -2.355365753173828
    3. 's' → logprob: -5.605365753173828
    4. 'int' → logprob: -7.480365753173828
    5. ' s' → logprob: -7.980365753173828
    6. '_:' → logprob: -8.980365753173828
    7. '_' → logprob: -9.355365753173828
    8. 'token' → logprob: -9.730365753173828
    9. 'i' → logprob: -10.105365753173828
    10. 'lambda' → logprob: -10.230365753173828

Token 20: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7351258993148804
    2. ' int' → logprob: -0.7351258993148804
    3. ':int' → logprob: -3.98512601852417
    4. ' f' → logprob: -4.23512601852417
    5. 'f' → logprob: -5.48512601852417
    6. ':' → logprob: -6.36012601852417
    7. 'x' → logprob: -7.61012601852417
    8. '(int' → logprob: -8.360125541687012
    9. ',int' → logprob: -8.360125541687012
    10. 's' → logprob: -8.610125541687012

Token 21: ' f' (ID: 285)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4362468421459198
    2. ' int' → logprob: -1.9362468719482422
    3. 'f' → logprob: -2.061246871948242
    4. ' f' → logprob: -3.061246871948242
    5. 'input' → logprob: -4.061246871948242
    6. ' input' → logprob: -4.436246871948242
    7. 'float' → logprob: -6.311246871948242
    8. 'str' → logprob: -6.936246871948242
    9. 'next' → logprob: -7.186246871948242
    10. ' next' → logprob: -7.436246871948242

Token 22: '(),' (ID: 2547)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3383329212665558
    2. '(int' → logprob: -1.5883328914642334
    3. ' int' → logprob: -3.2133328914642334
    4. 'input' → logprob: -3.3383328914642334
    5. ' input' → logprob: -5.9633331298828125
    6. 'strip' → logprob: -6.8383331298828125
    7. '(input' → logprob: -7.0883331298828125
    8. '(stdin' → logprob: -8.338333129882812
    9. '<int' → logprob: -8.463333129882812
    10. ':' → logprob: -8.463333129882812

Token 23: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3490525484085083
    2. '[int' → logprob: -1.8490525484085083
    3. '[input' → logprob: -3.0990524291992188
    4. 'input' → logprob: -3.3490524291992188
    5. ' [' → logprob: -4.349052429199219
    6. '(lambda' → logprob: -4.724052429199219
    7. '(int' → logprob: -4.849052429199219
    8. '[str' → logprob: -5.099052429199219
    9. 'lambda' → logprob: -5.349052429199219
    10. 'map' → logprob: -5.724052429199219

Token 24: 'lambda' (ID: 35280)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.024679623544216156
    2. 'int' → logprob: -4.399679660797119
    3. '(int' → logprob: -5.524679660797119
    4. '(input' → logprob: -5.774679660797119
    5. ' input' → logprob: -6.274679660797119
    6. 'iter' → logprob: -7.024679660797119
    7. 'lambda' → logprob: -7.524679660797119
    8. '[int' → logprob: -8.024679183959961
    9. '(str' → logprob: -8.524679183959961
    10. ' iter' → logprob: -8.524679183959961

Token 25: ':' (ID: 25)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6291680335998535
    2. ':' → logprob: -1.5041680335998535
    3. 'int' → logprob: -2.2541680335998535
    4. ' input' → logprob: -2.3791680335998535
    5. ' iter' → logprob: -3.7541680335998535
    6. ' int' → logprob: -4.8791680335998535
    7. 'lambda' → logprob: -5.0041680335998535
    8. 'iter' → logprob: -5.6291680335998535
    9. ':int' → logprob: -6.0041680335998535
    10. ' ' → logprob: -7.2541680335998535

Token 26: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09880049526691437
    2. 'int' → logprob: -2.5988004207611084
    3. ' input' → logprob: -3.9738004207611084
    4. ' int' → logprob: -7.3488006591796875
    5. 'map' → logprob: -9.098800659179688
    6. 'str' → logprob: -9.223800659179688
    7. ' map' → logprob: -11.223800659179688
    8. 'list' → logprob: -11.223800659179688
    9. '(int' → logprob: -12.223800659179688
    10. ' ' → logprob: -12.348800659179688

Token 27: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008267794037237763
    2. 'input' → logprob: -7.625826835632324
    3. ',input' → logprob: -8.500826835632324
    4. ',' → logprob: -9.500826835632324
    5. ' input' → logprob: -10.500826835632324
    6. '(),' → logprob: -10.625826835632324
    7. '=input' → logprob: -12.750826835632324
    8. ' (' → logprob: -14.000826835632324
    9. '<input' → logprob: -14.000826835632324
    10. '(' → logprob: -14.000826835632324

Token 28: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.024043815210461617
    2. '),' → logprob: -3.7740437984466553
    3. '(),' → logprob: -7.774044036865234
    4. '()' → logprob: -8.149044036865234
    5. '())' → logprob: -10.149044036865234
    6. ')' → logprob: -10.149044036865234
    7. '()),
' → logprob: -12.274044036865234
    8. '(' → logprob: -13.899044036865234
    9. '>(),' → logprob: -14.149044036865234
    10. '()))' → logprob: -14.649044036865234

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08987344801425934
    2. 'input' → logprob: -2.5898735523223877
    3. ' lambda' → logprob: -4.964873313903809
    4. ' str' → logprob: -5.964873313903809
    5. ' ' → logprob: -7.964873313903809
    6. 'str' → logprob: -8.214873313903809
    7. 'lambda' → logprob: -8.214873313903809
    8. '   ' → logprob: -8.464873313903809
    9. ' list' → logprob: -8.589873313903809
    10. '    ' → logprob: -10.339873313903809

Token 30: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2670123875141144
    2. '))' → logprob: -1.892012357711792
    3. '())' → logprob: -3.142012357711792
    4. '()' → logprob: -3.517012357711792
    5. ')' → logprob: -4.642012596130371
    6. '()))
' → logprob: -8.392012596130371
    7. '())))' → logprob: -8.517012596130371
    8. '()),' → logprob: -8.642012596130371
    9. '()));' → logprob: -8.892012596130371
    10. ')))' → logprob: -9.017012596130371

Token 31: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03228893131017685
    2. '()
' → logprob: -4.282289028167725
    3. ')' → logprob: -5.407289028167725
    4. '   ' → logprob: -5.657289028167725
    5. '())' → logprob: -6.157289028167725
    6. '(S' → logprob: -6.282289028167725
    7. '(' → logprob: -6.282289028167725
    8. ',' → logprob: -6.782289028167725
    9. '("")' → logprob: -8.282288551330566
    10. '
' → logprob: -8.532288551330566

Token 32: ' ans' (ID: 3345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8888936042785645
    2. '()' → logprob: -2.0138936042785645
    3. '(s' → logprob: -2.1388936042785645
    4. ')' → logprob: -2.1388936042785645
    5. ' ' → logprob: -2.7638936042785645
    6. '
' → logprob: -2.8888936042785645
    7. ',' → logprob: -3.1388936042785645
    8. '(S' → logprob: -3.1388936042785645
    9. 's' → logprob: -3.2638936042785645
    10. ' (' → logprob: -3.7638936042785645

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010580566013231874
    2. '=' → logprob: -6.876058101654053
    3. ' ' → logprob: -10.751057624816895
    4. ' +=' → logprob: -14.126057624816895
    5. '_' → logprob: -14.251057624816895
    6. ' =)' → logprob: -14.626057624816895
    7. '  ' → logprob: -14.876057624816895
    8. ' =
' → logprob: -15.001057624816895
    9. ':' → logprob: -15.376057624816895
    10. '   ' → logprob: -15.501057624816895

Token 34: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.17203029990196228
    2. 'reduce' → logprob: -1.9220303297042847
    3. ' sum' → logprob: -5.172030448913574
    4. ' S' → logprob: -6.047030448913574
    5. ' list' → logprob: -6.672030448913574
    6. 'sum' → logprob: -7.297030448913574
    7. ' '' → logprob: -8.422030448913574
    8. ''' → logprob: -8.422030448913574
    9. 'S' → logprob: -8.422030448913574
    10. '"' → logprob: -8.672030448913574

Token 35: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.026850655674934387
    2. '(' → logprob: -4.026850700378418
    3. '(lambda' → logprob: -4.776850700378418
    4. '(operator' → logprob: -8.651850700378418
    5. 'add' → logprob: -10.401850700378418
    6. ' (' → logprob: -10.901850700378418
    7. ' add' → logprob: -11.401850700378418
    8. '(+' → logprob: -14.151850700378418
    9. '```' → logprob: -14.401850700378418
    10. '((' → logprob: -14.526850700378418

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019230684265494347
    2. ',map' → logprob: -4.644230842590332
    3. ',S' → logprob: -5.144230842590332
    4. ',int' → logprob: -6.519230842590332
    5. ' ,' → logprob: -7.144230842590332
    6. ',[' → logprob: -7.144230842590332
    7. 'map' → logprob: -9.394230842590332
    8. 'S' → logprob: -9.519230842590332
    9. ' map' → logprob: -9.644230842590332
    10. ',(' → logprob: -9.644230842590332

Token 37: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6292842030525208
    2. 'S' → logprob: -1.004284143447876
    3. 'list' → logprob: -3.504284143447876
    4. '[S' → logprob: -3.629284143447876
    5. ' map' → logprob: -4.004284381866455
    6. '(map' → logprob: -4.879284381866455
    7. '[' → logprob: -5.004284381866455
    8. '[i' → logprob: -5.629284381866455
    9. '(S' → logprob: -5.754284381866455
    10. ' S' → logprob: -6.129284381866455

Token 38: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.243538036942482
    2. '(lambda' → logprob: -2.1185381412506104
    3. '(str' → logprob: -3.1185381412506104
    4. '(len' → logprob: -3.2435381412506104
    5. '(ord' → logprob: -4.618537902832031
    6. '(' → logprob: -6.118537902832031
    7. '(list' → logprob: -7.868537902832031
    8. '(float' → logprob: -8.868537902832031
    9. '(abs' → logprob: -10.993537902832031
    10. '(tuple' → logprob: -11.118537902832031

Token 39: ' i' (ID: 575)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7345089316368103
    2. 'int' → logprob: -0.8595089316368103
    3. ' lambda' → logprob: -3.359508991241455
    4. 'len' → logprob: -4.234508991241455
    5. ' len' → logprob: -4.234508991241455
    6. 'lambda' → logprob: -4.484508991241455
    7. '(int' → logprob: -4.984508991241455
    8. ':int' → logprob: -5.109508991241455
    9. '   ' → logprob: -6.234508991241455
    10. ' str' → logprob: -6.359508991241455

Token 40: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006235609762370586
    2. ':int' → logprob: -8.12562370300293
    3. ' :' → logprob: -8.12562370300293
    4. ',' → logprob: -11.87562370300293
    5. 's' → logprob: -12.00062370300293
    6. '[int' → logprob: -13.25062370300293
    7. 'int' → logprob: -13.37562370300293
    8. ':s' → logprob: -13.75062370300293
    9. ':i' → logprob: -13.87562370300293
    10. '```' → logprob: -13.87562370300293

Token 41: ' S' (ID: 336)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7262065410614014
    2. 'int' → logprob: -1.2262065410614014
    3. ' i' → logprob: -2.8512065410614014
    4. ' S' → logprob: -3.4762065410614014
    5. ' ord' → logprob: -3.4762065410614014
    6. 'S' → logprob: -3.7262065410614014
    7. ' str' → logprob: -4.3512067794799805
    8. '(int' → logprob: -4.6012067794799805
    9. ' (' → logprob: -4.8512067794799805
    10. ' ' → logprob: -4.8512067794799805

Token 42: '[i' (ID: 1768)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.8942877650260925
    2. '.count' → logprob: -0.8942877650260925
    3. '[i' → logprob: -1.7692878246307373
    4. '.index' → logprob: -5.394287586212158
    5. '.find' → logprob: -5.894287586212158
    6. '[int' → logprob: -6.394287586212158
    7. '[' → logprob: -7.269287586212158
    8. '[-' → logprob: -8.144288063049316
    9. '.startswith' → logprob: -8.394288063049316
    10. '.' → logprob: -8.644288063049316

Token 43: ':i' (ID: 34041)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6760967373847961
    2. '],' → logprob: -1.5510966777801514
    3. ':],' → logprob: -2.1760966777801514
    4. ':' → logprob: -2.5510966777801514
    5. '-' → logprob: -3.5510966777801514
    6. ':i' → logprob: -4.0510969161987305
    7. ']*' → logprob: -4.1760969161987305
    8. ':]' → logprob: -4.9260969161987305
    9. ':].' → logprob: -5.1760969161987305
    10. '**' → logprob: -6.0510969161987305

Token 44: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012686342932283878
    2. '2' → logprob: -5.262686252593994
    3. ' +' → logprob: -5.637686252593994
    4. '3' → logprob: -5.762686252593994
    5. '+i' → logprob: -8.137686729431152
    6. '6' → logprob: -9.512686729431152
    7. '-' → logprob: -9.637686729431152
    8. '   ' → logprob: -9.637686729431152
    9. '4' → logprob: -10.262686729431152
    10. ' ' → logprob: -10.262686729431152

Token 45: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24048462510108948
    2. '3' → logprob: -1.740484595298767
    3. '1' → logprob: -4.365484714508057
    4. '10' → logprob: -5.115484714508057
    5. '6' → logprob: -5.490484714508057
    6. '26' → logprob: -5.490484714508057
    7. '7' → logprob: -5.615484714508057
    8. '4' → logprob: -5.865484714508057
    9. '5' → logprob: -6.740484714508057
    10. ' ' → logprob: -6.740484714508057

Token 46: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.018981466069817543
    2. '].' → logprob: -4.143981456756592
    3. ']' → logprob: -5.893981456756592
    4. ']))' → logprob: -9.76898193359375
    5. ']),' → logprob: -10.51898193359375
    6. '   ' → logprob: -10.64398193359375
    7. ' ' → logprob: -11.51898193359375
    8. ' ],' → logprob: -11.51898193359375
    9. '),' → logprob: -12.14398193359375
    10. '],
' → logprob: -12.39398193359375

Token 47: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2994275391101837
    2. '),' → logprob: -1.4244275093078613
    3. '))' → logprob: -5.549427509307861
    4. ')' → logprob: -5.924427509307861
    5. ')))' → logprob: -5.924427509307861
    6. ')),' → logprob: -6.299427509307861
    7. '.count' → logprob: -7.049427509307861
    8. ').' → logprob: -7.174427509307861
    9. '[::-' → logprob: -7.174427509307861
    10. '.' → logprob: -7.674427509307861

Token 48: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.37027087807655334
    2. '"' → logprob: -1.245270848274231
    3. ' '' → logprob: -4.995270729064941
    4. ' "' → logprob: -5.495270729064941
    5. ''t' → logprob: -6.995270729064941
    6. ''a' → logprob: -7.370270729064941
    7. ''A' → logprob: -7.495270729064941
    8. ''S' → logprob: -7.620270729064941
    9. '"K' → logprob: -7.745270729064941
    10. ''o' → logprob: -7.870270729064941

Token 49: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.06133488193154335
    2. 'ARC' → logprob: -4.18633508682251
    3. ''' → logprob: -5.06133508682251
    4. 'JO' → logprob: -5.06133508682251
    5. 'abc' → logprob: -5.56133508682251
    6. 'IO' → logprob: -5.68633508682251
    7. '"' → logprob: -5.81133508682251
    8. '777' → logprob: -5.81133508682251
    9. 'o' → logprob: -6.06133508682251
    10. 'AG' → logprob: -6.06133508682251

Token 50: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.012464214116334915
    2. ''' → logprob: -5.0124640464782715
    3. ',' → logprob: -5.3874640464782715
    4. ''),' → logprob: -7.5124640464782715
    5. '),' → logprob: -9.13746452331543
    6. '')' → logprob: -9.38746452331543
    7. ' ',' → logprob: -9.88746452331543
    8. ')' → logprob: -10.13746452331543
    9. ' ,' → logprob: -10.26246452331543
    10. ' ' → logprob: -10.38746452331543

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17976592481136322
    2. ' range' → logprob: -1.8047659397125244
    3. '	range' → logprob: -11.679765701293945
    4. '(range' → logprob: -12.429765701293945
    5. ' ' → logprob: -12.804765701293945
    6. '   ' → logprob: -13.304765701293945
    7. '  ' → logprob: -13.429765701293945
    8. ')' → logprob: -13.554765701293945
    9. ' xrange' → logprob: -14.554765701293945
    10. '[' → logprob: -15.054765701293945

Token 52: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -10.000060081481934
    3. 'len' → logprob: -11.125060081481934
    4. ' len' → logprob: -15.625060081481934
    5. '(n' → logprob: -16.25006103515625
    6. '((' → logprob: -18.12506103515625
    7. '	len' → logprob: -18.25006103515625
    8. '(l' → logprob: -18.87506103515625
    9. '[len' → logprob: -19.50006103515625
    10. ',len' → logprob: -19.50006103515625

Token 53: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.049755782238208e-05
    2. 'S' → logprob: -10.12505054473877
    3. '(' → logprob: -12.00005054473877
    4. '(s' → logprob: -13.50005054473877
    5. '-' → logprob: -13.62505054473877
    6. ')' → logprob: -14.25005054473877
    7. 's' → logprob: -15.12505054473877
    8. '   ' → logprob: -16.250049591064453
    9. '[S' → logprob: -16.375049591064453
    10. ' S' → logprob: -16.625049591064453

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06894107162952423
    2. ')-' → logprob: -3.068941116333008
    3. '-' → logprob: -4.068941116333008
    4. ' -' → logprob: -6.068941116333008
    5. ' )' → logprob: -7.568941116333008
    6. ' ' → logprob: -9.818941116333008
    7. ')))' → logprob: -10.068941116333008
    8. '   ' → logprob: -10.193941116333008
    9. '3' → logprob: -10.318941116333008
    10. '  ' → logprob: -11.693941116333008

Token 55: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16056804358959198
    2. ' -' → logprob: -1.9105679988861084
    3. ' ' → logprob: -8.910568237304688
    4. ')),' → logprob: -9.785568237304688
    5. ')' → logprob: -9.910568237304688
    6. ')))' → logprob: -10.285568237304688
    7. '))' → logprob: -10.535568237304688
    8. '   ' → logprob: -11.535568237304688
    9. '3' → logprob: -11.785568237304688
    10. '  ' → logprob: -11.910568237304688

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029876602813601494
    2. ' ' → logprob: -3.529876708984375
    3. '3' → logprob: -9.029876708984375
    4. '   ' → logprob: -12.779876708984375
    5. '  ' → logprob: -13.842376708984375
    6. '4' → logprob: -14.029876708984375
    7. '```' → logprob: -14.842376708984375
    8. '1' → logprob: -15.967376708984375
    9. ')' → logprob: -16.279876708984375
    10. '    ' → logprob: -16.279876708984375

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014190420042723417
    2. ' ' → logprob: -6.6264190673828125
    3. '3' → logprob: -9.376419067382812
    4. '```' → logprob: -12.751419067382812
    5. '   ' → logprob: -13.688919067382812
    6. '+' → logprob: -13.813919067382812
    7. '-' → logprob: -13.813919067382812
    8. '  ' → logprob: -14.563919067382812
    9. '``' → logprob: -15.876419067382812
    10. '２' → logprob: -15.938919067382812

Token 58: ')),' (ID: 12098)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.31693968176841736
    2. '))' → logprob: -1.3169397115707397
    3. ')),' → logprob: -6.691939830780029
    4. ')' → logprob: -7.066939830780029
    5. '),' → logprob: -7.441939830780029
    6. ')))
' → logprob: -7.441939830780029
    7. '))))' → logprob: -8.816939353942871
    8. ' ' → logprob: -9.691939353942871
    9. '))
' → logprob: -9.941939353942871
    10. ' ))' → logprob: -10.066939353942871

Token 59: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026319922879338264
    2. ' ' → logprob: -3.651319980621338
    3. ')' → logprob: -11.52631950378418
    4. '1' → logprob: -11.90131950378418
    5. '  ' → logprob: -14.02631950378418
    6. '3' → logprob: -14.83881950378418
    7. 'False' → logprob: -15.40131950378418
    8. '   ' → logprob: -15.52631950378418
    9. '2' → logprob: -15.65131950378418
    10. ' )' → logprob: -15.83881950378418

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001930420519784093
    2. ' ' → logprob: -6.251930236816406
    3. 'False' → logprob: -14.626930236816406
    4. ')' → logprob: -15.001930236816406
    5. '1' → logprob: -15.376930236816406
    6. '  ' → logprob: -15.626930236816406
    7. '[' → logprob: -15.939430236816406
    8. '   ' → logprob: -16.064430236816406
    9. '-' → logprob: -16.501930236816406
    10. '00' → logprob: -16.689430236816406

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012701898231171072
    2. ')
' → logprob: -9.000126838684082
    3. ' )' → logprob: -13.250126838684082
    4. ')
' → logprob: -14.750126838684082
    5. ')

' → logprob: -14.875126838684082
    6. ')return' → logprob: -15.125126838684082
    7. '   ' → logprob: -15.250126838684082
    8. ')`' → logprob: -15.375126838684082
    9. '))' → logprob: -15.500126838684082
    10. ')**' → logprob: -17.2501277923584

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10318507254123688
    2. '<|end|>' → logprob: -3.2281851768493652
    3. '
' → logprob: -3.6031851768493652
    4. ')' → logprob: -3.6031851768493652
    5. ')
' → logprob: -6.728185176849365
    6. '    
' → logprob: -7.353185176849365
    7. 'print' → logprob: -7.478185176849365
    8. ' ' → logprob: -7.603185176849365
    9. '```' → logprob: -8.603184700012207
    10. '  ' → logprob: -8.978184700012207

Token 63: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04091325402259827
    2. '
' → logprob: -4.165913105010986
    3. ')' → logprob: -4.665913105010986
    4. '<|end|>' → logprob: -5.415913105010986
    5. 'print' (adapté à ' print') → logprob: -5.790913105010986
    6. 'return' → logprob: -6.290913105010986
    7. '    
' → logprob: -6.415913105010986
    8. ' ' → logprob: -6.915913105010986
    9. ' return' → logprob: -7.165913105010986
    10. '\n' → logprob: -7.665913105010986

Token 64: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.2519998848438263
    2. '(' → logprob: -1.501999855041504
    3. ' (' → logprob: -9.876999855041504
    4. '()' → logprob: -12.501999855041504
    5. '(len' → logprob: -12.876999855041504
    6. '('' → logprob: -12.876999855041504
    7. '(answer' → logprob: -13.126999855041504
    8. '(
' → logprob: -13.376999855041504
    9. '(abs' → logprob: -13.501999855041504
    10. '("("' → logprob: -13.751999855041504

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '))' → logprob: -13.75000286102295
    3. ' )' → logprob: -14.00000286102295
    4. ')
' → logprob: -14.62500286102295
    5. ')`' → logprob: -14.62500286102295
    6. '`)' → logprob: -15.75000286102295
    7. '）' → logprob: -17.875003814697266
    8. ')}' → logprob: -18.125003814697266
    9. ')))' → logprob: -18.125003814697266
    10. '')' → logprob: -18.250003814697266

Token 66: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030458278954029083
    2. '<|end|>' → logprob: -3.6554582118988037
    3. '()' → logprob: -6.030458450317383
    4. '
' → logprob: -7.280458450317383
    5. '(' → logprob: -8.280458450317383
    6. '```' → logprob: -8.530458450317383
    7. '<|end|>' → logprob: -8.905458450317383
    8. '#' → logprob: -9.030458450317383
    9. '\n' → logprob: -9.155458450317383
    10. '[' → logprob: -10.030458450317383

Token 67: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023269006982445717
    2. '__' → logprob: -3.773268938064575
    3. ' ' → logprob: -11.023268699645996
    4. ' ' → logprob: -12.523268699645996
    5. '_' → logprob: -13.148268699645996
    6. '  ' → logprob: -14.273268699645996
    7. '___' → logprob: -14.773268699645996
    8. ' _' → logprob: -15.398268699645996
    9. '/__' → logprob: -16.148269653320312
    10. '_name' → logprob: -16.523269653320312

Token 68: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003930192324332893
    2. '==' → logprob: -8.87539291381836
    3. '__.__' → logprob: -9.00039291381836
    4. ' ==' → logprob: -9.75039291381836
    5. ' __' → logprob: -10.12539291381836
    6. '__.' → logprob: -11.25039291381836
    7. '.__' → logprob: -12.12539291381836
    8. '_' → logprob: -12.62539291381836
    9. '.' → logprob: -13.00039291381836
    10. '___' → logprob: -13.25039291381836

Token 69: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.250003814697266
    3. '__.__' → logprob: -14.000003814697266
    4. '___' → logprob: -15.000003814697266
    5. '____' → logprob: -15.250003814697266
    6. '__.' → logprob: -16.875003814697266
    7. '__
' → logprob: -17.000003814697266
    8. '__('' → logprob: -17.375003814697266
    9. '__

' → logprob: -17.375003814697266
    10. '==' → logprob: -17.500003814697266

Token 70: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02644241228699684
    2. ' ==' → logprob: -3.901442527770996
    3. '==' → logprob: -5.151442527770996
    4. '_' → logprob: -10.151442527770996
    5. '=="' → logprob: -10.526442527770996
    6. '___' → logprob: -11.651442527770996
    7. ' __' → logprob: -12.026442527770996
    8. '__.__' → logprob: -12.526442527770996
    9. '=' → logprob: -13.651442527770996
    10. '=='' → logprob: -13.776442527770996

Token 71: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5761851072311401
    2. ''' → logprob: -0.8261851072311401
    3. ' "' → logprob: -9.07618522644043
    4. ' "__' → logprob: -10.07618522644043
    5. '__' → logprob: -10.20118522644043
    6. ' '' → logprob: -10.20118522644043
    7. ' '__' → logprob: -11.45118522644043
    8. ' ' → logprob: -14.07618522644043
    9. '"user' → logprob: -14.45118522644043
    10. '`' → logprob: -14.57618522644043

Token 72: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.2127087504486553e-05
    2. 'name' → logprob: -10.750021934509277
    3. 'm' → logprob: -15.250021934509277
    4. '_main' → logprob: -15.375021934509277
    5. ' main' → logprob: -16.500022888183594
    6. '__' → logprob: -16.750022888183594
    7. 'ma' → logprob: -17.625022888183594
    8. 'built' → logprob: -17.875022888183594
    9. '-main' → logprob: -19.000022888183594
    10. 'maine' → logprob: -20.000022888183594

Token 73: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.3134734332561493
    2. '__' → logprob: -1.3134734630584717
    3. '__:' → logprob: -8.81347370147705
    4. '__":
' → logprob: -10.31347370147705
    5. '__.' → logprob: -10.56347370147705
    6. '_' → logprob: -13.18847370147705
    7. '':' → logprob: -14.56347370147705
    8. '__('' → logprob: -14.81347370147705
    9. '___' → logprob: -15.18847370147705
    10. '__.__' → logprob: -15.43847370147705

Token 74: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001392973237670958
    2. '	main' → logprob: -7.251392841339111
    3. 'main' → logprob: -7.626392841339111
    4. '   ' → logprob: -9.12639331817627
    5. ' ' → logprob: -9.75139331817627
    6. '_main' → logprob: -10.75139331817627
    7. '   ' → logprob: -13.37639331817627
    8. '(main' → logprob: -13.37639331817627
    9. '    
' → logprob: -14.12639331817627
    10. ' ' → logprob: -14.37639331817627

Token 75: ' (' (ID: 350)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -20.125
    4. 'ma' → logprob: -22.625
    5. 'mai' → logprob: -22.625
    6. '_main' → logprob: -22.625
    7. 'maine' → logprob: -23.75
    8. 'm' → logprob: -24.5
    9. '.main' → logprob: -24.625
    10. '   ' → logprob: -25.125

Token 76: 'lambda' (ID: 35280)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043162284418940544
    2. ')' → logprob: -8.000432014465332
    3. ' main' → logprob: -9.250432014465332
    4. '	main' → logprob: -15.750432014465332
    5. '_main' → logprob: -17.625431060791016
    6. 'Main' → logprob: -19.875431060791016
    7. '   ' → logprob: -19.875431060791016
    8. ' )' → logprob: -20.250431060791016
    9. '.main' → logprob: -20.250431060791016
    10. ' ' → logprob: -20.375431060791016

Token 77: ' f' (ID: 285)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7442653179168701
    2. 'main' → logprob: -1.7442653179168701
    3. ' ):' → logprob: -1.7442653179168701
    4. ' :' → logprob: -2.74426531791687
    5. '):' → logprob: -2.86926531791687
    6. ':' → logprob: -4.119265556335449
    7. ')' → logprob: -4.119265556335449
    8. ' )' → logprob: -4.244265556335449
    9. '	main' → logprob: -6.119265556335449
    10. '():' → logprob: -6.869265556335449

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20634150505065918
    2. '():' → logprob: -1.9563415050506592
    3. ':f' → logprob: -3.706341505050659
    4. ' :' → logprob: -4.956341743469238
    5. '()' → logprob: -5.581341743469238
    6. ' f' → logprob: -5.956341743469238
    7. ')' → logprob: -6.206341743469238
    8. '(f' → logprob: -6.456341743469238
    9. 'f' → logprob: -6.456341743469238
    10. '=f' → logprob: -7.331341743469238

Token 79: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05512881651520729
    2. ' f' → logprob: -2.930128812789917
    3. '__' → logprob: -9.430129051208496
    4. '   ' → logprob: -9.680129051208496
    5. ' ' → logprob: -10.305129051208496
    6. 'print' → logprob: -10.930129051208496
    7. 'exit' → logprob: -11.430129051208496
    8. ' __' → logprob: -11.930129051208496
    9. ')' → logprob: -12.055129051208496
    10. '	f' → logprob: -12.180129051208496

Token 80: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5238869786262512
    2. '()' → logprob: -0.8988869786262512
    3. '()(' → logprob: -8.648886680603027
    4. '(f' → logprob: -8.898886680603027
    5. '().__' → logprob: -9.023886680603027
    6. ')' → logprob: -9.148886680603027
    7. ' ()' → logprob: -9.148886680603027
    8. ' ())' → logprob: -10.773886680603027
    9. '();)' → logprob: -11.023886680603027
    10. '()
' → logprob: -11.148886680603027

Token 81: '(' (ID: 7)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0015350970206782222
    2. '(lambda' → logprob: -6.626534938812256
    3. ' (' → logprob: -9.126535415649414
    4. '(' → logprob: -9.626535415649414
    5. '(Main' → logprob: -10.876535415649414
    6. 'main' → logprob: -12.251535415649414
    7. '(func' → logprob: -13.001535415649414
    8. '(print' → logprob: -13.126535415649414
    9. ' main' → logprob: -13.251535415649414
    10. '(run' → logprob: -14.001535415649414

Token 82: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005532711511477828
    2. ' main' → logprob: -7.500553131103516
    3. '(main' → logprob: -15.750553131103516
    4. '	main' → logprob: -17.000553131103516
    5. ')' → logprob: -19.625553131103516
    6. ' ' → logprob: -19.625553131103516
    7. '   ' → logprob: -20.125553131103516
    8. 'lambda' → logprob: -20.375553131103516
    9. '  ' → logprob: -20.625553131103516
    10. '.main' → logprob: -20.750553131103516

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.256334695033729e-05
    2. '())' → logprob: -9.875082969665527
    3. '()' → logprob: -10.625082969665527
    4. ')
' → logprob: -13.000082969665527
    5. '))' → logprob: -13.000082969665527
    6. ' )' → logprob: -13.250082969665527
    7. ')`' → logprob: -15.125082969665527
    8. '(' → logprob: -17.12508201599121
    9. ')#' → logprob: -17.25008201599121
    10. ')}' → logprob: -17.37508201599121


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 38.27%
Précision adaptée (1ère position): 38.27%
Précision (top 10): 74.07%
================================================================================
