================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc_factorials_and_inverses(max_n, modulus):
    factorial_list = [1] * (max_n + 1)
    inverse_list = [1] * (max_n + 1)
    current_factorial = 1
    for idx in range(1, max_n + 1):
        current_factorial = (current_factorial * idx) % modulus
        factorial_list[idx] = current_factorial
    inverse_list[max_n] = pow(factorial_list[max_n], modulus - 2, modulus)
    for idx in range(max_n - 1, -1, -1):
        inverse_list[idx] = (inverse_list[idx + 1] * (idx + 1)) % modulus
    return factorial_list, inverse_list

def calc_combination(n_value, r_value, modulus, factorial_list, inverse_list):
    if r_value < 0 or n_value < r_value:
        return 0
    return factorial_list[n_value] * inverse_list[n_value - r_value] % modulus * inverse_list[r_value] % modulus

input_n, input_x = map(int, input().split())
modulus_value = 998244353
factorial_list, inverse_list = calc_factorials_and_inverses(input_n + 15, modulus_value)
total_count = 0

for count_two in range(input_n + 1):
    for count_one in range(input_n + 1):
        if count_one + count_two > input_n:
            break
        total_distance = count_one + count_two * 2
        count_zero = calc_combination(input_n, count_one + count_two, modulus_value, factorial_list, inverse_list)
        current_count = 0

        if total_distance < input_x:
            current_count = calc_combination(count_one + count_two, count_one, modulus_value, factorial_list, inverse_list) * count_zero
        elif total_distance == input_x:
            continue
        elif total_distance < 2 * input_x:
            if (total_distance - input_x) % 2 == 0:
                continue
            adjusted_two = count_two - (total_distance - input_x + 1)
            if adjusted_two >= 0:
                current_count = calc_combination(count_one + adjusted_two, count_one, modulus_value, factorial_list, inverse_list) * count_zero
        elif input_x % 2 == 1 and count_one == 0:
            current_count = count_zero

        total_count = (total_count + current_count) % modulus_value

print(total_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '_factor' (ID: 43757)
  → Token d'amorce (pas de prédiction)

Token 3: 'ials' (ID: 16596)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -8.709308167453855e-05
    2. '_factor' → logprob: -10.625086784362793
    3. 'ial' → logprob: -11.000086784362793
    4. '```' → logprob: -11.625086784362793
    5. 'ialize' → logprob: -11.750086784362793
    6. '_or' → logprob: -12.125086784362793
    7. '_:' → logprob: -13.000086784362793
    8. '(' → logprob: -13.125086784362793
    9. 's' → logprob: -13.500086784362793
    10. '_size' → logprob: -13.500086784362793

Token 4: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003434834536164999
    2. '_' → logprob: -6.253434658050537
    3. '(:' → logprob: -7.253434658050537
    4. '():' → logprob: -8.378435134887695
    5. '(_:' → logprob: -8.628435134887695
    6. '(_' → logprob: -9.003435134887695
    7. '```' → logprob: -9.503435134887695
    8. ':' → logprob: -9.503435134887695
    9. '_:' → logprob: -10.878435134887695
    10. ' (' → logprob: -11.128435134887695

Token 5: '_in' (ID: 2267)
  Prédit: '_return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_return' → logprob: -1.0862998962402344
    2. '_sum' → logprob: -1.9612998962402344
    3. '_com' → logprob: -2.8362998962402344
    4. '_s' → logprob: -3.0862998962402344
    5. '_pr' → logprob: -3.0862998962402344
    6. 'pr' → logprob: -3.2112998962402344
    7. '_cache' → logprob: -3.4612998962402344
    8. 's' → logprob: -3.9612998962402344
    9. '_values' → logprob: -3.9612998962402344
    10. '_factor' → logprob: -3.9612998962402344

Token 6: 'vers' (ID: 3674)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.22894705832004547
    2. 'puts' → logprob: -2.228947162628174
    3. 't' → logprob: -2.853947162628174
    4. 'it' → logprob: -4.353947162628174
    5. '_' → logprob: -4.603947162628174
    6. '_range' → logprob: -5.978947162628174
    7. 'p' → logprob: -6.103947162628174
    8. 'range' → logprob: -6.103947162628174
    9. 'g' → logprob: -6.478947162628174
    10. 'place' → logprob: -6.978947162628174

Token 7: 'es' (ID: 268)
  Prédit: 'ors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.2267940193414688
    2. 'als' → logprob: -2.8517940044403076
    3. 'or' → logprob: -3.1017940044403076
    4. '(' → logprob: -3.3517940044403076
    5. 'ize' → logprob: -3.7267940044403076
    6. 'es' → logprob: -4.726794242858887
    7. '```' → logprob: -5.476794242858887
    8. 'ores' → logprob: -5.601794242858887
    9. '_' → logprob: -5.851794242858887
    10. '()' → logprob: -5.976794242858887

Token 8: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016025803983211517
    2. '_' → logprob: -5.266026020050049
    3. '(:' → logprob: -5.641026020050049
    4. '(_:' → logprob: -5.641026020050049
    5. '():' → logprob: -6.516026020050049
    6. '_:' → logprob: -7.266026020050049
    7. '```' → logprob: -7.516026020050049
    8. '(_' → logprob: -7.641026020050049
    9. ':' → logprob: -9.51602554321289
    10. '(":' → logprob: -9.64102554321289

Token 9: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0723765566945076
    2. '_n' → logprob: -3.8223764896392822
    3. '_value' → logprob: -3.8223764896392822
    4. '_factor' → logprob: -4.572376728057861
    5. '_val' → logprob: -5.197376728057861
    6. '_size' → logprob: -6.197376728057861
    7. '_)' → logprob: -6.322376728057861
    8. '):' → logprob: -6.322376728057861
    9. '_num' → logprob: -6.322376728057861
    10. '_number' → logprob: -6.697376728057861

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006487749982625246
    2. ')' → logprob: -5.506487846374512
    3. ':' → logprob: -6.131487846374512
    4. '```' → logprob: -9.631487846374512
    5. ''):' → logprob: -9.756487846374512
    6. ',' → logprob: -10.756487846374512
    7. '():' → logprob: -11.006487846374512
    8. '):
' → logprob: -11.256487846374512
    9. ' ):' → logprob: -11.506487846374512
    10. '_' → logprob: -11.756487846374512

Token 11: ' modulus' (ID: 149464)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.7235950827598572
    2. ' modulus' → logprob: -1.598595142364502
    3. ' p' → logprob: -1.723595142364502
    4. 'mod' → logprob: -2.098595142364502
    5. 'p' → logprob: -5.348595142364502
    6. ' MOD' → logprob: -5.848595142364502
    7. ' modulo' → logprob: -6.598595142364502
    8. ' modular' → logprob: -6.723595142364502
    9. 'MOD' → logprob: -7.598595142364502
    10. ' m' → logprob: -8.098594665527344

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019407729851081967
    2. ':' → logprob: -6.876940727233887
    3. ')' → logprob: -8.126940727233887
    4. '):
' → logprob: -8.376940727233887
    5. '```' → logprob: -8.501940727233887
    6. ''):' → logprob: -8.876940727233887
    7. '   ' → logprob: -12.001940727233887
    8. '"):' → logprob: -12.001940727233887
    9. ' ' → logprob: -12.251940727233887
    10. '`:' → logprob: -12.376940727233887

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25944983959198
    2. '   ' → logprob: -1.50944983959198
    3. '```' → logprob: -5.1344499588012695
    4. '():' → logprob: -7.3844499588012695
    5. ':
' → logprob: -8.25944995880127
    6. '    
' → logprob: -9.00944995880127
    7. '``' → logprob: -9.25944995880127
    8. '":' → logprob: -9.50944995880127
    9. '    ' → logprob: -9.63444995880127
    10. '`:' → logprob: -10.13444995880127

Token 14: ' factorial' (ID: 111204)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2931772768497467
    2. '```' → logprob: -1.5431772470474243
    3. ':' → logprob: -3.793177366256714
    4. '``' → logprob: -5.043177127838135
    5. '       ' → logprob: -6.293177127838135
    6. '_' → logprob: -6.293177127838135
    7. ' ' → logprob: -6.293177127838135
    8. '    
' → logprob: -6.793177127838135
    9. '`' → logprob: -6.918177127838135
    10. ':
' → logprob: -7.793177127838135

Token 15: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005472094286233187
    2. '_s' → logprob: -5.255472183227539
    3. '_' → logprob: -8.630472183227539
    4. ')' → logprob: -11.130472183227539
    5. ' s' → logprob: -11.755472183227539
    6. '[' → logprob: -11.755472183227539
    7. '[s' → logprob: -12.005472183227539
    8. '=' → logprob: -12.130472183227539
    9. ' =' → logprob: -12.505472183227539
    10. '(' → logprob: -12.880472183227539

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5655879974365234
    2. ' =' → logprob: -1.1905879974365234
    3. 's' → logprob: -2.0655879974365234
    4. ' ' → logprob: -8.190587997436523
    5. '[' → logprob: -8.190587997436523
    6. '[:]' → logprob: -8.565587997436523
    7. '=[]' → logprob: -9.065587997436523
    8. '_' → logprob: -9.190587997436523
    9. '   ' → logprob: -9.315587997436523
    10. '_s' → logprob: -10.815587997436523

Token 17: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.0549142099916935
    2. '[' → logprob: -2.9299142360687256
    3. ' ' → logprob: -11.054914474487305
    4. ' []' → logprob: -11.929914474487305
    5. '[]' → logprob: -12.429914474487305
    6. '[n' → logprob: -12.929914474487305
    7. '1' → logprob: -14.429914474487305
    8. '[int' → logprob: -14.929914474487305
    9. '[i' → logprob: -15.304914474487305
    10. '[f' → logprob: -15.304914474487305

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.750004768371582
    4. '0' → logprob: -18.1250057220459
    5. '```' → logprob: -18.1250057220459
    6. '[' → logprob: -19.0000057220459
    7. '  ' → logprob: -19.1250057220459
    8. 'None' → logprob: -19.6250057220459
    9. '`' → logprob: -19.7500057220459
    10. ')' → logprob: -19.8750057220459

Token 19: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35626766085624695
    2. ']' → logprob: -1.2312676906585693
    3. ' for' → logprob: -5.60626745223999
    4. ' ]' → logprob: -5.85626745223999
    5. ')' → logprob: -7.48126745223999
    6. ',
' → logprob: -7.60626745223999
    7. ' ,' → logprob: -9.231267929077148
    8. 'for' → logprob: -10.231267929077148
    9. ')]' → logprob: -11.106267929077148
    10. ' )' → logprob: -12.106267929077148

Token 20: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010098269209265709
    2. ',
' → logprob: -4.885098457336426
    3. ' for' → logprob: -6.510098457336426
    4. '[' → logprob: -7.760098457336426
    5. 'for' → logprob: -8.635098457336426
    6. '```' → logprob: -8.635098457336426
    7. ')' → logprob: -9.760098457336426
    8. '   ' → logprob: -10.135098457336426
    9. ' ,' → logprob: -10.260098457336426
    10. ']' → logprob: -10.385098457336426

Token 21: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.006719282828271389
    2. ' (' → logprob: -5.00671911239624
    3. '[max' → logprob: -13.506719589233398
    4. ' max' → logprob: -14.131719589233398
    5. '(' → logprob: -14.131719589233398
    6. '(min' → logprob: -15.006719589233398
    7. '(m' → logprob: -15.506719589233398
    8. 'max' → logprob: -15.881719589233398
    9. '(mx' → logprob: -16.1317195892334
    10. '(len' → logprob: -16.1317195892334

Token 22: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006728991866111755
    2. ' max' → logprob: -5.0067291259765625
    3. '(max' → logprob: -11.256729125976562
    4. ' ' → logprob: -15.256729125976562
    5. '   ' → logprob: -15.381729125976562
    6. '	max' → logprob: -16.381729125976562
    7. '[max' → logprob: -17.131729125976562
    8. ',max' → logprob: -17.256729125976562
    9. ')' → logprob: -17.381729125976562
    10. '=max' → logprob: -17.881729125976562

Token 23: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -9.372294698550832e-06
    2. '_' → logprob: -12.250009536743164
    3. '+' → logprob: -13.000009536743164
    4. '```' → logprob: -14.000009536743164
    5. ' _' → logprob: -14.250009536743164
    6. ')_' → logprob: -15.500009536743164
    7. ' ' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.125009536743164
    9. '_i' → logprob: -16.375009536743164
    10. '\' → logprob: -16.500009536743164

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033651694655418396
    2. ' +' → logprob: -3.40865159034729
    3. ' ' → logprob: -12.783651351928711
    4. '+
' → logprob: -13.283651351928711
    5. ' plus' → logprob: -14.783651351928711
    6. ')' → logprob: -15.283651351928711
    7. ' +
' → logprob: -15.658651351928711
    8. '_plus' → logprob: -15.908651351928711
    9. '＋' → logprob: -16.03365135192871
    10. '```' → logprob: -16.40865135192871

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815076172351837
    2. ' ' → logprob: -4.018150806427002
    3. '```' → logprob: -15.268150329589844
    4. ' ' → logprob: -15.393150329589844
    5. '2' → logprob: -16.143150329589844
    6. '   ' → logprob: -16.143150329589844
    7. ')' → logprob: -16.143150329589844
    8. '  ' → logprob: -17.518150329589844
    9. '`' → logprob: -18.143150329589844
    10. '7' → logprob: -18.893150329589844

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. ')' → logprob: -17.00048828125
    4. '   ' → logprob: -17.75048828125
    5. '```' → logprob: -17.75048828125
    6. '  ' → logprob: -17.87548828125
    7. '１' → logprob: -18.62548828125
    8. '2' → logprob: -18.62548828125
    9. ' ' → logprob: -19.62548828125
    10. '`' → logprob: -19.75048828125

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003532198315951973
    2. ')
' → logprob: -8.00035285949707
    3. ' )' → logprob: -11.37535285949707
    4. '`)' → logprob: -13.37535285949707
    5. ')`' → logprob: -13.75035285949707
    6. '   ' → logprob: -13.75035285949707
    7. ')
' → logprob: -13.87535285949707
    8. ']' → logprob: -15.00035285949707
    9. ')

' → logprob: -15.12535285949707
    10. '```' → logprob: -15.25035285949707

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5849378705024719
    2. '
' → logprob: -1.0849378108978271
    3. ' for' → logprob: -2.709937810897827
    4. '    
' → logprob: -3.584937810897827
    5. 'for' → logprob: -5.209938049316406
    6. '   
' → logprob: -6.084938049316406
    7. ' 
' → logprob: -6.834938049316406
    8. '```' → logprob: -7.459938049316406
    9. '\n' → logprob: -7.834938049316406
    10. '  
' → logprob: -7.834938049316406

Token 29: ' inverse' (ID: 53743)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7010568380355835
    2. '   ' → logprob: -1.0760568380355835
    3. 'for' → logprob: -2.076056957244873
    4. '
' → logprob: -3.576056957244873
    5. '    
' → logprob: -5.451056957244873
    6. '\n' → logprob: -6.326056957244873
    7. '```' → logprob: -6.451056957244873
    8. ' 
' → logprob: -6.951056957244873
    9. ' ' → logprob: -7.951056957244873
    10. '   
' → logprob: -8.326056480407715

Token 30: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.09617146849632263
    2. 's' → logprob: -2.4711713790893555
    3. '_' → logprob: -5.3461713790893555
    4. '_s' → logprob: -6.8461713790893555
    5. '_factor' → logprob: -6.9711713790893555
    6. ' =' → logprob: -8.846171379089355
    7. '[' → logprob: -9.471171379089355
    8. '=' → logprob: -10.221171379089355
    9. '_f' → logprob: -10.596171379089355
    10. '_lst' → logprob: -10.971171379089355

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019360085716471076
    2. '=' → logprob: -6.251935958862305
    3. ' ' → logprob: -12.501935958862305
    4. '[' → logprob: -12.751935958862305
    5. 's' → logprob: -15.501935958862305
    6. '  ' → logprob: -15.501935958862305
    7. '   ' → logprob: -15.876935958862305
    8. ' =[' → logprob: -15.876935958862305
    9. ')' → logprob: -17.126935958862305
    10. ']' → logprob: -17.626935958862305

Token 32: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759427547454834
    2. '[' → logprob: -0.8259427547454834
    3. ' ' → logprob: -12.950942993164062
    4. '   ' → logprob: -14.950942993164062
    5. '1' → logprob: -15.325942993164062
    6. '[len' → logprob: -16.450942993164062
    7. '  ' → logprob: -16.575942993164062
    8. ' ' → logprob: -16.700942993164062
    9. '[int' → logprob: -16.950942993164062
    10. '[-' → logprob: -17.075942993164062

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00195979792624712
    2. '0' → logprob: -6.251959800720215
    3. ' ' → logprob: -10.501959800720215
    4. 'None' → logprob: -13.376959800720215
    5. '[' → logprob: -13.751959800720215
    6. '```' → logprob: -14.876959800720215
    7. '(' → logprob: -15.626959800720215
    8. '   ' → logprob: -15.626959800720215
    9. ')' → logprob: -16.0019588470459
    10. '-' → logprob: -16.1269588470459

Token 34: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009785249829292297
    2. ']' → logprob: -4.884785175323486
    3. ' )' → logprob: -6.634785175323486
    4. ' ' → logprob: -7.884785175323486
    5. ' ]' → logprob: -8.384785652160645
    6. ' *' → logprob: -9.384785652160645
    7. '   ' → logprob: -9.634785652160645
    8. '*' → logprob: -10.009785652160645
    9. '    ' → logprob: -10.634785652160645
    10. ')]' → logprob: -11.759785652160645

Token 35: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.649797797203064
    2. ' ' → logprob: -1.399797797203064
    3. '[' → logprob: -2.2747979164123535
    4. ' *' → logprob: -3.0247979164123535
    5. ')' → logprob: -3.6497979164123535
    6. '    ' → logprob: -3.7747979164123535
    7. '(' → logprob: -5.3997979164123535
    8. ',' → logprob: -5.5247979164123535
    9. '0' → logprob: -5.6497979164123535
    10. '  ' → logprob: -5.7747979164123535

Token 36: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5759587287902832
    2. '(max' → logprob: -0.8259587287902832
    3. '(len' → logprob: -11.450958251953125
    4. '(' → logprob: -12.825958251953125
    5. ' ' → logprob: -12.825958251953125
    6. ' max' → logprob: -13.450958251953125
    7. '[max' → logprob: -14.200958251953125
    8. 'max' → logprob: -14.450958251953125
    9. ' ' → logprob: -15.700958251953125
    10. '  ' → logprob: -16.325958251953125

Token 37: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001831565605243668
    2. ' max' → logprob: -8.62518310546875
    3. '(max' → logprob: -12.62518310546875
    4. '   ' → logprob: -15.87518310546875
    5. ' ' → logprob: -16.50018310546875
    6. '	max' → logprob: -17.62518310546875
    7. ')' → logprob: -18.50018310546875
    8. 'maxlength' → logprob: -18.75018310546875
    9. '[max' → logprob: -19.00018310546875
    10. '  ' → logprob: -19.37518310546875

Token 38: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.6405310816480778e-05
    2. '_' → logprob: -11.125016212463379
    3. ')' → logprob: -14.500016212463379
    4. 'n' → logprob: -14.625016212463379
    5. ')_' → logprob: -14.875016212463379
    6. ' _' → logprob: -16.500017166137695
    7. '```' → logprob: -16.750017166137695
    8. '_f' → logprob: -17.875017166137695
    9. '_)' → logprob: -17.875017166137695
    10. '_i' → logprob: -17.875017166137695

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519327998161316
    2. ' +' → logprob: -1.5019328594207764
    3. ' ' → logprob: -13.501933097839355
    4. ')' → logprob: -13.876933097839355
    5. '   ' → logprob: -14.501933097839355
    6. ' +
' → logprob: -15.001933097839355
    7. '+
' → logprob: -15.376933097839355
    8. '```' → logprob: -15.626933097839355
    9. ' plus' → logprob: -17.00193214416504
    10. ' ' → logprob: -17.25193214416504

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002201047958806157
    2. ' ' → logprob: -6.127201080322266
    3. '0' → logprob: -11.877201080322266
    4. '2' → logprob: -12.002201080322266
    5. '```' → logprob: -13.752201080322266
    6. '   ' → logprob: -14.002201080322266
    7. '  ' → logprob: -15.252201080322266
    8. '`' → logprob: -15.502201080322266
    9. ')' → logprob: -15.502201080322266
    10. '     ' → logprob: -17.002201080322266

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.0
    4. ')' → logprob: -20.0
    5. '   ' → logprob: -20.625
    6. '`' → logprob: -20.875
    7. '１' → logprob: -20.875
    8. '0' → logprob: -21.0
    9. '۱' → logprob: -21.75
    10. '१' → logprob: -22.25

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. '   ' → logprob: -12.250006675720215
    3. ')
' → logprob: -13.125006675720215
    4. ' )' → logprob: -15.625006675720215
    5. '`)' → logprob: -17.12500762939453
    6. '```' → logprob: -17.12500762939453
    7. ')`' → logprob: -17.62500762939453
    8. '}' → logprob: -18.37500762939453
    9. '）' → logprob: -18.87500762939453
    10. '))' → logprob: -18.87500762939453

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6308374404907227
    2. '
' → logprob: -1.0058374404907227
    3. ' for' → logprob: -3.0058374404907227
    4. '    
' → logprob: -3.6308374404907227
    5. 'for' → logprob: -4.255837440490723
    6. ' 
' → logprob: -5.130837440490723
    7. ' ' → logprob: -6.630837440490723
    8. '' → logprob: -6.755837440490723
    9. '   
' → logprob: -6.880837440490723
    10. '  
' → logprob: -7.255837440490723

Token 44: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1795075386762619
    2. '
' → logprob: -2.6795074939727783
    3. '    
' → logprob: -2.9295074939727783
    4. ' for' → logprob: -3.8045074939727783
    5. 'for' → logprob: -4.929507732391357
    6. ' 
' → logprob: -5.429507732391357
    7. '```' → logprob: -5.929507732391357
    8. '\n' → logprob: -6.554507732391357
    9. '' → logprob: -7.179507732391357
    10. ' ' → logprob: -7.304507732391357

Token 45: '_factor' (ID: 43757)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7099175453186035
    2. '_factor' → logprob: -0.7099175453186035
    3. ' _' → logprob: -5.2099175453186035
    4. ' =' → logprob: -5.4599175453186035
    5. '_n' → logprob: -6.0849175453186035
    6. '=' → logprob: -6.5849175453186035
    7. ' ' → logprob: -7.2099175453186035
    8. '_index' → logprob: -7.7099175453186035
    9. '_value' → logprob: -7.8349175453186035
    10. '_token' → logprob: -8.084917068481445

Token 46: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.0015310514718294144
    2. '_' → logprob: -6.75153112411499
    3. 'al' → logprob: -8.501530647277832
    4. '```' → logprob: -9.376530647277832
    5. 'i' → logprob: -10.501530647277832
    6. 'ials' → logprob: -11.751530647277832
    7. '_i' → logprob: -12.001530647277832
    8. '=' → logprob: -12.126530647277832
    9. 'ialize' → logprob: -12.376530647277832
    10. '_list' → logprob: -12.376530647277832

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.529862642288208
    2. '=' → logprob: -1.029862642288208
    3. '_' → logprob: -3.279862642288208
    4. ' ' → logprob: -4.154862403869629
    5. 's' → logprob: -7.404862403869629
    6. '[' → logprob: -9.529862403869629
    7. ' *=' → logprob: -9.779862403869629
    8. ')' → logprob: -10.279862403869629
    9. '  ' → logprob: -10.529862403869629
    10. '   ' → logprob: -10.529862403869629

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015517598949372768
    2. ' ' → logprob: -6.501551628112793
    3. '   ' → logprob: -10.001551628112793
    4. '  ' → logprob: -13.501551628112793
    5. '`' → logprob: -14.376551628112793
    6. '```' → logprob: -14.751551628112793
    7. 'factor' → logprob: -15.251551628112793
    8. '    ' → logprob: -15.376551628112793
    9. 'def' → logprob: -15.564051628112793
    10. '=' → logprob: -15.876551628112793

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -12.250011444091797
    3. '   ' → logprob: -12.625011444091797
    4. '2' → logprob: -14.000011444091797
    5. '```' → logprob: -14.500011444091797
    6. '  ' → logprob: -14.875011444091797
    7. 'factor' → logprob: -15.437511444091797
    8. '`' → logprob: -15.750011444091797
    9. '0' → logprob: -15.812511444091797
    10. 'def' → logprob: -16.000011444091797

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2921861708164215
    2. '   ' → logprob: -1.6671861410140991
    3. '\n' → logprob: -3.6671862602233887
    4. ' for' → logprob: -4.042186260223389
    5. 'for' → logprob: -5.167186260223389
    6. '    
' → logprob: -5.542186260223389
    7. '' → logprob: -5.542186260223389
    8. ' 
' → logprob: -6.167186260223389
    9. '```' → logprob: -6.542186260223389
    10. '  
' → logprob: -7.042186260223389

Token 51: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7643550634384155
    2. '   ' → logprob: -1.1393550634384155
    3. '    
' → logprob: -2.514355182647705
    4. '\n' → logprob: -2.639355182647705
    5. ' 
' → logprob: -3.764355182647705
    6. ' for' → logprob: -4.264355182647705
    7. '  
' → logprob: -4.889355182647705
    8. 'for' → logprob: -5.264355182647705
    9. '```' → logprob: -5.764355182647705
    10. '   
' → logprob: -6.014355182647705

Token 52: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49415919184684753
    2. ' for' → logprob: -1.49415922164917
    3. 'for' (adapté à ' for') → logprob: -1.86915922164917
    4. '```' → logprob: -5.24415922164917
    5. '\n' → logprob: -5.99415922164917
    6. '
' → logprob: -6.24415922164917
    7. ' ' → logprob: -7.61915922164917
    8. 'n' → logprob: -8.119158744812012
    9. '    
' → logprob: -8.369158744812012
    10. '	for' → logprob: -8.744158744812012

Token 53: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13246382772922516
    2. ' ' → logprob: -2.1324639320373535
    3. ' _' → logprob: -5.6324639320373535
    4. 'i' → logprob: -6.7574639320373535
    5. '_' → logprob: -7.2574639320373535
    6. ' n' → logprob: -9.757463455200195
    7. ' ‌' → logprob: -12.257463455200195
    8. 'n' → logprob: -12.757463455200195
    9. ' ▁' → logprob: -13.382463455200195
    10. ' space' → logprob: -13.757463455200195

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0026538937818259
    2. 'in' → logprob: -6.002654075622559
    3. ' ' → logprob: -8.752654075622559
    4. '	in' → logprob: -12.127654075622559
    5. '  ' → logprob: -12.752654075622559
    6. ',' → logprob: -13.252654075622559
    7. '   ' → logprob: -13.252654075622559
    8. ' i' → logprob: -13.377654075622559
    9. '1' → logprob: -13.627654075622559
    10. '_' → logprob: -13.877654075622559

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0013394085690379143
    2. 'range' → logprob: -6.626339435577393
    3. ' ' → logprob: -11.251338958740234
    4. '	range' → logprob: -15.126338958740234
    5. ' xrange' → logprob: -17.001338958740234
    6. '(range' → logprob: -17.376338958740234
    7. '```' → logprob: -17.876338958740234
    8. ' space' → logprob: -18.501338958740234
    9. '  ' → logprob: -18.626338958740234
    10. '_range' → logprob: -18.626338958740234

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.327856630785391e-05
    2. ' (' → logprob: -10.000082969665527
    3. '1' → logprob: -10.250082969665527
    4. '2' → logprob: -14.000082969665527
    5. '(len' → logprob: -14.500082969665527
    6. '(max' → logprob: -15.000082969665527
    7. ' ' → logprob: -15.125082969665527
    8. '(
' → logprob: -15.500082969665527
    9. '   ' → logprob: -16.500083923339844
    10. '(current' → logprob: -16.750083923339844

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10049498826265335
    2. 'max' → logprob: -2.4754951000213623
    3. ' max' → logprob: -5.225494861602783
    4. '0' → logprob: -5.725494861602783
    5. ' ' → logprob: -6.475494861602783
    6. '2' → logprob: -6.850494861602783
    7. '   ' → logprob: -8.475495338439941
    8. '(max' → logprob: -10.600495338439941
    9. ')' → logprob: -12.225495338439941
    10. ':max' → logprob: -13.350495338439941

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1128472238779068
    2. ' ,' → logprob: -2.237847328186035
    3. ' ' → logprob: -11.237847328186035
    4. ',max' → logprob: -12.362847328186035
    5. ',len' → logprob: -12.487847328186035
    6. ' ):' → logprob: -14.112847328186035
    7. '):' → logprob: -14.112847328186035
    8. ' )' → logprob: -14.612847328186035
    9. ' ,
' → logprob: -14.612847328186035
    10. ')' → logprob: -14.862847328186035

Token 59: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.01815146580338478
    2. 'max' → logprob: -4.01815128326416
    3. '(max' → logprob: -13.89315128326416
    4. ')' → logprob: -14.76815128326416
    5. '	max' → logprob: -16.518152236938477
    6. ',max' → logprob: -17.143152236938477
    7. '=max' → logprob: -17.643152236938477
    8. ' len' → logprob: -17.768152236938477
    9. '```' → logprob: -17.768152236938477
    10. ':max' → logprob: -17.893152236938477

Token 60: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0001238004770129919
    2. '_' → logprob: -9.000123977661133
    3. ' _' → logprob: -14.875123977661133
    4. '_i' → logprob: -17.125123977661133
    5. 'n' → logprob: -18.500123977661133
    6. ')' → logprob: -18.625123977661133
    7. '_
' → logprob: -18.875123977661133
    8. '```' → logprob: -19.000123977661133
    9. '<|end|>' → logprob: -19.125123977661133
    10. ')_' → logprob: -19.250123977661133

Token 61: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20143039524555206
    2. '+' → logprob: -1.7014304399490356
    3. ' ' → logprob: -11.076430320739746
    4. ' +
' → logprob: -14.326430320739746
    5. ')' → logprob: -14.826430320739746
    6. ' ' → logprob: -15.326430320739746
    7. '   ' → logprob: -15.701430320739746
    8. '+
' → logprob: -17.201431274414062
    9. '_plus' → logprob: -17.201431274414062
    10. '＋' → logprob: -17.201431274414062

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04300376772880554
    2. ' ' → logprob: -3.168003797531128
    3. '```' → logprob: -12.668004035949707
    4. '   ' → logprob: -14.293004035949707
    5. ')' → logprob: -15.043004035949707
    6. ' ' → logprob: -16.04300308227539
    7. '2' → logprob: -16.16800308227539
    8. '_' → logprob: -16.79300308227539
    9. '    ' → logprob: -16.98050308227539
    10. '  ' → logprob: -17.04300308227539

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -16.125051498413086
    4. '   ' → logprob: -16.375051498413086
    5. ')' → logprob: -16.375051498413086
    6. '  ' → logprob: -18.875051498413086
    7. '۱' → logprob: -19.000051498413086
    8. '2' → logprob: -19.125051498413086
    9. '-' → logprob: -20.375051498413086
    10. '<|end|>' → logprob: -20.375051498413086

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025088321417570114
    2. ':' → logprob: -6.252508640289307
    3. ')' → logprob: -7.502508640289307
    4. '):
' → logprob: -10.627509117126465
    5. '   ' → logprob: -13.252509117126465
    6. ' ):' → logprob: -14.127509117126465
    7. ' ' → logprob: -14.377509117126465
    8. ',' → logprob: -14.627509117126465
    9. '):
' → logprob: -15.752509117126465
    10. ':)' → logprob: -16.12750816345215

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040766436606645584
    2. ':' → logprob: -3.790766477584839
    3. '   ' → logprob: -4.41576623916626
    4. '    ' → logprob: -6.16576623916626
    5. ' ' → logprob: -6.79076623916626
    6. ' current' → logprob: -8.040766716003418
    7. 'current' → logprob: -8.290766716003418
    8. '<|end|>' → logprob: -8.540766716003418
    9. '```' → logprob: -8.665766716003418
    10. '        
' → logprob: -8.665766716003418

Token 66: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8831740021705627
    2. '       ' → logprob: -1.633173942565918
    3. ' 
' → logprob: -1.758173942565918
    4. 'current' (adapté à ' current') → logprob: -2.383173942565918
    5. ' factorial' → logprob: -3.133173942565918
    6. '        
' → logprob: -3.508173942565918
    7. 'factor' → logprob: -4.758173942565918
    8. '   ' → logprob: -5.008173942565918
    9. '    ' → logprob: -5.133173942565918
    10. '```' → logprob: -5.258173942565918

Token 67: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0003001888981088996
    2. '_' → logprob: -8.125300407409668
    3. '_fact' → logprob: -13.750300407409668
    4. 'factor' → logprob: -13.875300407409668
    5. '_f' → logprob: -14.250300407409668
    6. '```' → logprob: -15.250300407409668
    7. ' _' → logprob: -15.500300407409668
    8. '*' → logprob: -15.750300407409668
    9. '_FACTOR' → logprob: -15.875300407409668
    10. '   ' → logprob: -16.00029945373535

Token 68: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.04860427975654602
    2. 'ial' → logprob: -3.0486042499542236
    3. '_al' → logprob: -11.798604011535645
    4. 'a' → logprob: -13.173604011535645
    5. 'alist' → logprob: -13.173604011535645
    6. '_' → logprob: -13.548604011535645
    7. '   ' → logprob: -14.173604011535645
    8. '       ' → logprob: -14.923604011535645
    9. '           ' → logprob: -14.923604011535645
    10. ' factorial' → logprob: -15.048604011535645

Token 69: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09411212801933289
    2. ' *=' → logprob: -2.8441121578216553
    3. '*' → logprob: -4.094111919403076
    4. ' =' → logprob: -4.719111919403076
    5. '=' → logprob: -5.219111919403076
    6. ' ' → logprob: -7.594111919403076
    7. '*=' → logprob: -9.719112396240234
    8. ')' → logprob: -10.594112396240234
    9. ' **' → logprob: -11.969112396240234
    10. ' ' → logprob: -11.969112396240234

Token 70: ' (' (ID: 350)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.21590693295001984
    2. 'current' → logprob: -2.090906858444214
    3. '(current' → logprob: -3.090906858444214
    4. ' (' → logprob: -3.715906858444214
    5. ' factorial' → logprob: -7.715907096862793
    6. '(' → logprob: -8.215907096862793
    7. 'factor' → logprob: -10.215907096862793
    8. '$current' → logprob: -11.215907096862793
    9. '   ' → logprob: -11.465907096862793
    10. '	current' → logprob: -12.340907096862793

Token 71: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.17266571521759033
    2. ' current' → logprob: -2.172665596008301
    3. 'factor' → logprob: -3.297665596008301
    4. ' factorial' → logprob: -5.172665596008301
    5. 'idx' → logprob: -6.797665596008301
    6. '   ' → logprob: -7.547665596008301
    7. ' idx' → logprob: -8.5476655960083
    8. ' factor' → logprob: -10.1726655960083
    9. '       ' → logprob: -10.1726655960083
    10. '	current' → logprob: -10.5476655960083

Token 72: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0009373087668791413
    2. '_' → logprob: -7.000937461853027
    3. 'factor' → logprob: -11.125937461853027
    4. '_fact' → logprob: -12.750937461853027
    5. '*' → logprob: -13.500937461853027
    6. ')' → logprob: -13.625937461853027
    7. '_f' → logprob: -14.000937461853027
    8. ' ' → logprob: -14.375937461853027
    9. '_fac' → logprob: -14.625937461853027
    10. '_FACTOR' → logprob: -14.750937461853027

Token 73: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.12853465974330902
    2. '_factor' → logprob: -3.1285345554351807
    3. 'ial' → logprob: -3.2535345554351807
    4. '_' → logprob: -4.25353479385376
    5. 't' → logprob: -5.00353479385376
    6. '_list' → logprob: -5.12853479385376
    7. 'rial' → logprob: -6.25353479385376
    8. 'tal' → logprob: -6.50353479385376
    9. 'factor' → logprob: -6.87853479385376
    10. '_t' → logprob: -6.87853479385376

Token 74: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014170088805258274
    2. '*' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.139169692993164
    4. ' ' → logprob: -14.014169692993164
    5. ')' → logprob: -15.514169692993164
    6. '*object' → logprob: -16.764169692993164
    7. ' **' → logprob: -16.764169692993164
    8. ',' → logprob: -17.514169692993164
    9. '<|end|>' → logprob: -17.764169692993164
    10. '```' → logprob: -18.014169692993164

Token 75: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.31327024102211
    2. 'idx' → logprob: -1.3132702112197876
    3. '	idx' → logprob: -11.938270568847656
    4. '(idx' → logprob: -14.188270568847656
    5. ' ' → logprob: -14.438270568847656
    6. '[idx' → logprob: -15.563270568847656
    7. '_idx' → logprob: -15.563270568847656
    8. 'i' → logprob: -15.563270568847656
    9. '   ' → logprob: -17.438270568847656
    10. '.idx' → logprob: -17.688270568847656

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.930552313453518e-05
    2. ' )' → logprob: -10.125049591064453
    3. ')%' → logprob: -11.625049591064453
    4. ')`' → logprob: -16.250049591064453
    5. ')
' → logprob: -16.500049591064453
    6. '   ' → logprob: -17.125049591064453
    7. '%' → logprob: -17.625049591064453
    8. ' ' → logprob: -17.750049591064453
    9. '*' → logprob: -17.875049591064453
    10. ')

' → logprob: -18.250049591064453

Token 77: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7118275761604309
    2. '<|end|>' → logprob: -0.9618275761604309
    3. ')' → logprob: -2.336827516555786
    4. '<|end|>' → logprob: -4.461827754974365
    5. '
' → logprob: -4.836827754974365
    6. ' %' → logprob: -5.586827754974365
    7. '   ' → logprob: -5.961827754974365
    8. '```' → logprob: -6.461827754974365
    9. ']' → logprob: -7.461827754974365
    10. ' ' → logprob: -7.961827754974365

Token 78: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.002722610253840685
    2. 'mod' → logprob: -6.00272274017334
    3. ' ' → logprob: -9.12772274017334
    4. ' mod' → logprob: -10.37772274017334
    5. ' space' → logprob: -10.87772274017334
    6. 'space' → logprob: -10.87772274017334
    7. '(mod' → logprob: -11.50272274017334
    8. ' ' → logprob: -11.50272274017334
    9. ' modul' → logprob: -11.62772274017334
    10. ' modulation' → logprob: -12.00272274017334

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020350690931081772
    2. '
' → logprob: -4.145350456237793
    3. '   ' → logprob: -5.770350456237793
    4. '        
' → logprob: -7.770350456237793
    5. '<|end|>' → logprob: -8.395350456237793
    6. 'factor' → logprob: -9.020350456237793
    7. ' factorial' → logprob: -9.520350456237793
    8. ',' → logprob: -9.645350456237793
    9. '\n' → logprob: -9.770350456237793
    10. ')' → logprob: -10.270350456237793

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029932718724012375
    2. '
' → logprob: -4.404932498931885
    3. '   ' → logprob: -4.404932498931885
    4. '<|end|>' → logprob: -6.779932498931885
    5. 'factor' → logprob: -7.154932498931885
    6. ' factorial' → logprob: -7.404932498931885
    7. ')' → logprob: -7.404932498931885
    8. '        
' → logprob: -7.404932498931885
    9. '```' → logprob: -7.404932498931885
    10. '    
' → logprob: -8.904932975769043

Token 81: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.4906613528728485
    2. '       ' → logprob: -1.240661382675171
    3. ' factorial' → logprob: -2.365661382675171
    4. '   ' → logprob: -5.990661144256592
    5. 'fact' → logprob: -6.865661144256592
    6. ' factor' → logprob: -7.990661144256592
    7. '
' → logprob: -8.49066162109375
    8. '_factor' → logprob: -8.99066162109375
    9. '        
' → logprob: -9.11566162109375
    10. '```' → logprob: -9.24066162109375

Token 82: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.875
    3. '[_' → logprob: -16.875
    4. '_' → logprob: -17.125
    5. '_List' → logprob: -17.125
    6. '_lst' → logprob: -17.375
    7. '```' → logprob: -18.5
    8. '_array' → logprob: -18.75
    9. 'List' → logprob: -18.75
    10. '   ' → logprob: -19.25

Token 83: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.020559873431921005
    2. '[' → logprob: -3.895559787750244
    3. '```' → logprob: -12.145560264587402
    4. '[...]' → logprob: -12.645560264587402
    5. '\[' → logprob: -13.020560264587402
    6. '[token' → logprob: -13.020560264587402
    7. '[index' → logprob: -14.645560264587402
    8. ' ' → logprob: -14.645560264587402
    9. '[i' → logprob: -14.645560264587402
    10. '[
' → logprob: -14.770560264587402

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001129602751461789
    2. ' ]' → logprob: -9.375112533569336
    3. ']=' → logprob: -10.875112533569336
    4. '=' → logprob: -11.875112533569336
    5. ')' → logprob: -13.625112533569336
    6. ' =' → logprob: -14.250112533569336
    7. ')]' → logprob: -15.250112533569336
    8. ']
' → logprob: -17.500112533569336
    9. ' ' → logprob: -17.750112533569336
    10. '`]' → logprob: -18.000112533569336

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193315744400024
    2. ' =' → logprob: -1.5019330978393555
    3. ' ' → logprob: -12.751933097839355
    4. '=}' → logprob: -15.251933097839355
    5. ' =
' → logprob: -16.001934051513672
    6. '=

' → logprob: -16.126934051513672
    7. '＝' → logprob: -16.251934051513672
    8. '<|end|>' → logprob: -16.626934051513672
    9. '=int' → logprob: -17.001934051513672
    10. '.=' → logprob: -17.126934051513672

Token 86: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06196891888976097
    2. ' current' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.811968803405762
    4. '	current' → logprob: -15.186968803405762
    5. 'cur' → logprob: -15.436968803405762
    6. '$current' → logprob: -15.811968803405762
    7. 'curr' → logprob: -16.436969757080078
    8. '   ' → logprob: -16.811969757080078
    9. '(current' → logprob: -16.811969757080078
    10. 'urrent' → logprob: -17.436969757080078

Token 87: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.0004722603189293295
    2. '_' → logprob: -7.750472068786621
    3. 'factor' → logprob: -11.000472068786621
    4. '_fact' → logprob: -11.250472068786621
    5. '_fac' → logprob: -12.375472068786621
    6. '_f' → logprob: -13.000472068786621
    7. ' _' → logprob: -14.000472068786621
    8. '```' → logprob: -14.125472068786621
    9. '_factory' → logprob: -14.250472068786621
    10. 'underscore' → logprob: -14.750472068786621

Token 88: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.5762776732444763
    2. 'al' → logprob: -0.8262776732444763
    3. 't' → logprob: -8.076277732849121
    4. 'tal' → logprob: -11.701277732849121
    5. 'l' → logprob: -12.201277732849121
    6. 'a' → logprob: -12.951277732849121
    7. 's' → logprob: -13.076277732849121
    8. 'cial' → logprob: -13.576277732849121
    9. 'alist' → logprob: -13.701277732849121
    10. '   ' → logprob: -13.701277732849121

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16356302797794342
    2. '   ' → logprob: -2.1635630130767822
    3. '    
' → logprob: -3.9135630130767822
    4. ' 
' → logprob: -4.913563251495361
    5. '```' → logprob: -6.038563251495361
    6. '\n' → logprob: -6.163563251495361
    7. '  
' → logprob: -6.663563251495361
    8. 'n' → logprob: -7.538563251495361
    9. '   
' → logprob: -7.538563251495361
    10. ' for' → logprob: -8.038562774658203

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21837866306304932
    2. '
' → logprob: -1.8433786630630493
    3. '    
' → logprob: -4.21837854385376
    4. ' 
' → logprob: -4.84337854385376
    5. ' for' → logprob: -5.59337854385376
    6. 'i' → logprob: -5.84337854385376
    7. 'for' → logprob: -6.09337854385376
    8. '```' → logprob: -6.34337854385376
    9. '  
' → logprob: -6.59337854385376
    10. '   
' → logprob: -6.96837854385376

Token 91: ' inverse' (ID: 53743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6786455512046814
    2. 'inverse' (adapté à ' inverse') → logprob: -0.9286455512046814
    3. 'i' → logprob: -3.053645610809326
    4. '
' → logprob: -3.803645610809326
    5. '    
' → logprob: -4.428645610809326
    6. '#' → logprob: -5.303645610809326
    7. ' inverse' → logprob: -6.178645610809326
    8. 'in' → logprob: -6.303645610809326
    9. ' 
' → logprob: -6.553645610809326
    10. 'for' → logprob: -6.553645610809326

Token 92: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36947381496429443
    2. '_list' → logprob: -1.2444738149642944
    3. 's' → logprob: -4.119473934173584
    4. '_s' → logprob: -6.244473934173584
    5. '_factor' → logprob: -6.744473934173584
    6. '_value' → logprob: -8.619473457336426
    7. '_val' → logprob: -9.369473457336426
    8. '_base' → logprob: -9.369473457336426
    9. '```' → logprob: -9.494473457336426
    10. '_lst' → logprob: -9.869473457336426

Token 93: '[max' (ID: 84690)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.045404303818941116
    2. '[-' → logprob: -3.2954041957855225
    3. '[max' → logprob: -5.045404434204102
    4. ' =' → logprob: -8.420404434204102
    5. '[len' → logprob: -8.545404434204102
    6. '[
' → logprob: -9.170404434204102
    7. '=' → logprob: -9.295404434204102
    8. ' [' → logprob: -9.545404434204102
    9. '[:]' → logprob: -9.920404434204102
    10. '```' → logprob: -10.670404434204102

Token 94: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.125
    3. 'n' → logprob: -17.125
    4. ']_' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. ')_' → logprob: -18.375
    7. ')' → logprob: -19.0
    8. ' _' → logprob: -19.25
    9. '_]' → logprob: -19.875
    10. ']' → logprob: -19.875

Token 95: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002585170092061162
    2. ' ]' → logprob: -6.002584934234619
    3. ')' → logprob: -9.377585411071777
    4. ')]' → logprob: -11.502585411071777
    5. ']=' → logprob: -12.252585411071777
    6. '']' → logprob: -13.002585411071777
    7. ' )' → logprob: -13.377585411071777
    8. '"]' → logprob: -13.377585411071777
    9. ']
' → logprob: -13.752585411071777
    10. '`]' → logprob: -14.377585411071777

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014170682057738304
    2. '=' → logprob: -4.2641706466674805
    3. ' =
' → logprob: -12.51417064666748
    4. ',' → logprob: -14.26417064666748
    5. ' ' → logprob: -14.26417064666748
    6. '	' → logprob: -14.88917064666748
    7. ')' → logprob: -15.63917064666748
    8. ' ^=' → logprob: -15.63917064666748
    9. '<|end|>' → logprob: -15.76417064666748
    10. ' ' → logprob: -16.139171600341797

Token 97: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.01815415732562542
    2. ' pow' → logprob: -4.018154144287109
    3. '(pow' → logprob: -12.89315414428711
    4. '   ' → logprob: -13.39315414428711
    5. 'Pow' → logprob: -16.76815414428711
    6. '1' → logprob: -17.14315414428711
    7. '_pow' → logprob: -17.39315414428711
    8. ' ' → logprob: -18.64315414428711
    9. '```' → logprob: -18.89315414428711
    10. '.pow' → logprob: -19.14315414428711

Token 98: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10028883814811707
    2. '(f' → logprob: -2.3502888679504395
    3. '(
' → logprob: -10.350288391113281
    4. '(current' → logprob: -10.475288391113281
    5. '(

' → logprob: -12.100288391113281
    6. 'factor' → logprob: -12.475288391113281
    7. '<|end|>' → logprob: -13.100288391113281
    8. ' factorial' → logprob: -13.850288391113281
    9. '(max' → logprob: -13.975288391113281
    10. ' (' → logprob: -13.975288391113281

Token 99: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.0002128382766386494
    2. 'act' → logprob: -9.000212669372559
    3. 'factor' → logprob: -9.500212669372559
    4. '_factor' → logprob: -11.625212669372559
    5. ' factorial' → logprob: -13.750212669372559
    6. '```' → logprob: -14.000212669372559
    7. 'actoring' → logprob: -14.625212669372559
    8. '   ' → logprob: -14.750212669372559
    9. 'actory' → logprob: -15.125212669372559
    10. 'ac' → logprob: -15.375212669372559

Token 100: 'ial' (ID: 563)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9188305735588074
    2. '_list' → logprob: -1.5438306331634521
    3. 'ct' → logprob: -1.9188306331634521
    4. 'ctor' → logprob: -2.418830633163452
    5. 'al' → logprob: -3.168830633163452
    6. 'list' → logprob: -3.668830633163452
    7. 'l' → logprob: -3.918830633163452
    8. 'ent' → logprob: -4.293830394744873
    9. 'rial' → logprob: -4.668830394744873
    10. 'max' → logprob: -5.043830394744873

Token 101: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.396757089532912e-05
    2. '[max' → logprob: -10.3750638961792
    3. ')' → logprob: -11.5000638961792
    4. 'list' → logprob: -12.3750638961792
    5. 's' → logprob: -12.3750638961792
    6. 'List' → logprob: -12.6250638961792
    7. ')_' → logprob: -13.1250638961792
    8. '[_' → logprob: -13.5000638961792
    9. '(max' → logprob: -13.6250638961792
    10. '   ' → logprob: -13.7500638961792

Token 102: '[max' (ID: 84690)
  Prédit: '[max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -0.0004678497789427638
    2. '[' → logprob: -7.875467777252197
    3. '[
' → logprob: -10.000468254089355
    4. ')' → logprob: -11.125468254089355
    5. ',' → logprob: -11.875468254089355
    6. ',max' → logprob: -12.250468254089355
    7. '```' → logprob: -12.250468254089355
    8. ')[' → logprob: -13.125468254089355
    9. ' ' → logprob: -13.875468254089355
    10. 'max' → logprob: -13.875468254089355

Token 103: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.125
    3. '_' → logprob: -16.75
    4. '   ' → logprob: -18.625
    5. '-n' → logprob: -18.75
    6. '_user' → logprob: -18.875
    7. '_list' → logprob: -19.0
    8. '```' → logprob: -19.125
    9. ')' → logprob: -19.375
    10. '_i' → logprob: -19.875

Token 104: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9292415749514475e-05
    2. ' ,' → logprob: -10.250039100646973
    3. '‌,' → logprob: -14.250039100646973
    4. '   ' → logprob: -14.375039100646973
    5. '),' → logprob: -14.750039100646973
    6. ',
' → logprob: -14.750039100646973
    7. ',module' → logprob: -15.000039100646973
    8. ')' → logprob: -15.375039100646973
    9. ' ' → logprob: -15.875039100646973
    10. ',m' → logprob: -15.875039100646973

Token 105: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.10921113938093185
    2. 'mod' → logprob: -2.4842112064361572
    3. ' -' → logprob: -4.859210968017578
    4. '-' → logprob: -4.859210968017578
    5. '-mod' → logprob: -6.109210968017578
    6. ' mod' → logprob: -6.859210968017578
    7. '	mod' → logprob: -6.984210968017578
    8. ' ' → logprob: -8.859210968017578
    9. '   ' → logprob: -9.234210968017578
    10. ')' → logprob: -10.609210968017578

Token 106: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.503177642822266
    4. '−' → logprob: -18.003177642822266
    5. '–' → logprob: -19.003177642822266
    6. ' ' → logprob: -19.503177642822266
    7. '```' → logprob: -19.878177642822266
    8. '  ' → logprob: -21.253177642822266
    9. '2' → logprob: -21.878177642822266
    10. '   ' → logprob: -22.003177642822266

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '-' → logprob: -16.00000762939453
    4. '```' → logprob: -16.12500762939453
    5. '

' → logprob: -17.18750762939453
    6. '۲' → logprob: -17.31250762939453
    7. '２' → logprob: -18.00000762939453
    8. '   ' → logprob: -18.18750762939453
    9. '٢' → logprob: -18.56250762939453
    10. ')' → logprob: -18.62500762939453

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.625001907348633
    3. '```' → logprob: -15.750001907348633
    4. '-' → logprob: -16.250001907348633
    5. '۲' → logprob: -16.937501907348633
    6. '

' → logprob: -17.000001907348633
    7. '２' → logprob: -17.375001907348633
    8. '٢' → logprob: -17.937501907348633
    9. '   ' → logprob: -18.312501907348633
    10. '
' → logprob: -18.812501907348633

Token 109: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3486502766609192
    2. ',' → logprob: -1.2236502170562744
    3. ' )' → logprob: -9.223649978637695
    4. ' ,' → logprob: -9.848649978637695
    5. '   ' → logprob: -10.848649978637695
    6. ' ' → logprob: -11.098649978637695
    7. ')
' → logprob: -11.848649978637695
    8. ',)' → logprob: -12.848649978637695
    9. ',
' → logprob: -13.223649978637695
    10. '),' → logprob: -13.848649978637695

Token 110: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.05555730685591698
    2. 'mod' → logprob: -2.9305572509765625
    3. ')' → logprob: -7.8055572509765625
    4. ' mod' → logprob: -9.430557250976562
    5. '	mod' → logprob: -9.430557250976562
    6. ' )' → logprob: -10.055557250976562
    7. ' modul' → logprob: -10.805557250976562
    8. ' ' → logprob: -11.930557250976562
    9. ' modulation' → logprob: -12.055557250976562
    10. '(mod' → logprob: -12.055557250976562

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.8497312895488e-05
    2. ')
' → logprob: -9.625068664550781
    3. ' )' → logprob: -13.125068664550781
    4. '   ' → logprob: -16.12506866455078
    5. ')

' → logprob: -16.87506866455078
    6. '))' → logprob: -17.00006866455078
    7. ')`' → logprob: -17.50006866455078
    8. ')
' → logprob: -17.62506866455078
    9. ' ' → logprob: -18.00006866455078
    10. '),' → logprob: -18.00006866455078

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48577216267585754
    2. '
' → logprob: -0.9857721328735352
    3. '    
' → logprob: -4.610772132873535
    4. ' for' → logprob: -7.485772132873535
    5. '<|end|>' → logprob: -7.860772132873535
    6. '```' → logprob: -8.360772132873535
    7. '  
' → logprob: -9.110772132873535
    8. '\n' → logprob: -9.360772132873535
    9. 'for' → logprob: -9.485772132873535
    10. ' 
' → logprob: -9.485772132873535

Token 113: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5034543871879578
    2. '
' → logprob: -1.2534544467926025
    3. ' for' → logprob: -2.6284544467926025
    4. 'for' (adapté à ' for') → logprob: -3.3784544467926025
    5. '    
' → logprob: -5.753454208374023
    6. '	for' → logprob: -7.628454208374023
    7. ' 
' → logprob: -10.503454208374023
    8. '\n' → logprob: -11.253454208374023
    9. '

' → logprob: -11.503454208374023
    10. '  
' → logprob: -11.503454208374023

Token 114: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0003035266126971692
    2. ' i' → logprob: -8.875303268432617
    3. 'idx' → logprob: -9.125303268432617
    4. ' ' → logprob: -9.875303268432617
    5. '	idx' → logprob: -13.375303268432617
    6. '  ' → logprob: -14.625303268432617
    7. ' index' → logprob: -15.000303268432617
    8. ' _' → logprob: -15.250303268432617
    9. ' ix' → logprob: -15.625303268432617
    10. ' in' → logprob: -16.250303268432617

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013915427261963487
    2. 'in' → logprob: -6.626391410827637
    3. '<|end|>' → logprob: -10.376391410827637
    4. ' ' → logprob: -10.751391410827637
    5. '  ' → logprob: -12.626391410827637
    6. '   ' → logprob: -13.126391410827637
    7. ' i' → logprob: -13.376391410827637
    8. 'range' → logprob: -13.376391410827637
    9. '	in' → logprob: -13.876391410827637
    10. '```' → logprob: -14.126391410827637

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2015889585018158
    2. ' range' → logprob: -1.7015889883041382
    3. 're' → logprob: -9.82658863067627
    4. ' ' → logprob: -9.95158863067627
    5. '   ' → logprob: -9.95158863067627
    6. ' reversed' → logprob: -11.45158863067627
    7. '(range' → logprob: -11.95158863067627
    8. '  ' → logprob: -12.20158863067627
    9. '	range' → logprob: -13.20158863067627
    10. '```' → logprob: -14.82658863067627

Token 117: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.167648876318708e-05
    2. '(' → logprob: -10.125041961669922
    3. ' (' → logprob: -13.875041961669922
    4. 'max' → logprob: -15.000041961669922
    5. '(m' → logprob: -16.875041961669922
    6. '   ' → logprob: -16.875041961669922
    7. '(mod' → logprob: -17.250041961669922
    8. ' max' → logprob: -17.250041961669922
    9. '(
' → logprob: -17.750041961669922
    10. '(num' → logprob: -18.125041961669922

Token 118: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '-' → logprob: -17.125
    4. '   ' → logprob: -18.5
    5. 'n' → logprob: -18.625
    6. ' -' → logprob: -20.125
    7. '_x' → logprob: -20.25
    8. '-_' → logprob: -20.875
    9. ')' → logprob: -21.0
    10. ' _' → logprob: -21.125

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014513333328068256
    2. ' -' → logprob: -4.2645134925842285
    3. ',' → logprob: -8.13951301574707
    4. '   ' → logprob: -9.88951301574707
    5. ' ,' → logprob: -12.01451301574707
    6. ' ' → logprob: -14.26451301574707
    7. '-,' → logprob: -15.13951301574707
    8. '  ' → logprob: -15.13951301574707
    9. ',-' → logprob: -17.38951301574707
    10. '```' → logprob: -17.63951301574707

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.778209353797138e-05
    2. ' ' → logprob: -9.625067710876465
    3. '0' → logprob: -13.625067710876465
    4. '```' → logprob: -15.625067710876465
    5. '<|end|>' → logprob: -15.875067710876465
    6. '   ' → logprob: -16.50006866455078
    7. '2' → logprob: -16.62506866455078
    8. ',' → logprob: -18.37506866455078
    9. '  ' → logprob: -18.56256866455078
    10. '۱' → logprob: -18.87506866455078

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -14.37500286102295
    4. '```' → logprob: -15.87500286102295
    5. '0' → logprob: -17.000003814697266
    6. '2' → logprob: -17.375003814697266
    7. '   ' → logprob: -17.375003814697266
    8. ')' → logprob: -17.812503814697266
    9. '১' → logprob: -18.500003814697266
    10. '<|end|>' → logprob: -18.562503814697266

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043972869752906263
    2. ' ,' → logprob: -7.750439643859863
    3. ',-' → logprob: -11.750439643859863
    4. ',
' → logprob: -14.750439643859863
    5. '   ' → logprob: -15.750439643859863
    6. '0' → logprob: -15.875439643859863
    7. ' -' → logprob: -16.00044059753418
    8. '-' → logprob: -16.25044059753418
    9. ' ,-' → logprob: -16.25044059753418
    10. '‌,' → logprob: -16.37544059753418

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20356574654579163
    2. ' -' → logprob: -1.7035657167434692
    3. '0' → logprob: -6.32856559753418
    4. ' ' → logprob: -7.95356559753418
    5. '   ' → logprob: -11.82856559753418
    6. '  ' → logprob: -12.95356559753418
    7. '<|end|>' → logprob: -13.20356559753418
    8. '	' → logprob: -14.20356559753418
    9. '    ' → logprob: -14.32856559753418
    10. '```' → logprob: -15.20356559753418

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.750053405761719
    4. '```' → logprob: -14.875053405761719
    5. ',' → logprob: -15.375053405761719
    6. '۱' → logprob: -15.875053405761719
    7. ':' → logprob: -16.56255340576172
    8. '<|end|>' → logprob: -16.62505340576172
    9. '১' → logprob: -16.75005340576172
    10. '１' → logprob: -16.81255340576172

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003132976416964084
    2. ',-' → logprob: -8.250313758850098
    3. '-' → logprob: -10.500313758850098
    4. ' ,' → logprob: -11.125313758850098
    5. ' -' → logprob: -12.625313758850098
    6. '1' → logprob: -12.750313758850098
    7. ',
' → logprob: -13.625313758850098
    8. '   ' → logprob: -13.875313758850098
    9. ' ,-' → logprob: -14.500313758850098
    10. '```' → logprob: -14.625313758850098

Token 126: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018170546740293503
    2. ' -' → logprob: -4.018170356750488
    3. '   ' → logprob: -11.518170356750488
    4. '```' → logprob: -12.518170356750488
    5. ' ' → logprob: -12.768170356750488
    6. '  ' → logprob: -13.268170356750488
    7. ',-' → logprob: -14.268170356750488
    8. ',' → logprob: -14.643170356750488
    9. '	' → logprob: -14.768170356750488
    10. '<|end|>' → logprob: -14.893170356750488

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.875001907348633
    6. '):
' → logprob: -19.750001907348633
    7. '۱' → logprob: -20.125001907348633
    8. '2' → logprob: -20.250001907348633
    9. '  ' → logprob: -20.250001907348633
    10. '１' → logprob: -20.375001907348633

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01132449321448803
    2. '):
' → logprob: -5.136324405670166
    3. ',' → logprob: -5.386324405670166
    4. ' ):' → logprob: -8.261324882507324
    5. '-' → logprob: -8.511324882507324
    6. ':' → logprob: -9.011324882507324
    7. ')' → logprob: -9.261324882507324
    8. '   ' → logprob: -9.761324882507324
    9. '):-' → logprob: -10.261324882507324
    10. ',-' → logprob: -11.511324882507324

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14974725246429443
    2. ':' → logprob: -2.274747371673584
    3. '   ' → logprob: -3.649747371673584
    4. '    ' → logprob: -5.899747371673584
    5. '<|end|>' → logprob: -5.899747371673584
    6. ' ' → logprob: -6.524747371673584
    7. ':
' → logprob: -7.649747371673584
    8. '):' → logprob: -7.899747371673584
    9. '):
' → logprob: -7.899747371673584
    10. '        ' → logprob: -7.899747371673584

Token 130: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.8224045038223267
    2. 'inverse' (adapté à ' inverse') → logprob: -0.9474045038223267
    3. '   ' → logprob: -1.9474045038223267
    4. '       ' → logprob: -3.697404384613037
    5. ' ' → logprob: -6.447404384613037
    6. '
' → logprob: -6.697404384613037
    7. '    ' → logprob: -7.322404384613037
    8. '_inverse' → logprob: -8.072404861450195
    9. '.inverse' → logprob: -8.072404861450195
    10. ' 
' → logprob: -8.697404861450195

Token 131: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '[_' → logprob: -16.375
    3. '```' → logprob: -17.125
    4. '_' → logprob: -17.25
    5. '_lst' → logprob: -17.5
    6. '[' → logprob: -17.75
    7. 'List' → logprob: -18.375
    8. '_List' → logprob: -18.875
    9. ' _' → logprob: -19.25
    10. '_factor' → logprob: -19.375

Token 132: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.097437315271236e-05
    2. '[' → logprob: -10.25005054473877
    3. '```' → logprob: -12.37505054473877
    4. '[next' → logprob: -13.12505054473877
    5. '   ' → logprob: -13.12505054473877
    6. ' [' → logprob: -13.37505054473877
    7. '[index' → logprob: -13.50005054473877
    8. '[id' → logprob: -13.87505054473877
    9. '\[' → logprob: -14.87505054473877
    10. '[max' → logprob: -15.12505054473877

Token 133: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7297142148017883
    2. ']' → logprob: -0.9797142148017883
    3. '=' → logprob: -2.3547141551971436
    4. ' =' → logprob: -3.1047141551971436
    5. ')=' → logprob: -6.479714393615723
    6. ']=' → logprob: -7.354714393615723
    7. '   ' → logprob: -8.854714393615723
    8. '"' → logprob: -8.854714393615723
    9. ' )' → logprob: -9.479714393615723
    10. '    ' → logprob: -9.979714393615723

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931487321853638
    2. ' =' → logprob: -0.6931487321853638
    3. '   ' → logprob: -15.193148612976074
    4. ' ' → logprob: -15.693148612976074
    5. '=

' → logprob: -15.693148612976074
    6. '＝' → logprob: -15.818148612976074
    7. ')' → logprob: -15.943148612976074
    8. ' *=' → logprob: -16.19314956665039
    9. '```' → logprob: -16.19314956665039
    10. '=(' → logprob: -16.81814956665039

Token 135: ' (' (ID: 350)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.5234524011611938
    2. ' (' → logprob: -0.8984524011611938
    3. '(inv' → logprob: -9.273452758789062
    4. '(' → logprob: -9.398452758789062
    5. 'inverse' → logprob: -9.773452758789062
    6. '(int' → logprob: -11.023452758789062
    7. ' inverse' → logprob: -11.273452758789062
    8. '   ' → logprob: -11.273452758789062
    9. ' ' → logprob: -11.898452758789062
    10. '(i' → logprob: -11.898452758789062

Token 136: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.0018145251087844372
    2. ' inverse' → logprob: -6.501814365386963
    3. '   ' → logprob: -8.501814842224121
    4. 'in' → logprob: -9.501814842224121
    5. '(in' → logprob: -11.376814842224121
    6. '.inverse' → logprob: -12.126814842224121
    7. '_inverse' → logprob: -12.501814842224121
    8. '    ' → logprob: -13.126814842224121
    9. '  ' → logprob: -13.251814842224121
    10. ' ' → logprob: -13.251814842224121

Token 137: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.088138227118179e-05
    2. 'list' → logprob: -10.375070571899414
    3. 'factor' → logprob: -11.000070571899414
    4. 'List' → logprob: -11.500070571899414
    5. '_' → logprob: -13.000070571899414
    6. '[idx' → logprob: -13.125070571899414
    7. '[' → logprob: -13.750070571899414
    8. ')' → logprob: -13.875070571899414
    9. '*' → logprob: -13.875070571899414
    10. 's' → logprob: -14.125070571899414

Token 138: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00013011827832087874
    2. '[' → logprob: -9.125129699707031
    3. '[next' → logprob: -11.750129699707031
    4. '[
' → logprob: -12.000129699707031
    5. ' [' → logprob: -12.875129699707031
    6. 'idx' → logprob: -13.250129699707031
    7. '[id' → logprob: -13.625129699707031
    8. '```' → logprob: -14.750129699707031
    9. '[index' → logprob: -15.250129699707031
    10. '[i' → logprob: -15.250129699707031

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0029986200388520956
    2. ' +' → logprob: -5.8779988288879395
    3. '[' → logprob: -8.752998352050781
    4. '[idx' → logprob: -10.877998352050781
    5. '[next' → logprob: -11.502998352050781
    6. '```' → logprob: -12.627998352050781
    7. '1' → logprob: -14.252998352050781
    8. '   ' → logprob: -14.377998352050781
    9. ' ' → logprob: -14.377998352050781
    10. ' plus' → logprob: -15.377998352050781

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012222514487802982
    2. ' ' → logprob: -6.751222133636475
    3. '   ' → logprob: -10.501222610473633
    4. ')' → logprob: -11.626222610473633
    5. ']' → logprob: -12.001222610473633
    6. '```' → logprob: -12.251222610473633
    7. '  ' → logprob: -13.501222610473633
    8. '    ' → logprob: -14.563722610473633
    9. '<|end|>' → logprob: -14.876222610473633
    10. '
' → logprob: -15.438722610473633

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. ')' → logprob: -15.125011444091797
    4. '```' → logprob: -15.125011444091797
    5. '   ' → logprob: -15.875011444091797
    6. '0' → logprob: -16.312511444091797
    7. '<|end|>' → logprob: -16.375011444091797
    8. '
' → logprob: -16.437511444091797
    9. ']' → logprob: -16.687511444091797
    10. 'factor' → logprob: -16.812511444091797

Token 142: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016096075996756554
    2. '*' → logprob: -4.141096115112305
    3. ' ' → logprob: -9.766096115112305
    4. '*(' → logprob: -13.641096115112305
    5. ' ' → logprob: -13.891096115112305
    6. ')' → logprob: -14.016096115112305
    7. '   ' → logprob: -14.391096115112305
    8. '*object' → logprob: -15.391096115112305
    9. ' *
' → logprob: -15.516096115112305
    10. '1' → logprob: -16.141096115112305

Token 143: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007617275230586529
    2. '*' → logprob: -4.882617473602295
    3. ' ' → logprob: -11.632616996765137
    4. '   ' → logprob: -13.882616996765137
    5. ' *
' → logprob: -14.882616996765137
    6. '    ' → logprob: -15.507616996765137
    7. ' ' → logprob: -15.632616996765137
    8. '*object' → logprob: -16.132617950439453
    9. '  ' → logprob: -16.382617950439453
    10. '<|end|>' → logprob: -16.507617950439453

Token 144: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.06879764795303345
    2. ' (' → logprob: -2.8187975883483887
    3. '(' → logprob: -5.068797588348389
    4. '[idx' → logprob: -8.193798065185547
    5. '(index' → logprob: -9.318798065185547
    6. ')' → logprob: -10.568798065185547
    7. '(i' → logprob: -10.693798065185547
    8. '   ' → logprob: -10.943798065185547
    9. '(n' → logprob: -11.443798065185547
    10. '(next' → logprob: -11.693798065185547

Token 145: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.501755952835083
    2. '(idx' → logprob: -1.001755952835083
    3. ' idx' → logprob: -4.001755714416504
    4. ' (' → logprob: -5.001755714416504
    5. '[idx' → logprob: -6.251755714416504
    6. '   ' → logprob: -8.751755714416504
    7. '(' → logprob: -9.251755714416504
    8. '	idx' → logprob: -9.501755714416504
    9. '_idx' → logprob: -12.126755714416504
    10. 'index' → logprob: -12.251755714416504

Token 146: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048589639365673065
    2. ' +' → logprob: -3.0485897064208984
    3. '+
' → logprob: -13.673589706420898
    4. '1' → logprob: -14.673589706420898
    5. ' +
' → logprob: -14.673589706420898
    6. '＋' → logprob: -15.423589706420898
    7. '+

' → logprob: -17.1735897064209
    8. ' ' → logprob: -17.6735897064209
    9. ' +
' → logprob: -18.6735897064209
    10. 'plus' → logprob: -18.9235897064209

Token 147: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010359067237004638
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -13.876035690307617
    4. ')' → logprob: -14.188535690307617
    5. '```' → logprob: -14.501035690307617
    6. '
' → logprob: -15.501035690307617
    7. '  ' → logprob: -15.876035690307617
    8. '<|end|>' → logprob: -16.188535690307617
    9. ' ' → logprob: -16.688535690307617
    10. '۱' → logprob: -17.001035690307617

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. ' ' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.375020027160645
    4. ')' → logprob: -15.937520027160645
    5. '  ' → logprob: -16.062519073486328
    6. '```' → logprob: -16.562519073486328
    7. '
' → logprob: -17.500019073486328
    8. '<|end|>' → logprob: -17.750019073486328
    9. '    ' → logprob: -18.000019073486328
    10. '১' → logprob: -18.250019073486328

Token 149: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009654151508584619
    2. '))' → logprob: -7.125965595245361
    3. ' )' → logprob: -8.750965118408203
    4. ')%' → logprob: -13.625965118408203
    5. ' ))' → logprob: -13.750965118408203
    6. '   ' → logprob: -14.875965118408203
    7. '])' → logprob: -18.000965118408203
    8. ' ' → logprob: -18.250965118408203
    9. '```' → logprob: -18.250965118408203
    10. '`)' → logprob: -18.500965118408203

Token 150: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.00977474357932806
    2. '%' → logprob: -4.634774684906006
    3. ')' → logprob: -11.384775161743164
    4. ' ' → logprob: -12.259775161743164
    5. ' ' → logprob: -13.634775161743164
    6. ' %
' → logprob: -14.634775161743164
    7. ')%' → logprob: -14.884775161743164
    8. ' 
' → logprob: -16.009775161743164
    9. ' %=' → logprob: -16.134775161743164
    10. '
' → logprob: -16.509775161743164

Token 151: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.012108709663152695
    2. 'mod' → logprob: -4.51210880279541
    3. ' ' → logprob: -7.26210880279541
    4. '```' → logprob: -9.63710880279541
    5. ' mod' → logprob: -9.76210880279541
    6. ' ' → logprob: -10.01210880279541
    7. '(mod' → logprob: -10.51210880279541
    8. '"' → logprob: -10.63710880279541
    9. ' modulation' → logprob: -11.38710880279541
    10. '`' → logprob: -11.51210880279541

Token 152: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004596622660756111
    2. '   ' → logprob: -5.629596710205078
    3. 'return' → logprob: -7.504596710205078
    4. '    
' → logprob: -8.504596710205078
    5. '
' → logprob: -9.129596710205078
    6. ' return' → logprob: -9.129596710205078
    7. ' 
' → logprob: -11.504596710205078
    8. '	return' → logprob: -12.129596710205078
    9. ':return' → logprob: -13.004596710205078
    10. '  
' → logprob: -13.254596710205078

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007671102415770292
    2. '
' → logprob: -5.882670879364014
    3. 'return' → logprob: -5.882670879364014
    4. '    
' → logprob: -6.882670879364014
    5. ' return' → logprob: -7.132670879364014
    6. '	return' → logprob: -8.882671356201172
    7. ':return' → logprob: -9.757671356201172
    8. '```' → logprob: -11.257671356201172
    9. ' 
' → logprob: -11.757671356201172
    10. '<|end|>' → logprob: -12.382671356201172

Token 154: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6969861388206482
    2. 'return' (adapté à ' return') → logprob: -0.6969861388206482
    3. ' return' → logprob: -5.571986198425293
    4. '```' → logprob: -11.446986198425293
    5. '    
' → logprob: -12.321986198425293
    6. '{return' → logprob: -12.571986198425293
    7. ':return' → logprob: -12.571986198425293
    8. ' ' → logprob: -12.946986198425293
    9. '	return' → logprob: -13.071986198425293
    10. '
' → logprob: -14.071986198425293

Token 155: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.10080349445343018
    2. ' factorial' → logprob: -2.3508033752441406
    3. '(f' → logprob: -7.600803375244141
    4. ' factor' → logprob: -9.97580337524414
    5. 'fact' → logprob: -10.60080337524414
    6. ' (' → logprob: -10.97580337524414
    7. '   ' → logprob: -13.60080337524414
    8. '_factor' → logprob: -13.60080337524414
    9. 'f' → logprob: -13.85080337524414
    10. '(' → logprob: -13.85080337524414

Token 156: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.875004768371582
    3. ' _' → logprob: -14.125004768371582
    4. 's' → logprob: -14.500004768371582
    5. '_lists' → logprob: -15.250004768371582
    6. '_factor' → logprob: -15.375004768371582
    7. '_l' → logprob: -15.500004768371582
    8. '_s' → logprob: -15.750004768371582
    9. '_li' → logprob: -15.875004768371582
    10. '_lst' → logprob: -15.875004768371582

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. 'inverse' → logprob: -10.62503719329834
    3. ' inverse' → logprob: -12.25003719329834
    4. '_inverse' → logprob: -12.87503719329834
    5. ',in' → logprob: -13.12503719329834
    6. ' ,' → logprob: -13.62503719329834
    7. ',
' → logprob: -14.50003719329834
    8. ',int' → logprob: -15.12503719329834
    9. 'Inverse' → logprob: -15.25003719329834
    10. '‌,' → logprob: -15.25003719329834

Token 158: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.0015067668864503503
    2. 'inverse' → logprob: -6.501506805419922
    3. ' ' → logprob: -12.501506805419922
    4. '.inverse' → logprob: -15.376506805419922
    5. ' space' → logprob: -15.751506805419922
    6. '_inverse' → logprob: -16.001506805419922
    7. 'Inverse' → logprob: -16.376506805419922
    8. ' ' → logprob: -16.626506805419922
    9. ' 
' → logprob: -17.376506805419922
    10. ' reverse' → logprob: -17.626506805419922

Token 159: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001766040368238464
    2. 'list' → logprob: -8.875176429748535
    3. 'er' → logprob: -11.125176429748535
    4. 'e' → logprob: -11.750176429748535
    5. 'or' → logprob: -12.500176429748535
    6. 'r' → logprob: -12.625176429748535
    7. 'verse' → logprob: -13.500176429748535
    8. 'ist' → logprob: -14.000176429748535
    9. '```' → logprob: -14.125176429748535
    10. 'List' → logprob: -14.250176429748535

Token 160: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0159227848052979
    2. '<|end|>' → logprob: -1.0159227848052979
    3. 'def' → logprob: -1.8909227848052979
    4. '#' → logprob: -2.515922784805298
    5. '```' → logprob: -4.140922546386719
    6. '(' → logprob: -4.515922546386719
    7. ')' → logprob: -4.890922546386719
    8. '\n' → logprob: -6.265922546386719
    9. '\' → logprob: -6.765922546386719
    10. ' ' → logprob: -7.390922546386719

Token 162: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14199119806289673
    2. ' calculate' → logprob: -3.016991138458252
    3. '_' → logprob: -3.391991138458252
    4. ' calc' → logprob: -4.266991138458252
    5. ' _' → logprob: -4.641991138458252
    6. ' space' → logprob: -4.641991138458252
    7. ' compute' → logprob: -5.016991138458252
    8. ' def' → logprob: -6.141991138458252
    9. ' ' → logprob: -6.141991138458252
    10. ' factorial' → logprob: -6.516991138458252

Token 163: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -0.6602115035057068
    2. '_' → logprob: -1.1602115631103516
    3. '_bin' → logprob: -2.0352115631103516
    4. '_com' → logprob: -3.7852115631103516
    5. '_factor' → logprob: -4.285211563110352
    6. '_n' → logprob: -7.410211563110352
    7. '_combo' → logprob: -8.160211563110352
    8. '_max' → logprob: -8.410211563110352
    9. '_c' → logprob: -8.910211563110352
    10. '_f' → logprob: -9.035211563110352

Token 164: 'ination' (ID: 3273)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06564901769161224
    2. 'ination' → logprob: -2.8156490325927734
    3. '(max' → logprob: -5.940649032592773
    4. 'n' → logprob: -8.190649032592773
    5. 'inations' → logprob: -8.190649032592773
    6. 'def' → logprob: -8.565649032592773
    7. '(' → logprob: -9.940649032592773
    8. '(num' → logprob: -10.065649032592773
    9. '(def' → logprob: -10.315649032592773
    10. 'inition' → logprob: -10.565649032592773

Token 165: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1010875552892685
    2. '(max' → logprob: -2.9760875701904297
    3. '(n' → logprob: -3.1010875701904297
    4. ' (' → logprob: -9.47608757019043
    5. '(num' → logprob: -9.72608757019043
    6. '(
' → logprob: -12.97608757019043
    7. '(x' → logprob: -13.35108757019043
    8. '(next' → logprob: -13.60108757019043
    9. '(min' → logprob: -13.97608757019043
    10. '(m' → logprob: -14.10108757019043

Token 166: '_value' (ID: 6734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011647457722574472
    2. ' ,' → logprob: -6.87616491317749
    3. ',n' → logprob: -9.751164436340332
    4. ',k' → logprob: -10.001164436340332
    5. '_,' → logprob: -11.376164436340332
    6. ' ' → logprob: -12.126164436340332
    7. '‌,' → logprob: -13.751164436340332
    8. ',r' → logprob: -13.751164436340332
    9. 's' → logprob: -14.001164436340332
    10. ',m' → logprob: -14.126164436340332

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. 's' → logprob: -11.750017166137695
    3. ',n' → logprob: -12.750017166137695
    4. ',k' → logprob: -12.875017166137695
    5. ' ,' → logprob: -13.500017166137695
    6. ',
' → logprob: -14.625017166137695
    7. ',m' → logprob: -15.125017166137695
    8. 'r' → logprob: -15.500017166137695
    9. ',r' → logprob: -15.500017166137695
    10. ':' → logprob: -15.500017166137695

Token 168: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13145248591899872
    2. 'r' → logprob: -2.2564525604248047
    3. ' k' → logprob: -4.256452560424805
    4. ' r' → logprob: -5.631452560424805
    5. '   ' → logprob: -7.756452560424805
    6. '```' → logprob: -9.131452560424805
    7. ' ' → logprob: -9.256452560424805
    8. '
' → logprob: -10.256452560424805
    9. '  ' → logprob: -11.381452560424805
    10. '	k' → logprob: -12.131452560424805

Token 169: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.16596126556396484
    2. '):' → logprob: -1.9159612655639648
    3. ')_' → logprob: -6.540961265563965
    4. ')' → logprob: -6.790961265563965
    5. ',' → logprob: -6.915961265563965
    6. '_' → logprob: -7.415961265563965
    7. 'value' → logprob: -7.790961265563965
    8. '):
' → logprob: -7.790961265563965
    9. '_values' → logprob: -8.040961265563965
    10. '_val' → logprob: -9.290961265563965

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',
' → logprob: -13.750039100646973
    4. '   ' → logprob: -14.250039100646973
    5. ',n' → logprob: -14.250039100646973
    6. '‌,' → logprob: -15.125039100646973
    7. ' ' → logprob: -16.000038146972656
    8. ',m' → logprob: -16.000038146972656
    9. '):' → logprob: -16.125038146972656
    10. 'def' → logprob: -16.375038146972656

Token 171: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08937736600637436
    2. ' modulus' → logprob: -2.4643774032592773
    3. ' mod' → logprob: -8.089377403259277
    4. 'module' → logprob: -10.089377403259277
    5. ' modulo' → logprob: -10.714377403259277
    6. ' ' → logprob: -10.964377403259277
    7. '   ' → logprob: -10.964377403259277
    8. '	mod' → logprob: -11.714377403259277
    9. 'm' → logprob: -12.214377403259277
    10. ' modular' → logprob: -12.589377403259277

Token 172: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001817297888919711
    2. ')' → logprob: -8.875182151794434
    3. '):
' → logprob: -10.625182151794434
    4. ' ):' → logprob: -11.125182151794434
    5. ':' → logprob: -13.500182151794434
    6. ',' → logprob: -14.625182151794434
    7. ' ' → logprob: -14.625182151794434
    8. '   ' → logprob: -15.000182151794434
    9. '}:' → logprob: -17.375181198120117
    10. '):
' → logprob: -17.500181198120117

Token 173: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.20681339502334595
    2. ' factorial' → logprob: -1.7068133354187012
    3. 'fact' → logprob: -5.331813335418701
    4. '   ' → logprob: -7.956813335418701
    5. 'fac' → logprob: -9.83181381225586
    6. ' ' → logprob: -9.83181381225586
    7. ' fact' → logprob: -10.08181381225586
    8. ' factor' → logprob: -10.95681381225586
    9. '  ' → logprob: -11.58181381225586
    10. 'f' → logprob: -11.95681381225586

Token 174: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001130571006797254
    2. 's' → logprob: -6.8761305809021
    3. '_lists' → logprob: -10.001130104064941
    4. '_,' → logprob: -11.001130104064941
    5. '_s' → logprob: -11.126130104064941
    6. '_' → logprob: -11.501130104064941
    7. ',' → logprob: -12.251130104064941
    8. ',_' → logprob: -13.126130104064941
    9. '_l' → logprob: -13.876130104064941
    10. ' _' → logprob: -14.001130104064941

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.463036435074173e-05
    2. ' ,' → logprob: -10.875024795532227
    3. ',r' → logprob: -13.875024795532227
    4. ',n' → logprob: -14.375024795532227
    5. ',index' → logprob: -14.500024795532227
    6. '‌,' → logprob: -14.500024795532227
    7. ',int' → logprob: -14.875024795532227
    8. ',
' → logprob: -15.125024795532227
    9. '):' → logprob: -15.250024795532227
    10. '_,' → logprob: -15.500024795532227

Token 176: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.5231622457504272
    2. ' inverse' → logprob: -0.8981622457504272
    3. ' ' → logprob: -11.273161888122559
    4. '   ' → logprob: -11.398161888122559
    5. '_inverse' → logprob: -12.398161888122559
    6. '    ' → logprob: -12.398161888122559
    7. '  ' → logprob: -13.148161888122559
    8. '.inverse' → logprob: -13.648161888122559
    9. 'in' → logprob: -13.898161888122559
    10. 'Inverse' → logprob: -14.273161888122559

Token 177: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.700132997939363e-05
    2. ')_' → logprob: -12.125017166137695
    3. 's' → logprob: -12.375017166137695
    4. '_lists' → logprob: -13.000017166137695
    5. '_values' → logprob: -13.375017166137695
    6. '_value' → logprob: -13.750017166137695
    7. ')' → logprob: -14.500017166137695
    8. ' _' → logprob: -15.000017166137695
    9. '_factor' → logprob: -15.000017166137695
    10. '_s' → logprob: -15.000017166137695

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00013405199570115656
    2. '):
' → logprob: -9.125134468078613
    3. ')' → logprob: -10.750134468078613
    4. ' ):' → logprob: -13.125134468078613
    5. ':' → logprob: -13.625134468078613
    6. '   ' → logprob: -15.000134468078613
    7. '):
' → logprob: -17.375133514404297
    8. ' ' → logprob: -17.625133514404297
    9. '):

' → logprob: -18.250133514404297
    10. '=' → logprob: -18.625133514404297

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021660666912794113
    2. ':' → logprob: -3.896660566329956
    3. '(' → logprob: -7.646660804748535
    4. ')' → logprob: -9.021660804748535
    5. '    
' → logprob: -9.021660804748535
    6. '    ' → logprob: -9.646660804748535
    7. ':
' → logprob: -9.771660804748535
    8. '):' → logprob: -10.021660804748535
    9. '[' → logprob: -10.521660804748535
    10. ':return' → logprob: -10.521660804748535

Token 180: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24225468933582306
    2. ' if' → logprob: -1.6172547340393066
    3. ' return' → logprob: -4.867254734039307
    4. 'if' (adapté à ' if') → logprob: -5.242254734039307
    5. ' 
' → logprob: -6.742254734039307
    6. '    ' → logprob: -6.992254734039307
    7. '    
' → logprob: -7.367254734039307
    8. 'return' → logprob: -7.992254734039307
    9. 'n' → logprob: -8.492254257202148
    10. ' ' → logprob: -9.367254257202148

Token 181: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.00041125001735053957
    2. ' n' → logprob: -8.125411033630371
    3. 'r' → logprob: -9.125411033630371
    4. ' ' → logprob: -13.000411033630371
    5. '	r' → logprob: -13.375411033630371
    6. ' not' → logprob: -13.750411033630371
    7. ' ' → logprob: -14.875411033630371
    8. ' (' → logprob: -15.000411033630371
    9. 'n' → logprob: -15.250411033630371
    10. '```' → logprob: -16.125411987304688

Token 182: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005112105864100158
    2. '_' → logprob: -7.625511169433594
    3. '>' → logprob: -10.875511169433594
    4. ' >' → logprob: -13.500511169433594
    5. '_val' → logprob: -13.625511169433594
    6. ' _' → logprob: -14.125511169433594
    7. '_Value' → logprob: -15.125511169433594
    8. '<' → logprob: -15.875511169433594
    9. '_VALUE' → logprob: -16.250511169433594
    10. 'value' → logprob: -16.375511169433594

Token 183: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01678076572716236
    2. '>' → logprob: -4.141780853271484
    3. ' <' → logprob: -7.516780853271484
    4. ' ==' → logprob: -8.766780853271484
    5. '==' → logprob: -10.891780853271484
    6. '<' → logprob: -11.266780853271484
    7. ' ' → logprob: -11.641780853271484
    8. ' ' → logprob: -12.766780853271484
    9. '0' → logprob: -14.016780853271484
    10. '=' → logprob: -14.641780853271484

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001331667648628354
    2. ' ' → logprob: -6.626331806182861
    3. '=' → logprob: -12.126331329345703
    4. 'or' → logprob: -16.001331329345703
    5. ' or' → logprob: -16.626331329345703
    6. '```' → logprob: -16.876331329345703
    7. '۰' → logprob: -16.876331329345703
    8. '1' → logprob: -17.501331329345703
    9. '>' → logprob: -18.001331329345703
    10. ' =' → logprob: -18.063831329345703

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '=' → logprob: -12.250007629394531
    3. ' ' → logprob: -13.000007629394531
    4. 'or' → logprob: -16.00000762939453
    5. '۰' → logprob: -17.25000762939453
    6. '```' → logprob: -18.25000762939453
    7. ' or' → logprob: -18.50000762939453
    8. ' =' → logprob: -19.00000762939453
    9. '1' → logprob: -19.87500762939453
    10. '_' → logprob: -20.18750762939453

Token 186: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.008689153008162975
    2. 'or' → logprob: -4.758688926696777
    3. ' ' → logprob: -10.133688926696777
    4. '<|end|>' → logprob: -10.383688926696777
    5. '	or' → logprob: -12.508688926696777
    6. '<|end|>' → logprob: -16.008689880371094
    7. ')' → logprob: -17.133689880371094
    8. '  ' → logprob: -17.883689880371094
    9. ' orun' → logprob: -18.133689880371094
    10. ' ' → logprob: -18.133689880371094

Token 187: ' n' (ID: 297)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5762091279029846
    2. ' r' → logprob: -0.8262091279029846
    3. ' n' → logprob: -8.70120906829834
    4. 'n' → logprob: -9.32620906829834
    5. '   ' → logprob: -11.95120906829834
    6. '<|end|>' → logprob: -12.45120906829834
    7. ' ' → logprob: -13.07620906829834
    8. '	r' → logprob: -13.95120906829834
    9. '  ' → logprob: -15.45120906829834
    10. '    ' → logprob: -15.45120906829834

Token 188: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.0100624169572257e-05
    2. 'value' → logprob: -11.000020027160645
    3. '_' → logprob: -13.000020027160645
    4. '_VALUE' → logprob: -14.750020027160645
    5. 'Value' → logprob: -15.125020027160645
    6. '_Value' → logprob: -16.25002098083496
    7. '-value' → logprob: -16.37502098083496
    8. '<' → logprob: -16.50002098083496
    9. '<|end|>' → logprob: -17.00002098083496
    10. '_n' → logprob: -17.00002098083496

Token 189: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4572513997554779
    2. '<' → logprob: -1.2072514295578003
    3. '<|end|>' → logprob: -2.7072513103485107
    4. ' ' → logprob: -7.08225154876709
    5. '<|end|>' → logprob: -9.08225154876709
    6. '<n' → logprob: -10.45725154876709
    7. '<int' → logprob: -10.70725154876709
    8. 'or' → logprob: -10.95725154876709
    9. ' or' → logprob: -11.20725154876709
    10. '   ' → logprob: -11.20725154876709

Token 190: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005986982025206089
    2. ' r' → logprob: -5.755987167358398
    3. '0' → logprob: -5.880987167358398
    4. ' ' → logprob: -11.380987167358398
    5. '	r' → logprob: -14.005987167358398
    6. '   ' → logprob: -14.130987167358398
    7. '  ' → logprob: -16.7559871673584
    8. '=' → logprob: -16.8809871673584
    9. '_r' → logprob: -17.0059871673584
    10. '<|end|>' → logprob: -17.1309871673584

Token 191: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.968312951968983e-06
    2. 'alue' → logprob: -12.250009536743164
    3. 'value' → logprob: -12.625009536743164
    4. '_' → logprob: -13.750009536743164
    5. '_VALUE' → logprob: -15.000009536743164
    6. ')' → logprob: -16.000009536743164
    7. 'Value' → logprob: -16.250009536743164
    8. ' or' → logprob: -16.375009536743164
    9. '   ' → logprob: -16.500009536743164
    10. ':' → logprob: -16.875009536743164

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0055907717905938625
    2. ':
' → logprob: -5.380590915679932
    3. ' or' → logprob: -7.630590915679932
    4. ':return' → logprob: -7.755590915679932
    5. '   ' → logprob: -9.880590438842773
    6. ' :' → logprob: -12.380590438842773
    7. '       ' → logprob: -15.505590438842773
    8. '):' → logprob: -15.880590438842773
    9. ' :
' → logprob: -16.130590438842773
    10. ':
' → logprob: -16.255590438842773

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1859976053237915
    2. ':' → logprob: -2.060997486114502
    3. '   ' → logprob: -3.310997486114502
    4. ':return' → logprob: -5.810997486114502
    5. ':
' → logprob: -6.060997486114502
    6. '    ' → logprob: -8.56099796295166
    7. '<|end|>' → logprob: -9.43599796295166
    8. '
' → logprob: -10.06099796295166
    9. '    
' → logprob: -10.06099796295166
    10. ')' → logprob: -10.18599796295166

Token 194: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5142824053764343
    2. 'return' (adapté à ' return') → logprob: -1.014282464981079
    3. '   ' → logprob: -3.889282464981079
    4. '       ' → logprob: -4.2642822265625
    5. '    ' → logprob: -6.3892822265625
    6. ' 
' → logprob: -6.6392822265625
    7. '
' → logprob: -6.6392822265625
    8. '    
' → logprob: -8.6392822265625
    9. ':return' → logprob: -8.7642822265625
    10. '	return' → logprob: -9.5142822265625

Token 195: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20141470432281494
    2. '0' → logprob: -1.701414704322815
    3. ' ' → logprob: -13.951415061950684
    4. ' None' → logprob: -14.701415061950684
    5. 'None' → logprob: -17.076414108276367
    6. ' 
' → logprob: -18.951414108276367
    7. '  ' → logprob: -19.201414108276367
    8. '   ' → logprob: -19.701414108276367
    9. '۰' → logprob: -20.201414108276367
    10. '  
' → logprob: -20.951414108276367

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.625003814697266
    4. '```' → logprob: -19.625003814697266
    5. '۰' → logprob: -20.000003814697266
    6. '  ' → logprob: -21.375003814697266
    7. '０' → logprob: -21.500003814697266
    8. '
' → logprob: -21.625003814697266
    9. '00' → logprob: -21.625003814697266
    10. ' ' → logprob: -22.062503814697266

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7347567081451416
    2. '   ' → logprob: -0.7347567081451416
    3. '    
' → logprob: -3.6097567081451416
    4. '  
' → logprob: -5.2347564697265625
    5. '\n' → logprob: -5.3597564697265625
    6. ' 
' → logprob: -6.4847564697265625
    7. '<|end|>' → logprob: -6.7347564697265625
    8. '   
' → logprob: -7.6097564697265625
    9. 'newline' → logprob: -9.609756469726562
    10. ')' → logprob: -9.734756469726562

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008030900731682777
    2. '    
' → logprob: -5.008030891418457
    3. '
' → logprob: -6.758030891418457
    4. ' 
' → logprob: -9.633030891418457
    5. '   
' → logprob: -10.258030891418457
    6. '\n' → logprob: -10.758030891418457
    7. '  
' → logprob: -11.008030891418457
    8. 'n' → logprob: -12.133030891418457
    9. ' return' → logprob: -12.633030891418457
    10. '     
' → logprob: -13.383030891418457

Token 199: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08422262221574783
    2. ' return' → logprob: -3.8342225551605225
    3. '    
' → logprob: -4.084222793579102
    4. 'result' → logprob: -4.459222793579102
    5. 'return' (adapté à ' return') → logprob: -4.584222793579102
    6. ' 
' → logprob: -5.084222793579102
    7. 'n' → logprob: -5.084222793579102
    8. ' result' → logprob: -5.584222793579102
    9. 'factor' → logprob: -6.834222793579102
    10. '    ' → logprob: -7.334222793579102

Token 200: ' factorial' (ID: 111204)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06332116574048996
    2. '(f' → logprob: -2.813321113586426
    3. ' factorial' → logprob: -6.813321113586426
    4. '(' → logprob: -8.438321113586426
    5. 'factor' → logprob: -10.563321113586426
    6. ' ' → logprob: -12.688321113586426
    7. ' ((' → logprob: -13.063321113586426
    8. '(int' → logprob: -13.438321113586426
    9. ' ' → logprob: -13.688321113586426
    10. ' (
' → logprob: -13.813321113586426

Token 201: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. '[_' → logprob: -14.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. '[' → logprob: -17.125
    5. '```' → logprob: -17.875
    6. ' _' → logprob: -18.25
    7. '_value' → logprob: -18.625
    8. 's' → logprob: -18.875
    9. '_lists' → logprob: -19.375
    10. '_List' → logprob: -20.375

Token 202: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'n' → logprob: -16.625
    4. ' [' → logprob: -16.875
    5. '[r' → logprob: -19.375
    6. '[
' → logprob: -20.0
    7. '   ' → logprob: -20.75
    8. '(n' → logprob: -21.25
    9. '	n' → logprob: -21.5
    10. '```' → logprob: -21.5

Token 203: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.704273118884885e-07
    2. ']' → logprob: -15.500000953674316
    3. 'value' → logprob: -15.750000953674316
    4. '_' → logprob: -16.375
    5. ']_' → logprob: -16.5
    6. '_VALUE' → logprob: -17.125
    7. '_val' → logprob: -17.875
    8. '_Value' → logprob: -18.75
    9. '_]' → logprob: -18.75
    10. 'Value' → logprob: -18.875

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.6656825866666622e-05
    2. ' ]' → logprob: -11.00002670288086
    3. '   ' → logprob: -11.75002670288086
    4. ']*' → logprob: -13.50002670288086
    5. ' ' → logprob: -16.12502670288086
    6. ']
' → logprob: -16.37502670288086
    7. ' *' → logprob: -16.37502670288086
    8. '[' → logprob: -16.62502670288086
    9. '*' → logprob: -16.75002670288086
    10. ')' → logprob: -16.87502670288086

Token 205: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18019400537014008
    2. '*' → logprob: -1.8051940202713013
    3. '   ' → logprob: -8.305193901062012
    4. ' ' → logprob: -9.180193901062012
    5. ' *
' → logprob: -9.680193901062012
    6. '*
' → logprob: -11.930193901062012
    7. ' ' → logprob: -12.305193901062012
    8. '  ' → logprob: -12.430193901062012
    9. '(' → logprob: -12.555193901062012
    10. '    ' → logprob: -12.555193901062012

Token 206: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.5287469625473022
    2. ' inverse' → logprob: -0.9037469625473022
    3. ' (' → logprob: -5.403747081756592
    4. '(in' → logprob: -7.153747081756592
    5. '(' → logprob: -8.153746604919434
    6. '_inverse' → logprob: -10.903746604919434
    7. '.inverse' → logprob: -11.778746604919434
    8. 'in' → logprob: -13.153746604919434
    9. '(
' → logprob: -13.403746604919434
    10. ' factorial' → logprob: -13.403746604919434

Token 207: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.704273118884885e-07
    2. 'ist' → logprob: -15.500000953674316
    3. '[' → logprob: -16.0
    4. 'List' → logprob: -16.5
    5. '_' → logprob: -16.75
    6. 's' → logprob: -17.0
    7. '*' → logprob: -17.125
    8. '_LIST' → logprob: -17.75
    9. 'list' → logprob: -18.5
    10. 'o' → logprob: -18.75

Token 208: '[n' (ID: 15433)
  Prédit: '[r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0001239196863025427
    2. '[n' → logprob: -9.000123977661133
    3. '[' → logprob: -14.750123977661133
    4. 'r' → logprob: -16.750123977661133
    5. ' [' → logprob: -19.500123977661133
    6. '	r' → logprob: -20.750123977661133
    7. '[
' → logprob: -20.875123977661133
    8. '```' → logprob: -21.000123977661133
    9. '(r' → logprob: -21.250123977661133
    10. '[c' → logprob: -22.000123977661133

Token 209: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00023750975378789008
    2. 'value' → logprob: -8.375237464904785
    3. '_VALUE' → logprob: -12.500237464904785
    4. 'Value' → logprob: -13.625237464904785
    5. 'alue' → logprob: -14.000237464904785
    6. '_Value' → logprob: -14.500237464904785
    7. '-value' → logprob: -15.750237464904785
    8. ']' → logprob: -16.5002384185791
    9. 'valu' → logprob: -17.0002384185791
    10. '_values' → logprob: -17.0002384185791

Token 210: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.22670431435108185
    2. ']' → logprob: -1.9767043590545654
    3. ' -' → logprob: -2.9767043590545654
    4. '-' → logprob: -4.601704120635986
    5. '[r' → logprob: -5.976704120635986
    6. '[' → logprob: -7.601704120635986
    7. '-R' → logprob: -8.851704597473145
    8. '   ' → logprob: -9.476704597473145
    9. ' ' → logprob: -10.351704597473145
    10. '-n' → logprob: -12.351704597473145

Token 211: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.022655848413705826
    2. ' r' → logprob: -4.397655963897705
    3. 'value' → logprob: -5.522655963897705
    4. '1' → logprob: -6.147655963897705
    5. '_value' → logprob: -6.147655963897705
    6. ' ' → logprob: -7.397655963897705
    7. '<|end|>' → logprob: -7.772655963897705
    8. '_r' → logprob: -8.147655487060547
    9. ' value' → logprob: -9.522655487060547
    10. '<|end|>' → logprob: -9.647655487060547

Token 212: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.776898251497187e-05
    2. 'alue' → logprob: -9.8750581741333
    3. 'value' → logprob: -12.3750581741333
    4. '_' → logprob: -13.6250581741333
    5. '_VALUE' → logprob: -15.2500581741333
    6. ']_' → logprob: -15.6250581741333
    7. ']' → logprob: -16.250057220458984
    8. 'Value' → logprob: -17.000057220458984
    9. '_val' → logprob: -17.250057220458984
    10. ' _' → logprob: -17.375057220458984

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038562860572710633
    2. ' ]' → logprob: -7.875385761260986
    3. ']*' → logprob: -13.125385284423828
    4. ']%' → logprob: -13.500385284423828
    5. '[' → logprob: -13.875385284423828
    6. ' *' → logprob: -14.750385284423828
    7. '*' → logprob: -15.125385284423828
    8. '']' → logprob: -15.875385284423828
    9. ')' → logprob: -16.500385284423828
    10. '   ' → logprob: -16.625385284423828

Token 214: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0135418139398098
    2. '*' → logprob: -4.3885416984558105
    3. ' %' → logprob: -7.5135416984558105
    4. '%' → logprob: -8.388542175292969
    5. ' ' → logprob: -8.638542175292969
    6. ')' → logprob: -10.638542175292969
    7. ' ' → logprob: -10.763542175292969
    8. '   ' → logprob: -11.388542175292969
    9. '`' → logprob: -12.263542175292969
    10. '```' → logprob: -12.388542175292969

Token 215: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.07926814258098602
    2. 'mod' → logprob: -2.579268217086792
    3. '(mod' → logprob: -8.079268455505371
    4. ' mod' → logprob: -10.204268455505371
    5. '	mod' → logprob: -11.829268455505371
    6. ' ' → logprob: -11.954268455505371
    7. ' ' → logprob: -12.329268455505371
    8. '_mod' → logprob: -12.454268455505371
    9. 'space' → logprob: -12.954268455505371
    10. '```' → logprob: -13.454268455505371

Token 216: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.21630780398845673
    2. '*' → logprob: -1.8413077592849731
    3. '   ' → logprob: -3.3413078784942627
    4. ' ' → logprob: -8.716307640075684
    5. ')' → logprob: -9.091307640075684
    6. '  ' → logprob: -9.466307640075684
    7. ' ' → logprob: -9.841307640075684
    8. '    ' → logprob: -10.091307640075684
    9. 'def' → logprob: -11.091307640075684
    10. '```' → logprob: -11.466307640075684

Token 217: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.47408178448677063
    2. ' inverse' → logprob: -0.9740817546844482
    3. '.inverse' → logprob: -13.349081993103027
    4. 'in' → logprob: -13.724081993103027
    5. '_inverse' → logprob: -14.099081993103027
    6. 'Inverse' → logprob: -14.599081993103027
    7. ' ' → logprob: -15.099081993103027
    8. '(in' → logprob: -15.599081993103027
    9. '   ' → logprob: -16.72408103942871
    10. '(' → logprob: -16.84908103942871

Token 218: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.250000953674316
    3. 's' → logprob: -16.5
    4. ' _' → logprob: -17.125
    5. '_line' → logprob: -17.5
    6. '_lst' → logprob: -17.5
    7. '_value' → logprob: -17.625
    8. '[' → logprob: -17.75
    9. '[_' → logprob: -18.0
    10. '_array' → logprob: -18.25

Token 219: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'r' → logprob: -17.25
    4. '[n' → logprob: -18.0
    5. '[
' → logprob: -20.375
    6. ' [' → logprob: -20.75
    7. '(r' → logprob: -21.75
    8. '```' → logprob: -22.75
    9. '	r' → logprob: -23.0
    10. '   ' → logprob: -23.375

Token 220: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: 0.0
    2. '_r' → logprob: -17.375
    3. 'value' → logprob: -18.125
    4. '_' → logprob: -19.25
    5. ' _' → logprob: -19.25
    6. '_VALUE' → logprob: -19.25
    7. 'alue' → logprob: -20.125
    8. '_val' → logprob: -20.625
    9. '_values' → logprob: -20.75
    10. '_Value' → logprob: -21.125

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003739387495443225
    2. ' ]' → logprob: -6.003739356994629
    3. ']%' → logprob: -7.253739356994629
    4. '}' → logprob: -8.378739356994629
    5. ')' → logprob: -8.628739356994629
    6. ' %' → logprob: -9.628739356994629
    7. '%' → logprob: -9.753739356994629
    8. ' }' → logprob: -11.378739356994629
    9. '<|end|>' → logprob: -12.378739356994629
    10. '   ' → logprob: -13.878739356994629

Token 222: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026683641597628593
    2. '%' → logprob: -3.6516835689544678
    3. ')' → logprob: -8.276683807373047
    4. '<|end|>' → logprob: -10.026683807373047
    5. ' ' → logprob: -10.401683807373047
    6. ' ' → logprob: -11.276683807373047
    7. ' %=' → logprob: -11.901683807373047
    8. '[' → logprob: -12.026683807373047
    9. ' %
' → logprob: -12.276683807373047
    10. '%n' → logprob: -12.401683807373047

Token 223: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.47490906715393066
    2. 'mod' → logprob: -0.9749090671539307
    3. '(mod' → logprob: -7.224908828735352
    4. ' mod' → logprob: -10.474908828735352
    5. '	mod' → logprob: -11.224908828735352
    6. 'space' → logprob: -11.474908828735352
    7. ' modul' → logprob: -11.724908828735352
    8. 'modifier' → logprob: -11.849908828735352
    9. '```' → logprob: -11.974908828735352
    10. ' ' → logprob: -12.099908828735352

Token 224: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: 'input' (ID: 2586)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09931786358356476
    2. '(' → logprob: -3.599317789077759
    3. '_data' → logprob: -3.974317789077759
    4. '().' → logprob: -4.099318027496338
    5. '_line' → logprob: -4.224318027496338
    6. '_' → logprob: -4.599318027496338
    7. '_str' → logprob: -5.599318027496338
    8. '_string' → logprob: -7.224318027496338
    9. '_text' → logprob: -7.349318027496338
    10. '_lines' → logprob: -8.09931755065918

Token 227: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03383379802107811
    2. '=' → logprob: -3.9088337421417236
    3. '_' → logprob: -4.908833980560303
    4. ',' → logprob: -6.283833980560303
    5. '()' → logprob: -6.283833980560303
    6. ' ' → logprob: -6.533833980560303
    7. '(' → logprob: -7.908833980560303
    8. ')' → logprob: -9.408833503723145
    9. '  ' → logprob: -10.283833503723145
    10. '_space' → logprob: -10.533833503723145

Token 228: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28116530179977417
    2. 'input' → logprob: -1.406165361404419
    3. '=input' → logprob: -11.78116512298584
    4. ' ' → logprob: -12.65616512298584
    5. ' =' → logprob: -13.78116512298584
    6. ',input' → logprob: -14.15616512298584
    7. '=' → logprob: -14.53116512298584
    8. 'int' → logprob: -14.65616512298584
    9. '_input' → logprob: -15.03116512298584
    10. 'space' → logprob: -15.78116512298584

Token 229: '_x' (ID: 7054)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.20192654430866241
    2. '_r' → logprob: -1.951926589012146
    3. '_m' → logprob: -3.2019264698028564
    4. 'k' → logprob: -9.451926231384277
    5. '_' → logprob: -10.326926231384277
    6. 'r' → logprob: -11.576926231384277
    7. 'm' → logprob: -11.576926231384277
    8. '_p' → logprob: -11.826926231384277
    9. '_q' → logprob: -12.201926231384277
    10. '_v' → logprob: -12.826926231384277

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16032131016254425
    2. '=' → logprob: -1.9103213548660278
    3. ',' → logprob: -9.285321235656738
    4. '=input' → logprob: -12.660321235656738
    5. ' ' → logprob: -15.160321235656738
    6. '=int' → logprob: -15.535321235656738
    7. ' =
' → logprob: -15.660321235656738
    8. ' ,' → logprob: -16.285322189331055
    9. ' =
' → logprob: -16.410322189331055
    10. '＝' → logprob: -16.535322189331055

Token 231: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931498050689697
    2. ' map' → logprob: -0.6931498050689697
    3. 'input' → logprob: -14.19314956665039
    4. ' ' → logprob: -14.44314956665039
    5. '	map' → logprob: -14.69314956665039
    6. 'list' → logprob: -14.81814956665039
    7. '(map' → logprob: -15.06814956665039
    8. '[' → logprob: -15.94314956665039
    9. ' input' → logprob: -16.81814956665039
    10. ' list' → logprob: -16.94314956665039

Token 232: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00035357745946384966
    2. '(' → logprob: -8.750353813171387
    3. 'int' → logprob: -9.000353813171387
    4. '(input' → logprob: -9.625353813171387
    5. '(str' → logprob: -12.375353813171387
    6. 'input' → logprob: -14.375353813171387
    7. '<int' → logprob: -15.250353813171387
    8. '(
' → logprob: -16.00035285949707
    9. '=int' → logprob: -16.12535285949707
    10. ' int' → logprob: -16.37535285949707

Token 233: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5828823447227478
    2. 'input' → logprob: -0.8328823447227478
    3. ')' → logprob: -5.457882404327393
    4. ',input' → logprob: -6.332882404327393
    5. ' input' → logprob: -7.707882404327393
    6. '=input' → logprob: -8.082881927490234
    7. '(' → logprob: -9.457881927490234
    8. '[input' → logprob: -11.457881927490234
    9. '<input' → logprob: -11.582881927490234
    10. ')(' → logprob: -11.832881927490234

Token 234: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001170225441455841
    2. ' input' → logprob: -6.7511701583862305
    3. '=input' → logprob: -19.501171112060547
    4. '(input' → logprob: -19.626171112060547
    5. '	input' → logprob: -21.126171112060547
    6. '   ' → logprob: -21.501171112060547
    7. '_input' → logprob: -21.626171112060547
    8. 'Input' → logprob: -21.876171112060547
    9. ',input' → logprob: -21.876171112060547
    10. ' ' → logprob: -22.001171112060547

Token 235: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001505578518845141
    2. '()' → logprob: -6.501505374908447
    3. '())' → logprob: -12.751505851745605
    4. ' ().' → logprob: -15.626505851745605
    5. '(' → logprob: -16.37650489807129
    6. '()]' → logprob: -17.00150489807129
    7. '()
' → logprob: -17.25150489807129
    8. '()[' → logprob: -17.75150489807129
    9. '()\' → logprob: -17.87650489807129
    10. '()`' → logprob: -18.00150489807129

Token 236: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.52919222577475e-05
    2. 'strip' → logprob: -9.500075340270996
    3. 'rstrip' → logprob: -15.500075340270996
    4. ' split' → logprob: -16.37507438659668
    5. '(split' → logprob: -18.50007438659668
    6. 'spl' → logprob: -18.62507438659668
    7. 'read' → logprob: -19.75007438659668
    8. '.split' → logprob: -20.50007438659668
    9. '().' → logprob: -21.00007438659668
    10. '_split' → logprob: -21.12507438659668

Token 237: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015796085819602013
    2. '()' → logprob: -4.515796184539795
    3. ')' → logprob: -5.390796184539795
    4. '(' → logprob: -9.015795707702637
    5. '('' → logprob: -10.140795707702637
    6. '()))' → logprob: -11.890795707702637
    7. '(','' → logprob: -12.515795707702637
    8. '(),' → logprob: -13.140795707702637
    9. '())
' → logprob: -13.890795707702637
    10. '("' → logprob: -14.140795707702637

Token 238: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.13916032016277313
    2. 'result' → logprob: -2.889160394668579
    3. 'factor' → logprob: -4.51416015625
    4. 'max' → logprob: -4.76416015625
    5. 'dp' → logprob: -5.01416015625
    6. 'a' → logprob: -5.01416015625
    7. 'results' → logprob: -5.13916015625
    8. 'answer' → logprob: -5.38916015625
    9. 'arr' → logprob: -5.76416015625
    10. 'k' → logprob: -5.88916015625

Token 239: 'ulus' (ID: 40006)
  Prédit: 'ulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulus' → logprob: -0.006853427272289991
    2. '=' → logprob: -5.0068535804748535
    3. ' =' → logprob: -9.131853103637695
    4. 'ulu' → logprob: -11.506853103637695
    5. '```' → logprob: -11.756853103637695
    6. 'ul' → logprob: -12.131853103637695
    7. '_' → logprob: -13.131853103637695
    8. '   ' → logprob: -13.631853103637695
    9. '1' → logprob: -14.381853103637695
    10. '_=' → logprob: -14.631853103637695

Token 240: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009115827269852161
    2. '=' → logprob: -7.000911712646484
    3. ',' → logprob: -16.625911712646484
    4. ' =
' → logprob: -17.875911712646484
    5. ' ' → logprob: -18.250911712646484
    6. ' =)' → logprob: -19.375911712646484
    7. '_' → logprob: -20.250911712646484
    8. '＝' → logprob: -20.375911712646484
    9. '=int' → logprob: -20.625911712646484
    10. ')' → logprob: -21.000911712646484

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ',' → logprob: -17.758615493774414
    4. ' ' → logprob: -18.383615493774414
    5. ' =
' → logprob: -18.508615493774414
    6. '＝' → logprob: -19.133615493774414
    7. ' =)' → logprob: -19.758615493774414
    8. '=int' → logprob: -20.133615493774414
    9. ' =
' → logprob: -21.633615493774414
    10. ')' → logprob: -21.633615493774414

Token 242: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27889981865882874
    2. '100' → logprob: -1.5288997888565063
    3. '998' → logprob: -3.653899908065796
    4. ' ' → logprob: -7.403899669647217
    5. '1' → logprob: -9.153900146484375
    6. '999' → logprob: -13.153900146484375
    7. '   ' → logprob: -13.903900146484375
    8. 'pow' → logprob: -14.653900146484375
    9. 'int' → logprob: -14.653900146484375
    10. '１０' → logprob: -15.028900146484375

Token 243: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5950257778167725
    2. '100' → logprob: -0.8450257778167725
    3. '998' → logprob: -3.9700257778167725
    4. '1' → logprob: -10.470026016235352
    5. ' ' → logprob: -13.470026016235352
    6. 'pow' → logprob: -13.720026016235352
    7. '(' → logprob: -14.970026016235352
    8. '１０' → logprob: -15.095026016235352
    9. '999' → logprob: -15.595026016235352
    10. '   ' → logprob: -15.595026016235352

Token 244: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.3902033970225602e-05
    2. '457' → logprob: -12.000014305114746
    3. '254' → logprob: -12.875014305114746
    4. '245' → logprob: -13.500014305114746
    5. '243' → logprob: -13.875014305114746
    6. '247' → logprob: -14.125014305114746
    7. '257' → logprob: -14.500014305114746
    8. '_' → logprob: -14.750014305114746
    9. '```' → logprob: -15.500014305114746
    10. '954' → logprob: -16.00001335144043

Token 245: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.00010032468708232045
    2. '853' → logprob: -9.250100135803223
    3. '357' → logprob: -12.875100135803223
    4. '857' → logprob: -13.375100135803223
    5. '3' → logprob: -17.12510108947754
    6. '53' → logprob: -18.87510108947754
    7. '```' → logprob: -19.25010108947754
    8. '257' → logprob: -19.62510108947754
    9. '7' → logprob: -19.87510108947754
    10. '433' → logprob: -19.87510108947754

Token 246: '
' (ID: 198)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.00035918003413826227
    2. ' factorial' → logprob: -8.375359535217285
    3. 'fact' → logprob: -9.375359535217285
    4. 'max' → logprob: -11.000359535217285
    5. '_factor' → logprob: -11.250359535217285
    6. '
' → logprob: -11.750359535217285
    7. '```' → logprob: -12.875359535217285
    8. '.factor' → logprob: -13.750359535217285
    9. ' 
' → logprob: -14.625359535217285
    10. '<|end|>' → logprob: -14.625359535217285

Token 247: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0002549024939071387
    2. 'fact' → logprob: -8.37525463104248
    3. ' factorial' → logprob: -10.87525463104248
    4. 'max' → logprob: -12.50025463104248
    5. '```' → logprob: -14.50025463104248
    6. '_factor' → logprob: -15.00025463104248
    7. 'f' → logprob: -15.00025463104248
    8. 'fac' → logprob: -15.50025463104248
    9. '.factor' → logprob: -16.375255584716797
    10. 'facts' → logprob: -17.125255584716797

Token 248: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.00015383612480945885
    2. 'ials' → logprob: -8.875153541564941
    3. 'ialize' → logprob: -12.125153541564941
    4. 'ialist' → logprob: -12.500153541564941
    5. 'orial' → logprob: -13.125153541564941
    6. '_list' → logprob: -14.125153541564941
    7. 'rial' → logprob: -14.375153541564941
    8. 'iall' → logprob: -15.000153541564941
    9. '_' → logprob: -15.125153541564941
    10. '_factor' → logprob: -15.500153541564941

Token 249: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0011877299984917045
    2. 's' → logprob: -6.751187801361084
    3. '_lists' → logprob: -11.501187324523926
    4. '_s' → logprob: -12.251187324523926
    5. '_,' → logprob: -13.876187324523926
    6. ',' → logprob: -14.501187324523926
    7. '_' → logprob: -14.626187324523926
    8. '_factor' → logprob: -15.126187324523926
    9. '_lst' → logprob: -16.001188278198242
    10. ',_' → logprob: -16.251188278198242

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.750017166137695
    3. ',f' → logprob: -11.875017166137695
    4. '‌,' → logprob: -14.500017166137695
    5. ',input' → logprob: -14.875017166137695
    6. ',n' → logprob: -15.500017166137695
    7. 'factor' → logprob: -16.500017166137695
    8. ',end' → logprob: -17.000017166137695
    9. ',module' → logprob: -17.000017166137695
    10. ',user' → logprob: -17.125017166137695

Token 251: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.25193047523498535
    2. 'inverse' → logprob: -1.5019304752349854
    3. '_inverse' → logprob: -13.626930236816406
    4. '.inverse' → logprob: -15.876930236816406
    5. 'Inverse' → logprob: -16.126930236816406
    6. 'in' → logprob: -17.251930236816406
    7. ' ' → logprob: -18.876930236816406
    8. '```' → logprob: -20.251930236816406
    9. ' =' → logprob: -20.501930236816406
    10. '    ' → logprob: -20.626930236816406

Token 252: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -13.375003814697266
    3. '_lists' → logprob: -13.500003814697266
    4. '_value' → logprob: -14.750003814697266
    5. '_values' → logprob: -15.250003814697266
    6. ' _' → logprob: -15.625003814697266
    7. '_factor' → logprob: -16.250003814697266
    8. 's' → logprob: -16.750003814697266
    9. 'list' → logprob: -17.000003814697266
    10. '_l' → logprob: -17.125003814697266

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. '＝' → logprob: -16.876928329467773
    4. ',' → logprob: -17.001928329467773
    5. '=create' → logprob: -18.126928329467773
    6. ' ' → logprob: -19.626928329467773
    7. '=f' → logprob: -19.751928329467773
    8. '<|end|>' → logprob: -19.876928329467773
    9. ')' → logprob: -20.126928329467773
    10. '=cut' → logprob: -20.251928329467773

Token 254: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.16022585332393646
    2. ' calc' → logprob: -1.9102258682250977
    3. '(calc' → logprob: -13.410225868225098
    4. '.calc' → logprob: -16.28522491455078
    5. 'cal' → logprob: -16.53522491455078
    6. '_calc' → logprob: -18.16022491455078
    7. ' ' → logprob: -18.16022491455078
    8. '   ' → logprob: -19.28522491455078
    9. 'Calc' → logprob: -19.53522491455078
    10. 'calculate' → logprob: -21.28522491455078

Token 255: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -6.704273118884885e-07
    2. 'factor' → logprob: -14.500000953674316
    3. '_fact' → logprob: -16.625
    4. '_' → logprob: -18.125
    5. '```' → logprob: -18.125
    6. '_FACTOR' → logprob: -19.0
    7. '_calc' → logprob: -19.5
    8. '_cal' → logprob: -19.75
    9. '_comb' → logprob: -20.125
    10. '_fac' → logprob: -20.25

Token 256: 'ials' (ID: 16596)
  Prédit: 'ials'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.00011808603449026123
    2. 'orial' → logprob: -9.750118255615234
    3. '_' → logprob: -10.625118255615234
    4. 'als' → logprob: -11.000118255615234
    5. 'ial' → logprob: -11.375118255615234
    6. 'iors' → logprob: -13.125118255615234
    7. '_factor' → logprob: -13.250118255615234
    8. 'inals' → logprob: -14.875118255615234
    9. 't' → logprob: -14.875118255615234
    10. 'or' → logprob: -15.375118255615234

Token 257: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -7.896309739408025e-07
    2. 'and' → logprob: -14.750000953674316
    3. '_factor' → logprob: -15.500000953674316
    4. ' and' → logprob: -18.0
    5. 'andr' → logprob: -19.125
    6. '_AND' → logprob: -20.125
    7. '```' → logprob: -20.125
    8. 'factor' → logprob: -20.25
    9. 's' → logprob: -20.25
    10. '_' → logprob: -21.0

Token 258: '_in' (ID: 2267)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00760887423530221
    2. '_in' → logprob: -4.882608890533447
    3. 'factor' → logprob: -13.632608413696289
    4. 'inverse' → logprob: -14.882608413696289
    5. '(in' → logprob: -15.257608413696289
    6. 'inv' → logprob: -15.257608413696289
    7. '_factor' → logprob: -15.382608413696289
    8. '_inverse' → logprob: -16.38260841369629
    9. '	in' → logprob: -16.50760841369629
    10. '_' → logprob: -16.63260841369629

Token 259: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -6.988221684878226e-06
    2. 'verse' → logprob: -12.250006675720215
    3. 'put' → logprob: -14.125006675720215
    4. 'ver' → logprob: -14.375006675720215
    5. 'ves' → logprob: -15.250006675720215
    6. '```' → logprob: -15.750006675720215
    7. '[' → logprob: -15.875006675720215
    8. 'ors' → logprob: -16.37500762939453
    9. 'v' → logprob: -16.75000762939453
    10. 'ers' → logprob: -17.25000762939453

Token 260: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7250487208366394
    2. 'ses' → logprob: -0.7250487208366394
    3. 'vers' → logprob: -4.600048542022705
    4. 'ves' → logprob: -4.850048542022705
    5. 's' → logprob: -5.225048542022705
    6. 'ores' → logprob: -6.100048542022705
    7. 'se' → logprob: -6.600048542022705
    8. 'ors' → logprob: -6.725048542022705
    9. 'res' → logprob: -6.850048542022705
    10. 'ces' → logprob: -7.100048542022705

Token 261: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015272404998540878
    2. '(' → logprob: -6.501527309417725
    3. '(max' → logprob: -10.626526832580566
    4. 'input' → logprob: -15.001526832580566
    5. '[input' → logprob: -16.001527786254883
    6. ' (' → logprob: -16.376527786254883
    7. '(
' → logprob: -16.876527786254883
    8. '<input' → logprob: -17.376527786254883
    9. '(len' → logprob: -17.501527786254883
    10. '((' → logprob: -17.876527786254883

Token 262: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.704273118884885e-07
    2. '_x' → logprob: -15.125000953674316
    3. 'n' → logprob: -16.375
    4. ' _' → logprob: -16.625
    5. '_' → logprob: -17.625
    6. '```' → logprob: -18.25
    7. '__' → logprob: -19.0
    8. '=_' → logprob: -19.25
    9. ')' → logprob: -19.5
    10. '   ' → logprob: -19.5

Token 263: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ' ,' → logprob: -11.375014305114746
    3. ')' → logprob: -12.875014305114746
    4. ',input' → logprob: -15.625014305114746
    5. ',
' → logprob: -15.750014305114746
    6. ',module' → logprob: -16.625015258789062
    7. '+' → logprob: -17.125015258789062
    8. ',)' → logprob: -18.250015258789062
    9. ',m' → logprob: -18.250015258789062
    10. '   ' → logprob: -18.875015258789062

Token 264: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.34329134225845337
    2. '1' → logprob: -1.4682912826538086
    3. '10' → logprob: -3.0932912826538086
    4. '100' → logprob: -4.843291282653809
    5. '5' → logprob: -6.468291282653809
    6. ' ' → logprob: -6.718291282653809
    7. ' input' → logprob: -6.718291282653809
    8. '20' → logprob: -6.843291282653809
    9. '2' → logprob: -7.093291282653809
    10. '50' → logprob: -7.718291282653809

Token 265: '15' (ID: 1055)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3473816215991974
    2. 'input' → logprob: -1.847381591796875
    3. '10' → logprob: -2.597381591796875
    4. '2' → logprob: -3.472381591796875
    5. '5' → logprob: -3.972381591796875
    6. '100' → logprob: -5.222381591796875
    7. '3' → logprob: -5.847381591796875
    8. 'x' → logprob: -6.972381591796875
    9. '20' → logprob: -7.097381591796875
    10. '4' → logprob: -7.972381591796875

Token 266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001191298826597631
    2. ')' → logprob: -6.751191139221191
    3. ' ,' → logprob: -11.001191139221191
    4. ',)' → logprob: -13.626191139221191
    5. '<|end|>' → logprob: -14.376191139221191
    6. ',
' → logprob: -14.751191139221191
    7. ',module' → logprob: -14.751191139221191
    8. '1' → logprob: -15.126191139221191
    9. ',input' → logprob: -15.126191139221191
    10. '```' → logprob: -15.751191139221191

Token 267: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.014167149551212788
    2. ' modulus' → logprob: -4.264167308807373
    3. ' mod' → logprob: -12.764166831970215
    4. '	mod' → logprob: -15.014166831970215
    5. '(mod' → logprob: -15.389166831970215
    6. 'modifier' → logprob: -16.26416778564453
    7. 'module' → logprob: -16.88916778564453
    8. '_mod' → logprob: -16.88916778564453
    9. 'modus' → logprob: -17.13916778564453
    10. ' modulo' → logprob: -17.13916778564453

Token 268: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0280383548888494e-06
    2. 'value' → logprob: -14.375000953674316
    3. ')' → logprob: -15.250000953674316
    4. '_' → logprob: -15.750000953674316
    5. '_val' → logprob: -17.500001907348633
    6. ')_' → logprob: -18.750001907348633
    7. '_Value' → logprob: -19.250001907348633
    8. '_VALUE' → logprob: -19.375001907348633
    9. 'Value' → logprob: -19.500001907348633
    10. '_values' → logprob: -19.750001907348633

Token 269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -17.375
    4. '))' → logprob: -19.0
    5. ')

' → logprob: -19.25
    6. ')`' → logprob: -19.5
    7. ')#' → logprob: -19.5
    8. '),' → logprob: -19.75
    9. ')...' → logprob: -21.125
    10. ')}' → logprob: -21.125

Token 270: 'total' (ID: 9577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.030333390459418297
    2. 'for' → logprob: -4.405333518981934
    3. 'total' → logprob: -4.905333518981934
    4. 'answer' → logprob: -4.905333518981934
    5. 'output' → logprob: -6.280333518981934
    6. 'results' → logprob: -7.405333518981934
    7. 'res' → logprob: -9.405333518981934
    8. 'ans' → logprob: -9.530333518981934
    9. 'if' → logprob: -9.655333518981934
    10. 'count' → logprob: -9.905333518981934

Token 271: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2508024275302887
    2. '_comb' → logprob: -2.250802516937256
    3. '_com' → logprob: -2.500802516937256
    4. '_result' → logprob: -3.875802516937256
    5. '_count' → logprob: -5.125802516937256
    6. '_sum' → logprob: -5.250802516937256
    7. '_answer' → logprob: -7.250802516937256
    8. '=' → logprob: -8.375802040100098
    9. '_combo' → logprob: -8.375802040100098
    10. '_results' → logprob: -8.500802040100098

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026253759860992
    2. '=' → logprob: -2.3502626419067383
    3. '_' → logprob: -9.850262641906738
    4. 's' → logprob: -13.225262641906738
    5. ',' → logprob: -15.225262641906738
    6. '_=' → logprob: -15.350262641906738
    7. ' ' → logprob: -15.850262641906738
    8. '＝' → logprob: -16.100261688232422
    9. ' =
' → logprob: -16.475261688232422
    10. '_space' → logprob: -16.850261688232422

Token 273: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00336307380348444
    2. 'calc' → logprob: -6.378363132476807
    3. '1' → logprob: -6.878363132476807
    4. ' ' → logprob: -7.878363132476807
    5. 'pow' → logprob: -9.003362655639648
    6. ' calc' → logprob: -9.878362655639648
    7. '(calc' → logprob: -11.128362655639648
    8. 'input' → logprob: -11.253362655639648
    9. '(' → logprob: -11.503362655639648
    10. 'sum' → logprob: -11.628362655639648

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010922349756583571
    2. 'calc' → logprob: -7.126092433929443
    3. '1' → logprob: -8.501091957092285
    4. 'pow' → logprob: -10.251091957092285
    5. 'sum' → logprob: -11.126091957092285
    6. 'input' → logprob: -11.751091957092285
    7. ' ' → logprob: -12.126091957092285
    8. '(' → logprob: -12.376091957092285
    9. '(calc' → logprob: -12.751091957092285
    10. 'factor' → logprob: -13.001091957092285

Token 275: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1028447225689888
    2. 'for' → logprob: -2.352844715118408
    3. ' for' → logprob: -6.102844715118408
    4. '
' → logprob: -8.602845191955566
    5. '\n' → logprob: -8.852845191955566
    6. ' 
' → logprob: -10.352845191955566
    7. '' → logprob: -10.727845191955566
    8. '

' → logprob: -12.477845191955566
    9. '  
' → logprob: -12.602845191955566
    10. '```' → logprob: -12.602845191955566

Token 276: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.054500666621607e-06
    2. ' for' → logprob: -12.87500286102295
    3. '
' → logprob: -15.37500286102295
    4. '```' → logprob: -16.625003814697266
    5. 'i' → logprob: -17.125003814697266
    6. ')' → logprob: -17.125003814697266
    7. 'x' → logprob: -18.000003814697266
    8. 'k' → logprob: -18.250003814697266
    9. 'n' → logprob: -18.375003814697266
    10. 'if' → logprob: -18.500003814697266

Token 277: ' count' (ID: 3605)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8769288659095764
    2. 'i' → logprob: -1.1269288063049316
    3. 'k' → logprob: -2.6269288063049316
    4. ' k' → logprob: -2.8769288063049316
    5. 'x' → logprob: -3.6269288063049316
    6. ' r' → logprob: -4.001928806304932
    7. ' x' → logprob: -4.001928806304932
    8. 'r' → logprob: -4.251928806304932
    9. ' current' → logprob: -4.501928806304932
    10. ' combination' → logprob: -4.876928806304932

Token 278: '_two' (ID: 54305)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25461241602897644
    2. '_' → logprob: -1.8796124458312988
    3. 'in' → logprob: -2.754612445831299
    4. '_x' → logprob: -5.254612445831299
    5. '_in' → logprob: -6.254612445831299
    6. ' i' → logprob: -8.12961196899414
    7. '_i' → logprob: -8.37961196899414
    8. 'x' → logprob: -8.62961196899414
    9. '_count' → logprob: -9.12961196899414
    10. '1' → logprob: -9.25461196899414

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19894438982009888
    2. 'in' → logprob: -2.073944330215454
    3. 's' → logprob: -3.698944330215454
    4. '_in' → logprob: -4.073944568634033
    5. '_' → logprob: -4.448944568634033
    6. ' ' → logprob: -7.573944568634033
    7. '_count' → logprob: -8.573944091796875
    8. ',' → logprob: -8.698944091796875
    9. 'count' → logprob: -9.698944091796875
    10. '1' → logprob: -10.448944091796875

Token 280: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193315744400024
    2. ' range' → logprob: -1.5019330978393555
    3. ' ' → logprob: -13.126933097839355
    4. '(range' → logprob: -14.251933097839355
    5. '   ' → logprob: -14.751933097839355
    6. '  ' → logprob: -14.876933097839355
    7. '	range' → logprob: -15.126933097839355
    8. '0' → logprob: -16.376934051513672
    9. 'input' → logprob: -16.876934051513672
    10. '.range' → logprob: -17.126934051513672

Token 281: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03872132673859596
    2. '(' → logprob: -3.2887213230133057
    3. '((' → logprob: -7.413721561431885
    4. '(min' → logprob: -9.913721084594727
    5. '(max' → logprob: -11.038721084594727
    6. 'input' → logprob: -12.663721084594727
    7. '0' → logprob: -13.038721084594727
    8. ' (' → logprob: -13.038721084594727
    9. ' ' → logprob: -13.538721084594727
    10. '(in' → logprob: -14.663721084594727

Token 282: '_n' (ID: 2170)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00023572170175611973
    2. '_n' → logprob: -8.375235557556152
    3. '
' → logprob: -13.000235557556152
    4. ' ' → logprob: -14.000235557556152
    5. 'x' → logprob: -14.125235557556152
    6. ')' → logprob: -15.500235557556152
    7. '_' → logprob: -15.500235557556152
    8. '   ' → logprob: -15.750235557556152
    9. '

' → logprob: -16.18773651123047
    10. '```' → logprob: -16.62523651123047

Token 283: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16518159210681915
    2. '+' → logprob: -1.9151816368103027
    3. ' //' → logprob: -5.540181636810303
    4. '//' → logprob: -6.915181636810303
    5. ' ' → logprob: -11.290181159973145
    6. ' -' → logprob: -12.540181159973145
    7. ',' → logprob: -12.790181159973145
    8. '   ' → logprob: -13.415181159973145
    9. ')' → logprob: -13.790181159973145
    10. '):
' → logprob: -13.915181159973145

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.97155623533763e-05
    2. ' ' → logprob: -9.500089645385742
    3. '2' → logprob: -12.125089645385742
    4. '15' → logprob: -12.375089645385742
    5. '16' → logprob: -12.500089645385742
    6. 'input' → logprob: -15.500089645385742
    7. '   ' → logprob: -15.562589645385742
    8. '
' → logprob: -15.875089645385742
    9. '11' → logprob: -16.125089645385742
    10. '

' → logprob: -16.125089645385742

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. '15' → logprob: -11.875016212463379
    3. ' ' → logprob: -12.000016212463379
    4. '2' → logprob: -13.125016212463379
    5. '16' → logprob: -14.625016212463379
    6. 'input' → logprob: -14.625016212463379
    7. '//' → logprob: -15.375016212463379
    8. '3' → logprob: -16.875017166137695
    9. '11' → logprob: -16.937517166137695
    10. '１' → logprob: -17.062517166137695

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006769961211830378
    2. '):
' → logprob: -5.006770133972168
    3. '+' → logprob: -10.006770133972168
    4. ' ):' → logprob: -12.256770133972168
    5. '):
' → logprob: -13.131770133972168
    6. ' +' → logprob: -13.631770133972168
    7. ')' → logprob: -14.006770133972168
    8. ':' → logprob: -15.756770133972168
    9. '   ' → logprob: -15.881770133972168
    10. '}:' → logprob: -16.13176918029785

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04979622736573219
    2. ' for' → logprob: -3.1747963428497314
    3. ':' → logprob: -5.174796104431152
    4. ' total' → logprob: -7.549796104431152
    5. ':
' → logprob: -8.924796104431152
    6. '    
' → logprob: -9.299796104431152
    7. ' if' → logprob: -9.549796104431152
    8. 'for' → logprob: -9.799796104431152
    9. '	for' → logprob: -9.924796104431152
    10. ',' → logprob: -10.049796104431152

Token 288: ' for' (ID: 395)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10471922159194946
    2. 'for' (adapté à ' for') → logprob: -2.8547191619873047
    3. '   ' → logprob: -4.229719161987305
    4. 'max' → logprob: -4.604719161987305
    5. ' count' → logprob: -5.354719161987305
    6. 'remaining' → logprob: -5.354719161987305
    7. 'if' → logprob: -6.229719161987305
    8. ' for' → logprob: -6.729719161987305
    9. 'total' → logprob: -6.854719161987305
    10. 'sum' → logprob: -7.354719161987305

Token 289: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.018232475966215134
    2. ' count' → logprob: -4.018232345581055
    3. 'range' → logprob: -11.268232345581055
    4. 'input' → logprob: -11.393232345581055
    5. 'num' → logprob: -12.143232345581055
    6. 'total' → logprob: -12.580732345581055
    7. 'comb' → logprob: -12.830732345581055
    8. 'pow' → logprob: -13.018232345581055
    9. ' ' → logprob: -13.143232345581055
    10. 'remaining' → logprob: -13.205732345581055

Token 290: '_one' (ID: 26979)
  Prédit: '_three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_three' → logprob: -0.0232679583132267
    2. '_f' → logprob: -4.02326774597168
    3. '_one' → logprob: -5.77326774597168
    4. '_four' → logprob: -6.89826774597168
    5. '_' → logprob: -8.14826774597168
    6. '_x' → logprob: -8.77326774597168
    7. '_t' → logprob: -8.77326774597168
    8. '_two' → logprob: -9.27326774597168
    9. '_th' → logprob: -10.02326774597168
    10. '_s' → logprob: -10.14826774597168

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009767891839146614
    2. 'in' → logprob: -4.634768009185791
    3. ' ' → logprob: -11.884767532348633
    4. '	in' → logprob: -13.509767532348633
    5. '    ' → logprob: -14.134767532348633
    6. '   ' → logprob: -14.384767532348633
    7. '1' → logprob: -14.759767532348633
    8. 'n' → logprob: -14.884767532348633
    9. 'range' → logprob: -15.634767532348633
    10. ')' → logprob: -15.634767532348633

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0791032686829567
    2. ' range' → logprob: -2.5791032314300537
    3. '(range' → logprob: -8.454103469848633
    4. '	range' → logprob: -14.954103469848633
    5. '   ' → logprob: -16.329103469848633
    6. ' ' → logprob: -17.954103469848633
    7. '.range' → logprob: -18.454103469848633
    8. 'rang' → logprob: -19.579103469848633
    9. '  ' → logprob: -19.954103469848633
    10. 'ange' → logprob: -20.079103469848633

Token 293: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.660315895918757e-05
    2. '((' → logprob: -10.000076293945312
    3. '(' → logprob: -10.875076293945312
    4. '(count' → logprob: -11.625076293945312
    5. 'input' → logprob: -12.750076293945312
    6. ' (' → logprob: -16.125076293945312
    7. '(max' → logprob: -16.375076293945312
    8. '(in' → logprob: -16.625076293945312
    9. '(min' → logprob: -16.750076293945312
    10. ' input' → logprob: -17.250076293945312

Token 294: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -6.253713218029588e-05
    2. '+' → logprob: -11.000062942504883
    3. '(input' → logprob: -11.000062942504883
    4. '_two' → logprob: -12.250062942504883
    5. '[input' → logprob: -12.500062942504883
    6. 'n' → logprob: -12.500062942504883
    7. 'input' → logprob: -12.875062942504883
    8. 's' → logprob: -13.000062942504883
    9. ' +' → logprob: -13.125062942504883
    10. 'two' → logprob: -13.500062942504883

Token 295: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6080124974250793
    2. ' +' → logprob: -0.8580124974250793
    3. '+' → logprob: -3.4830124378204346
    4. '-' → logprob: -7.233012676239014
    5. '   ' → logprob: -9.233012199401855
    6. ' ' → logprob: -11.108012199401855
    7. '-count' → logprob: -12.108012199401855
    8. ')' → logprob: -13.233012199401855
    9. '  ' → logprob: -13.358012199401855
    10. '	' → logprob: -13.483012199401855

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4220752716064453
    2. '(input' → logprob: -1.9220752716064453
    3. 'input' → logprob: -2.0470752716064453
    4. '(' → logprob: -3.2970752716064453
    5. ' ' → logprob: -4.672075271606445
    6. 'count' → logprob: -5.172075271606445
    7. '2' → logprob: -5.422075271606445
    8. ' (' → logprob: -5.797075271606445
    9. ' input' → logprob: -6.172075271606445
    10. '15' → logprob: -6.297075271606445

Token 297: '1' (ID: 16)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0151066780090332
    2. 'input' → logprob: -1.6401066780090332
    3. 'count' → logprob: -1.6401066780090332
    4. '1' → logprob: -2.390106678009033
    5. '16' → logprob: -2.890106678009033
    6. '15' → logprob: -3.265106678009033
    7. '(count' → logprob: -3.390106678009033
    8. '(' → logprob: -4.140106678009033
    9. '2' → logprob: -5.390106678009033
    10. '11' → logprob: -6.640106678009033

Token 298: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4727005064487457
    2. '):' → logprob: -1.2227004766464233
    3. '):
' → logprob: -2.597700595855713
    4. '-count' → logprob: -5.722700595855713
    5. '   ' → logprob: -5.847700595855713
    6. '-' → logprob: -6.972700595855713
    7. '+' → logprob: -7.847700595855713
    8. ' +' → logprob: -8.597700119018555
    9. '):
' → logprob: -10.472700119018555
    10. ' ):' → logprob: -11.097700119018555

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007227989844977856
    2. '<|end|>' → logprob: -8.500722885131836
    3. '   ' → logprob: -8.750722885131836
    4. ':' → logprob: -9.125722885131836
    5. ' ' → logprob: -9.750722885131836
    6. '    ' → logprob: -10.125722885131836
    7. '[' → logprob: -10.750722885131836
    8. ',' → logprob: -10.750722885131836
    9. ' if' → logprob: -11.000722885131836
    10. '           ' → logprob: -11.250722885131836

Token 300: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0448338985443115
    2. 'if' (adapté à ' if') → logprob: -1.1698338985443115
    3. 'total' → logprob: -1.9198338985443115
    4. '           ' → logprob: -2.1698338985443115
    5. 'sum' → logprob: -3.4198338985443115
    6. ' total' → logprob: -4.044834136962891
    7. '       ' → logprob: -4.669834136962891
    8. ' sum' → logprob: -5.169834136962891
    9. '   ' → logprob: -5.919834136962891
    10. 'remaining' → logprob: -6.294834136962891

Token 301: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3152850866317749
    2. ' count' → logprob: -1.690285086631775
    3. '2' → logprob: -2.8152852058410645
    4. ' ' → logprob: -4.0652852058410645
    5. '(count' → logprob: -5.5652852058410645
    6. '3' → logprob: -6.1902852058410645
    7. ' (' → logprob: -6.3152852058410645
    8. '   ' → logprob: -7.8152852058410645
    9. '(' → logprob: -8.190284729003906
    10. '4' → logprob: -8.565284729003906

Token 302: '_one' (ID: 26979)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.01255238801240921
    2. '_one' → logprob: -4.387552261352539
    3. '_' → logprob: -10.762552261352539
    4. '_three' → logprob: -11.137552261352539
    5. '_tw' → logprob: -12.637552261352539
    6. '*_' → logprob: -13.762552261352539
    7. 'two' → logprob: -15.262552261352539
    8. '_TWO' → logprob: -15.262552261352539
    9. ' _' → logprob: -15.512552261352539
    10. '+' → logprob: -15.762552261352539

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.30381470918655396
    2. '+' → logprob: -1.4288146495819092
    3. ' >' → logprob: -4.553814888000488
    4. ' <=' → logprob: -5.303814888000488
    5. '>' → logprob: -6.303814888000488
    6. ' *' → logprob: -6.553814888000488
    7. '*' → logprob: -6.678814888000488
    8. ' ==' → logprob: -7.178814888000488
    9. '<=' → logprob: -7.428814888000488
    10. ' >=' → logprob: -7.553814888000488

Token 304: ' count' (ID: 3605)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.049586039036512375
    2. 'count' → logprob: -3.049586057662964
    3. '(' → logprob: -7.674585819244385
    4. ' ' → logprob: -7.924585819244385
    5. '(count' → logprob: -9.299586296081543
    6. '3' → logprob: -10.299586296081543
    7. ' count' → logprob: -10.799586296081543
    8. '   ' → logprob: -11.549586296081543
    9. '1' → logprob: -13.174586296081543
    10. 'two' → logprob: -13.362086296081543

Token 305: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.0280383548888494e-06
    2. '_one' → logprob: -14.375000953674316
    3. 'two' → logprob: -15.500000953674316
    4. '_tw' → logprob: -16.625001907348633
    5. '_three' → logprob: -17.500001907348633
    6. '_TWO' → logprob: -19.500001907348633
    7. 'Two' → logprob: -20.375001907348633
    8. '_' → logprob: -20.875001907348633
    9. ' two' → logprob: -21.000001907348633
    10. '_t' → logprob: -21.125001907348633

Token 306: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.48587703704833984
    2. '>' → logprob: -1.2358770370483398
    3. ' <=' → logprob: -3.11087703704834
    4. '<=' → logprob: -3.48587703704834
    5. '*' → logprob: -3.98587703704834
    6. ' *' → logprob: -8.36087703704834
    7. '==' → logprob: -9.48587703704834
    8. ' ' → logprob: -9.61087703704834
    9. ' ==' → logprob: -10.23587703704834
    10. '>=' → logprob: -10.86087703704834

Token 307: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007349394145421684
    2. ' input' → logprob: -7.250734806060791
    3. '   ' → logprob: -10.62573528289795
    4. ' ' → logprob: -16.000734329223633
    5. '(input' → logprob: -16.125734329223633
    6. '=input' → logprob: -16.125734329223633
    7. '[input' → logprob: -16.250734329223633
    8. '<input' → logprob: -16.250734329223633
    9. '	input' → logprob: -16.875734329223633
    10. '
' → logprob: -17.250734329223633

Token 308: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.125000953674316
    3. '_x' → logprob: -14.625000953674316
    4. 'n' → logprob: -18.250001907348633
    5. '_i' → logprob: -18.500001907348633
    6. '_k' → logprob: -19.000001907348633
    7. '
' → logprob: -19.375001907348633
    8. ' _' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. '_
' → logprob: -19.625001907348633

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40839067101478577
    2. ' or' → logprob: -1.1583906412124634
    3. ':
' → logprob: -4.033390522003174
    4. '           ' → logprob: -6.408390522003174
    5. '       ' → logprob: -7.033390522003174
    6. ' and' → logprob: -7.783390522003174
    7. 'or' → logprob: -8.283390998840332
    8. '   ' → logprob: -8.658390998840332
    9. ' ' → logprob: -9.908390998840332
    10. ':return' → logprob: -10.033390998840332

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05367310345172882
    2. ':' → logprob: -3.178673028945923
    3. ':
' → logprob: -5.303673267364502
    4. ' or' → logprob: -5.428673267364502
    5. ' and' → logprob: -7.428673267364502
    6. ' continue' → logprob: -7.803673267364502
    7. '       ' → logprob: -8.928672790527344
    8. 'continue' → logprob: -9.803672790527344
    9. '               ' → logprob: -10.803672790527344
    10. ',' → logprob: -11.303672790527344

Token 311: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03621995076537132
    2. '               ' → logprob: -4.161220073699951
    3. 'break' (adapté à ' break') → logprob: -4.536220073699951
    4. ' break' → logprob: -4.786220073699951
    5. 'continue' → logprob: -7.411220073699951
    6. ' continue' → logprob: -8.411219596862793
    7. '	break' → logprob: -10.036219596862793
    8. '		' → logprob: -10.536219596862793
    9. '   ' → logprob: -11.536219596862793
    10. '                   ' → logprob: -12.411219596862793

Token 312: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010668354108929634
    2. '
' → logprob: -4.6356682777404785
    3. '<|end|>' → logprob: -7.2606682777404785
    4. '        
' → logprob: -8.885668754577637
    5. '           ' → logprob: -11.385668754577637
    6. '   ' → logprob: -11.510668754577637
    7. '  
' → logprob: -11.635668754577637
    8. '    
' → logprob: -12.135668754577637
    9. ',' → logprob: -12.510668754577637
    10. ')' → logprob: -12.510668754577637

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037335683591663837
    2. '<|end|>' → logprob: -7.0037336349487305
    3. '        
' → logprob: -7.2537336349487305
    4. '
' → logprob: -7.2537336349487305
    5. '        ' → logprob: -8.00373363494873
    6. '   ' → logprob: -8.00373363494873
    7. '           ' → logprob: -8.75373363494873
    8. ' 
' → logprob: -9.62873363494873
    9. ' or' → logprob: -9.62873363494873
    10. '    ' → logprob: -10.00373363494873

Token 314: ' total' (ID: 3609)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8968203663825989
    2. 'total' (adapté à ' total') → logprob: -1.396820306777954
    3. '       ' → logprob: -2.521820306777954
    4. 'if' → logprob: -2.646820306777954
    5. 'remaining' → logprob: -2.771820306777954
    6. '           ' → logprob: -3.771820306777954
    7. 'comb' → logprob: -4.271820545196533
    8. 'sum' → logprob: -4.271820545196533
    9. '   ' → logprob: -4.771820545196533
    10. 'for' → logprob: -5.021820545196533

Token 315: '_distance' (ID: 45537)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7835754988482222e-05
    2. '_' → logprob: -11.875018119812012
    3. '_total' → logprob: -12.250018119812012
    4. ' _' → logprob: -12.875018119812012
    5. '_com' → logprob: -14.125018119812012
    6. '_code' → logprob: -14.875018119812012
    7. '_counts' → logprob: -14.875018119812012
    8. '_factor' → logprob: -15.500018119812012
    9. '_comb' → logprob: -15.875018119812012
    10. '_value' → logprob: -16.000017166137695

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19571495056152344
    2. '=' → logprob: -1.9457149505615234
    3. ' +=' → logprob: -3.4457149505615234
    4. '+=' → logprob: -5.820714950561523
    5. '   ' → logprob: -11.945714950561523
    6. '+' → logprob: -11.945714950561523
    7. ' ' → logprob: -12.820714950561523
    8. ' =(' → logprob: -13.320714950561523
    9. ' ' → logprob: -14.320714950561523
    10. '+=(' → logprob: -14.570714950561523

Token 317: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03470776230096817
    2. '2' → logprob: -4.159707546234131
    3. ' count' → logprob: -4.159707546234131
    4. '(' → logprob: -7.034707546234131
    5. '1' → logprob: -7.534707546234131
    6. '(count' → logprob: -8.034708023071289
    7. 'input' → logprob: -8.284708023071289
    8. '3' → logprob: -8.534708023071289
    9. '       ' → logprob: -8.784708023071289
    10. ' ' → logprob: -9.034708023071289

Token 318: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.16025672852993011
    2. '_two' → logprob: -1.9102567434310913
    3. '_' → logprob: -10.410256385803223
    4. '_ONE' → logprob: -14.910256385803223
    5. '_tw' → logprob: -15.410256385803223
    6. '_zero' → logprob: -15.535256385803223
    7. '   ' → logprob: -15.660256385803223
    8. 'two' → logprob: -15.785256385803223
    9. '1' → logprob: -15.785256385803223
    10. '_three' → logprob: -15.910256385803223

Token 319: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09061334282159805
    2. '+' → logprob: -2.71561336517334
    3. '*' → logprob: -4.09061336517334
    4. ' *' → logprob: -5.59061336517334
    5. ' ' → logprob: -13.34061336517334
    6. '   ' → logprob: -14.84061336517334
    7. ' +
' → logprob: -15.59061336517334
    8. '=' → logprob: -15.71561336517334
    9. '       ' → logprob: -16.215612411499023
    10. '+
' → logprob: -16.653112411499023

Token 320: ' count' (ID: 3605)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11389484256505966
    2. 'count' → logprob: -2.2388949394226074
    3. '(' → logprob: -7.238894939422607
    4. '(count' → logprob: -8.48889446258545
    5. ' ' → logprob: -9.23889446258545
    6. ' count' → logprob: -10.98889446258545
    7. '   ' → logprob: -11.23889446258545
    8. '3' → logprob: -11.98889446258545
    9. '
' → logprob: -13.73889446258545
    10. '```' → logprob: -14.05139446258545

Token 321: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.4378848391061183e-05
    2. 'two' → logprob: -11.250014305114746
    3. '_tw' → logprob: -13.875014305114746
    4. '_TWO' → logprob: -15.875014305114746
    5. 'Two' → logprob: -16.375015258789062
    6. '_one' → logprob: -17.500015258789062
    7. '_three' → logprob: -18.000015258789062
    8. ' two' → logprob: -18.625015258789062
    9. '(two' → logprob: -19.000015258789062
    10. '_' → logprob: -19.125015258789062

Token 322: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25115495920181274
    2. ' *' → logprob: -2.251154899597168
    3. '
' → logprob: -2.376154899597168
    4. '<|end|>' → logprob: -4.626154899597168
    5. '       ' → logprob: -5.001154899597168
    6. ' +' → logprob: -5.751154899597168
    7. '+' → logprob: -6.501154899597168
    8. '<|end|>' → logprob: -7.501154899597168
    9. '   ' → logprob: -8.001154899597168
    10. '**' → logprob: -8.376154899597168

Token 323: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -9.875054359436035
    3. '3' → logprob: -13.375054359436035
    4. '   ' → logprob: -14.125054359436035
    5. '  ' → logprob: -14.625054359436035
    6. '
' → logprob: -15.250054359436035
    7. '    ' → logprob: -17.25005531311035
    8. '２' → logprob: -17.50005531311035
    9. '```' → logprob: -17.75005531311035
    10. '

' → logprob: -18.31255531311035

Token 324: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.999452772201039e-05
    2. '3' → logprob: -10.625029563903809
    3. ' ' → logprob: -12.250029563903809
    4. '1' → logprob: -14.750029563903809
    5. '   ' → logprob: -15.000029563903809
    6. '  ' → logprob: -16.250030517578125
    7. '5' → logprob: -17.250030517578125
    8. '
' → logprob: -17.750030517578125
    9. '    ' → logprob: -18.000030517578125
    10. '       ' → logprob: -18.250030517578125

Token 325: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17579993605613708
    2. '       ' → logprob: -2.17579984664917
    3. ' if' → logprob: -3.55079984664917
    4. 'if' → logprob: -4.67579984664917
    5. '        
' → logprob: -5.67579984664917
    6. '<|end|>' → logprob: -5.92579984664917
    7. '+' → logprob: -7.30079984664917
    8. '   ' → logprob: -7.42579984664917
    9. '  
' → logprob: -7.55079984664917
    10. ' 
' → logprob: -7.67579984664917

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0461224801838398
    2. ' if' → logprob: -3.7961225509643555
    3. '<|end|>' → logprob: -4.0461225509643555
    4. 'if' → logprob: -5.9211225509643555
    5. '
' → logprob: -7.1711225509643555
    6. '   ' → logprob: -7.6711225509643555
    7. ',' → logprob: -8.171122550964355
    8. '        
' → logprob: -8.421122550964355
    9. ' ' → logprob: -8.796122550964355
    10. ')' → logprob: -9.171122550964355

Token 327: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009925569174811244
    2. ' if' → logprob: -7.500992774963379
    3. '       ' → logprob: -7.750992774963379
    4. '   ' → logprob: -11.875992774963379
    5. '        
' → logprob: -14.125992774963379
    6. 'total' → logprob: -14.625992774963379
    7. '```' → logprob: -14.875992774963379
    8. '        ' → logprob: -15.500992774963379
    9. '           ' → logprob: -15.625992774963379
    10. 'for' → logprob: -15.875992774963379

Token 328: '_zero' (ID: 53468)
  Prédit: '_three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_three' → logprob: -0.21351005136966705
    2. '_zero' → logprob: -2.088510036468506
    3. '_' → logprob: -3.963510036468506
    4. '_two' → logprob: -4.088510036468506
    5. '_one' → logprob: -4.713510036468506
    6. '_th' → logprob: -5.213510036468506
    7. '_remaining' → logprob: -5.713510036468506
    8. '_sum' → logprob: -6.088510036468506
    9. '_comb' → logprob: -6.088510036468506
    10. '_total' → logprob: -6.463510036468506

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021453350782394
    2. '=' → logprob: -2.3502144813537598
    3. 's' → logprob: -12.225214958190918
    4. ')' → logprob: -13.850214958190918
    5. '<|end|>' → logprob: -14.350214958190918
    6. '＝' → logprob: -14.850214958190918
    7. ' ' → logprob: -15.350214958190918
    8. ',' → logprob: -15.475214958190918
    9. '```' → logprob: -15.850214958190918
    10. ' in' → logprob: -15.850214958190918

Token 330: ' calc' (ID: 25691)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004089085850864649
    2. ' input' → logprob: -5.504088878631592
    3. '   ' → logprob: -11.62908935546875
    4. '       ' → logprob: -14.12908935546875
    5. '=input' → logprob: -15.50408935546875
    6. '
' → logprob: -15.62908935546875
    7. '<input' → logprob: -15.87908935546875
    8. '(input' → logprob: -15.87908935546875
    9. '	input' → logprob: -16.25408935546875
    10. ' ' → logprob: -16.25408935546875

Token 331: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -7.398067828034982e-05
    2. '_factor' → logprob: -9.62507438659668
    3. '(input' → logprob: -12.25007438659668
    4. '_com' → logprob: -13.62507438659668
    5. 'comb' → logprob: -13.87507438659668
    6. 'Combination' → logprob: -14.25007438659668
    7. '_input' → logprob: -16.62507438659668
    8. '_fact' → logprob: -16.87507438659668
    9. '[input' → logprob: -17.25007438659668
    10. '_combo' → logprob: -17.50007438659668

Token 332: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.0012401100248098373
    2. 'ation' → logprob: -6.751240253448486
    3. 'bination' → logprob: -9.626239776611328
    4. 'nation' → logprob: -13.501239776611328
    5. 'onation' → logprob: -14.626239776611328
    6. '   ' → logprob: -14.876239776611328
    7. 'in' → logprob: -15.126239776611328
    8. 'int' → logprob: -15.251239776611328
    9. 'entation' → logprob: -15.376239776611328
    10. 'INATION' → logprob: -15.626239776611328

Token 333: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002512071805540472
    2. 'input' → logprob: -8.750250816345215
    3. '(' → logprob: -9.625250816345215
    4. '(total' → logprob: -11.125250816345215
    5. '(n' → logprob: -12.625250816345215
    6. '[input' → logprob: -13.250250816345215
    7. '(
' → logprob: -13.375250816345215
    8. '=input' → logprob: -13.500250816345215
    9. '<|end|>' → logprob: -13.625250816345215
    10. ',input' → logprob: -13.750250816345215

Token 334: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.8624639324116288e-06
    2. 'n' → logprob: -13.500001907348633
    3. '(input' → logprob: -15.750001907348633
    4. 'input' → logprob: -16.875001907348633
    5. '[input' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. 's' → logprob: -17.875001907348633
    9. '=input' → logprob: -18.250001907348633
    10. '_x' → logprob: -18.500001907348633

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22416195273399353
    2. ',input' → logprob: -2.0991618633270264
    3. '(input' → logprob: -2.7241618633270264
    4. '(' → logprob: -4.7241621017456055
    5. ',n' → logprob: -7.3491621017456055
    6. '(count' → logprob: -7.4741621017456055
    7. '(total' → logprob: -7.4741621017456055
    8. ' ,' → logprob: -7.8491621017456055
    9. ',count' → logprob: -8.099162101745605
    10. ',
' → logprob: -8.224162101745605

Token 336: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.002774562919512391
    2. 'input' → logprob: -6.502774715423584
    3. ' count' → logprob: -7.127774715423584
    4. 'total' → logprob: -8.127774238586426
    5. '   ' → logprob: -8.877774238586426
    6. ' ' → logprob: -10.877774238586426
    7. ' input' → logprob: -12.377774238586426
    8. '       ' → logprob: -12.877774238586426
    9. '(count' → logprob: -13.377774238586426
    10. ' total' → logprob: -13.502774238586426

Token 337: '_one' (ID: 26979)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.08749488741159439
    2. '_one' → logprob: -2.5874948501586914
    3. 'two' → logprob: -4.837494850158691
    4. '_zero' → logprob: -8.087494850158691
    5. 'one' → logprob: -8.212494850158691
    6. 'Two' → logprob: -10.712494850158691
    7. 'zero' → logprob: -10.962494850158691
    8. '1' → logprob: -12.462494850158691
    9. ' two' → logprob: -12.962494850158691
    10. 'One' → logprob: -12.962494850158691

Token 338: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005174091784283519
    2. ')' → logprob: -8.625517845153809
    3. '   ' → logprob: -9.250517845153809
    4. ' ,' → logprob: -9.250517845153809
    5. ' -' → logprob: -9.375517845153809
    6. '-' → logprob: -11.000517845153809
    7. '+' → logprob: -11.625517845153809
    8. '    ' → logprob: -12.000517845153809
    9. ' +' → logprob: -12.125517845153809
    10. ',input' → logprob: -12.500517845153809

Token 339: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.2166411478538066e-05
    2. ' count' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.875052452087402
    4. '(count' → logprob: -16.000051498413086
    5. ' ' → logprob: -16.125051498413086
    6. '	count' → logprob: -17.375051498413086
    7. 'input' → logprob: -18.250051498413086
    8. '[count' → logprob: -18.250051498413086
    9. 'total' → logprob: -18.375051498413086
    10. '  ' → logprob: -18.625051498413086

Token 340: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0015274790348485112
    2. 'two' → logprob: -6.501527309417725
    3. '_zero' → logprob: -11.501527786254883
    4. 'Two' → logprob: -11.876527786254883
    5. '_one' → logprob: -12.376527786254883
    6. '_TWO' → logprob: -13.626527786254883
    7. ' two' → logprob: -14.376527786254883
    8. '2' → logprob: -14.501527786254883
    9. 'zero' → logprob: -14.751527786254883
    10. '```' → logprob: -15.501527786254883

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017147827020380646
    2. ')' → logprob: -9.250171661376953
    3. ' ,' → logprob: -10.000171661376953
    4. '   ' → logprob: -10.875171661376953
    5. ',
' → logprob: -12.750171661376953
    6. '```' → logprob: -13.000171661376953
    7. '       ' → logprob: -13.625171661376953
    8. ',input' → logprob: -14.250171661376953
    9. '<|end|>' → logprob: -14.500171661376953
    10. '%,' → logprob: -14.875171661376953

Token 342: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0006988536333665252
    2. ' modulus' → logprob: -7.875699043273926
    3. ' mod' → logprob: -8.125699043273926
    4. '998' → logprob: -11.750699043273926
    5. 'input' → logprob: -12.125699043273926
    6. '	mod' → logprob: -12.625699043273926
    7. '(mod' → logprob: -13.125699043273926
    8. 'factor' → logprob: -14.125699043273926
    9. '   ' → logprob: -14.250699043273926
    10. '           ' → logprob: -14.500699043273926

Token 343: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.440506407059729e-05
    2. ',' → logprob: -10.62503433227539
    3. 'value' → logprob: -12.50003433227539
    4. '_,' → logprob: -13.12503433227539
    5. '_' → logprob: -13.62503433227539
    6. ')' → logprob: -13.62503433227539
    7. 'Value' → logprob: -14.50003433227539
    8. '```' → logprob: -15.37503433227539
    9. '_values' → logprob: -15.87503433227539
    10. ',_' → logprob: -16.00003433227539

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05497030168771744
    2. ')' → logprob: -2.9299702644348145
    3. '   ' → logprob: -9.804970741271973
    4. ',
' → logprob: -11.804970741271973
    5. ' ,' → logprob: -11.804970741271973
    6. ')*' → logprob: -12.304970741271973
    7. ',)' → logprob: -12.554970741271973
    8. ')
' → logprob: -12.804970741271973
    9. '```' → logprob: -13.554970741271973
    10. '       ' → logprob: -14.179970741271973

Token 345: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0024837462697178125
    2. ' factorial' → logprob: -6.00248384475708
    3. ' factor' → logprob: -12.502483367919922
    4. 'inverse' → logprob: -13.127483367919922
    5. '   ' → logprob: -14.127483367919922
    6. 'fact' → logprob: -14.377483367919922
    7. '
' → logprob: -15.252483367919922
    8. '_factor' → logprob: -15.502483367919922
    9. '.factor' → logprob: -16.002483367919922
    10. ' ' → logprob: -16.377483367919922

Token 346: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. 'list' → logprob: -15.000000953674316
    3. 'List' → logprob: -16.25
    4. '_factor' → logprob: -16.25
    5. 'factor' → logprob: -17.625
    6. ',' → logprob: -18.75
    7. ' list' → logprob: -19.0
    8. ' factorial' → logprob: -19.375
    9. '_lists' → logprob: -19.5
    10. '_LIST' → logprob: -19.5

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012451570364646614
    2. ' ,' → logprob: -9.87512493133545
    3. ',in' → logprob: -10.00012493133545
    4. ',
' → logprob: -11.37512493133545
    5. 'inverse' → logprob: -11.87512493133545
    6. '   ' → logprob: -13.12512493133545
    7. ')' → logprob: -13.12512493133545
    8. '[in' → logprob: -13.37512493133545
    9. ',input' → logprob: -14.25012493133545
    10. ' inverse' → logprob: -14.37512493133545

Token 348: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.06994565576314926
    2. ' inverse' → logprob: -2.6949455738067627
    3. '   ' → logprob: -12.819945335388184
    4. '
' → logprob: -13.319945335388184
    5. '    ' → logprob: -13.944945335388184
    6. '.inverse' → logprob: -14.319945335388184
    7. '       ' → logprob: -14.569945335388184
    8. ' ' → logprob: -14.694945335388184
    9. 'Inverse' → logprob: -14.819945335388184
    10. '        ' → logprob: -14.944945335388184

Token 349: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. 'list' → logprob: -13.25000286102295
    3. 'List' → logprob: -14.50000286102295
    4. 'inverse' → logprob: -15.00000286102295
    5. '_lists' → logprob: -16.125001907348633
    6. '_LIST' → logprob: -19.000001907348633
    7. '```' → logprob: -19.375001907348633
    8. 's' → logprob: -19.750001907348633
    9. '_inverse' → logprob: -19.750001907348633
    10. '-list' → logprob: -19.875001907348633

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022892709239386022
    2. ')
' → logprob: -8.750228881835938
    3. ',' → logprob: -10.250228881835938
    4. ')*' → logprob: -10.875228881835938
    5. '   ' → logprob: -11.625228881835938
    6. ' )' → logprob: -13.000228881835938
    7. '       ' → logprob: -13.875228881835938
    8. '<|end|>' → logprob: -14.000228881835938
    9. ')

' → logprob: -14.250228881835938
    10. '),' → logprob: -14.625228881835938

Token 351: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012250267900526524
    2. '<|end|>' → logprob: -5.0122504234313965
    3. 'total' → logprob: -6.5122504234313965
    4. '   ' → logprob: -7.2622504234313965
    5. '        
' → logprob: -7.3872504234313965
    6. '
' → logprob: -7.6372504234313965
    7. ' total' → logprob: -7.6372504234313965
    8. ' if' → logprob: -7.8872504234313965
    9. ')' → logprob: -7.8872504234313965
    10. '+' → logprob: -8.637249946594238

Token 352: ' current' (ID: 2208)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6353045105934143
    2. '       ' → logprob: -1.3853044509887695
    3. 'count' → logprob: -2.5103044509887695
    4. 'if' → logprob: -2.8853044509887695
    5. ' if' → logprob: -3.3853044509887695
    6. ' total' → logprob: -3.3853044509887695
    7. ' count' → logprob: -5.7603044509887695
    8. '*' → logprob: -6.6353044509887695
    9. 'ways' → logprob: -6.6353044509887695
    10. 'mult' → logprob: -7.0103044509887695

Token 353: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.36532190442085266
    2. '_comb' → logprob: -2.3653218746185303
    3. '_' → logprob: -2.8653218746185303
    4. '_distance' → logprob: -2.9903218746185303
    5. '_total' → logprob: -3.6153218746185303
    6. '_con' → logprob: -3.7403218746185303
    7. '_term' → logprob: -3.9903218746185303
    8. '_com' → logprob: -4.615322113037109
    9. '_sum' → logprob: -5.115322113037109
    10. '_co' → logprob: -5.865322113037109

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07098653167486191
    2. '=' → logprob: -2.69598650932312
    3. ' +=' → logprob: -7.070986747741699
    4. '+=' → logprob: -9.0709867477417
    5. '   ' → logprob: -10.1959867477417
    6. ' *=' → logprob: -10.5709867477417
    7. ' ' → logprob: -11.1959867477417
    8. '*=' → logprob: -12.8209867477417
    9. '```' → logprob: -13.6959867477417
    10. '  ' → logprob: -14.1959867477417

Token 355: ' ' (ID: 220)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.579708993434906
    2. 'count' → logprob: -1.7047090530395508
    3. ' calc' → logprob: -2.329709053039551
    4. '(count' → logprob: -3.329709053039551
    5. '(calc' → logprob: -3.579709053039551
    6. 'total' → logprob: -3.579709053039551
    7. '(' → logprob: -3.954709053039551
    8. ' count' → logprob: -3.954709053039551
    9. ' (' → logprob: -4.204709053039551
    10. '(total' → logprob: -4.954709053039551

Token 356: '0' (ID: 15)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.10074475407600403
    2. 'count' → logprob: -2.6007447242736816
    3. 'total' → logprob: -4.850744724273682
    4. '(calc' → logprob: -5.475744724273682
    5. 'pow' → logprob: -5.850744724273682
    6. ' calc' → logprob: -5.975744724273682
    7. '(' → logprob: -6.350744724273682
    8. '(count' → logprob: -6.725744724273682
    9. '(total' → logprob: -7.975744724273682
    10. 'factor' → logprob: -8.47574520111084

Token 357: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5855690240859985
    2. 'if' (adapté à ' if') → logprob: -1.2105690240859985
    3. '       ' → logprob: -2.585568904876709
    4. ' for' → logprob: -3.210568904876709
    5. ' if' → logprob: -3.710568904876709
    6. 'current' → logprob: -5.460568904876709
    7. 'total' → logprob: -8.585569381713867
    8. ' current' → logprob: -8.710569381713867
    9. '```' → logprob: -9.210569381713867
    10. 'count' → logprob: -9.585569381713867

Token 360: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5845030546188354
    2. 'count' → logprob: -0.9595030546188354
    3. ' total' → logprob: -3.459503173828125
    4. ' count' → logprob: -4.209503173828125
    5. 'input' → logprob: -4.459503173828125
    6. ' input' → logprob: -7.334503173828125
    7. '   ' → logprob: -7.459503173828125
    8. '0' → logprob: -9.209503173828125
    9. ' ' → logprob: -9.709503173828125
    10. '(total' → logprob: -10.209503173828125

Token 361: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00026503115077503026
    2. 'distance' → logprob: -8.250265121459961
    3. '_' → logprob: -13.125265121459961
    4. '_dist' → logprob: -14.375265121459961
    5. 'Distance' → logprob: -15.375265121459961
    6. '==' → logprob: -15.625265121459961
    7. '_count' → logprob: -15.750265121459961
    8. ' distance' → logprob: -16.12526512145996
    9. '   ' → logprob: -16.25026512145996
    10. '```' → logprob: -16.50026512145996

Token 362: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.2746329307556152
    2. '==' → logprob: -1.5246329307556152
    3. ' ==' → logprob: -1.5246329307556152
    4. '<=' → logprob: -1.5246329307556152
    5. '>=' → logprob: -3.3996329307556152
    6. ' >=' → logprob: -3.3996329307556152
    7. '%' → logprob: -8.774633407592773
    8. '>' → logprob: -9.024633407592773
    9. '=' → logprob: -9.274633407592773
    10. ' ' → logprob: -9.524633407592773

Token 363: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0006938508013263345
    2. ' input' → logprob: -7.3756937980651855
    3. '=input' → logprob: -10.375694274902344
    4. '=' → logprob: -10.500694274902344
    5. 'count' → logprob: -13.125694274902344
    6. '0' → logprob: -13.375694274902344
    7. '2' → logprob: -14.000694274902344
    8. '
' → logprob: -14.375694274902344
    9. '4' → logprob: -14.625694274902344
    10. '3' → logprob: -15.000694274902344

Token 364: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.45848218582978e-06
    2. '_n' → logprob: -13.37500286102295
    3. '_' → logprob: -14.25000286102295
    4. 'x' → logprob: -15.75000286102295
    5. '_
' → logprob: -17.125001907348633
    6. '_s' → logprob: -18.000001907348633
    7. '_value' → logprob: -18.625001907348633
    8. '_y' → logprob: -19.000001907348633
    9. ' _' → logprob: -19.500001907348633
    10. '_d' → logprob: -19.500001907348633

Token 365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02852826938033104
    2. ':
' → logprob: -3.6535282135009766
    3. ' and' → logprob: -6.528528213500977
    4. ' or' → logprob: -7.403528213500977
    5. '       ' → logprob: -9.278528213500977
    6. '           ' → logprob: -10.778528213500977
    7. ' :' → logprob: -11.403528213500977
    8. '   ' → logprob: -11.653528213500977
    9. 'and' → logprob: -11.903528213500977
    10. ',' → logprob: -12.778528213500977

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019388694781810045
    2. ',' → logprob: -8.001938819885254
    3. ':
' → logprob: -8.126938819885254
    4. ' current' → logprob: -8.501938819885254
    5. '<|end|>' → logprob: -8.501938819885254
    6. '               ' → logprob: -8.751938819885254
    7. '
' → logprob: -9.001938819885254
    8. ' continue' → logprob: -9.126938819885254
    9. '       ' → logprob: -9.126938819885254
    10. 'current' → logprob: -9.251938819885254

Token 367: ' current' (ID: 2208)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9163456559181213
    2. ' current' → logprob: -1.2913455963134766
    3. ' continue' → logprob: -1.9163455963134766
    4. 'current' (adapté à ' current') → logprob: -2.2913455963134766
    5. 'continue' → logprob: -2.7913455963134766
    6. '       ' → logprob: -4.916345596313477
    7. '               ' → logprob: -5.166345596313477
    8. ' for' → logprob: -6.916345596313477
    9. 'for' → logprob: -8.166345596313477
    10. 'total' → logprob: -8.666345596313477

Token 368: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010807292710524052
    2. '_distance' → logprob: -9.375107765197754
    3. '_' → logprob: -11.500107765197754
    4. '_total' → logprob: -12.500107765197754
    5. '
' → logprob: -14.000107765197754
    6. '_dist' → logprob: -14.125107765197754
    7. '_token' → logprob: -14.250107765197754
    8. ' _' → logprob: -14.375107765197754
    9. '_value' → logprob: -14.625107765197754
    10. '_c' → logprob: -14.750107765197754

Token 369: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18519221246242523
    2. ' =' → logprob: -2.310192108154297
    3. '=' → logprob: -3.185192108154297
    4. '+=' → logprob: -3.560192108154297
    5. ' ' → logprob: -12.810192108154297
    6. ' -=' → logprob: -13.185192108154297
    7. '   ' → logprob: -13.310192108154297
    8. ']+=' → logprob: -14.310192108154297
    9. '    ' → logprob: -14.560192108154297
    10. ' *=' → logprob: -14.685192108154297

Token 370: ' calc' (ID: 25691)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.40827542543411255
    2. '(count' → logprob: -2.2832753658294678
    3. 'calc' → logprob: -2.7832753658294678
    4. '(' → logprob: -3.0332753658294678
    5. '0' → logprob: -3.0332753658294678
    6. '1' → logprob: -4.158275604248047
    7. 'total' → logprob: -4.283275604248047
    8. 'factor' → logprob: -4.658275604248047
    9. 'pow' → logprob: -4.908275604248047
    10. ' count' → logprob: -5.033275604248047

Token 371: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -4.274932143744081e-05
    2. '_factor' → logprob: -10.250042915344238
    3. 'comb' → logprob: -12.500042915344238
    4. '_count' → logprob: -13.500042915344238
    5. 'Combination' → logprob: -13.625042915344238
    6. '_distance' → logprob: -14.875042915344238
    7. '_com' → logprob: -15.375042915344238
    8. '_' → logprob: -16.250041961669922
    9. '_combo' → logprob: -16.375041961669922
    10. '_difference' → logprob: -17.000041961669922

Token 372: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.023370331153273582
    2. 'bination' → logprob: -3.7733702659606934
    3. 'ation' → logprob: -9.398370742797852
    4. 'b' → logprob: -11.523370742797852
    5. 'onation' → logprob: -11.898370742797852
    6. '   ' → logprob: -11.898370742797852
    7. 'nation' → logprob: -12.023370742797852
    8. '       ' → logprob: -12.648370742797852
    9. 'entation' → logprob: -12.773370742797852
    10. 'int' → logprob: -13.148370742797852

Token 373: '(count' (ID: 25892)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006119333207607269
    2. '(count' → logprob: -5.131119251251221
    3. '(' → logprob: -9.006119728088379
    4. '(total' → logprob: -10.256119728088379
    5. '(n' → logprob: -11.381119728088379
    6. 'input' → logprob: -11.631119728088379
    7. '(
' → logprob: -12.506119728088379
    8. '   ' → logprob: -13.381119728088379
    9. 'count' → logprob: -13.756119728088379
    10. '           ' → logprob: -14.006119728088379

Token 374: '_one' (ID: 26979)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.6336244344711304
    2. '_one' → logprob: -0.7586244344711304
    3. '_zero' → logprob: -7.00862455368042
    4. 'two' → logprob: -9.633624076843262
    5. 'one' → logprob: -10.508624076843262
    6. '_n' → logprob: -11.758624076843262
    7. '   ' → logprob: -12.508624076843262
    8. 'zero' → logprob: -12.883624076843262
    9. 'Two' → logprob: -13.133624076843262
    10. '_three' → logprob: -13.133624076843262

Token 375: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7493033409118652
    2. ' +' → logprob: -0.7493033409118652
    3. ',' → logprob: -3.2493033409118652
    4. '           ' → logprob: -4.874303340911865
    5. 'count' → logprob: -6.374303340911865
    6. ',count' → logprob: -6.624303340911865
    7. 'input' → logprob: -7.499303340911865
    8. ',input' → logprob: -7.624303340911865
    9. '   ' → logprob: -7.749303340911865
    10. ' ' → logprob: -7.874303340911865

Token 376: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0020520049147307873
    2. '(count' → logprob: -6.877051830291748
    3. 'input' → logprob: -7.377051830291748
    4. ' count' → logprob: -8.252052307128906
    5. 'total' → logprob: -9.502052307128906
    6. '
' → logprob: -11.377052307128906
    7. '10' → logprob: -11.752052307128906
    8. '(input' → logprob: -12.127052307128906
    9. '2' → logprob: -12.377052307128906
    10. '15' → logprob: -12.377052307128906

Token 377: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.0019769303034991026
    2. 'two' → logprob: -6.25197696685791
    3. '_one' → logprob: -10.75197696685791
    4. '_zero' → logprob: -11.12697696685791
    5. 'Two' → logprob: -12.00197696685791
    6. ' two' → logprob: -13.75197696685791
    7. '```' → logprob: -14.00197696685791
    8. '2' → logprob: -14.12697696685791
    9. '_TWO' → logprob: -14.12697696685791
    10. 'zero' → logprob: -14.75197696685791

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037534094881266356
    2. ',count' → logprob: -5.628753185272217
    3. ',input' → logprob: -10.003753662109375
    4. '(count' → logprob: -11.128753662109375
    5. ' ,' → logprob: -11.128753662109375
    6. ',current' → logprob: -11.128753662109375
    7. 'count' → logprob: -11.253753662109375
    8. '[count' → logprob: -11.753753662109375
    9. '           ' → logprob: -11.878753662109375
    10. ')' → logprob: -12.253753662109375

Token 379: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0032259563449770212
    2. ' count' → logprob: -5.753225803375244
    3. 'input' → logprob: -10.128226280212402
    4. 'total' → logprob: -13.253226280212402
    5. '(count' → logprob: -13.753226280212402
    6. '	count' → logprob: -14.253226280212402
    7. '           ' → logprob: -14.378226280212402
    8. '   ' → logprob: -14.503226280212402
    9. '2' → logprob: -14.628226280212402
    10. ' ' → logprob: -14.753226280212402

Token 380: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.5233901143074036
    2. '_two' → logprob: -0.8983901143074036
    3. 'two' → logprob: -8.77338981628418
    4. 'one' → logprob: -10.27338981628418
    5. 'wo' → logprob: -10.89838981628418
    6. '_zero' → logprob: -11.02338981628418
    7. '```' → logprob: -11.64838981628418
    8. 'Two' → logprob: -12.14838981628418
    9. '1' → logprob: -12.14838981628418
    10. 'One' → logprob: -12.27338981628418

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013905855303164572
    2. ' ,' → logprob: -9.750139236450195
    3. ')' → logprob: -9.875139236450195
    4. '   ' → logprob: -11.625139236450195
    5. '```' → logprob: -11.875139236450195
    6. '       ' → logprob: -12.625139236450195
    7. '           ' → logprob: -12.875139236450195
    8. ',
' → logprob: -13.000139236450195
    9. '        ' → logprob: -14.750139236450195
    10. '          ' → logprob: -14.750139236450195

Token 382: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.16056154668331146
    2. ' modulus' → logprob: -1.9105615615844727
    3. ' mod' → logprob: -8.035561561584473
    4. '	mod' → logprob: -12.410561561584473
    5. '(mod' → logprob: -12.660561561584473
    6. ' modul' → logprob: -13.160561561584473
    7. '_mod' → logprob: -14.410561561584473
    8. ' ' → logprob: -14.410561561584473
    9. 'module' → logprob: -14.785561561584473
    10. ' modulo' → logprob: -14.910561561584473

Token 383: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00018232580623589456
    2. ',' → logprob: -9.000182151794434
    3. 'value' → logprob: -10.375182151794434
    4. ')' → logprob: -11.250182151794434
    5. '_list' → logprob: -11.375182151794434
    6. '[' → logprob: -14.250182151794434
    7. '_,' → logprob: -14.375182151794434
    8. 'Value' → logprob: -14.500182151794434
    9. '_VALUE' → logprob: -15.375182151794434
    10. ',value' → logprob: -15.625182151794434

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009676800691522658
    2. ')' → logprob: -7.000967502593994
    3. ' ,' → logprob: -10.750967979431152
    4. '           ' → logprob: -11.500967979431152
    5. '   ' → logprob: -12.125967979431152
    6. '<|end|>' → logprob: -12.125967979431152
    7. '```' → logprob: -12.625967979431152
    8. ',
' → logprob: -13.125967979431152
    9. '          ' → logprob: -14.000967979431152
    10. '       ' → logprob: -14.250967979431152

Token 385: ' factorial' (ID: 111204)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008291621692478657
    2. ' modulus' → logprob: -5.383291721343994
    3. 'factor' → logprob: -6.008291721343994
    4. ' factorial' → logprob: -6.758291721343994
    5. 'inverse' → logprob: -10.633291244506836
    6. ' mod' → logprob: -12.133291244506836
    7. 'modifier' → logprob: -12.508291244506836
    8. '	mod' → logprob: -12.508291244506836
    9. '(mod' → logprob: -13.258291244506836
    10. '           ' → logprob: -14.383291244506836

Token 386: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0280383548888494e-06
    2. 'List' → logprob: -14.625000953674316
    3. '_value' → logprob: -15.625000953674316
    4. 'list' → logprob: -15.875000953674316
    5. ')' → logprob: -17.625001907348633
    6. '_count' → logprob: -17.750001907348633
    7. '           ' → logprob: -18.000001907348633
    8. 'inverse' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '1' → logprob: -18.250001907348633

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003414751496165991
    2. ',in' → logprob: -5.753414630889893
    3. '[in' → logprob: -9.00341510772705
    4. ' ,' → logprob: -9.87841510772705
    5. 'inverse' → logprob: -9.87841510772705
    6. ' inverse' → logprob: -12.62841510772705
    7. '   ' → logprob: -13.00341510772705
    8. ',
' → logprob: -13.50341510772705
    9. '```' → logprob: -14.25341510772705
    10. '           ' → logprob: -14.37841510772705

Token 388: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.25193649530410767
    2. ' inverse' → logprob: -1.501936435699463
    3. '   ' → logprob: -13.001936912536621
    4. '       ' → logprob: -13.626936912536621
    5. '.inverse' → logprob: -14.251936912536621
    6. '_inverse' → logprob: -14.376936912536621
    7. '           ' → logprob: -14.876936912536621
    8. 'Inverse' → logprob: -14.876936912536621
    9. 'factor' → logprob: -15.126936912536621
    10. '    ' → logprob: -15.126936912536621

Token 389: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0010865206131711602
    2. 'list' → logprob: -6.876086711883545
    3. 'inverse' → logprob: -10.001086235046387
    4. 'List' → logprob: -12.251086235046387
    5. '_lists' → logprob: -13.876086235046387
    6. 'lists' → logprob: -15.126086235046387
    7. '       ' → logprob: -15.126086235046387
    8. '[' → logprob: -15.251086235046387
    9. '   ' → logprob: -15.251086235046387
    10. 'count' → logprob: -15.626086235046387

Token 390: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11625000089406967
    2. ')
' → logprob: -2.2412500381469727
    3. '       ' → logprob: -6.366250038146973
    4. '           ' → logprob: -6.491250038146973
    5. ')*' → logprob: -9.116250038146973
    6. ')
' → logprob: -10.616250038146973
    7. '               ' → logprob: -11.366250038146973
    8. '   ' → logprob: -11.616250038146973
    9. ' )' → logprob: -11.866250038146973
    10. ')

' → logprob: -12.241250038146973

Token 391: ' *' (ID: 425)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6274236440658569
    2. '       ' → logprob: -0.8774236440658569
    3. '<|end|>' → logprob: -3.6274237632751465
    4. '
' → logprob: -4.7524237632751465
    5. ')' → logprob: -4.8774237632751465
    6. 'total' → logprob: -6.5024237632751465
    7. 'current' → logprob: -6.6274237632751465
    8. '            
' → logprob: -7.3774237632751465
    9. '        
' → logprob: -7.3774237632751465
    10. ',' → logprob: -7.6274237632751465

Token 392: ' count' (ID: 3605)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.1805865615606308
    2. '(' → logprob: -2.430586576461792
    3. 'factor' → logprob: -3.680586576461792
    4. '2' → logprob: -3.805586576461792
    5. 'calc' → logprob: -4.180586338043213
    6. 'mod' → logprob: -5.055586338043213
    7. '(pow' → logprob: -6.180586338043213
    8. '(mod' → logprob: -7.055586338043213
    9. ' pow' → logprob: -7.055586338043213
    10. 'count' → logprob: -7.055586338043213

Token 393: '_zero' (ID: 53468)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.20851224660873413
    2. '_two' → logprob: -1.708512306213379
    3. '_zero' → logprob: -4.958512306213379
    4. 'one' → logprob: -11.208512306213379
    5. 'two' → logprob: -11.333512306213379
    6. '_' → logprob: -12.208512306213379
    7. '```' → logprob: -12.583512306213379
    8. 'zero' → logprob: -12.708512306213379
    9. 'One' → logprob: -13.333512306213379
    10. '_current' → logprob: -13.833512306213379

Token 394: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6260976195335388
    2. '%' → logprob: -0.8760976195335388
    3. '
' → logprob: -4.251097679138184
    4. '       ' → logprob: -4.501097679138184
    5. '<|end|>' → logprob: -4.751097679138184
    6. '           ' → logprob: -5.001097679138184
    7. ')' → logprob: -5.376097679138184
    8. ' 
' → logprob: -7.001097679138184
    9. '%
' → logprob: -7.626097679138184
    10. '<|end|>' → logprob: -8.001097679138184

Token 395: '       ' (ID: 309)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2579854130744934
    2. '%' → logprob: -1.5079853534698486
    3. '       ' → logprob: -6.007985591888428
    4. ')' → logprob: -6.757985591888428
    5. '           ' → logprob: -7.007985591888428
    6. '
' → logprob: -7.257985591888428
    7. '<|end|>' → logprob: -7.882985591888428
    8. 'current' → logprob: -10.00798511505127
    9. '_current' → logprob: -10.00798511505127
    10. ' %
' → logprob: -10.13298511505127

Token 396: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027327746152877808
    2. 'total' → logprob: -4.652327537536621
    3. '        
' → logprob: -5.277327537536621
    4. ' total' → logprob: -5.777327537536621
    5. '           ' → logprob: -5.902327537536621
    6. '
' → logprob: -6.527327537536621
    7. '(total' → logprob: -7.152327537536621
    8. ' 
' → logprob: -7.402327537536621
    9. '+' → logprob: -7.652327537536621
    10. ')' → logprob: -7.652327537536621

Token 397: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.39798101782798767
    2. 'total' → logprob: -1.14798104763031
    3. 'count' → logprob: -5.6479811668396
    4. ' count' → logprob: -5.7729811668396
    5. ' input' → logprob: -5.8979811668396
    6. 'input' → logprob: -7.0229811668396
    7. ' current' → logprob: -8.272980690002441
    8. 'current' → logprob: -8.897980690002441
    9. '(total' → logprob: -9.147980690002441
    10. 'False' → logprob: -9.647980690002441

Token 398: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.07820718735456467
    2. '_x' → logprob: -2.70320725440979
    3. '_count' → logprob: -4.828207015991211
    4. '_two' → logprob: -9.703207015991211
    5. '_one' → logprob: -9.953207015991211
    6. '_' → logprob: -10.078207015991211
    7. 'distance' → logprob: -10.578207015991211
    8. '_dist' → logprob: -10.953207015991211
    9. '_value' → logprob: -11.703207015991211
    10. '```' → logprob: -12.328207015991211

Token 399: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.545109212398529
    2. ' >' → logprob: -1.0451092720031738
    3. '==' → logprob: -3.295109272003174
    4. ' <' → logprob: -3.920109272003174
    5. '>' → logprob: -5.045109272003174
    6. ' <=' → logprob: -5.420109272003174
    7. '<' → logprob: -8.170108795166016
    8. '=' → logprob: -8.920108795166016
    9. ' ' → logprob: -9.045108795166016
    10. ' >=' → logprob: -9.170108795166016

Token 400: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020947456359863
    2. ' input' → logprob: -2.3502094745635986
    3. 'count' → logprob: -13.72520923614502
    4. '(input' → logprob: -14.47520923614502
    5. 'int' → logprob: -14.97520923614502
    6. '=input' → logprob: -15.10020923614502
    7. ' ' → logprob: -15.35020923614502
    8. '<input' → logprob: -15.72520923614502
    9. '0' → logprob: -16.850210189819336
    10. '
' → logprob: -17.225210189819336

Token 401: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.650518920039758e-06
    2. 'x' → logprob: -13.250003814697266
    3. '_' → logprob: -13.875003814697266
    4. '```' → logprob: -14.375003814697266
    5. '_distance' → logprob: -16.500003814697266
    6. ' _' → logprob: -16.500003814697266
    7. '_
' → logprob: -16.875003814697266
    8. ' ' → logprob: -17.625003814697266
    9. ')_' → logprob: -17.750003814697266
    10. ')' → logprob: -18.250003814697266

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011064916849136353
    2. ':
' → logprob: -4.5110650062561035
    3. ' and' → logprob: -12.636064529418945
    4. '           ' → logprob: -12.761064529418945
    5. ' :' → logprob: -13.261064529418945
    6. '=' → logprob: -13.261064529418945
    7. '==' → logprob: -13.511064529418945
    8. '       ' → logprob: -13.636064529418945
    9. ':return' → logprob: -13.886064529418945
    10. '   ' → logprob: -14.511064529418945

Token 403: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8702784776687622
    2. '           ' → logprob: -0.8702784776687622
    3. ':
' → logprob: -1.8702784776687622
    4. ' current' → logprob: -5.495278358459473
    5. 'current' → logprob: -6.245278358459473
    6. '(current' → logprob: -7.620278358459473
    7. '[current' → logprob: -8.245278358459473
    8. ',' → logprob: -8.620278358459473
    9. '       ' → logprob: -8.745278358459473
    10. ',current' → logprob: -8.995278358459473

Token 404: ' continue' (ID: 4901)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.476397842168808
    2. 'current' → logprob: -0.9763978719711304
    3. '           ' → logprob: -6.47639799118042
    4. '       ' → logprob: -7.97639799118042
    5. '
' → logprob: -8.351397514343262
    6. 'total' → logprob: -9.851397514343262
    7. ' total' → logprob: -10.226397514343262
    8. 'count' → logprob: -10.351397514343262
    9. '               ' → logprob: -10.976397514343262
    10. '```' → logprob: -11.476397514343262

Token 405: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11527115106582642
    2. '<|end|>' → logprob: -2.4902710914611816
    3. '
' → logprob: -3.7402710914611816
    4. ')' → logprob: -7.740271091461182
    5. 'else' → logprob: -7.740271091461182
    6. 'current' → logprob: -7.990271091461182
    7. '<|end|>' → logprob: -8.36527156829834
    8. ' else' → logprob: -8.61527156829834
    9. '        
' → logprob: -8.61527156829834
    10. '```' → logprob: -9.36527156829834

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03131004422903061
    2. 'else' → logprob: -4.281310081481934
    3. '<|end|>' → logprob: -4.906310081481934
    4. 'current' → logprob: -5.531310081481934
    5. '
' → logprob: -5.906310081481934
    6. ' else' → logprob: -6.906310081481934
    7. 'total' → logprob: -7.156310081481934
    8. '```' → logprob: -8.031310081481934
    9. '        
' → logprob: -8.406310081481934
    10. '           ' → logprob: -9.406310081481934

Token 407: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061737291514873505
    2. 'else' → logprob: -2.936737298965454
    3. 'current' → logprob: -5.811737060546875
    4. ' else' → logprob: -6.936737060546875
    5. '
' → logprob: -7.061737060546875
    6. '```' → logprob: -7.311737060546875
    7. 'total' → logprob: -7.811737060546875
    8. '<|end|>' → logprob: -8.061737060546875
    9. 'elif' (adapté à ' elif') → logprob: -8.311737060546875
    10. '        
' → logprob: -8.811737060546875

Token 408: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.48736336827278137
    2. ' count' → logprob: -1.237363338470459
    3. 'total' → logprob: -2.987363338470459
    4. 'count' → logprob: -3.487363338470459
    5. ' current' → logprob: -4.737363338470459
    6. ' input' → logprob: -5.612363338470459
    7. 'current' → logprob: -7.237363338470459
    8. '(total' → logprob: -8.362363815307617
    9. '(count' → logprob: -8.362363815307617
    10. ' ' → logprob: -8.612363815307617

Token 409: '_distance' (ID: 45537)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.16342726349830627
    2. '_x' → logprob: -2.5384273529052734
    3. '_distance' → logprob: -2.6634273529052734
    4. '_one' → logprob: -6.288427352905273
    5. '_n' → logprob: -9.288427352905273
    6. '_zero' → logprob: -10.288427352905273
    7. '_three' → logprob: -11.038427352905273
    8. '_' → logprob: -11.163427352905273
    9. '_dist' → logprob: -11.288427352905273
    10. 'distance' → logprob: -11.413427352905273

Token 410: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02224879339337349
    2. '>' → logprob: -4.0222487449646
    3. ' <' → logprob: -5.5222487449646
    4. '<' → logprob: -9.772249221801758
    5. ' <=' → logprob: -11.147249221801758
    6. ' ==' → logprob: -11.647249221801758
    7. ' ' → logprob: -11.897249221801758
    8. ' >
' → logprob: -13.272249221801758
    9. '==' → logprob: -13.772249221801758
    10. ' >=' → logprob: -13.897249221801758

Token 411: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.059155721217393875
    2. ' input' → logprob: -3.0591557025909424
    3. '0' → logprob: -6.0591559410095215
    4. 'count' → logprob: -6.1841559410095215
    5. '2' → logprob: -6.4341559410095215
    6. '(input' → logprob: -6.5591559410095215
    7. ' ' → logprob: -7.4341559410095215
    8. '=input' → logprob: -7.4341559410095215
    9. '=' → logprob: -7.5591559410095215
    10. ' (' → logprob: -8.559155464172363

Token 412: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02562125399708748
    2. '0' → logprob: -4.77562141418457
    3. '=' → logprob: -5.27562141418457
    4. '2' → logprob: -5.52562141418457
    5. ' input' → logprob: -5.90062141418457
    6. '=input' → logprob: -6.77562141418457
    7. '(' → logprob: -6.90062141418457
    8. '(input' → logprob: -7.02562141418457
    9. 'count' → logprob: -7.15062141418457
    10. ' ' → logprob: -8.52562141418457

Token 413: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3187801241874695
    2. '*' → logprob: -1.3187801837921143
    3. ':' → logprob: -5.318779945373535
    4. '0' → logprob: -8.693779945373535
    5. 'input' → logprob: -9.193779945373535
    6. '<input' → logprob: -9.443779945373535
    7. ':
' → logprob: -9.943779945373535
    8. '*object' → logprob: -10.318779945373535
    9. '[input' → logprob: -10.693779945373535
    10. '*x' → logprob: -11.068779945373535

Token 414: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0010274506639689207
    2. '(input' → logprob: -7.376027584075928
    3. 'count' → logprob: -8.37602710723877
    4. ' input' → logprob: -8.87602710723877
    5. '(' → logprob: -11.37602710723877
    6. 'x' → logprob: -12.00102710723877
    7. '<input' → logprob: -13.62602710723877
    8. 'inp' → logprob: -13.75102710723877
    9. 'int' → logprob: -14.00102710723877
    10. ' (' → logprob: -14.12602710723877

Token 415: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.011124339886009693
    2. '_n' → logprob: -4.511124134063721
    3. 'x' → logprob: -10.136124610900879
    4. '_' → logprob: -10.386124610900879
    5. 'n' → logprob: -12.886124610900879
    6. '```' → logprob: -14.261124610900879
    7. '_distance' → logprob: -14.386124610900879
    8. '_
' → logprob: -15.011124610900879
    9. '_y' → logprob: -15.136124610900879
    10. '
' → logprob: -15.636124610900879

Token 416: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0437907837331295
    2. ':
' → logprob: -3.168790817260742
    3. ' and' → logprob: -7.543790817260742
    4. '       ' → logprob: -8.668790817260742
    5. '           ' → logprob: -9.793790817260742
    6. ',' → logprob: -11.668790817260742
    7. ' :' → logprob: -12.418790817260742
    8. '   ' → logprob: -12.543790817260742
    9. 'and' → logprob: -12.793790817260742
    10. ':

' → logprob: -13.293790817260742

Token 417: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3190661668777466
    2. ':' → logprob: -1.8190661668777466
    3. '           ' → logprob: -2.319066047668457
    4. '       ' → logprob: -4.694066047668457
    5. '               ' → logprob: -6.694066047668457
    6. ',' → logprob: -7.944066047668457
    7. ' and' → logprob: -8.194066047668457
    8. '   ' → logprob: -8.194066047668457
    9. '<|end|>' → logprob: -8.319066047668457
    10. ' :
' → logprob: -8.569066047668457

Token 418: ' if' (ID: 538)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.18762879073619843
    2. '           ' → logprob: -2.062628746032715
    3. 'current' → logprob: -4.437628746032715
    4. '       ' → logprob: -5.062628746032715
    5. ' if' → logprob: -5.062628746032715
    6. '               ' → logprob: -5.187628746032715
    7. ' continue' → logprob: -5.562628746032715
    8. ' for' → logprob: -6.062628746032715
    9. '
' → logprob: -6.187628746032715
    10. ' count' → logprob: -7.062628746032715

Token 419: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4075341522693634
    2. ' count' → logprob: -1.657534122467041
    3. 'total' → logprob: -2.532534122467041
    4. ' total' → logprob: -3.282534122467041
    5. 'current' → logprob: -5.032534122467041
    6. '(count' → logprob: -5.157534122467041
    7. 'input' → logprob: -5.407534122467041
    8. ' current' → logprob: -5.782534122467041
    9. ' input' → logprob: -5.907534122467041
    10. ' (' → logprob: -6.407534122467041

Token 420: 'total' (ID: 9577)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5321800708770752
    2. 'total' → logprob: -1.0321800708770752
    3. 'input' → logprob: -3.407180070877075
    4. '(count' → logprob: -5.157179832458496
    5. '(total' → logprob: -5.282179832458496
    6. ' count' → logprob: -5.407179832458496
    7. ' total' → logprob: -5.532179832458496
    8. '(input' → logprob: -6.907179832458496
    9. 'current' → logprob: -7.157179832458496
    10. '2' → logprob: -7.282179832458496

Token 421: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.01805008202791214
    2. '_two' → logprob: -4.643050193786621
    3. '_one' → logprob: -5.143050193786621
    4. 'distance' → logprob: -6.893050193786621
    5. '_count' → logprob: -7.018050193786621
    6. '_' → logprob: -8.018050193786621
    7. '_zero' → logprob: -9.643050193786621
    8. '```' → logprob: -10.518050193786621
    9. 'one' → logprob: -11.143050193786621
    10. '_x' → logprob: -11.143050193786621

Token 422: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012650790624320507
    2. '-' → logprob: -5.262650966644287
    3. ' ' → logprob: -5.887650966644287
    4. ' >' → logprob: -6.637650966644287
    5. ' >=' → logprob: -7.262650966644287
    6. ' +' → logprob: -7.387650966644287
    7. '+' → logprob: -7.512650966644287
    8. ' %' → logprob: -7.887650966644287
    9. ' <=' → logprob: -8.512650489807129
    10. ' ==' → logprob: -8.637650489807129

Token 423: ' input' (ID: 3422)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1810692846775055
    2. 'input' → logprob: -2.0560693740844727
    3. '1' → logprob: -4.306069374084473
    4. ' count' → logprob: -4.556069374084473
    5. '2' → logprob: -4.806069374084473
    6. ' input' → logprob: -6.556069374084473
    7. '0' → logprob: -6.806069374084473
    8. '(input' → logprob: -7.431069374084473
    9. '   ' → logprob: -7.556069374084473
    10. '(' → logprob: -7.931069374084473

Token 424: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.643152740551159e-05
    2. '_two' → logprob: -10.375036239624023
    3. '_y' → logprob: -13.375036239624023
    4. '_one' → logprob: -14.000036239624023
    5. '_z' → logprob: -14.375036239624023
    6. '_zero' → logprob: -14.500036239624023
    7. '_' → logprob: -14.625036239624023
    8. 'x' → logprob: -15.000036239624023
    9. ')' → logprob: -15.625036239624023
    10. '_distance' → logprob: -16.000036239624023

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030262039974331856
    2. ' )' → logprob: -3.530261993408203
    3. ')%' → logprob: -8.280261993408203
    4. ' ==' → logprob: -10.155261993408203
    5. ' +' → logprob: -10.530261993408203
    6. ' -' → logprob: -10.530261993408203
    7. ' >=' → logprob: -10.530261993408203
    8. ' <=' → logprob: -10.655261993408203
    9. ' <' → logprob: -11.030261993408203
    10. ' %' → logprob: -11.155261993408203

Token 426: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.706404447555542
    2. ' <=' → logprob: -1.081404447555542
    3. ' >=' → logprob: -2.581404447555542
    4. '%' → logprob: -3.206404447555542
    5. ' >' → logprob: -4.456404685974121
    6. ' ==' → logprob: -4.456404685974121
    7. ' <' → logprob: -4.956404685974121
    8. ' ' → logprob: -4.956404685974121
    9. '<=' → logprob: -5.331404685974121
    10. ')' → logprob: -5.956404685974121

Token 427: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019035318400710821
    2. '3' → logprob: -6.751903533935547
    3. ' ' → logprob: -7.376903533935547
    4. '1' → logprob: -9.251903533935547
    5. 'count' → logprob: -11.751903533935547
    6. '
' → logprob: -14.001903533935547
    7. '==' → logprob: -15.001903533935547
    8. '(' → logprob: -15.064403533935547
    9. '   ' → logprob: -15.126903533935547
    10. '=' → logprob: -15.126903533935547

Token 428: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023463957477360964
    2. '3' → logprob: -6.502346515655518
    3. '1' → logprob: -7.127346515655518
    4. ' ' → logprob: -10.50234603881836
    5. 'count' → logprob: -11.87734603881836
    6. '(' → logprob: -13.37734603881836
    7. '4' → logprob: -13.56484603881836
    8. 'input' → logprob: -13.62734603881836
    9. '```' → logprob: -15.25234603881836
    10. '
' → logprob: -15.25234603881836

Token 429: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3726196885108948
    2. ' ==' → logprob: -1.87261962890625
    3. '!=' → logprob: -2.37261962890625
    4. ' !=' → logprob: -2.74761962890625
    5. '()==' → logprob: -11.87261962890625
    6. '()!=' → logprob: -12.24761962890625
    7. ' ' → logprob: -12.49761962890625
    8. ':' → logprob: -12.62261962890625
    9. '=' → logprob: -12.87261962890625
    10. ')==' → logprob: -13.12261962890625

Token 430: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020548582542687654
    2. '1' → logprob: -6.502054691314697
    3. ' ' → logprob: -7.502054691314697
    4. '
' → logprob: -15.502055168151855
    5. '2' → logprob: -17.06455421447754
    6. '=' → logprob: -17.25205421447754
    7. '   ' → logprob: -17.68955421447754
    8. '۰' → logprob: -17.87705421447754
    9. '```' → logprob: -18.56455421447754
    10. ')' → logprob: -18.87705421447754

Token 431: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00291376537643373
    2. '1' → logprob: -5.877913951873779
    3. ' ' → logprob: -9.127913475036621
    4. '2' → logprob: -15.627913475036621
    5. '
' → logprob: -16.940414428710938
    6. '```' → logprob: -17.940414428710938
    7. '   ' → logprob: -18.190414428710938
    8. '۰' → logprob: -18.377914428710938
    9. '=' → logprob: -18.940414428710938
    10. ' ' → logprob: -19.065414428710938

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019652163609862328
    2. ':
' → logprob: -4.019652366638184
    3. '           ' → logprob: -7.644652366638184
    4. '               ' → logprob: -7.644652366638184
    5. ' and' → logprob: -7.894652366638184
    6. '<|end|>' → logprob: -10.144652366638184
    7. ',' → logprob: -10.269652366638184
    8. ' :' → logprob: -10.394652366638184
    9. '       ' → logprob: -10.644652366638184
    10. ':

' → logprob: -12.144652366638184

Token 433: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03088676743209362
    2. '           ' → logprob: -4.280886650085449
    3. '<|end|>' → logprob: -4.655886650085449
    4. ' ' → logprob: -6.780886650085449
    5. '            ' → logprob: -6.905886650085449
    6. ' current' → logprob: -7.405886650085449
    7. '                               ' → logprob: -7.530886650085449
    8. ')' → logprob: -7.655886650085449
    9. ' (' → logprob: -7.905886650085449
    10. ' continue' → logprob: -8.03088665008545

Token 434: ' continue' (ID: 4901)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10776831954717636
    2. '                   ' → logprob: -3.2327682971954346
    3. 'current' → logprob: -3.8577682971954346
    4. ' count' → logprob: -4.607768535614014
    5. ' offset' → logprob: -5.357768535614014
    6. ' increment' → logprob: -5.857768535614014
    7. ' step' → logprob: -6.482768535614014
    8. ' half' → logprob: -6.482768535614014
    9. ' additional' → logprob: -6.732768535614014
    10. ' temp' → logprob: -6.732768535614014

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044014621526002884
    2. '<|end|>' → logprob: -3.5440146923065186
    3. '
' → logprob: -4.7940144538879395
    4. '           ' → logprob: -5.7940144538879395
    5. '               ' → logprob: -6.5440144538879395
    6. ')' → logprob: -8.294014930725098
    7. 'else' → logprob: -8.419014930725098
    8. '        
' → logprob: -8.794014930725098
    9. ' else' → logprob: -9.044014930725098
    10. '   ' → logprob: -9.044014930725098

Token 436: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009779699146747589
    2. '           ' → logprob: -5.759779930114746
    3. '<|end|>' → logprob: -5.884779930114746
    4. '               ' → logprob: -6.759779930114746
    5. 'else' → logprob: -6.884779930114746
    6. ')' → logprob: -7.259779930114746
    7. 'current' → logprob: -8.134779930114746
    8. ' else' → logprob: -9.134779930114746
    9. '   ' → logprob: -9.259779930114746
    10. '        
' → logprob: -9.509779930114746

Token 437: ' adjusted' (ID: 38307)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19009575247764587
    2. 'current' → logprob: -2.3150956630706787
    3. ' current' → logprob: -4.065095901489258
    4. ')' → logprob: -4.190095901489258
    5. '
' → logprob: -4.565095901489258
    6. '               ' → logprob: -4.690095901489258
    7. '<|end|>' → logprob: -5.190095901489258
    8. '           ' → logprob: -5.940095901489258
    9. '(current' → logprob: -6.315095901489258
    10. '[current' → logprob: -6.440095901489258

Token 438: '_two' (ID: 54305)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.7354359030723572
    2. '_distance' → logprob: -0.9854359030723572
    3. '_total' → logprob: -1.985435962677002
    4. '_x' → logprob: -5.860435962677002
    5. '_value' → logprob: -6.610435962677002
    6. ' =' → logprob: -6.610435962677002
    7. '_input' → logprob: -7.110435962677002
    8. '_two' → logprob: -7.235435962677002
    9. '_dist' → logprob: -7.485435962677002
    10. '_' → logprob: -7.735435962677002

Token 439: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12794272601604462
    2. '=' → logprob: -2.1279428005218506
    3. '_count' → logprob: -7.5029425621032715
    4. 's' → logprob: -8.00294303894043
    5. '=count' → logprob: -9.87794303894043
    6. '+=' → logprob: -11.00294303894043
    7. ')' → logprob: -11.25294303894043
    8. ' +=' → logprob: -11.75294303894043
    9. 'count' → logprob: -11.87794303894043
    10. '_counts' → logprob: -12.12794303894043

Token 440: ' count' (ID: 3605)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3064383566379547
    2. ' count' → logprob: -2.306438446044922
    3. 'count' → logprob: -2.681438446044922
    4. '(count' → logprob: -3.056438446044922
    5. '(total' → logprob: -4.306438446044922
    6. ' input' → logprob: -4.556438446044922
    7. ' total' → logprob: -4.556438446044922
    8. '(input' → logprob: -5.056438446044922
    9. 'total' → logprob: -5.681438446044922
    10. 'input' → logprob: -5.681438446044922

Token 441: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.005276449490338564
    2. '_one' → logprob: -5.255276679992676
    3. 'two' → logprob: -10.130276679992676
    4. '_three' → logprob: -13.755276679992676
    5. '_zero' → logprob: -14.505276679992676
    6. '_tw' → logprob: -15.130276679992676
    7. '_TWO' → logprob: -15.380276679992676
    8. 'Two' → logprob: -15.380276679992676
    9. 'one' → logprob: -15.630276679992676
    10. '```' → logprob: -16.63027572631836

Token 442: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19615015387535095
    2. '-' → logprob: -1.8211501836776733
    3. '=' → logprob: -4.696150302886963
    4. ' =' → logprob: -5.821150302886963
    5. ' -=' → logprob: -5.946150302886963
    6. '           ' → logprob: -7.696150302886963
    7. ' +' → logprob: -7.821150302886963
    8. '-=' → logprob: -8.071149826049805
    9. '+' → logprob: -8.196149826049805
    10. '+=' → logprob: -10.821149826049805

Token 443: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025805054232478142
    2. ' (' → logprob: -4.9008049964904785
    3. '(total' → logprob: -4.9008049964904785
    4. '((' → logprob: -5.6508049964904785
    5. '(count' → logprob: -6.1508049964904785
    6. ' ' → logprob: -6.1508049964904785
    7. '(input' → logprob: -6.6508049964904785
    8. '(' → logprob: -7.1508049964904785
    9. '(current' → logprob: -7.7758049964904785
    10. 'count' → logprob: -9.525805473327637

Token 444: 'total' (ID: 9577)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8081412315368652
    2. '(input' → logprob: -1.0581412315368652
    3. '1' → logprob: -2.3081412315368652
    4. 'count' → logprob: -3.3081412315368652
    5. '(total' → logprob: -3.6831412315368652
    6. 'total' → logprob: -3.8081412315368652
    7. ' (' → logprob: -4.558141231536865
    8. '(count' → logprob: -5.308141231536865
    9. '((' → logprob: -5.433141231536865
    10. ' input' → logprob: -7.058141231536865

Token 445: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.1306391954421997
    2. '_x' → logprob: -2.25563907623291
    3. 'distance' → logprob: -5.00563907623291
    4. '_two' → logprob: -5.13063907623291
    5. '_one' → logprob: -5.63063907623291
    6. 'x' → logprob: -7.50563907623291
    7. 'two' → logprob: -8.50563907623291
    8. 'one' → logprob: -9.25563907623291
    9. '_input' → logprob: -9.38063907623291
    10. '_zero' → logprob: -9.50563907623291

Token 446: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12337955087423325
    2. ')' → logprob: -2.6233794689178467
    3. '-' → logprob: -3.9983794689178467
    4. ' *' → logprob: -4.123379707336426
    5. '+' → logprob: -5.748379707336426
    6. '*' → logprob: -6.123379707336426
    7. ' +' → logprob: -6.498379707336426
    8. ' )' → logprob: -6.998379707336426
    9. '<|end|>' → logprob: -8.373379707336426
    10. ')*' → logprob: -8.873379707336426

Token 447: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0018246464896947145
    2. ' input' → logprob: -6.501824855804443
    3. 'count' → logprob: -8.376824378967285
    4. '(input' → logprob: -10.126824378967285
    5. '1' → logprob: -10.251824378967285
    6. '   ' → logprob: -12.501824378967285
    7. '2' → logprob: -12.626824378967285
    8. '
' → logprob: -13.001824378967285
    9. ' ' → logprob: -13.501824378967285
    10. ')' → logprob: -13.626824378967285

Token 448: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.014187601394951344
    2. '_two' → logprob: -4.264187812805176
    3. '_zero' → logprob: -11.264187812805176
    4. 'x' → logprob: -12.264187812805176
    5. '_one' → logprob: -12.389187812805176
    6. '```' → logprob: -13.764187812805176
    7. 'two' → logprob: -14.514187812805176
    8. '_three' → logprob: -14.639187812805176
    9. 'Two' → logprob: -16.51418685913086
    10. '_tw' → logprob: -16.51418685913086

Token 449: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028155501931905746
    2. ' -' → logprob: -4.028155326843262
    3. '-' → logprob: -5.153155326843262
    4. ' )' → logprob: -5.778155326843262
    5. ')//' → logprob: -7.153155326843262
    6. ')
' → logprob: -9.903155326843262
    7. '   ' → logprob: -10.028155326843262
    8. ')>>' → logprob: -10.153155326843262
    9. ' +' → logprob: -10.403155326843262
    10. '+' → logprob: -10.778155326843262

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012118533049942926
    2. '2' → logprob: -9.625121116638184
    3. ' ' → logprob: -9.875121116638184
    4. 'count' → logprob: -13.000121116638184
    5. '(count' → logprob: -14.500121116638184
    6. ')' → logprob: -15.250121116638184
    7. '3' → logprob: -15.625121116638184
    8. '   ' → logprob: -16.0001220703125
    9. ' count' → logprob: -16.1251220703125
    10. '(' → logprob: -16.7501220703125

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.162282367469743e-05
    2. '2' → logprob: -9.625091552734375
    3. ' ' → logprob: -10.750091552734375
    4. 'count' → logprob: -13.000091552734375
    5. ')' → logprob: -14.875091552734375
    6. '3' → logprob: -15.000091552734375
    7. '(count' → logprob: -15.125091552734375
    8. '
' → logprob: -15.250091552734375
    9. '0' → logprob: -16.000091552734375
    10. '   ' → logprob: -16.125091552734375

Token 452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011466487776488066
    2. ')//' → logprob: -7.2511467933654785
    3. ' )' → logprob: -8.00114631652832
    4. ')
' → logprob: -10.00114631652832
    5. '   ' → logprob: -10.75114631652832
    6. '```' → logprob: -11.37614631652832
    7. ')>>' → logprob: -11.87614631652832
    8. ' ' → logprob: -12.50114631652832
    9. '       ' → logprob: -13.37614631652832
    10. '           ' → logprob: -13.50114631652832

Token 453: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' adjusted' (ID: 38307)
  Prédit: ' adjusted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjusted' → logprob: -0.16028109192848206
    2. 'adjust' → logprob: -1.9102810621261597
    3. '0' → logprob: -9.91028118133545
    4. 'count' → logprob: -12.41028118133545
    5. ' ' → logprob: -14.16028118133545
    6. ' count' → logprob: -14.28528118133545
    7. '   ' → logprob: -14.91028118133545
    8. '_adjust' → logprob: -15.03528118133545
    9. 'adj' → logprob: -15.66028118133545
    10. '           ' → logprob: -15.78528118133545

Token 456: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -1.9266199160483666e-05
    2. 'two' → logprob: -10.875019073486328
    3. ' two' → logprob: -16.000019073486328
    4. '_tw' → logprob: -16.250019073486328
    5. 'Two' → logprob: -17.500019073486328
    6. '_zero' → logprob: -17.625019073486328
    7. '_one' → logprob: -18.000019073486328
    8. '_TWO' → logprob: -18.000019073486328
    9. '_' → logprob: -18.500019073486328
    10. '_t' → logprob: -18.875019073486328

Token 457: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.022359898313879967
    2. ' >=' → logprob: -4.397359848022461
    3. '<' → logprob: -4.647359848022461
    4. '>=' → logprob: -9.147359848022461
    5. '<|end|>' → logprob: -10.022359848022461
    6. '[' → logprob: -10.772359848022461
    7. ' ' → logprob: -10.897359848022461
    8. ')' → logprob: -11.772359848022461
    9. '<int' → logprob: -13.272359848022461
    10. '   ' → logprob: -13.272359848022461

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008084330474957824
    2. ' ' → logprob: -7.125808238983154
    3. '   ' → logprob: -13.375808715820312
    4. '           ' → logprob: -13.625808715820312
    5. '                   ' → logprob: -14.625808715820312
    6. '               ' → logprob: -15.250808715820312
    7. '                       ' → logprob: -15.625808715820312
    8. '       ' → logprob: -15.625808715820312
    9. '                           ' → logprob: -17.125808715820312
    10. '
' → logprob: -17.500808715820312

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. 'count' → logprob: -16.37520408630371
    4. '   ' → logprob: -17.00020408630371
    5. '۰' → logprob: -17.62520408630371
    6. '1' → logprob: -17.75020408630371
    7. 'zero' → logprob: -17.87520408630371
    8. '-' → logprob: -17.93770408630371
    9. ' -' → logprob: -18.31270408630371
    10. '０' → logprob: -19.00020408630371

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6991464495658875
    2. ':
' → logprob: -0.8241464495658875
    3. ' and' → logprob: -3.4491465091705322
    4. '               ' → logprob: -3.6991465091705322
    5. '           ' → logprob: -4.949146270751953
    6. '<|end|>' → logprob: -8.324146270751953
    7. ',' → logprob: -8.949146270751953
    8. '):
' → logprob: -9.199146270751953
    9. ' :
' → logprob: -9.824146270751953
    10. '       ' → logprob: -10.324146270751953

Token 461: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020688986405730247
    2. '<|end|>' → logprob: -6.627068996429443
    3. '			' → logprob: -9.252068519592285
    4. ' current' → logprob: -9.627068519592285
    5. '           ' → logprob: -9.752068519592285
    6. ' continue' → logprob: -9.877068519592285
    7. '                               ' → logprob: -9.877068519592285
    8. ')' → logprob: -10.252068519592285
    9. '                
' → logprob: -10.377068519592285
    10. '                   ' → logprob: -10.377068519592285

Token 462: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.03451799601316452
    2. '                   ' → logprob: -3.534518003463745
    3. '               ' → logprob: -6.034517765045166
    4. 'current' (adapté à ' current') → logprob: -6.409517765045166
    5. '                               ' → logprob: -8.159518241882324
    6. '                       ' → logprob: -8.909518241882324
    7. ' continue' → logprob: -9.534518241882324
    8. '                           ' → logprob: -10.284518241882324
    9. '                ' → logprob: -10.534518241882324
    10. ' count' → logprob: -10.909518241882324

Token 463: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00011403311509639025
    2. '_' → logprob: -10.125114440917969
    3. ' _' → logprob: -10.250114440917969
    4. ' +=' → logprob: -11.125114440917969
    5. '+=' → logprob: -12.000114440917969
    6. '   ' → logprob: -12.500114440917969
    7. '+' → logprob: -12.750114440917969
    8. 'count' → logprob: -12.750114440917969
    9. '```' → logprob: -13.625114440917969
    10. '_code' → logprob: -14.500114440917969

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04048164561390877
    2. ' +=' → logprob: -3.2904815673828125
    3. '=' → logprob: -6.0404815673828125
    4. '+=' → logprob: -10.040481567382812
    5. ' *=' → logprob: -11.540481567382812
    6. ' ' → logprob: -13.290481567382812
    7. ' |=' → logprob: -13.790481567382812
    8. ' -=' → logprob: -15.290481567382812
    9. ' .=' → logprob: -15.790481567382812
    10. ')' → logprob: -15.915481567382812

Token 465: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.5771352648735046
    2. ' calc' → logprob: -0.8271352648735046
    3. '(calc' → logprob: -6.82713508605957
    4. ' (' → logprob: -10.45213508605957
    5. 'count' → logprob: -10.82713508605957
    6. '(' → logprob: -11.07713508605957
    7. 'cal' → logprob: -11.45213508605957
    8. '   ' → logprob: -11.82713508605957
    9. '           ' → logprob: -12.32713508605957
    10. '               ' → logprob: -12.45213508605957

Token 466: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -1.27099974633893e-05
    2. 'comb' → logprob: -11.625012397766113
    3. '_factor' → logprob: -12.625012397766113
    4. 'Combination' → logprob: -15.375012397766113
    5. '_com' → logprob: -16.12501335144043
    6. '_fact' → logprob: -17.37501335144043
    7. '_cal' → logprob: -17.50001335144043
    8. '```' → logprob: -17.75001335144043
    9. '(' → logprob: -17.87501335144043
    10. ' combination' → logprob: -18.25001335144043

Token 467: 'ination' (ID: 3273)
  Prédit: 'bination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.5237863063812256
    2. 'ination' → logprob: -0.8987863063812256
    3. 'b' → logprob: -8.023786544799805
    4. 'ation' → logprob: -9.023786544799805
    5. 'bin' → logprob: -9.773786544799805
    6. '_comb' → logprob: -10.398786544799805
    7. '   ' → logprob: -11.023786544799805
    8. 'nation' → logprob: -11.148786544799805
    9. '       ' → logprob: -11.273786544799805
    10. 'comb' → logprob: -11.398786544799805

Token 468: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.015337646007537842
    2. '(input' → logprob: -4.6403374671936035
    3. '(ad' → logprob: -5.6403374671936035
    4. 'count' → logprob: -6.5153374671936035
    5. '(' → logprob: -7.7653374671936035
    6. 'input' → logprob: -10.140337944030762
    7. '(total' → logprob: -10.265337944030762
    8. 'adjust' → logprob: -12.265337944030762
    9. ' (' → logprob: -12.390337944030762
    10. '   ' → logprob: -12.515337944030762

Token 469: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.030209990218281746
    2. '_two' → logprob: -3.530210018157959
    3. '_zero' → logprob: -7.780210018157959
    4. 'one' → logprob: -11.5302095413208
    5. '_three' → logprob: -12.2802095413208
    6. 'two' → logprob: -12.2802095413208
    7. '   ' → logprob: -12.4052095413208
    8. 'One' → logprob: -12.6552095413208
    9. '+' → logprob: -13.2802095413208
    10. '           ' → logprob: -13.5302095413208

Token 470: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22552306950092316
    2. ' +' → logprob: -1.6005231142044067
    3. ',' → logprob: -9.600522994995117
    4. '<|end|>' → logprob: -11.850522994995117
    5. '_plus' → logprob: -12.225522994995117
    6. ' plus' → logprob: -12.725522994995117
    7. '```' → logprob: -12.850522994995117
    8. '[count' → logprob: -12.850522994995117
    9. '+c' → logprob: -12.975522994995117
    10. '<count' → logprob: -13.475522994995117

Token 471: ' adjusted' (ID: 38307)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05647560954093933
    2. 'adjust' → logprob: -3.0564756393432617
    3. ' count' → logprob: -5.431475639343262
    4. '(count' → logprob: -6.306475639343262
    5. ' adjusted' → logprob: -6.556475639343262
    6. 'two' → logprob: -9.306475639343262
    7. ' ' → logprob: -9.931475639343262
    8. ' (' → logprob: -10.431475639343262
    9. ' two' → logprob: -11.181475639343262
    10. '2' → logprob: -11.306475639343262

Token 472: '_two' (ID: 54305)
  Prédit: '_two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.00012749579036608338
    2. 'two' → logprob: -9.000127792358398
    3. 'Two' → logprob: -14.125127792358398
    4. '_one' → logprob: -14.125127792358398
    5. '```' → logprob: -14.375127792358398
    6. 'count' → logprob: -14.625127792358398
    7. '2' → logprob: -14.750127792358398
    8. '_count' → logprob: -15.125127792358398
    9. '(two' → logprob: -15.750127792358398
    10. '_TWO' → logprob: -16.0001277923584

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003428528143558651
    2. ',count' → logprob: -8.250343322753906
    3. ',input' → logprob: -9.625343322753906
    4. '(count' → logprob: -12.125343322753906
    5. ' ,' → logprob: -13.000343322753906
    6. '<|end|>' → logprob: -13.125343322753906
    7. '[count' → logprob: -13.250343322753906
    8. ',
' → logprob: -14.125343322753906
    9. ',current' → logprob: -14.500343322753906
    10. 'count' → logprob: -14.750343322753906

Token 474: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3638167679309845
    2. 'adjust' → logprob: -1.363816738128662
    3. ' count' → logprob: -4.238816738128662
    4. 'input' → logprob: -4.238816738128662
    5. ' adjusted' → logprob: -4.363816738128662
    6. '(count' → logprob: -5.863816738128662
    7. ' input' → logprob: -6.488816738128662
    8. ' (' → logprob: -7.113816738128662
    9. '(ad' → logprob: -7.613816738128662
    10. 'total' → logprob: -7.613816738128662

Token 475: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.00035608073812909424
    2. '_two' → logprob: -8.00035572052002
    3. 'one' → logprob: -10.87535572052002
    4. 'One' → logprob: -14.00035572052002
    5. '1' → logprob: -15.00035572052002
    6. '_ONE' → logprob: -15.62535572052002
    7. '```' → logprob: -15.87535572052002
    8. 'two' → logprob: -16.250356674194336
    9. '_zero' → logprob: -17.250356674194336
    10. ' one' → logprob: -18.000356674194336

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002470350591465831
    2. ' ,' → logprob: -9.62524700164795
    3. ' +' → logprob: -10.12524700164795
    4. ')' → logprob: -10.25024700164795
    5. '+' → logprob: -10.37524700164795
    6. '```' → logprob: -10.75024700164795
    7. '   ' → logprob: -11.00024700164795
    8. '       ' → logprob: -11.50024700164795
    9. '           ' → logprob: -11.87524700164795
    10. ',count' → logprob: -12.50024700164795

Token 477: ' modulus' (ID: 149464)
  Prédit: ' modulus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulus' → logprob: -0.38691848516464233
    2. 'mod' → logprob: -1.136918544769287
    3. '(mod' → logprob: -10.761918067932129
    4. '```' → logprob: -11.511918067932129
    5. 'module' → logprob: -12.886918067932129
    6. '_mod' → logprob: -13.011918067932129
    7. 'modifier' → logprob: -13.011918067932129
    8. 'modus' → logprob: -13.136918067932129
    9. ' modul' → logprob: -13.511918067932129
    10. ' mod' → logprob: -13.636918067932129

Token 478: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005380203947424889
    2. ',' → logprob: -7.625537872314453
    3. '_mod' → logprob: -10.750537872314453
    4. '_,' → logprob: -11.375537872314453
    5. ')' → logprob: -12.125537872314453
    6. '_values' → logprob: -12.875537872314453
    7. 'mod' → logprob: -13.125537872314453
    8. 'value' → logprob: -13.500537872314453
    9. '(mod' → logprob: -13.500537872314453
    10. '```' → logprob: -13.625537872314453

Token 479: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011641718447208405
    2. ')' → logprob: -9.375116348266602
    3. ' ,' → logprob: -11.250116348266602
    4. '           ' → logprob: -11.625116348266602
    5. ',module' → logprob: -13.250116348266602
    6. '```' → logprob: -13.500116348266602
    7. '       ' → logprob: -14.000116348266602
    8. '               ' → logprob: -14.125116348266602
    9. '                   ' → logprob: -14.500116348266602
    10. '   ' → logprob: -14.500116348266602

Token 480: ' factorial' (ID: 111204)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.06959501653909683
    2. 'factor' → logprob: -2.8195950984954834
    3. ' modulus' → logprob: -5.319594860076904
    4. ' factorial' → logprob: -5.944594860076904
    5. ' mod' → logprob: -10.069595336914062
    6. 'inverse' → logprob: -11.319595336914062
    7. '(mod' → logprob: -11.444595336914062
    8. ' factor' → logprob: -11.819595336914062
    9. '	mod' → logprob: -12.694595336914062
    10. 'modifier' → logprob: -12.944595336914062

Token 481: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.583550642360933e-05
    2. '[' → logprob: -11.625036239624023
    3. '_' → logprob: -11.625036239624023
    4. ')' → logprob: -12.625036239624023
    5. '[_' → logprob: -13.000036239624023
    6. '[
' → logprob: -13.000036239624023
    7. '   ' → logprob: -13.125036239624023
    8. '_lists' → logprob: -13.375036239624023
    9. ' _' → logprob: -13.500036239624023
    10. '```' → logprob: -13.750036239624023

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006494098342955112
    2. '[in' → logprob: -7.625649452209473
    3. ',in' → logprob: -9.250649452209473
    4. ')' → logprob: -10.500649452209473
    5. ' ,' → logprob: -11.000649452209473
    6. 'inverse' → logprob: -11.875649452209473
    7. '       ' → logprob: -12.625649452209473
    8. '[' → logprob: -13.250649452209473
    9. ' inverse' → logprob: -13.500649452209473
    10. '```' → logprob: -13.625649452209473

Token 483: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.20142386853694916
    2. ' inverse' → logprob: -1.7014238834381104
    3. '   ' → logprob: -13.451423645019531
    4. '       ' → logprob: -13.826423645019531
    5. '            ' → logprob: -13.826423645019531
    6. '           ' → logprob: -13.951423645019531
    7. '.inverse' → logprob: -13.951423645019531
    8. '        ' → logprob: -14.076423645019531
    9. '    ' → logprob: -14.326423645019531
    10. '```' → logprob: -14.576423645019531

Token 484: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001514557225164026
    2. 'inverse' → logprob: -9.125151634216309
    3. 'list' → logprob: -10.250151634216309
    4. '[in' → logprob: -13.500151634216309
    5. '_value' → logprob: -13.500151634216309
    6. '[' → logprob: -13.500151634216309
    7. '_inverse' → logprob: -13.500151634216309
    8. '_count' → logprob: -14.375151634216309
    9. 'List' → logprob: -14.500151634216309
    10. '   ' → logprob: -16.125150680541992

Token 485: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002130041131749749
    2. ',' → logprob: -6.252130031585693
    3. '```' → logprob: -9.627130508422852
    4. ' )' → logprob: -10.502130508422852
    5. ')%' → logprob: -10.627130508422852
    6. '<|end|>' → logprob: -11.002130508422852
    7. '               ' → logprob: -11.127130508422852
    8. ')*' → logprob: -11.127130508422852
    9. ')
' → logprob: -12.127130508422852
    10. '%' → logprob: -12.127130508422852

Token 486: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08306114375591278
    2. ' %' → logprob: -3.3330612182617188
    3. '<|end|>' → logprob: -3.8330612182617188
    4. '%' → logprob: -4.208061218261719
    5. '```' → logprob: -5.333061218261719
    6. '*' → logprob: -6.583061218261719
    7. ')' → logprob: -7.333061218261719
    8. '<|end|>' → logprob: -8.958061218261719
    9. ' ' → logprob: -9.333061218261719
    10. '       ' → logprob: -9.708061218261719

Token 487: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.055794209241867065
    2. ' count' → logprob: -2.9307942390441895
    3. '(count' → logprob: -7.3057942390441895
    4. 'calc' → logprob: -9.305793762207031
    5. 'factor' → logprob: -10.180793762207031
    6. 'inverse' → logprob: -10.555793762207031
    7. ' (' → logprob: -10.930793762207031
    8. 'current' → logprob: -11.055793762207031
    9. '(' → logprob: -11.555793762207031
    10. 'total' → logprob: -11.680793762207031

Token 488: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.0003291480534244329
    2. '_one' → logprob: -8.50032901763916
    3. '_count' → logprob: -9.62532901763916
    4. '_two' → logprob: -10.00032901763916
    5. '```' → logprob: -11.62532901763916
    6. 'zero' → logprob: -13.25032901763916
    7. '_' → logprob: -13.62532901763916
    8. 'Zero' → logprob: -14.37532901763916
    9. '_ZERO' → logprob: -15.12532901763916
    10. '_factor' → logprob: -16.250329971313477

Token 489: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.32432591915130615
    2. '<|end|>' → logprob: -2.0743260383605957
    3. '       ' → logprob: -2.3243260383605957
    4. ' %' → logprob: -3.8243260383605957
    5. ')' → logprob: -3.9493260383605957
    6. '
' → logprob: -5.449326038360596
    7. '```' → logprob: -5.449326038360596
    8. '           ' → logprob: -6.824326038360596
    9. '<|end|>' → logprob: -7.824326038360596
    10. '               ' → logprob: -8.074325561523438

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09938199073076248
    2. '<|end|>' → logprob: -2.849381923675537
    3. ')' → logprob: -4.099381923675537
    4. '%' → logprob: -4.974381923675537
    5. '```' → logprob: -5.099381923675537
    6. '           ' → logprob: -5.849381923675537
    7. '               ' → logprob: -7.349381923675537
    8. '+' → logprob: -7.474381923675537
    9. '   ' → logprob: -7.599381923675537
    10. '
' → logprob: -7.849381923675537

Token 491: ' elif' (ID: 9497)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.3818227052688599
    2. '       ' → logprob: -1.7568227052688599
    3. '```' → logprob: -2.0068225860595703
    4. '\n' → logprob: -2.2568225860595703
    5. '
' → logprob: -2.3818225860595703
    6. ')' → logprob: -2.7568225860595703
    7. '<|end|>' → logprob: -2.7568225860595703
    8. '[' → logprob: -3.6318225860595703
    9. '+' → logprob: -4.38182258605957
    10. '*' → logprob: -4.63182258605957

Token 492: ' input' (ID: 3422)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04932577162981033
    2. 'total' → logprob: -3.049325704574585
    3. ' input' → logprob: -7.549325942993164
    4. ' ' → logprob: -9.549325942993164
    5. '(total' → logprob: -9.924325942993164
    6. 'input' → logprob: -10.049325942993164
    7. ' count' → logprob: -11.424325942993164
    8. '2' → logprob: -11.549325942993164
    9. 'count' → logprob: -11.549325942993164
    10. ' (' → logprob: -12.174325942993164

Token 493: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00924136396497488
    2. '_' → logprob: -4.884241580963135
    3. '_n' → logprob: -7.009241580963135
    4. ' _' → logprob: -8.134241104125977
    5. '_value' → logprob: -9.259241104125977
    6. '```' → logprob: -9.259241104125977
    7. '_total' → logprob: -10.509241104125977
    8. '_input' → logprob: -10.759241104125977
    9. '*' → logprob: -11.009241104125977
    10. '_y' → logprob: -11.259241104125977

Token 494: ' %' (ID: 1851)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.2304277420043945
    2. ' ==' → logprob: -1.2304277420043945
    3. ' >' → logprob: -1.8554277420043945
    4. ' <=' → logprob: -2.9804277420043945
    5. '*' → logprob: -3.1054277420043945
    6. '==' → logprob: -3.2304277420043945
    7. ' *' → logprob: -3.3554277420043945
    8. ' +' → logprob: -3.7304277420043945
    9. ':' → logprob: -4.1054277420043945
    10. ' >=' → logprob: -4.1054277420043945

Token 495: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06220810487866402
    2. ' ' → logprob: -2.8122081756591797
    3. '3' → logprob: -8.56220817565918
    4. '==' → logprob: -10.43720817565918
    5. '```' → logprob: -11.56220817565918
    6. '!=' → logprob: -13.06220817565918
    7. '1' → logprob: -13.18720817565918
    8. '4' → logprob: -13.43720817565918
    9. ' ==' → logprob: -14.31220817565918
    10. '>' → logprob: -14.62470817565918

Token 496: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001507405104348436
    2. ' ' → logprob: -9.375150680541992
    3. '3' → logprob: -9.875150680541992
    4. '1' → logprob: -12.125150680541992
    5. '==' → logprob: -12.250150680541992
    6. '```' → logprob: -12.625150680541992
    7. '4' → logprob: -14.750150680541992
    8. '!=' → logprob: -15.625150680541992
    9. ' ==' → logprob: -16.500150680541992
    10. '(' → logprob: -16.500150680541992

Token 497: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15263953804969788
    2. '==' → logprob: -2.027639627456665
    3. ' !=' → logprob: -4.652639389038086
    4. '!=' → logprob: -8.027639389038086
    5. ':' → logprob: -10.152639389038086
    6. ' ' → logprob: -13.152639389038086
    7. ' >' → logprob: -13.152639389038086
    8. '=' → logprob: -13.527639389038086
    9. '>' → logprob: -13.652639389038086
    10. ')' → logprob: -13.777639389038086

Token 498: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045403506606817245
    2. '1' → logprob: -3.170403480529785
    3. ' ' → logprob: -6.045403480529785
    4. '2' → logprob: -11.295403480529785
    5. '==' → logprob: -11.420403480529785
    6. '=' → logprob: -12.545403480529785
    7. '```' → logprob: -13.732903480529785
    8. ' ==' → logprob: -14.482903480529785
    9. '   ' → logprob: -14.482903480529785
    10. 'continue' → logprob: -15.357903480529785

Token 499: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12699036300182343
    2. '1' → logprob: -2.12699031829834
    3. ' ' → logprob: -9.87699031829834
    4. '2' → logprob: -11.87699031829834
    5. '==' → logprob: -13.25199031829834
    6. '```' → logprob: -14.00199031829834
    7. '=' → logprob: -14.25199031829834
    8. 'continue' → logprob: -16.064491271972656
    9. '(' → logprob: -16.189491271972656
    10. '...' → logprob: -17.126991271972656

Token 500: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03107837773859501
    2. ':
' → logprob: -3.531078338623047
    3. ' and' → logprob: -6.656078338623047
    4. 'and' → logprob: -10.531078338623047
    5. ',' → logprob: -12.906078338623047
    6. '       ' → logprob: -13.031078338623047
    7. ':

' → logprob: -13.281078338623047
    8. '=' → logprob: -13.406078338623047
    9. '   ' → logprob: -13.531078338623047
    10. '           ' → logprob: -13.656078338623047

Token 501: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7654885649681091
    2. ' total' → logprob: -1.140488624572754
    3. ' current' → logprob: -1.890488624572754
    4. ' (' → logprob: -3.640488624572754
    5. ' input' → logprob: -4.515488624572754
    6. 'count' → logprob: -4.640488624572754
    7. '(total' → logprob: -5.265488624572754
    8. '(count' → logprob: -5.390488624572754
    9. 'total' → logprob: -6.015488624572754
    10. ' adjusted' → logprob: -6.640488624572754

Token 502: '_one' (ID: 26979)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.4783223271369934
    2. '_one' → logprob: -0.9783223271369934
    3. '_zero' → logprob: -5.478322505950928
    4. 'two' → logprob: -11.22832202911377
    5. '_three' → logprob: -11.47832202911377
    6. '```' → logprob: -12.10332202911377
    7. '_' → logprob: -12.22832202911377
    8. '_tw' → logprob: -12.35332202911377
    9. 'one' → logprob: -12.47832202911377
    10. '1' → logprob: -12.97832202911377

Token 503: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.434481680393219
    2. ' <' → logprob: -2.059481620788574
    3. ' >' → logprob: -2.559481620788574
    4. ' <=' → logprob: -2.934481620788574
    5. ' !=' → logprob: -3.434481620788574
    6. ' +' → logprob: -4.184481620788574
    7. '==' → logprob: -4.309481620788574
    8. ' *' → logprob: -4.684481620788574
    9. ' %' → logprob: -5.059481620788574
    10. ' >=' → logprob: -5.684481620788574

Token 504: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07316751033067703
    2. ' ' → logprob: -3.448167562484741
    3. 'count' → logprob: -4.198167324066162
    4. 'input' → logprob: -4.323167324066162
    5. 'total' → logprob: -5.198167324066162
    6. ' input' → logprob: -6.448167324066162
    7. ' total' → logprob: -6.823167324066162
    8. ' count' → logprob: -6.823167324066162
    9. '(' → logprob: -7.448167324066162
    10. '1' → logprob: -8.44816780090332

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051601145416498184
    2. 'count' → logprob: -3.5516011714935303
    3. 'input' → logprob: -4.051600933074951
    4. 'total' → logprob: -6.176600933074951
    5. ' ' → logprob: -6.801600933074951
    6. '(' → logprob: -7.801600933074951
    7. '(count' → logprob: -8.80160140991211
    8. '(input' → logprob: -8.92660140991211
    9. '1' → logprob: -9.17660140991211
    10. ' count' → logprob: -10.05160140991211

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04402625188231468
    2. ':
' → logprob: -3.2940261363983154
    3. ' and' → logprob: -5.4190263748168945
    4. '           ' → logprob: -6.6690263748168945
    5. '       ' → logprob: -8.919026374816895
    6. '   ' → logprob: -10.794026374816895
    7. ',' → logprob: -10.794026374816895
    8. '<|end|>' → logprob: -10.794026374816895
    9. 'and' → logprob: -10.919026374816895
    10. '               ' → logprob: -11.044026374816895

Token 507: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14563651382923126
    2. ':
' → logprob: -2.145636558532715
    3. '           ' → logprob: -4.395636558532715
    4. '       ' → logprob: -5.395636558532715
    5. '   ' → logprob: -6.645636558532715
    6. '               ' → logprob: -9.895636558532715
    7. '```' → logprob: -9.895636558532715
    8. ',' → logprob: -10.020636558532715
    9. ' and' → logprob: -10.270636558532715
    10. ' :' → logprob: -10.645636558532715

Token 508: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.22346006333827972
    2. 'current' (adapté à ' current') → logprob: -2.3484599590301514
    3. ' continue' → logprob: -2.5984599590301514
    4. '           ' → logprob: -4.5984601974487305
    5. 'continue' → logprob: -4.5984601974487305
    6. ' total' → logprob: -4.9734601974487305
    7. 'total' → logprob: -6.7234601974487305
    8. '               ' → logprob: -6.9734601974487305
    9. '   ' → logprob: -7.9734601974487305
    10. ' break' → logprob: -8.84846019744873

Token 509: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.5570885807392187e-05
    2. ' _' → logprob: -12.000015258789062
    3. '_total' → logprob: -13.000015258789062
    4. '   ' → logprob: -13.625015258789062
    5. '_' → logprob: -13.875015258789062
    6. '._' → logprob: -14.375015258789062
    7. ' ' → logprob: -15.000015258789062
    8. '_counts' → logprob: -15.000015258789062
    9. '_line' → logprob: -15.125015258789062
    10. ')_' → logprob: -15.125015258789062

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.433832585811615
    2. '=' → logprob: -1.1838326454162598
    3. ' +=' → logprob: -3.3088326454162598
    4. '+=' → logprob: -4.68383264541626
    5. '   ' → logprob: -11.058832168579102
    6. '           ' → logprob: -11.183832168579102
    7. ' *=' → logprob: -11.433832168579102
    8. '       ' → logprob: -11.433832168579102
    9. ' ' → logprob: -12.183832168579102
    10. '*=' → logprob: -12.308832168579102

Token 511: ' count' (ID: 3605)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.28327491879463196
    2. 'count' → logprob: -2.0332748889923096
    3. ' calc' → logprob: -2.7832748889923096
    4. '1' → logprob: -4.283275127410889
    5. ' count' → logprob: -4.658275127410889
    6. '0' → logprob: -4.908275127410889
    7. '(calc' → logprob: -5.033275127410889
    8. 'total' → logprob: -5.658275127410889
    9. '(' → logprob: -5.658275127410889
    10. 'factor' → logprob: -5.908275127410889

Token 512: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.39214223623275757
    2. '_two' → logprob: -1.1421422958374023
    3. '_one' → logprob: -5.392142295837402
    4. 'zero' → logprob: -7.642142295837402
    5. 'two' → logprob: -9.142142295837402
    6. 'Zero' → logprob: -10.767142295837402
    7. '++' → logprob: -11.142142295837402
    8. '_total' → logprob: -11.142142295837402
    9. '_three' → logprob: -11.392142295837402
    10. '+' → logprob: -11.517142295837402

Token 513: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4150148630142212
    2. '<|end|>' → logprob: -1.2900148630142212
    3. '%' → logprob: -3.5400147438049316
    4. ' %' → logprob: -4.290014743804932
    5. '
' → logprob: -5.040014743804932
    6. '   ' → logprob: -5.290014743804932
    7. ')' → logprob: -5.915014743804932
    8. ' *' → logprob: -6.415014743804932
    9. '<|end|>' → logprob: -6.790014743804932
    10. '        
' → logprob: -6.915014743804932

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5315728187561035
    2. ')' → logprob: -1.7815728187561035
    3. '   ' → logprob: -1.7815728187561035
    4. '
' → logprob: -1.9065728187561035
    5. '<|end|>' → logprob: -2.1565728187561035
    6. ' +=' → logprob: -2.6565728187561035
    7. '%' → logprob: -3.7815728187561035
    8. ':' → logprob: -3.9065728187561035
    9. '*' → logprob: -4.7815728187561035
    10. '```' → logprob: -5.0315728187561035

Token 515: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.9256289005279541
    2. ' total' → logprob: -1.425628900527954
    3. '   ' → logprob: -1.800628900527954
    4. '       ' → logprob: -1.925628900527954
    5. '
' → logprob: -3.675628900527954
    6. 'current' → logprob: -4.800628662109375
    7. '           ' → logprob: -5.175628662109375
    8. ' current' → logprob: -5.675628662109375
    9. '	total' → logprob: -5.925628662109375
    10. ')' → logprob: -6.550628662109375

Token 516: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.375000953674316
    3. 'count' → logprob: -15.750000953674316
    4. '+=' → logprob: -16.75
    5. '_total' → logprob: -16.75
    6. 'Count' → logprob: -17.0
    7. '_counts' → logprob: -17.125
    8. '_co' → logprob: -17.125
    9. '_c' → logprob: -17.75
    10. '_sum' → logprob: -18.125

Token 517: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17981046438217163
    2. '+=' → logprob: -1.8048105239868164
    3. '=' → logprob: -10.804810523986816
    4. ']+=' → logprob: -11.304810523986816
    5. '```' → logprob: -11.554810523986816
    6. '   ' → logprob: -11.554810523986816
    7. ' =' → logprob: -12.679810523986816
    8. '	' → logprob: -12.929810523986816
    9. '+' → logprob: -13.554810523986816
    10. '[' → logprob: -13.679810523986816

Token 518: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.04864664003252983
    2. ' (' → logprob: -3.0486466884613037
    3. '(' → logprob: -10.173646926879883
    4. '(current' → logprob: -11.298646926879883
    5. '(t' → logprob: -12.798646926879883
    6. '(max' → logprob: -13.173646926879883
    7. '(full' → logprob: -14.423646926879883
    8. '(tmp' → logprob: -15.048646926879883
    9. '(raw' → logprob: -15.173646926879883
    10. ' ' → logprob: -15.298646926879883

Token 519: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0003631137660704553
    2. ' total' → logprob: -8.00036334991455
    3. '(total' → logprob: -10.50036334991455
    4. '   ' → logprob: -16.625362396240234
    5. '	total' → logprob: -18.250362396240234
    6. '       ' → logprob: -19.000362396240234
    7. '           ' → logprob: -19.500362396240234
    8. 'Total' → logprob: -20.000362396240234
    9. '
' → logprob: -20.125362396240234
    10. ',total' → logprob: -20.500362396240234

Token 520: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.4121114822482923e-06
    2. '_distance' → logprob: -12.750003814697266
    3. 'count' → logprob: -14.500003814697266
    4. '_' → logprob: -17.250003814697266
    5. 'Count' → logprob: -17.500003814697266
    6. '_c' → logprob: -19.625003814697266
    7. '_COUNT' → logprob: -20.000003814697266
    8. '+' → logprob: -20.375003814697266
    9. ' _' → logprob: -20.500003814697266
    10. '_co' → logprob: -20.500003814697266

Token 521: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029750484973192215
    2. '+' → logprob: -3.5297505855560303
    3. ' +
' → logprob: -17.40475082397461
    4. ' ' → logprob: -17.77975082397461
    5. '＋' → logprob: -18.27975082397461
    6. ' ' → logprob: -18.27975082397461
    7. ')' → logprob: -19.27975082397461
    8. ' +
' → logprob: -19.90475082397461
    9. '   ' → logprob: -20.15475082397461
    10. '```' → logprob: -20.15475082397461

Token 522: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.061967797577381134
    2. 'current' → logprob: -2.8119678497314453
    3. '(current' → logprob: -16.186967849731445
    4. '	current' → logprob: -17.936967849731445
    5. '$current' → logprob: -18.561967849731445
    6. '_current' → logprob: -18.936967849731445
    7. '1' → logprob: -19.061967849731445
    8. '.current' → logprob: -19.311967849731445
    9. '=current' → logprob: -20.061967849731445
    10. 'Current' → logprob: -20.061967849731445

Token 523: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.875
    3. ' _' → logprob: -17.875
    4. '_distance' → logprob: -18.125
    5. 'Count' → logprob: -18.5
    6. 'count' → logprob: -18.625
    7. '_co' → logprob: -19.75
    8. '_c' → logprob: -19.75
    9. '_COUNT' → logprob: -20.875
    10. ')_' → logprob: -21.0

Token 524: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003920655872207135
    2. ' )' → logprob: -7.875391960144043
    3. ')%' → logprob: -11.500391960144043
    4. '   ' → logprob: -13.750391960144043
    5. '       ' → logprob: -14.500391960144043
    6. '    ' → logprob: -16.62539291381836
    7. ' ' → logprob: -16.87539291381836
    8. '%' → logprob: -17.87539291381836
    9. '）' → logprob: -17.87539291381836
    10. '           ' → logprob: -18.00039291381836

Token 525: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0052406336180865765
    2. '%' → logprob: -5.255240440368652
    3. ')' → logprob: -12.755240440368652
    4. '
' → logprob: -13.505240440368652
    5. '%n' → logprob: -14.505240440368652
    6. '%c' → logprob: -15.005240440368652
    7. ' ' → logprob: -15.130240440368652
    8. ' %=' → logprob: -15.380240440368652
    9. '%s' → logprob: -15.630240440368652
    10. '%d' → logprob: -15.755240440368652

Token 526: ' modulus' (ID: 149464)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.1008713702030946e-06
    2. ' modulus' → logprob: -13.250001907348633
    3. '(mod' → logprob: -15.125001907348633
    4. '998' → logprob: -17.500001907348633
    5. ' mod' → logprob: -18.500001907348633
    6. 'modifier' → logprob: -18.625001907348633
    7. '	mod' → logprob: -19.375001907348633
    8. 'MOD' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. 'module' → logprob: -20.750001907348633

Token 527: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.22581520676612854
    2. '_' → logprob: -1.7258151769638062
    3. 'print' → logprob: -5.475815296173096
    4. '```' → logprob: -5.475815296173096
    5. 'value' → logprob: -5.975815296173096
    6. '_
' → logprob: -6.100815296173096
    7. '_return' → logprob: -6.600815296173096
    8. ')' → logprob: -6.725815296173096
    9. '<|end|>' → logprob: -6.850815296173096
    10. 'return' → logprob: -7.100815296173096

Token 528: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.02976517751812935
    2. '(' → logprob: -3.5297651290893555
    3. '("("' → logprob: -11.654765129089355
    4. '('' → logprob: -12.779765129089355
    5. 'total' → logprob: -13.029765129089355
    6. '(f' → logprob: -15.404765129089355
    7. '(final' → logprob: -15.529765129089355
    8. '()' → logprob: -16.279766082763672
    9. '(sum' → logprob: -16.529766082763672
    10. ',total' → logprob: -16.779766082763672

Token 531: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -12.500009536743164
    3. '_counts' → logprob: -12.750009536743164
    4. ')_' → logprob: -13.500009536743164
    5. ' _' → logprob: -14.500009536743164
    6. '_counter' → logprob: -14.875009536743164
    7. '_total' → logprob: -15.125009536743164
    8. '_co' → logprob: -15.250009536743164
    9. '_code' → logprob: -16.250009536743164
    10. '_cont' → logprob: -16.625009536743164

Token 532: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. '())' → logprob: -13.250004768371582
    3. '()' → logprob: -13.625004768371582
    4. ' )' → logprob: -13.750004768371582
    5. ')
' → logprob: -14.750004768371582
    6. '(' → logprob: -16.0000057220459
    7. '))' → logprob: -16.3750057220459
    8. '**' → logprob: -16.5000057220459
    9. '```' → logprob: -16.5000057220459
    10. ')`' → logprob: -17.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 530
Tokens correctement prédits (1ère position, stricte): 276
Tokens correctement prédits (1ère position, avec adaptation): 277
Tokens correctement prédits (top 10): 481
Précision stricte (1ère position): 52.08%
Précision adaptée (1ère position): 52.26%
Précision (top 10): 90.75%
================================================================================
