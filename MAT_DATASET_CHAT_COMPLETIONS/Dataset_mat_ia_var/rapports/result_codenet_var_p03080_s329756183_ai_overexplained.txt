================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur d'entrer une valeur entière (le nombre de caractères)
# La fonction input() lit une ligne saisie par l'utilisateur sous forme de chaîne de caractères.
# La fonction int() convertit cette chaîne en un entier.
# La valeur entière ainsi obtenue est stockée dans la variable N.
N = int(input())

# Demande à l'utilisateur d'entrer une chaîne de caractères.
# La chaîne saisie est stockée dans la variable S.
S = input()

# Initialise une variable R à 0.
# Cette variable va servir à compter le nombre de caractères 'R' dans la chaîne S.
R = 0

# Initialise une variable B à 0.
# Cette variable va servir à compter le nombre de caractères autres que 'R' (dans ce cas, on suppose 'B')
B = 0

# Commence une boucle for qui va parcourir chaque caractère individuel dans la chaîne S.
# La variable 'i' prendra successivement la valeur de chaque caractère.
for i in S:
    # Vérifie si le caractère actuel 'i' est égal à la lettre majuscule 'R'
    if i == "R":
        # Si c'est le cas, cela signifie que le caractère est un 'R'
        # On incrémente donc la variable R de 1 (R = R + 1)
        R += 1
    else:
        # Si ce n'est pas un 'R', alors on considère que c'est un 'B'
        # On incrémente donc la variable B de 1 (B = B + 1)
        B += 1

# Après la boucle, on compare les valeurs des variables R et B.
# Si le nombre de 'R' (stocké dans R) est strictement supérieur au nombre de 'B' (stocké dans B)
if R > B:
    # On affiche "Yes" à l'écran pour indiquer que les 'R' sont majoritaires.
    print("Yes")
else:
    # Si le nombre de 'B' est supérieur ou égal au nombre de 'R', on affiche "No".
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00870274007320404
    2. ' l' → logprob: -4.883702754974365
    3. 'user' → logprob: -7.633702754974365
    4. 'util' → logprob: -8.508702278137207
    5. '#' → logprob: -9.258702278137207
    6. 'la' → logprob: -10.133702278137207
    7. ''' → logprob: -10.258702278137207
    8. '_' → logprob: -10.758702278137207
    9. '`' → logprob: -10.758702278137207
    10. '```' → logprob: -10.758702278137207

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13838054239749908
    2. 'u' → logprob: -2.763380527496338
    3. ''' → logprob: -3.263380527496338
    4. 'util' → logprob: -4.763380527496338
    5. 'a' → logprob: -5.013380527496338
    6. '’utilisateur' → logprob: -5.138380527496338
    7. ' utilisateur' → logprob: -5.513380527496338
    8. 'e' → logprob: -7.638380527496338
    9. ''user' → logprob: -7.763380527496338
    10. '_' → logprob: -7.888380527496338

Token 6: ' d' (ID: 272)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5893104076385498
    2. ''' → logprob: -1.9643104076385498
    3. 'entr' → logprob: -1.9643104076385498
    4. 'entrée' → logprob: -2.71431040763855
    5. 'ent' → logprob: -3.71431040763855
    6. 'é' → logprob: -3.83931040763855
    7. ''entrée' → logprob: -3.96431040763855
    8. ''ent' → logprob: -4.714310646057129
    9. 'a' → logprob: -4.964310646057129
    10. '```' → logprob: -5.839310646057129

Token 8: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.9196633100509644
    2. 'entrée' → logprob: -0.9196633100509644
    3. 'ent' → logprob: -1.6696633100509644
    4. 'input' → logprob: -5.419663429260254
    5. 's' → logprob: -5.419663429260254
    6. 'entre' → logprob: -7.044663429260254
    7. 'e' → logprob: -7.294663429260254
    8. 'être' → logprob: -7.544663429260254
    9. 'avoir' → logprob: -7.919663429260254
    10. 'é' → logprob: -8.044663429260254

Token 9: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00011558275582501665
    2. 'éer' → logprob: -9.500115394592285
    3. 'é' → logprob: -11.250115394592285
    4. 'e' → logprob: -12.250115394592285
    5. 'erer' → logprob: -12.375115394592285
    6. ''er' → logprob: -12.750115394592285
    7. 'rer' → logprob: -13.000115394592285
    8. 'ée' → logprob: -13.000115394592285
    9. 'érer' → logprob: -13.000115394592285
    10. 'ér' → logprob: -13.250115394592285

Token 10: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09051872789859772
    2. ' un' → logprob: -3.2155187129974365
    3. ''' → logprob: -4.090518951416016
    4. ' une' → logprob: -4.590518951416016
    5. '_' → logprob: -4.840518951416016
    6. 'u' → logprob: -5.965518951416016
    7. 'une' → logprob: -6.715518951416016
    8. ' u' → logprob: -6.965518951416016
    9. 'un' → logprob: -6.965518951416016
    10. ''un' → logprob: -6.965518951416016

Token 11: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08467727154493332
    2. ' chaîne' → logprob: -2.709677219390869
    3. 'chaine' → logprob: -5.459677219390869
    4. ' phrase' → logprob: -5.584677219390869
    5. ' chaine' → logprob: -5.959677219390869
    6. ' ligne' → logprob: -7.084677219390869
    7. ' espace' → logprob: -7.834677219390869
    8. 'phrase' → logprob: -7.959677219390869
    9. ' valeur' → logprob: -8.084677696228027
    10. '   ' → logprob: -8.084677696228027

Token 12: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33459028601646423
    2. 'value' → logprob: -2.959590196609497
    3. 'i' → logprob: -3.084590196609497
    4. '_' → logprob: -3.459590196609497
    5. 'x' → logprob: -3.459590196609497
    6. 'user' → logprob: -3.709590196609497
    7. 'n' → logprob: -4.084590435028076
    8. 'input' → logprob: -4.209590435028076
    9. '\n' → logprob: -4.334590435028076
    10. '`' → logprob: -4.459590435028076

Token 13: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7639632225036621
    2. 'i' → logprob: -1.513963222503662
    3. 'v' → logprob: -1.513963222503662
    4. 'x' → logprob: -3.263963222503662
    5. '\n' → logprob: -4.763963222503662
    6. 'value' → logprob: -5.013963222503662
    7. 'input' → logprob: -5.013963222503662
    8. 'e' → logprob: -5.263963222503662
    9. '```' → logprob: -5.263963222503662
    10. '\' → logprob: -5.388963222503662

Token 14: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007060954347252846
    2. ' )' → logprob: -5.507061004638672
    3. 'n' → logprob: -6.757061004638672
    4. '`)' → logprob: -7.882061004638672
    5. '):' → logprob: -8.132061004638672
    6. 'ent' → logprob: -8.132061004638672
    7. '')' → logprob: -8.632061004638672
    8. '")' → logprob: -8.757061004638672
    9. ':' → logprob: -8.757061004638672
    10. 'a' → logprob: -9.507061004638672

Token 15: ' nombre' (ID: 9733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.260161280632019
    2. 'n' → logprob: -1.635161280632019
    3. ' ' → logprob: -2.0101613998413086
    4. 'nombre' → logprob: -2.0101613998413086
    5. ' nombre' → logprob: -2.2601613998413086
    6. ' )' → logprob: -2.3851613998413086
    7. 's' → logprob: -3.8851613998413086
    8. ' entier' → logprob: -4.635161399841309
    9. 'a' → logprob: -5.510161399841309
    10. 'ent' → logprob: -5.760161399841309

Token 16: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7789972424507141
    2. ' ' → logprob: -1.5289971828460693
    3. '_' → logprob: -1.7789971828460693
    4. ' )' → logprob: -1.9039971828460693
    5. 's' → logprob: -5.403997421264648
    6. '_)' → logprob: -7.528997421264648
    7. '_s' → logprob: -8.028997421264648
    8. ''' → logprob: -9.028997421264648
    9. ' _' → logprob: -9.028997421264648
    10. ' ' → logprob: -9.403997421264648

Token 17: ' caractères' (ID: 183106)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.314037799835205
    2. ' ' → logprob: -1.564037799835205
    3. 'car' → logprob: -2.189037799835205
    4. 's' → logprob: -2.314037799835205
    5. ')' → logprob: -2.439037799835205
    6. ' caractères' → logprob: -2.439037799835205
    7. ' )' → logprob: -3.814037799835205
    8. '_car' → logprob: -3.814037799835205
    9. 'élé' → logprob: -3.939037799835205
    10. 'é' → logprob: -4.439037799835205

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14793334901332855
    2. ' )' → logprob: -2.0229332447052
    3. ' à' → logprob: -5.897933483123779
    4. 's' → logprob: -6.397933483123779
    5. ' ' → logprob: -7.772933483123779
    6. ')s' → logprob: -9.272933006286621
    7. 'à' → logprob: -9.522933006286621
    8. ' a' → logprob: -10.647933006286621
    9. ' s' → logprob: -10.897933006286621
    10. ' que' → logprob: -10.897933006286621

Token 19: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07989642024040222
    2. 'i' → logprob: -3.0798964500427246
    3. 'v' → logprob: -5.079896450042725
    4. ' ' → logprob: -5.579896450042725
    5. '_' → logprob: -5.704896450042725
    6. 'e' → logprob: -5.829896450042725
    7. 'nombre' → logprob: -5.829896450042725
    8. 's' → logprob: -6.329896450042725
    9. 'entr' → logprob: -6.454896450042725
    10. 'x' → logprob: -6.829896450042725

Token 20: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04774579405784607
    2. 'nombre' → logprob: -4.422745704650879
    3. 'v' → logprob: -4.672745704650879
    4. 'i' → logprob: -5.297745704650879
    5. 'val' → logprob: -5.297745704650879
    6. 'input' → logprob: -5.547745704650879
    7. '#' → logprob: -5.672745704650879
    8. 'value' → logprob: -6.297745704650879
    9. 'ent' → logprob: -7.172745704650879
    10. 'entr' → logprob: -7.297745704650879

Token 21: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8451347351074219
    2. 'n' → logprob: -1.7201347351074219
    3. 's' → logprob: -1.8451347351074219
    4. 'val' → logprob: -2.470134735107422
    5. 'v' → logprob: -3.095134735107422
    6. ' n' → logprob: -4.095134735107422
    7. ' #' → logprob: -4.595134735107422
    8. ' ' → logprob: -4.845134735107422
    9. ' valeur' → logprob: -4.845134735107422
    10. '_' → logprob: -4.970134735107422

Token 22: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1192922592163086
    2. 'input' → logprob: -2.9942922592163086
    3. ' input' → logprob: -3.1192922592163086
    4. ' def' → logprob: -4.744292259216309
    5. 's' → logprob: -4.994292259216309
    6. 'd' → logprob: -6.744292259216309
    7. 'len' → logprob: -7.369292259216309
    8. 'n' → logprob: -8.369292259216309
    9. ' len' → logprob: -8.494292259216309
    10. ' d' → logprob: -9.619292259216309

Token 23: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006625185487791896
    2. '('' → logprob: -8.250662803649902
    3. '()' → logprob: -8.875662803649902
    4. ')' → logprob: -9.875662803649902
    5. '("' → logprob: -10.000662803649902
    6. '(
' → logprob: -10.125662803649902
    7. '_' → logprob: -10.125662803649902
    8. 's' → logprob: -10.375662803649902
    9. ' (' → logprob: -10.875662803649902
    10. '#' → logprob: -12.250662803649902

Token 24: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23458994925022125
    2. ' ' → logprob: -1.73458993434906
    3. '_' → logprob: -4.98459005355835
    4. ')' → logprob: -5.10959005355835
    5. 's' → logprob: -5.35959005355835
    6. ' (' → logprob: -5.48459005355835
    7. '.' → logprob: -5.98459005355835
    8. '#' → logprob: -6.35959005355835
    9. ',' → logprob: -6.35959005355835
    10. ' )' → logprob: -7.10959005355835

Token 25: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20655669271945953
    2. ' une' → logprob: -2.081556797027588
    3. ' l' → logprob: -3.581556797027588
    4. ' la' → logprob: -3.831556797027588
    5. ' un' → logprob: -5.581556797027588
    6. '  ' → logprob: -6.331556797027588
    7. '()' → logprob: -6.831556797027588
    8. ' '' → logprob: -7.081556797027588
    9. 's' → logprob: -7.456556797027588
    10. ' )' → logprob: -7.831556797027588

Token 26: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.04602503404021263
    2. ' chaine' → logprob: -3.921025037765503
    3. ' ' → logprob: -4.546024799346924
    4. 'chaine' → logprob: -5.546024799346924
    5. ' valeur' → logprob: -5.796024799346924
    6. ' ligne' → logprob: -6.046024799346924
    7. ' string' → logprob: -6.421024799346924
    8. ' entrée' → logprob: -6.796024799346924
    9. 'entrée' → logprob: -7.171024799346924
    10. ' entr' → logprob: -8.421025276184082

Token 27: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5631963610649109
    2. '_' → logprob: -1.4381964206695557
    3. 'n' → logprob: -3.0631964206695557
    4. '#' → logprob: -3.1881964206695557
    5. ',' → logprob: -3.6881964206695557
    6. ')' → logprob: -4.313196182250977
    7. '.' → logprob: -4.313196182250977
    8. '```' → logprob: -5.063196182250977
    9. 's' → logprob: -5.313196182250977
    10. '\' → logprob: -5.313196182250977

Token 28: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003247943241149187
    2. 'ie' → logprob: -5.8782477378845215
    3. 'es' → logprob: -8.25324821472168
    4. '```' → logprob: -10.12824821472168
    5. '#' → logprob: -10.37824821472168
    6. 's' → logprob: -10.50324821472168
    7. 'r' → logprob: -10.87824821472168
    8. 'i' → logprob: -11.25324821472168
    9. 'sie' → logprob: -11.37824821472168
    10. 'd' → logprob: -11.50324821472168

Token 29: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44177910685539246
    2. ',' → logprob: -1.6917791366577148
    3. ' ,' → logprob: -2.941779136657715
    4. ' )' → logprob: -3.941779136657715
    5. '_' → logprob: -4.066779136657715
    6. '.' → logprob: -4.066779136657715
    7. ')' → logprob: -4.566779136657715
    8. ' =' → logprob: -4.691779136657715
    9. ' d' → logprob: -4.816779136657715
    10. 's' → logprob: -4.941779136657715

Token 30: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03905820846557617
    2. ' l' → logprob: -3.289058208465576
    3. '	l' → logprob: -7.039058208465576
    4. ' ' → logprob: -10.289058685302734
    5. 'util' → logprob: -10.414058685302734
    6. ' ' → logprob: -11.414058685302734
    7. 'user' → logprob: -11.789058685302734
    8. 'lot' → logprob: -12.039058685302734
    9. 'la' → logprob: -12.289058685302734
    10. 'def' → logprob: -12.414058685302734

Token 31: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.02005758136510849
    2. ''' → logprob: -4.520057678222656
    3. ''util' → logprob: -5.770057678222656
    4. 'u' → logprob: -6.020057678222656
    5. ''u' → logprob: -6.145057678222656
    6. ''us' → logprob: -7.270057678222656
    7. '’utilisateur' → logprob: -8.020057678222656
    8. ''user' → logprob: -8.770057678222656
    9. ''use' → logprob: -11.020057678222656
    10. ''#' → logprob: -11.145057678222656

Token 32: ' sous' (ID: 14487)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04526839405298233
    2. '#' → logprob: -4.420268535614014
    3. 'nombre' → logprob: -5.045268535614014
    4. 'v' → logprob: -5.295268535614014
    5. 'i' → logprob: -5.295268535614014
    6. ',' → logprob: -5.920268535614014
    7. 'x' → logprob: -5.920268535614014
    8. ' ' → logprob: -6.670268535614014
    9. 'val' → logprob: -6.920268535614014
    10. '```' → logprob: -7.045268535614014

Token 33: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.03863772377371788
    2. 'forme' → logprob: -3.663637638092041
    3. 'form' → logprob: -4.663637638092041
    4. 'chaine' → logprob: -6.163637638092041
    5. ' form' → logprob: -8.4136381149292
    6. 'forma' → logprob: -8.7886381149292
    7. 'la' → logprob: -9.0386381149292
    8. 'ent' → logprob: -9.6636381149292
    9. ' la' → logprob: -9.9136381149292
    10. 'une' → logprob: -11.2886381149292

Token 34: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.010846192948520184
    2. 'd' → logprob: -4.635846138000488
    3. ' de' → logprob: -7.260846138000488
    4. 'de' → logprob: -8.635846138000488
    5. 's' → logprob: -8.760846138000488
    6. 'def' → logprob: -11.885846138000488
    7. '<|end|>' → logprob: -11.885846138000488
    8. ')' → logprob: -12.135846138000488
    9. ' ' → logprob: -12.260846138000488
    10. 'n' → logprob: -12.385846138000488

Token 35: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.7378607988357544
    2. 'cha' → logprob: -1.2378607988357544
    3. ' chaîne' → logprob: -1.4878607988357544
    4. ' chaine' → logprob: -5.737860679626465
    5. 'texte' → logprob: -6.737860679626465
    6. 'string' → logprob: -6.862860679626465
    7. 'str' → logprob: -7.862860679626465
    8. ' string' → logprob: -10.237860679626465
    9. ' chaînes' → logprob: -10.362860679626465
    10. 'une' → logprob: -10.612860679626465

Token 36: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12251891940832138
    2. '#' → logprob: -3.372519016265869
    3. '\n' → logprob: -3.747519016265869
    4. ',' → logprob: -4.622519016265869
    5. '.' → logprob: -4.622519016265869
    6. '\' → logprob: -4.872519016265869
    7. ' 
' → logprob: -5.122519016265869
    8. '
' → logprob: -5.497519016265869
    9. 's' → logprob: -5.497519016265869
    10. ')' → logprob: -5.622519016265869

Token 37: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.051701903343200684
    2. ' caractères' → logprob: -3.4267020225524902
    3. 'texte' → logprob: -4.05170202255249
    4. ' caract' → logprob: -8.676701545715332
    5. 'chaine' → logprob: -9.051701545715332
    6. ' caracteres' → logprob: -9.426701545715332
    7. 'cha' → logprob: -10.301701545715332
    8. '#' → logprob: -10.676701545715332
    9. ' texte' → logprob: -11.051701545715332
    10. ' caractère' → logprob: -11.551701545715332

Token 38: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02510717883706093
    2. 'v' → logprob: -4.275107383728027
    3. '#' → logprob: -5.775107383728027
    4. 'i' → logprob: -6.150107383728027
    5. 'x' → logprob: -6.525107383728027
    6. 'nombre' → logprob: -6.775107383728027
    7. ',' → logprob: -7.525107383728027
    8. 'val' → logprob: -7.650107383728027
    9. 'e' → logprob: -8.025107383728027
    10. '```' → logprob: -8.275107383728027

Token 39: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027286911383271217
    2. 'v' → logprob: -4.277287006378174
    3. 'i' → logprob: -5.277287006378174
    4. 'x' → logprob: -6.152287006378174
    5. '#' → logprob: -6.277287006378174
    6. 'nombre' → logprob: -6.652287006378174
    7. 'e' → logprob: -8.277286529541016
    8. 'val' → logprob: -8.277286529541016
    9. 'r' → logprob: -8.277286529541016
    10. '\' → logprob: -8.277286529541016

Token 40: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10660133510828018
    2. '#' → logprob: -2.8566012382507324
    3. 'v' → logprob: -3.6066012382507324
    4. 'i' → logprob: -4.981601238250732
    5. 'val' → logprob: -5.981601238250732
    6. 'x' → logprob: -6.606601238250732
    7. 'nombre' → logprob: -6.731601238250732
    8. 'value' → logprob: -7.231601238250732
    9. 't' → logprob: -7.731601238250732
    10. 's' → logprob: -7.731601238250732

Token 41: ' fonction' (ID: 17610)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2390451431274414
    2. 'val' → logprob: -1.2390451431274414
    3. 'n' → logprob: -1.7390451431274414
    4. 'v' → logprob: -2.1140451431274414
    5. ' ' → logprob: -3.3640451431274414
    6. ' #' → logprob: -3.8640451431274414
    7. ' valeur' → logprob: -3.8640451431274414
    8. 's' → logprob: -4.114045143127441
    9. 'l' → logprob: -5.364045143127441
    10. 'r' → logprob: -5.614045143127441

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9039207696914673
    2. ' i' → logprob: -1.4039207696914673
    3. 'int' → logprob: -2.0289206504821777
    4. ' input' → logprob: -2.6539206504821777
    5. ' ' → logprob: -3.0289206504821777
    6. 'i' → logprob: -3.5289206504821777
    7. 'n' → logprob: -4.153920650482178
    8. ' =' → logprob: -4.528920650482178
    9. 'input' → logprob: -4.903920650482178
    10. ' n' → logprob: -5.028920650482178

Token 43: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.6696149840718135e-05
    2. '()' → logprob: -10.125056266784668
    3. ' (' → logprob: -12.250056266784668
    4. '(
' → logprob: -12.625056266784668
    5. '('' → logprob: -12.750056266784668
    6. 's' → logprob: -14.250056266784668
    7. '("""' → logprob: -14.250056266784668
    8. '(convert' → logprob: -14.750056266784668
    9. '("("' → logprob: -14.750056266784668
    10. ')' → logprob: -14.875056266784668

Token 44: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018293341621756554
    2. ' convert' → logprob: -5.018293380737305
    3. ' (' → logprob: -5.518293380737305
    4. ' ' → logprob: -5.518293380737305
    5. ' transforme' → logprob: -6.643293380737305
    6. 'convert' → logprob: -7.143293380737305
    7. ' converts' → logprob: -7.518293380737305
    8. ' convertir' → logprob: -8.268293380737305
    9. '(convert' → logprob: -8.518293380737305
    10. '()' → logprob: -9.393293380737305

Token 45: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0005333751323632896
    2. ' it' → logprob: -8.250533103942871
    3. 'i' → logprob: -8.375533103942871
    4. ' ' → logprob: -11.750533103942871
    5. '   ' → logprob: -12.125533103942871
    6. '```' → logprob: -12.125533103942871
    7. '(' → logprob: -12.875533103942871
    8. '

' → logprob: -13.250533103942871
    9. 'ît' → logprob: -13.250533103942871
    10. '	it' → logprob: -13.375533103942871

Token 46: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3275352120399475
    2. ' ' → logprob: -1.3275351524353027
    3. ' (' → logprob: -4.702535152435303
    4. '<|end|>' → logprob: -5.702535152435303
    5. ' ' → logprob: -7.952535152435303
    6. '  ' → logprob: -8.202535629272461
    7. ')' → logprob: -8.577535629272461
    8. ' la' → logprob: -9.202535629272461
    9. '(space' → logprob: -9.327535629272461
    10. '()' → logprob: -9.452535629272461

Token 47: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012224589474499226
    2. ' chaîne' → logprob: -5.0122246742248535
    3. ' espace' → logprob: -5.7622246742248535
    4. '  ' → logprob: -7.2622246742248535
    5. ' space' → logprob: -8.012224197387695
    6. ' valeur' → logprob: -8.762224197387695
    7. ' )' → logprob: -8.762224197387695
    8. ' (' → logprob: -9.012224197387695
    9. 'space' → logprob: -9.137224197387695
    10. '(' → logprob: -9.262224197387695

Token 48: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017568140756338835
    2. '<|end|>' → logprob: -8.00175666809082
    3. ' (' → logprob: -8.12675666809082
    4. 's' → logprob: -8.37675666809082
    5. ' ' → logprob: -8.37675666809082
    6. ')' → logprob: -8.37675666809082
    7. '(
' → logprob: -9.25175666809082
    8. '()' → logprob: -10.00175666809082
    9. '#' → logprob: -10.25175666809082
    10. ',' → logprob: -10.37675666809082

Token 49: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1832306832075119
    2. ' ' → logprob: -1.8082306385040283
    3. ' entier' → logprob: -6.183230876922607
    4. 'un' → logprob: -7.683230876922607
    5. ' ' → logprob: -8.05823040008545
    6. ' une' → logprob: -8.80823040008545
    7. ' espace' → logprob: -8.80823040008545
    8. ' nombre' → logprob: -9.05823040008545
    9. '  ' → logprob: -9.68323040008545
    10. 'ent' → logprob: -10.43323040008545

Token 50: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.8586319088935852
    2. ' espace' → logprob: -1.1086318492889404
    3. ' nombre' → logprob: -1.7336318492889404
    4. ' ' → logprob: -2.7336318492889404
    5. 'ent' → logprob: -6.4836320877075195
    6. 'nombre' → logprob: -7.4836320877075195
    7. 'e' → logprob: -7.9836320877075195
    8. ' ent' → logprob: -8.10863208770752
    9. 'es' → logprob: -8.23363208770752
    10. ' ' → logprob: -8.35863208770752

Token 51: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13406763970851898
    2. '\n' → logprob: -3.5090675354003906
    3. '(' → logprob: -3.8840675354003906
    4. ',' → logprob: -4.509067535400391
    5. '\' → logprob: -4.509067535400391
    6. '#' → logprob: -4.509067535400391
    7. '.' → logprob: -4.884067535400391
    8. ')' → logprob: -5.259067535400391
    9. '```' → logprob: -5.259067535400391
    10. 'i' → logprob: -5.634067535400391

Token 52: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.020480221137404442
    2. 'v' → logprob: -5.020480155944824
    3. 'nombre' → logprob: -5.770480155944824
    4. 'i' → logprob: -6.020480155944824
    5. 'x' → logprob: -6.145480155944824
    6. '#' → logprob: -6.145480155944824
    7. '\n' → logprob: -7.020480155944824
    8. '\' → logprob: -7.895480155944824
    9. '```' → logprob: -7.895480155944824
    10. 'val' → logprob: -8.020480155944824

Token 53: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009094424545764923
    2. 'v' → logprob: -5.50909423828125
    3. '#' → logprob: -6.63409423828125
    4. 'nombre' → logprob: -6.63409423828125
    5. 'val' → logprob: -7.13409423828125
    6. 'x' → logprob: -7.88409423828125
    7. 'i' → logprob: -8.25909423828125
    8. 'value' → logprob: -8.63409423828125
    9. 't' → logprob: -9.25909423828125
    10. 'r' → logprob: -9.38409423828125

Token 54: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14406301081180573
    2. 'n' → logprob: -3.2690629959106445
    3. ' n' → logprob: -4.0190629959106445
    4. ' valeur' → logprob: -4.0190629959106445
    5. '_' → logprob: -4.1440629959106445
    6. ' nombre' → logprob: -5.1440629959106445
    7. 'nombre' → logprob: -5.2690629959106445
    8. 's' → logprob: -5.3940629959106445
    9. 'space' → logprob: -5.5190629959106445
    10. 'val' → logprob: -5.5190629959106445

Token 55: ' entière' (ID: 61583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03448125720024109
    2. '_' → logprob: -3.5344812870025635
    3. ' _' → logprob: -6.409481048583984
    4. ' =' → logprob: -7.034481048583984
    5. 's' → logprob: -7.784481048583984
    6. ' )' → logprob: -7.784481048583984
    7. ' n' → logprob: -8.159481048583984
    8. ' d' → logprob: -8.784481048583984
    9. 'n' → logprob: -8.909481048583984
    10. ' a' → logprob: -9.034481048583984

Token 56: ' ainsi' (ID: 16371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016458243131637573
    2. 'n' → logprob: -5.016458034515381
    3. 's' → logprob: -6.016458034515381
    4. '_' → logprob: -6.016458034515381
    5. ' n' → logprob: -6.266458034515381
    6. ' )' → logprob: -6.891458034515381
    7. ' =' → logprob: -7.391458034515381
    8. ')' → logprob: -8.266458511352539
    9. 'nombre' → logprob: -8.391458511352539
    10. 'a' → logprob: -9.016458511352539

Token 57: ' obten' (ID: 28150)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.27444231510162354
    2. ' ' → logprob: -2.524442195892334
    3. 'stock' → logprob: -2.774442195892334
    4. 'r' → logprob: -4.024442195892334
    5. ' obten' → logprob: -4.274442195892334
    6. 's' → logprob: -4.399442195892334
    7. ' récup' → logprob: -5.524442195892334
    8. ' sais' → logprob: -5.649442195892334
    9. ' demand' → logprob: -5.649442195892334
    10. 'entr' → logprob: -5.649442195892334

Token 58: 'ue' (ID: 466)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7163246273994446
    2. 'ue' → logprob: -0.7163246273994446
    3. 'enue' → logprob: -4.091324806213379
    4. 'u' → logprob: -5.966324806213379
    5. 'en' → logprob: -6.841324806213379
    6. 'ient' → logprob: -6.966324806213379
    7. 'ie' → logprob: -7.091324806213379
    8. 'ent' → logprob: -8.216324806213379
    9. 'i' → logprob: -9.341324806213379
    10. 'a' → logprob: -9.466324806213379

Token 59: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.055887896567583084
    2. 'n' → logprob: -3.4308879375457764
    3. 's' → logprob: -4.930887699127197
    4. ',' → logprob: -6.055887699127197
    5. ' )' → logprob: -6.180887699127197
    6. ' n' → logprob: -6.305887699127197
    7. '_' → logprob: -6.555887699127197
    8. 'a' → logprob: -6.555887699127197
    9. '#' → logprob: -6.805887699127197
    10. ')' → logprob: -6.930887699127197

Token 60: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3923681080341339
    2. ' stock' → logprob: -2.1423680782318115
    3. ' assigned' → logprob: -3.2673680782318115
    4. 's' → logprob: -3.6423680782318115
    5. ' utilisée' → logprob: -3.7673680782318115
    6. '_' → logprob: -4.017368316650391
    7. 'r' → logprob: -4.142368316650391
    8. ')' → logprob: -4.767368316650391
    9. 'n' → logprob: -4.892368316650391
    10. ' assign' → logprob: -5.017368316650391

Token 61: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.12864650785923004
    2. 'ée' → logprob: -2.1286466121673584
    3. 'u' → logprob: -6.503646373748779
    4. 'e' → logprob: -9.003646850585938
    5. ' é' → logprob: -10.628646850585938
    6. 'ü' → logprob: -11.378646850585938
    7. 'ue' → logprob: -11.503646850585938
    8. '_' → logprob: -11.503646850585938
    9. 'ú' → logprob: -11.878646850585938
    10. 'ê' → logprob: -12.253646850585938

Token 62: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9011264443397522
    2. 'n' → logprob: -1.2761263847351074
    3. '_' → logprob: -1.9011263847351074
    4. 's' → logprob: -3.4011263847351074
    5. 'nombre' → logprob: -3.5261263847351074
    6. 'a' → logprob: -4.151126384735107
    7. ' n' → logprob: -4.276126384735107
    8. ' nombre' → logprob: -4.651126384735107
    9. 'space' → logprob: -4.776126384735107
    10. ' _' → logprob: -4.776126384735107

Token 63: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29508092999458313
    2. ' l' → logprob: -2.0450809001922607
    3. ' la' → logprob: -3.5450809001922607
    4. ' variable' → logprob: -3.5450809001922607
    5. ' n' → logprob: -3.9200809001922607
    6. '_' → logprob: -4.79508113861084
    7. '  ' → logprob: -4.79508113861084
    8. ' nombre' → logprob: -4.92008113861084
    9. ' espace' → logprob: -5.42008113861084
    10. ' _' → logprob: -6.17008113861084

Token 64: ' variable' (ID: 11076)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8938592076301575
    2. 'nombre' → logprob: -1.5188591480255127
    3. 'n' → logprob: -1.8938591480255127
    4. ' variable' → logprob: -2.2688591480255127
    5. ' nombre' → logprob: -2.6438591480255127
    6. 'variable' → logprob: -3.8938591480255127
    7. ' nb' → logprob: -4.268859386444092
    8. 'nb' → logprob: -4.768859386444092
    9. ' ' → logprob: -6.393859386444092
    10. '```' → logprob: -7.768859386444092

Token 65: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4009823501110077
    2. ' n' → logprob: -1.15098237991333
    3. ' ' → logprob: -5.02598237991333
    4. 'nombre' → logprob: -5.65098237991333
    5. ' nombre' → logprob: -6.65098237991333
    6. ' nb' → logprob: -6.77598237991333
    7. ' ' → logprob: -8.025981903076172
    8. 'nb' → logprob: -8.275981903076172
    9. ' `' → logprob: -8.775981903076172
    10. '`' → logprob: -9.275981903076172

Token 66: '.
' (ID: 558)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03379737585783005
    2. 'n' → logprob: -3.408797264099121
    3. '#' → logprob: -9.158797264099121
    4. '```' → logprob: -10.783797264099121
    5. '_' → logprob: -12.408797264099121
    6. ' 
' → logprob: -12.658797264099121
    7. ' ' → logprob: -12.908797264099121
    8. ' N' → logprob: -13.158797264099121
    9. '`' → logprob: -13.408797264099121
    10. ',' → logprob: -13.533797264099121

Token 67: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001137947037932463
    2. 'n' → logprob: -9.125113487243652
    3. '#' → logprob: -13.250113487243652
    4. '```' → logprob: -13.250113487243652
    5. ' ' → logprob: -15.500113487243652
    6. ' N' → logprob: -15.500113487243652
    7. 'x' → logprob: -15.875113487243652
    8. '\n' → logprob: -16.12511444091797
    9. ' 
' → logprob: -16.12511444091797
    10. '`' → logprob: -16.12511444091797

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0012648787815123796
    2. ' ' → logprob: -7.001265048980713
    3. '=' → logprob: -8.001264572143555
    4. ' =
' → logprob: -12.751264572143555
    5. '.' → logprob: -13.001264572143555
    6. 'space' → logprob: -13.251264572143555
    7. 's' → logprob: -13.751264572143555
    8. '  ' → logprob: -13.751264572143555
    9. ' ,' → logprob: -13.876264572143555
    10. '_' → logprob: -13.876264572143555

Token 69: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3132665753364563
    2. 'int' → logprob: -1.3132665157318115
    3. ' input' → logprob: -13.68826675415039
    4. ' ' → logprob: -13.81326675415039
    5. '=int' → logprob: -13.93826675415039
    6. 'input' → logprob: -14.06326675415039
    7. ' ' → logprob: -15.06326675415039
    8. '<int' → logprob: -15.68826675415039
    9. ' in' → logprob: -16.06326675415039
    10. '(int' → logprob: -16.18826675415039

Token 70: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31331485509872437
    2. '(input' → logprob: -1.3133149147033691
    3. '('' → logprob: -10.563314437866211
    4. ' (' → logprob: -11.813314437866211
    5. 'input' → logprob: -11.813314437866211
    6. '()' → logprob: -12.563314437866211
    7. '(user' → logprob: -13.188314437866211
    8. '(int' → logprob: -13.563314437866211
    9. '(
' → logprob: -13.813314437866211
    10. '(N' → logprob: -14.188314437866211

Token 71: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10258957743644714
    2. '()' → logprob: -3.1025896072387695
    3. '('' → logprob: -3.2275896072387695
    4. '())' → logprob: -4.8525896072387695
    5. '("("' → logprob: -5.8525896072387695
    6. '("' → logprob: -6.7275896072387695
    7. '(""))' → logprob: -7.7275896072387695
    8. '("")' → logprob: -8.10258960723877
    9. ')' → logprob: -9.35258960723877
    10. '(">' → logprob: -9.60258960723877

Token 72: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.008624792098999
    2. ' ' → logprob: -1.133624792098999
    3. ')' → logprob: -2.258624792098999
    4. '*' → logprob: -2.383624792098999
    5. '.' → logprob: -3.633624792098999
    6. '(' → logprob: -3.758624792098999
    7. '[' → logprob: -4.258625030517578
    8. '+' → logprob: -4.883625030517578
    9. '\' → logprob: -5.133625030517578
    10. ',' → logprob: -5.133625030517578

Token 73: ' Dem' (ID: 9458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41913625597953796
    2. 'for' → logprob: -2.7941362857818604
    3. '#' → logprob: -2.9191362857818604
    4. 's' → logprob: -3.2941362857818604
    5. ' #' → logprob: -3.4191362857818604
    6. ' for' → logprob: -4.044136047363281
    7. 'n' → logprob: -4.294136047363281
    8. '"' → logprob: -4.419136047363281
    9. '_' → logprob: -4.419136047363281
    10. 'print' → logprob: -4.544136047363281

Token 74: 'ande' (ID: 4102)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8595488667488098
    2. '.' → logprob: -1.734548807144165
    3. ')' → logprob: -2.109548807144165
    4. '_' → logprob: -2.234548807144165
    5. 'a' → logprob: -2.859548807144165
    6. 'e' → logprob: -3.359548807144165
    7. '[' → logprob: -4.359549045562744
    8. ' )' → logprob: -4.484549045562744
    9. '<|end|>' → logprob: -4.609549045562744
    10. ' a' → logprob: -4.859549045562744

Token 75: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04070805758237839
    2. '("' → logprob: -3.415708065032959
    3. '('' → logprob: -5.415708065032959
    4. ' (' → logprob: -6.790708065032959
    5. '()' → logprob: -7.040708065032959
    6. '("""' → logprob: -8.7907075881958
    7. ' ' → logprob: -9.0407075881958
    8. ')' → logprob: -9.7907075881958
    9. '<|end|>' → logprob: -9.7907075881958
    10. '("")' → logprob: -10.1657075881958

Token 76: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10706125199794769
    2. 'l' → logprob: -2.3570611476898193
    3. '<|end|>' → logprob: -5.857061386108398
    4. ' ' → logprob: -6.732061386108398
    5. ' user' → logprob: -7.607061386108398
    6. ' la' → logprob: -7.732061386108398
    7. '_' → logprob: -7.857061386108398
    8. ' ' → logprob: -7.982061386108398
    9. ' une' → logprob: -7.982061386108398
    10. ' N' → logprob: -8.732061386108398

Token 77: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.011737649329006672
    2. 'a' → logprob: -5.511737823486328
    3. 'u' → logprob: -5.636737823486328
    4. ''' → logprob: -6.136737823486328
    5. '’utilisateur' → logprob: -7.261737823486328
    6. ''util' → logprob: -7.886737823486328
    7. ''user' → logprob: -8.386737823486328
    8. 'l' → logprob: -9.136737823486328
    9. 'e' → logprob: -9.261737823486328
    10. ''us' → logprob: -9.761737823486328

Token 78: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9582343697547913
    2. ' d' → logprob: -1.7082343101501465
    3. '<|end|>' → logprob: -1.8332343101501465
    4. 'd' → logprob: -1.9582343101501465
    5. 's' → logprob: -3.2082343101501465
    6. '(' → logprob: -4.2082343101501465
    7. 'u' → logprob: -4.3332343101501465
    8. '  ' → logprob: -4.5832343101501465
    9. ' un' → logprob: -5.2082343101501465
    10. ' de' → logprob: -5.2082343101501465

Token 79: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08949737250804901
    2. 'e' → logprob: -3.3394973278045654
    3. ''entrée' → logprob: -3.9644973278045654
    4. 'a' → logprob: -4.0894975662231445
    5. ''ent' → logprob: -5.4644975662231445
    6. '_' → logprob: -6.2144975662231445
    7. 'entr' → logprob: -7.2144975662231445
    8. 'iquer' → logprob: -7.5894975662231445
    9. ''entre' → logprob: -7.7144975662231445
    10. 'trer' → logprob: -7.8394975662231445

Token 80: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.013659999705851078
    2. ''' → logprob: -4.638659954071045
    3. 'entrée' → logprob: -6.388659954071045
    4. 'enter' → logprob: -7.888659954071045
    5. ' entrer' → logprob: -8.013660430908203
    6. ''entrée' → logprob: -8.013660430908203
    7. 'ent' → logprob: -8.513660430908203
    8. 'entrant' → logprob: -9.013660430908203
    9. 'entra' → logprob: -9.388660430908203
    10. 'e' → logprob: -9.513660430908203

Token 81: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05912606418132782
    2. 'ter' → logprob: -3.684126138687134
    3. 'trer' → logprob: -4.059125900268555
    4. 't' → logprob: -4.559125900268555
    5. 'tre' → logprob: -6.184125900268555
    6. 'e' → logprob: -7.059125900268555
    7. '```' → logprob: -7.309125900268555
    8. 'a' → logprob: -8.434125900268555
    9. 'tr' → logprob: -9.059125900268555
    10. '_er' → logprob: -9.559125900268555

Token 82: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2674729526042938
    2. ' ' → logprob: -1.8924729824066162
    3. '("' → logprob: -3.267472982406616
    4. ' (' → logprob: -3.517472982406616
    5. ' ("' → logprob: -5.392472743988037
    6. '('' → logprob: -5.892472743988037
    7. '()' → logprob: -5.892472743988037
    8. ' un' → logprob: -6.392472743988037
    9. '"' → logprob: -7.142472743988037
    10. ''' → logprob: -7.267472743988037

Token 83: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040440432727336884
    2. ' chaîne' → logprob: -3.290440320968628
    3. ' chaine' → logprob: -7.290440559387207
    4. ' espace' → logprob: -7.540440559387207
    5. 'chaine' → logprob: -8.540440559387207
    6. '  ' → logprob: -8.915440559387207
    7. ' )' → logprob: -9.165440559387207
    8. ' phrase' → logprob: -9.165440559387207
    9. ' space' → logprob: -9.540440559387207
    10. ' chaînes' → logprob: -9.540440559387207

Token 84: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3647345304489136
    2. '(' → logprob: -2.114734649658203
    3. 's' → logprob: -2.114734649658203
    4. '<|end|>' → logprob: -3.739734649658203
    5. ')' → logprob: -3.989734649658203
    6. '("")' → logprob: -5.239734649658203
    7. 'a' → logprob: -5.614734649658203
    8. ' ' → logprob: -6.239734649658203
    9. ' )' → logprob: -6.614734649658203
    10. ' (' → logprob: -6.739734649658203

Token 85: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.039589446038007736
    2. 'car' → logprob: -3.5395894050598145
    3. ' caract' → logprob: -5.4145894050598145
    4. ' caracteres' → logprob: -6.0395894050598145
    5. ' car' → logprob: -6.2895894050598145
    6. ' caractère' → logprob: -7.0395894050598145
    7. ' ' → logprob: -10.039589881896973
    8. '_car' → logprob: -10.289589881896973
    9. 'texte' → logprob: -10.414589881896973
    10. 'c' → logprob: -10.414589881896973

Token 86: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028451459482312202
    2. 'chaine' → logprob: -4.653451442718506
    3. ' s' → logprob: -5.153451442718506
    4. ')' → logprob: -5.278451442718506
    5. 'a' → logprob: -6.153451442718506
    6. ' ' → logprob: -6.403451442718506
    7. ' )' → logprob: -7.278451442718506
    8. 'str' → logprob: -7.903451442718506
    9. '()' → logprob: -8.403451919555664
    10. '#' → logprob: -8.528451919555664

Token 87: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012603833340108395
    2. 'c' → logprob: -6.012603759765625
    3. 'a' → logprob: -6.137603759765625
    4. 'chaine' → logprob: -6.512603759765625
    5. ' s' → logprob: -6.637603759765625
    6. ' ' → logprob: -7.012603759765625
    7. 'n' → logprob: -7.387603759765625
    8. 't' → logprob: -7.387603759765625
    9. ' )' → logprob: -7.887603759765625
    10. 'S' → logprob: -7.887603759765625

Token 88: ' La' (ID: 3038)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10082957148551941
    2. ' s' → logprob: -2.850829601287842
    3. 'chaine' → logprob: -4.475829601287842
    4. 'texte' → logprob: -4.850829601287842
    5. 'S' → logprob: -4.975829601287842
    6. 'text' → logprob: -5.100829601287842
    7. ' text' → logprob: -6.600829601287842
    8. 'txt' → logprob: -6.725829601287842
    9. 'string' → logprob: -7.100829601287842
    10. ' S' → logprob: -7.975829601287842

Token 89: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22810786962509155
    2. 'c' → logprob: -2.7281079292297363
    3. ' s' → logprob: -2.9781079292297363
    4. 'chaine' → logprob: -3.1031079292297363
    5. ' ' → logprob: -4.728107929229736
    6. ' chaine' → logprob: -5.103107929229736
    7. 'ch' → logprob: -5.728107929229736
    8. 'string' → logprob: -5.728107929229736
    9. ' c' → logprob: -5.853107929229736
    10. ' chaîne' → logprob: -5.853107929229736

Token 90: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46474963426589966
    2. 's' → logprob: -1.4647495746612549
    3. ' =' → logprob: -2.589749574661255
    4. '<|end|>' → logprob: -3.589749574661255
    5. ' s' → logprob: -4.339749813079834
    6. '_' → logprob: -4.714749813079834
    7. ' )' → logprob: -5.714749813079834
    8. ')' → logprob: -6.214749813079834
    9. 'user' → logprob: -6.839749813079834
    10. ' user' → logprob: -6.964749813079834

Token 91: 'ie' (ID: 396)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.746238648891449
    2. 'e' → logprob: -1.6212387084960938
    3. 'sie' → logprob: -1.7462387084960938
    4. 's' → logprob: -1.9962387084960938
    5. 'ie' → logprob: -4.746238708496094
    6. 'tie' → logprob: -5.871238708496094
    7. 'ss' → logprob: -6.371238708496094
    8. 'es' → logprob: -6.621238708496094
    9. 'it' → logprob: -7.871238708496094
    10. 'st' → logprob: -7.871238708496094

Token 92: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42354607582092285
    2. ' s' → logprob: -1.7985460758209229
    3. ' ' → logprob: -2.548546075820923
    4. ' =' → logprob: -2.548546075820923
    5. 'chaine' → logprob: -4.798545837402344
    6. 'user' → logprob: -6.048545837402344
    7. ' user' → logprob: -6.173545837402344
    8. '_' → logprob: -6.673545837402344
    9. ' input' → logprob: -7.173545837402344
    10. ' d' → logprob: -7.298545837402344

Token 93: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.007565218023955822
    2. 'stock' → logprob: -5.382565021514893
    3. ' stored' → logprob: -6.507565021514893
    4. 's' → logprob: -7.382565021514893
    5. ' assigned' → logprob: -8.50756549835205
    6. 'stored' → logprob: -8.75756549835205
    7. ' ' → logprob: -9.00756549835205
    8. ' stockage' → logprob: -9.88256549835205
    9. ' input' → logprob: -10.38256549835205
    10. ' =' → logprob: -10.63256549835205

Token 94: 'ée' (ID: 2894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31402701139450073
    2. 'e' → logprob: -1.9390270709991455
    3. 'é' → logprob: -2.4390270709991455
    4. 'ée' → logprob: -3.3140270709991455
    5. '_e' → logprob: -6.439026832580566
    6. ' e' → logprob: -9.064026832580566
    7. '_d' → logprob: -9.689026832580566
    8. ' _' → logprob: -9.939026832580566
    9. 'a' → logprob: -10.314026832580566
    10. 'u' → logprob: -10.814026832580566

Token 95: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.28049957752227783
    2. ' ' → logprob: -2.0304994583129883
    3. 's' → logprob: -3.0304994583129883
    4. 'dans' → logprob: -3.1554994583129883
    5. '_' → logprob: -3.9054994583129883
    6. ' a' → logprob: -8.030499458312988
    7. 'a' → logprob: -8.280499458312988
    8. ' s' → logprob: -8.405499458312988
    9. ' in' → logprob: -8.780499458312988
    10. '<|end|>' → logprob: -9.030499458312988

Token 96: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.248071312904358
    2. 'chaine' → logprob: -1.623071312904358
    3. ' s' → logprob: -1.873071312904358
    4. 's' → logprob: -1.873071312904358
    5. 'la' → logprob: -2.6230711936950684
    6. ' une' → logprob: -3.6230711936950684
    7. 'une' → logprob: -3.8730711936950684
    8. 'texte' → logprob: -4.373071193695068
    9. ' chaine' → logprob: -4.373071193695068
    10. ' text' → logprob: -4.873071193695068

Token 97: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.24718065559864044
    2. 'variable' → logprob: -1.997180700302124
    3. 's' → logprob: -3.247180700302124
    4. 'chaine' → logprob: -3.747180700302124
    5. ' s' → logprob: -4.872180461883545
    6. ' ' → logprob: -5.997180461883545
    7. 'var' → logprob: -5.997180461883545
    8. ' chaine' → logprob: -6.247180461883545
    9. ' chaîne' → logprob: -6.622180461883545
    10. 'string' → logprob: -6.747180461883545

Token 98: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09049347043037415
    2. 'chaine' → logprob: -3.3404934406280518
    3. 'S' → logprob: -3.7154934406280518
    4. ' s' → logprob: -4.465493679046631
    5. 'texte' → logprob: -4.715493679046631
    6. 'text' → logprob: -6.340493679046631
    7. 'ch' → logprob: -6.465493679046631
    8. ' S' → logprob: -7.215493679046631
    9. ' chaine' → logprob: -7.590493679046631
    10. 'txt' → logprob: -8.215493202209473

Token 99: '.
' (ID: 558)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.700132997939363e-05
    2. 's' → logprob: -11.625017166137695
    3. '<|end|>' → logprob: -12.125017166137695
    4. ' S' → logprob: -14.125017166137695
    5. '#' → logprob: -14.875017166137695
    6. ' 
' → logprob: -15.250017166137695
    7. ' ' → logprob: -15.500017166137695
    8. '
' → logprob: -15.625017166137695
    9. '```' → logprob: -15.625017166137695
    10. ')' → logprob: -16.250017166137695

Token 100: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.3856492842023727e-06
    2. ' S' → logprob: -14.250000953674316
    3. 's' → logprob: -14.375000953674316
    4. '```' → logprob: -19.000001907348633
    5. ' ' → logprob: -20.375001907348633
    6. '#' → logprob: -20.375001907348633
    7. '<|end|>' → logprob: -20.500001907348633
    8. 'string' → logprob: -20.875001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '`' → logprob: -21.750001907348633

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028166472911834717
    2. '=' → logprob: -5.877816677093506
    3. ' ' → logprob: -11.877816200256348
    4. ' =
' → logprob: -13.252816200256348
    5. '.' → logprob: -13.627816200256348
    6. '=input' → logprob: -14.627816200256348
    7. 's' → logprob: -14.752816200256348
    8. ' ' → logprob: -15.752816200256348
    9. '<|end|>' → logprob: -15.752816200256348
    10. ',' → logprob: -16.127817153930664

Token 102: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.018150296062231064
    2. 'input' → logprob: -4.018150329589844
    3. '=input' → logprob: -15.393150329589844
    4. '(input' → logprob: -15.768150329589844
    5. '	input' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.893150329589844
    7. '<input' → logprob: -18.768150329589844
    8. 'str' → logprob: -18.893150329589844
    9. ' str' → logprob: -19.018150329589844
    10. ' ' → logprob: -19.643150329589844

Token 103: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02326551079750061
    2. '(' → logprob: -3.7732656002044678
    3. ' ()' → logprob: -11.023265838623047
    4. '()
' → logprob: -14.898265838623047
    5. '()

' → logprob: -15.023265838623047
    6. '();' → logprob: -15.148265838623047
    7. ' (' → logprob: -15.148265838623047
    8. '("")' → logprob: -15.398265838623047
    9. '())' → logprob: -15.398265838623047
    10. '（）' → logprob: -15.523265838623047

Token 104: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6891021132469177
    2. 'i' → logprob: -1.3141021728515625
    3. ' 
' → logprob: -2.1891021728515625
    4. ' ' → logprob: -3.3141021728515625
    5. '[' → logprob: -3.8141021728515625
    6. 'if' → logprob: -4.0641021728515625
    7. '.' → logprob: -4.4391021728515625
    8. 'n' → logprob: -5.3141021728515625
    9. '
' → logprob: -5.4391021728515625
    10. 's' → logprob: -5.8141021728515625

Token 105: ' Initialise' (ID: 179601)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0643965005874634
    2. 'if' → logprob: -1.1893965005874634
    3. '#' → logprob: -1.9393965005874634
    4. 'p' → logprob: -2.564396381378174
    5. 'for' → logprob: -3.064396381378174
    6. 'print' → logprob: -3.939396381378174
    7. 'f' → logprob: -4.314396381378174
    8. ' if' → logprob: -4.689396381378174
    9. 'r' → logprob: -4.814396381378174
    10. 'result' → logprob: -4.939396381378174

Token 106: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08081288635730743
    2. '_' → logprob: -2.830812931060791
    3. ' a' → logprob: -5.330812931060791
    4. 'a' → logprob: -5.705812931060791
    5. '<|end|>' → logprob: -5.705812931060791
    6. ' _' → logprob: -6.705812931060791
    7. ' =' → logprob: -6.830812931060791
    8. '  ' → logprob: -6.955812931060791
    9. 's' → logprob: -7.455812931060791
    10. 'e' → logprob: -8.205812454223633

Token 107: ' variable' (ID: 11076)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7361025214195251
    2. ' ' → logprob: -2.11110258102417
    3. ' i' → logprob: -2.23610258102417
    4. ' result' → logprob: -3.11110258102417
    5. 'count' → logprob: -3.11110258102417
    6. '_' → logprob: -3.48610258102417
    7. 's' → logprob: -3.48610258102417
    8. 'i' → logprob: -3.61110258102417
    9. 'res' → logprob: -3.98610258102417
    10. ' res' → logprob: -4.23610258102417

Token 108: ' R' (ID: 460)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9384765028953552
    2. 'i' → logprob: -1.1884765625
    3. ' result' → logprob: -2.0634765625
    4. 'result' → logprob: -2.1884765625
    5. 'count' → logprob: -3.1884765625
    6. ' count' → logprob: -4.6884765625
    7. 'c' → logprob: -5.1884765625
    8. 'res' → logprob: -6.5634765625
    9. ' resultat' → logprob: -6.5634765625
    10. ' compteur' → logprob: -6.8134765625

Token 109: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01664571464061737
    2. ' ' → logprob: -4.641645908355713
    3. '=' → logprob: -5.016645908355713
    4. '=""' → logprob: -8.766645431518555
    5. '=''' → logprob: -10.641645431518555
    6. ',' → logprob: -11.391645431518555
    7. 'a' → logprob: -11.641645431518555
    8. '_' → logprob: -11.766645431518555
    9. 'e' → logprob: -12.016645431518555
    10. 's' → logprob: -12.391645431518555

Token 110: ' ' (ID: 220)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1531711369752884
    2. ' ""' → logprob: -2.1531710624694824
    3. '''' → logprob: -4.028171062469482
    4. ' ''' → logprob: -5.278171062469482
    5. '"' → logprob: -6.778171062469482
    6. ' ' → logprob: -6.778171062469482
    7. '0' → logprob: -8.02817153930664
    8. ''' → logprob: -9.02817153930664
    9. '"""' → logprob: -9.02817153930664
    10. ''''' → logprob: -10.52817153930664

Token 111: '0' (ID: 15)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.06269694119691849
    2. '''' → logprob: -2.812696933746338
    3. '"' → logprob: -7.437696933746338
    4. '0' → logprob: -9.437697410583496
    5. '"""' → logprob: -10.687697410583496
    6. ''' → logprob: -10.812697410583496
    7. ' ""' → logprob: -11.437697410583496
    8. ''''' → logprob: -12.812697410583496
    9. '""""' → logprob: -13.687697410583496
    10. ' ''' → logprob: -14.437697410583496

Token 112: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0864877998828888
    2. ' 
' → logprob: -3.5864877700805664
    3. '
' → logprob: -3.5864877700805664
    4. ' ' → logprob: -4.086487770080566
    5. ' R' → logprob: -4.961487770080566
    6. 'r' → logprob: -7.211487770080566
    7. '<|end|>' → logprob: -7.336487770080566
    8. 'n' → logprob: -7.836487770080566
    9. '\n' → logprob: -7.961487770080566
    10. '0' → logprob: -7.961487770080566

Token 113: '#' (ID: 2)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -8.327856630785391e-05
    2. '0' → logprob: -10.125082969665527
    3. ' R' → logprob: -10.875082969665527
    4. ' 
' → logprob: -11.250082969665527
    5. ' ' → logprob: -12.250082969665527
    6. '
' → logprob: -12.625082969665527
    7. 'r' → logprob: -14.375082969665527
    8. '```' → logprob: -14.500082969665527
    9. '  
' → logprob: -14.500082969665527
    10. '' → logprob: -14.750082969665527

Token 114: ' Cette' (ID: 27383)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0031808018684387207
    2. ' R' → logprob: -5.878180980682373
    3. ' ' → logprob: -8.128180503845215
    4. ' 
' → logprob: -10.628180503845215
    5. 'r' → logprob: -11.253180503845215
    6. 'i' → logprob: -11.378180503845215
    7. ' ' → logprob: -11.753180503845215
    8. 'n' → logprob: -12.128180503845215
    9. '0' → logprob: -12.128180503845215
    10. '#' → logprob: -12.878180503845215

Token 115: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028345203027129173
    2. ' R' → logprob: -5.778345108032227
    3. 'R' → logprob: -6.028345108032227
    4. 'n' → logprob: -6.028345108032227
    5. 'r' → logprob: -6.028345108032227
    6. '<|end|>' → logprob: -6.153345108032227
    7. '.' → logprob: -6.278345108032227
    8. ' =' → logprob: -6.403345108032227
    9. '_' → logprob: -6.778345108032227
    10. '#' → logprob: -6.903345108032227

Token 116: ' va' (ID: 3423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005131288897246122
    2. '_' → logprob: -5.755131244659424
    3. ' =' → logprob: -7.255131244659424
    4. '=' → logprob: -8.005131721496582
    5. '<|end|>' → logprob: -8.255131721496582
    6. 'i' → logprob: -8.630131721496582
    7. 's' → logprob: -9.880131721496582
    8. 'n' → logprob: -9.880131721496582
    9. 'r' → logprob: -10.005131721496582
    10. 'a' → logprob: -10.005131721496582

Token 117: ' servir' (ID: 42557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37423405051231384
    2. ' compter' → logprob: -1.8742340803146362
    3. ' servir' → logprob: -2.1242339611053467
    4. ' =' → logprob: -4.874234199523926
    5. 'count' → logprob: -5.374234199523926
    6. '=' → logprob: -5.874234199523926
    7. '  ' → logprob: -6.124234199523926
    8. ' count' → logprob: -6.124234199523926
    9. ' représ' → logprob: -6.249234199523926
    10. 'i' → logprob: -6.499234199523926

Token 118: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11899574846029282
    2. ' à' → logprob: -2.3689956665039062
    3. ' a' → logprob: -4.118995666503906
    4. 'a' → logprob: -7.118995666503906
    5. ' to' → logprob: -7.243995666503906
    6. '  ' → logprob: -8.118995666503906
    7. ' =' → logprob: -9.243995666503906
    8. ' as' → logprob: -9.743995666503906
    9. 'à' → logprob: -9.743995666503906
    10. '<|end|>' → logprob: -10.243995666503906

Token 119: ' compter' (ID: 81694)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7523456811904907
    2. ' compter' → logprob: -0.7523456811904907
    3. 'count' → logprob: -4.127345561981201
    4. '<|end|>' → logprob: -4.627345561981201
    5. 's' → logprob: -5.377345561981201
    6. 'i' → logprob: -5.502345561981201
    7. ' compt' → logprob: -5.627345561981201
    8. 'comp' → logprob: -5.752345561981201
    9. ' i' → logprob: -5.877345561981201
    10. ' count' → logprob: -6.502345561981201

Token 120: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005819887388497591
    2. '<|end|>' → logprob: -5.380819797515869
    3. '_' → logprob: -7.380819797515869
    4. '  ' → logprob: -8.755820274353027
    5. 'a' → logprob: -9.505820274353027
    6. 's' → logprob: -9.755820274353027
    7. 'i' → logprob: -10.380820274353027
    8. ' a' → logprob: -10.505820274353027
    9. 'space' → logprob: -10.630820274353027
    10. ' )' → logprob: -10.755820274353027

Token 121: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.27003049850463867
    2. 'nombre' → logprob: -1.7700304985046387
    3. 's' → logprob: -2.7700304985046387
    4. ' nombres' → logprob: -6.395030498504639
    5. 'Nombre' → logprob: -7.770030498504639
    6. ' ' → logprob: -7.895030498504639
    7. 'n' → logprob: -8.270030975341797
    8. 'r' → logprob: -9.020030975341797
    9. 'es' → logprob: -9.020030975341797
    10. '_nombre' → logprob: -9.020030975341797

Token 122: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09279806911945343
    2. '<|end|>' → logprob: -3.2177979946136475
    3. '_' → logprob: -3.4677979946136475
    4. '  ' → logprob: -5.342798233032227
    5. ' de' → logprob: -6.092798233032227
    6. 's' → logprob: -6.342798233032227
    7. ' d' → logprob: -6.342798233032227
    8. ' des' → logprob: -6.467798233032227
    9. 'space' → logprob: -6.467798233032227
    10. 'des' → logprob: -6.842798233032227

Token 123: ' caractères' (ID: 183106)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04296790435910225
    2. '_' → logprob: -4.792967796325684
    3. 's' → logprob: -4.917967796325684
    4. '<|end|>' → logprob: -5.042967796325684
    5. ' espaces' → logprob: -5.417967796325684
    6. ''' → logprob: -5.417967796325684
    7. 'a' → logprob: -5.542967796325684
    8. ' caractères' → logprob: -6.792967796325684
    9. 'i' → logprob: -7.167967796325684
    10. '"' → logprob: -7.417967796325684

Token 124: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01790677011013031
    2. '_' → logprob: -5.142906665802002
    3. ''' → logprob: -5.392906665802002
    4. 's' → logprob: -5.517906665802002
    5. '<|end|>' → logprob: -6.642906665802002
    6. ' '' → logprob: -7.642906665802002
    7. '  ' → logprob: -7.892906665802002
    8. 'u' → logprob: -8.39290714263916
    9. 'a' → logprob: -8.89290714263916
    10. 'r' → logprob: -9.39290714263916

Token 125: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21494105458259583
    2. 'e' → logprob: -2.7149410247802734
    3. ''' → logprob: -2.8399410247802734
    4. 'r' → logprob: -3.8399410247802734
    5. 'o' → logprob: -4.339941024780273
    6. 'A' → logprob: -5.214941024780273
    7. 'c' → logprob: -5.339941024780273
    8. 'i' → logprob: -5.589941024780273
    9. 'R' → logprob: -6.214941024780273
    10. 't' → logprob: -6.464941024780273

Token 126: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0031117575708776712
    2. 'e' → logprob: -7.003111839294434
    3. ''''' → logprob: -8.128111839294434
    4. '"' → logprob: -8.253111839294434
    5. ''s' → logprob: -8.628111839294434
    6. '')' → logprob: -8.628111839294434
    7. 'u' → logprob: -8.628111839294434
    8. ' '' → logprob: -8.753111839294434
    9. ''S' → logprob: -9.003111839294434
    10. 'R' → logprob: -9.253111839294434

Token 127: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1208249032497406
    2. 'r' → logprob: -2.9958248138427734
    3. '.' → logprob: -4.245824813842773
    4. 'R' → logprob: -4.495824813842773
    5. 's' → logprob: -4.745824813842773
    6. ' présents' → logprob: -5.120824813842773
    7. 'u' → logprob: -5.495824813842773
    8. '_' → logprob: -5.995824813842773
    9. ' dans' → logprob: -6.245824813842773
    10. ',' → logprob: -6.245824813842773

Token 128: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28143954277038574
    2. ' S' → logprob: -1.4064395427703857
    3. '<|end|>' → logprob: -8.906439781188965
    4. ' la' → logprob: -9.656439781188965
    5. ' ' → logprob: -10.281439781188965
    6. 's' → logprob: -10.531439781188965
    7. 'la' → logprob: -12.281439781188965
    8. ' le' → logprob: -12.281439781188965
    9. ' the' → logprob: -12.406439781188965
    10. 'the' → logprob: -12.406439781188965

Token 129: ' chaîne' (ID: 89288)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.19328747689723969
    2. ' S' → logprob: -2.3182873725891113
    3. ' chaîne' → logprob: -3.3182873725891113
    4. 'chaine' → logprob: -3.4432873725891113
    5. 's' → logprob: -5.568287372589111
    6. 'string' → logprob: -6.193287372589111
    7. ' chaine' → logprob: -6.318287372589111
    8. ' string' → logprob: -7.443287372589111
    9. ' ' → logprob: -8.44328784942627
    10. 'cha' → logprob: -9.06828784942627

Token 130: ' S' (ID: 336)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8183352947235107
    2. ' ' → logprob: -0.8183352947235107
    3. 'S' → logprob: -2.9433352947235107
    4. ' R' → logprob: -4.06833553314209
    5. 'r' → logprob: -4.06833553314209
    6. 's' → logprob: -4.44333553314209
    7. '_' → logprob: -4.44333553314209
    8. ' =' → logprob: -7.06833553314209
    9. '_R' → logprob: -7.19333553314209
    10. ' '' → logprob: -7.31833553314209

Token 131: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4658662974834442
    2. 'r' → logprob: -1.0908663272857666
    3. ' 
' → logprob: -3.7158663272857666
    4. ' ' → logprob: -5.3408660888671875
    5. '
' → logprob: -5.9658660888671875
    6. 'n' → logprob: -6.5908660888671875
    7. '#' → logprob: -7.4658660888671875
    8. '  
' → logprob: -7.7158660888671875
    9. 's' → logprob: -7.8408660888671875
    10. 'i' → logprob: -7.9658660888671875

Token 132: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0024063352029770613
    2. 'r' → logprob: -6.752406120300293
    3. 'count' → logprob: -7.002406120300293
    4. 'c' → logprob: -9.127406120300293
    5. ' R' → logprob: -10.002406120300293
    6. 'n' → logprob: -10.127406120300293
    7. '
' → logprob: -10.752406120300293
    8. ' 
' → logprob: -10.877406120300293
    9. ' ' → logprob: -10.877406120300293
    10. '```' → logprob: -11.002406120300293

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44017493724823
    2. '=' → logprob: -1.06517493724823
    3. '_' → logprob: -4.6901750564575195
    4. ' ' → logprob: -6.6901750564575195
    5. '_count' → logprob: -7.4401750564575195
    6. 'count' → logprob: -9.31517505645752
    7. ' +=' → logprob: -9.69017505645752
    8. '_=' → logprob: -10.06517505645752
    9. 's' → logprob: -10.19017505645752
    10. ' _' → logprob: -10.44017505645752

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012510590255260468
    2. ' ' → logprob: -4.387510776519775
    3. ' ' → logprob: -14.512510299682617
    4. 'S' → logprob: -15.387510299682617
    5. ' S' → logprob: -16.575010299682617
    6. '۰' → logprob: -16.825010299682617
    7. '  ' → logprob: -17.325010299682617
    8. 's' → logprob: -17.387510299682617
    9. 'O' → logprob: -18.075010299682617
    10. '=' → logprob: -18.137510299682617

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. 'S' → logprob: -16.250158309936523
    4. '۰' → logprob: -17.687658309936523
    5. ' ' → logprob: -18.312658309936523
    6. 's' → logprob: -18.375158309936523
    7. 'O' → logprob: -18.875158309936523
    8. '  ' → logprob: -18.875158309936523
    9. '=' → logprob: -18.937658309936523
    10. '０' → logprob: -19.000158309936523

Token 136: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1886235624551773
    2. 'for' → logprob: -2.3136236667633057
    3. ' for' → logprob: -3.3136236667633057
    4. ' 
' → logprob: -3.9386236667633057
    5. '<|end|>' → logprob: -5.188623428344727
    6. ' ' → logprob: -5.313623428344727
    7. '' → logprob: -5.813623428344727
    8. '\n' → logprob: -7.063623428344727
    9. '  
' → logprob: -7.188623428344727
    10. 'i' → logprob: -7.813623428344727

Token 137: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2262665033340454
    2. '
' → logprob: -1.9762665033340454
    3. 'f' → logprob: -3.601266384124756
    4. 'i' → logprob: -4.226266384124756
    5. ' for' → logprob: -4.726266384124756
    6. '' → logprob: -5.101266384124756
    7. ' 
' → logprob: -5.851266384124756
    8. ' ' → logprob: -6.476266384124756
    9. 'n' → logprob: -7.101266384124756
    10. '\n' → logprob: -7.976266384124756

Token 138: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007946698926389217
    2. ' for' → logprob: -5.382946491241455
    3. 'f' → logprob: -6.007946491241455
    4. 'i' → logprob: -7.132946491241455
    5. 'fo' → logprob: -10.132946968078613
    6. '#' → logprob: -12.632946968078613
    7. ' i' → logprob: -12.757946968078613
    8. ' ' → logprob: -13.257946968078613
    9. 'F' → logprob: -13.382946968078613
    10. 'n' → logprob: -13.507946968078613

Token 139: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016622738912701607
    2. ' i' → logprob: -4.766622543334961
    3. ' une' → logprob: -5.891622543334961
    4. '_' → logprob: -6.516622543334961
    5. 'i' → logprob: -6.766622543334961
    6. ' un' → logprob: -7.016622543334961
    7. ' a' → logprob: -7.641622543334961
    8. 'a' → logprob: -8.516622543334961
    9. ' ‌' → logprob: -8.641622543334961
    10. ' ' → logprob: -8.766622543334961

Token 140: ' variable' (ID: 11076)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.734966516494751
    2. 'for' → logprob: -1.609966516494751
    3. ' i' → logprob: -2.359966516494751
    4. ' for' → logprob: -2.609966516494751
    5. ' ' → logprob: -2.734966516494751
    6. 'variable' → logprob: -3.234966516494751
    7. ' variable' → logprob: -4.359966278076172
    8. 'space' → logprob: -4.484966278076172
    9. '_' → logprob: -4.609966278076172
    10. ' espace' → logprob: -5.359966278076172

Token 141: ' B' (ID: 418)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09882533550262451
    2. 'i' → logprob: -2.723825454711914
    3. ' I' → logprob: -4.348825454711914
    4. 'I' → logprob: -4.348825454711914
    5. ' index' → logprob: -7.598825454711914
    6. ' ' → logprob: -7.723825454711914
    7. ' compteur' → logprob: -7.973825454711914
    8. 'index' → logprob: -8.473825454711914
    9. 'count' → logprob: -8.723825454711914
    10. ' count' → logprob: -8.911325454711914

Token 142: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02084479108452797
    2. '=' → logprob: -3.8958446979522705
    3. ' ' → logprob: -8.145844459533691
    4. '  ' → logprob: -12.395844459533691
    5. ',' → logprob: -13.395844459533691
    6. ' à' → logprob: -13.395844459533691
    7. '<|end|>' → logprob: -13.645844459533691
    8. '0' → logprob: -14.520844459533691
    9. ' ,' → logprob: -14.770844459533691
    10. 'a' → logprob: -14.895844459533691

Token 143: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164102263748646
    2. ' ' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.951663970947266
    4. '1' → logprob: -16.264163970947266
    5. '  ' → logprob: -16.326663970947266
    6. '<|end|>' → logprob: -16.514163970947266
    7. '"' → logprob: -17.139163970947266
    8. '[]' → logprob: -17.451663970947266
    9. '=' → logprob: -17.451663970947266
    10. ''' → logprob: -17.639163970947266

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.37501335144043
    3. '""' → logprob: -14.25001335144043
    4. '''' → logprob: -15.00001335144043
    5. '[]' → logprob: -15.75001335144043
    6. '1' → logprob: -16.12501335144043
    7. '"' → logprob: -16.25001335144043
    8. 'N' → logprob: -17.25001335144043
    9. 'int' → logprob: -17.37501335144043
    10. '```' → logprob: -17.56251335144043

Token 145: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: ' Cette' (ID: 27383)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007368680089712143
    2. ' B' → logprob: -5.007368564605713
    3. ' ' → logprob: -8.007369041442871
    4. '#' → logprob: -8.632369041442871
    5. 'b' → logprob: -10.007369041442871
    6. '
' → logprob: -10.007369041442871
    7. ' 
' → logprob: -10.757369041442871
    8. '<|end|>' → logprob: -11.882369041442871
    9. ' ' → logprob: -12.382369041442871
    10. ' #' → logprob: -12.632369041442871

Token 148: ' variable' (ID: 11076)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6792457699775696
    2. ' =' → logprob: -1.5542457103729248
    3. ' ' → logprob: -1.6792457103729248
    4. '#' → logprob: -2.804245710372925
    5. 's' → logprob: -5.304245948791504
    6. 'a' → logprob: -5.679245948791504
    7. 'B' → logprob: -5.679245948791504
    8. '_' → logprob: -5.804245948791504
    9. ' #' → logprob: -5.929245948791504
    10. 'b' → logprob: -6.054245948791504

Token 149: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38848236203193665
    2. '=' → logprob: -1.1384823322296143
    3. ' ' → logprob: -6.888482570648193
    4. 'a' → logprob: -8.638482093811035
    5. '#' → logprob: -9.138482093811035
    6. ' va' → logprob: -9.513482093811035
    7. ' a' → logprob: -10.013482093811035
    8. ' #' → logprob: -10.138482093811035
    9. ',' → logprob: -11.138482093811035
    10. 'B' → logprob: -11.263482093811035

Token 150: ' servir' (ID: 42557)
  Prédit: ' compter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.26372620463371277
    2. ' servir' → logprob: -1.7637262344360352
    3. ' ' → logprob: -3.388726234436035
    4. 'count' → logprob: -4.888726234436035
    5. 'serv' → logprob: -5.638726234436035
    6. ' compt' → logprob: -6.013726234436035
    7. '  ' → logprob: -6.263726234436035
    8. '=' → logprob: -6.638726234436035
    9. 'comp' → logprob: -6.638726234436035
    10. ' count' → logprob: -6.638726234436035

Token 151: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.022054776549339294
    2. 'à' → logprob: -4.522054672241211
    3. ' ' → logprob: -5.522054672241211
    4. ' a' → logprob: -5.522054672241211
    5. 'a' → logprob: -5.897054672241211
    6. ' to' → logprob: -9.272054672241211
    7. ''à' → logprob: -10.522054672241211
    8. '#' → logprob: -10.647054672241211
    9. ' au' → logprob: -11.397054672241211
    10. ' ' → logprob: -12.022054672241211

Token 152: ' compter' (ID: 81694)
  Prédit: ' compter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compter' → logprob: -0.5477275252342224
    2. '0' → logprob: -1.5477275848388672
    3. ' ' → logprob: -2.047727584838867
    4. 'comp' → logprob: -3.422727584838867
    5. '1' → logprob: -3.547727584838867
    6. 'count' → logprob: -4.172727584838867
    7. 'com' → logprob: -7.297727584838867
    8. ' compt' → logprob: -7.672727584838867
    9. '<|end|>' → logprob: -8.047727584838867
    10. ' count' → logprob: -8.047727584838867

Token 153: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4454866051673889
    2. ' ' → logprob: -1.5704865455627441
    3. 'le' → logprob: -2.445486545562744
    4. '<|end|>' → logprob: -3.570486545562744
    5. ' les' → logprob: -5.195486545562744
    6. '  ' → logprob: -5.195486545562744
    7. 'a' → logprob: -5.445486545562744
    8. ' à' → logprob: -5.695486545562744
    9. ' l' → logprob: -6.070486545562744
    10. 'l' → logprob: -6.070486545562744

Token 154: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.051215577870607376
    2. ' nombre' → logprob: -3.051215648651123
    3. 'n' → logprob: -6.926215648651123
    4. ' ' → logprob: -7.801215648651123
    5. ''' → logprob: -7.926215648651123
    6. 'b' → logprob: -8.301215171813965
    7. 's' → logprob: -8.801215171813965
    8. ' nombres' → logprob: -9.551215171813965
    9. 'number' → logprob: -9.801215171813965
    10. 'Nombre' → logprob: -9.801215171813965

Token 155: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.057656168937683105
    2. 'de' → logprob: -2.9326562881469727
    3. ' ' → logprob: -6.432656288146973
    4. 'd' → logprob: -7.682656288146973
    5. ' d' → logprob: -8.057656288146973
    6. ' ' → logprob: -9.057656288146973
    7. '  ' → logprob: -9.557656288146973
    8. ' of' → logprob: -9.557656288146973
    9. '#' → logprob: -9.932656288146973
    10. '<|end|>' → logprob: -11.057656288146973

Token 156: ' caractères' (ID: 183106)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2387808859348297
    2. 'car' → logprob: -1.7387808561325073
    3. ''C' → logprob: -4.363780975341797
    4. 'B' → logprob: -4.988780975341797
    5. ' ' → logprob: -5.613780975341797
    6. 'c' → logprob: -5.738780975341797
    7. 'R' → logprob: -6.363780975341797
    8. ''esp' → logprob: -6.863780975341797
    9. 'C' → logprob: -7.113780975341797
    10. ''o' → logprob: -7.238780975341797

Token 157: ' autres' (ID: 18701)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08316151797771454
    2. ' ' → logprob: -2.7081615924835205
    3. ' '' → logprob: -4.583161354064941
    4. ''S' → logprob: -8.083161354064941
    5. 'space' → logprob: -8.208161354064941
    6. 's' → logprob: -8.458161354064941
    7. 'B' → logprob: -8.583161354064941
    8. '```' → logprob: -8.645661354064941
    9. ''s' → logprob: -8.770661354064941
    10. ''b' → logprob: -8.770661354064941

Token 158: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.47952571511268616
    2. 'que' → logprob: -0.9795256853103638
    3. ''' → logprob: -6.104525566101074
    4. 's' → logprob: -6.604525566101074
    5. '_' → logprob: -7.854525566101074
    6. 'qu' → logprob: -7.979525566101074
    7. ' ' → logprob: -9.229525566101074
    8. 'de' → logprob: -9.229525566101074
    9. ' qu' → logprob: -9.229525566101074
    10. 'ques' → logprob: -9.479525566101074

Token 159: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009802604094147682
    2. 'R' → logprob: -4.75980281829834
    3. ' '' → logprob: -8.13480281829834
    4. ''S' → logprob: -8.13480281829834
    5. ' ' → logprob: -8.88480281829834
    6. ''r' → logprob: -9.38480281829834
    7. '`' → logprob: -9.38480281829834
    8. '"' → logprob: -9.63480281829834
    9. ''A' → logprob: -10.38480281829834
    10. ' R' → logprob: -10.88480281829834

Token 160: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0384691022336483
    2. ''' → logprob: -3.288469076156616
    3. ' R' → logprob: -8.413469314575195
    4. 'B' → logprob: -10.163469314575195
    5. ' '' → logprob: -10.163469314575195
    6. '"' → logprob: -10.663469314575195
    7. ' ' → logprob: -11.163469314575195
    8. '`' → logprob: -11.288469314575195
    9. 'S' → logprob: -11.538469314575195
    10. '	R' → logprob: -11.913469314575195

Token 161: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17527185380458832
    2. ' et' → logprob: -2.55027174949646
    3. '.' → logprob: -4.300271987915039
    4. 'et' → logprob: -4.425271987915039
    5. ' '' → logprob: -4.800271987915039
    6. ' ' → logprob: -5.050271987915039
    7. ''.' → logprob: -5.175271987915039
    8. ',' → logprob: -5.300271987915039
    9. '',' → logprob: -5.425271987915039
    10. 'r' → logprob: -5.425271987915039

Token 162: ' (' (ID: 350)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7441016435623169
    2. ',' → logprob: -1.994101643562317
    3. ' ' → logprob: -1.994101643562317
    4. 's' → logprob: -2.6191015243530273
    5. '<|end|>' → logprob: -2.8691015243530273
    6. 'R' → logprob: -3.6191015243530273
    7. ' dans' → logprob: -3.9941015243530273
    8. 'dans' → logprob: -4.119101524353027
    9. 'S' → logprob: -4.744101524353027
    10. ' ,' → logprob: -4.744101524353027

Token 163: 'dans' (ID: 108151)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.843403697013855
    2. ' ' → logprob: -2.0934038162231445
    3. ',' → logprob: -2.5934038162231445
    4. 'R' → logprob: -2.7184038162231445
    5. ')' → logprob: -2.8434038162231445
    6. ' '' → logprob: -2.8434038162231445
    7. ' dans' → logprob: -3.4684038162231445
    8. ' et' → logprob: -3.8434038162231445
    9. 'dans' → logprob: -3.8434038162231445
    10. 's' → logprob: -3.8434038162231445

Token 164: ' ce' (ID: 2357)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08909256756305695
    2. ' S' → logprob: -2.589092493057251
    3. 'la' → logprob: -5.58909273147583
    4. ' la' → logprob: -5.96409273147583
    5. ' ' → logprob: -6.21409273147583
    6. 's' → logprob: -8.089092254638672
    7. ''S' → logprob: -8.651592254638672
    8. ' le' → logprob: -8.776592254638672
    9. 'l' → logprob: -8.901592254638672
    10. 'le' → logprob: -8.964092254638672

Token 165: ' cas' (ID: 2108)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9053371548652649
    2. 'S' → logprob: -2.28033709526062
    3. ' qui' → logprob: -2.40533709526062
    4. '#' → logprob: -2.90533709526062
    5. ' que' → logprob: -3.15533709526062
    6. ')' → logprob: -3.28033709526062
    7. 'code' → logprob: -3.28033709526062
    8. 's' → logprob: -3.53033709526062
    9. 'la' → logprob: -3.65533709526062
    10. 'qui' → logprob: -3.90533709526062

Token 166: ',' (ID: 11)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28120946884155273
    2. ' '' → logprob: -2.2812094688415527
    3. ',' → logprob: -2.6562094688415527
    4. 'des' → logprob: -4.781209468841553
    5. ' des' → logprob: -4.781209468841553
    6. ' ' → logprob: -4.906209468841553
    7. 'R' → logprob: -5.281209468841553
    8. 'B' → logprob: -5.281209468841553
    9. ''s' → logprob: -5.406209468841553
    10. 's' → logprob: -6.156209468841553

Token 167: ' on' (ID: 402)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10195980221033096
    2. ' '' → logprob: -2.476959705352783
    3. 'R' → logprob: -5.476959705352783
    4. ' ' → logprob: -6.101959705352783
    5. '`' → logprob: -7.601959705352783
    6. 'B' → logprob: -7.601959705352783
    7. ' R' → logprob: -7.726959705352783
    8. ''S' → logprob: -7.851959705352783
    9. 'des' → logprob: -7.851959705352783
    10. ' ' → logprob: -8.101960182189941

Token 168: ' suppose' (ID: 35968)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40441030263900757
    2. ' '' → logprob: -2.7794103622436523
    3. ' ' → logprob: -2.7794103622436523
    4. 'a' → logprob: -3.4044103622436523
    5. '#' → logprob: -3.5294103622436523
    6. 's' → logprob: -3.6544103622436523
    7. ''a' → logprob: -4.154410362243652
    8. 'r' → logprob: -5.029410362243652
    9. ')' → logprob: -5.154410362243652
    10. ' a' → logprob: -5.154410362243652

Token 169: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.835245668888092
    2. ' '' → logprob: -0.960245668888092
    3. ' ' → logprob: -2.2102456092834473
    4. ' que' → logprob: -3.0852456092834473
    5. ''un' → logprob: -5.585245609283447
    6. 's' → logprob: -5.710245609283447
    7. ' qu' → logprob: -5.835245609283447
    8. ' des' → logprob: -6.085245609283447
    9. ''s' → logprob: -6.335245609283447
    10. ''u' → logprob: -6.710245609283447

Token 170: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5249404311180115
    2. ''' → logprob: -1.0249404907226562
    3. ' '' → logprob: -4.024940490722656
    4. ' ' → logprob: -4.524940490722656
    5. ' B' → logprob: -4.899940490722656
    6. 'R' → logprob: -5.149940490722656
    7. 'V' → logprob: -6.899940490722656
    8. ''S' → logprob: -7.024940490722656
    9. ' les' → logprob: -7.649940490722656
    10. '')' → logprob: -7.712440490722656

Token 171: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.10766599327325821
    2. ')' → logprob: -2.857666015625
    3. '').' → logprob: -3.357666015625
    4. ''' → logprob: -5.232666015625
    5. ').' → logprob: -6.232666015625
    6. ' ')' → logprob: -7.482666015625
    7. ' )' → logprob: -7.607666015625
    8. '')
' → logprob: -8.482666015625
    9. ' ').' → logprob: -8.482666015625
    10. ')').' → logprob: -8.857666015625

Token 172: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00016277639952022582
    2. ' =' → logprob: -10.250163078308105
    3. ' B' → logprob: -10.500163078308105
    4. '#' → logprob: -10.750163078308105
    5. '
' → logprob: -11.125163078308105
    6. '.' → logprob: -11.250163078308105
    7. ' ' → logprob: -11.375163078308105
    8. '=' → logprob: -11.625163078308105
    9. '<|end|>' → logprob: -11.625163078308105
    10. 'b' → logprob: -12.250163078308105

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407740354537964
    2. '=' → logprob: -0.9740774035453796
    3. ' ' → logprob: -15.099077224731445
    4. ')' → logprob: -17.474077224731445
    5. '=int' → logprob: -17.724077224731445
    6. '＝' → logprob: -17.724077224731445
    7. ' +=' → logprob: -18.224077224731445
    8. ' =
' → logprob: -18.224077224731445
    9. '0' → logprob: -18.349077224731445
    10. ' ' → logprob: -18.349077224731445

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.254077911376953
    4. '  ' → logprob: -18.504077911376953
    5. '۰' → logprob: -18.879077911376953
    6. '   ' → logprob: -19.691577911376953
    7. '00' → logprob: -19.816577911376953
    8. '1' → logprob: -20.316577911376953
    9. '０' → logprob: -20.691577911376953
    10. 'int' → logprob: -20.816577911376953

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -18.625009536743164
    4. '00' → logprob: -19.875009536743164
    5. '０' → logprob: -20.000009536743164
    6. 'int' → logprob: -20.125009536743164
    7. '   ' → logprob: -20.375009536743164
    8. '```' → logprob: -20.375009536743164
    9. '  ' → logprob: -20.812509536743164
    10. '000' → logprob: -20.875009536743164

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007499082013964653
    2. 'for' → logprob: -5.0074992179870605
    3. ' for' → logprob: -7.5074992179870605
    4. '

' → logprob: -9.007498741149902
    5. '
' → logprob: -10.132498741149902
    6. ' 
' → logprob: -10.632498741149902
    7. '\n' → logprob: -10.757498741149902
    8. '<|end|>' → logprob: -11.007498741149902
    9. '' → logprob: -12.382498741149902
    10. 'n' → logprob: -13.507498741149902

Token 177: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10306185483932495
    2. 'f' → logprob: -2.3530619144439697
    3. '
' → logprob: -6.228061676025391
    4. 'i' → logprob: -7.728061676025391
    5. ' for' → logprob: -8.10306167602539
    6. '' → logprob: -10.10306167602539
    7. 'n' → logprob: -10.47806167602539
    8. '#' → logprob: -10.97806167602539
    9. '

' → logprob: -11.10306167602539
    10. ' 
' → logprob: -11.60306167602539

Token 178: ' Comm' (ID: 57464)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005760280764661729
    2. 'f' → logprob: -7.500576019287109
    3. 'fo' → logprob: -11.37557601928711
    4. ' for' → logprob: -11.87557601928711
    5. 'i' → logprob: -12.87557601928711
    6. '#' → logprob: -14.12557601928711
    7. '
' → logprob: -14.50057601928711
    8. 'F' → logprob: -15.75057601928711
    9. 'For' → logprob: -16.25057601928711
    10. '```' → logprob: -16.50057601928711

Token 179: 'ence' (ID: 1082)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.011893508955836296
    2. 'ente' → logprob: -4.761893272399902
    3. 'e' → logprob: -6.261893272399902
    4. 'en' → logprob: -7.886893272399902
    5. '#' → logprob: -8.511893272399902
    6. 'entar' → logprob: -8.636893272399902
    7. 'enter' → logprob: -8.761893272399902
    8. 'enta' → logprob: -8.886893272399902
    9. 'ence' → logprob: -9.761893272399902
    10. 'entre' → logprob: -10.011893272399902

Token 180: ' une' (ID: 2463)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5841849446296692
    2. ' ' → logprob: -0.9591849446296692
    3. 'for' → logprob: -3.4591848850250244
    4. ' a' → logprob: -4.2091851234436035
    5. ' i' → logprob: -4.9591851234436035
    6. ' 
' → logprob: -6.0841851234436035
    7. ' ' → logprob: -7.5841851234436035
    8. '
' → logprob: -7.7091851234436035
    9. ' à' → logprob: -7.9591851234436035
    10. ':' → logprob: -7.9591851234436035

Token 181: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1008979082107544
    2. 'for' → logprob: -2.350897789001465
    3. ' ' → logprob: -7.600897789001465
    4. ' f' → logprob: -9.850897789001465
    5. ' boucle' → logprob: -9.975897789001465
    6. ' 
' → logprob: -10.975897789001465
    7. ' ' → logprob: -11.350897789001465
    8. ' space' → logprob: -11.850897789001465
    9. ':' → logprob: -11.975897789001465
    10. 'f' → logprob: -12.225897789001465

Token 182: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28234750032424927
    2. 'for' → logprob: -1.4073474407196045
    3. ' 
' → logprob: -6.907347679138184
    4. '
' → logprob: -9.157347679138184
    5. ' ' → logprob: -10.782347679138184
    6. ' ' → logprob: -11.282347679138184
    7. 'f' → logprob: -11.532347679138184
    8. ':' → logprob: -11.657347679138184
    9. 's' → logprob: -12.032347679138184
    10. 'e' → logprob: -12.532347679138184

Token 183: ' qui' (ID: 2780)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0231154914945364
    2. ' ' → logprob: -4.398115634918213
    3. ' for' → logprob: -5.398115634918213
    4. 'i' → logprob: -5.773115634918213
    5. ' _' → logprob: -7.023115634918213
    6. ' ' → logprob: -7.148115634918213
    7. 'for' → logprob: -8.273115158081055
    8. '_' → logprob: -8.648115158081055
    9. ' n' → logprob: -8.773115158081055
    10. ' range' → logprob: -8.898115158081055

Token 184: ' va' (ID: 3423)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003563965205103159
    2. 'i' → logprob: -6.37856388092041
    3. ' ' → logprob: -6.62856388092041
    4. ' _' → logprob: -8.62856388092041
    5. ' range' → logprob: -8.62856388092041
    6. '_' → logprob: -9.62856388092041
    7. ' iter' → logprob: -10.62856388092041
    8. 's' → logprob: -11.25356388092041
    9. ' for' → logprob: -11.87856388092041
    10. 'range' → logprob: -11.87856388092041

Token 185: ' parcour' (ID: 130642)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11415532231330872
    2. ' parcour' → logprob: -2.7391552925109863
    3. 'i' → logprob: -3.4891552925109863
    4. ' range' → logprob: -5.614155292510986
    5. ' ' → logprob: -5.614155292510986
    6. ' iter' → logprob: -5.864155292510986
    7. ' for' → logprob: -7.739155292510986
    8. 'range' → logprob: -7.739155292510986
    9. ' _' → logprob: -7.864155292510986
    10. ' travers' → logprob: -8.614155769348145

Token 186: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.27108925580978394
    2. 'r' → logprob: -2.3960893154144287
    3. 'er' → logprob: -2.7710893154144287
    4. 'i' → logprob: -3.2710893154144287
    5. ' i' → logprob: -3.5210893154144287
    6. 'u' → logprob: -4.89608907699585
    7. ' ' → logprob: -6.02108907699585
    8. 'ur' → logprob: -6.89608907699585
    9. '_' → logprob: -7.14608907699585
    10. ' _' → logprob: -7.77108907699585

Token 187: ' chaque' (ID: 21194)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12185332179069519
    2. 'range' → logprob: -2.3718533515930176
    3. ' S' → logprob: -4.996853351593018
    4. ' ' → logprob: -5.121853351593018
    5. ' i' → logprob: -5.996853351593018
    6. 'S' → logprob: -6.746853351593018
    7. 'N' → logprob: -7.246853351593018
    8. ' ' → logprob: -7.246853351593018
    9. ' _' → logprob: -7.371853351593018
    10. ' N' → logprob: -7.621853351593018

Token 188: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023561418056488037
    2. ' caract' → logprob: -4.523561477661133
    3. ' c' → logprob: -5.398561477661133
    4. ' caractère' → logprob: -5.398561477661133
    5. ' i' → logprob: -6.273561477661133
    6. 'c' → logprob: -7.273561477661133
    7. 'car' → logprob: -8.273561477661133
    8. ' _' → logprob: -9.148561477661133
    9. 'i' → logprob: -9.523561477661133
    10. ' caractères' → logprob: -9.648561477661133

Token 189: ' individuel' (ID: 178936)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0023606636095792055
    2. ' in' → logprob: -7.002360820770264
    3. ' i' → logprob: -7.502360820770264
    4. 's' → logprob: -7.627360820770264
    5. ' de' → logprob: -9.627360343933105
    6. '_' → logprob: -9.752360343933105
    7. '  ' → logprob: -9.752360343933105
    8. 'in' → logprob: -9.877360343933105
    9. ' ,' → logprob: -10.877360343933105
    10. ' s' → logprob: -10.877360343933105

Token 190: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.046466533094644547
    2. ' i' → logprob: -3.546466588973999
    3. 's' → logprob: -5.04646635055542
    4. ' c' → logprob: -5.42146635055542
    5. ' in' → logprob: -5.79646635055542
    6. ' s' → logprob: -7.17146635055542
    7. ' de' → logprob: -7.17146635055542
    8. 'i' → logprob: -8.546466827392578
    9. 'c' → logprob: -8.671466827392578
    10. ' a' → logprob: -8.796466827392578

Token 191: ' la' (ID: 557)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.16065149009227753
    2. 'S' → logprob: -1.910651445388794
    3. ' ' → logprob: -7.910651683807373
    4. 's' → logprob: -10.910651206970215
    5. ' la' → logprob: -11.285651206970215
    6. ' le' → logprob: -11.535651206970215
    7. ' ' → logprob: -12.035651206970215
    8. ' range' → logprob: -12.535651206970215
    9. 'range' → logprob: -12.785651206970215
    10. ' the' → logprob: -13.160651206970215

Token 192: ' chaîne' (ID: 89288)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.578436017036438
    2. ' S' → logprob: -0.828436017036438
    3. ' ' → logprob: -6.578435897827148
    4. 's' → logprob: -7.203435897827148
    5. ' string' → logprob: -9.328435897827148
    6. 'chaine' → logprob: -9.703435897827148
    7. ' chaîne' → logprob: -9.953435897827148
    8. 'string' → logprob: -10.078435897827148
    9. ' range' → logprob: -10.453435897827148
    10. ' ' → logprob: -10.578435897827148

Token 193: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3914472758769989
    2. 'S' → logprob: -1.1414473056793213
    3. ' ' → logprob: -5.516447067260742
    4. 's' → logprob: -7.766447067260742
    5. ' de' → logprob: -10.016447067260742
    6. ' s' → logprob: -10.891447067260742
    7. ' for' → logprob: -11.391447067260742
    8. ' ' → logprob: -11.641447067260742
    9. ' `' → logprob: -12.266447067260742
    10. 'for' → logprob: -12.266447067260742

Token 194: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18984168767929077
    2. ' for' → logprob: -2.3148417472839355
    3. ':' → logprob: -2.9398417472839355
    4. 'f' → logprob: -4.1898417472839355
    5. ':
' → logprob: -5.9398417472839355
    6. '
' → logprob: -6.5648417472839355
    7. ' 
' → logprob: -7.3148417472839355
    8. '.' → logprob: -8.189841270446777
    9. ' f' → logprob: -8.689841270446777
    10. ' ' → logprob: -8.814841270446777

Token 195: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011173540260642767
    2. ' for' → logprob: -7.37611722946167
    3. 'f' → logprob: -7.62611722946167
    4. '
' → logprob: -13.876117706298828
    5. 'fo' → logprob: -14.501117706298828
    6. ':' → logprob: -14.876117706298828
    7. 'i' → logprob: -15.001117706298828
    8. '```' → logprob: -15.251117706298828
    9. 'F' → logprob: -15.751117706298828
    10. 'e' → logprob: -16.001117706298828

Token 196: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03387551009654999
    2. ' for' → logprob: -3.4088754653930664
    3. 'f' → logprob: -8.408875465393066
    4. ' 
' → logprob: -13.283875465393066
    5. '
' → logprob: -13.408875465393066
    6. ' ' → logprob: -13.908875465393066
    7. '```' → logprob: -14.033875465393066
    8. ' f' → logprob: -14.533875465393066
    9. 'fo' → logprob: -14.783875465393066
    10. 'i' → logprob: -15.783875465393066

Token 197: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4165768027305603
    2. ' for' → logprob: -1.166576862335205
    3. ' ' → logprob: -3.666576862335205
    4. 'f' → logprob: -6.666576862335205
    5. 'r' → logprob: -7.041576862335205
    6. 'c' → logprob: -8.416576385498047
    7. 's' → logprob: -8.541576385498047
    8. 'i' → logprob: -8.791576385498047
    9. ':' → logprob: -8.916576385498047
    10. 't' → logprob: -9.166576385498047

Token 198: ' '' (ID: 461)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.32710638642311096
    2. 'c' → logprob: -1.8271063566207886
    3. ' i' → logprob: -2.327106475830078
    4. 'i' → logprob: -3.952106475830078
    5. ' ' → logprob: -7.327106475830078
    6. ' caract' → logprob: -8.702106475830078
    7. ' char' → logprob: -8.952106475830078
    8. 'ch' → logprob: -9.202106475830078
    9. 'car' → logprob: -9.577106475830078
    10. ' car' → logprob: -10.077106475830078

Token 199: 'i' (ID: 72)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026419654488563538
    2. ' c' → logprob: -4.026419639587402
    3. 'car' → logprob: -5.651419639587402
    4. 'i' → logprob: -6.151419639587402
    5. 'char' → logprob: -6.401419639587402
    6. 'ch' → logprob: -7.776419639587402
    7. ' i' → logprob: -8.526419639587402
    8. ' caract' → logprob: -8.776419639587402
    9. ' char' → logprob: -9.776419639587402
    10. ' caractère' → logprob: -10.651419639587402

Token 200: ''' (ID: 6)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3611907660961151
    2. ' in' → logprob: -1.8611907958984375
    3. 'in' → logprob: -2.3611907958984375
    4. ' ' → logprob: -3.6111907958984375
    5. ' n' → logprob: -4.6111907958984375
    6. ''' → logprob: -4.9861907958984375
    7. 's' → logprob: -5.4861907958984375
    8. ' '' → logprob: -7.2361907958984375
    9. 'nt' → logprob: -7.2361907958984375
    10. '  ' → logprob: -7.4861907958984375

Token 201: ' prendra' (ID: 199464)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6767892241477966
    2. ' ' → logprob: -1.0517892837524414
    3. 'in' → logprob: -2.0517892837524414
    4. '<|end|>' → logprob: -4.926789283752441
    5. ',' → logprob: -5.926789283752441
    6. '  ' → logprob: -6.676789283752441
    7. ' ,' → logprob: -6.926789283752441
    8. ')' → logprob: -7.801789283752441
    9. 's' → logprob: -7.926789283752441
    10. ' for' → logprob: -9.176789283752441

Token 202: ' success' (ID: 3505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1267615705728531
    2. 's' → logprob: -3.1267616748809814
    3. '_' → logprob: -3.7517616748809814
    4. '  ' → logprob: -4.626761436462402
    5. ''' → logprob: -5.126761436462402
    6. ' in' → logprob: -5.126761436462402
    7. 'in' → logprob: -5.626761436462402
    8. 'space' → logprob: -5.876761436462402
    9. '<|end|>' → logprob: -6.001761436462402
    10. ' la' → logprob: -6.376761436462402

Token 203: 'ivement' (ID: 37978)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.40723270177841187
    2. 'ivement' → logprob: -2.0322327613830566
    3. 'ent' → logprob: -2.9072327613830566
    4. 'ement' → logprob: -3.2822327613830566
    5. 'es' → logprob: -3.5322327613830566
    6. 'u' → logprob: -3.7822327613830566
    7. 'ment' → logprob: -4.157232761383057
    8. 'emment' → logprob: -5.657232761383057
    9. 'eur' → logprob: -5.907232761383057
    10. 'um' → logprob: -6.032232761383057

Token 204: ' la' (ID: 557)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.5097684860229492
    2. 's' → logprob: -2.009768486022949
    3. 'each' → logprob: -2.634768486022949
    4. 'le' → logprob: -3.009768486022949
    5. ' la' → logprob: -3.884768486022949
    6. ' each' → logprob: -3.884768486022949
    7. ' chacune' → logprob: -4.384768486022949
    8. ' ' → logprob: -4.384768486022949
    9. '_' → logprob: -4.509768486022949
    10. 'val' → logprob: -4.634768486022949

Token 205: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.059354018419981
    2. ' valeur' → logprob: -3.059354066848755
    3. ' val' → logprob: -5.934353828430176
    4. 'chaine' → logprob: -6.059353828430176
    5. 'value' → logprob: -6.684353828430176
    6. 'car' → logprob: -7.434353828430176
    7. 'position' → logprob: -7.559353828430176
    8. 's' → logprob: -8.059353828430176
    9. 'cha' → logprob: -8.059353828430176
    10. 'S' → logprob: -8.059353828430176

Token 206: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6353167295455933
    2. 's' → logprob: -2.010316848754883
    3. 'in' → logprob: -2.385316848754883
    4. ' in' → logprob: -2.385316848754883
    5. ' de' → logprob: -2.760316848754883
    6. '  ' → logprob: -3.885316848754883
    7. '_' → logprob: -4.510316848754883
    8. ' '' → logprob: -4.510316848754883
    9. ' S' → logprob: -4.885316848754883
    10. ' i' → logprob: -5.010316848754883

Token 207: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.7545638680458069
    2. ' ' → logprob: -1.754563808441162
    3. 'S' → logprob: -2.254563808441162
    4. ' S' → logprob: -2.379563808441162
    5. 's' → logprob: -3.004563808441162
    6. ' each' → logprob: -3.129563808441162
    7. ' chacun' → logprob: -3.504563808441162
    8. 'each' → logprob: -4.004563808441162
    9. ' chacune' → logprob: -5.754563808441162
    10. ' range' → logprob: -6.004563808441162

Token 208: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.22309263050556183
    2. ' ' → logprob: -1.9730926752090454
    3. ' caractère' → logprob: -3.098092555999756
    4. ' caract' → logprob: -4.723092555999756
    5. 'c' → logprob: -5.473092555999756
    6. ' i' → logprob: -6.848092555999756
    7. ' c' → logprob: -7.973092555999756
    8. ' caractères' → logprob: -8.098093032836914
    9. ' car' → logprob: -8.348093032836914
    10. 'i' → logprob: -8.348093032836914

Token 209: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4472454786300659
    2. 's' → logprob: -1.947245478630066
    3. 'in' → logprob: -2.0722455978393555
    4. ' in' → logprob: -3.3222455978393555
    5. 'dans' → logprob: -4.3222455978393555
    6. 'i' → logprob: -5.1972455978393555
    7. ' de' → logprob: -5.1972455978393555
    8. 'de' → logprob: -5.3222455978393555
    9. ' dans' → logprob: -5.4472455978393555
    10. ' i' → logprob: -5.4472455978393555

Token 210: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015330599620938301
    2. 'f' → logprob: -4.265330791473389
    3. ' for' → logprob: -6.765330791473389
    4. 'i' → logprob: -12.39033031463623
    5. '```' → logprob: -12.76533031463623
    6. 'F' → logprob: -13.51533031463623
    7. 'fo' → logprob: -13.64033031463623
    8. ':' → logprob: -13.76533031463623
    9. '
' → logprob: -14.39033031463623
    10. ' 
' → logprob: -14.39033031463623

Token 211: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015307119116187096
    2. 'i' → logprob: -4.7653069496154785
    3. ' ' → logprob: -5.0153069496154785
    4. ' ' → logprob: -10.640307426452637
    5. '  ' → logprob: -12.640307426452637
    6. '	i' → logprob: -13.015307426452637
    7. ' ‌' → logprob: -13.390307426452637
    8. ' caract' → logprob: -14.265307426452637
    9. ' c' → logprob: -14.515307426452637
    10. ' ' → logprob: -14.765307426452637

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03884219378232956
    2. 'in' → logprob: -3.28884220123291
    3. ' ' → logprob: -7.16384220123291
    4. 's' → logprob: -11.28884220123291
    5. '  ' → logprob: -12.41384220123291
    6. 'n' → logprob: -12.53884220123291
    7. ' i' → logprob: -13.53884220123291
    8. ' ' → logprob: -14.53884220123291
    9. ',' → logprob: -14.66384220123291
    10. ' "' → logprob: -14.91384220123291

Token 213: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.38700783252716064
    2. 'S' → logprob: -1.1370078325271606
    3. ' range' → logprob: -9.012007713317871
    4. ' ' → logprob: -11.762007713317871
    5. 'range' → logprob: -11.887007713317871
    6. ' ' → logprob: -16.012008666992188
    7. 's' → logprob: -16.387008666992188
    8. '(S' → logprob: -17.887008666992188
    9. ' s' → logprob: -18.137008666992188
    10. '<S' → logprob: -18.137008666992188

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.05499910004437e-05
    2. ' :' → logprob: -9.500090599060059
    3. ':
' → logprob: -11.125090599060059
    4. '=' → logprob: -14.875090599060059
    5. '):' → logprob: -15.000090599060059
    6. '>' → logprob: -17.125089645385742
    7. ',' → logprob: -17.125089645385742
    8. ':**' → logprob: -17.375089645385742
    9. '：' → logprob: -17.750089645385742
    10. ')' → logprob: -17.875089645385742

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11626845598220825
    2. ' ' → logprob: -3.3662683963775635
    3. ':' → logprob: -3.4912683963775635
    4. ' if' → logprob: -4.116268634796143
    5. 'if' → logprob: -4.491268634796143
    6. '
' → logprob: -5.116268634796143
    7. '<|end|>' → logprob: -5.366268634796143
    8. ' 
' → logprob: -6.241268634796143
    9. '    
' → logprob: -6.491268634796143
    10. '  ' → logprob: -6.741268634796143

Token 216: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02028738148510456
    2. ' if' → logprob: -4.27028751373291
    3. '   ' → logprob: -5.27028751373291
    4. 'i' → logprob: -7.39528751373291
    5. ' ' → logprob: -8.27028751373291
    6. '    ' → logprob: -9.77028751373291
    7. '  ' → logprob: -11.39528751373291
    8. '```' → logprob: -11.89528751373291
    9. ':' → logprob: -12.02028751373291
    10. ' i' → logprob: -12.89528751373291

Token 217: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0016168579459190369
    2. ' if' → logprob: -6.501616954803467
    3. '   ' → logprob: -9.126616477966309
    4. ' ' → logprob: -13.001616477966309
    5. 'i' → logprob: -13.251616477966309
    6. '    ' → logprob: -14.251616477966309
    7. '```' → logprob: -14.501616477966309
    8. '  ' → logprob: -14.876616477966309
    9. '
' → logprob: -16.501617431640625
    10. '	if' → logprob: -16.751617431640625

Token 218: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2917424738407135
    2. '   ' → logprob: -1.4167424440383911
    3. 'ifie' → logprob: -4.916742324829102
    4. 'e' → logprob: -7.791742324829102
    5. ' if' → logprob: -7.916742324829102
    6. ' ' → logprob: -8.041742324829102
    7. '=' → logprob: -8.541742324829102
    8. '#' → logprob: -8.541742324829102
    9. 'ifier' → logprob: -8.666742324829102
    10. 'a' → logprob: -8.666742324829102

Token 219: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7889331579208374
    2. '   ' → logprob: -1.1639331579208374
    3. ' ' → logprob: -2.288933277130127
    4. 'if' → logprob: -2.663933277130127
    5. ' si' → logprob: -3.788933277130127
    6. '    ' → logprob: -3.788933277130127
    7. 'si' → logprob: -5.038933277130127
    8. '  ' → logprob: -5.288933277130127
    9. ' i' → logprob: -5.788933277130127
    10. 'i' → logprob: -6.788933277130127

Token 220: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008618946187198162
    2. 'i' → logprob: -4.7586188316345215
    3. ' ' → logprob: -12.75861930847168
    4. '	i' → logprob: -14.00861930847168
    5. ' ' → logprob: -14.50861930847168
    6. '(i' → logprob: -16.00861930847168
    7. '   ' → logprob: -16.38361930847168
    8. '  ' → logprob: -17.13361930847168
    9. '[i' → logprob: -17.50861930847168
    10. '_i' → logprob: -18.25861930847168

Token 221: ' caractère' (ID: 80509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246178403496742
    2. ' i' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.273245811462402
    4. '	i' → logprob: -16.14824676513672
    5. '   ' → logprob: -17.14824676513672
    6. ' ' → logprob: -17.77324676513672
    7. '_i' → logprob: -18.27324676513672
    8. '[i' → logprob: -18.52324676513672
    9. '  ' → logprob: -18.52324676513672
    10. '(i' → logprob: -19.02324676513672

Token 222: ' actuel' (ID: 113646)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.049302391707897186
    2. 'i' → logprob: -3.049302339553833
    3. ' ==' → logprob: -7.799302577972412
    4. ' ' → logprob: -8.424302101135254
    5. '==' → logprob: -9.674302101135254
    6. '[i' → logprob: -11.924302101135254
    7. '   ' → logprob: -12.174302101135254
    8. '  ' → logprob: -13.299302101135254
    9. '=' → logprob: -13.424302101135254
    10. ' is' → logprob: -13.549302101135254

Token 223: ' '' (ID: 461)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07563982903957367
    2. '==' → logprob: -2.8256397247314453
    3. '=' → logprob: -5.075639724731445
    4. ' ' → logprob: -5.200639724731445
    5. '   ' → logprob: -7.200639724731445
    6. 's' → logprob: -8.825639724731445
    7. ' i' → logprob: -8.825639724731445
    8. ' est' → logprob: -9.075639724731445
    9. ' =' → logprob: -9.075639724731445
    10. '  ' → logprob: -9.575639724731445

Token 224: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018151700496673584
    2. ' i' → logprob: -4.018151760101318
    3. ' ' → logprob: -13.39315128326416
    4. '   ' → logprob: -16.393152236938477
    5. ''i' → logprob: -16.768152236938477
    6. '	i' → logprob: -17.018152236938477
    7. ' ' → logprob: -17.393152236938477
    8. '  ' → logprob: -18.018152236938477
    9. '[i' → logprob: -18.643152236938477
    10. '`' → logprob: -18.643152236938477

Token 225: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5537891387939453
    2. '=='' → logprob: -1.5537891387939453
    3. ' '' → logprob: -1.8037891387939453
    4. ' =='' → logprob: -3.3037891387939453
    5. ' ==' → logprob: -4.553789138793945
    6. '='' → logprob: -6.803789138793945
    7. '==' → logprob: -8.303789138793945
    8. ''est' → logprob: -9.303789138793945
    9. ' est' → logprob: -9.303789138793945
    10. ' ='' → logprob: -9.553789138793945

Token 226: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14660555124282837
    2. '==' → logprob: -2.0216054916381836
    3. '=' → logprob: -6.646605491638184
    4. ' est' → logprob: -7.021605491638184
    5. '=='' → logprob: -7.521605491638184
    6. ' ' → logprob: -7.771605491638184
    7. 'est' → logprob: -8.771605491638184
    8. ' =='' → logprob: -9.021605491638184
    9. '   ' → logprob: -9.396605491638184
    10. 's' → logprob: -9.896605491638184

Token 227: ' égal' (ID: 15059)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1332397758960724
    2. ' '' → logprob: -3.25823974609375
    3. ' égal' → logprob: -3.50823974609375
    4. '=' → logprob: -3.75823974609375
    5. ' equal' → logprob: -4.38323974609375
    6. 'R' → logprob: -5.00823974609375
    7. ' ==' → logprob: -5.38323974609375
    8. 'equal' → logprob: -6.13323974609375
    9. ''E' → logprob: -6.88323974609375
    10. '==' → logprob: -6.88323974609375

Token 228: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.922722578048706
    2. ''' → logprob: -1.172722578048706
    3. ''à' → logprob: -1.547722578048706
    4. ' ' → logprob: -3.422722578048706
    5. 'à' → logprob: -3.547722578048706
    6. ' '' → logprob: -4.922722816467285
    7. ' a' → logprob: -5.547722816467285
    8. ''a' → logprob: -6.297722816467285
    9. 'to' → logprob: -6.547722816467285
    10. 'a' → logprob: -7.172722816467285

Token 229: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012352262856438756
    2. ' '' → logprob: -7.126235008239746
    3. 'R' → logprob: -8.126235008239746
    4. '"' → logprob: -9.126235008239746
    5. ''r' → logprob: -12.001235008239746
    6. ''A' → logprob: -12.126235008239746
    7. ''S' → logprob: -12.126235008239746
    8. ''T' → logprob: -12.876235008239746
    9. ''Re' → logprob: -13.626235008239746
    10. ' R' → logprob: -14.251235008239746

Token 230: ' lettre' (ID: 68013)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009509448893368244
    2. 'R' → logprob: -4.759509563446045
    3. ' '' → logprob: -7.509509563446045
    4. '"' → logprob: -8.134509086608887
    5. ''r' → logprob: -10.884509086608887
    6. ' R' → logprob: -11.384509086608887
    7. ''A' → logprob: -12.384509086608887
    8. '`' → logprob: -12.884509086608887
    9. ''S' → logprob: -12.884509086608887
    10. ''Re' → logprob: -13.384509086608887

Token 231: ' maj' (ID: 15575)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09774277359247208
    2. 'R' → logprob: -2.472742795944214
    3. ' '' → logprob: -4.847742557525635
    4. ' R' → logprob: -7.222742557525635
    5. '"' → logprob: -9.222743034362793
    6. '`' → logprob: -10.222743034362793
    7. '```' → logprob: -11.472743034362793
    8. ' ' → logprob: -11.597743034362793
    9. ''S' → logprob: -12.097743034362793
    10. ' ' → logprob: -12.097743034362793

Token 232: 'usc' (ID: 30081)
  Prédit: 'ale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.4949653446674347
    2. ''' → logprob: -1.6199653148651123
    3. 'a' → logprob: -3.1199653148651123
    4. 'R' → logprob: -3.1199653148651123
    5. 'e' → logprob: -3.1199653148651123
    6. '"' → logprob: -3.9949653148651123
    7. '`' → logprob: -4.994965553283691
    8. 'u' → logprob: -5.119965553283691
    9. ''A' → logprob: -5.369965553283691
    10. 'ule' → logprob: -5.494965553283691

Token 233: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.011111481115221977
    2. 'ale' → logprob: -4.511111259460449
    3. 'le' → logprob: -10.76111125946045
    4. 'e' → logprob: -11.51111125946045
    5. 'ULE' → logprob: -11.51111125946045
    6. 'ula' → logprob: -12.38611125946045
    7. 'ole' → logprob: -12.38611125946045
    8. 'u' → logprob: -13.01111125946045
    9. '```' → logprob: -13.13611125946045
    10. 'ules' → logprob: -13.26111125946045

Token 234: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012194440700113773
    2. 'R' → logprob: -4.637194633483887
    3. ' '' → logprob: -6.137194633483887
    4. '"' → logprob: -8.637194633483887
    5. ' R' → logprob: -9.887194633483887
    6. '`' → logprob: -10.762194633483887
    7. ' ' → logprob: -11.637194633483887
    8. ' ' → logprob: -12.512194633483887
    9. ''r' → logprob: -13.012194633483887
    10. '_R' → logprob: -13.512194633483887

Token 235: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0001097417771234177
    2. ''' → logprob: -9.125109672546387
    3. ' R' → logprob: -14.375109672546387
    4. '`' → logprob: -16.250110626220703
    5. '"' → logprob: -16.625110626220703
    6. 'B' → logprob: -18.125110626220703
    7. '```' → logprob: -18.750110626220703
    8. '_R' → logprob: -19.125110626220703
    9. 'Ｒ' → logprob: -19.125110626220703
    10. '	R' → logprob: -19.500110626220703

Token 236: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4827117323875427
    2. '':' → logprob: -0.9827117323875427
    3. '':
' → logprob: -5.4827117919921875
    4. ':' → logprob: -5.6077117919921875
    5. ' '' → logprob: -7.8577117919921875
    6. 'R' → logprob: -9.107711791992188
    7. ' ':' → logprob: -9.232711791992188
    8. '   ' → logprob: -10.232711791992188
    9. ':'' → logprob: -10.857711791992188
    10. ':
' → logprob: -11.107711791992188

Token 237: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046796370297670364
    2. '   ' → logprob: -3.2967963218688965
    3. ' :' → logprob: -4.9217963218688965
    4. ':
' → logprob: -7.0467963218688965
    5. 'if' → logprob: -8.296796798706055
    6. ' if' → logprob: -9.421796798706055
    7. ' :
' → logprob: -9.421796798706055
    8. ' ' → logprob: -10.046796798706055
    9. '  ' → logprob: -10.046796798706055
    10. '    ' → logprob: -10.921796798706055

Token 238: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05984434485435486
    2. ':' → logprob: -2.9348442554473877
    3. 'if' (adapté à ' if') → logprob: -6.309844493865967
    4. ' :' → logprob: -6.559844493865967
    5. ' if' → logprob: -6.934844493865967
    6. ':
' → logprob: -8.309844017028809
    7. '    
' → logprob: -8.934844017028809
    8. '    ' → logprob: -9.184844017028809
    9. '  ' → logprob: -9.559844017028809
    10. ' :
' → logprob: -9.809844017028809

Token 239: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00014239625306800008
    2. 'i' → logprob: -8.875142097473145
    3. ' ' → logprob: -13.500142097473145
    4. ' ' → logprob: -13.875142097473145
    5. '	i' → logprob: -16.12514305114746
    6. '(i' → logprob: -17.75014305114746
    7. '   ' → logprob: -18.75014305114746
    8. '  ' → logprob: -19.12514305114746
    9. ' ‌' → logprob: -19.25014305114746
    10. '[i' → logprob: -19.75014305114746

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03367958590388298
    2. '==' → logprob: -3.408679485321045
    3. '=' → logprob: -10.658679962158203
    4. ' =='' → logprob: -12.408679962158203
    5. '=='' → logprob: -12.908679962158203
    6. ' =' → logprob: -13.408679962158203
    7. ' ' → logprob: -13.408679962158203
    8. ' =="' → logprob: -15.158679962158203
    9. '[' → logprob: -16.033679962158203
    10. '=="' → logprob: -16.033679962158203

Token 241: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0038316678255796432
    2. ' '' → logprob: -5.62883186340332
    3. '"' → logprob: -8.37883186340332
    4. ' "' → logprob: -14.00383186340332
    5. 'R' → logprob: -15.50383186340332
    6. ''A' → logprob: -15.62883186340332
    7. ''S' → logprob: -16.00383186340332
    8. ' ' → logprob: -16.12883186340332
    9. ' ' → logprob: -16.50383186340332
    10. ''Re' → logprob: -16.75383186340332

Token 242: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.9361264946837764e-07
    2. ' R' → logprob: -15.75
    3. '"' → logprob: -17.0
    4. ''' → logprob: -18.125
    5. '	R' → logprob: -20.75
    6. 'Ｒ' → logprob: -20.875
    7. 'B' → logprob: -21.125
    8. '_R' → logprob: -21.125
    9. 'r' → logprob: -21.5
    10. '.R' → logprob: -22.125

Token 243: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.16674254834651947
    2. '"' → logprob: -1.9167425632476807
    3. '":
' → logprob: -5.041742324829102
    4. '":
' → logprob: -11.291742324829102
    5. ' "' → logprob: -12.041742324829102
    6. 'R' → logprob: -12.166742324829102
    7. ''' → logprob: -12.291742324829102
    8. '":

' → logprob: -13.541742324829102
    9. ':' → logprob: -13.791742324829102
    10. '':' → logprob: -14.041742324829102

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14002946019172668
    2. '   ' → logprob: -2.2650294303894043
    3. ':' → logprob: -3.7650294303894043
    4. 'R' → logprob: -6.515029430389404
    5. ' R' → logprob: -7.265029430389404
    6. '
' → logprob: -7.390029430389404
    7. '    ' → logprob: -8.515029907226562
    8. '    
' → logprob: -8.890029907226562
    9. ':
' → logprob: -9.140029907226562
    10. '  ' → logprob: -9.765029907226562

Token 245: ' #' (ID: 1069)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.25345414876937866
    2. 'R' → logprob: -1.5034542083740234
    3. '
' → logprob: -7.628454208374023
    4. '   ' → logprob: -8.003454208374023
    5. '       ' → logprob: -8.003454208374023
    6. ' 
' → logprob: -8.128454208374023
    7. '    
' → logprob: -10.503454208374023
    8. ' ' → logprob: -11.128454208374023
    9. '           ' → logprob: -11.503454208374023
    10. '    ' → logprob: -11.753454208374023

Token 246: ' Si' (ID: 7832)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20155104994773865
    2. ' R' → logprob: -1.701551079750061
    3. '   ' → logprob: -8.95155143737793
    4. ' ' → logprob: -12.70155143737793
    5. '       ' → logprob: -13.57655143737793
    6. '    ' → logprob: -14.07655143737793
    7. '    
' → logprob: -14.32655143737793
    8. '
' → logprob: -14.32655143737793
    9. '  ' → logprob: -14.82655143737793
    10. ' 
' → logprob: -14.95155143737793

Token 247: ' c' (ID: 274)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.016245033591985703
    2. 'R' → logprob: -4.141244888305664
    3. ' ' → logprob: -8.891244888305664
    4. ' ' → logprob: -10.266244888305664
    5. '    ' → logprob: -11.141244888305664
    6. '   ' → logprob: -11.141244888305664
    7. '       ' → logprob: -12.766244888305664
    8. 'r' → logprob: -14.016244888305664
    9. '  ' → logprob: -14.141244888305664
    10. '	R' → logprob: -14.391244888305664

Token 248: ''est' (ID: 6616)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14621621370315552
    2. ' R' → logprob: -3.1462161540985107
    3. '   ' → logprob: -3.8962161540985107
    4. 'e' → logprob: -4.39621639251709
    5. ''est' → logprob: -4.52121639251709
    6. '=' → logprob: -4.77121639251709
    7. 'ount' → logprob: -5.14621639251709
    8. 'ont' → logprob: -5.27121639251709
    9. '`' → logprob: -5.39621639251709
    10. 'i' → logprob: -5.64621639251709

Token 249: ' le' (ID: 505)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.7198516726493835
    2. 'R' → logprob: -1.8448517322540283
    3. '   ' → logprob: -1.9698517322540283
    4. ':' → logprob: -2.9698517322540283
    5. ' ' → logprob: -3.0948517322540283
    6. '           ' → logprob: -3.3448517322540283
    7. '    ' → logprob: -3.4698517322540283
    8. '       ' → logprob: -3.7198517322540283
    9. ' vrai' → logprob: -5.094851493835449
    10. ' true' → logprob: -5.344851493835449

Token 250: ' cas' (ID: 2108)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2036198079586029
    2. ' R' → logprob: -1.8286198377609253
    3. ' ' → logprob: -4.328619956970215
    4. '   ' → logprob: -5.828619956970215
    5. 'r' → logprob: -6.203619956970215
    6. ' code' → logprob: -6.953619956970215
    7. ' caract' → logprob: -7.953619956970215
    8. '  ' → logprob: -7.953619956970215
    9. 'n' → logprob: -8.078619956970215
    10. ':' → logprob: -8.078619956970215

Token 251: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40491244196891785
    2. '       ' → logprob: -1.6549124717712402
    3. ':' → logprob: -2.7799124717712402
    4. '   ' → logprob: -3.2799124717712402
    5. 'R' → logprob: -4.15491247177124
    6. ':
' → logprob: -4.52991247177124
    7. ' R' → logprob: -4.77991247177124
    8. ' :' → logprob: -5.90491247177124
    9. ',' → logprob: -6.02991247177124
    10. ' :
' → logprob: -7.15491247177124

Token 252: ' cela' (ID: 17542)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.029765645042061806
    2. 'R' → logprob: -3.5297656059265137
    3. '   ' → logprob: -12.154766082763672
    4. ' ' → logprob: -12.404766082763672
    5. ' ' → logprob: -13.154766082763672
    6. '       ' → logprob: -13.904766082763672
    7. '    ' → logprob: -14.029766082763672
    8. ' 
' → logprob: -14.404766082763672
    9. ' space' → logprob: -14.529766082763672
    10. '    
' → logprob: -15.404766082763672

Token 253: ' signifie' (ID: 81149)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.7777644991874695
    2. '       ' → logprob: -1.7777645587921143
    3. 'R' → logprob: -1.9027645587921143
    4. '   ' → logprob: -1.9027645587921143
    5. '           ' → logprob: -3.1527645587921143
    6. '    ' → logprob: -4.652764320373535
    7. '        ' → logprob: -5.777764320373535
    8. ' ' → logprob: -5.777764320373535
    9. '         ' → logprob: -6.277764320373535
    10. '  ' → logprob: -6.277764320373535

Token 254: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.11566369980573654
    2. 'que' → logprob: -3.240663766860962
    3. '   ' → logprob: -3.490663766860962
    4. 'R' → logprob: -3.990663766860962
    5. '       ' → logprob: -4.240663528442383
    6. ' R' → logprob: -5.865663528442383
    7. '           ' → logprob: -6.240663528442383
    8. ' ' → logprob: -6.865663528442383
    9. ' that' → logprob: -8.490663528442383
    10. '#' → logprob: -8.615663528442383

Token 255: ' le' (ID: 505)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5231921672821045
    2. ' R' → logprob: -0.8981921672821045
    3. ' ' → logprob: -10.148192405700684
    4. '   ' → logprob: -11.148192405700684
    5. ' ' → logprob: -12.148192405700684
    6. '#' → logprob: -12.898192405700684
    7. '  ' → logprob: -13.648192405700684
    8. '       ' → logprob: -13.648192405700684
    9. '	R' → logprob: -14.398192405700684
    10. 'r' → logprob: -14.523192405700684

Token 256: ' caractère' (ID: 80509)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.018571171909570694
    2. ' R' → logprob: -4.518571376800537
    3. 'car' → logprob: -5.018571376800537
    4. ' caractère' → logprob: -8.018570899963379
    5. ' caract' → logprob: -8.143570899963379
    6. 'nombre' → logprob: -9.643570899963379
    7. '#' → logprob: -9.893570899963379
    8. 'r' → logprob: -10.518570899963379
    9. ' ' → logprob: -10.893570899963379
    10. ' code' → logprob: -11.268570899963379

Token 257: ' est' (ID: 893)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6611332297325134
    2. ' R' → logprob: -0.7861332297325134
    3. ' ' → logprob: -4.786133289337158
    4. ' a' → logprob: -5.536133289337158
    5. '"' → logprob: -5.661133289337158
    6. ' "' → logprob: -5.786133289337158
    7. ' '' → logprob: -5.786133289337158
    8. 's' → logprob: -6.536133289337158
    9. ''' → logprob: -6.536133289337158
    10. ' est' → logprob: -6.786133289337158

Token 258: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.581277072429657
    2. 'R' → logprob: -1.0812771320343018
    3. ' R' → logprob: -2.4562771320343018
    4. 'un' → logprob: -5.456276893615723
    5. ' ' → logprob: -5.456276893615723
    6. ' une' → logprob: -5.706276893615723
    7. 'r' → logprob: -6.206276893615723
    8. '   ' → logprob: -7.706276893615723
    9. ' '' → logprob: -8.581276893615723
    10. 'une' → logprob: -8.831276893615723

Token 259: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.15343701839447021
    2. ' R' → logprob: -2.0284371376037598
    3. ''' → logprob: -5.27843713760376
    4. ' caractère' → logprob: -6.52843713760376
    5. 'r' → logprob: -6.77843713760376
    6. ' caract' → logprob: -7.15343713760376
    7. 'car' → logprob: -7.15343713760376
    8. ' ' → logprob: -7.90343713760376
    9. '"' → logprob: -8.278436660766602
    10. 'e' → logprob: -8.403436660766602

Token 260: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.000145137935760431
    2. ' R' → logprob: -9.250144958496094
    3. ''' → logprob: -10.250144958496094
    4. '"' → logprob: -11.500144958496094
    5. 'r' → logprob: -14.125144958496094
    6. ' ' → logprob: -14.250144958496094
    7. ' '' → logprob: -14.875144958496094
    8. '')' → logprob: -15.125144958496094
    9. '	R' → logprob: -15.500144958496094
    10. ')' → logprob: -16.000144958496094

Token 261: ''
' (ID: 2207)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4398055076599121
    2. 'R' → logprob: -1.564805507659912
    3. ''' → logprob: -2.439805507659912
    4. '"
' → logprob: -3.439805507659912
    5. ''
' → logprob: -4.939805507659912
    6. '":
' → logprob: -5.064805507659912
    7. '":' → logprob: -6.064805507659912
    8. '   ' → logprob: -6.314805507659912
    9. '':
' → logprob: -6.439805507659912
    10. ',' → logprob: -6.564805507659912

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004884688649326563
    2. '           ' → logprob: -6.254884719848633
    3. '        
' → logprob: -6.629884719848633
    4. '
' → logprob: -7.254884719848633
    5. 'R' → logprob: -8.379884719848633
    6. '   ' → logprob: -8.504884719848633
    7. ':' → logprob: -9.504884719848633
    8. '    
' → logprob: -9.504884719848633
    9. '      ' → logprob: -9.629884719848633
    10. ',' → logprob: -9.754884719848633

Token 263: ' #' (ID: 1069)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3471585810184479
    2. ' R' → logprob: -1.5971585512161255
    3. '       ' → logprob: -2.597158670425415
    4. '
' → logprob: -4.472158432006836
    5. '   ' → logprob: -5.472158432006836
    6. '           ' → logprob: -7.597158432006836
    7. '        
' → logprob: -9.347158432006836
    8. '    
' → logprob: -9.722158432006836
    9. ' 
' → logprob: -9.847158432006836
    10. '    ' → logprob: -12.597158432006836

Token 264: ' On' (ID: 2160)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.4339553117752075
    2. 'R' → logprob: -1.1839553117752075
    3. '       ' → logprob: -3.183955192565918
    4. '   ' → logprob: -5.558955192565918
    5. '           ' → logprob: -7.933955192565918
    6. '
' → logprob: -8.308955192565918
    7. '        
' → logprob: -10.433955192565918
    8. '    ' → logprob: -11.058955192565918
    9. ' 
' → logprob: -11.058955192565918
    10. ' ' → logprob: -11.308955192565918

Token 265: ' incr' (ID: 52395)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6518364548683167
    2. 'R' → logprob: -0.7768364548683167
    3. '   ' → logprob: -4.776836395263672
    4. ' ' → logprob: -5.526836395263672
    5. '       ' → logprob: -5.901836395263672
    6. '    ' → logprob: -6.026836395263672
    7. '+' → logprob: -8.151836395263672
    8. '     ' → logprob: -8.151836395263672
    9. 'space' → logprob: -8.776836395263672
    10. 'r' → logprob: -9.026836395263672

Token 266: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.024521438404917717
    2. 'emente' → logprob: -3.7745213508605957
    3. 'ément' → logprob: -7.149521350860596
    4. 'ement' → logprob: -9.149521827697754
    5. 'e' → logprob: -9.399521827697754
    6. 'éments' → logprob: -9.649521827697754
    7. 'ém' → logprob: -9.899521827697754
    8. 'mente' → logprob: -9.899521827697754
    9. 'R' → logprob: -10.024521827697754
    10. 'è' → logprob: -11.274521827697754

Token 267: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0013857127632945776
    2. 'ment' → logprob: -8.126385688781738
    3. '#' → logprob: -8.626385688781738
    4. 'mentation' → logprob: -8.876385688781738
    5. 'mental' → logprob: -9.501385688781738
    6. 'me' → logprob: -9.626385688781738
    7. 'nte' → logprob: -9.626385688781738
    8. '(' → logprob: -10.001385688781738
    9. 'mete' → logprob: -10.126385688781738
    10. 'm' → logprob: -10.251385688781738

Token 268: ' donc' (ID: 14206)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.10021097958087921
    2. ' R' → logprob: -2.3502109050750732
    3. ' ' → logprob: -12.850211143493652
    4. '   ' → logprob: -13.475211143493652
    5. '	R' → logprob: -15.225211143493652
    6. '  ' → logprob: -16.475210189819336
    7. '
' → logprob: -17.475210189819336
    8. ' ' → logprob: -17.725210189819336
    9. '       ' → logprob: -18.475210189819336
    10. '_R' → logprob: -18.850210189819336

Token 269: ' la' (ID: 557)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.048632219433784485
    2. 'R' → logprob: -3.0486321449279785
    3. ' ' → logprob: -10.298632621765137
    4. ' ' → logprob: -11.923632621765137
    5. '   ' → logprob: -13.048632621765137
    6. '	R' → logprob: -13.798632621765137
    7. '    ' → logprob: -14.673632621765137
    8. '  ' → logprob: -14.923632621765137
    9. ' la' → logprob: -15.673632621765137
    10. ' le' → logprob: -16.42363166809082

Token 270: ' variable' (ID: 11076)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.020621657371520996
    2. ' R' → logprob: -3.8956217765808105
    3. ' ' → logprob: -9.770621299743652
    4. '   ' → logprob: -11.270621299743652
    5. ' ' → logprob: -13.395621299743652
    6. 's' → logprob: -13.520621299743652
    7. 'r' → logprob: -13.645621299743652
    8. '  ' → logprob: -13.895621299743652
    9. '	R' → logprob: -14.020621299743652
    10. '#' → logprob: -14.520621299743652

Token 271: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2519320547580719
    2. ' R' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.501932144165039
    4. '_R' → logprob: -14.751932144165039
    5. ' ' → logprob: -15.001932144165039
    6. '	R' → logprob: -15.001932144165039
    7. '   ' → logprob: -15.876932144165039
    8. ' `' → logprob: -16.25193214416504
    9. ' 
' → logprob: -16.37693214416504
    10. '`' → logprob: -16.50193214416504

Token 272: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6977424025535583
    2. '+=' → logprob: -0.6977424025535583
    3. '+' → logprob: -5.572742462158203
    4. 'R' → logprob: -7.947742462158203
    5. '=' → logprob: -8.197742462158203
    6. '   ' → logprob: -10.072742462158203
    7. ' R' → logprob: -10.197742462158203
    8. ' ' → logprob: -10.697742462158203
    9. ')' → logprob: -11.072742462158203
    10. ']+=' → logprob: -11.322742462158203

Token 273: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024773201439529657
    2. ' ' → logprob: -6.002477169036865
    3. '+' → logprob: -13.502477645874023
    4. ' +' → logprob: -16.627477645874023
    5. '```' → logprob: -17.127477645874023
    6. '   ' → logprob: -17.377477645874023
    7. ' ' → logprob: -17.377477645874023
    8. ' one' → logprob: -18.752477645874023
    9. ' +=' → logprob: -19.502477645874023
    10. '  ' → logprob: -19.502477645874023

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -15.000003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '```' → logprob: -19.375003814697266
    6. ' +' → logprob: -20.875003814697266
    7. '  ' → logprob: -21.000003814697266
    8. '+=' → logprob: -21.500003814697266
    9. '

' → logprob: -21.625003814697266
    10. '１' → logprob: -21.875003814697266

Token 275: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6668373346328735
    2. 'R' → logprob: -1.0418373346328735
    3. ' R' → logprob: -2.666837215423584
    4. '       ' → logprob: -3.541837215423584
    5. '
' → logprob: -4.041837215423584
    6. '    
' → logprob: -4.791837215423584
    7. ')' → logprob: -6.541837215423584
    8. '    ' → logprob: -6.666837215423584
    9. '<|end|>' → logprob: -6.791837215423584
    10. ' 
' → logprob: -6.916837215423584

Token 276: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.37654802203178406
    2. ')' → logprob: -1.7515480518341064
    3. ' R' → logprob: -2.1265480518341064
    4. '1' → logprob: -4.501547813415527
    5. '+' → logprob: -5.001547813415527
    6. ' )' → logprob: -6.126547813415527
    7. '   ' → logprob: -8.001547813415527
    8. '+)' → logprob: -8.251547813415527
    9. ' ' → logprob: -8.501547813415527
    10. ')
' → logprob: -10.001547813415527

Token 277: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5794993042945862
    2. ' +=' → logprob: -0.8294993042945862
    3. '=' → logprob: -6.329499244689941
    4. ')' → logprob: -6.829499244689941
    5. '+' → logprob: -7.579499244689941
    6. ' =' → logprob: -8.954499244689941
    7. '+)' → logprob: -10.829499244689941
    8. '   ' → logprob: -11.204499244689941
    9. ' )' → logprob: -12.204499244689941
    10. ')+' → logprob: -12.579499244689941

Token 278: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.2519322335720062
    2. ' R' → logprob: -1.5019322633743286
    3. ' ' → logprob: -13.126932144165039
    4. '1' → logprob: -15.251932144165039
    5. '	R' → logprob: -15.251932144165039
    6. '   ' → logprob: -15.626932144165039
    7. ' ' → logprob: -15.751932144165039
    8. '    ' → logprob: -16.37693214416504
    9. '+' → logprob: -16.50193214416504
    10. '0' → logprob: -16.62693214416504

Token 279: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020763427019119
    2. ' +' → logprob: -2.350207567214966
    3. ')' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.225207328796387
    5. '1' → logprob: -15.600207328796387
    6. ' plus' → logprob: -15.725207328796387
    7. '+)' → logprob: -16.850208282470703
    8. ')+' → logprob: -16.975208282470703
    9. ' ' → logprob: -17.350208282470703
    10. '   ' → logprob: -17.975208282470703

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048528365790844
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -14.636048316955566
    4. ' ' → logprob: -16.261049270629883
    5. '  ' → logprob: -16.761049270629883
    6. '```' → logprob: -17.386049270629883
    7. ')' → logprob: -17.511049270629883
    8. '<|end|>' → logprob: -18.386049270629883
    9. '    ' → logprob: -18.886049270629883
    10. '=' → logprob: -19.636049270629883

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -15.750710487365723
    4. '  ' → logprob: -18.125709533691406
    5. ' ' → logprob: -19.000709533691406
    6. ')' → logprob: -19.250709533691406
    7. '```' → logprob: -19.375709533691406
    8. '=' → logprob: -20.000709533691406
    9. '+' → logprob: -20.125709533691406
    10. '#' → logprob: -20.250709533691406

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028493450372479856
    2. ' )' → logprob: -8.375285148620605
    3. ')
' → logprob: -10.250285148620605
    4. '   ' → logprob: -11.625285148620605
    5. 'R' → logprob: -13.000285148620605
    6. '<|end|>' → logprob: -13.000285148620605
    7. '`)' → logprob: -13.625285148620605
    8. '```' → logprob: -14.375285148620605
    9. '")' → logprob: -14.500285148620605
    10. '')' → logprob: -14.625285148620605

Token 283: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6421679854393005
    2. '       ' → logprob: -1.0171680450439453
    3. 'R' → logprob: -2.7671680450439453
    4. ' R' → logprob: -3.0171680450439453
    5. '    ' → logprob: -8.767168045043945
    6. '    
' → logprob: -9.267168045043945
    7. '  ' → logprob: -9.767168045043945
    8. ' ' → logprob: -10.142168045043945
    9. '     ' → logprob: -10.892168045043945
    10. '	R' → logprob: -11.017168045043945

Token 284: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' (adapté à ' R') → logprob: -0.0495278537273407
    2. ' R' → logprob: -3.049527883529663
    3. '   ' → logprob: -7.049527645111084
    4. '       ' → logprob: -9.549528121948242
    5. ' ' → logprob: -15.049528121948242
    6. '
' → logprob: -15.674528121948242
    7. '    
' → logprob: -15.924528121948242
    8. '    ' → logprob: -15.924528121948242
    9. '	R' → logprob: -16.299528121948242
    10. ' 
' → logprob: -16.424528121948242

Token 285: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5024003386497498
    2. '+' → logprob: -1.0024003982543945
    3. ' +=' → logprob: -3.6274003982543945
    4. '=' → logprob: -6.6274003982543945
    5. ' +' → logprob: -11.627400398254395
    6. '+="' → logprob: -12.877400398254395
    7. '+='' → logprob: -13.127400398254395
    8. ']+=' → logprob: -13.877400398254395
    9. ')' → logprob: -14.002400398254395
    10. ' =' → logprob: -14.127400398254395

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756085462868214
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -16.759756088256836
    4. '```' → logprob: -18.634756088256836
    5. ' ' → logprob: -19.259756088256836
    6. '  ' → logprob: -19.259756088256836
    7. '	' → logprob: -20.697256088256836
    8. '0' → logprob: -20.697256088256836
    9. '１' → logprob: -20.947256088256836
    10. '2' → logprob: -21.009756088256836

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '```' → logprob: -20.000001907348633
    5. '１' → logprob: -21.625001907348633
    6. '  ' → logprob: -21.937501907348633
    7. '۱' → logprob: -22.312501907348633
    8. '`' → logprob: -22.625001907348633
    9. '
' → logprob: -22.750001907348633
    10. '१' → logprob: -23.125001907348633

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.136529341340065
    2. 'else' → logprob: -2.2615294456481934
    3. ' else' → logprob: -3.7615294456481934
    4. '    
' → logprob: -9.636528968811035
    5. 'elif' → logprob: -9.761528968811035
    6. '	else' → logprob: -11.261528968811035
    7. '```' → logprob: -11.386528968811035
    8. ' elif' → logprob: -11.886528968811035
    9. 'e' → logprob: -12.261528968811035
    10. ' ' → logprob: -12.386528968811035

Token 289: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.712627112865448
    2. 'else' → logprob: -0.712627112865448
    3. '   ' → logprob: -3.9626271724700928
    4. 'elif' → logprob: -9.212627410888672
    5. 'e' → logprob: -9.462627410888672
    6. ' elif' → logprob: -9.962627410888672
    7. ' ' → logprob: -10.462627410888672
    8. '	else' → logprob: -11.587627410888672
    9. '    
' → logprob: -11.837627410888672
    10. '  ' → logprob: -13.212627410888672

Token 290: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04873066395521164
    2. ' else' → logprob: -3.0487306118011475
    3. 'elif' → logprob: -9.548730850219727
    4. 'e' → logprob: -9.798730850219727
    5. '   ' → logprob: -11.798730850219727
    6. 'el' → logprob: -12.548730850219727
    7. ' elif' → logprob: -13.048730850219727
    8. 'els' → logprob: -13.298730850219727
    9. ' ' → logprob: -14.173730850219727
    10. '	else' → logprob: -14.798730850219727

Token 291: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3134987950325012
    2. ':
' → logprob: -1.3134987354278564
    3. '   ' → logprob: -8.563498497009277
    4. ' :
' → logprob: -10.688498497009277
    5. ' :' → logprob: -11.813498497009277
    6. ':B' → logprob: -12.313498497009277
    7. 'B' → logprob: -12.438498497009277
    8. ':

' → logprob: -12.938498497009277
    9. '       ' → logprob: -13.313498497009277
    10. ':
' → logprob: -13.563498497009277

Token 292: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.33822908997535706
    2. '       ' → logprob: -2.088229179382324
    3. '   ' → logprob: -2.338229179382324
    4. ' B' → logprob: -2.713229179382324
    5. ' ' → logprob: -9.338229179382324
    6. '    ' → logprob: -9.838229179382324
    7. '	B' → logprob: -10.213229179382324
    8. '  ' → logprob: -10.713229179382324
    9. '     ' → logprob: -11.338229179382324
    10. '      ' → logprob: -11.463229179382324

Token 293: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00867378432303667
    2. ' B' → logprob: -4.758673667907715
    3. '   ' → logprob: -9.758673667907715
    4. '       ' → logprob: -13.883673667907715
    5. '	B' → logprob: -15.383673667907715
    6. '    ' → logprob: -15.758673667907715
    7. ' ' → logprob: -16.13367462158203
    8. '  ' → logprob: -16.50867462158203
    9. '
' → logprob: -17.25867462158203
    10. ' 
' → logprob: -18.75867462158203

Token 294: ' Si' (ID: 7832)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.023384541273117065
    2. ' B' → logprob: -3.7733845710754395
    3. '   ' → logprob: -9.148384094238281
    4. '       ' → logprob: -11.023384094238281
    5. '    ' → logprob: -11.273384094238281
    6. ' ' → logprob: -13.648384094238281
    7. '  ' → logprob: -14.023384094238281
    8. '        ' → logprob: -15.023384094238281
    9. '     ' → logprob: -15.273384094238281
    10. '	B' → logprob: -15.523384094238281

Token 295: ' ce' (ID: 2357)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1817743480205536
    2. 'B' → logprob: -1.806774377822876
    3. ' ' → logprob: -6.806774139404297
    4. '   ' → logprob: -7.681774139404297
    5. '  ' → logprob: -8.056774139404297
    6. '    ' → logprob: -9.431774139404297
    7. ' ' → logprob: -10.556774139404297
    8. ':' → logprob: -10.681774139404297
    9. '	B' → logprob: -12.806774139404297
    10. '     ' → logprob: -13.431774139404297

Token 296: ' n' (ID: 297)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011236205697059631
    2. ' B' → logprob: -4.886236190795898
    3. ':' → logprob: -6.636236190795898
    4. 'n' → logprob: -6.761236190795898
    5. '   ' → logprob: -7.511236190795898
    6. 'else' → logprob: -9.011236190795898
    7. 's' → logprob: -9.636236190795898
    8. ' ' → logprob: -9.761236190795898
    9. '#' → logprob: -9.886236190795898
    10. '  ' → logprob: -10.011236190795898

Token 297: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.013394802808761597
    2. ''' → logprob: -4.638394832611084
    3. '’est' → logprob: -6.763394832611084
    4. 'est' → logprob: -7.138394832611084
    5. '   ' → logprob: -7.263394832611084
    6. ''était' → logprob: -9.013394355773926
    7. ''#' → logprob: -9.263394355773926
    8. '#' → logprob: -9.263394355773926
    9. 'e' → logprob: -9.388394355773926
    10. ' '' → logprob: -9.513394355773926

Token 298: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6933037042617798
    2. 'pas' → logprob: -0.6933037042617798
    3. 'not' → logprob: -9.818304061889648
    4. '_pas' → logprob: -9.943304061889648
    5. ' not' → logprob: -11.068304061889648
    6. 'Pas' → logprob: -11.443304061889648
    7. '#' → logprob: -12.068304061889648
    8. '   ' → logprob: -12.568304061889648
    9. 'le' → logprob: -12.693304061889648
    10. ' B' → logprob: -12.693304061889648

Token 299: ' un' (ID: 537)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.13945579528808594
    2. ' B' → logprob: -2.389455795288086
    3. ' le' → logprob: -4.014455795288086
    4. 'le' → logprob: -4.389455795288086
    5. 'R' → logprob: -6.014455795288086
    6. '"B' → logprob: -6.014455795288086
    7. '   ' → logprob: -7.764455795288086
    8. '"' → logprob: -7.889455795288086
    9. ' un' → logprob: -8.139455795288086
    10. ' ' → logprob: -8.139455795288086

Token 300: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.24132126569747925
    2. ''' → logprob: -1.991321325302124
    3. ' B' → logprob: -3.491321325302124
    4. '"B' → logprob: -3.491321325302124
    5. 'R' → logprob: -4.741321086883545
    6. '"' → logprob: -5.116321086883545
    7. ' '' → logprob: -6.991321086883545
    8. ' "' → logprob: -7.991321086883545
    9. ' ' → logprob: -8.241321563720703
    10. ' R' → logprob: -8.491321563720703

Token 301: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.009438012726604939
    2. 'B' → logprob: -4.8844380378723145
    3. ''' → logprob: -6.5094380378723145
    4. '"' → logprob: -8.009437561035156
    5. ' R' → logprob: -12.884437561035156
    6. '"B' → logprob: -13.009437561035156
    7. '`' → logprob: -14.509437561035156
    8. 'i' → logprob: -14.634437561035156
    9. 'RB' → logprob: -14.759437561035156
    10. 'r' → logprob: -15.259437561035156

Token 302: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08821210265159607
    2. ':' → logprob: -2.588212013244629
    3. ':
' → logprob: -5.213212013244629
    4. '       ' → logprob: -6.838212013244629
    5. '   ' → logprob: -6.963212013244629
    6. ' ,' → logprob: -7.088212013244629
    7. 'B' → logprob: -7.588212013244629
    8. ',B' → logprob: -8.088212013244629
    9. ':B' → logprob: -10.213212013244629
    10. ' B' → logprob: -10.213212013244629

Token 303: ' alors' (ID: 17971)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3247196674346924
    2. '       ' → logprob: -1.4497196674346924
    3. 'B' → logprob: -3.1997196674346924
    4. '   ' → logprob: -6.699719429016113
    5. '    ' → logprob: -8.699719429016113
    6. ' ' → logprob: -8.699719429016113
    7. ' ' → logprob: -8.949719429016113
    8. '        ' → logprob: -9.449719429016113
    9. '           ' → logprob: -10.574719429016113
    10. '	B' → logprob: -10.949719429016113

Token 304: ' on' (ID: 402)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2020995318889618
    2. ' B' → logprob: -1.7020995616912842
    3. '       ' → logprob: -7.577099323272705
    4. '   ' → logprob: -8.952099800109863
    5. ' ' → logprob: -10.577099800109863
    6. '	B' → logprob: -12.577099800109863
    7. ' ' → logprob: -12.577099800109863
    8. '    ' → logprob: -12.827099800109863
    9. '  ' → logprob: -12.827099800109863
    10. '#' → logprob: -13.327099800109863

Token 305: ' considère' (ID: 176437)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11400344967842102
    2. ' B' → logprob: -2.4890034198760986
    3. 'in' → logprob: -4.114003658294678
    4. ' incr' → logprob: -5.239003658294678
    5. '   ' → logprob: -6.864003658294678
    6. '       ' → logprob: -7.864003658294678
    7. ' ' → logprob: -7.864003658294678
    8. ' in' → logprob: -8.23900318145752
    9. 'increment' → logprob: -8.48900318145752
    10. '  ' → logprob: -8.61400318145752

Token 306: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3163547217845917
    2. ' B' → logprob: -1.941354751586914
    3. 'B' → logprob: -2.191354751586914
    4. 'que' → logprob: -5.441354751586914
    5. '   ' → logprob: -5.691354751586914
    6. ' ' → logprob: -5.691354751586914
    7. '       ' → logprob: -5.691354751586914
    8. ' that' → logprob: -6.816354751586914
    9. '  ' → logprob: -9.316354751586914
    10. ' ' → logprob: -9.566354751586914

Token 307: ' c' (ID: 274)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.28119173645973206
    2. ' B' → logprob: -1.4061917066574097
    3. ' ' → logprob: -10.9061918258667
    4. '   ' → logprob: -11.5311918258667
    5. 'i' → logprob: -12.9061918258667
    6. ' ' → logprob: -12.9061918258667
    7. '	B' → logprob: -14.0311918258667
    8. 's' → logprob: -14.1561918258667
    9. '  ' → logprob: -14.2811918258667
    10. ' it' → logprob: -14.4061918258667

Token 308: ''est' (ID: 6616)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06436650454998016
    2. ''est' → logprob: -3.564366579055786
    3. 'est' → logprob: -3.689366579055786
    4. ' B' → logprob: -5.314366340637207
    5. 'e' → logprob: -6.439366340637207
    6. ''' → logprob: -6.814366340637207
    7. '#' → logprob: -7.189366340637207
    8. ' est' → logprob: -8.564366340637207
    9. 'es' → logprob: -9.189366340637207
    10. ''agit' → logprob: -9.314366340637207

Token 309: ' un' (ID: 537)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4808143079280853
    2. ' B' → logprob: -0.9808143377304077
    3. ' un' → logprob: -5.230814456939697
    4. ' ' → logprob: -7.355814456939697
    5. ' une' → logprob: -8.480813980102539
    6. 'un' → logprob: -8.480813980102539
    7. '"B' → logprob: -8.855813980102539
    8. 'une' → logprob: -10.480813980102539
    9. ' ' → logprob: -10.605813980102539
    10. ' a' → logprob: -10.605813980102539

Token 310: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.19394274055957794
    2. ''' → logprob: -2.3189427852630615
    3. ' B' → logprob: -2.6939427852630615
    4. '"B' → logprob: -4.818942546844482
    5. ' '' → logprob: -6.568942546844482
    6. '"' → logprob: -8.31894302368164
    7. ' ' → logprob: -8.31894302368164
    8. '`' → logprob: -9.31894302368164
    9. ' "' → logprob: -9.44394302368164
    10. ' ' → logprob: -9.69394302368164

Token 311: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009292102768085897
    2. ''' → logprob: -7.000929355621338
    3. '"B' → logprob: -11.37592887878418
    4. '"' → logprob: -12.37592887878418
    5. ' B' → logprob: -13.62592887878418
    6. '`' → logprob: -15.12592887878418
    7. 'b' → logprob: -15.50092887878418
    8. '```' → logprob: -16.62592887878418
    9. 'R' → logprob: -16.75092887878418
    10. '')' → logprob: -17.00092887878418

Token 312: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33372220396995544
    2. '   ' → logprob: -1.5837222337722778
    3. ' +=' → logprob: -3.0837221145629883
    4. '+=' → logprob: -4.083722114562988
    5. ')' → logprob: -5.083722114562988
    6. '+' → logprob: -5.833722114562988
    7. 'B' → logprob: -6.083722114562988
    8. ')
' → logprob: -6.708722114562988
    9. '    ' → logprob: -6.958722114562988
    10. '     ' → logprob: -7.583722114562988

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06781663745641708
    2. 'B' → logprob: -2.817816734313965
    3. ' B' → logprob: -5.442816734313965
    4. '   ' → logprob: -6.567816734313965
    5. '
' → logprob: -9.692816734313965
    6. '           ' → logprob: -11.192816734313965
    7. '        
' → logprob: -11.692816734313965
    8. '    ' → logprob: -12.692816734313965
    9. '     ' → logprob: -12.692816734313965
    10. '```' → logprob: -12.692816734313965

Token 314: ' #' (ID: 1069)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001402025343850255
    2. ' B' → logprob: -6.751401901245117
    3. '       ' → logprob: -8.626401901245117
    4. '   ' → logprob: -9.876401901245117
    5. '    ' → logprob: -14.876401901245117
    6. '  ' → logprob: -15.376401901245117
    7. '	B' → logprob: -15.626401901245117
    8. ' ' → logprob: -16.126401901245117
    9. '           ' → logprob: -16.376401901245117
    10. '     ' → logprob: -16.876401901245117

Token 315: ' On' (ID: 2160)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020711649267468601
    2. ' B' → logprob: -8.50020694732666
    3. '   ' → logprob: -12.75020694732666
    4. '       ' → logprob: -14.37520694732666
    5. '  ' → logprob: -16.375207901000977
    6. '    ' → logprob: -17.500207901000977
    7. ' ' → logprob: -17.750207901000977
    8. '
' → logprob: -17.875207901000977
    9. '	B' → logprob: -18.125207901000977
    10. '     ' → logprob: -19.625207901000977

Token 316: ' incr' (ID: 52395)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0357995368540287
    2. '+=' → logprob: -3.535799503326416
    3. ' B' → logprob: -5.285799503326416
    4. ' +=' → logprob: -7.035799503326416
    5. '   ' → logprob: -9.910799980163574
    6. 'b' → logprob: -11.160799980163574
    7. ' ' → logprob: -12.285799980163574
    8. '  ' → logprob: -12.535799980163574
    9. '+' → logprob: -12.785799980163574
    10. '_B' → logprob: -12.910799980163574

Token 317: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.008602162823081017
    2. 'ément' → logprob: -5.133602142333984
    3. 'mente' → logprob: -7.383602142333984
    4. 'ré' → logprob: -7.383602142333984
    5. 'ém' → logprob: -7.758602142333984
    6. 'rement' → logprob: -8.508602142333984
    7. 'éments' → logprob: -9.133602142333984
    8. '+=' → logprob: -9.383602142333984
    9. 'r' → logprob: -9.508602142333984
    10. 'mé' → logprob: -9.633602142333984

Token 318: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.004698784090578556
    2. 'ment' → logprob: -6.129698753356934
    3. 'nte' → logprob: -6.504698753356934
    4. 'm' → logprob: -7.254698753356934
    5. 'mé' → logprob: -9.504698753356934
    6. 'me' → logprob: -9.754698753356934
    7. ' mente' → logprob: -10.004698753356934
    8. 'B' → logprob: -11.004698753356934
    9. 'men' → logprob: -11.254698753356934
    10. 'ments' → logprob: -11.254698753356934

Token 319: ' donc' (ID: 14206)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.12693072855472565
    2. 'B' → logprob: -2.1269307136535645
    3. '   ' → logprob: -13.626931190490723
    4. '       ' → logprob: -14.626931190490723
    5. ' ' → logprob: -14.876931190490723
    6. '	B' → logprob: -15.126931190490723
    7. ' ' → logprob: -15.626931190490723
    8. '    ' → logprob: -16.751930236816406
    9. 'b' → logprob: -17.126930236816406
    10. '1' → logprob: -17.376930236816406

Token 320: ' la' (ID: 557)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.07889188081026077
    2. 'B' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.82889175415039
    4. ' ' → logprob: -14.32889175415039
    5. '	B' → logprob: -14.82889175415039
    6. '   ' → logprob: -16.57889175415039
    7. ' la' → logprob: -17.45389175415039
    8. '_B' → logprob: -18.07889175415039
    9. 'b' → logprob: -18.07889175415039
    10. '1' → logprob: -18.32889175415039

Token 321: ' variable' (ID: 11076)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00014001218369230628
    2. ' B' → logprob: -8.875140190124512
    3. ' ' → logprob: -16.375139236450195
    4. '1' → logprob: -17.375139236450195
    5. 'b' → logprob: -17.750139236450195
    6. '```' → logprob: -18.000139236450195
    7. '   ' → logprob: -18.250139236450195
    8. '	B' → logprob: -18.625139236450195
    9. '
' → logprob: -18.875139236450195
    10. '_B' → logprob: -19.375139236450195

Token 322: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07889199256896973
    2. ' B' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.57889175415039
    4. ' ' → logprob: -15.20389175415039
    5. '   ' → logprob: -15.70389175415039
    6. '	B' → logprob: -15.82889175415039
    7. '```' → logprob: -16.20389175415039
    8. '`' → logprob: -17.07889175415039
    9. '  ' → logprob: -17.57889175415039
    10. '_B' → logprob: -17.57889175415039

Token 323: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02630714885890484
    2. '+=' → logprob: -3.6513071060180664
    3. ' ' → logprob: -13.151307106018066
    4. '+' → logprob: -13.276307106018066
    5. ']+=' → logprob: -13.651307106018066
    6. ' +' → logprob: -14.401307106018066
    7. '   ' → logprob: -14.901307106018066
    8. ' ' → logprob: -14.901307106018066
    9. '=' → logprob: -15.276307106018066
    10. '    ' → logprob: -15.526307106018066

Token 324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08894045650959015
    2. ' ' → logprob: -2.463940382003784
    3. '   ' → logprob: -14.713940620422363
    4. '+' → logprob: -16.213939666748047
    5. ' ' → logprob: -16.276439666748047
    6. '```' → logprob: -16.338939666748047
    7. '=' → logprob: -16.901439666748047
    8. '１' → logprob: -17.401439666748047
    9. 'B' → logprob: -17.526439666748047
    10. 'b' → logprob: -18.026439666748047

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -18.37506675720215
    4. '+' → logprob: -20.00006675720215
    5. '１' → logprob: -20.12506675720215
    6. '```' → logprob: -20.50006675720215
    7. '  ' → logprob: -21.18756675720215
    8. ' ' → logprob: -21.25006675720215
    9. '=' → logprob: -21.50006675720215
    10. '۱' → logprob: -22.25006675720215

Token 326: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07692008465528488
    2. ' B' → logprob: -3.3269200325012207
    3. 'B' → logprob: -3.7019200325012207
    4. '       ' → logprob: -4.451920032501221
    5. '    ' → logprob: -6.951920032501221
    6. '  ' → logprob: -8.076920509338379
    7. '<|end|>' → logprob: -8.701920509338379
    8. ' ' → logprob: -9.076920509338379
    9. '	B' → logprob: -9.826920509338379
    10. '1' → logprob: -10.076920509338379

Token 327: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.014167149551212788
    2. ' B' → logprob: -4.264167308807373
    3. '1' → logprob: -12.639166831970215
    4. '   ' → logprob: -15.389166831970215
    5. ' ' → logprob: -15.889166831970215
    6. ')' → logprob: -17.38916778564453
    7. 'b' → logprob: -17.76416778564453
    8. '	B' → logprob: -18.26416778564453
    9. '```' → logprob: -18.38916778564453
    10. '       ' → logprob: -19.26416778564453

Token 328: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31338736414909363
    2. '+=' → logprob: -1.313387393951416
    3. '+' → logprob: -9.688386917114258
    4. ')' → logprob: -10.063386917114258
    5. ']+=' → logprob: -12.063386917114258
    6. '=' → logprob: -12.188386917114258
    7. ' +' → logprob: -12.938386917114258
    8. ' ' → logprob: -13.063386917114258
    9. ')+' → logprob: -13.063386917114258
    10. '   ' → logprob: -14.063386917114258

Token 329: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.273903489112854
    2. ' B' → logprob: -1.523903489112854
    3. '1' → logprob: -3.8989033699035645
    4. ' ' → logprob: -6.5239033699035645
    5. '	B' → logprob: -14.148903846740723
    6. '   ' → logprob: -14.898903846740723
    7. 'b' → logprob: -14.898903846740723
    8. '+' → logprob: -14.898903846740723
    9. '_B' → logprob: -15.523903846740723
    10. ' ' → logprob: -15.898903846740723

Token 330: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014199472963809967
    2. ' +' → logprob: -4.264199256896973
    3. '+B' → logprob: -11.014199256896973
    4. '+=' → logprob: -11.389199256896973
    5. 'B' → logprob: -12.514199256896973
    6. '1' → logprob: -13.014199256896973
    7. ' +=' → logprob: -13.514199256896973
    8. ' ' → logprob: -15.014199256896973
    9. '+b' → logprob: -15.389199256896973
    10. '+
' → logprob: -16.13920021057129

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364615887403488
    2. ' ' → logprob: -3.4086461067199707
    3. '   ' → logprob: -14.908646583557129
    4. ')' → logprob: -16.158645629882812
    5. '```' → logprob: -17.658645629882812
    6. '  ' → logprob: -17.908645629882812
    7. '<|end|>' → logprob: -18.033645629882812
    8. ' ' → logprob: -18.408645629882812
    9. '0' → logprob: -19.346145629882812
    10. '       ' → logprob: -19.596145629882812

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. ')' → logprob: -16.750804901123047
    4. '   ' → logprob: -18.000804901123047
    5. '```' → logprob: -18.125804901123047
    6. '  ' → logprob: -18.875804901123047
    7. '
' → logprob: -19.500804901123047
    8. ' ' → logprob: -19.500804901123047
    9. '１' → logprob: -19.813304901123047
    10. ' )' → logprob: -20.000804901123047

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003373694489710033
    2. '   ' → logprob: -8.375337600708008
    3. ')
' → logprob: -9.500337600708008
    4. ' )' → logprob: -10.500337600708008
    5. '       ' → logprob: -13.250337600708008
    6. '<|end|>' → logprob: -13.375337600708008
    7. ')#' → logprob: -15.125337600708008
    8. ' ' → logprob: -15.375337600708008
    9. '  ' → logprob: -16.250337600708008
    10. '),' → logprob: -16.375337600708008

Token 334: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3087600767612457
    2. ' B' → logprob: -1.8087600469589233
    3. '   ' → logprob: -2.808760166168213
    4. '       ' → logprob: -3.183760166168213
    5. '    ' → logprob: -10.433759689331055
    6. '	B' → logprob: -10.808759689331055
    7. ' ' → logprob: -11.308759689331055
    8. '  ' → logprob: -12.058759689331055
    9. '     ' → logprob: -12.933759689331055
    10. '      ' → logprob: -13.808759689331055

Token 335: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00043567578541114926
    2. ' B' → logprob: -7.750435829162598
    3. '   ' → logprob: -12.500435829162598
    4. '       ' → logprob: -13.625435829162598
    5. '    ' → logprob: -17.87543487548828
    6. ' ' → logprob: -18.87543487548828
    7. '	B' → logprob: -18.87543487548828
    8. '  ' → logprob: -19.25043487548828
    9. 'b' → logprob: -20.12543487548828
    10. '        ' → logprob: -20.62543487548828

Token 336: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023252584040164948
    2. ' +=' → logprob: -3.773252487182617
    3. '+' → logprob: -12.148252487182617
    4. ']+=' → logprob: -13.648252487182617
    5. '=' → logprob: -14.648252487182617
    6. '+='' → logprob: -16.398252487182617
    7. '+="' → logprob: -17.148252487182617
    8. '   ' → logprob: -17.398252487182617
    9. '+=(' → logprob: -17.648252487182617
    10. ' ' → logprob: -18.523252487182617

Token 337: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.37747573852539
    4. '<|end|>' → logprob: -20.25247573852539
    5. '```' → logprob: -20.50247573852539
    6. ' ' → logprob: -20.62747573852539
    7. '  ' → logprob: -20.87747573852539
    8. '0' → logprob: -20.87747573852539
    9. '	' → logprob: -21.12747573852539
    10. '１' → logprob: -21.37747573852539

Token 338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -21.625001907348633
    4. '```' → logprob: -22.375001907348633
    5. '  ' → logprob: -23.250001907348633
    6. '１' → logprob: -23.625001907348633
    7. '۱' → logprob: -24.500001907348633
    8. '0' → logprob: -24.625001907348633
    9. '<|end|>' → logprob: -24.625001907348633
    10. '' → logprob: -25.125001907348633

Token 339: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12558983266353607
    2. 'if' → logprob: -2.2505898475646973
    3. '
' → logprob: -4.875589847564697
    4. '#' → logprob: -5.375589847564697
    5. '

' → logprob: -8.750589370727539
    6. '  
' → logprob: -9.625589370727539
    7. ' if' → logprob: -9.875589370727539
    8. '```' → logprob: -10.375589370727539
    9. '    
' → logprob: -11.000589370727539
    10. ' print' → logprob: -11.000589370727539

Token 340: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3594590127468109
    2. 'print' → logprob: -1.2344590425491333
    3. '#' → logprob: -4.984458923339844
    4. '
' → logprob: -5.609458923339844
    5. ' if' → logprob: -8.984458923339844
    6. '#
' → logprob: -9.109458923339844
    7. '```' → logprob: -10.609458923339844
    8. 'R' → logprob: -10.984458923339844
    9. '#print' → logprob: -10.984458923339844
    10. '
' → logprob: -11.109458923339844

Token 341: ' Après' (ID: 47562)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12802211940288544
    2. 'print' → logprob: -2.1280221939086914
    3. '#' → logprob: -7.378022193908691
    4. ' if' → logprob: -8.128022193908691
    5. 'prin' → logprob: -9.628022193908691
    6. 'pr' → logprob: -11.003022193908691
    7. '#print' → logprob: -11.378022193908691
    8. 'result' → logprob: -11.503022193908691
    9. 'If' → logprob: -11.628022193908691
    10. ' print' → logprob: -11.753022193908691

Token 342: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5314844250679016
    2. 'if' → logprob: -1.9064843654632568
    3. 'le' → logprob: -2.656484365463257
    4. '#' → logprob: -2.656484365463257
    5. ' la' → logprob: -2.656484365463257
    6. 'l' → logprob: -3.906484365463257
    7. 'les' → logprob: -4.656484603881836
    8. 'avoir' → logprob: -5.156484603881836
    9. ' if' → logprob: -5.281484603881836
    10. 'print' → logprob: -5.656484603881836

Token 343: ' boucle' (ID: 174211)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16254593431949615
    2. 'if' → logprob: -1.912545919418335
    3. '#' → logprob: -6.537546157836914
    4. 'prin' → logprob: -7.662546157836914
    5. 'pr' → logprob: -9.162546157836914
    6. 'for' → logprob: -9.662546157836914
    7. ' if' → logprob: -10.037546157836914
    8. 'abs' → logprob: -10.537546157836914
    9. ' print' → logprob: -10.537546157836914
    10. 'R' → logprob: -10.662546157836914

Token 344: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3954794108867645
    2. 'if' → logprob: -1.145479440689087
    3. '#' → logprob: -5.020479202270508
    4. ',' → logprob: -7.145479202270508
    5. ' if' → logprob: -7.145479202270508
    6. '
' → logprob: -8.395479202270508
    7. ' print' → logprob: -9.270479202270508
    8. '

' → logprob: -10.520479202270508
    9. '#print' → logprob: -10.895479202270508
    10. 'prin' → logprob: -12.145479202270508

Token 345: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0951966866850853
    2. 'print' → logprob: -2.4701967239379883
    3. '#' → logprob: -5.095196723937988
    4. ' if' → logprob: -9.345196723937988
    5. '
' → logprob: -12.220196723937988
    6. '```' → logprob: -12.345196723937988
    7. 'prin' → logprob: -12.345196723937988
    8. '#print' → logprob: -12.470196723937988
    9. ' print' → logprob: -13.470196723937988
    10. 'pr' → logprob: -13.720196723937988

Token 346: ' compare' (ID: 12221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05620269477367401
    2. 'if' → logprob: -2.9312026500701904
    3. ' print' → logprob: -7.6812028884887695
    4. '#' → logprob: -7.6812028884887695
    5. ' if' → logprob: -8.68120288848877
    6. 'pr' → logprob: -8.93120288848877
    7. 'prin' → logprob: -10.05620288848877
    8. 'for' → logprob: -10.55620288848877
    9. '#print' → logprob: -12.30620288848877
    10. 'p' → logprob: -12.30620288848877

Token 347: ' les' (ID: 1341)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.8153234720230103
    2. 'R' → logprob: -1.6903234720230103
    3. 'if' → logprob: -1.8153234720230103
    4. ' if' → logprob: -2.1903233528137207
    5. ' les' → logprob: -2.6903233528137207
    6. 'les' → logprob: -4.940323352813721
    7. ' la' → logprob: -5.315323352813721
    8. ' ' → logprob: -5.315323352813721
    9. 'le' → logprob: -5.690323352813721
    10. ' le' → logprob: -6.315323352813721

Token 348: ' valeurs' (ID: 73668)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.024722538888454437
    2. 'if' → logprob: -3.7747225761413574
    3. ' if' → logprob: -7.149722576141357
    4. ' R' → logprob: -7.649722576141357
    5. 'print' → logprob: -9.0247220993042
    6. 'r' → logprob: -10.1497220993042
    7. '#' → logprob: -11.2747220993042
    8. 'nombre' → logprob: -11.5247220993042
    9. 'val' → logprob: -11.7747220993042
    10. 'si' → logprob: -12.5247220993042

Token 349: ' des' (ID: 731)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3932802379131317
    2. 'de' → logprob: -1.893280267715454
    3. ' R' → logprob: -2.643280267715454
    4. ' de' → logprob: -2.768280267715454
    5. 'if' → logprob: -3.268280267715454
    6. ' if' → logprob: -6.143280029296875
    7. ' ' → logprob: -9.143280029296875
    8. '#' → logprob: -9.268280029296875
    9. ' of' → logprob: -10.268280029296875
    10. 'final' → logprob: -10.268280029296875

Token 350: ' variables' (ID: 13955)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.051066520740278e-05
    2. ' R' → logprob: -9.875060081481934
    3. 'B' → logprob: -12.625060081481934
    4. 'print' → logprob: -13.375060081481934
    5. '#' → logprob: -13.750060081481934
    6. 'r' → logprob: -14.250060081481934
    7. '```' → logprob: -14.937560081481934
    8. ' ' → logprob: -15.625060081481934
    9. '2' → logprob: -15.687560081481934
    10. '	R' → logprob: -16.18756103515625

Token 351: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.21996472775936127
    2. 'if' → logprob: -1.8449647426605225
    3. ' if' → logprob: -3.7199647426605225
    4. ' R' → logprob: -4.219964504241943
    5. 'print' → logprob: -8.094964981079102
    6. 'r' → logprob: -9.844964981079102
    7. '#' → logprob: -9.969964981079102
    8. 'si' → logprob: -11.344964981079102
    9. ' ' → logprob: -11.469964981079102
    10. ' print' → logprob: -11.844964981079102

Token 352: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3057319223880768
    2. 'et' → logprob: -1.8057318925857544
    3. 'if' → logprob: -2.555732011795044
    4. ' and' → logprob: -4.430731773376465
    5. ' if' → logprob: -5.805731773376465
    6. '>' → logprob: -6.180731773376465
    7. ',' → logprob: -6.430731773376465
    8. 'and' → logprob: -6.555731773376465
    9. ' ' → logprob: -7.180731773376465
    10. '#' → logprob: -8.180731773376465

Token 353: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00023059594968799502
    2. ' B' → logprob: -8.37523078918457
    3. ' ' → logprob: -17.25023078918457
    4. '>B' → logprob: -17.87523078918457
    5. '```' → logprob: -18.50023078918457
    6. '	B' → logprob: -18.62523078918457
    7. 'R' → logprob: -18.62523078918457
    8. '`' → logprob: -18.87523078918457
    9. '_B' → logprob: -18.87523078918457
    10. '"B' → logprob: -19.00023078918457

Token 354: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00047928967978805304
    2. '
' → logprob: -8.125479698181152
    3. ' if' → logprob: -8.750479698181152
    4. 'print' → logprob: -10.875479698181152
    5. 'i' → logprob: -12.500479698181152
    6. ',' → logprob: -14.500479698181152
    7. ':' → logprob: -14.750479698181152
    8. '#' → logprob: -15.375479698181152
    9. ':
' → logprob: -15.375479698181152
    10. ';if' → logprob: -15.625479698181152

Token 355: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0206720617134124e-05
    2. 'print' → logprob: -12.12501049041748
    3. ' if' → logprob: -12.50001049041748
    4. 'i' → logprob: -14.75001049041748
    5. '
' → logprob: -15.00001049041748
    6. '```' → logprob: -15.62501049041748
    7. '#' → logprob: -16.250009536743164
    8. 'If' → logprob: -17.625009536743164
    9. '   ' → logprob: -19.125009536743164
    10. 'for' → logprob: -19.250009536743164

Token 356: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.843177233240567e-05
    2. 'print' → logprob: -11.000018119812012
    3. 'i' → logprob: -13.875018119812012
    4. '```' → logprob: -14.500018119812012
    5. ' if' → logprob: -15.250018119812012
    6. 'If' → logprob: -17.500019073486328
    7. '#' → logprob: -17.750019073486328
    8. '
' → logprob: -18.250019073486328
    9. 'ifs' → logprob: -18.750019073486328
    10. 'ift' → logprob: -20.250019073486328

Token 357: ' le' (ID: 505)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.20141880214214325
    2. ' R' → logprob: -1.7014187574386597
    3. ' ' → logprob: -12.70141887664795
    4. ' ' → logprob: -13.82641887664795
    5. '	R' → logprob: -14.95141887664795
    6. '   ' → logprob: -15.07641887664795
    7. '(R' → logprob: -15.32641887664795
    8. '  ' → logprob: -15.57641887664795
    9. 'r' → logprob: -16.076417922973633
    10. 'B' → logprob: -16.513917922973633

Token 358: ' nombre' (ID: 9733)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0036246657837182283
    2. ' R' → logprob: -5.628624439239502
    3. 'B' → logprob: -11.00362491607666
    4. ' ' → logprob: -12.62862491607666
    5. 'N' → logprob: -14.25362491607666
    6. 'abs' → logprob: -14.37862491607666
    7. '   ' → logprob: -14.44112491607666
    8. '```' → logprob: -14.87862491607666
    9. ' ' → logprob: -15.31612491607666
    10. '	R' → logprob: -15.37862491607666

Token 359: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0403544902801514
    2. 'R' → logprob: -1.1653544902801514
    3. ' de' → logprob: -1.1653544902801514
    4. ' R' → logprob: -4.0403547286987305
    5. ' ' → logprob: -6.1653547286987305
    6. '#' → logprob: -6.7903547286987305
    7. 'd' → logprob: -7.7903547286987305
    8. '_R' → logprob: -8.41535472869873
    9. ' d' → logprob: -8.54035472869873
    10. '>' → logprob: -8.66535472869873

Token 360: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.388769103679806e-05
    2. ' R' → logprob: -9.375093460083008
    3. 'B' → logprob: -12.750093460083008
    4. ''' → logprob: -14.125093460083008
    5. '"' → logprob: -14.312593460083008
    6. '	R' → logprob: -14.500093460083008
    7. 'r' → logprob: -14.812593460083008
    8. ' ' → logprob: -14.875093460083008
    9. 's' → logprob: -15.000093460083008
    10. '`' → logprob: -15.000093460083008

Token 361: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -8.180258191714529e-06
    2. ' R' → logprob: -12.125008583068848
    3. 'B' → logprob: -13.375008583068848
    4. ''' → logprob: -15.375008583068848
    5. ' ' → logprob: -16.00000762939453
    6. '	R' → logprob: -16.06250762939453
    7. 's' → logprob: -16.18750762939453
    8. '"' → logprob: -16.31250762939453
    9. '```' → logprob: -16.50000762939453
    10. 'S' → logprob: -16.75000762939453

Token 362: ''' (ID: 6)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.9105998277664185
    2. ' >' → logprob: -1.1605998277664185
    3. ' est' → logprob: -1.4105998277664185
    4. 's' → logprob: -3.660599708557129
    5. 'est' → logprob: -5.285599708557129
    6. ' ' → logprob: -5.910599708557129
    7. ' is' → logprob: -6.410599708557129
    8. ''' → logprob: -7.160599708557129
    9. '">' → logprob: -7.410599708557129
    10. ' >=' → logprob: -7.660599708557129

Token 363: ' (' (ID: 350)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18586435914039612
    2. ' >' → logprob: -2.4358644485473633
    3. ' est' → logprob: -2.5608644485473633
    4. 'est' → logprob: -6.060864448547363
    5. 's' → logprob: -7.060864448547363
    6. ' is' → logprob: -7.685864448547363
    7. '>=' → logprob: -8.060864448547363
    8. ' dépasse' → logprob: -8.685864448547363
    9. ' >=' → logprob: -9.060864448547363
    10. '#' → logprob: -9.060864448547363

Token 364: 'stock' (ID: 21982)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.07628252357244492
    2. '>' → logprob: -2.951282501220703
    3. ')' → logprob: -4.076282501220703
    4. ' >' → logprob: -5.951282501220703
    5. ' R' → logprob: -7.076282501220703
    6. '>=' → logprob: -8.201282501220703
    7. ' ' → logprob: -9.451282501220703
    8. 's' → logprob: -9.701282501220703
    9. ')>' → logprob: -9.826282501220703
    10. 'est' → logprob: -10.076282501220703

Token 365: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1440264731645584
    2. '>' → logprob: -2.519026517868042
    3. 'R' → logprob: -3.769026517868042
    4. 'e' → logprob: -3.894026517868042
    5. 'és' → logprob: -5.644026279449463
    6. '>=' → logprob: -6.394026279449463
    7. 'age' → logprob: -6.519026279449463
    8. 'ée' → logprob: -7.269026279449463
    9. 'ed' → logprob: -7.894026279449463
    10. 'ées' → logprob: -7.894026279449463

Token 366: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4331612288951874
    2. ' dans' → logprob: -1.4331612586975098
    3. 'R' → logprob: -3.0581612586975098
    4. ')' → logprob: -3.0581612586975098
    5. 'in' → logprob: -4.30816125869751
    6. ' in' → logprob: -6.05816125869751
    7. '>' → logprob: -6.43316125869751
    8. 'Dans' → logprob: -7.30816125869751
    9. '#' → logprob: -8.183160781860352
    10. ' R' → logprob: -9.183160781860352

Token 367: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0001322639436693862
    2. ' R' → logprob: -9.00013256072998
    3. ')' → logprob: -12.37513256072998
    4. '`' → logprob: -13.12513256072998
    5. ' ' → logprob: -14.50013256072998
    6. '#' → logprob: -14.87513256072998
    7. '   ' → logprob: -15.00013256072998
    8. '```' → logprob: -15.50013256072998
    9. '"' → logprob: -15.62513256072998
    10. ''' → logprob: -15.62513256072998

Token 368: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021676288451999426
    2. ' )' → logprob: -6.627167701721191
    3. '>' → logprob: -8.002167701721191
    4. ')>' → logprob: -8.127167701721191
    5. '>)' → logprob: -9.252167701721191
    6. ' >' → logprob: -9.877167701721191
    7. ' est' → logprob: -10.877167701721191
    8. '')' → logprob: -10.877167701721191
    9. 'est' → logprob: -11.877167701721191
    10. '`)' → logprob: -12.127167701721191

Token 369: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18098950386047363
    2. ' >' → logprob: -1.8059895038604736
    3. ' est' → logprob: -7.3059892654418945
    4. 'est' → logprob: -8.430989265441895
    5. '>=' → logprob: -9.180989265441895
    6. ' >=' → logprob: -9.680989265441895
    7. '>#' → logprob: -10.180989265441895
    8. '<' → logprob: -10.555989265441895
    9. ' is' → logprob: -10.805989265441895
    10. '#' → logprob: -10.930989265441895

Token 370: ' strict' (ID: 12035)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -1.190714716911316
    2. 'strict' → logprob: -1.190714716911316
    3. '>' → logprob: -1.690714716911316
    4. ' supérieur' → logprob: -2.0657148361206055
    5. 'super' → logprob: -2.8157148361206055
    6. 'plus' → logprob: -3.9407148361206055
    7. 'greater' → logprob: -8.065714836120605
    8. ' sup' → logprob: -8.565714836120605
    9. ' >' → logprob: -8.565714836120605
    10. ' strict' → logprob: -8.815714836120605

Token 371: 'ement' (ID: 962)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6141521334648132
    2. 'ement' → logprob: -0.8641521334648132
    3. ' supérieur' → logprob: -3.614152193069458
    4. ' >' → logprob: -5.739151954650879
    5. 'sup' → logprob: -6.864151954650879
    6. ' inférieur' → logprob: -6.989151954650879
    7. '<' → logprob: -6.989151954650879
    8. 'greater' → logprob: -7.364151954650879
    9. 'ly' → logprob: -7.614151954650879
    10. 'lement' → logprob: -7.739151954650879

Token 372: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.3714691698551178
    2. '>' → logprob: -1.3714691400527954
    3. ' supérieur' → logprob: -3.496469259262085
    4. 'super' → logprob: -3.746469259262085
    5. 'plus' → logprob: -6.496469020843506
    6. 'greater' → logprob: -6.996469020843506
    7. 'inf' → logprob: -9.496469497680664
    8. ' sup' → logprob: -9.746469497680664
    9. '_sup' → logprob: -10.871469497680664
    10. ' supérieure' → logprob: -11.371469497680664

Token 373: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.47943994402885437
    2. 'à' → logprob: -0.9794399738311768
    3. ':' → logprob: -5.854439735412598
    4. ' to' → logprob: -7.229439735412598
    5. 'au' → logprob: -7.354439735412598
    6. ' ' → logprob: -7.854439735412598
    7. ' a' → logprob: -8.854439735412598
    8. '   ' → logprob: -8.854439735412598
    9. 'to' → logprob: -9.104439735412598
    10. 'a' → logprob: -9.229439735412598

Token 374: ' nombre' (ID: 9733)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.010419806465506554
    2. 'nombre' → logprob: -4.635419845581055
    3. ' B' → logprob: -7.635419845581055
    4. ' nombre' → logprob: -9.260419845581055
    5. 'number' → logprob: -9.510419845581055
    6. 'Nombre' → logprob: -12.885419845581055
    7. 'N' → logprob: -13.135419845581055
    8. 'b' → logprob: -13.385419845581055
    9. ' number' → logprob: -13.760419845581055
    10. '#' → logprob: -14.010419845581055

Token 375: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.39926084876060486
    2. ' de' → logprob: -1.1492608785629272
    3. 'des' → logprob: -4.774260997772217
    4. ' des' → logprob: -6.149260997772217
    5. 'd' → logprob: -7.274260997772217
    6. '#' → logprob: -7.899260997772217
    7. ' of' → logprob: -8.649260520935059
    8. ' d' → logprob: -9.149260520935059
    9. ' ' → logprob: -9.149260520935059
    10. 'if' → logprob: -9.774260520935059

Token 376: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0008987197652459145
    2. ' B' → logprob: -7.125898838043213
    3. ''' → logprob: -9.500898361206055
    4. '"B' → logprob: -11.500898361206055
    5. '"' → logprob: -13.250898361206055
    6. '_B' → logprob: -13.375898361206055
    7. '`' → logprob: -13.875898361206055
    8. ' ' → logprob: -14.125898361206055
    9. '	B' → logprob: -14.250898361206055
    10. 'b' → logprob: -14.375898361206055

Token 377: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.5048530030981055e-06
    2. ' B' → logprob: -13.750001907348633
    3. '"B' → logprob: -15.375001907348633
    4. ''' → logprob: -16.125001907348633
    5. '"' → logprob: -17.000001907348633
    6. '```' → logprob: -17.875001907348633
    7. '	B' → logprob: -18.250001907348633
    8. '_B' → logprob: -18.250001907348633
    9. '`' → logprob: -18.500001907348633
    10. '>B' → logprob: -19.812501907348633

Token 378: ''' (ID: 6)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0567520409822464
    2. ')' → logprob: -3.4317519664764404
    3. ':' → logprob: -4.1817522048950195
    4. ' ):' → logprob: -5.6817522048950195
    5. ',' → logprob: -6.4317522048950195
    6. '):
' → logprob: -7.3067522048950195
    7. ''):' → logprob: -7.4317522048950195
    8. ' :' → logprob: -7.5567522048950195
    9. '':' → logprob: -8.18175220489502
    10. '.' → logprob: -8.93175220489502

Token 379: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031941127963364124
    2. ' :' → logprob: -6.128194332122803
    3. ':
' → logprob: -7.128194332122803
    4. ',' → logprob: -8.878193855285645
    5. '):' → logprob: -10.128193855285645
    6. '>:' → logprob: -12.628193855285645
    7. 'if' → logprob: -12.878193855285645
    8. ' :
' → logprob: -12.878193855285645
    9. 's' → logprob: -13.003193855285645
    10. 'R' → logprob: -13.003193855285645

Token 380: 'stock' (ID: 21982)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02324850670993328
    2. ' B' → logprob: -3.7732484340667725
    3. ')' → logprob: -13.148248672485352
    4. ' ' → logprob: -13.898248672485352
    5. ' )' → logprob: -18.02324867248535
    6. ' ' → logprob: -18.14824867248535
    7. '  ' → logprob: -18.14824867248535
    8. '	B' → logprob: -18.27324867248535
    9. '>B' → logprob: -18.52324867248535
    10. 'S' → logprob: -18.64824867248535

Token 381: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.710400104522705
    2. 'é' → logprob: -2.085400104522705
    3. 'r' → logprob: -2.335400104522705
    4. 'ant' → logprob: -2.460400104522705
    5. 'R' → logprob: -2.585400104522705
    6. 'ré' → logprob: -2.585400104522705
    7. 're' → logprob: -2.835400104522705
    8. ')' → logprob: -3.585400104522705
    9. 'érieur' → logprob: -3.585400104522705
    10. 'à' → logprob: -3.710400104522705

Token 382: ' dans' (ID: 2671)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4946383535861969
    2. ' in' → logprob: -1.8696383237838745
    3. 'B' → logprob: -2.494638442993164
    4. 'à' → logprob: -2.869638442993164
    5. ' dans' → logprob: -3.119638442993164
    6. 'dans' → logprob: -3.869638442993164
    7. 'in' → logprob: -3.994638442993164
    8. ' ' → logprob: -4.994638442993164
    9. ')' → logprob: -6.119638442993164
    10. ' B' → logprob: -6.119638442993164

Token 383: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.048630282282829285
    2. ' B' → logprob: -3.0486302375793457
    3. 'R' → logprob: -10.173630714416504
    4. ' ' → logprob: -12.673630714416504
    5. ' R' → logprob: -13.798630714416504
    6. ')' → logprob: -15.173630714416504
    7. 'b' → logprob: -16.298629760742188
    8. '"B' → logprob: -16.673629760742188
    9. '	B' → logprob: -17.048629760742188
    10. '  ' → logprob: -17.548629760742188

Token 384: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009317669086158276
    2. ':' → logprob: -5.884317874908447
    3. ')' → logprob: -6.009317874908447
    4. '):
' → logprob: -6.259317874908447
    5. ',' → logprob: -6.384317874908447
    6. ' ):' → logprob: -8.259317398071289
    7. 'if' → logprob: -9.134317398071289
    8. '),' → logprob: -11.009317398071289
    9. ' :' → logprob: -11.759317398071289
    10. 'print' → logprob: -11.884317398071289

Token 385: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004842815455049276
    2. ':' → logprob: -5.504842758178711
    3. ':
' → logprob: -7.254842758178711
    4. ' if' → logprob: -10.004842758178711
    5. 'print' → logprob: -11.754842758178711
    6. 'i' → logprob: -13.379842758178711
    7. '
' → logprob: -14.129842758178711
    8. '```' → logprob: -14.379842758178711
    9. ',' → logprob: -15.004842758178711
    10. '#' → logprob: -15.254842758178711

Token 386: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.31326520442962646
    2. 'R' → logprob: -1.3132652044296265
    3. ' ' → logprob: -12.938264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '	R' → logprob: -15.188264846801758
    6. '   ' → logprob: -15.938264846801758
    7. '  ' → logprob: -17.563264846801758
    8. '_R' → logprob: -18.438264846801758
    9. '(R' → logprob: -18.938264846801758
    10. ' ' → logprob: -19.813264846801758

Token 387: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.029759055003523827
    2. '>' → logprob: -3.529759168624878
    3. ' ' → logprob: -12.029759407043457
    4. ' ' → logprob: -13.904759407043457
    5. ' >
' → logprob: -14.904759407043457
    6. '  ' → logprob: -15.029759407043457
    7. ' >

' → logprob: -15.029759407043457
    8. ' >
' → logprob: -15.654759407043457
    9. '">' → logprob: -16.15475845336914
    10. '   ' → logprob: -16.65475845336914

Token 388: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0009115827269852161
    2. ' B' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -17.500911712646484
    4. ' ' → logprob: -17.750911712646484
    5. '	B' → logprob: -18.125911712646484
    6. '>B' → logprob: -19.500911712646484
    7. 'b' → logprob: -20.125911712646484
    8. '_B' → logprob: -20.250911712646484
    9. '#' → logprob: -20.375911712646484
    10. '0' → logprob: -20.625911712646484

Token 389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.061973731964826584
    2. ':
' → logprob: -2.811973810195923
    3. 'print' → logprob: -12.936973571777344
    4. ' :' → logprob: -13.061973571777344
    5. ' :
' → logprob: -13.936973571777344
    6. ':

' → logprob: -15.436973571777344
    7. ':
' → logprob: -15.561973571777344
    8. ' print' → logprob: -16.311973571777344
    9. '   ' → logprob: -17.561973571777344
    10. '):
' → logprob: -17.686973571777344

Token 390: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014595920220017433
    2. '   ' → logprob: -5.139595985412598
    3. ':' → logprob: -5.389595985412598
    4. ':
' → logprob: -5.889595985412598
    5. ' print' → logprob: -6.764595985412598
    6. '
' → logprob: -9.139595985412598
    7. '	print' → logprob: -11.264595985412598
    8. '```' → logprob: -12.264595985412598
    9. '):
' → logprob: -12.889595985412598
    10. ' ' → logprob: -12.889595985412598

Token 391: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007938297465443611
    2. ' print' → logprob: -5.007938385009766
    3. '   ' → logprob: -6.757938385009766
    4. '
' → logprob: -10.132938385009766
    5. 'pr' → logprob: -12.257938385009766
    6. '	print' → logprob: -12.757938385009766
    7. 'prin' → logprob: -12.882938385009766
    8. ' ' → logprob: -13.257938385009766
    9. '```' → logprob: -13.382938385009766
    10. '#' (adapté à ' #') → logprob: -14.007938385009766

Token 392: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. 'prin' → logprob: -12.875004768371582
    3. 'pr' → logprob: -13.625004768371582
    4. ' print' → logprob: -14.250004768371582
    5. '   ' → logprob: -15.000004768371582
    6. 'prit' → logprob: -16.3750057220459
    7. '
' → logprob: -16.7500057220459
    8. 'pri' → logprob: -16.8750057220459
    9. '```' → logprob: -17.3750057220459
    10. 'Print' → logprob: -17.3750057220459

Token 393: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3080716346157715e-05
    2. ' print' → logprob: -11.625022888183594
    3. 'prin' → logprob: -12.000022888183594
    4. 'pr' → logprob: -12.125022888183594
    5. '   ' → logprob: -13.500022888183594
    6. '
' → logprob: -14.750022888183594
    7. 'prit' → logprob: -14.875022888183594
    8. '#' → logprob: -16.125022888183594
    9. 'pri' → logprob: -16.375022888183594
    10. '#print' → logprob: -17.250022888183594

Token 394: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0500570572912693
    2. '("' → logprob: -3.0500571727752686
    3. 'print' → logprob: -7.1750569343566895
    4. ''' → logprob: -8.300057411193848
    5. '"I' → logprob: -9.300057411193848
    6. '"O' → logprob: -9.800057411193848
    7. '"B' → logprob: -10.050057411193848
    8. 'R' → logprob: -10.300057411193848
    9. '"H' → logprob: -10.675057411193848
    10. '"W' → logprob: -10.675057411193848

Token 395: 'Yes' (ID: 13022)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.17232181131839752
    2. '"' → logprob: -2.0473217964172363
    3. 'Yes' → logprob: -5.547321796417236
    4. 'RO' → logprob: -5.672321796417236
    5. ''' → logprob: -5.797321796417236
    6. 'RA' → logprob: -6.172321796417236
    7. 'RED' → logprob: -6.297321796417236
    8. 'RR' → logprob: -6.672321796417236
    9. 'G' → logprob: -6.797321796417236
    10. 'Red' → logprob: -7.047321796417236

Token 396: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09202747792005539
    2. '")' → logprob: -3.342027425765991
    3. 'print' → logprob: -3.967027425765991
    4. '("' → logprob: -4.09202766418457
    5. '()' → logprob: -4.21702766418457
    6. '()"' → logprob: -6.84202766418457
    7. '(' → logprob: -8.09202766418457
    8. ')' → logprob: -9.09202766418457
    9. '()
' → logprob: -9.09202766418457
    10. '")
' → logprob: -9.21702766418457

Token 397: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018094140104949474
    2. ')' → logprob: -7.376809597015381
    3. '
' → logprob: -7.501809597015381
    4. ' print' → logprob: -7.626809597015381
    5. '   ' → logprob: -9.376809120178223
    6. '(print' → logprob: -11.001809120178223
    7. ')
' → logprob: -11.751809120178223
    8. '	print' → logprob: -12.376809120178223
    9. '```' → logprob: -12.376809120178223
    10. '()' → logprob: -12.626809120178223

Token 398: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07736802101135254
    2. 'la' → logprob: -2.9523680210113525
    3. 'l' → logprob: -4.327367782592773
    4. ' la' → logprob: -5.952367782592773
    5. '```' → logprob: -6.702367782592773
    6. ' print' → logprob: -7.577367782592773
    7. ' l' → logprob: -7.702367782592773
    8. '
' → logprob: -7.702367782592773
    9. 'le' → logprob: -7.827367782592773
    10. '()' → logprob: -7.952367782592773

Token 399: ''écran' (ID: 147901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6321457028388977
    2. 'a' → logprob: -0.8821457028388977
    3. 'e' → logprob: -3.382145643234253
    4. ''écran' → logprob: -4.757145881652832
    5. 'é' → logprob: -6.257145881652832
    6. '   ' → logprob: -6.632145881652832
    7. 'aise' → logprob: -6.757145881652832
    8. 'elif' → logprob: -6.757145881652832
    9. 'output' → logprob: -6.882145881652832
    10. ''utilisateur' → logprob: -7.507145881652832

Token 400: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001237252727150917
    2. '
' → logprob: -7.626237392425537
    3. ' print' → logprob: -7.751237392425537
    4. ')' → logprob: -8.751236915588379
    5. '   ' → logprob: -8.876236915588379
    6. ')
' → logprob: -11.751236915588379
    7. ':
' → logprob: -13.001236915588379
    8. '	print' → logprob: -13.126236915588379
    9. '(print' → logprob: -13.251236915588379
    10. '```' → logprob: -13.376236915588379

Token 401: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.5999255776405334
    2. 'ind' → logprob: -0.8499255776405334
    3. ' indicate' → logprob: -4.849925518035889
    4. 'print' → logprob: -5.349925518035889
    5. ' indique' → logprob: -6.224925518035889
    6. 'indi' → logprob: -6.474925518035889
    7. ' confirmer' → logprob: -6.599925518035889
    8. ' la' → logprob: -6.849925518035889
    9. ' indiqu' → logprob: -7.474925518035889
    10. 'Ind' → logprob: -7.599925518035889

Token 402: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.0051941475830972195
    2. 'ique' → logprob: -5.505194187164307
    3. 'iqué' → logprob: -7.380194187164307
    4. 'iqu' → logprob: -8.255193710327148
    5. 'iquant' → logprob: -9.255193710327148
    6. 'ent' → logprob: -9.755193710327148
    7. 'ice' → logprob: -10.630193710327148
    8. 'iq' → logprob: -11.505193710327148
    9. 'enter' → logprob: -11.505193710327148
    10. 'icate' → logprob: -11.630193710327148

Token 403: ' que' (ID: 661)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1731506735086441
    2. '"' → logprob: -3.0481507778167725
    3. '   ' → logprob: -3.4231507778167725
    4. '(' → logprob: -3.7981507778167725
    5. ' que' → logprob: -4.173150539398193
    6. '()' → logprob: -4.548150539398193
    7. 'print' → logprob: -5.423150539398193
    8. 'le' → logprob: -5.423150539398193
    9. 'la' → logprob: -5.673150539398193
    10. 'que' → logprob: -5.923150539398193

Token 404: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4691094160079956
    2. 'Yes' → logprob: -1.4691094160079956
    3. ' Yes' → logprob: -2.094109535217285
    4. 'R' → logprob: -2.344109535217285
    5. ' R' → logprob: -2.469109535217285
    6. '"' → logprob: -2.469109535217285
    7. '   ' → logprob: -2.719109535217285
    8. ' print' → logprob: -3.094109535217285
    9. ' la' → logprob: -4.094109535217285
    10. ' ' → logprob: -5.469109535217285

Token 405: ' '' (ID: 461)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.11649458110332489
    2. 'R' → logprob: -2.366494655609131
    3. ' caractères' → logprob: -5.116494655609131
    4. ' résultats' → logprob: -5.741494655609131
    5. 'print' → logprob: -6.616494655609131
    6. ' ' → logprob: -7.241494655609131
    7. ' result' → logprob: -7.491494655609131
    8. ' ' → logprob: -7.741494655609131
    9. ' caract' → logprob: -7.866494655609131
    10. ' characters' → logprob: -7.991494655609131

Token 406: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03370828554034233
    2. ' R' → logprob: -3.408708333969116
    3. 'Rs' → logprob: -10.783708572387695
    4. 's' → logprob: -11.408708572387695
    5. ' '' → logprob: -12.158708572387695
    6. ' ' → logprob: -12.408708572387695
    7. 'r' → logprob: -12.658708572387695
    8. ''' → logprob: -13.158708572387695
    9. '	R' → logprob: -13.533708572387695
    10. 'RS' → logprob: -13.596208572387695

Token 407: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8247992992401123
    2. 's' → logprob: -1.3247992992401123
    3. ''' → logprob: -2.0747992992401123
    4. ' are' → logprob: -3.1997992992401123
    5. ' s' → logprob: -3.3247992992401123
    6. ' sont' → logprob: -3.5747992992401123
    7. ' "' → logprob: -4.074799537658691
    8. ' have' → logprob: -4.574799537658691
    9. ' dépass' → logprob: -4.574799537658691
    10. ' characters' → logprob: -5.074799537658691

Token 408: ' sont' (ID: 5242)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9699854254722595
    2. 'print' → logprob: -1.8449854850769043
    3. ' sont' → logprob: -1.9699854850769043
    4. 's' → logprob: -2.0949854850769043
    5. ' print' → logprob: -2.4699854850769043
    6. ' are' → logprob: -3.0949854850769043
    7. ' ont' → logprob: -4.219985485076904
    8. '```' → logprob: -4.719985485076904
    9. ' dépass' → logprob: -4.844985485076904
    10. '"' → logprob: -4.969985485076904

Token 409: ' major' (ID: 5035)
  Prédit: 'domin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'domin' → logprob: -0.9829179644584656
    2. 'major' → logprob: -1.2329180240631104
    3. ' présents' → logprob: -2.2329180240631104
    4. 'plus' → logprob: -2.2329180240631104
    5. ' plus' → logprob: -2.9829180240631104
    6. 'sup' → logprob: -3.3579180240631104
    7. ' major' → logprob: -4.607917785644531
    8. 'prés' → logprob: -5.107917785644531
    9. ' predomin' → logprob: -5.607917785644531
    10. ' sup' → logprob: -5.732917785644531

Token 410: 'itaires' (ID: 106145)
  Prédit: 'itaires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itaires' → logprob: -0.33794519305229187
    2. 'itaire' → logprob: -1.3379452228546143
    3. 'ita' → logprob: -3.8379452228546143
    4. 'it' → logprob: -6.212944984436035
    5. 'itai' → logprob: -8.587944984436035
    6. 'i' → logprob: -8.837944984436035
    7. 'itary' → logprob: -9.337944984436035
    8. '```' → logprob: -9.587944984436035
    9. 'itar' → logprob: -9.962944984436035
    10. 'ity' → logprob: -10.337944984436035

Token 411: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014064543880522251
    2. '   ' → logprob: -4.764064311981201
    3. '
' → logprob: -5.639064311981201
    4. ' print' → logprob: -6.389064311981201
    5. ':
' → logprob: -9.63906478881836
    6. ')' → logprob: -9.76406478881836
    7. ')
' → logprob: -10.26406478881836
    8. ':' → logprob: -11.01406478881836
    9. '```' → logprob: -11.38906478881836
    10. '	print' → logprob: -12.76406478881836

Token 412: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3204703629016876
    2. '   ' → logprob: -1.3204703330993652
    3. ' print' → logprob: -4.945470333099365
    4. '
' → logprob: -10.945470809936523
    5. '```' → logprob: -11.070470809936523
    6. '	print' → logprob: -11.570470809936523
    7. '    
' → logprob: -12.445470809936523
    8. ')' → logprob: -12.570470809936523
    9. '       ' → logprob: -12.820470809936523
    10. 'Print' → logprob: -12.945470809936523

Token 413: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0033610546961426735
    2. ' print' → logprob: -5.753361225128174
    3. '   ' → logprob: -8.628360748291016
    4. '```' → logprob: -12.628360748291016
    5. '
' → logprob: -14.003360748291016
    6. 'Print' → logprob: -16.003360748291016
    7. '	print' → logprob: -16.503360748291016
    8. '    
' → logprob: -17.503360748291016
    9. '``' → logprob: -17.753360748291016
    10. ' ' → logprob: -17.878360748291016

Token 414: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0015042672166600823
    2. '(' → logprob: -6.501504421234131
    3. '('' → logprob: -13.626503944396973
    4. ' ("' → logprob: -15.126503944396973
    5. '("("' → logprob: -15.751503944396973
    6. '()' → logprob: -16.00150489807129
    7. '("")' → logprob: -16.75150489807129
    8. ' ' → logprob: -16.87650489807129
    9. '"' → logprob: -17.50150489807129
    10. '(
' → logprob: -17.62650489807129

Token 415: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.128163257315464e-07
    2. ' Yes' → logprob: -15.375
    3. 'R' → logprob: -18.875
    4. 'Y' → logprob: -18.875
    5. 'YES' → logprob: -18.875
    6. 'Oui' → logprob: -19.5
    7. 'Ye' → logprob: -20.5
    8. '.Yes' → logprob: -21.875
    9. 'No' → logprob: -22.0
    10. 'Yeah' → logprob: -22.375

Token 416: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.203409844194539e-05
    2. '")
' → logprob: -10.250041961669922
    3. ')' → logprob: -12.250041961669922
    4. ')")' → logprob: -13.750041961669922
    5. '"' → logprob: -14.875041961669922
    6. '")
' → logprob: -15.375041961669922
    7. '!")' → logprob: -16.375041961669922
    8. '")

' → logprob: -16.500041961669922
    9. ' ")' → logprob: -16.625041961669922
    10. '");' → logprob: -17.875041961669922

Token 417: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00045902872807346284
    2. 'elif' → logprob: -8.125458717346191
    3. ' else' → logprob: -8.750458717346191
    4. 'e' → logprob: -13.250458717346191
    5. 'el' → logprob: -13.500458717346191
    6. '```' → logprob: -14.125458717346191
    7. ')' → logprob: -14.875458717346191
    8. 'elser' → logprob: -16.375459671020508
    9. 'els' → logprob: -16.375459671020508
    10. '#else' → logprob: -16.875459671020508

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06201283633708954
    2. ':
' → logprob: -2.8120129108428955
    3. '   ' → logprob: -10.187012672424316
    4. ' :' → logprob: -12.562012672424316
    5. ' :
' → logprob: -12.687012672424316
    6. ':

' → logprob: -14.937012672424316
    7. 'print' → logprob: -16.062013626098633
    8. ':
' → logprob: -16.062013626098633
    9. '():
' → logprob: -16.312013626098633
    10. '):
' → logprob: -16.437013626098633

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14791619777679443
    2. 'print' → logprob: -2.022916316986084
    3. ' print' → logprob: -5.272916316986084
    4. '	print' → logprob: -10.272915840148926
    5. '    
' → logprob: -10.772915840148926
    6. '    ' → logprob: -11.147915840148926
    7. '"' → logprob: -12.272915840148926
    8. ' ' → logprob: -12.647915840148926
    9. '       ' → logprob: -12.647915840148926
    10. '   ' → logprob: -12.647915840148926

Token 420: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007942321710288525
    2. ' print' → logprob: -4.882942199707031
    3. '   ' → logprob: -8.007942199707031
    4. '	print' → logprob: -13.382942199707031
    5. ' ' → logprob: -14.632942199707031
    6. '.print' → logprob: -14.882942199707031
    7. '"' → logprob: -15.382942199707031
    8. '(print' → logprob: -15.632942199707031
    9. '    ' → logprob: -16.25794219970703
    10. '  ' → logprob: -16.38294219970703

Token 421: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0047887153923511505
    2. '   ' → logprob: -5.504788875579834
    3. ' print' → logprob: -7.254788875579834
    4. '	print' → logprob: -13.254788398742676
    5. '.print' → logprob: -15.254788398742676
    6. 'pr' → logprob: -15.629788398742676
    7. ' ' → logprob: -15.629788398742676
    8. 'Print' → logprob: -15.754788398742676
    9. 'prin' → logprob: -15.879788398742676
    10. '(print' → logprob: -16.379789352416992

Token 422: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014799494296312332
    2. ':' → logprob: -5.01479959487915
    3. 'print' → logprob: -5.88979959487915
    4. ' print' → logprob: -6.13979959487915
    5. '  ' → logprob: -6.88979959487915
    6. '    ' → logprob: -7.26479959487915
    7. ' ' → logprob: -7.38979959487915
    8. '
' → logprob: -9.014799118041992
    9. 'B' → logprob: -9.014799118041992
    10. ' not' → logprob: -9.139799118041992

Token 423: ' nombre' (ID: 9733)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7585489749908447
    2. 'B' → logprob: -1.3835489749908447
    3. ' R' → logprob: -1.8835489749908447
    4. ' B' → logprob: -2.3835489749908447
    5. 'print' → logprob: -3.6335489749908447
    6. '   ' → logprob: -5.633548736572266
    7. '#' → logprob: -6.133548736572266
    8. ' print' → logprob: -6.133548736572266
    9. ' ' → logprob: -7.383548736572266
    10. '"' → logprob: -7.508548736572266

Token 424: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7446807622909546
    2. ' de' → logprob: -0.8696807622909546
    3. '<=' → logprob: -3.369680881500244
    4. ' of' → logprob: -3.869680881500244
    5. ' <=' → logprob: -3.869680881500244
    6. 'of' → logprob: -4.994680881500244
    7. 'print' → logprob: -5.244680881500244
    8. '   ' → logprob: -5.369680881500244
    9. 'B' → logprob: -5.494680881500244
    10. '(B' → logprob: -6.619680881500244

Token 425: ' '' (ID: 461)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0252742767333984
    2. '"B' → logprob: -1.1502742767333984
    3. ''' → logprob: -1.5252742767333984
    4. 'R' → logprob: -2.9002742767333984
    5. '"' → logprob: -3.1502742767333984
    6. ' B' → logprob: -5.525274276733398
    7. ' '' → logprob: -5.775274276733398
    8. ' "' → logprob: -6.900274276733398
    9. ' R' → logprob: -7.525274276733398
    10. ' ' → logprob: -9.650274276733398

Token 426: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10253868252038956
    2. 'R' → logprob: -2.852538585662842
    3. ''' → logprob: -3.227538585662842
    4. '"B' → logprob: -10.3525390625
    5. '"' → logprob: -10.6025390625
    6. ' B' → logprob: -10.7275390625
    7. 'r' → logprob: -12.4775390625
    8. ')' → logprob: -12.4775390625
    9. ''r' → logprob: -13.2275390625
    10. 'b' → logprob: -13.3525390625

Token 427: ''' (ID: 6)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.23786844313144684
    2. ' >' → logprob: -1.7378684282302856
    3. '>=' → logprob: -3.862868547439575
    4. '>' → logprob: -4.237868309020996
    5. '">' → logprob: -8.987868309020996
    6. ')' → logprob: -10.362868309020996
    7. ' ">' → logprob: -10.362868309020996
    8. ' !=' → logprob: -10.737868309020996
    9. ' ==' → logprob: -10.987868309020996
    10. ' <=' → logprob: -11.362868309020996

Token 428: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.396730899810791
    2. '>=' → logprob: -1.146730899810791
    3. '>' → logprob: -5.021730899810791
    4. ' >' → logprob: -5.896730899810791
    5. ' est' → logprob: -8.646730422973633
    6. ' is' → logprob: -9.146730422973633
    7. 'est' → logprob: -10.396730422973633
    8. '≥' → logprob: -10.521730422973633
    9. '==' → logprob: -11.146730422973633
    10. '```' → logprob: -11.271730422973633

Token 429: ' supérieur' (ID: 98491)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.9606074094772339
    2. 'égal' → logprob: -1.3356074094772339
    3. ' supérieur' → logprob: -2.0856075286865234
    4. 'strict' → logprob: -2.5856075286865234
    5. 'greater' → logprob: -2.5856075286865234
    6. 'plus' → logprob: -2.8356075286865234
    7. 'au' → logprob: -4.835607528686523
    8. '>=' → logprob: -5.960607528686523
    9. '```' → logprob: -5.960607528686523
    10. 'super' → logprob: -6.085607528686523

Token 430: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0688430517911911
    2. ' ou' → logprob: -3.068843126296997
    3. '   ' → logprob: -4.193842887878418
    4. 'au' → logprob: -6.068842887878418
    5. 'à' → logprob: -7.193842887878418
    6. 'or' → logprob: -7.443842887878418
    7. ' or' → logprob: -7.818842887878418
    8. '  ' → logprob: -8.318842887878418
    9. ':' → logprob: -8.443842887878418
    10. ' ' → logprob: -8.693842887878418

Token 431: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.0014415422920137644
    2. 'ég' → logprob: -7.501441478729248
    3. '#' → logprob: -7.751441478729248
    4. 'ou' → logprob: -8.626441955566406
    5. ' égal' → logprob: -9.251441955566406
    6. 'égalité' → logprob: -9.501441955566406
    7. '```' → logprob: -10.376441955566406
    8. 'à' → logprob: -11.126441955566406
    9. 'é' → logprob: -11.251441955566406
    10. 'équ' → logprob: -11.251441955566406

Token 432: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.1663115918636322
    2. ' à' → logprob: -2.291311502456665
    3. '   ' → logprob: -3.041311502456665
    4. 'au' → logprob: -6.541311740875244
    5. ':' → logprob: -6.791311740875244
    6. ',' → logprob: -8.166311264038086
    7. '=' → logprob: -8.166311264038086
    8. '#' → logprob: -8.416311264038086
    9. ''à' → logprob: -8.416311264038086
    10. 'ou' → logprob: -8.916311264038086

Token 433: ' nombre' (ID: 9733)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.014991169795393944
    2. 'B' → logprob: -5.014991283416748
    3. 'nombre' → logprob: -5.639991283416748
    4. ' R' → logprob: -6.389991283416748
    5. ''' → logprob: -6.639991283416748
    6. '"' → logprob: -6.889991283416748
    7. ' nombre' → logprob: -7.639991283416748
    8. 'number' → logprob: -9.63999080657959
    9. 'Nombre' → logprob: -10.63999080657959
    10. ')' → logprob: -10.76499080657959

Token 434: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.06429652124643326
    2. ' de' → logprob: -2.9392964839935303
    3. '   ' → logprob: -4.939296722412109
    4. 'à' → logprob: -7.064296722412109
    5. 'd' → logprob: -8.31429672241211
    6. '#' → logprob: -8.43929672241211
    7. 'of' → logprob: -8.56429672241211
    8. 'def' → logprob: -8.68929672241211
    9. ' à' → logprob: -9.31429672241211
    10. 'des' → logprob: -9.43929672241211

Token 435: ' '' (ID: 461)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.034304458647966385
    2. ''' → logprob: -4.034304618835449
    3. 'B' → logprob: -4.159304618835449
    4. '"' → logprob: -8.53430461883545
    5. ' R' → logprob: -9.15930461883545
    6. '"B' → logprob: -10.65930461883545
    7. ''r' → logprob: -11.28430461883545
    8. ' ' → logprob: -11.28430461883545
    9. ')' → logprob: -11.40930461883545
    10. '`' → logprob: -11.40930461883545

Token 436: 'R' (ID: 49)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.23245641589164734
    2. 'R' → logprob: -1.6074564456939697
    3. ''' → logprob: -4.982456207275391
    4. '"' → logprob: -9.35745620727539
    5. ' B' → logprob: -10.60745620727539
    6. '"B' → logprob: -10.73245620727539
    7. ' R' → logprob: -11.73245620727539
    8. 'b' → logprob: -12.48245620727539
    9. '')' → logprob: -12.48245620727539
    10. ')' → logprob: -12.60745620727539

Token 437: '',' (ID: 787)
  Prédit: '"):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"):
' → logprob: -0.4334527254104614
    2. ':' → logprob: -1.3084527254104614
    3. '"):' → logprob: -2.808452606201172
    4. '):' → logprob: -5.183452606201172
    5. '):
' → logprob: -5.183452606201172
    6. '   ' → logprob: -5.933452606201172
    7. 'print' → logprob: -6.183452606201172
    8. '")' → logprob: -6.433452606201172
    9. ',' → logprob: -6.433452606201172
    10. ':
' → logprob: -7.308452606201172

Token 438: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02651241421699524
    2. ' print' → logprob: -4.276512622833252
    3. 'print' → logprob: -4.401512622833252
    4. '       ' → logprob: -12.026512145996094
    5. '    ' → logprob: -12.526512145996094
    6. '	print' → logprob: -13.401512145996094
    7. '   ' → logprob: -13.526512145996094
    8. '```' → logprob: -13.901512145996094
    9. '  ' → logprob: -15.526512145996094
    10. '   ' → logprob: -15.901512145996094

Token 439: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03763124346733093
    2. '   ' → logprob: -3.4126312732696533
    3. ' print' → logprob: -5.537631034851074
    4. '	print' → logprob: -11.787631034851074
    5. '.print' → logprob: -12.287631034851074
    6. '```' → logprob: -12.287631034851074
    7. '  ' → logprob: -12.537631034851074
    8. ' ' → logprob: -12.912631034851074
    9. ':' → logprob: -13.287631034851074
    10. 'pr' → logprob: -13.412631034851074

Token 440: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0021234957966953516
    2. '"' → logprob: -6.7521233558654785
    3. '"No' → logprob: -7.0021233558654785
    4. '(' → logprob: -10.127123832702637
    5. 'No' → logprob: -13.502123832702637
    6. '('' → logprob: -14.752123832702637
    7. '   ' → logprob: -15.252123832702637
    8. ' "' → logprob: -15.252123832702637
    9. '(
' → logprob: -15.502123832702637
    10. '"B' → logprob: -16.00212287902832

Token 441: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.05500335991382599
    2. '"No' → logprob: -2.9300034046173096
    3. '"' → logprob: -9.18000316619873
    4. ' No' → logprob: -11.18000316619873
    5. ''' → logprob: -13.55500316619873
    6. 'Yes' → logprob: -14.43000316619873
    7. '“No' → logprob: -14.93000316619873
    8. '```' → logprob: -15.18000316619873
    9. '>No' → logprob: -15.80500316619873
    10. '""' → logprob: -15.93000316619873

Token 442: '".
' (ID: 26880)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -3.881560041918419e-05
    2. '")
' → logprob: -10.500039100646973
    3. '"' → logprob: -12.500039100646973
    4. '("' → logprob: -12.750039100646973
    5. ')")' → logprob: -13.500039100646973
    6. '")
' → logprob: -14.000039100646973
    7. '")

' → logprob: -14.375039100646973
    8. ')' → logprob: -14.750039100646973
    9. 'No' → logprob: -14.875039100646973
    10. '()' → logprob: -15.250039100646973

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06495965272188187
    2. 'print' → logprob: -2.814959764480591
    3. ' print' → logprob: -5.814959526062012
    4. '```' → logprob: -12.439959526062012
    5. '	print' → logprob: -14.314959526062012
    6. '       ' → logprob: -15.189959526062012
    7. '   ' → logprob: -16.564960479736328
    8. '.print' → logprob: -17.939960479736328
    9. '``' → logprob: -17.939960479736328
    10. 'Print' → logprob: -18.314960479736328

Token 444: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006544724106788635
    2. ' print' → logprob: -5.506544589996338
    3. '   ' → logprob: -6.006544589996338
    4. '	print' → logprob: -15.006545066833496
    5. '```' → logprob: -15.756545066833496
    6. ' ' → logprob: -16.88154411315918
    7. '  ' → logprob: -17.13154411315918
    8. '.print' → logprob: -17.63154411315918
    9. 'Print' → logprob: -17.88154411315918
    10. 'pr' → logprob: -18.25654411315918

Token 445: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. '("")' → logprob: -15.626171112060547
    4. '('' → logprob: -15.876171112060547
    5. '()' → logprob: -16.001171112060547
    6. '(
' → logprob: -16.626171112060547
    7. '("("' → logprob: -17.251171112060547
    8. '("""' → logprob: -18.126171112060547
    9. '(""' → logprob: -18.751171112060547
    10. ' ("' → logprob: -18.876171112060547

Token 446: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: 0.0
    2. '"No' → logprob: -17.0
    3. ' No' → logprob: -20.0
    4. '")' → logprob: -22.5
    5. 'N' → logprob: -23.0
    6. '"' → logprob: -23.125
    7. 'Yes' → logprob: -24.0
    8. '_No' → logprob: -24.0
    9. 'NO' → logprob: -25.125
    10. '.No' → logprob: -25.25

Token 447: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.652451464906335e-05
    2. ')")' → logprob: -11.375016212463379
    3. ')' → logprob: -12.250016212463379
    4. '"' → logprob: -16.250017166137695
    5. '")
' → logprob: -16.625017166137695
    6. ' ")' → logprob: -18.250017166137695
    7. '!")' → logprob: -18.250017166137695
    8. '')' → logprob: -18.375017166137695
    9. ')"' → logprob: -19.000017166137695
    10. '}")' → logprob: -19.000017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 445
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 277
Précision stricte (1ère position): 24.04%
Précision adaptée (1ère position): 25.17%
Précision (top 10): 62.25%
================================================================================
