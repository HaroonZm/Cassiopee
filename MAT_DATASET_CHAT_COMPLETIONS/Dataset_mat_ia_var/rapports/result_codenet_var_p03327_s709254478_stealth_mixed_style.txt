================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, math
from decimal import Decimal as D
from collections import Counter as C, deque as dq
from copy import deepcopy as dc
sys.setrecursionlimit(10**9)
MODULO = 10 ** 9 + 7

get = lambda: input()
to_int = lambda: int(input())
split_str = input
parse = lambda: (int(x) for x in input().split())
lst = lambda: list(map(int, input().split()))
def LCM(x, y):
    return math.gcd(x, y) and x * y // math.gcd(x, y) or 0

for _ in range(1):
    n = to_int()
    print(['ABC','ABD'][n>=1000])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' math' (ID: 13324)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.002477677771821618
    2. ' os' → logprob: -6.002477645874023
    3. 'io' → logprob: -13.502477645874023
    4. '"os' → logprob: -15.377477645874023
    5. 'math' → logprob: -15.502477645874023
    6. 'json' → logprob: -16.502477645874023
    7. 're' → logprob: -16.627477645874023
    8. '	os' → logprob: -18.252477645874023
    9. 'sub' → logprob: -18.502477645874023
    10. 'import' → logprob: -18.627477645874023

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7463756799697876
    2. ',' → logprob: -1.3713756799697876
    3. '<|end|>' → logprob: -1.8713756799697876
    4. '\n' → logprob: -2.746375560760498
    5. 'import' → logprob: -3.621375560760498
    6. '\' → logprob: -4.746375560760498
    7. '<|end|>' → logprob: -5.371375560760498
    8. ';' → logprob: -5.371375560760498
    9. '
' → logprob: -6.121375560760498
    10. '

' → logprob: -6.371375560760498

Token 5: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20628349483013153
    2. ',' → logprob: -2.4562835693359375
    3. '
' → logprob: -3.7062835693359375
    4. '<|end|>' → logprob: -3.8312835693359375
    5. '\n' → logprob: -4.0812835693359375
    6. '

' → logprob: -4.5812835693359375
    7. 'import' → logprob: -4.7062835693359375
    8. '\' → logprob: -5.5812835693359375
    9. '<|end|>' → logprob: -5.8312835693359375
    10. '```' → logprob: -5.8312835693359375

Token 6: ' decimal' (ID: 26964)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8707196712493896
    2. ' collections' → logprob: -0.8707196712493896
    3. ' math' → logprob: -2.3707196712493896
    4. 'collections' → logprob: -3.6207196712493896
    5. 'os' → logprob: -4.370719909667969
    6. ' itertools' → logprob: -4.495719909667969
    7. 'math' → logprob: -5.620719909667969
    8. ' statistics' → logprob: -5.870719909667969
    9. ' datetime' → logprob: -6.120719909667969
    10. ' ' → logprob: -6.245719909667969

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0793537050485611
    2. 'import' → logprob: -2.5793538093566895
    3. ' ' → logprob: -8.454353332519531
    4. '<|end|>' → logprob: -8.579353332519531
    5. '	import' → logprob: -11.079353332519531
    6. ' im' → logprob: -11.204353332519531
    7. '_import' → logprob: -11.704353332519531
    8. '.' → logprob: -11.829353332519531
    9. '<|end|>' → logprob: -12.454353332519531
    10. ' impor' → logprob: -12.829353332519531

Token 8: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.5760114192962646
    2. 'Decimal' → logprob: -0.8260114192962646
    3. '.Decimal' → logprob: -10.326011657714844
    4. ' ' → logprob: -11.326011657714844
    5. 'decimal' → logprob: -11.576011657714844
    6. ' decimal' → logprob: -12.076011657714844
    7. ' get' → logprob: -12.576011657714844
    8. '`' → logprob: -13.076011657714844
    9. 'Decimals' → logprob: -13.201011657714844
    10. '```' → logprob: -13.201011657714844

Token 9: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0444594621658325
    2. '\n' → logprob: -1.6694594621658325
    3. '\' → logprob: -1.7944594621658325
    4. '
' → logprob: -2.544459342956543
    5. '.' → logprob: -2.794459342956543
    6. '

' → logprob: -3.169459342956543
    7. 'import' → logprob: -3.294459342956543
    8. ',
' → logprob: -3.794459342956543
    9. '' → logprob: -4.544459342956543
    10. '```' → logprob: -4.544459342956543

Token 10: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6871384978294373
    2. 'D' → logprob: -1.062138557434082
    3. ' Decimal' → logprob: -2.812138557434082
    4. ' Dec' → logprob: -3.312138557434082
    5. 'Dec' → logprob: -3.312138557434082
    6. 'Decimal' → logprob: -4.312138557434082
    7. ' ' → logprob: -6.187138557434082
    8. '	D' → logprob: -6.187138557434082
    9. '_D' → logprob: -8.187138557434082
    10. ' decimal' → logprob: -9.312138557434082

Token 11: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8164195418357849
    2. '
' → logprob: -1.3164196014404297
    3. '.' → logprob: -2.3164196014404297
    4. '\n' → logprob: -3.0664196014404297
    5. '' → logprob: -3.3164196014404297
    6. '\' → logprob: -3.4414196014404297
    7. ',
' → logprob: -3.6914196014404297
    8. '

' → logprob: -4.19141960144043
    9. 'import' → logprob: -4.81641960144043
    10. 'newline' → logprob: -5.06641960144043

Token 12: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2420298308134079
    2. ',
' → logprob: -2.992029905319214
    3. '\' → logprob: -3.492029905319214
    4. '
' → logprob: -3.492029905319214
    5. '.' → logprob: -3.867029905319214
    6. '

' → logprob: -4.117029666900635
    7. '\n' → logprob: -4.242029666900635
    8. ',

' → logprob: -4.492029666900635
    9. 'import' → logprob: -4.492029666900635
    10. '' → logprob: -4.992029666900635

Token 13: ' collections' (ID: 22690)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.36583471298217773
    2. ' math' → logprob: -1.6158347129821777
    3. 'fra' → logprob: -2.7408347129821777
    4. ' collections' → logprob: -4.865834712982178
    5. 'math' → logprob: -4.865834712982178
    6. ' sym' → logprob: -5.490834712982178
    7. ' typing' → logprob: -5.490834712982178
    8. ' numbers' → logprob: -5.740834712982178
    9. ' functools' → logprob: -5.865834712982178
    10. ' itertools' → logprob: -5.990834712982178

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16086791455745697
    2. ' import' → logprob: -1.9108679294586182
    3. '.' → logprob: -8.160867691040039
    4. '.Counter' → logprob: -9.035867691040039
    5. 'abc' → logprob: -9.410867691040039
    6. '```' → logprob: -10.035867691040039
    7. '	import' → logprob: -10.160867691040039
    8. '<|end|>' → logprob: -10.785867691040039
    9. '.import' → logprob: -11.535867691040039
    10. '_import' → logprob: -11.535867691040039

Token 15: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.040800418704748154
    2. ' named' → logprob: -4.54080057144165
    3. ' deque' → logprob: -4.79080057144165
    4. 'default' → logprob: -5.04080057144165
    5. 'named' → logprob: -5.04080057144165
    6. 'deque' → logprob: -5.16580057144165
    7. ' Counter' → logprob: -6.91580057144165
    8. ' abc' → logprob: -7.29080057144165
    9. 'abc' → logprob: -7.91580057144165
    10. 'Counter' → logprob: -8.415800094604492

Token 16: ' as' (ID: 472)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2333098649978638
    2. '\' → logprob: -1.6083098649978638
    3. ',' → logprob: -1.8583098649978638
    4. 'import' → logprob: -1.9833098649978638
    5. '
' → logprob: -2.108309745788574
    6. '```' → logprob: -3.858309745788574
    7. '.' → logprob: -4.108309745788574
    8. '' → logprob: -4.358309745788574
    9. '

' → logprob: -4.733309745788574
    10. ',
' → logprob: -5.233309745788574

Token 17: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.34541189670562744
    2. 'Counter' → logprob: -1.8454118967056274
    3. ' C' → logprob: -2.095411777496338
    4. ' Counter' → logprob: -4.595411777496338
    5. ' ' → logprob: -8.470412254333496
    6. 'Cnt' → logprob: -8.470412254333496
    7. '	C' → logprob: -8.970412254333496
    8. 'Ctr' → logprob: -9.095412254333496
    9. 'Co' → logprob: -9.970412254333496
    10. 'Count' → logprob: -10.095412254333496

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8845952749252319
    2. '\' → logprob: -1.634595274925232
    3. '\n' → logprob: -2.2595953941345215
    4. '
' → logprob: -2.8845953941345215
    5. 'import' → logprob: -3.0095953941345215
    6. '.' → logprob: -3.1345953941345215
    7. '' → logprob: -3.1345953941345215
    8. ',
' → logprob: -4.2595953941345215
    9. '<|end|>' → logprob: -4.2595953941345215
    10. '(' → logprob: -5.0095953941345215

Token 19: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.14389155805110931
    2. 'default' → logprob: -2.1438915729522705
    3. 'deque' → logprob: -4.518891334533691
    4. ' deque' → logprob: -5.518891334533691
    5. 'named' → logprob: -7.268891334533691
    6. ' Ordered' → logprob: -8.018891334533691
    7. ' named' → logprob: -8.018891334533691
    8. 'Ordered' → logprob: -8.143891334533691
    9. 'def' → logprob: -9.518891334533691
    10. ' default' → logprob: -9.768891334533691

Token 20: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.494160920381546
    2. 'import' → logprob: -1.9941608905792236
    3. '<|end|>' → logprob: -2.8691608905792236
    4. '
' → logprob: -2.9941608905792236
    5. '\' → logprob: -3.7441608905792236
    6. ' ' → logprob: -3.7441608905792236
    7. '' → logprob: -4.244161128997803
    8. '

' → logprob: -4.244161128997803
    9. ',
' → logprob: -4.369161128997803
    10. '\n' → logprob: -4.494161128997803

Token 21: ' dq' (ID: 164235)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.28251028060913086
    2. ' d' → logprob: -2.157510280609131
    3. ' dq' → logprob: -2.282510280609131
    4. 'D' → logprob: -4.532510280609131
    5. 'd' → logprob: -5.032510280609131
    6. ' deque' → logprob: -5.282510280609131
    7. 'deque' → logprob: -6.157510280609131
    8. ' De' → logprob: -6.907510280609131
    9. 'dq' → logprob: -6.907510280609131
    10. ' de' → logprob: -7.157510280609131

Token 22: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5006909966468811
    2. '\' → logprob: -1.8756909370422363
    3. '\n' → logprob: -2.2506909370422363
    4. '' → logprob: -3.5006909370422363
    5. ' ' → logprob: -3.7506909370422363
    6. '
' → logprob: -3.7506909370422363
    7. '<|end|>' → logprob: -4.250690937042236
    8. ',
' → logprob: -5.000690937042236
    9. 'import' → logprob: -5.250690937042236
    10. '```' → logprob: -5.375690937042236

Token 23: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5233713984489441
    2. '
' → logprob: -1.5233714580535889
    3. 'import' → logprob: -3.648371458053589
    4. '#' → logprob: -3.648371458053589
    5. ',
' → logprob: -3.648371458053589
    6. '

' → logprob: -3.773371458053589
    7. '' → logprob: -4.02337121963501
    8. '\n' → logprob: -4.02337121963501
    9. '\' → logprob: -4.39837121963501
    10. ':' → logprob: -4.39837121963501

Token 24: ' copy' (ID: 5150)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.013393622823059559
    2. ' heap' → logprob: -5.263393402099609
    3. ' typing' → logprob: -5.513393402099609
    4. ' functools' → logprob: -6.263393402099609
    5. ' os' → logprob: -6.888393402099609
    6. ' operator' → logprob: -8.26339340209961
    7. ' ' → logprob: -8.51339340209961
    8. ' math' → logprob: -8.63839340209961
    9. 'heap' → logprob: -9.13839340209961
    10. 'typing' → logprob: -9.51339340209961

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04882955551147461
    2. 'import' → logprob: -3.0488295555114746
    3. ' ' → logprob: -9.173830032348633
    4. '	import' → logprob: -9.798830032348633
    5. '<|end|>' → logprob: -10.423830032348633
    6. '_import' → logprob: -11.048830032348633
    7. ' importar' → logprob: -11.423830032348633
    8. ' im' → logprob: -12.423830032348633
    9. ' impor' → logprob: -12.923830032348633
    10. '.deepcopy' → logprob: -12.923830032348633

Token 26: ' deepcopy' (ID: 130230)
  Prédit: ' deepcopy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deepcopy' → logprob: -0.004151410888880491
    2. ' copy' → logprob: -5.504151344299316
    3. '.deepcopy' → logprob: -9.879151344299316
    4. 'copy' → logprob: -11.004151344299316
    5. 'deep' → logprob: -12.754151344299316
    6. ' deep' → logprob: -13.254151344299316
    7. ' dee' → logprob: -15.504151344299316
    8. ' ' → logprob: -15.879151344299316
    9. '.copy' → logprob: -17.004152297973633
    10. '	copy' → logprob: -17.379152297973633

Token 27: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' dc' (ID: 37843)
  Prédit: 'dc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.6646876931190491
    2. 'dp' → logprob: -0.9146876931190491
    3. ' dc' → logprob: -3.9146876335144043
    4. 'deep' → logprob: -3.9146876335144043
    5. ' dp' → logprob: -4.289687633514404
    6. 'copy' → logprob: -4.539687633514404
    7. 'd' → logprob: -4.789687633514404
    8. 'cp' → logprob: -5.039687633514404
    9. 'cpy' → logprob: -5.789687633514404
    10. ' cp' → logprob: -6.664687633514404

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.542527973651886
    2. '

' → logprob: -2.042527914047241
    3. ',' → logprob: -2.167527914047241
    4. '#' → logprob: -3.292527914047241
    5. '' → logprob: -3.792527914047241
    6. 'def' → logprob: -3.917527914047241
    7. '\n' → logprob: -4.16752815246582
    8. 'import' → logprob: -4.41752815246582
    9. '<|end|>' → logprob: -4.41752815246582
    10. ',
' → logprob: -4.54252815246582

Token 31: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.64708495605737e-05
    2. ' .' → logprob: -9.875066757202148
    3. '.

' → logprob: -13.000066757202148
    4. '.import' → logprob: -13.500066757202148
    5. '.exit' → logprob: -13.875066757202148
    6. '.user' → logprob: -13.875066757202148
    7. '.readline' → logprob: -14.125066757202148
    8. '."""' → logprob: -14.250066757202148
    9. '.`' → logprob: -14.500066757202148
    10. '.e' → logprob: -14.500066757202148

Token 32: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0012757115764543414
    2. 'e' → logprob: -9.001276016235352
    3. 'trace' → logprob: -9.001276016235352
    4. 'ecution' → logprob: -9.126276016235352
    5. 't' → logprob: -9.251276016235352
    6. 'limit' → logprob: -9.376276016235352
    7. '_' → logprob: -9.376276016235352
    8. 'set' → logprob: -9.501276016235352
    9. 'ection' → logprob: -9.626276016235352
    10. 'default' → logprob: -10.001276016235352

Token 33: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00034845535992644727
    2. 'urs' → logprob: -8.375348091125488
    3. 'ur' → logprob: -9.750348091125488
    4. 'ursive' → logprob: -10.125348091125488
    5. 'ursor' → logprob: -11.625348091125488
    6. 'limit' → logprob: -12.625348091125488
    7. 'urf' → logprob: -13.250348091125488
    8. 'urse' → logprob: -13.625348091125488
    9. 'urst' → logprob: -14.500348091125488
    10. '   ' → logprob: -14.625348091125488

Token 34: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0021563300397247076
    2. '_limit' → logprob: -6.6271562576293945
    3. 'rl' → logprob: -7.8771562576293945
    4. 'lim' → logprob: -8.627156257629395
    5. 'imit' → logprob: -9.627156257629395
    6. 'ault' → logprob: -10.127156257629395
    7. 'el' → logprob: -10.627156257629395
    8. ' limit' → logprob: -10.627156257629395
    9. 'ursion' → logprob: -10.752156257629395
    10. '-' → logprob: -11.252156257629395

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2603901015827432e-05
    2. '(
' → logprob: -11.500022888183594
    3. '(

' → logprob: -12.250022888183594
    4. ' (' → logprob: -13.000022888183594
    5. '((' → logprob: -13.250022888183594
    6. '("("' → logprob: -13.750022888183594
    7. '```' → logprob: -14.125022888183594
    8. '()' → logprob: -15.375022888183594
    9. '(
' → logprob: -15.625022888183594
    10. '(()' → logprob: -15.750022888183594

Token 36: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018298370763659477
    2. '100' → logprob: -4.018298149108887
    3. '1' → logprob: -10.018298149108887
    4. ' ' → logprob: -10.018298149108887
    5. '999' → logprob: -10.518298149108887
    6. '500' → logprob: -11.518298149108887
    7. '300' → logprob: -11.643298149108887
    8. '9' → logprob: -12.393298149108887
    9. '200' → logprob: -13.143298149108887
    10. 'int' → logprob: -13.393298149108887

Token 37: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3076484799385071
    2. '00' → logprob: -1.8076484203338623
    3. '**' → logprob: -2.3076484203338623
    4. '0' → logprob: -6.807648658752441
    5. '6' → logprob: -9.057648658752441
    6. '5' → logprob: -10.432648658752441
    7. '7' → logprob: -11.057648658752441
    8. '```' → logprob: -11.307648658752441
    9. '007' → logprob: -13.057648658752441
    10. '4' → logprob: -13.057648658752441

Token 38: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.022056056186556816
    2. '9' → logprob: -3.8970561027526855
    3. '8' → logprob: -6.5220561027526855
    4. '6' → logprob: -10.147055625915527
    5. '**' → logprob: -12.897055625915527
    6. '```' → logprob: -14.647055625915527
    7. ' ' → logprob: -16.522056579589844
    8. '``' → logprob: -16.897056579589844
    9. ')' → logprob: -17.647056579589844
    10. '  ' → logprob: -17.897056579589844

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.625000953674316
    3. '))' → logprob: -14.750000953674316
    4. ')
' → logprob: -16.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. ')))' → logprob: -17.875001907348633
    7. '),' → logprob: -18.000001907348633
    8. ')

' → logprob: -19.000001907348633
    9. ')
' → logprob: -19.000001907348633
    10. '')' → logprob: -19.000001907348633

Token 40: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04259122163057327
    2. '#' → logprob: -3.7925913333892822
    3. '

' → logprob: -4.542591094970703
    4. '' → logprob: -6.292591094970703
    5. 'def' → logprob: -6.917591094970703
    6. '
' → logprob: -6.917591094970703
    7. '\n' → logprob: -7.042591094970703
    8. '\' → logprob: -7.167591094970703
    9. ' 
' → logprob: -7.792591094970703
    10. ')' → logprob: -7.917591094970703

Token 41: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03775086998939514
    2. '=' → logprob: -3.4127509593963623
    3. ' ' → logprob: -5.537750720977783
    4. '_' → logprob: -9.537751197814941
    5. ' =
' → logprob: -10.537751197814941
    6. ' =)' → logprob: -11.162751197814941
    7. '<|end|>' → logprob: -11.662751197814941
    8. '.' → logprob: -11.662751197814941
    9. ')' → logprob: -11.912751197814941
    10. ' )' → logprob: -12.037751197814941

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.354362428188324
    2. '=' → logprob: -1.2293624877929688
    3. '_' → logprob: -5.229362487792969
    4. ' ' → logprob: -7.729362487792969
    5. '_=' → logprob: -10.479362487792969
    6. ',' → logprob: -10.854362487792969
    7. ' =
' → logprob: -11.104362487792969
    8. ')' → logprob: -11.104362487792969
    9. ' _' → logprob: -12.229362487792969
    10. ' =)' → logprob: -12.229362487792969

Token 43: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18549339473247528
    2. ' ' → logprob: -1.8104933500289917
    3. '100' → logprob: -5.185493469238281
    4. '1' → logprob: -9.185493469238281
    5. '998' → logprob: -10.560493469238281
    6. 'int' → logprob: -12.560493469238281
    7. '(' → logprob: -14.310493469238281
    8. '999' → logprob: -14.685493469238281
    9. ' int' → logprob: -15.060493469238281
    10. ' (' → logprob: -15.060493469238281

Token 44: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02353370375931263
    2. '100' → logprob: -3.773533821105957
    3. '1' → logprob: -8.523533821105957
    4. '998' → logprob: -9.523533821105957
    5. ' ' → logprob: -11.898533821105957
    6. 'int' → logprob: -12.273533821105957
    7. '(' → logprob: -13.523533821105957
    8. '2' → logprob: -13.523533821105957
    9. '999' → logprob: -13.773533821105957
    10. '9' → logprob: -14.898533821105957

Token 45: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2363348752260208
    2. '0' → logprob: -1.9863349199295044
    3. '*' → logprob: -4.111334800720215
    4. '\' → logprob: -4.611334800720215
    5. '^' → logprob: -4.861334800720215
    6. '#' → logprob: -4.986334800720215
    7. ' ' → logprob: -5.111334800720215
    8. ' **' → logprob: -5.111334800720215
    9. '%' → logprob: -5.361334800720215
    10. ':' → logprob: -5.861334800720215

Token 46: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. '09' → logprob: -14.500000953674316
    3. ' ' → logprob: -17.125
    4. '10' → logprob: -18.0
    5. '```' → logprob: -18.375
    6. '+' → logprob: -19.125
    7. '18' → logprob: -19.75
    8. '12' → logprob: -20.25
    9. '7' → logprob: -20.25
    10. '6' → logprob: -20.625

Token 47: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -15.875
    3. ' ' → logprob: -19.625
    4. '```' → logprob: -20.25
    5. '10' → logprob: -20.875
    6. '９' → logprob: -21.0
    7. '18' → logprob: -21.0
    8. '8' → logprob: -21.125
    9. '+' → logprob: -21.125
    10. '0' → logprob: -22.625

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010420980397611856
    2. ' +' → logprob: -7.376041889190674
    3. '7' → logprob: -7.876041889190674
    4. '+
' → logprob: -10.501042366027832
    5. '+

' → logprob: -12.126042366027832
    6. '9' → logprob: -14.001042366027832
    7. ' +
' → logprob: -14.126042366027832
    8. '＋' → logprob: -15.126042366027832
    9. '+</' → logprob: -15.376042366027832
    10. ' +
' → logprob: -15.751042366027832

Token 49: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '+' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. '9' → logprob: -19.75
    6. '07' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '37' → logprob: -20.25
    9. '79' → logprob: -20.9375
    10. '７' → logprob: -21.3125

Token 50: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.375
    3. '```' → logprob: -20.0
    4. ' ' → logprob: -20.25
    5. '07' → logprob: -21.5
    6. '9' → logprob: -22.0
    7. '۷' → logprob: -22.125
    8. '７' → logprob: -22.3125
    9. '   ' → logprob: -22.375
    10. '37' → logprob: -22.8125

Token 51: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06357492506504059
    2. '

' → logprob: -3.813575029373169
    3. '' → logprob: -4.43857479095459
    4. '\n' → logprob: -4.68857479095459
    5. '#' → logprob: -5.06357479095459
    6. 'def' → logprob: -6.06357479095459
    7. '\' → logprob: -6.06357479095459
    8. '<|end|>' → logprob: -6.31357479095459
    9. ' 
' → logprob: -7.06357479095459
    10. 'newline' → logprob: -7.18857479095459

Token 52: 'get' (ID: 522)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06659121811389923
    2. 'def' → logprob: -4.066591262817383
    3. '
' → logprob: -4.441591262817383
    4. '#' → logprob: -4.441591262817383
    5. 'n' → logprob: -4.941591262817383
    6. '\' → logprob: -5.316591262817383
    7. '' → logprob: -5.441591262817383
    8. 'a' → logprob: -5.566591262817383
    9. '\n' → logprob: -6.941591262817383
    10. 'c' → logprob: -7.691591262817383

Token 53: ' =' (ID: 314)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.011602746322751045
    2. '_input' → logprob: -5.261602878570557
    3. 's' → logprob: -5.636602878570557
    4. 'input' → logprob: -6.511602878570557
    5. '_' → logprob: -7.886602878570557
    6. 'ter' → logprob: -8.636602401733398
    7. '_s' → logprob: -9.011602401733398
    8. 'opt' → logprob: -9.136602401733398
    9. 'sys' → logprob: -9.386602401733398
    10. '_attr' → logprob: -10.261602401733398

Token 54: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7020909190177917
    2. ' input' → logprob: -0.7020909190177917
    3. ' sys' → logprob: -5.452090740203857
    4. 'sys' → logprob: -5.827090740203857
    5. '=input' → logprob: -7.577090740203857
    6. '.input' → logprob: -8.327091217041016
    7. 'int' → logprob: -8.327091217041016
    8. ' int' → logprob: -9.202091217041016
    9. ' getattr' → logprob: -9.202091217041016
    10. '=sys' → logprob: -9.327091217041016

Token 55: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9677025675773621
    2. ' sys' → logprob: -1.4677026271820068
    3. ' input' → logprob: -1.9677026271820068
    4. ' ' → logprob: -2.217702627182007
    5. '  ' → logprob: -3.717702627182007
    6. 'x' → logprob: -4.092702388763428
    7. ' s' → logprob: -4.217702388763428
    8. '<|end|>' → logprob: -4.467702388763428
    9. ' lambda' → logprob: -4.467702388763428
    10. 'input' → logprob: -4.592702388763428

Token 56: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6312932968139648
    2. 'input' → logprob: -1.0062932968139648
    3. 'map' → logprob: -3.256293296813965
    4. ' input' → logprob: -3.381293296813965
    5. ' int' → logprob: -4.381293296813965
    6. ' map' → logprob: -4.881293296813965
    7. 'list' → logprob: -5.506293296813965
    8. 'sys' → logprob: -5.631293296813965
    9. ' sys' → logprob: -6.506293296813965
    10. ' list' → logprob: -7.756293296813965

Token 57: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11287321150302887
    2. '().' → logprob: -2.2378733158111572
    3. '(' → logprob: -10.362873077392578
    4. ' ()' → logprob: -12.612873077392578
    5. '();' → logprob: -12.987873077392578
    6. '()
' → logprob: -13.112873077392578
    7. '()]' → logprob: -13.362873077392578
    8. '())' → logprob: -13.362873077392578
    9. '()

' → logprob: -13.612873077392578
    10. '("")' → logprob: -13.862873077392578

Token 58: 'to' (ID: 935)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1850395202636719
    2. '_' → logprob: -1.8100395202636719
    3. '()' → logprob: -1.8100395202636719
    4. '(' → logprob: -2.810039520263672
    5. 'n' → logprob: -2.935039520263672
    6. 's' → logprob: -2.935039520263672
    7. 'a' → logprob: -3.310039520263672
    8. '#' → logprob: -3.435039520263672
    9. ' ' → logprob: -3.935039520263672
    10. ')' → logprob: -4.310039520263672

Token 59: '_int' (ID: 12285)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.28809767961502075
    2. 'int' → logprob: -1.663097620010376
    3. '_int' → logprob: -3.163097620010376
    4. '=int' → logprob: -5.288097858428955
    5. 'k' → logprob: -5.788097858428955
    6. 'kens' → logprob: -6.163097858428955
    7. '_k' → logprob: -6.413097858428955
    8. '_i' → logprob: -6.663097858428955
    9. '_str' → logprob: -7.163097858428955
    10. '_' → logprob: -7.413097858428955

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1340991258621216
    2. 's' → logprob: -1.2590991258621216
    3. '=' → logprob: -1.3840991258621216
    4. '(' → logprob: -2.634099006652832
    5. '()' → logprob: -3.259099006652832
    6. '_list' → logprob: -4.884099006652832
    7. '=lambda' → logprob: -5.134099006652832
    8. '_' → logprob: -5.884099006652832
    9. ':' → logprob: -6.259099006652832
    10. '_s' → logprob: -6.384099006652832

Token 61: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6538985371589661
    2. 'int' → logprob: -1.1538984775543213
    3. 'lambda' → logprob: -2.1538984775543213
    4. ' int' → logprob: -3.0288984775543213
    5. '(lambda' → logprob: -9.028898239135742
    6. ' lamb' → logprob: -11.028898239135742
    7. '(int' → logprob: -11.403898239135742
    8. '[int' → logprob: -12.028898239135742
    9. ' ' → logprob: -12.028898239135742
    10. 'map' → logprob: -12.278898239135742

Token 62: ':' (ID: 25)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4754883348941803
    2. 'int' → logprob: -0.9754883050918579
    3. ':int' → logprob: -7.600488185882568
    4. ':' → logprob: -8.100488662719727
    5. '(int' → logprob: -8.600488662719727
    6. ' x' → logprob: -8.850488662719727
    7. ' ' → logprob: -9.975488662719727
    8. 's' → logprob: -10.100488662719727
    9. 'x' → logprob: -10.100488662719727
    10. ' s' → logprob: -10.350488662719727

Token 63: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6937149167060852
    2. ' int' → logprob: -0.6937149167060852
    3. ' map' → logprob: -7.5687150955200195
    4. 'map' → logprob: -10.44371509552002
    5. '[int' → logprob: -11.56871509552002
    6. ' ' → logprob: -12.69371509552002
    7. '(int' → logprob: -13.06871509552002
    8. ' list' → logprob: -13.06871509552002
    9. '	int' → logprob: -13.31871509552002
    10. ' i' → logprob: -14.19371509552002

Token 64: '(input' (ID: 10054)
  Prédit: '(get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(get' → logprob: -0.1567213237285614
    2. '(input' → logprob: -2.156721353530884
    3. '(' → logprob: -3.531721353530884
    4. 'input' → logprob: -9.906721115112305
    5. 'get' → logprob: -10.406721115112305
    6. ' (' → logprob: -11.531721115112305
    7. '()' → logprob: -12.531721115112305
    8. '((' → logprob: -13.406721115112305
    9. '(
' → logprob: -13.906721115112305
    10. '(inp' → logprob: -15.156721115112305

Token 65: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00036299455678090453
    2. '()' → logprob: -8.00036334991455
    3. '().' → logprob: -11.00036334991455
    4. ' ())' → logprob: -11.75036334991455
    5. ')' → logprob: -13.62536334991455
    6. '())
' → logprob: -14.75036334991455
    7. '()))' → logprob: -14.75036334991455
    8. '();)' → logprob: -15.00036334991455
    9. '(' → logprob: -15.25036334991455
    10. '()]' → logprob: -15.87536334991455

Token 66: 'split' (ID: 13627)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8008187413215637
    2. 'to' → logprob: -2.050818681716919
    3. '\n' → logprob: -2.175818681716919
    4. '()' → logprob: -2.925818681716919
    5. '_' → logprob: -3.050818681716919
    6. '\' → logprob: -3.050818681716919
    7. 'n' → logprob: -3.675818681716919
    8. 's' → logprob: -3.800818681716919
    9. '(' → logprob: -4.050818920135498
    10. '
' → logprob: -4.425818920135498

Token 67: '_str' (ID: 6182)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40039271116256714
    2. '_' → logprob: -1.525392770767212
    3. '=' → logprob: -3.150392770767212
    4. ' =' → logprob: -3.275392770767212
    5. 's' → logprob: -4.400392532348633
    6. '=lambda' → logprob: -5.400392532348633
    7. '_tokens' → logprob: -6.025392532348633
    8. '_line' → logprob: -6.275392532348633
    9. '_lines' → logprob: -6.650392532348633
    10. ')' → logprob: -6.775392532348633

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00433873338624835
    2. ' =' → logprob: -5.75433874130249
    3. 's' → logprob: -7.50433874130249
    4. '=lambda' → logprob: -7.50433874130249
    5. '()' → logprob: -10.504338264465332
    6. 'ing' → logprob: -11.504338264465332
    7. 'to' → logprob: -12.504338264465332
    8. '_' → logprob: -12.754338264465332
    9. '_=' → logprob: -12.879338264465332
    10. '＝' → logprob: -13.254338264465332

Token 69: ' input' (ID: 3422)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.20370995998382568
    2. 'lambda' → logprob: -1.7037099599838257
    3. '(lambda' → logprob: -6.203710079193115
    4. 'input' → logprob: -9.078709602355957
    5. '=lambda' → logprob: -9.453709602355957
    6. ' input' → logprob: -9.578709602355957
    7. ' ' → logprob: -12.828709602355957
    8. ' =' → logprob: -12.953709602355957
    9. 'split' → logprob: -13.453709602355957
    10. '()' → logprob: -14.203709602355957

Token 70: '
' (ID: 198)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009271129034459591
    2. '()' → logprob: -5.009271144866943
    3. '.split' → logprob: -6.259271144866943
    4. '.' → logprob: -8.259270668029785
    5. 's' → logprob: -8.384270668029785
    6. ')' → logprob: -9.759270668029785
    7. '(' → logprob: -10.884270668029785
    8. ' .' → logprob: -11.009270668029785
    9. 'split' → logprob: -11.384270668029785
    10. '('').' → logprob: -11.759270668029785

Token 71: 'parse' (ID: 4841)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.4714212417602539
    2. '=' → logprob: -1.596421241760254
    3. '=lambda' → logprob: -3.096421241760254
    4. 'def' → logprob: -3.221421241760254
    5. 's' → logprob: -3.846421241760254
    6. '_split' → logprob: -3.971421241760254
    7. '.split' → logprob: -4.596421241760254
    8. '()' → logprob: -4.721421241760254
    9. ' =' → logprob: -5.096421241760254
    10. '<|end|>' → logprob: -5.221421241760254

Token 72: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8112332820892334
    2. ' =' → logprob: -1.3112332820892334
    3. '=' → logprob: -2.6862332820892334
    4. '_int' → logprob: -2.6862332820892334
    5. 'int' → logprob: -3.4362332820892334
    6. '_input' → logprob: -3.5612332820892334
    7. '_tokens' → logprob: -3.5612332820892334
    8. '=lambda' → logprob: -3.8112332820892334
    9. '=int' → logprob: -4.1862335205078125
    10. '_list' → logprob: -5.0612335205078125

Token 73: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.06333862990140915
    2. 'lambda' → logprob: -3.1883385181427
    3. '(lambda' → logprob: -3.9383385181427
    4. '=lambda' → logprob: -7.688338756561279
    5. ' list' → logprob: -9.438338279724121
    6. 'list' → logprob: -10.313338279724121
    7. 'split' → logprob: -10.438338279724121
    8. ' split' → logprob: -10.688338279724121
    9. ' lamb' → logprob: -11.438338279724121
    10. ' (' → logprob: -12.813338279724121

Token 74: ':' (ID: 25)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.706788182258606
    2. ':' → logprob: -0.831788182258606
    3. 'lambda' → logprob: -3.2067880630493164
    4. ' str' → logprob: -4.831788063049316
    5. ' :' → logprob: -4.831788063049316
    6. '(lambda' → logprob: -5.831788063049316
    7. 's' → logprob: -5.831788063049316
    8. ' s' → logprob: -6.706788063049316
    9. ' input' → logprob: -6.706788063049316
    10. '=lambda' → logprob: -6.706788063049316

Token 75: ' (' (ID: 350)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8342331647872925
    2. ' map' → logprob: -0.9592331647872925
    3. 'list' → logprob: -2.584233283996582
    4. 'map' → logprob: -2.834233283996582
    5. ' input' → logprob: -3.459233283996582
    6. 'input' → logprob: -5.084233283996582
    7. ' [' → logprob: -5.709233283996582
    8. '[input' → logprob: -5.709233283996582
    9. '[' → logprob: -6.584233283996582
    10. ' tuple' → logprob: -7.459233283996582

Token 76: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.27856647968292236
    2. 'int' → logprob: -1.5285664796829224
    3. ' map' → logprob: -4.028566360473633
    4. 'to' → logprob: -6.153566360473633
    5. ')' → logprob: -6.903566360473633
    6. 's' → logprob: -7.028566360473633
    7. 'i' → logprob: -7.028566360473633
    8. 'x' → logprob: -7.153566360473633
    9. '[int' → logprob: -7.778566360473633
    10. 'get' → logprob: -7.903566360473633

Token 77: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.26283159852027893
    2. '(i' → logprob: -1.5128315687179565
    3. 's' → logprob: -5.512831687927246
    4. '(s' → logprob: -5.887831687927246
    5. ')(' → logprob: -6.512831687927246
    6. '(a' → logprob: -7.637831687927246
    7. '(token' → logprob: -7.887831687927246
    8. '()' → logprob: -8.137831687927246
    9. '(j' → logprob: -8.512831687927246
    10. '(_)' → logprob: -8.637831687927246

Token 78: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13539420068264008
    2. ' for' → logprob: -2.2603940963745117
    3. ')' → logprob: -3.8853940963745117
    4. '()' → logprob: -6.385394096374512
    5. '(x' → logprob: -9.885394096374512
    6. 'x' → logprob: -10.885394096374512
    7. 'in' → logprob: -12.385394096374512
    8. 'or' → logprob: -12.635394096374512
    9. '	for' → logprob: -12.635394096374512
    10. ' ' → logprob: -12.885394096374512

Token 79: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47429323196411133
    2. ' for' → logprob: -0.9742932319641113
    3. ')' → logprob: -8.474292755126953
    4. '()' → logprob: -12.474292755126953
    5. '(x' → logprob: -13.849292755126953
    6. '	for' → logprob: -13.974292755126953
    7. 'x' → logprob: -14.599292755126953
    8. ' ' → logprob: -14.974292755126953
    9. ' )' → logprob: -15.724292755126953
    10. ' in' → logprob: -15.724292755126953

Token 80: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20794209837913513
    2. ' split' → logprob: -2.457942008972168
    3. 'x' → logprob: -2.832942008972168
    4. 'split' → logprob: -3.207942008972168
    5. ' input' → logprob: -6.457942008972168
    6. ' ' → logprob: -7.082942008972168
    7. 'input' → logprob: -8.832942008972168
    8. '  ' → logprob: -9.832942008972168
    9. '<|end|>' → logprob: -9.957942008972168
    10. ' in' → logprob: -10.207942008972168

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2857818305492401
    2. ' split' → logprob: -1.9107818603515625
    3. 'split' → logprob: -2.5357818603515625
    4. ' input' → logprob: -4.1607818603515625
    5. 'input' → logprob: -6.0357818603515625
    6. 'in' → logprob: -6.7857818603515625
    7. '=input' → logprob: -7.2857818603515625
    8. '(split' → logprob: -7.5357818603515625
    9. ')' → logprob: -8.035781860351562
    10. ' splitting' → logprob: -8.535781860351562

Token 82: ' input' (ID: 3422)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.13124719262123108
    2. ' split' → logprob: -2.1312472820281982
    3. 'get' → logprob: -6.506247043609619
    4. 'input' → logprob: -6.756247043609619
    5. ' input' → logprob: -7.256247043609619
    6. ' get' → logprob: -7.506247043609619
    7. ')' → logprob: -8.256247520446777
    8. '(split' → logprob: -9.756247520446777
    9. ' ' → logprob: -10.006247520446777
    10. '  ' → logprob: -11.881247520446777

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.771655115589965e-05
    2. '()' → logprob: -11.500018119812012
    3. ' ().' → logprob: -12.000018119812012
    4. '(' → logprob: -13.500018119812012
    5. '.split' → logprob: -18.375017166137695
    6. 'split' → logprob: -18.500017166137695
    7. ' ()' → logprob: -18.875017166137695
    8. ')' → logprob: -19.375017166137695
    9. '())' → logprob: -19.500017166137695
    10. ' ' → logprob: -19.625017166137695

Token 84: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009189624106511474
    2. 'strip' → logprob: -7.000918865203857
    3. ' split' → logprob: -12.500919342041016
    4. ')' → logprob: -13.500919342041016
    5. '(split' → logprob: -13.750919342041016
    6. 'rstrip' → logprob: -13.875919342041016
    7. 'spl' → logprob: -14.750919342041016
    8. '.split' → logprob: -17.375919342041016
    9. 's' → logprob: -18.500919342041016
    10. 'plit' → logprob: -18.500919342041016

Token 85: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02079843357205391
    2. ')' → logprob: -4.270798206329346
    3. '()' → logprob: -5.020798206329346
    4. ' ())' → logprob: -12.270798683166504
    5. '())
' → logprob: -12.770798683166504
    6. ' )' → logprob: -13.770798683166504
    7. '(' → logprob: -13.895798683166504
    8. '()))' → logprob: -14.020798683166504
    9. '))' → logprob: -14.020798683166504
    10. '();)' → logprob: -14.270798683166504

Token 86: 'lst' (ID: 65430)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8116518259048462
    2. 'n' → logprob: -1.5616518259048462
    3. '#' → logprob: -2.3116517066955566
    4. 'd' → logprob: -2.8116517066955566
    5. '\' → logprob: -3.0616517066955566
    6. '_' → logprob: -3.5616517066955566
    7. 'newline' → logprob: -4.061651706695557
    8. 'x' → logprob: -4.186651706695557
    9. '\n' → logprob: -4.436651706695557
    10. '
' → logprob: -4.436651706695557

Token 87: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.559515655040741
    2. ' =' → logprob: -1.1845157146453857
    3. '(' → logprob: -2.4345157146453857
    4. '_' → logprob: -3.8095157146453857
    5. '=[]' → logprob: -5.309515476226807
    6. '.' → logprob: -5.934515476226807
    7. '[' → logprob: -6.059515476226807
    8. ',' → logprob: -7.059515476226807
    9. '[:]' → logprob: -7.434515476226807
    10. '()' → logprob: -7.934515476226807

Token 88: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.029102753847837448
    2. ' []' → logprob: -3.6541028022766113
    3. 'list' → logprob: -6.279102802276611
    4. ' list' → logprob: -7.779102802276611
    5. '[' → logprob: -8.654102325439453
    6. '[list' → logprob: -9.154102325439453
    7. '[]
' → logprob: -9.654102325439453
    8. '[]}' → logprob: -9.779102325439453
    9. ' [' → logprob: -10.154102325439453
    10. '[:]' → logprob: -11.029102325439453

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1509874016046524
    2. ' :' → logprob: -2.150987386703491
    3. ':list' → logprob: -4.40098762512207
    4. ' x' → logprob: -4.90098762512207
    5. ' list' → logprob: -6.90098762512207
    6. ' s' → logprob: -7.65098762512207
    7. 'x' → logprob: -7.77598762512207
    8. '[' → logprob: -7.77598762512207
    9. ' input' → logprob: -8.15098762512207
    10. ' ' → logprob: -8.15098762512207

Token 90: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2568444609642029
    2. 'list' → logprob: -1.5068445205688477
    3. ' [' → logprob: -5.881844520568848
    4. '[list' → logprob: -6.631844520568848
    5. '[' → logprob: -7.881844520568848
    6. '[]' → logprob: -9.131844520568848
    7. ' []' → logprob: -9.506844520568848
    8. '[input' → logprob: -9.631844520568848
    9. '[int' → logprob: -9.756844520568848
    10. ' input' → logprob: -11.006844520568848

Token 91: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0612292289733887
    2. '(parse' → logprob: -1.0612292289733887
    3. '()' → logprob: -2.1862292289733887
    4. '(' → logprob: -2.4362292289733887
    5. '(int' → logprob: -2.6862292289733887
    6. '(input' → logprob: -3.6862292289733887
    7. '(split' → logprob: -4.561229228973389
    8. '(range' → logprob: -6.436229228973389
    9. '<|end|>' → logprob: -7.436229228973389
    10. '(eval' → logprob: -8.186229705810547

Token 92: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00029625516617670655
    2. '(' → logprob: -8.375296592712402
    3. '<|end|>' → logprob: -10.500296592712402
    4. 'int' → logprob: -11.125296592712402
    5. '(lambda' → logprob: -12.125296592712402
    6. '(str' → logprob: -12.250296592712402
    7. '<int' → logprob: -12.875296592712402
    8. '[int' → logprob: -13.000296592712402
    9. ')' → logprob: -13.375296592712402
    10. '<|end|>' → logprob: -13.500296592712402

Token 93: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.16033805906772614
    2. ',' → logprob: -1.910338044166565
    3. '(input' → logprob: -9.785338401794434
    4. ' ,' → logprob: -10.535338401794434
    5. ',(' → logprob: -11.410338401794434
    6. ',int' → logprob: -11.910338401794434
    7. '(' → logprob: -12.785338401794434
    8. 'input' → logprob: -13.035338401794434
    9. ',in' → logprob: -13.285338401794434
    10. ',get' → logprob: -13.410338401794434

Token 94: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21314272284507751
    2. ' input' → logprob: -1.7131427526474
    3. 'parse' → logprob: -4.9631428718566895
    4. ' parse' → logprob: -5.7131428718566895
    5. 'split' → logprob: -6.9631428718566895
    6. ' split' → logprob: -8.713142395019531
    7. ' ' → logprob: -9.088142395019531
    8. ')' → logprob: -9.588142395019531
    9. '(input' → logprob: -11.463142395019531
    10. ',input' → logprob: -11.588142395019531

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. ' ().' → logprob: -12.500008583068848
    3. '()' → logprob: -12.750008583068848
    4. ')' → logprob: -14.125008583068848
    5. '.' → logprob: -15.250008583068848
    6. '.split' → logprob: -15.375008583068848
    7. '))' → logprob: -15.500008583068848
    8. '(' → logprob: -16.00000762939453
    9. ' .' → logprob: -16.62500762939453
    10. 'split' → logprob: -17.62500762939453

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.2378600735682994e-05
    2. ' split' → logprob: -10.500032424926758
    3. 'strip' → logprob: -12.625032424926758
    4. 'spl' → logprob: -13.750032424926758
    5. 'rstrip' → logprob: -15.750032424926758
    6. ' ' → logprob: -16.250032424926758
    7. '(split' → logprob: -16.375032424926758
    8. ')' → logprob: -17.000032424926758
    9. '.split' → logprob: -18.250032424926758
    10. '_split' → logprob: -18.375032424926758

Token 97: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03867579624056816
    2. '()))' → logprob: -3.2886757850646973
    3. '()' → logprob: -8.163676261901855
    4. ')' → logprob: -8.288676261901855
    5. '())' → logprob: -9.788676261901855
    6. ')))' → logprob: -10.413676261901855
    7. ' ))' → logprob: -12.413676261901855
    8. '))
' → logprob: -12.663676261901855
    9. '(' → logprob: -13.288676261901855
    10. '()))
' → logprob: -13.413676261901855

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5412653684616089
    2. 'n' → logprob: -1.6662653684616089
    3. 'd' → logprob: -1.7912653684616089
    4. '\' → logprob: -2.0412654876708984
    5. '\n' → logprob: -2.1662654876708984
    6. '
' → logprob: -2.4162654876708984
    7. '#' → logprob: -3.5412654876708984
    8. '' → logprob: -4.416265487670898
    9. ')' → logprob: -4.916265487670898
    10. ' ' → logprob: -5.666265487670898

Token 99: ' L' (ID: 451)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4298146665096283
    2. ' solve' → logprob: -1.4298146963119507
    3. ' ' → logprob: -3.054814577102661
    4. ' dfs' → logprob: -3.554814577102661
    5. ' factorial' → logprob: -4.80481481552124
    6. ' parse' → logprob: -4.80481481552124
    7. ' _' → logprob: -6.30481481552124
    8. ' factor' → logprob: -6.55481481552124
    9. '_' → logprob: -6.55481481552124
    10. ' add' → logprob: -6.67981481552124

Token 100: 'CM' (ID: 14170)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.7574304938316345
    2. 'en' → logprob: -1.0074305534362793
    3. 'IST' → logprob: -3.1324305534362793
    4. '():' → logprob: -3.8824305534362793
    5. 'EN' → logprob: -4.132430553436279
    6. '(' → logprob: -4.132430553436279
    7. 'ength' → logprob: -4.382430553436279
    8. 'eft' → logprob: -4.507430553436279
    9. 'ambda' → logprob: -4.757430553436279
    10. 'e' → logprob: -5.382430553436279

Token 101: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5771348476409912
    2. '(' → logprob: -0.8271348476409912
    3. '(x' → logprob: -7.20213508605957
    4. '(A' → logprob: -8.95213508605957
    5. '(n' → logprob: -9.32713508605957
    6. ' (' → logprob: -9.45213508605957
    7. '(nums' → logprob: -11.20213508605957
    8. '(*' → logprob: -11.45213508605957
    9. '(lst' → logprob: -11.57713508605957
    10. '(lhs' → logprob: -11.57713508605957

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00082309142453596
    2. ',y' → logprob: -7.500823020935059
    3. ' ,' → logprob: -8.250823020935059
    4. ',n' → logprob: -12.250823020935059
    5. ',a' → logprob: -13.625823020935059
    6. ',x' → logprob: -14.000823020935059
    7. ',int' → logprob: -15.250823020935059
    8. ',r' → logprob: -15.375823020935059
    9. '):' → logprob: -15.500823020935059
    10. ',b' → logprob: -15.875823020935059

Token 103: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22545981407165527
    2. ' y' → logprob: -1.6004598140716553
    3. '	y' → logprob: -10.975460052490234
    4. ' ' → logprob: -10.975460052490234
    5. '<|end|>' → logprob: -12.225460052490234
    6. ',y' → logprob: -13.975460052490234
    7. '   ' → logprob: -13.975460052490234
    8. '  ' → logprob: -14.100460052490234
    9. '*y' → logprob: -14.100460052490234
    10. ')' → logprob: -14.350460052490234

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00028660334646701813
    2. ')' → logprob: -8.750287055969238
    3. ' ):' → logprob: -9.125287055969238
    4. ':' → logprob: -11.375287055969238
    5. '):
' → logprob: -11.875287055969238
    6. ',' → logprob: -15.500287055969238
    7. ' :' → logprob: -16.000286102294922
    8. ' ' → logprob: -16.625286102294922
    9. '):
' → logprob: -16.875286102294922
    10. ' )' → logprob: -16.875286102294922

Token 105: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10602016746997833
    2. '   ' → logprob: -2.606020212173462
    3. ' return' → logprob: -4.356019973754883
    4. '	return' → logprob: -5.606019973754883
    5. ':return' → logprob: -5.731019973754883
    6. ':
' → logprob: -5.981019973754883
    7. ' ' → logprob: -5.981019973754883
    8. ' :' → logprob: -7.106019973754883
    9. ',' → logprob: -7.731019973754883
    10. ' x' → logprob: -9.231019973754883

Token 106: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21935807168483734
    2. 'return' (adapté à ' return') → logprob: -1.7193580865859985
    3. '   ' → logprob: -5.094357967376709
    4. ' if' → logprob: -5.969357967376709
    5. 'if' → logprob: -6.469357967376709
    6. 'a' → logprob: -6.469357967376709
    7. ' a' → logprob: -6.594357967376709
    8. 'r' → logprob: -6.719357967376709
    9. ' r' → logprob: -6.844357967376709
    10. '	return' → logprob: -7.844357967376709

Token 107: ' math' (ID: 13324)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5429239273071289
    2. ' x' → logprob: -1.542923927307129
    3. '(x' → logprob: -1.792923927307129
    4. ' (' → logprob: -3.292923927307129
    5. ' ' → logprob: -7.667923927307129
    6. '(abs' → logprob: -7.792923927307129
    7. '(' → logprob: -8.417923927307129
    8. 'abs' → logprob: -8.542923927307129
    9. ' abs' → logprob: -8.917923927307129
    10. '   ' → logprob: -9.917923927307129

Token 108: '.g' (ID: 1940)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.011908233165740967
    2. '.g' → logprob: -4.761908054351807
    3. '.' → logprob: -6.011908054351807
    4. '.ceil' → logprob: -7.261908054351807
    5. '.floor' → logprob: -10.261908531188965
    6. '.prod' → logprob: -11.136908531188965
    7. '   ' → logprob: -11.136908531188965
    8. '.c' → logprob: -11.636908531188965
    9. 'l' → logprob: -11.761908531188965
    10. '.py' → logprob: -11.886908531188965

Token 109: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00017040544480551034
    2. 'c' → logprob: -9.500170707702637
    3. 'g' → logprob: -9.750170707702637
    4. 'cf' → logprob: -11.375170707702637
    5. 'a' → logprob: -12.000170707702637
    6. 'mp' → logprob: -12.125170707702637
    7. 'cm' → logprob: -12.375170707702637
    8. 't' → logprob: -13.375170707702637
    9. 'cdf' → logprob: -13.375170707702637
    10. 'l' → logprob: -13.500170707702637

Token 110: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16027864813804626
    2. '(' → logprob: -1.9102786779403687
    3. ' (' → logprob: -11.0352783203125
    4. '((' → logprob: -11.1602783203125
    5. '(
' → logprob: -11.5352783203125
    6. '(y' → logprob: -12.0352783203125
    7. 'x' → logprob: -12.6602783203125
    8. '(int' → logprob: -13.7852783203125
    9. ' ' → logprob: -14.7852783203125
    10. '(*' → logprob: -14.7852783203125

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35843610763549805
    2. ')' → logprob: -1.858436107635498
    3. ' ,' → logprob: -2.733436107635498
    4. ' ' → logprob: -4.108436107635498
    5. ' *' → logprob: -4.108436107635498
    6. '(' → logprob: -4.358436107635498
    7. '(x' → logprob: -4.608436107635498
    8. ' )' → logprob: -4.983436107635498
    9. 'y' → logprob: -5.108436107635498
    10. '*' → logprob: -5.358436107635498

Token 112: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02632596157491207
    2. ' y' → logprob: -3.6513259410858154
    3. 'x' → logprob: -10.651326179504395
    4. ' ' → logprob: -14.151326179504395
    5. '	y' → logprob: -14.401326179504395
    6. ' x' → logprob: -14.651326179504395
    7. ')y' → logprob: -16.151325225830078
    8. ')' → logprob: -16.776325225830078
    9. '```' → logprob: -17.526325225830078
    10. '(y' → logprob: -17.526325225830078

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032791912090033293
    2. ')*' → logprob: -5.878279209136963
    3. ' )' → logprob: -7.753279209136963
    4. '))' → logprob: -10.753278732299805
    5. '*' → logprob: -11.503278732299805
    6. ')*(' → logprob: -12.378278732299805
    7. '*)' → logprob: -13.003278732299805
    8. '   ' → logprob: -13.878278732299805
    9. ')**' → logprob: -13.878278732299805
    10. ' ' → logprob: -14.003278732299805

Token 114: ' and' (ID: 326)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2821427285671234
    2. ' *' → logprob: -1.4071427583694458
    3. '*x' → logprob: -7.407142639160156
    4. '*y' → logprob: -9.157142639160156
    5. ' ' → logprob: -9.407142639160156
    6. '*(' → logprob: -9.657142639160156
    7. '**' → logprob: -11.032142639160156
    8. '*l' → logprob: -11.157142639160156
    9. '(x' → logprob: -11.532142639160156
    10. '(' → logprob: -11.532142639160156

Token 115: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5119344592094421
    2. '(x' → logprob: -1.136934518814087
    3. ' x' → logprob: -3.011934518814087
    4. ' (' → logprob: -3.511934518814087
    5. 'abs' → logprob: -7.886934280395508
    6. '(abs' → logprob: -8.261934280395508
    7. '   ' → logprob: -9.886934280395508
    8. ' ' → logprob: -10.011934280395508
    9. '(' → logprob: -10.136934280395508
    10. ' abs' → logprob: -10.636934280395508

Token 116: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4896896481513977
    2. '*y' → logprob: -1.114689588546753
    3. '*' → logprob: -2.864689588546753
    4. ' //' → logprob: -6.864689826965332
    5. '//' → logprob: -6.989689826965332
    6. 'y' → logprob: -9.364689826965332
    7. '*x' → logprob: -9.739689826965332
    8. ' ' → logprob: -10.864689826965332
    9. ' y' → logprob: -11.739689826965332
    10. '*(' → logprob: -12.114689826965332

Token 117: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.007136124651879072
    2. ' y' → logprob: -5.007136344909668
    3. '(y' → logprob: -8.007136344909668
    4. '//' → logprob: -10.007136344909668
    5. ' (' → logprob: -11.257136344909668
    6. '(' → logprob: -12.382136344909668
    7. ' ' → logprob: -12.382136344909668
    8. '   ' → logprob: -12.507136344909668
    9. '*y' → logprob: -12.757136344909668
    10. '	y' → logprob: -12.882136344909668

Token 118: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1602822095155716
    2. '//' → logprob: -1.9102822542190552
    3. ' ' → logprob: -10.410282135009766
    4. ' //
' → logprob: -12.035282135009766
    5. '<|end|>' → logprob: -12.160282135009766
    6. ')//' → logprob: -12.410282135009766
    7. '://' → logprob: -12.910282135009766
    8. ' ' → logprob: -13.410282135009766
    9. ' /' → logprob: -13.535282135009766
    10. '/' → logprob: -13.535282135009766

Token 119: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00033939589047804475
    2. ' math' → logprob: -8.00033950805664
    3. '(math' → logprob: -12.62533950805664
    4. '<|end|>' → logprob: -14.87533950805664
    5. '.math' → logprob: -15.87533950805664
    6. 'Math' → logprob: -17.00033950805664
    7. 'python' → logprob: -17.50033950805664
    8. 'g' → logprob: -17.75033950805664
    9. '/math' → logprob: -18.37533950805664
    10. ' ' → logprob: -18.62533950805664

Token 120: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -2.236549335066229e-05
    2. '.' → logprob: -11.500021934509277
    3. 'g' → logprob: -12.375021934509277
    4. '.sqrt' → logprob: -13.000021934509277
    5. '#g' → logprob: -13.750021934509277
    6. '.c' → logprob: -14.375021934509277
    7. '<|end|>' → logprob: -14.500021934509277
    8. '.gdx' → logprob: -15.125021934509277
    9. '.gz' → logprob: -15.250021934509277
    10. '.gsub' → logprob: -15.250021934509277

Token 121: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00026968008023686707
    2. 'c' → logprob: -8.375269889831543
    3. 'cf' → logprob: -11.375269889831543
    4. 'cdf' → logprob: -11.750269889831543
    5. 'cdn' → logprob: -12.625269889831543
    6. 'dc' → logprob: -12.875269889831543
    7. '.c' → logprob: -13.125269889831543
    8. 'cm' → logprob: -13.375269889831543
    9. '.cd' → logprob: -13.750269889831543
    10. 'cmath' → logprob: -14.000269889831543

Token 122: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05489356443285942
    2. '(' → logprob: -2.9298934936523438
    3. '(y' → logprob: -12.304893493652344
    4. ' (' → logprob: -12.304893493652344
    5. '<|end|>' → logprob: -14.179893493652344
    6. '```' → logprob: -14.804893493652344
    7. ')' → logprob: -15.179893493652344
    8. '(
' → logprob: -15.804893493652344
    9. ' ' → logprob: -15.804893493652344
    10. ',' → logprob: -16.054893493652344

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10132241249084473
    2. '(x' → logprob: -3.3513224124908447
    3. 'y' → logprob: -3.6013224124908447
    4. ',y' → logprob: -3.9763224124908447
    5. ')' → logprob: -4.476322174072266
    6. '(y' → logprob: -6.101322174072266
    7. '(' → logprob: -7.226322174072266
    8. 'x' → logprob: -8.226322174072266
    9. ' ,' → logprob: -8.351322174072266
    10. ',x' → logprob: -9.101322174072266

Token 124: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002561745699495077
    2. ' y' → logprob: -6.002561569213867
    3. 'x' → logprob: -9.377561569213867
    4. ')' → logprob: -14.752561569213867
    5. ' ' → logprob: -15.252561569213867
    6. ' x' → logprob: -15.627561569213867
    7. '(y' → logprob: -15.752561569213867
    8. '	y' → logprob: -16.377561569213867
    9. '<|end|>' → logprob: -16.377561569213867
    10. ')y' → logprob: -16.502561569213867

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ' )' → logprob: -13.125005722045898
    3. ')
' → logprob: -13.500005722045898
    4. '<|end|>' → logprob: -13.750005722045898
    5. ')return' → logprob: -13.875005722045898
    6. '))' → logprob: -15.750005722045898
    7. ')`' → logprob: -17.1250057220459
    8. '),' → logprob: -17.5000057220459
    9. ')}' → logprob: -17.7500057220459
    10. ')#' → logprob: -17.8750057220459

Token 126: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.471932053565979
    2. '\n' → logprob: -1.471932053565979
    3. '<|end|>' → logprob: -2.4719319343566895
    4. ')' → logprob: -3.7219319343566895
    5. ':' → logprob: -3.9719319343566895
    6. '#' → logprob: -4.9719319343566895
    7. 'def' → logprob: -6.3469319343566895
    8. 'n' → logprob: -6.4719319343566895
    9. ' ' → logprob: -6.4719319343566895
    10. ',' → logprob: -6.9719319343566895

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03187321871519089
    2. 'x' → logprob: -3.6568732261657715
    3. 'y' → logprob: -5.4068732261657715
    4. '1' → logprob: -7.1568732261657715
    5. ' ' → logprob: -9.281872749328613
    6. 'max' → logprob: -9.406872749328613
    7. '(x' → logprob: -10.531872749328613
    8. ' x' → logprob: -10.531872749328613
    9. ' y' → logprob: -11.156872749328613
    10. 'False' → logprob: -11.156872749328613

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.24048377573490143
    2. 'x' → logprob: -1.6154837608337402
    3. 'y' → logprob: -4.24048376083374
    4. '1' → logprob: -8.115484237670898
    5. 'max' → logprob: -9.115484237670898
    6. '(x' → logprob: -10.240484237670898
    7. 'False' → logprob: -10.490484237670898
    8. ' ' → logprob: -10.990484237670898
    9. 'abs' → logprob: -10.990484237670898
    10. ' x' → logprob: -11.865484237670898

Token 129: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06276053190231323
    2. '#' → logprob: -3.937760591506958
    3. '<|end|>' → logprob: -4.437760353088379
    4. 'def' → logprob: -4.562760353088379
    5. '\n' → logprob: -5.062760353088379
    6. ')' → logprob: -5.812760353088379
    7. 'n' → logprob: -6.062760353088379
    8. ':' → logprob: -6.187760353088379
    9. ',' → logprob: -7.312760353088379
    10. ' 
' → logprob: -7.437760353088379

Token 130: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024197768419981003
    2. '
' → logprob: -4.274197578430176
    3. '#' → logprob: -5.524197578430176
    4. 'd' → logprob: -5.899197578430176
    5. '\' → logprob: -7.024197578430176
    6. 'n' → logprob: -7.024197578430176
    7. '\n' → logprob: -7.649197578430176
    8. ' 
' → logprob: -8.399197578430176
    9. 'a' → logprob: -9.149197578430176
    10. 'x' → logprob: -9.274197578430176

Token 131: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.011023539118468761
    2. '_' → logprob: -4.88602352142334
    3. ' i' → logprob: -5.88602352142334
    4. ' ' → logprob: -7.38602352142334
    5. '  ' → logprob: -12.13602352142334
    6. ' __' → logprob: -12.63602352142334
    7. ' ' → logprob: -13.13602352142334
    8. 'i' → logprob: -14.38602352142334
    9. ' ‌' → logprob: -14.88602352142334
    10. ' n' → logprob: -15.26102352142334

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04038558900356293
    2. 'in' → logprob: -3.2903854846954346
    3. ' ' → logprob: -6.415385723114014
    4. 'n' → logprob: -7.665385723114014
    5. ' n' → logprob: -9.165385246276855
    6. '_' → logprob: -10.165385246276855
    7. ' i' → logprob: -10.540385246276855
    8. 'range' → logprob: -10.665385246276855
    9. ' _' → logprob: -11.290385246276855
    10. '  ' → logprob: -12.040385246276855

Token 133: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011063262820243835
    2. ' range' → logprob: -4.511063098907471
    3. 'parse' → logprob: -12.136063575744629
    4. 'rang' → logprob: -12.511063575744629
    5. 'split' → logprob: -13.136063575744629
    6. 'lst' → logprob: -13.886063575744629
    7. '(range' → logprob: -14.261063575744629
    8. 'r' → logprob: -14.261063575744629
    9. '```' → logprob: -14.636063575744629
    10. 'ran' → logprob: -14.636063575744629

Token 134: '(' (ID: 7)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5376394391059875
    2. '(' → logprob: -1.7876393795013428
    3. ' (' → logprob: -1.9126393795013428
    4. '(split' → logprob: -3.6626393795013428
    5. '(to' → logprob: -3.9126393795013428
    6. ' to' → logprob: -4.162639617919922
    7. 'split' → logprob: -4.787639617919922
    8. '(parse' → logprob: -5.037639617919922
    9. '(int' → logprob: -5.162639617919922
    10. ' split' → logprob: -5.412639617919922

Token 135: '1' (ID: 16)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.09585533291101456
    2. 'int' → logprob: -2.470855236053467
    3. ' to' → logprob: -5.345855236053467
    4. ' int' → logprob: -6.345855236053467
    5. 't' → logprob: -8.595855712890625
    6. '1' → logprob: -9.220855712890625
    7. ' ' → logprob: -10.220855712890625
    8. ')' → logprob: -11.345855712890625
    9. '   ' → logprob: -11.595855712890625
    10. 'parse' → logprob: -11.970855712890625

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5305577516555786
    2. ' ):' → logprob: -0.9055577516555786
    3. ',' → logprob: -5.405557632446289
    4. ')' → logprob: -6.530557632446289
    5. ' )' → logprob: -7.405557632446289
    6. '_' → logprob: -8.530557632446289
    7. '():' → logprob: -8.780557632446289
    8. '(' → logprob: -8.905557632446289
    9. ' ,' → logprob: -9.155557632446289
    10. '):
' → logprob: -9.530557632446289

Token 137: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012106612848583609
    2. ':
' → logprob: -9.125121116638184
    3. ' :' → logprob: -12.125121116638184
    4. ':**' → logprob: -13.250121116638184
    5. '():' → logprob: -13.625121116638184
    6. ',' → logprob: -13.625121116638184
    7. '):' → logprob: -14.875121116638184
    8. ':def' → logprob: -14.875121116638184
    9. '   ' → logprob: -15.125121116638184
    10. '[:]' → logprob: -15.625121116638184

Token 138: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.11717433482408524
    2. ' n' → logprob: -2.2421743869781494
    3. 'N' → logprob: -5.86717414855957
    4. 'a' → logprob: -7.61717414855957
    5. '   ' → logprob: -7.74217414855957
    6. ' N' → logprob: -8.36717414855957
    7. ' a' → logprob: -9.74217414855957
    8. 'x' → logprob: -9.74217414855957
    9. 's' → logprob: -9.86717414855957
    10. ' ' → logprob: -10.11717414855957

Token 139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22591012716293335
    2. ' =' → logprob: -1.7259101867675781
    3. ',' → logprob: -3.725910186767578
    4. '=int' → logprob: -9.350910186767578
    5. '=input' → logprob: -12.100910186767578
    6. ' ,' → logprob: -12.100910186767578
    7. ',n' → logprob: -12.850910186767578
    8. ')' → logprob: -13.600910186767578
    9. ' ' → logprob: -13.725910186767578
    10. '=n' → logprob: -14.350910186767578

Token 140: ' to' (ID: 316)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8404303789138794
    2. 'to' → logprob: -1.4654303789138794
    3. 'lst' → logprob: -1.4654303789138794
    4. ' lst' → logprob: -3.09043025970459
    5. ' int' → logprob: -3.34043025970459
    6. ' to' → logprob: -3.96543025970459
    7. '10' → logprob: -5.46543025970459
    8. ' ' → logprob: -7.21543025970459
    9. 'split' → logprob: -7.84043025970459
    10. 'parse' → logprob: -8.34043025970459

Token 141: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.014217688702046871
    2. 'int' → logprob: -4.264217853546143
    3. 'nt' → logprob: -9.889217376708984
    4. 't' → logprob: -13.639217376708984
    5. '_' → logprob: -14.514217376708984
    6. 'n' → logprob: -14.889217376708984
    7. '(int' → logprob: -15.139217376708984
    8. '_in' → logprob: -15.264217376708984
    9. '_nt' → logprob: -15.514217376708984
    10. ' int' → logprob: -16.014217376708984

Token 142: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021045419271104038
    2. '()
' → logprob: -8.875210762023926
    3. '(' → logprob: -9.625210762023926
    4. ' ()' → logprob: -13.000210762023926
    5. '()

' → logprob: -14.375210762023926
    6. '()\' → logprob: -14.750210762023926
    7. '(
' → logprob: -15.250210762023926
    8. '();' → logprob: -15.250210762023926
    9. '():' → logprob: -15.375210762023926
    10. '()]' → logprob: -16.37520980834961

Token 143: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8912033438682556
    2. '   ' → logprob: -1.3912034034729004
    3. '<|end|>' → logprob: -2.5162034034729004
    4. '
' → logprob: -2.6412034034729004
    5. ' 
' → logprob: -2.6412034034729004
    6. '    
' → logprob: -3.2662034034729004
    7. 'n' → logprob: -3.8912034034729004
    8. '  
' → logprob: -4.1412034034729
    9. 'a' → logprob: -4.8912034034729
    10. '    ' → logprob: -5.0162034034729

Token 144: ' print' (ID: 2123)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5579992532730103
    2. 'a' → logprob: -0.9329992532730103
    3. 'lst' → logprob: -4.057999134063721
    4. 's' → logprob: -4.557999134063721
    5. 'data' → logprob: -6.557999134063721
    6. 'nums' → logprob: -7.307999134063721
    7. 'l' → logprob: -7.432999134063721
    8. 'd' → logprob: -7.432999134063721
    9. 'dp' → logprob: -7.682999134063721
    10. 'A' → logprob: -7.807999134063721

Token 145: '(['' (ID: 14113)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.47772395610809326
    2. '(' → logprob: -0.9777239561080933
    3. '('' → logprob: -6.102724075317383
    4. '()' → logprob: -7.352724075317383
    5. '(lst' → logprob: -8.102724075317383
    6. '((' → logprob: -9.227724075317383
    7. '("' → logprob: -9.352724075317383
    8. '(*' → logprob: -9.852724075317383
    9. '(sum' → logprob: -10.102724075317383
    10. '(ls' → logprob: -10.602724075317383

Token 146: 'ABC' (ID: 44197)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.239884376525879
    2. '"' → logprob: -1.489884376525879
    3. '0' → logprob: -2.239884376525879
    4. 'NO' → logprob: -3.114884376525879
    5. ''A' → logprob: -3.614884376525879
    6. '('' → logprob: -3.739884376525879
    7. '-' → logprob: -3.739884376525879
    8. 'YES' → logprob: -3.864884376525879
    9. 'No' → logprob: -3.864884376525879
    10. 'n' → logprob: -3.989884376525879

Token 147: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -1.0983269214630127
    2. 'D' → logprob: -1.2233269214630127
    3. '','' → logprob: -1.7233269214630127
    4. 'DE' → logprob: -2.9733269214630127
    5. ''[' → logprob: -3.3483269214630127
    6. ''' → logprob: -3.5983269214630127
    7. '(',' → logprob: -3.9733269214630127
    8. 'DEF' → logprob: -4.348326683044434
    9. ''][' → logprob: -5.223326683044434
    10. '',"' → logprob: -5.348326683044434

Token 148: 'ABD' (ID: 193992)
  Prédit: 'DEF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -1.498997449874878
    2. 'XYZ' → logprob: -1.748997449874878
    3. 'AC' → logprob: -1.998997449874878
    4. 'ABD' → logprob: -1.998997449874878
    5. 'ARC' → logprob: -2.623997449874878
    6. 'B' → logprob: -2.748997449874878
    7. ''' → logprob: -3.248997449874878
    8. 'BCD' → logprob: -3.498997449874878
    9. 'D' → logprob: -4.248997688293457
    10. 'AB' → logprob: -4.248997688293457

Token 149: ''][' (ID: 22110)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.13796097040176392
    2. ''])' → logprob: -2.887960910797119
    3. '',' → logprob: -3.012960910797119
    4. 'C' → logprob: -4.512960910797119
    5. ','' → logprob: -4.887960910797119
    6. ''][' → logprob: -6.012960910797119
    7. ''' → logprob: -7.387960910797119
    8. '']['' → logprob: -7.887960910797119
    9. ',' → logprob: -8.012961387634277
    10. ''])[' → logprob: -8.012961387634277

Token 150: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.271243155002594
    2. ' n' → logprob: -2.021243095397949
    3. '(n' → logprob: -2.396243095397949
    4. ' (' → logprob: -5.021243095397949
    5. '(' → logprob: -5.396243095397949
    6. '0' → logprob: -6.646243095397949
    7. ' ' → logprob: -7.146243095397949
    8. '(int' → logprob: -9.02124309539795
    9. 'int' → logprob: -9.52124309539795
    10. ']' → logprob: -10.02124309539795

Token 151: '>=' (ID: 20974)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3857831060886383
    2. '-' → logprob: -2.2607831954956055
    3. '==' → logprob: -2.2607831954956055
    4. '>' → logprob: -2.8857831954956055
    5. ' %' → logprob: -3.6357831954956055
    6. ' ==' → logprob: -4.6357831954956055
    7. ' >' → logprob: -4.8857831954956055
    8. '&' → logprob: -5.2607831954956055
    9. ' ' → logprob: -6.3857831954956055
    10. ')' → logprob: -6.8857831954956055

Token 152: '100' (ID: 1353)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7841236591339111
    2. '2' → logprob: -1.1591236591339111
    3. '4' → logprob: -2.284123659133911
    4. '5' → logprob: -4.034123420715332
    5. '10' → logprob: -4.034123420715332
    6. '1' → logprob: -4.284123420715332
    7. ' ' → logprob: -4.659123420715332
    8. '100' → logprob: -4.784123420715332
    9. '7' → logprob: -5.159123420715332
    10. '0' → logprob: -5.409123420715332

Token 153: '0' (ID: 15)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005073891021311283
    2. ')])' → logprob: -6.5050740242004395
    3. ')' → logprob: -6.6300740242004395
    4. '0' → logprob: -6.7550740242004395
    5. ' ])' → logprob: -8.255073547363281
    6. ')]' → logprob: -8.380073547363281
    7. ':' → logprob: -8.505073547363281
    8. '100' → logprob: -9.005073547363281
    9. ']' → logprob: -9.255073547363281
    10. '])
' → logprob: -10.630073547363281

Token 154: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0010688931215554476
    2. ']' → logprob: -7.751069068908691
    3. ' ])' → logprob: -8.251069068908691
    4. ')' → logprob: -8.626069068908691
    5. ')])' → logprob: -9.001069068908691
    6. '])
' → logprob: -10.751069068908691
    7. ')]' → logprob: -10.876069068908691
    8. ']])' → logprob: -11.376069068908691
    9. ']))' → logprob: -12.001069068908691
    10. '])]' → logprob: -12.501069068908691


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 152
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 32.24%
Précision adaptée (1ère position): 32.89%
Précision (top 10): 75.00%
================================================================================
