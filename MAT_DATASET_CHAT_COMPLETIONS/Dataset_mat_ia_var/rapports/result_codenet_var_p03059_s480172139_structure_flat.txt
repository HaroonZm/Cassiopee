================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, t = map(int, input().split())
c = t // a
d = c * b
print(d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0193496011197567
    2. '+' → logprob: -4.269349575042725
    3. ' =' → logprob: -5.394349575042725
    4. ',' → logprob: -8.269350051879883
    5. ' ' → logprob: -9.519350051879883
    6. '+=' → logprob: -9.644350051879883
    7. '_' → logprob: -10.394350051879883
    8. ' +' → logprob: -10.394350051879883
    9. '[' → logprob: -10.519350051879883
    10. '```' → logprob: -10.644350051879883

Token 4: ' t' (ID: 260)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06308940798044205
    2. ',' → logprob: -3.438089370727539
    3. ' =' → logprob: -3.813089370727539
    4. 'c' → logprob: -5.813089370727539
    5. ' ' → logprob: -6.313089370727539
    6. ',c' → logprob: -7.438089370727539
    7. ')' → logprob: -7.813089370727539
    8. '<|end|>' → logprob: -8.063089370727539
    9. '.' → logprob: -8.438089370727539
    10. '+' → logprob: -8.813089370727539

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009365138597786427
    2. '+' → logprob: -4.759365081787109
    3. ' =' → logprob: -7.634365081787109
    4. ',' → logprob: -9.25936508178711
    5. '*' → logprob: -9.63436508178711
    6. '+=' → logprob: -10.25936508178711
    7. ')' → logprob: -11.25936508178711
    8. '[' → logprob: -11.63436508178711
    9. '.' → logprob: -11.75936508178711
    10. '(' → logprob: -12.13436508178711

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.708594024181366
    2. ' ' → logprob: -0.708594024181366
    3. '1' → logprob: -4.583593845367432
    4. '10' → logprob: -6.833593845367432
    5. 'a' → logprob: -6.958593845367432
    6. ' a' → logprob: -7.208593845367432
    7. ' [' → logprob: -7.833593845367432
    8. 'input' → logprob: -8.20859432220459
    9. 'map' → logprob: -8.33359432220459
    10. '[' → logprob: -8.45859432220459

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3048185706138611
    2. '<|end|>' → logprob: -1.4298186302185059
    3. '```' → logprob: -4.429818630218506
    4. '(lambda' → logprob: -5.054818630218506
    5. '<|end|>' → logprob: -6.179818630218506
    6. ')' → logprob: -6.679818630218506
    7. '[' → logprob: -8.554818153381348
    8. 'user' → logprob: -8.554818153381348
    9. '(user' → logprob: -8.929818153381348
    10. '`' → logprob: -9.179818153381348

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06824596971273422
    2. '(' → logprob: -3.4432458877563477
    3. ')' → logprob: -3.4432458877563477
    4. 'input' → logprob: -7.068245887756348
    5. '(user' → logprob: -8.193245887756348
    6. ' input' → logprob: -8.943245887756348
    7. '(str' → logprob: -9.193245887756348
    8. '(range' → logprob: -9.443245887756348
    9. '<|end|>' → logprob: -9.568245887756348
    10. '(raw' → logprob: -9.693245887756348

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10026253759860992
    2. ' input' → logprob: -2.3502626419067383
    3. '(input' → logprob: -9.975262641906738
    4. ')' → logprob: -11.850262641906738
    5. ',input' → logprob: -13.600262641906738
    6. '=input' → logprob: -15.225262641906738
    7. ' ' → logprob: -15.600262641906738
    8. '	input' → logprob: -16.100261688232422
    9. '[input' → logprob: -16.475261688232422
    10. '<input' → logprob: -16.600261688232422

Token 10: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6027107834815979
    2. '(' → logprob: -1.4777107238769531
    3. '())' → logprob: -1.8527107238769531
    4. '()' → logprob: -2.977710723876953
    5. '(input' → logprob: -5.602710723876953
    6. '<|end|>' → logprob: -6.477710723876953
    7. '(()' → logprob: -6.602710723876953
    8. '(token' → logprob: -7.102710723876953
    9. '```' → logprob: -7.102710723876953
    10. '<|end|>' → logprob: -7.227710723876953

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00029399030609056354
    2. 'strip' → logprob: -8.375293731689453
    3. ')' → logprob: -10.750293731689453
    4. ' split' → logprob: -11.000293731689453
    5. '(split' → logprob: -11.250293731689453
    6. 'rstrip' → logprob: -11.625293731689453
    7. 'read' → logprob: -13.250293731689453
    8. '```' → logprob: -14.750293731689453
    9. 'startswith' → logprob: -15.375293731689453
    10. '_split' → logprob: -15.500293731689453

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023862337693572044
    2. '))' → logprob: -6.502386093139648
    3. '())' → logprob: -7.377386093139648
    4. '`)' → logprob: -8.627386093139648
    5. '()' → logprob: -10.627386093139648
    6. '(' → logprob: -10.877386093139648
    7. ')`' → logprob: -11.377386093139648
    8. '')' → logprob: -12.252386093139648
    9. '```' → logprob: -12.627386093139648
    10. ' )' → logprob: -12.752386093139648

Token 13: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5770654678344727
    2. 'c' → logprob: -1.4520654678344727
    3. 'if' → logprob: -2.4520654678344727
    4. 'i' → logprob: -3.4520654678344727
    5. '*' → logprob: -3.7020654678344727
    6. '#' → logprob: -4.202065467834473
    7. '+
' → logprob: -4.452065467834473
    8. 'x' → logprob: -4.702065467834473
    9. ',' → logprob: -5.577065467834473
    10. '\n' → logprob: -6.077065467834473

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5099160671234131
    2. '=' → logprob: -1.509916067123413
    3. ',' → logprob: -1.759916067123413
    4. '[' → logprob: -5.884916305541992
    5. '+' → logprob: -7.884916305541992
    6. '_' → logprob: -8.134916305541992
    7. '.' → logprob: -8.384916305541992
    8. '1' → logprob: -8.384916305541992
    9. 'h' → logprob: -8.384916305541992
    10. ' ,' → logprob: -8.384916305541992

Token 15: ' t' (ID: 260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14607056975364685
    2. ' a' → logprob: -2.1460704803466797
    3. '0' → logprob: -4.27107048034668
    4. '(a' → logprob: -6.77107048034668
    5. ' ' → logprob: -6.89607048034668
    6. ' (' → logprob: -7.52107048034668
    7. ' t' → logprob: -7.77107048034668
    8. 't' → logprob: -7.89607048034668
    9. ' max' → logprob: -8.52107048034668
    10. 'b' → logprob: -8.77107048034668

Token 16: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5083715319633484
    2. '%' → logprob: -1.3833715915679932
    3. '-' → logprob: -3.008371591567993
    4. ' %' → logprob: -3.258371591567993
    5. ' +' → logprob: -4.258371353149414
    6. '>' → logprob: -4.383371353149414
    7. '*' → logprob: -4.883371353149414
    8. ')' → logprob: -5.258371353149414
    9. ',' → logprob: -5.383371353149414
    10. ' ' → logprob: -5.758371353149414

Token 17: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9618130326271057
    2. 'b' → logprob: -0.9618130326271057
    3. '60' → logprob: -1.461812973022461
    4. '360' → logprob: -6.586812973022461
    5. '2' → logprob: -7.086812973022461
    6. '864' → logprob: -8.336812973022461
    7. '100' → logprob: -8.586812973022461
    8. '30' → logprob: -8.586812973022461
    9. '(' → logprob: -8.961812973022461
    10. '6' → logprob: -9.086812973022461

Token 18: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.39413774013519287
    2. ' %' → logprob: -1.7691377401351929
    3. '*' → logprob: -2.7691378593444824
    4. '+' → logprob: -3.1441378593444824
    5. ' *' → logprob: -4.394137859344482
    6. ',' → logprob: -4.519137859344482
    7. ' +' → logprob: -4.769137859344482
    8. ')' → logprob: -5.769137859344482
    9. ' ' → logprob: -6.144137859344482
    10. '```' → logprob: -6.269137859344482

Token 19: 'd' (ID: 67)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6217884421348572
    2. '+' → logprob: -1.746788501739502
    3. '*' → logprob: -2.496788501739502
    4. ' %' → logprob: -2.496788501739502
    5. ' ' → logprob: -3.121788501739502
    6. ' +' → logprob: -3.746788501739502
    7. '<|end|>' → logprob: -3.871788501739502
    8. '\n' → logprob: -5.121788501739502
    9. ' *' → logprob: -5.246788501739502
    10. ',' → logprob: -5.496788501739502

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049301162362098694
    2. '=' → logprob: -3.0493011474609375
    3. ',' → logprob: -8.299301147460938
    4. ' ' → logprob: -8.424301147460938
    5. ' //' → logprob: -9.049301147460938
    6. '//' → logprob: -10.549301147460938
    7. '%' → logprob: -10.924301147460938
    8. '_' → logprob: -11.049301147460938
    9. ' %=' → logprob: -11.299301147460938
    10. ' /=' → logprob: -11.549301147460938

Token 21: ' c' (ID: 274)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5164127945899963
    2. 't' → logprob: -1.1414127349853516
    3. 'b' → logprob: -3.0164127349853516
    4. ' b' → logprob: -3.3914127349853516
    5. '(t' → logprob: -7.141412734985352
    6. ' (' → logprob: -7.641412734985352
    7. ' ' → logprob: -10.391412734985352
    8. '(b' → logprob: -11.266412734985352
    9. '(' → logprob: -12.016412734985352
    10. 'c' → logprob: -13.016412734985352

Token 22: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.518058180809021
    2. '*' → logprob: -1.643058180809021
    3. ' *' → logprob: -1.643058180809021
    4. '+' → logprob: -2.0180583000183105
    5. '%' → logprob: -2.8930583000183105
    6. ' +' → logprob: -3.2680583000183105
    7. ' ' → logprob: -3.2680583000183105
    8. ' %' → logprob: -3.3930583000183105
    9. ' /' → logprob: -3.5180583000183105
    10. '//' → logprob: -3.8930583000183105

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07051505893468857
    2. ' b' → logprob: -2.6955151557922363
    3. 'a' → logprob: -7.570515155792236
    4. ' a' → logprob: -9.820514678955078
    5. ' ' → logprob: -11.820514678955078
    6. '*b' → logprob: -15.320514678955078
    7. '```' → logprob: -15.570514678955078
    8. '`' → logprob: -15.945514678955078
    9. '  ' → logprob: -15.945514678955078
    10. '6' → logprob: -16.070514678955078

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8075939416885376
    2. '<|end|>' → logprob: -0.9325939416885376
    3. 'print' → logprob: -2.057593822479248
    4. '\' → logprob: -3.932593822479248
    5. '```' → logprob: -6.307593822479248
    6. '+' → logprob: -6.432593822479248
    7. ' ' → logprob: -6.432593822479248
    8. '#' → logprob: -6.557593822479248
    9. '%' → logprob: -6.557593822479248
    10. 'd' → logprob: -6.932593822479248

Token 26: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02326807752251625
    2. '(d' → logprob: -3.773267984390259
    3. '()' → logprob: -11.39826774597168
    4. '((' → logprob: -12.64826774597168
    5. '("("' → logprob: -13.02326774597168
    6. '('' → logprob: -13.64826774597168
    7. '(D' → logprob: -14.14826774597168
    8. '(`' → logprob: -14.39826774597168
    9. '(a' → logprob: -14.52326774597168
    10. ' (' → logprob: -14.77326774597168

Token 27: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -13.875000953674316
    3. ' )' → logprob: -16.000001907348633
    4. '`)' → logprob: -16.250001907348633
    5. '')' → logprob: -16.375001907348633
    6. ')
' → logprob: -17.375001907348633
    7. ')`' → logprob: -17.375001907348633
    8. '#' → logprob: -18.125001907348633
    9. '）' → logprob: -18.250001907348633
    10. '```' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 25
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 16.00%
Précision adaptée (1ère position): 16.00%
Précision (top 10): 52.00%
================================================================================
