================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_and_d = input().split()
N = int(n_and_d[0])
D = int(n_and_d[1])

result = (N - 1) // (2 * D + 1) + 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_and' (ID: 18645)
  → Token d'amorce (pas de prédiction)

Token 2: '_d' (ID: 1565)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5178624987602234
    2. '=' → logprob: -1.6428625583648682
    3. ' =' → logprob: -2.267862558364868
    4. '[' → logprob: -2.892862558364868
    5. '.' → logprob: -4.142862319946289
    6. ',' → logprob: -5.392862319946289
    7. 'e' → logprob: -5.517862319946289
    8. '```' → logprob: -5.642862319946289
    9. '._' → logprob: -5.767862319946289
    10. '(' → logprob: -5.892862319946289

Token 4: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.6509757041931152
    2. ' {}' → logprob: -1.7759757041931152
    3. ' ' → logprob: -1.9009757041931152
    4. '{}' → logprob: -2.4009757041931152
    5. '10' → logprob: -2.6509757041931152
    6. '[' → logprob: -2.6509757041931152
    7. ' [' → logprob: -2.9009757041931152
    8. '[]' → logprob: -3.5259757041931152
    9. '32' → logprob: -3.5259757041931152
    10. '"' → logprob: -3.6509757041931152

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016426581889390945
    2. '('' → logprob: -4.2664265632629395
    3. '("("' → logprob: -6.8914265632629395
    4. ''' → logprob: -7.0164265632629395
    5. '"' → logprob: -9.016427040100098
    6. '(
' → logprob: -9.766427040100098
    7. '[' → logprob: -10.391427040100098
    8. '()' → logprob: -10.641427040100098
    9. '```' → logprob: -11.266427040100098
    10. '_' → logprob: -11.391427040100098

Token 6: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0789974108338356
    2. 'strip' → logprob: -2.5789973735809326
    3. 'replace' → logprob: -9.828997611999512
    4. 'rstrip' → logprob: -10.328997611999512
    5. 'lower' → logprob: -11.453997611999512
    6. '()' → logprob: -12.828997611999512
    7. 'spl' → logprob: -12.953997611999512
    8. '_split' → logprob: -13.578997611999512
    9. 'r' → logprob: -13.953997611999512
    10. 's' → logprob: -14.203997611999512

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009804090950638056
    2. '()' → logprob: -7.625980377197266
    3. '('' → logprob: -8.125980377197266
    4. '`' → logprob: -10.125980377197266
    5. '(
' → logprob: -10.125980377197266
    6. '("("' → logprob: -10.375980377197266
    7. ''' → logprob: -10.500980377197266
    8. '"' → logprob: -11.250980377197266
    9. '(`' → logprob: -11.250980377197266
    10. '```' → logprob: -11.500980377197266

Token 8: 'N' (ID: 45)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01250199880450964
    2. 'n' → logprob: -4.887502193450928
    3. '_' → logprob: -6.387502193450928
    4. '=' → logprob: -7.887502193450928
    5. '_n' → logprob: -7.887502193450928
    6. ' =' → logprob: -8.13750171661377
    7. '[n' → logprob: -8.26250171661377
    8. '```' → logprob: -8.38750171661377
    9. '#' → logprob: -8.63750171661377
    10. '(' → logprob: -8.63750171661377

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0131419962272048
    2. '_' → logprob: -4.388142108917236
    3. '\[' → logprob: -9.013141632080078
    4. '[n' → logprob: -9.388141632080078
    5. ')' → logprob: -9.638141632080078
    6. ',' → logprob: -9.763141632080078
    7. '#' → logprob: -9.763141632080078
    8. '[
' → logprob: -10.388141632080078
    9. '```' → logprob: -10.388141632080078
    10. '.' → logprob: -10.513141632080078

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38735687732696533
    2. ' int' → logprob: -1.1373568773269653
    3. ' n' → logprob: -7.887356758117676
    4. 'n' → logprob: -9.137356758117676
    5. ' ' → logprob: -13.137356758117676
    6. '[int' → logprob: -15.637356758117676
    7. '(int' → logprob: -15.762356758117676
    8. '=int' → logprob: -16.262357711791992
    9. '  ' → logprob: -17.012357711791992
    10. '```' → logprob: -17.012357711791992

Token 11: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759615898132324
    2. '(n' → logprob: -0.8259615898132324
    3. '('' → logprob: -11.32596206665039
    4. '("("' → logprob: -12.70096206665039
    5. '(N' → logprob: -13.20096206665039
    6. 'n' → logprob: -13.45096206665039
    7. '(
' → logprob: -13.70096206665039
    8. '(`' → logprob: -14.70096206665039
    9. '(

' → logprob: -14.70096206665039
    10. '(_' → logprob: -15.07596206665039

Token 12: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.10297711938619614
    2. '_' → logprob: -2.3529770374298096
    3. '_a' → logprob: -6.227977275848389
    4. '_n' → logprob: -8.10297679901123
    5. '_)' → logprob: -8.10297679901123
    6. '_an' → logprob: -8.85297679901123
    7. '_or' → logprob: -11.10297679901123
    8. ')_' → logprob: -11.85297679901123
    9. '_
' → logprob: -12.35297679901123
    10. '___' → logprob: -12.97797679901123

Token 13: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00984438881278038
    2. 'd' → logprob: -4.6348443031311035
    3. '_' → logprob: -9.509844779968262
    4. '_n' → logprob: -12.509844779968262
    5. 'D' → logprob: -12.759844779968262
    6. 'n' → logprob: -13.384844779968262
    7. ' _' → logprob: -14.009844779968262
    8. '_a' → logprob: -14.259844779968262
    9. '	d' → logprob: -14.259844779968262
    10. 'a' → logprob: -14.509844779968262

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ')' → logprob: -13.50000286102295
    3. ' [' → logprob: -13.62500286102295
    4. '\[' → logprob: -16.500003814697266
    5. ' )' → logprob: -17.375003814697266
    6. '```' → logprob: -17.875003814697266
    7. '[N' → logprob: -18.125003814697266
    8. ' ' → logprob: -18.250003814697266
    9. '[
' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.625003814697266

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '1' → logprob: -14.875000953674316
    4. ')' → logprob: -18.875001907348633
    5. '])' → logprob: -19.875001907348633
    6. ']' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.250001907348633
    8. '```' → logprob: -20.562501907348633
    9. '۰' → logprob: -20.562501907348633
    10. '2' → logprob: -21.250001907348633

Token 16: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.25362205505371094
    2. ')' → logprob: -1.503622055053711
    3. ']' → logprob: -6.503622055053711
    4. ')])' → logprob: -9.628622055053711
    5. ')]' → logprob: -9.753622055053711
    6. ''])' → logprob: -10.628622055053711
    7. ' ])' → logprob: -10.878622055053711
    8. ')
' → logprob: -12.003622055053711
    9. '))' → logprob: -12.128622055053711
    10. '])
' → logprob: -12.378622055053711

Token 17: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.14649662375450134
    2. 'd' → logprob: -2.021496534347534
    3. ' D' → logprob: -5.771496772766113
    4. ' ' → logprob: -8.021496772766113
    5. ' d' → logprob: -8.271496772766113
    6. '_' → logprob: -10.021496772766113
    7. 'n' → logprob: -10.896496772766113
    8. ' ,' → logprob: -11.146496772766113
    9. ',' → logprob: -11.521496772766113
    10. '<|end|>' → logprob: -12.771496772766113

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11304569989442825
    2. '=' → logprob: -2.2380456924438477
    3. ' ' → logprob: -9.613045692443848
    4. ')' → logprob: -9.738045692443848
    5. 'space' → logprob: -10.738045692443848
    6. '_' → logprob: -10.863045692443848
    7. '  ' → logprob: -11.738045692443848
    8. '<|end|>' → logprob: -12.113045692443848
    9. '=int' → logprob: -12.113045692443848
    10. ' ' → logprob: -12.238045692443848

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16023732721805573
    2. 'int' → logprob: -1.9102373123168945
    3. ' n' → logprob: -11.785237312316895
    4. ' ' → logprob: -13.285237312316895
    5. '=int' → logprob: -14.035237312316895
    6. '[int' → logprob: -14.160237312316895
    7. ' ' → logprob: -14.285237312316895
    8. '(int' → logprob: -14.410237312316895
    9. 'n' → logprob: -14.410237312316895
    10. '<int' → logprob: -15.535237312316895

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4287492632865906
    2. '(n' → logprob: -1.0537493228912354
    3. ' (' → logprob: -10.803749084472656
    4. '('' → logprob: -11.803749084472656
    5. '()' → logprob: -12.678749084472656
    6. '(D' → logprob: -13.178749084472656
    7. '(
' → logprob: -13.553749084472656
    8. ''' → logprob: -13.678749084472656
    9. '\(' → logprob: -13.928749084472656
    10. '```' → logprob: -13.928749084472656

Token 21: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.3856492842023727e-06
    2. '_or' → logprob: -14.500000953674316
    3. '[' → logprob: -14.750000953674316
    4. 'and' → logprob: -15.375000953674316
    5. '_AND' → logprob: -17.000001907348633
    6. '_' → logprob: -17.125001907348633
    7. ')_' → logprob: -17.375001907348633
    8. ' _' → logprob: -17.375001907348633
    9. ')' → logprob: -17.625001907348633
    10. '[_' → logprob: -18.000001907348633

Token 22: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0053331321105360985
    2. '_and' → logprob: -5.255332946777344
    3. 'and' → logprob: -9.755332946777344
    4. 'd' → logprob: -10.505332946777344
    5. '_' → logprob: -11.505332946777344
    6. '[' → logprob: -13.880332946777344
    7. 'n' → logprob: -14.130332946777344
    8. '_a' → logprob: -14.255332946777344
    9. 'nd' → logprob: -15.005332946777344
    10. ' _' → logprob: -15.380332946777344

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.583550642360933e-05
    2. ')' → logprob: -10.875036239624023
    3. '])' → logprob: -11.250036239624023
    4. ' [' → logprob: -13.625036239624023
    5. ']' → logprob: -13.750036239624023
    6. '][' → logprob: -14.375036239624023
    7. ')[' → logprob: -15.250036239624023
    8. '```' → logprob: -15.250036239624023
    9. '1' → logprob: -16.125036239624023
    10. '   ' → logprob: -16.375036239624023

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003380846756044775
    2. '0' → logprob: -8.125338554382324
    3. '])' → logprob: -10.125338554382324
    4. '-' → logprob: -14.375338554382324
    5. ' ' → logprob: -14.500338554382324
    6. ']' → logprob: -15.375338554382324
    7. ')' → logprob: -15.625338554382324
    8. '```' → logprob: -16.000337600708008
    9. '2' → logprob: -16.375337600708008
    10. '   ' → logprob: -16.875337600708008

Token 25: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. '])' → logprob: -12.875005722045898
    3. '）' → logprob: -13.375005722045898
    4. '))' → logprob: -14.250005722045898
    5. '`)' → logprob: -14.375005722045898
    6. ']' → logprob: -15.625005722045898
    7. '')' → logprob: -15.625005722045898
    8. ' )' → logprob: -15.875005722045898
    9. '})' → logprob: -16.6250057220459
    10. ''])' → logprob: -17.2500057220459

Token 26: 'result' (ID: 2521)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0103962421417236
    2. 's' → logprob: -1.8853962421417236
    3. 'r' → logprob: -2.3853962421417236
    4. 'n' → logprob: -2.7603962421417236
    5. 'for' → logprob: -2.8853962421417236
    6. 'x' → logprob: -3.3853962421417236
    7. 'i' → logprob: -3.6353962421417236
    8. 't' → logprob: -3.6353962421417236
    9. 'result' → logprob: -4.1353960037231445
    10. 'c' → logprob: -4.1353960037231445

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5319360494613647
    2. '=' → logprob: -0.9069360494613647
    3. '_' → logprob: -4.781936168670654
    4. 's' → logprob: -8.781935691833496
    5. '[' → logprob: -9.781935691833496
    6. '(' → logprob: -10.156935691833496
    7. '.' → logprob: -10.281935691833496
    8. ' ' → logprob: -10.906935691833496
    9. '[:]' → logprob: -11.156935691833496
    10. '_space' → logprob: -11.281935691833496

Token 28: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.384776771068573
    2. '[]' → logprob: -1.2597768306732178
    3. '"' → logprob: -4.384776592254639
    4. '[' → logprob: -4.759776592254639
    5. 'N' → logprob: -5.634776592254639
    6. ' []' → logprob: -5.759776592254639
    7. ''' → logprob: -5.884776592254639
    8. ' ' → logprob: -6.509776592254639
    9. '1' → logprob: -6.759776592254639
    10. '""' → logprob: -7.134776592254639

Token 29: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04420430213212967
    2. '2' → logprob: -4.044204235076904
    3. ''N' → logprob: -4.669204235076904
    4. 'D' → logprob: -5.044204235076904
    5. '1' → logprob: -5.669204235076904
    6. ''' → logprob: -7.044204235076904
    7. ' N' → logprob: -7.294204235076904
    8. '(' → logprob: -7.419204235076904
    9. 'pow' → logprob: -7.544204235076904
    10. '10' → logprob: -7.669204235076904

Token 30: ' -' (ID: 533)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.222122073173523
    2. '+' → logprob: -1.597122073173523
    3. ' **' → logprob: -1.722122073173523
    4. ' +' → logprob: -2.3471221923828125
    5. '*' → logprob: -2.8471221923828125
    6. '-' → logprob: -3.0971221923828125
    7. ' >>' → logprob: -3.8471221923828125
    8. ')' → logprob: -3.9721221923828125
    9. ' *' → logprob: -3.9721221923828125
    10. ' -' → logprob: -3.9721221923828125

Token 31: ' ' (ID: 220)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.817276656627655
    2. '1' → logprob: -1.1922767162322998
    3. 'D' → logprob: -1.6922767162322998
    4. ' ' → logprob: -2.6922767162323
    5. '2' → logprob: -6.442276477813721
    6. ' (' → logprob: -7.317276477813721
    7. '(D' → logprob: -8.317276954650879
    8. '(' → logprob: -8.942276954650879
    9. '3' → logprob: -9.192276954650879
    10. ')' → logprob: -10.317276954650879

Token 32: '1' (ID: 16)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.31567803025245667
    2. '1' → logprob: -1.3156780004501343
    3. ' D' → logprob: -7.065678119659424
    4. '2' → logprob: -7.190678119659424
    5. ' ' → logprob: -8.065677642822266
    6. '(D' → logprob: -8.815677642822266
    7. '(' → logprob: -9.315677642822266
    8. '10' → logprob: -9.815677642822266
    9. '3' → logprob: -10.065677642822266
    10. 'd' → logprob: -10.440677642822266

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002094230381771922
    2. ')//' → logprob: -7.002094268798828
    3. ' )' → logprob: -8.002094268798828
    4. '+' → logprob: -8.002094268798828
    5. ')*' → logprob: -8.752094268798828
    6. ' +' → logprob: -9.002094268798828
    7. '-' → logprob: -9.752094268798828
    8. ')**' → logprob: -10.002094268798828
    9. '//' → logprob: -10.627094268798828
    10. ' -' → logprob: -10.877094268798828

Token 34: ' //' (ID: 602)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6480940580368042
    2. '*' → logprob: -0.8980940580368042
    3. '**' → logprob: -3.2730941772460938
    4. ' **' → logprob: -4.148094177246094
    5. '+' → logprob: -5.398094177246094
    6. ' +' → logprob: -5.773094177246094
    7. ' ' → logprob: -6.273094177246094
    8. ' //' → logprob: -6.273094177246094
    9. ')' → logprob: -6.398094177246094
    10. ' %' → logprob: -7.773094177246094

Token 35: ' (' (ID: 350)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0018164324574172497
    2. ' D' → logprob: -6.626816272735596
    3. '2' → logprob: -7.751816272735596
    4. '10' → logprob: -10.501816749572754
    5. '3' → logprob: -11.876816749572754
    6. ' ' → logprob: -12.376816749572754
    7. '(' → logprob: -12.751816749572754
    8. '100' → logprob: -12.876816749572754
    9. '9' → logprob: -13.001816749572754
    10. '25' → logprob: -13.126816749572754

Token 36: '2' (ID: 17)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0012245126999914646
    2. ' D' → logprob: -6.751224517822266
    3. '2' → logprob: -10.126224517822266
    4. ')' → logprob: -11.751224517822266
    5. '(' → logprob: -12.626224517822266
    6. ' ' → logprob: -13.751224517822266
    7. ' (' → logprob: -14.251224517822266
    8. '(D' → logprob: -14.251224517822266
    9. '10' → logprob: -15.876224517822266
    10. ' )' → logprob: -16.001224517822266

Token 37: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25196096301078796
    2. ' *' → logprob: -1.5019609928131104
    3. ')' → logprob: -10.751960754394531
    4. ' ' → logprob: -12.251960754394531
    5. '**' → logprob: -13.376960754394531
    6. ' ' → logprob: -13.501960754394531
    7. '+' → logprob: -14.126960754394531
    8. ' )' → logprob: -14.251960754394531
    9. '*d' → logprob: -14.376960754394531
    10. 'D' → logprob: -15.126960754394531

Token 38: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006277294596657157
    2. ' D' → logprob: -7.375627517700195
    3. ' ' → logprob: -14.750627517700195
    4. ')' → logprob: -15.375627517700195
    5. '(D' → logprob: -15.625627517700195
    6. '	D' → logprob: -16.375627517700195
    7. '(' → logprob: -16.750627517700195
    8. '>D' → logprob: -17.375627517700195
    9. '
' → logprob: -17.625627517700195
    10. ' ' → logprob: -17.875627517700195

Token 39: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030810361728072166
    2. '+' → logprob: -3.5308103561401367
    3. ')+' → logprob: -7.155810356140137
    4. ' +' → logprob: -8.280810356140137
    5. ' )' → logprob: -11.155810356140137
    6. '+)' → logprob: -11.655810356140137
    7. '))' → logprob: -14.030810356140137
    8. '*' → logprob: -14.280810356140137
    9. ')*' → logprob: -16.155811309814453
    10. '**' → logprob: -16.280811309814453

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005933893844485283
    2. ' ' → logprob: -5.13093376159668
    3. ')' → logprob: -13.00593376159668
    4. '+' → logprob: -14.38093376159668
    5. '2' → logprob: -14.50593376159668
    6. '(' → logprob: -14.63093376159668
    7. ' )' → logprob: -14.75593376159668
    8. ' ' → logprob: -15.44343376159668
    9. '  ' → logprob: -15.50593376159668
    10. ' (' → logprob: -15.81843376159668

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. ')' → logprob: -13.375005722045898
    4. '2' → logprob: -16.0000057220459
    5. '+' → logprob: -16.3750057220459
    6. '...' → logprob: -17.5000057220459
    7. '(' → logprob: -18.1875057220459
    8. ' )' → logprob: -18.3750057220459
    9. '```' → logprob: -18.4375057220459
    10. '   ' → logprob: -18.6250057220459

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '))' → logprob: -13.75000286102295
    3. ')+' → logprob: -14.12500286102295
    4. ' )' → logprob: -15.00000286102295
    5. ')**' → logprob: -15.75000286102295
    6. ')*' → logprob: -15.87500286102295
    7. ')
' → logprob: -16.000003814697266
    8. ')`' → logprob: -16.125003814697266
    9. '+' → logprob: -16.625003814697266
    10. '*' → logprob: -17.250003814697266

Token 43: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004085643216967583
    2. ' +' → logprob: -5.504085540771484
    3. '+
' → logprob: -12.004085540771484
    4. ' +
' → logprob: -14.504085540771484
    5. '<|end|>' → logprob: -14.879085540771484
    6. '+

' → logprob: -15.629085540771484
    7. ' +

' → logprob: -17.504085540771484
    8. '+)' → logprob: -17.629085540771484
    9. '1' → logprob: -17.754085540771484
    10. ')+' → logprob: -17.879085540771484

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '+' → logprob: -19.25004005432129
    4. ' ' → logprob: -20.00004005432129
    5. '```' → logprob: -20.50004005432129
    6. '2' → logprob: -21.00004005432129
    7. '(' → logprob: -21.00004005432129
    8. '  ' → logprob: -21.12504005432129
    9. '   ' → logprob: -21.12504005432129
    10. '１' → logprob: -21.25004005432129

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '(' → logprob: -18.250001907348633
    4. '```' → logprob: -19.125001907348633
    5. '+' → logprob: -19.750001907348633
    6. '`' → logprob: -20.500001907348633
    7. '2' → logprob: -20.750001907348633
    8. '   ' → logprob: -20.750001907348633
    9. ' ' → logprob: -21.250001907348633
    10. '１' → logprob: -21.750001907348633

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014181245118379593
    2. '(result' → logprob: -4.264181137084961
    3. '("("' → logprob: -11.514181137084961
    4. '('' → logprob: -12.764181137084961
    5. '((' → logprob: -13.514181137084961
    6. '()' → logprob: -13.639181137084961
    7. ' (' → logprob: -14.514181137084961
    8. '(

' → logprob: -14.639181137084961
    9. '(
' → logprob: -15.264181137084961
    10. '(`' → logprob: -15.389181137084961

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. '))' → logprob: -17.125
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -19.25
    6. '`)' → logprob: -19.5
    7. '')' → logprob: -19.625
    8. '(' → logprob: -19.875
    9. '）' → logprob: -20.375
    10. '()' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 40.43%
Précision adaptée (1ère position): 40.43%
Précision (top 10): 78.72%
================================================================================
