================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
X = int(input())
now = 100
ans = 0
while now < X:
    ans += 1
    now = now * 101 // 100
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'X' (ID: 55)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017488420708104968
    2. ''' → logprob: -6.626749038696289
    3. '```' → logprob: -9.001749038696289
    4. '('' → logprob: -9.751749038696289
    5. '`' → logprob: -9.876749038696289
    6. '(X' → logprob: -10.001749038696289
    7. 'X' → logprob: -10.376749038696289
    8. '40' → logprob: -10.751749038696289
    9. '(
' → logprob: -11.001749038696289
    10. '"' → logprob: -11.126749038696289

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04529733955860138
    2. ')' → logprob: -3.170297384262085
    3. '()' → logprob: -6.545297145843506
    4. '())' → logprob: -8.420297622680664
    5. '(
' → logprob: -8.795297622680664
    6. '[' → logprob: -9.295297622680664
    7. '(X' → logprob: -9.920297622680664
    8. '```' → logprob: -10.420297622680664
    9. '))' → logprob: -10.545297622680664
    10. '('' → logprob: -10.545297622680664

Token 5: 'now' (ID: 6201)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02658323012292385
    2. '*' → logprob: -4.276583194732666
    3. '%' → logprob: -4.651583194732666
    4. '#' → logprob: -6.651583194732666
    5. '+
' → logprob: -8.026583671569824
    6. ')' → logprob: -8.276583671569824
    7. '\n' → logprob: -8.526583671569824
    8. 'if' → logprob: -8.526583671569824
    9. '**' → logprob: -8.651583671569824
    10. '>' → logprob: -9.901583671569824

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09581267088651657
    2. '*' → logprob: -2.7208125591278076
    3. '_' → logprob: -4.720812797546387
    4. '=' → logprob: -5.595812797546387
    5. ')' → logprob: -5.720812797546387
    6. '%' → logprob: -6.720812797546387
    7. '(' → logprob: -6.720812797546387
    8. '**' → logprob: -6.970812797546387
    9. ' ' → logprob: -6.970812797546387
    10. ' +' → logprob: -7.095812797546387

Token 7: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.9174977540969849
    2. ' ' → logprob: -1.2924977540969849
    3. '0' → logprob: -1.5424977540969849
    4. 'X' → logprob: -2.4174976348876953
    5. '1' → logprob: -4.917497634887695
    6. ' input' → logprob: -5.167497634887695
    7. '"' → logprob: -6.167497634887695
    8. 'input' → logprob: -6.417497634887695
    9. ' now' → logprob: -6.417497634887695
    10. ' int' → logprob: -7.167497634887695

Token 8: '100' (ID: 1353)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.28928232192993164
    2. '0' → logprob: -1.4142823219299316
    3. 'input' → logprob: -6.289282321929932
    4. '1' → logprob: -6.414282321929932
    5. '"' → logprob: -6.664282321929932
    6. 'max' → logprob: -6.789282321929932
    7. 'int' → logprob: -6.914282321929932
    8. 'str' → logprob: -8.289281845092773
    9. 'now' → logprob: -8.539281845092773
    10. '10' → logprob: -9.164281845092773

Token 9: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1154421716928482
    2. '%' → logprob: -3.3654422760009766
    3. '<|end|>' → logprob: -3.9904422760009766
    4. '0' → logprob: -4.865442276000977
    5. '+' → logprob: -4.990442276000977
    6. ')' → logprob: -5.115442276000977
    7. '```' → logprob: -5.115442276000977
    8. ' ' → logprob: -5.490442276000977
    9. '-' → logprob: -5.615442276000977
    10. '\' → logprob: -5.865442276000977

Token 10: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5635122060775757
    2. '*' → logprob: -1.6885122060775757
    3. '<|end|>' → logprob: -1.6885122060775757
    4. 'while' → logprob: -2.1885123252868652
    5. '%' → logprob: -2.5635123252868652
    6. 'for' → logprob: -2.9385123252868652
    7. '
' → logprob: -3.6885123252868652
    8. '0' → logprob: -3.8135123252868652
    9. ' if' → logprob: -4.188512325286865
    10. '```' → logprob: -4.313512325286865

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6670426726341248
    2. ' =' → logprob: -1.0420427322387695
    3. ' +=' → logprob: -2.5420427322387695
    4. '_' → logprob: -3.4170427322387695
    5. '+=' → logprob: -4.4170427322387695
    6. ' ' → logprob: -5.0420427322387695
    7. '+' → logprob: -6.4170427322387695
    8. ')' → logprob: -7.6670427322387695
    9. ' *=' → logprob: -7.9170427322387695
    10. '*' → logprob: -8.04204273223877

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17512726783752441
    2. ' ' → logprob: -2.9251272678375244
    3. '"' → logprob: -3.5501272678375244
    4. ''' → logprob: -3.6751272678375244
    5. 'now' → logprob: -3.9251272678375244
    6. '100' → logprob: -4.175127029418945
    7. ' now' → logprob: -4.675127029418945
    8. '(now' → logprob: -5.425127029418945
    9. ' X' → logprob: -7.050127029418945
    10. 'max' → logprob: -7.550127029418945

Token 13: '0' (ID: 15)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.2769635319709778
    2. '0' → logprob: -1.651963472366333
    3. '100' → logprob: -3.526963472366333
    4. 'max' → logprob: -4.151963710784912
    5. '(now' → logprob: -6.651963710784912
    6. '"' → logprob: -7.026963710784912
    7. '1' → logprob: -7.401963710784912
    8. '-' → logprob: -7.401963710784912
    9. 'min' → logprob: -8.026963233947754
    10. 'X' → logprob: -8.151963233947754

Token 14: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3535703718662262
    2. '\n' → logprob: -1.6035703420639038
    3. 'if' → logprob: -3.1035704612731934
    4. ' while' → logprob: -3.6035704612731934
    5. '
' → logprob: -4.853570461273193
    6. '\' → logprob: -5.353570461273193
    7. '' → logprob: -5.853570461273193
    8. '```' → logprob: -5.853570461273193
    9. 'for' → logprob: -6.728570461273193
    10. ' 
' → logprob: -6.728570461273193

Token 15: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08415424078702927
    2. 'if' → logprob: -2.5841541290283203
    3. 'for' → logprob: -5.95915412902832
    4. ' while' → logprob: -6.33415412902832
    5. '```' → logprob: -7.33415412902832
    6. '>' → logprob: -9.08415412902832
    7. ' if' → logprob: -10.08415412902832
    8. '``' → logprob: -10.45915412902832
    9. '`' → logprob: -10.83415412902832
    10. ')' → logprob: -12.33415412902832

Token 16: ' now' (ID: 1954)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.035321980714797974
    2. ' ' → logprob: -3.9103219509124756
    3. ' now' → logprob: -4.410322189331055
    4. 'X' → logprob: -6.160322189331055
    5. ' ' → logprob: -8.160322189331055
    6. ' not' → logprob: -10.160322189331055
    7. 'now' → logprob: -10.535322189331055
    8. ' (' → logprob: -11.285322189331055
    9. '  ' → logprob: -11.535322189331055
    10. ' x' → logprob: -12.160322189331055

Token 17: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3559482991695404
    2. ' <' → logprob: -2.2309482097625732
    3. '>=' → logprob: -2.6059482097625732
    4. ' <=' → logprob: -2.8559482097625732
    5. '<' → logprob: -3.3559482097625732
    6. ' >' → logprob: -4.230948448181152
    7. '<=' → logprob: -4.855948448181152
    8. '>' → logprob: -5.855948448181152
    9. ' ' → logprob: -7.480948448181152
    10. '＜' → logprob: -11.105948448181152

Token 18: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.15144845843315125
    2. ' X' → logprob: -2.0264484882354736
    3. '=' → logprob: -5.2764482498168945
    4. '100' → logprob: -5.9014482498168945
    5. ' ' → logprob: -7.6514482498168945
    6. '=X' → logprob: -8.276448249816895
    7. '>X' → logprob: -9.901448249816895
    8. ' =' → logprob: -10.776448249816895
    9. '10' → logprob: -11.151448249816895
    10. '	X' → logprob: -11.651448249816895

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005362890660762787
    2. ' :' → logprob: -5.2553629875183105
    3. ':
' → logprob: -9.505362510681152
    4. '+:' → logprob: -10.005362510681152
    5. ' :
' → logprob: -12.880362510681152
    6. '+' → logprob: -13.130362510681152
    7. '：' → logprob: -13.630362510681152
    8. '*:' → logprob: -13.880362510681152
    9. ' and' → logprob: -14.505362510681152
    10. '*' → logprob: -14.755362510681152

Token 20: '   ' (ID: 271)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.6361002326011658
    2. 'now' → logprob: -0.7611002326011658
    3. '	now' → logprob: -6.8861002922058105
    4. ' ans' → logprob: -7.1361002922058105
    5. '   ' → logprob: -7.3861002922058105
    6. 'ans' → logprob: -7.8861002922058105
    7. '```' → logprob: -8.511099815368652
    8. '    ' → logprob: -9.636099815368652
    9. ' *=' → logprob: -9.761099815368652
    10. '_now' → logprob: -9.761099815368652

Token 21: ' ans' (ID: 3345)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.1823776811361313
    2. ' now' → logprob: -1.8073776960372925
    3. '   ' → logprob: -6.682377815246582
    4. 'ans' (adapté à ' ans') → logprob: -7.307377815246582
    5. '	now' → logprob: -8.182377815246582
    6. '*' → logprob: -9.557377815246582
    7. '100' → logprob: -9.807377815246582
    8. ' ans' → logprob: -10.057377815246582
    9. ' ' → logprob: -10.057377815246582
    10. '    ' → logprob: -10.182377815246582

Token 22: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.019041115418076515
    2. '+=' → logprob: -4.019041061401367
    3. ' =' → logprob: -7.269041061401367
    4. '+' → logprob: -9.644041061401367
    5. '=' → logprob: -10.144041061401367
    6. '    ' → logprob: -10.269041061401367
    7. '   ' → logprob: -11.144041061401367
    8. ' ' → logprob: -11.644041061401367
    9. '```' → logprob: -11.644041061401367
    10. ' +' → logprob: -12.019041061401367

Token 23: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.2532135248184204
    2. 'now' → logprob: -1.2532135248184204
    3. '100' → logprob: -1.6282135248184204
    4. '1' → logprob: -1.8782135248184204
    5. '(now' → logprob: -3.628213405609131
    6. '5' → logprob: -3.628213405609131
    7. ' ' → logprob: -4.253213405609131
    8. ' now' → logprob: -5.878213405609131
    9. '50' → logprob: -6.003213405609131
    10. '(' → logprob: -6.253213405609131

Token 24: '1' (ID: 16)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.32163572311401367
    2. '1' → logprob: -1.9466357231140137
    3. '5' → logprob: -2.5716357231140137
    4. '10' → logprob: -3.5716357231140137
    5. '(now' → logprob: -4.071635723114014
    6. 'ans' → logprob: -5.571635723114014
    7. ' ' → logprob: -6.446635723114014
    8. '(' → logprob: -6.821635723114014
    9. '100' → logprob: -6.946635723114014
    10. ' now' → logprob: -7.071635723114014

Token 25: '
' (ID: 198)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.15632079541683197
    2. ' now' → logprob: -2.156320810317993
    3. '   ' → logprob: -3.656320810317993
    4. '*' → logprob: -6.781320571899414
    5. '	now' → logprob: -7.031320571899414
    6. '[now' → logprob: -7.781320571899414
    7. '_now' → logprob: -9.406320571899414
    8. '0' → logprob: -9.531320571899414
    9. '```' → logprob: -9.531320571899414
    10. '(now' → logprob: -9.781320571899414

Token 26: '   ' (ID: 271)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.01411743089556694
    2. '   ' → logprob: -4.764117240905762
    3. ' now' → logprob: -5.264117240905762
    4. '	now' → logprob: -9.764117240905762
    5. '*' → logprob: -9.889117240905762
    6. '3' → logprob: -10.014117240905762
    7. '```' → logprob: -10.264117240905762
    8. '[now' → logprob: -10.764117240905762
    9. 'Now' → logprob: -11.264117240905762
    10. '_now' → logprob: -11.389117240905762

Token 27: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.006825366988778114
    2. ' now' → logprob: -5.0068254470825195
    3. '   ' → logprob: -10.38182544708252
    4. '*' → logprob: -10.63182544708252
    5. '	now' → logprob: -10.75682544708252
    6. '_now' → logprob: -11.63182544708252
    7. '[now' → logprob: -12.00682544708252
    8. '100' → logprob: -12.00682544708252
    9. '(now' → logprob: -12.63182544708252
    10. '```' → logprob: -12.88182544708252

Token 28: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.006522929761558771
    2. ' *=' → logprob: -5.256523132324219
    3. '=' → logprob: -6.756523132324219
    4. '+=' → logprob: -9.631523132324219
    5. '*' → logprob: -10.256523132324219
    6. '//=' → logprob: -11.131523132324219
    7. '   ' → logprob: -12.881523132324219
    8. ' =' → logprob: -12.881523132324219
    9. '```' → logprob: -13.381523132324219
    10. '	' → logprob: -14.256523132324219

Token 29: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.009072327055037022
    2. ' now' → logprob: -4.759072303771973
    3. 'int' → logprob: -8.634072303771973
    4. '(now' → logprob: -9.134072303771973
    5. '	now' → logprob: -9.259072303771973
    6. '[now' → logprob: -10.384072303771973
    7. '   ' → logprob: -11.509072303771973
    8. '*' → logprob: -11.509072303771973
    9. '_now' → logprob: -11.759072303771973
    10. '10' → logprob: -12.259072303771973

Token 30: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.033688001334667206
    2. ' *' → logprob: -3.4086880683898926
    3. ' +' → logprob: -10.533687591552734
    4. '+' → logprob: -11.158687591552734
    5. '*=' → logprob: -15.033687591552734
    6. '**' → logprob: -15.158687591552734
    7. '//' → logprob: -16.033687591552734
    8. ' *=' → logprob: -16.033687591552734
    9. '*(' → logprob: -16.033687591552734
    10. '＊' → logprob: -16.408687591552734

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005557097494602203
    2. '1' → logprob: -5.255557060241699
    3. '101' → logprob: -8.3805570602417
    4. '3' → logprob: -10.7555570602417
    5. '10' → logprob: -10.7555570602417
    6. '   ' → logprob: -11.0055570602417
    7. ' ' → logprob: -11.6305570602417
    8. '  ' → logprob: -12.1305570602417
    9. '```' → logprob: -12.2555570602417
    10. '98' → logprob: -12.7555570602417

Token 32: '101' (ID: 7959)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03148956224322319
    2. '1' → logprob: -3.906489610671997
    3. '101' → logprob: -4.531489372253418
    4. '10' → logprob: -10.531489372253418
    5. '   ' → logprob: -10.656489372253418
    6. '3' → logprob: -10.781489372253418
    7. ' ' → logprob: -11.031489372253418
    8. '  ' → logprob: -11.281489372253418
    9. '```' → logprob: -12.031489372253418
    10. '98' → logprob: -13.031489372253418

Token 33: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5132172703742981
    2. '//' → logprob: -1.0132172107696533
    3. '100' → logprob: -4.513217449188232
    4. '0' → logprob: -4.763217449188232
    5. '/' → logprob: -5.013217449188232
    6. '00' → logprob: -5.888217449188232
    7. '<|end|>' → logprob: -5.888217449188232
    8. '```' → logprob: -6.013217449188232
    9. ' ' → logprob: -6.888217449188232
    10. '   ' → logprob: -8.013216972351074

Token 34: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '10' → logprob: -15.000000953674316
    4. '1' → logprob: -16.500001907348633
    5. '0' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '  ' → logprob: -18.500001907348633
    8. '１００' → logprob: -18.750001907348633
    9. '00' → logprob: -19.625001907348633
    10. '000' → logprob: -20.250001907348633

Token 35: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.0280383548888494e-06
    2. '10' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '1' → logprob: -15.875000953674316
    5. '0' → logprob: -17.500001907348633
    6. '１００' → logprob: -18.625001907348633
    7. '  ' → logprob: -19.750001907348633
    8. '   ' → logprob: -19.750001907348633
    9. '000' → logprob: -21.000001907348633
    10. '00' → logprob: -21.125001907348633

Token 36: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06644722819328308
    2. 'print' → logprob: -3.5664472579956055
    3. '
' → logprob: -4.3164472579956055
    4. '<|end|>' → logprob: -4.3164472579956055
    5. '\' → logprob: -5.9414472579956055
    6. ')' → logprob: -5.9414472579956055
    7. '\r' → logprob: -6.5664472579956055
    8. ' 
' → logprob: -6.9414472579956055
    9. '```' → logprob: -7.6914472579956055
    10. '<|end|>' → logprob: -8.316447257995605

Token 37: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.374227425316349e-05
    2. ' print' → logprob: -10.375073432922363
    3. '\n' → logprob: -10.625073432922363
    4. ')' → logprob: -11.875073432922363
    5. '\' → logprob: -12.000073432922363
    6. '(print' → logprob: -13.125073432922363
    7. '```' → logprob: -13.500073432922363
    8. '#print' → logprob: -15.000073432922363
    9. '-print' → logprob: -15.500073432922363
    10. '
' → logprob: -15.750073432922363

Token 38: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.03805067762732506
    2. '(' → logprob: -3.288050651550293
    3. 'ans' → logprob: -12.913050651550293
    4. ' (' → logprob: -12.913050651550293
    5. '(answer' → logprob: -13.538050651550293
    6. '()' → logprob: -13.663050651550293
    7. '('' → logprob: -14.288050651550293
    8. '(now' → logprob: -15.663050651550293
    9. '(end' → logprob: -15.788050651550293
    10. '(
' → logprob: -15.788050651550293

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.75
    3. ')
' → logprob: -17.875
    4. ' )' → logprob: -17.875
    5. '`)' → logprob: -18.5
    6. ')`' → logprob: -18.625
    7. '）' → logprob: -18.875
    8. '')' → logprob: -19.5
    9. '}' → logprob: -20.125
    10. ')}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 18.92%
Précision adaptée (1ère position): 21.62%
Précision (top 10): 78.38%
================================================================================
