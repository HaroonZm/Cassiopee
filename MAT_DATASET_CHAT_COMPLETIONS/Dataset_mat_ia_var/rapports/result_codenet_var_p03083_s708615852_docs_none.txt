================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
B, W = map(int, input().split())
MOD = 10**9 + 7
class ModInt:
    def __init__(self, x):
        self.x = x % MOD
    def __str__(self):
        return str(self.x)
    def __repr__(self):
        return str(self.x)
    def __add__(self, other):
        return ModInt(self.x + other.x) if isinstance(other, ModInt) else ModInt(self.x + other)
    def __sub__(self, other):
        return ModInt(self.x - other.x) if isinstance(other, ModInt) else ModInt(self.x - other)
    def __mul__(self, other):
        return ModInt(self.x * other.x) if isinstance(other, ModInt) else ModInt(self.x * other)
    def __truediv__(self, other):
        return ModInt(self.x * pow(other.x, MOD - 2, MOD)) if isinstance(other, ModInt) else ModInt(self.x * pow(other, MOD - 2, MOD))
    def __pow__(self, other):
        return ModInt(pow(self.x, other.x, MOD)) if isinstance(other, ModInt) else ModInt(pow(self.x, other, MOD))
    __radd__ = __add__
    __rsub__ = __sub__
    __rmul__ = __mul__
    __rtruediv__ = __truediv__
    __rpow__ = __pow__
p = ModInt(0)
q = ModInt(0)
cp = ModInt(0)
cq = ModInt(0)
for i in range(1, B + W + 1):
    ans = (1 + q - p) / 2
    print(ans)
    cp = ModInt(0) if i < B else ModInt(1) if i == B else cp * (i - 1) / (i - B)
    p = ModInt(0) if i < B else ModInt(1) / ModInt(2)**i if i == B else p + cp / ModInt(2)**i
    cq = ModInt(0) if i < W else ModInt(1) if i == W else cq * (i - 1) / (i - W)
    q = ModInt(0) if i < W else ModInt(1) / ModInt(2)**i if i == W else q + cq / ModInt(2)**i
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'B' (ID: 33)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2694235146045685
    2. ' =' → logprob: -2.269423484802246
    3. ',' → logprob: -2.769423484802246
    4. '+' → logprob: -3.769423484802246
    5. '.' → logprob: -4.394423484802246
    6. ')' → logprob: -4.394423484802246
    7. '[' → logprob: -4.769423484802246
    8. '*' → logprob: -5.519423484802246
    9. ' ' → logprob: -5.644423484802246
    10. '(' → logprob: -6.769423484802246

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0182701349258423
    2. '0' → logprob: -1.3932701349258423
    3. ' B' → logprob: -2.6432700157165527
    4. 'map' → logprob: -3.0182700157165527
    5. '10' → logprob: -3.2682700157165527
    6. ' torch' → logprob: -3.6432700157165527
    7. ' [],' → logprob: -3.8932700157165527
    8. 'torch' → logprob: -3.8932700157165527
    9. ' map' → logprob: -4.143270015716553
    10. 'B' → logprob: -4.143270015716553

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043831631541252136
    2. '(lambda' → logprob: -3.5438315868377686
    3. '(int' → logprob: -4.293831825256348
    4. '(str' → logprob: -8.793831825256348
    5. '(B' → logprob: -10.668831825256348
    6. '(eval' → logprob: -10.668831825256348
    7. '(
' → logprob: -10.918831825256348
    8. '<|end|>' → logprob: -11.293831825256348
    9. '(input' → logprob: -11.668831825256348
    10. '```' → logprob: -11.918831825256348

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15339335799217224
    2. '(' → logprob: -2.153393268585205
    3. ')' → logprob: -3.778393268585205
    4. '(B' → logprob: -7.653393268585205
    5. '(user' → logprob: -7.903393268585205
    6. '('' → logprob: -8.028393745422363
    7. '(int' → logprob: -8.153393745422363
    8. '(`' → logprob: -8.403393745422363
    9. '(data' → logprob: -8.403393745422363
    10. 'input' → logprob: -8.778393745422363

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16023245453834534
    2. ' input' → logprob: -1.910232424736023
    3. '(input' → logprob: -12.160232543945312
    4. ')' → logprob: -13.285232543945312
    5. ',input' → logprob: -14.785232543945312
    6. ' ' → logprob: -15.285232543945312
    7. '<input' → logprob: -15.785232543945312
    8. '	input' → logprob: -15.785232543945312
    9. '=input' → logprob: -15.910232543945312
    10. '[input' → logprob: -16.785232543945312

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2735235095024109
    2. '(' → logprob: -2.2735235691070557
    3. '())' → logprob: -2.3985235691070557
    4. '('' → logprob: -4.148523330688477
    5. '`()' → logprob: -4.773523330688477
    6. '().' → logprob: -4.898523330688477
    7. ')' → logprob: -5.148523330688477
    8. '```' → logprob: -7.023523330688477
    9. '("")' → logprob: -7.273523330688477
    10. '()`' → logprob: -7.273523330688477

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009354014764539897
    2. 'strip' → logprob: -7.0009355545043945
    3. ')' → logprob: -11.250935554504395
    4. 'rstrip' → logprob: -12.000935554504395
    5. ' split' → logprob: -12.625935554504395
    6. 'read' → logprob: -14.125935554504395
    7. '(split' → logprob: -15.000935554504395
    8. 'startswith' → logprob: -16.375934600830078
    9. 'replace' → logprob: -16.500934600830078
    10. '```' → logprob: -16.625934600830078

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28792375326156616
    2. ')' → logprob: -1.412923812866211
    3. '()' → logprob: -5.412923812866211
    4. '))' → logprob: -6.662923812866211
    5. '()))' → logprob: -7.287923812866211
    6. '`)' → logprob: -8.537923812866211
    7. '(' → logprob: -10.162923812866211
    8. ' ())' → logprob: -11.037923812866211
    9. '```' → logprob: -11.537923812866211
    10. '('' → logprob: -11.537923812866211

Token 11: 'MOD' (ID: 52135)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0446765422821045
    2. 'x' → logprob: -1.7946765422821045
    3. 'r' → logprob: -1.9196765422821045
    4. '`' → logprob: -2.5446765422821045
    5. 'if' → logprob: -2.6696765422821045
    6. 'for' → logprob: -2.9196765422821045
    7. 'n' → logprob: -3.5446765422821045
    8. '#' → logprob: -3.6696765422821045
    9. '```' → logprob: -4.794676780700684
    10. 'A' → logprob: -4.919676780700684

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5252550840377808
    2. ' =' → logprob: -1.1502550840377808
    3. '_' → logprob: -2.6502552032470703
    4. ')' → logprob: -3.9002552032470703
    5. ' )' → logprob: -8.15025520324707
    6. ',' → logprob: -8.52525520324707
    7. ' ' → logprob: -8.90025520324707
    8. '<|end|>' → logprob: -8.90025520324707
    9. ' =)' → logprob: -9.27525520324707
    10. '.' → logprob: -10.15025520324707

Token 13: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03819296881556511
    2. '100' → logprob: -3.5381929874420166
    3. ' ' → logprob: -4.7881927490234375
    4. '1' → logprob: -9.538192749023438
    5. '998' → logprob: -11.913192749023438
    6. 'int' → logprob: -15.538192749023438
    7. '`' → logprob: -15.788192749023438
    8. '2' → logprob: -16.413192749023438
    9. '```' → logprob: -16.413192749023438
    10. '109' → logprob: -16.538192749023438

Token 14: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023544302210211754
    2. '100' → logprob: -3.7735443115234375
    3. '998' → logprob: -8.523544311523438
    4. '1' → logprob: -9.273544311523438
    5. '(' → logprob: -12.398544311523438
    6. '2' → logprob: -14.398544311523438
    7. ' ' → logprob: -14.648544311523438
    8. '999' → logprob: -15.523544311523438
    9. '```' → logprob: -15.523544311523438
    10. '`' → logprob: -15.648544311523438

Token 15: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010860932059586048
    2. '0' → logprob: -5.010860919952393
    3. ' **' → logprob: -6.135860919952393
    4. '9' → logprob: -7.260860919952393
    5. '^' → logprob: -8.13586139678955
    6. '```' → logprob: -8.63586139678955
    7. '000' → logprob: -8.76086139678955
    8. '\' → logprob: -9.26086139678955
    9. '\n' → logprob: -9.38586139678955
    10. '6' → logprob: -9.63586139678955

Token 16: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -15.25
    3. '```' → logprob: -17.625
    4. ' ' → logprob: -18.75
    5. '+' → logprob: -18.875
    6. '18' → logprob: -19.875
    7. '10' → logprob: -20.0
    8. '``' → logprob: -20.25
    9. '   ' → logprob: -20.75
    10. '19' → logprob: -20.75

Token 17: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009518369333818555
    2. ' +' → logprob: -7.500951766967773
    3. '7' → logprob: -7.875951766967773
    4. '+
' → logprob: -11.625951766967773
    5. '+

' → logprob: -12.125951766967773
    6. '＋' → logprob: -13.000951766967773
    7. '6' → logprob: -14.625951766967773
    8. '9' → logprob: -15.000951766967773
    9. ' +
' → logprob: -15.250951766967773
    10. '```' → logprob: -15.375951766967773

Token 18: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.7432603272027336e-06
    2. '+' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '```' → logprob: -18.000001907348633
    5. '07' → logprob: -18.250001907348633
    6. '9' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.875001907348633
    8. ' +' → logprob: -20.375001907348633
    9. '  ' → logprob: -20.687501907348633
    10. '_' → logprob: -20.875001907348633

Token 19: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. '+' → logprob: -14.250000953674316
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -17.25
    5. '07' → logprob: -19.375
    6. '9' → logprob: -19.875
    7. '   ' → logprob: -19.9375
    8. '``' → logprob: -20.5625
    9. '７' → logprob: -21.125
    10. ' +' → logprob: -21.125

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6005173921585083
    2. 'result' → logprob: -1.9755173921585083
    3. 'dp' → logprob: -2.1005172729492188
    4. 'a' → logprob: -2.2255172729492188
    5. ')' → logprob: -2.7255172729492188
    6. '#' → logprob: -2.8505172729492188
    7. 'if' → logprob: -2.8505172729492188
    8. 'n' → logprob: -3.4755172729492188
    9. '\' → logprob: -3.4755172729492188
    10. '' → logprob: -3.7255172729492188

Token 21: 'class' (ID: 1444)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04537320137023926
    2. 'if' → logprob: -4.17037296295166
    3. 'n' → logprob: -5.17037296295166
    4. 'a' → logprob: -5.79537296295166
    5. 'def' → logprob: -5.79537296295166
    6. 'DP' → logprob: -5.79537296295166
    7. 'result' → logprob: -5.92037296295166
    8. '```' → logprob: -6.17037296295166
    9. 'd' → logprob: -6.42037296295166
    10. 'for' → logprob: -6.92037296295166

Token 22: ' Mod' (ID: 7191)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.46775519847869873
    2. ' Combination' → logprob: -1.5927551984786987
    3. ' Counter' → logprob: -3.5927553176879883
    4. ' Factor' → logprob: -3.5927553176879883
    5. ' Comb' → logprob: -3.7177553176879883
    6. ' ' → logprob: -3.7177553176879883
    7. ' Combo' → logprob: -4.467755317687988
    8. ' Dice' → logprob: -4.592755317687988
    9. ' Solver' → logprob: -4.592755317687988
    10. ' DP' → logprob: -5.092755317687988

Token 23: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.4056535959243774
    2. 'ulo' → logprob: -1.4056535959243774
    3. ':' → logprob: -1.5306535959243774
    4. 'ular' → logprob: -1.6556535959243774
    5. 'int' → logprob: -3.780653476715088
    6. 'ule' → logprob: -4.030653476715088
    7. '```' → logprob: -4.280653476715088
    8. 'ulus' → logprob: -4.530653476715088
    9. '   ' → logprob: -4.905653476715088
    10. 'uler' → logprob: -5.655653476715088

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028784610331058502
    2. '(' → logprob: -5.877878665924072
    3. ' :' → logprob: -10.252878189086914
    4. '():' → logprob: -10.752878189086914
    5. '(object' → logprob: -12.002878189086914
    6. '):' → logprob: -12.752878189086914
    7. '#:' → logprob: -13.502878189086914
    8. '>:' → logprob: -13.877878189086914
    9. '(int' → logprob: -14.002878189086914
    10. ':
' → logprob: -14.127878189086914

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019556662067770958
    2. ':' → logprob: -4.644556522369385
    3. '<|end|>' → logprob: -5.519556522369385
    4. ' def' → logprob: -6.519556522369385
    5. '    ' → logprob: -6.769556522369385
    6. '(' → logprob: -7.269556522369385
    7. 'def' → logprob: -7.394556522369385
    8. ' ' → logprob: -7.644556522369385
    9. '    
' → logprob: -8.144556999206543
    10. ')' → logprob: -8.519556999206543

Token 26: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6957799792289734
    2. 'def' (adapté à ' def') → logprob: -0.6957799792289734
    3. '   ' → logprob: -5.945779800415039
    4. '	def' → logprob: -11.695779800415039
    5. '    ' → logprob: -13.570779800415039
    6. ' __' → logprob: -13.695779800415039
    7. ' ' → logprob: -13.945779800415039
    8. ' pass' → logprob: -15.070779800415039
    9. '__' → logprob: -15.820779800415039
    10. '    
' → logprob: -16.07077980041504

Token 27: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0007400614558719099
    2. '__' → logprob: -7.375740051269531
    3. ' init' → logprob: -10.000740051269531
    4. 'init' → logprob: -10.250740051269531
    5. ' ' → logprob: -11.250740051269531
    6. '_init' → logprob: -11.500740051269531
    7. ' _' → logprob: -12.000740051269531
    8. '_' → logprob: -13.125740051269531
    9. ' ' → logprob: -13.750740051269531
    10. ' ___' → logprob: -14.875740051269531

Token 28: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. 'int' → logprob: -13.875001907348633
    3. 'in' → logprob: -14.625001907348633
    4. ' init' → logprob: -14.750001907348633
    5. 'ini' → logprob: -15.375001907348633
    6. 'i' → logprob: -17.500001907348633
    7. '_init' → logprob: -18.125001907348633
    8. 'new' → logprob: -19.125001907348633
    9. 'post' → logprob: -19.625001907348633
    10. 'add' → logprob: -20.500001907348633

Token 29: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03382711485028267
    2. '__' → logprob: -3.408827066421509
    3. '__(
' → logprob: -9.78382682800293
    4. '__((' → logprob: -10.03382682800293
    5. '(' → logprob: -10.65882682800293
    6. '__('' → logprob: -10.78382682800293
    7. '(self' → logprob: -10.90882682800293
    8. '__(*' → logprob: -11.28382682800293
    9. '__("' → logprob: -13.53382682800293
    10. '__.__' → logprob: -14.03382682800293

Token 30: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078997299075127
    2. ' self' → logprob: -5.5040788650512695
    3. ' ' → logprob: -15.50407886505127
    4. '(self' → logprob: -15.50407886505127
    5. '0' → logprob: -16.504079818725586
    6. 's' → logprob: -17.004079818725586
    7. '	self' → logprob: -17.129079818725586
    8. '_self' → logprob: -17.629079818725586
    9. ',self' → logprob: -17.754079818725586
    10. ',' → logprob: -18.754079818725586

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10918665677309036
    2. 'self' → logprob: -2.6091866493225098
    3. ' ,' → logprob: -3.9841866493225098
    4. '(self' → logprob: -4.85918664932251
    5. ' self' → logprob: -6.23418664932251
    6. ',self' → logprob: -6.85918664932251
    7. '(' → logprob: -8.859187126159668
    8. '_,' → logprob: -8.984187126159668
    9. '_self' → logprob: -9.734187126159668
    10. ' (' → logprob: -9.984187126159668

Token 32: ' x' (ID: 1215)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.699553370475769
    2. 'self' → logprob: -0.824553370475769
    3. 'x' → logprob: -3.1995534896850586
    4. ' value' → logprob: -4.824553489685059
    5. ' self' → logprob: -5.074553489685059
    6. 'v' → logprob: -5.074553489685059
    7. 'val' → logprob: -5.949553489685059
    8. 'n' → logprob: -7.699553489685059
    9. ' x' → logprob: -8.574553489685059
    10. ' val' → logprob: -8.949553489685059

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002306673675775528
    2. ':' → logprob: -6.3773064613342285
    3. '):
' → logprob: -8.502306938171387
    4. ' ):' → logprob: -8.502306938171387
    5. ')' → logprob: -8.877306938171387
    6. '%' → logprob: -10.627306938171387
    7. '=' → logprob: -10.627306938171387
    8. ',' → logprob: -13.127306938171387
    9. '):
' → logprob: -13.127306938171387
    10. '   ' → logprob: -13.377306938171387

Token 34: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18804115056991577
    2. '       ' → logprob: -2.4380412101745605
    3. 'x' → logprob: -2.6880412101745605
    4. '    ' → logprob: -4.9380412101745605
    5. '        ' → logprob: -5.4380412101745605
    6. ' (' → logprob: -6.1880412101745605
    7. ' ' → logprob: -7.3130412101745605
    8. '   ' → logprob: -7.5630412101745605
    9. '(' → logprob: -8.188040733337402
    10. ' =' → logprob: -8.313040733337402

Token 35: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25237181782722473
    2. ' self' → logprob: -1.5023717880249023
    3. '       ' → logprob: -7.752371788024902
    4. 'x' → logprob: -11.877371788024902
    5. ' x' → logprob: -13.252371788024902
    6. ' ' → logprob: -13.627371788024902
    7. '        ' → logprob: -14.002371788024902
    8. '   ' → logprob: -14.252371788024902
    9. '(self' → logprob: -14.252371788024902
    10. '	self' → logprob: -15.502371788024902

Token 36: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03393175080418587
    2. '.x' → logprob: -3.4089317321777344
    3. '.value' → logprob: -8.533931732177734
    4. ' .' → logprob: -9.533931732177734
    5. ' ' → logprob: -11.533931732177734
    6. 'x' → logprob: -13.533931732177734
    7. '=' → logprob: -14.033931732177734
    8. '.data' → logprob: -14.033931732177734
    9. ' =' → logprob: -14.158931732177734
    10. '._' → logprob: -14.658931732177734

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. ' %=' → logprob: -15.535224914550781
    4. '=}' → logprob: -15.785224914550781
    5. ')' → logprob: -16.03522491455078
    6. '%=' → logprob: -16.41022491455078
    7. ' ' → logprob: -16.78522491455078
    8. '＝' → logprob: -17.28522491455078
    9. ' =)' → logprob: -17.28522491455078
    10. '=int' → logprob: -17.66022491455078

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38692641258239746
    2. ' x' → logprob: -1.1369264125823975
    3. '(x' → logprob: -9.886926651000977
    4. ' (' → logprob: -12.886926651000977
    5. '(' → logprob: -13.261926651000977
    6. '	x' → logprob: -15.761926651000977
    7. 'int' → logprob: -16.261926651000977
    8. ' ' → logprob: -16.636926651000977
    9. '{x' → logprob: -17.636926651000977
    10. ' int' → logprob: -17.886926651000977

Token 39: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3871762454509735
    2. ' %' → logprob: -1.137176275253296
    3. '<|end|>' → logprob: -8.137176513671875
    4. ' ' → logprob: -12.262176513671875
    5. ')' → logprob: -13.637176513671875
    6. '<|end|>' → logprob: -13.887176513671875
    7. '%B' → logprob: -14.012176513671875
    8. ' %=' → logprob: -14.137176513671875
    9. ' ' → logprob: -14.262176513671875
    10. '%x' → logprob: -14.387176513671875

Token 40: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.12692947685718536
    2. ' MOD' → logprob: -2.126929521560669
    3. '_MOD' → logprob: -13.75192928314209
    4. '.MOD' → logprob: -15.00192928314209
    5. ' ' → logprob: -17.126930236816406
    6. '(M' → logprob: -17.501930236816406
    7. ' self' → logprob: -17.626930236816406
    8. 'self' → logprob: -17.751930236816406
    9. 'M' → logprob: -18.876930236816406
    10. ' ' → logprob: -20.001930236816406

Token 41: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39062342047691345
    2. '<|end|>' → logprob: -1.7656234502792358
    3. ' ' → logprob: -3.1406233310699463
    4. '    
' → logprob: -3.7656233310699463
    5. 'def' → logprob: -3.8906233310699463
    6. '```' → logprob: -4.140623569488525
    7. '\n' → logprob: -4.390623569488525
    8. '
' → logprob: -4.515623569488525
    9. ' def' → logprob: -5.140623569488525
    10. ' 
' → logprob: -5.515623569488525

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18831542134284973
    2. '<|end|>' → logprob: -2.5633153915405273
    3. '    
' → logprob: -2.6883153915405273
    4. '
' → logprob: -4.438315391540527
    5. '\n' → logprob: -5.563315391540527
    6. 'def' → logprob: -6.063315391540527
    7. '<|end|>' → logprob: -6.438315391540527
    8. '  
' → logprob: -6.688315391540527
    9. ' ' → logprob: -6.938315391540527
    10. ' 
' → logprob: -7.063315391540527

Token 43: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110236048698425
    2. 'def' (adapté à ' def') → logprob: -1.2360236644744873
    3. ' ' → logprob: -2.9860236644744873
    4. '<|end|>' → logprob: -3.2360236644744873
    5. ' def' → logprob: -3.3610236644744873
    6. '    
' → logprob: -3.8610236644744873
    7. '
' → logprob: -5.361023426055908
    8. '```' → logprob: -5.486023426055908
    9. ' 
' → logprob: -5.611023426055908
    10. '  
' → logprob: -6.486023426055908

Token 44: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12519989907741547
    2. ' add' → logprob: -2.875199794769287
    3. '__' → logprob: -3.250199794769287
    4. '_add' → logprob: -4.750199794769287
    5. ' ' → logprob: -4.875199794769287
    6. 'add' → logprob: -5.875199794769287
    7. ' def' → logprob: -6.375199794769287
    8. ' ' → logprob: -7.000199794769287
    9. '+' → logprob: -9.000200271606445
    10. 'pow' → logprob: -9.125200271606445

Token 45: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.005125238560140133
    2. 'mul' → logprob: -5.630125045776367
    3. 'pow' → logprob: -7.255125045776367
    4. 'eq' → logprob: -7.880125045776367
    5. 'i' → logprob: -8.255125045776367
    6. 'init' → logprob: -9.130125045776367
    7. 'flo' → logprob: -11.130125045776367
    8. 'mod' → logprob: -11.255125045776367
    9. 'imul' → logprob: -11.380125045776367
    10. ' add' → logprob: -11.880125045776367

Token 46: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0049850475043058395
    2. '__' → logprob: -5.3799848556518555
    3. '(self' → logprob: -8.504984855651855
    4. '__(
' → logprob: -9.754984855651855
    5. '__('' → logprob: -10.129984855651855
    6. '(' → logprob: -10.254984855651855
    7. '_(' → logprob: -11.379984855651855
    8. '__((' → logprob: -12.254984855651855
    9. '__("' → logprob: -12.629984855651855
    10. '__(*' → logprob: -12.754984855651855

Token 47: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6240566083070007e-06
    2. ')' → logprob: -14.000001907348633
    3. '(self' → logprob: -14.500001907348633
    4. ' self' → logprob: -15.625001907348633
    5. 's' → logprob: -16.500001907348633
    6. '   ' → logprob: -18.500001907348633
    7. 'sel' → logprob: -19.625001907348633
    8. 'elf' → logprob: -19.750001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.125001907348633

Token 48: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4418241083621979
    2. '):' → logprob: -1.5668240785598755
    3. ',' → logprob: -2.066824197769165
    4. 'self' → logprob: -4.066823959350586
    5. '):
' → logprob: -5.941823959350586
    6. '(self' → logprob: -7.816823959350586
    7. ')return' → logprob: -8.191823959350586
    8. '   ' → logprob: -8.441823959350586
    9. ' )' → logprob: -8.566823959350586
    10. ')}' → logprob: -8.941823959350586

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3977135419845581
    2. 'return' → logprob: -1.147713541984558
    3. ' return' → logprob: -4.647713661193848
    4. 'self' → logprob: -7.147713661193848
    5. '   ' → logprob: -8.272713661193848
    6. '(' → logprob: -9.397713661193848
    7. '(self' → logprob: -10.272713661193848
    8. 'def' → logprob: -11.772713661193848
    9. '     ' → logprob: -12.522713661193848
    10. ' self' → logprob: -12.522713661193848

Token 50: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015825895825400949
    2. ' return' → logprob: -6.626582622528076
    3. '   ' → logprob: -8.876582145690918
    4. '       ' → logprob: -9.501582145690918
    5. 'str' → logprob: -10.251582145690918
    6. '```' → logprob: -12.626582145690918
    7. '    ' → logprob: -13.501582145690918
    8. 'f' → logprob: -14.001582145690918
    9. '	return' → logprob: -14.751582145690918
    10. '`' → logprob: -14.876582145690918

Token 51: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0015048631466925144
    2. ' str' → logprob: -6.501504898071289
    3. 'f' → logprob: -13.001504898071289
    4. '(str' → logprob: -15.876504898071289
    5. '	str' → logprob: -16.75150489807129
    6. ' f' → logprob: -17.37650489807129
    7. ' ' → logprob: -18.62650489807129
    8. '=str' → logprob: -19.37650489807129
    9. '   ' → logprob: -19.50150489807129
    10. '```' → logprob: -20.62650489807129

Token 52: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. 'self' → logprob: -17.000001907348633
    4. '(s' → logprob: -18.500001907348633
    5. '((' → logprob: -19.500001907348633
    6. ' (' → logprob: -19.875001907348633
    7. '(sel' → logprob: -20.375001907348633
    8. ',self' → logprob: -20.750001907348633
    9. '(Self' → logprob: -20.875001907348633
    10. '(
' → logprob: -21.375001907348633

Token 53: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.625003814697266
    3. ').' → logprob: -14.750003814697266
    4. ' .' → logprob: -17.750003814697266
    5. ')' → logprob: -17.750003814697266
    6. '`.' → logprob: -20.250003814697266
    7. ')x' → logprob: -21.250003814697266
    8. 'x' → logprob: -21.250003814697266
    9. '.)' → logprob: -21.875003814697266
    10. '().' → logprob: -22.500003814697266

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. '   ' → logprob: -13.87500286102295
    3. ')
' → logprob: -14.12500286102295
    4. ' )' → logprob: -14.75000286102295
    5. ')return' → logprob: -15.12500286102295
    6. '))' → logprob: -16.625003814697266
    7. '}' → logprob: -16.750003814697266
    8. ')x' → logprob: -16.750003814697266
    9. '<|end|>' → logprob: -17.375003814697266
    10. '`)' → logprob: -17.500003814697266

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00038074489566497505
    2. '    
' → logprob: -8.375380516052246
    3. '+' → logprob: -10.375380516052246
    4. '
' → logprob: -10.625380516052246
    5. 'def' → logprob: -10.625380516052246
    6. ' def' → logprob: -10.750380516052246
    7. '```' → logprob: -11.000380516052246
    8. '+
' → logprob: -12.250380516052246
    9. '<|end|>' → logprob: -12.250380516052246
    10. ' 
' → logprob: -12.375380516052246

Token 56: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008101262152194977
    2. 'def' (adapté à ' def') → logprob: -5.633101463317871
    3. ' def' → logprob: -5.758101463317871
    4. ' ' → logprob: -6.883101463317871
    5. '    
' → logprob: -9.383101463317871
    6. '+' → logprob: -9.758101463317871
    7. '```' → logprob: -9.883101463317871
    8. '  ' → logprob: -10.758101463317871
    9. '	def' → logprob: -10.758101463317871
    10. '
' → logprob: -10.758101463317871

Token 57: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16735957562923431
    2. '__' → logprob: -3.1673595905303955
    3. 'add' → logprob: -3.1673595905303955
    4. ' ' → logprob: -3.7923595905303955
    5. '_add' → logprob: -4.167359352111816
    6. '+' → logprob: -4.167359352111816
    7. ' add' → logprob: -5.042359352111816
    8. ' +' → logprob: -5.792359352111816
    9. 'pow' → logprob: -6.042359352111816
    10. ' ' → logprob: -6.417359352111816

Token 58: 'repr' (ID: 67002)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.006463474594056606
    2. 'pow' → logprob: -5.381463527679443
    3. 'mul' → logprob: -6.631463527679443
    4. 'eq' → logprob: -8.506463050842285
    5. 'int' → logprob: -8.881463050842285
    6. 'def' → logprob: -9.506463050842285
    7. 'init' → logprob: -9.881463050842285
    8. '(add' → logprob: -11.506463050842285
    9. '```' → logprob: -11.506463050842285
    10. 'r' → logprob: -11.756463050842285

Token 59: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001991205383092165
    2. '__' → logprob: -6.251991271972656
    3. '__('' → logprob: -10.876991271972656
    4. '(self' → logprob: -11.126991271972656
    5. '__(
' → logprob: -11.126991271972656
    6. '__((' → logprob: -11.626991271972656
    7. '(' → logprob: -12.876991271972656
    8. '_(' → logprob: -13.376991271972656
    9. '__("' → logprob: -14.126991271972656
    10. '__.__' → logprob: -15.751991271972656

Token 60: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3160683214664459
    2. 'self' → logprob: -1.3160682916641235
    3. ')' → logprob: -6.691068172454834
    4. '(' → logprob: -6.941068172454834
    5. ')(' → logprob: -7.816068172454834
    6. '__(' → logprob: -9.191068649291992
    7. ' self' → logprob: -9.691068649291992
    8. '   ' → logprob: -12.316068649291992
    9. ',self' → logprob: -12.691068649291992
    10. ' (' → logprob: -13.066068649291992

Token 61: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7555478811264038
    2. '(self' → logprob: -1.0055478811264038
    3. 'self' → logprob: -2.6305480003356934
    4. ',' → logprob: -2.6305480003356934
    5. ')(' → logprob: -4.755548000335693
    6. '(' → logprob: -5.505548000335693
    7. '__(' → logprob: -5.630548000335693
    8. ',self' → logprob: -7.005548000335693
    9. '   ' → logprob: -7.130548000335693
    10. '__' → logprob: -7.255548000335693

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40332743525505066
    2. 'self' → logprob: -1.153327465057373
    3. '   ' → logprob: -4.903327465057373
    4. ' self' → logprob: -5.903327465057373
    5. 'def' → logprob: -6.028327465057373
    6. 'return' → logprob: -6.028327465057373
    7. '(self' → logprob: -6.903327465057373
    8. ' return' → logprob: -8.903326988220215
    9. '           ' → logprob: -9.278326988220215
    10. '(' → logprob: -10.653326988220215

Token 63: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0042505390010774136
    2. 'self' → logprob: -6.129250526428223
    3. ' return' → logprob: -6.879250526428223
    4. '       ' → logprob: -7.129250526428223
    5. 'str' → logprob: -9.129250526428223
    6. 'f' → logprob: -9.629250526428223
    7. '   ' → logprob: -10.004250526428223
    8. 'def' → logprob: -12.254250526428223
    9. ' f' → logprob: -13.254250526428223
    10. '{return' → logprob: -13.504250526428223

Token 64: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.48031601309776306
    2. 'f' → logprob: -1.2303160429000854
    3. ' f' → logprob: -2.730315923690796
    4. ' str' → logprob: -3.730315923690796
    5. 'self' → logprob: -10.730316162109375
    6. ' ' → logprob: -12.980316162109375
    7. 'Str' → logprob: -13.105316162109375
    8. ' self' → logprob: -14.355316162109375
    9. '	str' → logprob: -15.105316162109375
    10. '(str' → logprob: -15.230316162109375

Token 65: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.12500286102295
    3. 'self' → logprob: -14.37500286102295
    4. '(s' → logprob: -16.250001907348633
    5. '(sel' → logprob: -18.000001907348633
    6. '(type' → logprob: -18.875001907348633
    7. '(Mod' → logprob: -19.125001907348633
    8. '((' → logprob: -19.750001907348633
    9. '[self' → logprob: -20.125001907348633
    10. '(int' → logprob: -20.125001907348633

Token 66: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002233245177194476
    2. '.' → logprob: -8.625223159790039
    3. ').' → logprob: -10.250223159790039
    4. ')' → logprob: -12.250223159790039
    5. ' .' → logprob: -13.125223159790039
    6. 'self' → logprob: -14.500223159790039
    7. '(x' → logprob: -15.125223159790039
    8. ' ' → logprob: -15.125223159790039
    9. '   ' → logprob: -16.37522315979004
    10. '(self' → logprob: -16.75022315979004

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. '   ' → logprob: -12.750006675720215
    3. '}' → logprob: -13.375006675720215
    4. ')}' → logprob: -14.125006675720215
    5. ')
' → logprob: -14.250006675720215
    6. '))' → logprob: -15.375006675720215
    7. ' )' → logprob: -16.3750057220459
    8. '),' → logprob: -16.5000057220459
    9. ')}}' → logprob: -16.6250057220459
    10. ')return' → logprob: -17.2500057220459

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019173922191839665
    2. '    
' → logprob: -9.250191688537598
    3. ' def' → logprob: -10.875191688537598
    4. '+' → logprob: -11.000191688537598
    5. '```' → logprob: -11.000191688537598
    6. 'def' → logprob: -11.125191688537598
    7. ' ' → logprob: -12.500191688537598
    8. '*' → logprob: -12.500191688537598
    9. ' 
' → logprob: -12.750191688537598
    10. '<|end|>' → logprob: -13.000191688537598

Token 69: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03967296704649925
    2. 'def' (adapté à ' def') → logprob: -3.9146728515625
    3. ' def' → logprob: -4.0396728515625
    4. ' ' → logprob: -7.1646728515625
    5. '+' → logprob: -8.6646728515625
    6. '    
' → logprob: -8.7896728515625
    7. '```' → logprob: -9.7896728515625
    8. '  ' → logprob: -10.5396728515625
    9. ' 
' → logprob: -10.6646728515625
    10. '	def' → logprob: -10.6646728515625

Token 70: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04393843188881874
    2. '__' → logprob: -3.668938398361206
    3. ' ' → logprob: -4.168938636779785
    4. '_add' → logprob: -7.293938636779785
    5. ' _' → logprob: -8.043938636779785
    6. ' add' → logprob: -8.043938636779785
    7. ' ' → logprob: -8.918938636779785
    8. 'add' → logprob: -9.293938636779785
    9. ' def' → logprob: -9.418938636779785
    10. '   ' → logprob: -9.668938636779785

Token 71: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.11377622932195663
    2. 'mul' → logprob: -2.488776206970215
    3. 'pow' → logprob: -3.738776206970215
    4. 'eq' → logprob: -8.238776206970215
    5. 'flo' → logprob: -8.488776206970215
    6. 'init' → logprob: -9.113776206970215
    7. 'int' → logprob: -9.738776206970215
    8. 'rm' → logprob: -10.863776206970215
    9. 'r' → logprob: -10.863776206970215
    10. 'mod' → logprob: -11.113776206970215

Token 72: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019379158038645983
    2. '__' → logprob: -6.2519378662109375
    3. '(self' → logprob: -12.501937866210938
    4. '__('' → logprob: -13.126937866210938
    5. '_(' → logprob: -13.376937866210938
    6. '__(
' → logprob: -13.876937866210938
    7. '__((' → logprob: -14.376937866210938
    8. '_' → logprob: -15.501937866210938
    9. '(' → logprob: -16.001937866210938
    10. '__(*' → logprob: -16.376937866210938

Token 73: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.061054359131958e-06
    2. ' self' → logprob: -11.750007629394531
    3. ' ' → logprob: -17.12500762939453
    4. 'other' → logprob: -17.75000762939453
    5. '(self' → logprob: -18.12500762939453
    6. '   ' → logprob: -18.12500762939453
    7. ',' → logprob: -19.00000762939453
    8. '       ' → logprob: -20.12500762939453
    9. ',self' → logprob: -20.12500762939453
    10. '	self' → logprob: -20.50000762939453

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0070375241339206696
    2. ' ,' → logprob: -5.00703763961792
    3. ',self' → logprob: -8.882037162780762
    4. '(self' → logprob: -9.382037162780762
    5. 'self' → logprob: -9.382037162780762
    6. ' ' → logprob: -12.882037162780762
    7. ')' → logprob: -12.882037162780762
    8. ')(' → logprob: -13.132037162780762
    9. '_,' → logprob: -13.257037162780762
    10. '       ' → logprob: -13.632037162780762

Token 75: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.31331318616867065
    2. ' other' → logprob: -1.3133132457733154
    3. 'self' → logprob: -9.938313484191895
    4. ' self' → logprob: -13.563313484191895
    5. 'Other' → logprob: -14.188313484191895
    6. 'o' → logprob: -14.938313484191895
    7. ' o' → logprob: -15.063313484191895
    8. ' ' → logprob: -15.313313484191895
    9. '(other' → logprob: -15.438313484191895
    10. '_other' → logprob: -15.938313484191895

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016206118743866682
    2. ':' → logprob: -9.500162124633789
    3. '):
' → logprob: -10.000162124633789
    4. ' ):' → logprob: -10.750162124633789
    5. ')' → logprob: -11.625162124633789
    6. ',' → logprob: -12.250162124633789
    7. 'self' → logprob: -12.875162124633789
    8. '       ' → logprob: -13.125162124633789
    9. '   ' → logprob: -14.000162124633789
    10. '}:' → logprob: -15.375162124633789

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19465674459934235
    2. '        ' → logprob: -2.9446568489074707
    3. '    ' → logprob: -3.3196568489074707
    4. ' return' → logprob: -3.8196568489074707
    5. '<|end|>' → logprob: -4.069656848907471
    6. ' ' → logprob: -4.319656848907471
    7. ' 
' → logprob: -5.069656848907471
    8. ':' → logprob: -5.444656848907471
    9. 'return' → logprob: -5.444656848907471
    10. '        
' → logprob: -5.694656848907471

Token 78: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.1357496827840805
    2. ' Mod' → logprob: -2.385749578475952
    3. 'return' (adapté à ' return') → logprob: -4.135749816894531
    4. '(Mod' → logprob: -4.635749816894531
    5. ' return' → logprob: -4.760749816894531
    6. 'self' → logprob: -8.260749816894531
    7. '       ' → logprob: -9.010749816894531
    8. '   ' → logprob: -9.385749816894531
    9. '_mod' → logprob: -10.135749816894531
    10. '(' → logprob: -10.260749816894531

Token 79: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0006324975984171033
    2. ' Mod' → logprob: -7.375632286071777
    3. '(Mod' → logprob: -12.625632286071777
    4. 'self' → logprob: -14.000632286071777
    5. 'Mo' → logprob: -14.375632286071777
    6. 'MOD' → logprob: -15.375632286071777
    7. '_Mod' → logprob: -15.375632286071777
    8. 'Modulo' → logprob: -15.750632286071777
    9. ' ' → logprob: -16.250633239746094
    10. 'mod' → logprob: -16.250633239746094

Token 80: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.1756367712223437e-05
    2. 'int' → logprob: -11.375011444091797
    3. ' Int' → logprob: -17.500011444091797
    4. 'INT' → logprob: -17.875011444091797
    5. '	Int' → logprob: -17.875011444091797
    6. '_int' → logprob: -18.250011444091797
    7. '[Int' → logprob: -18.250011444091797
    8. '<Int' → logprob: -18.500011444091797
    9. 'Ints' → logprob: -19.000011444091797
    10. 'In' → logprob: -19.375011444091797

Token 81: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029777219519019127
    2. '((' → logprob: -3.5297772884368896
    3. '(' → logprob: -10.529777526855469
    4. 'self' → logprob: -17.15477752685547
    5. '(((' → logprob: -17.52977752685547
    6. ' (' → logprob: -17.65477752685547
    7. '(max' → logprob: -19.65477752685547
    8. '(this' → logprob: -19.90477752685547
    9. '(min' → logprob: -20.27977752685547
    10. '(str' → logprob: -20.77977752685547

Token 82: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019389885710552335
    2. '.' → logprob: -6.251938819885254
    3. ').' → logprob: -12.001938819885254
    4. ' .' → logprob: -12.501938819885254
    5. 'x' → logprob: -15.251938819885254
    6. ' ' → logprob: -16.50193977355957
    7. '].' → logprob: -16.87693977355957
    8. '`.' → logprob: -17.00193977355957
    9. '+.' → logprob: -17.25193977355957
    10. '..' → logprob: -18.25193977355957

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132645785808563
    2. ' +' → logprob: -1.3132646083831787
    3. '+self' → logprob: -13.438264846801758
    4. ' ' → logprob: -13.938264846801758
    5. '+(' → logprob: -16.063264846801758
    6. ' plus' → logprob: -16.188264846801758
    7. '＋' → logprob: -16.688264846801758
    8. '+b' → logprob: -16.813264846801758
    9. '+B' → logprob: -17.188264846801758
    10. '+
' → logprob: -17.188264846801758

Token 84: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3868793845176697
    2. 'other' → logprob: -1.1368794441223145
    3. '(other' → logprob: -11.761878967285156
    4. ' ' → logprob: -14.761878967285156
    5. 'Other' → logprob: -16.136878967285156
    6. '_other' → logprob: -17.261878967285156
    7. '.other' → logprob: -17.636878967285156
    8. ' (' → logprob: -18.386878967285156
    9. ' Other' → logprob: -18.511878967285156
    10. 'others' → logprob: -18.761878967285156

Token 85: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.05494581535458565
    2. '.' → logprob: -2.929945707321167
    3. ' .' → logprob: -10.679945945739746
    4. ').' → logprob: -10.804945945739746
    5. ' ' → logprob: -11.929945945739746
    6. '`.' → logprob: -12.804945945739746
    7. ')' → logprob: -12.929945945739746
    8. 'x' → logprob: -13.179945945739746
    9. '".' → logprob: -14.179945945739746
    10. '._' → logprob: -14.179945945739746

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016182278341148049
    2. ' )' → logprob: -8.750162124633789
    3. ')
' → logprob: -13.125162124633789
    4. ')return' → logprob: -15.000162124633789
    5. '<|end|>' → logprob: -15.000162124633789
    6. '))' → logprob: -15.750162124633789
    7. '   ' → logprob: -16.00016212463379
    8. ')

' → logprob: -16.25016212463379
    9. '<|end|>' → logprob: -16.37516212463379
    10. '),' → logprob: -17.12516212463379

Token 87: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0037454520352184772
    2. 'is' → logprob: -5.6287455558776855
    3. ' type' → logprob: -9.128745079040527
    4. 'type' → logprob: -10.503745079040527
    5. ' hasattr' → logprob: -12.128745079040527
    6. ' ' → logprob: -13.128745079040527
    7. '  ' → logprob: -14.503745079040527
    8. 'has' → logprob: -14.628745079040527
    9. '   ' → logprob: -14.628745079040527
    10. '    ' → logprob: -15.253745079040527

Token 89: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.735893965815194e-05
    2. 'other' → logprob: -11.000017166137695
    3. ' other' → logprob: -14.375017166137695
    4. 'Other' → logprob: -17.125017166137695
    5. '(' → logprob: -17.375017166137695
    6. '(self' → logprob: -19.375017166137695
    7. ' (' → logprob: -20.000017166137695
    8. ' ' → logprob: -21.000017166137695
    9. '_other' → logprob: -21.000017166137695
    10. '.other' → logprob: -21.000017166137695

Token 90: ',' (ID: 11)
  Prédit: '(Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Mod' → logprob: -0.2657172679901123
    2. '(' → logprob: -1.5157172679901123
    3. ')' → logprob: -5.015717506408691
    4. ' else' → logprob: -6.140717506408691
    5. ' (' → logprob: -6.390717506408691
    6. '(other' → logprob: -7.140717506408691
    7. ',' → logprob: -7.390717506408691
    8. 'else' → logprob: -7.515717506408691
    9. '(B' → logprob: -7.765717506408691
    10. '(self' → logprob: -7.890717506408691

Token 91: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.06212587282061577
    2. ' Mod' → logprob: -2.8121259212493896
    3. '(Mod' → logprob: -8.812126159667969
    4. ' ' → logprob: -11.937126159667969
    5. 'mod' → logprob: -14.437126159667969
    6. '  ' → logprob: -14.812126159667969
    7. 'Modulo' → logprob: -14.812126159667969
    8. 'MOD' → logprob: -15.062126159667969
    9. '_Mod' → logprob: -15.062126159667969
    10. '.Mod' → logprob: -15.562126159667969

Token 92: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.034592388459714e-06
    2. 'int' → logprob: -12.125005722045898
    3. 'nt' → logprob: -15.750005722045898
    4. '	Int' → logprob: -16.0000057220459
    5. ' Int' → logprob: -16.3750057220459
    6. 'In' → logprob: -16.5000057220459
    7. '<Int' → logprob: -18.0000057220459
    8. 'I' → logprob: -18.0000057220459
    9. '_Int' → logprob: -18.0000057220459
    10. 'INT' → logprob: -18.0000057220459

Token 93: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11884937435388565
    2. 'else' → logprob: -2.368849277496338
    3. ')' → logprob: -3.993849277496338
    4. ' )' → logprob: -10.993849754333496
    5. '	else' → logprob: -11.118849754333496
    6. ' ' → logprob: -12.868849754333496
    7. '        ' → logprob: -13.618849754333496
    8. '       ' → logprob: -13.743849754333496
    9. '<|end|>' → logprob: -14.118849754333496
    10. ' 
' → logprob: -14.493849754333496

Token 94: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.02979273721575737
    2. 'else' → logprob: -3.5297927856445312
    3. '	else' → logprob: -10.654792785644531
    4. '       ' → logprob: -11.529792785644531
    5. '        ' → logprob: -12.404792785644531
    6. ' ' → logprob: -13.029792785644531
    7. '   ' → logprob: -14.654792785644531
    8. '    ' → logprob: -14.654792785644531
    9. '_else' → logprob: -15.029792785644531
    10. '+' → logprob: -15.154792785644531

Token 95: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.435412734746933
    2. 'Mod' → logprob: -1.0604127645492554
    3. ' other' → logprob: -6.060412883758545
    4. '(Mod' → logprob: -6.685412883758545
    5. ' ' → logprob: -7.185412883758545
    6. 'self' → logprob: -7.310412883758545
    7. ' self' → logprob: -7.435412883758545
    8. 'other' → logprob: -7.435412883758545
    9. ' (' → logprob: -8.685412406921387
    10. '(other' → logprob: -8.935412406921387

Token 96: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00019257364328950644
    2. 'int' → logprob: -9.000192642211914
    3. ' ' → logprob: -10.750192642211914
    4. ' Int' → logprob: -11.250192642211914
    5. '	Int' → logprob: -12.375192642211914
    6. '<|end|>' → logprob: -12.375192642211914
    7. '_Int' → logprob: -12.500192642211914
    8. 'Ints' → logprob: -12.500192642211914
    9. '.Int' → logprob: -12.625192642211914
    10. 'In' → logprob: -12.625192642211914

Token 97: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4790150225162506
    2. '(self' → logprob: -0.9790149927139282
    3. '(other' → logprob: -5.354014873504639
    4. '(s' → logprob: -9.104015350341797
    5. '((' → logprob: -10.229015350341797
    6. '(
' → logprob: -10.479015350341797
    7. ' (' → logprob: -11.729015350341797
    8. '(o' → logprob: -12.854015350341797
    9. '(this' → logprob: -13.354015350341797
    10. '('' → logprob: -13.479015350341797

Token 98: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019366045016795397
    2. '.' → logprob: -6.251936435699463
    3. 'x' → logprob: -12.001936912536621
    4. ' .' → logprob: -13.501936912536621
    5. '.
' → logprob: -15.876936912536621
    6. ' ' → logprob: -16.126935958862305
    7. ').' → logprob: -16.251935958862305
    8. ')' → logprob: -17.251935958862305
    9. ' x' → logprob: -17.251935958862305
    10. ',' → logprob: -17.751935958862305

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.033647771924734116
    2. '+' → logprob: -3.4086477756500244
    3. ' ' → logprob: -13.783647537231445
    4. ' +
' → logprob: -15.408647537231445
    5. ' ' → logprob: -15.658647537231445
    6. ')' → logprob: -16.033647537231445
    7. ' plus' → logprob: -16.158647537231445
    8. '+x' → logprob: -16.908647537231445
    9. '+self' → logprob: -17.158647537231445
    10. ')+' → logprob: -17.283647537231445

Token 100: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5759395360946655
    2. 'other' → logprob: -0.8259395360946655
    3. '(other' → logprob: -16.325939178466797
    4. ' ' → logprob: -17.325939178466797
    5. 'int' → logprob: -18.325939178466797
    6. ' oth' → logprob: -19.075939178466797
    7. '
' → logprob: -19.200939178466797
    8. ' int' → logprob: -19.200939178466797
    9. 'Other' → logprob: -19.575939178466797
    10. 'othe' → logprob: -20.075939178466797

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740960896015167
    2. ' )' → logprob: -0.9740960597991943
    3. '<|end|>' → logprob: -11.849096298217773
    4. ' )
' → logprob: -11.974096298217773
    5. ' ' → logprob: -13.224096298217773
    6. ')
' → logprob: -14.099096298217773
    7. ' ' → logprob: -14.099096298217773
    8. ' )

' → logprob: -14.724096298217773
    9. ')return' → logprob: -14.974096298217773
    10. ' ))' → logprob: -15.224096298217773

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0132677610963583
    2. '__' → logprob: -4.388267993927002
    3. ' ' → logprob: -7.513267993927002
    4. ' _' → logprob: -8.638267517089844
    5. '_add' → logprob: -11.388267517089844
    6. ' def' → logprob: -11.888267517089844
    7. '_' → logprob: -12.763267517089844
    8. ' ___' → logprob: -12.763267517089844
    9. ' ' → logprob: -13.138267517089844
    10. '___' → logprob: -13.388267517089844

Token 105: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.006839929614216089
    2. 'r' → logprob: -5.006839752197266
    3. 'mul' → logprob: -9.256839752197266
    4. 'eq' → logprob: -11.381839752197266
    5. 'add' → logprob: -11.631839752197266
    6. 'pow' → logprob: -12.131839752197266
    7. 'i' → logprob: -13.381839752197266
    8. ' sub' → logprob: -14.506839752197266
    9. 'mod' → logprob: -15.006839752197266
    10. '_sub' → logprob: -15.006839752197266

Token 106: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008265270851552486
    2. '(self' → logprob: -5.133265495300293
    3. '(' → logprob: -6.383265495300293
    4. '__' → logprob: -7.758265495300293
    5. '__(
' → logprob: -8.758265495300293
    6. '__((' → logprob: -10.258265495300293
    7. '_(' → logprob: -11.383265495300293
    8. '__('' → logprob: -11.758265495300293
    9. '__("' → logprob: -13.133265495300293
    10. '_' → logprob: -13.633265495300293

Token 107: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.822646693966817e-06
    2. '(self' → logprob: -12.125007629394531
    3. ' self' → logprob: -13.000007629394531
    4. 'def' → logprob: -17.00000762939453
    5. ')' → logprob: -17.87500762939453
    6. 'other' → logprob: -18.75000762939453
    7. '	self' → logprob: -19.25000762939453
    8. '   ' → logprob: -19.87500762939453
    9. '       ' → logprob: -20.12500762939453
    10. '0' → logprob: -20.12500762939453

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056001294404268265
    2. '(self' → logprob: -3.0560011863708496
    3. 'self' → logprob: -5.80600118637085
    4. '(' → logprob: -6.05600118637085
    5. ' ,' → logprob: -7.43100118637085
    6. '__(' → logprob: -8.056001663208008
    7. ')' → logprob: -8.431001663208008
    8. '-' → logprob: -8.556001663208008
    9. ',self' → logprob: -8.556001663208008
    10. ',
' → logprob: -8.681001663208008

Token 109: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5759773850440979
    2. ' other' → logprob: -0.8259773850440979
    3. '(other' → logprob: -10.450977325439453
    4. 'self' → logprob: -12.200977325439453
    5. 'Other' → logprob: -12.700977325439453
    6. ' self' → logprob: -14.825977325439453
    7. '_other' → logprob: -15.075977325439453
    8. '.other' → logprob: -15.700977325439453
    9. ' ' → logprob: -17.200977325439453
    10. ' andere' → logprob: -18.200977325439453

Token 110: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6336396932601929
    2. ',' → logprob: -1.3836396932601929
    3. '       ' → logprob: -2.3836398124694824
    4. 'self' → logprob: -2.8836398124694824
    5. ')' → logprob: -3.3836398124694824
    6. '):' → logprob: -4.258639812469482
    7. ')(' → logprob: -4.758639812469482
    8. '(' → logprob: -5.008639812469482
    9. '   ' → logprob: -6.133639812469482
    10. '):
' → logprob: -6.258639812469482

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020263081416487694
    2. '(' → logprob: -4.145263195037842
    3. '(self' → logprob: -5.895263195037842
    4. ' return' → logprob: -7.270263195037842
    5. 'return' → logprob: -8.520262718200684
    6. ' (' → logprob: -8.520262718200684
    7. ',' → logprob: -9.020262718200684
    8. '(
' → logprob: -9.520262718200684
    9. ':' → logprob: -9.895262718200684
    10. '   ' → logprob: -10.270262718200684

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08721327036619186
    2. ' return' → logprob: -2.5872132778167725
    3. 'Mod' → logprob: -4.837213039398193
    4. '       ' → logprob: -8.587213516235352
    5. ' Mod' → logprob: -8.712213516235352
    6. '   ' → logprob: -11.962213516235352
    7. '(Mod' → logprob: -13.712213516235352
    8. 'def' → logprob: -14.587213516235352
    9. 'Return' → logprob: -14.962213516235352
    10. '           ' → logprob: -16.33721351623535

Token 113: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.1603594869375229
    2. ' Mod' → logprob: -1.910359501838684
    3. '(Mod' → logprob: -8.910359382629395
    4. '_Mod' → logprob: -15.410359382629395
    5. '.Mod' → logprob: -16.91036033630371
    6. 'self' → logprob: -17.16036033630371
    7. 'Modulo' → logprob: -17.41036033630371
    8. 'MOD' → logprob: -17.66036033630371
    9. 'Mo' → logprob: -17.78536033630371
    10. '_mod' → logprob: -17.91036033630371

Token 114: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -14.875
    3. '_int' → logprob: -19.125
    4. ' Int' → logprob: -19.375
    5. '(Int' → logprob: -19.5
    6. '	Int' → logprob: -19.875
    7. '[Int' → logprob: -19.875
    8. 'INT' → logprob: -20.5
    9. '_Int' → logprob: -20.75
    10. '_INT' → logprob: -20.75

Token 115: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. 'self' → logprob: -16.375036239624023
    4. '(
' → logprob: -16.750036239624023
    5. '(s' → logprob: -18.625036239624023
    6. ' (' → logprob: -18.750036239624023
    7. '(sel' → logprob: -19.500036239624023
    8. '((' → logprob: -20.375036239624023
    9. '(Self' → logprob: -20.625036239624023
    10. '(this' → logprob: -20.625036239624023

Token 116: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003611708991229534
    2. '.' → logprob: -5.6286115646362305
    3. ' .' → logprob: -12.00361156463623
    4. ').' → logprob: -12.87861156463623
    5. 'x' → logprob: -13.12861156463623
    6. ')' → logprob: -15.25361156463623
    7. '<|end|>' → logprob: -15.75361156463623
    8. ' ' → logprob: -16.003612518310547
    9. '```' → logprob: -16.003612518310547
    10. '`.' → logprob: -16.753612518310547

Token 117: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001933992956764996
    2. '-' → logprob: -6.251934051513672
    3. ' ' → logprob: -12.876934051513672
    4. '-self' → logprob: -13.251934051513672
    5. ' ' → logprob: -14.001934051513672
    6. '<|end|>' → logprob: -16.876934051513672
    7. ' -
' → logprob: -17.001934051513672
    8. ',' → logprob: -18.501934051513672
    9. '-x' → logprob: -18.501934051513672
    10. ' –' → logprob: -18.501934051513672

Token 118: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.34138891100883484
    2. ' other' → logprob: -1.3413889408111572
    3. '(other' → logprob: -3.5913889408111572
    4. ' (' → logprob: -8.716388702392578
    5. '(' → logprob: -11.591388702392578
    6. 'Other' → logprob: -14.216388702392578
    7. '.other' → logprob: -14.591388702392578
    8. '_other' → logprob: -14.716388702392578
    9. '<|end|>' → logprob: -14.966388702392578
    10. ' ' → logprob: -15.466388702392578

Token 119: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.01108625903725624
    2. '.' → logprob: -4.511086463928223
    3. ' .' → logprob: -10.636086463928223
    4. ')' → logprob: -11.761086463928223
    5. ').' → logprob: -12.511086463928223
    6. '[' → logprob: -13.511086463928223
    7. '.
' → logprob: -15.136086463928223
    8. '<|end|>' → logprob: -15.261086463928223
    9. ',' → logprob: -15.511086463928223
    10. ' ' → logprob: -15.886086463928223

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003078142472077161
    2. ' if' → logprob: -8.1253080368042
    3. 'if' → logprob: -12.1253080368042
    4. ' )' → logprob: -12.1253080368042
    5. '   ' → logprob: -14.3753080368042
    6. ')
' → logprob: -15.2503080368042
    7. '       ' → logprob: -16.750307083129883
    8. ' ' → logprob: -17.000307083129883
    9. '),' → logprob: -17.250307083129883
    10. ')

' → logprob: -18.000307083129883

Token 121: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0013545217225328088
    2. 'if' → logprob: -6.626354694366455
    3. '   ' → logprob: -11.251354217529297
    4. ')' → logprob: -12.126354217529297
    5. ' ' → logprob: -12.626354217529297
    6. '       ' → logprob: -12.876354217529297
    7. '<|end|>' → logprob: -12.876354217529297
    8. '    ' → logprob: -14.251354217529297
    9. '	if' → logprob: -14.876354217529297
    10. '  ' → logprob: -15.126354217529297

Token 122: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0022746773902326822
    2. 'is' → logprob: -6.127274513244629
    3. '(is' → logprob: -9.502274513244629
    4. ' (' → logprob: -11.127274513244629
    5. '(' → logprob: -16.127275466918945
    6. ' is' → logprob: -17.127275466918945
    7. ' ' → logprob: -17.377275466918945
    8. 'instance' → logprob: -18.627275466918945
    9. ' other' → logprob: -18.752275466918945
    10. ' hasattr' → logprob: -18.877275466918945

Token 123: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0001855406299000606
    2. '(' → logprob: -8.6251859664917
    3. 'other' → logprob: -12.2501859664917
    4. 'Other' → logprob: -14.3751859664917
    5. ' other' → logprob: -15.1251859664917
    6. '<|end|>' → logprob: -16.000185012817383
    7. '(
' → logprob: -16.125185012817383
    8. '_other' → logprob: -18.250185012817383
    9. '(previous' → logprob: -18.625185012817383
    10. '(object' → logprob: -18.750185012817383

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010163593105971813
    2. ',
' → logprob: -9.750102043151855
    3. ' ,' → logprob: -11.000102043151855
    4. 'other' → logprob: -11.750102043151855
    5. '(other' → logprob: -11.875102043151855
    6. '<|end|>' → logprob: -12.750102043151855
    7. ' other' → logprob: -13.375102043151855
    8. '.' → logprob: -13.375102043151855
    9. '.other' → logprob: -13.750102043151855
    10. ')' → logprob: -13.875102043151855

Token 125: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.04859498515725136
    2. ' Mod' → logprob: -3.0485949516296387
    3. '(Mod' → logprob: -12.173595428466797
    4. 'Other' → logprob: -13.923595428466797
    5. 'other' → logprob: -14.423595428466797
    6. ' other' → logprob: -15.298595428466797
    7. '_Mod' → logprob: -15.423595428466797
    8. '.Mod' → logprob: -15.798595428466797
    9. '_mod' → logprob: -15.798595428466797
    10. 'MOD' → logprob: -16.298595428466797

Token 126: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -7.541112427134067e-05
    2. 'int' → logprob: -9.500075340270996
    3. 'INT' → logprob: -15.625075340270996
    4. ' Int' → logprob: -15.875075340270996
    5. 'In' → logprob: -17.250076293945312
    6. '(Int' → logprob: -17.250076293945312
    7. '_int' → logprob: -17.875076293945312
    8. 'I' → logprob: -17.875076293945312
    9. '[Int' → logprob: -18.000076293945312
    10. '	Int' → logprob: -18.000076293945312

Token 127: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7764848470687866
    2. 'else' → logprob: -0.7764848470687866
    3. ')' → logprob: -2.526484966278076
    4. ',' → logprob: -11.901484489440918
    5. '   ' → logprob: -12.401484489440918
    6. '),' → logprob: -12.776484489440918
    7. ' ' → logprob: -13.151484489440918
    8. '        ' → logprob: -13.776484489440918
    9. ' )' → logprob: -13.901484489440918
    10. '	else' → logprob: -14.151484489440918

Token 128: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4741072356700897
    2. ' else' → logprob: -0.9741072654724121
    3. '	else' → logprob: -11.224106788635254
    4. '        ' → logprob: -11.599106788635254
    5. '       ' → logprob: -12.474106788635254
    6. '         ' → logprob: -13.974106788635254
    7. ' ' → logprob: -14.349106788635254
    8. '    ' → logprob: -14.474106788635254
    9. '  ' → logprob: -14.974106788635254
    10. '   ' → logprob: -15.099106788635254

Token 129: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.024905117228627205
    2. 'Mod' → logprob: -4.024905204772949
    3. '(Mod' → logprob: -5.024905204772949
    4. ' (' → logprob: -9.77490520477295
    5. '(self' → logprob: -10.27490520477295
    6. ' self' → logprob: -10.27490520477295
    7. 'self' → logprob: -11.02490520477295
    8. '(' → logprob: -11.39990520477295
    9. ' ' → logprob: -12.89990520477295
    10. ' ' → logprob: -13.52490520477295

Token 130: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.9743012671824545e-05
    2. 'int' → logprob: -10.875020027160645
    3. ' Int' → logprob: -14.875020027160645
    4. 'INT' → logprob: -15.250020027160645
    5. '   ' → logprob: -17.000019073486328
    6. '_int' → logprob: -17.000019073486328
    7. 'In' → logprob: -17.375019073486328
    8. '(Int' → logprob: -17.625019073486328
    9. '_Int' → logprob: -18.000019073486328
    10. 'Ints' → logprob: -18.375019073486328

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. ' (' → logprob: -16.125709533691406
    4. '(
' → logprob: -16.625709533691406
    5. 'self' → logprob: -16.750709533691406
    6. '(s' → logprob: -17.875709533691406
    7. '(sel' → logprob: -19.250709533691406
    8. '((' → logprob: -19.500709533691406
    9. '(this' → logprob: -19.875709533691406
    10. '(Self' → logprob: -20.375709533691406

Token 132: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006089136004447937
    2. '.' → logprob: -7.500608921051025
    3. ' -' → logprob: -11.000608444213867
    4. '-' → logprob: -11.000608444213867
    5. ' .' → logprob: -11.875608444213867
    6. ')' → logprob: -11.875608444213867
    7. 'x' → logprob: -12.500608444213867
    8. '(x' → logprob: -12.875608444213867
    9. ').' → logprob: -14.625608444213867
    10. ',' → logprob: -15.000608444213867

Token 133: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012513656169176102
    2. '-' → logprob: -4.387513637542725
    3. ')' → logprob: -13.387514114379883
    4. ' ' → logprob: -13.512514114379883
    5. ' ' → logprob: -14.262514114379883
    6. '<|end|>' → logprob: -16.387514114379883
    7. ')-' → logprob: -16.637514114379883
    8. '+' → logprob: -16.762514114379883
    9. '-)' → logprob: -16.887514114379883
    10. '[' → logprob: -16.887514114379883

Token 134: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.3868715465068817
    2. 'other' → logprob: -1.136871576309204
    3. '(other' → logprob: -15.261871337890625
    4. 'Other' → logprob: -15.386871337890625
    5. '_other' → logprob: -18.011871337890625
    6. ' ' → logprob: -18.136871337890625
    7. '.other' → logprob: -18.761871337890625
    8. '其他' → logprob: -19.261871337890625
    9. ' oth' → logprob: -19.511871337890625
    10. ' Other' → logprob: -20.511871337890625

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -12.000011444091797
    3. ')
' → logprob: -13.000011444091797
    4. '<|end|>' → logprob: -14.125011444091797
    5. '[' → logprob: -14.750011444091797
    6. ')return' → logprob: -15.125011444091797
    7. '))' → logprob: -15.625011444091797
    8. 'Other' → logprob: -15.625011444091797
    9. ')x' → logprob: -15.750011444091797
    10. 'other' → logprob: -16.500011444091797

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027337539358995855
    2. ')' → logprob: -8.750273704528809
    3. '<|end|>' → logprob: -10.375273704528809
    4. '*' → logprob: -10.875273704528809
    5. ' ' → logprob: -11.250273704528809
    6. 'def' → logprob: -11.250273704528809
    7. '_' → logprob: -11.875273704528809
    8. '    
' → logprob: -12.250273704528809
    9. '...' → logprob: -12.500273704528809
    10. '#' → logprob: -12.625273704528809

Token 137: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024136442691087723
    2. 'def' (adapté à ' def') → logprob: -3.899136543273926
    3. ' def' → logprob: -6.399136543273926
    4. ' ' → logprob: -7.399136543273926
    5. ' 
' → logprob: -8.149136543273926
    6. '*' → logprob: -8.524136543273926
    7. '
' → logprob: -8.899136543273926
    8. '    
' → logprob: -8.899136543273926
    9. '  ' → logprob: -9.274136543273926
    10. ')' → logprob: -9.274136543273926

Token 138: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05515250563621521
    2. '__' → logprob: -2.930152416229248
    3. ' ' → logprob: -8.555152893066406
    4. '_mul' → logprob: -11.055152893066406
    5. ' ' → logprob: -11.305152893066406
    6. '"' → logprob: -11.680152893066406
    7. '.__' → logprob: -12.180152893066406
    8. ',' → logprob: -12.430152893066406
    9. ' _' → logprob: -12.430152893066406
    10. '  ' → logprob: -12.680152893066406

Token 139: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -1.2233183042553719e-05
    2. 'pow' → logprob: -11.500012397766113
    3. ' mul' → logprob: -13.500012397766113
    4. '_mul' → logprob: -14.625012397766113
    5. 'r' → logprob: -15.750012397766113
    6. 'mult' → logprob: -17.250011444091797
    7. 'm' → logprob: -17.250011444091797
    8. 'Mul' → logprob: -17.625011444091797
    9. 'rm' → logprob: -18.125011444091797
    10. 'mod' → logprob: -18.625011444091797

Token 140: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.007743505295366049
    2. '__' → logprob: -5.2577433586120605
    3. '__(
' → logprob: -7.0077433586120605
    4. '(self' → logprob: -7.5077433586120605
    5. '__((' → logprob: -8.007743835449219
    6. '(' → logprob: -8.507743835449219
    7. '<|end|>' → logprob: -8.632743835449219
    8. '__(*' → logprob: -8.757743835449219
    9. '__('' → logprob: -8.882743835449219
    10. '__("' → logprob: -10.382743835449219

Token 141: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16040609776973724
    2. 'other' → logprob: -1.9104061126708984
    3. ' self' → logprob: -9.660406112670898
    4. ' other' → logprob: -9.785406112670898
    5. '(self' → logprob: -10.160406112670898
    6. '(other' → logprob: -10.910406112670898
    7. 'Other' → logprob: -12.660406112670898
    8. '<|end|>' → logprob: -14.035406112670898
    9. '_other' → logprob: -14.910406112670898
    10. ' ' → logprob: -15.910406112670898

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3784973621368408
    2. '(self' → logprob: -1.2534973621368408
    3. '(' → logprob: -3.628497362136841
    4. ',self' → logprob: -6.628497123718262
    5. 'self' → logprob: -7.878497123718262
    6. ' (' → logprob: -8.003497123718262
    7. '<|end|>' → logprob: -8.128497123718262
    8. ' ,' → logprob: -8.128497123718262
    9. '(other' → logprob: -8.878497123718262
    10. '__(' → logprob: -10.003497123718262

Token 143: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.12693661451339722
    2. ' other' → logprob: -2.126936674118042
    3. '(other' → logprob: -12.376936912536621
    4. 'Other' → logprob: -12.751936912536621
    5. '_other' → logprob: -14.126936912536621
    6. '<|end|>' → logprob: -14.876936912536621
    7. 'self' → logprob: -15.876936912536621
    8. '.other' → logprob: -15.876936912536621
    9. 'OTHER' → logprob: -18.001935958862305
    10. ' andere' → logprob: -19.001935958862305

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08258478343486786
    2. ',' → logprob: -2.832584857940674
    3. '):
' → logprob: -4.082584857940674
    4. '(self' → logprob: -6.207584857940674
    5. 'self' → logprob: -6.957584857940674
    6. ':' → logprob: -8.707584381103516
    7. '       ' → logprob: -8.707584381103516
    8. ')' → logprob: -9.457584381103516
    9. '   ' → logprob: -10.082584381103516
    10. ' self' → logprob: -10.207584381103516

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007671024068258703
    2. ' return' → logprob: -7.250767230987549
    3. 'return' → logprob: -10.00076675415039
    4. '   ' → logprob: -12.62576675415039
    5. '(' → logprob: -13.12576675415039
    6. '<|end|>' → logprob: -13.12576675415039
    7. ' if' → logprob: -14.00076675415039
    8. '      ' → logprob: -14.12576675415039
    9. ' (' → logprob: -14.25076675415039
    10. ' ' → logprob: -14.50076675415039

Token 146: ' return' (ID: 622)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.3595653176307678
    2. 'return' (adapté à ' return') → logprob: -1.359565258026123
    3. ' return' → logprob: -3.734565258026123
    4. ' Mod' → logprob: -3.859565258026123
    5. '(Mod' → logprob: -8.234565734863281
    6. '       ' → logprob: -11.859565734863281
    7. ' ' → logprob: -12.734565734863281
    8. 'Return' → logprob: -12.859565734863281
    9. '_mod' → logprob: -13.984565734863281
    10. '.Mod' → logprob: -13.984565734863281

Token 147: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.5759624242782593
    2. 'Mod' → logprob: -0.8259624242782593
    3. '(Mod' → logprob: -10.82596206665039
    4. ' ' → logprob: -13.57596206665039
    5. '_Mod' → logprob: -14.45096206665039
    6. '_mod' → logprob: -15.07596206665039
    7. 'Modulo' → logprob: -15.45096206665039
    8. '.Mod' → logprob: -15.45096206665039
    9. ' Modi' → logprob: -15.95096206665039
    10. ' ' → logprob: -16.20096206665039

Token 148: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.173704271830502e-06
    2. 'int' → logprob: -12.87500286102295
    3. 'In' → logprob: -15.25000286102295
    4. 'I' → logprob: -16.750003814697266
    5. '	Int' → logprob: -16.875003814697266
    6. ' Int' → logprob: -17.000003814697266
    7. '_int' → logprob: -17.000003814697266
    8. 'Integer' → logprob: -17.375003814697266
    9. '<Int' → logprob: -17.625003814697266
    10. '_Int' → logprob: -18.000003814697266

Token 149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. 'self' → logprob: -16.0000057220459
    4. '(
' → logprob: -18.5000057220459
    5. '(s' → logprob: -19.0000057220459
    6. ' (' → logprob: -19.3750057220459
    7. ' self' → logprob: -20.0000057220459
    8. '(sel' → logprob: -20.0000057220459
    9. '(Self' → logprob: -20.6250057220459
    10. '*self' → logprob: -21.0000057220459

Token 150: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0036099248100072145
    2. '.' → logprob: -5.628610134124756
    3. ' .' → logprob: -11.753609657287598
    4. 'x' → logprob: -13.503609657287598
    5. '```' → logprob: -15.503609657287598
    6. ').' → logprob: -15.753609657287598
    7. ' ' → logprob: -16.503610610961914
    8. '.
' → logprob: -17.128610610961914
    9. 'self' → logprob: -17.878610610961914
    10. '.s' → logprob: -18.003610610961914

Token 151: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0788973867893219
    2. '*' → logprob: -2.578897476196289
    3. ' ' → logprob: -11.953897476196289
    4. ' ' → logprob: -13.953897476196289
    5. '*self' → logprob: -15.828897476196289
    6. '*object' → logprob: -16.57889747619629
    7. ' *
' → logprob: -17.57889747619629
    8. ' self' → logprob: -18.32889747619629
    9. '  ' → logprob: -18.45389747619629
    10. ' **' → logprob: -18.57889747619629

Token 152: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07891324907541275
    2. ' other' → logprob: -2.5789132118225098
    3. '(other' → logprob: -10.703913688659668
    4. '.other' → logprob: -14.578913688659668
    5. 'Other' → logprob: -14.953913688659668
    6. '_other' → logprob: -15.703913688659668
    7. '<|end|>' → logprob: -16.45391273498535
    8. ' ' → logprob: -18.57891273498535
    9. 'self' → logprob: -18.57891273498535
    10. ' andere' → logprob: -19.20391273498535

Token 153: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00249551422894001
    2. '.' → logprob: -6.002495288848877
    3. '<|end|>' → logprob: -11.127495765686035
    4. ' .' → logprob: -12.627495765686035
    5. 'x' → logprob: -14.252495765686035
    6. ').' → logprob: -15.002495765686035
    7. '.
' → logprob: -15.252495765686035
    8. '<|end|>' → logprob: -15.877495765686035
    9. ' ' → logprob: -16.50249481201172
    10. '.xhtml' → logprob: -16.87749481201172

Token 154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008267794037237763
    2. ' if' → logprob: -7.125826835632324
    3. 'if' → logprob: -11.250826835632324
    4. ' )' → logprob: -11.625826835632324
    5. '   ' → logprob: -16.250825881958008
    6. '       ' → logprob: -16.500825881958008
    7. '<|end|>' → logprob: -17.125825881958008
    8. '),' → logprob: -17.625825881958008
    9. 'If' → logprob: -17.625825881958008
    10. '}' → logprob: -18.250825881958008

Token 155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.002000130945816636
    2. 'if' → logprob: -6.252000331878662
    3. '<|end|>' → logprob: -9.626999855041504
    4. '   ' → logprob: -13.126999855041504
    5. '       ' → logprob: -13.376999855041504
    6. '<|end|>' → logprob: -14.251999855041504
    7. ')' → logprob: -14.501999855041504
    8. '	if' → logprob: -14.751999855041504
    9. ' ' → logprob: -15.626999855041504
    10. '    ' → logprob: -15.751999855041504

Token 156: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.005241106729954481
    2. 'is' → logprob: -5.2552409172058105
    3. '(is' → logprob: -11.880241394042969
    4. ' is' → logprob: -15.255241394042969
    5. ' other' → logprob: -16.75524139404297
    6. ' (' → logprob: -16.75524139404297
    7. 'other' → logprob: -18.38024139404297
    8. ' hasattr' → logprob: -18.75524139404297
    9. ' ' → logprob: -18.88024139404297
    10. '(' → logprob: -19.38024139404297

Token 157: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00037919526221230626
    2. 'other' → logprob: -8.50037956237793
    3. '(' → logprob: -8.75037956237793
    4. ' other' → logprob: -11.37537956237793
    5. 'Other' → logprob: -12.87537956237793
    6. '<|end|>' → logprob: -12.87537956237793
    7. '.other' → logprob: -15.50037956237793
    8. ' (' → logprob: -15.62537956237793
    9. '_other' → logprob: -16.00037956237793
    10. '(
' → logprob: -16.87537956237793

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.396757089532912e-05
    2. ',
' → logprob: -10.5000638961792
    3. '.' → logprob: -11.1250638961792
    4. ' ,' → logprob: -11.7500638961792
    5. '.,' → logprob: -11.8750638961792
    6. '<|end|>' → logprob: -13.0000638961792
    7. ')' → logprob: -13.5000638961792
    8. ',

' → logprob: -14.2500638961792
    9. '‌,' → logprob: -15.2500638961792
    10. ',.' → logprob: -15.5000638961792

Token 159: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.47419261932373047
    2. ' Mod' → logprob: -0.9741926193237305
    3. 'Other' → logprob: -9.72419261932373
    4. ' other' → logprob: -10.34919261932373
    5. 'other' → logprob: -11.47419261932373
    6. '(Mod' → logprob: -11.47419261932373
    7. 'mod' → logprob: -14.47419261932373
    8. '.Mod' → logprob: -14.59919261932373
    9. '_Mod' → logprob: -14.59919261932373
    10. ' Other' → logprob: -14.59919261932373

Token 160: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -6.2729995988775045e-06
    2. 'int' → logprob: -12.000006675720215
    3. ' Int' → logprob: -17.6250057220459
    4. 'In' → logprob: -17.8750057220459
    5. 'INT' → logprob: -18.0000057220459
    6. '_int' → logprob: -18.1250057220459
    7. '	Int' → logprob: -18.3750057220459
    8. 'Ints' → logprob: -18.7500057220459
    9. '[Int' → logprob: -19.7500057220459
    10. '(Int' → logprob: -19.7500057220459

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013788063079118729
    2. 'else' → logprob: -6.876379013061523
    3. ' else' → logprob: -8.001379013061523
    4. ' )' → logprob: -11.751379013061523
    5. 'other' → logprob: -14.126379013061523
    6. ' ' → logprob: -14.251379013061523
    7. ' other' → logprob: -14.501379013061523
    8. ')
' → logprob: -15.876379013061523
    9. '),' → logprob: -16.001379013061523
    10. '	else' → logprob: -16.251379013061523

Token 162: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6931576728820801
    2. 'else' → logprob: -0.6931576728820801
    3. '	else' → logprob: -11.568157196044922
    4. '        ' → logprob: -14.818157196044922
    5. ' ' → logprob: -15.818157196044922
    6. ')' → logprob: -16.318157196044922
    7. '#else' → logprob: -16.443157196044922
    8. '       ' → logprob: -16.693157196044922
    9. '_else' → logprob: -16.943157196044922
    10. '<|end|>' → logprob: -17.318157196044922

Token 163: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.31605640053749084
    2. 'Mod' → logprob: -1.3160563707351685
    3. '(Mod' → logprob: -5.941056251525879
    4. ' self' → logprob: -9.441056251525879
    5. 'self' → logprob: -9.566056251525879
    6. '(self' → logprob: -12.566056251525879
    7. ' (' → logprob: -13.316056251525879
    8. ' ' → logprob: -13.316056251525879
    9. '(' → logprob: -13.691056251525879
    10. ' Modi' → logprob: -14.191056251525879

Token 164: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.128163257315464e-07
    2. ' Int' → logprob: -16.625
    3. 'int' → logprob: -16.875
    4. 'I' → logprob: -17.5
    5. '	Int' → logprob: -18.0
    6. '(Int' → logprob: -18.625
    7. '<Int' → logprob: -18.625
    8. 'Ints' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '[Int' → logprob: -19.0

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0024762547109276056
    2. '(' → logprob: -6.002476215362549
    3. '(s' → logprob: -14.877476692199707
    4. '(sel' → logprob: -16.25247573852539
    5. '(
' → logprob: -16.62747573852539
    6. '(x' → logprob: -18.87747573852539
    7. '(this' → logprob: -18.87747573852539
    8. '(se' → logprob: -18.87747573852539
    9. 'self' → logprob: -19.00247573852539
    10. '(space' → logprob: -19.12747573852539

Token 166: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003229875583201647
    2. '.' → logprob: -5.753230094909668
    3. '*' → logprob: -10.753230094909668
    4. ' *' → logprob: -11.128230094909668
    5. ' .' → logprob: -11.378230094909668
    6. 'self' → logprob: -13.503230094909668
    7. '.
' → logprob: -14.128230094909668
    8. ' ' → logprob: -14.128230094909668
    9. '```' → logprob: -14.753230094909668
    10. ')' → logprob: -15.003230094909668

Token 167: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.000912774819880724
    2. '*' → logprob: -7.000912666320801
    3. ' ' → logprob: -13.7509126663208
    4. ' ' → logprob: -15.2509126663208
    5. ' **' → logprob: -18.500913619995117
    6. '*object' → logprob: -18.750913619995117
    7. ' *
' → logprob: -19.875913619995117
    8. ')' → logprob: -20.000913619995117
    9. '**' → logprob: -21.375913619995117
    10. '  ' → logprob: -21.500913619995117

Token 168: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.38687121868133545
    2. 'other' → logprob: -1.1368712186813354
    3. '(other' → logprob: -15.761871337890625
    4. 'Other' → logprob: -17.386871337890625
    5. ' oth' → logprob: -17.761871337890625
    6. ' ' → logprob: -17.886871337890625
    7. '_other' → logprob: -19.011871337890625
    8. '.other' → logprob: -19.261871337890625
    9. '其他' → logprob: -19.761871337890625
    10. ' ' → logprob: -19.886871337890625

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.963691804325208e-05
    2. '<|end|>' → logprob: -10.500029563903809
    3. ')
' → logprob: -13.875029563903809
    4. ')return' → logprob: -15.125029563903809
    5. '<|end|>' → logprob: -15.625029563903809
    6. ')x' → logprob: -15.750029563903809
    7. ' )' → logprob: -16.250030517578125
    8. '),' → logprob: -16.875030517578125
    9. ')#' → logprob: -17.000030517578125
    10. '```' → logprob: -17.000030517578125

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006865151692181826
    2. ')' → logprob: -5.25686502456665
    3. '<|end|>' → logprob: -7.50686502456665
    4. ' ' → logprob: -7.75686502456665
    5. '*' → logprob: -8.881865501403809
    6. '_' → logprob: -9.006865501403809
    7. '  ' → logprob: -9.756865501403809
    8. ' def' → logprob: -9.881865501403809
    9. '(' → logprob: -10.131865501403809
    10. 'def' → logprob: -10.256865501403809

Token 171: ' def' (ID: 1056)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0785822868347168
    2. '   ' → logprob: -1.0785822868347168
    3. ')' → logprob: -2.078582286834717
    4. '*' → logprob: -2.453582286834717
    5. '<|end|>' → logprob: -3.203582286834717
    6. 'def' (adapté à ' def') → logprob: -4.078582286834717
    7. ' ' → logprob: -4.203582286834717
    8. '\' → logprob: -4.953582286834717
    9. ' def' → logprob: -4.953582286834717
    10. '**' → logprob: -5.453582286834717

Token 172: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14417386054992676
    2. '__' → logprob: -2.0191738605499268
    3. 'pow' → logprob: -6.894173622131348
    4. ' pow' → logprob: -8.269173622131348
    5. '_pow' → logprob: -8.644173622131348
    6. '```' → logprob: -10.269173622131348
    7. '**' → logprob: -12.144173622131348
    8. ' ' → logprob: -13.269173622131348
    9. ' def' → logprob: -13.269173622131348
    10. ' ' → logprob: -13.769173622131348

Token 173: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.21594448387622833
    2. 'tr' → logprob: -1.715944528579712
    3. 'flo' → logprob: -4.340944290161133
    4. 'rm' → logprob: -6.590944290161133
    5. 'eq' → logprob: -11.590944290161133
    6. ' tr' → logprob: -11.715944290161133
    7. '```' → logprob: -13.090944290161133
    8. 'Pow' → logprob: -13.340944290161133
    9. 'r' → logprob: -13.590944290161133
    10. 'imul' → logprob: -13.715944290161133

Token 174: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.002509070560336113
    2. 'ue' → logprob: -6.627509117126465
    3. 'u' → logprob: -6.752509117126465
    4. '__' → logprob: -11.627509117126465
    5. 'e' → logprob: -12.877509117126465
    6. 'ues' → logprob: -14.002509117126465
    7. 'uet' → logprob: -15.377509117126465
    8. '/' → logprob: -15.502509117126465
    9. 'ed' → logprob: -15.627509117126465
    10. 'uen' → logprob: -15.627509117126465

Token 175: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.18381965160369873
    2. '__' → logprob: -1.8088196516036987
    3. '__/' → logprob: -6.308819770812988
    4. 'div' → logprob: -6.933819770812988
    5. '/__' → logprob: -7.683819770812988
    6. '/' → logprob: -8.433819770812988
    7. '/f' → logprob: -8.683819770812988
    8. 'v' → logprob: -8.808819770812988
    9. 'i' → logprob: -9.683819770812988
    10. '_div' → logprob: -10.433819770812988

Token 176: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.38851049542427063
    2. '__' → logprob: -1.1385104656219482
    3. '__(
' → logprob: -7.263510704040527
    4. '__((' → logprob: -7.638510704040527
    5. '__('' → logprob: -8.388510704040527
    6. '__(*' → logprob: -9.388510704040527
    7. '(' → logprob: -9.888510704040527
    8. '(self' → logprob: -10.138510704040527
    9. '_' → logprob: -10.888510704040527
    10. '__("' → logprob: -11.388510704040527

Token 177: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.024453502148389816
    2. 'other' → logprob: -3.7744534015655518
    3. ' self' → logprob: -6.899453639984131
    4. ' other' → logprob: -9.149453163146973
    5. '<|end|>' → logprob: -9.774453163146973
    6. ' ' → logprob: -10.774453163146973
    7. '(self' → logprob: -12.024453163146973
    8. ')' → logprob: -12.774453163146973
    9. '_other' → logprob: -13.774453163146973
    10. 'Other' → logprob: -13.774453163146973

Token 178: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5374467968940735
    2. '__(' → logprob: -0.9124467968940735
    3. '(' → logprob: -5.287446975708008
    4. '__' → logprob: -5.287446975708008
    5. ',' → logprob: -6.162446975708008
    6. 'self' → logprob: -6.537446975708008
    7. '__(
' → logprob: -8.037446975708008
    8. ' (' → logprob: -9.662446975708008
    9. '_(' → logprob: -9.662446975708008
    10. '__,' → logprob: -10.912446975708008

Token 179: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.018161412328481674
    2. ' other' → logprob: -4.018161296844482
    3. 'self' → logprob: -11.64316177368164
    4. 'Other' → logprob: -13.14316177368164
    5. '(other' → logprob: -14.39316177368164
    6. '_other' → logprob: -15.64316177368164
    7. ' self' → logprob: -17.51816177368164
    8. '.other' → logprob: -17.51816177368164
    9. '<|end|>' → logprob: -20.14316177368164
    10. 'OTHER' → logprob: -20.26816177368164

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007842259481549263
    2. '):
' → logprob: -4.882842063903809
    3. ',' → logprob: -8.882842063903809
    4. ')' → logprob: -9.882842063903809
    5. '):
' → logprob: -11.007842063903809
    6. '):

' → logprob: -11.507842063903809
    7. ':' → logprob: -11.507842063903809
    8. ' ):' → logprob: -12.257842063903809
    9. '   ' → logprob: -13.632842063903809
    10. ' ' → logprob: -14.257842063903809

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02270524948835373
    2. '(' → logprob: -4.147705078125
    3. ' (' → logprob: -6.022705078125
    4. '(self' → logprob: -6.022705078125
    5. '   ' → logprob: -7.772705078125
    6. '<|end|>' → logprob: -8.147705078125
    7. '(Mod' → logprob: -8.147705078125
    8. 'self' → logprob: -8.772705078125
    9. ' ' → logprob: -9.022705078125
    10. ' return' → logprob: -9.147705078125

Token 182: ' return' (ID: 622)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.6819210648536682
    2. 'self' → logprob: -1.3069210052490234
    3. 'Mod' → logprob: -2.1819210052490234
    4. ' other' → logprob: -3.0569210052490234
    5. 'pow' → logprob: -3.6819210052490234
    6. ' Mod' → logprob: -4.306921005249023
    7. ' self' → logprob: -4.806921005249023
    8. 'def' → logprob: -4.931921005249023
    9. ' pow' → logprob: -5.681921005249023
    10. 'return' (adapté à ' return') → logprob: -6.056921005249023

Token 183: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.20383013784885406
    2. ' Mod' → logprob: -2.0788302421569824
    3. 'self' → logprob: -2.9538302421569824
    4. ' self' → logprob: -4.953830242156982
    5. '(Mod' → logprob: -9.203829765319824
    6. 'other' → logprob: -11.953829765319824
    7. '(self' → logprob: -11.953829765319824
    8. 'mod' → logprob: -12.703829765319824
    9. ' other' → logprob: -12.828829765319824
    10. '_mod' → logprob: -12.953829765319824

Token 184: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.534558552724775e-05
    2. 'int' → logprob: -10.625025749206543
    3. 'Mod' → logprob: -15.375025749206543
    4. ' Int' → logprob: -15.875025749206543
    5. '(Int' → logprob: -16.000024795532227
    6. 'I' → logprob: -16.375024795532227
    7. '_int' → logprob: -16.500024795532227
    8. '	Int' → logprob: -16.500024795532227
    9. '<Int' → logprob: -17.250024795532227
    10. 'INT' → logprob: -17.375024795532227

Token 185: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.875001907348633
    3. '(pow' → logprob: -14.750001907348633
    4. '(
' → logprob: -15.625001907348633
    5. '(int' → logprob: -16.375001907348633
    6. 'self' → logprob: -17.875001907348633
    7. 'pow' → logprob: -18.500001907348633
    8. '((' → logprob: -18.875001907348633
    9. '[self' → logprob: -20.500001907348633
    10. '(other' → logprob: -20.500001907348633

Token 186: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.076218025758862e-05
    2. '.' → logprob: -10.500070571899414
    3. '(other' → logprob: -10.500070571899414
    4. '.other' → logprob: -11.500070571899414
    5. ' .' → logprob: -13.250070571899414
    6. 'other' → logprob: -13.625070571899414
    7. 'x' → logprob: -14.875070571899414
    8. '(x' → logprob: -15.000070571899414
    9. '*' → logprob: -15.000070571899414
    10. '(' → logprob: -15.000070571899414

Token 187: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6561610698699951
    2. '*' → logprob: -0.7811610698699951
    3. ')' → logprob: -3.781161069869995
    4. ')*' → logprob: -8.031161308288574
    5. ',' → logprob: -10.281161308288574
    6. ').' → logprob: -10.656161308288574
    7. '),' → logprob: -10.906161308288574
    8. ').__' → logprob: -11.156161308288574
    9. ' )' → logprob: -11.281161308288574
    10. '   ' → logprob: -11.281161308288574

Token 188: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0053605143912136555
    2. 'other' → logprob: -5.3803606033325195
    3. ' pow' → logprob: -7.2553606033325195
    4. '(pow' → logprob: -10.75536060333252
    5. 'mod' → logprob: -11.88036060333252
    6. ' other' → logprob: -13.13036060333252
    7. '   ' → logprob: -13.38036060333252
    8. 'power' → logprob: -14.75536060333252
    9. '
' → logprob: -14.88036060333252
    10. ' ' → logprob: -15.38036060333252

Token 189: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -6.392202976712724e-06
    2. 'other' → logprob: -12.500006675720215
    3. '(' → logprob: -12.875006675720215
    4. '(
' → logprob: -18.0000057220459
    5. ' other' → logprob: -18.3750057220459
    6. '_other' → logprob: -19.6250057220459
    7. 'Other' → logprob: -20.3750057220459
    8. '.other' → logprob: -20.7500057220459
    9. '(one' → logprob: -22.3750057220459
    10. '-other' → logprob: -22.5000057220459

Token 190: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.1398757123970427e-05
    2. 'x' → logprob: -11.500011444091797
    3. ',x' → logprob: -14.500011444091797
    4. '(x' → logprob: -15.250011444091797
    5. '.' → logprob: -15.375011444091797
    6. ',' → logprob: -15.625011444091797
    7. '(' → logprob: -17.000011444091797
    8. ' x' → logprob: -17.125011444091797
    9. ' .' → logprob: -17.250011444091797
    10. ' ' → logprob: -18.625011444091797

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006538204033859074
    2. ',M' → logprob: -8.500654220581055
    3. '(' → logprob: -8.625654220581055
    4. ',-' → logprob: -9.125654220581055
    5. '(M' → logprob: -9.500654220581055
    6. ',
' → logprob: -10.625654220581055
    7. ' ,' → logprob: -10.750654220581055
    8. ',(' → logprob: -11.250654220581055
    9. '(Mod' → logprob: -12.000654220581055
    10. 'MOD' → logprob: -12.250654220581055

Token 192: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001278534036828205
    2. ' MOD' → logprob: -9.000127792358398
    3. 'MO' → logprob: -13.375127792358398
    4. '-' → logprob: -13.750127792358398
    5. '-M' → logprob: -14.500127792358398
    6. '(M' → logprob: -14.625127792358398
    7. '_MOD' → logprob: -15.250127792358398
    8. 'MD' → logprob: -16.1251277923584
    9. 'M' → logprob: -16.2501277923584
    10. 'Mod' → logprob: -16.3751277923584

Token 193: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013809482334181666
    2. 'MOD' → logprob: -7.251380920410156
    3. ' -' → logprob: -7.376380920410156
    4. '-M' → logprob: -10.876380920410156
    5. '-mod' → logprob: -11.876380920410156
    6. ',' → logprob: -12.126380920410156
    7. ' MOD' → logprob: -12.501380920410156
    8. '-Mod' → logprob: -12.751380920410156
    9. '(Mod' → logprob: -13.876380920410156
    10. '_MOD' → logprob: -13.876380920410156

Token 194: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '۲' → logprob: -17.062501907348633
    4. '```' → logprob: -17.562501907348633
    5. '-' → logprob: -17.812501907348633
    6. '２' → logprob: -17.875001907348633
    7. '3' → logprob: -18.125001907348633
    8. '٢' → logprob: -18.125001907348633
    9. '

' → logprob: -18.375001907348633
    10. '
' → logprob: -18.562501907348633

Token 195: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.375
    3. ' ' → logprob: -16.625
    4. '
' → logprob: -17.0
    5. '3' → logprob: -18.0
    6. '۲' → logprob: -18.1875
    7. '２' → logprob: -18.375
    8. '

' → logprob: -18.8125
    9. '   ' → logprob: -19.5
    10. '٢' → logprob: -19.625

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000217006730963476
    2. ')' → logprob: -8.87521743774414
    3. ' ,' → logprob: -9.50021743774414
    4. '   ' → logprob: -14.00021743774414
    5. '))' → logprob: -14.12521743774414
    6. ',
' → logprob: -15.87521743774414
    7. '),' → logprob: -16.37521743774414
    8. '}' → logprob: -16.37521743774414
    9. '```' → logprob: -16.62521743774414
    10. ' ' → logprob: -17.37521743774414

Token 197: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001234428636962548
    2. ' MOD' → logprob: -9.000123023986816
    3. '_MOD' → logprob: -19.000123977661133
    4. '   ' → logprob: -19.500123977661133
    5. ')' → logprob: -19.625123977661133
    6. 'Mod' → logprob: -20.250123977661133
    7. 'MO' → logprob: -21.000123977661133
    8. ' ' → logprob: -21.125123977661133
    9. '.MOD' → logprob: -21.500123977661133
    10. 'mod' → logprob: -22.125123977661133

Token 198: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759623050689697
    2. '))' → logprob: -0.8259623050689697
    3. ' ))' → logprob: -11.95096206665039
    4. ')
' → logprob: -12.57596206665039
    5. ',' → logprob: -12.70096206665039
    6. ' )' → logprob: -12.82596206665039
    7. ')))' → logprob: -13.20096206665039
    8. '   ' → logprob: -13.45096206665039
    9. '))
' → logprob: -13.57596206665039
    10. '),' → logprob: -13.82596206665039

Token 199: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0027816968504339457
    2. '   ' → logprob: -6.127781867980957
    3. '       ' → logprob: -8.252781867980957
    4. '<|end|>' → logprob: -9.252781867980957
    5. ')' → logprob: -9.377781867980957
    6. 'if' → logprob: -9.502781867980957
    7. '	if' → logprob: -10.627781867980957
    8. '    ' → logprob: -11.127781867980957
    9. '()' → logprob: -11.252781867980957
    10. ' ' → logprob: -11.377781867980957

Token 200: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.003177952254191041
    2. 'is' → logprob: -5.753178119659424
    3. '(is' → logprob: -15.628177642822266
    4. ' is' → logprob: -16.378177642822266
    5. ' ' → logprob: -19.378177642822266
    6. ' isin' → logprob: -19.378177642822266
    7. ' hasattr' → logprob: -20.378177642822266
    8. ' ' → logprob: -20.378177642822266
    9. 'typeof' → logprob: -20.753177642822266
    10. 'type' → logprob: -21.253177642822266

Token 201: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -5.3120038501219824e-05
    2. 'other' → logprob: -9.875053405761719
    3. ' other' → logprob: -13.625053405761719
    4. 'Other' → logprob: -15.000053405761719
    5. '_other' → logprob: -17.62505340576172
    6. '(' → logprob: -17.75005340576172
    7. '<|end|>' → logprob: -17.75005340576172
    8. '.other' → logprob: -18.75005340576172
    9. 'OTHER' → logprob: -19.25005340576172
    10. '-other' → logprob: -19.50005340576172

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.762356209335849e-05
    2. '(other' → logprob: -11.25003719329834
    3. '<|end|>' → logprob: -11.25003719329834
    4. 'other' → logprob: -12.37503719329834
    5. ',
' → logprob: -12.62503719329834
    6. ' ,' → logprob: -13.37503719329834
    7. '(' → logprob: -14.12503719329834
    8. ' other' → logprob: -14.62503719329834
    9. '(Mod' → logprob: -15.25003719329834
    10. '<|end|>' → logprob: -15.75003719329834

Token 203: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.004624510649591684
    2. ' Mod' → logprob: -5.379624366760254
    3. '(Mod' → logprob: -12.504624366760254
    4. '.Mod' → logprob: -16.12962532043457
    5. '_mod' → logprob: -16.37962532043457
    6. 'MOD' → logprob: -16.37962532043457
    7. '_Mod' → logprob: -16.62962532043457
    8. 'mod' → logprob: -16.75462532043457
    9. 'Modulo' → logprob: -16.87962532043457
    10. 'Mo' → logprob: -17.00462532043457

Token 204: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.0002724217774812132
    2. 'int' → logprob: -8.375272750854492
    3. 'Mod' → logprob: -10.125272750854492
    4. 'nt' → logprob: -13.750272750854492
    5. 'In' → logprob: -15.750272750854492
    6. ' Int' → logprob: -16.125272750854492
    7. 't' → logprob: -16.250272750854492
    8. '
' → logprob: -17.250272750854492
    9. '(Int' → logprob: -17.500272750854492
    10. 'Ints' → logprob: -17.500272750854492

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023226479243021458
    2. 'else' → logprob: -8.750232696533203
    3. ' else' → logprob: -9.625232696533203
    4. ' )' → logprob: -12.125232696533203
    5. '       ' → logprob: -13.750232696533203
    6. '   ' → logprob: -14.750232696533203
    7. '):' → logprob: -15.875232696533203
    8. ' ' → logprob: -16.500232696533203
    9. '),' → logprob: -16.625232696533203
    10. ')
' → logprob: -16.750232696533203

Token 206: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2014257162809372
    2. ' else' → logprob: -1.7014256715774536
    3. '	else' → logprob: -11.326425552368164
    4. '       ' → logprob: -15.951425552368164
    5. '        ' → logprob: -16.576425552368164
    6. '	' → logprob: -16.951425552368164
    7. '   ' → logprob: -16.951425552368164
    8. ' ' → logprob: -17.576425552368164
    9. '    ' → logprob: -17.576425552368164
    10. '_else' → logprob: -18.201425552368164

Token 207: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.15025636553764343
    2. ' Mod' → logprob: -2.025256395339966
    3. '(Mod' → logprob: -4.900256156921387
    4. 'pow' → logprob: -9.650256156921387
    5. 'self' → logprob: -10.775256156921387
    6. 'Mo' → logprob: -12.150256156921387
    7. 'Pow' → logprob: -12.525256156921387
    8. ' pow' → logprob: -12.775256156921387
    9. ' self' → logprob: -13.150256156921387
    10. ' ' → logprob: -13.400256156921387

Token 208: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -14.625000953674316
    3. '(Int' → logprob: -15.250000953674316
    4. 'I' → logprob: -16.000001907348633
    5. ' Int' → logprob: -16.375001907348633
    6. 'INT' → logprob: -16.750001907348633
    7. '(' → logprob: -16.875001907348633
    8. '(x' → logprob: -17.625001907348633
    9. '(int' → logprob: -18.125001907348633
    10. 'nt' → logprob: -18.250001907348633

Token 209: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.125041961669922
    3. '(pow' → logprob: -13.500041961669922
    4. 'self' → logprob: -17.500041961669922
    5. '(int' → logprob: -17.875041961669922
    6. '(s' → logprob: -18.250041961669922
    7. '(
' → logprob: -18.250041961669922
    8. '((' → logprob: -18.625041961669922
    9. '(this' → logprob: -18.750041961669922
    10. '(x' → logprob: -19.125041961669922

Token 210: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -7.219262624857947e-05
    2. '.' → logprob: -9.625072479248047
    3. '*' → logprob: -12.625072479248047
    4. 'x' → logprob: -13.125072479248047
    5. ')' → logprob: -15.000072479248047
    6. ' *' → logprob: -15.500072479248047
    7. ' .' → logprob: -16.625072479248047
    8. '*x' → logprob: -16.625072479248047
    9. '(x' → logprob: -17.125072479248047
    10. '(' → logprob: -17.250072479248047

Token 211: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14272382855415344
    2. '*' → logprob: -2.017723798751831
    3. 'pow' → logprob: -10.76772403717041
    4. ' pow' → logprob: -11.14272403717041
    5. ' //' → logprob: -12.51772403717041
    6. ')' → logprob: -12.76772403717041
    7. ' ' → logprob: -13.26772403717041
    8. ' ' → logprob: -13.51772403717041
    9. '//' → logprob: -13.51772403717041
    10. '**' → logprob: -14.76772403717041

Token 212: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0011705794604495168
    2. ' pow' → logprob: -6.751170635223389
    3. '(pow' → logprob: -15.37617015838623
    4. '   ' → logprob: -17.126171112060547
    5. 'power' → logprob: -17.501171112060547
    6. '
' → logprob: -18.501171112060547
    7. 'p' → logprob: -19.626171112060547
    8. '.pow' → logprob: -19.876171112060547
    9. ' ' → logprob: -20.251171112060547
    10. 'pw' → logprob: -20.376171112060547

Token 213: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -8.280175097752362e-05
    2. 'other' → logprob: -9.875082969665527
    3. '(' → logprob: -10.375082969665527
    4. ' other' → logprob: -16.50008201599121
    5. '(
' → logprob: -17.62508201599121
    6. 'Other' → logprob: -18.87508201599121
    7. '((' → logprob: -19.00008201599121
    8. '_other' → logprob: -20.12508201599121
    9. '(one' → logprob: -20.12508201599121
    10. '.other' → logprob: -20.25008201599121

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4153549020411447e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',
' → logprob: -13.87502384185791
    4. ')' → logprob: -14.25002384185791
    5. '(' → logprob: -15.25002384185791
    6. '2' → logprob: -15.62502384185791
    7. ' ' → logprob: -16.125024795532227
    8. '<|end|>' → logprob: -16.250024795532227
    9. '```' → logprob: -16.250024795532227
    10. '),' → logprob: -17.000024795532227

Token 215: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0002036595979006961
    2. ' MOD' → logprob: -8.500204086303711
    3. '_MOD' → logprob: -16.62520408630371
    4. '   ' → logprob: -17.37520408630371
    5. 'MO' → logprob: -17.75020408630371
    6. '.MOD' → logprob: -18.00020408630371
    7. 'MD' → logprob: -20.50020408630371
    8. ' ' → logprob: -20.62520408630371
    9. 'Mod' → logprob: -20.87520408630371
    10. 'MODE' → logprob: -21.00020408630371

Token 216: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.474078893661499
    2. ' -' → logprob: -0.974078893661499
    3. ' ' → logprob: -13.724079132080078
    4. '-
' → logprob: -15.474079132080078
    5. '−' → logprob: -15.724079132080078
    6. '–' → logprob: -16.724079132080078
    7. '2' → logprob: -17.224079132080078
    8. ',' → logprob: -17.474079132080078
    9. '```' → logprob: -17.474079132080078
    10. ')' → logprob: -17.599079132080078

Token 217: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.00004768371582
    3. '۲' → logprob: -14.81254768371582
    4. '-' → logprob: -15.18754768371582
    5. '２' → logprob: -15.50004768371582
    6. '```' → logprob: -15.87504768371582
    7. '٢' → logprob: -16.06254768371582
    8. '7' → logprob: -16.31254768371582
    9. '{' → logprob: -16.37504768371582
    10. '   ' → logprob: -16.75004768371582

Token 218: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.062501907348633
    4. '۲' → logprob: -16.375001907348633
    5. '２' → logprob: -16.500001907348633
    6. '٢' → logprob: -17.562501907348633
    7. '-' → logprob: -17.562501907348633
    8. '২' → logprob: -17.812501907348633
    9. '
' → logprob: -17.937501907348633
    10. '२' → logprob: -18.062501907348633

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ')' → logprob: -10.500085830688477
    3. ' ,' → logprob: -10.500085830688477
    4. '))' → logprob: -10.625085830688477
    5. '),' → logprob: -12.125085830688477
    6. '   ' → logprob: -14.875085830688477
    7. ',
' → logprob: -15.250085830688477
    8. '```' → logprob: -15.750085830688477
    9. '`,' → logprob: -16.250085830688477
    10. ',M' → logprob: -16.375085830688477

Token 220: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.038044821470975876
    2. ' MOD' → logprob: -3.2880449295043945
    3. ')' → logprob: -12.788044929504395
    4. '_MOD' → logprob: -15.413044929504395
    5. '.MOD' → logprob: -15.788044929504395
    6. '   ' → logprob: -17.413043975830078
    7. '```' → logprob: -17.413043975830078
    8. ' )' → logprob: -17.663043975830078
    9. '))' → logprob: -17.663043975830078
    10. 'M' → logprob: -17.663043975830078

Token 221: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3868843913078308
    2. '))' → logprob: -1.1368844509124756
    3. ')))' → logprob: -11.886884689331055
    4. ')
' → logprob: -12.511884689331055
    5. ' )' → logprob: -13.886884689331055
    6. '))
' → logprob: -14.011884689331055
    7. ' ))' → logprob: -14.636884689331055
    8. '   ' → logprob: -15.511884689331055
    9. '),' → logprob: -16.386884689331055
    10. ' ' → logprob: -16.511884689331055

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026367072016000748
    2. ')' → logprob: -4.5263671875
    3. ' ' → logprob: -5.2763671875
    4. '<|end|>' → logprob: -5.7763671875
    5. '\n' → logprob: -6.9013671875
    6. '  ' → logprob: -7.2763671875
    7. ' def' → logprob: -7.2763671875
    8. 'def' → logprob: -7.2763671875
    9. '
' → logprob: -7.6513671875
    10. ' 
' → logprob: -7.6513671875

Token 223: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20145688951015472
    2. ')' → logprob: -2.5764567852020264
    3. '\n' → logprob: -2.5764567852020264
    4. '*' → logprob: -5.4514570236206055
    5. ' ' → logprob: -5.4514570236206055
    6. '    
' → logprob: -5.7014570236206055
    7. '<|end|>' → logprob: -5.7014570236206055
    8. '^' → logprob: -5.8264570236206055
    9. '\' → logprob: -5.9514570236206055
    10. '**' → logprob: -6.0764570236206055

Token 224: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009186798706650734
    2. 'pow' → logprob: -5.009186744689941
    3. ' __' → logprob: -6.009186744689941
    4. '_pow' → logprob: -12.009186744689941
    5. ' pow' → logprob: -12.259186744689941
    6. '```' → logprob: -14.634186744689941
    7. '**' → logprob: -14.759186744689941
    8. 'p' → logprob: -16.009187698364258
    9. '
' → logprob: -16.009187698364258
    10. 'power' → logprob: -16.134187698364258

Token 225: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0012030890211462975
    2. 'eq' → logprob: -6.7512030601501465
    3. 'flo' → logprob: -11.251203536987305
    4. 'r' → logprob: -11.501203536987305
    5. 'neg' → logprob: -11.626203536987305
    6. 'int' → logprob: -15.501203536987305
    7. 'Pow' → logprob: -15.876203536987305
    8. 'power' → logprob: -16.126203536987305
    9. ' pow' → logprob: -16.251203536987305
    10. 'lt' → logprob: -16.876203536987305

Token 226: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5039433836936951
    2. '(self' → logprob: -1.1289434432983398
    3. '(' → logprob: -2.62894344329834
    4. '__(
' → logprob: -8.87894344329834
    5. '__' → logprob: -9.00394344329834
    6. '_(' → logprob: -10.75394344329834
    7. '*(' → logprob: -11.50394344329834
    8. '()(' → logprob: -12.00394344329834
    9. 'self' → logprob: -12.75394344329834
    10. '```' → logprob: -12.75394344329834

Token 227: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5048530030981055e-06
    2. ' self' → logprob: -14.000001907348633
    3. 'other' → logprob: -14.375001907348633
    4. '(self' → logprob: -17.375001907348633
    5. '2' → logprob: -18.250001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '0' → logprob: -19.250001907348633
    8. '1' → logprob: -20.250001907348633
    9. '
' → logprob: -20.750001907348633
    10. '       ' → logprob: -21.125001907348633

Token 228: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31337970495224
    2. '(self' → logprob: -1.3133797645568848
    3. '__(' → logprob: -9.563379287719727
    4. '(
' → logprob: -10.813379287719727
    5. ',' → logprob: -11.813379287719727
    6. ' (' → logprob: -12.063379287719727
    7. 'self' → logprob: -12.188379287719727
    8. ')(' → logprob: -12.813379287719727
    9. '(s' → logprob: -13.688379287719727
    10. '(

' → logprob: -13.938379287719727

Token 229: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.022071218118071556
    2. 'self' → logprob: -4.522071361541748
    3. ' other' → logprob: -4.522071361541748
    4. ' self' → logprob: -9.27207088470459
    5. ' ' → logprob: -14.14707088470459
    6. '   ' → logprob: -14.52207088470459
    7. 'Other' → logprob: -14.77207088470459
    8. 'n' → logprob: -15.27207088470459
    9. '(other' → logprob: -15.89707088470459
    10. '_other' → logprob: -15.89707088470459

Token 230: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007102859206497669
    2. 'self' → logprob: -6.132102966308594
    3. '):' → logprob: -6.382102966308594
    4. '(self' → logprob: -6.507102966308594
    5. ' ,' → logprob: -6.882102966308594
    6. '):
' → logprob: -8.132102966308594
    7. ',self' → logprob: -8.382102966308594
    8. ' self' → logprob: -9.132102966308594
    9. '(' → logprob: -10.882102966308594
    10. '<|end|>' → logprob: -11.632102966308594

Token 231: '       ' (ID: 309)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08544883131980896
    2. 'self' → logprob: -3.210448741912842
    3. '(' → logprob: -3.335448741912842
    4. ' (' → logprob: -6.335448741912842
    5. '(other' → logprob: -6.585448741912842
    6. 'other' → logprob: -6.710448741912842
    7. ' self' → logprob: -6.835448741912842
    8. ' other' → logprob: -8.21044921875
    9. '       ' → logprob: -8.96044921875
    10. '(
' → logprob: -9.46044921875

Token 232: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3849494457244873
    2. 'self' → logprob: -1.3849494457244873
    3. 'return' (adapté à ' return') → logprob: -3.1349494457244873
    4. '       ' → logprob: -4.134949684143066
    5. ' pow' → logprob: -5.634949684143066
    6. 'Mod' → logprob: -5.884949684143066
    7. ' self' → logprob: -6.759949684143066
    8. 'int' → logprob: -7.009949684143066
    9. '(pow' → logprob: -7.509949684143066
    10. ' return' → logprob: -8.509949684143066

Token 233: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.008622374385595322
    2. ' Mod' → logprob: -4.758622169494629
    3. '(Mod' → logprob: -12.508622169494629
    4. '   ' → logprob: -13.008622169494629
    5. ' ' → logprob: -14.133622169494629
    6. 'Mo' → logprob: -15.008622169494629
    7. '_Mod' → logprob: -15.758622169494629
    8. '  ' → logprob: -15.883622169494629
    9. 'MOD' → logprob: -16.133623123168945
    10. 'Modulo' → logprob: -16.258623123168945

Token 234: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.4855663721391466e-05
    2. 'int' → logprob: -11.125015258789062
    3. ' Int' → logprob: -18.125015258789062
    4. 'nt' → logprob: -18.625015258789062
    5. '_int' → logprob: -18.875015258789062
    6. 'INT' → logprob: -19.125015258789062
    7. 'Mod' → logprob: -19.250015258789062
    8. '	Int' → logprob: -19.875015258789062
    9. '(Int' → logprob: -20.375015258789062
    10. '<Int' → logprob: -20.875015258789062

Token 235: '(pow' (ID: 189160)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019367238273844123
    2. '(pow' → logprob: -6.251936912536621
    3. '(' → logprob: -11.751936912536621
    4. 'pow' → logprob: -15.876936912536621
    5. 'self' → logprob: -16.876935958862305
    6. '(
' → logprob: -17.126935958862305
    7. '(power' → logprob: -17.501935958862305
    8. '((' → logprob: -19.626935958862305
    9. ' pow' → logprob: -20.001935958862305
    10. '(sel' → logprob: -20.751935958862305

Token 236: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. 'self' → logprob: -15.500004768371582
    4. '(
' → logprob: -16.6250057220459
    5. ' (' → logprob: -20.0000057220459
    6. ' self' → logprob: -20.2500057220459
    7. ',self' → logprob: -20.3750057220459
    8. '=self' → logprob: -20.6250057220459
    9. '[self' → logprob: -20.6250057220459
    10. ':self' → logprob: -22.0000057220459

Token 237: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.4140441635390744e-05
    2. '.' → logprob: -11.375014305114746
    3. 'self' → logprob: -13.375014305114746
    4. ' .' → logprob: -14.500014305114746
    5. '(self' → logprob: -15.375014305114746
    6. 'x' → logprob: -16.25001335144043
    7. '(x' → logprob: -16.62501335144043
    8. '(' → logprob: -17.37501335144043
    9. ' self' → logprob: -17.87501335144043
    10. ' ' → logprob: -17.87501335144043

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023060773964971304
    2. '(other' → logprob: -6.75230598449707
    3. 'other' → logprob: -6.87730598449707
    4. ' ,' → logprob: -9.50230598449707
    5. ' other' → logprob: -10.62730598449707
    6. '(' → logprob: -12.75230598449707
    7. ' ' → logprob: -13.87730598449707
    8. ',self' → logprob: -14.62730598449707
    9. '.other' → logprob: -14.75230598449707
    10. 'self' → logprob: -15.62730598449707

Token 239: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0003357006062287837
    2. ' other' → logprob: -8.000335693359375
    3. '(other' → logprob: -15.125335693359375
    4. '
' → logprob: -21.250335693359375
    5. '.other' → logprob: -21.625335693359375
    6. '   ' → logprob: -21.750335693359375
    7. 'othe' → logprob: -21.875335693359375
    8. ' ' → logprob: -22.000335693359375
    9. 'Other' → logprob: -22.250335693359375
    10. '_other' → logprob: -22.375335693359375

Token 240: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.02648978866636753
    2. ',' → logprob: -3.776489734649658
    3. 'x' → logprob: -6.276489734649658
    4. ',x' → logprob: -7.026489734649658
    5. '))' → logprob: -7.776489734649658
    6. ')' → logprob: -10.526490211486816
    7. ' if' → logprob: -12.276490211486816
    8. ' ,' → logprob: -12.401490211486816
    9. '```' → logprob: -12.651490211486816
    10. ')))' → logprob: -12.651490211486816

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04163641855120659
    2. ' if' → logprob: -3.2916364669799805
    3. '))' → logprob: -5.7916364669799805
    4. 'if' → logprob: -8.29163646697998
    5. ' ,' → logprob: -8.29163646697998
    6. ')' → logprob: -11.04163646697998
    7. '   ' → logprob: -12.41663646697998
    8. 'If' → logprob: -12.54163646697998
    9. ' ))' → logprob: -13.04163646697998
    10. '<|end|>' → logprob: -13.16663646697998

Token 242: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.02324547804892063
    2. 'MOD' → logprob: -3.7732455730438232
    3. '_MOD' → logprob: -18.523244857788086
    4. '.MOD' → logprob: -18.773244857788086
    5. ' ' → logprob: -18.898244857788086
    6. 'mod' → logprob: -20.898244857788086
    7. ' ' → logprob: -21.023244857788086
    8. 'Mod' → logprob: -21.898244857788086
    9. ' mod' → logprob: -22.398244857788086
    10. ' M' → logprob: -22.773244857788086

Token 243: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47423890233039856
    2. ')' → logprob: -0.9742388725280762
    3. ' if' → logprob: -8.974239349365234
    4. 'if' → logprob: -11.349239349365234
    5. ' ))' → logprob: -11.724239349365234
    6. '))
' → logprob: -12.349239349365234
    7. ' )' → logprob: -12.599239349365234
    8. '       ' → logprob: -12.849239349365234
    9. ')
' → logprob: -12.974239349365234
    10. '   ' → logprob: -13.349239349365234

Token 244: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12163516879081726
    2. '<|end|>' → logprob: -2.7466351985931396
    3. ')' → logprob: -4.1216349601745605
    4. '       ' → logprob: -4.4966349601745605
    5. '(' → logprob: -4.7466349601745605
    6. '   ' → logprob: -4.8716349601745605
    7. ' ' → logprob: -5.9966349601745605
    8. ' or' → logprob: -6.7466349601745605
    9. 'if' → logprob: -7.2466349601745605
    10. ' (' → logprob: -7.9966349601745605

Token 245: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.006716555915772915
    2. 'is' → logprob: -5.006716728210449
    3. '(is' → logprob: -13.63171672821045
    4. ' is' → logprob: -17.006715774536133
    5. ' hasattr' → logprob: -17.881715774536133
    6. ' ' → logprob: -19.256715774536133
    7. 'type' → logprob: -19.756715774536133
    8. 'typeof' → logprob: -20.131715774536133
    9. ' ' → logprob: -20.256715774536133
    10. 'instance' → logprob: -20.381715774536133

Token 246: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -5.8961017202818766e-05
    2. 'other' → logprob: -9.750059127807617
    3. ' other' → logprob: -14.875059127807617
    4. 'Other' → logprob: -15.125059127807617
    5. '(' → logprob: -19.750059127807617
    6. '_other' → logprob: -21.125059127807617
    7. 'OTHER' → logprob: -21.125059127807617
    8. '.other' → logprob: -21.250059127807617
    9. '-other' → logprob: -22.875059127807617
    10. '(previous' → logprob: -23.375059127807617

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.217951886355877e-05
    2. 'other' → logprob: -10.625061988830566
    3. '(Mod' → logprob: -10.750061988830566
    4. '(other' → logprob: -11.250061988830566
    5. ' other' → logprob: -13.750061988830566
    6. ',
' → logprob: -13.875061988830566
    7. ' ,' → logprob: -14.625061988830566
    8. 'Mod' → logprob: -14.625061988830566
    9. '(' → logprob: -15.375061988830566
    10. 'Other' → logprob: -16.625062942504883

Token 248: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.008615872822701931
    2. ' Mod' → logprob: -4.758615970611572
    3. '(Mod' → logprob: -13.883615493774414
    4. '_mod' → logprob: -16.383615493774414
    5. '_Mod' → logprob: -16.383615493774414
    6. 'mod' → logprob: -16.883615493774414
    7. '.Mod' → logprob: -17.008615493774414
    8. 'MOD' → logprob: -17.133615493774414
    9. ' ' → logprob: -17.383615493774414
    10. 'Modulo' → logprob: -17.383615493774414

Token 249: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00010950337309623137
    2. 'int' → logprob: -9.125109672546387
    3. 'nt' → logprob: -15.375109672546387
    4. '_int' → logprob: -17.37510871887207
    5. ' Int' → logprob: -17.62510871887207
    6. 'Mod' → logprob: -17.75010871887207
    7. '	Int' → logprob: -17.87510871887207
    8. 'In' → logprob: -18.00010871887207
    9. '(Int' → logprob: -18.50010871887207
    10. 'INT' → logprob: -18.75010871887207

Token 250: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.457669562427327e-05
    2. 'else' → logprob: -9.62507438659668
    3. ' else' → logprob: -12.25007438659668
    4. ' )' → logprob: -12.62507438659668
    5. ')
' → logprob: -15.87507438659668
    6. ' ' → logprob: -16.25007438659668
    7. '   ' → logprob: -16.50007438659668
    8. ')return' → logprob: -17.25007438659668
    9. '),' → logprob: -18.00007438659668
    10. '):
' → logprob: -18.75007438659668

Token 251: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02975245751440525
    2. ' else' → logprob: -3.529752492904663
    3. '	else' → logprob: -13.404752731323242
    4. '       ' → logprob: -15.029752731323242
    5. '_else' → logprob: -16.904752731323242
    6. 'return' → logprob: -17.279752731323242
    7. '        ' → logprob: -17.529752731323242
    8. 'elses' → logprob: -18.029752731323242
    9. ' ' → logprob: -18.154752731323242
    10. '	' → logprob: -18.404752731323242

Token 252: ' Mod' (ID: 7191)
  Prédit: ' Mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Mod' → logprob: -0.5760271549224854
    2. 'Mod' → logprob: -0.8260271549224854
    3. '(Mod' → logprob: -9.576026916503906
    4. 'pow' → logprob: -11.451026916503906
    5. ' pow' → logprob: -12.076026916503906
    6. 'Pow' → logprob: -13.701026916503906
    7. ' ' → logprob: -15.076026916503906
    8. ' Pow' → logprob: -15.451026916503906
    9. '_Mod' → logprob: -16.201026916503906
    10. '_mod' → logprob: -16.576026916503906

Token 253: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.491498531133402e-06
    2. 'int' → logprob: -12.000009536743164
    3. '(self' → logprob: -14.125009536743164
    4. 'pow' → logprob: -14.375009536743164
    5. 'INT' → logprob: -15.125009536743164
    6. '**' → logprob: -15.375009536743164
    7. '.pow' → logprob: -15.625009536743164
    8. '.Int' → logprob: -15.625009536743164
    9. ' Int' → logprob: -15.625009536743164
    10. '(' → logprob: -15.875009536743164

Token 254: '(pow' (ID: 189160)
  Prédit: '(pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.019075967371463776
    2. '(self' → logprob: -4.019075870513916
    3. '(' → logprob: -7.019075870513916
    4. 'pow' → logprob: -10.519076347351074
    5. '(power' → logprob: -12.894076347351074
    6. '(
' → logprob: -13.894076347351074
    7. ' pow' → logprob: -15.144076347351074
    8. '(p' → logprob: -15.894076347351074
    9. '(po' → logprob: -16.394075393676758
    10. 'self' → logprob: -17.519075393676758

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.000018119812012
    3. 'self' → logprob: -13.625018119812012
    4. '(
' → logprob: -18.000017166137695
    5. ' self' → logprob: -20.000017166137695
    6. '(sel' → logprob: -20.375017166137695
    7. '(s' → logprob: -20.625017166137695
    8. '(this' → logprob: -21.375017166137695
    9. '[self' → logprob: -21.500017166137695
    10. ',self' → logprob: -21.500017166137695

Token 256: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00012964145571459085
    2. '.' → logprob: -9.500129699707031
    3. 'x' → logprob: -9.875129699707031
    4. ',' → logprob: -13.125129699707031
    5. 'self' → logprob: -14.125129699707031
    6. ' .' → logprob: -14.875129699707031
    7. ',x' → logprob: -16.37512969970703
    8. ').' → logprob: -17.50012969970703
    9. ' x' → logprob: -17.62512969970703
    10. ' ' → logprob: -17.62512969970703

Token 257: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.006557159591466188
    2. '(' → logprob: -5.506556987762451
    3. ',' → logprob: -6.506556987762451
    4. 'other' → logprob: -7.006556987762451
    5. ' other' → logprob: -9.50655746459961
    6. ' ,' → logprob: -14.25655746459961
    7. ' (' → logprob: -15.00655746459961
    8. 'Other' → logprob: -15.13155746459961
    9. '(
' → logprob: -15.63155746459961
    10. '.other' → logprob: -16.50655746459961

Token 258: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.006715370807796717
    2. ' other' → logprob: -5.006715297698975
    3. '(other' → logprob: -17.756715774536133
    4. 'Other' → logprob: -21.256715774536133
    5. '.other' → logprob: -21.631715774536133
    6. '_other' → logprob: -22.631715774536133
    7. 'othe' → logprob: -22.881715774536133
    8. ' ' → logprob: -24.131715774536133
    9. 'OTHER' → logprob: -24.631715774536133
    10. '-other' → logprob: -25.381715774536133

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10288699716329575
    2. '))' → logprob: -2.352886915206909
    3. ' ,' → logprob: -5.977887153625488
    4. '<|end|>' → logprob: -9.852887153625488
    5. ' ))' → logprob: -10.227887153625488
    6. ')' → logprob: -10.852887153625488
    7. ',x' → logprob: -12.727887153625488
    8. '))
' → logprob: -12.727887153625488
    9. ')))' → logprob: -12.727887153625488
    10. '));' → logprob: -12.977887153625488

Token 260: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023245595395565033
    2. ' MOD' → logprob: -3.7732455730438232
    3. '_MOD' → logprob: -16.148244857788086
    4. '.MOD' → logprob: -17.523244857788086
    5. 'Mod' → logprob: -18.398244857788086
    6. '   ' → logprob: -18.648244857788086
    7. ' ' → logprob: -18.773244857788086
    8. 'mod' → logprob: -19.023244857788086
    9. 'MO' → logprob: -19.898244857788086
    10. '    ' → logprob: -20.898244857788086

Token 261: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931613087654114
    2. '))' → logprob: -0.6931613087654114
    3. ')))' → logprob: -12.568161010742188
    4. ' )' → logprob: -12.693161010742188
    5. '))
' → logprob: -12.943161010742188
    6. ')
' → logprob: -13.193161010742188
    7. ' ))' → logprob: -13.693161010742188
    8. '   ' → logprob: -13.818161010742188
    9. '       ' → logprob: -14.693161010742188
    10. ')}' → logprob: -15.193161010742188

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026887289714068174
    2. ' def' → logprob: -6.752688884735107
    3. 'def' → logprob: -7.252688884735107
    4. '```' → logprob: -7.877688884735107
    5. ' ' → logprob: -9.12768840789795
    6. '\' → logprob: -9.37768840789795
    7. '    
' → logprob: -9.87768840789795
    8. '_' → logprob: -10.25268840789795
    9. '	def' → logprob: -10.37768840789795
    10. '\n' → logprob: -10.75268840789795

Token 263: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09759822487831116
    2. 'def' → logprob: -2.4725983142852783
    3. '__' (adapté à ' __') → logprob: -5.222598075866699
    4. '<|end|>' → logprob: -6.097598075866699
    5. ' ' → logprob: -8.3475980758667
    6. ')' → logprob: -8.4725980758667
    7. '#' → logprob: -8.8475980758667
    8. '+' → logprob: -9.0975980758667
    9. ' def' → logprob: -9.3475980758667
    10. '  ' → logprob: -10.2225980758667

Token 264: 'r' (ID: 81)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.003073260188102722
    2. 'r' → logprob: -6.378073215484619
    3. 'add' → logprob: -7.128073215484619
    4. 'neg' → logprob: -8.253073692321777
    5. 'i' → logprob: -8.503073692321777
    6. 'flo' → logprob: -10.003073692321777
    7. 'int' → logprob: -10.253073692321777
    8. 'pow' → logprob: -11.753073692321777
    9. 'lt' → logprob: -12.128073692321777
    10. 'and' → logprob: -12.503073692321777

Token 265: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.018877116963267326
    2. '_add' → logprob: -4.393877029418945
    3. '+' → logprob: -5.268877029418945
    4. '__' → logprob: -7.018877029418945
    5. 'pow' → logprob: -8.393877029418945
    6. 'def' → logprob: -10.768877029418945
    7. 'mul' → logprob: -11.643877029418945
    8. '_' → logprob: -11.768877029418945
    9. 'Add' → logprob: -11.768877029418945
    10. '(add' → logprob: -11.768877029418945

Token 266: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -13.250004768371582
    3. '___' → logprob: -14.250004768371582
    4. '__.__' → logprob: -14.625004768371582
    5. '__(' → logprob: -14.750004768371582
    6. '____' → logprob: -14.750004768371582
    7. '__,' → logprob: -15.500004768371582
    8. '__((' → logprob: -16.000003814697266
    9. '__('' → logprob: -16.250003814697266
    10. '__

' → logprob: -16.500003814697266

Token 267: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0896441638469696
    2. '=' → logprob: -2.464644193649292
    3. ' =' → logprob: -7.339643955230713
    4. '___' → logprob: -11.214644432067871
    5. ' __' → logprob: -11.964644432067871
    6. '_' → logprob: -11.964644432067871
    7. '_=' → logprob: -11.964644432067871
    8. '   ' → logprob: -12.714644432067871
    9. '__(' → logprob: -12.714644432067871
    10. '__,' → logprob: -12.839644432067871

Token 268: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0024758970830589533
    2. ' __' → logprob: -6.002475738525391
    3. '___' → logprob: -17.00247573852539
    4. '   ' → logprob: -17.00247573852539
    5. '__(' → logprob: -18.12747573852539
    6. '__
' → logprob: -18.12747573852539
    7. '____' → logprob: -18.37747573852539
    8. ' ' → logprob: -18.50247573852539
    9. '__,' → logprob: -18.62747573852539
    10. '_' → logprob: -19.37747573852539

Token 269: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.9361264946837764e-07
    2. '_add' → logprob: -16.875
    3. 'ad' → logprob: -17.5
    4. '+' → logprob: -17.875
    5. ' add' → logprob: -19.25
    6. 'a' → logprob: -20.625
    7. 'addi' → logprob: -20.625
    8. '	add' → logprob: -22.25
    9. 'Add' → logprob: -22.25
    10. '(add' → logprob: -22.375

Token 270: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04898030683398247
    2. '<|end|>' → logprob: -3.298980236053467
    3. '__' → logprob: -4.923980236053467
    4. 'def' → logprob: -6.298980236053467
    5. '    
' → logprob: -7.298980236053467
    6. '<|end|>' → logprob: -7.673980236053467
    7. '  ' → logprob: -9.298980712890625
    8. '
' → logprob: -9.298980712890625
    9. '()' → logprob: -9.923980712890625
    10. '    ' → logprob: -10.298980712890625

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3067109286785126
    2. '__' → logprob: -1.556710958480835
    3. 'def' → logprob: -4.556710720062256
    4. ' ' → logprob: -4.681710720062256
    5. '    ' → logprob: -4.806710720062256
    6. '<|end|>' → logprob: -4.931710720062256
    7. '    
' → logprob: -5.181710720062256
    8. ' __' → logprob: -5.556710720062256
    9. ' def' → logprob: -5.806710720062256
    10. ' 
' → logprob: -6.431710720062256

Token 272: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.029044851660728455
    2. '   ' → logprob: -3.7790448665618896
    3. ' __' → logprob: -5.4040446281433105
    4. 'def' → logprob: -6.7790446281433105
    5. ' def' → logprob: -9.404045104980469
    6. '    
' → logprob: -11.154045104980469
    7. '__
' → logprob: -11.904045104980469
    8. '.__' → logprob: -12.029045104980469
    9. '___' → logprob: -12.404045104980469
    10. '
' → logprob: -12.779045104980469

Token 273: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5759397745132446
    2. 'rm' → logprob: -0.8259397745132446
    3. 'mul' → logprob: -15.950940132141113
    4. 'rand' → logprob: -16.075939178466797
    5. '```' → logprob: -17.325939178466797
    6. 'sub' → logprob: -17.450939178466797
    7. 'rs' → logprob: -17.950939178466797
    8. '
' → logprob: -17.950939178466797
    9. 'repr' → logprob: -18.325939178466797
    10. 'ror' → logprob: -18.575939178466797

Token 274: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.014199472963809967
    2. 'mul' → logprob: -4.264199256896973
    3. 'add' → logprob: -10.764199256896973
    4. '__' → logprob: -11.889199256896973
    5. '_sub' → logprob: -12.014199256896973
    6. '_mul' → logprob: -13.639199256896973
    7. 'r' → logprob: -14.764199256896973
    8. ' mul' → logprob: -16.26420021057129
    9. 'pow' → logprob: -16.26420021057129
    10. '```' → logprob: -16.51420021057129

Token 275: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. '___' → logprob: -17.125
    4. '__
' → logprob: -17.375
    5. '__.__' → logprob: -17.5
    6. '____' → logprob: -17.625
    7. '__*/' → logprob: -18.25
    8. '__

' → logprob: -18.5
    9. '__[' → logprob: -19.625
    10. '__
' → logprob: -19.625

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00410998472943902
    2. '__' → logprob: -6.129109859466553
    3. ' =' → logprob: -6.254109859466553
    4. '_' → logprob: -15.504110336303711
    5. '_=' → logprob: -16.12911033630371
    6. '   ' → logprob: -16.75411033630371
    7. '=lambda' → logprob: -16.87911033630371
    8. '​' → logprob: -17.62911033630371
    9. ' ' → logprob: -17.75411033630371
    10. '___' → logprob: -17.87911033630371

Token 277: ' __' (ID: 2516)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.007020360324531794
    2. ' lambda' → logprob: -5.382020473480225
    3. '(lambda' → logprob: -6.132020473480225
    4. '__' → logprob: -8.757019996643066
    5. '=lambda' → logprob: -10.132019996643066
    6. 'def' → logprob: -11.132019996643066
    7. '_lambda' → logprob: -11.382019996643066
    8. 'staticmethod' → logprob: -14.507019996643066
    9. '__(' → logprob: -15.132019996643066
    10. 'classmethod' → logprob: -15.257019996643066

Token 278: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0005094261723570526
    2. 'mul' → logprob: -7.750509262084961
    3. 'add' → logprob: -10.250509262084961
    4. 'ub' → logprob: -11.000509262084961
    5. 'r' → logprob: -11.500509262084961
    6. 'pow' → logprob: -11.875509262084961
    7. 'neg' → logprob: -12.250509262084961
    8. '__' → logprob: -13.625509262084961
    9. '```' → logprob: -13.625509262084961
    10. 'mod' → logprob: -13.875509262084961

Token 279: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.469590491382405e-05
    2. '<|end|>' → logprob: -10.12507438659668
    3. 'def' → logprob: -10.87507438659668
    4. '    
' → logprob: -12.25007438659668
    5. '__' → logprob: -12.87507438659668
    6. '  ' → logprob: -13.37507438659668
    7. '    ' → logprob: -13.50007438659668
    8. '
' → logprob: -13.62507438659668
    9. '<|end|>' → logprob: -14.75007438659668
    10. '       ' → logprob: -14.75007438659668

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008764470112510026
    2. 'def' → logprob: -7.375876426696777
    3. '__' → logprob: -9.250876426696777
    4. '<|end|>' → logprob: -9.500876426696777
    5. ' def' → logprob: -10.125876426696777
    6. ' ' → logprob: -11.000876426696777
    7. '```' → logprob: -12.000876426696777
    8. '  ' → logprob: -12.125876426696777
    9. '    ' → logprob: -12.250876426696777
    10. '	def' → logprob: -14.000876426696777

Token 281: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11463696509599686
    2. '__' (adapté à ' __') → logprob: -3.1146368980407715
    3. '   ' → logprob: -3.4896368980407715
    4. ' def' → logprob: -3.9896368980407715
    5. '<|end|>' → logprob: -4.3646368980407715
    6. '(' → logprob: -6.9896368980407715
    7. ' ' → logprob: -8.11463737487793
    8. '___' → logprob: -8.23963737487793
    9. '	def' → logprob: -8.61463737487793
    10. '<|end|>' → logprob: -9.61463737487793

Token 282: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -1.0280383548888494e-06
    2. 'mul' → logprob: -14.125000953674316
    3. 'r' → logprob: -15.500000953674316
    4. 'RM' → logprob: -20.875001907348633
    5. '```' → logprob: -21.500001907348633
    6. 'rx' → logprob: -21.625001907348633
    7. 'pow' → logprob: -21.875001907348633
    8. 'rf' → logprob: -21.875001907348633
    9. '
' → logprob: -22.000001907348633
    10. 'rum' → logprob: -22.000001907348633

Token 283: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -2.5776860184123507e-06
    2. 'ult' → logprob: -13.00000286102295
    3. 'mul' → logprob: -15.50000286102295
    4. 'u' → logprob: -18.625001907348633
    5. ' mul' → logprob: -19.500001907348633
    6. 'ул' → logprob: -19.875001907348633
    7. '_mul' → logprob: -20.500001907348633
    8. 'ultiply' → logprob: -20.875001907348633
    9. 'ull' → logprob: -21.375001907348633
    10. 'Mul' → logprob: -21.500001907348633

Token 284: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '__
' → logprob: -15.000000953674316
    3. '__.__' → logprob: -15.125000953674316
    4. '=' → logprob: -16.125
    5. '__
' → logprob: -16.625
    6. '____' → logprob: -16.75
    7. '___' → logprob: -17.0
    8. '__

' → logprob: -17.125
    9. '__[' → logprob: -17.75
    10. '_' → logprob: -18.0

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006789858918637037
    2. ' =' → logprob: -5.006789684295654
    3. '__' → logprob: -9.506790161132812
    4. '_=' → logprob: -16.506790161132812
    5. '   ' → logprob: -17.506790161132812
    6. '_' → logprob: -17.756790161132812
    7. ' __' → logprob: -18.006790161132812
    8. '=
' → logprob: -18.506790161132812
    9. '＝' → logprob: -19.131790161132812
    10. '=

' → logprob: -19.631790161132812

Token 286: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.061054359131958e-06
    2. ' __' → logprob: -11.750007629394531
    3. '_mul' → logprob: -16.12500762939453
    4. '___' → logprob: -17.37500762939453
    5. 'mul' → logprob: -20.37500762939453
    6. '_' → logprob: -20.75000762939453
    7. '____' → logprob: -21.37500762939453
    8. '_m' → logprob: -21.75000762939453
    9. '   ' → logprob: -22.75000762939453
    10. '.__' → logprob: -23.50000762939453

Token 287: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.004088609013706446
    2. '_mul' → logprob: -5.754088401794434
    3. '__' → logprob: -7.004088401794434
    4. 'Mul' → logprob: -14.254088401794434
    5. ' mul' → logprob: -15.004088401794434
    6. 'm' → logprob: -15.004088401794434
    7. 'multiply' → logprob: -15.004088401794434
    8. '.mul' → logprob: -16.12908935546875
    9. 'mu' → logprob: -16.25408935546875
    10. '___' → logprob: -16.37908935546875

Token 288: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009744709241203964
    2. 'def' → logprob: -7.500974655151367
    3. '<|end|>' → logprob: -8.125974655151367
    4. ' def' → logprob: -9.625974655151367
    5. '	def' → logprob: -10.250974655151367
    6. '
' → logprob: -11.500974655151367
    7. '    
' → logprob: -12.875974655151367
    8. ',' → logprob: -12.875974655151367
    9. '<|end|>' → logprob: -12.875974655151367
    10. '  ' → logprob: -13.125974655151367

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00338114146143198
    2. 'def' → logprob: -5.878381252288818
    3. ' def' → logprob: -7.628381252288818
    4. '	def' → logprob: -10.25338077545166
    5. '__' → logprob: -10.25338077545166
    6. ' ' → logprob: -11.50338077545166
    7. '```' → logprob: -13.00338077545166
    8. '    
' → logprob: -13.25338077545166
    9. '<|end|>' → logprob: -13.87838077545166
    10. '  ' → logprob: -14.25338077545166

Token 290: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' (adapté à ' __') → logprob: -0.10867895931005478
    2. 'def' → logprob: -2.3586790561676025
    3. ' def' → logprob: -5.233678817749023
    4. '   ' → logprob: -6.108678817749023
    5. ' __' → logprob: -7.108678817749023
    6. ' ' → logprob: -10.358678817749023
    7. '(__' → logprob: -12.358678817749023
    8. '```' → logprob: -12.483678817749023
    9. '().__' → logprob: -12.608678817749023
    10. '	def' → logprob: -12.983678817749023

Token 291: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.047395240515470505
    2. 'tr' → logprob: -3.5473952293395996
    3. 'pow' → logprob: -4.0473952293396
    4. 'rf' → logprob: -12.047395706176758
    5. '```' → logprob: -12.297395706176758
    6. 'rp' → logprob: -12.672395706176758
    7. '
' → logprob: -12.922395706176758
    8. 'div' → logprob: -13.297395706176758
    9. 'neg' → logprob: -13.422395706176758
    10. 'repr' → logprob: -13.922395706176758

Token 292: 'tr' (ID: 371)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.38730281591415405
    2. 'tr' → logprob: -1.1373028755187988
    3. 'div' → logprob: -8.38730239868164
    4. 'mul' → logprob: -8.88730239868164
    5. 'add' → logprob: -10.01230239868164
    6. 'sub' → logprob: -11.63730239868164
    7. '```' → logprob: -11.88730239868164
    8. 'r' → logprob: -13.13730239868164
    9. 'power' → logprob: -13.63730239868164
    10. '
' → logprob: -14.88730239868164

Token 293: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0010288810590282083
    2. 'ue' → logprob: -7.251029014587402
    3. 'u' → logprob: -8.501029014587402
    4. '__' → logprob: -9.751029014587402
    5. 'ud' → logprob: -10.501029014587402
    6. 'ed' → logprob: -11.501029014587402
    7. 'tr' → logprob: -11.626029014587402
    8. '```' → logprob: -12.501029014587402
    9. 'def' → logprob: -13.626029014587402
    10. '#' → logprob: -14.001029014587402

Token 294: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0036592145916074514
    2. '__' → logprob: -5.628659248352051
    3. 'div' → logprob: -9.87865924835205
    4. '/' → logprob: -12.25365924835205
    5. '/__' → logprob: -13.62865924835205
    6. 'ef' → logprob: -15.00365924835205
    7. 'e' → logprob: -15.25365924835205
    8. 'IV' → logprob: -15.87865924835205
    9. 'ivi' → logprob: -16.003658294677734
    10. 'v' → logprob: -16.003658294677734

Token 295: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0280383548888494e-06
    2. '__
' → logprob: -14.500000953674316
    3. '=' → logprob: -15.750000953674316
    4. '_' → logprob: -16.375001907348633
    5. '____' → logprob: -16.500001907348633
    6. '___' → logprob: -16.500001907348633
    7. '__.__' → logprob: -18.250001907348633
    8. '__
' → logprob: -18.375001907348633
    9. '__

' → logprob: -18.625001907348633
    10. '__[' → logprob: -18.750001907348633

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009157438762485981
    2. ' =' → logprob: -7.25091552734375
    3. '__' → logprob: -8.50091552734375
    4. '_=' → logprob: -13.25091552734375
    5. '_' → logprob: -14.37591552734375
    6. '   ' → logprob: -17.00091552734375
    7. '___' → logprob: -17.62591552734375
    8. '=
' → logprob: -17.87591552734375
    9. '=None' → logprob: -18.12591552734375
    10. 'def' → logprob: -18.37591552734375

Token 297: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759395956993103
    2. ' __' → logprob: -0.8259395956993103
    3. '.__' → logprob: -17.200939178466797
    4. 'def' → logprob: -17.700939178466797
    5. ' _' → logprob: -18.575939178466797
    6. ' def' → logprob: -18.700939178466797
    7. '___' → logprob: -19.325939178466797
    8. '/__' → logprob: -19.325939178466797
    9. ' ' → logprob: -19.450939178466797
    10. '_' → logprob: -19.450939178466797

Token 298: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00014299227041192353
    2. 'div' → logprob: -9.000143051147461
    3. 'mul' → logprob: -11.125143051147461
    4. 'pow' → logprob: -12.750143051147461
    5. '__' → logprob: -13.875143051147461
    6. 'sub' → logprob: -14.875143051147461
    7. '_tr' → logprob: -15.125143051147461
    8. ' tr' → logprob: -15.750143051147461
    9. 'r' → logprob: -16.12514305114746
    10. 'flo' → logprob: -16.62514305114746

Token 299: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0009858887642621994
    2. 'ed' → logprob: -7.375986099243164
    3. 'ue' → logprob: -9.000986099243164
    4. 'u' → logprob: -9.000986099243164
    5. '__' → logprob: -9.750986099243164
    6. 'div' → logprob: -10.625986099243164
    7. 'ud' → logprob: -11.625986099243164
    8. '```' → logprob: -11.750986099243164
    9. '   ' → logprob: -12.000986099243164
    10. 'ied' → logprob: -13.500986099243164

Token 300: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.8193366486229934e-05
    2. 'v' → logprob: -11.625018119812012
    3. 'div' → logprob: -12.125018119812012
    4. 'vi' → logprob: -13.625018119812012
    5. '__' → logprob: -14.125018119812012
    6. ' iv' → logprob: -14.875018119812012
    7. 'vis' → logprob: -15.375018119812012
    8. 'IV' → logprob: -15.625018119812012
    9. '```' → logprob: -15.625018119812012
    10. 'e' → logprob: -15.875018119812012

Token 301: '__
' (ID: 26336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027264172676950693
    2. 'def' → logprob: -6.0027265548706055
    3. '<|end|>' → logprob: -8.752726554870605
    4. ' def' → logprob: -9.877726554870605
    5. '```' → logprob: -11.627726554870605
    6. '	def' → logprob: -11.627726554870605
    7. '
' → logprob: -11.752726554870605
    8. '    
' → logprob: -11.877726554870605
    9. ')' → logprob: -12.877726554870605
    10. ' ' → logprob: -13.252726554870605

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006853311788290739
    2. 'def' → logprob: -5.006853103637695
    3. ' def' → logprob: -9.256853103637695
    4. '```' → logprob: -10.881853103637695
    5. '<|end|>' → logprob: -11.381853103637695
    6. '	def' → logprob: -12.381853103637695
    7. '+' → logprob: -12.631853103637695
    8. ' ' → logprob: -13.006853103637695
    9. '...' → logprob: -14.506853103637695
    10. '<|end|>' → logprob: -14.631853103637695

Token 303: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050514593720436096
    2. '   ' → logprob: -3.1755146980285645
    3. ' def' → logprob: -4.9255146980285645
    4. ' ' → logprob: -9.300514221191406
    5. '(' → logprob: -10.550514221191406
    6. '__' (adapté à ' __') → logprob: -10.675514221191406
    7. '```' → logprob: -10.675514221191406
    8. '	def' → logprob: -11.050514221191406
    9. '#' → logprob: -11.925514221191406
    10. 'ndef' → logprob: -12.175514221191406

Token 304: 'r' (ID: 81)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3305129408836365
    2. 'eq' → logprob: -1.3305130004882812
    3. 'neg' → logprob: -4.080513000488281
    4. 'flo' → logprob: -9.205513000488281
    5. 'ip' → logprob: -9.830513000488281
    6. 'lt' → logprob: -10.705513000488281
    7. 'pos' → logprob: -11.455513000488281
    8. 'int' → logprob: -11.830513000488281
    9. 'hash' → logprob: -13.205513000488281
    10. 'xor' → logprob: -13.330513000488281

Token 305: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -7.553032628493384e-05
    2. 'add' → logprob: -9.500075340270996
    3. '_pow' → logprob: -14.750075340270996
    4. 'power' → logprob: -16.875076293945312
    5. 'Pow' → logprob: -17.250076293945312
    6. '```' → logprob: -17.500076293945312
    7. '
' → logprob: -17.875076293945312
    8. 'pos' → logprob: -18.000076293945312
    9. ' pow' → logprob: -18.250076293945312
    10. '__' → logprob: -18.625076293945312

Token 306: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '___' → logprob: -15.000000953674316
    3. '__.__' → logprob: -16.875
    4. '__
' → logprob: -17.0
    5. '_' → logprob: -17.125
    6. '__)' → logprob: -17.625
    7. '____' → logprob: -17.75
    8. '__,' → logprob: -18.375
    9. '__(' → logprob: -18.5
    10. '__
' → logprob: -18.625

Token 307: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002078503370285
    2. ' =' → logprob: -2.350207805633545
    3. '_=' → logprob: -14.350208282470703
    4. '   ' → logprob: -14.975208282470703
    5. '__' → logprob: -15.725208282470703
    6. '    ' → logprob: -16.225208282470703
    7. '=None' → logprob: -16.600208282470703
    8. '=self' → logprob: -17.350208282470703
    9. '＝' → logprob: -17.475208282470703
    10. ' ' → logprob: -17.475208282470703

Token 308: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00376314390450716
    2. ' __' → logprob: -5.628763198852539
    3. 'pow' → logprob: -8.753763198852539
    4. '_pow' → logprob: -13.253763198852539
    5. 'Pow' → logprob: -13.628763198852539
    6. ' pow' → logprob: -13.628763198852539
    7. '.__' → logprob: -15.628763198852539
    8. '**' → logprob: -15.628763198852539
    9. '___' → logprob: -15.628763198852539
    10. ' Pow' → logprob: -16.25376319885254

Token 309: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -4.320199877838604e-07
    2. '__' → logprob: -15.375
    3. '_pow' → logprob: -16.125
    4. 'power' → logprob: -17.125
    5. 'pw' → logprob: -18.25
    6. ' pow' → logprob: -18.875
    7. '(pow' → logprob: -19.5
    8. 'po' → logprob: -19.5
    9. '```' → logprob: -20.125
    10. 'p' → logprob: -20.5

Token 310: '__
' (ID: 26336)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8047909736633301
    2. '   ' → logprob: -0.9297909736633301
    3. '<|end|>' → logprob: -2.67979097366333
    4. 'def' → logprob: -2.80479097366333
    5. '    
' → logprob: -4.92979097366333
    6. '```' → logprob: -5.05479097366333
    7. '(
' → logprob: -6.42979097366333
    8. ' def' → logprob: -6.67979097366333
    9. ')' → logprob: -6.67979097366333
    10. '<|end|>' → logprob: -6.67979097366333

Token 311: 'p' (ID: 79)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8451786637306213
    2. '   ' → logprob: -1.2201786041259766
    3. '
' → logprob: -1.4701786041259766
    4. ' def' → logprob: -4.595178604125977
    5. '(
' → logprob: -4.970178604125977
    6. '(' → logprob: -5.095178604125977
    7. '()' → logprob: -5.220178604125977
    8. '```' → logprob: -5.470178604125977
    9. ':' → logprob: -5.970178604125977
    10. '()
' → logprob: -6.345178604125977

Token 312: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.020703162997961044
    2. 'w' → logprob: -4.395703315734863
    3. ' =' → logprob: -5.520703315734863
    4. '=' → logprob: -6.770703315734863
    5. 'def' → logprob: -6.770703315734863
    6. 'ower' → logprob: -7.520703315734863
    7. '1' → logprob: -8.270703315734863
    8. 'r' → logprob: -8.395703315734863
    9. 'ass' → logprob: -9.145703315734863
    10. '#' → logprob: -9.145703315734863

Token 313: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.024744171649217606
    2. '[' → logprob: -3.7747442722320557
    3. '(Mod' → logprob: -6.774744033813477
    4. '[p' → logprob: -9.524744033813477
    5. '[]
' → logprob: -9.774744033813477
    6. '1' → logprob: -10.149744033813477
    7. '[M' → logprob: -10.524744033813477
    8. ' Mod' → logprob: -10.649744033813477
    9. '[B' → logprob: -11.274744033813477
    10. '[b' → logprob: -11.524744033813477

Token 314: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0564331205387134e-05
    2. 'int' → logprob: -11.50001049041748
    3. 'Ints' → logprob: -15.87501049041748
    4. '_int' → logprob: -16.875011444091797
    5. 'nt' → logprob: -17.250011444091797
    6. '_Int' → logprob: -17.375011444091797
    7. '	Int' → logprob: -17.500011444091797
    8. '<Int' → logprob: -17.500011444091797
    9. 'In' → logprob: -17.625011444091797
    10. ' Int' → logprob: -17.875011444091797

Token 315: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001884015218820423
    2. '1' → logprob: -8.875188827514648
    3. '(B' → logprob: -10.000188827514648
    4. '(p' → logprob: -13.875188827514648
    5. '2' → logprob: -14.375188827514648
    6. '(
' → logprob: -14.750188827514648
    7. '([' → logprob: -15.000188827514648
    8. '(pow' → logprob: -15.250188827514648
    9. ')' → logprob: -15.875188827514648
    10. '((' → logprob: -16.12518882751465

Token 316: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11235937476158142
    2. '2' → logprob: -2.3623592853546143
    3. 'B' → logprob: -4.987359523773193
    4. '10' → logprob: -5.362359523773193
    5. '0' → logprob: -7.862359523773193
    6. '3' → logprob: -8.987359046936035
    7. '(' → logprob: -11.362359046936035
    8. '100' → logprob: -12.237359046936035
    9. '5' → logprob: -12.362359046936035
    10. '
' → logprob: -12.487359046936035

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ' )' → logprob: -11.625018119812012
    3. ')
' → logprob: -12.750018119812012
    4. 'B' → logprob: -13.250018119812012
    5. ')p' → logprob: -13.750018119812012
    6. 'p' → logprob: -14.750018119812012
    7. '0' → logprob: -14.750018119812012
    8. ' ' → logprob: -14.750018119812012
    9. '1' → logprob: -15.375018119812012
    10. ',' → logprob: -15.625018119812012

Token 318: 'q' (ID: 80)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32612812519073486
    2. 'for' → logprob: -1.5761281251907349
    3. '+' → logprob: -4.451128005981445
    4. 'b' → logprob: -4.826128005981445
    5. 'if' → logprob: -4.951128005981445
    6. '#' → logprob: -4.951128005981445
    7. 'f' → logprob: -5.326128005981445
    8. 'B' → logprob: -5.326128005981445
    9. '0' → logprob: -5.826128005981445
    10. '(' → logprob: -5.951128005981445

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12715277075767517
    2. '=' → logprob: -2.127152681350708
    3. 'p' → logprob: -8.627152442932129
    4. 'w' → logprob: -11.752152442932129
    5. '1' → logprob: -12.502152442932129
    6. ',' → logprob: -12.502152442932129
    7. ' ' → logprob: -12.627152442932129
    8. 'f' → logprob: -12.627152442932129
    9. '=p' → logprob: -12.752152442932129
    10. 'r' → logprob: -12.877152442932129

Token 320: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.0013040454359725118
    2. '1' → logprob: -7.5013041496276855
    3. ' Mod' → logprob: -8.001303672790527
    4. 'p' → logprob: -8.126303672790527
    5. '(Mod' → logprob: -9.751303672790527
    6. 'pow' → logprob: -10.876303672790527
    7. '0' → logprob: -11.751303672790527
    8. 'MOD' → logprob: -11.751303672790527
    9. '2' → logprob: -12.376303672790527
    10. ' ' → logprob: -12.751303672790527

Token 321: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -9.014684110297821e-06
    2. 'int' → logprob: -11.625008583068848
    3. ' Int' → logprob: -18.000009536743164
    4. 'nt' → logprob: -18.125009536743164
    5. '_int' → logprob: -18.625009536743164
    6. '	Int' → logprob: -18.625009536743164
    7. 'Ints' → logprob: -19.625009536743164
    8. 'INT' → logprob: -19.625009536743164
    9. '<Int' → logprob: -19.875009536743164
    10. '_Int' → logprob: -20.125009536743164

Token 322: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006933739641681314
    2. '(B' → logprob: -7.375693321228027
    3. '(p' → logprob: -10.125693321228027
    4. '(W' → logprob: -11.000693321228027
    5. '((' → logprob: -12.375693321228027
    6. '1' → logprob: -13.375693321228027
    7. '(-' → logprob: -13.750693321228027
    8. ' (' → logprob: -14.250693321228027
    9. '(
' → logprob: -14.750693321228027
    10. '0' → logprob: -14.750693321228027

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6451611518859863
    2. '1' → logprob: -0.7701611518859863
    3. 'B' → logprob: -4.645161151885986
    4. 'W' → logprob: -6.270161151885986
    5. '10' → logprob: -8.645160675048828
    6. '-' → logprob: -8.770160675048828
    7. '2' → logprob: -9.020160675048828
    8. '100' → logprob: -9.270160675048828
    9. '(B' → logprob: -9.270160675048828
    10. '(' → logprob: -9.895160675048828

Token 324: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029112942866049707
    2. ')
' → logprob: -8.250290870666504
    3. ' )' → logprob: -11.125290870666504
    4. ')p' → logprob: -11.625290870666504
    5. ')

' → logprob: -13.875290870666504
    6. '1' → logprob: -14.000290870666504
    7. '
' → logprob: -14.250290870666504
    8. '+' → logprob: -14.375290870666504
    9. ')b' → logprob: -14.375290870666504
    10. 'B' → logprob: -15.000290870666504

Token 325: 'cp' (ID: 10450)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6098099946975708
    2. 'p' → logprob: -1.2348099946975708
    3. '#' → logprob: -2.6098098754882812
    4. 'if' → logprob: -3.4848098754882812
    5. 'i' → logprob: -4.109809875488281
    6. ')' → logprob: -5.109809875488281
    7. 'f' → logprob: -5.109809875488281
    8. 'n' → logprob: -5.234809875488281
    9. '+' → logprob: -5.234809875488281
    10. '=' → logprob: -5.609809875488281

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38472190499305725
    2. '=' → logprob: -1.6347218751907349
    3. 'p' → logprob: -2.8847219944000244
    4. 'w' → logprob: -3.6347219944000244
    5. '=B' → logprob: -4.384721755981445
    6. 'r' → logprob: -4.884721755981445
    7. 'B' → logprob: -5.009721755981445
    8. 'ow' → logprob: -5.634721755981445
    9. 'ool' → logprob: -6.884721755981445
    10. 'op' → logprob: -6.884721755981445

Token 327: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.04052159562706947
    2. 'p' → logprob: -3.6655216217041016
    3. '1' → logprob: -5.040521621704102
    4. '0' → logprob: -6.415521621704102
    5. 'pow' → logprob: -6.665521621704102
    6. ' Mod' → logprob: -6.790521621704102
    7. 'B' → logprob: -6.790521621704102
    8. '[p' → logprob: -7.040521621704102
    9. '(Mod' → logprob: -7.665521621704102
    10. '[' → logprob: -8.040521621704102

Token 328: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.796184723294573e-06
    2. 'int' → logprob: -12.125005722045898
    3. 'p' → logprob: -16.3750057220459
    4. '_int' → logprob: -17.1250057220459
    5. ' Int' → logprob: -17.8750057220459
    6. '<Int' → logprob: -18.3750057220459
    7. '_Int' → logprob: -18.5000057220459
    8. 'Ints' → logprob: -18.7500057220459
    9. '_INT' → logprob: -18.8750057220459
    10. '	Int' → logprob: -18.8750057220459

Token 329: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026585354935377836
    2. '(B' → logprob: -6.377658367156982
    3. '(p' → logprob: -7.752658367156982
    4. '0' → logprob: -7.877658367156982
    5. '1' → logprob: -9.25265884399414
    6. 'p' → logprob: -10.75265884399414
    7. 'B' → logprob: -11.62765884399414
    8. '(
' → logprob: -11.87765884399414
    9. '()' → logprob: -12.87765884399414
    10. '(W' → logprob: -12.87765884399414

Token 330: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6928550601005554
    2. 'B' → logprob: -0.8178550601005554
    3. '0' → logprob: -3.0678551197052
    4. 'p' → logprob: -5.442854881286621
    5. 'W' → logprob: -5.442854881286621
    6. '2' → logprob: -6.942854881286621
    7. '-' → logprob: -7.817854881286621
    8. '(B' → logprob: -7.942854881286621
    9. 'min' → logprob: -8.192854881286621
    10. '10' → logprob: -8.442854881286621

Token 331: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07902351766824722
    2. ')
' → logprob: -2.579023599624634
    3. ')
' → logprob: -10.204023361206055
    4. 'p' → logprob: -10.579023361206055
    5. ')p' → logprob: -10.829023361206055
    6. 'B' → logprob: -11.454023361206055
    7. '1' → logprob: -11.954023361206055
    8. ' )' → logprob: -12.329023361206055
    9. ')

' → logprob: -12.579023361206055
    10. '
' → logprob: -12.579023361206055

Token 332: 'cq' (ID: 167093)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6445512771606445
    2. '#' → logprob: -1.7695512771606445
    3. 'factor' → logprob: -1.8945512771606445
    4. 'p' → logprob: -2.1445512771606445
    5. 'n' → logprob: -2.5195512771606445
    6. 'f' → logprob: -2.7695512771606445
    7. 'cp' → logprob: -3.5195512771606445
    8. 'dp' → logprob: -3.6445512771606445
    9. 'for' → logprob: -3.7695512771606445
    10. 'fact' → logprob: -4.0195512771606445

Token 333: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003604224883019924
    2. ' =' → logprob: -5.628604412078857
    3. '=
' → logprob: -13.2536039352417
    4. ')' → logprob: -13.5036039352417
    5. 'p' → logprob: -15.0036039352417
    6. '+=' → logprob: -15.7536039352417
    7. '=

' → logprob: -15.7536039352417
    8. ' ' → logprob: -16.128604888916016
    9. 's' → logprob: -17.003604888916016
    10. ')=' → logprob: -17.128604888916016

Token 334: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -7.505351095460355e-05
    2. '(Mod' → logprob: -10.000075340270996
    3. '0' → logprob: -10.875075340270996
    4. ' Mod' → logprob: -11.500075340270996
    5. 'Mo' → logprob: -15.000075340270996
    6. 'Modulo' → logprob: -16.37507438659668
    7. 'MOD' → logprob: -16.75007438659668
    8. '(' → logprob: -17.00007438659668
    9. '_mod' → logprob: -17.00007438659668
    10. '_Mod' → logprob: -17.25007438659668

Token 335: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.625000953674316
    3. 'int' → logprob: -14.750000953674316
    4. '(Int' → logprob: -17.000001907348633
    5. '0' → logprob: -17.375001907348633
    6. ' Int' → logprob: -17.500001907348633
    7. '	Int' → logprob: -18.750001907348633
    8. 'INT' → logprob: -19.000001907348633
    9. '<Int' → logprob: -19.125001907348633
    10. 'In' → logprob: -19.375001907348633

Token 336: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.117345684382599e-05
    2. '0' → logprob: -11.125020980834961
    3. '(Mod' → logprob: -12.375020980834961
    4. '(
' → logprob: -14.375020980834961
    5. '()' → logprob: -14.875020980834961
    6. ' (' → logprob: -14.875020980834961
    7. '=' → logprob: -14.875020980834961
    8. '(p' → logprob: -15.250020980834961
    9. 'p' → logprob: -16.12502098083496
    10. ' =' → logprob: -17.25002098083496

Token 337: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.923874702304602e-05
    2. '1' → logprob: -9.875089645385742
    3. ' ' → logprob: -11.000089645385742
    4. ')' → logprob: -11.125089645385742
    5. 'B' → logprob: -12.750089645385742
    6. 'p' → logprob: -14.125089645385742
    7. '   ' → logprob: -14.250089645385742
    8. ')
' → logprob: -15.437589645385742
    9. '2' → logprob: -15.625089645385742
    10. 'W' → logprob: -16.000089645385742

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9160102712921798e-05
    2. ')
' → logprob: -10.500029563903809
    3. '()' → logprob: -14.125029563903809
    4. ' )' → logprob: -15.750029563903809
    5. '   ' → logprob: -16.250028610229492
    6. '0' → logprob: -16.500028610229492
    7. '#' → logprob: -16.750028610229492
    8. '())' → logprob: -16.750028610229492
    9. ')

' → logprob: -16.875028610229492
    10. '+' → logprob: -16.875028610229492

Token 339: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0459098815917969
    2. 'dp' → logprob: -1.5459098815917969
    3. 'p' → logprob: -1.7959098815917969
    4. 'i' → logprob: -2.670909881591797
    5. 'def' → logprob: -3.045909881591797
    6. 'f' → logprob: -3.170909881591797
    7. 'if' → logprob: -3.295909881591797
    8. 'n' → logprob: -3.920909881591797
    9. '#' → logprob: -4.045909881591797
    10. 'B' → logprob: -4.920909881591797

Token 340: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0726768970489502
    2. ' i' → logprob: -2.82267689704895
    3. '_' → logprob: -4.572676658630371
    4. ' b' → logprob: -9.197676658630371
    5. ' ' → logprob: -9.447676658630371
    6. ' B' → logprob: -9.822676658630371
    7. 'i' → logprob: -9.822676658630371
    8. ' w' → logprob: -11.447676658630371
    9. ' ' → logprob: -12.197676658630371
    10. ' x' → logprob: -12.447676658630371

Token 341: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012930437922477722
    2. 'in' → logprob: -4.387930393218994
    3. ' ' → logprob: -7.887930393218994
    4. '_' → logprob: -11.137930870056152
    5. 'range' → logprob: -11.887930870056152
    6. ',' → logprob: -12.637930870056152
    7. 'n' → logprob: -12.762930870056152
    8. ' i' → logprob: -12.762930870056152
    9. ' _' → logprob: -12.887930870056152
    10. ' ' → logprob: -13.012930870056152

Token 342: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142260193824768
    2. ' range' → logprob: -1.7014225721359253
    3. '	range' → logprob: -13.201422691345215
    4. ' ' → logprob: -13.201422691345215
    5. 'r' → logprob: -13.451422691345215
    6. 'rang' → logprob: -14.076422691345215
    7. '[' → logprob: -14.201422691345215
    8. '(range' → logprob: -14.451422691345215
    9. 'B' → logprob: -15.201422691345215
    10. '   ' → logprob: -15.326422691345215

Token 343: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5234694480895996
    2. '(B' → logprob: -0.8984694480895996
    3. '(W' → logprob: -8.398469924926758
    4. '(
' → logprob: -9.523469924926758
    5. '1' → logprob: -11.023469924926758
    6. '(max' → logprob: -12.023469924926758
    7. '((' → logprob: -12.023469924926758
    8. '(min' → logprob: -12.273469924926758
    9. '(A' → logprob: -12.648469924926758
    10. 'B' → logprob: -12.648469924926758

Token 344: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09881258755922318
    2. '1' → logprob: -2.9738125801086426
    3. 'max' → logprob: -4.348812580108643
    4. 'W' → logprob: -4.598812580108643
    5. ' B' → logprob: -4.598812580108643
    6. 'min' → logprob: -5.348812580108643
    7. '2' → logprob: -6.723812580108643
    8. '10' → logprob: -6.723812580108643
    9. '100' → logprob: -7.473812580108643
    10. ' ' → logprob: -7.598812580108643

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12757961452007294
    2. ' ,' → logprob: -2.127579689025879
    3. ',B' → logprob: -7.377579689025879
    4. ' B' → logprob: -11.502579689025879
    5. 'B' → logprob: -12.127579689025879
    6. ' ,
' → logprob: -12.502579689025879
    7. ',
' → logprob: -12.877579689025879
    8. ' ' → logprob: -13.252579689025879
    9. '   ' → logprob: -14.502579689025879
    10. ',b' → logprob: -14.627579689025879

Token 346: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09080266952514648
    2. ' B' → logprob: -2.4658026695251465
    3. 'W' → logprob: -6.9658026695251465
    4. 'min' → logprob: -8.090803146362305
    5. 'max' → logprob: -8.715803146362305
    6. ' W' → logprob: -8.965803146362305
    7. ' min' → logprob: -8.965803146362305
    8. ' ' → logprob: -9.465803146362305
    9. ' max' → logprob: -9.465803146362305
    10. '100' → logprob: -11.840803146362305

Token 347: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026384824886918068
    2. ' +' → logprob: -3.6513848304748535
    3. '):' → logprob: -10.276384353637695
    4. '+B' → logprob: -10.776384353637695
    5. '):
' → logprob: -11.401384353637695
    6. '+
' → logprob: -11.776384353637695
    7. '-' → logprob: -12.651384353637695
    8. ' +
' → logprob: -14.026384353637695
    9. ',' → logprob: -14.151384353637695
    10. '   ' → logprob: -14.401384353637695

Token 348: ' W' (ID: 486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005745098926126957
    2. ' ' → logprob: -5.255744934082031
    3. '2' → logprob: -8.130744934082031
    4. ' W' → logprob: -8.880744934082031
    5. 'W' → logprob: -9.630744934082031
    6. 'B' → logprob: -12.005744934082031
    7. ' B' → logprob: -12.255744934082031
    8. '   ' → logprob: -14.880744934082031
    9. '3' → logprob: -15.630744934082031
    10. '
' → logprob: -16.13074493408203

Token 349: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14507707953453064
    2. '):' → logprob: -2.3950769901275635
    3. ' +' → logprob: -3.1450769901275635
    4. '):
' → logprob: -7.270077228546143
    5. ' ):' → logprob: -10.395076751708984
    6. '   ' → logprob: -10.520076751708984
    7. '1' → logprob: -10.520076751708984
    8. ')' → logprob: -11.270076751708984
    9. ' ' → logprob: -12.020076751708984
    10. '+:' → logprob: -12.895076751708984

Token 350: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008137972326949239
    2. ' ' → logprob: -7.125813961029053
    3. '2' → logprob: -11.625813484191895
    4. '   ' → logprob: -15.250813484191895
    5. ')' → logprob: -16.75081443786621
    6. '  ' → logprob: -17.25081443786621
    7. '3' → logprob: -17.37581443786621
    8. '```' → logprob: -18.43831443786621
    9. '
' → logprob: -18.50081443786621
    10. 'B' → logprob: -18.93831443786621

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. ' ' → logprob: -10.250038146972656
    3. '2' → logprob: -12.875038146972656
    4. '   ' → logprob: -15.937538146972656
    5. 'B' → logprob: -16.750038146972656
    6. ')' → logprob: -17.125038146972656
    7. '  ' → logprob: -17.250038146972656
    8. '```' → logprob: -17.375038146972656
    9. '3' → logprob: -17.562538146972656
    10. '１' → logprob: -17.875038146972656

Token 352: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009725636919029057
    2. ':' → logprob: -7.250972747802734
    3. '):
' → logprob: -9.000972747802734
    4. ' ):' → logprob: -9.250972747802734
    5. ')' → logprob: -10.125972747802734
    6. ',' → logprob: -14.000972747802734
    7. '+' → logprob: -14.375972747802734
    8. '   ' → logprob: -14.750972747802734
    9. ' :' → logprob: -14.750972747802734
    10. ']:' → logprob: -15.500972747802734

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010534112807363272
    2. '<|end|>' → logprob: -7.376053333282471
    3. '	p' → logprob: -9.376053810119629
    4. '	if' → logprob: -9.751053810119629
    5. '    
' → logprob: -10.376053810119629
    6. ' p' → logprob: -10.376053810119629
    7. ' if' → logprob: -10.626053810119629
    8. '' → logprob: -10.751053810119629
    9. ',' → logprob: -10.876053810119629
    10. '<|end|>' → logprob: -11.001053810119629

Token 354: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8245497941970825
    2. ' if' → logprob: -1.1995497941970825
    3. 'p' → logprob: -2.199549674987793
    4. '   ' → logprob: -2.199549674987793
    5. ' p' → logprob: -3.324549674987793
    6. 'cp' → logprob: -6.699549674987793
    7. ' cp' → logprob: -7.824549674987793
    8. '    ' → logprob: -8.949549674987793
    9. 's' → logprob: -9.074549674987793
    10. ' s' → logprob: -9.324549674987793

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37699422240257263
    2. ' +=' → logprob: -1.501994252204895
    3. '=' → logprob: -2.6269941329956055
    4. ' ' → logprob: -5.0019941329956055
    5. '+=' → logprob: -5.0019941329956055
    6. '.' → logprob: -5.8769941329956055
    7. ',' → logprob: -7.7519941329956055
    8. 'p' → logprob: -7.8769941329956055
    9. '+' → logprob: -8.126994132995605
    10. ')' → logprob: -8.626994132995605

Token 356: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07731317728757858
    2. 'Mod' → logprob: -3.577313184738159
    3. 'cp' → logprob: -4.07731294631958
    4. '(p' → logprob: -4.82731294631958
    5. ' p' → logprob: -5.07731294631958
    6. '(Mod' → logprob: -5.07731294631958
    7. '(cp' → logprob: -6.45231294631958
    8. '(ans' → logprob: -6.57731294631958
    9. 'ans' → logprob: -6.70231294631958
    10. ' (' → logprob: -6.82731294631958

Token 357: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0606517568230629
    2. 'cp' → logprob: -3.1856517791748047
    3. 'Mod' → logprob: -4.560651779174805
    4. '(p' → logprob: -6.435651779174805
    5. '(Mod' → logprob: -6.810651779174805
    6. ' p' → logprob: -7.185651779174805
    7. 'pow' → logprob: -7.560651779174805
    8. 'ans' → logprob: -7.685651779174805
    9. 'i' → logprob: -7.685651779174805
    10. '(' → logprob: -8.185651779174805

Token 358: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5282385945320129
    2. '-' → logprob: -1.0282385349273682
    3. '+' → logprob: -3.528238534927368
    4. ' +' → logprob: -4.028238773345947
    5. ')' → logprob: -5.903238773345947
    6. '-p' → logprob: -6.903238773345947
    7. ' /' → logprob: -7.278238773345947
    8. '*' → logprob: -8.528238296508789
    9. '+p' → logprob: -8.528238296508789
    10. 'p' → logprob: -8.653238296508789

Token 359: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1395050436258316
    2. ' p' → logprob: -2.26450514793396
    3. 'cp' → logprob: -3.88950514793396
    4. ' cp' → logprob: -6.139504909515381
    5. '
' → logprob: -7.639504909515381
    6. ' ' → logprob: -7.764504909515381
    7. ' (' → logprob: -7.764504909515381
    8. 'q' → logprob: -8.139505386352539
    9. '(p' → logprob: -8.139505386352539
    10. '(' → logprob: -8.389505386352539

Token 360: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38327232003211975
    2. '*' → logprob: -2.258272409439087
    3. '*p' → logprob: -2.258272409439087
    4. ' *' → logprob: -3.008272409439087
    5. ' +' → logprob: -3.258272409439087
    6. '+' → logprob: -4.133272171020508
    7. ')*' → logprob: -6.133272171020508
    8. ' )' → logprob: -6.508272171020508
    9. ')**' → logprob: -8.008272171020508
    10. '+p' → logprob: -8.508272171020508

Token 361: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0060057020746171474
    2. 'cp' → logprob: -5.506005764007568
    3. 'q' → logprob: -7.131005764007568
    4. ' p' → logprob: -7.381005764007568
    5. 'cq' → logprob: -8.63100528717041
    6. '(' → logprob: -9.38100528717041
    7. '   ' → logprob: -10.38100528717041
    8. '((' → logprob: -10.88100528717041
    9. 'pq' → logprob: -10.88100528717041
    10. ' ' → logprob: -10.88100528717041

Token 362: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11090392619371414
    2. ' )' → logprob: -3.2359039783477783
    3. ' +' → logprob: -3.4859039783477783
    4. ' -' → logprob: -4.110903739929199
    5. '+' → logprob: -4.735903739929199
    6. ')*' → logprob: -5.610903739929199
    7. '*' → logprob: -5.860903739929199
    8. '-' → logprob: -6.735903739929199
    9. ' *' → logprob: -7.110903739929199
    10. '   ' → logprob: -7.610903739929199

Token 363: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' ' (ID: 220)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -1.2155359983444214
    2. '(' → logprob: -1.5905359983444214
    3. 'i' → logprob: -1.9655359983444214
    4. '(i' → logprob: -2.465536117553711
    5. 'cp' → logprob: -2.715536117553711
    6. '(Mod' → logprob: -2.715536117553711
    7. 'cq' → logprob: -2.965536117553711
    8. 'q' → logprob: -2.965536117553711
    9. '((' → logprob: -4.590536117553711
    10. 'p' → logprob: -4.715536117553711

Token 365: '2' (ID: 17)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.9667167067527771
    2. '(' → logprob: -1.8417167663574219
    3. '(i' → logprob: -2.091716766357422
    4. '(Mod' → logprob: -2.091716766357422
    5. 'i' → logprob: -2.341716766357422
    6. 'q' → logprob: -3.091716766357422
    7. 'cp' → logprob: -3.716716766357422
    8. 'cq' → logprob: -3.966716766357422
    9. '((' → logprob: -4.591716766357422
    10. 'p' → logprob: -5.091716766357422

Token 366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9278322458267212
    2. '<|end|>' → logprob: -1.0528322458267212
    3. '
' → logprob: -1.4278322458267212
    4. ')' → logprob: -4.677832126617432
    5. '<|end|>' → logprob: -5.677832126617432
    6. '    
' → logprob: -6.302832126617432
    7. ' ' → logprob: -8.30283260345459
    8. ' 
' → logprob: -8.67783260345459
    9. '  
' → logprob: -9.05283260345459
    10. ')
' → logprob: -9.55283260345459

Token 367: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' print' (ID: 2123)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9562844634056091
    2. 'p' → logprob: -1.081284523010254
    3. 'if' → logprob: -1.581284523010254
    4. '   ' → logprob: -3.456284523010254
    5. '<|end|>' → logprob: -4.206284523010254
    6. ' if' → logprob: -4.706284523010254
    7. 'q' → logprob: -5.206284523010254
    8. ' p' → logprob: -5.831284523010254
    9. ' ' → logprob: -6.581284523010254
    10. '
' → logprob: -7.081284523010254

Token 369: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0020150020718574524
    2. 'ans' → logprob: -6.252015113830566
    3. '(' → logprob: -9.627015113830566
    4. '(str' → logprob: -11.377015113830566
    5. '(p' → logprob: -12.752015113830566
    6. '(
' → logprob: -13.127015113830566
    7. '(f' → logprob: -13.877015113830566
    8. '(int' → logprob: -13.877015113830566
    9. '(a' → logprob: -14.752015113830566
    10. '()' → logprob: -15.252015113830566

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.250003814697266
    3. ')
' → logprob: -14.500003814697266
    4. '))' → logprob: -15.000003814697266
    5. ',' → logprob: -15.125003814697266
    6. ')`' → logprob: -15.125003814697266
    7. '),' → logprob: -16.625003814697266
    8. ' ' → logprob: -16.875003814697266
    9. ',)' → logprob: -17.750003814697266
    10. '*' → logprob: -17.750003814697266

Token 371: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038694278337061405
    2. '<|end|>' → logprob: -6.753869533538818
    3. ':' → logprob: -7.378869533538818
    4. '=' → logprob: -7.503869533538818
    5. '#' → logprob: -7.753869533538818
    6. '(' → logprob: -7.878869533538818
    7. '[' → logprob: -8.62886905670166
    8. '+' → logprob: -8.87886905670166
    9. 'p' → logprob: -9.62886905670166
    10. '.' → logprob: -9.87886905670166

Token 372: ' cp' (ID: 27776)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10959047824144363
    2. '<|end|>' → logprob: -2.859590530395508
    3. 'p' → logprob: -3.484590530395508
    4. '   ' → logprob: -5.109590530395508
    5. ' p' → logprob: -6.234590530395508
    6. '(' → logprob: -6.359590530395508
    7. ')p' → logprob: -7.109590530395508
    8. '#' → logprob: -7.234590530395508
    9. ' ' → logprob: -7.359590530395508
    10. '(p' → logprob: -7.484590530395508

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19013921916484833
    2. '+=' → logprob: -2.0651392936706543
    3. ' =' → logprob: -3.4401392936706543
    4. ' +=' → logprob: -4.315139293670654
    5. '+' → logprob: -7.940139293670654
    6. '*=' → logprob: -7.940139293670654
    7. '=p' → logprob: -9.315138816833496
    8. '<|end|>' → logprob: -10.690138816833496
    9. ',' → logprob: -10.940138816833496
    10. '.=' → logprob: -10.940138816833496

Token 374: ' Mod' (ID: 7191)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.2959703803062439
    2. 'p' → logprob: -1.5459704399108887
    3. 'ans' → logprob: -4.170970439910889
    4. 'cq' → logprob: -4.170970439910889
    5. 'q' → logprob: -4.545970439910889
    6. ' cp' → logprob: -7.545970439910889
    7. 'pq' → logprob: -8.29596996307373
    8. ' p' → logprob: -8.42096996307373
    9. ' ans' → logprob: -8.79596996307373
    10. '(cp' → logprob: -9.42096996307373

Token 375: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.00017946491425391287
    2. 'int' → logprob: -8.750179290771484
    3. 'p' → logprob: -11.125179290771484
    4. 'nt' → logprob: -13.000179290771484
    5. 'cp' → logprob: -13.375179290771484
    6. '(p' → logprob: -14.625179290771484
    7. '_int' → logprob: -14.875179290771484
    8. 'i' → logprob: -15.375179290771484
    9. '*p' → logprob: -15.500179290771484
    10. 'ip' → logprob: -16.250179290771484

Token 376: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6955294609069824
    2. '(cp' → logprob: -1.5705294609069824
    3. '(ans' → logprob: -1.5705294609069824
    4. '(p' → logprob: -3.0705294609069824
    5. '(' → logprob: -3.8205294609069824
    6. 'i' → logprob: -5.570529460906982
    7. '((' → logprob: -5.570529460906982
    8. '(q' → logprob: -5.820529460906982
    9. 'ans' → logprob: -6.070529460906982
    10. '(B' → logprob: -6.320529460906982

Token 377: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3729611039161682
    2. 'ans' → logprob: -1.7479610443115234
    3. 'p' → logprob: -2.9979610443115234
    4. 'cp' → logprob: -3.1229610443115234
    5. 'B' → logprob: -3.6229610443115234
    6. '1' → logprob: -5.497961044311523
    7. '(ans' → logprob: -5.747961044311523
    8. '(i' → logprob: -5.997961044311523
    9. '(cp' → logprob: -5.997961044311523
    10. '(p' → logprob: -6.747961044311523

Token 378: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025083700194954872
    2. ')
' → logprob: -4.775083541870117
    3. 'if' → logprob: -5.025083541870117
    4. '+' → logprob: -6.275083541870117
    5. ' if' → logprob: -6.275083541870117
    6. '<|end|>' → logprob: -6.275083541870117
    7. ' +' → logprob: -6.525083541870117
    8. ')+' → logprob: -6.900083541870117
    9. '
' → logprob: -7.150083541870117
    10. '   ' → logprob: -8.025083541870117

Token 379: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5644165873527527
    2. '<|end|>' → logprob: -0.9394165873527527
    3. ' ' → logprob: -3.8144166469573975
    4. '
' → logprob: -4.814416408538818
    5. 'cp' → logprob: -5.689416408538818
    6. '    
' → logprob: -6.564416408538818
    7. '  ' → logprob: -6.689416408538818
    8. 'c' → logprob: -7.189416408538818
    9. '    ' → logprob: -7.439416408538818
    10. ' +' → logprob: -7.939416408538818

Token 380: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11141199618577957
    2. ' i' → logprob: -2.8614120483398438
    3. 'ans' → logprob: -4.236412048339844
    4. 'p' → logprob: -4.236412048339844
    5. 'cp' → logprob: -4.736412048339844
    6. 'B' → logprob: -5.861412048339844
    7. ' p' → logprob: -6.111412048339844
    8. ' ans' → logprob: -6.361412048339844
    9. 'q' → logprob: -7.111412048339844
    10. ' cp' → logprob: -7.111412048339844

Token 381: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7109885811805725
    2. ' ==' → logprob: -0.7109885811805725
    3. '%' → logprob: -5.335988521575928
    4. '>=' → logprob: -5.460988521575928
    5. ' >=' → logprob: -5.585988521575928
    6. ' %' → logprob: -6.710988521575928
    7. ' <' → logprob: -6.960988521575928
    8. ' >' → logprob: -7.210988521575928
    9. '>' → logprob: -7.335988521575928
    10. '<' → logprob: -7.710988521575928

Token 382: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02674085646867752
    2. ' B' → logprob: -4.776741027832031
    3. '2' → logprob: -5.026741027832031
    4. 'W' → logprob: -5.151741027832031
    5. '1' → logprob: -5.526741027832031
    6. '(B' → logprob: -7.776741027832031
    7. '3' → logprob: -8.651741027832031
    8. 'p' → logprob: -8.651741027832031
    9. '(' → logprob: -8.776741027832031
    10. ' ' → logprob: -8.901741027832031

Token 383: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1322687566280365
    2. ' else' → logprob: -2.1322686672210693
    3. '+' → logprob: -5.257268905639648
    4. '   ' → logprob: -10.007268905639648
    5. '	else' → logprob: -10.132268905639648
    6. ' +' → logprob: -11.757268905639648
    7. '-' → logprob: -12.382268905639648
    8. ' ' → logprob: -12.507268905639648
    9. '_else' → logprob: -13.132268905639648
    10. ' or' → logprob: -13.382268905639648

Token 384: ' Mod' (ID: 7191)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1000497341156006
    2. 'q' → logprob: -1.3500497341156006
    3. 'Mod' → logprob: -1.7250497341156006
    4. 'cp' → logprob: -2.6000497341156006
    5. 'cq' → logprob: -2.7250497341156006
    6. 'ans' → logprob: -3.3500497341156006
    7. '1' → logprob: -3.9750497341156006
    8. '(' → logprob: -4.60004997253418
    9. '(Mod' → logprob: -5.10004997253418
    10. '(ans' → logprob: -5.97504997253418

Token 385: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.7610454708337784e-05
    2. 'int' → logprob: -10.500027656555176
    3. '_int' → logprob: -17.75002670288086
    4. '	Int' → logprob: -18.12502670288086
    5. '[Int' → logprob: -18.37502670288086
    6. 'INT' → logprob: -18.75002670288086
    7. 'In' → logprob: -18.87502670288086
    8. '(Int' → logprob: -19.12502670288086
    9. ' Int' → logprob: -19.37502670288086
    10. '<Int' → logprob: -19.50002670288086

Token 386: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011538755148649216
    2. '(q' → logprob: -5.386538982391357
    3. '(W' → logprob: -5.761538982391357
    4. '(p' → logprob: -6.386538982391357
    5. '(ans' → logprob: -6.761538982391357
    6. '(w' → logprob: -8.5115385055542
    7. '(C' → logprob: -8.6365385055542
    8. '(i' → logprob: -8.8865385055542
    9. '(cp' → logprob: -8.8865385055542
    10. '(c' → logprob: -9.3865385055542

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015149096958339214
    2. 'i' → logprob: -5.515149116516113
    3. 'W' → logprob: -5.640149116516113
    4. '(' → logprob: -6.140149116516113
    5. 'p' → logprob: -6.265149116516113
    6. 'q' → logprob: -7.015149116516113
    7. 'B' → logprob: -7.515149116516113
    8. '(i' → logprob: -7.890149116516113
    9. 'w' → logprob: -8.015149116516113
    10. '0' → logprob: -8.390149116516113

Token 388: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006733369082212448
    2. ')
' → logprob: -5.756733417510986
    3. 'if' → logprob: -6.631733417510986
    4. '+' → logprob: -7.131733417510986
    5. '   ' → logprob: -7.756733417510986
    6. ' if' → logprob: -7.756733417510986
    7. '-' → logprob: -8.256732940673828
    8. 'else' → logprob: -9.256732940673828
    9. ')p' → logprob: -11.131732940673828
    10. ')i' → logprob: -11.131732940673828

Token 389: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027659783139824867
    2. '<|end|>' → logprob: -3.6526598930358887
    3. 'cq' → logprob: -7.902659893035889
    4. '    
' → logprob: -8.02765941619873
    5. '
' → logprob: -8.40265941619873
    6. ')' → logprob: -9.65265941619873
    7. '<|end|>' → logprob: -10.15265941619873
    8. 'c' → logprob: -10.27765941619873
    9. '  ' → logprob: -10.52765941619873
    10. '...' → logprob: -10.52765941619873

Token 390: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5261616110801697
    2. ' i' → logprob: -0.9011616110801697
    3. 'B' → logprob: -7.0261616706848145
    4. ' B' → logprob: -7.2761616706848145
    5. 'W' → logprob: -7.5261616706848145
    6. ' W' → logprob: -8.026161193847656
    7. ' (' → logprob: -8.901161193847656
    8. '(i' → logprob: -9.401161193847656
    9. 'False' → logprob: -9.401161193847656
    10. ' ' → logprob: -9.776161193847656

Token 391: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02553584612905979
    2. ' ==' → logprob: -3.775535821914673
    3. '<=' → logprob: -6.650536060333252
    4. '>' → logprob: -7.150536060333252
    5. '>=' → logprob: -9.150535583496094
    6. '=' → logprob: -10.025535583496094
    7. ' <=' → logprob: -10.525535583496094
    8. '==
' → logprob: -10.900535583496094
    9. ' >' → logprob: -11.775535583496094
    10. ' >=' → logprob: -13.400535583496094

Token 392: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.008618712425231934
    2. ' B' → logprob: -4.7586188316345215
    3. ' ' → logprob: -12.758618354797363
    4. '   ' → logprob: -14.633618354797363
    5. '	B' → logprob: -15.008618354797363
    6. 'b' → logprob: -15.258618354797363
    7. 'W' → logprob: -16.75861930847168
    8. '(B' → logprob: -16.88361930847168
    9. '_B' → logprob: -16.88361930847168
    10. '>B' → logprob: -17.50861930847168

Token 393: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.34862419962882996
    2. 'else' → logprob: -1.2236242294311523
    3. 'elif' → logprob: -8.848624229431152
    4. ' elif' → logprob: -11.098624229431152
    5. ' ' → logprob: -11.723624229431152
    6. '   ' → logprob: -12.223624229431152
    7. '	else' → logprob: -12.598624229431152
    8. '0' → logprob: -13.723624229431152
    9. '_else' → logprob: -15.036124229431152
    10. 'elses' → logprob: -15.098624229431152

Token 394: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.6418890953063965
    2. 'cq' → logprob: -1.3918890953063965
    3. 'p' → logprob: -2.5168890953063965
    4. 'q' → logprob: -2.7668890953063965
    5. 'Mod' → logprob: -3.0168890953063965
    6. '(cp' → logprob: -5.1418890953063965
    7. ' cp' → logprob: -5.2668890953063965
    8. ' cq' → logprob: -5.3918890953063965
    9. '1' → logprob: -6.1418890953063965
    10. '(' → logprob: -6.1418890953063965

Token 395: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8054048418998718
    2. '+' → logprob: -1.3054049015045166
    3. '*p' → logprob: -1.5554049015045166
    4. '<|end|>' → logprob: -3.3054049015045166
    5. ' +' → logprob: -4.4304046630859375
    6. ' *' → logprob: -4.9304046630859375
    7. 'else' → logprob: -5.1804046630859375
    8. '+p' → logprob: -5.6804046630859375
    9. '*q' → logprob: -6.6804046630859375
    10. '
' → logprob: -6.8054046630859375

Token 396: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.273729145526886
    2. 'p' → logprob: -2.523729085922241
    3. 'cq' → logprob: -3.148729085922241
    4. '(' → logprob: -3.273729085922241
    5. '2' → logprob: -3.398729085922241
    6. 'cp' → logprob: -4.39872932434082
    7. 'ans' → logprob: -4.64872932434082
    8. '(p' → logprob: -5.27372932434082
    9. '(q' → logprob: -5.64872932434082
    10. '((' → logprob: -5.77372932434082

Token 397: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07390568405389786
    2. 'Mod' → logprob: -2.8239057064056396
    3. 'B' → logprob: -6.0739054679870605
    4. 'cp' → logprob: -6.3239054679870605
    5. ' i' → logprob: -6.4489054679870605
    6. '(i' → logprob: -6.4489054679870605
    7. 'q' → logprob: -6.4489054679870605
    8. '(Mod' → logprob: -6.6989054679870605
    9. '(B' → logprob: -7.8239054679870605
    10. 'p' → logprob: -8.323905944824219

Token 398: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01611214317381382
    2. ' -' → logprob: -4.141112327575684
    3. ')' → logprob: -10.641112327575684
    4. '-i' → logprob: -10.766112327575684
    5. ' ' → logprob: -11.766112327575684
    6. '1' → logprob: -12.766112327575684
    7. '*' → logprob: -12.766112327575684
    8. '   ' → logprob: -12.891112327575684
    9. ' (' → logprob: -13.016112327575684
    10. ' /' → logprob: -13.016112327575684

Token 399: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.017094764858484268
    2. '1' → logprob: -4.142094612121582
    3. ' B' → logprob: -6.892094612121582
    4. ' ' → logprob: -11.017094612121582
    5. 'W' → logprob: -11.767094612121582
    6. '   ' → logprob: -12.142094612121582
    7. '(B' → logprob: -12.392094612121582
    8. '(' → logprob: -12.642094612121582
    9. 'b' → logprob: -13.142094612121582
    10. '	B' → logprob: -13.767094612121582

Token 400: '1' (ID: 16)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47420692443847656
    2. '1' → logprob: -0.9742069244384766
    3. '(B' → logprob: -9.849206924438477
    4. ' B' → logprob: -10.974206924438477
    5. '(' → logprob: -11.099206924438477
    6. 'W' → logprob: -11.099206924438477
    7. 'b' → logprob: -11.849206924438477
    8. 'p' → logprob: -12.349206924438477
    9. ' ' → logprob: -12.474206924438477
    10. '2' → logprob: -13.099206924438477

Token 401: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04156908020377159
    2. ')/(' → logprob: -3.2915689945220947
    3. ')/' → logprob: -6.291569232940674
    4. '*' → logprob: -7.166569232940674
    5. ')
' → logprob: -8.916568756103516
    6. '/' → logprob: -9.166568756103516
    7. ')*' → logprob: -9.166568756103516
    8. ' )' → logprob: -9.291568756103516
    9. ' /' → logprob: -9.791568756103516
    10. '   ' → logprob: -9.791568756103516

Token 402: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9823960661888123
    2. '/' → logprob: -1.357396125793457
    3. ' *' → logprob: -1.607396125793457
    4. ' /' → logprob: -1.857396125793457
    5. '/i' → logprob: -5.607396125793457
    6. '/(' → logprob: -5.857396125793457
    7. '*(' → logprob: -6.232396125793457
    8. '   ' → logprob: -6.982396125793457
    9. '<|end|>' → logprob: -7.107396125793457
    10. '*i' → logprob: -7.732396125793457

Token 403: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0708591639995575
    2. 'i' → logprob: -3.19585919380188
    3. '(Mod' → logprob: -3.82085919380188
    4. ' (' → logprob: -5.945858955383301
    5. 'Mod' → logprob: -6.195858955383301
    6. '(' → logprob: -7.570858955383301
    7. '((' → logprob: -8.1958589553833
    8. '(B' → logprob: -10.6958589553833
    9. '
' → logprob: -10.6958589553833
    10. '(M' → logprob: -10.8208589553833

Token 404: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0033809030428528786
    2. '(i' → logprob: -6.00338077545166
    3. ' i' → logprob: -7.12838077545166
    4. 'Mod' → logprob: -10.00338077545166
    5. ' (' → logprob: -10.37838077545166
    6. '(Mod' → logprob: -11.37838077545166
    7. '   ' → logprob: -11.75338077545166
    8. '
' → logprob: -12.62838077545166
    9. '(' → logprob: -13.50338077545166
    10. ' ' → logprob: -15.00338077545166

Token 405: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45452919602394104
    2. '-' → logprob: -1.2045291662216187
    3. ' -' → logprob: -2.829529285430908
    4. '<|end|>' → logprob: -5.829529285430908
    5. '*' → logprob: -6.954529285430908
    6. '-B' → logprob: -7.454529285430908
    7. 'B' → logprob: -8.20452880859375
    8. '   ' → logprob: -8.70452880859375
    9. '-(' → logprob: -8.82952880859375
    10. '-p' → logprob: -8.82952880859375

Token 406: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0073291524313390255
    2. '1' → logprob: -5.007328987121582
    3. ' B' → logprob: -8.132328987121582
    4. '2' → logprob: -9.257328987121582
    5. '(B' → logprob: -9.507328987121582
    6. 'W' → logprob: -9.757328987121582
    7. 'cp' → logprob: -9.882328987121582
    8. '(' → logprob: -11.507328987121582
    9. ' ' → logprob: -11.882328987121582
    10. '   ' → logprob: -12.257328987121582

Token 407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005022055469453335
    2. '+' → logprob: -5.630022048950195
    3. '-' → logprob: -6.755022048950195
    4. ')
' → logprob: -9.130022048950195
    5. ' )' → logprob: -9.630022048950195
    6. '   ' → logprob: -11.255022048950195
    7. '+)' → logprob: -11.255022048950195
    8. ' -' → logprob: -11.880022048950195
    9. '-)' → logprob: -11.880022048950195
    10. ' +' → logprob: -12.130022048950195

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11623312532901764
    2. 'cq' → logprob: -2.6162331104278564
    3. ' cq' → logprob: -4.2412333488464355
    4. '<|end|>' → logprob: -4.7412333488464355
    5. 'cp' → logprob: -5.3662333488464355
    6. ' ' → logprob: -6.1162333488464355
    7. '	c' → logprob: -6.9912333488464355
    8. ' else' → logprob: -7.1162333488464355
    9. ' 
' → logprob: -7.6162333488464355
    10. 'else' → logprob: -7.6162333488464355

Token 409: ' p' (ID: 275)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.32767367362976074
    2. ' cq' → logprob: -1.3276736736297607
    3. ' 
' → logprob: -5.20267391204834
    4. 'cp' → logprob: -5.70267391204834
    5. ' ' → logprob: -6.82767391204834
    6. '  
' → logprob: -7.07767391204834
    7. ' cp' → logprob: -7.57767391204834
    8. 'c' → logprob: -7.82767391204834
    9. '   ' → logprob: -8.07767391204834
    10. '    
' → logprob: -8.07767391204834

Token 410: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6840602159500122
    2. '+=' → logprob: -0.8090602159500122
    3. ' +=' → logprob: -3.0590600967407227
    4. ' =' → logprob: -5.809060096740723
    5. '+' → logprob: -9.309060096740723
    6. ',' → logprob: -10.059060096740723
    7. '=p' → logprob: -10.434060096740723
    8. '<|end|>' → logprob: -10.684060096740723
    9. ']+=' → logprob: -11.059060096740723
    10. '*=' → logprob: -12.309060096740723

Token 411: ' Mod' (ID: 7191)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04515104740858078
    2. 'cp' → logprob: -3.4201509952545166
    3. ' p' → logprob: -4.920151233673096
    4. '(p' → logprob: -6.795151233673096
    5. 'ans' → logprob: -6.920151233673096
    6. '(cp' → logprob: -7.420151233673096
    7. ' cp' → logprob: -7.795151233673096
    8. '(ans' → logprob: -8.045150756835938
    9. 'Mod' → logprob: -8.920150756835938
    10. 'q' → logprob: -8.920150756835938

Token 412: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -0.001976691884920001
    2. 'p' → logprob: -6.251976490020752
    3. 'cp' → logprob: -10.62697696685791
    4. 'int' → logprob: -11.50197696685791
    5. '(p' → logprob: -12.62697696685791
    6. '*p' → logprob: -13.00197696685791
    7. ' p' → logprob: -13.25197696685791
    8. 'Mod' → logprob: -13.75197696685791
    9. '(cp' → logprob: -13.87697696685791
    10. '_int' → logprob: -14.37697696685791

Token 413: '(' (ID: 7)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.11384356766939163
    2. '(cp' → logprob: -3.6138436794281006
    3. '(ans' → logprob: -3.6138436794281006
    4. 'p' → logprob: -3.8638436794281006
    5. '(' → logprob: -3.9888436794281006
    6. '((' → logprob: -4.9888434410095215
    7. '(i' → logprob: -5.1138434410095215
    8. 'cp' → logprob: -7.8638434410095215
    9. '(B' → logprob: -7.8638434410095215
    10. '(q' → logprob: -8.36384391784668

Token 414: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.262433648109436
    2. 'cp' → logprob: -1.262433648109436
    3. 'p' → logprob: -1.762433648109436
    4. '1' → logprob: -2.1374335289001465
    5. 'ans' → logprob: -2.7624335289001465
    6. 'i' → logprob: -3.0124335289001465
    7. '(' → logprob: -4.5124335289001465
    8. '(cp' → logprob: -4.7624335289001465
    9. '(ans' → logprob: -5.5124335289001465
    10. '(p' → logprob: -5.8874335289001465

Token 415: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2616736888885498
    2. '+' → logprob: -2.51167368888855
    3. ' +' → logprob: -2.63667368888855
    4. ' if' → logprob: -2.76167368888855
    5. 'if' → logprob: -4.886673927307129
    6. '<|end|>' → logprob: -5.511673927307129
    7. ')+' → logprob: -7.136673927307129
    8. '   ' → logprob: -7.886673927307129
    9. ')
' → logprob: -8.261673927307129
    10. '+
' → logprob: -8.386673927307129

Token 416: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 417: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023315127938985825
    2. ' i' → logprob: -3.773315191268921
    3. '   ' → logprob: -10.1483154296875
    4. 'W' → logprob: -11.1483154296875
    5. '  ' → logprob: -12.6483154296875
    6. ' ' → logprob: -12.6483154296875
    7. '(i' → logprob: -13.0233154296875
    8. 'B' → logprob: -13.3983154296875
    9. '	i' → logprob: -13.5233154296875
    10. ' W' → logprob: -13.5233154296875

Token 418: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2272891253232956
    2. ' <' → logprob: -2.1022891998291016
    3. '==' → logprob: -3.1022891998291016
    4. '<B' → logprob: -3.8522891998291016
    5. ' ==' → logprob: -4.352289199829102
    6. '<W' → logprob: -7.352289199829102
    7. '<=' → logprob: -7.602289199829102
    8. '<|end|>' → logprob: -7.852289199829102
    9. '<Block' → logprob: -9.477289199829102
    10. '>=' → logprob: -9.727289199829102

Token 419: ' B' (ID: 418)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.3873918950557709
    2. 'B' → logprob: -1.1373919248580933
    3. ' W' → logprob: -8.012392044067383
    4. ' B' → logprob: -9.012392044067383
    5. ' ' → logprob: -10.387392044067383
    6. 'w' → logprob: -11.387392044067383
    7. '1' → logprob: -11.887392044067383
    8. '=' → logprob: -12.387392044067383
    9. '   ' → logprob: -12.887392044067383
    10. 'b' → logprob: -13.012392044067383

Token 420: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.038080859929323196
    2. 'else' → logprob: -3.288080930709839
    3. '	else' → logprob: -10.788081169128418
    4. '+' → logprob: -11.413081169128418
    5. ' elif' → logprob: -13.413081169128418
    6. '   ' → logprob: -13.413081169128418
    7. ' ' → logprob: -13.413081169128418
    8. ' +' → logprob: -14.413081169128418
    9. 'elif' → logprob: -14.413081169128418
    10. ' p' → logprob: -14.788081169128418

Token 421: ' Mod' (ID: 7191)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.38143929839134216
    2. 'Mod' → logprob: -1.3814393281936646
    3. '(cp' → logprob: -4.256439208984375
    4. 'cq' → logprob: -4.256439208984375
    5. 'p' → logprob: -4.381439208984375
    6. '(Mod' → logprob: -4.881439208984375
    7. '1' → logprob: -5.256439208984375
    8. '(' → logprob: -5.256439208984375
    9. 'q' → logprob: -6.006439208984375
    10. ' cp' → logprob: -6.756439208984375

Token 422: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -4.68022444692906e-05
    2. 'int' → logprob: -10.000046730041504
    3. 'p' → logprob: -14.750046730041504
    4. '	Int' → logprob: -15.875046730041504
    5. '_int' → logprob: -16.25004768371582
    6. '(p' → logprob: -16.37504768371582
    7. '(Int' → logprob: -16.50004768371582
    8. 'nt' → logprob: -16.75004768371582
    9. '[Int' → logprob: -17.00004768371582
    10. '   ' → logprob: -17.00004768371582

Token 423: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017383632948622108
    2. '(i' → logprob: -7.001738548278809
    3. '1' → logprob: -7.626738548278809
    4. '(cp' → logprob: -9.001738548278809
    5. '((' → logprob: -9.376738548278809
    6. '(p' → logprob: -10.001738548278809
    7. '(B' → logprob: -10.126738548278809
    8. 'p' → logprob: -11.001738548278809
    9. '(ans' → logprob: -11.876738548278809
    10. 'i' → logprob: -12.376738548278809

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009128562174737453
    2. '0' → logprob: -5.634128570556641
    3. 'i' → logprob: -6.009128570556641
    4. '(' → logprob: -6.759128570556641
    5. 'W' → logprob: -7.384128570556641
    6. 'B' → logprob: -8.25912857055664
    7. '(i' → logprob: -8.25912857055664
    8. 'p' → logprob: -8.63412857055664
    9. 'cp' → logprob: -8.88412857055664
    10. 'q' → logprob: -9.50912857055664

Token 425: ')' (ID: 8)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.19301900267601013
    2. ' else' → logprob: -2.193018913269043
    3. ')' → logprob: -3.443018913269043
    4. 'elif' → logprob: -4.068018913269043
    5. '+' → logprob: -4.568018913269043
    6. '   ' → logprob: -6.068018913269043
    7. ' elif' → logprob: -7.568018913269043
    8. '-' → logprob: -7.693018913269043
    9. 'if' → logprob: -7.818018913269043
    10. ' if' → logprob: -8.318018913269043

Token 426: ' /' (ID: 820)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24331803619861603
    2. '<|end|>' → logprob: -1.8683180809020996
    3. ' /' → logprob: -3.8683180809020996
    4. ' else' → logprob: -3.9933180809020996
    5. 'if' → logprob: -5.1183180809021
    6. ' +' → logprob: -5.3683180809021
    7. ' *' → logprob: -5.7433180809021
    8. 'else' → logprob: -6.3683180809021
    9. '+' → logprob: -6.7433180809021
    10. ')' → logprob: -6.7433180809021

Token 427: ' Mod' (ID: 7191)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.9531947374343872
    2. 'cq' → logprob: -0.9531947374343872
    3. 'i' → logprob: -2.3281946182250977
    4. '2' → logprob: -3.3281946182250977
    5. 'Mod' → logprob: -3.7031946182250977
    6. '(' → logprob: -3.7031946182250977
    7. '(i' → logprob: -3.9531946182250977
    8. '(cp' → logprob: -5.078194618225098
    9. '(Mod' → logprob: -5.453194618225098
    10. 'pow' → logprob: -5.578194618225098

Token 428: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.0921942703134846e-05
    2. 'int' → logprob: -11.62501049041748
    3. 'i' → logprob: -13.62501049041748
    4. '(i' → logprob: -15.37501049041748
    5. 'nt' → logprob: -15.87501049041748
    6. '(Int' → logprob: -16.875011444091797
    7. '
' → logprob: -17.125011444091797
    8. '	Int' → logprob: -17.375011444091797
    9. 'Mod' → logprob: -17.500011444091797
    10. '_int' → logprob: -17.625011444091797

Token 429: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.009113209322094917
    2. '(' → logprob: -5.759113311767578
    3. 'i' → logprob: -5.884113311767578
    4. '(cp' → logprob: -6.384113311767578
    5. '((' → logprob: -7.134113311767578
    6. '(B' → logprob: -8.634113311767578
    7. 'cp' → logprob: -9.134113311767578
    8. '(c' → logprob: -9.384113311767578
    9. '2' → logprob: -9.634113311767578
    10. 'q' → logprob: -9.759113311767578

Token 430: '2' (ID: 17)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24186034500598907
    2. '(i' → logprob: -1.9918603897094727
    3. '(B' → logprob: -3.6168603897094727
    4. 'W' → logprob: -3.8668603897094727
    5. 'B' → logprob: -4.491860389709473
    6. '2' → logprob: -4.866860389709473
    7. '(W' → logprob: -5.241860389709473
    8. '(' → logprob: -5.866860389709473
    9. '1' → logprob: -6.491860389709473
    10. 'q' → logprob: -7.366860389709473

Token 431: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02147260122001171
    2. ' if' → logprob: -5.396472454071045
    3. '**' → logprob: -5.521472454071045
    4. ' else' → logprob: -6.271472454071045
    5. '(i' → logprob: -6.521472454071045
    6. ')**' → logprob: -6.646472454071045
    7. 'else' → logprob: -6.896472454071045
    8. ')*' → logprob: -7.146472454071045
    9. '   ' → logprob: -7.271472454071045
    10. ')
' → logprob: -7.521472454071045

Token 432: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14824053645133972
    2. '(B' → logprob: -2.273240566253662
    3. '(W' → logprob: -3.898240566253662
    4. '(' → logprob: -4.898240566253662
    5. 'i' → logprob: -5.523240566253662
    6. 'W' → logprob: -6.023240566253662
    7. ' (' → logprob: -8.898240089416504
    8. 'B' → logprob: -9.273240089416504
    9. '2' → logprob: -9.648240089416504
    10. '((' → logprob: -9.773240089416504

Token 433: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3779606819152832
    2. 'else' → logprob: -1.6279606819152832
    3. '<|end|>' → logprob: -2.627960681915283
    4. ' else' → logprob: -3.377960681915283
    5. 'elif' → logprob: -5.877960681915283
    6. ')' → logprob: -6.252960681915283
    7. '+' → logprob: -6.502960681915283
    8. ' ' → logprob: -6.877960681915283
    9. ' *' → logprob: -7.252960681915283
    10. '*' → logprob: -7.377960681915283

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16028860211372375
    2. ' i' → logprob: -1.9102885723114014
    3. '   ' → logprob: -9.91028881072998
    4. ' ' → logprob: -11.91028881072998
    5. 'B' → logprob: -13.03528881072998
    6. '  ' → logprob: -14.03528881072998
    7. '(i' → logprob: -14.03528881072998
    8. '	i' → logprob: -14.03528881072998
    9. ' B' → logprob: -14.53528881072998
    10. ' (' → logprob: -14.59778881072998

Token 435: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3275323510169983
    2. '==' → logprob: -1.3275322914123535
    3. ' <=' → logprob: -4.7025322914123535
    4. '<=' → logprob: -5.4525322914123535
    5. ' <' → logprob: -8.202532768249512
    6. ' >' → logprob: -8.452532768249512
    7. '>' → logprob: -9.077532768249512
    8. '<' → logprob: -9.202532768249512
    9. ' >=' → logprob: -10.327532768249512
    10. '=' → logprob: -10.827532768249512

Token 436: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0004947714623995125
    2. ' B' → logprob: -7.625494956970215
    3. 'W' → logprob: -12.375494956970215
    4. ' ' → logprob: -13.500494956970215
    5. '   ' → logprob: -14.500494956970215
    6. 'b' → logprob: -15.500494956970215
    7. '	B' → logprob: -15.750494956970215
    8. '<|end|>' → logprob: -17.0004940032959
    9. '  ' → logprob: -17.5004940032959
    10. '>B' → logprob: -17.7504940032959

Token 437: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.03808417171239853
    2. 'else' → logprob: -3.2880842685699463
    3. '	else' → logprob: -10.413084030151367
    4. '   ' → logprob: -11.913084030151367
    5. ' elif' → logprob: -12.913084030151367
    6. ' ' → logprob: -13.288084030151367
    7. 'elif' → logprob: -13.913084030151367
    8. '    ' → logprob: -15.413084030151367
    9. '_else' → logprob: -15.538084030151367
    10. ' ' → logprob: -15.663084030151367

Token 438: ' p' (ID: 275)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.0635899007320404
    2. '(cp' → logprob: -2.8135898113250732
    3. ' cp' → logprob: -7.063590049743652
    4. 'p' → logprob: -7.563590049743652
    5. '(p' → logprob: -9.313590049743652
    6. ' (' → logprob: -9.813590049743652
    7. '   ' → logprob: -10.188590049743652
    8. 'cq' → logprob: -10.688590049743652
    9. '(' → logprob: -11.688590049743652
    10. '	cp' → logprob: -11.813590049743652

Token 439: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.535533607006073
    2. ' *' → logprob: -1.0355336666107178
    3. ' +' → logprob: -3.2855336666107178
    4. '+' → logprob: -4.160533428192139
    5. ' -' → logprob: -5.535533428192139
    6. '-' → logprob: -6.160533428192139
    7. '*p' → logprob: -8.160533905029297
    8. '
' → logprob: -9.785533905029297
    9. '*q' → logprob: -10.285533905029297
    10. '*(' → logprob: -10.660533905029297

Token 440: ' cp' (ID: 27776)
  Prédit: 'cp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cp' → logprob: -0.009050946682691574
    2. 'cq' → logprob: -5.1340508460998535
    3. '(cp' → logprob: -6.2590508460998535
    4. 'ans' → logprob: -7.7590508460998535
    5. ' cp' → logprob: -8.009051322937012
    6. 'p' → logprob: -8.634051322937012
    7. '((' → logprob: -10.009051322937012
    8. 'q' → logprob: -10.009051322937012
    9. '(' → logprob: -10.259051322937012
    10. '   ' → logprob: -10.384051322937012

Token 441: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.41476812958717346
    2. '(' → logprob: -1.539768099784851
    3. '2' → logprob: -2.7897682189941406
    4. '(Mod' → logprob: -3.1647682189941406
    5. '(i' → logprob: -4.789768218994141
    6. 'i' → logprob: -5.289768218994141
    7. 'q' → logprob: -6.039768218994141
    8. 'cq' → logprob: -6.414768218994141
    9. 'pow' → logprob: -6.539768218994141
    10. 'p' → logprob: -7.539768218994141

Token 443: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.9153885558771435e-06
    2. 'int' → logprob: -12.250005722045898
    3. 'Mod' → logprob: -15.000005722045898
    4. 'nt' → logprob: -15.500005722045898
    5. '(' → logprob: -16.1250057220459
    6. '
' → logprob: -16.5000057220459
    7. 'INT' → logprob: -16.6250057220459
    8. 'i' → logprob: -16.8750057220459
    9. 'Ant' → logprob: -17.1250057220459
    10. '(Int' → logprob: -17.5000057220459

Token 444: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14640209078788757
    2. '(i' → logprob: -2.02140212059021
    3. '2' → logprob: -5.646401882171631
    4. '((' → logprob: -9.396402359008789
    5. '(
' → logprob: -10.146402359008789
    6. '(pow' → logprob: -10.271402359008789
    7. 'i' → logprob: -11.646402359008789
    8. '(B' → logprob: -12.396402359008789
    9. 'pow' → logprob: -12.521402359008789
    10. '(ii' → logprob: -12.646402359008789

Token 445: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021035775542259216
    2. '(' → logprob: -4.021035671234131
    3. 'i' → logprob: -6.396035671234131
    4. '(i' → logprob: -6.896035671234131
    5. ' ' → logprob: -10.146036148071289
    6. '
' → logprob: -10.146036148071289
    7. '3' → logprob: -10.896036148071289
    8. 'pow' → logprob: -11.146036148071289
    9. '   ' → logprob: -11.271036148071289
    10. ')' → logprob: -11.271036148071289

Token 446: ')**' (ID: 80066)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0345708429813385
    2. '(i' → logprob: -3.4095709323883057
    3. ')' → logprob: -7.909570693969727
    4. '
' → logprob: -8.409570693969727
    5. '(' → logprob: -9.284570693969727
    6. '```' → logprob: -10.034570693969727
    7. 'i' → logprob: -10.284570693969727
    8. '`' → logprob: -10.534570693969727
    9. ')**' → logprob: -10.534570693969727
    10. '*i' → logprob: -10.784570693969727

Token 447: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20357351005077362
    2. '(i' → logprob: -1.70357346534729
    3. '(' → logprob: -6.203573703765869
    4. '(B' → logprob: -9.953573226928711
    5. '(W' → logprob: -10.453573226928711
    6. ' (' → logprob: -10.828573226928711
    7. 'B' → logprob: -11.828573226928711
    8. ' i' → logprob: -12.078573226928711
    9. '{i' → logprob: -12.078573226928711
    10. 'W' → logprob: -12.078573226928711

Token 448: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7690669298171997
    2. '<|end|>' → logprob: -1.0190669298171997
    3. ' ' → logprob: -3.39406681060791
    4. ')' → logprob: -3.39406681060791
    5. '
' → logprob: -3.76906681060791
    6. 'cq' → logprob: -3.89406681060791
    7. 'q' → logprob: -4.01906681060791
    8. 'c' → logprob: -4.51906681060791
    9. 'p' → logprob: -4.89406681060791
    10. ' cq' → logprob: -5.26906681060791

Token 450: ' cq' (ID: 151096)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.080811858177185
    2. ')' → logprob: -1.205811858177185
    3. '<|end|>' → logprob: -1.580811858177185
    4. '   ' → logprob: -2.3308119773864746
    5. ' ' → logprob: -3.7058119773864746
    6. ' q' → logprob: -4.955811977386475
    7. '
' → logprob: -5.330811977386475
    8. 'p' → logprob: -5.830811977386475
    9. '	q' → logprob: -5.830811977386475
    10. '\' → logprob: -5.830811977386475

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7506839036941528
    2. ' =' → logprob: -0.7506839036941528
    3. ' +=' → logprob: -3.0006837844848633
    4. '+=' → logprob: -5.125683784484863
    5. ' *=' → logprob: -9.125683784484863
    6. '+' → logprob: -10.000683784484863
    7. '*=' → logprob: -10.750683784484863
    8. '<|end|>' → logprob: -11.500683784484863
    9. ' ' → logprob: -12.125683784484863
    10. ' +' → logprob: -12.500683784484863

Token 452: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.010666347108781338
    2. ' Mod' → logprob: -4.635666370391846
    3. 'cp' → logprob: -7.385666370391846
    4. 'cq' → logprob: -8.385665893554688
    5. '(Mod' → logprob: -10.635665893554688
    6. ' cp' → logprob: -11.135665893554688
    7. '0' → logprob: -11.885665893554688
    8. 'p' → logprob: -12.010665893554688
    9. ' cq' → logprob: -13.385665893554688
    10. ' ' → logprob: -13.510665893554688

Token 453: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -3.292907877039397e-06
    2. 'Mod' → logprob: -13.00000286102295
    3. 'int' → logprob: -14.00000286102295
    4. '(Mod' → logprob: -17.125003814697266
    5. ' Int' → logprob: -17.250003814697266
    6. '(Int' → logprob: -17.500003814697266
    7. '	Int' → logprob: -18.125003814697266
    8. '<Int' → logprob: -18.625003814697266
    9. '_int' → logprob: -18.750003814697266
    10. 'INT' → logprob: -19.000003814697266

Token 454: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016122816130518913
    2. '0' → logprob: -4.141122817993164
    3. '(B' → logprob: -10.016122817993164
    4. 'B' → logprob: -11.891122817993164
    5. '1' → logprob: -12.141122817993164
    6. '(Mod' → logprob: -12.266122817993164
    7. '(C' → logprob: -12.391122817993164
    8. '(W' → logprob: -12.516122817993164
    9. '(cp' → logprob: -12.641122817993164
    10. 'p' → logprob: -12.891122817993164

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021552573889493942
    2. '1' → logprob: -6.252155303955078
    3. 'B' → logprob: -9.627155303955078
    4. 'W' → logprob: -9.627155303955078
    5. ' ' → logprob: -9.752155303955078
    6. '(' → logprob: -11.002155303955078
    7. '   ' → logprob: -12.002155303955078
    8. '
' → logprob: -13.252155303955078
    9. 'i' → logprob: -13.502155303955078
    10. 'cq' → logprob: -13.689655303955078

Token 456: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015920106321573257
    2. 'if' → logprob: -4.265920162200928
    3. '<|end|>' → logprob: -7.265920162200928
    4. ')' → logprob: -7.765920162200928
    5. '+' → logprob: -8.51591968536377
    6. '	if' → logprob: -8.76591968536377
    7. '   ' → logprob: -9.39091968536377
    8. '=' → logprob: -10.14091968536377
    9. ' +' → logprob: -10.51591968536377
    10. ' =' → logprob: -10.51591968536377

Token 457: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1129249557852745
    2. 'if' → logprob: -2.2379250526428223
    3. '	if' → logprob: -9.737924575805664
    4. '<|end|>' → logprob: -10.612924575805664
    5. ' ' → logprob: -12.612924575805664
    6. '   ' → logprob: -12.987924575805664
    7. '
' → logprob: -12.987924575805664
    8. '0' → logprob: -13.237924575805664
    9. '+' → logprob: -13.612924575805664
    10. ' for' → logprob: -14.112924575805664

Token 458: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3869926333427429
    2. ' i' → logprob: -1.1369926929473877
    3. '   ' → logprob: -9.136992454528809
    4. ' ' → logprob: -12.011992454528809
    5. '  ' → logprob: -13.011992454528809
    6. '(i' → logprob: -13.636992454528809
    7. ' (' → logprob: -13.886992454528809
    8. 'W' → logprob: -14.261992454528809
    9. '	i' → logprob: -14.261992454528809
    10. '    ' → logprob: -14.511992454528809

Token 459: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5244479179382324
    2. '<' → logprob: -0.8994479179382324
    3. '<W' → logprob: -7.024447917938232
    4. '<i' → logprob: -8.89944839477539
    5. '<B' → logprob: -9.02444839477539
    6. '<w' → logprob: -9.27444839477539
    7. ' <=' → logprob: -11.14944839477539
    8. ' >=' → logprob: -11.39944839477539
    9. '<=' → logprob: -11.52444839477539
    10. '>=' → logprob: -11.77444839477539

Token 460: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.059803593903779984
    2. 'B' → logprob: -3.0598034858703613
    3. ' W' → logprob: -4.559803485870361
    4. ' B' → logprob: -7.559803485870361
    5. '   ' → logprob: -9.68480396270752
    6. ' ' → logprob: -10.18480396270752
    7. 'i' → logprob: -11.05980396270752
    8. 'b' → logprob: -11.80980396270752
    9. '(W' → logprob: -12.05980396270752
    10. '1' → logprob: -12.18480396270752

Token 461: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6326230764389038
    2. 'else' → logprob: -0.7576230764389038
    3. '	else' → logprob: -11.007622718811035
    4. 'elif' → logprob: -13.132622718811035
    5. ' ' → logprob: -13.507622718811035
    6. '   ' → logprob: -13.882622718811035
    7. '+' → logprob: -13.882622718811035
    8. '_else' → logprob: -14.507622718811035
    9. ' elif' → logprob: -15.632622718811035
    10. 'elses' → logprob: -15.632622718811035

Token 462: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.012836761772632599
    2. ' Mod' → logprob: -4.387836933135986
    3. '(Mod' → logprob: -8.137836456298828
    4. '   ' → logprob: -10.887836456298828
    5. ' ' → logprob: -12.637836456298828
    6. '.Mod' → logprob: -13.137836456298828
    7. '_Mod' → logprob: -13.637836456298828
    8. 'mod' → logprob: -13.637836456298828
    9. '_mod' → logprob: -13.762836456298828
    10. 'MOD' → logprob: -13.887836456298828

Token 463: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -2.081584716506768e-05
    2. 'int' → logprob: -10.875020980834961
    3. 'Mod' → logprob: -13.250020980834961
    4. 'In' → logprob: -18.00002098083496
    5. '	Int' → logprob: -18.00002098083496
    6. ' Int' → logprob: -18.12502098083496
    7. 'INT' → logprob: -18.12502098083496
    8. '_int' → logprob: -18.12502098083496
    9. '<Int' → logprob: -18.75002098083496
    10. '_Int' → logprob: -18.87502098083496

Token 464: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.00000286102295
    3. '0' → logprob: -15.00000286102295
    4. ' (' → logprob: -19.500001907348633
    5. '(
' → logprob: -19.625001907348633
    6. '(Mod' → logprob: -19.875001907348633
    7. '(int' → logprob: -20.875001907348633
    8. 'Mod' → logprob: -20.875001907348633
    9. '(i' → logprob: -21.500001907348633
    10. ' ' → logprob: -21.625001907348633

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004093358293175697
    2. '(' → logprob: -5.504093170166016
    3. 'Mod' → logprob: -12.254093170166016
    4. '0' → logprob: -12.379093170166016
    5. ' ' → logprob: -12.754093170166016
    6. '(Mod' → logprob: -13.129093170166016
    7. '
' → logprob: -15.129093170166016
    8. '   ' → logprob: -15.129093170166016
    9. ' (' → logprob: -15.879093170166016
    10. '(
' → logprob: -16.504093170166016

Token 466: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19131071865558624
    2. ' if' → logprob: -2.3163106441497803
    3. 'if' → logprob: -2.9413106441497803
    4. '(' → logprob: -4.191310882568359
    5. '   ' → logprob: -6.191310882568359
    6. 'else' → logprob: -6.441310882568359
    7. 'elif' → logprob: -6.691310882568359
    8. ' else' → logprob: -7.316310882568359
    9. '=' → logprob: -7.316310882568359
    10. '()' → logprob: -7.441310882568359

Token 467: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038138460367918015
    2. 'if' → logprob: -3.2881383895874023
    3. 'elif' → logprob: -9.413138389587402
    4. ' elif' → logprob: -12.288138389587402
    5. '	if' → logprob: -12.913138389587402
    6. '<|end|>' → logprob: -13.663138389587402
    7. '**' → logprob: -13.788138389587402
    8. ')' → logprob: -13.788138389587402
    9. ' /' → logprob: -14.288138389587402
    10. ' ' → logprob: -14.413138389587402

Token 468: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931514143943787
    2. ' i' → logprob: -0.6931514143943787
    3. '	i' → logprob: -13.318151473999023
    4. ' ' → logprob: -14.068151473999023
    5. '   ' → logprob: -14.318151473999023
    6. 'W' → logprob: -14.693151473999023
    7. '(i' → logprob: -15.443151473999023
    8. ' ' → logprob: -15.943151473999023
    9. ' (' → logprob: -16.318151473999023
    10. '  ' → logprob: -16.318151473999023

Token 469: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20141831040382385
    2. ' ==' → logprob: -1.7014182806015015
    3. '==
' → logprob: -13.076417922973633
    4. '=' → logprob: -13.326417922973633
    5. '===' → logprob: -14.826417922973633
    6. ')==' → logprob: -15.576417922973633
    7. ' =' → logprob: -15.701417922973633
    8. '==(' → logprob: -15.701417922973633
    9. ']==' → logprob: -15.951417922973633
    10. '<=' → logprob: -16.576417922973633

Token 470: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013369088992476463
    2. ' W' → logprob: -6.626337051391602
    3. 'i' → logprob: -12.251337051391602
    4. '   ' → logprob: -13.001337051391602
    5. 'B' → logprob: -13.376337051391602
    6. ' ' → logprob: -13.626337051391602
    7. '  ' → logprob: -15.126337051391602
    8. '[' → logprob: -15.626337051391602
    9. '	W' → logprob: -15.876337051391602
    10. ' i' → logprob: -16.2513370513916

Token 471: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12693209946155548
    2. 'else' → logprob: -2.126932144165039
    3. '   ' → logprob: -13.251932144165039
    4. '	else' → logprob: -14.001932144165039
    5. 'elif' → logprob: -14.126932144165039
    6. ' elif' → logprob: -15.251932144165039
    7. ' ' → logprob: -16.25193214416504
    8. '*' → logprob: -16.75193214416504
    9. '_else' → logprob: -16.75193214416504
    10. '       ' → logprob: -17.00193214416504

Token 472: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.38716691732406616
    2. ' cq' → logprob: -1.137166976928711
    3. '   ' → logprob: -8.637166976928711
    4. 'Mod' → logprob: -9.762166976928711
    5. ' Mod' → logprob: -10.762166976928711
    6. ' ' → logprob: -11.012166976928711
    7. '  ' → logprob: -12.137166976928711
    8. 'c' → logprob: -12.387166976928711
    9. '	c' → logprob: -12.637166976928711
    10. '       ' → logprob: -12.637166976928711

Token 473: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42872726917266846
    2. ' *' → logprob: -1.0537272691726685
    3. ' ' → logprob: -11.803727149963379
    4. ' +' → logprob: -12.178727149963379
    5. '+' → logprob: -12.303727149963379
    6. '*(' → logprob: -12.428727149963379
    7. '*c' → logprob: -13.928727149963379
    8. '*q' → logprob: -13.928727149963379
    9. '<|end|>' → logprob: -14.553727149963379
    10. '*p' → logprob: -14.553727149963379

Token 474: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0036024407017976046
    2. ' (' → logprob: -5.628602504730225
    3. 'Mod' → logprob: -14.128602027893066
    4. '(' → logprob: -14.378602027893066
    5. '(Mod' → logprob: -14.628602027893066
    6. ' Mod' → logprob: -15.753602027893066
    7. '(
' → logprob: -16.128602981567383
    8. '(I' → logprob: -16.378602981567383
    9. '((' → logprob: -16.503602981567383
    10. '   ' → logprob: -16.628602981567383

Token 475: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.407366916188039e-05
    2. ' (' → logprob: -9.875054359436035
    3. '(' → logprob: -13.125054359436035
    4. '   ' → logprob: -15.125054359436035
    5. 'i' → logprob: -15.750054359436035
    6. '(
' → logprob: -15.875054359436035
    7. '(ii' → logprob: -18.62505340576172
    8. '
' → logprob: -19.00005340576172
    9. '[i' → logprob: -19.50005340576172
    10. ' ' → logprob: -19.50005340576172

Token 476: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868829607963562
    2. '-' → logprob: -1.136883020401001
    3. ' ' → logprob: -11.511882781982422
    4. '   ' → logprob: -13.886882781982422
    5. '<|end|>' → logprob: -15.136882781982422
    6. '  ' → logprob: -15.261882781982422
    7. ' -
' → logprob: -15.886882781982422
    8. '(' → logprob: -16.136882781982422
    9. ' ' → logprob: -16.511882781982422
    10. '-
' → logprob: -16.761882781982422

Token 477: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'W' → logprob: -15.000041007995605
    4. '   ' → logprob: -16.25004005432129
    5. 'w' → logprob: -17.87504005432129
    6. '  ' → logprob: -18.75004005432129
    7. '(' → logprob: -19.12504005432129
    8. ' W' → logprob: -19.75004005432129
    9. '
' → logprob: -19.75004005432129
    10. '2' → logprob: -20.37504005432129

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '(' → logprob: -16.750001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '
' → logprob: -19.625001907348633
    6. '{' → logprob: -19.812501907348633
    7. '<|end|>' → logprob: -19.812501907348633
    8. '  ' → logprob: -20.062501907348633
    9. '১' → logprob: -20.125001907348633
    10. '2' → logprob: -20.125001907348633

Token 479: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001787159708328545
    2. ')/' → logprob: -6.501787185668945
    3. ')/(' → logprob: -8.501787185668945
    4. ' )' → logprob: -9.876787185668945
    5. '/' → logprob: -10.876787185668945
    6. ' /' → logprob: -12.251787185668945
    7. ')
/' → logprob: -13.251787185668945
    8. ')
' → logprob: -13.376787185668945
    9. '   ' → logprob: -14.251787185668945
    10. '```' → logprob: -14.376787185668945

Token 480: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.1604539304971695
    2. ' /' → logprob: -1.9104539155960083
    3. '/(' → logprob: -8.410453796386719
    4. '```' → logprob: -12.535453796386719
    5. '/
' → logprob: -13.285453796386719
    6. ' /(' → logprob: -15.035453796386719
    7. ' /
' → logprob: -15.285453796386719
    8. '*' → logprob: -15.410453796386719
    9. ' ' → logprob: -15.535453796386719
    10. '`' → logprob: -15.535453796386719

Token 481: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005299692507833242
    2. ' (' → logprob: -5.2552995681762695
    3. '(' → logprob: -9.63029956817627
    4. ' ' → logprob: -16.880300521850586
    5. '   ' → logprob: -17.880300521850586
    6. '(ii' → logprob: -17.880300521850586
    7. '(I' → logprob: -18.505300521850586
    8. '(
' → logprob: -19.880300521850586
    9. ' i' → logprob: -20.005300521850586
    10. '`' → logprob: -20.130300521850586

Token 482: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004407093860208988
    2. ' (' → logprob: -5.629406929016113
    3. 'i' → logprob: -7.754406929016113
    4. '(' → logprob: -8.004406929016113
    5. '(Mod' → logprob: -10.754406929016113
    6. 'Mod' → logprob: -11.129406929016113
    7. ' i' → logprob: -12.504406929016113
    8. '   ' → logprob: -13.254406929016113
    9. '(
' → logprob: -14.004406929016113
    10. ' ' → logprob: -14.754406929016113

Token 483: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14468953013420105
    2. ' -' → logprob: -2.0196895599365234
    3. '-W' → logprob: -6.394689559936523
    4. 'W' → logprob: -8.769689559936523
    5. ' W' → logprob: -8.769689559936523
    6. '-
' → logprob: -10.769689559936523
    7. ' ' → logprob: -12.394689559936523
    8. '	W' → logprob: -13.894689559936523
    9. '```' → logprob: -14.019689559936523
    10. ' ' → logprob: -14.269689559936523

Token 484: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0007775885751470923
    2. ' W' → logprob: -7.250777721405029
    3. '(' → logprob: -10.500777244567871
    4. '(W' → logprob: -10.500777244567871
    5. 'i' → logprob: -12.375777244567871
    6. '(i' → logprob: -12.500777244567871
    7. ' (' → logprob: -13.000777244567871
    8. ' ' → logprob: -13.500777244567871
    9. '   ' → logprob: -14.625777244567871
    10. '	W' → logprob: -15.750777244567871

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001564586127642542
    2. ')
' → logprob: -8.87515640258789
    3. '+' → logprob: -12.25015640258789
    4. '   ' → logprob: -12.37515640258789
    5. ' )' → logprob: -13.25015640258789
    6. ')i' → logprob: -13.87515640258789
    7. '<|end|>' → logprob: -14.00015640258789
    8. ')+' → logprob: -14.12515640258789
    9. ')\
' → logprob: -14.25015640258789
    10. ')

' → logprob: -14.62515640258789

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012541614705696702
    2. ' p' → logprob: -7.751254081726074
    3. 'p' → logprob: -8.626254081726074
    4. 'q' → logprob: -8.626254081726074
    5. ' q' → logprob: -8.876254081726074
    6. '    ' → logprob: -9.376254081726074
    7. ' W' → logprob: -10.001254081726074
    8. ',' → logprob: -10.251254081726074
    9. ')' → logprob: -10.501254081726074
    10. ' ' → logprob: -10.626254081726074

Token 487: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0004827465454582125
    2. 'cq' → logprob: -8.375482559204102
    3. 'p' → logprob: -8.750482559204102
    4. '   ' → logprob: -10.000482559204102
    5. ' q' → logprob: -10.250482559204102
    6. '```' → logprob: -11.750482559204102
    7. 'W' → logprob: -13.000482559204102
    8. '``' → logprob: -14.000482559204102
    9. 'w' → logprob: -14.625482559204102
    10. 'c' → logprob: -14.875482559204102

Token 488: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.093505099765025e-05
    2. ' =' → logprob: -10.875020980834961
    3. '+=' → logprob: -13.375020980834961
    4. '=q' → logprob: -16.00002098083496
    5. '=

' → logprob: -16.25002098083496
    6. '=
' → logprob: -16.25002098083496
    7. '*=' → logprob: -16.75002098083496
    8. ' +=' → logprob: -18.37502098083496
    9. '=}' → logprob: -19.00002098083496
    10. '=p' → logprob: -19.87502098083496

Token 489: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.011406533420085907
    2. 'q' → logprob: -4.886406421661377
    3. 'p' → logprob: -6.136406421661377
    4. 'cq' → logprob: -6.886406421661377
    5. ' Mod' → logprob: -7.886406421661377
    6. '(Mod' → logprob: -8.511406898498535
    7. 'pq' → logprob: -11.386406898498535
    8. ' q' → logprob: -11.886406898498535
    9. ' p' → logprob: -12.261406898498535
    10. ' cq' → logprob: -13.136406898498535

Token 490: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.981667537620524e-06
    2. 'int' → logprob: -14.250001907348633
    3. 'Mod' → logprob: -14.500001907348633
    4. '(q' → logprob: -14.750001907348633
    5. 'q' → logprob: -16.750001907348633
    6. '[q' → logprob: -17.000001907348633
    7. '(Int' → logprob: -17.125001907348633
    8. '<Int' → logprob: -17.250001907348633
    9. '	Int' → logprob: -17.625001907348633
    10. 'INT' → logprob: -18.000001907348633

Token 491: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09829851984977722
    2. 'q' → logprob: -2.7232985496520996
    3. '(Mod' → logprob: -4.2232985496521
    4. '(q' → logprob: -4.7232985496521
    5. '+' → logprob: -6.3482985496521
    6. 'cq' → logprob: -6.9732985496521
    7. 'Mod' → logprob: -7.0982985496521
    8. '(cp' → logprob: -8.348298072814941
    9. '*q' → logprob: -8.973298072814941
    10. '(W' → logprob: -9.473298072814941

Token 492: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5014188799541444e-05
    2. 'Mod' → logprob: -10.375044822692871
    3. '(' → logprob: -12.375044822692871
    4. '(Mod' → logprob: -12.750044822692871
    5. ' ' → logprob: -12.875044822692871
    6. 'q' → logprob: -13.250044822692871
    7. 'p' → logprob: -13.750044822692871
    8. ')' → logprob: -14.750044822692871
    9. '1' → logprob: -15.125044822692871
    10. '   ' → logprob: -15.750044822692871

Token 493: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02084350399672985
    2. 'if' → logprob: -3.895843505859375
    3. ')' → logprob: -8.770843505859375
    4. '<|end|>' → logprob: -9.020843505859375
    5. '=' → logprob: -11.770843505859375
    6. ' ' → logprob: -11.895843505859375
    7. '	if' → logprob: -13.020843505859375
    8. 'If' → logprob: -13.145843505859375
    9. '<|end|>' → logprob: -13.395843505859375
    10. '+' → logprob: -13.895843505859375

Token 494: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.349848210811615
    2. ' if' → logprob: -1.2248482704162598
    3. '<|end|>' → logprob: -6.59984827041626
    4. '=' → logprob: -11.474847793579102
    5. ' ' → logprob: -11.724847793579102
    6. '	if' → logprob: -12.349847793579102
    7. ')' → logprob: -12.599847793579102
    8. '[' → logprob: -12.724847793579102
    9. '
' → logprob: -13.099847793579102
    10. '<|end|>' → logprob: -13.349847793579102

Token 495: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.69315105676651
    2. ' i' → logprob: -0.69315105676651
    3. '   ' → logprob: -12.943151473999023
    4. '	i' → logprob: -14.193151473999023
    5. ' ' → logprob: -14.818151473999023
    6. 'W' → logprob: -16.318151473999023
    7. '  ' → logprob: -16.693151473999023
    8. '```' → logprob: -16.693151473999023
    9. ' ' → logprob: -16.943151473999023
    10. '(i' → logprob: -17.193151473999023

Token 496: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3143991529941559
    2. ' <' → logprob: -1.3143991231918335
    3. '<W' → logprob: -6.939399242401123
    4. '<i' → logprob: -10.064398765563965
    5. '<B' → logprob: -10.064398765563965
    6. 'W' → logprob: -10.314398765563965
    7. ' W' → logprob: -11.189398765563965
    8. '<int' → logprob: -11.689398765563965
    9. '<w' → logprob: -12.064398765563965
    10. '<
' → logprob: -12.314398765563965

Token 497: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0004026673559565097
    2. ' W' → logprob: -7.875402450561523
    3. 'B' → logprob: -10.750402450561523
    4. '   ' → logprob: -14.625402450561523
    5. '	W' → logprob: -15.375402450561523
    6. ' ' → logprob: -15.875402450561523
    7. '```' → logprob: -16.625402450561523
    8. '<|end|>' → logprob: -16.875402450561523
    9. 'w' → logprob: -17.000402450561523
    10. 'i' → logprob: -17.125402450561523

Token 498: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31327494978904724
    2. ' else' → logprob: -1.3132749795913696
    3. '	else' → logprob: -11.938275337219238
    4. '```' → logprob: -13.313275337219238
    5. '   ' → logprob: -13.813275337219238
    6. '+' → logprob: -13.813275337219238
    7. '-' → logprob: -14.063275337219238
    8. 'elif' → logprob: -14.438275337219238
    9. ' ' → logprob: -15.313275337219238
    10. 'Else' → logprob: -15.438275337219238

Token 499: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.00022272850037552416
    2. ' Mod' → logprob: -9.125223159790039
    3. '(Mod' → logprob: -9.125223159790039
    4. 'cq' → logprob: -12.875223159790039
    5. '   ' → logprob: -14.250223159790039
    6. 'q' → logprob: -14.625223159790039
    7. 'p' → logprob: -15.500223159790039
    8. '(' → logprob: -15.750223159790039
    9. '_mod' → logprob: -15.750223159790039
    10. 'MOD' → logprob: -16.00022315979004

Token 500: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -5.512236498361744e-07
    2. 'int' → logprob: -15.125000953674316
    3. '(Int' → logprob: -16.125
    4. 'Mod' → logprob: -17.125
    5. '(' → logprob: -17.5
    6. '.Int' → logprob: -18.0
    7. 'INT' → logprob: -18.125
    8. '_int' → logprob: -18.625
    9. '<Int' → logprob: -18.75
    10. 'In' → logprob: -18.75

Token 501: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.0
    3. '(Mod' → logprob: -17.125
    4. ' (' → logprob: -18.5
    5. '(
' → logprob: -19.125
    6. 'Mod' → logprob: -19.125
    7. '(int' → logprob: -20.75
    8. '﻿' → logprob: -21.5
    9. '(M' → logprob: -21.875
    10. '(q' → logprob: -22.0

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. 'Mod' → logprob: -14.500020027160645
    4. '(Mod' → logprob: -16.250019073486328
    5. ' ' → logprob: -16.875019073486328
    6. ')' → logprob: -18.000019073486328
    7. '0' → logprob: -18.250019073486328
    8. '
' → logprob: -18.500019073486328
    9. '   ' → logprob: -19.500019073486328
    10. '2' → logprob: -19.750019073486328

Token 503: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18376995623111725
    2. '/' → logprob: -1.808769941329956
    3. ' /' → logprob: -6.058770179748535
    4. ')/' → logprob: -7.558770179748535
    5. 'if' → logprob: -7.808770179748535
    6. ' if' → logprob: -8.058770179748535
    7. 'else' → logprob: -8.433770179748535
    8. '   ' → logprob: -9.433770179748535
    9. 'elif' → logprob: -9.558770179748535
    10. ' else' → logprob: -10.808770179748535

Token 504: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14533856511116028
    2. ' /' → logprob: -2.020338535308838
    3. 'else' → logprob: -6.645338535308838
    4. 'elif' → logprob: -8.145339012145996
    5. ' if' → logprob: -8.645339012145996
    6. 'if' → logprob: -8.645339012145996
    7. '*' → logprob: -8.770339012145996
    8. ')' → logprob: -9.020339012145996
    9. ' else' → logprob: -9.020339012145996
    10. '/q' → logprob: -9.395339012145996

Token 505: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -6.8497312895488e-05
    2. ' Mod' → logprob: -10.000068664550781
    3. '(Mod' → logprob: -10.750068664550781
    4. '2' → logprob: -14.625068664550781
    5. '
' → logprob: -15.500068664550781
    6. '   ' → logprob: -15.500068664550781
    7. '_Mod' → logprob: -15.625068664550781
    8. 'MOD' → logprob: -16.00006866455078
    9. '```' → logprob: -16.62506866455078
    10. '_mod' → logprob: -16.87506866455078

Token 506: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.6240566083070007e-06
    2. 'int' → logprob: -13.375001907348633
    3. 'Mod' → logprob: -17.625001907348633
    4. '(' → logprob: -19.125001907348633
    5. 'INT' → logprob: -19.375001907348633
    6. '(Int' → logprob: -19.375001907348633
    7. '2' → logprob: -19.500001907348633
    8. '_int' → logprob: -19.750001907348633
    9. ' Int' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 507: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003178071230649948
    2. '2' → logprob: -5.753178119659424
    3. '(
' → logprob: -14.878177642822266
    4. ' (' → logprob: -18.253177642822266
    5. '```' → logprob: -19.128177642822266
    6. ' ' → logprob: -19.628177642822266
    7. '(
' → logprob: -19.753177642822266
    8. '__' → logprob: -19.753177642822266
    9. '(

' → logprob: -19.753177642822266
    10. '{' → logprob: -19.878177642822266

Token 508: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.32392441527918e-05
    2. '(' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.750053405761719
    4. '   ' → logprob: -15.250053405761719
    5. '
' → logprob: -15.625053405761719
    6. '۲' → logprob: -17.25005340576172
    7. '```' → logprob: -17.37505340576172
    8. ')' → logprob: -18.62505340576172
    9. '２' → logprob: -18.75005340576172
    10. '﻿' → logprob: -18.87505340576172

Token 509: ')**' (ID: 80066)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0003175889723934233
    2. ')**' → logprob: -8.125317573547363
    3. ')' → logprob: -11.000317573547363
    4. '**
' → logprob: -13.250317573547363
    5. '**)' → logprob: -13.250317573547363
    6. '```' → logprob: -14.375317573547363
    7. ' **' → logprob: -14.750317573547363
    8. '__' → logprob: -16.00031852722168
    9. '**
' → logprob: -16.37531852722168
    10. ')
' → logprob: -17.62531852722168

Token 510: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9361264946837764e-07
    2. ' i' → logprob: -15.875
    3. '   ' → logprob: -18.625
    4. ' ' → logprob: -19.5
    5. '	i' → logprob: -20.25
    6. '
' → logprob: -20.5
    7. '  
' → logprob: -20.625
    8. '<|end|>' → logprob: -20.625
    9. '*i' → logprob: -20.75
    10. '```' → logprob: -20.875

Token 511: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8587156534194946
    2. 'else' → logprob: -0.9837156534194946
    3. ' else' → logprob: -2.108715534210205
    4. ' +' → logprob: -2.608715534210205
    5. ' if' → logprob: -5.858715534210205
    6. '   ' → logprob: -6.233715534210205
    7. 'if' → logprob: -6.733715534210205
    8. 'elif' → logprob: -7.233715534210205
    9. '<|end|>' → logprob: -8.858716011047363
    10. '	else' → logprob: -8.858716011047363

Token 512: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269298940896988
    2. ' i' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.751930236816406
    4. ' ' → logprob: -14.501930236816406
    5. '	i' → logprob: -16.126930236816406
    6. '  ' → logprob: -17.126930236816406
    7. '(i' → logprob: -17.376930236816406
    8. ' (' → logprob: -17.751930236816406
    9. '```' → logprob: -18.001930236816406
    10. ' ' → logprob: -18.251930236816406

Token 513: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005241937469691038
    2. ' ==' → logprob: -5.255241870880127
    3. '==
' → logprob: -11.880242347717285
    4. '=' → logprob: -14.505242347717285
    5. '===' → logprob: -15.130242347717285
    6. '<=' → logprob: -15.505242347717285
    7. '==(' → logprob: -17.00524139404297
    8. ']==' → logprob: -17.13024139404297
    9. '﻿' → logprob: -18.25524139404297
    10. ')==' → logprob: -18.25524139404297

Token 514: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -6.158350151963532e-05
    2. ' W' → logprob: -10.000061988830566
    3. 'i' → logprob: -11.125061988830566
    4. '   ' → logprob: -13.625061988830566
    5. ' ' → logprob: -15.875061988830566
    6. '  ' → logprob: -17.37506103515625
    7. '
' → logprob: -18.00006103515625
    8. ' i' → logprob: -18.12506103515625
    9. 'B' → logprob: -18.25006103515625
    10. '	W' → logprob: -18.25006103515625

Token 515: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25194409489631653
    2. 'else' → logprob: -1.5019440650939941
    3. '	else' → logprob: -11.376944541931152
    4. '   ' → logprob: -13.126944541931152
    5. '_else' → logprob: -14.751944541931152
    6. '       ' → logprob: -14.876944541931152
    7. ' ' → logprob: -15.001944541931152
    8. '    ' → logprob: -16.126943588256836
    9. '  ' → logprob: -16.376943588256836
    10. 'elif' → logprob: -16.501943588256836

Token 516: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.632542913896032e-05
    2. ' q' → logprob: -10.625046730041504
    3. '   ' → logprob: -10.750046730041504
    4. '	q' → logprob: -15.000046730041504
    5. '  ' → logprob: -16.000045776367188
    6. '
' → logprob: -17.250045776367188
    7. '       ' → logprob: -17.375045776367188
    8. '    ' → logprob: -17.375045776367188
    9. ' ' → logprob: -18.375045776367188
    10. '     ' → logprob: -18.750045776367188

Token 517: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1797560751438141
    2. ' +' → logprob: -1.8047560453414917
    3. '+
' → logprob: -11.679756164550781
    4. ' +
' → logprob: -14.054756164550781
    5. '+p' → logprob: -14.304756164550781
    6. ' plus' → logprob: -15.429756164550781
    7. '<|end|>' → logprob: -15.429756164550781
    8. '+c' → logprob: -15.554756164550781
    9. '＋' → logprob: -15.679756164550781
    10. '+=' → logprob: -16.17975616455078

Token 518: ' cq' (ID: 151096)
  Prédit: 'cq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cq' → logprob: -0.001329287188127637
    2. ' cq' → logprob: -6.62632942199707
    3. '   ' → logprob: -13.25132942199707
    4. 'cj' → logprob: -14.62632942199707
    5. 'c' → logprob: -15.25132942199707
    6. 'cp' → logprob: -15.75132942199707
    7. 'cg' → logprob: -15.75132942199707
    8. 'cw' → logprob: -16.12632942199707
    9. '```' → logprob: -16.37632942199707
    10. '
' → logprob: -16.37632942199707

Token 519: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5767345428466797
    2. '/' → logprob: -0.8267345428466797
    3. '<|end|>' → logprob: -7.32673454284668
    4. '```' → logprob: -10.07673454284668
    5. '*' → logprob: -11.20173454284668
    6. '<|end|>' → logprob: -11.32673454284668
    7. '/q' → logprob: -11.45173454284668
    8. ' *' → logprob: -11.57673454284668
    9. '**' → logprob: -11.70173454284668
    10. '/Q' → logprob: -12.32673454284668

Token 520: ' Mod' (ID: 7191)
  Prédit: 'Mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mod' → logprob: -0.001117711653932929
    2. '(Mod' → logprob: -7.376117706298828
    3. ' Mod' → logprob: -7.626117706298828
    4. '_Mod' → logprob: -14.001117706298828
    5. '   ' → logprob: -14.501117706298828
    6. '(' → logprob: -15.001117706298828
    7. ' ' → logprob: -15.001117706298828
    8. '
' → logprob: -15.251117706298828
    9. 'MOD' → logprob: -15.751117706298828
    10. 'Mo' → logprob: -15.751117706298828

Token 521: 'Int' (ID: 2471)
  Prédit: 'Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Int' → logprob: -1.8193366486229934e-05
    2. 'int' → logprob: -11.500018119812012
    3. '(' → logprob: -12.000018119812012
    4. '2' → logprob: -13.500018119812012
    5. '(Int' → logprob: -14.750018119812012
    6. 'Mod' → logprob: -16.750019073486328
    7. '(int' → logprob: -17.625019073486328
    8. '(Mod' → logprob: -17.875019073486328
    9. '**' → logprob: -18.000019073486328
    10. 'UInt' → logprob: -18.375019073486328

Token 522: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.125
    3. '(Mod' → logprob: -17.25
    4. '(
' → logprob: -17.375
    5. ' (' → logprob: -18.375
    6. '**' → logprob: -19.5
    7. 'Mod' → logprob: -20.875
    8. '((' → logprob: -21.5
    9. '   ' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038384052459150553
    2. '(' → logprob: -7.8753838539123535
    3. ' ' → logprob: -12.625383377075195
    4. '   ' → logprob: -15.500383377075195
    5. ' (' → logprob: -16.875383377075195
    6. '
' → logprob: -17.125383377075195
    7. '(Mod' → logprob: -17.250383377075195
    8. '```' → logprob: -17.250383377075195
    9. 'Mod' → logprob: -17.500383377075195
    10. '**' → logprob: -17.500383377075195

Token 524: ')**' (ID: 80066)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -9.968312951968983e-06
    2. ')**' → logprob: -12.125009536743164
    3. '**
' → logprob: -13.625009536743164
    4. ')' → logprob: -14.000009536743164
    5. ' **' → logprob: -14.125009536743164
    6. '^' → logprob: -14.750009536743164
    7. '__' → logprob: -15.000009536743164
    8. '```' → logprob: -15.250009536743164
    9. 'i' → logprob: -15.375009536743164
    10. '**)' → logprob: -15.500009536743164

Token 525: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. ' i' → logprob: -17.125
    4. '(i' → logprob: -18.625
    5. '2' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. '
' → logprob: -19.5
    8. ' ' → logprob: -19.625
    9. '*i' → logprob: -20.0
    10. '<|end|>' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 523
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 266
Tokens correctement prédits (top 10): 472
Précision stricte (1ère position): 49.52%
Précision adaptée (1ère position): 50.86%
Précision (top 10): 90.25%
================================================================================
