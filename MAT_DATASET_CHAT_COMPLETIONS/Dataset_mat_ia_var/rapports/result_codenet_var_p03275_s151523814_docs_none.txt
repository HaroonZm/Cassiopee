================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate
from math import ceil

N = int(input())
A = list(map(int, input().split()))

if N == 1:
    print(A[0])
    exit()

class BinaryIndexedTree:
    def __init__(self, n):
        self.size = n
        self.bit = [0] * (n + 1)

    def sum(self, i):
        s = 0
        while i > 0:
            s += self.bit[i]
            i -= (i & -i)
        return s

    def add(self, i, x):
        while i <= self.size:
            self.bit[i] += x
            i += (i & -i)

    def reset(self):
        self.bit = [0] * (self.size + 1)

BIT = BinaryIndexedTree(N)
lo, hi = -1, 10 ** 9 + 1
while hi - lo > 1:
    X = (hi + lo) // 2
    Binary = [(1 if a >= X else -1) for a in A]
    Binary = list(accumulate(Binary))
    BIT.reset()
    inversion = 0
    Binary_sorted = {b: i for i, b in enumerate(sorted(Binary), start=1)}
    for j, b in enumerate(Binary):
        inversion += BIT.sum(Binary_sorted[b]) + (b >= 0)
        BIT.add(Binary_sorted[b], 1)
    if inversion >= ceil((N * (N + 1) / 2) / 2):
        lo = X
    else:
        hi = X

print(lo)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.2695895433425903
    2. 'com' → logprob: -1.3945895433425903
    3. 'count' → logprob: -1.8945895433425903
    4. 'per' → logprob: -2.269589424133301
    5. 'cycle' → logprob: -2.519589424133301
    6. ' permutations' → logprob: -3.019589424133301
    7. ' product' → logprob: -3.644589424133301
    8. 'chain' → logprob: -3.769589424133301
    9. ' cycle' → logprob: -4.019589424133301
    10. 'group' → logprob: -4.644589424133301

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001358400477329269
    2. '(
' → logprob: -9.50013542175293
    3. '.' → logprob: -11.12513542175293
    4. '\(' → logprob: -11.12513542175293
    5. ' (' → logprob: -11.37513542175293
    6. ',' → logprob: -11.75013542175293
    7. '```' → logprob: -13.25013542175293
    8. '()' → logprob: -13.37513542175293
    9. 'a' → logprob: -13.50013542175293
    10. ''' → logprob: -14.00013542175293

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005453004967421293
    2. '(
' → logprob: -5.255453109741211
    3. '\n' → logprob: -10.255453109741211
    4. '\(' → logprob: -10.255453109741211
    5. '
' → logprob: -10.880453109741211
    6. '(

' → logprob: -10.880453109741211
    7. 'a' → logprob: -10.880453109741211
    8. ',' → logprob: -10.880453109741211
    9. '```' → logprob: -11.880453109741211
    10. 'newline' → logprob: -12.005453109741211

Token 6: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5242747664451599
    2. ' operator' → logprob: -1.5242748260498047
    3. ' functools' → logprob: -2.2742748260498047
    4. ' collections' → logprob: -3.1492748260498047
    5. 'math' → logprob: -4.024274826049805
    6. 'operator' → logprob: -4.524274826049805
    7. 'collections' → logprob: -5.024274826049805
    8. 'fun' → logprob: -5.274274826049805
    9. ' itertools' → logprob: -6.399274826049805
    10. ' ' → logprob: -6.899274826049805

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06064513698220253
    2. 'import' → logprob: -3.06064510345459
    3. ' ' → logprob: -4.43564510345459
    4. '<|end|>' → logprob: -9.93564510345459
    5. '_import' → logprob: -11.06064510345459
    6. '	import' → logprob: -11.06064510345459
    7. ' sqrt' → logprob: -11.43564510345459
    8. '```' → logprob: -12.06064510345459
    9. '<|end|>' → logprob: -12.31064510345459
    10. '.' → logprob: -12.43564510345459

Token 8: ' ceil' (ID: 35964)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.364749938249588
    2. 'sqrt' → logprob: -2.6147499084472656
    3. ' factorial' → logprob: -2.6147499084472656
    4. ' ceil' → logprob: -2.9897499084472656
    5. ' inf' → logprob: -3.1147499084472656
    6. ' gcd' → logprob: -3.3647499084472656
    7. ' prod' → logprob: -4.364749908447266
    8. ' log' → logprob: -5.364749908447266
    9. ' comb' → logprob: -5.864749908447266
    10. 'log' → logprob: -5.989749908447266

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37090906500816345
    2. '(
' → logprob: -1.7459090948104858
    3. '\n' → logprob: -2.9959089756011963
    4. '
' → logprob: -3.4959089756011963
    5. '\' → logprob: -3.9959089756011963
    6. ',' → logprob: -4.870909214019775
    7. 'def' → logprob: -5.120909214019775
    8. 'a' → logprob: -5.870909214019775
    9. '

' → logprob: -5.995909214019775
    10. '`' → logprob: -6.120909214019775

Token 10: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09729422628879547
    2. '\' → logprob: -3.347294330596924
    3. '(
' → logprob: -3.472294330596924
    4. 'd' → logprob: -4.347294330596924
    5. 'def' → logprob: -5.597294330596924
    6. '`' → logprob: -5.972294330596924
    7. '\n' → logprob: -5.972294330596924
    8. '\(' → logprob: -6.722294330596924
    9. '#' → logprob: -7.222294330596924
    10. '
' → logprob: -7.722294330596924

Token 11: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6590915322303772
    2. ' =' → logprob: -1.5340914726257324
    3. '=' → logprob: -2.0340914726257324
    4. '_' → logprob: -3.1590914726257324
    5. ')' → logprob: -3.2840914726257324
    6. '  ' → logprob: -3.9090914726257324
    7. '[' → logprob: -5.159091472625732
    8. ',' → logprob: -5.159091472625732
    9. '<|end|>' → logprob: -5.159091472625732
    10. ' )' → logprob: -5.284091472625732

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0497857965528965
    2. '10' → logprob: -3.299785852432251
    3. '100' → logprob: -5.424785614013672
    4. ' int' → logprob: -5.924785614013672
    5. '0' → logprob: -6.674785614013672
    6. 'int' → logprob: -6.799785614013672
    7. '1' → logprob: -6.924785614013672
    8. '20' → logprob: -7.674785614013672
    9. '5' → logprob: -7.924785614013672
    10. '50' → logprob: -8.299785614013672

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02024497464299202
    2. '(input' → logprob: -4.02024507522583
    3. '()' → logprob: -6.64524507522583
    4. '(N' → logprob: -8.020244598388672
    5. '('' → logprob: -8.145244598388672
    6. '<|end|>' → logprob: -10.395244598388672
    7. 'input' → logprob: -10.520244598388672
    8. '(`' → logprob: -10.770244598388672
    9. '```' → logprob: -11.020244598388672
    10. ')' → logprob: -11.520244598388672

Token 14: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7568634152412415
    2. '(' → logprob: -1.2568633556365967
    3. ')' → logprob: -1.6318633556365967
    4. '())' → logprob: -3.0068633556365967
    5. '))' → logprob: -7.631863594055176
    6. '('' → logprob: -8.381863594055176
    7. '(
' → logprob: -8.381863594055176
    8. '(()' → logprob: -9.506863594055176
    9. '(

' → logprob: -9.756863594055176
    10. '()))' → logprob: -10.256863594055176

Token 15: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1459072828292847
    2. 'result' → logprob: -1.6459072828292847
    3. 'data' → logprob: -2.020907402038574
    4. 'a' → logprob: -2.395907402038574
    5. 'arr' → logprob: -3.145907402038574
    6. ')' → logprob: -3.395907402038574
    7. 'res' → logprob: -4.145907402038574
    8. '`' → logprob: -4.270907402038574
    9. 'dp' → logprob: -4.270907402038574
    10. 'array' → logprob: -4.520907402038574

Token 16: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1407470852136612
    2. ' =' → logprob: -2.3907470703125
    3. '.' → logprob: -3.8907470703125
    4. '[:]' → logprob: -4.7657470703125
    5. '=' → logprob: -5.5157470703125
    6. '[]' → logprob: -6.2657470703125
    7. ')' → logprob: -6.7657470703125
    8. 's' → logprob: -6.8907470703125
    9. '_' → logprob: -7.2657470703125
    10. ',' → logprob: -8.0157470703125

Token 17: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.18106620013713837
    2. 'list' → logprob: -1.9310661554336548
    3. ' [' → logprob: -3.9310662746429443
    4. '[' → logprob: -7.681066036224365
    5. ' []' → logprob: -8.306066513061523
    6. '[list' → logprob: -8.556066513061523
    7. '[]' → logprob: -9.431066513061523
    8. '[input' → logprob: -11.556066513061523
    9. '[int' → logprob: -12.056066513061523
    10. ' input' → logprob: -12.931066513061523

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07779359072446823
    2. '(acc' → logprob: -3.077793598175049
    3. '(input' → logprob: -4.577793598175049
    4. '(map' → logprob: -4.577793598175049
    5. '(range' → logprob: -5.327793598175049
    6. '(int' → logprob: -5.952793598175049
    7. '()' → logprob: -8.07779312133789
    8. '(eval' → logprob: -9.32779312133789
    9. '(max' → logprob: -10.32779312133789
    10. '(filter' → logprob: -10.57779312133789

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07934433966875076
    2. '(' → logprob: -2.7043442726135254
    3. '(str' → logprob: -5.204344272613525
    4. '(lambda' → logprob: -6.454344272613525
    5. '(input' → logprob: -6.954344272613525
    6. '[int' → logprob: -7.579344272613525
    7. 'int' → logprob: -8.454344749450684
    8. ')' → logprob: -8.704344749450684
    9. '<int' → logprob: -9.329344749450684
    10. '<|end|>' → logprob: -9.329344749450684

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.17642928659915924
    2. ',input' → logprob: -2.051429271697998
    3. '(' → logprob: -4.051429271697998
    4. ',' → logprob: -4.176429271697998
    5. 'input' → logprob: -8.676429748535156
    6. ' ,' → logprob: -9.176429748535156
    7. '=input' → logprob: -10.051429748535156
    8. ' input' → logprob: -10.926429748535156
    9. '))' → logprob: -11.176429748535156
    10. ')' → logprob: -11.301429748535156

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023247340694069862
    2. ' input' → logprob: -3.773247241973877
    3. ',input' → logprob: -14.023247718811035
    4. '(input' → logprob: -14.648247718811035
    5. ')' → logprob: -15.523247718811035
    6. '	input' → logprob: -15.773247718811035
    7. '=input' → logprob: -15.773247718811035
    8. ' ' → logprob: -16.14824676513672
    9. 'list' → logprob: -17.77324676513672
    10. 'str' → logprob: -18.14824676513672

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020938136731274426
    2. '()))' → logprob: -9.25020980834961
    3. '(' → logprob: -10.25020980834961
    4. '())' → logprob: -10.50020980834961
    5. '(),' → logprob: -11.00020980834961
    6. '()' → logprob: -11.12520980834961
    7. '()));' → logprob: -12.25020980834961
    8. ')' → logprob: -13.00020980834961
    9. '))' → logprob: -13.37520980834961
    10. ',' → logprob: -13.62520980834961

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016611411410849541
    2. 'strip' → logprob: -8.750165939331055
    3. 'rstrip' → logprob: -12.250165939331055
    4. ' split' → logprob: -13.125165939331055
    5. '(split' → logprob: -14.375165939331055
    6. 'read' → logprob: -15.875165939331055
    7. ')' → logprob: -16.000165939331055
    8. 'spl' → logprob: -16.750165939331055
    9. '.split' → logprob: -19.000165939331055
    10. '```' → logprob: -19.375165939331055

Token 24: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03965131565928459
    2. ')' → logprob: -3.289651393890381
    3. '(' → logprob: -7.164651393890381
    4. '()))' → logprob: -7.539651393890381
    5. ')))' → logprob: -8.414650917053223
    6. '())' → logprob: -10.164650917053223
    7. '),' → logprob: -11.289650917053223
    8. '))
' → logprob: -12.164650917053223
    9. ' ))' → logprob: -12.164650917053223
    10. ''))' → logprob: -12.664650917053223

Token 25: 'if' (ID: 366)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.4202202558517456
    2. 'dp' → logprob: -1.7952202558517456
    3. 'acc' → logprob: -2.045220375061035
    4. 'cum' → logprob: -2.170220375061035
    5. 'S' → logprob: -2.420220375061035
    6. 's' → logprob: -2.670220375061035
    7. 'c' → logprob: -2.920220375061035
    8. 'diff' → logprob: -4.545220375061035
    9. 'cost' → logprob: -4.920220375061035
    10. 'dist' → logprob: -4.920220375061035

Token 26: ' N' (ID: 478)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.24292822182178497
    2. ' N' → logprob: -2.1179282665252686
    3. ' ' → logprob: -2.7429282665252686
    4. 'A' → logprob: -4.1179280281066895
    5. ' sum' → logprob: -5.3679280281066895
    6. 'N' → logprob: -5.3679280281066895
    7. ' max' → logprob: -6.2429280281066895
    8. 'sum' → logprob: -7.1179280281066895
    9. ' ceil' → logprob: -7.2429280281066895
    10. ' not' → logprob: -7.3679280281066895

Token 27: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5186675190925598
    2. ' ' → logprob: -1.393667459487915
    3. ' <' → logprob: -3.143667459487915
    4. ' >=' → logprob: -3.393667459487915
    5. ' <=' → logprob: -3.643667459487915
    6. ' ==' → logprob: -3.643667459487915
    7. '>' → logprob: -3.893667459487915
    8. ' %' → logprob: -5.893667697906494
    9. '<' → logprob: -6.643667697906494
    10. '[' → logprob: -7.143667697906494

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31761807203292847
    2. '1' → logprob: -1.3176181316375732
    3. '0' → logprob: -5.442617893218994
    4. '2' → logprob: -11.317618370056152
    5. '3' → logprob: -12.942618370056152
    6. ')' → logprob: -14.692618370056152
    7. '>' → logprob: -14.880118370056152
    8. '   ' → logprob: -15.005118370056152
    9. ' 
' → logprob: -15.067618370056152
    10. ''' → logprob: -15.192618370056152

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026528246235102415
    2. ' ' → logprob: -6.252652645111084
    3. '0' → logprob: -7.252652645111084
    4. '2' → logprob: -11.252653121948242
    5. '3' → logprob: -13.127653121948242
    6. '  ' → logprob: -15.877653121948242
    7. '   ' → logprob: -16.002653121948242
    8. '```' → logprob: -16.252653121948242
    9. '4' → logprob: -16.502653121948242
    10. '5' → logprob: -17.190153121948242

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.735893965815194e-05
    2. ':
' → logprob: -11.375017166137695
    3. ' :' → logprob: -12.250017166137695
    4. ':return' → logprob: -14.250017166137695
    5. ':**' → logprob: -16.500017166137695
    6. ' and' → logprob: -16.750017166137695
    7. '):' → logprob: -16.750017166137695
    8. ':

' → logprob: -17.250017166137695
    9. ',' → logprob: -17.375017166137695
    10. '():' → logprob: -17.625017166137695

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10153891146183014
    2. ' print' → logprob: -3.101538896560669
    3. '
' → logprob: -3.976538896560669
    4. 'print' → logprob: -4.226539134979248
    5. '\n' → logprob: -5.101539134979248
    6. ' 
' → logprob: -5.226539134979248
    7. '    
' → logprob: -5.851539134979248
    8. '	print' → logprob: -6.351539134979248
    9. ' ' → logprob: -6.976539134979248
    10. '\' → logprob: -8.47653865814209

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.030167432501912117
    2. ' print' → logprob: -3.5301673412323
    3. 'A' → logprob: -8.280167579650879
    4. '0' → logprob: -9.655167579650879
    5. ' A' → logprob: -9.905167579650879
    6. '   ' → logprob: -10.530167579650879
    7. 'pass' → logprob: -11.655167579650879
    8. ' ' → logprob: -13.030167579650879
    9. '1' → logprob: -13.155167579650879
    10. 'return' → logprob: -13.655167579650879

Token 33: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07920437306165695
    2. '(' → logprob: -2.5792043209075928
    3. '('' → logprob: -9.204204559326172
    4. '((' → logprob: -9.329204559326172
    5. '(a' → logprob: -9.954204559326172
    6. '(N' → logprob: -11.204204559326172
    7. '("("' → logprob: -11.454204559326172
    8. '("' → logprob: -11.579204559326172
    9. '()' → logprob: -12.079204559326172
    10. ' (' → logprob: -12.329204559326172

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7848862373502925e-05
    2. ')' → logprob: -10.500027656555176
    3. '0' → logprob: -16.375028610229492
    4. '))' → logprob: -17.250028610229492
    5. '[-' → logprob: -17.750028610229492
    6. '[]' → logprob: -18.375028610229492
    7. ' [' → logprob: -18.500028610229492
    8. '[
' → logprob: -18.625028610229492
    9. ']' → logprob: -18.750028610229492
    10. ' )' → logprob: -18.750028610229492

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -15.125001907348633
    4. '])' → logprob: -16.625001907348633
    5. ']' → logprob: -16.875001907348633
    6. ')' → logprob: -18.062501907348633
    7. '۰' → logprob: -18.250001907348633
    8. '[' → logprob: -18.312501907348633
    9. '1' → logprob: -18.437501907348633
    10. '   ' → logprob: -18.500001907348633

Token 36: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003931384126190096
    2. ')
' → logprob: -8.00039291381836
    3. '))' → logprob: -10.12539291381836
    4. ' )' → logprob: -11.50039291381836
    5. '})' → logprob: -13.25039291381836
    6. '])' → logprob: -13.37539291381836
    7. ')
' → logprob: -13.62539291381836
    8. '`)' → logprob: -14.62539291381836
    9. ')

' → logprob: -15.37539291381836
    10. '),' → logprob: -15.62539291381836

Token 37: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21195615828037262
    2. '
' → logprob: -1.8369561433792114
    3. '\n' → logprob: -4.711956024169922
    4. 'elif' → logprob: -4.711956024169922
    5. ' else' → logprob: -5.461956024169922
    6. '    
' → logprob: -5.586956024169922
    7. ' 
' → logprob: -5.961956024169922
    8. ')' → logprob: -6.961956024169922
    9. '  
' → logprob: -7.461956024169922
    10. '   ' → logprob: -7.461956024169922

Token 38: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33184874057769775
    2. '\n' → logprob: -1.9568487405776978
    3. '
' → logprob: -2.206848621368408
    4. ' else' → logprob: -5.081848621368408
    5. 'elif' → logprob: -5.081848621368408
    6. 'exit' (adapté à ' exit') → logprob: -5.456848621368408
    7. ' 
' → logprob: -5.456848621368408
    8. '    
' → logprob: -5.831848621368408
    9. ')' → logprob: -6.456848621368408
    10. '```' → logprob: -6.456848621368408

Token 39: '()

' (ID: 5874)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7927461266517639
    2. '\n' → logprob: -0.7927461266517639
    3. '
' → logprob: -3.667746067047119
    4. '\' → logprob: -3.667746067047119
    5. '

' → logprob: -4.792746067047119
    6. '()
' → logprob: -4.917746067047119
    7. '' → logprob: -5.542746067047119
    8. ' 
' → logprob: -5.542746067047119
    9. '  
' → logprob: -5.542746067047119
    10. '```' → logprob: -5.792746067047119

Token 40: 'class' (ID: 1444)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1839993000030518
    2. 'prefix' → logprob: -1.9339993000030518
    3. 's' → logprob: -2.0589993000030518
    4. '
' → logprob: -2.5589993000030518
    5. 'acc' → logprob: -2.6839993000030518
    6. 'S' → logprob: -3.4339993000030518
    7. 'cum' → logprob: -3.6839993000030518
    8. 'res' → logprob: -3.8089993000030518
    9. '

' → logprob: -4.058999061584473
    10. 'max' → logprob: -4.183999061584473

Token 41: ' Binary' (ID: 32672)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.07942571491003036
    2. ' Solver' → logprob: -3.079425811767578
    3. ' Segment' → logprob: -5.329425811767578
    4. ' Acc' → logprob: -5.329425811767578
    5. ' Counter' → logprob: -6.329425811767578
    6. ' Scheduler' → logprob: -6.704425811767578
    7. 'Solution' → logprob: -6.704425811767578
    8. ' S' → logprob: -6.829425811767578
    9. ' Stack' → logprob: -7.329425811767578
    10. ' Seg' → logprob: -7.329425811767578

Token 42: 'Indexed' (ID: 78900)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.30290064215660095
    2. 'Search' → logprob: -1.8029006719589233
    3. 'Indexed' → logprob: -2.427900552749634
    4. ' Indexed' → logprob: -5.677900791168213
    5. 'Heap' → logprob: -5.927900791168213
    6. 'tree' → logprob: -8.177900314331055
    7. 'Operator' → logprob: -8.302900314331055
    8. 'Index' → logprob: -8.427900314331055
    9. 'Tre' → logprob: -8.677900314331055
    10. 'Trie' → logprob: -8.677900314331055

Token 43: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.2603901015827432e-05
    2. ' Tree' → logprob: -11.750022888183594
    3. '_tree' → logprob: -12.250022888183594
    4. 'tree' → logprob: -12.500022888183594
    5. ' tree' → logprob: -13.750022888183594
    6. 'ree' → logprob: -14.000022888183594
    7. '<Tree' → logprob: -14.250022888183594
    8. ' ' → logprob: -14.375022888183594
    9. '	Tree' → logprob: -14.375022888183594
    10. '_T' → logprob: -14.750022888183594

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003856959054246545
    2. '():' → logprob: -5.628857135772705
    3. '):' → logprob: -9.753856658935547
    4. ' :' → logprob: -9.753856658935547
    5. '(' → logprob: -10.003856658935547
    6. '>:' → logprob: -10.003856658935547
    7. '<|end|>' → logprob: -11.503856658935547
    8. '(object' → logprob: -11.753856658935547
    9. '```' → logprob: -11.878856658935547
    10. '#:' → logprob: -12.878856658935547

Token 45: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002835040504578501
    2. ':
' → logprob: -8.625283241271973
    3. '(object' → logprob: -10.250283241271973
    4. '():' → logprob: -10.875283241271973
    5. '```' → logprob: -10.875283241271973
    6. '(' → logprob: -11.375283241271973
    7. '   ' → logprob: -12.125283241271973
    8. '<|end|>' → logprob: -12.375283241271973
    9. ' :' → logprob: -13.000283241271973
    10. ' ' → logprob: -13.500283241271973

Token 46: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.041165199130773544
    2. 'def' (adapté à ' def') → logprob: -3.2911651134490967
    3. '   ' → logprob: -5.791165351867676
    4. '	def' → logprob: -10.541165351867676
    5. '    ' → logprob: -10.666165351867676
    6. ' __' → logprob: -12.166165351867676
    7. ' ' → logprob: -12.666165351867676
    8. ':def' → logprob: -13.541165351867676
    9. ' None' → logprob: -13.791165351867676
    10. 'class' → logprob: -14.041165351867676

Token 47: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0019906130619347095
    2. ' ' → logprob: -7.126990795135498
    3. '__' → logprob: -7.376990795135498
    4. ' init' → logprob: -8.12699031829834
    5. 'init' → logprob: -8.75199031829834
    6. '_init' → logprob: -9.87699031829834
    7. ' _' → logprob: -10.75199031829834
    8. ' ' → logprob: -10.75199031829834
    9. '  ' → logprob: -11.75199031829834
    10. '_' → logprob: -12.87699031829834

Token 48: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.093505099765025e-05
    2. 'nit' → logprob: -11.250020980834961
    3. 'ini' → logprob: -12.375020980834961
    4. 'in' → logprob: -12.625020980834961
    5. 'inite' → logprob: -16.25002098083496
    6. 'int' → logprob: -16.25002098083496
    7. 'innit' → logprob: -16.25002098083496
    8. 'n' → logprob: -17.00002098083496
    9. ' init' → logprob: -17.12502098083496
    10. 'initi' → logprob: -17.37502098083496

Token 49: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6128261089324951
    2. '__(' → logprob: -0.8628261089324951
    3. '(' → logprob: -3.862826108932495
    4. ' (' → logprob: -4.362826347351074
    5. '__' → logprob: -6.362826347351074
    6. '_(' → logprob: -7.862826347351074
    7. '_' → logprob: -9.612826347351074
    8. '<>(' → logprob: -10.112826347351074
    9. 'self' → logprob: -10.237826347351074
    10. ')(' → logprob: -10.362826347351074

Token 50: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020449401927180588
    2. ' self' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.875204086303711
    4. '       ' → logprob: -15.750204086303711
    5. '	self' → logprob: -15.875204086303711
    6. 'size' → logprob: -16.12520408630371
    7. '(self' → logprob: -16.62520408630371
    8. '_self' → logprob: -17.25020408630371
    9. ')' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18086574971675873
    2. ' ,' → logprob: -1.80586576461792
    3. 'self' → logprob: -6.93086576461792
    4. ',n' → logprob: -9.680865287780762
    5. ',self' → logprob: -9.930865287780762
    6. ',size' → logprob: -11.180865287780762
    7. ' self' → logprob: -12.055865287780762
    8. ',num' → logprob: -13.305865287780762
    9. ' ' → logprob: -13.555865287780762
    10. ')' → logprob: -14.055865287780762

Token 52: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4788118302822113
    2. 'n' → logprob: -1.4788118600845337
    3. ' n' → logprob: -2.478811740875244
    4. ' self' → logprob: -2.728811740875244
    5. ' size' → logprob: -6.353811740875244
    6. 'size' → logprob: -6.478811740875244
    7. '   ' → logprob: -9.353812217712402
    8. 'N' → logprob: -9.978812217712402
    9. ' N' → logprob: -11.103812217712402
    10. '    ' → logprob: -12.853812217712402

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003562654135748744
    2. ' ):' → logprob: -6.1285624504089355
    3. ')' → logprob: -6.7535624504089355
    4. '):
' → logprob: -9.128562927246094
    5. ',' → logprob: -9.503562927246094
    6. ':' → logprob: -11.253562927246094
    7. ' )' → logprob: -11.753562927246094
    8. '+' → logprob: -13.378562927246094
    9. '=' → logprob: -13.878562927246094
    10. '):
' → logprob: -14.378562927246094

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004464300815016031
    2. 'self' → logprob: -5.879464149475098
    3. '    ' → logprob: -7.629464149475098
    4. '        ' → logprob: -8.004464149475098
    5. ' self' → logprob: -8.129464149475098
    6. '   ' → logprob: -9.004464149475098
    7. ',' → logprob: -9.129464149475098
    8. 'n' → logprob: -9.754464149475098
    9. '0' → logprob: -10.129464149475098
    10. ' ' → logprob: -10.379464149475098

Token 55: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.26233047246932983
    2. 'self' (adapté à ' self') → logprob: -1.7623305320739746
    3. '       ' → logprob: -2.8873305320739746
    4. ' ' → logprob: -6.262330532073975
    5. '        ' → logprob: -7.762330532073975
    6. '   ' → logprob: -7.887330532073975
    7. '0' → logprob: -8.387330055236816
    8. '    ' → logprob: -8.637330055236816
    9. '	self' → logprob: -8.762330055236816
    10. 'n' → logprob: -10.262330055236816

Token 56: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4934370219707489
    2. '.n' → logprob: -0.9934370517730713
    3. '._' → logprob: -4.868436813354492
    4. '.size' → logprob: -5.368436813354492
    5. ' .' → logprob: -5.493436813354492
    6. '.data' → logprob: -6.618436813354492
    7. '.bit' → logprob: -8.868436813354492
    8. ' =' → logprob: -8.993436813354492
    9. '.user' → logprob: -8.993436813354492
    10. 'n' → logprob: -8.993436813354492

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143868029117584
    2. '=' → logprob: -1.7014386653900146
    3. ' ' → logprob: -10.701438903808594
    4. '=n' → logprob: -13.201438903808594
    5. '   ' → logprob: -14.826438903808594
    6. ')' → logprob: -15.326438903808594
    7. '=int' → logprob: -15.701438903808594
    8. '    ' → logprob: -16.201438903808594
    9. '＝' → logprob: -16.201438903808594
    10. '  ' → logprob: -17.076438903808594

Token 58: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.021771134808659554
    2. ' n' → logprob: -4.02177095413208
    3. '1' → logprob: -5.64677095413208
    4. ' ' → logprob: -9.646771430969238
    5. '2' → logprob: -12.021771430969238
    6. 'ceil' → logprob: -12.396771430969238
    7. '	n' → logprob: -12.896771430969238
    8. '[' → logprob: -13.021771430969238
    9. '   ' → logprob: -13.146771430969238
    10. '[n' → logprob: -14.396771430969238

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021223074290901423
    2. '
' → logprob: -6.752122402191162
    3. 'self' → logprob: -7.752122402191162
    4. '+' → logprob: -8.627121925354004
    5. ',' → logprob: -9.127121925354004
    6. '   ' → logprob: -9.877121925354004
    7. '<|end|>' → logprob: -10.002121925354004
    8. '        ' → logprob: -10.377121925354004
    9. ')' → logprob: -10.752121925354004
    10. ' +' → logprob: -11.377121925354004

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001751103438436985
    2. 'self' → logprob: -6.376750946044922
    3. '<|end|>' → logprob: -10.751750946044922
    4. ',' → logprob: -11.501750946044922
    5. ' self' → logprob: -11.626750946044922
    6. '   ' → logprob: -12.501750946044922
    7. '	self' → logprob: -13.876750946044922
    8. '<|end|>' → logprob: -14.251750946044922
    9. '           ' → logprob: -14.501750946044922
    10. 's' → logprob: -15.001750946044922

Token 61: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2854916453361511
    2. ' self' → logprob: -1.785491704940796
    3. '       ' → logprob: -3.285491704940796
    4. '[' → logprob: -3.410491704940796
    5. ' [' → logprob: -5.410491466522217
    6. '   ' → logprob: -6.285491466522217
    7. '[self' → logprob: -6.535491466522217
    8. '0' → logprob: -6.660491466522217
    9. ' ' → logprob: -8.035491943359375
    10. '    ' → logprob: -8.910491943359375

Token 62: '.bit' (ID: 61866)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.402687132358551
    2. '.tree' → logprob: -1.7776870727539062
    3. 'data' → logprob: -2.1526870727539062
    4. '   ' → logprob: -3.1526870727539062
    5. 'tree' → logprob: -6.027687072753906
    6. '_data' → logprob: -8.402687072753906
    7. '.bit' → logprob: -8.777687072753906
    8. '.' → logprob: -8.777687072753906
    9. '       ' → logprob: -9.652687072753906
    10. 's' → logprob: -9.652687072753906

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740949273109436
    2. '=' → logprob: -0.9740949273109436
    3. 's' → logprob: -11.599095344543457
    4. '=[]' → logprob: -12.849095344543457
    5. '   ' → logprob: -13.224095344543457
    6. '[]' → logprob: -13.349095344543457
    7. '[' → logprob: -14.349095344543457
    8. ' ' → logprob: -14.349095344543457
    9. '=[' → logprob: -15.224095344543457
    10. ')' → logprob: -15.349095344543457

Token 64: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0380416102707386
    2. ' [' → logprob: -3.288041591644287
    3. '[n' → logprob: -16.163042068481445
    4. ' ' → logprob: -17.663042068481445
    5. '   ' → logprob: -17.913042068481445
    6. '[self' → logprob: -18.163042068481445
    7. '[len' → logprob: -18.788042068481445
    8. '[size' → logprob: -18.913042068481445
    9. '[int' → logprob: -19.038042068481445
    10. '[N' → logprob: -19.413042068481445

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '۰' → logprob: -17.750911712646484
    4. '   ' → logprob: -18.750911712646484
    5. '０' → logprob: -20.375911712646484
    6. '  ' → logprob: -20.438411712646484
    7. ' ' → logprob: -20.500911712646484
    8. '00' → logprob: -20.563411712646484
    9. '000' → logprob: -21.188411712646484
    10. '٠' → logprob: -21.250911712646484

Token 66: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006224070675671101
    2. ']*(' → logprob: -5.131224155426025
    3. ']*' → logprob: -8.131223678588867
    4. ']+' → logprob: -14.631223678588867
    5. '*' → logprob: -14.881223678588867
    6. ')' → logprob: -16.256223678588867
    7. ' for' → logprob: -16.506223678588867
    8. '*(' → logprob: -16.631223678588867
    9. '   ' → logprob: -16.631223678588867
    10. 'for' → logprob: -17.006223678588867

Token 67: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41370463371276855
    2. ']*(' → logprob: -1.1637046337127686
    3. ']*' → logprob: -3.6637046337127686
    4. '*' → logprob: -7.788704872131348
    5. '*(' → logprob: -8.413704872131348
    6. ' for' → logprob: -9.288704872131348
    7. ' *' → logprob: -10.163704872131348
    8. ']+' → logprob: -10.538704872131348
    9. ',' → logprob: -11.538704872131348
    10. 'for' → logprob: -11.913704872131348

Token 68: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00021521867893170565
    2. ' (' → logprob: -8.625215530395508
    3. '(self' → logprob: -10.875215530395508
    4. '(N' → logprob: -11.625215530395508
    5. '(' → logprob: -12.000215530395508
    6. '((' → logprob: -14.750215530395508
    7. '(nx' → logprob: -15.000215530395508
    8. '(nn' → logprob: -15.125215530395508
    9. '   ' → logprob: -15.375215530395508
    10. '(size' → logprob: -15.875215530395508

Token 69: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4749036431312561
    2. '(n' → logprob: -0.9749036431312561
    3. ' n' → logprob: -7.599903583526611
    4. ' (' → logprob: -8.84990406036377
    5. 'self' → logprob: -8.97490406036377
    6. '(self' → logprob: -9.97490406036377
    7. '(' → logprob: -12.22490406036377
    8. '   ' → logprob: -13.22490406036377
    9. '	n' → logprob: -13.97490406036377
    10. '[n' → logprob: -14.59990406036377

Token 70: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815006136894226
    2. ' +' → logprob: -4.0181498527526855
    3. '+
' → logprob: -16.518150329589844
    4. '+n' → logprob: -16.893150329589844
    5. '1' → logprob: -17.143150329589844
    6. '＋' → logprob: -17.143150329589844
    7. ' plus' → logprob: -18.143150329589844
    8. ' ' → logprob: -18.518150329589844
    9. ' +
' → logprob: -18.768150329589844
    10. '2' → logprob: -19.143150329589844

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.35837464465294e-05
    2. ' ' → logprob: -10.125043869018555
    3. '2' → logprob: -12.625043869018555
    4. '   ' → logprob: -16.375043869018555
    5. '```' → logprob: -16.625043869018555
    6. '  ' → logprob: -18.312543869018555
    7. '１' → logprob: -18.375043869018555
    8. '۱' → logprob: -19.312543869018555
    9. '7' → logprob: -19.812543869018555
    10. '[' → logprob: -20.000043869018555

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '2' → logprob: -18.75
    4. '１' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. '۱' → logprob: -20.5625
    7. '१' → logprob: -20.75
    8. '   ' → logprob: -20.9375
    9. '১' → logprob: -21.3125
    10. '

' → logprob: -21.4375

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.625001907348633
    3. ' )' → logprob: -15.125001907348633
    4. '}' → logprob: -16.875001907348633
    5. ')

' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. ']' → logprob: -18.125001907348633
    9. '),' → logprob: -18.375001907348633
    10. ')
' → logprob: -18.375001907348633

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048535242676734924
    2. '    
' → logprob: -3.9235353469848633
    3. ' def' → logprob: -4.923535346984863
    4. '
' → logprob: -4.923535346984863
    5. 'def' → logprob: -5.173535346984863
    6. ' ' → logprob: -5.923535346984863
    7. ' 
' → logprob: -6.548535346984863
    8. '<|end|>' → logprob: -6.798535346984863
    9. '  
' → logprob: -7.548535346984863
    10. '	def' → logprob: -7.798535346984863

Token 75: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.19708400964736938
    2. 'def' (adapté à ' def') → logprob: -1.9470839500427246
    3. '   ' → logprob: -3.3220839500427246
    4. ' ' → logprob: -9.822084426879883
    5. '	def' → logprob: -9.947084426879883
    6. '  ' → logprob: -12.447084426879883
    7. '    
' → logprob: -12.822084426879883
    8. '
' → logprob: -13.947084426879883
    9. ' 
' → logprob: -14.697084426879883
    10. '       ' → logprob: -15.197084426879883

Token 76: ' sum' (ID: 4215)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.01976705901324749
    2. ' add' → logprob: -4.6447672843933105
    3. 'update' → logprob: -5.0197672843933105
    4. '_update' → logprob: -5.7697672843933105
    5. '_add' → logprob: -9.519766807556152
    6. 'add' → logprob: -9.519766807556152
    7. ' query' → logprob: -10.269766807556152
    8. ' sum' → logprob: -11.019766807556152
    9. ' ' → logprob: -11.394766807556152
    10. ' _' → logprob: -11.644766807556152

Token 77: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5276262164115906
    2. '(self' → logprob: -1.0276262760162354
    3. '_' → logprob: -3.1526262760162354
    4. '_range' → logprob: -6.402626037597656
    5. '_until' → logprob: -6.402626037597656
    6. '_up' → logprob: -6.652626037597656
    7. '_query' → logprob: -7.027626037597656
    8. '(i' → logprob: -7.402626037597656
    9. '_(' → logprob: -7.777626037597656
    10. '_prefix' → logprob: -7.902626037597656

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7485784292221069
    2. '(self' → logprob: -0.8735784292221069
    3. ')' → logprob: -2.6235785484313965
    4. '(' → logprob: -3.8735785484313965
    5. 'self' → logprob: -4.7485785484313965
    6. '   ' → logprob: -7.1235785484313965
    7. '_up' → logprob: -7.2485785484313965
    8. ' ,' → logprob: -7.3735785484313965
    9. '(i' → logprob: -7.8735785484313965
    10. '_' → logprob: -7.9985785484313965

Token 79: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21936239302158356
    2. ' i' → logprob: -1.7193623781204224
    3. 'idx' → logprob: -4.969362258911133
    4. 'self' → logprob: -5.469362258911133
    5. 'k' → logprob: -6.344362258911133
    6. 'index' → logprob: -6.594362258911133
    7. ' idx' → logprob: -6.594362258911133
    8. ' self' → logprob: -7.219362258911133
    9. 'r' → logprob: -7.344362258911133
    10. ' index' → logprob: -8.719362258911133

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004777449648827314
    2. '):
' → logprob: -5.629777431488037
    3. ' ):' → logprob: -6.879777431488037
    4. ')' → logprob: -9.254777908325195
    5. ',' → logprob: -10.754777908325195
    6. '):
' → logprob: -11.754777908325195
    7. '   ' → logprob: -11.879777908325195
    8. ':' → logprob: -12.004777908325195
    9. ' ):
' → logprob: -12.379777908325195
    10. ' )' → logprob: -13.379777908325195

Token 81: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09122670441865921
    2. ':' → logprob: -3.841226816177368
    3. '    ' → logprob: -3.966226816177368
    4. ' +=' → logprob: -4.216226577758789
    5. '   ' → logprob: -4.591226577758789
    6. '=' → logprob: -4.716226577758789
    7. '        ' → logprob: -6.341226577758789
    8. ' =' → logprob: -6.341226577758789
    9. '+=' → logprob: -6.466226577758789
    10. '<|end|>' → logprob: -6.466226577758789

Token 82: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.015922220423817635
    2. 's' (adapté à ' s') → logprob: -4.3909220695495605
    3. ' res' → logprob: -6.1409220695495605
    4. '       ' → logprob: -7.3909220695495605
    5. ' result' → logprob: -8.265922546386719
    6. 'res' → logprob: -9.140922546386719
    7. '   ' → logprob: -9.140922546386719
    8. '    ' → logprob: -9.640922546386719
    9. 'result' → logprob: -10.015922546386719
    10. ' ans' → logprob: -10.890922546386719

Token 83: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.19805139303207397
    2. '+=' → logprob: -2.1980514526367188
    3. '=' → logprob: -2.9480514526367188
    4. ' =' → logprob: -4.198051452636719
    5. ' ' → logprob: -6.948051452636719
    6. '  ' → logprob: -8.948051452636719
    7. '   ' → logprob: -9.948051452636719
    8. '    ' → logprob: -11.323051452636719
    9. '+' → logprob: -11.573051452636719
    10. ' +' → logprob: -12.448051452636719

Token 84: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042999543249607086
    2. ' ' → logprob: -3.167999505996704
    3. '   ' → logprob: -15.292999267578125
    4. '       ' → logprob: -15.917999267578125
    5. '  ' → logprob: -18.542999267578125
    6. ' ' → logprob: -18.542999267578125
    7. ' i' → logprob: -18.667999267578125
    8. '    ' → logprob: -19.105499267578125
    9. ' s' → logprob: -19.230499267578125
    10. '        ' → logprob: -19.230499267578125

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'i' → logprob: -20.0000057220459
    4. '۰' → logprob: -21.0000057220459
    5. '   ' → logprob: -21.3750057220459
    6. 's' → logprob: -22.3750057220459
    7. '```' → logprob: -22.7500057220459
    8. '  ' → logprob: -23.3750057220459
    9. '０' → logprob: -23.6250057220459
    10. '<|end|>' → logprob: -23.6250057220459

Token 86: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018160942941904068
    2. '
' → logprob: -5.018160820007324
    3. '<|end|>' → logprob: -5.143160820007324
    4. ' while' → logprob: -6.643160820007324
    5. '<|end|>' → logprob: -7.143160820007324
    6. '   ' → logprob: -7.268160820007324
    7. 'while' → logprob: -7.393160820007324
    8. '	while' → logprob: -7.643160820007324
    9. '	' → logprob: -8.018160820007324
    10. ';' → logprob: -8.393160820007324

Token 88: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09801917523145676
    2. ' while' → logprob: -2.8480191230773926
    3. '       ' → logprob: -3.3480191230773926
    4. '   ' → logprob: -8.97301959991455
    5. '	while' → logprob: -9.47301959991455
    6. 'i' → logprob: -10.34801959991455
    7. 'While' → logprob: -12.09801959991455
    8. ' i' → logprob: -12.09801959991455
    9. '      ' → logprob: -13.09801959991455
    10. ' ' → logprob: -13.84801959991455

Token 89: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1797560751438141
    2. 'i' → logprob: -1.8047560453414917
    3. '	i' → logprob: -12.429756164550781
    4. ' ' → logprob: -12.554756164550781
    5. '(i' → logprob: -13.429756164550781
    6. '   ' → logprob: -13.679756164550781
    7. '  ' → logprob: -15.179756164550781
    8. '0' → logprob: -15.304756164550781
    9. ' ' → logprob: -15.679756164550781
    10. 'I' → logprob: -15.929756164550781

Token 90: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0004907185211777687
    2. ' >' → logprob: -7.625490665435791
    3. '>=' → logprob: -13.00049114227295
    4. '&gt' → logprob: -15.37549114227295
    5. '">' → logprob: -16.125490188598633
    6. ':' → logprob: -16.625490188598633
    7. '>:' → logprob: -17.875490188598633
    8. '＞' → logprob: -18.000490188598633
    9. '>
' → logprob: -18.625490188598633
    10. '>tag' → logprob: -19.000490188598633

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018152514472603798
    2. ' ' → logprob: -4.018152713775635
    3. '=' → logprob: -13.643152236938477
    4. '>' → logprob: -14.518152236938477
    5. '   ' → logprob: -14.893152236938477
    6. '<|end|>' → logprob: -15.018152236938477
    7. '  ' → logprob: -16.518152236938477
    8. '```' → logprob: -16.643152236938477
    9. '.' → logprob: -17.143152236938477
    10. ':' → logprob: -17.268152236938477

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -17.25048828125
    4. '=' → logprob: -17.62548828125
    5. '>' → logprob: -18.00048828125
    6. '<|end|>' → logprob: -18.62548828125
    7. '[' → logprob: -19.37548828125
    8. '  ' → logprob: -19.50048828125
    9. '```' → logprob: -19.75048828125
    10. '
' → logprob: -19.75048828125

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04872385039925575
    2. ':
' → logprob: -3.0487239360809326
    3. '       ' → logprob: -10.048724174499512
    4. '):
' → logprob: -10.673724174499512
    5. '<|end|>' → logprob: -10.798724174499512
    6. ',' → logprob: -10.923724174499512
    7. '):' → logprob: -11.048724174499512
    8. ':
' → logprob: -12.798724174499512
    9. '<|end|>' → logprob: -12.923724174499512
    10. ':return' → logprob: -13.548724174499512

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0058755832724273205
    2. '
' → logprob: -5.755875587463379
    3. '       ' → logprob: -6.380875587463379
    4. '<|end|>' → logprob: -8.255875587463379
    5. '```' → logprob: -9.005875587463379
    6. ' s' → logprob: -9.130875587463379
    7. ':
' → logprob: -9.755875587463379
    8. '   ' → logprob: -9.755875587463379
    9. ',' → logprob: -10.005875587463379
    10. 's' → logprob: -10.005875587463379

Token 95: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.015390582382678986
    2. ' s' → logprob: -4.265390396118164
    3. '           ' → logprob: -6.765390396118164
    4. '               ' → logprob: -9.765390396118164
    5. '       ' → logprob: -11.890390396118164
    6. '   ' → logprob: -12.390390396118164
    7. '```' → logprob: -13.640390396118164
    8. ' ' → logprob: -14.015390396118164
    9. '<|end|>' → logprob: -14.140390396118164
    10. '
' → logprob: -14.890390396118164

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1129266619682312
    2. '+=' → logprob: -2.237926721572876
    3. '           ' → logprob: -10.362926483154297
    4. '+' → logprob: -10.737926483154297
    5. '            ' → logprob: -11.237926483154297
    6. ']+=' → logprob: -11.987926483154297
    7. '    ' → logprob: -12.112926483154297
    8. '       ' → logprob: -12.237926483154297
    9. '```' → logprob: -12.237926483154297
    10. '   ' → logprob: -12.362926483154297

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015048631466925144
    2. ' self' → logprob: -6.501504898071289
    3. '           ' → logprob: -13.126504898071289
    4. '[self' → logprob: -15.376504898071289
    5. '       ' → logprob: -16.37650489807129
    6. '   ' → logprob: -16.75150489807129
    7. '(self' → logprob: -16.87650489807129
    8. '	self' → logprob: -17.12650489807129
    9. '```' → logprob: -18.25150489807129
    10. '               ' → logprob: -18.62650489807129

Token 98: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -2.4034345187828876e-05
    2. '.' → logprob: -10.87502384185791
    3. 'bit' → logprob: -12.37502384185791
    4. ' .' → logprob: -14.87502384185791
    5. '.bits' → logprob: -16.375024795532227
    6. ' bit' → logprob: -16.375024795532227
    7. '-bit' → logprob: -16.500024795532227
    8. '.bet' → logprob: -16.750024795532227
    9. '_bit' → logprob: -16.875024795532227
    10. '.b' → logprob: -16.875024795532227

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. 'i' → logprob: -20.0
    4. '[I' → logprob: -22.625
    5. '[
' → logprob: -23.0
    6. ' [' → logprob: -23.25
    7. '```' → logprob: -23.625
    8. ' ' → logprob: -23.75
    9. '[index' → logprob: -23.875
    10. '\[' → logprob: -24.375

Token 100: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3352777361869812
    2. ']' → logprob: -1.335277795791626
    3. ')
' → logprob: -4.210277557373047
    4. ')' → logprob: -5.085277557373047
    5. ']
' → logprob: -7.585277557373047
    6. '])
' → logprob: -9.710277557373047
    7. '])' → logprob: -10.335277557373047
    8. '           ' → logprob: -10.585277557373047
    9. ']()
' → logprob: -10.835277557373047
    10. ' ]
' → logprob: -10.960277557373047

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02696182392537594
    2. '
' → logprob: -3.6519618034362793
    3. '            
' → logprob: -7.901961803436279
    4. '       ' → logprob: -9.776962280273438
    5. '    
' → logprob: -9.776962280273438
    6. '   ' → logprob: -10.651962280273438
    7. '```' → logprob: -10.651962280273438
    8. '
' → logprob: -10.776962280273438
    9. '        
' → logprob: -11.151962280273438
    10. 'i' → logprob: -11.151962280273438

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.07941679656505585
    2. ' i' → logprob: -2.5794167518615723
    3. '           ' → logprob: -7.579416751861572
    4. '   ' → logprob: -11.57941722869873
    5. '       ' → logprob: -12.20441722869873
    6. '	i' → logprob: -14.07941722869873
    7. '  ' → logprob: -15.32941722869873
    8. '               ' → logprob: -15.57941722869873
    9. ' ' → logprob: -16.454416275024414
    10. '
' → logprob: -16.454416275024414

Token 103: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.02071869745850563
    2. '-=' → logprob: -3.895718812942505
    3. '-' → logprob: -9.270718574523926
    4. ' -' → logprob: -10.395718574523926
    5. ' &=' → logprob: -11.270718574523926
    6. '    ' → logprob: -11.770718574523926
    7. '&' → logprob: -12.145718574523926
    8. '   ' → logprob: -12.145718574523926
    9. ' ' → logprob: -12.270718574523926
    10. ' >>=' → logprob: -12.520718574523926

Token 104: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008085522567853332
    2. ' i' → logprob: -7.1258087158203125
    3. '(i' → logprob: -13.000808715820312
    4. '	i' → logprob: -14.000808715820312
    5. '   ' → logprob: -14.625808715820312
    6. '(' → logprob: -15.125808715820312
    7. ' (' → logprob: -15.500808715820312
    8. ' ' → logprob: -16.875808715820312
    9. '  ' → logprob: -17.250808715820312
    10. '```' → logprob: -18.000808715820312

Token 105: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006725549232214689
    2. ' i' → logprob: -5.006725311279297
    3. '	i' → logprob: -12.631725311279297
    4. '   ' → logprob: -12.881725311279297
    5. ' ' → logprob: -12.881725311279297
    6. '-i' → logprob: -14.381725311279297
    7. '  ' → logprob: -14.631725311279297
    8. '(i' → logprob: -15.631725311279297
    9. '-' → logprob: -15.881725311279297
    10. ')i' → logprob: -15.881725311279297

Token 106: ' &' (ID: 827)
  Prédit: '&i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&i' → logprob: -0.18083243072032928
    2. '&' → logprob: -1.9308323860168457
    3. ' &' → logprob: -3.9308323860168457
    4. 'i' → logprob: -7.930832386016846
    5. '&amp' → logprob: -8.055832862854004
    6. '&r' → logprob: -10.430832862854004
    7. '&nbsp' → logprob: -10.805832862854004
    8. ' ' → logprob: -11.305832862854004
    9. '&t' → logprob: -11.805832862854004
    10. ' i' → logprob: -12.430832862854004

Token 107: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.4930902123451233
    2. '-' → logprob: -0.9930902123451233
    3. ' -' → logprob: -3.9930901527404785
    4. 'i' → logprob: -8.618090629577637
    5. '(-' → logprob: -8.618090629577637
    6. ' i' → logprob: -11.493090629577637
    7. '-I' → logprob: -11.993090629577637
    8. '(i' → logprob: -12.868090629577637
    9. ' (-' → logprob: -13.493090629577637
    10. ' ' → logprob: -13.618090629577637

Token 108: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.572941179503687e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -15.625045776367188
    4. ' ' → logprob: -17.750045776367188
    5. '   ' → logprob: -17.875045776367188
    6. '_i' → logprob: -18.000045776367188
    7. ')i' → logprob: -18.000045776367188
    8. ''i' → logprob: -18.250045776367188
    9. '-i' → logprob: -19.375045776367188
    10. '  ' → logprob: -19.500045776367188

Token 109: ')
' (ID: 446)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5048530030981055e-06
    2. ' i' → logprob: -13.500001907348633
    3. '_i' → logprob: -17.000001907348633
    4. ')i' → logprob: -17.125001907348633
    5. '	i' → logprob: -17.625001907348633
    6. ')' → logprob: -18.625001907348633
    7. ''i' → logprob: -20.125001907348633
    8. '(i' → logprob: -20.250001907348633
    9. ',i' → logprob: -20.375001907348633
    10. '{i' → logprob: -21.125001907348633

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004523873329162598
    2. '           ' → logprob: -5.754523754119873
    3. '   ' → logprob: -7.004523754119873
    4. '
' → logprob: -8.629524230957031
    5. '```' → logprob: -9.879524230957031
    6. '        
' → logprob: -10.004524230957031
    7. '    
' → logprob: -10.129524230957031
    8. ' return' → logprob: -10.504524230957031
    9. '[' → logprob: -10.879524230957031
    10. ' ' → logprob: -11.504524230957031

Token 111: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1578117311000824
    2. 'return' (adapté à ' return') → logprob: -2.4078116416931152
    3. ' return' → logprob: -3.4078116416931152
    4. '   ' → logprob: -3.7828116416931152
    5. '	return' → logprob: -9.782812118530273
    6. ' ' → logprob: -10.657812118530273
    7. '    ' → logprob: -11.907812118530273
    8. '	' → logprob: -12.532812118530273
    9. '           ' → logprob: -12.782812118530273
    10. '```' → logprob: -12.782812118530273

Token 112: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.7610454708337784e-05
    2. ' s' → logprob: -10.500027656555176
    3. '	s' → logprob: -22.00002670288086
    4. '(s' → logprob: -23.37502670288086
    5. '<s' → logprob: -23.37502670288086
    6. '   ' → logprob: -23.50002670288086
    7. ' ' → logprob: -23.87502670288086
    8. '`s' → logprob: -23.87502670288086
    9. '{s' → logprob: -24.37502670288086
    10. 'S' → logprob: -24.50002670288086

Token 113: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.54307621717453
    2. '   ' → logprob: -0.91807621717453
    3. '    
' → logprob: -4.043076038360596
    4. ' 
' → logprob: -6.668076038360596
    5. '  
' → logprob: -8.168076515197754
    6. '<|end|>' → logprob: -8.543076515197754
    7. '        
' → logprob: -8.668076515197754
    8. '   
' → logprob: -8.918076515197754
    9. '

' → logprob: -9.293076515197754
    10. 'def' → logprob: -11.543076515197754

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012976157013326883
    2. '    
' → logprob: -6.876297473907471
    3. '
' → logprob: -8.501297950744629
    4. ' def' → logprob: -11.251297950744629
    5. 'def' → logprob: -11.376297950744629
    6. ' 
' → logprob: -11.376297950744629
    7. '        
' → logprob: -11.751297950744629
    8. '   
' → logprob: -12.001297950744629
    9. '  
' → logprob: -12.126297950744629
    10. '```' → logprob: -12.876297950744629

Token 115: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010766353458166122
    2. '   ' → logprob: -4.760766506195068
    3. ' def' → logprob: -6.260766506195068
    4. '    
' → logprob: -8.63576602935791
    5. '        
' → logprob: -10.38576602935791
    6. ' 
' → logprob: -11.63576602935791
    7. '  
' → logprob: -11.88576602935791
    8. ' ' → logprob: -12.13576602935791
    9. '   
' → logprob: -12.38576602935791
    10. '  ' → logprob: -13.01076602935791

Token 116: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.050989821553230286
    2. ' add' → logprob: -3.050989866256714
    3. 'update' → logprob: -6.050989627838135
    4. ' update' → logprob: -10.175990104675293
    5. '_add' → logprob: -13.050990104675293
    6. ' ' → logprob: -13.300990104675293
    7. '   ' → logprob: -14.675990104675293
    8. 'increment' → logprob: -14.925990104675293
    9. '	add' → logprob: -15.175990104675293
    10. '.add' → logprob: -15.425990104675293

Token 117: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.656383680412546e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.875046730041504
    4. '(
' → logprob: -17.375045776367188
    5. '(i' → logprob: -17.625045776367188
    6. 'self' → logprob: -17.625045776367188
    7. '(s' → logprob: -17.750045776367188
    8. '(Self' → logprob: -18.250045776367188
    9. '(sel' → logprob: -18.250045776367188
    10. '   ' → logprob: -19.125045776367188

Token 118: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003333968110382557
    2. ',' → logprob: -5.753334045410156
    3. '(' → logprob: -9.253334045410156
    4. 'self' → logprob: -10.628334045410156
    5. ')' → logprob: -11.628334045410156
    6. ' (' → logprob: -11.878334045410156
    7. ',self' → logprob: -12.003334045410156
    8. ')(' → logprob: -12.128334045410156
    9. '(i' → logprob: -12.628334045410156
    10. ' ,' → logprob: -13.753334045410156

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1005018949508667
    2. ' i' → logprob: -2.3505020141601562
    3. 'self' → logprob: -8.475502014160156
    4. ' self' → logprob: -9.850502014160156
    5. '   ' → logprob: -10.725502014160156
    6. 'index' → logprob: -12.225502014160156
    7. ' ' → logprob: -12.350502014160156
    8. '  ' → logprob: -14.725502014160156
    9. ' index' → logprob: -14.725502014160156
    10. ')' → logprob: -14.850502014160156

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -10.125070571899414
    3. 'self' → logprob: -10.625070571899414
    4. ',self' → logprob: -13.000070571899414
    5. ',i' → logprob: -13.250070571899414
    6. '       ' → logprob: -14.250070571899414
    7. ',
' → logprob: -14.750070571899414
    8. '   ' → logprob: -15.250070571899414
    9. ',value' → logprob: -15.500070571899414
    10. ',s' → logprob: -16.500070571899414

Token 121: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05984289199113846
    2. 'v' → logprob: -3.559842824935913
    3. ' x' → logprob: -3.559842824935913
    4. ' v' → logprob: -6.809843063354492
    5. 'delta' → logprob: -9.559843063354492
    6. '1' → logprob: -10.934843063354492
    7. 'val' → logprob: -12.809843063354492
    8. 'value' → logprob: -12.934843063354492
    9. ' delta' → logprob: -13.309843063354492
    10. ' ' → logprob: -13.934843063354492

Token 122: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20149745047092438
    2. '):' → logprob: -1.7014974355697632
    3. '):
' → logprob: -9.576497077941895
    4. '   ' → logprob: -11.701497077941895
    5. '       ' → logprob: -12.576497077941895
    6. '):

' → logprob: -14.076497077941895
    7. ' ):
' → logprob: -14.201497077941895
    8. ':' → logprob: -14.326497077941895
    9. ')' → logprob: -14.701497077941895
    10. ' ):' → logprob: -15.076497077941895

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022642381372861564
    2. ' i' → logprob: -9.250226020812988
    3. '   ' → logprob: -10.000226020812988
    4. '<|end|>' → logprob: -10.250226020812988
    5. ' while' → logprob: -10.375226020812988
    6. ',' → logprob: -12.875226020812988
    7. '```' → logprob: -12.875226020812988
    8. '      ' → logprob: -12.875226020812988
    9. ' ' → logprob: -13.250226020812988
    10. '        
' → logprob: -13.750226020812988

Token 124: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13741052150726318
    2. 'while' (adapté à ' while') → logprob: -2.6374106407165527
    3. '       ' → logprob: -2.8874106407165527
    4. '   ' → logprob: -7.762410640716553
    5. ' i' → logprob: -8.012410163879395
    6. '        ' → logprob: -8.512410163879395
    7. '    ' → logprob: -10.512410163879395
    8. 'i' → logprob: -10.637410163879395
    9. '
' → logprob: -10.887410163879395
    10. '	while' → logprob: -11.012410163879395

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048589639365673065
    2. ' i' → logprob: -3.0485897064208984
    3. '   ' → logprob: -13.173589706420898
    4. ' ' → logprob: -16.4235897064209
    5. '	i' → logprob: -16.6735897064209
    6. '(i' → logprob: -16.7985897064209
    7. '  ' → logprob: -17.4235897064209
    8. '    ' → logprob: -18.6735897064209
    9. '```' → logprob: -19.2985897064209
    10. '1' → logprob: -19.9235897064209

Token 126: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20141470432281494
    2. ' <=' → logprob: -1.701414704322815
    3. '+=' → logprob: -14.576415061950684
    4. '<' → logprob: -14.701415061950684
    5. ' +=' → logprob: -15.951415061950684
    6. '   ' → logprob: -15.951415061950684
    7. '≤' → logprob: -16.076414108276367
    8. ' <' → logprob: -16.201414108276367
    9. ' ' → logprob: -17.201414108276367
    10. ' ≤' → logprob: -17.826414108276367

Token 127: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019287518225610256
    2. ' self' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.501928329467773
    4. '
' → logprob: -17.751928329467773
    5. '(self' → logprob: -18.501928329467773
    6. '	self' → logprob: -18.626928329467773
    7. ' ' → logprob: -19.126928329467773
    8. '```' → logprob: -19.376928329467773
    9. '       ' → logprob: -19.626928329467773
    10. 'n' → logprob: -19.751928329467773

Token 128: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.1927938014268875
    2. 'size' → logprob: -1.942793846130371
    3. 'self' → logprob: -3.442793846130371
    4. ' size' → logprob: -10.067793846130371
    5. 'n' → logprob: -11.942793846130371
    6. '.' → logprob: -12.567793846130371
    7. 'N' → logprob: -12.567793846130371
    8. ' self' → logprob: -12.692793846130371
    9. '.n' → logprob: -12.692793846130371
    10. '   ' → logprob: -12.817793846130371

Token 129: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10056453198194504
    2. ':' → logprob: -2.350564479827881
    3. '):
' → logprob: -8.100564956665039
    4. ' :
' → logprob: -10.725564956665039
    5. ':
' → logprob: -11.600564956665039
    6. '       ' → logprob: -11.975564956665039
    7. '           ' → logprob: -12.100564956665039
    8. '):' → logprob: -12.100564956665039
    9. ',' → logprob: -13.600564956665039
    10. '   ' → logprob: -13.725564956665039

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020985817536711693
    2. ' self' → logprob: -9.00020980834961
    3. 'self' → logprob: -9.50020980834961
    4. '```' → logprob: -11.62520980834961
    5. '               ' → logprob: -14.00020980834961
    6. '   ' → logprob: -14.12520980834961
    7. '       ' → logprob: -14.75020980834961
    8. '          ' → logprob: -15.75020980834961
    9. '	       ' → logprob: -16.25020980834961
    10. '
' → logprob: -16.50020980834961

Token 131: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07494527846574783
    2. ' self' → logprob: -2.6999452114105225
    3. '           ' → logprob: -5.449945449829102
    4. '       ' → logprob: -7.699945449829102
    5. '   ' → logprob: -8.449945449829102
    6. '               ' → logprob: -10.824945449829102
    7. ' ' → logprob: -12.199945449829102
    8. '	self' → logprob: -12.199945449829102
    9. '[self' → logprob: -13.574945449829102
    10. '*self' → logprob: -14.949945449829102

Token 132: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -8.959636033978313e-05
    2. 'bit' → logprob: -9.375089645385742
    3. ' bit' → logprob: -13.750089645385742
    4. '.' → logprob: -14.000089645385742
    5. '.size' → logprob: -14.125089645385742
    6. '_bit' → logprob: -14.625089645385742
    7. '   ' → logprob: -15.625089645385742
    8. '       ' → logprob: -15.750089645385742
    9. '-bit' → logprob: -15.875089645385742
    10. '           ' → logprob: -15.875089645385742

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '[I' → logprob: -17.875
    4. 'i' → logprob: -18.875
    5. '           ' → logprob: -19.875
    6. '```' → logprob: -20.625
    7. '[idx' → logprob: -20.75
    8. '   ' → logprob: -21.125
    9. '[u' → logprob: -21.125
    10. '       ' → logprob: -21.25

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020602265372872353
    2. ']+=' → logprob: -4.020602226257324
    3. '+=' → logprob: -6.395602226257324
    4. ' +=' → logprob: -7.395602226257324
    5. '        ' → logprob: -9.770602226257324
    6. ')' → logprob: -10.645602226257324
    7. ' ]' → logprob: -10.645602226257324
    8. '+' → logprob: -11.145602226257324
    9. '           ' → logprob: -11.395602226257324
    10. '    ' → logprob: -11.520602226257324

Token 135: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008616461418569088
    2. ' +=' → logprob: -4.7586164474487305
    3. '+' → logprob: -14.00861644744873
    4. ']+=' → logprob: -14.25861644744873
    5. '           ' → logprob: -15.25861644744873
    6. '        ' → logprob: -15.88361644744873
    7. '       ' → logprob: -16.883617401123047
    8. '            ' → logprob: -17.258617401123047
    9. '=' → logprob: -17.383617401123047
    10. '    ' → logprob: -17.383617401123047

Token 136: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01416350994259119
    2. ' x' → logprob: -4.264163494110107
    3. '	x' → logprob: -19.764163970947266
    4. '(x' → logprob: -22.389163970947266
    5. ' ' → logprob: -22.514163970947266
    6. '   ' → logprob: -22.639163970947266
    7. ')x' → logprob: -22.639163970947266
    8. '$x' → logprob: -23.014163970947266
    9. '{x' → logprob: -23.514163970947266
    10. '"x' → logprob: -24.014163970947266

Token 137: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0564331205387134e-05
    2. '       ' → logprob: -11.87501049041748
    3. ',' → logprob: -14.00001049041748
    4. '
' → logprob: -14.12501049041748
    5. '   ' → logprob: -14.12501049041748
    6. 'i' → logprob: -14.75001049041748
    7. '               ' → logprob: -15.25001049041748
    8. '          ' → logprob: -15.62501049041748
    9. ' i' → logprob: -16.250011444091797
    10. '		' → logprob: -16.500011444091797

Token 138: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.2723104848410003e-05
    2. '       ' → logprob: -10.875022888183594
    3. '   ' → logprob: -13.250022888183594
    4. ',' → logprob: -14.125022888183594
    5. '
' → logprob: -14.750022888183594
    6. '```' → logprob: -15.250022888183594
    7. '               ' → logprob: -15.875022888183594
    8. 'i' → logprob: -15.875022888183594
    9. '          ' → logprob: -16.625022888183594
    10. ' i' → logprob: -16.750022888183594

Token 139: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.011054890230298042
    2. ' i' → logprob: -4.511054992675781
    3. '           ' → logprob: -11.886054992675781
    4. '               ' → logprob: -16.51105499267578
    5. '   ' → logprob: -17.13605499267578
    6. '	i' → logprob: -17.76105499267578
    7. '       ' → logprob: -19.01105499267578
    8. '(i' → logprob: -19.38605499267578
    9. ' ' → logprob: -21.01105499267578
    10. '  ' → logprob: -21.13605499267578

Token 140: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006717147771269083
    2. ' +=' → logprob: -5.006717205047607
    3. '+=(' → logprob: -14.38171672821045
    4. ']+=' → logprob: -14.63171672821045
    5. '|' → logprob: -15.38171672821045
    6. '=' → logprob: -15.88171672821045
    7. '<<' → logprob: -16.381717681884766
    8. '```' → logprob: -16.506717681884766
    9. ' <<=' → logprob: -16.631717681884766
    10. '    ' → logprob: -16.756717681884766

Token 141: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4922964870929718
    2. ' (' → logprob: -0.9922964572906494
    3. ' i' → logprob: -4.3672966957092285
    4. 'i' → logprob: -5.2422966957092285
    5. '(' → logprob: -9.49229621887207
    6. ' ' → logprob: -12.99229621887207
    7. '   ' → logprob: -13.49229621887207
    8. '	i' → logprob: -14.74229621887207
    9. '{i' → logprob: -14.74229621887207
    10. '  ' → logprob: -15.24229621887207

Token 142: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06441109627485275
    2. '(i' → logprob: -3.064411163330078
    3. ' i' → logprob: -4.189411163330078
    4. ' (' → logprob: -7.814411163330078
    5. '(' → logprob: -8.939411163330078
    6. '   ' → logprob: -12.564411163330078
    7. '	i' → logprob: -12.939411163330078
    8. ')i' → logprob: -14.189411163330078
    9. '{i' → logprob: -14.314411163330078
    10. ' ' → logprob: -14.314411163330078

Token 143: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.4572862982749939
    2. '&i' → logprob: -1.4572863578796387
    3. 'i' → logprob: -2.7072863578796387
    4. '&' → logprob: -2.9572863578796387
    5. ' i' → logprob: -4.207286357879639
    6. ' (' → logprob: -8.33228588104248
    7. ' ' → logprob: -8.83228588104248
    8. '&amp' → logprob: -8.95728588104248
    9. '(i' → logprob: -10.70728588104248
    10. '   ' → logprob: -11.58228588104248

Token 144: ' -' (ID: 533)
  Prédit: '-i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-i' → logprob: -0.5530813336372375
    2. ' -' → logprob: -1.0530812740325928
    3. 'i' → logprob: -3.1780812740325928
    4. ' i' → logprob: -3.5530812740325928
    5. '-' → logprob: -5.178081512451172
    6. '   ' → logprob: -11.928081512451172
    7. '	i' → logprob: -12.053081512451172
    8. ' ' → logprob: -12.303081512451172
    9. '_i' → logprob: -13.053081512451172
    10. '  ' → logprob: -14.303081512451172

Token 145: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001576506474521011
    2. '-i' → logprob: -9.000157356262207
    3. ' i' → logprob: -11.000157356262207
    4. '-' → logprob: -11.125157356262207
    5. ' -' → logprob: -13.125157356262207
    6. ')i' → logprob: -15.875157356262207
    7. ')' → logprob: -16.000158309936523
    8. '```' → logprob: -16.500158309936523
    9. '(i' → logprob: -16.625158309936523
    10. '   ' → logprob: -17.000158309936523

Token 146: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9027791495318525e-05
    2. ')
' → logprob: -11.000019073486328
    3. ')

' → logprob: -13.625019073486328
    4. ' )' → logprob: -14.375019073486328
    5. ')`' → logprob: -15.625019073486328
    6. 'def' → logprob: -16.375019073486328
    7. ')}' → logprob: -17.000019073486328
    8. ')
' → logprob: -17.125019073486328
    9. '))' → logprob: -17.250019073486328
    10. '1' → logprob: -17.625019073486328

Token 147: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6013413667678833
    2. 'bit' → logprob: -0.8513413667678833
    3. 'tree' → logprob: -4.476341247558594
    4. '
' → logprob: -5.101341247558594
    5. 'b' → logprob: -5.351341247558594
    6. 'BIT' → logprob: -7.726341247558594
    7. '

' → logprob: -8.226341247558594
    8. '#' → logprob: -8.226341247558594
    9. 'class' → logprob: -8.351341247558594
    10. '    
' → logprob: -8.601341247558594

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011752024292945862
    2. 'bit' → logprob: -4.511752128601074
    3. ' def' → logprob: -8.511752128601074
    4. '#' → logprob: -8.761752128601074
    5. 'tree' → logprob: -9.386752128601074
    6. 'b' → logprob: -9.761752128601074
    7. ')' → logprob: -10.011752128601074
    8. '   ' → logprob: -10.761752128601074
    9. 'BIT' → logprob: -11.136752128601074
    10. 'class' → logprob: -11.386752128601074

Token 149: ' reset' (ID: 12820)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.4997512698173523
    2. 'get' → logprob: -1.374751329421997
    3. 'range' → logprob: -2.374751329421997
    4. 'build' → logprob: -3.624751329421997
    5. 'lower' → logprob: -4.124751091003418
    6. '__' → logprob: -6.499751091003418
    7. 'update' → logprob: -7.499751091003418
    8. ' query' → logprob: -7.999751091003418
    9. 'max' → logprob: -8.374751091003418
    10. 'point' → logprob: -8.374751091003418

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039766079862602055
    2. '(' → logprob: -7.875397682189941
    3. 'self' → logprob: -11.375397682189941
    4. ' (' → logprob: -12.500397682189941
    5. '(
' → logprob: -13.750397682189941
    6. '   ' → logprob: -15.125397682189941
    7. 'def' → logprob: -15.250397682189941
    8. '(s' → logprob: -15.250397682189941
    9. '()' → logprob: -16.000396728515625
    10. '(Self' → logprob: -16.625396728515625

Token 151: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06057132035493851
    2. '):' → logprob: -2.9355714321136475
    3. 'self' → logprob: -5.685571193695068
    4. ')' → logprob: -6.935571193695068
    5. '):
' → logprob: -6.935571193695068
    6. ' ,' → logprob: -8.185571670532227
    7. ',i' → logprob: -11.435571670532227
    8. '(self' → logprob: -12.185571670532227
    9. ',self' → logprob: -12.185571670532227
    10. '   ' → logprob: -12.310571670532227

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050975095480680466
    2. 'self' → logprob: -3.3009750843048096
    3. '   ' → logprob: -4.800975322723389
    4. 'for' → logprob: -6.050975322723389
    5. ' self' → logprob: -6.675975322723389
    6. ' for' → logprob: -6.925975322723389
    7. '	self' → logprob: -11.80097484588623
    8. '0' → logprob: -12.80097484588623
    9. '(self' → logprob: -12.92597484588623
    10. ' ' → logprob: -12.92597484588623

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005619685165584087
    2. 'for' → logprob: -5.255619525909424
    3. '       ' → logprob: -8.255620002746582
    4. '   ' → logprob: -9.380620002746582
    5. ' self' → logprob: -10.130620002746582
    6. ' for' → logprob: -13.505620002746582
    7. '	self' → logprob: -16.005619049072266
    8. '           ' → logprob: -16.130619049072266
    9. '        
' → logprob: -17.130619049072266
    10. '[self' → logprob: -17.255619049072266

Token 154: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.009824679233133793
    2. '.' → logprob: -4.759824752807617
    3. '   ' → logprob: -7.759824752807617
    4. ' =' → logprob: -7.759824752807617
    5. '=' → logprob: -8.509824752807617
    6. 'bit' → logprob: -9.509824752807617
    7. '.=' → logprob: -10.509824752807617
    8. '.size' → logprob: -11.509824752807617
    9. ' bit' → logprob: -11.634824752807617
    10. ' .' → logprob: -11.759824752807617

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005260799080133438
    2. ' =' → logprob: -5.255260944366455
    3. '.bit' → logprob: -11.130260467529297
    4. '.=' → logprob: -12.005260467529297
    5. '   ' → logprob: -12.755260467529297
    6. '[:]' → logprob: -13.005260467529297
    7. '.' → logprob: -14.755260467529297
    8. ' bit' → logprob: -15.005260467529297
    9. 'bit' → logprob: -15.505260467529297
    10. '[' → logprob: -15.880260467529297

Token 156: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031777136027812958
    2. ' [' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.378177642822266
    4. '[self' → logprob: -17.753177642822266
    5. '   ' → logprob: -17.878177642822266
    6. '0' → logprob: -18.253177642822266
    7. '([' → logprob: -19.503177642822266
    8. '[len' → logprob: -19.753177642822266
    9. 'self' → logprob: -20.003177642822266
    10. '{' → logprob: -20.628177642822266

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.500009536743164
    4. '000' → logprob: -20.125009536743164
    5. '۰' → logprob: -20.500009536743164
    6. '00' → logprob: -20.625009536743164
    7. '  ' → logprob: -20.875009536743164
    8. ']' → logprob: -21.500009536743164
    9. '(' → logprob: -21.625009536743164
    10. '    ' → logprob: -21.875009536743164

Token 158: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010890735575230792
    2. ']*' → logprob: -9.62510871887207
    3. '*' → logprob: -10.37510871887207
    4. ']*(' → logprob: -11.62510871887207
    5. ')' → logprob: -13.25010871887207
    6. ' *' → logprob: -15.12510871887207
    7. ' ]' → logprob: -15.87510871887207
    8. ' for' → logprob: -15.87510871887207
    9. '+' → logprob: -16.75010871887207
    10. '*(' → logprob: -16.87510871887207

Token 159: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009077055379748344
    2. ' *' → logprob: -4.759077072143555
    3. '*(' → logprob: -7.759077072143555
    4. ')' → logprob: -10.509077072143555
    5. ']' → logprob: -12.634077072143555
    6. '*self' → logprob: -13.634077072143555
    7. '(' → logprob: -14.009077072143555
    8. ' ' → logprob: -14.384077072143555
    9. '   ' → logprob: -14.509077072143555
    10. '+' → logprob: -14.759077072143555

Token 160: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00674355449154973
    2. '(len' → logprob: -5.006743431091309
    3. ' (' → logprob: -10.506743431091309
    4. '((' → logprob: -15.131743431091309
    5. 'len' → logprob: -15.631743431091309
    6. 'self' → logprob: -15.756743431091309
    7. '   ' → logprob: -15.881743431091309
    8. '(this' → logprob: -16.631744384765625
    9. '(' → logprob: -17.381744384765625
    10. '(n' → logprob: -18.631744384765625

Token 161: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021903318702243268
    2. '(len' → logprob: -8.875219345092773
    3. 'self' → logprob: -9.500219345092773
    4. ' (' → logprob: -12.875219345092773
    5. 'len' → logprob: -13.875219345092773
    6. '((' → logprob: -15.250219345092773
    7. '[self' → logprob: -15.375219345092773
    8. '   ' → logprob: -16.125219345092773
    9. ' self' → logprob: -16.750219345092773
    10. '(this' → logprob: -17.375219345092773

Token 162: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.191489642835222e-05
    2. 'size' → logprob: -10.375041961669922
    3. '.' → logprob: -11.500041961669922
    4. ' size' → logprob: -15.625041961669922
    5. '   ' → logprob: -16.750041961669922
    6. '	size' → logprob: -17.125041961669922
    7. '.length' → logprob: -17.375041961669922
    8. ' .' → logprob: -17.625041961669922
    9. '(size' → logprob: -18.125041961669922
    10. ').' → logprob: -18.250041961669922

Token 163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11554752290248871
    2. ')' → logprob: -2.6155474185943604
    3. ' +' → logprob: -3.3655474185943604
    4. ' )' → logprob: -6.7405476570129395
    5. '+)' → logprob: -9.115547180175781
    6. '       ' → logprob: -9.615547180175781
    7. '<|end|>' → logprob: -10.365547180175781
    8. '   ' → logprob: -10.490547180175781
    9. '    ' → logprob: -12.240547180175781
    10. ' ' → logprob: -12.240547180175781

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.125
    4. '```' → logprob: -18.375
    5. '0' → logprob: -20.5
    6. '       ' → logprob: -20.75
    7. '           ' → logprob: -22.0
    8. '  ' → logprob: -22.125
    9. '     ' → logprob: -22.25
    10. ')' → logprob: -22.25

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.750003814697266
    4. '```' → logprob: -18.875003814697266
    5. '  ' → logprob: -20.625003814697266
    6. ')' → logprob: -20.625003814697266
    7. '0' → logprob: -21.375003814697266
    8. '１' → logprob: -21.750003814697266
    9. '    ' → logprob: -22.375003814697266
    10. '
' → logprob: -22.500003814697266

Token 166: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.375006675720215
    3. '<|end|>' → logprob: -13.125006675720215
    4. ' )' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.7500057220459
    6. '```' → logprob: -16.8750057220459
    7. '       ' → logprob: -17.0000057220459
    8. '}' → logprob: -17.5000057220459
    9. '）' → logprob: -17.6250057220459
    10. ')

' → logprob: -17.6250057220459

Token 167: 'BIT' (ID: 41038)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.3148209750652313
    2. 'def' → logprob: -1.4398210048675537
    3. 'max' → logprob: -5.064820766448975
    4. 'tree' → logprob: -5.314820766448975
    5. 'b' → logprob: -5.439820766448975
    6. 'res' → logprob: -6.439820766448975
    7. '#' → logprob: -6.439820766448975
    8. 'result' → logprob: -6.564820766448975
    9. 'idx' → logprob: -6.689820766448975
    10. 'dp' → logprob: -6.814820766448975

Token 168: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04042978584766388
    2. '(' → logprob: -4.040429592132568
    3. '.add' → logprob: -4.290429592132568
    4. ')' → logprob: -5.665429592132568
    5. '()' → logprob: -6.040429592132568
    6. '().' → logprob: -6.790429592132568
    7. '   ' → logprob: -7.540429592132568
    8. '[' → logprob: -8.290430068969727
    9. ').' → logprob: -9.040430068969727
    10. '(.)' → logprob: -9.040430068969727

Token 169: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.00861528143286705
    2. ' Binary' → logprob: -4.758615493774414
    3. '(Binary' → logprob: -14.258615493774414
    4. ' ' → logprob: -17.508615493774414
    5. '   ' → logprob: -18.633615493774414
    6. 'Bin' → logprob: -18.883615493774414
    7. '_binary' → logprob: -18.883615493774414
    8. '0' → logprob: -19.008615493774414
    9. '.Binary' → logprob: -19.133615493774414
    10. '  ' → logprob: -20.258615493774414

Token 170: 'Indexed' (ID: 78900)
  Prédit: 'Indexed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -1.0325924449716695e-05
    2. 'ed' → logprob: -13.00001049041748
    3. ' Indexed' → logprob: -13.12501049041748
    4. 'indexed' → logprob: -13.25001049041748
    5. 'ited' → logprob: -13.87501049041748
    6. 'Initialized' → logprob: -14.12501049041748
    7. 'I' → logprob: -14.75001049041748
    8. 'Indented' → logprob: -15.00001049041748
    9. 'Index' → logprob: -15.12501049041748
    10. 'nt' → logprob: -15.62501049041748

Token 171: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -2.7968066206085496e-05
    2. 'ree' → logprob: -10.625027656555176
    3. 'tree' → logprob: -13.625027656555176
    4. 'Tre' → logprob: -13.750027656555176
    5. 'T' → logprob: -14.500027656555176
    6. 'Bit' → logprob: -15.250027656555176
    7. ' Tree' → logprob: -16.500028610229492
    8. '_tree' → logprob: -16.625028610229492
    9. '(Tree' → logprob: -16.625028610229492
    10. '```' → logprob: -16.875028610229492

Token 172: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001189041300676763
    2. '(' → logprob: -6.751189231872559
    3. '(n' → logprob: -12.126189231872559
    4. '(len' → logprob: -12.251189231872559
    5. '(A' → logprob: -13.001189231872559
    6. 'N' → logprob: -13.126189231872559
    7. '((' → logprob: -13.376189231872559
    8. ' (' → logprob: -13.876189231872559
    9. ')' → logprob: -14.751189231872559
    10. '(B' → logprob: -15.126189231872559

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.62500286102295
    3. ' )' → logprob: -13.87500286102295
    4. '+' → logprob: -16.375001907348633
    5. ')

' → logprob: -16.500001907348633
    6. '))' → logprob: -16.750001907348633
    7. '),' → logprob: -17.875001907348633
    8. ')`' → logprob: -18.375001907348633
    9. ')#' → logprob: -19.125001907348633
    10. '*' → logprob: -19.125001907348633

Token 174: 'lo' (ID: 746)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3893839120864868
    2. 'result' → logprob: -1.8893839120864868
    3. 'res' → logprob: -2.2643837928771973
    4. 'dp' → logprob: -2.2643837928771973
    5. 'answer' → logprob: -2.3893837928771973
    6. 'A' → logprob: -2.8893837928771973
    7. 'for' → logprob: -3.0143837928771973
    8. 'sorted' → logprob: -3.2643837928771973
    9. 'max' → logprob: -3.3893837928771973
    10. 'total' → logprob: -4.014383792877197

Token 175: ',' (ID: 11)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.133461132645607
    2. ' =' → logprob: -2.3834612369537354
    3. '=' → logprob: -3.8834612369537354
    4. 'op' → logprob: -5.008460998535156
    5. 'wer' → logprob: -6.258460998535156
    6. ',' → logprob: -6.508460998535156
    7. 'g' → logprob: -7.258460998535156
    8. 'p' → logprob: -8.008460998535156
    9. 'c' → logprob: -8.758460998535156
    10. 'cal' → logprob: -8.883460998535156

Token 176: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' → logprob: -0.004806634038686752
    2. ' hi' → logprob: -5.3798065185546875
    3. 'ho' → logprob: -8.879806518554688
    4. '=' → logprob: -10.754806518554688
    5. 'up' → logprob: -11.504806518554688
    6. ' =' → logprob: -11.504806518554688
    7. 'high' → logprob: -13.629806518554688
    8. '```' → logprob: -13.879806518554688
    9. 'ro' → logprob: -14.004806518554688
    10. ' ' → logprob: -14.254806518554688

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021346807479858
    2. '=' → logprob: -2.3502135276794434
    3. ',' → logprob: -12.100213050842285
    4. ' ' → logprob: -13.600213050842285
    5. '＝' → logprob: -17.2252140045166
    6. ' ,' → logprob: -17.3502140045166
    7. ' =
' → logprob: -18.4752140045166
    8. ' ' → logprob: -18.4752140045166
    9. '[' → logprob: -18.6002140045166
    10. '=int' → logprob: -18.6627140045166

Token 178: ' -' (ID: 533)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6740378737449646
    2. '0' → logprob: -1.0490379333496094
    3. '1' → logprob: -2.0490379333496094
    4. '10' → logprob: -5.174037933349609
    5. 'N' → logprob: -5.799037933349609
    6. 'min' → logprob: -7.299037933349609
    7. 'A' → logprob: -7.424037933349609
    8. 'ceil' → logprob: -8.04903793334961
    9. 'sum' → logprob: -8.42403793334961
    10. '-' → logprob: -8.79903793334961

Token 179: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22213426232337952
    2. '1' → logprob: -1.7221342325210571
    3. 'max' → logprob: -4.472134113311768
    4. '(' → logprob: -4.847134113311768
    5. '(max' → logprob: -8.347134590148926
    6. '200' → logprob: -8.472134590148926
    7. 'int' → logprob: -8.597134590148926
    8. '100' → logprob: -8.847134590148926
    9. '2' → logprob: -9.097134590148926
    10. '-' → logprob: -9.347134590148926

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010197760537266731
    2. ' ,' → logprob: -4.635197639465332
    3. 'N' → logprob: -8.885197639465332
    4. ',N' → logprob: -8.885197639465332
    5. '000' → logprob: -9.885197639465332
    6. ' ' → logprob: -9.885197639465332
    7. ' N' → logprob: -10.760197639465332
    8. '1' → logprob: -11.385197639465332
    9. 'e' → logprob: -12.010197639465332
    10. '0' → logprob: -12.635197639465332

Token 181: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07723880559206009
    2. 'max' → logprob: -2.9522387981414795
    3. 'N' → logprob: -3.9522387981414795
    4. ' ' → logprob: -7.327239036560059
    5. 'int' → logprob: -7.452239036560059
    6. '1' → logprob: -7.577239036560059
    7. '2' → logprob: -8.202239036560059
    8. '100' → logprob: -8.452239036560059
    9. 'ceil' → logprob: -8.577239036560059
    10. ' max' → logprob: -9.077239036560059

Token 182: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.49697768688201904
    2. 'max' → logprob: -0.996977686882019
    3. 'N' → logprob: -3.8719778060913086
    4. 'int' → logprob: -7.496977806091309
    5. '1' → logprob: -7.746977806091309
    6. '2' → logprob: -8.496977806091309
    7. 'A' → logprob: -8.746977806091309
    8. '100' → logprob: -9.246977806091309
    9. ' max' → logprob: -9.246977806091309
    10. ' ' → logprob: -9.621977806091309

Token 183: ' **' (ID: 6240)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.062422484159469604
    2. '9' → logprob: -2.812422513961792
    3. '15' → logprob: -8.812422752380371
    4. '7' → logprob: -9.437422752380371
    5. '**' → logprob: -9.687422752380371
    6. '11' → logprob: -9.812422752380371
    7. '18' → logprob: -9.937422752380371
    8. '12' → logprob: -10.562422752380371
    9. '6' → logprob: -10.812422752380371
    10. '```' → logprob: -12.062422752380371

Token 184: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.39463210105895996
    2. '9' → logprob: -1.26963210105896
    3. '15' → logprob: -3.26963210105896
    4. '18' → logprob: -5.394632339477539
    5. '11' → logprob: -6.644632339477539
    6. '12' → logprob: -7.019632339477539
    7. '16' → logprob: -8.769632339477539
    8. '14' → logprob: -9.394632339477539
    9. '13' → logprob: -10.019632339477539
    10. '```' → logprob: -10.394632339477539

Token 185: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7575503587722778
    2. '9' → logprob: -0.8825503587722778
    3. '15' → logprob: -2.2575502395629883
    4. '18' → logprob: -4.882550239562988
    5. '11' → logprob: -5.632550239562988
    6. '12' → logprob: -7.007550239562988
    7. '14' → logprob: -7.757550239562988
    8. '16' → logprob: -8.632550239562988
    9. '13' → logprob: -9.132550239562988
    10. '19' → logprob: -10.632550239562988

Token 186: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5821165442466736
    2. 'while' → logprob: -0.9571165442466736
    3. '+' → logprob: -3.2071166038513184
    4. ' while' → logprob: -4.332116603851318
    5. ' 
' → logprob: -6.082116603851318
    6. '  
' → logprob: -7.832116603851318
    7. 'While' → logprob: -8.70711612701416
    8. '<|end|>' → logprob: -8.70711612701416
    9. '```' → logprob: -9.08211612701416
    10. '+
' → logprob: -9.08211612701416

Token 187: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.517181396484375
    2. '1' → logprob: -1.142181396484375
    3. '9' → logprob: -2.517181396484375
    4. '18' → logprob: -6.517181396484375
    5. '5' → logprob: -6.892181396484375
    6. '6' → logprob: -7.892181396484375
    7. '7' → logprob: -7.892181396484375
    8. '2' → logprob: -7.892181396484375
    9. '8' → logprob: -9.142181396484375
    10. '11' → logprob: -9.392181396484375

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.29724574089050293
    2. '10' → logprob: -1.547245740890503
    3. '9' → logprob: -3.172245740890503
    4. '5' → logprob: -6.922245979309082
    5. '6' → logprob: -7.797245979309082
    6. '7' → logprob: -7.922245979309082
    7. '2' → logprob: -8.547245979309082
    8. '18' → logprob: -8.672245979309082
    9. '8' → logprob: -8.797245979309082
    10. '11' → logprob: -9.922245979309082

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009848523885011673
    2. 'while' → logprob: -4.759848594665527
    3. ' 
' → logprob: -7.634848594665527
    4. ' while' → logprob: -8.259848594665527
    5. '
' → logprob: -8.384848594665527
    6. '  
' → logprob: -8.884848594665527
    7. 'def' → logprob: -9.884848594665527
    8. '

' → logprob: -10.009848594665527
    9. '<|end|>' → logprob: -11.259848594665527
    10. '```' → logprob: -12.509848594665527

Token 190: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007236021105200052
    2. '
' → logprob: -5.007236003875732
    3. ' while' → logprob: -7.632236003875732
    4. ' 
' → logprob: -11.00723648071289
    5. 'def' → logprob: -11.38223648071289
    6. '  
' → logprob: -12.50723648071289
    7. '    
' → logprob: -14.00723648071289
    8. '```' → logprob: -14.25723648071289
    9. 'mid' → logprob: -14.88223648071289
    10. 'While' → logprob: -15.00723648071289

Token 191: ' hi' (ID: 5911)
  Prédit: ' hi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hi' → logprob: -0.19835147261619568
    2. ' lo' → logprob: -2.1983513832092285
    3. 'hi' → logprob: -2.6983513832092285
    4. 'lo' → logprob: -6.4483513832092285
    5. '(lo' → logprob: -11.198351860046387
    6. ' ' → logprob: -11.948351860046387
    7. '(' → logprob: -12.448351860046387
    8. ' (' → logprob: -12.448351860046387
    9. '```' → logprob: -13.573351860046387
    10. '   ' → logprob: -14.073351860046387

Token 192: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11927585303783417
    2. ' -' → logprob: -2.3692758083343506
    3. '-lo' → logprob: -3.9942758083343506
    4. '>' → logprob: -7.74427604675293
    5. ' >' → logprob: -11.11927604675293
    6. '-hi' → logprob: -12.49427604675293
    7. '-loop' → logprob: -12.86927604675293
    8. '-Lo' → logprob: -12.99427604675293
    9. '-mid' → logprob: -12.99427604675293
    10. '-mo' → logprob: -13.11927604675293

Token 193: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -5.676981345459353e-06
    2. ' lo' → logprob: -12.375005722045898
    3. 'hi' → logprob: -14.125005722045898
    4. '1' → logprob: -14.250005722045898
    5. '(lo' → logprob: -17.2500057220459
    6. '_lo' → logprob: -18.1250057220459
    7. 'ho' → logprob: -19.1250057220459
    8. ' ' → logprob: -19.6250057220459
    9. '```' → logprob: -19.6250057220459
    10. 'Lo' → logprob: -20.1250057220459

Token 194: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003178071230649948
    2. ' >' → logprob: -5.753178119659424
    3. '1' → logprob: -15.628177642822266
    4. '()>' → logprob: -16.253177642822266
    5. '＞' → logprob: -16.503177642822266
    6. ' ' → logprob: -17.253177642822266
    7. ')>' → logprob: -17.753177642822266
    8. '">' → logprob: -17.878177642822266
    9. '&gt' → logprob: -19.003177642822266
    10. '```' → logprob: -19.253177642822266

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.87506675720215
    4. '0' → logprob: -18.06256675720215
    5. '2' → logprob: -18.06256675720215
    6. '```' → logprob: -18.06256675720215
    7. '10' → logprob: -18.93756675720215
    8. '=' → logprob: -19.37506675720215
    9. '100' → logprob: -19.56256675720215
    10. '>' → logprob: -19.75006675720215

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '2' → logprob: -18.125003814697266
    5. '0' → logprob: -18.500003814697266
    6. '10' → logprob: -19.250003814697266
    7. '```' → logprob: -19.375003814697266
    8. '3' → logprob: -20.187503814697266
    9. '4' → logprob: -20.375003814697266
    10. '  ' → logprob: -20.750003814697266

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002136841416359
    2. ':
' → logprob: -2.3502137660980225
    3. ':

' → logprob: -12.725214004516602
    4. '   ' → logprob: -13.225214004516602
    5. ':
' → logprob: -13.475214004516602
    6. '):
' → logprob: -14.725214004516602
    7. ',' → logprob: -15.850214004516602
    8. ' :' → logprob: -16.3502140045166
    9. ' :
' → logprob: -16.4752140045166
    10. '):' → logprob: -17.3502140045166

Token 198: '   ' (ID: 271)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.2555026710033417
    2. 'mid' → logprob: -1.505502700805664
    3. '   ' → logprob: -5.755502700805664
    4. 'm' → logprob: -8.005502700805664
    5. ' ' → logprob: -10.505502700805664
    6. ' m' → logprob: -10.880502700805664
    7. 'mi' → logprob: -11.255502700805664
    8. '    
' → logprob: -13.255502700805664
    9. '_mid' → logprob: -13.630502700805664
    10. 'med' → logprob: -13.880502700805664

Token 199: ' X' (ID: 2127)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.011893978342413902
    2. ' mid' → logprob: -4.5118937492370605
    3. 'm' → logprob: -7.2618937492370605
    4. '   ' → logprob: -9.011894226074219
    5. 'mi' → logprob: -10.886894226074219
    6. 'med' → logprob: -13.261894226074219
    7. 'md' → logprob: -15.011894226074219
    8. '    
' → logprob: -15.511894226074219
    9. ' m' → logprob: -15.636894226074219
    10. 'mo' → logprob: -15.761894226074219

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029757777228951454
    2. '=' → logprob: -3.5297577381134033
    3. 'mid' → logprob: -12.154757499694824
    4. ' ' → logprob: -13.904757499694824
    5. ')' → logprob: -15.529757499694824
    6. ',' → logprob: -15.654757499694824
    7. '_mid' → logprob: -16.02975845336914
    8. 'MID' → logprob: -16.15475845336914
    9. ' mid' → logprob: -16.40475845336914
    10. '=int' → logprob: -16.77975845336914

Token 201: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20295129716396332
    2. ' (' → logprob: -1.7029513120651245
    3. '(mid' → logprob: -7.452951431274414
    4. '(lo' → logprob: -7.827951431274414
    5. '(ans' → logprob: -8.202951431274414
    6. '(A' → logprob: -9.827951431274414
    7. '(bit' → logprob: -9.952951431274414
    8. '(ok' → logprob: -10.327951431274414
    9. ' ' → logprob: -10.452951431274414
    10. '(X' → logprob: -11.077951431274414

Token 202: 'hi' (ID: 3686)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.018227435648441315
    2. 'hi' → logprob: -4.018227577209473
    3. ' lo' → logprob: -9.518227577209473
    4. 'ho' → logprob: -13.143227577209473
    5. '(lo' → logprob: -13.518227577209473
    6. 'li' → logprob: -14.893227577209473
    7. ' hi' → logprob: -15.643227577209473
    8. 'hl' → logprob: -16.768226623535156
    9. '```' → logprob: -17.643226623535156
    10. '
' → logprob: -18.018226623535156

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326231360435486
    2. '+' → logprob: -1.3132623434066772
    3. ' ' → logprob: -14.813261985778809
    4. ' +
' → logprob: -16.438262939453125
    5. '```' → logprob: -17.188262939453125
    6. '＋' → logprob: -17.563262939453125
    7. '+
' → logprob: -17.688262939453125
    8. '
' → logprob: -17.813262939453125
    9. ' ' → logprob: -18.688262939453125
    10. '   ' → logprob: -19.063262939453125

Token 204: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -4.5491004129871726e-05
    2. ' lo' → logprob: -10.000045776367188
    3. '(lo' → logprob: -20.625045776367188
    4. ' ' → logprob: -22.500045776367188
    5. '_lo' → logprob: -22.625045776367188
    6. '
' → logprob: -22.875045776367188
    7. 'mo' → logprob: -23.250045776367188
    8. '  ' → logprob: -23.875045776367188
    9. '   ' → logprob: -24.250045776367188
    10. '```' → logprob: -24.500045776367188

Token 205: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9981420336989686e-05
    2. ')//' → logprob: -10.875020027160645
    3. ' )' → logprob: -13.875020027160645
    4. ')>>' → logprob: -16.625019073486328
    5. ')
' → logprob: -18.875019073486328
    6. '）' → logprob: -19.500019073486328
    7. '//' → logprob: -20.375019073486328
    8. '0' → logprob: -20.750019073486328
    9. '   ' → logprob: -20.875019073486328
    10. ']' → logprob: -21.375019073486328

Token 206: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.06390877813100815
    2. '//' → logprob: -2.813908815383911
    3. '>>' → logprob: -6.438908576965332
    4. ' >>' → logprob: -8.813908576965332
    5. ')' → logprob: -8.938908576965332
    6. ' ' → logprob: -10.313908576965332
    7. ' ' → logprob: -11.813908576965332
    8. '   ' → logprob: -11.938908576965332
    9. '```' → logprob: -12.313908576965332
    10. ')//' → logprob: -12.438908576965332

Token 207: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -19.000059127807617
    4. '   ' → logprob: -19.750059127807617
    5. '۲' → logprob: -19.875059127807617
    6. '２' → logprob: -20.375059127807617
    7. '=' → logprob: -21.000059127807617
    8. '२' → logprob: -21.250059127807617
    9. '  ' → logprob: -21.312559127807617
    10. '২' → logprob: -21.687559127807617

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -20.0000057220459
    4. '۲' → logprob: -20.5000057220459
    5. '２' → logprob: -21.1250057220459
    6. '२' → logprob: -21.5000057220459
    7. '   ' → logprob: -21.7500057220459
    8. '২' → logprob: -21.8750057220459
    9. '٢' → logprob: -22.2500057220459
    10. '
' → logprob: -22.6250057220459

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09936697781085968
    2. '   ' → logprob: -2.4743669033050537
    3. '    
' → logprob: -4.724367141723633
    4. '  
' → logprob: -7.974367141723633
    5. '
' → logprob: -8.349367141723633
    6. ',' → logprob: -8.724367141723633
    7. '   
' → logprob: -8.849367141723633
    8. 'BIT' → logprob: -8.974367141723633
    9. ' 
' → logprob: -10.099367141723633
    10. ')' → logprob: -10.224367141723633

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010276693850755692
    2. 'BIT' → logprob: -4.885276794433594
    3. '    
' → logprob: -6.635276794433594
    4. '
' → logprob: -7.010276794433594
    5. 'bit' → logprob: -9.635276794433594
    6. '       ' → logprob: -10.010276794433594
    7. ' BIT' → logprob: -10.260276794433594
    8. '```' → logprob: -10.260276794433594
    9. '  ' → logprob: -10.510276794433594
    10. 'BITS' → logprob: -10.697776794433594

Token 211: ' Binary' (ID: 32672)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.010632963851094246
    2. 'valid' → logprob: -6.1356329917907715
    3. 'bit' → logprob: -6.3856329917907715
    4. 'ok' → logprob: -6.3856329917907715
    5. '   ' → logprob: -7.1356329917907715
    6. 'count' → logprob: -7.2606329917907715
    7. 'def' → logprob: -7.3856329917907715
    8. 'is' → logprob: -7.5106329917907715
    9. 'possible' → logprob: -7.6356329917907715
    10. 'cnt' → logprob: -8.135632514953613

Token 212: ' =' (ID: 314)
  Prédit: 'Indexed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Indexed' → logprob: -7.743758760625497e-05
    2. ' Indexed' → logprob: -9.875077247619629
    3. 'indexed' → logprob: -10.750077247619629
    4. 'BIT' → logprob: -12.625077247619629
    5. ' indexed' → logprob: -14.500077247619629
    6. 'I' → logprob: -16.000078201293945
    7. '   ' → logprob: -16.625078201293945
    8. '_' → logprob: -16.625078201293945
    9. '```' → logprob: -16.750078201293945
    10. 'Index' → logprob: -16.875078201293945

Token 213: ' [(' (ID: 43900)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0047477916814386845
    2. 'Binary' → logprob: -6.0047478675842285
    3. ' [' → logprob: -8.00474739074707
    4. '[i' → logprob: -8.25474739074707
    5. '[len' → logprob: -8.25474739074707
    6. '[N' → logprob: -8.50474739074707
    7. '0' → logprob: -8.75474739074707
    8. '[int' → logprob: -8.87974739074707
    9. '[x' → logprob: -9.00474739074707
    10. '[A' → logprob: -9.12974739074707

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7023251056671143
    2. 'a' → logprob: -0.8273251056671143
    3. 'A' → logprob: -3.2023251056671143
    4. 'x' → logprob: -4.452324867248535
    5. '0' → logprob: -4.702324867248535
    6. '(a' → logprob: -5.952324867248535
    7. '(A' → logprob: -6.952324867248535
    8. '(' → logprob: -7.577324867248535
    9. 'ai' → logprob: -7.702324867248535
    10. 'int' → logprob: -7.702324867248535

Token 215: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02328915148973465
    2. 'if' → logprob: -3.773289203643799
    3. '0' → logprob: -10.52328872680664
    4. ' ' → logprob: -12.39828872680664
    5. ')' → logprob: -13.14828872680664
    6. 'e' → logprob: -13.27328872680664
    7. '1' → logprob: -13.52328872680664
    8. ',' → logprob: -13.64828872680664
    9. '
' → logprob: -13.77328872680664
    10. '   ' → logprob: -13.89828872680664

Token 216: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011554588563740253
    2. 'x' → logprob: -7.376155376434326
    3. 'A' → logprob: -7.626155376434326
    4. 'v' → logprob: -10.626155853271484
    5. 'ai' → logprob: -12.001155853271484
    6. ' a' → logprob: -12.376155853271484
    7. 'val' → logprob: -12.626155853271484
    8. 'i' → logprob: -14.626155853271484
    9. 'aa' → logprob: -14.626155853271484
    10. '(a' → logprob: -15.001155853271484

Token 217: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11764974892139435
    2. '<=' → logprob: -2.617649793624878
    3. ' >=' → logprob: -3.492649793624878
    4. '>' → logprob: -5.617649555206299
    5. ' <=' → logprob: -5.867649555206299
    6. '<' → logprob: -6.992649555206299
    7. ' >' → logprob: -8.992650032043457
    8. ' <' → logprob: -9.992650032043457
    9. ' ' → logprob: -10.867650032043457
    10. '≥' → logprob: -11.367650032043457

Token 218: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.007609586231410503
    2. ' X' → logprob: -4.8826093673706055
    3. ' ' → logprob: -12.882609367370605
    4. 'x' → logprob: -15.007609367370605
    5. '   ' → logprob: -15.507609367370605
    6. '	X' → logprob: -15.632609367370605
    7. '
' → logprob: -16.882610321044922
    8. ')' → logprob: -17.007610321044922
    9. '>X' → logprob: -17.257610321044922
    10. ' ' → logprob: -17.382610321044922

Token 219: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759424567222595
    2. 'else' → logprob: -0.8259424567222595
    3. ' ' → logprob: -13.200942039489746
    4. '	else' → logprob: -14.950942039489746
    5. '   ' → logprob: -15.325942039489746
    6. '    ' → logprob: -15.950942039489746
    7. '```' → logprob: -15.950942039489746
    8. '  ' → logprob: -16.700942993164062
    9. '        ' → logprob: -17.200942993164062
    10. '-' → logprob: -17.450942993164062

Token 220: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012531313113868237
    2. ' ' → logprob: -4.387531280517578
    3. '   ' → logprob: -11.762531280517578
    4. '1' → logprob: -11.887531280517578
    5. ')' → logprob: -12.825031280517578
    6. '  ' → logprob: -13.637531280517578
    7. '    ' → logprob: -14.825031280517578
    8. ' -' → logprob: -14.825031280517578
    9. '-' → logprob: -15.075031280517578
    10. '
' → logprob: -15.637531280517578

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000263481488218531
    2. ' ' → logprob: -8.250263214111328
    3. '-' → logprob: -14.250263214111328
    4. ')' → logprob: -14.625263214111328
    5. '   ' → logprob: -15.062763214111328
    6. '0' → logprob: -15.562763214111328
    7. '
' → logprob: -15.937763214111328
    8. ' -' → logprob: -16.125263214111328
    9. '  ' → logprob: -16.250263214111328
    10. '```' → logprob: -16.562763214111328

Token 222: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034273360506631434
    2. ' )' → logprob: -8.00034236907959
    3. 'for' → logprob: -12.50034236907959
    4. ')
' → logprob: -14.12534236907959
    5. '   ' → logprob: -14.62534236907959
    6. ' for' → logprob: -14.62534236907959
    7. '）' → logprob: -14.75034236907959
    8. '))' → logprob: -15.12534236907959
    9. ' ' → logprob: -15.12534236907959
    10. '}' → logprob: -15.62534236907959

Token 223: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16022787988185883
    2. 'for' → logprob: -1.91022789478302
    3. ' ' → logprob: -12.91022777557373
    4. '   ' → logprob: -14.53522777557373
    5. '	for' → logprob: -14.78522777557373
    6. ')' → logprob: -15.41022777557373
    7. '    ' → logprob: -17.035228729248047
    8. '  ' → logprob: -17.410228729248047
    9. ' if' → logprob: -17.535228729248047
    10. ' in' → logprob: -17.785228729248047

Token 224: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19269588589668274
    2. ' A' → logprob: -1.8176958560943604
    3. 'a' → logprob: -4.4426960945129395
    4. ' a' → logprob: -6.8176960945129395
    5. ' ' → logprob: -12.192695617675781
    6. '	A' → logprob: -12.942695617675781
    7. '   ' → logprob: -14.567695617675781
    8. '_A' → logprob: -15.192695617675781
    9. ' ' → logprob: -15.442695617675781
    10. '  ' → logprob: -15.692695617675781

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009396199136972427
    2. 'in' → logprob: -4.759396076202393
    3. 'A' → logprob: -7.384396076202393
    4. ' A' → logprob: -8.88439655303955
    5. 'a' → logprob: -11.38439655303955
    6. ' ' → logprob: -11.75939655303955
    7. 's' → logprob: -14.50939655303955
    8. ' a' → logprob: -14.75939655303955
    9. '  ' → logprob: -14.88439655303955
    10. ')' → logprob: -14.88439655303955

Token 226: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02324652671813965
    2. ' A' → logprob: -3.7732465267181396
    3. ' ' → logprob: -14.148246765136719
    4. '
' → logprob: -16.02324676513672
    5. '   ' → logprob: -16.39824676513672
    6. '	A' → logprob: -16.64824676513672
    7. '  ' → logprob: -17.77324676513672
    8. ',A' → logprob: -18.14824676513672
    9. '(A' → logprob: -18.27324676513672
    10. '"A' → logprob: -18.77324676513672

Token 227: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001490716531407088
    2. ']
' → logprob: -9.25014877319336
    3. ' ]' → logprob: -10.00014877319336
    4. '   ' → logprob: -12.50014877319336
    5. ')]' → logprob: -13.37514877319336
    6. ']
' → logprob: -13.50014877319336
    7. ')' → logprob: -14.25014877319336
    8. ']

' → logprob: -15.25014877319336
    9. ' ' → logprob: -17.62514877319336
    10. ' ]
' → logprob: -17.62514877319336

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13243845105171204
    2. 'BIT' → logprob: -2.6324384212493896
    3. 'prefix' → logprob: -3.5074384212493896
    4. 'sum' → logprob: -5.382438659667969
    5. 's' → logprob: -5.757438659667969
    6. 'cum' → logprob: -5.757438659667969
    7. 'count' → logprob: -5.882438659667969
    8. '    
' → logprob: -6.007438659667969
    9. ' prefix' → logprob: -6.757438659667969
    10. 'c' → logprob: -6.882438659667969

Token 229: ' Binary' (ID: 32672)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.18567676842212677
    2. 'prefix' → logprob: -1.9356768131256104
    3. 'cum' → logprob: -5.560676574707031
    4. 's' → logprob: -5.685676574707031
    5. 'acc' → logprob: -5.935676574707031
    6. '   ' → logprob: -6.185676574707031
    7. 'count' → logprob: -6.310676574707031
    8. 'c' → logprob: -6.560676574707031
    9. 'pref' → logprob: -6.560676574707031
    10. 'pre' → logprob: -6.560676574707031

Token 230: ' =' (ID: 314)
  Prédit: '_acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -1.005179524421692
    2. ' =' → logprob: -1.630179524421692
    3. '=' → logprob: -1.755179524421692
    4. 'acc' → logprob: -2.1301794052124023
    5. '_c' → logprob: -2.6301794052124023
    6. 'sum' → logprob: -3.7551794052124023
    7. '_sum' → logprob: -4.255179405212402
    8. '_prefix' → logprob: -4.505179405212402
    9. 'cum' → logprob: -4.630179405212402
    10. 'prefix' → logprob: -5.880179405212402

Token 231: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44028905034065247
    2. 'list' → logprob: -1.06528902053833
    3. ' [' → logprob: -4.94028902053833
    4. ' list' → logprob: -5.81528902053833
    5. 'Binary' → logprob: -7.94028902053833
    6. 'acc' → logprob: -8.065289497375488
    7. '[list' → logprob: -8.065289497375488
    8. '[-' → logprob: -8.440289497375488
    9. '[(' → logprob: -9.565289497375488
    10. '[B' → logprob: -10.815289497375488

Token 232: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -3.666993507067673e-05
    2. 'acc' → logprob: -10.375036239624023
    3. '(ac' → logprob: -12.375036239624023
    4. '(' → logprob: -14.125036239624023
    5. ' accumulate' → logprob: -15.250036239624023
    6. '	acc' → logprob: -16.000036239624023
    7. '.acc' → logprob: -17.750036239624023
    8. '(it' → logprob: -17.750036239624023
    9. '(
' → logprob: -18.000036239624023
    10. ''acc' → logprob: -18.125036239624023

Token 233: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -1.3782830137643032e-05
    2. 'um' → logprob: -11.37501335144043
    3. 'ulate' → logprob: -13.87501335144043
    4. 'umul' → logprob: -14.37501335144043
    5. 'uminate' → logprob: -15.37501335144043
    6. 'om' → logprob: -15.87501335144043
    7. '
' → logprob: -16.37501335144043
    8. 'umu' → logprob: -17.37501335144043
    9. 'umulative' → logprob: -17.50001335144043
    10. '[' → logprob: -17.50001335144043

Token 234: '(Binary' (ID: 163942)
  Prédit: '(Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Binary' → logprob: -0.007633247412741184
    2. '(lambda' → logprob: -4.882633209228516
    3. '(' → logprob: -12.132633209228516
    4. '(
' → logprob: -12.632633209228516
    5. ')' → logprob: -12.632633209228516
    6. ',' → logprob: -12.757633209228516
    7. '(binary' → logprob: -12.882633209228516
    8. '((' → logprob: -13.007633209228516
    9. 'Binary' → logprob: -13.507633209228516
    10. '(Bit' → logprob: -13.757633209228516

Token 235: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10590372234582901
    2. ',' → logprob: -2.7309036254882812
    3. '))
' → logprob: -3.4809036254882812
    4. ')]' → logprob: -5.855903625488281
    5. '))

' → logprob: -7.480903625488281
    6. ')]
' → logprob: -7.980903625488281
    7. ' ))' → logprob: -8.105903625488281
    8. '))]
' → logprob: -8.980903625488281
    9. ')' → logprob: -9.355903625488281
    10. ')])' → logprob: -10.105903625488281

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021652614697813988
    2. 'BIT' → logprob: -4.646652698516846
    3. '    
' → logprob: -5.396652698516846
    4. 'count' → logprob: -5.521652698516846
    5. 'max' → logprob: -7.896652698516846
    6. 'bit' → logprob: -8.021652221679688
    7. 'counts' → logprob: -8.021652221679688
    8. 'cnt' → logprob: -8.396652221679688
    9. 'm' → logprob: -8.521652221679688
    10. ' count' → logprob: -8.896652221679688

Token 237: ' BIT' (ID: 52185)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.687088131904602
    2. 'BIT' (adapté à ' BIT') → logprob: -1.562088131904602
    3. '   ' → logprob: -1.812088131904602
    4. 'cnt' → logprob: -3.0620880126953125
    5. 'bit' → logprob: -3.1870880126953125
    6. 'counter' → logprob: -5.4370880126953125
    7. 'valid' → logprob: -5.9370880126953125
    8. 'dp' → logprob: -5.9370880126953125
    9. 'counts' → logprob: -6.0620880126953125
    10. 'mid' → logprob: -6.0620880126953125

Token 238: '.reset' (ID: 25315)
  Prédit: '.reset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reset' → logprob: -0.00026968008023686707
    2. '.' → logprob: -8.250269889831543
    3. ' .' → logprob: -12.625269889831543
    4. '.clear' → logprob: -13.000269889831543
    5. ' =' → logprob: -14.125269889831543
    6. '.restart' → logprob: -14.125269889831543
    7. '=' → logprob: -14.500269889831543
    8. '.sum' → logprob: -16.250268936157227
    9. ').' → logprob: -16.375268936157227
    10. '.add' → logprob: -16.500268936157227

Token 239: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009182471549138427
    2. '()
' → logprob: -7.000918388366699
    3. '(' → logprob: -13.0009183883667
    4. '()

' → logprob: -13.5009183883667
    5. '()\' → logprob: -13.7509183883667
    6. '()
' → logprob: -14.1259183883667
    7. '()`' → logprob: -14.6259183883667
    8. '();' → logprob: -15.3759183883667
    9. ' ()' → logprob: -15.5009183883667
    10. '())' → logprob: -15.7509183883667

Token 240: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.22307774424552917
    2. 'cnt' → logprob: -1.8480777740478516
    3. '   ' → logprob: -4.473077774047852
    4. 'res' → logprob: -4.598077774047852
    5. 'ans' → logprob: -4.723077774047852
    6. 'valid' → logprob: -5.598077774047852
    7. 'max' → logprob: -5.973077774047852
    8. 'total' → logprob: -6.598077774047852
    9. 'ok' → logprob: -7.223077774047852
    10. 'm' → logprob: -7.223077774047852

Token 241: ' inversion' (ID: 70924)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2380501627922058
    2. 'cnt' → logprob: -2.1130502223968506
    3. 'res' → logprob: -3.1130502223968506
    4. 'ans' → logprob: -3.7380502223968506
    5. 'total' → logprob: -4.9880499839782715
    6. 'result' → logprob: -5.7380499839782715
    7. 'ok' → logprob: -5.8630499839782715
    8. 'valid' → logprob: -6.2380499839782715
    9. 'answer' → logprob: -6.3630499839782715
    10. 'max' → logprob: -6.9880499839782715

Token 242: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.025510860607028008
    2. 's' → logprob: -3.775510787963867
    3. 'count' → logprob: -6.775510787963867
    4. '=' → logprob: -7.025510787963867
    5. ' =' → logprob: -9.150510787963867
    6. '_cnt' → logprob: -9.400510787963867
    7. '_counts' → logprob: -11.400510787963867
    8. '_pairs' → logprob: -11.775510787963867
    9. '_sum' → logprob: -12.150510787963867
    10. 'Count' → logprob: -12.400510787963867

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -15.125067710876465
    4. '(' → logprob: -15.937567710876465
    5. 'False' → logprob: -16.00006675720215
    6. 'int' → logprob: -16.18756675720215
    7. '   ' → logprob: -16.18756675720215
    8. 'float' → logprob: -16.31256675720215
    9. 'N' → logprob: -16.37506675720215
    10. '-' → logprob: -16.87506675720215

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. '1' → logprob: -17.125009536743164
    5. 'N' → logprob: -17.750009536743164
    6. '۰' → logprob: -17.812509536743164
    7. '(' → logprob: -18.625009536743164
    8. 'sum' → logprob: -19.000009536743164
    9. 'len' → logprob: -19.062509536743164
    10. '000' → logprob: -19.125009536743164

Token 245: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003510153153911233
    2. '    
' → logprob: -6.253509998321533
    3. ' for' → logprob: -7.503509998321533
    4. 'for' → logprob: -7.503509998321533
    5. '
' → logprob: -7.753509998321533
    6. '	for' → logprob: -11.503510475158691
    7. '<|end|>' → logprob: -11.503510475158691
    8. ',' → logprob: -12.003510475158691
    9. '  
' → logprob: -12.253510475158691
    10. '       ' → logprob: -13.128510475158691

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01836075820028782
    2. 'for' → logprob: -4.143360614776611
    3. ' for' → logprob: -6.268360614776611
    4. '    
' → logprob: -8.01836109161377
    5. '
' → logprob: -9.64336109161377
    6. '  ' → logprob: -11.39336109161377
    7. 'i' → logprob: -12.01836109161377
    8. '```' → logprob: -12.39336109161377
    9. '	for' → logprob: -12.51836109161377
    10. ' ' → logprob: -13.26836109161377

Token 247: ' Binary' (ID: 32672)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012844024458900094
    2. '   ' → logprob: -6.751284599304199
    3. 'j' → logprob: -9.2512845993042
    4. ' for' → logprob: -11.3762845993042
    5. 'i' → logprob: -12.5012845993042
    6. '    
' → logprob: -13.5012845993042
    7. 'idx' → logprob: -15.1262845993042
    8. '
' → logprob: -15.5012845993042
    9. '       ' → logprob: -15.5012845993042
    10. 'right' → logprob: -15.6262845993042

Token 248: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.878966748714447
    2. '.reverse' → logprob: -1.6289668083190918
    3. '=' → logprob: -2.503966808319092
    4. '_index' → logprob: -2.878966808319092
    5. '_idx' → logprob: -3.128966808319092
    6. '_sorted' → logprob: -3.253966808319092
    7. '.append' → logprob: -3.753966808319092
    8. 'for' → logprob: -3.753966808319092
    9. '[::-' → logprob: -3.878966808319092
    10. ' =' → logprob: -4.628966808319092

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054931823164224625
    2. ' =' → logprob: -2.929931879043579
    3. '.' → logprob: -11.304931640625
    4. '.sort' → logprob: -11.554931640625
    5. '_sorted' → logprob: -11.804931640625
    6. 'sorted' → logprob: -12.179931640625
    7. ',' → logprob: -12.679931640625
    8. '＝' → logprob: -13.054931640625
    9. '=[]' → logprob: -13.179931640625
    10. '.=' → logprob: -13.679931640625

Token 250: ' {' (ID: 354)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -5.240481914370321e-05
    2. ' sorted' → logprob: -10.750052452087402
    3. 'Binary' → logprob: -11.125052452087402
    4. '[' → logprob: -12.000052452087402
    5. 'Sorted' → logprob: -12.625052452087402
    6. 'list' → logprob: -13.000052452087402
    7. '(sorted' → logprob: -13.125052452087402
    8. 'binary' → logprob: -13.500052452087402
    9. '[]' → logprob: -15.000052452087402
    10. '[(' → logprob: -16.250051498413086

Token 251: 'b' (ID: 65)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23515763878822327
    2. 'b' → logprob: -1.8601576089859009
    3. 'x' → logprob: -3.2351577281951904
    4. 'val' → logprob: -4.985157489776611
    5. '}' → logprob: -5.610157489776611
    6. '0' → logprob: -6.610157489776611
    7. 'k' → logprob: -6.610157489776611
    8. 'i' → logprob: -7.610157489776611
    9. 'value' → logprob: -7.860157489776611
    10. 'j' → logprob: -9.23515796661377

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03849709406495094
    2. ':i' → logprob: -3.28849720954895
    3. ':index' → logprob: -8.163496971130371
    4. ':b' → logprob: -8.913496971130371
    5. ' :' → logprob: -10.413496971130371
    6. ':x' → logprob: -13.913496971130371
    7. ':B' → logprob: -14.038496971130371
    8. ':k' → logprob: -14.163496971130371
    9. 'for' → logprob: -14.288496971130371
    10. ':j' → logprob: -14.413496971130371

Token 253: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.047627031803131104
    2. '0' → logprob: -3.7976269721984863
    3. 'idx' → logprob: -3.9226269721984863
    4. ' i' → logprob: -5.922626972198486
    5. 'index' → logprob: -7.922626972198486
    6. '(i' → logprob: -8.047627449035645
    7. ' idx' → logprob: -8.422627449035645
    8. ' ' → logprob: -8.547627449035645
    9. 'N' → logprob: -9.047627449035645
    10. '[]' → logprob: -9.422627449035645

Token 254: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35479506850242615
    2. 'for' → logprob: -1.2297950983047485
    3. '+' → logprob: -5.729794979095459
    4. 'n' → logprob: -5.854794979095459
    5. 'x' → logprob: -8.979795455932617
    6. ' +' → logprob: -10.479795455932617
    7. 'nd' → logprob: -11.229795455932617
    8. ' ' → logprob: -11.479795455932617
    9. 'nt' → logprob: -11.729795455932617
    10. '
' → logprob: -12.229795455932617

Token 255: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014165744185447693
    2. ' i' → logprob: -4.264165878295898
    3. ',' → logprob: -13.139165878295898
    4. ',i' → logprob: -15.639165878295898
    5. '	i' → logprob: -16.1391658782959
    6. ' ' → logprob: -16.8891658782959
    7. '  ' → logprob: -18.1391658782959
    8. '
' → logprob: -18.1391658782959
    9. '   ' → logprob: -18.6391658782959
    10. 'b' → logprob: -19.3891658782959

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07931273430585861
    2. ',i' → logprob: -2.579312801361084
    3. ',b' → logprob: -8.329312324523926
    4. ' ,' → logprob: -9.579312324523926
    5. ',index' → logprob: -9.704312324523926
    6. ',int' → logprob: -11.579312324523926
    7. 'enumer' → logprob: -11.704312324523926
    8. ',x' → logprob: -12.079312324523926
    9. ',in' → logprob: -12.329312324523926
    10. ',num' → logprob: -12.579312324523926

Token 257: ' b' (ID: 287)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4754318296909332
    2. ' enumerate' → logprob: -0.9754317998886108
    3. ' in' → logprob: -7.3504319190979
    4. '<|end|>' → logprob: -7.4754319190979
    5. 'b' → logprob: -9.600431442260742
    6. ',' → logprob: -11.225431442260742
    7. 'in' → logprob: -11.600431442260742
    8. ' enumeration' → logprob: -11.850431442260742
    9. ' enumer' → logprob: -12.100431442260742
    10. ' b' → logprob: -12.100431442260742

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47413623332977295
    2. 'in' → logprob: -0.974136233329773
    3. ',' → logprob: -9.849136352539062
    4. 'n' → logprob: -13.349136352539062
    5. ' ' → logprob: -13.349136352539062
    6. 'enumer' → logprob: -13.599136352539062
    7. '<|end|>' → logprob: -13.849136352539062
    8. '	in' → logprob: -15.849136352539062
    9. '
' → logprob: -15.974136352539062
    10. '  ' → logprob: -16.224136352539062

Token 259: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.06196914613246918
    2. ' enumerate' → logprob: -2.811969041824341
    3. '```' → logprob: -14.686968803405762
    4. 'enum' → logprob: -15.061968803405762
    5. '
' → logprob: -15.311968803405762
    6. '<|end|>' → logprob: -15.686968803405762
    7. 'en' → logprob: -15.811968803405762
    8. ',' → logprob: -15.936968803405762
    9. '.enumer' → logprob: -17.686969757080078
    10. 'Enumer' → logprob: -17.686969757080078

Token 260: '(sorted' (ID: 92488)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0025298797991126776
    2. '(sorted' → logprob: -6.502530097961426
    3. 'acc' → logprob: -8.377530097961426
    4. 'enumer' → logprob: -8.377530097961426
    5. ' sorted' → logprob: -8.502530097961426
    6. 're' → logprob: -9.002530097961426
    7. 'Binary' → logprob: -9.502530097961426
    8. 'binary' → logprob: -9.502530097961426
    9. 'range' → logprob: -10.252530097961426
    10. 'sort' → logprob: -11.377530097961426

Token 261: '(Binary' (ID: 163942)
  Prédit: '(set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.10172779113054276
    2. '(Binary' → logprob: -2.3517277240753174
    3. 'set' → logprob: -7.3517279624938965
    4. '(list' → logprob: -7.4767279624938965
    5. '(binary' → logprob: -9.226727485656738
    6. 'Binary' → logprob: -9.476727485656738
    7. '(sorted' → logprob: -9.976727485656738
    8. '(B' → logprob: -10.101727485656738
    9. '(dict' → logprob: -11.476727485656738
    10. '(' → logprob: -11.851727485656738

Token 262: '),' (ID: 936)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.28901422023773193
    2. '(set' → logprob: -1.789014220237732
    3. '(Binary' → logprob: -3.1640143394470215
    4. 'set' → logprob: -3.7890143394470215
    5. ')' → logprob: -4.5390143394470215
    6. '))' → logprob: -6.0390143394470215
    7. ')}}' → logprob: -6.2890143394470215
    8. '})' → logprob: -6.9140143394470215
    9. ')set' → logprob: -7.4140143394470215
    10. ')}
' → logprob: -7.5390143394470215

Token 263: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1008794754743576
    2. ' start' → logprob: -3.100879430770874
    3. 'reverse' → logprob: -3.100879430770874
    4. ' ' → logprob: -6.350879669189453
    5. ')' → logprob: -6.725879669189453
    6. '1' → logprob: -6.975879669189453
    7. '0' → logprob: -7.350879669189453
    8. 'key' → logprob: -7.725879669189453
    9. ' reverse' → logprob: -7.850879669189453
    10. 'enumer' → logprob: -8.850879669189453

Token 264: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.5120287066092715e-05
    2. '1' → logprob: -10.375035285949707
    3. '(' → logprob: -12.750035285949707
    4. '   ' → logprob: -14.625035285949707
    5. 'from' → logprob: -15.375035285949707
    6. '=
' → logprob: -16.00003433227539
    7. '0' → logprob: -17.75003433227539
    8. '2' → logprob: -17.87503433227539
    9. '```' → logprob: -18.00003433227539
    10. ' ' → logprob: -18.12503433227539

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.804671233519912e-05
    2. '   ' → logprob: -9.62508773803711
    3. '0' → logprob: -11.25008773803711
    4. ' ' → logprob: -11.75008773803711
    5. '2' → logprob: -14.12508773803711
    6. '  ' → logprob: -16.37508773803711
    7. '       ' → logprob: -16.37508773803711
    8. '
' → logprob: -16.50008773803711
    9. '=' → logprob: -17.87508773803711
    10. '(' → logprob: -17.87508773803711

Token 266: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6942556500434875
    2. ')}' → logprob: -0.6942556500434875
    3. ')' → logprob: -7.069255828857422
    4. '})' → logprob: -9.319255828857422
    5. ')}
' → logprob: -9.319255828857422
    6. '   ' → logprob: -10.069255828857422
    7. '}
' → logprob: -10.819255828857422
    8. ' }' → logprob: -11.694255828857422
    9. '}}' → logprob: -13.444255828857422
    10. ');}' → logprob: -13.569255828857422

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2624298930168152
    2. 'for' → logprob: -1.51242995262146
    3. ' for' → logprob: -4.637429714202881
    4. '    
' → logprob: -7.637429714202881
    5. '```' → logprob: -8.887430191040039
    6. '
' → logprob: -9.762430191040039
    7. '	for' → logprob: -10.637430191040039
    8. '  ' → logprob: -11.012430191040039
    9. ')' → logprob: -11.137430191040039
    10. '<|end|>' → logprob: -11.762430191040039

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003682974725961685
    2. '   ' → logprob: -5.628683090209961
    3. ' for' → logprob: -9.628683090209961
    4. 'in' → logprob: -11.253683090209961
    5. '    
' → logprob: -12.628683090209961
    6. '
' → logprob: -14.878683090209961
    7. 'i' → logprob: -16.25368309020996
    8. '	for' → logprob: -16.37868309020996
    9. '```' → logprob: -16.62868309020996
    10. 'inv' → logprob: -16.87868309020996

Token 269: ' j' (ID: 441)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024292864836752415
    2. ' b' → logprob: -6.377429485321045
    3. 'x' → logprob: -7.627429485321045
    4. 'val' → logprob: -9.377429008483887
    5. 'value' → logprob: -9.502429008483887
    6. 'i' → logprob: -10.377429008483887
    7. 'prefix' → logprob: -10.627429008483887
    8. 'v' → logprob: -11.002429008483887
    9. ' val' → logprob: -13.252429008483887
    10. ' x' → logprob: -13.752429008483887

Token 270: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007485945709049702
    2. 'in' → logprob: -5.007485866546631
    3. ',' → logprob: -7.257485866546631
    4. ' ' → logprob: -10.007486343383789
    5. ' ,' → logprob: -11.382486343383789
    6. '   ' → logprob: -12.882486343383789
    7. ')' → logprob: -13.507486343383789
    8. '	in' → logprob: -13.757486343383789
    9. '  ' → logprob: -14.007486343383789
    10. '.' → logprob: -14.257486343383789

Token 271: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029854966327548027
    2. ' b' → logprob: -3.5298550128936768
    3. 'x' → logprob: -10.279854774475098
    4. 'v' → logprob: -10.404854774475098
    5. 'val' → logprob: -10.654854774475098
    6. ' val' → logprob: -12.029854774475098
    7. ' v' → logprob: -12.779854774475098
    8. ' x' → logprob: -13.029854774475098
    9. 'value' → logprob: -13.154854774475098
    10. 'bv' → logprob: -13.654854774475098

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048608142882585526
    2. 'in' → logprob: -3.0486080646514893
    3. ',' → logprob: -11.29860782623291
    4. ' ' → logprob: -12.92360782623291
    5. '	in' → logprob: -14.29860782623291
    6. '   ' → logprob: -14.42360782623291
    7. '_in' → logprob: -14.42360782623291
    8. ')' → logprob: -14.54860782623291
    9. '  ' → logprob: -14.67360782623291
    10. 'to' → logprob: -14.79860782623291

Token 273: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.38709068298339844
    2. ' enumerate' → logprob: -1.1370906829833984
    3. ' ' → logprob: -10.012090682983398
    4. 'Binary' → logprob: -10.137090682983398
    5. '(en' → logprob: -10.262090682983398
    6. '   ' → logprob: -10.387090682983398
    7. 'en' → logprob: -10.887090682983398
    8. '
' → logprob: -11.762090682983398
    9. '[(' → logprob: -12.137090682983398
    10. ')' → logprob: -12.262090682983398

Token 274: '(Binary' (ID: 163942)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.25295886397361755
    2. '(Binary' → logprob: -1.50295889377594
    3. ' Binary' → logprob: -7.37795877456665
    4. 'enumer' → logprob: -9.252959251403809
    5. '((' → logprob: -10.002959251403809
    6. '   ' → logprob: -10.252959251403809
    7. '(binary' → logprob: -10.252959251403809
    8. ')' → logprob: -10.627959251403809
    9. '(range' → logprob: -10.752959251403809
    10. '(' → logprob: -10.877959251403809

Token 275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42366158962249756
    2. '_sorted' → logprob: -1.1736615896224976
    3. '):
' → logprob: -3.423661708831787
    4. ',' → logprob: -5.923661708831787
    5. '):
' → logprob: -7.923661708831787
    6. 'sorted' → logprob: -8.548661231994629
    7. '):

' → logprob: -9.923661231994629
    8. '[:' → logprob: -9.923661231994629
    9. ')' → logprob: -10.423661231994629
    10. ' ):' → logprob: -10.548661231994629

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39008381962776184
    2. '   ' → logprob: -1.1400837898254395
    3. '    ' → logprob: -7.3900837898254395
    4. 'in' → logprob: -7.3900837898254395
    5. 'BIT' → logprob: -7.5150837898254395
    6. 'index' → logprob: -8.015084266662598
    7. ' BIT' → logprob: -9.265084266662598
    8. 'i' → logprob: -9.515084266662598
    9. 'idx' → logprob: -9.515084266662598
    10. ' inversion' → logprob: -9.640084266662598

Token 277: ' inversion' (ID: 70924)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.14691734313964844
    2. 'pos' → logprob: -2.7719173431396484
    3. '   ' → logprob: -3.5219173431396484
    4. 'index' → logprob: -4.146917343139648
    5. ' idx' → logprob: -4.271917343139648
    6. 'i' → logprob: -4.646917343139648
    7. 'b' → logprob: -6.396917343139648
    8. 'k' → logprob: -6.771917343139648
    9. ' pos' → logprob: -7.771917343139648
    10. 'inv' → logprob: -7.896917343139648

Token 278: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020647112280130386
    2. '+=' → logprob: -3.8956470489501953
    3. ' =' → logprob: -9.270647048950195
    4. '=' → logprob: -11.770647048950195
    5. '+=(' → logprob: -14.020647048950195
    6. '   ' → logprob: -14.270647048950195
    7. ']+=' → logprob: -14.645647048950195
    8. '+' → logprob: -15.020647048950195
    9. ')' → logprob: -15.270647048950195
    10. ' ' → logprob: -15.520647048950195

Token 279: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.25676429271698
    2. 'j' → logprob: -1.50676429271698
    3. '(j' → logprob: -6.2567644119262695
    4. ' BIT' → logprob: -6.6317644119262695
    5. '(B' → logprob: -7.3817644119262695
    6. ' j' → logprob: -8.38176441192627
    7. 'bit' → logprob: -8.88176441192627
    8. '(' → logprob: -9.38176441192627
    9. 'B' → logprob: -9.75676441192627
    10. '   ' → logprob: -9.88176441192627

Token 280: '.sum' (ID: 35381)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0488891527056694
    2. '.sum' → logprob: -3.04888916015625
    3. '.bit' → logprob: -8.17388916015625
    4. ' .' → logprob: -11.92388916015625
    5. ').' → logprob: -12.54888916015625
    6. 'sum' → logprob: -12.67388916015625
    7. '.' → logprob: -13.04888916015625
    8. 'add' → logprob: -13.54888916015625
    9. '.s' → logprob: -14.54888916015625
    10. '().' → logprob: -15.17388916015625

Token 281: '(Binary' (ID: 163942)
  Prédit: '(Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Binary' → logprob: -0.0006285638664849102
    2. '(len' → logprob: -7.500628471374512
    3. '(' → logprob: -10.500628471374512
    4. '(B' → logprob: -11.500628471374512
    5. '(binary' → logprob: -11.500628471374512
    6. 'Binary' → logprob: -11.750628471374512
    7. '(Bit' → logprob: -12.125628471374512
    8. '(N' → logprob: -12.250628471374512
    9. '((' → logprob: -12.375628471374512
    10. '(
' → logprob: -13.375628471374512

Token 282: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -3.650518920039758e-06
    2. 'sorted' → logprob: -13.125003814697266
    3. 'Sorted' → logprob: -13.375003814697266
    4. '[' → logprob: -17.375003814697266
    5. '_scaled' → logprob: -17.750003814697266
    6. '_binary' → logprob: -18.625003814697266
    7. '_filtered' → logprob: -19.125003814697266
    8. ' sorted' → logprob: -19.375003814697266
    9. '.sorted' → logprob: -19.625003814697266
    10. '
' → logprob: -19.625003814697266

Token 283: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.3080716346157715e-05
    2. '[' → logprob: -11.500022888183594
    3. '[j' → logprob: -12.000022888183594
    4. 'b' → logprob: -12.500022888183594
    5. '[B' → logprob: -13.250022888183594
    6. '(b' → logprob: -14.500022888183594
    7. ' [' → logprob: -16.250022888183594
    8. '[-' → logprob: -16.500022888183594
    9. 'Binary' → logprob: -16.625022888183594
    10. ',b' → logprob: -16.625022888183594

Token 284: '])' (ID: 4636)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.18975049257278442
    2. '[b' → logprob: -1.8147504329681396
    3. '[' → logprob: -5.439750671386719
    4. ']' → logprob: -5.439750671386719
    5. '[B' → logprob: -7.189750671386719
    6. '])' → logprob: -8.314750671386719
    7. '[-' → logprob: -9.564750671386719
    8. 'j' → logprob: -10.064750671386719
    9. ']-' → logprob: -10.189750671386719
    10. ' -' → logprob: -10.314750671386719

Token 285: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.05388605594635
    2. '+' → logprob: -1.92888605594635
    3. ')
' → logprob: -1.92888605594635
    4. ')' → logprob: -2.1788859367370605
    5. '        
' → logprob: -2.5538859367370605
    6. '
' → logprob: -3.0538859367370605
    7. '<|end|>' → logprob: -3.1788859367370605
    8. '    
' → logprob: -3.5538859367370605
    9. '+
' → logprob: -4.4288859367370605
    10. '   ' → logprob: -4.4288859367370605

Token 286: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9382710456848145
    2. '1' → logprob: -1.5632710456848145
    3. '0' → logprob: -2.6882710456848145
    4. '(' → logprob: -2.6882710456848145
    5. 'BIT' → logprob: -3.0632710456848145
    6. 'j' → logprob: -3.4382710456848145
    7. '-' → logprob: -3.6882710456848145
    8. ' BIT' → logprob: -3.8132710456848145
    9. '(Binary' → logprob: -3.9382710456848145
    10. ' ' → logprob: -4.0632710456848145

Token 287: 'b' (ID: 65)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.027419496327638626
    2. ' j' → logprob: -4.902419567108154
    3. '(j' → logprob: -5.152419567108154
    4. 'BIT' → logprob: -5.777419567108154
    5. '(N' → logprob: -6.527419567108154
    6. '(B' → logprob: -6.527419567108154
    7. ' (' → logprob: -6.777419567108154
    8. '1' → logprob: -7.027419567108154
    9. 'N' → logprob: -7.027419567108154
    10. '(' → logprob: -7.152419567108154

Token 288: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7565686702728271
    2. '<' → logprob: -1.3815686702728271
    3. '-' → logprob: -2.506568670272827
    4. ')' → logprob: -3.131568670272827
    5. ' -' → logprob: -3.506568670272827
    6. '<=' → logprob: -4.006568908691406
    7. ' <=' → logprob: -4.006568908691406
    8. '_sorted' → logprob: -4.006568908691406
    9. 'orted' → logprob: -4.381568908691406
    10. '>' → logprob: -5.131568908691406

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009873426519334316
    2. ' ' → logprob: -4.884873390197754
    3. '1' → logprob: -7.009873390197754
    4. 'Binary' → logprob: -7.259873390197754
    5. 'X' → logprob: -7.509873390197754
    6. ' Binary' → logprob: -9.509873390197754
    7. ' X' → logprob: -11.384873390197754
    8. '   ' → logprob: -12.259873390197754
    9. '(Binary' → logprob: -12.259873390197754
    10. 'binary' → logprob: -12.634873390197754

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043848972767591476
    2. 'X' → logprob: -3.168848991394043
    3. '1' → logprob: -7.543848991394043
    4. ' ' → logprob: -8.418848991394043
    5. 'Binary' → logprob: -9.918848991394043
    6. ' X' → logprob: -10.418848991394043
    7. 'x' → logprob: -12.418848991394043
    8. '   ' → logprob: -12.668848991394043
    9. ')' → logprob: -13.543848991394043
    10. 'binary' → logprob: -13.668848991394043

Token 291: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06613283604383469
    2. ' )' → logprob: -2.8161327838897705
    3. ')
' → logprob: -5.94113302230835
    4. ' -' → logprob: -7.56613302230835
    5. ' )
' → logprob: -7.56613302230835
    6. '   ' → logprob: -8.941132545471191
    7. '       ' → logprob: -9.566132545471191
    8. '<|end|>' → logprob: -9.566132545471191
    9. '-' → logprob: -9.816132545471191
    10. ')*' → logprob: -10.316132545471191

Token 292: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.242531657218933
    2. '
' → logprob: -1.617531657218933
    3. '    
' → logprob: -1.742531657218933
    4. '  
' → logprob: -2.2425317764282227
    5. ' 
' → logprob: -2.7425317764282227
    6. ')' → logprob: -2.9925317764282227
    7. '```' → logprob: -3.3675317764282227
    8. ')
' → logprob: -3.4925317764282227
    9. '\n' → logprob: -3.6175317764282227
    10. '   
' → logprob: -4.867531776428223

Token 293: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' (adapté à ' BIT') → logprob: -0.024044746533036232
    2. ' BIT' → logprob: -3.7740447521209717
    3. '   ' → logprob: -7.524044513702393
    4. '       ' → logprob: -8.77404499053955
    5. '	BIT' → logprob: -10.39904499053955
    6. '```' → logprob: -11.14904499053955
    7. 'bit' → logprob: -11.39904499053955
    8. 'Bit' → logprob: -11.39904499053955
    9. '_BIT' → logprob: -11.89904499053955
    10. 'BITS' → logprob: -12.14904499053955

Token 294: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.221884101862088e-05
    2. '.' → logprob: -9.375092506408691
    3. '].' → logprob: -12.750092506408691
    4. ').' → logprob: -13.000092506408691
    5. '}.' → logprob: -14.375092506408691
    6. '>.' → logprob: -14.625092506408691
    7. ' .' → logprob: -15.250092506408691
    8. '​.' → logprob: -15.250092506408691
    9. '..' → logprob: -16.000091552734375
    10. '```' → logprob: -16.375091552734375

Token 295: '(Binary' (ID: 163942)
  Prédit: '(Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Binary' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.625027656555176
    3. '(binary' → logprob: -13.250027656555176
    4. '((' → logprob: -14.750027656555176
    5. '(
' → logprob: -15.000027656555176
    6. '(Bit' → logprob: -15.375027656555176
    7. '(Bitmap' → logprob: -15.500027656555176
    8. ' (' → logprob: -16.125028610229492
    9. 'Binary' → logprob: -17.125028610229492
    10. '(Big' → logprob: -17.625028610229492

Token 296: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.007477544713765383
    2. '[' → logprob: -5.382477760314941
    3. 'Sorted' → logprob: -5.882477760314941
    4. 'sorted' → logprob: -10.507477760314941
    5. ' Sorted' → logprob: -11.382477760314941
    6. '[(' → logprob: -12.132477760314941
    7. '(Binary' → logprob: -12.257477760314941
    8. '[B' → logprob: -12.382477760314941
    9. '[
' → logprob: -13.257477760314941
    10. '_binary' → logprob: -13.382477760314941

Token 297: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.650518920039758e-06
    2. 'b' → logprob: -13.125003814697266
    3. '[' → logprob: -13.625003814697266
    4. '(b' → logprob: -15.125003814697266
    5. '[B' → logprob: -18.000003814697266
    6. ' [' → logprob: -18.750003814697266
    7. 'Binary' → logprob: -19.125003814697266
    8. ' b' → logprob: -19.250003814697266
    9. '[a' → logprob: -19.625003814697266
    10. '[
' → logprob: -19.750003814697266

Token 298: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.31574496626853943
    2. '[b' → logprob: -1.3157449960708618
    3. '[j' → logprob: -6.065744876861572
    4. 'b' → logprob: -10.19074535369873
    5. ',' → logprob: -10.19074535369873
    6. ']' → logprob: -10.31574535369873
    7. '[' → logprob: -11.31574535369873
    8. 'j' → logprob: -11.31574535369873
    9. '(b' → logprob: -11.94074535369873
    10. ' ],' → logprob: -12.19074535369873

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017815368482843041
    2. ' ' → logprob: -9.000178337097168
    3. '-' → logprob: -10.000178337097168
    4. '+' → logprob: -12.625178337097168
    5. '   ' → logprob: -12.625178337097168
    6. ' -' → logprob: -13.625178337097168
    7. ')' → logprob: -14.625178337097168
    8. '  ' → logprob: -14.625178337097168
    9. '0' → logprob: -16.25017738342285
    10. '    ' → logprob: -16.31267738342285

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.484132169745862e-05
    2. '-' → logprob: -9.375094413757324
    3. ' ' → logprob: -11.625094413757324
    4. ' -' → logprob: -14.750094413757324
    5. '   ' → logprob: -15.250094413757324
    6. '+' → logprob: -15.250094413757324
    7. '  ' → logprob: -16.50009536743164
    8. '0' → logprob: -16.87509536743164
    9. ')' → logprob: -17.37509536743164
    10. 'j' → logprob: -17.93759536743164

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005186012131161988
    2. ')
' → logprob: -7.625518798828125
    3. '<|end|>' → logprob: -10.625518798828125
    4. '   ' → logprob: -13.125518798828125
    5. '```' → logprob: -13.375518798828125
    6. ')return' → logprob: -14.375518798828125
    7. ' )' → logprob: -14.875518798828125
    8. '       ' → logprob: -15.000518798828125
    9. '<|end|>' → logprob: -15.375518798828125
    10. '
' → logprob: -15.500518798828125

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.639796793460846
    2. '<|end|>' → logprob: -0.764796793460846
    3. ')' → logprob: -5.514796733856201
    4. '
' → logprob: -6.389796733856201
    5. '<|end|>' → logprob: -7.389796733856201
    6. ' if' → logprob: -7.764796733856201
    7. '```' → logprob: -8.13979721069336
    8. '       ' → logprob: -11.01479721069336
    9. ' ' → logprob: -11.13979721069336
    10. 'if' → logprob: -11.13979721069336

Token 303: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4288412630558014
    2. ' if' → logprob: -1.928841233253479
    3. '<|end|>' → logprob: -1.928841233253479
    4. 'if' (adapté à ' if') → logprob: -3.4288413524627686
    5. ')' → logprob: -3.8038413524627686
    6. ' ' → logprob: -6.8038411140441895
    7. '<|end|>' → logprob: -7.1788411140441895
    8. '```' → logprob: -7.6788411140441895
    9. '...' → logprob: -7.8038411140441895
    10. '
' → logprob: -9.178841590881348

Token 304: ' inversion' (ID: 70924)
  Prédit: ' inversion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inversion' → logprob: -0.3870222568511963
    2. 'in' → logprob: -1.1370222568511963
    3. ' ' → logprob: -8.887022018432617
    4. '  ' → logprob: -13.012022018432617
    5. '	in' → logprob: -13.012022018432617
    6. '   ' → logprob: -13.137022018432617
    7. ' in' → logprob: -13.387022018432617
    8. ' ' → logprob: -13.887022018432617
    9. ' invasion' → logprob: -14.262022018432617
    10. 'inv' → logprob: -14.512022018432617

Token 305: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6919893622398376
    2. ' >=' → logprob: -1.0669894218444824
    3. '<' → logprob: -2.4419894218444824
    4. ' <' → logprob: -2.6919894218444824
    5. '>' → logprob: -8.441988945007324
    6. '<=' → logprob: -8.691988945007324
    7. ' >' → logprob: -9.441988945007324
    8. ' <=' → logprob: -9.691988945007324
    9. ' ' → logprob: -9.816988945007324
    10. ')>=' → logprob: -11.441988945007324

Token 306: ' ceil' (ID: 35964)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.641524612903595
    2. '(N' → logprob: -1.5165245532989502
    3. 'N' → logprob: -1.7665245532989502
    4. '(' → logprob: -4.141524791717529
    5. '(lo' → logprob: -4.141524791717529
    6. 'lo' → logprob: -4.516524791717529
    7. ' (' → logprob: -4.641524791717529
    8. '((' → logprob: -4.766524791717529
    9. 'K' → logprob: -5.141524791717529
    10. '(K' → logprob: -6.016524791717529

Token 307: '((' (ID: 2054)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.8155057430267334
    2. '((' → logprob: -1.0655057430267334
    3. '(in' → logprob: -1.8155057430267334
    4. '(len' → logprob: -3.1905057430267334
    5. '(((' → logprob: -4.9405059814453125
    6. '(' → logprob: -6.8155059814453125
    7. '(n' → logprob: -8.065505981445312
    8. 'in' → logprob: -8.440505981445312
    9. '(sum' → logprob: -9.190505981445312
    10. 'len' → logprob: -9.440505981445312

Token 308: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002059023128822446
    2. '(N' → logprob: -6.752058982849121
    3. ' N' → logprob: -7.877058982849121
    4. 'len' → logprob: -8.502058982849121
    5. ' (' → logprob: -9.377058982849121
    6. '   ' → logprob: -9.877058982849121
    7. '(' → logprob: -9.877058982849121
    8. '((' → logprob: -10.502058982849121
    9. '(len' → logprob: -10.502058982849121
    10. ' ' → logprob: -10.877058982849121

Token 309: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2556280493736267
    2. ' +' → logprob: -1.8806281089782715
    3. ' *' → logprob: -3.6306281089782715
    4. '*' → logprob: -4.1306281089782715
    5. '*(' → logprob: -4.6306281089782715
    6. '-' → logprob: -4.7556281089782715
    7. ' -' → logprob: -5.6306281089782715
    8. ' ' → logprob: -5.7556281089782715
    9. ')' → logprob: -5.8806281089782715
    10. '
' → logprob: -7.0056281089782715

Token 310: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.056147247552871704
    2. ' (' → logprob: -2.931147336959839
    3. '2' → logprob: -7.68114709854126
    4. '   ' → logprob: -8.306147575378418
    5. ' ' → logprob: -8.681147575378418
    6. '(' → logprob: -8.806147575378418
    7. '(n' → logprob: -9.431147575378418
    8. '  ' → logprob: -10.181147575378418
    9. 'N' → logprob: -10.931147575378418
    10. '    ' → logprob: -11.431147575378418

Token 311: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008108171750791371
    2. '(N' → logprob: -7.750810623168945
    3. '   ' → logprob: -8.875810623168945
    4. '+' → logprob: -9.125810623168945
    5. ' N' → logprob: -9.375810623168945
    6. ' ' → logprob: -10.625810623168945
    7. '  ' → logprob: -12.500810623168945
    8. ' (' → logprob: -12.750810623168945
    9. '1' → logprob: -12.875810623168945
    10. ' +' → logprob: -13.000810623168945

Token 312: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06472379714250565
    2. ' +' → logprob: -3.4397237300872803
    3. '-' → logprob: -3.8147237300872803
    4. '1' → logprob: -5.189723968505859
    5. ' -' → logprob: -6.189723968505859
    6. '   ' → logprob: -7.439723968505859
    7. '```' → logprob: -9.06472396850586
    8. ' ' → logprob: -9.18972396850586
    9. ')' → logprob: -10.43972396850586
    10. '
' → logprob: -10.68972396850586

Token 313: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12239699065685272
    2. '1' → logprob: -2.247396945953369
    3. ' ' → logprob: -4.747396945953369
    4. '   ' → logprob: -7.372396945953369
    5. '4' → logprob: -9.247397422790527
    6. '3' → logprob: -10.122397422790527
    7. '  ' → logprob: -10.872397422790527
    8. '```' → logprob: -10.997397422790527
    9. '
' → logprob: -11.122397422790527
    10. '    ' → logprob: -11.747397422790527

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07018828392028809
    2. '2' → logprob: -2.695188283920288
    3. ' ' → logprob: -9.320188522338867
    4. '   ' → logprob: -9.445188522338867
    5. '3' → logprob: -10.570188522338867
    6. '```' → logprob: -10.570188522338867
    7. '4' → logprob: -11.445188522338867
    8. '``' → logprob: -12.070188522338867
    9. '  ' → logprob: -13.070188522338867
    10. '
' → logprob: -13.070188522338867

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015574293211102486
    2. ' )' → logprob: -4.3905744552612305
    3. ')//' → logprob: -6.0155744552612305
    4. ')/' → logprob: -7.7655744552612305
    5. '))' → logprob: -9.64057445526123
    6. '   ' → logprob: -10.01557445526123
    7. '())' → logprob: -10.51557445526123
    8. '+' → logprob: -11.64057445526123
    9. ' //' → logprob: -11.89057445526123
    10. ' ' → logprob: -11.89057445526123

Token 316: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024988830089569092
    2. '/' → logprob: -4.774988651275635
    3. ' )' → logprob: -4.774988651275635
    4. ')/' → logprob: -5.524988651275635
    5. ' /' → logprob: -6.149988651275635
    6. '```' → logprob: -7.649988651275635
    7. ')//' → logprob: -7.649988651275635
    8. ' //' → logprob: -8.649989128112793
    9. '//' → logprob: -8.774989128112793
    10. ')/(' → logprob: -9.399989128112793

Token 317: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012970196548849344
    2. ' ' → logprob: -7.0012969970703125
    3. '4' → logprob: -8.001296997070312
    4. '   ' → logprob: -10.751296997070312
    5. '3' → logprob: -12.126296997070312
    6. '  ' → logprob: -12.251296997070312
    7. '8' → logprob: -12.376296997070312
    8. ')' → logprob: -12.501296997070312
    9. '```' → logprob: -12.751296997070312
    10. '    ' → logprob: -12.876296997070312

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036894375807605684
    2. '4' → logprob: -8.62536907196045
    3. ' ' → logprob: -8.62536907196045
    4. '3' → logprob: -12.25036907196045
    5. '   ' → logprob: -13.00036907196045
    6. '8' → logprob: -13.50036907196045
    7. '  ' → logprob: -14.87536907196045
    8. ')' → logprob: -15.62536907196045
    9. '6' → logprob: -16.000368118286133
    10. '5' → logprob: -16.125368118286133

Token 319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00957841519266367
    2. ' )' → logprob: -5.759578227996826
    3. ' +' → logprob: -5.759578227996826
    4. ')/' → logprob: -6.384578227996826
    5. '+' → logprob: -6.634578227996826
    6. ' -' → logprob: -9.509578704833984
    7. '   ' → logprob: -9.884578704833984
    8. ')//' → logprob: -10.634578704833984
    9. ' ' → logprob: -11.009578704833984
    10. '-' → logprob: -11.634578704833984

Token 320: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4940964877605438
    2. '):
' → logprob: -1.9940965175628662
    3. '):' → logprob: -2.244096517562866
    4. ' /' → logprob: -2.369096517562866
    5. '   ' → logprob: -3.869096517562866
    6. '/' → logprob: -4.994096279144287
    7. ')):
' → logprob: -5.369096279144287
    8. ' )' → logprob: -5.619096279144287
    9. ' ):
' → logprob: -5.994096279144287
    10. '):

' → logprob: -6.119096279144287

Token 321: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003967071825172752
    2. ' ' → logprob: -7.875396728515625
    3. '   ' → logprob: -11.750396728515625
    4. '  ' → logprob: -12.500396728515625
    5. '3' → logprob: -13.375396728515625
    6. '4' → logprob: -13.750396728515625
    7. '10' → logprob: -14.375396728515625
    8. '    ' → logprob: -14.875396728515625
    9. '20' → logprob: -15.750396728515625
    10. '202' → logprob: -15.875396728515625

Token 322: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.114600834436715e-05
    2. ' ' → logprob: -9.375091552734375
    3. '   ' → logprob: -12.375091552734375
    4. '  ' → logprob: -14.000091552734375
    5. '3' → logprob: -14.625091552734375
    6. '    ' → logprob: -15.250091552734375
    7. '```' → logprob: -16.375091552734375
    8. '     ' → logprob: -16.500091552734375
    9. '10' → logprob: -16.625091552734375
    10. '4' → logprob: -16.687591552734375

Token 323: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09170418232679367
    2. '):' → logprob: -2.4667041301727295
    3. '   ' → logprob: -6.216704368591309
    4. '):
' → logprob: -7.841704368591309
    5. ':' → logprob: -8.466704368591309
    6. ':
' → logprob: -9.091704368591309
    7. ')' → logprob: -10.216704368591309
    8. '       ' → logprob: -12.341704368591309
    9. ' ):
' → logprob: -12.341704368591309
    10. ')):
' → logprob: -14.591704368591309

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005046844482421875
    2. ' lo' → logprob: -5.880046844482422
    3. '   ' → logprob: -6.380046844482422
    4. 'lo' → logprob: -7.630046844482422
    5. 'hi' → logprob: -11.255046844482422
    6. ' hi' → logprob: -11.880046844482422
    7. '```' → logprob: -12.130046844482422
    8. '
' → logprob: -12.505046844482422
    9. '        
' → logprob: -12.630046844482422
    10. '	' → logprob: -13.005046844482422

Token 325: ' lo' (ID: 1445)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' (adapté à ' lo') → logprob: -8.006006828509271e-05
    2. 'hi' → logprob: -9.750080108642578
    3. ' lo' → logprob: -11.000080108642578
    4. '   ' → logprob: -12.250080108642578
    5. '
' → logprob: -15.750080108642578
    6. 'li' → logprob: -16.500080108642578
    7. 'ho' → logprob: -16.875080108642578
    8. 'Lo' → logprob: -18.125080108642578
    9. '    
' → logprob: -18.250080108642578
    10. 'low' → logprob: -18.375080108642578

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044363260269165
    2. '=' → logprob: -3.2880444526672363
    3. ',' → logprob: -13.538043975830078
    4. ' +=' → logprob: -14.288043975830078
    5. ' ' → logprob: -14.913043975830078
    6. '<|end|>' → logprob: -15.288043975830078
    7. ' =)' → logprob: -15.288043975830078
    8. ' |=' → logprob: -17.163043975830078
    9. '+=' → logprob: -17.413043975830078
    10. ' <<=' → logprob: -17.413043975830078

Token 327: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.3132617771625519
    2. ' X' → logprob: -1.3132617473602295
    3. '	X' → logprob: -16.438261032104492
    4. ' ' → logprob: -18.688261032104492
    5. '>X' → logprob: -19.688261032104492
    6. '   ' → logprob: -20.563261032104492
    7. '(X' → logprob: -22.563261032104492
    8. '
' → logprob: -22.688261032104492
    9. '_X' → logprob: -23.063261032104492
    10. ')' → logprob: -23.188261032104492

Token 328: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030534928664565086
    2. 'else' → logprob: -3.5305349826812744
    3. ' else' → logprob: -7.155534744262695
    4. '	else' → logprob: -12.905534744262695
    5. '```' → logprob: -14.280534744262695
    6. '<|end|>' → logprob: -15.155534744262695
    7. '
' → logprob: -16.155534744262695
    8. '  ' → logprob: -16.405534744262695
    9. '       ' → logprob: -16.780534744262695
    10. ')' → logprob: -17.280534744262695

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06205271556973457
    2. 'else' → logprob: -2.8120527267456055
    3. ' else' → logprob: -9.437052726745605
    4. '```' → logprob: -12.312052726745605
    5. '	else' → logprob: -14.312052726745605
    6. '       ' → logprob: -17.31205177307129
    7. '  ' → logprob: -17.68705177307129
    8. '<|end|>' → logprob: -18.18705177307129
    9. '﻿' → logprob: -18.68705177307129
    10. '``' → logprob: -18.81205177307129

Token 330: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0003035266126971692
    2. '   ' → logprob: -8.375303268432617
    3. ' else' → logprob: -9.625303268432617
    4. '```' → logprob: -12.125303268432617
    5. 'hi' → logprob: -13.625303268432617
    6. '	else' → logprob: -15.500303268432617
    7. 'elif' → logprob: -16.750303268432617
    8. '  ' → logprob: -18.000303268432617
    9. '#else' → logprob: -18.250303268432617
    10. '_else' → logprob: -19.500303268432617

Token 331: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2090313881635666
    2. ' hi' → logprob: -1.709031343460083
    3. 'hi' → logprob: -5.584031581878662
    4. '   ' → logprob: -5.584031581878662
    5. '
' → logprob: -11.084031105041504
    6. '```' → logprob: -11.709031105041504
    7. '     ' → logprob: -11.959031105041504
    8. '      ' → logprob: -12.084031105041504
    9. '	' → logprob: -12.209031105041504
    10. '    
' → logprob: -12.459031105041504

Token 332: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2088223546743393
    2. 'hi' → logprob: -1.9588223695755005
    3. '       ' → logprob: -3.208822250366211
    4. ' hi' → logprob: -4.958822250366211
    5. ' ' → logprob: -12.833822250366211
    6. '	' → logprob: -13.083822250366211
    7. '  ' → logprob: -13.333822250366211
    8. '    ' → logprob: -13.333822250366211
    9. '     ' → logprob: -13.708822250366211
    10. '      ' → logprob: -14.583822250366211

Token 333: ' hi' (ID: 5911)
  Prédit: 'hi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hi' (adapté à ' hi') → logprob: -1.1472419600977446e-06
    2. ' hi' → logprob: -14.000000953674316
    3. '   ' → logprob: -15.250000953674316
    4. '       ' → logprob: -18.250001907348633
    5. 'ho' → logprob: -18.500001907348633
    6. 'Hi' → logprob: -19.625001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '_hi' → logprob: -22.125001907348633
    9. 'hip' → logprob: -22.375001907348633
    10. 'hy' → logprob: -22.750001907348633

Token 334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671809446066618
    2. ' =' → logprob: -5.006718158721924
    3. '<|end|>' → logprob: -13.506717681884766
    4. ')' → logprob: -15.506717681884766
    5. '.=' → logprob: -15.506717681884766
    6. '+=' → logprob: -15.756717681884766
    7. '=}' → logprob: -15.756717681884766
    8. ',' → logprob: -15.881717681884766
    9. '-=' → logprob: -16.131717681884766
    10. ')=' → logprob: -16.381717681884766

Token 335: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.25194400548934937
    2. ' X' → logprob: -1.5019440650939941
    3. ' lo' → logprob: -11.251943588256836
    4. ' ' → logprob: -13.876943588256836
    5. 'lo' → logprob: -14.251943588256836
    6. 'x' → logprob: -15.626943588256836
    7. '	X' → logprob: -16.126943588256836
    8. '   ' → logprob: -16.626943588256836
    9. '  ' → logprob: -17.751943588256836
    10. ' x' → logprob: -17.876943588256836

Token 336: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -12.375004768371582
    3. '```' → logprob: -15.250004768371582
    4. ' print' → logprob: -16.125003814697266
    5. '  
' → logprob: -18.125003814697266
    6. '    
' → logprob: -18.250003814697266
    7. ')
' → logprob: -19.500003814697266
    8. '(print' → logprob: -19.750003814697266
    9. '

' → logprob: -20.375003814697266
    10. '#print' → logprob: -20.375003814697266

Token 337: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.666993507067673e-05
    2. ')' → logprob: -10.375036239624023
    3. '```' → logprob: -12.625036239624023
    4. ' print' → logprob: -13.875036239624023
    5. '<|end|>' → logprob: -14.625036239624023
    6. '
' → logprob: -15.125036239624023
    7. 'pr' → logprob: -15.625036239624023
    8. '   ' → logprob: -16.750036239624023
    9. '#' → logprob: -16.750036239624023
    10. '#print' → logprob: -16.750036239624023

Token 338: '(lo' (ID: 178972)
  Prédit: '(lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lo' → logprob: -3.9650025428272784e-05
    2. 'lo' → logprob: -10.375040054321289
    3. '(' → logprob: -11.875040054321289
    4. ' lo' → logprob: -14.250040054321289
    5. '(f' → logprob: -15.500040054321289
    6. '(li' → logprob: -15.625040054321289
    7. '(l' → logprob: -16.37504005432129
    8. '_lo' → logprob: -16.50004005432129
    9. '()' → logprob: -17.37504005432129
    10. '(loc' → logprob: -17.62504005432129

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -15.12500286102295
    4. '+' → logprob: -17.250003814697266
    5. ')`' → logprob: -17.625003814697266
    6. ')#' → logprob: -17.875003814697266
    7. '`)' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. '),' → logprob: -18.500003814697266
    10. '))' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 337
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 41.25%
Précision adaptée (1ère position): 45.70%
Précision (top 10): 87.54%
================================================================================
