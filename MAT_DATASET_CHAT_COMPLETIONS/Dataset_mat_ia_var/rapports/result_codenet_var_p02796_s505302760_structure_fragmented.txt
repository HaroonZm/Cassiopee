================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_number():
    return int(input())

def read_robot():
    x, l = map(int, input().split())
    return x, l

def compute_interval(robot):
    x, l = robot
    return (x - l, x + l)

def read_robots(n):
    robots = []
    for _ in range(n):
        robot = read_robot()
        interval = compute_interval(robot)
        robots.append(interval)
    return robots

def sort_robots_by_end(robots):
    return sorted(robots, key=lambda x: x[1])

def first_robot(robots):
    return robots[0]

def can_place(prev_robot, curr_robot):
    return prev_robot[1] <= curr_robot[0]

def count_non_overlapping_robots(robots):
    count = 1
    prev_robot = first_robot(robots)
    for curr_robot in robots:
        if can_place(prev_robot, curr_robot):
            prev_robot = curr_robot
            count += 1
    return count

def print_result(count):
    print(count)

def main():
    n = read_number()
    robots = read_robots(n)
    sorted_robots = sort_robots_by_end(robots)
    result = count_non_overlapping_robots(sorted_robots)
    print_result(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015483904629945755
    2. '_' → logprob: -4.265483856201172
    3. '():' → logprob: -7.515483856201172
    4. '```' → logprob: -7.765483856201172
    5. '(_:' → logprob: -9.265483856201172
    6. ':' → logprob: -9.640483856201172
    7. '(:' → logprob: -9.890483856201172
    8. '(_' → logprob: -10.265483856201172
    9. ' (' → logprob: -10.765483856201172
    10. '_:' → logprob: -11.515483856201172

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6995343565940857
    2. '\n' → logprob: -1.8245344161987305
    3. ':' → logprob: -2.1995344161987305
    4. '   ' → logprob: -2.9495344161987305
    5. '\' → logprob: -3.4495344161987305
    6. '():' → logprob: -3.4495344161987305
    7. '(' → logprob: -3.4495344161987305
    8. '
' → logprob: -4.3245344161987305
    9. '(
' → logprob: -4.5745344161987305
    10. '    
' → logprob: -4.8245344161987305

Token 5: ' return' (ID: 622)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17191095650196075
    2. 'r' → logprob: -3.1719110012054443
    3. 'x' → logprob: -3.6719110012054443
    4. '   ' → logprob: -3.9219110012054443
    5. '```' → logprob: -3.9219110012054443
    6. ' ' → logprob: -4.171910762786865
    7. 'return' (adapté à ' return') → logprob: -4.296910762786865
    8. 'i' → logprob: -4.796910762786865
    9. '`' → logprob: -5.421910762786865
    10. 'number' → logprob: -6.296910762786865

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2334994524717331
    2. ' int' → logprob: -1.7334994077682495
    3. ' None' → logprob: -4.483499526977539
    4. 'int' → logprob: -5.233499526977539
    5. '  ' → logprob: -5.733499526977539
    6. '0' → logprob: -5.733499526977539
    7. '"' → logprob: -5.858499526977539
    8. ''' → logprob: -6.483499526977539
    9. ' (' → logprob: -7.733499526977539
    10. ' []' → logprob: -7.858499526977539

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024370834580622613
    2. '('' → logprob: -8.875244140625
    3. '(input' → logprob: -10.375244140625
    4. ' (' → logprob: -11.000244140625
    5. ''' → logprob: -12.000244140625
    6. '()' → logprob: -12.125244140625
    7. '(
' → logprob: -12.250244140625
    8. '```' → logprob: -12.250244140625
    9. '("("' → logprob: -12.250244140625
    10. '(space' → logprob: -12.375244140625

Token 8: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33851948380470276
    2. '())' → logprob: -2.08851957321167
    3. '()' → logprob: -2.21351957321167
    4. ')' → logprob: -2.96351957321167
    5. '('' → logprob: -7.33851957321167
    6. '(""))' → logprob: -7.71351957321167
    7. '(()' → logprob: -7.83851957321167
    8. '))' → logprob: -9.088519096374512
    9. '()))' → logprob: -9.088519096374512
    10. '(
' → logprob: -9.338519096374512

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2593904733657837
    2. '\n' → logprob: -1.5093904733657837
    3. '
' → logprob: -2.259390354156494
    4. '#' → logprob: -2.259390354156494
    5. '(' → logprob: -2.259390354156494
    6. '```' → logprob: -3.759390354156494
    7. 'd' → logprob: -4.009390354156494
    8. '' → logprob: -4.009390354156494
    9. '(
' → logprob: -4.259390354156494
    10. '

' → logprob: -4.384390354156494

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.709370493888855
    2. ' read' → logprob: -1.084370493888855
    3. ' square' → logprob: -3.2093706130981445
    4. ' add' → logprob: -3.5843706130981445
    5. ' sum' → logprob: -3.9593706130981445
    6. ' process' → logprob: -4.0843706130981445
    7. ' write' → logprob: -4.2093706130981445
    8. ' main' → logprob: -4.2093706130981445
    9. ' compute' → logprob: -4.4593706130981445
    10. ' space' → logprob: -4.7093706130981445

Token 11: '_robot' (ID: 152478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026702679693698883
    2. '_number' → logprob: -4.401702880859375
    3. '_string' → logprob: -4.526702880859375
    4. '_line' → logprob: -6.276702880859375
    5. '_name' → logprob: -7.901702880859375
    6. '_word' → logprob: -8.151702880859375
    7. '_value' → logprob: -8.651702880859375
    8. '_space' → logprob: -9.276702880859375
    9. '_text' → logprob: -9.276702880859375
    10. '_integer' → logprob: -9.651702880859375

Token 12: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16447654366493225
    2. '_name' → logprob: -1.9144765138626099
    3. '_arm' → logprob: -6.41447639465332
    4. '_position' → logprob: -6.91447639465332
    5. '_controller' → logprob: -7.66447639465332
    6. '()' → logprob: -8.53947639465332
    7. '(' → logprob: -8.78947639465332
    8. '_(' → logprob: -8.91447639465332
    9. '_command' → logprob: -9.41447639465332
    10. '_robot' → logprob: -9.41447639465332

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1615893691778183
    2. '(' → logprob: -2.4115893840789795
    3. '    ' → logprob: -3.6615893840789795
    4. '_' → logprob: -4.4115891456604
    5. '()' → logprob: -4.5365891456604
    6. ' (' → logprob: -5.9115891456604
    7. ' return' → logprob: -6.1615891456604
    8. 'def' → logprob: -6.4115891456604
    9. ' ' → logprob: -6.9115891456604
    10. '(
' → logprob: -7.0365891456604

Token 14: ' x' (ID: 1215)
  Prédit: 'robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'robot' → logprob: -0.38154223561286926
    2. '   ' → logprob: -1.7565422058105469
    3. ' robot' → logprob: -2.881542205810547
    4. 'name' → logprob: -3.631542205810547
    5. ' return' → logprob: -3.756542205810547
    6. 'return' → logprob: -3.881542205810547
    7. ' name' → logprob: -4.506542205810547
    8. ' line' → logprob: -6.631542205810547
    9. 'r' → logprob: -6.756542205810547
    10. 'line' → logprob: -7.131542205810547

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028861533850431442
    2. '_' → logprob: -3.9038615226745605
    3. ' =' → logprob: -5.1538615226745605
    4. '=' → logprob: -7.0288615226745605
    5. ' ,' → logprob: -7.2788615226745605
    6. '_,' → logprob: -7.6538615226745605
    7. ')' → logprob: -9.653861999511719
    8. ' _' → logprob: -10.028861999511719
    9. ',y' → logprob: -10.278861999511719
    10. '_input' → logprob: -10.278861999511719

Token 16: ' l' (ID: 305)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20147141814231873
    2. ' y' → logprob: -1.7014714479446411
    3. ' ' → logprob: -10.201471328735352
    4. '<|end|>' → logprob: -11.451471328735352
    5. '<|end|>' → logprob: -13.201471328735352
    6. '_y' → logprob: -13.326471328735352
    7. '  ' → logprob: -13.576471328735352
    8. ',y' → logprob: -13.576471328735352
    9. '    ' → logprob: -13.826471328735352
    10. '	y' → logprob: -14.076471328735352

Token 17: ' =' (ID: 314)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.46349361538887024
    2. 'ength' → logprob: -1.3384935855865479
    3. ',' → logprob: -3.338493585586548
    4. 'e' → logprob: -3.838493585586548
    5. ' =' → logprob: -4.338493824005127
    6. 'ocation' → logprob: -4.588493824005127
    7. 'abel' → logprob: -4.963493824005127
    8. 'eft' → logprob: -5.088493824005127
    9. '=' → logprob: -5.338493824005127
    10. 'en' → logprob: -5.463493824005127

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0262795127928257
    2. ' input' → logprob: -3.7762794494628906
    3. 'map' → logprob: -6.026279449462891
    4. 'input' → logprob: -8.02627944946289
    5. ' list' → logprob: -8.40127944946289
    6. ' [' → logprob: -10.65127944946289
    7. ' read' → logprob: -10.77627944946289
    8. ' int' → logprob: -11.77627944946289
    9. '[' → logprob: -13.15127944946289
    10. 'list' → logprob: -13.27627944946289

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005782312247902155
    2. '(' → logprob: -5.380782127380371
    3. '(lambda' → logprob: -7.505782127380371
    4. '(input' → logprob: -8.005782127380371
    5. '(str' → logprob: -8.255782127380371
    6. 'int' → logprob: -11.880782127380371
    7. '<int' → logprob: -12.630782127380371
    8. ' (' → logprob: -13.505782127380371
    9. '(
' → logprob: -13.630782127380371
    10. '(map' → logprob: -13.755782127380371

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01075585838407278
    2. ',input' → logprob: -5.010756015777588
    3. ',' → logprob: -6.385756015777588
    4. ')' → logprob: -6.510756015777588
    5. '(' → logprob: -7.385756015777588
    6. 'input' → logprob: -8.63575553894043
    7. '=input' → logprob: -10.63575553894043
    8. ' input' → logprob: -10.88575553894043
    9. ' (' → logprob: -11.26075553894043
    10. '[input' → logprob: -13.51075553894043

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.575941264629364
    2. 'input' → logprob: -0.825941264629364
    3. ')' → logprob: -14.20094108581543
    4. '=input' → logprob: -14.45094108581543
    5. '	input' → logprob: -15.45094108581543
    6. '(input' → logprob: -15.57594108581543
    7. '<input' → logprob: -16.57594108581543
    8. ',input' → logprob: -16.70094108581543
    9. ' ' → logprob: -16.95094108581543
    10. '_input' → logprob: -17.20094108581543

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01853465475142002
    2. '()' → logprob: -4.1435346603393555
    3. '())' → logprob: -6.0185346603393555
    4. ')' → logprob: -10.893534660339355
    5. '(' → logprob: -11.018534660339355
    6. '()))' → logprob: -11.518534660339355
    7. '());' → logprob: -12.018534660339355
    8. '()
' → logprob: -12.518534660339355
    9. ' ().' → logprob: -13.393534660339355
    10. '()),' → logprob: -14.268534660339355

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027015688829123974
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -12.250269889831543
    4. ' split' → logprob: -12.500269889831543
    5. '(split' → logprob: -15.000269889831543
    6. 'spl' → logprob: -17.12527084350586
    7. 'read' → logprob: -17.25027084350586
    8. ' ' → logprob: -18.00027084350586
    9. '().' → logprob: -18.25027084350586
    10. ')' → logprob: -18.62527084350586

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.053996626287698746
    2. '()))' → logprob: -3.1789965629577637
    3. ')' → logprob: -5.053996562957764
    4. '))' → logprob: -5.678996562957764
    5. '()' → logprob: -6.803996562957764
    6. '('' → logprob: -12.178997039794922
    7. '())
' → logprob: -12.428997039794922
    8. '()))
' → logprob: -12.553997039794922
    9. '()),' → logprob: -12.928997039794922
    10. ''))' → logprob: -13.053997039794922

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5655032396316528
    2. '<|end|>' → logprob: -1.9405032396316528
    3. 'return' → logprob: -2.0655031204223633
    4. ' return' → logprob: -2.6905031204223633
    5. ')' → logprob: -2.8155031204223633
    6. ' ' → logprob: -5.065503120422363
    7. '<|end|>' → logprob: -5.690503120422363
    8. '	return' → logprob: -5.815503120422363
    9. '  
' → logprob: -5.815503120422363
    10. '    
' → logprob: -5.815503120422363

Token 26: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4330180883407593
    2. ' return' → logprob: -1.8080180883407593
    3. 'r' → logprob: -2.683018207550049
    4. '   ' → logprob: -2.808018207550049
    5. '<|end|>' → logprob: -4.183018207550049
    6. ')' → logprob: -4.308018207550049
    7. ' robot' → logprob: -4.933018207550049
    8. 'robot' → logprob: -4.933018207550049
    9. ' r' → logprob: -5.433018207550049
    10. ' ' → logprob: -6.683018207550049

Token 27: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4308692216873169
    2. ' x' → logprob: -1.805869221687317
    3. '(x' → logprob: -2.3058691024780273
    4. 'x' → logprob: -2.6808691024780273
    5. '{x' → logprob: -4.555869102478027
    6. '(' → logprob: -5.680869102478027
    7. '[x' → logprob: -6.680869102478027
    8. ' [' → logprob: -7.305869102478027
    9. '{'' → logprob: -7.805869102478027
    10. '{"' → logprob: -8.180869102478027

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056383777409791946
    2. ',l' → logprob: -3.1813838481903076
    3. '<|end|>' → logprob: -4.9313836097717285
    4. ' ,' → logprob: -5.1813836097717285
    5. ',x' → logprob: -8.681384086608887
    6. ' l' → logprob: -9.431384086608887
    7. ' ' → logprob: -9.931384086608887
    8. '<|end|>' → logprob: -10.306384086608887
    9. '```' → logprob: -10.931384086608887
    10. ',line' → logprob: -11.306384086608887

Token 29: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06202851980924606
    2. ' l' → logprob: -2.812028408050537
    3. '[l' → logprob: -10.062028884887695
    4. '[' → logprob: -11.937028884887695
    5. ' [' → logprob: -12.687028884887695
    6. 'x' → logprob: -13.062028884887695
    7. ' ' → logprob: -13.062028884887695
    8. '[]' → logprob: -14.187028884887695
    9. ' ' → logprob: -14.562028884887695
    10. ' x' → logprob: -14.562028884887695

Token 30: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017077792435884476
    2. '
' → logprob: -6.876707553863525
    3. '<|end|>' → logprob: -8.001708030700684
    4. 'x' → logprob: -9.251708030700684
    5. '

' → logprob: -9.751708030700684
    6. 'n' → logprob: -9.751708030700684
    7. '```' → logprob: -9.751708030700684
    8. 'class' → logprob: -10.751708030700684
    9. '<|end|>' → logprob: -11.751708030700684
    10. '#' → logprob: -12.001708030700684

Token 32: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14110274612903595
    2. ' solve' → logprob: -2.2661027908325195
    3. ' find' → logprob: -4.8911027908325195
    4. ' overlap' → logprob: -5.7661027908325195
    5. ' calculate' → logprob: -6.1411027908325195
    6. ' max' → logprob: -6.7661027908325195
    7. 'solve' → logprob: -6.7661027908325195
    8. 'main' → logprob: -6.8911027908325195
    9. ' intersect' → logprob: -6.8911027908325195
    10. ' check' → logprob: -7.0161027908325195

Token 33: '_interval' (ID: 49009)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.17669677734375
    2. '_max' → logprob: -1.92669677734375
    3. '_inter' → logprob: -2.05169677734375
    4. '_collision' → logprob: -2.17669677734375
    5. '_overlap' → logprob: -2.30169677734375
    6. '_score' → logprob: -3.55169677734375
    7. '_area' → logprob: -3.67669677734375
    8. '_positions' → logprob: -3.67669677734375
    9. '_l' → logprob: -4.80169677734375
    10. '_safe' → logprob: -4.80169677734375

Token 34: '(robot' (ID: 166887)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12612485885620117
    2. '(' → logprob: -2.376124858856201
    3. '()' → logprob: -3.751124858856201
    4. '_' → logprob: -6.501124858856201
    5. '():' → logprob: -8.87612533569336
    6. '_s' → logprob: -9.37612533569336
    7. '(s' → logprob: -10.12612533569336
    8. '_overlap' → logprob: -10.25112533569336
    9. '```' → logprob: -10.37612533569336
    10. '(x' → logprob: -10.37612533569336

Token 35: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11076948046684265
    2. '):' → logprob: -2.610769510269165
    3. ')' → logprob: -3.985769510269165
    4. '[' → logprob: -4.485769271850586
    5. '_x' → logprob: -6.985769271850586
    6. '_positions' → logprob: -9.235769271850586
    7. '_s' → logprob: -9.610769271850586
    8. '):
' → logprob: -9.860769271850586
    9. ':' → logprob: -10.110769271850586
    10. '_' → logprob: -10.110769271850586

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6021851301193237
    2. '   ' → logprob: -1.6021851301193237
    3. '[:]' → logprob: -1.6021851301193237
    4. '[' → logprob: -1.7271851301193237
    5. '_' → logprob: -2.4771852493286133
    6. '_:' → logprob: -2.9771852493286133
    7. '[]' → logprob: -3.7271852493286133
    8. '_robot' → logprob: -4.727185249328613
    9. '[:' → logprob: -4.727185249328613
    10. '<|end|>' → logprob: -5.227185249328613

Token 37: ' x' (ID: 1215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0491533279418945
    2. '   ' → logprob: -1.1741533279418945
    3. ' x' → logprob: -1.7991533279418945
    4. '    ' → logprob: -2.9241533279418945
    5. 'x' (adapté à ' x') → logprob: -3.6741533279418945
    6. ' ' → logprob: -4.1741533279418945
    7. 'robot' → logprob: -4.1741533279418945
    8. ' return' → logprob: -4.2991533279418945
    9. ' robot' → logprob: -4.5491533279418945
    10. '(' → logprob: -4.5491533279418945

Token 38: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6261023879051208
    2. ',' → logprob: -0.8761023879051208
    3. ' ,' → logprob: -4.126102447509766
    4. '-' → logprob: -4.376102447509766
    5. '<|end|>' → logprob: -5.001102447509766
    6. ' ' → logprob: -5.626102447509766
    7. ' =' → logprob: -6.251102447509766
    8. ',l' → logprob: -6.626102447509766
    9. '  ' → logprob: -7.126102447509766
    10. '<|end|>' → logprob: -7.126102447509766

Token 39: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3868820369243622
    2. 'l' → logprob: -1.1368820667266846
    3. ' ' → logprob: -12.011881828308105
    4. ' robot' → logprob: -13.386881828308105
    5. 'robot' → logprob: -14.011881828308105
    6. '	l' → logprob: -14.136881828308105
    7. ' ' → logprob: -15.261881828308105
    8. '_l' → logprob: -15.261881828308105
    9. 'space' → logprob: -15.386881828308105
    10. 'L' → logprob: -15.761881828308105

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269845962524414
    2. '=' → logprob: -2.1269845962524414
    3. ',' → logprob: -10.376984596252441
    4. ' ' → logprob: -11.876984596252441
    5. ')' → logprob: -12.251984596252441
    6. '   ' → logprob: -13.001984596252441
    7. '<|end|>' → logprob: -13.126984596252441
    8. '-' → logprob: -13.251984596252441
    9. '_' → logprob: -13.376984596252441
    10. '  ' → logprob: -14.126984596252441

Token 41: ' robot' (ID: 20808)
  Prédit: ' robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robot' → logprob: -0.0038188379257917404
    2. 'robot' → logprob: -5.628818988800049
    3. ' ' → logprob: -8.62881851196289
    4. '(robot' → logprob: -10.50381851196289
    5. ' l' → logprob: -12.87881851196289
    6. '.robot' → logprob: -13.50381851196289
    7. ' (' → logprob: -13.62881851196289
    8. '_robot' → logprob: -13.75381851196289
    9. ' x' → logprob: -14.00381851196289
    10. '  ' → logprob: -14.25381851196289

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20321354269981384
    2. '
' → logprob: -2.0782134532928467
    3. ',' → logprob: -3.7032134532928467
    4. '    
' → logprob: -4.828213691711426
    5. 'return' → logprob: -5.328213691711426
    6. '  
' → logprob: -5.328213691711426
    7. ' return' → logprob: -5.828213691711426
    8. ' ' → logprob: -6.203213691711426
    9. '<|end|>' → logprob: -6.328213691711426
    10. '-' → logprob: -6.578213691711426

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7470117807388306
    2. '
' → logprob: -0.8720117807388306
    3. ' return' → logprob: -2.497011661529541
    4. 'return' → logprob: -3.997011661529541
    5. '    
' → logprob: -5.997011661529541
    6. '	return' → logprob: -6.872011661529541
    7. '  
' → logprob: -6.997011661529541
    8. ':' → logprob: -7.497011661529541
    9. '```' → logprob: -7.747011661529541
    10. ':return' → logprob: -7.747011661529541

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4625876247882843
    2. ' return' → logprob: -1.837587594985962
    3. '-' → logprob: -2.087587594985962
    4. '   ' → logprob: -3.462587594985962
    5. ' ' → logprob: -3.462587594985962
    6. '0' → logprob: -4.962587833404541
    7. '	return' → logprob: -5.837587833404541
    8. ')' → logprob: -6.087587833404541
    9. '[' → logprob: -6.212587833404541
    10. ' -' → logprob: -6.587587833404541

Token 45: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.15989308059215546
    2. ' (' → logprob: -2.409893035888672
    3. 'x' → logprob: -3.034893035888672
    4. ' x' → logprob: -4.909893035888672
    5. '[x' → logprob: -6.409893035888672
    6. '(' → logprob: -7.409893035888672
    7. '   ' → logprob: -9.534893035888672
    8. ' ' → logprob: -9.909893035888672
    9. ' [' → logprob: -10.034893035888672
    10. '[' → logprob: -10.784893035888672

Token 46: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015943869948387146
    2. ' x' → logprob: -9.12515926361084
    3. '(x' → logprob: -10.00015926361084
    4. '   ' → logprob: -12.75015926361084
    5. ' ' → logprob: -14.25015926361084
    6. '(' → logprob: -14.75015926361084
    7. ' (' → logprob: -15.12515926361084
    8. '	x' → logprob: -15.12515926361084
    9. ')x' → logprob: -15.25015926361084
    10. ',' → logprob: -16.625160217285156

Token 47: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6942691206932068
    2. ' -' → logprob: -0.6942691206932068
    3. '-l' → logprob: -6.819269180297852
    4. ' ' → logprob: -10.944269180297852
    5. ')' → logprob: -12.319269180297852
    6. ',' → logprob: -12.444269180297852
    7. ' ' → logprob: -13.444269180297852
    8. '[' → logprob: -14.694269180297852
    9. ' l' → logprob: -15.444269180297852
    10. ' ,' → logprob: -15.694269180297852

Token 48: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.026306571438908577
    2. ' l' → logprob: -3.651306629180908
    3. ' ' → logprob: -12.27630615234375
    4. '	l' → logprob: -14.02630615234375
    5. '   ' → logprob: -15.02630615234375
    6. '_l' → logprob: -15.40130615234375
    7. '  ' → logprob: -16.15130615234375
    8. '    ' → logprob: -17.02630615234375
    9. ' ' → logprob: -17.15130615234375
    10. ' (' → logprob: -17.15130615234375

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007267289329320192
    2. ' ,' → logprob: -7.250726699829102
    3. '),' → logprob: -11.875726699829102
    4. ')' → logprob: -11.875726699829102
    5. ' ' → logprob: -13.875726699829102
    6. ',
' → logprob: -14.500726699829102
    7. '   ' → logprob: -14.625726699829102
    8. '```' → logprob: -15.750726699829102
    9. ',x' → logprob: -16.2507266998291
    10. ',

' → logprob: -16.3757266998291

Token 50: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014141082763672
    2. ' x' → logprob: -1.7014141082763672
    3. '(x' → logprob: -15.326414108276367
    4. ' ' → logprob: -15.451414108276367
    5. '	x' → logprob: -15.451414108276367
    6. ')' → logprob: -15.951414108276367
    7. ')x' → logprob: -16.701414108276367
    8. '   ' → logprob: -16.701414108276367
    9. ' ' → logprob: -17.576414108276367
    10. ',' → logprob: -17.826414108276367

Token 51: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18146896362304688
    2. '+' → logprob: -1.8064689636230469
    3. '+l' → logprob: -7.056468963623047
    4. ',' → logprob: -8.056468963623047
    5. ')' → logprob: -8.056468963623047
    6. ' ' → logprob: -8.806468963623047
    7. ' ,' → logprob: -10.056468963623047
    8. '+x' → logprob: -11.556468963623047
    9. '+,' → logprob: -12.306468963623047
    10. '),' → logprob: -12.681468963623047

Token 52: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.016038239002227783
    2. ' l' → logprob: -4.141038417816162
    3. ' ' → logprob: -13.516037940979004
    4. ')' → logprob: -13.891037940979004
    5. '<|end|>' → logprob: -14.266037940979004
    6. '1' → logprob: -14.891037940979004
    7. '   ' → logprob: -15.141037940979004
    8. '	l' → logprob: -15.266037940979004
    9. '_l' → logprob: -15.641037940979004
    10. '    ' → logprob: -17.14103889465332

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')

' → logprob: -17.875001907348633
    5. ')`' → logprob: -18.875001907348633
    6. ')return' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.125001907348633
    8. '```' → logprob: -19.125001907348633
    9. '')' → logprob: -19.375001907348633
    10. '`)' → logprob: -19.500001907348633

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004523606039583683
    2. '<|end|>' → logprob: -8.250452041625977
    3. '```' → logprob: -9.750452041625977
    4. '
' → logprob: -9.875452041625977
    5. '

' → logprob: -10.500452041625977
    6. '<|end|>' → logprob: -10.500452041625977
    7. 'n' → logprob: -11.500452041625977
    8. '\' → logprob: -11.875452041625977
    9. ' def' → logprob: -13.250452041625977
    10. 'for' → logprob: -13.750452041625977

Token 55: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.29362860321998596
    2. ' can' → logprob: -2.918628692626953
    3. ' max' → logprob: -3.168628692626953
    4. ' find' → logprob: -3.293628692626953
    5. ' solve' → logprob: -3.418628692626953
    6. ' compute' → logprob: -3.418628692626953
    7. ' maximum' → logprob: -4.668628692626953
    8. ' place' → logprob: -4.918628692626953
    9. ' sort' → logprob: -5.543628692626953
    10. ' cover' → logprob: -5.668628692626953

Token 56: '_' (ID: 62)
  Prédit: '_robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.4354654550552368
    2. '_number' → logprob: -1.5604654550552368
    3. '_' → logprob: -2.0604653358459473
    4. '_numbers' → logprob: -5.685465335845947
    5. '_input' → logprob: -6.685465335845947
    6. '_data' → logprob: -6.810465335845947
    7. '_n' → logprob: -6.810465335845947
    8. '_inter' → logprob: -6.935465335845947
    9. '_s' → logprob: -7.060465335845947
    10. '_ro' → logprob: -7.185465335845947

Token 57: 'robots' (ID: 136360)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.142039492726326
    2. 'robots' → logprob: -2.7670395374298096
    3. 'robot' → logprob: -3.2670395374298096
    4. 'n' → logprob: -4.0170392990112305
    5. 'count' → logprob: -5.7670392990112305
    6. 'num' → logprob: -6.0170392990112305
    7. 'input' → logprob: -7.0170392990112305
    8. 'interval' → logprob: -7.1420392990112305
    9. 'numbers' → logprob: -7.2670392990112305
    10. '_number' → logprob: -7.6420392990112305

Token 58: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3438327843905427e-05
    2. ' ():' → logprob: -11.25002384185791
    3. '():
' → logprob: -12.25002384185791
    4. '()' → logprob: -12.25002384185791
    5. '()>' → logprob: -15.50002384185791
    6. '(' → logprob: -15.50002384185791
    7. '()">' → logprob: -16.250022888183594
    8. ' ()' → logprob: -16.250022888183594
    9. '():
' → logprob: -17.250022888183594
    10. '():

' → logprob: -17.250022888183594

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003213997988495976
    2. ')' → logprob: -8.125321388244629
    3. ' ):' → logprob: -11.250321388244629
    4. '):
' → logprob: -11.875321388244629
    5. ':' → logprob: -13.625321388244629
    6. '=' → logprob: -13.875321388244629
    7. '_' → logprob: -14.125321388244629
    8. '  ' → logprob: -14.375321388244629
    9. '   ' → logprob: -14.500321388244629
    10. '():' → logprob: -14.875321388244629

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001879731542430818
    2. 'robots' → logprob: -6.626879692077637
    3. ' robots' → logprob: -7.626879692077637
    4. ' return' → logprob: -10.001879692077637
    5. 'return' → logprob: -11.376879692077637
    6. '```' → logprob: -11.876879692077637
    7. '[' → logprob: -14.751879692077637
    8. '    
' → logprob: -15.001879692077637
    9. 'r' → logprob: -15.126879692077637
    10. '    ' → logprob: -15.251879692077637

Token 61: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -1.0583765506744385
    2. ' return' → logprob: -1.3083765506744385
    3. '[' → logprob: -1.6833765506744385
    4. 'return' → logprob: -2.3083765506744385
    5. ' robots' → logprob: -2.5583765506744385
    6. '   ' → logprob: -4.558376312255859
    7. ' [' → logprob: -5.058376312255859
    8. '[
' → logprob: -6.183376312255859
    9. '[r' → logprob: -7.433376312255859
    10. '[n' → logprob: -8.80837631225586

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04314111918210983
    2. '=' → logprob: -3.1681411266326904
    3. '=[]' → logprob: -9.04314136505127
    4. '[]' → logprob: -11.79314136505127
    5. '.append' → logprob: -12.16814136505127
    6. 's' → logprob: -12.66814136505127
    7. '=[]
' → logprob: -12.79314136505127
    8. ' ' → logprob: -13.54314136505127
    9. '   ' → logprob: -14.41814136505127
    10. '.' → logprob: -14.41814136505127

Token 63: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.47470009326934814
    2. ' []' → logprob: -0.9747000932693481
    3. ' [' → logprob: -8.099699974060059
    4. '[' → logprob: -8.349699974060059
    5. '[]
' → logprob: -9.599699974060059
    6. ' []
' → logprob: -11.974699974060059
    7. '[n' → logprob: -12.724699974060059
    8. '[int' → logprob: -13.724699974060059
    9. '[]

' → logprob: -13.724699974060059
    10. '   ' → logprob: -14.849699974060059

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8178950548171997
    2. '   ' → logprob: -1.3178950548171997
    3. ' for' → logprob: -1.5678950548171997
    4. 'for' → logprob: -2.56789493560791
    5. '	for' → logprob: -5.81789493560791
    6. '    
' → logprob: -6.94289493560791
    7. '<|end|>' → logprob: -7.19289493560791
    8. '' → logprob: -8.06789493560791
    9. '
' → logprob: -8.56789493560791
    10. '  
' → logprob: -8.94289493560791

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13154686987400055
    2. ' for' → logprob: -2.131546974182129
    3. '   ' → logprob: -5.381546974182129
    4. '	for' → logprob: -12.006546974182129
    5. ' ' → logprob: -14.131546974182129
    6. '```' → logprob: -14.256546974182129
    7. '
' → logprob: -17.006546020507812
    8. '  ' → logprob: -17.631546020507812
    9. '    
' → logprob: -18.006546020507812
    10. 'while' → logprob: -18.631546020507812

Token 66: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.025307830423116684
    2. '_' → logprob: -3.7753078937530518
    3. ' i' → logprob: -6.275307655334473
    4. ' ' → logprob: -8.650307655334473
    5. 'i' → logprob: -14.025307655334473
    6. ' ' → logprob: -14.150307655334473
    7. '_i' → logprob: -14.650307655334473
    8. ' range' → logprob: -14.775307655334473
    9. ' in' → logprob: -15.275307655334473
    10. ' ‌' → logprob: -15.525307655334473

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08004070073366165
    2. 'in' → logprob: -2.580040693283081
    3. '_' → logprob: -7.83004093170166
    4. ' ' → logprob: -8.20504093170166
    5. 'i' → logprob: -8.33004093170166
    6. 'n' → logprob: -9.58004093170166
    7. ' _' → logprob: -10.08004093170166
    8. '  ' → logprob: -10.08004093170166
    9. 'robots' → logprob: -10.83004093170166
    10. ' i' → logprob: -11.20504093170166

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004644553642719984
    2. ' range' → logprob: -5.379644393920898
    3. 'ange' → logprob: -11.629644393920898
    4. 'ran' → logprob: -12.504644393920898
    5. 'rang' → logprob: -12.629644393920898
    6. '(range' → logprob: -13.254644393920898
    7. '```' → logprob: -13.504644393920898
    8. ' ' → logprob: -13.504644393920898
    9. '	range' → logprob: -13.754644393920898
    10. 'r' → logprob: -14.629644393920898

Token 69: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5756191611289978
    2. '(n' → logprob: -1.0756192207336426
    3. '(' → logprob: -2.8256192207336426
    4. ' (' → logprob: -3.8256192207336426
    5. 'n' → logprob: -4.325619220733643
    6. ' ' → logprob: -7.075619220733643
    7. ' range' → logprob: -7.200619220733643
    8. '(
' → logprob: -8.575618743896484
    9. ')' → logprob: -9.325618743896484
    10. ' )' → logprob: -9.575618743896484

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007641059812158346
    2. ')' → logprob: -5.257640838623047
    3. '):
' → logprob: -6.382640838623047
    4. ':' → logprob: -7.507640838623047
    5. '   ' → logprob: -9.007640838623047
    6. ' ):' → logprob: -10.382640838623047
    7. '):
' → logprob: -13.132640838623047
    8. '():' → logprob: -13.132640838623047
    9. ' )' → logprob: -13.632640838623047
    10. ' :' → logprob: -13.757640838623047

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2817505896091461
    2. ' robots' → logprob: -2.1567506790161133
    3. '   ' → logprob: -2.9067506790161133
    4. 'robots' → logprob: -3.1567506790161133
    5. '        
' → logprob: -4.531750679016113
    6. '    
' → logprob: -4.656750679016113
    7. '    ' → logprob: -4.656750679016113
    8. ' 
' → logprob: -6.406750679016113
    9. '<|end|>' → logprob: -7.906750679016113
    10. '
' → logprob: -8.531750679016113

Token 72: ' robot' (ID: 20808)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.002388852648437023
    2. ' robots' → logprob: -6.877388954162598
    3. 'robot' (adapté à ' robot') → logprob: -7.002388954162598
    4. '   ' → logprob: -7.752388954162598
    5. 'rob' → logprob: -12.252388954162598
    6. '       ' → logprob: -12.377388954162598
    7. ' robot' → logprob: -12.627388954162598
    8. 'r' → logprob: -14.002388954162598
    9. '```' → logprob: -14.127388954162598
    10. 'routers' → logprob: -15.377388954162598

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15071038901805878
    2. '=' → logprob: -2.400710344314575
    3. 's' → logprob: -3.025710344314575
    4. ')' → logprob: -7.275710582733154
    5. '.append' → logprob: -11.400710105895996
    6. ')=' → logprob: -11.900710105895996
    7. ' ' → logprob: -12.150710105895996
    8. 'robots' → logprob: -12.525710105895996
    9. '   ' → logprob: -13.525710105895996
    10. '_' → logprob: -13.900710105895996

Token 74: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.12692873179912567
    2. 'read' → logprob: -2.1269288063049316
    3. '	read' → logprob: -14.501928329467773
    4. '(read' → logprob: -16.376928329467773
    5. '   ' → logprob: -17.251928329467773
    6. '.read' → logprob: -18.376928329467773
    7. '_read' → logprob: -18.626928329467773
    8. ' readline' → logprob: -18.876928329467773
    9. '    ' → logprob: -19.626928329467773
    10. '>' → logprob: -19.876928329467773

Token 75: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -8.041768160182983e-05
    2. '_' → logprob: -9.500080108642578
    3. '_ro' → logprob: -12.250080108642578
    4. '_bot' → logprob: -14.125080108642578
    5. '_ros' → logprob: -17.750080108642578
    6. '__' → logprob: -17.875080108642578
    7. ')_' → logprob: -18.750080108642578
    8. 'robot' → logprob: -19.250080108642578
    9. ' _' → logprob: -19.375080108642578
    10. '_RO' → logprob: -19.625080108642578

Token 76: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005311427637934685
    2. '()
' → logprob: -5.255311489105225
    3. '()
' → logprob: -9.630311012268066
    4. ')' → logprob: -12.255311012268066
    5. '()

' → logprob: -12.505311012268066
    6. '())' → logprob: -13.255311012268066
    7. '()`' → logprob: -14.005311012268066
    8. '()\' → logprob: -15.130311012268066
    9. '       ' → logprob: -15.380311012268066
    10. '()

' → logprob: -16.630311965942383

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008544052834622562
    2. 'robots' → logprob: -7.6258544921875
    3. '   ' → logprob: -8.0008544921875
    4. ' robots' → logprob: -11.0008544921875
    5. '<|end|>' → logprob: -11.8758544921875
    6. 'robot' → logprob: -13.0008544921875
    7. '```' → logprob: -14.0008544921875
    8. '	' → logprob: -14.2508544921875
    9. ',' → logprob: -14.7508544921875
    10. '	   ' → logprob: -14.8758544921875

Token 78: ' interval' (ID: 17116)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.0025520040653645992
    2. ' robots' → logprob: -6.002552032470703
    3. '   ' → logprob: -9.627552032470703
    4. 'robot' → logprob: -11.877552032470703
    5. '       ' → logprob: -13.502552032470703
    6. '```' → logprob: -14.377552032470703
    7. 'rob' → logprob: -14.627552032470703
    8. '    
' → logprob: -15.002552032470703
    9. '
' → logprob: -15.127552032470703
    10. ' ' → logprob: -16.752552032470703

Token 79: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011222648434340954
    2. ' =' → logprob: -4.636222839355469
    3. '=' → logprob: -6.636222839355469
    4. '.append' → logprob: -9.011222839355469
    5. ')' → logprob: -11.261222839355469
    6. '_' → logprob: -12.261222839355469
    7. '.' → logprob: -12.886222839355469
    8. ' s' → logprob: -13.136222839355469
    9. ' ' → logprob: -13.386222839355469
    10. '   ' → logprob: -13.511222839355469

Token 80: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.12693114578723907
    2. ' compute' → logprob: -2.1269311904907227
    3. '.compute' → logprob: -14.251931190490723
    4. '(com' → logprob: -14.376931190490723
    5. 'computer' → logprob: -14.376931190490723
    6. '_compute' → logprob: -15.001931190490723
    7. ')' → logprob: -15.126931190490723
    8. 'append' → logprob: -15.501931190490723
    9. ' ' → logprob: -16.001930236816406
    10. '   ' → logprob: -16.126930236816406

Token 81: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -0.0001029471677611582
    2. '_' → logprob: -9.250102996826172
    3. '_inter' → logprob: -12.125102996826172
    4. '(interval' → logprob: -14.500102996826172
    5. '_robot' → logprob: -14.625102996826172
    6. 'interval' → logprob: -15.625102996826172
    7. '(' → logprob: -16.500102996826172
    8. '_(' → logprob: -16.875102996826172
    9. '_in' → logprob: -17.250102996826172
    10. ' _' → logprob: -18.000102996826172

Token 82: '(robot' (ID: 166887)
  Prédit: '(robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(robot' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. '(ro' → logprob: -14.375262260437012
    4. 'robot' → logprob: -16.625261306762695
    5. '(
' → logprob: -16.750261306762695
    6. '(bot' → logprob: -18.125261306762695
    7. ')' → logprob: -18.250261306762695
    8. '(room' → logprob: -19.250261306762695
    9. ' (' → logprob: -19.750261306762695
    10. '.robot' → logprob: -19.875261306762695

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029847679659724236
    2. ')
' → logprob: -3.5298476219177246
    3. ')
' → logprob: -9.529848098754883
    4. '       ' → logprob: -10.904848098754883
    5. '   ' → logprob: -12.904848098754883
    6. ')

' → logprob: -13.154848098754883
    7. '()' → logprob: -14.404848098754883
    8. ' )' → logprob: -14.654848098754883
    9. ' ' → logprob: -15.154848098754883
    10. '))' → logprob: -16.654848098754883

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022410124074667692
    2. 'robots' → logprob: -6.752241134643555
    3. '   ' → logprob: -7.002241134643555
    4. ' robots' → logprob: -9.127241134643555
    5. '<|end|>' → logprob: -11.002241134643555
    6. '        
' → logprob: -11.877241134643555
    7. '	' → logprob: -12.002241134643555
    8. '```' → logprob: -12.627241134643555
    9. ',' → logprob: -13.002241134643555
    10. '
' → logprob: -13.127241134643555

Token 85: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.03206280246376991
    2. ' robots' → logprob: -3.6570627689361572
    3. '   ' → logprob: -5.282063007354736
    4. '       ' → logprob: -7.532063007354736
    5. '```' → logprob: -10.657062530517578
    6. 'robot' → logprob: -10.782062530517578
    7. 'rob' → logprob: -11.157062530517578
    8. ' ' → logprob: -11.282062530517578
    9. '
' → logprob: -11.532062530517578
    10. 'ro' → logprob: -12.032062530517578

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029806500300765038
    2. '.' → logprob: -3.529806613922119
    3. '.app' → logprob: -10.404806137084961
    4. '.ap' → logprob: -11.404806137084961
    5. '.add' → logprob: -12.404806137084961
    6. '.extend' → logprob: -12.779806137084961
    7. ' .' → logprob: -13.404806137084961
    8. '.setdefault' → logprob: -13.654806137084961
    9. '<|end|>' → logprob: -13.779806137084961
    10. '.py' → logprob: -14.029806137084961

Token 87: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.000006675720215
    3. '((' → logprob: -14.750006675720215
    4. ' (' → logprob: -17.6250057220459
    5. 'interval' → logprob: -18.5000057220459
    6. '(inter' → logprob: -18.8750057220459
    7. '(
' → logprob: -19.6250057220459
    8. ' interval' → logprob: -21.2500057220459
    9. '(i' → logprob: -21.6250057220459
    10. '(invoice' → logprob: -21.8750057220459

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07897394895553589
    2. ')
' → logprob: -2.5789740085601807
    3. '   ' → logprob: -9.578973770141602
    4. ')
' → logprob: -12.078973770141602
    5. ')

' → logprob: -12.203973770141602
    6. '
' → logprob: -13.453973770141602
    7. ')return' → logprob: -13.953973770141602
    8. ' ' → logprob: -14.953973770141602
    9. ' )' → logprob: -14.953973770141602
    10. '()' → logprob: -15.453973770141602

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05849652364850044
    2. 'return' → logprob: -3.1834964752197266
    3. '
' → logprob: -4.683496475219727
    4. ' return' → logprob: -5.683496475219727
    5. '    
' → logprob: -6.058496475219727
    6. '	return' → logprob: -8.808496475219727
    7. '```' → logprob: -9.558496475219727
    8. ' 
' → logprob: -9.933496475219727
    9. 'n' → logprob: -9.933496475219727
    10. '  
' → logprob: -11.183496475219727

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017285175621509552
    2. ' return' → logprob: -4.392285346984863
    3. '   ' → logprob: -5.392285346984863
    4. '
' → logprob: -10.017285346984863
    5. '```' → logprob: -10.017285346984863
    6. '    
' → logprob: -10.142285346984863
    7. '	return' → logprob: -10.392285346984863
    8. ' ' → logprob: -10.642285346984863
    9. ' 
' → logprob: -11.767285346984863
    10. 'eturn' → logprob: -11.892285346984863

Token 91: ' robots' (ID: 47605)
  Prédit: ' robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robots' → logprob: -0.3868822753429413
    2. 'robots' → logprob: -1.1368823051452637
    3. ' intervals' → logprob: -11.886881828308105
    4. 'interval' → logprob: -13.511881828308105
    5. 'robot' → logprob: -13.886881828308105
    6. ' ' → logprob: -14.011881828308105
    7. 'rob' → logprob: -14.511881828308105
    8. ' rob' → logprob: -15.386881828308105
    9. ' ' → logprob: -15.886881828308105
    10. ' sorted' → logprob: -16.261882781982422

Token 92: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0164345595985651
    2. '<|end|>' → logprob: -4.766434669494629
    3. '

' → logprob: -5.391434669494629
    4. '
' → logprob: -6.391434669494629
    5. '```' → logprob: -7.016434669494629
    6. 'robots' → logprob: -7.891434669494629
    7. '<|end|>' → logprob: -9.266434669494629
    8. '#' → logprob: -10.266434669494629
    9. 'n' → logprob: -10.516434669494629
    10. 'import' → logprob: -11.141434669494629

Token 93: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.895480277715251e-06
    2. 'robots' → logprob: -12.250008583068848
    3. '```' → logprob: -13.125008583068848
    4. 'n' → logprob: -14.125008583068848
    5. 'from' → logprob: -14.375008583068848
    6. ' def' → logprob: -15.750008583068848
    7. 'ndef' → logprob: -15.875008583068848
    8. 'import' → logprob: -16.250009536743164
    9. '    
' → logprob: -16.625009536743164
    10. '
' → logprob: -16.625009536743164

Token 94: ' sort' (ID: 4506)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8974465131759644
    2. 'max' → logprob: -1.1474465131759644
    3. 'maximize' → logprob: -2.647446632385254
    4. 'remove' → logprob: -3.022446632385254
    5. ' main' → logprob: -3.522446632385254
    6. 'maximum' → logprob: -3.772446632385254
    7. 'find' → logprob: -4.022446632385254
    8. 'count' → logprob: -4.147446632385254
    9. 'solve' → logprob: -4.147446632385254
    10. 'min' → logprob: -4.897446632385254

Token 95: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47878891229629517
    2. '_inter' → logprob: -0.9787889122962952
    3. '_(' → logprob: -5.97878885269165
    4. '_ro' → logprob: -7.10378885269165
    5. '(' → logprob: -7.47878885269165
    6. '_robot' → logprob: -7.97878885269165
    7. 'robots' → logprob: -8.853789329528809
    8. '_interval' → logprob: -9.103789329528809
    9. '(interval' → logprob: -9.728789329528809
    10. '```' → logprob: -10.978789329528809

Token 96: 'robots' (ID: 136360)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.049862805753946304
    2. 'robots' → logprob: -3.049862861633301
    3. 'by' → logprob: -6.799862861633301
    4. 'rob' → logprob: -9.6748628616333
    5. 'robot' → logprob: -9.9248628616333
    6. 'inter' → logprob: -10.7998628616333
    7. '```' → logprob: -12.2998628616333
    8. ' intervals' → logprob: -12.4248628616333
    9. '(interval' → logprob: -12.6748628616333
    10. 'and' → logprob: -13.0498628616333

Token 97: '_by' (ID: 8214)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012581470422446728
    2. '(interval' → logprob: -5.0125813484191895
    3. '(robot' → logprob: -5.2625813484191895
    4. '(ro' → logprob: -7.8875813484191895
    5. ' (' → logprob: -9.262581825256348
    6. '_by' → logprob: -10.262581825256348
    7. 'robots' → logprob: -10.512581825256348
    8. '_(' → logprob: -10.887581825256348
    9. '(inter' → logprob: -11.012581825256348
    10. '_' → logprob: -11.012581825256348

Token 98: '_end' (ID: 13707)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.04804828763008118
    2. '=lambda' → logprob: -3.423048257827759
    3. '(lambda' → logprob: -4.673048496246338
    4. ' lambda' → logprob: -6.423048496246338
    5. 'operator' → logprob: -6.923048496246338
    6. '_lambda' → logprob: -7.173048496246338
    7. '1' → logprob: -7.798048496246338
    8. 'interval' → logprob: -8.29804801940918
    9. '```' → logprob: -8.29804801940918
    10. '0' → logprob: -8.54804801940918

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09537647664546967
    2. '()' → logprob: -3.720376491546631
    3. '(points' → logprob: -3.720376491546631
    4. '_' → logprob: -4.845376491546631
    5. 'def' → logprob: -4.845376491546631
    6. '_points' → logprob: -5.345376491546631
    7. '```' → logprob: -5.470376491546631
    8. 'points' → logprob: -5.595376491546631
    9. '():' → logprob: -5.845376491546631
    10. '(robot' → logprob: -6.220376491546631

Token 100: 'robots' (ID: 136360)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043208710849285126
    2. 'interval' → logprob: -4.043208599090576
    3. '):' → logprob: -4.668208599090576
    4. 'robots' → logprob: -4.668208599090576
    5. '):
' → logprob: -5.918208599090576
    6. 'rob' → logprob: -7.043208599090576
    7. 'robot' → logprob: -7.168208599090576
    8. '   ' → logprob: -7.918208599090576
    9. '_' → logprob: -8.168209075927734
    10. '_interval' → logprob: -8.918209075927734

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010476192459464073
    2. '):
' → logprob: -4.635476112365723
    3. '(' → logprob: -7.885476112365723
    4. ')' → logprob: -8.885476112365723
    5. '):
' → logprob: -9.635476112365723
    6. ' ):' → logprob: -9.760476112365723
    7. '   ' → logprob: -10.135476112365723
    8. 'robots' → logprob: -11.010476112365723
    9. '(robot' → logprob: -12.385476112365723
    10. '_' → logprob: -12.635476112365723

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07182419300079346
    2. 'return' → logprob: -3.446824073791504
    3. ' return' → logprob: -3.946824073791504
    4. 'robots' → logprob: -4.071824073791504
    5. '    
' → logprob: -7.946824073791504
    6. ' robots' → logprob: -8.196824073791504
    7. 'sorted' → logprob: -8.446824073791504
    8. '
' → logprob: -8.821824073791504
    9. '```' → logprob: -10.196824073791504
    10. ' sorted' → logprob: -10.696824073791504

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013434205204248428
    2. 'sorted' → logprob: -5.013434410095215
    3. 'robots' → logprob: -5.513434410095215
    4. ' return' → logprob: -6.013434410095215
    5. '   ' → logprob: -8.513434410095215
    6. ' sorted' → logprob: -11.263434410095215
    7. ' robots' → logprob: -13.263434410095215
    8. '```' → logprob: -13.388434410095215
    9. 'robot' → logprob: -14.388434410095215
    10. 'sort' → logprob: -14.513434410095215

Token 104: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.10020763427019119
    2. ' sorted' → logprob: -2.350207567214966
    3. '(sorted' → logprob: -14.350207328796387
    4. '   ' → logprob: -14.850207328796387
    5. ' ' → logprob: -17.475208282470703
    6. '.sorted' → logprob: -18.350208282470703
    7. '  ' → logprob: -18.600208282470703
    8. 'sort' → logprob: -19.100208282470703
    9. 'Sorted' → logprob: -20.475208282470703
    10. ' ' → logprob: -20.600208282470703

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.065608562901616e-05
    2. 'robots' → logprob: -9.625081062316895
    3. '(robot' → logprob: -11.250081062316895
    4. '(
' → logprob: -14.375081062316895
    5. '```' → logprob: -15.625081062316895
    6. 'rob' → logprob: -15.750081062316895
    7. ' (' → logprob: -15.750081062316895
    8. '(lambda' → logprob: -16.375080108642578
    9. '_robot' → logprob: -16.875080108642578
    10. '((' → logprob: -17.000080108642578

Token 106: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -4.246537173457909e-06
    2. ' robots' → logprob: -13.125003814697266
    3. 'robot' → logprob: -13.250003814697266
    4. 'rob' → logprob: -15.125003814697266
    5. '```' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '[' → logprob: -18.125003814697266
    8. ')' → logprob: -18.625003814697266
    9. 'routers' → logprob: -18.875003814697266
    10. 'interval' → logprob: -18.875003814697266

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020824549719691277
    2. ',key' → logprob: -6.252082347869873
    3. 'key' → logprob: -9.002082824707031
    4. ' ,' → logprob: -10.627082824707031
    5. ' key' → logprob: -12.252082824707031
    6. '   ' → logprob: -13.377082824707031
    7. 'lambda' → logprob: -16.25208282470703
    8. '(key' → logprob: -17.75208282470703
    9. '),' → logprob: -18.00208282470703
    10. ')' → logprob: -18.12708282470703

Token 108: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.000327956018736586
    2. ' key' → logprob: -8.500328063964844
    3. 'lambda' → logprob: -9.000328063964844
    4. '   ' → logprob: -14.000328063964844
    5. ',key' → logprob: -15.875328063964844
    6. ' lambda' → logprob: -16.875328063964844
    7. '	key' → logprob: -16.875328063964844
    8. '(key' → logprob: -16.875328063964844
    9. ':key' → logprob: -19.500328063964844
    10. '[key' → logprob: -19.750328063964844

Token 109: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.1270371973514557
    2. '=' → logprob: -2.127037286758423
    3. 'lambda' → logprob: -9.127037048339844
    4. ' lambda' → logprob: -15.627037048339844
    5. '=
' → logprob: -16.627037048339844
    6. '_lambda' → logprob: -17.377037048339844
    7. '```' → logprob: -17.627037048339844
    8. '=

' → logprob: -17.877037048339844
    9. '(lambda' → logprob: -18.127037048339844
    10. '=l' → logprob: -18.502037048339844

Token 110: ' x' (ID: 1215)
  Prédit: ' interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.37230995297431946
    2. ' robot' → logprob: -1.872309923171997
    3. ' x' → logprob: -2.122309923171997
    4. 'interval' → logprob: -3.747309923171997
    5. 'robot' → logprob: -4.872310161590576
    6. ' r' → logprob: -5.622310161590576
    7. 'x' → logprob: -7.122310161590576
    8. ' i' → logprob: -7.497310161590576
    9. ' rob' → logprob: -7.747310161590576
    10. 'rob' → logprob: -8.497309684753418

Token 111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004884536610916257
    2. ':x' → logprob: -8.25048828125
    3. ' :' → logprob: -8.50048828125
    4. 'x' → logprob: -11.62548828125
    5. '[' → logprob: -11.75048828125
    6. ' x' → logprob: -12.00048828125
    7. '   ' → logprob: -15.12548828125
    8. ' ' → logprob: -15.37548828125
    9. '1' → logprob: -16.37548828125
    10. '  ' → logprob: -16.37548828125

Token 112: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692958116531372
    2. ' x' → logprob: -2.126929521560669
    3. '1' → logprob: -14.25192928314209
    4. 'lambda' → logprob: -14.62692928314209
    5. ' lambda' → logprob: -15.62692928314209
    6. '	x' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.876930236816406
    8. '[' → logprob: -17.501930236816406
    9. '   ' → logprob: -17.751930236816406
    10. '0' → logprob: -18.751930236816406

Token 113: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.028536492725834e-05
    2. '1' → logprob: -10.125070571899414
    3. ' [' → logprob: -10.500070571899414
    4. ')' → logprob: -13.750070571899414
    5. ')[' → logprob: -14.750070571899414
    6. '[-' → logprob: -15.000070571899414
    7. '][' → logprob: -15.500070571899414
    8. ':' → logprob: -15.500070571899414
    9. '\[' → logprob: -15.750070571899414
    10. ']' → logprob: -16.250070571899414

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '-' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '0' → logprob: -15.625000953674316
    5. '```' → logprob: -15.625000953674316
    6. ']' → logprob: -16.187501907348633
    7. '   ' → logprob: -16.437501907348633
    8. '' → logprob: -17.062501907348633
    9. ')' → logprob: -17.625001907348633
    10. '[' → logprob: -17.750001907348633

Token 115: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. '))' → logprob: -10.625031471252441
    3. ' )' → logprob: -12.250031471252441
    4. '})' → logprob: -13.500031471252441
    5. ')
' → logprob: -15.250031471252441
    6. '])' → logprob: -15.750031471252441
    7. ')}' → logprob: -15.750031471252441
    8. '())' → logprob: -16.250030517578125
    9. ')return' → logprob: -16.625030517578125
    10. '}' → logprob: -16.875030517578125

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01723209023475647
    2. '
' → logprob: -4.1422319412231445
    3. '

' → logprob: -6.7672319412231445
    4. '```' → logprob: -10.392231941223145
    5. ' def' → logprob: -12.017231941223145
    6. '<|end|>' → logprob: -12.267231941223145
    7. '
' → logprob: -13.267231941223145
    8. 'ndef' → logprob: -14.017231941223145
    9. '``' → logprob: -14.767231941223145
    10. '\' → logprob: -14.892231941223145

Token 117: ' first' (ID: 1577)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46466726064682007
    2. ' max' → logprob: -1.3396673202514648
    3. 'select' → logprob: -3.839667320251465
    4. ' find' → logprob: -4.214667320251465
    5. ' main' → logprob: -4.464667320251465
    6. ' select' → logprob: -4.464667320251465
    7. 'main' → logprob: -4.464667320251465
    8. 'find' → logprob: -4.589667320251465
    9. 'maximum' → logprob: -4.839667320251465
    10. 'maximize' → logprob: -5.214667320251465

Token 118: '_robot' (ID: 152478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0539779663085938
    2. '_interval' → logprob: -1.6789779663085938
    3. '_non' → logprob: -2.0539779663085938
    4. '_robot' → logprob: -2.1789779663085938
    5. '_inter' → logprob: -2.4289779663085938
    6. '_selected' → logprob: -2.9289779663085938
    7. '_choice' → logprob: -3.9289779663085938
    8. '_max' → logprob: -4.678977966308594
    9. '_selection' → logprob: -5.678977966308594
    10. '_end' → logprob: -5.803977966308594

Token 119: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.896560549736023
    2. '_' → logprob: -1.646560549736023
    3. '_selected' → logprob: -1.646560549736023
    4. '(' → logprob: -2.1465606689453125
    5. '_end' → logprob: -3.8965606689453125
    6. '_interval' → logprob: -4.3965606689453125
    7. '_inter' → logprob: -4.8965606689453125
    8. '_selection' → logprob: -5.1465606689453125
    9. '_to' → logprob: -5.3965606689453125
    10. '_robot' → logprob: -5.3965606689453125

Token 120: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.08337299525737762
    2. 'interval' → logprob: -3.0833730697631836
    3. ')' → logprob: -3.5833730697631836
    4. 'rob' → logprob: -6.333373069763184
    5. ' robots' → logprob: -6.458373069763184
    6. 'robot' → logprob: -7.083373069763184
    7. ' intervals' → logprob: -7.583373069763184
    8. ' )' → logprob: -7.958373069763184
    9. '):' → logprob: -8.833373069763184
    10. ' ' → logprob: -8.958373069763184

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034893216798081994
    2. ')' → logprob: -8.125349044799805
    3. '):
' → logprob: -10.125349044799805
    4. '[' → logprob: -12.125349044799805
    5. ' ):' → logprob: -12.875349044799805
    6. '[]):' → logprob: -13.125349044799805
    7. '):
' → logprob: -13.750349044799805
    8. ':' → logprob: -14.875349044799805
    9. '   ' → logprob: -14.875349044799805
    10. ']:' → logprob: -15.000349044799805

Token 122: '   ' (ID: 271)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.791031002998352
    2. 'return' → logprob: -1.291031002998352
    3. 'if' → logprob: -2.0410308837890625
    4. '   ' → logprob: -2.1660308837890625
    5. 'def' → logprob: -4.4160308837890625
    6. '(' → logprob: -4.7910308837890625
    7. 'interval' → logprob: -6.4160308837890625
    8. ' robots' → logprob: -7.1660308837890625
    9. ' if' → logprob: -7.2910308837890625
    10. '(
' → logprob: -7.4160308837890625

Token 123: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9159671664237976
    2. 'robots' → logprob: -1.5409672260284424
    3. 'if' → logprob: -1.6659672260284424
    4. ' return' → logprob: -2.2909672260284424
    5. ' if' → logprob: -2.6659672260284424
    6. '   ' → logprob: -4.665966987609863
    7. ' robots' → logprob: -4.665966987609863
    8. 'interval' → logprob: -6.040966987609863
    9. 'max' → logprob: -6.290966987609863
    10. '0' → logprob: -7.165966987609863

Token 124: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.08173631131649017
    2. ' robots' → logprob: -2.5817363262176514
    3. '0' → logprob: -5.956736087799072
    4. ' ' → logprob: -9.20673656463623
    5. 'rob' → logprob: -10.20673656463623
    6. '(' → logprob: -10.45673656463623
    7. ' (' → logprob: -11.08173656463623
    8. ' None' → logprob: -11.20673656463623
    9. 'robot' → logprob: -11.45673656463623
    10. '   ' → logprob: -11.83173656463623

Token 125: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1756367712223437e-05
    2. '0' → logprob: -11.750011444091797
    3. ' [' → logprob: -13.250011444091797
    4. 'def' → logprob: -14.250011444091797
    5. '```' → logprob: -14.750011444091797
    6. '   ' → logprob: -15.250011444091797
    7. '\[' → logprob: -15.500011444091797
    8. ' ' → logprob: -15.625011444091797
    9. '[:' → logprob: -16.250011444091797
    10. '[
' → logprob: -17.125011444091797

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -11.125024795532227
    3. '-' → logprob: -12.500024795532227
    4. '1' → logprob: -13.937524795532227
    5. ']' → logprob: -14.187524795532227
    6. ')' → logprob: -14.187524795532227
    7. '[' → logprob: -14.625024795532227
    8. ':' → logprob: -14.937524795532227
    9. '])' → logprob: -15.125024795532227
    10. '   ' → logprob: -15.250024795532227

Token 127: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6727598905563354
    2. ']' → logprob: -1.1727598905563354
    3. '][' → logprob: -1.7977598905563354
    4. '])' → logprob: -4.547760009765625
    5. ')[' → logprob: -5.672760009765625
    6. '[' → logprob: -8.047760009765625
    7. ')][' → logprob: -9.922760009765625
    8. ')]' → logprob: -10.047760009765625
    9. '])[' → logprob: -10.047760009765625
    10. ' )' → logprob: -11.672760009765625

Token 128: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035906085395254195
    2. '<|end|>' → logprob: -8.500359535217285
    3. '
' → logprob: -9.500359535217285
    4. '

' → logprob: -10.625359535217285
    5. ' def' → logprob: -11.000359535217285
    6. '<|end|>' → logprob: -11.500359535217285
    7. '```' → logprob: -12.125359535217285
    8. '#' → logprob: -12.750359535217285
    9. '_' → logprob: -12.750359535217285
    10. '_def' → logprob: -12.875359535217285

Token 129: ' can' (ID: 665)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5395945310592651
    2. ' max' → logprob: -1.6645945310592651
    3. ' second' → logprob: -2.9145946502685547
    4. 'second' → logprob: -2.9145946502685547
    5. ' select' → logprob: -3.0395946502685547
    6. ' maximum' → logprob: -3.2895946502685547
    7. ' best' → logprob: -3.4145946502685547
    8. ' can' → logprob: -3.4145946502685547
    9. 'select' → logprob: -3.6645946502685547
    10. 'maximum' → logprob: -3.6645946502685547

Token 130: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.8867648839950562
    2. '_' → logprob: -1.7617648839950562
    3. '_use' → logprob: -2.2617650032043457
    4. '_choose' → logprob: -2.3867650032043457
    5. '_continue' → logprob: -3.2617650032043457
    6. '_take' → logprob: -3.5117650032043457
    7. '_include' → logprob: -3.5117650032043457
    8. '_keep' → logprob: -3.8867650032043457
    9. '_select' → logprob: -4.011765003204346
    10. '_remove' → logprob: -4.386765003204346

Token 131: '(prev' (ID: 59594)
  Prédit: '_robot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_robot' → logprob: -1.0905832052230835
    2. '(robot' → logprob: -1.0905832052230835
    3. '(' → logprob: -1.4655832052230835
    4. '_' → logprob: -2.465583324432373
    5. '_next' → logprob: -5.215583324432373
    6. '_space' → logprob: -6.340583324432373
    7. '_ro' → logprob: -7.965583324432373
    8. '(_' → logprob: -8.090582847595215
    9. '(space' → logprob: -8.090582847595215
    10. '_out' → logprob: -8.215582847595215

Token 132: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.43318524956703186
    2. ',' → logprob: -1.0581852197647095
    3. '_' → logprob: -6.05818510055542
    4. '_,' → logprob: -7.18318510055542
    5. '_interval' → logprob: -7.55818510055542
    6. ' ,' → logprob: -7.93318510055542
    7. '(robot' → logprob: -8.933185577392578
    8. ',_' → logprob: -9.933185577392578
    9. 'robot' → logprob: -9.933185577392578
    10. ' robot' → logprob: -10.183185577392578

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006852717488072813
    2. ' ,' → logprob: -8.250685691833496
    3. '_,' → logprob: -8.875685691833496
    4. '_robot' → logprob: -9.000685691833496
    5. ',current' → logprob: -10.125685691833496
    6. ',new' → logprob: -10.375685691833496
    7. ',_' → logprob: -11.125685691833496
    8. 'robot' → logprob: -11.625685691833496
    9. '_end' → logprob: -11.750685691833496
    10. ',next' → logprob: -12.250685691833496

Token 134: ' curr' (ID: 10495)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.4490699768066406
    2. ' curr' → logprob: -1.5740699768066406
    3. 'current' → logprob: -2.6990699768066406
    4. 'curr' → logprob: -3.3240699768066406
    5. ' next' → logprob: -3.6990699768066406
    6. ' robot' → logprob: -4.324069976806641
    7. 'next' → logprob: -5.199069976806641
    8. ' cur' → logprob: -5.949069976806641
    9. ' new' → logprob: -6.199069976806641
    10. 'robot' → logprob: -6.449069976806641

Token 135: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.006197299342602491
    2. 'ent' → logprob: -5.131197452545166
    3. 'robot' → logprob: -8.756196975708008
    4. '_' → logprob: -10.131196975708008
    5. ')_' → logprob: -10.881196975708008
    6. '_ro' → logprob: -11.256196975708008
    7. '_bot' → logprob: -11.756196975708008
    8. ')' → logprob: -11.756196975708008
    9. 'obot' → logprob: -11.881196975708008
    10. 'er' → logprob: -13.256196975708008

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018363336857873946
    2. '):
' → logprob: -8.750184059143066
    3. ')' → logprob: -10.750184059143066
    4. ' ):' → logprob: -13.125184059143066
    5. '):
' → logprob: -13.625184059143066
    6. ':' → logprob: -15.375184059143066
    7. ',' → logprob: -16.00018310546875
    8. '   ' → logprob: -17.12518310546875
    9. '):

' → logprob: -17.12518310546875
    10. '():' → logprob: -17.50018310546875

Token 137: '   ' (ID: 271)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -1.3430569171905518
    2. '   ' → logprob: -1.4680569171905518
    3. 'curr' → logprob: -1.7180569171905518
    4. ' return' → logprob: -2.5930569171905518
    5. ' curr' → logprob: -2.5930569171905518
    6. 'prev' → logprob: -2.7180569171905518
    7. 'return' → logprob: -4.093056678771973
    8. '):' → logprob: -4.093056678771973
    9. '):
' → logprob: -4.218056678771973
    10. '<|end|>' → logprob: -4.218056678771973

Token 138: ' return' (ID: 622)
  Prédit: ' prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.5281137824058533
    2. 'prev' → logprob: -1.153113842010498
    3. 'curr' → logprob: -3.278113842010498
    4. ' return' → logprob: -3.528113842010498
    5. ' curr' → logprob: -4.528113842010498
    6. 'return' (adapté à ' return') → logprob: -4.653113842010498
    7. '_prev' → logprob: -5.778113842010498
    8. '   ' → logprob: -6.153113842010498
    9. '_' → logprob: -7.153113842010498
    10. '_,' → logprob: -8.40311336517334

Token 139: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6620003581047058
    2. 'curr' → logprob: -1.5370004177093506
    3. ' prev' → logprob: -1.6620004177093506
    4. ' curr' → logprob: -2.5370004177093506
    5. '(prev' → logprob: -9.59950065612793
    6. '	prev' → logprob: -9.66200065612793
    7. '(curr' → logprob: -9.97450065612793
    8. '	curr' → logprob: -11.09950065612793
    9. 'robot' → logprob: -11.28700065612793
    10. '   ' → logprob: -11.34950065612793

Token 140: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -1.1875571544806007e-05
    2. 'robot' → logprob: -11.500011444091797
    3. '[' → logprob: -13.625011444091797
    4. ' robot' → logprob: -16.625011444091797
    5. '.robot' → logprob: -16.625011444091797
    6. '```' → logprob: -16.625011444091797
    7. '(robot' → logprob: -17.125011444091797
    8. '_' → logprob: -17.250011444091797
    9. '_router' → logprob: -17.500011444091797
    10. '_ro' → logprob: -17.500011444091797

Token 141: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.670925358776003e-05
    2. '][' → logprob: -10.625066757202148
    3. ' [' → logprob: -11.375066757202148
    4. ')' → logprob: -11.500066757202148
    5. ')[' → logprob: -11.625066757202148
    6. '```' → logprob: -12.250066757202148
    7. 's' → logprob: -13.000066757202148
    8. '()[' → logprob: -14.125066757202148
    9. ']' → logprob: -14.375066757202148
    10. 'def' → logprob: -14.812566757202148

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -14.62500286102295
    3. '
' → logprob: -14.62500286102295
    4. ' ' → logprob: -15.37500286102295
    5. '

' → logprob: -15.62500286102295
    6. '   ' → logprob: -15.62500286102295
    7. ')' → logprob: -15.62500286102295
    8. '```' → logprob: -15.62500286102295
    9. ']' → logprob: -15.75000286102295
    10. '>' → logprob: -15.75000286102295

Token 143: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.25633442401885986
    2. ' <=' → logprob: -2.0063343048095703
    3. ')' → logprob: -3.0063343048095703
    4. ']' → logprob: -3.7563343048095703
    5. '<' → logprob: -4.63133430480957
    6. ')<=' → logprob: -5.63133430480957
    7. ']<=' → logprob: -5.75633430480957
    8. ' <' → logprob: -7.50633430480957
    9. ' ' → logprob: -7.63133430480957
    10. '}' → logprob: -8.25633430480957

Token 144: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03285179287195206
    2. '<' → logprob: -3.7828516960144043
    3. ' <=' → logprob: -4.657851696014404
    4. ' <' → logprob: -9.907852172851562
    5. '≤' → logprob: -12.282852172851562
    6. '[' → logprob: -12.407852172851562
    7. ')<=' → logprob: -13.157852172851562
    8. ' ' → logprob: -13.407852172851562
    9. '>' → logprob: -13.657852172851562
    10. '

' → logprob: -13.657852172851562

Token 145: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.11291079223155975
    2. 'curr' → logprob: -2.237910747528076
    3. '(curr' → logprob: -10.487911224365234
    4. ' ' → logprob: -10.612911224365234
    5. '	curr' → logprob: -10.987911224365234
    6. '[curr' → logprob: -11.237911224365234
    7. '_curr' → logprob: -13.112911224365234
    8. '.curr' → logprob: -13.612911224365234
    9. 'c' → logprob: -14.737911224365234
    10. '0' → logprob: -14.862911224365234

Token 146: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.003986742813140154
    2. 't' → logprob: -6.378986835479736
    3. 'robot' → logprob: -6.503986835479736
    4. 'ot' → logprob: -7.628986835479736
    5. 'ent' → logprob: -8.878986358642578
    6. 'obot' → logprob: -9.253986358642578
    7. '_bot' → logprob: -10.753986358642578
    8. '[' → logprob: -11.378986358642578
    9. 'ant' → logprob: -12.378986358642578
    10. '.robot' → logprob: -12.503986358642578

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012291580205783248
    2. '0' → logprob: -6.751229286193848
    3. ' [' → logprob: -10.376229286193848
    4. ' ' → logprob: -11.626229286193848
    5. '(' → logprob: -12.001229286193848
    6. '[
' → logprob: -12.876229286193848
    7. '.' → logprob: -13.501229286193848
    8. 'curr' → logprob: -13.626229286193848
    9. ')' → logprob: -13.813729286193848
    10. '1' → logprob: -13.813729286193848

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.250017166137695
    3. '[' → logprob: -13.000017166137695
    4. '۰' → logprob: -14.812517166137695
    5. '   ' → logprob: -15.437517166137695
    6. '```' → logprob: -15.750017166137695
    7. '٠' → logprob: -16.812517166137695
    8. '
' → logprob: -16.812517166137695
    9. '  ' → logprob: -16.937517166137695
    10. '‌' → logprob: -17.312517166137695

Token 149: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.959636033978313e-05
    2. ' )' → logprob: -9.375089645385742
    3. ')
' → logprob: -12.875089645385742
    4. '<|end|>' → logprob: -13.625089645385742
    5. '}' → logprob: -15.125089645385742
    6. ' ' → logprob: -15.750089645385742
    7. ')

' → logprob: -15.875089645385742
    8. ')return' → logprob: -16.125089645385742
    9. '   ' → logprob: -16.500089645385742
    10. ']' → logprob: -16.875089645385742

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -15.500000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. '#' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. 'ndef' → logprob: -18.25
    7. 'for' → logprob: -19.125
    8. 'from' → logprob: -19.25
    9. 'robots' → logprob: -19.75
    10. '    
' → logprob: -19.875

Token 151: ' count' (ID: 3605)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.09513978660106659
    2. 'max' → logprob: -3.595139741897583
    3. ' main' → logprob: -3.845139741897583
    4. ' maximum' → logprob: -3.970139741897583
    5. ' place' → logprob: -4.845139980316162
    6. ' find' → logprob: -5.220139980316162
    7. ' maximize' → logprob: -5.970139980316162
    8. ' select' → logprob: -6.345139980316162
    9. ' maximal' → logprob: -6.595139980316162
    10. ' solve' → logprob: -7.470139980316162

Token 152: '_non' (ID: 52193)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04955563694238663
    2. '_inter' → logprob: -4.174555778503418
    3. '_non' → logprob: -4.174555778503418
    4. '_visible' → logprob: -5.299555778503418
    5. '_max' → logprob: -6.049555778503418
    6. '_safe' → logprob: -6.049555778503418
    7. '_over' → logprob: -6.674555778503418
    8. '(' → logprob: -7.049555778503418
    9. 'robots' → logprob: -7.174555778503418
    10. '_robot' → logprob: -7.299555778503418

Token 153: '_over' (ID: 34788)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.695019006729126
    2. '_over' → logprob: -0.695019006729126
    3. '_overlap' → logprob: -6.445018768310547
    4. '_inter' → logprob: -9.445018768310547
    5. '_cross' → logprob: -9.820018768310547
    6. '-over' → logprob: -9.945018768310547
    7. 'cross' → logprob: -10.070018768310547
    8. 'inter' → logprob: -10.445018768310547
    9. ' overlapping' → logprob: -11.445018768310547
    10. '_conf' → logprob: -11.570018768310547

Token 154: 'lapping' (ID: 152588)
  Prédit: 'apping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apping' → logprob: -0.12302511185407639
    2. 'lapping' → logprob: -2.2480251789093018
    3. 'aping' → logprob: -5.123024940490723
    4. 'ap' → logprob: -5.623024940490723
    5. 'app' → logprob: -8.873024940490723
    6. 'apped' → logprob: -8.873024940490723
    7. 'lap' → logprob: -9.748024940490723
    8. 'a' → logprob: -9.748024940490723
    9. '
' → logprob: -9.998024940490723
    10. 'l' → logprob: -10.248024940490723

Token 155: '_' (ID: 62)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4077284336090088
    2. '_' → logprob: -1.2827284336090088
    3. '_inter' → logprob: -2.907728433609009
    4. ' (' → logprob: -7.78272819519043
    5. '(_' → logprob: -7.78272819519043
    6. '_(' → logprob: -7.90772819519043
    7. '(interval' → logprob: -8.03272819519043
    8. 'robots' → logprob: -8.15772819519043
    9. '_segments' → logprob: -8.28272819519043
    10. '_ro' → logprob: -8.40772819519043

Token 156: 'robots' (ID: 136360)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.14449486136436462
    2. 'robots' → logprob: -2.0194947719573975
    3. 'segments' → logprob: -6.644495010375977
    4. 'rob' → logprob: -8.644495010375977
    5. 'sub' → logprob: -9.394495010375977
    6. 'robot' → logprob: -9.644495010375977
    7. 'inter' → logprob: -9.769495010375977
    8. '(interval' → logprob: -9.894495010375977
    9. ' intervals' → logprob: -11.644495010375977
    10. 'pairs' → logprob: -11.769495010375977

Token 157: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. ' (' → logprob: -13.25000286102295
    3. '(robot' → logprob: -14.87500286102295
    4. '(sorted' → logprob: -15.00000286102295
    5. '(ro' → logprob: -16.125001907348633
    6. '(r' → logprob: -17.125001907348633
    7. '(interval' → logprob: -17.750001907348633
    8. '(def' → logprob: -18.000001907348633
    9. '(n' → logprob: -18.125001907348633
    10. '(s' → logprob: -18.625001907348633

Token 158: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.00016861737822182477
    2. ' robots' → logprob: -9.000168800354004
    3. ')' → logprob: -10.875168800354004
    4. 'rob' → logprob: -11.125168800354004
    5. '):
' → logprob: -12.750168800354004
    6. '   ' → logprob: -12.875168800354004
    7. 'robot' → logprob: -13.875168800354004
    8. 'robes' → logprob: -14.000168800354004
    9. 'routers' → logprob: -14.000168800354004
    10. '```' → logprob: -14.375168800354004

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -7.314625690924004e-05
    2. '):
' → logprob: -9.625073432922363
    3. ')' → logprob: -12.375073432922363
    4. ' ):' → logprob: -13.500073432922363
    5. '):
' → logprob: -14.375073432922363
    6. ':' → logprob: -14.750073432922363
    7. '   ' → logprob: -15.750073432922363
    8. ']:' → logprob: -16.000072479248047
    9. '[]):' → logprob: -16.625072479248047
    10. '):

' → logprob: -17.000072479248047

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002905920147895813
    2. ' robots' → logprob: -6.75290584564209
    3. 'robots' → logprob: -7.25290584564209
    4. '    
' → logprob: -7.37790584564209
    5. ' sorted' → logprob: -8.12790584564209
    6. 'sorted' → logprob: -9.75290584564209
    7. '
' → logprob: -10.87790584564209
    8. '```' → logprob: -11.62790584564209
    9. 'def' → logprob: -12.50290584564209
    10. '(sorted' → logprob: -13.25290584564209

Token 161: ' count' (ID: 3605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.9941964745521545
    2. ' sorted' → logprob: -1.4941964149475098
    3. 'sorted' → logprob: -1.7441964149475098
    4. ' robots' → logprob: -1.9941964149475098
    5. '   ' → logprob: -2.4941964149475098
    6. ' if' → logprob: -5.11919641494751
    7. ' count' → logprob: -6.11919641494751
    8. 'count' (adapté à ' count') → logprob: -6.61919641494751
    9. 'if' → logprob: -6.99419641494751
    10. ' n' → logprob: -7.99419641494751

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019311357755213976
    2. '=' → logprob: -6.251931190490723
    3. ' ' → logprob: -13.251931190490723
    4. ',' → logprob: -14.751931190490723
    5. '   ' → logprob: -15.251931190490723
    6. ' +=' → logprob: -16.251930236816406
    7. ' =
' → logprob: -17.001930236816406
    8. '  ' → logprob: -17.126930236816406
    9. ' =)' → logprob: -18.876930236816406
    10. ' ' → logprob: -19.251930236816406

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00952219869941473
    2. ' ' → logprob: -4.884521961212158
    3. '1' → logprob: -6.259521961212158
    4. '   ' → logprob: -13.509522438049316
    5. 'len' → logprob: -15.009522438049316
    6. '  ' → logprob: -16.072021484375
    7. '```' → logprob: -16.322021484375
    8. ' ' → logprob: -16.822021484375
    9. '۰' → logprob: -17.884521484375
    10. ',' → logprob: -17.947021484375

Token 164: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001506528351455927
    2. '1' → logprob: -6.501506328582764
    3. ' ' → logprob: -12.501506805419922
    4. 'len' → logprob: -14.751506805419922
    5. '   ' → logprob: -17.001506805419922
    6. '```' → logprob: -17.001506805419922
    7. '  ' → logprob: -18.626506805419922
    8. '۰' → logprob: -19.189006805419922
    9. '`' → logprob: -19.689006805419922
    10. '``' → logprob: -19.751506805419922

Token 165: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0003460712905507535
    2. '
' → logprob: -8.750346183776855
    3. '   ' → logprob: -9.250346183776855
    4. '    
' → logprob: -9.500346183776855
    5. 'prev' → logprob: -12.375346183776855
    6. ' last' → logprob: -12.500346183776855
    7. ' 
' → logprob: -12.875346183776855
    8. 'last' → logprob: -13.625346183776855
    9. ' prev' → logprob: -13.750346183776855
    10. '   
' → logprob: -13.750346183776855

Token 166: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2752939462661743
    2. ' last' → logprob: -2.4002938270568848
    3. '   ' → logprob: -2.5252938270568848
    4. ' prev' → logprob: -3.2752938270568848
    5. 'prev' → logprob: -3.9002938270568848
    6. 'last' → logprob: -4.900293827056885
    7. '    
' → logprob: -6.025293827056885
    8. '
' → logprob: -6.525293827056885
    9. ' current' → logprob: -8.650294303894043
    10. 'current' → logprob: -9.400294303894043

Token 167: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.15186844766139984
    2. 'last' → logprob: -2.6518683433532715
    3. 'end' → logprob: -2.7768683433532715
    4. ' prev' → logprob: -5.1518683433532715
    5. 'previous' → logprob: -6.7768683433532715
    6. 'sorted' → logprob: -7.7768683433532715
    7. ' last' → logprob: -8.02686882019043
    8. 'current' → logprob: -8.40186882019043
    9. '   ' → logprob: -9.02686882019043
    10. ' end' → logprob: -9.15186882019043

Token 168: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.8541317582130432
    2. ' =' → logprob: -1.1041316986083984
    3. '=' → logprob: -1.4791316986083984
    4. '_' → logprob: -4.229131698608398
    5. 'robot' → logprob: -9.104131698608398
    6. '```' → logprob: -9.104131698608398
    7. '=_' → logprob: -9.604131698608398
    8. '_=' → logprob: -10.854131698608398
    9. '_ro' → logprob: -10.979131698608398
    10. ',' → logprob: -10.979131698608398

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267927408218384
    2. '=' → logprob: -2.017679214477539
    3. ',' → logprob: -12.767679214477539
    4. '[' → logprob: -15.142679214477539
    5. '=end' → logprob: -15.392679214477539
    6. '_' → logprob: -15.517679214477539
    7. ')' → logprob: -15.767679214477539
    8. 's' → logprob: -16.39267921447754
    9. ']' → logprob: -16.39267921447754
    10. '_end' → logprob: -16.51767921447754

Token 170: ' first' (ID: 1577)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.08901384472846985
    2. ' robots' → logprob: -2.4640138149261475
    3. 'rob' → logprob: -10.464014053344727
    4. 'robot' → logprob: -11.214014053344727
    5. 'first' → logprob: -11.589014053344727
    6. ' first' → logprob: -11.964014053344727
    7. '   ' → logprob: -12.964014053344727
    8. ' ' → logprob: -13.339014053344727
    9. 'routers' → logprob: -13.339014053344727
    10. '(' → logprob: -13.401514053344727

Token 171: '_robot' (ID: 152478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12881891429424286
    2. '_robot' → logprob: -2.128818988800049
    3. '(' → logprob: -6.878818988800049
    4. 'robots' → logprob: -7.253818988800049
    5. 'robot' → logprob: -9.37881851196289
    6. '(robot' → logprob: -10.12881851196289
    7. '_ro' → logprob: -11.62881851196289
    8. 's' → logprob: -12.25381851196289
    9. '_(' → logprob: -12.75381851196289
    10. '(_' → logprob: -13.12881851196289

Token 172: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. '(sorted' → logprob: -13.250003814697266
    3. 'robots' → logprob: -13.250003814697266
    4. '(robot' → logprob: -15.375003814697266
    5. ' (' → logprob: -17.875003814697266
    6. 'sorted' → logprob: -19.000003814697266
    7. '(
' → logprob: -19.375003814697266
    8. 'def' → logprob: -19.375003814697266
    9. '   ' → logprob: -19.625003814697266
    10. ' robots' → logprob: -19.750003814697266

Token 173: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.00027968952781520784
    2. ' robots' → logprob: -8.500279426574707
    3. '(' → logprob: -9.750279426574707
    4. ')' → logprob: -11.250279426574707
    5. 'rob' → logprob: -12.750279426574707
    6. 'robot' → logprob: -14.750279426574707
    7. '```' → logprob: -15.250279426574707
    8. ')(' → logprob: -15.625279426574707
    9. 'robes' → logprob: -15.625279426574707
    10. 'routers' → logprob: -15.625279426574707

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25232404470443726
    2. ')' → logprob: -1.502324104309082
    3. '   ' → logprob: -8.002324104309082
    4. ')
' → logprob: -10.502324104309082
    5. ')

' → logprob: -11.002324104309082
    6. ' )
' → logprob: -11.627324104309082
    7. '
' → logprob: -12.877324104309082
    8. ' )' → logprob: -13.502324104309082
    9. '[' → logprob: -14.002324104309082
    10. ' ' → logprob: -14.377324104309082

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20645059645175934
    2. ' for' → logprob: -1.9564505815505981
    3. 'for' → logprob: -3.3314507007598877
    4. '
' → logprob: -4.706450462341309
    5. '    
' → logprob: -7.956450462341309
    6. '	for' → logprob: -10.581450462341309
    7. '```' → logprob: -11.706450462341309
    8. '
' → logprob: -12.706450462341309
    9. '  
' → logprob: -13.081450462341309
    10. '' → logprob: -13.081450462341309

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011053952388465405
    2. ' for' → logprob: -4.511054039001465
    3. '   ' → logprob: -12.011054039001465
    4. '	for' → logprob: -17.26105308532715
    5. '
' → logprob: -17.38605308532715
    6. '```' → logprob: -19.38605308532715
    7. ' ' → logprob: -21.76105308532715
    8. '    
' → logprob: -22.51105308532715
    9. '``' → logprob: -22.76105308532715
    10. '  ' → logprob: -23.26105308532715

Token 177: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.48357802629470825
    2. ' curr' → logprob: -0.9835780262947083
    3. 'robot' → logprob: -5.233578205108643
    4. ' robot' → logprob: -5.858578205108643
    5. ' i' → logprob: -7.483578205108643
    6. 'i' → logprob: -8.483577728271484
    7. ' current' → logprob: -8.483577728271484
    8. 'current' → logprob: -8.483577728271484
    9. '   ' → logprob: -10.608577728271484
    10. ' ' → logprob: -10.608577728271484

Token 178: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -0.0014178573619574308
    2. ' in' → logprob: -6.751417636871338
    3. '_' → logprob: -8.501418113708496
    4. ' _' → logprob: -10.626418113708496
    5. 'robot' → logprob: -11.751418113708496
    6. '_ro' → logprob: -12.001418113708496
    7. '   ' → logprob: -13.626418113708496
    8. 'in' → logprob: -13.751418113708496
    9. ' robot' → logprob: -13.751418113708496
    10. '_bot' → logprob: -14.376418113708496

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006727095227688551
    2. 'in' → logprob: -5.00672721862793
    3. ' robots' → logprob: -12.00672721862793
    4. 'robots' → logprob: -12.63172721862793
    5. ' ' → logprob: -14.13172721862793
    6. ',' → logprob: -14.50672721862793
    7. 's' → logprob: -15.13172721862793
    8. ' ,' → logprob: -15.63172721862793
    9. '	in' → logprob: -15.88172721862793
    10. '   ' → logprob: -16.25672721862793

Token 180: ' robots' (ID: 47605)
  Prédit: ' robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robots' → logprob: -0.2811796963214874
    2. 'robots' → logprob: -1.406179666519165
    3. '   ' → logprob: -11.656179428100586
    4. ' ' → logprob: -12.031179428100586
    5. 'robot' → logprob: -12.906179428100586
    6. 'rob' → logprob: -13.281179428100586
    7. ' robotics' → logprob: -13.406179428100586
    8. '_' → logprob: -13.531179428100586
    9. 'routers' → logprob: -13.718679428100586
    10. '	' → logprob: -14.093679428100586

Token 181: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '1' → logprob: -13.125004768371582
    3. ':' → logprob: -13.375004768371582
    4. ' [' → logprob: -14.125004768371582
    5. '   ' → logprob: -14.625004768371582
    6. ':
' → logprob: -16.3750057220459
    7. '```' → logprob: -17.0000057220459
    8. '[
' → logprob: -17.6250057220459
    9. '[:-' → logprob: -18.2500057220459
    10. '2' → logprob: -18.5000057220459

Token 182: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5205464959144592
    2. '       ' → logprob: -1.1455464363098145
    3. ' if' → logprob: -3.0205464363098145
    4. '[' → logprob: -4.1455464363098145
    5. '1' → logprob: -4.3955464363098145
    6. ':' → logprob: -5.3955464363098145
    7. '    ' → logprob: -6.1455464363098145
    8. 'if' → logprob: -6.2705464363098145
    9. ' ' → logprob: -7.6455464363098145
    10. '	   ' → logprob: -7.8955464363098145

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19499267637729645
    2. '
' → logprob: -2.069992780685425
    3. ' 
' → logprob: -3.819992780685425
    4. 'if' (adapté à ' if') → logprob: -4.319992542266846
    5. '   ' → logprob: -5.319992542266846
    6. ' can' → logprob: -5.569992542266846
    7. '       ' → logprob: -5.569992542266846
    8. ' ' → logprob: -6.694992542266846
    9. '    
' → logprob: -7.819992542266846
    10. '<|end|>' → logprob: -7.819992542266846

Token 184: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.062131475657224655
    2. 'can' → logprob: -2.812131404876709
    3. ' prev' → logprob: -9.312131881713867
    4. 'prev' → logprob: -10.062131881713867
    5. ' curr' → logprob: -11.312131881713867
    6. 'curr' → logprob: -11.937131881713867
    7. '	can' → logprob: -12.687131881713867
    8. '_can' → logprob: -13.062131881713867
    9. '(can' → logprob: -13.062131881713867
    10. ' not' → logprob: -13.812131881713867

Token 185: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.00015669701679144055
    2. '_' → logprob: -9.00015640258789
    3. 'place' → logprob: -10.50015640258789
    4. ' place' → logprob: -13.25015640258789
    5. ' _' → logprob: -13.37515640258789
    6. '_put' → logprob: -14.75015640258789
    7. '_can' → logprob: -14.75015640258789
    8. 'Place' → logprob: -15.37515640258789
    9. '_places' → logprob: -15.62515640258789
    10. '   ' → logprob: -15.87515640258789

Token 186: '(prev' (ID: 59594)
  Prédit: '(prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.00022082125360611826
    2. '(' → logprob: -8.500221252441406
    3. '(previous' → logprob: -11.000221252441406
    4. ' (' → logprob: -14.625221252441406
    5. 'prev' → logprob: -16.000221252441406
    6. '(pre' → logprob: -17.500221252441406
    7. '(
' → logprob: -18.250221252441406
    8. '(pred' → logprob: -18.500221252441406
    9. '	prev' → logprob: -18.625221252441406
    10. '_prev' → logprob: -19.750221252441406

Token 187: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -5.5577775128767826e-06
    2. 'robot' → logprob: -12.750005722045898
    3. '_' → logprob: -13.625005722045898
    4. '_ro' → logprob: -14.250005722045898
    5. '(robot' → logprob: -15.250005722045898
    6. ' _' → logprob: -16.3750057220459
    7. '
' → logprob: -16.5000057220459
    8. ' robot' → logprob: -17.1250057220459
    9. ')_' → logprob: -17.1250057220459
    10. '_place' → logprob: -17.5000057220459

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016461454797536135
    2. ' ,' → logprob: -6.501646041870117
    3. ',c' → logprob: -8.876646041870117
    4. ',current' → logprob: -13.626646041870117
    5. ',
' → logprob: -14.376646041870117
    6. '   ' → logprob: -14.376646041870117
    7. '(curr' → logprob: -14.876646041870117
    8. '[curr' → logprob: -15.626646041870117
    9. 'curr' → logprob: -15.876646041870117
    10. ' curr' → logprob: -16.001646041870117

Token 189: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.38688716292381287
    2. 'curr' → logprob: -1.1368871927261353
    3. '(curr' → logprob: -11.386887550354004
    4. '	curr' → logprob: -13.511887550354004
    5. ' ' → logprob: -13.636887550354004
    6. ')' → logprob: -14.261887550354004
    7. '[curr' → logprob: -14.386887550354004
    8. '.curr' → logprob: -15.261887550354004
    9. 'Curr' → logprob: -15.636887550354004
    10. '_curr' → logprob: -15.636887550354004

Token 190: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -9.253090865968261e-06
    2. 'robot' → logprob: -12.375009536743164
    3. '_' → logprob: -12.625009536743164
    4. '_ro' → logprob: -13.875009536743164
    5. '[' → logprob: -15.625009536743164
    6. ')_' → logprob: -16.500009536743164
    7. '(robot' → logprob: -16.750009536743164
    8. '[_' → logprob: -17.250009536743164
    9. ' _' → logprob: -17.250009536743164
    10. '_bot' → logprob: -17.375009536743164

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04185262694954872
    2. '):
' → logprob: -3.4168527126312256
    3. ':' → logprob: -5.5418524742126465
    4. ' and' → logprob: -5.9168524742126465
    5. ')' → logprob: -6.9168524742126465
    6. ' ):' → logprob: -8.041852951049805
    7. 'and' → logprob: -9.291852951049805
    8. '   ' → logprob: -9.416852951049805
    9. '):
' → logprob: -10.791852951049805
    10. ' ):
' → logprob: -10.916852951049805

Token 192: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.417976379045285e-05
    2. '           ' → logprob: -10.500043869018555
    3. 'count' → logprob: -11.500043869018555
    4. '   ' → logprob: -13.250043869018555
    5. 'prev' → logprob: -13.250043869018555
    6. ' count' → logprob: -14.000043869018555
    7. '
' → logprob: -14.625043869018555
    8. '	   ' → logprob: -14.750043869018555
    9. '```' → logprob: -14.875043869018555
    10. '        
' → logprob: -14.875043869018555

Token 193: ' prev' (ID: 10258)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.093026302754879
    2. ' count' → logprob: -3.2180263996124268
    3. ' prev' → logprob: -3.7180263996124268
    4. 'count' → logprob: -4.343026161193848
    5. '           ' → logprob: -5.343026161193848
    6. 'prev' (adapté à ' prev') → logprob: -5.343026161193848
    7. '   ' → logprob: -7.343026161193848
    8. '
' → logprob: -7.468026161193848
    9. '               ' → logprob: -7.718026161193848
    10. '        
' → logprob: -9.843026161193848

Token 194: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -14.250001907348633
    3. 'robot' → logprob: -14.500001907348633
    4. '_ro' → logprob: -15.375001907348633
    5. ' _' → logprob: -15.625001907348633
    6. '   ' → logprob: -15.625001907348633
    7. '_prev' → logprob: -17.000001907348633
    8. '_bot' → logprob: -17.750001907348633
    9. '\' → logprob: -17.750001907348633
    10. 'prev' → logprob: -18.250001907348633

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '[' → logprob: -17.075939178466797
    4. ',' → logprob: -17.075939178466797
    5. '＝' → logprob: -17.450939178466797
    6. ' ' → logprob: -17.700939178466797
    7. '=

' → logprob: -17.700939178466797
    8. '=}' → logprob: -18.575939178466797
    9. ')' → logprob: -18.700939178466797
    10. '   ' → logprob: -18.700939178466797

Token 196: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.061967913061380386
    2. ' curr' → logprob: -2.8119678497314453
    3. '	curr' → logprob: -15.811967849731445
    4. '(curr' → logprob: -16.936967849731445
    5. '[curr' → logprob: -17.436967849731445
    6. 'cur' → logprob: -17.936967849731445
    7. 'c' → logprob: -18.311967849731445
    8. '_curr' → logprob: -18.311967849731445
    9. ' ' → logprob: -18.936967849731445
    10. '.curr' → logprob: -19.061967849731445

Token 197: '_robot' (ID: 152478)
  Prédit: '_robot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_robot' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.250000953674316
    3. 'robot' → logprob: -15.375000953674316
    4. '_bot' → logprob: -15.375000953674316
    5. '_ro' → logprob: -15.625000953674316
    6. 'obot' → logprob: -16.750001907348633
    7. ' _' → logprob: -17.500001907348633
    8. '_router' → logprob: -17.750001907348633
    9. '._' → logprob: -18.000001907348633
    10. '.robot' → logprob: -18.375001907348633

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007123126997612417
    2. '       ' → logprob: -7.3757123947143555
    3. '
' → logprob: -9.500712394714355
    4. '               ' → logprob: -12.750712394714355
    5. 'count' → logprob: -13.125712394714355
    6. '```' → logprob: -13.500712394714355
    7. '	       ' → logprob: -13.750712394714355
    8. '   ' → logprob: -13.875712394714355
    9. '		' → logprob: -14.375712394714355
    10. ',' → logprob: -14.750712394714355

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004155925940722227
    2. '       ' → logprob: -5.504156112670898
    3. 'count' → logprob: -10.004156112670898
    4. '   ' → logprob: -10.754156112670898
    5. '	       ' → logprob: -12.629156112670898
    6. '		' → logprob: -13.629156112670898
    7. '	   ' → logprob: -13.754156112670898
    8. '               ' → logprob: -13.754156112670898
    9. '          ' → logprob: -13.879156112670898
    10. ' count' → logprob: -14.129156112670898

Token 200: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.15343773365020752
    2. ' count' → logprob: -2.153437614440918
    3. '           ' → logprob: -3.653437614440918
    4. '   ' → logprob: -8.903437614440918
    5. '       ' → logprob: -9.653437614440918
    6. '	count' → logprob: -9.903437614440918
    7. '               ' → logprob: -12.403437614440918
    8. '	       ' → logprob: -13.653437614440918
    9. '		' → logprob: -13.903437614440918
    10. '    ' → logprob: -14.653437614440918

Token 201: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25227290391921997
    2. '+=' → logprob: -1.5022728443145752
    3. '+' → logprob: -8.002272605895996
    4. '=' → logprob: -12.752272605895996
    5. '    ' → logprob: -13.252272605895996
    6. '   ' → logprob: -13.377272605895996
    7. ' +' → logprob: -13.752272605895996
    8. ']+=' → logprob: -14.252272605895996
    9. '```' → logprob: -14.752272605895996
    10. ' ' → logprob: -15.877272605895996

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '```' → logprob: -18.87670135498047
    4. '   ' → logprob: -19.25170135498047
    5. ' ' → logprob: -19.75170135498047
    6. '１' → logprob: -21.06420135498047
    7. '2' → logprob: -21.18920135498047
    8. '0' → logprob: -21.68920135498047
    9. '  ' → logprob: -21.75170135498047
    10. '۱' → logprob: -21.87670135498047

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '１' → logprob: -20.937501907348633
    6. '
' → logprob: -21.562501907348633
    7. '۱' → logprob: -21.750001907348633
    8. 'def' → logprob: -21.812501907348633
    9. '2' → logprob: -22.187501907348633
    10. '`' → logprob: -22.375001907348633

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045021495316177607
    2. '
' → logprob: -8.250450134277344
    3. ' return' → logprob: -9.125450134277344
    4. 'return' → logprob: -10.250450134277344
    5. '    
' → logprob: -10.625450134277344
    6. '	return' → logprob: -11.875450134277344
    7. '<|end|>' → logprob: -12.000450134277344
    8. '       ' → logprob: -13.625450134277344
    9. '' → logprob: -14.000450134277344
    10. ' 
' → logprob: -14.250450134277344

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001368453842587769
    2. ' return' → logprob: -6.876368522644043
    3. 'return' → logprob: -8.001368522644043
    4. '       ' → logprob: -15.001368522644043
    5. '	return' → logprob: -15.626368522644043
    6. '```' → logprob: -17.626367568969727
    7. '
' → logprob: -17.751367568969727
    8. ' ' → logprob: -17.876367568969727
    9. ':return' → logprob: -18.626367568969727
    10. '    ' → logprob: -18.751367568969727

Token 206: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051695335656404495
    2. 'return' (adapté à ' return') → logprob: -3.3016953468322754
    3. ' return' → logprob: -4.301695346832275
    4. '	return' → logprob: -11.551694869995117
    5. '       ' → logprob: -12.801694869995117
    6. ' ' → logprob: -13.926694869995117
    7. '```' → logprob: -14.051694869995117
    8. '
' → logprob: -15.176694869995117
    9. '<|end|>' → logprob: -15.176694869995117
    10. '    
' → logprob: -15.551694869995117

Token 207: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.02324547804892063
    2. ' count' → logprob: -3.7732455730438232
    3. '(count' → logprob: -19.898244857788086
    4. '	count' → logprob: -20.398244857788086
    5. '[count' → logprob: -20.773244857788086
    6. ' ' → logprob: -20.898244857788086
    7. '$count' → logprob: -22.023244857788086
    8. ' ' → logprob: -22.898244857788086
    9. '_count' → logprob: -23.023244857788086
    10. '<count' → logprob: -23.023244857788086

Token 208: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2538745701313019
    2. 'def' → logprob: -1.5038745403289795
    3. 'if' → logprob: -6.378874778747559
    4. 'robots' → logprob: -9.253874778747559
    5. ' n' → logprob: -9.878874778747559
    6. 'num' → logprob: -10.503874778747559
    7. 'number' → logprob: -10.628874778747559
    8. '```' → logprob: -11.128874778747559
    9. '#' → logprob: -11.503874778747559
    10. 'ndef' → logprob: -12.128874778747559

Token 210: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.060456421226263046
    2. ' main' → logprob: -3.3104565143585205
    3. 'def' → logprob: -3.8104565143585205
    4. ' def' → logprob: -10.685456275939941
    5. '
' → logprob: -13.060456275939941
    6. '_main' → logprob: -14.060456275939941
    7. 'run' → logprob: -14.560456275939941
    8. '```' → logprob: -14.935456275939941
    9. 'solve' → logprob: -15.310456275939941
    10. '__' → logprob: -15.685456275939941

Token 211: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.398963063955307
    2. '(count' → logprob: -1.8989630937576294
    3. '_' → logprob: -2.39896297454834
    4. '_count' → logprob: -3.02396297454834
    5. '_result' → logprob: -4.39896297454834
    6. '("_' → logprob: -4.77396297454834
    7. '_non' → logprob: -5.39896297454834
    8. '_results' → logprob: -5.77396297454834
    9. '_(' → logprob: -5.77396297454834
    10. '(_' → logprob: -6.39896297454834

Token 212: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.005437708459794521
    2. '(' → logprob: -6.130437850952148
    3. '():' → logprob: -6.380437850952148
    4. '(result' → logprob: -6.505437850952148
    5. ' (' → logprob: -10.505437850952148
    6. '()' → logprob: -11.630437850952148
    7. '(results' → logprob: -12.255437850952148
    8. '(cnt' → logprob: -12.255437850952148
    9. '(output' → logprob: -13.630437850952148
    10. '(code' → logprob: -13.755437850952148

Token 213: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00787561759352684
    2. '):
' → logprob: -4.882875442504883
    3. ')' → logprob: -8.257875442504883
    4. '):
' → logprob: -11.632875442504883
    5. ' ):' → logprob: -14.882875442504883
    6. '):

' → logprob: -15.007875442504883
    7. '(count' → logprob: -15.507875442504883
    8. '   ' → logprob: -15.757875442504883
    9. ',' → logprob: -16.257875442504883
    10. ':' → logprob: -16.507875442504883

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.41129949549213e-05
    2. ' print' → logprob: -9.500083923339844
    3. 'print' → logprob: -11.625083923339844
    4. '```' → logprob: -15.625083923339844
    5. '   ' → logprob: -15.625083923339844
    6. '   ' → logprob: -19.375083923339844
    7. '    
' → logprob: -19.375083923339844
    8. '	print' → logprob: -20.125083923339844
    9. '       ' → logprob: -20.125083923339844
    10. '`' → logprob: -20.875083923339844

Token 215: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05358339473605156
    2. ' print' → logprob: -3.0535833835601807
    3. '   ' → logprob: -5.30358362197876
    4. '```' → logprob: -11.553583145141602
    5. '    
' → logprob: -16.6785831451416
    6. '
' → logprob: -17.4285831451416
    7. 'def' → logprob: -17.5535831451416
    8. '	print' → logprob: -18.0535831451416
    9. '`' → logprob: -18.3035831451416
    10. '    ' → logprob: -18.5535831451416

Token 216: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0003424951864872128
    2. 'count' → logprob: -8.00034236907959
    3. '(' → logprob: -11.87534236907959
    4. '[count' → logprob: -17.125343322753906
    5. ' count' → logprob: -17.875343322753906
    6. '=count' → logprob: -18.125343322753906
    7. '<count' → logprob: -18.625343322753906
    8. '()' → logprob: -18.625343322753906
    9. '$count' → logprob: -19.125343322753906
    10. ' (' → logprob: -19.250343322753906

Token 217: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -17.0
    4. '()' → logprob: -18.5
    5. ')`' → logprob: -18.75
    6. '))' → logprob: -19.375
    7. '),' → logprob: -19.5
    8. '())' → logprob: -19.5
    9. ')

' → logprob: -19.875
    10. '   ' → logprob: -19.875

Token 218: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007878337986767292
    2. 'n' → logprob: -5.007878303527832
    3. 'if' → logprob: -6.757878303527832
    4. 'num' → logprob: -15.132878303527832
    5. 'ndef' → logprob: -16.25787925720215
    6. '#' → logprob: -16.50787925720215
    7. 'number' → logprob: -17.13287925720215
    8. ' n' → logprob: -17.63287925720215
    9. ' def' → logprob: -17.75787925720215
    10. '```' → logprob: -18.38287925720215

Token 219: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0794108510017395
    2. ' main' → logprob: -2.5794107913970947
    3. 'def' → logprob: -7.579411029815674
    4. ' def' → logprob: -11.829410552978516
    5. 'run' → logprob: -13.829410552978516
    6. 'solve' → logprob: -14.579410552978516
    7. 'if' → logprob: -14.704410552978516
    8. '	main' → logprob: -14.954410552978516
    9. 'read' → logprob: -15.454410552978516
    10. ' solve' → logprob: -15.954410552978516

Token 220: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8921695047756657e-05
    2. '():
' → logprob: -11.125028610229492
    3. ' ():' → logprob: -11.375028610229492
    4. '()' → logprob: -13.125028610229492
    5. '(' → logprob: -14.500028610229492
    6. ':' → logprob: -16.875028610229492
    7. '():
' → logprob: -17.000028610229492
    8. '()>' → logprob: -18.000028610229492
    9. 'def' → logprob: -18.000028610229492
    10. '_' → logprob: -18.500028610229492

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25411924719810486
    2. 'n' → logprob: -1.5041192770004272
    3. ' n' → logprob: -6.129119396209717
    4. 'num' → logprob: -12.504118919372559
    5. '	n' → logprob: -12.504118919372559
    6. ' ' → logprob: -14.629118919372559
    7. '```' → logprob: -14.754118919372559
    8. 'def' → logprob: -15.129118919372559
    9. '
' → logprob: -15.629118919372559
    10. 'number' → logprob: -15.629118919372559

Token 222: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011771696619689465
    2. ' n' → logprob: -4.7617716789245605
    3. '   ' → logprob: -5.7617716789245605
    4. 'num' → logprob: -12.511772155761719
    5. ' ' → logprob: -14.011772155761719
    6. '	n' → logprob: -14.136772155761719
    7. '  ' → logprob: -15.261772155761719
    8. 'def' → logprob: -15.261772155761719
    9. 'number' → logprob: -15.261772155761719
    10. '
' → logprob: -15.761772155761719

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020817816257477
    2. '=' → logprob: -2.350208282470703
    3. '=int' → logprob: -13.975208282470703
    4. ' ' → logprob: -15.100208282470703
    5. '_' → logprob: -16.225208282470703
    6. ',' → logprob: -16.350208282470703
    7. ' ' → logprob: -16.475208282470703
    8. '   ' → logprob: -16.850208282470703
    9. ')' → logprob: -17.225208282470703
    10. ' =
' → logprob: -17.475208282470703

Token 224: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.20141421258449554
    2. ' read' → logprob: -1.7014142274856567
    3. ' int' → logprob: -14.451414108276367
    4. 'int' → logprob: -14.701414108276367
    5. '	read' → logprob: -16.951414108276367
    6. '   ' → logprob: -18.951414108276367
    7. '  ' → logprob: -19.076414108276367
    8. ' ' → logprob: -19.451414108276367
    9. '(read' → logprob: -20.076414108276367
    10. '_read' → logprob: -20.701414108276367

Token 225: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: 0.0
    2. '_n' → logprob: -19.125
    3. 'number' → logprob: -19.25
    4. '_' → logprob: -19.25
    5. '_num' → logprob: -19.625
    6. '_NUMBER' → logprob: -20.375
    7. '_Number' → logprob: -21.125
    8. '_numbers' → logprob: -21.625
    9. '_name' → logprob: -21.75
    10. 'umber' → logprob: -22.25

Token 226: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06213652342557907
    2. '()
' → logprob: -2.81213641166687
    3. '   ' → logprob: -9.06213665008545
    4. '
' → logprob: -10.93713665008545
    5. ')' → logprob: -11.93713665008545
    6. '(n' → logprob: -12.18713665008545
    7. 'n' → logprob: -12.43713665008545
    8. '()\' → logprob: -12.43713665008545
    9. 'robots' → logprob: -12.56213665008545
    10. '())' → logprob: -13.06213665008545

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07105493545532227
    2. 'robots' → logprob: -2.6960549354553223
    3. ' robots' → logprob: -6.821054935455322
    4. '```' → logprob: -11.196054458618164
    5. '    
' → logprob: -11.946054458618164
    6. '   ' → logprob: -13.446054458618164
    7. 'rob' → logprob: -13.946054458618164
    8. '	' → logprob: -14.071054458618164
    9. 'robot' → logprob: -14.196054458618164
    10. '_' → logprob: -14.696054458618164

Token 228: ' robots' (ID: 47605)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' (adapté à ' robots') → logprob: -0.0004744023026432842
    2. ' robots' → logprob: -8.000473976135254
    3. '   ' → logprob: -9.000473976135254
    4. 'rob' → logprob: -12.500473976135254
    5. 'robot' → logprob: -12.625473976135254
    6. '```' → logprob: -12.750473976135254
    7. '    
' → logprob: -13.125473976135254
    8. 'routers' → logprob: -14.375473976135254
    9. '
' → logprob: -14.500473976135254
    10. '  ' → logprob: -15.000473976135254

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. 's' → logprob: -17.16022491455078
    4. ' ' → logprob: -17.28522491455078
    5. '＝' → logprob: -18.28522491455078
    6. '_' → logprob: -18.91022491455078
    7. ')' → logprob: -19.03522491455078
    8. '   ' → logprob: -19.28522491455078
    9. '=create' → logprob: -19.78522491455078
    10. ',' → logprob: -20.28522491455078

Token 230: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.16024667024612427
    2. 'read' → logprob: -1.9102466106414795
    3. '   ' → logprob: -10.785246849060059
    4. '	read' → logprob: -14.660246849060059
    5. '(read' → logprob: -14.660246849060059
    6. ' sort' → logprob: -14.785246849060059
    7. 'sort' → logprob: -15.035246849060059
    8. ' ' → logprob: -15.535246849060059
    9. '_read' → logprob: -16.785245895385742
    10. '    ' → logprob: -17.035245895385742

Token 231: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.981667537620524e-06
    2. 'robots' → logprob: -13.375001907348633
    3. '_robot' → logprob: -15.125001907348633
    4. '_ro' → logprob: -16.625001907348633
    5. '"_' → logprob: -19.750001907348633
    6. '_
' → logprob: -20.000001907348633
    7. '```' → logprob: -20.000001907348633
    8. '_ros' → logprob: -20.250001907348633
    9. 'Rob' → logprob: -20.500001907348633
    10. ' _' → logprob: -20.875001907348633

Token 232: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -1.3856492842023727e-06
    2. 'bots' → logprob: -14.000000953674316
    3. 'robot' → logprob: -15.125000953674316
    4. '_' → logprob: -15.625000953674316
    5. 'rob' → logprob: -16.500001907348633
    6. ' robots' → logprob: -16.625001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'n' → logprob: -18.875001907348633
    9. 'ots' → logprob: -19.625001907348633
    10. 'r' → logprob: -19.875001907348633

Token 233: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. 'n' → logprob: -15.250008583068848
    4. ' (' → logprob: -16.12500762939453
    5. '   ' → logprob: -17.37500762939453
    6. '(
' → logprob: -19.37500762939453
    7. '(sort' → logprob: -20.00000762939453
    8. ' n' → logprob: -20.37500762939453
    9. '(sorted' → logprob: -21.00000762939453
    10. '
' → logprob: -21.00000762939453

Token 234: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16023468971252441
    2. ')' → logprob: -1.9102346897125244
    3. ')
' → logprob: -11.535234451293945
    4. '   ' → logprob: -15.035234451293945
    5. ')

' → logprob: -15.410234451293945
    6. ' )
' → logprob: -16.410234451293945
    7. ')n' → logprob: -16.410234451293945
    8. '())
' → logprob: -17.160234451293945
    9. ')`
' → logprob: -17.785234451293945
    10. ')#' → logprob: -18.285234451293945

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028029274195432663
    2. 'robots' → logprob: -3.903029203414917
    3. ' robots' → logprob: -4.903029441833496
    4. '```' → logprob: -11.028029441833496
    5. 'sorted' → logprob: -12.153029441833496
    6. '    
' → logprob: -12.653029441833496
    7. ' sorted' → logprob: -12.653029441833496
    8. '
' → logprob: -12.778029441833496
    9. 'robot' → logprob: -13.903029441833496
    10. ' ' → logprob: -14.528029441833496

Token 236: ' sorted' (ID: 20099)
  Prédit: 'robots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.02880558930337429
    2. ' robots' → logprob: -3.9038054943084717
    3. 'sorted' (adapté à ' sorted') → logprob: -5.528805732727051
    4. '   ' → logprob: -5.653805732727051
    5. ' sorted' → logprob: -7.403805732727051
    6. '
' → logprob: -10.52880573272705
    7. '```' → logprob: -10.65380573272705
    8. '    
' → logprob: -10.65380573272705
    9. 'rob' → logprob: -10.77880573272705
    10. 'robot' → logprob: -11.02880573272705

Token 237: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.1080467781284824e-05
    2. 'robots' → logprob: -10.125041007995605
    3. '_robot' → logprob: -14.750041007995605
    4. '_ro' → logprob: -15.375041007995605
    5. '_sorted' → logprob: -16.750041961669922
    6. 's' → logprob: -16.750041961669922
    7. '(' → logprob: -16.875041961669922
    8. '_
' → logprob: -17.500041961669922
    9. 'Rob' → logprob: -17.875041961669922
    10. '```' → logprob: -18.125041961669922

Token 238: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.0001855406299000606
    2. '_' → logprob: -8.6251859664917
    3. ' robots' → logprob: -12.6251859664917
    4. 'rob' → logprob: -13.3751859664917
    5. 'robot' → logprob: -14.0001859664917
    6. 'bots' → logprob: -16.125185012817383
    7. '(' → logprob: -16.125185012817383
    8. 'rocks' → logprob: -17.250185012817383
    9. 'routers' → logprob: -17.625185012817383
    10. 'sort' → logprob: -17.625185012817383

Token 239: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741077125072479
    2. ' =' → logprob: -0.9741077423095703
    3. '(' → logprob: -11.59910774230957
    4. '_by' → logprob: -12.09910774230957
    5. '_' → logprob: -12.22410774230957
    6. ')' → logprob: -12.47410774230957
    7. 'by' → logprob: -12.59910774230957
    8. 's' → logprob: -13.22410774230957
    9. '   ' → logprob: -14.09910774230957
    10. 'By' → logprob: -14.84910774230957

Token 240: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.575942873954773
    2. ' sort' → logprob: -0.825942873954773
    3. '(sort' → logprob: -12.950942993164062
    4. 'sorted' → logprob: -15.075942993164062
    5. '	sort' → logprob: -15.075942993164062
    6. '   ' → logprob: -15.325942993164062
    7. ' sorted' → logprob: -15.450942993164062
    8. ' ' → logprob: -16.825942993164062
    9. '.sort' → logprob: -17.700942993164062
    10. '_sort' → logprob: -17.950942993164062

Token 241: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4855663721391466e-05
    2. 'robots' → logprob: -11.500015258789062
    3. '(' → logprob: -12.625015258789062
    4. '(sorted' → logprob: -14.125015258789062
    5. '_sorted' → logprob: -15.375015258789062
    6. '_robot' → logprob: -16.125015258789062
    7. '```' → logprob: -16.375015258789062
    8. 'sorted' → logprob: -17.125015258789062
    9. ' Robots' → logprob: -17.625015258789062
    10. 's' → logprob: -17.750015258789062

Token 242: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.004088135901838541
    2. '_' → logprob: -5.504087924957275
    3. 'rob' → logprob: -12.379088401794434
    4. 'robot' → logprob: -13.129088401794434
    5. ' robots' → logprob: -13.254088401794434
    6. '```' → logprob: -14.004088401794434
    7. 's' → logprob: -15.379088401794434
    8. '(' → logprob: -15.379088401794434
    9. 'sorted' → logprob: -15.879088401794434
    10. '_robot' → logprob: -16.629087448120117

Token 243: '_by' (ID: 8214)
  Prédit: '_by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.0007485175738111138
    2. 'by' → logprob: -7.250748634338379
    3. '(' → logprob: -10.250748634338379
    4. '(sorted' → logprob: -13.750748634338379
    5. 'By' → logprob: -14.250748634338379
    6. '_' → logprob: -14.250748634338379
    7. 'bys' → logprob: -14.500748634338379
    8. '```' → logprob: -16.375747680664062
    9. '(_' → logprob: -16.625747680664062
    10. '_BY' → logprob: -17.000747680664062

Token 244: '_end' (ID: 13707)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.006716436706483364
    2. '_end' → logprob: -5.006716251373291
    3. ' end' → logprob: -15.00671672821045
    4. ''end' → logprob: -15.13171672821045
    5. '(end' → logprob: -15.38171672821045
    6. '   ' → logprob: -16.756715774536133
    7. 'nd' → logprob: -16.881715774536133
    8. '	end' → logprob: -16.881715774536133
    9. 'def' → logprob: -17.256715774536133
    10. '```' → logprob: -17.381715774536133

Token 245: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -16.0
    3. '(robot' → logprob: -16.625
    4. '(ro' → logprob: -17.75
    5. '(
' → logprob: -18.0
    6. '(sorted' → logprob: -18.5
    7. '((' → logprob: -19.125
    8. '(s' → logprob: -19.625
    9. 'robots' → logprob: -20.0
    10. '(r' → logprob: -20.125

Token 246: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -0.00010247035970678553
    2. '(' → logprob: -9.750102043151855
    3. ')' → logprob: -10.500102043151855
    4. ' robots' → logprob: -11.125102043151855
    5. 'rob' → logprob: -13.750102043151855
    6. ')(' → logprob: -15.250102043151855
    7. ',' → logprob: -16.125102996826172
    8. 'robot' → logprob: -16.125102996826172
    9. ' ' → logprob: -17.000102996826172
    10. '   ' → logprob: -17.000102996826172

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011107946746051311
    2. ')
' → logprob: -4.511107921600342
    3. '   ' → logprob: -9.7611083984375
    4. ')
' → logprob: -13.3861083984375
    5. '()' → logprob: -14.7611083984375
    6. ' )' → logprob: -15.0111083984375
    7. ')

' → logprob: -16.1361083984375
    8. '())' → logprob: -16.5111083984375
    9. ' ' → logprob: -17.5111083984375
    10. ' )
' → logprob: -17.7611083984375

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41305771470069885
    2. 'count' → logprob: -1.1630576848983765
    3. ' count' → logprob: -3.663057804107666
    4. 'result' → logprob: -9.163057327270508
    5. ' result' → logprob: -10.413057327270508
    6. '
' → logprob: -10.663057327270508
    7. '	count' → logprob: -10.913057327270508
    8. '```' → logprob: -11.788057327270508
    9. '_count' → logprob: -13.413057327270508
    10. '[count' → logprob: -13.788057327270508

Token 249: ' result' (ID: 1534)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0049383086152374744
    2. ' count' → logprob: -5.754938125610352
    3. 'result' (adapté à ' result') → logprob: -6.629938125610352
    4. '   ' → logprob: -7.754938125610352
    5. ' result' → logprob: -11.629938125610352
    6. 'cnt' → logprob: -14.379938125610352
    7. '	count' → logprob: -15.754938125610352
    8. '```' → logprob: -16.12993812561035
    9. 'total' → logprob: -16.50493812561035
    10. 'counter' → logprob: -16.75493812561035

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196891888976097
    2. '=' → logprob: -2.8119688034057617
    3. '=count' → logprob: -14.186968803405762
    4. '_' → logprob: -15.186968803405762
    5. ')' → logprob: -15.436968803405762
    6. '   ' → logprob: -17.061969757080078
    7. ' ' → logprob: -17.311969757080078
    8. ',' → logprob: -17.311969757080078
    9. ' =
' → logprob: -17.686969757080078
    10. '=_' → logprob: -17.936969757080078

Token 251: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.4740770161151886
    2. 'count' → logprob: -0.9740769863128662
    3. '(count' → logprob: -17.974077224731445
    4. '	count' → logprob: -18.599077224731445
    5. '   ' → logprob: -19.474077224731445
    6. '[count' → logprob: -20.349077224731445
    7. '_count' → logprob: -20.849077224731445
    8. '.count' → logprob: -21.224077224731445
    9. '=count' → logprob: -21.224077224731445
    10. ' ' → logprob: -21.474077224731445

Token 252: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.00010986098641296849
    2. '_' → logprob: -9.125109672546387
    3. 'non' → logprob: -15.625109672546387
    4. '_n' → logprob: -15.625109672546387
    5. '(' → logprob: -16.000110626220703
    6. '_(' → logprob: -16.000110626220703
    7. '_NON' → logprob: -16.125110626220703
    8. 'Non' → logprob: -16.125110626220703
    9. '(_' → logprob: -17.000110626220703
    10. '_sorted' → logprob: -17.000110626220703

Token 253: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -8.470901229884475e-05
    2. '_' → logprob: -9.62508487701416
    3. '_overlap' → logprob: -11.75008487701416
    4. '_-' → logprob: -12.62508487701416
    5. '-over' → logprob: -12.62508487701416
    6. 'over' → logprob: -13.37508487701416
    7. '-' → logprob: -14.00008487701416
    8. ' overlapping' → logprob: -15.00008487701416
    9. '_OVER' → logprob: -15.12508487701416
    10. 'Over' → logprob: -15.50008487701416

Token 254: 'lapping' (ID: 152588)
  Prédit: 'lapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lapping' → logprob: -0.003767305053770542
    2. 'apping' → logprob: -5.628767490386963
    3. 'l' → logprob: -9.003767013549805
    4. 'pping' → logprob: -10.878767013549805
    5. 'lap' → logprob: -11.003767013549805
    6. 'laps' → logprob: -12.503767013549805
    7. '_l' → logprob: -13.753767013549805
    8. 'aping' → logprob: -14.003767013549805
    9. '[' → logprob: -14.253767013549805
    10. 'app' → logprob: -15.253767013549805

Token 255: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_non' → logprob: -19.875
    3. '_ro' → logprob: -20.25
    4. '_
' → logprob: -20.5
    5. '```' → logprob: -20.625
    6. '"_' → logprob: -22.0
    7. '?_' → logprob: -22.125
    8. '_count' → logprob: -22.125
    9. '
' → logprob: -22.25
    10. '_agents' → logprob: -22.375

Token 256: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -1.981667537620524e-06
    2. ' robots' → logprob: -13.875001907348633
    3. '_' → logprob: -14.250001907348633
    4. 'rob' → logprob: -15.625001907348633
    5. 'robot' → logprob: -17.125001907348633
    6. '
' → logprob: -17.500001907348633
    7. '```' → logprob: -18.000001907348633
    8. 'rocks' → logprob: -18.875001907348633
    9. ' ' → logprob: -19.125001907348633
    10. 'count' → logprob: -19.250001907348633

Token 257: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. '(s' → logprob: -16.875001907348633
    4. '(sort' → logprob: -17.125001907348633
    5. 'sorted' → logprob: -18.000001907348633
    6. ' (' → logprob: -19.500001907348633
    7. ' sorted' → logprob: -19.625001907348633
    8. '(filtered' → logprob: -20.625001907348633
    9. '(saved' → logprob: -20.750001907348633
    10. '(
' → logprob: -20.875001907348633

Token 258: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4974866644479334e-05
    2. 'robots' → logprob: -11.125015258789062
    3. '_robot' → logprob: -16.000015258789062
    4. ' robots' → logprob: -17.875015258789062
    5. '_sorted' → logprob: -19.000015258789062
    6. ')_' → logprob: -19.000015258789062
    7. '```' → logprob: -19.000015258789062
    8. '_ro' → logprob: -19.125015258789062
    9. '_
' → logprob: -19.500015258789062
    10. '(' → logprob: -20.000015258789062

Token 259: 'robots' (ID: 136360)
  Prédit: 'robots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robots' → logprob: -2.629921436891891e-05
    2. '_' → logprob: -11.25002670288086
    3. ' robots' → logprob: -11.37502670288086
    4. 'ob' → logprob: -14.25002670288086
    5. 'rob' → logprob: -15.12502670288086
    6. 'robot' → logprob: -15.50002670288086
    7. '```' → logprob: -16.00002670288086
    8. 'bots' → logprob: -16.00002670288086
    9. ' ' → logprob: -16.50002670288086
    10. '
' → logprob: -17.25002670288086

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25217071175575256
    2. ')' → logprob: -1.5021706819534302
    3. '   ' → logprob: -8.37717056274414
    4. ')
' → logprob: -11.87717056274414
    5. ' )
' → logprob: -13.00217056274414
    6. '()
' → logprob: -14.37717056274414
    7. '()' → logprob: -14.37717056274414
    8. '())
' → logprob: -14.75217056274414
    9. ' )' → logprob: -15.00217056274414
    10. ' ' → logprob: -15.87717056274414

Token 261: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25499510765075684
    2. '   ' → logprob: -1.5049951076507568
    3. 'print' → logprob: -5.879995346069336
    4. ' print' → logprob: -8.879995346069336
    5. '
' → logprob: -9.879995346069336
    6. '	print' → logprob: -10.379995346069336
    7. '    
' → logprob: -10.754995346069336
    8. '(print' → logprob: -12.004995346069336
    9. '```' → logprob: -12.129995346069336
    10. '  
' → logprob: -12.879995346069336

Token 262: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0044129095040261745
    2. ' print' → logprob: -5.50441312789917
    3. '   ' → logprob: -8.004412651062012
    4. '
' → logprob: -15.754412651062012
    5. '	print' → logprob: -15.754412651062012
    6. '```' → logprob: -17.379413604736328
    7. '(print' → logprob: -17.879413604736328
    8. '_print' → logprob: -18.754413604736328
    9. '.print' → logprob: -19.004413604736328
    10. '  ' → logprob: -20.129413604736328

Token 263: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -12.25001049041748
    3. '(result' → logprob: -12.37501049041748
    4. '(' → logprob: -14.75001049041748
    5. '(_' → logprob: -15.25001049041748
    6. '_RESULT' → logprob: -15.87501049041748
    7. '_results' → logprob: -16.250009536743164
    8. 'result' → logprob: -16.375009536743164
    9. '_Result' → logprob: -16.625009536743164
    10. '_(' → logprob: -18.000009536743164

Token 264: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0019293478690087795
    2. '(' → logprob: -6.25192928314209
    3. '(results' → logprob: -15.00192928314209
    4. ' (' → logprob: -15.50192928314209
    5. '(
' → logprob: -15.62692928314209
    6. 'result' → logprob: -17.501930236816406
    7. '(resultado' → logprob: -17.626930236816406
    8. '(count' → logprob: -17.751930236816406
    9. '(res' → logprob: -17.876930236816406
    10. '=result' → logprob: -18.376930236816406

Token 265: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. '())' → logprob: -12.375009536743164
    3. '()' → logprob: -12.500009536743164
    4. ')
' → logprob: -13.625009536743164
    5. ' )' → logprob: -16.000009536743164
    6. '))' → logprob: -17.875009536743164
    7. ')`' → logprob: -18.500009536743164
    8. ')

' → logprob: -19.625009536743164
    9. ')#' → logprob: -19.625009536743164
    10. '   ' → logprob: -19.875009536743164

Token 266: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014497563242912292
    2. 'main' → logprob: -7.0014495849609375
    3. '
' → logprob: -7.7514495849609375
    4. ' if' → logprob: -10.251449584960938
    5. '```' → logprob: -10.376449584960938
    6. '<|end|>' → logprob: -11.251449584960938
    7. '\n' → logprob: -11.876449584960938
    8. 'print' → logprob: -12.251449584960938
    9. '_' → logprob: -12.251449584960938
    10. '#' → logprob: -12.876449584960938

Token 267: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519620656967163
    2. '__' → logprob: -1.5019620656967163
    3. 'name' → logprob: -11.376961708068848
    4. '_' → logprob: -11.376961708068848
    5. '_name' → logprob: -12.376961708068848
    6. ' ' → logprob: -13.251961708068848
    7. ' ' → logprob: -13.626961708068848
    8. '___' → logprob: -14.001961708068848
    9. ' True' → logprob: -14.376961708068848
    10. 'True' → logprob: -14.751961708068848

Token 268: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00660618394613266
    2. '==' → logprob: -5.256606101989746
    3. ' ==' → logprob: -6.631606101989746
    4. ' __' → logprob: -10.256606101989746
    5. '_' → logprob: -12.006606101989746
    6. '=="' → logprob: -12.006606101989746
    7. '=='' → logprob: -13.381606101989746
    8. 'name' → logprob: -13.881606101989746
    9. '=' → logprob: -14.006606101989746
    10. '____' → logprob: -14.256606101989746

Token 269: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.8325677703833207e-05
    2. '__.__' → logprob: -10.875028610229492
    3. '==' → logprob: -11.750028610229492
    4. '=="' → logprob: -14.375028610229492
    5. '__.' → logprob: -14.750028610229492
    6. '___' → logprob: -15.500028610229492
    7. '____' → logprob: -16.500028610229492
    8. '__('' → logprob: -16.875028610229492
    9. ' ==' → logprob: -17.000028610229492
    10. '__["' → logprob: -17.000028610229492

Token 270: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3453710675239563
    2. '==' → logprob: -1.3453710079193115
    3. ' ==' → logprob: -3.8453710079193115
    4. '=="' → logprob: -4.595371246337891
    5. '=='' → logprob: -9.97037124633789
    6. '___' → logprob: -10.22037124633789
    7. '===' → logprob: -11.09537124633789
    8. '==="' → logprob: -12.47037124633789
    9. '__.__' → logprob: -12.59537124633789
    10. '==
' → logprob: -12.72037124633789

Token 271: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029839113354682922
    2. ''' → logprob: -3.529839038848877
    3. ' "__' → logprob: -9.404839515686035
    4. '__' → logprob: -12.404839515686035
    5. ' '__' → logprob: -13.154839515686035
    6. '"user' → logprob: -16.27983856201172
    7. '"_' → logprob: -16.77983856201172
    8. '"name' → logprob: -17.40483856201172
    9. '("__' → logprob: -18.15483856201172
    10. ' "' → logprob: -18.27983856201172

Token 272: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1629515439271927
    2. '__' → logprob: -1.9129515886306763
    3. '"' → logprob: -6.037951469421387
    4. 'name' → logprob: -8.162951469421387
    5. ''' → logprob: -10.162951469421387
    6. '```' → logprob: -12.412951469421387
    7. '_main' → logprob: -13.037951469421387
    8. '"name' → logprob: -13.912951469421387
    9. 'built' → logprob: -13.912951469421387
    10. '__":
' → logprob: -14.037951469421387

Token 273: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01848059706389904
    2. '__' → logprob: -4.0184807777404785
    3. '__':
' → logprob: -8.01848030090332
    4. '__
' → logprob: -14.51848030090332
    5. '__["' → logprob: -14.76848030090332
    6. '__.' → logprob: -16.14348030090332
    7. '__("' → logprob: -16.39348030090332
    8. '__.__' → logprob: -16.39348030090332
    9. '```' → logprob: -16.51848030090332
    10. '__
' → logprob: -17.01848030090332

Token 274: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8028755784034729
    2. '   ' → logprob: -1.3028755187988281
    3. '__' → logprob: -1.3028755187988281
    4. ' main' → logprob: -4.927875518798828
    5. '_main' → logprob: -7.802875518798828
    6. '"' → logprob: -8.052875518798828
    7. '____' → logprob: -8.427875518798828
    8. '	main' → logprob: -9.552875518798828
    9. '__":
' → logprob: -10.177875518798828
    10. ' __' → logprob: -10.302875518798828

Token 275: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.836499985889532e-05
    2. ' main' → logprob: -9.7500581741333
    3. '	main' → logprob: -18.125059127807617
    4. '   ' → logprob: -19.750059127807617
    5. '_main' → logprob: -23.000059127807617
    6. '(main' → logprob: -23.250059127807617
    7. '.main' → logprob: -23.375059127807617
    8. 'Main' → logprob: -25.500059127807617
    9. ' ' → logprob: -25.750059127807617
    10. '  ' → logprob: -26.000059127807617

Token 276: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 149
Tokens correctement prédits (top 10): 250
Précision stricte (1ère position): 48.54%
Précision adaptée (1ère position): 54.38%
Précision (top 10): 91.24%
================================================================================
