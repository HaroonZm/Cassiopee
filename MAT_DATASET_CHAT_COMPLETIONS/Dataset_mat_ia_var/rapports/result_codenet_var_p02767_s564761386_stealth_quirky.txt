================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().strip().split()))
average = (sum(A) + (sum(A)%len(A) > N/2)) // len(A)
total_squared_diff = 0

i = 0
while i < N:
    total_squared_diff += (A[i] - average) ** 2
    i += 1
else:
    pass  # Because I like marking the end of while loops

print(total_squared_diff)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26427075266838074
    2. ')' → logprob: -1.5142707824707031
    3. '()' → logprob: -4.764270782470703
    4. '())' → logprob: -6.139270782470703
    5. '('' → logprob: -8.014270782470703
    6. '(
' → logprob: -8.514270782470703
    7. '```' → logprob: -8.889270782470703
    8. '("("' → logprob: -9.389270782470703
    9. '`' → logprob: -9.639270782470703
    10. '))' → logprob: -9.639270782470703

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5059829354286194
    2. 'if' → logprob: -2.5059828758239746
    3. 's' → logprob: -2.6309828758239746
    4. 'a' → logprob: -2.6309828758239746
    5. 'x' → logprob: -3.5059828758239746
    6. '`' → logprob: -3.6309828758239746
    7. 'i' → logprob: -3.8809828758239746
    8. '[' → logprob: -4.380982875823975
    9. 'f' → logprob: -4.505982875823975
    10. ' ' → logprob: -4.630982875823975

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028025058563798666
    2. '.' → logprob: -7.25280237197876
    3. '=' → logprob: -7.75280237197876
    4. '[]' → logprob: -8.127802848815918
    5. ' =' → logprob: -8.127802848815918
    6. '[A' → logprob: -8.252802848815918
    7. '[i' → logprob: -8.627802848815918
    8. '\[' → logprob: -8.752802848815918
    9. '.append' → logprob: -9.002802848815918
    10. '[:]' → logprob: -9.502802848815918

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6035434007644653
    2. 'list' → logprob: -1.4785434007644653
    3. ' []' → logprob: -2.103543281555176
    4. '[]' → logprob: -2.728543281555176
    5. ' [' → logprob: -3.478543281555176
    6. '[' → logprob: -5.478543281555176
    7. '[int' → logprob: -6.603543281555176
    8. '[input' → logprob: -7.228543281555176
    9. '[list' → logprob: -8.353543281555176
    10. 'input' → logprob: -8.603543281555176

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004554015584290028
    2. '(range' → logprob: -5.87955379486084
    3. '```' → logprob: -7.00455379486084
    4. '[' → logprob: -8.12955379486084
    5. '[(' → logprob: -8.87955379486084
    6. '(
' → logprob: -8.87955379486084
    7. ')' → logprob: -9.37955379486084
    8. '(

' → logprob: -10.37955379486084
    9. '<|end|>' → logprob: -10.87955379486084
    10. ' (' → logprob: -10.87955379486084

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.13856913149356842
    2. '(' → logprob: -2.2635691165924072
    3. '(str' → logprob: -4.513569355010986
    4. '(input' → logprob: -4.513569355010986
    5. '(lambda' → logprob: -6.138569355010986
    6. ')' → logprob: -8.013568878173828
    7. '```' → logprob: -8.513568878173828
    8. 'int' → logprob: -8.888568878173828
    9. '<int' → logprob: -9.013568878173828
    10. '(eval' → logprob: -9.263568878173828

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003986027557402849
    2. ',input' → logprob: -6.00398588180542
    3. '(' → logprob: -6.75398588180542
    4. ')' → logprob: -9.003986358642578
    5. ',' → logprob: -10.003986358642578
    6. 'input' → logprob: -10.378986358642578
    7. '))' → logprob: -10.503986358642578
    8. '```' → logprob: -10.503986358642578
    9. '=input' → logprob: -10.628986358642578
    10. '(int' → logprob: -10.628986358642578

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891413569450378
    2. ' input' → logprob: -2.578914165496826
    3. '(input' → logprob: -10.828913688659668
    4. ',input' → logprob: -12.578913688659668
    5. ')' → logprob: -14.703913688659668
    6. '=input' → logprob: -15.453913688659668
    7. '	input' → logprob: -15.828913688659668
    8. ' ' → logprob: -15.953913688659668
    9. '<input' → logprob: -16.328914642333984
    10. '```' → logprob: -16.828914642333984

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8688179850578308
    2. '())' → logprob: -1.1188180446624756
    3. '()' → logprob: -1.4938180446624756
    4. '().' → logprob: -3.7438180446624756
    5. '(' → logprob: -6.3688178062438965
    6. ')' → logprob: -6.4938178062438965
    7. '()));' → logprob: -6.8688178062438965
    8. '))' → logprob: -7.6188178062438965
    9. '()>' → logprob: -8.368818283081055
    10. '(),' → logprob: -8.993818283081055

Token 13: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00026979928952641785
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -12.125269889831543
    4. ' split' → logprob: -12.875269889831543
    5. '(split' → logprob: -15.125269889831543
    6. ')' → logprob: -16.375268936157227
    7. 'spl' → logprob: -17.125268936157227
    8. '```' → logprob: -19.125268936157227
    9. 'read' → logprob: -19.250268936157227
    10. 's' → logprob: -19.500268936157227

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0013040454359725118
    2. '()))' → logprob: -7.2513041496276855
    3. '()' → logprob: -7.5013041496276855
    4. '(' → logprob: -11.626303672790527
    5. '()));' → logprob: -11.626303672790527
    6. '())' → logprob: -11.751303672790527
    7. '('' → logprob: -12.001303672790527
    8. '(),' → logprob: -13.501303672790527
    9. ' ().' → logprob: -13.751303672790527
    10. '))' → logprob: -13.876303672790527

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'rstrip' → logprob: -13.500001907348633
    3. ' split' → logprob: -14.750001907348633
    4. '(split' → logprob: -14.875001907348633
    5. 'spl' → logprob: -16.625001907348633
    6. ')' → logprob: -17.375001907348633
    7. 'replace' → logprob: -17.500001907348633
    8. 'strip' → logprob: -17.750001907348633
    9. 's' → logprob: -17.875001907348633
    10. 'sp' → logprob: -18.625001907348633

Token 16: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.1154704093933105
    2. '()))' → logprob: -1.3654704093933105
    3. '(' → logprob: -1.6154704093933105
    4. ')' → logprob: -1.8654704093933105
    5. '))' → logprob: -3.1154704093933105
    6. '()' → logprob: -4.4904704093933105
    7. '('' → logprob: -4.9904704093933105
    8. '())))' → logprob: -8.115470886230469
    9. ')))' → logprob: -8.490470886230469
    10. ''))' → logprob: -8.990470886230469

Token 17: 'average' (ID: 33570)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.010557770729065
    2. 's' → logprob: -1.760557770729065
    3. 'result' → logprob: -2.5105576515197754
    4. 'for' → logprob: -2.6355576515197754
    5. 'print' → logprob: -2.7605576515197754
    6. 'count' → logprob: -3.1355576515197754
    7. 'sum' → logprob: -3.1355576515197754
    8. 'S' → logprob: -3.5105576515197754
    9. 'a' → logprob: -3.7605576515197754
    10. 'c' → logprob: -4.135557651519775

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39896059036254883
    2. '_' → logprob: -1.1489605903625488
    3. '()' → logprob: -4.773960590362549
    4. '(_)' → logprob: -6.398960590362549
    5. 's' → logprob: -6.773960590362549
    6. '(A' → logprob: -8.02396011352539
    7. ')' → logprob: -9.52396011352539
    8. 'A' → logprob: -10.39896011352539
    9. '=' → logprob: -10.52396011352539
    10. '_s' → logprob: -10.64896011352539

Token 19: ' (' (ID: 350)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.11297979950904846
    2. 'sum' → logprob: -2.2379798889160156
    3. '(sum' → logprob: -8.862979888916016
    4. ' ' → logprob: -11.237979888916016
    5. '	sum' → logprob: -14.237979888916016
    6. '(' → logprob: -14.737979888916016
    7. ' (' → logprob: -14.862979888916016
    8. '=sum' → logprob: -14.862979888916016
    9. ' A' → logprob: -15.362979888916016
    10. '   ' → logprob: -15.487979888916016

Token 20: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.014197825454175472
    2. ' sum' → logprob: -4.264197826385498
    3. ')' → logprob: -10.51419734954834
    4. 'A' → logprob: -12.13919734954834
    5. '(sum' → logprob: -14.26419734954834
    6. '	sum' → logprob: -14.51419734954834
    7. ' ' → logprob: -15.76419734954834
    8. ' A' → logprob: -16.139198303222656
    9. '=sum' → logprob: -16.264198303222656
    10. '   ' → logprob: -16.514198303222656

Token 21: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005572011577896774
    2. '(' → logprob: -7.5005574226379395
    3. 'A' → logprob: -12.500556945800781
    4. ')' → logprob: -15.375556945800781
    5. '(N' → logprob: -16.25055694580078
    6. ' (' → logprob: -16.37555694580078
    7. '(
' → logprob: -17.75055694580078
    8. '(I' → logprob: -17.75055694580078
    9. '(a' → logprob: -18.25055694580078
    10. ' A' → logprob: -18.37555694580078

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02629355899989605
    2. '/' → logprob: -4.776293754577637
    3. ' /' → logprob: -4.776293754577637
    4. '(len' → logprob: -5.276293754577637
    5. ' )' → logprob: -6.026293754577637
    6. '(' → logprob: -7.526293754577637
    7. '(A' → logprob: -7.901293754577637
    8. 'len' → logprob: -8.026293754577637
    9. ')/' → logprob: -8.901293754577637
    10. ' len' → logprob: -9.901293754577637

Token 23: ' +' (ID: 659)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.7965021729469299
    2. ')' → logprob: -1.2965021133422852
    3. '/' → logprob: -1.4215021133422852
    4. ' )' → logprob: -3.421502113342285
    5. ' len' → logprob: -7.421502113342285
    6. ')/' → logprob: -8.171502113342285
    7. ' ' → logprob: -8.171502113342285
    8. 'len' → logprob: -9.046502113342285
    9. '*' → logprob: -9.671502113342285
    10. '`' → logprob: -10.171502113342285

Token 24: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.43345731496810913
    2. ' len' → logprob: -1.558457374572754
    3. 'N' → logprob: -2.308457374572754
    4. 'len' → logprob: -3.558457374572754
    5. '0' → logprob: -5.183457374572754
    6. '1' → logprob: -5.683457374572754
    7. ')' → logprob: -6.183457374572754
    8. ' ' → logprob: -6.433457374572754
    9. '(len' → logprob: -8.558457374572754
    10. ' )' → logprob: -8.683457374572754

Token 25: 'sum' (ID: 12298)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5329009294509888
    2. ' N' → logprob: -1.2829009294509888
    3. '1' → logprob: -2.157900810241699
    4. ' ' → logprob: -4.532900810241699
    5. '0' → logprob: -5.782900810241699
    6. '10' → logprob: -7.157900810241699
    7. 'K' → logprob: -7.282900810241699
    8. '2' → logprob: -7.532900810241699
    9. ' K' → logprob: -7.657900810241699
    10. 'M' → logprob: -7.782900810241699

Token 26: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.06962259113788605
    2. '([' → logprob: -2.81962251663208
    3. '(' → logprob: -5.31962251663208
    4. '(range' → logprob: -6.81962251663208
    5. ')' → logprob: -7.56962251663208
    6. 'A' → logprob: -8.069622993469238
    7. '(N' → logprob: -8.444622993469238
    8. '(B' → logprob: -8.819622993469238
    9. '(len' → logprob: -9.194622993469238
    10. '(a' → logprob: -10.069622993469238

Token 27: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44710537791252136
    2. '))' → logprob: -1.5721054077148438
    3. ')/' → logprob: -3.5721054077148438
    4. 'len' → logprob: -4.322105407714844
    5. ' )' → logprob: -4.322105407714844
    6. ' len' → logprob: -4.697105407714844
    7. '**' → logprob: -4.697105407714844
    8. '*' → logprob: -4.822105407714844
    9. ' /' → logprob: -4.947105407714844
    10. ' //' → logprob: -5.072105407714844

Token 28: 'len' (ID: 3303)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07893969118595123
    2. 'len' → logprob: -3.07893967628479
    3. ' N' → logprob: -3.70393967628479
    4. ' len' → logprob: -5.703939914703369
    5. '2' → logprob: -6.578939914703369
    6. 'n' → logprob: -8.453939437866211
    7. '1' → logprob: -9.078939437866211
    8. '10' → logprob: -9.578939437866211
    9. ' ' → logprob: -9.953939437866211
    10. '(len' → logprob: -10.953939437866211

Token 29: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0005641150055453181
    2. '(' → logprob: -7.500564098358154
    3. 'A' → logprob: -11.750564575195312
    4. '(N' → logprob: -13.750564575195312
    5. ')' → logprob: -14.625564575195312
    6. ' (' → logprob: -15.250564575195312
    7. '```' → logprob: -15.375564575195312
    8. '(B' → logprob: -15.500564575195312
    9. '(`' → logprob: -15.625564575195312
    10. '`' → logprob: -15.625564575195312

Token 30: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.11044128239154816
    2. ')))' → logprob: -2.610441207885742
    3. ')' → logprob: -3.485441207885742
    4. '))/' → logprob: -8.235441207885742
    5. ' ))' → logprob: -10.110441207885742
    6. '))))' → logprob: -10.610441207885742
    7. '))/(' → logprob: -11.235441207885742
    8. '()))' → logprob: -11.485441207885742
    9. '+' → logprob: -11.735441207885742
    10. ' ' → logprob: -11.860441207885742

Token 31: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08122963458299637
    2. ')//' → logprob: -2.8312296867370605
    3. '))' → logprob: -4.0812296867370605
    4. ' )' → logprob: -6.2062296867370605
    5. '//' → logprob: -10.081229209899902
    6. '+' → logprob: -10.081229209899902
    7. ')/' → logprob: -10.206229209899902
    8. ' ))' → logprob: -10.706229209899902
    9. ')))' → logprob: -11.706229209899902
    10. '))/' → logprob: -12.331229209899902

Token 32: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28117555379867554
    2. ' ' → logprob: -1.4061756134033203
    3. '1' → logprob: -10.90617561340332
    4. '2' → logprob: -13.40617561340332
    5. ')' → logprob: -13.78117561340332
    6. ' N' → logprob: -13.90617561340332
    7. '5' → logprob: -14.53117561340332
    8. ' len' → logprob: -14.90617561340332
    9. '>' → logprob: -15.03117561340332
    10. '4' → logprob: -15.21867561340332

Token 33: '/' (ID: 14)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21216028928756714
    2. ')' → logprob: -1.712160348892212
    3. ' ))' → logprob: -5.712160110473633
    4. '1' → logprob: -6.337160110473633
    5. '))/' → logprob: -6.462160110473633
    6. ' )' → logprob: -7.087160110473633
    7. '+' → logprob: -7.587160110473633
    8. ')/' → logprob: -7.587160110473633
    9. ')//' → logprob: -7.712160110473633
    10. ')))' → logprob: -7.962160110473633

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07489761710166931
    2. 'len' → logprob: -3.074897527694702
    3. 'N' → logprob: -3.824897527694702
    4. ' ' → logprob: -6.324897766113281
    5. '1' → logprob: -7.199897766113281
    6. ' len' → logprob: -7.324897766113281
    7. '0' → logprob: -7.949897766113281
    8. '3' → logprob: -8.824897766113281
    9. ' N' → logprob: -9.199897766113281
    10. '(' → logprob: -9.324897766113281

Token 35: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2686838209629059
    2. ')' → logprob: -1.5186837911605835
    3. ')))' → logprob: -4.393683910369873
    4. ')//' → logprob: -6.393683910369873
    5. '))/' → logprob: -6.643683910369873
    6. ')/' → logprob: -8.143683433532715
    7. ' ))' → logprob: -8.268683433532715
    8. ' )' → logprob: -8.518683433532715
    9. '//' → logprob: -8.893683433532715
    10. ')+' → logprob: -9.268683433532715

Token 36: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023442529141902924
    2. ')//' → logprob: -4.39844274520874
    3. ' )' → logprob: -5.39844274520874
    4. '//' → logprob: -5.64844274520874
    5. ' //' → logprob: -6.14844274520874
    6. '```' → logprob: -9.273442268371582
    7. '[len' → logprob: -9.523442268371582
    8. 'len' → logprob: -9.773442268371582
    9. ')/' → logprob: -9.773442268371582
    10. '`)' → logprob: -9.773442268371582

Token 37: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019310165662318468
    2. ' len' → logprob: -6.251931190490723
    3. 'N' → logprob: -13.501931190490723
    4. '(len' → logprob: -13.876931190490723
    5. ' N' → logprob: -17.626930236816406
    6. ' ' → logprob: -18.001930236816406
    7. '[len' → logprob: -18.001930236816406
    8. '	len' → logprob: -18.001930236816406
    9. '<len' → logprob: -19.126930236816406
    10. 'max' → logprob: -19.626930236816406

Token 38: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.10028193891048431
    2. '(' → logprob: -2.3502819538116455
    3. '(N' → logprob: -10.975281715393066
    4. ' (' → logprob: -11.475281715393066
    5. '(`' → logprob: -11.850281715393066
    6. '(
' → logprob: -11.975281715393066
    7. '(

' → logprob: -11.975281715393066
    8. '((' → logprob: -12.350281715393066
    9. 'A' → logprob: -12.475281715393066
    10. '(a' → logprob: -12.725281715393066

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000731377920601517
    2. '))' → logprob: -7.250731468200684
    3. ' )' → logprob: -11.125731468200684
    4. ')))' → logprob: -12.750731468200684
    5. ')`' → logprob: -13.875731468200684
    6. ')
' → logprob: -14.250731468200684
    7. '`)' → logprob: -14.500731468200684
    8. '')' → logprob: -14.875731468200684
    9. '）' → logprob: -15.500731468200684
    10. '()' → logprob: -16.125730514526367

Token 40: 'total' (ID: 9577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08633384853601456
    2. '+' → logprob: -2.836333751678467
    3. ' ' → logprob: -4.461333751678467
    4. '*' → logprob: -5.711333751678467
    5. '```' → logprob: -6.211333751678467
    6. '
' → logprob: -6.336333751678467
    7. '(' → logprob: -6.461333751678467
    8. '<|end|>' → logprob: -6.961333751678467
    9. '**' → logprob: -7.961333751678467
    10. 'A' → logprob: -8.086334228515625

Token 41: '_squared' (ID: 140523)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01847638189792633
    2. '(' → logprob: -4.268476486206055
    3. ')' → logprob: -6.893476486206055
    4. '_sum' → logprob: -7.018476486206055
    5. 's' → logprob: -8.143476486206055
    6. '_s' → logprob: -8.393476486206055
    7. 'A' → logprob: -8.643476486206055
    8. '_diff' → logprob: -8.643476486206055
    9. '(A' → logprob: -8.768476486206055
    10. '_space' → logprob: -8.768476486206055

Token 42: '_diff' (ID: 41047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5771338939666748
    2. '_error' → logprob: -1.7021338939666748
    3. '_diff' → logprob: -1.8271338939666748
    4. '_sum' → logprob: -3.327133893966675
    5. ' =' → logprob: -4.077134132385254
    6. '_difference' → logprob: -4.327134132385254
    7. '_distance' → logprob: -4.452134132385254
    8. '=' → logprob: -4.702134132385254
    9. '_dist' → logprob: -6.202134132385254
    10. '_vari' → logprob: -6.327134132385254

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6486545205116272
    2. '(' → logprob: -1.5236544609069824
    3. '=' → logprob: -1.5236544609069824
    4. 's' → logprob: -3.2736544609069824
    5. '_' → logprob: -6.023654460906982
    6. ' (' → logprob: -8.27365493774414
    7. ' ' → logprob: -8.39865493774414
    8. ')' → logprob: -8.77365493774414
    9. ' +=' → logprob: -9.39865493774414
    10. '()' → logprob: -9.77365493774414

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11657745391130447
    2. ' ' → logprob: -2.866577386856079
    3. ' sum' → logprob: -3.366577386856079
    4. 'sum' → logprob: -3.991577386856079
    5. '(sum' → logprob: -8.8665771484375
    6. ' (' → logprob: -11.8665771484375
    7. ' ' → logprob: -12.2415771484375
    8. '(' → logprob: -12.4915771484375
    9. '   ' → logprob: -13.1165771484375
    10. '```' → logprob: -13.6790771484375

Token 45: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2843571603298187
    2. '0' → logprob: -1.4093571901321411
    3. ' sum' → logprob: -5.909357070922852
    4. '(sum' → logprob: -7.784357070922852
    5. ' ' → logprob: -9.784357070922852
    6. '=sum' → logprob: -12.784357070922852
    7. '```' → logprob: -12.909357070922852
    8. 'abs' → logprob: -13.034357070922852
    9. '	sum' → logprob: -13.284357070922852
    10. '   ' → logprob: -13.534357070922852

Token 46: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16552795469760895
    2. ' for' → logprob: -2.4155280590057373
    3. '<|end|>' → logprob: -3.6655280590057373
    4. '
' → logprob: -3.9155280590057373
    5. '\n' → logprob: -4.165527820587158
    6. '' → logprob: -7.915527820587158
    7. '\' → logprob: -7.915527820587158
    8. ' ' → logprob: -8.290528297424316
    9. '  
' → logprob: -8.415528297424316
    10. '+' → logprob: -8.415528297424316

Token 47: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001681367284618318
    2. ' for' → logprob: -6.501681327819824
    3. '\n' → logprob: -9.126681327819824
    4. '```' → logprob: -10.001681327819824
    5. '
' → logprob: -11.001681327819824
    6. '\' → logprob: -12.626681327819824
    7. 'For' → logprob: -13.626681327819824
    8. '	for' → logprob: -13.751681327819824
    9. '<|end|>' → logprob: -14.626681327819824
    10. '`' → logprob: -14.876681327819824

Token 48: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.49754127860069275
    2. '+' → logprob: -1.1225413084030151
    3. '=' → logprob: -3.1225411891937256
    4. 'f' → logprob: -5.122541427612305
    5. '[' → logprob: -5.622541427612305
    6. ' +=' → logprob: -5.997541427612305
    7. '+=' → logprob: -6.122541427612305
    8. 'for' → logprob: -6.122541427612305
    9. '++' → logprob: -6.497541427612305
    10. 'nt' → logprob: -6.497541427612305

Token 49: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009769781492650509
    2. ' ' → logprob: -4.634769916534424
    3. '1' → logprob: -11.384769439697266
    4. '2' → logprob: -14.572269439697266
    5. 'N' → logprob: -15.009769439697266
    6. 'len' → logprob: -15.259769439697266
    7. ' N' → logprob: -15.509769439697266
    8. ' len' → logprob: -15.697269439697266
    9. '```' → logprob: -16.009769439697266
    10. '(' → logprob: -16.134769439697266

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013679367839358747
    2. ' ' → logprob: -9.375136375427246
    3. '1' → logprob: -10.125136375427246
    4. 'N' → logprob: -12.000136375427246
    5. '2' → logprob: -13.125136375427246
    6. 'len' → logprob: -13.625136375427246
    7. '(' → logprob: -14.625136375427246
    8. 'i' → logprob: -14.750136375427246
    9. 'sum' → logprob: -14.875136375427246
    10. 'n' → logprob: -15.625136375427246

Token 51: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.494173526763916
    2. '<|end|>' → logprob: -0.994173526763916
    3. 'while' → logprob: -4.494173526763916
    4. ' while' → logprob: -5.619173526763916
    5. '<|end|>' → logprob: -5.744173526763916
    6. ' 
' → logprob: -7.744173526763916
    7. '  
' → logprob: -7.869173526763916
    8. 'i' → logprob: -8.619173049926758
    9. '```' → logprob: -8.619173049926758
    10. ' ' → logprob: -9.369173049926758

Token 52: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19716915488243103
    2. ' while' → logprob: -2.822169065475464
    3. '<|end|>' → logprob: -2.947169065475464
    4. '
' → logprob: -4.447169303894043
    5. '```' → logprob: -4.447169303894043
    6. 'i' → logprob: -4.572169303894043
    7. ' ' → logprob: -4.822169303894043
    8. 'for' → logprob: -5.197169303894043
    9. '**' → logprob: -5.822169303894043
    10. '+' → logprob: -5.947169303894043

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008151084766723216
    2. 'i' → logprob: -7.125814914703369
    3. ' ' → logprob: -11.625815391540527
    4. '	i' → logprob: -13.875815391540527
    5. ' <' → logprob: -15.625815391540527
    6. '(i' → logprob: -16.00081443786621
    7. '<' → logprob: -16.00081443786621
    8. ' ' → logprob: -16.00081443786621
    9. '   ' → logprob: -16.25081443786621
    10. '  ' → logprob: -17.12581443786621

Token 54: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04932282865047455
    2. '<' → logprob: -3.0493228435516357
    3. ' <=' → logprob: -7.299322605133057
    4. '<=' → logprob: -10.424323081970215
    5. ' ' → logprob: -11.174323081970215
    6. '<len' → logprob: -11.924323081970215
    7. '<n' → logprob: -13.049323081970215
    8. ' <
' → logprob: -13.174323081970215
    9. '<int' → logprob: -14.049323081970215
    10. '<size' → logprob: -14.674323081970215

Token 55: ' N' (ID: 478)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4317643642425537
    2. ' len' → logprob: -1.6817643642425537
    3. 'N' → logprob: -2.0567643642425537
    4. ' N' → logprob: -3.3067643642425537
    5. ' ' → logprob: -10.181764602661133
    6. 'n' → logprob: -10.681764602661133
    7. '(len' → logprob: -11.181764602661133
    8. ' n' → logprob: -12.431764602661133
    9. '	len' → logprob: -12.806764602661133
    10. '=len' → logprob: -13.306764602661133

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017975156661123037
    2. ':
' → logprob: -6.376797676086426
    3. ' :' → logprob: -9.501797676086426
    4. '   ' → logprob: -12.001797676086426
    5. '+:' → logprob: -12.751797676086426
    6. '):' → logprob: -13.126797676086426
    7. ':**' → logprob: -13.251797676086426
    8. '**' → logprob: -13.501797676086426
    9. ' :
' → logprob: -13.501797676086426
    10. ':i' → logprob: -13.626797676086426

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09794879704713821
    2. ' total' → logprob: -2.8479487895965576
    3. ' ' → logprob: -3.9729487895965576
    4. 'total' → logprob: -4.597949028015137
    5. ':' → logprob: -6.472949028015137
    6. '    ' → logprob: -6.847949028015137
    7. '  ' → logprob: -6.972949028015137
    8. '    
' → logprob: -7.472949028015137
    9. '<|end|>' → logprob: -7.722949028015137
    10. ' 
' → logprob: -8.097949028015137

Token 58: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4883393347263336
    2. '   ' → logprob: -1.2383393049240112
    3. 'total' (adapté à ' total') → logprob: -2.488339424133301
    4. ' ' → logprob: -4.613339424133301
    5. '    ' → logprob: -6.863339424133301
    6. ' i' → logprob: -7.988339424133301
    7. '  ' → logprob: -8.3633394241333
    8. '```' → logprob: -8.4883394241333
    9. '	total' → logprob: -8.6133394241333
    10. '    
' → logprob: -8.6133394241333

Token 59: '_squared' (ID: 140523)
  Prédit: '_squared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_squared' → logprob: -3.166338137816638e-05
    2. '_' → logprob: -10.500031471252441
    3. '_scaled' → logprob: -13.750031471252441
    4. '_total' → logprob: -14.125031471252441
    5. '_s' → logprob: -14.375031471252441
    6. '```' → logprob: -14.750031471252441
    7. '_square' → logprob: -15.125031471252441
    8. '_difference' → logprob: -15.750031471252441
    9. ' _' → logprob: -16.125032424926758
    10. '   ' → logprob: -16.125032424926758

Token 60: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0001439459010725841
    2. 'diff' → logprob: -9.000144004821777
    3. '_difference' → logprob: -11.125144004821777
    4. '_d' → logprob: -12.875144004821777
    5. '_' → logprob: -14.125144004821777
    6. '_dist' → logprob: -14.250144004821777
    7. '	diff' → logprob: -14.625144004821777
    8. '_DIFF' → logprob: -15.000144004821777
    9. 'Diff' → logprob: -15.125144004821777
    10. 'difference' → logprob: -15.500144004821777

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.009837547317147255
    2. '+=' → logprob: -4.634837627410889
    3. '+=(' → logprob: -9.63483715057373
    4. '   ' → logprob: -11.63483715057373
    5. ']+=' → logprob: -13.63483715057373
    6. '+' → logprob: -13.75983715057373
    7. '```' → logprob: -14.00983715057373
    8. ' -=' → logprob: -14.13483715057373
    9. ' +' → logprob: -14.13483715057373
    10. ' =' → logprob: -14.50983715057373

Token 62: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.42959943413734436
    2. '(A' → logprob: -1.054599404335022
    3. '   ' → logprob: -7.554599285125732
    4. '(abs' → logprob: -8.17959976196289
    5. '((' → logprob: -11.05459976196289
    6. ' ' → logprob: -11.30459976196289
    7. '(a' → logprob: -11.42959976196289
    8. '(' → logprob: -11.55459976196289
    9. '(i' → logprob: -11.55459976196289
    10. '  ' → logprob: -11.92959976196289

Token 63: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012576404958963394
    2. ' A' → logprob: -4.512576580047607
    3. '(A' → logprob: -6.512576580047607
    4. ' (' → logprob: -11.13757610321045
    5. 'average' → logprob: -11.88757610321045
    6. ' ' → logprob: -12.01257610321045
    7. '   ' → logprob: -12.26257610321045
    8. '(' → logprob: -12.26257610321045
    9. ')' → logprob: -13.38757610321045
    10. '	A' → logprob: -13.51257610321045

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -14.625001907348633
    4. '```' → logprob: -16.875001907348633
    5. '[
' → logprob: -17.000001907348633
    6. ' [' → logprob: -17.125001907348633
    7. '[I' → logprob: -17.875001907348633
    8. '
' → logprob: -18.875001907348633
    9. ' ' → logprob: -18.875001907348633
    10. ')' → logprob: -19.250001907348633

Token 65: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3891163468360901
    2. '-' → logprob: -1.1391162872314453
    3. ')' → logprob: -6.264116287231445
    4. ']' → logprob: -8.264116287231445
    5. '-average' → logprob: -10.639116287231445
    6. ' ' → logprob: -11.389116287231445
    7. ')-' → logprob: -11.514116287231445
    8. ' )' → logprob: -12.014116287231445
    9. ' ' → logprob: -12.139116287231445
    10. '<|end|>' → logprob: -12.264116287231445

Token 66: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08899671584367752
    2. '-' → logprob: -2.463996648788452
    3. '-average' → logprob: -10.088996887207031
    4. ')' → logprob: -11.963996887207031
    5. ' ' → logprob: -12.213996887207031
    6. ' ' → logprob: -13.463996887207031
    7. '   ' → logprob: -14.213996887207031
    8. '  ' → logprob: -14.588996887207031
    9. '<|end|>' → logprob: -14.713996887207031
    10. '-)' → logprob: -15.588996887207031

Token 67: ' average' (ID: 7848)
  Prédit: ' average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' average' → logprob: -0.07889804989099503
    2. 'average' → logprob: -2.5788979530334473
    3. 'Average' → logprob: -12.578898429870605
    4. '_average' → logprob: -12.953898429870605
    5. ')' → logprob: -13.578898429870605
    6. ' ' → logprob: -14.703898429870605
    7. ' )' → logprob: -15.078898429870605
    8. '.average' → logprob: -15.203898429870605
    9. '平均' → logprob: -16.20389747619629
    10. ' ' → logprob: -17.07889747619629

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10024333745241165
    2. ')**' → logprob: -2.350243330001831
    3. ' )' → logprob: -10.35024356842041
    4. '   ' → logprob: -13.10024356842041
    5. ')*(' → logprob: -14.60024356842041
    6. ')*' → logprob: -14.97524356842041
    7. '")' → logprob: -15.35024356842041
    8. '`)' → logprob: -15.35024356842041
    9. '```' → logprob: -15.35024356842041
    10. '**' → logprob: -15.47524356842041

Token 69: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5798947215080261
    2. '**' → logprob: -0.9548947215080261
    3. ' ' → logprob: -3.579894781112671
    4. ')' → logprob: -4.204894542694092
    5. ' **' → logprob: -4.579894542694092
    6. ')**' → logprob: -6.829894542694092
    7. '```' → logprob: -7.954894542694092
    8. '*' → logprob: -8.32989501953125
    9. ' )' → logprob: -8.70489501953125
    10. '(' → logprob: -9.45489501953125

Token 70: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.250036239624023
    3. '```' → logprob: -15.000036239624023
    4. '۲' → logprob: -16.187536239624023
    5. '   ' → logprob: -16.625036239624023
    6. '٢' → logprob: -16.812536239624023
    7. '²' → logprob: -17.000036239624023
    8. '२' → logprob: -17.687536239624023
    9. '２' → logprob: -18.187536239624023
    10. '২' → logprob: -18.312536239624023

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.50000286102295
    4. '۲' → logprob: -16.500001907348633
    5. '٢' → logprob: -16.937501907348633
    6. '²' → logprob: -17.437501907348633
    7. '   ' → logprob: -17.812501907348633
    8. '२' → logprob: -17.937501907348633
    9. '3' → logprob: -18.062501907348633
    10. 'int' → logprob: -18.375001907348633

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05066986009478569
    2. '
' → logprob: -3.0506699085235596
    3. ' i' → logprob: -7.1756696701049805
    4. '	i' → logprob: -7.5506696701049805
    5. 'i' → logprob: -8.17566967010498
    6. '    
' → logprob: -8.30066967010498
    7. '\n' → logprob: -9.55066967010498
    8. '[i' → logprob: -10.05066967010498
    9. '
' → logprob: -10.42566967010498
    10. '<|end|>' → logprob: -10.42566967010498

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08119216561317444
    2. '   ' → logprob: -2.8311922550201416
    3. '\n' → logprob: -4.5811920166015625
    4. 'i' → logprob: -5.9561920166015625
    5. '    
' → logprob: -6.2061920166015625
    6. '```' → logprob: -6.8311920166015625
    7. ' i' → logprob: -7.2061920166015625
    8. '  
' → logprob: -7.3311920166015625
    9. '\' → logprob: -7.5811920166015625
    10. ' 
' → logprob: -8.081192016601562

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.11417171359062195
    2. '   ' → logprob: -2.6141717433929443
    3. ' i' → logprob: -3.3641717433929443
    4. '	i' → logprob: -9.739171981811523
    5. '  ' → logprob: -11.489171981811523
    6. ' ' → logprob: -12.864171981811523
    7. ',i' → logprob: -13.239171981811523
    8. '[i' → logprob: -14.114171981811523
    9. '_i' → logprob: -14.614171981811523
    10. '*i' → logprob: -15.114171981811523

Token 75: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08696098625659943
    2. '+=' → logprob: -2.836961030960083
    3. ' +=' → logprob: -3.711961030960083
    4. '++' → logprob: -9.336960792541504
    5. ' +' → logprob: -9.336960792541504
    6. '+++' → logprob: -10.836960792541504
    7. '<|end|>' → logprob: -10.836960792541504
    8. '=' → logprob: -11.086960792541504
    9. ' ' → logprob: -11.461960792541504
    10. '+='' → logprob: -12.211960792541504

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008046258008107543
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -15.750804901123047
    4. '   ' → logprob: -18.125804901123047
    5. '`' → logprob: -19.313304901123047
    6. '+' → logprob: -19.625804901123047
    7. ' ' → logprob: -19.938304901123047
    8. '0' → logprob: -20.250804901123047
    9. '１' → logprob: -20.375804901123047
    10. '  ' → logprob: -20.500804901123047

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.125
    4. '   ' → logprob: -19.25
    5. '１' → logprob: -20.5625
    6. '`' → logprob: -21.125
    7. '0' → logprob: -21.1875
    8. '2' → logprob: -21.375
    9. '+' → logprob: -21.4375
    10. '۱' → logprob: -21.5

Token 78: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017391976434737444
    2. '
' → logprob: -7.126739025115967
    3. ')' → logprob: -8.126739501953125
    4. '```' → logprob: -8.501739501953125
    5. '<|end|>' → logprob: -8.876739501953125
    6. 'p' → logprob: -8.876739501953125
    7. '#' → logprob: -10.876739501953125
    8. '`' → logprob: -11.001739501953125
    9. ' print' → logprob: -11.001739501953125
    10. '' → logprob: -11.251739501953125

Token 79: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008587033487856388
    2. '
' → logprob: -5.258586883544922
    3. '<|end|>' → logprob: -5.883586883544922
    4. '```' → logprob: -8.758586883544922
    5. ')' → logprob: -9.258586883544922
    6. '#' → logprob: -9.383586883544922
    7. ' print' → logprob: -9.383586883544922
    8. '  
' → logprob: -10.008586883544922
    9. ' 
' → logprob: -10.883586883544922
    10. '#print' → logprob: -11.133586883544922

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016277639952022582
    2. ':
' → logprob: -9.250163078308105
    3. ' :' → logprob: -9.625163078308105
    4. ':return' → logprob: -15.375163078308105
    5. ':

' → logprob: -15.750163078308105
    6. ':
' → logprob: -16.37516212463379
    7. ' :
' → logprob: -16.50016212463379
    8. ':**' → logprob: -17.25016212463379
    9. ':def' → logprob: -17.37516212463379
    10. ',' → logprob: -17.50016212463379

Token 81: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.18855899572372437
    2. 'print' → logprob: -2.063559055328369
    3. '   ' → logprob: -3.313559055328369
    4. ' total' → logprob: -4.938559055328369
    5. ' return' → logprob: -8.063558578491211
    6. '    
' → logprob: -8.313558578491211
    7. ' 
' → logprob: -8.563558578491211
    8. '```' → logprob: -8.688558578491211
    9. ' break' → logprob: -8.813558578491211
    10. 'total' → logprob: -9.313558578491211

Token 82: ' pass' (ID: 1853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009797057136893272
    2. ' print' → logprob: -4.634797096252441
    3. '```' → logprob: -11.259797096252441
    4. 'total' → logprob: -11.509797096252441
    5. '   ' → logprob: -11.509797096252441
    6. ' total' → logprob: -12.884797096252441
    7. '
' → logprob: -13.884797096252441
    8. 'pass' (adapté à ' pass') → logprob: -14.384797096252441
    9. '    
' → logprob: -14.384797096252441
    10. '	print' → logprob: -14.759797096252441

Token 83: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2703011929988861
    2. '<|end|>' → logprob: -2.020301103591919
    3. 'print' → logprob: -2.645301103591919
    4. '\n' → logprob: -4.895301342010498
    5. '```' → logprob: -5.020301342010498
    6. '  
' → logprob: -5.395301342010498
    7. ' ' → logprob: -5.770301342010498
    8. '#' → logprob: -5.895301342010498
    9. ' 
' → logprob: -6.145301342010498
    10. ')' → logprob: -6.645301342010498

Token 84: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03280322253704071
    2. '
' → logprob: -4.407803058624268
    3. '<|end|>' → logprob: -4.407803058624268
    4. '#' → logprob: -5.782803058624268
    5. 'if' → logprob: -7.032803058624268
    6. '```' → logprob: -7.157803058624268
    7. 'total' → logprob: -7.532803058624268
    8. ' ' → logprob: -8.032803535461426
    9. '  
' → logprob: -8.157803535461426
    10. 'return' → logprob: -8.532803535461426

Token 85: ' Because' (ID: 13602)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.10504617542028427
    2. ' break' → logprob: -2.855046272277832
    3. 'print' → logprob: -3.855046272277832
    4. ' total' → logprob: -4.105046272277832
    5. ' ' → logprob: -6.230046272277832
    6. ' continue' → logprob: -7.605046272277832
    7. ' if' → logprob: -7.730046272277832
    8. 'break' → logprob: -8.105046272277832
    9. ' result' → logprob: -8.605046272277832
    10. ' 
' → logprob: -8.605046272277832

Token 86: ' I' (ID: 357)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.28903928399086
    2. 'the' → logprob: -1.5390392541885376
    3. ' we' → logprob: -5.414039134979248
    4. 'we' → logprob: -5.539039134979248
    5. ' you' → logprob: -5.664039134979248
    6. ' there' → logprob: -5.789039134979248
    7. ' this' → logprob: -5.914039134979248
    8. 'Python' → logprob: -6.289039134979248
    9. '#' → logprob: -6.539039134979248
    10. ' in' → logprob: -6.664039134979248

Token 87: ' like' (ID: 1299)
  Prédit: ' want'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' want' → logprob: -0.4317687749862671
    2. ''m' → logprob: -2.0567688941955566
    3. 'f' → logprob: -2.8067688941955566
    4. 't' → logprob: -3.4317688941955566
    5. ' don't' → logprob: -3.9317688941955566
    6. 'want' → logprob: -4.181768894195557
    7. ' have' → logprob: -4.431768894195557
    8. ''ve' → logprob: -4.556768894195557
    9. 'm' → logprob: -4.556768894195557
    10. ' am' → logprob: -4.806768894195557

Token 88: ' marking' (ID: 62550)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.26940813660621643
    2. ' the' → logprob: -2.2694082260131836
    3. '<|end|>' → logprob: -2.6444082260131836
    4. 'to' → logprob: -3.7694082260131836
    5. ' this' → logprob: -4.519408226013184
    6. ' ' → logprob: -5.019408226013184
    7. 'the' → logprob: -5.269408226013184
    8. ' that' → logprob: -6.269408226013184
    9. '<|end|>' → logprob: -6.519408226013184
    10. ' you' → logprob: -6.644408226013184

Token 89: ' the' (ID: 290)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24924349784851074
    2. '<|end|>' → logprob: -1.6242434978485107
    3. '```' → logprob: -5.12424373626709
    4. ' ' → logprob: -5.37424373626709
    5. 'print' → logprob: -6.37424373626709
    6. '#' → logprob: -6.37424373626709
    7. '\n' → logprob: -6.37424373626709
    8. '  
' → logprob: -6.62424373626709
    9. ')' → logprob: -6.74924373626709
    10. '<|end|>' → logprob: -6.87424373626709

Token 90: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.41745439171791077
    2. ' end' → logprob: -1.2924543619155884
    3. 'else' → logprob: -3.292454481124878
    4. 'loop' → logprob: -5.167454242706299
    5. ' loop' → logprob: -5.167454242706299
    6. 'loops' → logprob: -5.417454242706299
    7. ' else' → logprob: -5.917454242706299
    8. ' completion' → logprob: -6.292454242706299
    9. ' loops' → logprob: -6.292454242706299
    10. 'completion' → logprob: -6.417454242706299

Token 91: ' of' (ID: 328)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2433343082666397
    2. '
' → logprob: -1.6183342933654785
    3. '<|end|>' → logprob: -4.4933342933654785
    4. '#' → logprob: -5.7433342933654785
    5. '```' → logprob: -7.1183342933654785
    6. ')' → logprob: -7.3683342933654785
    7. '  
' → logprob: -8.368334770202637
    8. '\n' → logprob: -8.368334770202637
    9. ' print' → logprob: -8.743334770202637
    10. '#print' → logprob: -8.868334770202637

Token 92: ' while' (ID: 2049)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0593868494033813
    2. 'while' → logprob: -1.4343868494033813
    3. ' while' → logprob: -1.5593868494033813
    4. ' loops' → logprob: -2.434386730194092
    5. 'the' → logprob: -2.684386730194092
    6. ' loop' → logprob: -3.434386730194092
    7. 'loops' → logprob: -4.434386730194092
    8. 'loop' → logprob: -5.684386730194092
    9. ' block' → logprob: -7.934386730194092
    10. ' a' → logprob: -8.05938720703125

Token 93: ' loops' (ID: 57130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009382384829223156
    2. '
' → logprob: -5.009382247924805
    3. '#' → logprob: -7.259382247924805
    4. 'p' → logprob: -7.634382247924805
    5. ')' → logprob: -8.009382247924805
    6. '```' → logprob: -8.134382247924805
    7. '<|end|>' → logprob: -8.509382247924805
    8. ' print' → logprob: -8.634382247924805
    9. '  
' → logprob: -10.009382247924805
    10. ' 
' → logprob: -10.134382247924805

Token 94: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18318216502666473
    2. '
' → logprob: -2.0581822395324707
    3. '<|end|>' → logprob: -3.4331822395324707
    4. '#' → logprob: -6.308182239532471
    5. '```' → logprob: -6.308182239532471
    6. ')' → logprob: -7.058182239532471
    7. '  
' → logprob: -7.558182239532471
    8. '\n' → logprob: -8.058181762695312
    9. ' ' → logprob: -8.558181762695312
    10. ' 
' → logprob: -8.683181762695312

Token 95: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025103818625211716
    2. '
' → logprob: -7.3775105476379395
    3. '<|end|>' → logprob: -7.5025105476379395
    4. 'if' → logprob: -7.6275105476379395
    5. '#' → logprob: -7.8775105476379395
    6. '```' → logprob: -9.252510070800781
    7. 'result' → logprob: -9.752510070800781
    8. ' print' → logprob: -9.752510070800781
    9. ')' → logprob: -10.127510070800781
    10. 'average' → logprob: -10.377510070800781

Token 96: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006509594968520105
    2. '(total' → logprob: -7.375650882720947
    3. '((' → logprob: -11.500651359558105
    4. '(sum' → logprob: -12.500651359558105
    5. '('' → logprob: -12.750651359558105
    6. '(`' → logprob: -13.500651359558105
    7. ' (' → logprob: -13.500651359558105
    8. '("("' → logprob: -13.750651359558105
    9. '()' → logprob: -13.875651359558105
    10. '(
' → logprob: -14.125651359558105

Token 97: '_squared' (ID: 140523)
  Prédit: '_squared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_squared' → logprob: -0.000473091087769717
    2. '_' → logprob: -7.7504730224609375
    3. '_)' → logprob: -10.625473022460938
    4. '_s' → logprob: -12.125473022460938
    5. '_scaled' → logprob: -12.125473022460938
    6. ')' → logprob: -12.500473022460938
    7. '_total' → logprob: -14.125473022460938
    8. '_square' → logprob: -14.625473022460938
    9. ')_' → logprob: -14.625473022460938
    10. '__' → logprob: -15.250473022460938

Token 98: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0001664717128733173
    2. 'diff' → logprob: -8.750166893005371
    3. '_d' → logprob: -12.875166893005371
    4. '_' → logprob: -13.625166893005371
    5. 'iff' → logprob: -13.875166893005371
    6. 'dif' → logprob: -14.125166893005371
    7. 'iffer' → logprob: -14.375166893005371
    8. '_DIFF' → logprob: -14.500166893005371
    9. '	diff' → logprob: -14.625166893005371
    10. '_dist' → logprob: -15.250166893005371

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.750001907348633
    3. '))' → logprob: -14.500001907348633
    4. ')`' → logprob: -14.875001907348633
    5. ')
' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.625001907348633
    7. ')}' → logprob: -16.875001907348633
    8. '+' → logprob: -17.375001907348633
    9. ')**' → logprob: -18.125001907348633
    10. '}' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 97
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 36
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 36.08%
Précision adaptée (1ère position): 37.11%
Précision (top 10): 72.16%
================================================================================
