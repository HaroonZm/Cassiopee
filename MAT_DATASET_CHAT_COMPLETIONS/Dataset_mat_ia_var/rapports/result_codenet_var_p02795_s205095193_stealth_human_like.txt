================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, je récupère les valeurs au début
h = int(input())
w = int(input())
n = int(input())

# Ca sert à rien mais je laisse
h = h
w = w

cnt=0
painted = 0
while painted < n:
    if w > h:
        cnt = cnt + 1
        painted = painted + w   # je peins la ligne la plus longue ?
        h = h - 1
    else:
        cnt+=1
        painted += h
        w = w - 1
# c'est fini, j'affiche le résultat ici
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1559932678937912
    2. '```' → logprob: -2.1559932231903076
    3. '  ' → logprob: -4.530993461608887
    4. 'jour' → logprob: -5.530993461608887
    5. '`' → logprob: -5.655993461608887
    6. ' je' → logprob: -6.030993461608887
    7. ''' → logprob: -6.155993461608887
    8. '#' → logprob: -7.530993461608887
    9. ' ```' → logprob: -7.655993461608887
    10. ' j' → logprob: -7.655993461608887

Token 4: ' récup' (ID: 62856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.649726390838623
    2. 's' → logprob: -1.149726390838623
    3. ' vais' → logprob: -2.774726390838623
    4. ' suis' → logprob: -3.399726390838623
    5. ' veux' → logprob: -3.649726390838623
    6. ' continue' → logprob: -4.024726390838623
    7. 'v' → logprob: -5.649726390838623
    8. '_' → logprob: -5.774726390838623
    9. 'vais' → logprob: -6.149726390838623
    10. 'veux' → logprob: -6.149726390838623

Token 5: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.04613909870386124
    2. 'è' → logprob: -3.1711390018463135
    3. '#' → logprob: -6.296139240264893
    4. 'èr' → logprob: -6.921139240264893
    5. 'ération' → logprob: -9.546138763427734
    6. 'ére' → logprob: -9.921138763427734
    7. 'érer' → logprob: -10.046138763427734
    8. 'é' → logprob: -10.671138763427734
    9. '\' → logprob: -11.046138763427734
    10. 'èra' → logprob: -11.296138763427734

Token 6: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01720971241593361
    2. '_' → logprob: -4.517209529876709
    3. ' ' → logprob: -6.142209529876709
    4. ' la' → logprob: -7.392209529876709
    5. ' l' → logprob: -7.517209529876709
    6. ' #' → logprob: -8.142210006713867
    7. ''' → logprob: -8.142210006713867
    8. '.' → logprob: -8.392210006713867
    9. ' le' → logprob: -8.392210006713867
    10. ' :' → logprob: -8.517210006713867

Token 7: ' valeurs' (ID: 73668)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03353158384561539
    2. '#' → logprob: -5.033531665802002
    3. 'data' → logprob: -5.158531665802002
    4. ' données' → logprob: -5.783531665802002
    5. 'tokens' → logprob: -5.783531665802002
    6. ' ' → logprob: -6.283531665802002
    7. 'f' → logprob: -6.408531665802002
    8. '```' → logprob: -6.533531665802002
    9. 'don' → logprob: -7.283531665802002
    10. 'inputs' → logprob: -7.533531665802002

Token 8: ' au' (ID: 2791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07019761949777603
    2. 's' → logprob: -3.695197582244873
    3. '```' → logprob: -4.820197582244873
    4. '.' → logprob: -5.070197582244873
    5. ',' → logprob: -5.320197582244873
    6. '_' → logprob: -5.695197582244873
    7. '`' → logprob: -5.695197582244873
    8. ':' → logprob: -5.820197582244873
    9. ' =' → logprob: -6.320197582244873
    10. '  
' → logprob: -6.445197582244873

Token 9: ' début' (ID: 29589)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6882674694061279
    2. 'prés' → logprob: -2.188267469406128
    3. 'f' → logprob: -2.313267469406128
    4. 'format' → logprob: -2.563267469406128
    5. 'fil' → logprob: -2.938267469406128
    6. 'près' → logprob: -3.188267469406128
    7. 'l' → logprob: -3.813267469406128
    8. 'fur' → logprob: -4.063267707824707
    9. 'su' → logprob: -4.688267707824707
    10. 'tour' → logprob: -4.813267707824707

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.177289366722107
    2. '#' → logprob: -1.302289366722107
    3. '```' → logprob: -2.0522894859313965
    4. ' ' → logprob: -2.9272894859313965
    5. '`' → logprob: -3.0522894859313965
    6. '\' → logprob: -3.4272894859313965
    7. ',' → logprob: -3.5522894859313965
    8. 'x' → logprob: -3.6772894859313965
    9. '_' → logprob: -3.8022894859313965
    10. 'v' → logprob: -3.9272894859313965

Token 11: 'h' (ID: 71)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5777255296707153
    2. '```' → logprob: -1.0777255296707153
    3. '\' → logprob: -3.077725410461426
    4. 's' → logprob: -4.327725410461426
    5. '``' → logprob: -4.452725410461426
    6. ',' → logprob: -5.077725410461426
    7. ' ' → logprob: -5.577725410461426
    8. '`' → logprob: -6.077725410461426
    9. '#' → logprob: -6.202725410461426
    10. '_' → logprob: -6.452725410461426

Token 12: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11509023606777191
    2. 't' → logprob: -2.3650901317596436
    3. 'a' → logprob: -4.490090370178223
    4. '=' → logprob: -6.615090370178223
    5. 'i' → logprob: -7.490090370178223
    6. '#' → logprob: -7.490090370178223
    7. 'u' → logprob: -8.365090370178223
    8. 'd' → logprob: -8.740090370178223
    9. ' =' → logprob: -8.740090370178223
    10. '_' → logprob: -9.115090370178223

Token 13: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.231548011302948
    2. ' input' → logprob: -2.1065480709075928
    3. ' int' → logprob: -3.4815480709075928
    4. 'input' → logprob: -4.481547832489014
    5. ' data' → logprob: -4.856547832489014
    6. '0' → logprob: -4.981547832489014
    7. ' []' → logprob: -5.856547832489014
    8. '1' → logprob: -5.981547832489014
    9. '10' → logprob: -6.106547832489014
    10. ' float' → logprob: -6.231547832489014

Token 14: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760738253593445
    2. '(input' → logprob: -0.8260738253593445
    3. 'input' → logprob: -9.70107364654541
    4. '(
' → logprob: -10.45107364654541
    5. '('' → logprob: -11.07607364654541
    6. '("' → logprob: -12.20107364654541
    7. '(

' → logprob: -12.20107364654541
    8. '()' → logprob: -12.32607364654541
    9. ' (' → logprob: -12.57607364654541
    10. '(raw' → logprob: -12.82607364654541

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012352262856438756
    2. '()' → logprob: -7.251235008239746
    3. '('' → logprob: -8.376235008239746
    4. '("("' → logprob: -8.876235008239746
    5. '("")' → logprob: -10.126235008239746
    6. '(
' → logprob: -10.251235008239746
    7. ')' → logprob: -10.876235008239746
    8. '("' → logprob: -10.876235008239746
    9. '(""))' → logprob: -11.126235008239746
    10. '(

' → logprob: -12.126235008239746

Token 16: 'w' (ID: 86)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11858165264129639
    2. ' ' → logprob: -2.743581771850586
    3. '\n' → logprob: -4.368581771850586
    4. '
' → logprob: -4.993581771850586
    5. '\' → logprob: -5.493581771850586
    6. '+' → logprob: -5.618581771850586
    7. '#' → logprob: -5.618581771850586
    8. ',' → logprob: -5.993581771850586
    9. ' )' → logprob: -6.118581771850586
    10. '*' → logprob: -6.243581771850586

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11648524552583694
    2. '=' → logprob: -2.241485357284546
    3. ' ' → logprob: -6.241485118865967
    4. ')' → logprob: -6.616485118865967
    5. ',' → logprob: -8.866485595703125
    6. '_' → logprob: -9.616485595703125
    7. ' )' → logprob: -10.366485595703125
    8. ' ,' → logprob: -10.491485595703125
    9. '.' → logprob: -11.241485595703125
    10. '  ' → logprob: -11.241485595703125

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740826487541199
    2. ' int' → logprob: -0.9740826487541199
    3. '=int' → logprob: -13.099082946777344
    4. ' ' → logprob: -13.599082946777344
    5. 'input' → logprob: -14.224082946777344
    6. '[int' → logprob: -14.349082946777344
    7. '(int' → logprob: -14.724082946777344
    8. '<int' → logprob: -15.224082946777344
    9. ' ' → logprob: -15.349082946777344
    10. ' input' → logprob: -15.599082946777344

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.023355303332209587
    2. '(' → logprob: -3.77335524559021
    3. ' (' → logprob: -10.023355484008789
    4. '()' → logprob: -10.523355484008789
    5. 'input' → logprob: -11.148355484008789
    6. ')' → logprob: -11.648355484008789
    7. '=input' → logprob: -12.648355484008789
    8. '(
' → logprob: -12.648355484008789
    9. '<input' → logprob: -13.273355484008789
    10. '[input' → logprob: -13.523355484008789

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4074237644672394
    2. '()' → logprob: -1.157423734664917
    3. ')' → logprob: -3.907423734664917
    4. '(' → logprob: -8.907423973083496
    5. ' ())' → logprob: -9.907423973083496
    6. '()))' → logprob: -11.157423973083496
    7. '()
' → logprob: -11.157423973083496
    8. '();)' → logprob: -12.032423973083496
    9. '()>' → logprob: -12.157423973083496
    10. '())
' → logprob: -12.782423973083496

Token 21: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.270660936832428
    2. ' ' → logprob: -2.520660877227783
    3. '\' → logprob: -3.395660877227783
    4. 'n' → logprob: -3.770660877227783
    5. 's' → logprob: -3.770660877227783
    6. '#' → logprob: -4.020660877227783
    7. 'for' → logprob: -4.145660877227783
    8. ')' → logprob: -4.895660877227783
    9. 'r' → logprob: -5.145660877227783
    10. 'a' → logprob: -5.895660877227783

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6368119120597839
    2. '=' → logprob: -0.7618119120597839
    3. ' ' → logprob: -5.63681173324585
    4. ')' → logprob: -7.76181173324585
    5. '=int' → logprob: -10.511812210083008
    6. '.' → logprob: -10.636812210083008
    7. 'space' → logprob: -10.761812210083008
    8. '_' → logprob: -10.761812210083008
    9. 's' → logprob: -10.886812210083008
    10. ',' → logprob: -10.886812210083008

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6936852931976318
    2. ' int' → logprob: -0.6936852931976318
    3. ' ' → logprob: -7.943685531616211
    4. '(int' → logprob: -9.068685531616211
    5. '=int' → logprob: -10.568685531616211
    6. '[int' → logprob: -11.443685531616211
    7. '<int' → logprob: -12.318685531616211
    8. '20' → logprob: -12.443685531616211
    9. '32' → logprob: -12.443685531616211
    10. '	int' → logprob: -12.943685531616211

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.031483788043260574
    2. '()' → logprob: -3.9064838886260986
    3. '(input' → logprob: -4.5314836502075195
    4. '(
' → logprob: -10.53148365020752
    5. '('' → logprob: -10.90648365020752
    6. ' (' → logprob: -10.90648365020752
    7. ' ()' → logprob: -11.90648365020752
    8. ')' → logprob: -12.15648365020752
    9. '("("' → logprob: -12.28148365020752
    10. ' ' → logprob: -12.78148365020752

Token 25: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4317261874675751
    2. ')' → logprob: -1.6817262172698975
    3. '())' → logprob: -1.8067262172698975
    4. '(' → logprob: -8.181726455688477
    5. ' ())' → logprob: -10.806726455688477
    6. '()>' → logprob: -11.056726455688477
    7. '()
' → logprob: -11.056726455688477
    8. ' )' → logprob: -11.431726455688477
    9. '();)' → logprob: -12.181726455688477
    10. '`)' → logprob: -12.681726455688477

Token 26: '#' (ID: 2)
  Prédit: 'tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tiles' → logprob: -0.8325044512748718
    2. 'for' → logprob: -1.2075045108795166
    3. 's' → logprob: -2.9575045108795166
    4. 't' → logprob: -3.2075045108795166
    5. ')' → logprob: -3.8325045108795166
    6. 'i' → logprob: -3.9575045108795166
    7. 'cells' → logprob: -4.0825042724609375
    8. 'r' → logprob: -4.0825042724609375
    9. 'm' → logprob: -4.5825042724609375
    10. 'blocks' → logprob: -4.9575042724609375

Token 27: ' Ca' (ID: 17241)
  Prédit: ' tiles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tiles' → logprob: -0.9103829860687256
    2. 'tiles' → logprob: -1.4103829860687256
    3. ' for' → logprob: -2.4103829860687256
    4. 'for' → logprob: -2.9103829860687256
    5. ' cards' → logprob: -4.035383224487305
    6. ' bricks' → logprob: -4.535383224487305
    7. ' tile' → logprob: -4.660383224487305
    8. ' grid' → logprob: -4.785383224487305
    9. ' rooms' → logprob: -4.910383224487305
    10. '#' → logprob: -4.910383224487305

Token 28: ' sert' (ID: 52405)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2683343887329102
    2. 'r' → logprob: -1.2683343887329102
    3. 'p' → logprob: -1.7683343887329102
    4. 'lc' → logprob: -2.64333438873291
    5. '#' → logprob: -3.01833438873291
    6. 's' → logprob: -3.76833438873291
    7. 'c' → logprob: -3.76833438873291
    8. 'm' → logprob: -4.14333438873291
    9. 'rc' → logprob: -4.26833438873291
    10. 'd' → logprob: -4.26833438873291

Token 29: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8549803495407104
    2. ' ' → logprob: -1.2299803495407104
    3. ' a' → logprob: -1.3549803495407104
    4. 'a' → logprob: -4.72998046875
    5. 'à' → logprob: -5.47998046875
    6. ' to' → logprob: -5.72998046875
    7. 'n' → logprob: -6.22998046875
    8. ' pas' → logprob: -6.47998046875
    9. ' n' → logprob: -7.60498046875
    10. ' for' → logprob: -7.60498046875

Token 30: ' rien' (ID: 23082)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.1204853057861328
    2. ' placer' → logprob: -1.8704853057861328
    3. 'placer' → logprob: -1.9954853057861328
    4. ' #' → logprob: -2.620485305786133
    5. '#' → logprob: -2.745485305786133
    6. ' créer' → logprob: -3.120485305786133
    7. ' calcul' → logprob: -3.495485305786133
    8. ' place' → logprob: -3.870485305786133
    9. ' compter' → logprob: -4.745485305786133
    10. ' ' → logprob: -4.745485305786133

Token 31: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4739201068878174
    2. ' for' → logprob: -1.7239201068878174
    3. 'for' → logprob: -1.8489201068878174
    4. ' print' → logprob: -1.9739201068878174
    5. '_' → logprob: -2.0989201068878174
    6. 's' → logprob: -4.723919868469238
    7. 'a' → logprob: -4.848919868469238
    8. ' n' → logprob: -4.848919868469238
    9. '#' → logprob: -4.973919868469238
    10. 'r' → logprob: -4.973919868469238

Token 33: ' laisse' (ID: 66691)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.299115538597107
    2. 's' → logprob: -2.0491156578063965
    3. ' vais' → logprob: -2.0491156578063965
    4. '#' → logprob: -2.4241156578063965
    5. ' #' → logprob: -2.9241156578063965
    6. ' veux' → logprob: -3.1741156578063965
    7. ' peux' → logprob: -3.5491156578063965
    8. ' print' → logprob: -3.6741156578063965
    9. 'f' → logprob: -3.6741156578063965
    10. ' pense' → logprob: -4.0491156578063965

Token 34: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03697272017598152
    2. '_' → logprob: -3.911972761154175
    3. 'for' → logprob: -5.036972522735596
    4. ' for' → logprob: -5.786972522735596
    5. ' 
' → logprob: -6.661972522735596
    6. '  
' → logprob: -7.286972522735596
    7. 'n' → logprob: -7.411972522735596
    8. '  ' → logprob: -8.036972999572754
    9. 't' → logprob: -8.161972999572754
    10. ' _' → logprob: -8.286972999572754

Token 35: 'h' (ID: 71)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6039535403251648
    2. 'print' → logprob: -2.2289535999298096
    3. 'grid' → logprob: -3.1039535999298096
    4. 'positions' → logprob: -3.6039535999298096
    5. 'res' → logprob: -3.7289535999298096
    6. 'x' → logprob: -3.8539535999298096
    7. 'cells' → logprob: -3.8539535999298096
    8. 'a' → logprob: -3.9789535999298096
    9. 'arr' → logprob: -4.3539533615112305
    10. 'm' → logprob: -4.4789533615112305

Token 36: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3698080778121948
    2. ' ' → logprob: -1.6198080778121948
    3. ',' → logprob: -1.9948080778121948
    4. '=' → logprob: -2.3698081970214844
    5. '>' → logprob: -2.9948081970214844
    6. '<|end|>' → logprob: -2.9948081970214844
    7. '#' → logprob: -3.1198081970214844
    8. ' *' → logprob: -3.1198081970214844
    9. ')' → logprob: -3.2448081970214844
    10. '
' → logprob: -3.6198081970214844

Token 37: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.18394888937473297
    2. 'h' → logprob: -2.6839489936828613
    3. ' ' → logprob: -3.1839489936828613
    4. ' max' → logprob: -3.6839489936828613
    5. ' int' → logprob: -4.058948993682861
    6. '0' → logprob: -4.808948993682861
    7. 'int' → logprob: -5.683948993682861
    8. 'max' → logprob: -6.808948993682861
    9. '1' → logprob: -7.308948993682861
    10. ' w' → logprob: -7.808948993682861

Token 38: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.007168173789978
    2. '*' → logprob: -1.632168173789978
    3. '%' → logprob: -2.2571682929992676
    4. ' *' → logprob: -2.5071682929992676
    5. ' +' → logprob: -2.6321682929992676
    6. '*w' → logprob: -2.7571682929992676
    7. ' ' → logprob: -3.7571682929992676
    8. '-' → logprob: -3.8821682929992676
    9. 'w' → logprob: -3.8821682929992676
    10. ' %' → logprob: -4.757168292999268

Token 39: 'w' (ID: 86)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.029084324836731
    2. '+' → logprob: -1.654084324836731
    3. 'w' → logprob: -2.0290842056274414
    4. '*' → logprob: -2.1540842056274414
    5. '*w' → logprob: -2.5290842056274414
    6. '<|end|>' → logprob: -3.2790842056274414
    7. ' *' → logprob: -3.5290842056274414
    8. ' ' → logprob: -4.404084205627441
    9. '#' → logprob: -4.529084205627441
    10. ' 
' → logprob: -5.154084205627441

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7255308032035828
    2. ' =' → logprob: -1.4755308628082275
    3. '<|end|>' → logprob: -1.4755308628082275
    4. ' ' → logprob: -3.2255308628082275
    5. '<|end|>' → logprob: -4.725530624389648
    6. '+' → logprob: -6.100530624389648
    7. '
' → logprob: -6.100530624389648
    8. ' 
' → logprob: -6.600530624389648
    9. 'w' → logprob: -6.725530624389648
    10. ')' → logprob: -6.725530624389648

Token 41: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014272922649979591
    2. ' w' → logprob: -4.264272689819336
    3. 'h' → logprob: -9.514272689819336
    4. ' ' → logprob: -11.889272689819336
    5. '1' → logprob: -12.014272689819336
    6. '0' → logprob: -12.514272689819336
    7. '10' → logprob: -12.764272689819336
    8. ' h' → logprob: -12.889272689819336
    9. '100' → logprob: -13.014272689819336
    10. 'int' → logprob: -13.014272689819336

Token 42: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.056490588933229446
    2. '#' → logprob: -4.181490421295166
    3. '<|end|>' → logprob: -4.306490421295166
    4. 'for' → logprob: -4.681490421295166
    5. 'print' → logprob: -5.056490421295166
    6. '
' → logprob: -5.556490421295166
    7. 't' → logprob: -6.681490421295166
    8. ' for' → logprob: -7.306490421295166
    9. 'h' → logprob: -7.681490421295166
    10. 's' → logprob: -7.931490421295166

Token 43: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4225229322910309
    2. 'tiles' → logprob: -2.422523021697998
    3. 'n' → logprob: -3.172523021697998
    4. 'print' → logprob: -3.297523021697998
    5. 'cells' → logprob: -3.797523021697998
    6. 'rows' → logprob: -4.047523021697998
    7. '
' → logprob: -4.047523021697998
    8. 'result' → logprob: -4.797523021697998
    9. '#' → logprob: -4.922523021697998
    10. 'grid' → logprob: -4.922523021697998

Token 44: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3157394826412201
    2. ' =' → logprob: -1.3157395124435425
    3. '_' → logprob: -6.190739631652832
    4. ' ' → logprob: -8.190739631652832
    5. ',' → logprob: -9.315739631652832
    6. '  ' → logprob: -10.690739631652832
    7. 's' → logprob: -11.190739631652832
    8. '_=' → logprob: -12.315739631652832
    9. ')' → logprob: -12.440739631652832
    10. ' +=' → logprob: -13.440739631652832

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0625636950135231
    2. ' ' → logprob: -3.06256365776062
    3. '1' → logprob: -4.437563896179199
    4. 'n' → logprob: -6.687563896179199
    5. '{}' → logprob: -8.1875638961792
    6. ' n' → logprob: -8.6875638961792
    7. '[]' → logprob: -9.1875638961792
    8. ' {}' → logprob: -9.6875638961792
    9. 'h' → logprob: -9.8125638961792
    10. ' []' → logprob: -10.5625638961792

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23977400362491608
    2. 'for' → logprob: -1.8647739887237549
    3. ' for' → logprob: -3.614773988723755
    4. ' 
' → logprob: -4.739774227142334
    5. '<|end|>' → logprob: -4.989774227142334
    6. 'while' → logprob: -5.239774227142334
    7. ' ' → logprob: -5.739774227142334
    8. ' while' → logprob: -6.114774227142334
    9. '' → logprob: -6.239774227142334
    10. ':' → logprob: -7.364774227142334

Token 47: 'paint' (ID: 44758)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08839160948991776
    2. 'while' → logprob: -2.5883915424346924
    3. ' for' → logprob: -5.5883917808532715
    4. '
' → logprob: -5.5883917808532715
    5. ' while' → logprob: -6.8383917808532715
    6. 'n' → logprob: -8.588391304016113
    7. 'wh' → logprob: -9.088391304016113
    8. ' 
' → logprob: -9.213391304016113
    9. 'x' → logprob: -9.838391304016113
    10. '' → logprob: -9.963391304016113

Token 48: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.01282475981861353
    2. '=' → logprob: -5.137824535369873
    3. '_area' → logprob: -5.762824535369873
    4. ' =' → logprob: -6.762824535369873
    5. 'er' → logprob: -6.887824535369873
    6. 'ing' → logprob: -7.637824535369873
    7. 'area' → logprob: -8.512825012207031
    8. '_' → logprob: -8.887825012207031
    9. '_count' → logprob: -9.637825012207031
    10. '_cnt' → logprob: -9.637825012207031

Token 49: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5850163102149963
    2. '=' → logprob: -1.3350162506103516
    3. '[' → logprob: -2.5850162506103516
    4. ' =' → logprob: -2.9600162506103516
    5. 'ed' → logprob: -4.335016250610352
    6. '_cells' → logprob: -4.835016250610352
    7. '_rows' → logprob: -4.960016250610352
    8. '_spaces' → logprob: -5.960016250610352
    9. '[]' → logprob: -6.085016250610352
    10. '_pixels' → logprob: -6.085016250610352

Token 50: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.38182300329208374
    2. 'set' → logprob: -1.3818230628967285
    3. '[' → logprob: -3.3818230628967285
    4. '{}' → logprob: -4.2568230628967285
    5. '[[' → logprob: -4.3818230628967285
    6. ' []' → logprob: -6.2568230628967285
    7. '[][]' → logprob: -6.8818230628967285
    8. ' set' → logprob: -7.0068230628967285
    9. '0' → logprob: -7.1318230628967285
    10. '[]
' → logprob: -7.8818230628967285

Token 51: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5082757472991943
    2. 'set' → logprob: -1.6332757472991943
    3. '[[' → logprob: -2.0082757472991943
    4. '[' → logprob: -3.0082757472991943
    5. '{}' → logprob: -4.258275985717773
    6. '0' → logprob: -6.008275985717773
    7. '[][]' → logprob: -6.508275985717773
    8. '{' → logprob: -7.508275985717773
    9. '[]
' → logprob: -8.133275985717773
    10. '[]}' → logprob: -8.508275985717773

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06262113898992538
    2. ' 
' → logprob: -3.8126211166381836
    3. '<|end|>' → logprob: -3.8126211166381836
    4. '\n' → logprob: -4.687621116638184
    5. ' ' → logprob: -6.312621116638184
    6. 'while' → logprob: -6.937621116638184
    7. 'for' → logprob: -7.187621116638184
    8. ' while' → logprob: -7.312621116638184
    9. '' → logprob: -7.437621116638184
    10. 'n' → logprob: -7.812621116638184

Token 53: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18240191042423248
    2. 'for' → logprob: -2.9324018955230713
    3. ' while' → logprob: -3.1824018955230713
    4. 'paint' → logprob: -3.4324018955230713
    5. '
' → logprob: -4.55740213394165
    6. '<|end|>' → logprob: -4.68240213394165
    7. 'tiles' → logprob: -5.80740213394165
    8. 'positions' → logprob: -6.18240213394165
    9. 'blocks' → logprob: -6.43240213394165
    10. ' for' → logprob: -6.43240213394165

Token 54: ' painted' (ID: 33842)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.1494731903076172
    2. ' painted' → logprob: -2.649473190307617
    3. ' n' → logprob: -3.024473190307617
    4. 'cnt' → logprob: -4.774473190307617
    5. ' paint' → logprob: -5.024473190307617
    6. 'paint' → logprob: -6.274473190307617
    7. '(cnt' → logprob: -6.774473190307617
    8. 'n' → logprob: -7.649473190307617
    9. ' ' → logprob: -8.524473190307617
    10. ' h' → logprob: -9.086973190307617

Token 55: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10048098117113113
    2. '<' → logprob: -2.3504810333251953
    3. '<w' → logprob: -8.975481033325195
    4. '<n' → logprob: -9.100481033325195
    5. ' ' → logprob: -11.600481033325195
    6. '<len' → logprob: -12.225481033325195
    7. '<num' → logprob: -12.350481033325195
    8. ' <=' → logprob: -12.725481033325195
    9. '<h' → logprob: -12.975481033325195
    10. '<p' → logprob: -13.350481033325195

Token 56: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2036799192428589
    2. ' n' → logprob: -1.7036799192428589
    3. 'h' → logprob: -6.453680038452148
    4. ' h' → logprob: -7.703680038452148
    5. 'w' → logprob: -8.703680038452148
    6. ' w' → logprob: -10.453680038452148
    7. ' ' → logprob: -10.828680038452148
    8. '	n' → logprob: -12.453680038452148
    9. '100' → logprob: -12.578680038452148
    10. '1' → logprob: -12.578680038452148

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010755031369626522
    2. ' :' → logprob: -4.6357550621032715
    3. ' and' → logprob: -7.0107550621032715
    4. 'and' → logprob: -10.010754585266113
    5. ':
' → logprob: -10.385754585266113
    6. '*' → logprob: -11.635754585266113
    7. ' *' → logprob: -12.510754585266113
    8. ' :
' → logprob: -13.385754585266113
    9. '+:' → logprob: -14.010754585266113
    10. ' or' → logprob: -14.260754585266113

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15319883823394775
    2. '    ' → logprob: -3.403198719024658
    3. ':' → logprob: -3.528198719024658
    4. ' :' → logprob: -4.153198719024658
    5. ' ' → logprob: -4.528198719024658
    6. ' if' → logprob: -4.778198719024658
    7. ' cnt' → logprob: -5.153198719024658
    8. ' paint' → logprob: -5.528198719024658
    9. ' print' → logprob: -6.090698719024658
    10. ' ' → logprob: -6.153198719024658

Token 59: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.309250831604004
    2. ' cnt' → logprob: -1.934250831604004
    3. ' for' → logprob: -2.059250831604004
    4. '   ' → logprob: -2.184250831604004
    5. 'cnt' → logprob: -2.184250831604004
    6. ' painted' → logprob: -3.059250831604004
    7. 'if' (adapté à ' if') → logprob: -3.184250831604004
    8. ' h' → logprob: -3.684250831604004
    9. 'paint' → logprob: -3.684250831604004
    10. ' line' → logprob: -4.059250831604004

Token 60: ' w' (ID: 286)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4137451946735382
    2. ' w' → logprob: -2.038745164871216
    3. ' cnt' → logprob: -2.913745164871216
    4. ' painted' → logprob: -2.913745164871216
    5. 'h' → logprob: -3.163745164871216
    6. 'paint' → logprob: -3.788745164871216
    7. 'w' → logprob: -4.288745403289795
    8. 'cnt' → logprob: -4.788745403289795
    9. ' ' → logprob: -5.413745403289795
    10. ' paint' → logprob: -5.413745403289795

Token 61: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.42472484707832336
    2. ' >=' → logprob: -2.049724817276001
    3. '>' → logprob: -2.549724817276001
    4. ' ==' → logprob: -3.174724817276001
    5. ' <' → logprob: -3.674724817276001
    6. ' <=' → logprob: -3.799724817276001
    7. ' %' → logprob: -4.79972505569458
    8. ' -' → logprob: -4.79972505569458
    9. '==' → logprob: -4.92472505569458
    10. '>=' → logprob: -5.04972505569458

Token 62: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5884543657302856
    2. '0' → logprob: -1.4634543657302856
    3. '1' → logprob: -2.338454246520996
    4. ' ' → logprob: -2.838454246520996
    5. ' h' → logprob: -2.963454246520996
    6. '2' → logprob: -5.713454246520996
    7. '=' → logprob: -6.838454246520996
    8. '5' → logprob: -8.088454246520996
    9. '3' → logprob: -8.213454246520996
    10. 'cnt' → logprob: -8.338454246520996

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00869422685354948
    2. ' :' → logprob: -5.383694171905518
    3. ' and' → logprob: -5.633694171905518
    4. ':
' → logprob: -8.383694648742676
    5. 'and' → logprob: -9.008694648742676
    6. ' or' → logprob: -9.883694648742676
    7. '-' → logprob: -11.008694648742676
    8. ' *' → logprob: -11.383694648742676
    9. '):' → logprob: -11.508694648742676
    10. '   ' → logprob: -11.883694648742676

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16036070883274078
    2. '   ' → logprob: -2.910360813140869
    3. '
' → logprob: -3.535360813140869
    4. ' 
' → logprob: -3.785360813140869
    5. '    
' → logprob: -4.785360813140869
    6. ' w' → logprob: -4.910360813140869
    7. '        
' → logprob: -5.410360813140869
    8. 'w' → logprob: -5.785360813140869
    9. '    ' → logprob: -5.910360813140869
    10. '#' → logprob: -6.535360813140869

Token 65: ' cnt' (ID: 27340)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7970274686813354
    2. 'h' → logprob: -1.6720274686813354
    3. 'cnt' (adapté à ' cnt') → logprob: -2.047027587890625
    4. '       ' → logprob: -2.547027587890625
    5. 'paint' → logprob: -3.172027587890625
    6. ' w' → logprob: -3.172027587890625
    7. ' cnt' → logprob: -3.672027587890625
    8. ' h' → logprob: -4.172027587890625
    9. '           ' → logprob: -4.672027587890625
    10. ' painted' → logprob: -5.422027587890625

Token 66: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12846891582012177
    2. '+=' → logprob: -2.1284689903259277
    3. ' =' → logprob: -6.628468990325928
    4. '=' → logprob: -8.50346851348877
    5. '   ' → logprob: -12.37846851348877
    6. '+=(' → logprob: -12.37846851348877
    7. '+' → logprob: -13.25346851348877
    8. ',' → logprob: -14.00346851348877
    9. ' -=' → logprob: -14.50346851348877
    10. '++' → logprob: -14.62846851348877

Token 67: ' cnt' (ID: 27340)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6500165462493896
    2. ' cnt' → logprob: -1.0250165462493896
    3. 'w' → logprob: -3.4000165462493896
    4. ' ' → logprob: -3.5250165462493896
    5. 'cnt' → logprob: -3.5250165462493896
    6. ' h' → logprob: -5.275016784667969
    7. ' (' → logprob: -5.400016784667969
    8. '(cnt' → logprob: -5.525016784667969
    9. '0' → logprob: -5.900016784667969
    10. ' n' → logprob: -6.025016784667969

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22541546821594238
    2. ' +' → logprob: -1.6004154682159424
    3. '+++' → logprob: -14.725415229797363
    4. ' plus' → logprob: -14.850415229797363
    5. '++' → logprob: -14.975415229797363
    6. '+=' → logprob: -15.475415229797363
    7. '+n' → logprob: -15.600415229797363
    8. '1' → logprob: -15.725415229797363
    9. '-' → logprob: -15.975415229797363
    10. ' +=' → logprob: -16.10041618347168

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1579994410276413
    2. ' ' → logprob: -2.9079995155334473
    3. 'w' → logprob: -3.1579995155334473
    4. 'h' → logprob: -4.157999515533447
    5. ' w' → logprob: -4.157999515533447
    6. ' h' → logprob: -4.532999515533447
    7. '2' → logprob: -5.032999515533447
    8. ' (' → logprob: -8.157999038696289
    9. '(h' → logprob: -9.657999038696289
    10. '(w' → logprob: -10.157999038696289

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18161311745643616
    2. 'w' → logprob: -2.0566132068634033
    3. 'h' → logprob: -3.5566132068634033
    4. '2' → logprob: -4.931612968444824
    5. '(w' → logprob: -6.806612968444824
    6. '(h' → logprob: -7.431612968444824
    7. '(' → logprob: -7.681612968444824
    8. ' ' → logprob: -9.181612968444824
    9. ' w' → logprob: -9.681612968444824
    10. ' (' → logprob: -10.931612968444824

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08019319921731949
    2. '       ' → logprob: -2.830193281173706
    3. 'w' → logprob: -5.080193042755127
    4. '
' → logprob: -5.455193042755127
    5. '        
' → logprob: -5.830193042755127
    6. ' 
' → logprob: -6.705193042755127
    7. '    
' → logprob: -7.080193042755127
    8. '   ' → logprob: -7.580193042755127
    9. '\n' → logprob: -7.955193042755127
    10. ' w' → logprob: -8.080193519592285

Token 72: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0386313199996948
    2. '       ' → logprob: -1.4136313199996948
    3. '
' → logprob: -1.5386313199996948
    4. '<|end|>' → logprob: -2.7886314392089844
    5. ' w' → logprob: -3.1636314392089844
    6. '   ' → logprob: -4.038631439208984
    7. '    
' → logprob: -4.288631439208984
    8. ' 
' → logprob: -4.413631439208984
    9. '        
' → logprob: -4.538631439208984
    10. '        ' → logprob: -5.413631439208984

Token 73: ' painted' (ID: 33842)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14176549017429352
    2. 'h' → logprob: -2.141765594482422
    3. 'paint' → logprob: -5.141765594482422
    4. ' w' → logprob: -5.266765594482422
    5. ' h' → logprob: -6.391765594482422
    6. '   ' → logprob: -6.641765594482422
    7. ' painted' → logprob: -8.766765594482422
    8. 'print' → logprob: -9.266765594482422
    9. '       ' → logprob: -9.391765594482422
    10. '
' → logprob: -9.516765594482422

Token 74: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.049254171550273895
    2. '+=' → logprob: -3.7992541790008545
    3. '+' → logprob: -4.674253940582275
    4. ' +' → logprob: -4.799253940582275
    5. ' =' → logprob: -4.924253940582275
    6. '=' → logprob: -7.174253940582275
    7. ' ' → logprob: -10.424254417419434
    8. '++' → logprob: -10.924254417419434
    9. 'w' → logprob: -12.174254417419434
    10. '   ' → logprob: -13.049254417419434

Token 75: ' painted' (ID: 33842)
  Prédit: ' painted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.3572709262371063
    2. 'paint' → logprob: -1.3572709560394287
    3. ' w' → logprob: -3.8572709560394287
    4. 'w' → logprob: -4.10727071762085
    5. ' h' → logprob: -6.23227071762085
    6. ' paint' → logprob: -6.35727071762085
    7. 'h' → logprob: -6.98227071762085
    8. ' ' → logprob: -7.98227071762085
    9. ' Painted' → logprob: -8.982271194458008
    10. '2' → logprob: -9.107271194458008

Token 76: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17982569336891174
    2. '+' → logprob: -1.8048256635665894
    3. '+w' → logprob: -9.554825782775879
    4. ' plus' → logprob: -12.554825782775879
    5. '+h' → logprob: -13.679825782775879
    6. 'w' → logprob: -14.054825782775879
    7. ' w' → logprob: -14.179825782775879
    8. ' ' → logprob: -14.304825782775879
    9. '+n' → logprob: -14.304825782775879
    10. ' ' → logprob: -14.304825782775879

Token 77: ' w' (ID: 286)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13771949708461761
    2. ' h' → logprob: -2.2627193927764893
    3. 'w' → logprob: -4.012719631195068
    4. ' w' → logprob: -5.887719631195068
    5. '1' → logprob: -6.012719631195068
    6. '2' → logprob: -6.887719631195068
    7. ' ' → logprob: -8.63771915435791
    8. '10' → logprob: -10.88771915435791
    9. '4' → logprob: -11.63771915435791
    10. '5' → logprob: -11.76271915435791

Token 78: '  ' (ID: 256)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4124101996421814
    2. ' else' → logprob: -1.5374102592468262
    3. '*' → logprob: -3.787410259246826
    4. '<|end|>' → logprob: -3.912410259246826
    5. 'elif' → logprob: -3.912410259246826
    6. '//' → logprob: -4.037410259246826
    7. '   ' → logprob: -4.662410259246826
    8. ' *' → logprob: -4.787410259246826
    9. ' elif' → logprob: -4.912410259246826
    10. ' //' → logprob: -4.912410259246826

Token 79: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1862664222717285
    2. 'w' → logprob: -1.9362664222717285
    3. '
' → logprob: -1.9362664222717285
    4. '<|end|>' → logprob: -1.9362664222717285
    5. 'else' → logprob: -2.4362664222717285
    6. '\n' → logprob: -2.4362664222717285
    7. ' *' → logprob: -3.9362664222717285
    8. '    
' → logprob: -4.0612664222717285
    9. '//' → logprob: -4.5612664222717285
    10. ' else' → logprob: -5.1862664222717285

Token 80: ' je' (ID: 1264)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5306729078292847
    2. '\n' → logprob: -1.5306729078292847
    3. '
' → logprob: -1.6556729078292847
    4. '*' → logprob: -1.9056729078292847
    5. '<|end|>' → logprob: -2.030673027038574
    6. ' *' → logprob: -4.280673027038574
    7. 'else' → logprob: -4.405673027038574
    8. ' 
' → logprob: -4.655673027038574
    9. '-' → logprob: -4.655673027038574
    10. '*w' → logprob: -4.905673027038574

Token 81: ' pe' (ID: 1045)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7073381543159485
    2. 'w' → logprob: -1.7073380947113037
    3. '//' → logprob: -1.9573380947113037
    4. '<|end|>' → logprob: -2.5823380947113037
    5. ' *' → logprob: -3.7073380947113037
    6. ' //' → logprob: -4.457338333129883
    7. '=' → logprob: -4.457338333129883
    8. '#' → logprob: -4.582338333129883
    9. '<|end|>' → logprob: -4.957338333129883
    10. '-' → logprob: -5.332338333129883

Token 82: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -1.115622878074646
    2. 'ints' → logprob: -1.365622878074646
    3. 'inte' → logprob: -1.740622878074646
    4. 'int' → logprob: -2.1156229972839355
    5. 'inds' → logprob: -2.6156229972839355
    6. 'nte' → logprob: -4.7406229972839355
    7. '#' → logprob: -5.3656229972839355
    8. 'r' → logprob: -5.3656229972839355
    9. 'ind' → logprob: -5.4906229972839355
    10. 'nds' → logprob: -5.8656229972839355

Token 83: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' ligne' (ID: 19583)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0040626525878906
    2. 'h' → logprob: -1.6290626525878906
    3. 'case' → logprob: -2.2540626525878906
    4. 'ligne' → logprob: -2.3790626525878906
    5. 'ha' → logprob: -3.2540626525878906
    6. ' ' → logprob: -3.6290626525878906
    7. 'w' → logprob: -3.7540626525878906
    8. 'm' → logprob: -4.254062652587891
    9. ' ligne' → logprob: -4.254062652587891
    10. 'large' → logprob: -4.379062652587891

Token 85: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.240803062915802
    2. 'else' → logprob: -1.9908030033111572
    3. ' else' → logprob: -2.8658030033111572
    4. '       ' → logprob: -4.365803241729736
    5. 'w' → logprob: -5.365803241729736
    6. 'h' → logprob: -6.490803241729736
    7. 'elif' → logprob: -7.490803241729736
    8. '```' → logprob: -8.740802764892578
    9. ' w' → logprob: -9.115802764892578
    10. '*' → logprob: -9.365802764892578

Token 86: ' plus' (ID: 2932)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' longue' (ID: 59564)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.021130910143256187
    2. ' longue' → logprob: -4.1461310386657715
    3. 'large' → logprob: -5.6461310386657715
    4. 'gr' → logprob: -7.6461310386657715
    5. ' long' → logprob: -7.6461310386657715
    6. 'cour' → logprob: -8.271130561828613
    7. 'lo' → logprob: -10.271130561828613
    8. 'lon' → logprob: -10.396130561828613
    9. ' ' → logprob: -10.396130561828613
    10. 'l' → logprob: -10.521130561828613

Token 88: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15810999274253845
    2. 'else' → logprob: -2.1581099033355713
    3. ' else' → logprob: -3.7831099033355713
    4. '       ' → logprob: -5.15811014175415
    5. '*' → logprob: -7.03311014175415
    6. 'elif' → logprob: -7.90811014175415
    7. 'w' → logprob: -8.408109664916992
    8. '```' → logprob: -8.533109664916992
    9. '#' → logprob: -9.283109664916992
    10. '    
' → logprob: -9.408109664916992

Token 89: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0122767686843872
    2. 'else' → logprob: -1.0122767686843872
    3. ' else' → logprob: -1.6372767686843872
    4. '       ' → logprob: -3.0122766494750977
    5. '    
' → logprob: -4.512276649475098
    6. '*' → logprob: -6.137276649475098
    7. '\n' → logprob: -6.387276649475098
    8. '  
' → logprob: -6.637276649475098
    9. '        
' → logprob: -6.637276649475098
    10. 'elif' → logprob: -6.637276649475098

Token 90: ' h' (ID: 312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4636153280735016
    2. ' else' → logprob: -1.4636152982711792
    3. 'else' → logprob: -2.2136154174804688
    4. 'w' → logprob: -4.213615417480469
    5. '       ' → logprob: -4.463615417480469
    6. ' w' → logprob: -6.838615417480469
    7. 'h' (adapté à ' h') → logprob: -7.463615417480469
    8. '```' → logprob: -7.463615417480469
    9. '    
' → logprob: -8.088615417480469
    10. '
' → logprob: -8.963615417480469

Token 91: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7975785732269287
    2. ' =' → logprob: -0.9225785732269287
    3. ' -=' → logprob: -2.1725785732269287
    4. '-=' → logprob: -3.2975785732269287
    5. '-' → logprob: -6.922578811645508
    6. ' ' → logprob: -8.922578811645508
    7. '    ' → logprob: -10.672578811645508
    8. ' +=' → logprob: -10.672578811645508
    9. ' -' → logprob: -10.797578811645508
    10. '   ' → logprob: -10.797578811645508

Token 92: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.14280754327774048
    2. ' h' → logprob: -2.0178074836730957
    3. 'w' → logprob: -9.642807960510254
    4. ' ' → logprob: -10.392807960510254
    5. ' w' → logprob: -11.267807960510254
    6. '1' → logprob: -11.392807960510254
    7. '0' → logprob: -12.392807960510254
    8. '-' → logprob: -13.017807960510254
    9. '   ' → logprob: -13.517807960510254
    10. '	h' → logprob: -13.767807960510254

Token 93: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08935893326997757
    2. ' -' → logprob: -2.8393590450286865
    3. ' ' → logprob: -4.589358806610107
    4. 'h' → logprob: -4.839358806610107
    5. '1' → logprob: -5.714358806610107
    6. ' h' → logprob: -6.089358806610107
    7. 'w' → logprob: -6.464358806610107
    8. '2' → logprob: -6.589358806610107
    9. '0' → logprob: -8.839359283447266
    10. ' w' → logprob: -8.964359283447266

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00534961698576808
    2. ' ' → logprob: -5.255349636077881
    3. 'cnt' → logprob: -9.880349159240723
    4. 'w' → logprob: -10.255349159240723
    5. '2' → logprob: -11.130349159240723
    6. ' w' → logprob: -11.755349159240723
    7. ' cnt' → logprob: -12.630349159240723
    8. '   ' → logprob: -13.005349159240723
    9. '10' → logprob: -15.630349159240723
    10. '3' → logprob: -15.817849159240723

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007289938512258232
    2. 'cnt' → logprob: -8.375728607177734
    3. 'w' → logprob: -8.500728607177734
    4. ' ' → logprob: -8.500728607177734
    5. '2' → logprob: -9.500728607177734
    6. '   ' → logprob: -12.125728607177734
    7. 'paint' → logprob: -12.625728607177734
    8. ' cnt' → logprob: -13.875728607177734
    9. ' w' → logprob: -13.875728607177734
    10. '10' → logprob: -14.000728607177734

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32264041900634766
    2. '
' → logprob: -1.9476404190063477
    3. ' else' → logprob: -2.8226404190063477
    4. 'else' → logprob: -3.0726404190063477
    5. '<|end|>' → logprob: -4.072640419006348
    6. '    
' → logprob: -5.197640419006348
    7. '\n' → logprob: -6.822640419006348
    8. '	else' → logprob: -6.822640419006348
    9. ' 
' → logprob: -7.322640419006348
    10. '<|end|>' → logprob: -7.572640419006348

Token 97: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14463692903518677
    2. ' else' → logprob: -2.019636869430542
    3. '   ' → logprob: -7.269637107849121
    4. '
' → logprob: -7.644637107849121
    5. ' 
' → logprob: -7.894637107849121
    6. 'elif' → logprob: -8.519637107849121
    7. '<|end|>' → logprob: -9.769637107849121
    8. '    
' → logprob: -9.894637107849121
    9. '	else' → logprob: -10.019637107849121
    10. '\n' → logprob: -11.144637107849121

Token 98: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10098939388990402
    2. ' else' → logprob: -2.35098934173584
    3. '   ' → logprob: -7.22598934173584
    4. 'elif' → logprob: -10.10098934173584
    5. '	else' → logprob: -11.35098934173584
    6. ' elif' → logprob: -13.85098934173584
    7. '    
' → logprob: -14.85098934173584
    8. '
' → logprob: -15.72598934173584
    9. ' 
' → logprob: -15.72598934173584
    10. ':
' → logprob: -15.85098934173584

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47615957260131836
    2. ':
' → logprob: -0.9761595726013184
    3. '       ' → logprob: -7.351159572601318
    4. ' :
' → logprob: -7.351159572601318
    5. '   ' → logprob: -7.726159572601318
    6. ' :' → logprob: -8.476160049438477
    7. ':
' → logprob: -10.101160049438477
    8. '{' → logprob: -10.476160049438477
    9. '```' → logprob: -10.976160049438477
    10. '{
' → logprob: -10.976160049438477

Token 100: '       ' (ID: 309)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2640601396560669
    2. '       ' → logprob: -1.764060139656067
    3. ' cnt' → logprob: -3.5140600204467773
    4. '   ' → logprob: -3.5140600204467773
    5. '	cnt' → logprob: -7.139060020446777
    6. 'count' → logprob: -8.514060020446777
    7. '```' → logprob: -10.264060020446777
    8. '(cnt' → logprob: -10.764060020446777
    9. '[cnt' → logprob: -10.764060020446777
    10. '    ' → logprob: -10.889060020446777

Token 101: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.011067155748605728
    2. ' cnt' → logprob: -4.5110673904418945
    3. '	cnt' → logprob: -11.511067390441895
    4. '   ' → logprob: -12.761067390441895
    5. '(cnt' → logprob: -13.136067390441895
    6. '
' → logprob: -13.261067390441895
    7. '       ' → logprob: -14.261067390441895
    8. '[cnt' → logprob: -14.386067390441895
    9. 'count' → logprob: -15.011067390441895
    10. '_cnt' → logprob: -15.386067390441895

Token 102: '+=' (ID: 18287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859248176217079
    2. '=' → logprob: -3.0485925674438477
    3. ' +=' → logprob: -12.548592567443848
    4. '+=' → logprob: -13.548592567443848
    5. ' ' → logprob: -16.17359161376953
    6. '   ' → logprob: -16.29859161376953
    7. '  ' → logprob: -17.67359161376953
    8. '＝' → logprob: -19.04859161376953
    9. '    ' → logprob: -19.67359161376953
    10. ' ' → logprob: -19.79859161376953

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021979559678584337
    2. ' ' → logprob: -6.127197742462158
    3. '   ' → logprob: -11.627198219299316
    4. 'w' → logprob: -13.502198219299316
    5. 'h' → logprob: -14.377198219299316
    6. '       ' → logprob: -14.752198219299316
    7. ' h' → logprob: -15.252198219299316
    8. '2' → logprob: -15.252198219299316
    9. ' w' → logprob: -15.377198219299316
    10. '  ' → logprob: -15.439698219299316

Token 104: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.071037769317627
    2. '       ' → logprob: -1.071037769317627
    3. 'paint' → logprob: -1.321037769317627
    4. ' painted' → logprob: -4.071037769317627
    5. '   ' → logprob: -4.196037769317627
    6. 'w' → logprob: -4.321037769317627
    7. '
' → logprob: -7.821037769317627
    8. '```' → logprob: -7.946037769317627
    9. '        
' → logprob: -8.571037292480469
    10. '           ' → logprob: -8.696037292480469

Token 105: '       ' (ID: 309)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.7537219524383545
    2. '
' → logprob: -1.1287219524383545
    3. '       ' → logprob: -1.6287219524383545
    4. '   ' → logprob: -5.128722190856934
    5. 'w' → logprob: -6.503722190856934
    6. ' painted' → logprob: -6.628722190856934
    7. '
' → logprob: -8.503722190856934
    8. '```' → logprob: -8.628722190856934
    9. '        
' → logprob: -9.128722190856934
    10. '     ' → logprob: -9.753722190856934

Token 106: ' painted' (ID: 33842)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.00021807955636177212
    2. '   ' → logprob: -9.250218391418457
    3. '       ' → logprob: -9.250218391418457
    4. ' painted' → logprob: -10.625218391418457
    5. '
' → logprob: -15.375218391418457
    6. 'n' → logprob: -15.875218391418457
    7. '           ' → logprob: -16.12521743774414
    8. 'w' → logprob: -16.37521743774414
    9. '    ' → logprob: -16.37521743774414
    10. '```' → logprob: -16.37521743774414

Token 107: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07172811031341553
    2. ' =' → logprob: -3.196728229522705
    3. '+=' → logprob: -3.696728229522705
    4. ' +=' → logprob: -5.696728229522705
    5. '+' → logprob: -9.196727752685547
    6. '   ' → logprob: -9.946727752685547
    7. ' +' → logprob: -12.571727752685547
    8. '=p' → logprob: -13.446727752685547
    9. '=w' → logprob: -13.821727752685547
    10. ' ' → logprob: -14.071727752685547

Token 108: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.1689596148207784e-05
    2. ' h' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. 'w' → logprob: -17.500051498413086
    5. ' ' → logprob: -18.750051498413086
    6. '1' → logprob: -19.625051498413086
    7. '	h' → logprob: -19.875051498413086
    8. '       ' → logprob: -20.375051498413086
    9. '    ' → logprob: -20.750051498413086
    10. '  ' → logprob: -20.875051498413086

Token 109: '
' (ID: 198)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03619213402271271
    2. '       ' → logprob: -3.7861921787261963
    3. '   ' → logprob: -4.536191940307617
    4. ' w' → logprob: -6.161191940307617
    5. '           ' → logprob: -10.786191940307617
    6. '     ' → logprob: -11.536191940307617
    7. '	w' → logprob: -13.036191940307617
    8. '    ' → logprob: -13.161191940307617
    9. ' ' → logprob: -13.661191940307617
    10. '  ' → logprob: -13.786191940307617

Token 110: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7072719931602478
    2. '       ' → logprob: -0.7072719931602478
    3. ' w' → logprob: -4.582272052764893
    4. '   ' → logprob: -5.582272052764893
    5. '	w' → logprob: -11.582271575927734
    6. '           ' → logprob: -11.582271575927734
    7. ' ' → logprob: -13.082271575927734
    8. '      ' → logprob: -13.207271575927734
    9. '     ' → logprob: -13.332271575927734
    10. '
' → logprob: -13.707271575927734

Token 111: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -2.4272752852994017e-05
    2. ' w' → logprob: -11.25002384185791
    3. '       ' → logprob: -11.50002384185791
    4. '   ' → logprob: -13.75002384185791
    5. '           ' → logprob: -17.125024795532227
    6. '	w' → logprob: -17.750024795532227
    7. ' ' → logprob: -20.125024795532227
    8. '  ' → logprob: -20.125024795532227
    9. '    ' → logprob: -20.125024795532227
    10. '     ' → logprob: -20.375024795532227

Token 112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16003398597240448
    2. ' =' → logprob: -2.410033941268921
    3. '-=' → logprob: -3.160033941268921
    4. ' -=' → logprob: -4.1600341796875
    5. '-' → logprob: -10.2850341796875
    6. '+=' → logprob: -12.9100341796875
    7. '   ' → logprob: -13.4100341796875
    8. ' ' → logprob: -13.6600341796875
    9. ' +=' → logprob: -14.5350341796875
    10. ' -' → logprob: -14.5350341796875

Token 113: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01815076172351837
    2. ' w' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.143150329589844
    4. '	w' → logprob: -15.393150329589844
    5. ' ' → logprob: -15.643150329589844
    6. '0' → logprob: -16.893150329589844
    7. '    ' → logprob: -17.643150329589844
    8. '  ' → logprob: -17.768150329589844
    9. '-' → logprob: -18.080650329589844
    10. ' ' → logprob: -18.393150329589844

Token 114: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04731599614024162
    2. ' -' → logprob: -3.172316074371338
    3. 'w' → logprob: -5.672316074371338
    4. ' w' → logprob: -7.672316074371338
    5. ' ' → logprob: -7.922316074371338
    6. '1' → logprob: -10.67231559753418
    7. '   ' → logprob: -12.42231559753418
    8. '0' → logprob: -12.42231559753418
    9. '-=' → logprob: -13.17231559753418
    10. '  ' → logprob: -13.54731559753418

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.625019073486328
    4. '  ' → logprob: -20.125019073486328
    5. '       ' → logprob: -20.250019073486328
    6. '```' → logprob: -20.250019073486328
    7. '１' → logprob: -20.500019073486328
    8. '=' → logprob: -20.500019073486328
    9. '    ' → logprob: -20.750019073486328
    10. '	' → logprob: -21.000019073486328

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.1250057220459
    4. '<|end|>' → logprob: -19.1250057220459
    5. '```' → logprob: -19.8750057220459
    6. '       ' → logprob: -20.0000057220459
    7. '  ' → logprob: -20.0000057220459
    8. '=' → logprob: -21.2500057220459
    9. '１' → logprob: -21.7500057220459
    10. '    ' → logprob: -21.7500057220459

Token 117: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004716941155493259
    2. '
' → logprob: -5.504716873168945
    3. ')' → logprob: -8.754716873168945
    4. '<|end|>' → logprob: -8.879716873168945
    5. '#' → logprob: -9.379716873168945
    6. ' print' → logprob: -9.504716873168945
    7. '```' → logprob: -9.629716873168945
    8. '#print' → logprob: -10.754716873168945
    9. '  
' → logprob: -10.879716873168945
    10. '\n' → logprob: -11.004716873168945

Token 118: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002737330214586109
    2. ')' → logprob: -9.250273704528809
    3. 'if' → logprob: -9.625273704528809
    4. '```' → logprob: -10.250273704528809
    5. '#' → logprob: -10.875273704528809
    6. ' print' → logprob: -11.000273704528809
    7. '   ' → logprob: -11.500273704528809
    8. ')
' → logprob: -12.000273704528809
    9. '<|end|>' → logprob: -12.250273704528809
    10. 'else' → logprob: -12.250273704528809

Token 119: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004232966806739569
    2. ')' → logprob: -5.754232883453369
    3. ' print' → logprob: -7.254232883453369
    4. ')
' → logprob: -8.254233360290527
    5. '
' → logprob: -10.004233360290527
    6. '#print' → logprob: -11.504233360290527
    7. '#' → logprob: -11.629233360290527
    8. '(print' → logprob: -12.379233360290527
    9. '   ' → logprob: -12.629233360290527
    10. ']' → logprob: -13.004233360290527

Token 120: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026930848136544228
    2. '#' → logprob: -4.401930809020996
    3. '#print' → logprob: -4.651930809020996
    4. 'nt' → logprob: -6.526930809020996
    5. 'ode' → logprob: -6.526930809020996
    6. 'ont' → logprob: -7.026930809020996
    7. 'on' → logprob: -7.776930809020996
    8. 'ount' → logprob: -9.401930809020996
    9. 'omp' → logprob: -9.651930809020996
    10. 'out' → logprob: -9.776930809020996

Token 121: ' fini' (ID: 63561)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.058377671986818314
    2. ' cnt' → logprob: -3.433377742767334
    3. 'print' → logprob: -3.808377742767334
    4. '(cnt' → logprob: -6.433377742767334
    5. ' print' → logprob: -8.183377265930176
    6. 'le' → logprob: -9.058377265930176
    7. ' la' → logprob: -9.808377265930176
    8. '[cnt' → logprob: -9.933377265930176
    9. ' le' → logprob: -10.433377265930176
    10. '#print' → logprob: -11.183377265930176

Token 122: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006055590230971575
    2. '
' → logprob: -5.1310553550720215
    3. ' print' → logprob: -9.13105583190918
    4. ')' → logprob: -12.00605583190918
    5. ')
' → logprob: -12.13105583190918
    6. '(print' → logprob: -13.63105583190918
    7. '#print' → logprob: -13.75605583190918
    8. '```' → logprob: -13.75605583190918
    9. ',
' → logprob: -14.00605583190918
    10. '#' → logprob: -14.13105583190918

Token 123: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003385614836588502
    2. ' print' → logprob: -8.000338554382324
    3. 'cnt' → logprob: -13.750338554382324
    4. '
' → logprob: -14.125338554382324
    5. '#print' → logprob: -14.125338554382324
    6. '#' → logprob: -15.000338554382324
    7. '   ' → logprob: -16.25033950805664
    8. '```' → logprob: -16.75033950805664
    9. ' 
' → logprob: -17.50033950805664
    10. '    
' → logprob: -17.62533950805664

Token 124: ''aff' (ID: 53397)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.058718327432870865
    2. 'e' → logprob: -2.93371844291687
    3. 'uste' → logprob: -6.058718204498291
    4. '#print' → logprob: -7.683718204498291
    5. 'ust' → logprob: -8.05871868133545
    6. ' print' → logprob: -8.43371868133545
    7. 'output' → logprob: -9.43371868133545
    8. '#' → logprob: -9.55871868133545
    9. ''ai' → logprob: -10.05871868133545
    10. '```' → logprob: -10.30871868133545

Token 125: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -4.7755875129951164e-05
    2. '#' → logprob: -10.62504768371582
    3. 'che' → logprob: -11.50004768371582
    4. 'ic' → logprob: -12.00004768371582
    5. 'icher' → logprob: -12.50004768371582
    6. 'print' → logprob: -13.87504768371582
    7. 'ichage' → logprob: -15.00004768371582
    8. 'ich' → logprob: -15.25004768371582
    9. '   ' → logprob: -15.75004768371582
    10. '\' → logprob: -15.87504768371582

Token 126: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. '(print' → logprob: -14.500000953674316
    3. ' print' → logprob: -16.0
    4. '```' → logprob: -16.875
    5. '
' → logprob: -20.125
    6. '(' → logprob: -20.625
    7. '#print' → logprob: -21.5
    8. '``' → logprob: -21.625
    9. 'cnt' → logprob: -22.875
    10. '(cnt' → logprob: -23.5

Token 127: ' résultat' (ID: 62556)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.011813049204647541
    2. 'result' → logprob: -5.136813163757324
    3. 'nombre' → logprob: -6.011813163757324
    4. 'rés' → logprob: -6.511813163757324
    5. ' résultat' → logprob: -7.136813163757324
    6. ' cnt' → logprob: -7.761813163757324
    7. 'print' → logprob: -8.386813163757324
    8. 'res' → logprob: -8.386813163757324
    9. 'count' → logprob: -10.011813163757324
    10. ' nombre' → logprob: -10.136813163757324

Token 128: ' ici' (ID: 27994)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.750000953674316
    3. '
' → logprob: -15.500000953674316
    4. '```' → logprob: -16.5
    5. ')
' → logprob: -18.5
    6. '``' → logprob: -20.125
    7. '#print' → logprob: -20.875
    8. '(print' → logprob: -21.125
    9. '
' → logprob: -22.125
    10. '.print' → logprob: -22.75

Token 129: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -13.25000286102295
    3. '```' → logprob: -14.37500286102295
    4. ' print' → logprob: -14.50000286102295
    5. ')
' → logprob: -16.500003814697266
    6. '``' → logprob: -17.375003814697266
    7. '(print' → logprob: -19.625003814697266
    8. '
' → logprob: -19.625003814697266
    9. '`
' → logprob: -20.250003814697266
    10. '#print' → logprob: -20.625003814697266

Token 130: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.500000953674316
    3. ' print' → logprob: -16.75
    4. '
' → logprob: -18.125
    5. '``' → logprob: -18.25
    6. '(print' → logprob: -21.0
    7. '#print' → logprob: -21.125
    8. ')
' → logprob: -21.25
    9. '`
' → logprob: -22.875
    10. '.print' → logprob: -23.375

Token 131: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.0031797364354133606
    2. '(' → logprob: -5.753179550170898
    3. '()' → logprob: -13.878179550170898
    4. '(count' → logprob: -15.253179550170898
    5. '(counter' → logprob: -16.1281795501709
    6. '(
' → logprob: -16.2531795501709
    7. '(p' → logprob: -16.2531795501709
    8. '(ctrl' → logprob: -16.3781795501709
    9. 'cnt' → logprob: -16.5031795501709
    10. '(cont' → logprob: -16.5031795501709

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -17.625
    4. '))' → logprob: -18.25
    5. ')`' → logprob: -18.25
    6. ')}' → logprob: -18.75
    7. '())' → logprob: -18.875
    8. '）' → logprob: -20.25
    9. '`)' → logprob: -20.25
    10. '}' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 130
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 23.08%
Précision adaptée (1ère position): 25.38%
Précision (top 10): 67.69%
================================================================================
