================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition d'une fonction nommée LCM qui prend deux arguments, x et y.
def LCM(x, y):
    # set1 est un ensemble qui contient tous les multiples de x.
    # range(x, x*y+1, x) crée une séquence débutant à x,
    # finissant à x*y inclus, et en incrémentant de x à chaque fois.
    # Exemple : si x=2, y=3, on a range(2, 7, 2) soit [2, 4, 6].
    set1 = set(range(x, x*y+1, x))
    
    # set2 est un ensemble qui contient tous les multiples de y,
    # selon le même principe que ci-dessus mais avec un pas de y.
    set2 = set(range(y, x*y+1, y))
    
    # set3 est l'intersection des ensembles set1 et set2.
    # L'opérateur "&" donne les éléments communs à set1 et set2, c'est-à-dire les entiers
    # compris entre x et x*y qui sont multiples à la fois de x et de y.
    set3 = set1 & set2
    
    # Nous retournons la plus petite valeur de set3, ce qui correspond
    # au plus petit entier qui est divisible par x ET y à la fois (PPCM).
    return min(set3)

# On lit une ligne de l'entrée standard (input) contenant des valeurs séparées par un espace.
# Par exemple : "3 4"
# La méthode split() sépare la chaîne en liste ["3", "4"].
# La fonction map(int, ...) applique la conversion en entier à chaque élément de la liste,
# ce qui donne les entiers a et b.
a, b = map(int, input().split())

# On appelle la fonction LCM avec les arguments a et b, ce qui donne leur PPCM,
# puis on affiche le résultat obtenu avec la fonction print.
print(LCM(a, b))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.9651345014572144
    2. 'inition' → logprob: -1.3401345014572144
    3. 't' → logprob: -2.090134620666504
    4. 'i' → logprob: -2.715134620666504
    5. ' ```' → logprob: -2.965134620666504
    6. 'e' → logprob: -3.465134620666504
    7. '#' → logprob: -4.340134620666504
    8. 'a' → logprob: -4.465134620666504
    9. 'er' → logprob: -4.465134620666504
    10. 'al' → logprob: -4.965134620666504

Token 4: ' d' (ID: 272)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23234444856643677
    2. ' :' → logprob: -2.982344388961792
    3. 's' → logprob: -3.107344388961792
    4. '_' → logprob: -3.482344388961792
    5. ' ' → logprob: -3.607344388961792
    6. '```' → logprob: -4.107344627380371
    7. ' d' → logprob: -4.857344627380371
    8. '=' → logprob: -4.982344627380371
    9. '(' → logprob: -5.107344627380371
    10. ' de' → logprob: -5.357344627380371

Token 5: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07912518829107285
    2. ''un' → logprob: -3.704125165939331
    3. 'e' → logprob: -3.954125165939331
    4. '_' → logprob: -4.20412540435791
    5. ''une' → logprob: -4.32912540435791
    6. ' ' → logprob: -6.70412540435791
    7. ''espace' → logprob: -7.20412540435791
    8. ' '' → logprob: -7.45412540435791
    9. ' e' → logprob: -8.07912540435791
    10. ''e' → logprob: -8.57912540435791

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.18871141970157623
    2. ' fonction' → logprob: -2.813711404800415
    3. 'classe' → logprob: -3.063711404800415
    4. ' ' → logprob: -3.813711404800415
    5. 'class' → logprob: -4.063711643218994
    6. 'function' → logprob: -4.688711643218994
    7. ' classe' → logprob: -5.313711643218994
    8. ' function' → logprob: -5.813711643218994
    9. 'fon' → logprob: -5.813711643218994
    10. 'f' → logprob: -6.563711643218994

Token 7: ' nom' (ID: 8080)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.48937931656837463
    2. 'def' → logprob: -1.6143792867660522
    3. ' ' → logprob: -2.239379405975342
    4. ' d' → logprob: -3.364379405975342
    5. '_' → logprob: -3.989379405975342
    6. '```' → logprob: -4.864379405975342
    7. ' de' → logprob: -5.114379405975342
    8. ' ```' → logprob: -5.989379405975342
    9. '\' → logprob: -6.114379405975342
    10. 's' → logprob: -6.239379405975342

Token 8: 'm' (ID: 76)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26146259903907776
    2. '(' → logprob: -2.386462688446045
    3. ' ' → logprob: -2.636462688446045
    4. 's' → logprob: -3.136462688446045
    5. 'e' → logprob: -4.886462688446045
    6. '=' → logprob: -5.761462688446045
    7. 'space' → logprob: -5.886462688446045
    8. ' (' → logprob: -6.261462688446045
    9. 'a' → logprob: -6.761462688446045
    10. ':' → logprob: -7.386462688446045

Token 9: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.48099079728126526
    2. 'ée' → logprob: -0.9809907674789429
    3. 'e' → logprob: -4.980990886688232
    4. 'ee' → logprob: -11.605990409851074
    5. 'è' → logprob: -12.855990409851074
    6. 'ê' → logprob: -13.105990409851074
    7. '#' → logprob: -13.480990409851074
    8. ' é' → logprob: -13.730990409851074
    9. 'lée' → logprob: -13.855990409851074
    10. ' e' → logprob: -14.230990409851074

Token 10: ' L' (ID: 451)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5699847936630249
    2. '`' → logprob: -2.1949849128723145
    3. 'space' → logprob: -2.8199849128723145
    4. '_' → logprob: -2.8199849128723145
    5. 'f' → logprob: -3.3199849128723145
    6. '```' → logprob: -3.3199849128723145
    7. 's' → logprob: -4.0699849128723145
    8. ' ' → logprob: -4.0699849128723145
    9. ''' → logprob: -4.3199849128723145
    10. ' `' → logprob: -4.4449849128723145

Token 11: 'CM' (ID: 14170)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012948790565133095
    2. 'e' → logprob: -5.012948989868164
    3. 'a' → logprob: -5.637948989868164
    4. 'u' → logprob: -7.887948989868164
    5. 'def' → logprob: -7.887948989868164
    6. 'f' → logprob: -8.262948989868164
    7. '_' → logprob: -8.387948989868164
    8. '()' → logprob: -8.512948989868164
    9. '```' → logprob: -8.637948989868164
    10. '`' → logprob: -9.262948989868164

Token 12: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030375372618436813
    2. 'def' → logprob: -4.0303754806518555
    3. ' (' → logprob: -4.7803754806518555
    4. ':' → logprob: -6.6553754806518555
    5. '_' → logprob: -7.2803754806518555
    6. '```' → logprob: -8.155375480651855
    7. ',' → logprob: -8.405375480651855
    8. 's' → logprob: -8.530375480651855
    9. ' ' → logprob: -9.030375480651855
    10. ' def' → logprob: -9.155375480651855

Token 13: ' prend' (ID: 37463)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.10796664655208588
    2. ' prend' → logprob: -3.482966661453247
    3. 'cal' → logprob: -3.857966661453247
    4. 'calcul' → logprob: -3.857966661453247
    5. ' calculates' → logprob: -4.982966423034668
    6. 'calc' → logprob: -4.982966423034668
    7. ' calcul' → logprob: -4.982966423034668
    8. ' accepte' → logprob: -6.857966423034668
    9. ' calculate' → logprob: -6.982966423034668
    10. ' retourne' → logprob: -7.232966423034668

Token 14: ' deux' (ID: 10301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1238462924957275
    2. ' ' → logprob: -1.1238462924957275
    3. '(' → logprob: -1.2488462924957275
    4. ' (' → logprob: -3.9988462924957275
    5. ' en' → logprob: -5.248846054077148
    6. '  ' → logprob: -5.373846054077148
    7. 's' → logprob: -5.623846054077148
    8. ' la' → logprob: -5.748846054077148
    9. '(space' → logprob: -5.748846054077148
    10. ' un' → logprob: -5.873846054077148

Token 15: ' arguments' (ID: 11917)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22966058552265167
    2. ' ' → logprob: -2.6046605110168457
    3. ' arguments' → logprob: -2.6046605110168457
    4. ' espaces' → logprob: -3.9796605110168457
    5. 'arguments' → logprob: -4.604660511016846
    6. 's' → logprob: -5.104660511016846
    7. ' nombres' → logprob: -5.229660511016846
    8. '  ' → logprob: -5.854660511016846
    9. 'space' → logprob: -6.479660511016846
    10. ' tokens' → logprob: -6.979660511016846

Token 16: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1827443540096283
    2. '(' → logprob: -2.432744264602661
    3. 'd' → logprob: -3.057744264602661
    4. ':' → logprob: -4.93274450302124
    5. 'de' → logprob: -4.93274450302124
    6. '```' → logprob: -5.18274450302124
    7. ' de' → logprob: -5.55774450302124
    8. ' def' → logprob: -5.80774450302124
    9. ' (' → logprob: -6.30774450302124
    10. ' d' → logprob: -7.68274450302124

Token 17: ' x' (ID: 1215)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7576226592063904
    2. 'l' → logprob: -2.007622718811035
    3. ''' → logprob: -2.257622718811035
    4. 'a' → logprob: -2.507622718811035
    5. ',' → logprob: -2.882622718811035
    6. '```' → logprob: -3.257622718811035
    7. '(' → logprob: -4.382622718811035
    8. ' (' → logprob: -4.757622718811035
    9. ' ' → logprob: -4.757622718811035
    10. 'de' → logprob: -4.882622718811035

Token 18: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008500874042510986
    2. 'u' → logprob: -5.883501052856445
    3. ')' → logprob: -6.508501052856445
    4. '(' → logprob: -6.633501052856445
    5. 's' → logprob: -7.133501052856445
    6. ' ,' → logprob: -8.008501052856445
    7. '```' → logprob: -8.133501052856445
    8. 'a' → logprob: -8.258501052856445
    9. '_' → logprob: -8.758501052856445
    10. 'def' → logprob: -9.133501052856445

Token 19: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759879350662231
    2. ' y' → logprob: -0.8259879350662231
    3. ' ' → logprob: -10.575987815856934
    4. '	y' → logprob: -12.075987815856934
    5. ''y' → logprob: -12.575987815856934
    6. '_y' → logprob: -12.575987815856934
    7. ',y' → logprob: -12.825987815856934
    8. ',' → logprob: -13.075987815856934
    9. ' ' → logprob: -13.700987815856934
    10. '```' → logprob: -13.825987815856934

Token 20: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17246058583259583
    2. ':' → logprob: -2.6724605560302734
    3. 'd' → logprob: -2.9224605560302734
    4. '```' → logprob: -3.4224605560302734
    5. ':def' → logprob: -6.547460556030273
    6. ' :' → logprob: -7.297460556030273
    7. ' def' → logprob: -8.547460556030273
    8. 'de' → logprob: -9.047460556030273
    9. '``' → logprob: -9.422460556030273
    10. ' d' → logprob: -9.547460556030273

Token 21: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32934489846229553
    2. 'def' → logprob: -1.3293448686599731
    3. '```' → logprob: -4.829344749450684
    4. ':def' → logprob: -5.704344749450684
    5. ' :' → logprob: -6.329344749450684
    6. 'd' → logprob: -6.329344749450684
    7. ' def' → logprob: -7.329344749450684
    8. ':
' → logprob: -9.329344749450684
    9. ',' → logprob: -9.454344749450684
    10. '(' → logprob: -9.829344749450684

Token 22: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.029776068404316902
    2. ' ' → logprob: -3.654776096343994
    3. ' ' → logprob: -5.904776096343994
    4. 'LC' → logprob: -8.654775619506836
    5. '_L' → logprob: -8.654775619506836
    6. ' l' → logprob: -9.404775619506836
    7. ' _' → logprob: -9.654775619506836
    8. '_' → logprob: -9.904775619506836
    9. ' ' → logprob: -10.154775619506836
    10. ' ‌' → logprob: -10.529775619506836

Token 23: 'CM' (ID: 14170)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3486974239349365
    2. 'CM' → logprob: -1.2236974239349365
    3. ' C' → logprob: -8.848697662353516
    4. 'M' → logprob: -10.473697662353516
    5. '   ' → logprob: -10.598697662353516
    6. 'CMS' → logprob: -11.598697662353516
    7. 'CMC' → logprob: -11.723697662353516
    8. ' CM' → logprob: -11.848697662353516
    9. 'CMP' → logprob: -12.473697662353516
    10. '  ' → logprob: -12.473697662353516

Token 24: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003738087136298418
    2. '(x' → logprob: -5.753737926483154
    3. ' (' → logprob: -7.503737926483154
    4. '```' → logprob: -13.003738403320312
    5. '<|end|>' → logprob: -13.628738403320312
    6. 'def' → logprob: -13.878738403320312
    7. '(
' → logprob: -14.003738403320312
    8. '(a' → logprob: -14.628738403320312
    9. ' ' → logprob: -14.753738403320312
    10. '(`' → logprob: -15.378738403320312

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00151081255171448
    2. ' ,' → logprob: -6.5015106201171875
    3. ',y' → logprob: -12.251510620117188
    4. ',

' → logprob: -13.751510620117188
    5. ')' → logprob: -13.876510620117188
    6. ',
' → logprob: -14.251510620117188
    7. '‌,' → logprob: -15.126510620117188
    8. ',x' → logprob: -16.001510620117188
    9. ' ' → logprob: -16.126510620117188
    10. '<|end|>' → logprob: -16.251510620117188

Token 26: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5763610005378723
    2. ' y' → logprob: -0.8263610005378723
    3. ' ' → logprob: -7.826361179351807
    4. ' ' → logprob: -11.326360702514648
    5. '  ' → logprob: -12.451360702514648
    6. '	y' → logprob: -12.701360702514648
    7. ')' → logprob: -14.076360702514648
    8. ' ,' → logprob: -14.326360702514648
    9. ',y' → logprob: -14.951360702514648
    10. ',' → logprob: -15.201360702514648

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037487715017050505
    2. ')' → logprob: -5.753748893737793
    3. ':' → logprob: -7.503748893737793
    4. '):
' → logprob: -11.128748893737793
    5. '**' → logprob: -13.628748893737793
    6. ' ):' → logprob: -13.753748893737793
    7. '*' → logprob: -14.503748893737793
    8. '   ' → logprob: -14.878748893737793
    9. '}:' → logprob: -15.128748893737793
    10. '}' → logprob: -15.753748893737793

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24577634036540985
    2. ':' → logprob: -1.7457762956619263
    3. ' ' → logprob: -3.870776414871216
    4. '<|end|>' → logprob: -4.995776176452637
    5. '    ' → logprob: -5.495776176452637
    6. '    
' → logprob: -5.745776176452637
    7. '```' → logprob: -6.620776176452637
    8. ' 
' → logprob: -6.870776176452637
    9. ' (' → logprob: -7.495776176452637
    10. '\' → logprob: -7.495776176452637

Token 29: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5056058168411255
    2. ' ' → logprob: -1.5056058168411255
    3. '    ' → logprob: -2.005605697631836
    4. ' 
' → logprob: -4.380605697631836
    5. ' return' → logprob: -4.880605697631836
    6. '    
' → logprob: -5.380605697631836
    7. '     
' → logprob: -5.880605697631836
    8. ' \' → logprob: -6.505605697631836
    9. ' ```' → logprob: -7.005605697631836
    10. '```' → logprob: -7.005605697631836

Token 30: ' set' (ID: 920)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6846194863319397
    2. ' return' → logprob: -1.059619426727295
    3. ' if' → logprob: -2.434619426727295
    4. '    ' → logprob: -3.684619426727295
    5. 'return' → logprob: -5.059619426727295
    6. ' l' → logprob: -5.184619426727295
    7. ' ' → logprob: -5.434619426727295
    8. ' """' → logprob: -5.559619426727295
    9. ' a' → logprob: -5.809619426727295
    10. ' while' → logprob: -6.434619426727295

Token 31: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17749544978141785
    2. ' result' → logprob: -3.4274954795837402
    3. ' ' → logprob: -3.6774954795837402
    4. '  ' → logprob: -3.9274954795837402
    5. ' a' → logprob: -4.30249547958374
    6. '    ' → logprob: -4.30249547958374
    7. ' =' → logprob: -4.55249547958374
    8. ' return' → logprob: -4.80249547958374
    9. 'result' → logprob: -5.42749547958374
    10. ' l' → logprob: -5.55249547958374

Token 32: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023846764117479324
    2. '   ' → logprob: -4.273846626281738
    3. ' ' → logprob: -5.523846626281738
    4. '=' → logprob: -6.273846626281738
    5. '    ' → logprob: -6.523846626281738
    6. ':' → logprob: -7.273846626281738
    7. '_set' → logprob: -8.648846626281738
    8. '  ' → logprob: -8.773846626281738
    9. ' =
' → logprob: -8.773846626281738
    10. ',' → logprob: -8.898846626281738

Token 33: ' un' (ID: 537)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.06063200905919075
    2. ' x' → logprob: -3.0606319904327393
    3. ' ' → logprob: -5.185632228851318
    4. 'set' → logprob: -6.435632228851318
    5. '   ' → logprob: -6.560632228851318
    6. '	set' → logprob: -7.060632228851318
    7. '  ' → logprob: -7.560632228851318
    8. 'x' → logprob: -7.560632228851318
    9. '=set' → logprob: -7.560632228851318
    10. ' []' → logprob: -8.68563175201416

Token 34: ' ensemble' (ID: 33081)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.36972156167030334
    2. ' ensemble' → logprob: -1.994721531867981
    3. 'ensemble' → logprob: -2.9947216510772705
    4. '   ' → logprob: -3.2447216510772705
    5. 'ense' → logprob: -3.3697216510772705
    6. ' ' → logprob: -3.9947216510772705
    7. 'set' → logprob: -4.994721412658691
    8. 'e' → logprob: -5.244721412658691
    9. '_' → logprob: -5.619721412658691
    10. 'semble' → logprob: -6.244721412658691

Token 35: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34440913796424866
    2. '(' → logprob: -2.219409227371216
    3. '()' → logprob: -3.219409227371216
    4. '   ' → logprob: -3.219409227371216
    5. '(set' → logprob: -3.344409227371216
    6. '=set' → logprob: -3.469409227371216
    7. '(x' → logprob: -4.719408988952637
    8. '(range' → logprob: -5.094408988952637
    9. ' (' → logprob: -5.594408988952637
    10. ' set' → logprob: -5.719408988952637

Token 36: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.08041675388813019
    2. ' cont' → logprob: -2.955416679382324
    3. ' rassemble' → logprob: -5.705416679382324
    4. 'cont' → logprob: -5.705416679382324
    5. '   ' → logprob: -5.830416679382324
    6. ' représente' → logprob: -5.955416679382324
    7. ' comprend' → logprob: -6.080416679382324
    8. ' ' → logprob: -6.330416679382324
    9. '_cont' → logprob: -6.580416679382324
    10. ' contains' → logprob: -6.830416679382324

Token 37: ' tous' (ID: 10688)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.4338349103927612
    2. ' ' → logprob: -1.8088349103927612
    3. '{' → logprob: -2.183835029602051
    4. '{x' → logprob: -2.808835029602051
    5. ' x' → logprob: -2.933835029602051
    6. ' l' → logprob: -3.058835029602051
    7. '   ' → logprob: -3.183835029602051
    8. ' set' → logprob: -3.183835029602051
    9. ' les' → logprob: -3.308835029602051
    10. 'x' → logprob: -3.308835029602051

Token 38: ' les' (ID: 1341)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.8011906743049622
    2. '(' → logprob: -1.1761906147003174
    3. '(x' → logprob: -2.4261906147003174
    4. ' les' → logprob: -3.0511906147003174
    5. '   ' → logprob: -4.0511908531188965
    6. 's' → logprob: -4.0511908531188965
    7. ' ' → logprob: -4.1761908531188965
    8. ' (' → logprob: -4.6761908531188965
    9. '  ' → logprob: -4.9261908531188965
    10. ' i' → logprob: -5.1761908531188965

Token 39: ' multiples' (ID: 70720)
  Prédit: ' multiples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.7762973308563232
    2. ' nombres' → logprob: -1.6512973308563232
    3. ' ent' → logprob: -2.0262973308563232
    4. 'div' → logprob: -2.2762973308563232
    5. 'ent' → logprob: -3.1512973308563232
    6. 'multip' → logprob: -3.7762973308563232
    7. ' éléments' → logprob: -4.526297569274902
    8. ' div' → logprob: -5.026297569274902
    9. 'élé' → logprob: -5.276297569274902
    10. ' ' → logprob: -5.401297569274902

Token 40: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.707635760307312
    2. ' de' → logprob: -0.707635760307312
    3. 's' → logprob: -5.707635879516602
    4. '   ' → logprob: -5.957635879516602
    5. 'de' → logprob: -6.207635879516602
    6. ' of' → logprob: -6.582635879516602
    7. '  ' → logprob: -6.707635879516602
    8. ' des' → logprob: -7.082635879516602
    9. ' possibles' → logprob: -7.332635879516602
    10. ' multiples' → logprob: -8.332635879516602

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.35109585523605347
    2. 'x' → logprob: -1.2260959148406982
    3. ' y' → logprob: -6.351095676422119
    4. ' ' → logprob: -7.476095676422119
    5. 'y' → logprob: -8.351096153259277
    6. ' l' → logprob: -10.851096153259277
    7. '1' → logprob: -11.351096153259277
    8. '   ' → logprob: -11.476096153259277
    9. 'l' → logprob: -11.601096153259277
    10. '```' → logprob: -11.726096153259277

Token 42: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7632285356521606
    2. ',' → logprob: -1.2632285356521606
    3. 's' → logprob: -2.263228416442871
    4. ' ' → logprob: -2.763228416442871
    5. ' =' → logprob: -3.888228416442871
    6. ' ,' → logprob: -3.888228416442871
    7. ':' → logprob: -4.888228416442871
    8. ' :' → logprob: -5.138228416442871
    9. '  ' → logprob: -5.763228416442871
    10. ' {' → logprob: -5.888228416442871

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6648479104042053
    2. '    
' → logprob: -2.0398478507995605
    3. ' 
' → logprob: -2.1648478507995605
    4. '
' → logprob: -2.7898478507995605
    5. '  
' → logprob: -3.0398478507995605
    6. ' set' → logprob: -3.4148478507995605
    7. 'set' → logprob: -4.0398478507995605
    8. 's' → logprob: -4.1648478507995605
    9. '   
' → logprob: -4.1648478507995605
    10. '_set' → logprob: -5.5398478507995605

Token 44: ' #' (ID: 1069)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.1847498118877411
    2. 'set' → logprob: -2.4347498416900635
    3. '   ' → logprob: -2.5597498416900635
    4. 's' → logprob: -6.934749603271484
    5. ' ' → logprob: -7.309749603271484
    6. ' return' → logprob: -7.559749603271484
    7. ' {' → logprob: -8.059749603271484
    8. '    ' → logprob: -8.684749603271484
    9. ' s' → logprob: -8.684749603271484
    10. '```' → logprob: -9.059749603271484

Token 45: ' range' (ID: 3352)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.04698530212044716
    2. 'set' → logprob: -3.171985387802124
    3. '   ' → logprob: -5.921985149383545
    4. ' return' → logprob: -7.296985149383545
    5. ' multiples' → logprob: -8.546985626220703
    6. ' ' → logprob: -9.046985626220703
    7. 'return' → logprob: -9.171985626220703
    8. ' ' → logprob: -9.796985626220703
    9. 'multip' → logprob: -10.671985626220703
    10. '```' → logprob: -10.671985626220703

Token 46: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11307572573423386
    2. '(x' → logprob: -2.2380757331848145
    3. '(
' → logprob: -8.488075256347656
    4. '(len' → logprob: -11.488075256347656
    5. '(start' → logprob: -11.988075256347656
    6. '(

' → logprob: -12.238075256347656
    7. '(i' → logprob: -12.488075256347656
    8. ' (' → logprob: -12.738075256347656
    9. ')' → logprob: -12.738075256347656
    10. '1' → logprob: -12.863075256347656

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003617885522544384
    2. ' ,' → logprob: -6.378617763519287
    3. ',x' → logprob: -6.503617763519287
    4. '(x' → logprob: -8.378618240356445
    5. '(' → logprob: -10.003618240356445
    6. ')' → logprob: -10.128618240356445
    7. 'x' → logprob: -10.628618240356445
    8. '   ' → logprob: -10.628618240356445
    9. ' x' → logprob: -11.753618240356445
    10. '*' → logprob: -11.753618240356445

Token 48: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2785097360610962
    2. ' y' → logprob: -2.1535096168518066
    3. 'max' → logprob: -3.2785096168518066
    4. ' max' → logprob: -3.5285096168518066
    5. '100' → logprob: -3.9035096168518066
    6. 'x' → logprob: -4.278509616851807
    7. ' ' → logprob: -4.903509616851807
    8. ' (' → logprob: -5.653509616851807
    9. ')' → logprob: -5.778509616851807
    10. '(y' → logprob: -5.778509616851807

Token 49: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17128777503967285
    2. '*y' → logprob: -1.9212877750396729
    3. ' *' → logprob: -4.921287536621094
    4. '*x' → logprob: -5.921287536621094
    5. '+y' → logprob: -7.921287536621094
    6. '**' → logprob: -8.546287536621094
    7. '+' → logprob: -8.796287536621094
    8. ',' → logprob: -9.546287536621094
    9. '*l' → logprob: -10.296287536621094
    10. '*(' → logprob: -10.671287536621094

Token 50: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02920198068022728
    2. ',' → logprob: -3.7792019844055176
    3. ' +' → logprob: -5.404201984405518
    4. '+x' → logprob: -7.029201984405518
    5. '*x' → logprob: -8.27920150756836
    6. '*' → logprob: -8.65420150756836
    7. ',x' → logprob: -9.90420150756836
    8. ' ,' → logprob: -10.52920150756836
    9. ')' → logprob: -11.15420150756836
    10. '+,' → logprob: -11.40420150756836

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011200665176147595
    2. ' ' → logprob: -9.12511157989502
    3. 'x' → logprob: -12.87511157989502
    4. ' x' → logprob: -15.12511157989502
    5. ',' → logprob: -17.125112533569336
    6. '2' → logprob: -17.500112533569336
    7. '  ' → logprob: -17.875112533569336
    8. '(x' → logprob: -18.000112533569336
    9. '```' → logprob: -18.000112533569336
    10. ' ' → logprob: -18.062612533569336

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005653033731505275
    2. ',x' → logprob: -8.000565528869629
    3. ' ,' → logprob: -9.125565528869629
    4. 'x' → logprob: -9.625565528869629
    5. ')' → logprob: -10.000565528869629
    6. ' x' → logprob: -12.375565528869629
    7. '(x' → logprob: -14.125565528869629
    8. '2' → logprob: -14.250565528869629
    9. ':x' → logprob: -14.625565528869629
    10. '   ' → logprob: -14.750565528869629

Token 53: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014164566993713379
    2. ' x' → logprob: -4.264164447784424
    3. '	x' → logprob: -15.014164924621582
    4. ')' → logprob: -15.139164924621582
    5. ' ' → logprob: -15.514164924621582
    6. ')x' → logprob: -16.139163970947266
    7. '<|end|>' → logprob: -17.264163970947266
    8. '   ' → logprob: -17.389163970947266
    9. '  ' → logprob: -17.764163970947266
    10. 'y' → logprob: -17.764163970947266

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029761482030153275
    2. '):' → logprob: -3.529761552810669
    3. ' )' → logprob: -12.52976131439209
    4. ':' → logprob: -12.65476131439209
    5. ')
' → logprob: -14.02976131439209
    6. '),' → logprob: -14.65476131439209
    7. '   ' → logprob: -14.65476131439209
    8. ',' → logprob: -14.65476131439209
    9. ' ):' → logprob: -15.15476131439209
    10. '1' → logprob: -15.27976131439209

Token 55: ' crée' (ID: 102256)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3198419213294983
    2. ' set' → logprob: -1.9448418617248535
    3. '   ' → logprob: -3.0698418617248535
    4. ')' → logprob: -3.3198418617248535
    5. 's' → logprob: -4.3198418617248535
    6. ':' → logprob: -4.6948418617248535
    7. '=set' → logprob: -5.1948418617248535
    8. '{' → logprob: -6.0698418617248535
    9. ' ' → logprob: -6.0698418617248535
    10. 'range' → logprob: -6.4448418617248535

Token 56: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.11570022255182266
    2. ' une' → logprob: -2.2407002449035645
    3. 'un' → logprob: -6.1157002449035645
    4. 'une' → logprob: -8.115699768066406
    5. ' ' → logprob: -8.990699768066406
    6. ' ' → logprob: -9.740699768066406
    7. ' l' → logprob: -10.365699768066406
    8. ' a' → logprob: -10.615699768066406
    9. ' range' → logprob: -10.740699768066406
    10. ' la' → logprob: -10.990699768066406

Token 57: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3731016218662262
    2. 'range' → logprob: -1.9981015920639038
    3. 'liste' → logprob: -2.6231017112731934
    4. 'pl' → logprob: -3.4981017112731934
    5. ' range' → logprob: -3.9981017112731934
    6. ' plage' → logprob: -4.248101711273193
    7. 'list' → logprob: -4.498101711273193
    8. 'set' → logprob: -4.873101711273193
    9. ' gamme' → logprob: -5.123101711273193
    10. ' set' → logprob: -5.498101711273193

Token 58: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.11545246839523315
    2. 't' → logprob: -2.865452527999878
    3. 'quence' → logprob: -2.990452527999878
    4. 'qu' → logprob: -7.615452289581299
    5. 'ries' → logprob: -7.990452289581299
    6. 'q' → logprob: -8.115452766418457
    7. 'tu' → logprob: -9.115452766418457
    8. '#' → logprob: -9.365452766418457
    9. 'que' → logprob: -9.615452766418457
    10. 'ri' → logprob: -9.740452766418457

Token 59: ' début' (ID: 29589)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4256645143032074
    2. ' d' → logprob: -2.6756644248962402
    3. '<|end|>' → logprob: -2.8006644248962402
    4. ' des' → logprob: -3.0506644248962402
    5. ' of' → logprob: -3.1756644248962402
    6. 'de' → logprob: -3.6756644248962402
    7. ' range' → logprob: -3.8006644248962402
    8. '(range' → logprob: -3.9256644248962402
    9. 'range' → logprob: -4.17566442489624
    10. 'd' → logprob: -4.30066442489624

Token 60: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0008074867073446512
    2. ' ant' → logprob: -7.625807285308838
    3. 'nant' → logprob: -9.000807762145996
    4. 's' → logprob: -9.500807762145996
    5. 'nt' → logprob: -10.500807762145996
    6. 'rant' → logprob: -11.125807762145996
    7. '#' → logprob: -11.625807762145996
    8. 'n' → logprob: -11.750807762145996
    9. '_ant' → logprob: -11.750807762145996
    10. '   ' → logprob: -12.000807762145996

Token 61: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.013747361488640308
    2. 'à' → logprob: -4.388747215270996
    3. ' at' → logprob: -7.138747215270996
    4. '<|end|>' → logprob: -8.638747215270996
    5. ' from' → logprob: -9.638747215270996
    6. ' ' → logprob: -10.263747215270996
    7. ' au' → logprob: -10.263747215270996
    8. '’à' → logprob: -10.763747215270996
    9. ' de' → logprob: -11.013747215270996
    10. '=' → logprob: -11.013747215270996

Token 62: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25193798542022705
    2. ' x' → logprob: -1.501937985420227
    3. ' ' → logprob: -12.001937866210938
    4. '	x' → logprob: -13.751937866210938
    5. ' ' → logprob: -15.501937866210938
    6. '1' → logprob: -15.626937866210938
    7. '   ' → logprob: -15.751937866210938
    8. '<|end|>' → logprob: -15.876937866210938
    9. '<x' → logprob: -16.251937866210938
    10. '```' → logprob: -16.251937866210938

Token 63: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49297598004341125
    2. ')' → logprob: -0.9929759502410889
    3. ' ,' → logprob: -4.617976188659668
    4. '   ' → logprob: -5.742976188659668
    5. '):' → logprob: -5.992976188659668
    6. ' )' → logprob: -6.492976188659668
    7. '<|end|>' → logprob: -7.242976188659668
    8. ':' → logprob: -7.867976188659668
    9. '),' → logprob: -8.742976188659668
    10. ' ' → logprob: -9.992976188659668

Token 64: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.42118120193481445
    2. ' y' → logprob: -1.4211812019348145
    3. ',' → logprob: -3.4211812019348145
    4. ' ,' → logprob: -3.7961812019348145
    5. ' ' → logprob: -4.1711812019348145
    6. '    ' → logprob: -4.5461812019348145
    7. '<|end|>' → logprob: -4.5461812019348145
    8. 'x' → logprob: -5.7961812019348145
    9. '   ' → logprob: -6.2961812019348145
    10. ' )' → logprob: -6.4211812019348145

Token 65: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3408846855163574
    2. ' y' → logprob: -1.3408846855163574
    3. '    ' → logprob: -4.340884685516357
    4. 'x' → logprob: -5.465884685516357
    5. ' ' → logprob: -5.465884685516357
    6. 'y' → logprob: -5.965884685516357
    7. '   ' → logprob: -6.590884685516357
    8. '        ' → logprob: -7.465884685516357
    9. '  ' → logprob: -8.090885162353516
    10. ',' → logprob: -8.215885162353516

Token 66: ' fin' (ID: 2131)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22087156772613525
    2. ' y' → logprob: -2.2208714485168457
    3. 'x' → logprob: -2.5958714485168457
    4. 'y' → logprob: -4.595871448516846
    5. ' ' → logprob: -6.095871448516846
    6. '<|end|>' → logprob: -7.595871448516846
    7. ',' → logprob: -7.720871448516846
    8. ' ,' → logprob: -8.345871925354004
    9. '20' → logprob: -8.345871925354004
    10. ')' → logprob: -8.720871925354004

Token 67: 'issant' (ID: 31359)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46344706416130066
    2. ' =' → logprob: -1.838447093963623
    3. '=x' → logprob: -2.338447093963623
    4. '=y' → logprob: -2.963447093963623
    5. '+' → logprob: -4.463447093963623
    6. '   ' → logprob: -4.588447093963623
    7. ' +' → logprob: -4.588447093963623
    8. ' à' → logprob: -4.963447093963623
    9. ',' → logprob: -5.088447093963623
    10. ' y' → logprob: -5.338447093963623

Token 68: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.01802959106862545
    2. ' at' → logprob: -4.768029689788818
    3. ' au' → logprob: -5.393029689788818
    4. 'à' → logprob: -5.643029689788818
    5. 'au' → logprob: -7.643029689788818
    6. '<|end|>' → logprob: -8.14302921295166
    7. ',' → logprob: -8.26802921295166
    8. '’à' → logprob: -9.89302921295166
    9. '=' → logprob: -9.89302921295166
    10. ''à' → logprob: -10.01802921295166

Token 69: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16074497997760773
    2. 'x' → logprob: -1.9107450246810913
    3. ' y' → logprob: -8.285744667053223
    4. ' ' → logprob: -9.285744667053223
    5. ' (' → logprob: -9.410744667053223
    6. 'y' → logprob: -10.785744667053223
    7. '(x' → logprob: -10.910744667053223
    8. 'xy' → logprob: -11.035744667053223
    9. ' xy' → logprob: -11.285744667053223
    10. ' ' → logprob: -11.410744667053223

Token 70: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.09623198956251144
    2. '*' → logprob: -2.9712319374084473
    3. ' *' → logprob: -3.2212319374084473
    4. 'y' → logprob: -7.846231937408447
    5. '**' → logprob: -8.846232414245605
    6. ' ' → logprob: -10.596232414245605
    7. '```' → logprob: -11.221232414245605
    8. ' y' → logprob: -12.346232414245605
    9. '*x' → logprob: -12.721232414245605
    10. ' ' → logprob: -12.846232414245605

Token 71: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017090659588575363
    2. ' +' → logprob: -4.142090797424316
    3. ',' → logprob: -7.142090797424316
    4. '+x' → logprob: -8.642090797424316
    5. '+,' → logprob: -10.017090797424316
    6. '+y' → logprob: -10.892090797424316
    7. ' ,' → logprob: -11.767090797424316
    8. '   ' → logprob: -12.392090797424316
    9. ')' → logprob: -12.767090797424316
    10. ' plus' → logprob: -13.017090797424316

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46898263692855835
    2. ')' → logprob: -1.5939826965332031
    3. '):' → logprob: -1.8439826965332031
    4. ' ,' → logprob: -4.968982696533203
    5. '   ' → logprob: -5.718982696533203
    6. ' ):' → logprob: -7.218982696533203
    7. '),' → logprob: -7.343982696533203
    8. ' )' → logprob: -7.343982696533203
    9. ':' → logprob: -7.718982696533203
    10. '.' → logprob: -9.968982696533203

Token 73: ' et' (ID: 859)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0009589854744262993
    2. 'x' → logprob: -7.5009589195251465
    3. ' et' → logprob: -8.625959396362305
    4. ' and' → logprob: -10.125959396362305
    5. '   ' → logprob: -10.125959396362305
    6. '    ' → logprob: -10.250959396362305
    7. ' ' → logprob: -10.625959396362305
    8. ',' → logprob: -10.875959396362305
    9. ' avec' → logprob: -10.875959396362305
    10. ' with' → logprob: -11.875959396362305

Token 74: ' en' (ID: 469)
  Prédit: ' incr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' incr' → logprob: -1.750856637954712
    2. 'avec' → logprob: -1.875856637954712
    3. 'increment' → logprob: -1.875856637954712
    4. ' avec' → logprob: -2.250856637954712
    5. ' increment' → logprob: -2.250856637954712
    6. 's' → logprob: -2.875856637954712
    7. ' ' → logprob: -3.125856637954712
    8. ' saut' → logprob: -3.250856637954712
    9. ' step' → logprob: -4.000856399536133
    10. 'augment' → logprob: -4.000856399536133

Token 75: ' incr' (ID: 52395)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4061146080493927
    2. 'pas' → logprob: -2.1561145782470703
    3. 's' → logprob: -3.4061145782470703
    4. ' ' → logprob: -3.6561145782470703
    5. ' incr' → logprob: -3.7811145782470703
    6. 'increments' → logprob: -3.7811145782470703
    7. ' increments' → logprob: -3.9061145782470703
    8. ' increment' → logprob: -4.40611457824707
    9. ' saut' → logprob: -4.65611457824707
    10. ' steps' → logprob: -4.65611457824707

Token 76: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.014430851675570011
    2. 'ement' → logprob: -5.014430999755859
    3. 'ment' → logprob: -5.514430999755859
    4. '   ' → logprob: -6.139430999755859
    5. 'é' → logprob: -7.514430999755859
    6. '```' → logprob: -8.13943099975586
    7. 'em' → logprob: -9.63943099975586
    8. '  ' → logprob: -9.63943099975586
    9. 'ém' → logprob: -9.76443099975586
    10. '       ' → logprob: -10.13943099975586

Token 77: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4969750940799713
    2. 'ant' → logprob: -1.246975064277649
    3. 'ment' → logprob: -3.1219751834869385
    4. '   ' → logprob: -3.3719751834869385
    5. 'er' → logprob: -4.246974945068359
    6. ' ment' → logprob: -5.996974945068359
    7. '-' → logprob: -6.496974945068359
    8. '```' → logprob: -6.621974945068359
    9. 'ement' → logprob: -7.246974945068359
    10. 'e' → logprob: -7.246974945068359

Token 78: ' de' (ID: 334)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.7161864638328552
    2. '<|end|>' → logprob: -0.9661864638328552
    3. 'par' → logprob: -3.2161865234375
    4. ' x' → logprob: -3.2161865234375
    5. 'x' → logprob: -3.5911865234375
    6. ' ' → logprob: -4.7161865234375
    7. ' de' → logprob: -5.5911865234375
    8. 's' → logprob: -5.8411865234375
    9. 'de' → logprob: -6.4661865234375
    10. '<|end|>' → logprob: -6.5911865234375

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16153815388679504
    2. 'x' → logprob: -1.9115381240844727
    3. ' ' → logprob: -6.661538124084473
    4. '	x' → logprob: -10.786538124084473
    5. '<|end|>' → logprob: -12.911538124084473
    6. ' ' → logprob: -13.161538124084473
    7. '  ' → logprob: -13.286538124084473
    8. '   ' → logprob: -13.286538124084473
    9. '<x' → logprob: -14.286538124084473
    10. '```' → logprob: -14.286538124084473

Token 80: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7090321183204651
    2. ':' → logprob: -1.7090320587158203
    3. '):' → logprob: -1.7090320587158203
    4. ')' → logprob: -2.2090320587158203
    5. '
' → logprob: -4.83403205871582
    6. ' set' → logprob: -5.45903205871582
    7. '    
' → logprob: -5.58403205871582
    8. ' :' → logprob: -5.70903205871582
    9. 'set' → logprob: -5.83403205871582
    10. '):
' → logprob: -5.83403205871582

Token 81: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3238506317138672
    2. 'x' → logprob: -1.6988506317138672
    3. ' each' → logprob: -3.323850631713867
    4. 'each' → logprob: -3.698850631713867
    5. ' x' → logprob: -3.823850631713867
    6. ' ' → logprob: -5.573850631713867
    7. '<|end|>' → logprob: -6.698850631713867
    8. 'cha' → logprob: -6.823850631713867
    9. 'Chaque' → logprob: -6.823850631713867
    10. '```' → logprob: -7.073850631713867

Token 82: ' fois' (ID: 14697)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.1426448822021484
    2. ' step' → logprob: -1.3926448822021484
    3. 'pas' → logprob: -1.6426448822021484
    4. ' ' → logprob: -2.0176448822021484
    5. ' étape' → logprob: -2.7676448822021484
    6. 'step' → logprob: -3.6426448822021484
    7. '```' → logprob: -5.267644882202148
    8. '<|end|>' → logprob: -5.392644882202148
    9. ' ' → logprob: -6.517644882202148
    10. '  ' → logprob: -7.392644882202148

Token 83: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8695909380912781
    2. ')' → logprob: -1.1195909976959229
    3. ':' → logprob: -1.9945909976959229
    4. '   ' → logprob: -2.994590997695923
    5. ' :' → logprob: -3.119590997695923
    6. ' ):' → logprob: -4.744590759277344
    7. ' )' → logprob: -4.994590759277344
    8. ' set' → logprob: -6.369590759277344
    9. '):
' → logprob: -6.869590759277344
    10. ',' → logprob: -6.869590759277344

Token 84: '   ' (ID: 271)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.8190194964408875
    2. '   ' → logprob: -0.9440194964408875
    3. 'set' → logprob: -1.8190195560455322
    4. ' ' → logprob: -6.694019317626953
    5. '    ' → logprob: -6.694019317626953
    6. ')' → logprob: -6.944019317626953
    7. ':' → logprob: -7.319019317626953
    8. '	set' → logprob: -7.694019317626953
    9. '=set' → logprob: -7.819019317626953
    10. '(set' → logprob: -8.069019317626953

Token 85: ' #' (ID: 1069)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6794458627700806
    2. '   ' → logprob: -1.3044458627700806
    3. 'set' → logprob: -1.5544458627700806
    4. '
' → logprob: -5.054445743560791
    5. '    ' → logprob: -6.804445743560791
    6. ' return' → logprob: -7.054445743560791
    7. '    
' → logprob: -7.554445743560791
    8. '```' → logprob: -8.05444622039795
    9. 'return' → logprob: -8.30444622039795
    10. ' ' → logprob: -8.92944622039795

Token 86: ' Exemple' (ID: 142783)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.32429927587509155
    2. ' set' → logprob: -1.3242993354797363
    3. '   ' → logprob: -4.574299335479736
    4. 'return' → logprob: -8.824298858642578
    5. ' return' → logprob: -8.949298858642578
    6. ' ' → logprob: -9.324298858642578
    7. '```' → logprob: -9.449298858642578
    8. '    ' → logprob: -9.699298858642578
    9. ' ' → logprob: -10.449298858642578
    10. '  ' → logprob: -10.574298858642578

Token 87: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5008812546730042
    2. ':' → logprob: -1.6258811950683594
    3. ' des' → logprob: -2.6258811950683594
    4. ' set' → logprob: -3.5008811950683594
    5. '   ' → logprob: -3.6258811950683594
    6. ' de' → logprob: -4.125881195068359
    7. ',' → logprob: -4.250881195068359
    8. 's' → logprob: -4.750881195068359
    9. ' x' → logprob: -5.125881195068359
    10. ' of' → logprob: -5.875881195068359

Token 88: ' si' (ID: 1784)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.5227800011634827
    2. ' x' → logprob: -1.897779941558838
    3. '{' → logprob: -2.522779941558838
    4. ' ' → logprob: -2.522779941558838
    5. '1' → logprob: -3.897779941558838
    6. ' [' → logprob: -4.022779941558838
    7. '{x' → logprob: -4.397779941558838
    8. ' range' → logprob: -4.522779941558838
    9. 'x' → logprob: -5.022779941558838
    10. '[' → logprob: -5.022779941558838

Token 89: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.022397199645638466
    2. 'x' → logprob: -3.89739727973938
    3. ' ' → logprob: -6.397397041320801
    4. ' ' → logprob: -9.2723970413208
    5. ' y' → logprob: -11.0223970413208
    6. ' user' → logprob: -11.1473970413208
    7. '  ' → logprob: -11.1473970413208
    8. '   ' → logprob: -11.8973970413208
    9. 'user' → logprob: -11.8973970413208
    10. '    ' → logprob: -12.2723970413208

Token 90: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5780603289604187
    2. '=' → logprob: -0.8280603289604187
    3. ' ==' → logprob: -6.953060150146484
    4. ' vaut' → logprob: -7.578060150146484
    5. ' est' → logprob: -8.328060150146484
    6. ',' → logprob: -8.828060150146484
    7. ' ' → logprob: -9.328060150146484
    8. '==' → logprob: -9.703060150146484
    9. ' is' → logprob: -10.203060150146484
    10. 's' → logprob: -11.078060150146484

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.947880208492279
    2. '3' → logprob: -1.1978802680969238
    3. ' ' → logprob: -1.3228802680969238
    4. '4' → logprob: -3.572880268096924
    5. '5' → logprob: -4.572880268096924
    6. '1' → logprob: -5.447880268096924
    7. '6' → logprob: -7.072880268096924
    8. '10' → logprob: -7.822880268096924
    9. '12' → logprob: -9.447879791259766
    10. '7' → logprob: -9.697879791259766

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.252533882856369
    2. ' ,' → logprob: -1.5025339126586914
    3. '   ' → logprob: -8.502533912658691
    4. ' ' → logprob: -9.002533912658691
    5. ':' → logprob: -9.377533912658691
    6. '2' → logprob: -10.377533912658691
    7. ',
' → logprob: -10.877533912658691
    8. '  ' → logprob: -11.127533912658691
    9. ')' → logprob: -11.252533912658691
    10. 'range' → logprob: -11.377533912658691

Token 93: ' y' (ID: 342)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2286415994167328
    2. ' [' → logprob: -2.7286415100097656
    3. ' range' → logprob: -3.2286415100097656
    4. ' ' → logprob: -3.6036415100097656
    5. 'set' → logprob: -3.9786415100097656
    6. ' la' → logprob: -4.228641510009766
    7. ' le' → logprob: -4.728641510009766
    8. '[' → logprob: -4.978641510009766
    9. ' {' → logprob: -5.228641510009766
    10. '2' → logprob: -5.478641510009766

Token 94: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0008147508488036692
    2. ' =' → logprob: -7.125814914703369
    3. ',' → logprob: -11.750814437866211
    4. ' ' → logprob: -13.875814437866211
    5. '==' → logprob: -14.750814437866211
    6. 'y' → logprob: -15.750814437866211
    7. ' vaut' → logprob: -15.875814437866211
    8. 's' → logprob: -16.62581443786621
    9. '=

' → logprob: -16.62581443786621
    10. ' ,' → logprob: -16.87581443786621

Token 95: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.35850679874420166
    2. '3' → logprob: -1.3585067987442017
    3. '10' → logprob: -3.733506679534912
    4. '4' → logprob: -4.108506679534912
    5. '7' → logprob: -6.733506679534912
    6. '6' → logprob: -6.858506679534912
    7. '9' → logprob: -7.483506679534912
    8. ' ' → logprob: -7.733506679534912
    9. '8' → logprob: -7.858506679534912
    10. '15' → logprob: -9.23350715637207

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3471910059452057
    2. ' ,' → logprob: -1.7221909761428833
    3. ':' → logprob: -2.847191095352173
    4. '   ' → logprob: -3.347191095352173
    5. ')' → logprob: -4.722190856933594
    6. ' :' → logprob: -4.847190856933594
    7. '):' → logprob: -6.597190856933594
    8. '2' → logprob: -7.597190856933594
    9. ' ' → logprob: -7.722190856933594
    10. ' :
' → logprob: -8.222190856933594

Token 97: ' on' (ID: 402)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.051587678492069244
    2. '[' → logprob: -3.3015875816345215
    3. ' ' → logprob: -4.8015875816345215
    4. ' range' → logprob: -6.8015875816345215
    5. '2' → logprob: -7.0515875816345215
    6. ' {' → logprob: -7.5515875816345215
    7. ' ' → logprob: -7.8015875816345215
    8. ' set' → logprob: -7.9265875816345215
    9. 'range' → logprob: -8.05158805847168
    10. '   ' → logprob: -8.17658805847168

Token 98: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7005561590194702
    2. ' obt' → logprob: -1.3255561590194702
    3. ' crée' → logprob: -2.3255562782287598
    4. 'ob' → logprob: -2.7005562782287598
    5. ' aura' → logprob: -4.07555627822876
    6. 'a' → logprob: -4.45055627822876
    7. 'range' → logprob: -5.07555627822876
    8. ' range' → logprob: -5.45055627822876
    9. ' trouve' → logprob: -5.82555627822876
    10. ' aurait' → logprob: -5.82555627822876

Token 99: ' range' (ID: 3352)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.10459564626216888
    2. '2' → logprob: -3.10459566116333
    3. '[' → logprob: -3.35459566116333
    4. ' ' → logprob: -3.97959566116333
    5. ' {' → logprob: -8.104595184326172
    6. ' ' → logprob: -8.979595184326172
    7. '```' → logprob: -9.354595184326172
    8. '3' → logprob: -9.479595184326172
    9. '1' → logprob: -9.979595184326172
    10. '4' → logprob: -10.104595184326172

Token 100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005900867399759591
    2. '(x' → logprob: -7.5005903244018555
    3. '(
' → logprob: -10.250590324401855
    4. ' (' → logprob: -14.625590324401855
    5. '(

' → logprob: -14.625590324401855
    6. '2' → logprob: -14.750590324401855
    7. ')' → logprob: -16.37558937072754
    8. ',' → logprob: -16.37558937072754
    9. '(
' → logprob: -16.37558937072754
    10. 'x' → logprob: -16.62558937072754

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008937132079154253
    2. ' ' → logprob: -7.375893592834473
    3. ',' → logprob: -8.375893592834473
    4. 'x' → logprob: -10.875893592834473
    5. ')' → logprob: -12.375893592834473
    6. '   ' → logprob: -12.375893592834473
    7. ' ,' → logprob: -12.625893592834473
    8. ' x' → logprob: -13.250893592834473
    9. '(' → logprob: -13.250893592834473
    10. '```' → logprob: -13.375893592834473

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033677343162707984
    2. ' ,' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.750336647033691
    4. '*' → logprob: -15.000336647033691
    5. '2' → logprob: -15.625336647033691
    6. ',
' → logprob: -16.375337600708008
    7. ')' → logprob: -16.500337600708008
    8. ',y' → logprob: -16.750337600708008
    9. '```' → logprob: -17.000337600708008
    10. '3' → logprob: -17.500337600708008

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10126036405563354
    2. '7' → logprob: -2.3512604236602783
    3. ' x' → logprob: -7.601260185241699
    4. '2' → logprob: -7.976260185241699
    5. '8' → logprob: -8.6012601852417
    6. 'x' → logprob: -11.4762601852417
    7. ' y' → logprob: -12.2262601852417
    8. ' (' → logprob: -12.7262601852417
    9. '6' → logprob: -13.2262601852417
    10. '```' → logprob: -13.8512601852417

Token 104: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014289027079939842
    2. '8' → logprob: -4.389288902282715
    3. '2' → logprob: -6.514288902282715
    4. ' ' → logprob: -8.514288902282715
    5. '(' → logprob: -9.889288902282715
    6. '6' → logprob: -10.264288902282715
    7. 'x' → logprob: -12.889288902282715
    8. '```' → logprob: -13.201788902282715
    9. ' (' → logprob: -13.951788902282715
    10. ' x' → logprob: -14.514288902282715

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.888114098226652e-05
    2. ')' → logprob: -10.125088691711426
    3. '2' → logprob: -10.625088691711426
    4. ' ,' → logprob: -11.000088691711426
    5. '7' → logprob: -13.500088691711426
    6. '6' → logprob: -13.625088691711426
    7. '),' → logprob: -13.875088691711426
    8. '+' → logprob: -14.250088691711426
    9. '```' → logprob: -14.375088691711426
    10. '3' → logprob: -14.625088691711426

Token 106: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016036011278629303
    2. ' ' → logprob: -4.141036033630371
    3. '  ' → logprob: -14.516036033630371
    4. ')' → logprob: -15.141036033630371
    5. ' ' → logprob: -15.141036033630371
    6. '   ' → logprob: -15.578536033630371
    7. '```' → logprob: -16.328535079956055
    8. '۲' → logprob: -16.828535079956055
    9. '２' → logprob: -16.953535079956055
    10. '	' → logprob: -17.328535079956055

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018006093159783632
    2. ' ' → logprob: -8.6251802444458
    3. ')' → logprob: -15.0001802444458
    4. '1' → logprob: -17.187679290771484
    5. '3' → logprob: -17.562679290771484
    6. '۲' → logprob: -17.687679290771484
    7. '   ' → logprob: -17.875179290771484
    8. ' ' → logprob: -17.875179290771484
    9. '```' → logprob: -18.000179290771484
    10. '  ' → logprob: -18.250179290771484

Token 108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018280261429026723
    2. '):' → logprob: -8.62518310546875
    3. ' )' → logprob: -13.62518310546875
    4. ':' → logprob: -14.25018310546875
    5. ')
' → logprob: -15.00018310546875
    6. ',' → logprob: -15.25018310546875
    7. '),' → logprob: -16.25018310546875
    8. '2' → logprob: -16.37518310546875
    9. ' ' → logprob: -16.75018310546875
    10. ')

' → logprob: -16.75018310546875

Token 109: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2111184149980545
    2. ':' → logprob: -2.086118459701538
    3. ')' → logprob: -3.211118459701538
    4. '):' → logprob: -3.961118459701538
    5. ',' → logprob: -5.961118221282959
    6. '<|end|>' → logprob: -6.336118221282959
    7. ' :' → logprob: -7.711118221282959
    8. '  ' → logprob: -8.211118698120117
    9. '    ' → logprob: -8.336118698120117
    10. ' ' → logprob: -8.461118698120117

Token 110: ' [' (ID: 723)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3933110237121582
    2. '[' → logprob: -1.1433110237121582
    3. ' ' → logprob: -5.268311023712158
    4. ' [' → logprob: -6.768311023712158
    5. '(' → logprob: -9.518310546875
    6. ':' → logprob: -11.018310546875
    7. '{' → logprob: -11.893310546875
    8. '   ' → logprob: -12.768310546875
    9. '<' → logprob: -12.893310546875
    10. ' (' → logprob: -13.018310546875

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009758448228240013
    2. ' ' → logprob: -4.634758472442627
    3. '[' → logprob: -13.384757995605469
    4. '   ' → logprob: -15.759757995605469
    5. ']' → logprob: -16.07225799560547
    6. '  ' → logprob: -16.25975799560547
    7. ')' → logprob: -16.44725799560547
    8. '```' → logprob: -16.50975799560547
    9. ' ' → logprob: -16.63475799560547
    10. ' [' → logprob: -16.63475799560547

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ' ,' → logprob: -10.750051498413086
    3. '2' → logprob: -11.250051498413086
    4. '4' → logprob: -11.625051498413086
    5. ' ' → logprob: -11.875051498413086
    6. ',
' → logprob: -14.375051498413086
    7. ')' → logprob: -14.875051498413086
    8. ']' → logprob: -15.750051498413086
    9. '```' → logprob: -16.000051498413086
    10. '6' → logprob: -16.125051498413086

Token 113: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.01815064437687397
    2. ' ' → logprob: -4.018150806427002
    3. '  ' → logprob: -15.393150329589844
    4. '   ' → logprob: -15.393150329589844
    5. '۴' → logprob: -16.518150329589844
    6. '2' → logprob: -16.893150329589844
    7. '' → logprob: -17.018150329589844
    8. '    ' → logprob: -17.143150329589844
    9. '４' → logprob: -17.393150329589844
    10. '```' → logprob: -17.580650329589844

Token 114: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -16.625045776367188
    4. '2' → logprob: -17.250045776367188
    5. '۴' → logprob: -17.250045776367188
    6. '' → logprob: -17.875045776367188
    7. '４' → logprob: -17.937545776367188
    8. '४' → logprob: -18.062545776367188
    9. '  ' → logprob: -18.187545776367188
    10. '৪' → logprob: -18.250045776367188

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034845535992644727
    2. '6' → logprob: -8.500348091125488
    3. ' ,' → logprob: -8.875348091125488
    4. ')' → logprob: -13.125348091125488
    5. ' ' → logprob: -13.375348091125488
    6. '4' → logprob: -14.125348091125488
    7. '2' → logprob: -14.500348091125488
    8. ']' → logprob: -16.000349044799805
    9. '8' → logprob: -17.000349044799805
    10. ',)' → logprob: -17.375349044799805

Token 116: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.07889066636562347
    2. ' ' → logprob: -2.578890562057495
    3. '```' → logprob: -15.453890800476074
    4. '۶' → logprob: -15.703890800476074
    5. '٦' → logprob: -16.078889846801758
    6. ' ' → logprob: -16.203889846801758
    7. '2' → logprob: -16.578889846801758
    8. '' → logprob: -16.828889846801758
    9. ')' → logprob: -17.328889846801758
    10. '<|end|>' → logprob: -17.453889846801758

Token 117: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۶' → logprob: -16.875003814697266
    4. '```' → logprob: -17.000003814697266
    5. '٦' → logprob: -17.750003814697266
    6. '...' → logprob: -18.000003814697266
    7. '६' → logprob: -18.125003814697266
    8. '６' → logprob: -18.750003814697266
    9. '৬' → logprob: -18.875003814697266
    10. '2' → logprob: -19.125003814697266

Token 118: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003470709314569831
    2. ')' → logprob: -6.0034708976745605
    3. '])' → logprob: -7.6284708976745605
    4. ' ]' → logprob: -8.128470420837402
    5. ',' → logprob: -8.628470420837402
    6. '   ' → logprob: -11.878470420837402
    7. ')]' → logprob: -12.253470420837402
    8. ' ' → logprob: -12.628470420837402
    9. ']
' → logprob: -13.003470420837402
    10. '.' → logprob: -13.003470420837402

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001998819876462221
    2. '    
' → logprob: -7.1269989013671875
    3. '
' → logprob: -7.2519989013671875
    4. ' set' → logprob: -9.001998901367188
    5. '  
' → logprob: -9.501998901367188
    6. '    ' → logprob: -10.126998901367188
    7. ' 
' → logprob: -10.251998901367188
    8. 'set' → logprob: -10.251998901367188
    9. ' ' → logprob: -10.751998901367188
    10. ')' → logprob: -10.751998901367188

Token 120: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.8845455646514893
    2. '   ' → logprob: -1.0095455646514893
    3. ' set' → logprob: -1.5095455646514893
    4. ' return' → logprob: -8.00954532623291
    5. 'return' → logprob: -8.00954532623291
    6. ' ' → logprob: -8.75954532623291
    7. ' ' → logprob: -8.75954532623291
    8. '    ' → logprob: -8.88454532623291
    9. '    
' → logprob: -8.88454532623291
    10. '	set' → logprob: -9.50954532623291

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022129806166049093
    2. '_' → logprob: -8.500221252441406
    3. '_set' → logprob: -11.750221252441406
    4. '_x' → logprob: -12.000221252441406
    5. 's' → logprob: -12.875221252441406
    6. '_s' → logprob: -15.000221252441406
    7. '(x' → logprob: -15.250221252441406
    8. '(' → logprob: -15.500221252441406
    9. 'x' → logprob: -15.625221252441406
    10. 'set' → logprob: -15.750221252441406

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699426606297493
    2. '=' → logprob: -2.6949427127838135
    3. '=set' → logprob: -12.569942474365234
    4. 's' → logprob: -14.069942474365234
    5. ' ' → logprob: -14.194942474365234
    6. ' ' → logprob: -14.569942474365234
    7. ' =
' → logprob: -15.194942474365234
    8. ',' → logprob: -15.569942474365234
    9. '＝' → logprob: -16.694942474365234
    10. '.' → logprob: -16.819942474365234

Token 123: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.16024677455425262
    2. ' set' → logprob: -1.910246729850769
    3. '{' → logprob: -11.285246849060059
    4. 'range' → logprob: -12.160246849060059
    5. '	set' → logprob: -13.285246849060059
    6. '(set' → logprob: -13.535246849060059
    7. ' range' → logprob: -14.410246849060059
    8. ' {' → logprob: -14.660246849060059
    9. '=set' → logprob: -14.660246849060059
    10. ' ' → logprob: -15.410246849060059

Token 124: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.125016212463379
    3. 'range' → logprob: -13.875016212463379
    4. ' (' → logprob: -17.250015258789062
    5. '(x' → logprob: -18.000015258789062
    6. '(r' → logprob: -18.125015258789062
    7. '	range' → logprob: -19.500015258789062
    8. ' range' → logprob: -20.125015258789062
    9. '(rank' → logprob: -20.500015258789062
    10. '(
' → logprob: -20.500015258789062

Token 125: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12700369954109192
    2. '(' → logprob: -2.1270036697387695
    3. '(
' → logprob: -9.50200366973877
    4. ' (' → logprob: -14.25200366973877
    5. '(

' → logprob: -15.00200366973877
    6. '(X' → logprob: -18.252004623413086
    7. 'x' → logprob: -18.502004623413086
    8. '(int' → logprob: -18.627004623413086
    9. '(
' → logprob: -18.877004623413086
    10. ')' → logprob: -19.627004623413086

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016599490481894463
    2. ' ,' → logprob: -8.750165939331055
    3. ',x' → logprob: -12.250165939331055
    4. '   ' → logprob: -14.125165939331055
    5. ',
' → logprob: -14.250165939331055
    6. 'x' → logprob: -14.500165939331055
    7. '*' → logprob: -15.500165939331055
    8. ' ' → logprob: -15.750165939331055
    9. '```' → logprob: -15.875165939331055
    10. ')' → logprob: -16.500165939331055

Token 127: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.023248272016644478
    2. 'x' → logprob: -3.7732481956481934
    3. ' y' → logprob: -13.773248672485352
    4. ' ' → logprob: -14.023248672485352
    5. '	x' → logprob: -15.023248672485352
    6. ' (' → logprob: -16.02324867248535
    7. 'xy' → logprob: -16.14824867248535
    8. ' xy' → logprob: -16.14824867248535
    9. 'y' → logprob: -16.27324867248535
    10. '(x' → logprob: -16.39824867248535

Token 128: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.023379763588309288
    2. '*' → logprob: -3.7733798027038574
    3. ' *' → logprob: -9.1483793258667
    4. '**' → logprob: -10.6483793258667
    5. 'y' → logprob: -13.1483793258667
    6. ' ' → logprob: -14.6483793258667
    7. '*x' → logprob: -15.0233793258667
    8. '***' → logprob: -15.0233793258667
    9. '*j' → logprob: -15.3983793258667
    10. '*u' → logprob: -15.5233793258667

Token 129: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023059594968799502
    2. ' +' → logprob: -8.37523078918457
    3. '()+' → logprob: -18.00023078918457
    4. ' plus' → logprob: -18.37523078918457
    5. ')+' → logprob: -19.12523078918457
    6. '＋' → logprob: -19.37523078918457
    7. '+
' → logprob: -19.37523078918457
    8. '1' → logprob: -20.12523078918457
    9. 'plus' → logprob: -20.37523078918457
    10. '+y' → logprob: -20.50023078918457

Token 130: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.706686690449715e-05
    2. ' ' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -14.500066757202148
    4. '```' → logprob: -15.875066757202148
    5. '2' → logprob: -16.12506675720215
    6. '   ' → logprob: -16.37506675720215
    7. '
' → logprob: -16.87506675720215
    8. ',' → logprob: -16.93756675720215
    9. '+' → logprob: -17.06256675720215
    10. ')' → logprob: -17.75006675720215

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.117345684382599e-05
    2. ' ,' → logprob: -11.250020980834961
    3. ',x' → logprob: -11.750020980834961
    4. 'x' → logprob: -16.25002098083496
    5. '   ' → logprob: -16.37502098083496
    6. '```' → logprob: -17.12502098083496
    7. ' x' → logprob: -17.37502098083496
    8. ' ' → logprob: -18.75002098083496
    9. ')' → logprob: -18.87502098083496
    10. ',
' → logprob: -18.87502098083496

Token 132: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04858941584825516
    2. 'x' → logprob: -3.0485894680023193
    3. ' ' → logprob: -14.298589706420898
    4. ')' → logprob: -14.423589706420898
    5. '	x' → logprob: -14.798589706420898
    6. ' ' → logprob: -15.173589706420898
    7. ')x' → logprob: -16.6735897064209
    8. ' )' → logprob: -17.1735897064209
    9. ' 
' → logprob: -17.6735897064209
    10. '```' → logprob: -17.9235897064209

Token 133: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.7014437364414334e-05
    2. ' ))' → logprob: -11.25002670288086
    3. ')' → logprob: -11.87502670288086
    4. '))
' → logprob: -12.50002670288086
    5. '   ' → logprob: -13.00002670288086
    6. ')))' → logprob: -14.62502670288086
    7. '));' → logprob: -15.25002670288086
    8. ' ' → logprob: -16.37502670288086
    9. '))

' → logprob: -16.87502670288086
    10. ')),' → logprob: -17.25002670288086

Token 134: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44362062215805054
    2. '   ' → logprob: -1.1936206817626953
    3. '    
' → logprob: -3.8186206817626953
    4. '  
' → logprob: -3.9436206817626953
    5. '<|end|>' → logprob: -4.693620681762695
    6. ')' → logprob: -6.443620681762695
    7. ' 
' → logprob: -6.818620681762695
    8. '   
' → logprob: -7.068620681762695
    9. ')
' → logprob: -7.693620681762695
    10. '\n' → logprob: -8.943620681762695

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011274991557002068
    2. 'set' → logprob: -4.636274814605713
    3. ' set' → logprob: -6.511274814605713
    4. ' ' → logprob: -11.261275291442871
    5. '    ' → logprob: -12.011275291442871
    6. '    
' → logprob: -12.636275291442871
    7. '(set' → logprob: -13.011275291442871
    8. '  ' → logprob: -13.261275291442871
    9. '	set' → logprob: -13.886275291442871
    10. '<|end|>' → logprob: -13.886275291442871

Token 136: ' #' (ID: 1069)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.09198888391256332
    2. '   ' → logprob: -2.4669888019561768
    3. ' set' → logprob: -5.841989040374756
    4. '#' (adapté à ' #') → logprob: -9.841988563537598
    5. ' ' → logprob: -9.966988563537598
    6. '  ' → logprob: -10.966988563537598
    7. '    ' → logprob: -12.091988563537598
    8. '#set' → logprob: -12.091988563537598
    9. '    
' → logprob: -13.216988563537598
    10. '	set' → logprob: -13.341988563537598

Token 137: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06221247464418411
    2. ' set' → logprob: -2.8122124671936035
    3. '   ' → logprob: -9.062212944030762
    4. '#' → logprob: -9.312212944030762
    5. ' #' → logprob: -11.312212944030762
    6. '#set' → logprob: -11.687212944030762
    7. ' ' → logprob: -11.937212944030762
    8. '```' → logprob: -13.187212944030762
    9. '    ' → logprob: -13.749712944030762
    10. '	set' → logprob: -13.937212944030762

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.375001907348633
    3. ' ' → logprob: -16.125001907348633
    4. 'set' → logprob: -16.625001907348633
    5. 'y' → logprob: -17.625001907348633
    6. '₂' → logprob: -17.875001907348633
    7. '_set' → logprob: -18.625001907348633
    8. '۲' → logprob: -18.625001907348633
    9. '(' → logprob: -18.875001907348633
    10. '_y' → logprob: -19.125001907348633

Token 139: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815790683031082
    2. '=' → logprob: -4.018157958984375
    3. '=set' → logprob: -11.768157958984375
    4. ' ' → logprob: -15.893157958984375
    5. ' set' → logprob: -17.143157958984375
    6. ' ' → logprob: -17.393157958984375
    7. 'set' → logprob: -17.643157958984375
    8. ' is' → logprob: -18.518157958984375
    9. 's' → logprob: -19.393157958984375
    10. '<|end|>' → logprob: -19.393157958984375

Token 140: ' un' (ID: 537)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.14677520096302032
    2. ' un' → logprob: -2.021775245666504
    3. 'set' → logprob: -5.646775245666504
    4. 'un' → logprob: -8.396775245666504
    5. '=set' → logprob: -8.396775245666504
    6. '(set' → logprob: -10.271775245666504
    7. ' ' → logprob: -10.271775245666504
    8. ' ' → logprob: -10.771775245666504
    9. '	set' → logprob: -11.896775245666504
    10. '<|end|>' → logprob: -12.521775245666504

Token 141: ' ensemble' (ID: 33081)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06204913184046745
    2. ' set' → logprob: -2.812049150466919
    3. 'ensemble' → logprob: -9.68704891204834
    4. 's' → logprob: -12.43704891204834
    5. '=set' → logprob: -12.43704891204834
    6. ' ensemble' → logprob: -12.81204891204834
    7. '(set' → logprob: -12.93704891204834
    8. ' ' → logprob: -13.31204891204834
    9. '<|end|>' → logprob: -13.93704891204834
    10. '#set' → logprob: -14.31204891204834

Token 142: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5464191436767578
    2. '<|end|>' → logprob: -1.6714191436767578
    3. '=set' → logprob: -1.7964191436767578
    4. '(set' → logprob: -3.421419143676758
    5. ' set' → logprob: -4.046419143676758
    6. ' qui' → logprob: -5.421419143676758
    7. '(range' → logprob: -5.921419143676758
    8. '=' → logprob: -5.921419143676758
    9. ' that' → logprob: -6.546419143676758
    10. ' (' → logprob: -6.921419143676758

Token 143: ' contient' (ID: 89067)
  Prédit: ' contient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contient' → logprob: -0.6673412322998047
    2. 'contains' → logprob: -1.5423412322998047
    3. ' contains' → logprob: -1.9173412322998047
    4. 'set' → logprob: -2.7923412322998047
    5. 'contain' → logprob: -3.4173412322998047
    6. 'cont' → logprob: -4.417341232299805
    7. ' contain' → logprob: -4.667341232299805
    8. ' set' → logprob: -5.417341232299805
    9. '<|end|>' → logprob: -6.292341232299805
    10. '=set' → logprob: -6.792341232299805

Token 144: ' tous' (ID: 10688)
  Prédit: ' tous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -0.006114124786108732
    2. 't' → logprob: -5.3811140060424805
    3. ' all' → logprob: -7.3811140060424805
    4. 'all' → logprob: -8.00611400604248
    5. ' toutes' → logprob: -8.38111400604248
    6. ' ' → logprob: -8.63111400604248
    7. 'tout' → logprob: -9.88111400604248
    8. ' ' → logprob: -10.88111400604248
    9. '<|end|>' → logprob: -11.50611400604248
    10. 'Tous' → logprob: -11.63111400604248

Token 145: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03982442617416382
    2. 'les' → logprob: -3.2898244857788086
    3. '<|end|>' → logprob: -7.164824485778809
    4. '(' → logprob: -8.414824485778809
    5. ' multiples' → logprob: -8.789824485778809
    6. '(range' → logprob: -8.914824485778809
    7. ' the' → logprob: -9.164824485778809
    8. ' ' → logprob: -9.289824485778809
    9. '(y' → logprob: -9.664824485778809
    10. ' y' → logprob: -9.914824485778809

Token 146: ' multiples' (ID: 70720)
  Prédit: ' multiples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.4291887879371643
    2. 'multip' → logprob: -1.0541887283325195
    3. ' multip' → logprob: -7.9291887283325195
    4. 'multiple' → logprob: -9.80418872833252
    5. 'mult' → logprob: -10.80418872833252
    6. 'm' → logprob: -11.30418872833252
    7. ' multiple' → logprob: -11.55418872833252
    8. 'mul' → logprob: -12.17918872833252
    9. 'ultip' → logprob: -12.17918872833252
    10. ' multipl' → logprob: -12.55418872833252

Token 147: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01808392070233822
    2. 'de' → logprob: -4.7680840492248535
    3. ' of' → logprob: -5.1430840492248535
    4. ' ' → logprob: -6.2680840492248535
    5. '(' → logprob: -7.5180840492248535
    6. ' y' → logprob: -7.6430840492248535
    7. 'y' → logprob: -8.643083572387695
    8. '(range' → logprob: -8.893083572387695
    9. '   ' → logprob: -9.268083572387695
    10. '(y' → logprob: -10.143083572387695

Token 148: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16023093461990356
    2. 'y' → logprob: -1.9102308750152588
    3. '(y' → logprob: -12.41023063659668
    4. ' ' → logprob: -14.03523063659668
    5. '	y' → logprob: -14.66023063659668
    6. ' ' → logprob: -14.91023063659668
    7. '(' → logprob: -15.28523063659668
    8. 'space' → logprob: -15.53523063659668
    9. ' (' → logprob: -15.78523063659668
    10. '```' → logprob: -16.28523063659668

Token 149: ',
' (ID: 412)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3891744315624237
    2. '   ' → logprob: -1.139174461364746
    3. '.
' → logprob: -6.139174461364746
    4. ',' → logprob: -9.514174461364746
    5. '.set' → logprob: -11.264174461364746
    6. ' set' → logprob: -11.389174461364746
    7. 'set' → logprob: -11.639174461364746
    8. '    
' → logprob: -11.889174461364746
    9. '  ' → logprob: -12.014174461364746
    10. ' .' → logprob: -12.639174461364746

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.943783253314905e-05
    2. '#' → logprob: -11.000059127807617
    3. '  ' → logprob: -11.000059127807617
    4. '    ' → logprob: -11.500059127807617
    5. '    
' → logprob: -12.250059127807617
    6. ' ' → logprob: -13.125059127807617
    7. '       ' → logprob: -13.250059127807617
    8. ' y' → logprob: -13.500059127807617
    9. 'set' → logprob: -13.625059127807617
    10. ' set' → logprob: -14.125059127807617

Token 151: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43518802523612976
    2. 'y' → logprob: -3.060188055038452
    3. '#' (adapté à ' #') → logprob: -3.185188055038452
    4. ' y' → logprob: -3.310188055038452
    5. 'set' → logprob: -3.435188055038452
    6. 'range' → logprob: -3.560188055038452
    7. ' set' → logprob: -3.685188055038452
    8. ' ' → logprob: -3.685188055038452
    9. 'def' → logprob: -4.435187816619873
    10. '  ' → logprob: -4.685187816619873

Token 152: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0711098909378052
    2. 'set' → logprob: -1.5711098909378052
    3. ' set' → logprob: -2.1961097717285156
    4. 'y' → logprob: -2.5711097717285156
    5. ' y' → logprob: -2.9461097717285156
    6. 'range' → logprob: -3.0711097717285156
    7. ' range' → logprob: -3.1961097717285156
    8. ' ' → logprob: -3.3211097717285156
    9. '#' → logprob: -4.321109771728516
    10. '  ' → logprob: -4.446109771728516

Token 153: ' le' (ID: 505)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06884672492742538
    2. 'range' → logprob: -3.0688467025756836
    3. ' la' → logprob: -4.193846702575684
    4. ' ' → logprob: -6.818846702575684
    5. ' y' → logprob: -6.818846702575684
    6. '(range' → logprob: -7.068846702575684
    7. ' une' → logprob: -7.193846702575684
    8. ' l' → logprob: -7.568846702575684
    9. ' set' → logprob: -8.818846702575684
    10. ' le' → logprob: -9.693846702575684

Token 154: ' même' (ID: 9679)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1415564864873886
    2. ' range' → logprob: -2.14155650138855
    3. ' même' → logprob: -4.641556262969971
    4. 'y' → logprob: -6.891556262969971
    5. '#' → logprob: -7.516556262969971
    6. ' y' → logprob: -7.766556262969971
    7. 'x' → logprob: -8.266556739807129
    8. '   ' → logprob: -8.391556739807129
    9. 'm' → logprob: -8.516556739807129
    10. ' ' → logprob: -8.516556739807129

Token 155: ' principe' (ID: 58004)
  Prédit: ' principe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' principe' → logprob: -0.025813885033130646
    2. 'prin' → logprob: -4.150814056396484
    3. ' sch' → logprob: -6.025814056396484
    4. 'princip' → logprob: -6.150814056396484
    5. '   ' → logprob: -7.525814056396484
    6. 'range' → logprob: -7.775814056396484
    7. '```' → logprob: -7.775814056396484
    8. 'pr' → logprob: -7.900814056396484
    9. 'e' → logprob: -8.275814056396484
    10. 'raison' → logprob: -8.275814056396484

Token 156: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021509946964215487
    2. 'set' → logprob: -8.750215530395508
    3. ' set' → logprob: -10.375215530395508
    4. '.' → logprob: -10.750215530395508
    5. '    
' → logprob: -13.125215530395508
    6. '   ' → logprob: -14.875215530395508
    7. '
' → logprob: -15.000215530395508
    8. ',' → logprob: -15.250215530395508
    9. '  ' → logprob: -15.375215530395508
    10. ' ' → logprob: -15.500215530395508

Token 157: ' ci' (ID: 7405)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.14654995501041412
    2. ' range' → logprob: -2.771549940109253
    3. 'set' → logprob: -2.896549940109253
    4. 'range' → logprob: -4.146550178527832
    5. 'x' → logprob: -7.021550178527832
    6. ' x' → logprob: -7.396550178527832
    7. ' la' → logprob: -7.896550178527832
    8. ' ' → logprob: -8.146550178527832
    9. ' #' → logprob: -8.896550178527832
    10. ' le' → logprob: -9.771550178527832

Token 158: '-dessus' (ID: 74812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36971649527549744
    2. '-dessus' → logprob: -1.6197165250778198
    3. 'def' → logprob: -3.2447164058685303
    4. 'x' → logprob: -3.3697164058685303
    5. '-dessous' → logprob: -4.744716644287109
    6. ' #' → logprob: -4.994716644287109
    7. ' ' → logprob: -5.369716644287109
    8. '-' → logprob: -5.494716644287109
    9. '   ' → logprob: -5.494716644287109
    10. 'y' → logprob: -5.744716644287109

Token 159: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006118826568126678
    2. 'set' → logprob: -7.750611782073975
    3. ' set' → logprob: -9.125612258911133
    4. '
' → logprob: -10.375612258911133
    5. '    
' → logprob: -10.375612258911133
    6. '  ' → logprob: -12.875612258911133
    7. ',' → logprob: -13.000612258911133
    8. '.' → logprob: -13.500612258911133
    9. '```' → logprob: -13.625612258911133
    10. ' ' → logprob: -14.375612258911133

Token 160: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.9541852474212646
    2. ' avec' → logprob: -1.5791852474212646
    3. ' range' → logprob: -2.0791852474212646
    4. 'range' → logprob: -2.3291852474212646
    5. ' pour' → logprob: -2.5791852474212646
    6. 'avec' → logprob: -4.079185485839844
    7. ' comm' → logprob: -4.454185485839844
    8. 'en' → logprob: -4.704185485839844
    9. ' utilisant' → logprob: -4.704185485839844
    10. ' for' → logprob: -4.954185485839844

Token 161: ' un' (ID: 537)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.14820198714733124
    2. 'y' → logprob: -2.1482019424438477
    3. ' range' → logprob: -4.023201942443848
    4. 'range' → logprob: -6.148201942443848
    5. ' ' → logprob: -8.023201942443848
    6. ' la' → logprob: -8.398201942443848
    7. '   ' → logprob: -8.773201942443848
    8. ' une' → logprob: -9.398201942443848
    9. '    ' → logprob: -10.273201942443848
    10. '  ' → logprob: -10.773201942443848

Token 162: ' pas' (ID: 2173)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8747026920318604
    2. ' pas' → logprob: -1.2497026920318604
    3. ' range' → logprob: -1.8747026920318604
    4. 'pas' → logprob: -3.4997026920318604
    5. ' espace' → logprob: -3.6247026920318604
    6. ' step' → logprob: -3.9997026920318604
    7. 'y' → logprob: -4.374702453613281
    8. 'step' → logprob: -4.499702453613281
    9. ' y' → logprob: -4.874702453613281
    10. 'es' → logprob: -4.874702453613281

Token 163: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.33295318484306335
    2. ' y' → logprob: -2.3329532146453857
    3. 'y' → logprob: -2.4579532146453857
    4. 'de' → logprob: -2.4579532146453857
    5. '=' → logprob: -5.457952976226807
    6. ' égal' → logprob: -5.832952976226807
    7. '   ' → logprob: -5.957952976226807
    8. '=y' → logprob: -6.207952976226807
    9. ' equal' → logprob: -6.582952976226807
    10. ' ' → logprob: -7.832952976226807

Token 164: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10020937025547028
    2. 'y' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.60020923614502
    4. ' ' → logprob: -13.97520923614502
    5. '	y' → logprob: -14.85020923614502
    6. ''y' → logprob: -17.100210189819336
    7. '1' → logprob: -17.225210189819336
    8. '<|end|>' → logprob: -17.850210189819336
    9. 'space' → logprob: -17.975210189819336
    10. '_y' → logprob: -17.975210189819336

Token 165: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25921326875686646
    2. '.' → logprob: -1.6342132091522217
    3. ')' → logprob: -3.7592132091522217
    4. ').' → logprob: -5.134213447570801
    5. '.
' → logprob: -6.259213447570801
    6. ')
' → logprob: -6.509213447570801
    7. ',' → logprob: -8.0092134475708
    8. ').
' → logprob: -9.3842134475708
    9. '  ' → logprob: -10.0092134475708
    10. '
' → logprob: -10.3842134475708

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009224193054251373
    2. '
' → logprob: -7.125922203063965
    3. 'set' → logprob: -9.875922203063965
    4. '    
' → logprob: -10.250922203063965
    5. ' set' → logprob: -11.000922203063965
    6. '```' → logprob: -12.250922203063965
    7. '  ' → logprob: -12.500922203063965
    8. '    ' → logprob: -13.375922203063965
    9. '<|end|>' → logprob: -13.625922203063965
    10. ' ' → logprob: -13.875922203063965

Token 167: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.4072098731994629
    2. '   ' → logprob: -1.157209873199463
    3. ' set' → logprob: -3.907209873199463
    4. '
' → logprob: -10.907209396362305
    5. '    
' → logprob: -11.532209396362305
    6. '  ' → logprob: -13.157209396362305
    7. ' ' → logprob: -13.157209396362305
    8. '```' → logprob: -13.157209396362305
    9. '	set' → logprob: -13.532209396362305
    10. '_set' → logprob: -14.907209396362305

Token 168: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '_' → logprob: -16.75
    4. '(' → logprob: -19.375
    5. '２' → logprob: -20.125
    6. '۲' → logprob: -20.375
    7. '₂' → logprob: -20.875
    8. '٢' → logprob: -21.125
    9. 'set' → logprob: -21.375
    10. '
' → logprob: -21.375

Token 169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931490898132324
    2. ' =' → logprob: -0.6931490898132324
    3. '=set' → logprob: -13.19314956665039
    4. ' ' → logprob: -17.56814956665039
    5. ' ' → logprob: -17.94314956665039
    6. '＝' → logprob: -18.94314956665039
    7. '=

' → logprob: -19.31814956665039
    8. 's' → logprob: -19.31814956665039
    9. 'set' → logprob: -19.69314956665039
    10. '=
' → logprob: -19.81814956665039

Token 170: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.16022655367851257
    2. 'set' → logprob: -1.910226583480835
    3. '(set' → logprob: -13.285226821899414
    4. '=set' → logprob: -15.160226821899414
    5. ' ' → logprob: -16.035226821899414
    6. '	set' → logprob: -16.160226821899414
    7. 's' → logprob: -16.785226821899414
    8. ' ' → logprob: -17.285226821899414
    9. 'def' → logprob: -17.910226821899414
    10. '.set' → logprob: -17.910226821899414

Token 171: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.875001907348633
    3. 'range' → logprob: -14.000001907348633
    4. ' range' → logprob: -18.500001907348633
    5. ' (' → logprob: -18.625001907348633
    6. '(r' → logprob: -20.625001907348633
    7. '.range' → logprob: -20.625001907348633
    8. '	range' → logprob: -20.750001907348633
    9. '(rank' → logprob: -21.625001907348633
    10. '(
' → logprob: -22.250001907348633

Token 172: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00976305641233921
    2. '(' → logprob: -4.634763240814209
    3. 'y' → logprob: -13.00976276397705
    4. ' (' → logprob: -13.25976276397705
    5. '(x' → logprob: -13.25976276397705
    6. ' y' → logprob: -14.00976276397705
    7. '(
' → logprob: -14.75976276397705
    8. '(Y' → logprob: -17.259763717651367
    9. ',' → logprob: -17.634763717651367
    10. ',y' → logprob: -18.384763717651367

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. ' ,' → logprob: -10.000085830688477
    3. ',y' → logprob: -10.750085830688477
    4. 'y' → logprob: -11.000085830688477
    5. '   ' → logprob: -14.250085830688477
    6. ' y' → logprob: -14.375085830688477
    7. ',
' → logprob: -15.000085830688477
    8. '2' → logprob: -16.375085830688477
    9. '‌,' → logprob: -16.500085830688477
    10. '```' → logprob: -16.750085830688477

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6932066679000854
    2. ' x' → logprob: -0.6932066679000854
    3. ' y' → logprob: -10.568206787109375
    4. ' ' → logprob: -11.318206787109375
    5. 'y' → logprob: -11.443206787109375
    6. '   ' → logprob: -11.693206787109375
    7. '    ' → logprob: -14.318206787109375
    8. '  ' → logprob: -14.568206787109375
    9. '	x' → logprob: -14.943206787109375
    10. '(x' → logprob: -15.568206787109375

Token 175: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.0004797664878424257
    2. 'y' → logprob: -8.250479698181152
    3. '*' → logprob: -8.500479698181152
    4. ' *' → logprob: -11.250479698181152
    5. '*x' → logprob: -14.000479698181152
    6. ' y' → logprob: -14.125479698181152
    7. ',' → logprob: -15.500479698181152
    8. ',y' → logprob: -16.25048065185547
    9. '**' → logprob: -16.62548065185547
    10. ''y' → logprob: -17.25048065185547

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015860427811276168
    2. ' +' → logprob: -8.750158309936523
    3. '()+' → logprob: -17.875158309936523
    4. '+
' → logprob: -17.875158309936523
    5. '<|end|>' → logprob: -18.125158309936523
    6. 'y' → logprob: -18.500158309936523
    7. '+y' → logprob: -18.500158309936523
    8. ' ' → logprob: -18.625158309936523
    9. '1' → logprob: -18.625158309936523
    10. ' plus' → logprob: -18.750158309936523

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. '+' → logprob: -11.875011444091797
    3. ' ' → logprob: -12.375011444091797
    4. 'y' → logprob: -15.125011444091797
    5. '2' → logprob: -17.562511444091797
    6. ' y' → logprob: -17.750011444091797
    7. '```' → logprob: -18.187511444091797
    8. '-' → logprob: -18.562511444091797
    9. ' +' → logprob: -18.562511444091797
    10. '   ' → logprob: -18.625011444091797

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001414426224073395
    2. ' ,' → logprob: -10.000141143798828
    3. ',y' → logprob: -10.000141143798828
    4. ' y' → logprob: -10.250141143798828
    5. 'y' → logprob: -11.125141143798828
    6. '2' → logprob: -16.375141143798828
    7. '```' → logprob: -16.750141143798828
    8. '7' → logprob: -16.875141143798828
    9. ',
' → logprob: -17.000141143798828
    10. '),' → logprob: -17.000141143798828

Token 179: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0015030752401798964
    2. 'y' → logprob: -6.501502990722656
    3. '	y' → logprob: -14.876502990722656
    4. ' ' → logprob: -14.876502990722656
    5. ' ' → logprob: -16.876502990722656
    6. '<|end|>' → logprob: -17.876502990722656
    7. ')' → logprob: -18.501502990722656
    8. '    ' → logprob: -19.501502990722656
    9. ')y' → logprob: -19.876502990722656
    10. ',' → logprob: -19.876502990722656

Token 180: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00023560250701848418
    2. ' ))' → logprob: -8.500235557556152
    3. '   ' → logprob: -11.500235557556152
    4. ')' → logprob: -11.500235557556152
    5. '))
' → logprob: -11.625235557556152
    6. '));' → logprob: -13.875235557556152
    7. ')))' → logprob: -14.500235557556152
    8. ' y' → logprob: -15.000235557556152
    9. 'y' → logprob: -15.750235557556152
    10. ' ' → logprob: -16.00023651123047

Token 181: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1764620691537857
    2. '    
' → logprob: -2.176462173461914
    3. '
' → logprob: -3.051462173461914
    4. '  
' → logprob: -8.051462173461914
    5. ' 
' → logprob: -8.301462173461914
    6. '   
' → logprob: -9.176462173461914
    7. '\n' → logprob: -9.551462173461914
    8. '    
    
' → logprob: -9.676462173461914
    9. '<|end|>' → logprob: -9.801462173461914
    10. '    ' → logprob: -10.176462173461914

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024220580235123634
    2. 'inter' → logprob: -4.8992204666137695
    3. 'intersection' → logprob: -5.5242204666137695
    4. '    
' → logprob: -5.7742204666137695
    5. ' return' → logprob: -5.8992204666137695
    6. ' intersection' → logprob: -6.7742204666137695
    7. ' for' → logprob: -6.8992204666137695
    8. 'result' → logprob: -7.0242204666137695
    9. ' common' → logprob: -7.0242204666137695
    10. '#' → logprob: -7.1492204666137695

Token 183: ' #' (ID: 1069)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.6534759402275085
    2. 'inter' → logprob: -1.1534759998321533
    3. 'intersection' → logprob: -1.9034759998321533
    4. '#' (adapté à ' #') → logprob: -4.903475761413574
    5. 'result' → logprob: -6.528475761413574
    6. 'for' → logprob: -6.528475761413574
    7. 'comm' → logprob: -6.653475761413574
    8. ' common' → logprob: -7.153475761413574
    9. 'l' → logprob: -7.528475761413574
    10. 'return' → logprob: -7.778475761413574

Token 184: ' set' (ID: 920)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.2543922662734985
    2. ' common' → logprob: -1.5043922662734985
    3. 'inter' → logprob: -2.004392147064209
    4. 'common' → logprob: -2.004392147064209
    5. ' intersection' → logprob: -2.129392147064209
    6. '#' → logprob: -3.129392147064209
    7. ' l' → logprob: -3.879392147064209
    8. ' inter' → logprob: -4.629392147064209
    9. 'result' → logprob: -5.129392147064209
    10. ' result' → logprob: -5.129392147064209

Token 185: '3' (ID: 18)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.15187592804431915
    2. '3' → logprob: -2.6518759727478027
    3. '_' → logprob: -2.9018759727478027
    4. 'inter' → logprob: -5.026875972747803
    5. 'intersection' → logprob: -5.776875972747803
    6. '1' → logprob: -6.151875972747803
    7. '_common' → logprob: -6.651875972747803
    8. '_int' → logprob: -7.901875972747803
    9. '_result' → logprob: -8.276875495910645
    10. 'common' → logprob: -8.526875495910645

Token 186: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005249056499451399
    2. '=' → logprob: -5.2552490234375
    3. ' ' → logprob: -12.1302490234375
    4. '=set' → logprob: -12.7552490234375
    5. '<|end|>' → logprob: -13.1302490234375
    6. 's' → logprob: -13.8802490234375
    7. '   ' → logprob: -14.0052490234375
    8. ' =
' → logprob: -14.2552490234375
    9. 'inter' → logprob: -14.8802490234375
    10. ' ' → logprob: -15.0052490234375

Token 187: ' l' (ID: 305)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0239382516592741
    2. 'set' → logprob: -3.8989381790161133
    3. ' l' → logprob: -6.148938179016113
    4. 'l' → logprob: -7.523938179016113
    5. ' la' → logprob: -7.648938179016113
    6. ' un' → logprob: -9.773938179016113
    7. ' ' → logprob: -9.773938179016113
    8. '=set' → logprob: -10.023938179016113
    9. '   ' → logprob: -10.898938179016113
    10. '(set' → logprob: -11.148938179016113

Token 188: ''inter' (ID: 55731)
  Prédit: ''inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''inter' → logprob: -0.9349698424339294
    2. 'intersection' → logprob: -0.9349698424339294
    3. 'a' → logprob: -2.309969902038574
    4. ' intersection' → logprob: -3.059969902038574
    5. '   ' → logprob: -3.809969902038574
    6. ' set' → logprob: -4.434969902038574
    7. 'inter' → logprob: -4.434969902038574
    8. 'e' → logprob: -4.809969902038574
    9. ''ensemble' → logprob: -4.809969902038574
    10. 'set' → logprob: -6.059969902038574

Token 189: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -0.0006087943911552429
    2. 'set' → logprob: -8.000608444213867
    3. 's' → logprob: -9.000608444213867
    4. 'ection' → logprob: -9.875608444213867
    5. 'sect' → logprob: -10.875608444213867
    6. 'ese' → logprob: -11.000608444213867
    7. 'se' → logprob: -11.500608444213867
    8. 'e' → logprob: -11.500608444213867
    9. '<section' → logprob: -12.375608444213867
    10. ' section' → logprob: -12.500608444213867

Token 190: ' des' (ID: 731)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2713061273097992
    2. 'set' → logprob: -2.021306037902832
    3. '(set' → logprob: -2.396306037902832
    4. '   ' → logprob: -5.271306037902832
    5. '_set' → logprob: -6.021306037902832
    6. ' de' → logprob: -6.021306037902832
    7. ' (' → logprob: -6.646306037902832
    8. '=set' → logprob: -7.021306037902832
    9. ' =' → logprob: -7.646306037902832
    10. ' ' → logprob: -8.021306037902832

Token 191: ' ensembles' (ID: 144172)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.7710898518562317
    2. ' set' → logprob: -0.8960898518562317
    3. ' sets' → logprob: -2.396089792251587
    4. 'set' → logprob: -4.021090030670166
    5. ' two' → logprob: -4.146090030670166
    6. 'de' → logprob: -6.396090030670166
    7. 'sets' → logprob: -6.896090030670166
    8. ' ' → logprob: -7.021090030670166
    9. ' ensembles' → logprob: -7.396090030670166
    10. '2' → logprob: -9.646089553833008

Token 192: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.043748222291469574
    2. '(set' → logprob: -3.793748140335083
    3. 'set' → logprob: -3.918748140335083
    4. ' (' → logprob: -8.543747901916504
    5. ' entre' → logprob: -9.168747901916504
    6. ' des' → logprob: -10.293747901916504
    7. '=set' → logprob: -11.168747901916504
    8. '(' → logprob: -11.293747901916504
    9. ' ' → logprob: -11.293747901916504
    10. ' sets' → logprob: -11.668747901916504

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '(set' → logprob: -11.750014305114746
    3. '(' → logprob: -12.125014305114746
    4. 'set' → logprob: -14.750014305114746
    5. '_' → logprob: -16.00001335144043
    6. '(
' → logprob: -16.00001335144043
    7. ' ' → logprob: -19.00001335144043
    8. '3' → logprob: -19.12501335144043
    9. 's' → logprob: -19.25001335144043
    10. '{' → logprob: -19.37501335144043

Token 194: ' et' (ID: 859)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.6552217602729797
    2. ' et' → logprob: -0.9052217602729797
    3. '   ' → logprob: -3.780221700668335
    4. ',' → logprob: -4.280221939086914
    5. ' set' → logprob: -4.405221939086914
    6. ' ' → logprob: -4.905221939086914
    7. ' and' → logprob: -5.155221939086914
    8. '=set' → logprob: -6.030221939086914
    9. '(set' → logprob: -6.155221939086914
    10. 'et' → logprob: -6.155221939086914

Token 195: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3868900537490845
    2. 'set' → logprob: -1.1368900537490845
    3. ' ' → logprob: -12.011890411376953
    4. ' ' → logprob: -12.136890411376953
    5. '(set' → logprob: -12.886890411376953
    6. '	set' → logprob: -13.511890411376953
    7. '=set' → logprob: -13.886890411376953
    8. '2' → logprob: -14.761890411376953
    9. '#set' → logprob: -14.886890411376953
    10. 's' → logprob: -15.074390411376953

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00223316322080791
    2. '3' → logprob: -6.252233028411865
    3. '1' → logprob: -8.127233505249023
    4. '(' → logprob: -12.752233505249023
    5. ' ' → logprob: -12.877233505249023
    6. '(set' → logprob: -13.252233505249023
    7. 'set' → logprob: -14.502233505249023
    8. '(
' → logprob: -15.502233505249023
    9. '_' → logprob: -15.752233505249023
    10. 's' → logprob: -16.252233505249023

Token 197: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08691738545894623
    2. ' =' → logprob: -2.8369174003601074
    3. ' set' → logprob: -4.211917400360107
    4. '=set' → logprob: -4.836917400360107
    5. 'set' → logprob: -7.461917400360107
    6. '=' → logprob: -8.08691692352295
    7. '(set' → logprob: -8.21191692352295
    8. '
' → logprob: -8.33691692352295
    9. '    
' → logprob: -8.46191692352295
    10. '	set' → logprob: -9.58691692352295

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014741822145879269
    2. ' set' → logprob: -4.639741897583008
    3. 'set' → logprob: -5.514741897583008
    4. '
' → logprob: -7.014741897583008
    5. '    
' → logprob: -10.264741897583008
    6. '	set' → logprob: -12.264741897583008
    7. '(set' → logprob: -12.514741897583008
    8. '=set' → logprob: -13.639741897583008
    9. 'Set' → logprob: -14.514741897583008
    10. '_set' → logprob: -14.514741897583008

Token 199: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7717022895812988
    2. ' set' → logprob: -0.8967022895812988
    3. 'set' → logprob: -2.146702289581299
    4. '
' → logprob: -4.396702289581299
    5. '    
' → logprob: -7.896702289581299
    6. '	set' → logprob: -9.52170181274414
    7. ' return' → logprob: -10.27170181274414
    8. 'return' → logprob: -10.39670181274414
    9. '  ' → logprob: -10.77170181274414
    10. ' ' → logprob: -10.89670181274414

Token 200: ' L' (ID: 451)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.01739635318517685
    2. '   ' → logprob: -4.642396450042725
    3. 'set' → logprob: -4.892396450042725
    4. ' return' → logprob: -10.517395973205566
    5. '
' → logprob: -10.767395973205566
    6. '    ' → logprob: -11.392395973205566
    7. '	set' → logprob: -11.642395973205566
    8. ' ' → logprob: -11.767395973205566
    9. 'Set' → logprob: -12.017395973205566
    10. ' ' → logprob: -12.017395973205566

Token 201: ''op' (ID: 70747)
  Prédit: 'CM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.2684958875179291
    2. 'set' → logprob: -1.5184959173202515
    3. '3' → logprob: -5.268496036529541
    4. ' set' → logprob: -5.393496036529541
    5. 'cm' → logprob: -6.268496036529541
    6. 'et' → logprob: -6.643496036529541
    7. 'C' → logprob: -6.643496036529541
    8. '   ' → logprob: -7.518496036529541
    9. '=set' → logprob: -7.768496036529541
    10. '#' → logprob: -7.893496036529541

Token 202: 'érateur' (ID: 108528)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.8853932619094849
    2. 'set' → logprob: -1.0103932619094849
    3. 'er' → logprob: -2.7603931427001953
    4. 'ération' → logprob: -3.1353931427001953
    5. 'inter' → logprob: -3.8853931427001953
    6. '#' → logprob: -4.010393142700195
    7. 'ér' → logprob: -4.385393142700195
    8. ' intersection' → logprob: -5.760393142700195
    9. 'CM' → logprob: -5.885393142700195
    10. 'L' → logprob: -5.885393142700195

Token 203: ' "&' (ID: 29580)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.47479385137557983
    2. ' &' → logprob: -0.9747938513755798
    3. ' ' → logprob: -7.849793910980225
    4. ' &=' → logprob: -9.349793434143066
    5. '&amp' → logprob: -9.599793434143066
    6. 'inter' → logprob: -10.724793434143066
    7. 'intersection' → logprob: -10.724793434143066
    8. '=' → logprob: -10.974793434143066
    9. ' intersection' → logprob: -11.099793434143066
    10. '&s' → logprob: -11.349793434143066

Token 204: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.786591649055481
    2. '<|end|>' → logprob: -1.036591649055481
    3. '"' → logprob: -2.1615915298461914
    4. ' ' → logprob: -3.1615915298461914
    5. ' set' → logprob: -3.9115915298461914
    6. '">' → logprob: -5.536591529846191
    7. ' entre' → logprob: -6.161591529846191
    8. ' sets' → logprob: -6.161591529846191
    9. '<|end|>' → logprob: -6.786591529846191
    10. ' between' → logprob: -7.161591529846191

Token 205: ' donne' (ID: 30004)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.108609139919281
    2. ' set' → logprob: -3.108609199523926
    3. ' la' → logprob: -3.733609199523926
    4. 'l' → logprob: -4.108609199523926
    5. ' ' → logprob: -4.233609199523926
    6. 'set' → logprob: -6.608609199523926
    7. ' les' → logprob: -7.358609199523926
    8. ' ' → logprob: -8.233609199523926
    9. '<|end|>' → logprob: -8.358609199523926
    10. ' the' → logprob: -8.483609199523926

Token 207: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.1684563010931015
    2. 'ense' → logprob: -2.2934563159942627
    3. ' éléments' → logprob: -3.0434563159942627
    4. ' ensembles' → logprob: -6.168456077575684
    5. 'ensemble' → logprob: -6.668456077575684
    6. ' elements' → logprob: -7.543456077575684
    7. 'multip' → logprob: -7.668456077575684
    8. ' multiples' → logprob: -8.293456077575684
    9. 'elements' → logprob: -8.293456077575684
    10. ' nombres' → logprob: -8.543456077575684

Token 208: ' commun' (ID: 2797)
  Prédit: ' commun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commun' → logprob: -0.18026408553123474
    2. 'comm' → logprob: -3.1802639961242676
    3. ' common' → logprob: -3.3052639961242676
    4. ' présents' → logprob: -3.3052639961242676
    5. ' ' → logprob: -4.180263996124268
    6. ' qui' → logprob: -4.805263996124268
    7. 'commun' → logprob: -4.805263996124268
    8. ' communes' → logprob: -5.430263996124268
    9. 'common' → logprob: -5.430263996124268
    10. '<|end|>' → logprob: -6.180263996124268

Token 209: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05286688730120659
    2. 'iques' → logprob: -3.8028669357299805
    3. 'iqu' → logprob: -4.3028669357299805
    4. 'aux' → logprob: -5.6778669357299805
    5. 'unes' → logprob: -5.6778669357299805
    6. 'set' → logprob: -6.3028669357299805
    7. ' ' → logprob: -6.4278669357299805
    8. 'iqué' → logprob: -7.1778669357299805
    9. 'sets' → logprob: -7.4278669357299805
    10. 'un' → logprob: -7.6778669357299805

Token 210: ' à' (ID: 1221)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1591079831123352
    2. ' between' → logprob: -2.5341079235076904
    3. ' set' → logprob: -3.1591079235076904
    4. ' des' → logprob: -4.6591081619262695
    5. 'entre' → logprob: -5.2841081619262695
    6. ' ' → logprob: -5.4091081619262695
    7. ' à' → logprob: -6.2841081619262695
    8. ' aux' → logprob: -6.4091081619262695
    9. '<|end|>' → logprob: -7.1591081619262695
    10. 'between' → logprob: -7.6591081619262695

Token 211: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.22624504566192627
    2. ' set' → logprob: -1.6012450456619263
    3. 'both' → logprob: -7.976244926452637
    4. ' both' → logprob: -8.101244926452637
    5. 'ces' → logprob: -10.101244926452637
    6. ' deux' → logprob: -10.476244926452637
    7. 'les' → logprob: -10.601244926452637
    8. 'sets' → logprob: -10.851244926452637
    9. ' les' → logprob: -11.601244926452637
    10. 'l' → logprob: -11.601244926452637

Token 212: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002629638649523258
    2. '3' → logprob: -6.00262975692749
    3. 'set' → logprob: -9.252629280090332
    4. 's' → logprob: -10.502629280090332
    5. '(set' → logprob: -11.502629280090332
    6. ' ' → logprob: -11.877629280090332
    7. ')' → logprob: -12.752629280090332
    8. '_' → logprob: -13.252629280090332
    9. '```' → logprob: -13.752629280090332
    10. ' set' → logprob: -13.877629280090332

Token 213: ' et' (ID: 859)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.711347758769989
    2. ' et' → logprob: -0.711347758769989
    3. '&' → logprob: -5.086347579956055
    4. ' and' → logprob: -5.336347579956055
    5. 'et' → logprob: -5.336347579956055
    6. ' set' → logprob: -7.211347579956055
    7. ' ' → logprob: -7.336347579956055
    8. '   ' → logprob: -7.461347579956055
    9. ' ' → logprob: -9.586347579956055
    10. 'set' → logprob: -9.836347579956055

Token 214: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.6931552886962891
    2. 'set' → logprob: -0.6931552886962891
    3. ' ' → logprob: -12.318155288696289
    4. '=set' → logprob: -13.318155288696289
    5. '(set' → logprob: -14.693155288696289
    6. ' sets' → logprob: -14.818155288696289
    7. '	set' → logprob: -14.943155288696289
    8. '_set' → logprob: -15.443155288696289
    9. ')set' → logprob: -15.568155288696289
    10. ' ' → logprob: -15.568155288696289

Token 215: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2256508618593216
    2. '2' → logprob: -1.6006509065628052
    3. '1' → logprob: -9.225650787353516
    4. ' ' → logprob: -9.225650787353516
    5. 'set' → logprob: -10.475650787353516
    6. '_' → logprob: -12.475650787353516
    7. '   ' → logprob: -13.788150787353516
    8. ',' → logprob: -13.913150787353516
    9. 'et' → logprob: -14.163150787353516
    10. '  ' → logprob: -14.163150787353516

Token 216: ',' (ID: 11)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.39140236377716064
    2. '   ' → logprob: -1.2664023637771606
    3. ' ' → logprob: -4.266402244567871
    4. 'set' → logprob: -4.891402244567871
    5. '  ' → logprob: -5.266402244567871
    6. ' =' → logprob: -5.391402244567871
    7. '<|end|>' → logprob: -6.141402244567871
    8. '.' → logprob: -6.391402244567871
    9. '=set' → logprob: -6.641402244567871
    10. '(set' → logprob: -6.891402244567871

Token 217: ' c' (ID: 274)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.027925997972488403
    2. ' ' → logprob: -4.402925968170166
    3. '   ' → logprob: -4.777925968170166
    4. '<|end|>' → logprob: -5.527925968170166
    5. 'set' → logprob: -6.527925968170166
    6. '  ' → logprob: -8.027926445007324
    7. ' ' → logprob: -8.152926445007324
    8. '    ' → logprob: -8.402926445007324
    9. ' et' → logprob: -9.277926445007324
    10. ' which' → logprob: -9.652926445007324

Token 218: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.367783784866333
    2. 'est' → logprob: -1.492783784866333
    3. 'es' → logprob: -4.117783546447754
    4. 'e' → logprob: -4.242783546447754
    5. '#' → logprob: -4.242783546447754
    6. ' set' → logprob: -4.492783546447754
    7. ''' → logprob: -5.242783546447754
    8. ''#' → logprob: -5.242783546447754
    9. '=set' → logprob: -6.242783546447754
    10. 'set' → logprob: -6.242783546447754

Token 219: '-à' (ID: 56297)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7977519631385803
    2. ' set' → logprob: -1.9227519035339355
    3. '-à' → logprob: -2.0477519035339355
    4. ' à' → logprob: -2.4227519035339355
    5. 'l' → logprob: -2.7977519035339355
    6. ' la' → logprob: -3.4227519035339355
    7. ' leur' → logprob: -4.4227519035339355
    8. ' ' → logprob: -4.4227519035339355
    9. 'à' → logprob: -4.5477519035339355
    10. ' le' → logprob: -4.6727519035339355

Token 220: '-dire' (ID: 76064)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3930422365665436
    2. 't' → logprob: -2.5180423259735107
    3. 'fin' → logprob: -2.7680423259735107
    4. '#' → logprob: -3.7680423259735107
    5. 'que' → logprob: -3.8930423259735107
    6. '{' → logprob: -4.393042087554932
    7. 'l' → logprob: -4.393042087554932
    8. 'f' → logprob: -4.393042087554932
    9. 'part' → logprob: -4.393042087554932
    10. 'une' → logprob: -4.518042087554932

Token 221: ' les' (ID: 1341)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.009359821677207947
    2. 'set' → logprob: -5.259359836578369
    3. ' les' → logprob: -6.009359836578369
    4. ' l' → logprob: -7.259359836578369
    5. ' la' → logprob: -7.634359836578369
    6. ' le' → logprob: -9.134359359741211
    7. ' ceux' → logprob: -9.134359359741211
    8. ' ' → logprob: -9.634359359741211
    9. ' the' → logprob: -10.009359359741211
    10. ' ' → logprob: -10.384359359741211

Token 222: ' ent' (ID: 1121)
  Prédit: ' multiples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.008659947663545609
    2. ' multiple' → logprob: -6.133659839630127
    3. ' éléments' → logprob: -6.133659839630127
    4. ' plus' → logprob: -6.258659839630127
    5. ' espaces' → logprob: -7.633659839630127
    6. ' ' → logprob: -8.133660316467285
    7. 'multip' → logprob: -8.383660316467285
    8. ' nombres' → logprob: -8.508660316467285
    9. ' elements' → logprob: -8.508660316467285
    10. 'élé' → logprob: -8.508660316467285

Token 223: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.56661057472229
    2. '   ' → logprob: -2.19161057472229
    3. 'sets' → logprob: -2.94161057472229
    4. '&' → logprob: -2.94161057472229
    5. 'erset' → logprob: -3.44161057472229
    6. 'set' → logprob: -3.94161057472229
    7. 'êtes' → logprob: -4.191610336303711
    8. 's' → logprob: -4.316610336303711
    9. 'elements' → logprob: -4.316610336303711
    10. 'êts' → logprob: -4.441610336303711

Token 224: '
' (ID: 198)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.3415178060531616
    2. ' commun' → logprob: -1.5915178060531616
    3. ' multiples' → logprob: -1.5915178060531616
    4. ' présents' → logprob: -1.9665178060531616
    5. ' ' → logprob: -3.091517925262451
    6. ' compris' → logprob: -3.591517925262451
    7. '<|end|>' → logprob: -3.591517925262451
    8. 'multip' → logprob: -4.466517925262451
    9. ' ' → logprob: -4.591517925262451
    10. ' multip' → logprob: -4.716517925262451

Token 225: '   ' (ID: 271)
  Prédit: ' commun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' commun' → logprob: -1.6288434267044067
    2. ' ' → logprob: -1.7538434267044067
    3. ' set' → logprob: -2.378843307495117
    4. ' ' → logprob: -2.503843307495117
    5. ' &' → logprob: -2.878843307495117
    6. ' présents' → logprob: -2.878843307495117
    7. '<|end|>' → logprob: -3.003843307495117
    8. ' compris' → logprob: -3.628843307495117
    9. ' _' → logprob: -3.878843307495117
    10. ' qui' → logprob: -3.878843307495117

Token 226: ' #' (ID: 1069)
  Prédit: ' commun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' commun' → logprob: -0.5326557159423828
    2. ' compris' → logprob: -2.407655715942383
    3. ' ' → logprob: -2.657655715942383
    4. ' présents' → logprob: -2.657655715942383
    5. ' common' → logprob: -3.157655715942383
    6. ' qui' → logprob: -3.157655715942383
    7. ' ' → logprob: -3.407655715942383
    8. ' multiples' → logprob: -4.282655715942383
    9. ' =' → logprob: -5.407655715942383
    10. 'commun' → logprob: -5.782655715942383

Token 227: ' compris' (ID: 49173)
  Prédit: ' qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -1.0444669723510742
    2. ' multiples' → logprob: -1.0444669723510742
    3. ' présents' → logprob: -2.044466972351074
    4. ' commun' → logprob: -2.669466972351074
    5. ' compris' → logprob: -3.294466972351074
    6. ' multip' → logprob: -3.919466972351074
    7. ' contenus' → logprob: -4.669466972351074
    8. ' multipl' → logprob: -4.669466972351074
    9. 'multip' → logprob: -5.419466972351074
    10. ' dans' → logprob: -6.044466972351074

Token 228: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1491393893957138
    2. 'entre' → logprob: -2.274139404296875
    3. 'dans' → logprob: -3.899139404296875
    4. ' between' → logprob: -4.899139404296875
    5. 'between' → logprob: -5.649139404296875
    6. ' dans' → logprob: -5.649139404296875
    7. ' ' → logprob: -8.274139404296875
    8. 'ent' → logprob: -9.274139404296875
    9. '   ' → logprob: -9.399139404296875
    10. 'Entre' → logprob: -9.649139404296875

Token 229: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3141184449195862
    2. 'x' → logprob: -1.3141183853149414
    3. '1' → logprob: -7.814118385314941
    4. ' ' → logprob: -8.064118385314941
    5. '   ' → logprob: -9.939118385314941
    6. ' set' → logprob: -10.189118385314941
    7. '0' → logprob: -11.189118385314941
    8. '2' → logprob: -11.689118385314941
    9. ' les' → logprob: -11.814118385314941
    10. 'l' → logprob: -12.064118385314941

Token 230: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.4479254186153412
    2. 'et' → logprob: -1.1979254484176636
    3. ',' → logprob: -3.572925329208374
    4. ' and' → logprob: -3.822925329208374
    5. 'and' → logprob: -5.197925567626953
    6. '   ' → logprob: -6.197925567626953
    7. ' ,' → logprob: -7.322925567626953
    8. ' ' → logprob: -7.447925567626953
    9. ' y' → logprob: -8.947925567626953
    10. ' и' → logprob: -10.072925567626953

Token 231: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4749186933040619
    2. 'x' → logprob: -0.9749187231063843
    3. ' y' → logprob: -7.349918842315674
    4. 'y' → logprob: -8.724918365478516
    5. ' ' → logprob: -10.349918365478516
    6. ' ' → logprob: -12.599918365478516
    7. '   ' → logprob: -15.599918365478516
    8. 'xy' → logprob: -15.849918365478516
    9. ',' → logprob: -16.474918365478516
    10. '	x' → logprob: -16.724918365478516

Token 232: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.0004648696631193161
    2. '*' → logprob: -7.875464916229248
    3. ' *' → logprob: -9.62546443939209
    4. 'y' → logprob: -11.00046443939209
    5. '**' → logprob: -13.75046443939209
    6. '*m' → logprob: -16.000465393066406
    7. '*x' → logprob: -16.250465393066406
    8. '*b' → logprob: -16.375465393066406
    9. '   ' → logprob: -16.625465393066406
    10. '```' → logprob: -16.750465393066406

Token 233: ' qui' (ID: 2780)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.18281467258930206
    2. '   ' → logprob: -2.182814598083496
    3. '&' → logprob: -3.557814598083496
    4. ' ' → logprob: -4.432814598083496
    5. ' qui' → logprob: -5.932814598083496
    6. ',' → logprob: -6.182814598083496
    7. ' et' → logprob: -6.307814598083496
    8. 's' → logprob: -7.307814598083496
    9. '  ' → logprob: -7.432814598083496
    10. ' ' → logprob: -7.557814598083496

Token 234: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3106219470500946
    2. ' sont' → logprob: -1.435621976852417
    3. ' ' → logprob: -4.060621738433838
    4. ' appart' → logprob: -6.185621738433838
    5. ' #' → logprob: -6.310621738433838
    6. ' font' → logprob: -6.685621738433838
    7. 'ont' → logprob: -6.685621738433838
    8. ' ' → logprob: -6.810621738433838
    9. '#' → logprob: -7.435621738433838
    10. ' représentent' → logprob: -7.685621738433838

Token 235: ' multiples' (ID: 70720)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0948737859725952
    2. ' multiples' → logprob: -1.0948737859725952
    3. 'multip' → logprob: -1.2198737859725952
    4. 'des' → logprob: -4.344873905181885
    5. ' commun' → logprob: -5.344873905181885
    6. ' multip' → logprob: -5.469873905181885
    7. ' divis' → logprob: -5.719873905181885
    8. ' à' → logprob: -6.094873905181885
    9. 'commun' → logprob: -6.594873905181885
    10. ' aussi' → logprob: -6.844873905181885

Token 236: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8167703151702881
    2. ' ' → logprob: -1.691770315170288
    3. ' common' → logprob: -2.066770315170288
    4. ' des' → logprob: -2.191770315170288
    5. ' commun' → logprob: -2.816770315170288
    6. ' à' → logprob: -4.191770553588867
    7. '   ' → logprob: -4.316770553588867
    8. ' x' → logprob: -4.441770553588867
    9. 'de' → logprob: -5.316770553588867
    10. ' set' → logprob: -5.566770553588867

Token 237: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.04279168322682381
    2. 'la' → logprob: -3.4177916049957275
    3. ' ' → logprob: -5.667791843414307
    4. ' both' → logprob: -5.917791843414307
    5. ' x' → logprob: -6.417791843414307
    6. 'x' → logprob: -7.542791843414307
    7. 'both' → logprob: -7.667791843414307
    8. ' fois' → logprob: -8.667791366577148
    9. 'à' → logprob: -9.792791366577148
    10. ' à' → logprob: -9.917791366577148

Token 238: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.5682826042175293
    2. 'fois' → logprob: -1.8182826042175293
    3. ' ' → logprob: -2.1932826042175293
    4. 'à' → logprob: -2.9432826042175293
    5. 'x' → logprob: -3.1932826042175293
    6. ' même' → logprob: -3.5682826042175293
    7. 'm' → logprob: -4.318282604217529
    8. 'de' → logprob: -4.943282604217529
    9. ' deux' → logprob: -5.568282604217529
    10. ' x' → logprob: -5.693282604217529

Token 239: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07761557400226593
    2. ' des' → logprob: -2.70261549949646
    3. 'de' → logprob: -5.952615737915039
    4. ' à' → logprob: -6.577615737915039
    5. ' ' → logprob: -6.702615737915039
    6. ' x' → logprob: -6.702615737915039
    7. ' of' → logprob: -7.452615737915039
    8. 'des' → logprob: -8.202615737915039
    9. ' set' → logprob: -8.952615737915039
    10. 'x' → logprob: -9.202615737915039

Token 240: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02058977074921131
    2. 'x' → logprob: -3.895589828491211
    3. ' ' → logprob: -10.020589828491211
    4. ' ' → logprob: -13.270589828491211
    5. 'l' → logprob: -14.020589828491211
    6. ' l' → logprob: -15.395589828491211
    7. '	x' → logprob: -15.520589828491211
    8. ' y' → logprob: -16.52058982849121
    9. '```' → logprob: -16.77058982849121
    10. ' both' → logprob: -16.89558982849121

Token 241: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.15644945204257965
    2. 'et' → logprob: -2.281449556350708
    3. '   ' → logprob: -4.281449317932129
    4. ' &' → logprob: -4.406449317932129
    5. ' and' → logprob: -4.531449317932129
    6. ',' → logprob: -6.406449317932129
    7. ' ' → logprob: -6.656449317932129
    8. '&' → logprob: -6.906449317932129
    9. 'and' → logprob: -7.531449317932129
    10. ' ,' → logprob: -7.906449317932129

Token 242: ' de' (ID: 334)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.005961741786450148
    2. 'y' → logprob: -5.130961894989014
    3. ' ' → logprob: -10.755961418151855
    4. ' de' → logprob: -11.630961418151855
    5. ' ' → logprob: -13.005961418151855
    6. '	y' → logprob: -15.630961418151855
    7. ' x' → logprob: -16.380962371826172
    8. ' et' → logprob: -16.630962371826172
    9. ' of' → logprob: -16.755962371826172
    10. '  ' → logprob: -17.005962371826172

Token 243: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0031901898328214884
    2. 'y' → logprob: -5.753190040588379
    3. ' ' → logprob: -11.378190040588379
    4. ' ' → logprob: -14.253190040588379
    5. '	y' → logprob: -15.628190040588379
    6. ',y' → logprob: -17.253190994262695
    7. ''y' → logprob: -17.253190994262695
    8. ',' → logprob: -17.628190994262695
    9. ' x' → logprob: -17.753190994262695
    10. '  ' → logprob: -18.128190994262695

Token 244: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034293620847165585
    2. '.' → logprob: -6.378429412841797
    3. ' set' → logprob: -7.503429412841797
    4. '  ' → logprob: -7.878429412841797
    5. ' ' → logprob: -8.628429412841797
    6. ' =' → logprob: -8.628429412841797
    7. '    
' → logprob: -9.253429412841797
    8. '    ' → logprob: -9.378429412841797
    9. 'set' → logprob: -9.628429412841797
    10. ',' → logprob: -10.003429412841797

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06367536634206772
    2. ' set' → logprob: -2.8136754035949707
    3. 'set' → logprob: -6.688675403594971
    4. '
' → logprob: -8.813674926757812
    5. ' return' → logprob: -9.063674926757812
    6. '    
' → logprob: -9.313674926757812
    7. '	set' → logprob: -10.438674926757812
    8. 'return' → logprob: -10.813674926757812
    9. ' ' → logprob: -11.688674926757812
    10. '=set' → logprob: -11.813674926757812

Token 246: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.30188995599746704
    2. 'set' (adapté à ' set') → logprob: -1.9268898963928223
    3. '   ' → logprob: -2.1768898963928223
    4. '
' → logprob: -7.051889896392822
    5. ' return' → logprob: -8.30189037322998
    6. 'return' → logprob: -8.67689037322998
    7. '    
' → logprob: -9.17689037322998
    8. ' ' → logprob: -9.92689037322998
    9. '	set' → logprob: -10.17689037322998
    10. '  ' → logprob: -10.92689037322998

Token 247: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.75000286102295
    4. '1' → logprob: -17.750001907348633
    5. '۳' → logprob: -18.125001907348633
    6. '３' → logprob: -18.500001907348633
    7. ' =' → logprob: -18.875001907348633
    8. '³' → logprob: -18.875001907348633
    9. '_inter' → logprob: -19.125001907348633
    10. '٣' → logprob: -19.375001907348633

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0297548845410347
    2. '=' → logprob: -3.529754877090454
    3. ' ' → logprob: -12.779754638671875
    4. ' =
' → logprob: -14.279754638671875
    5. ' ' → logprob: -15.279754638671875
    6. ' &' → logprob: -16.154754638671875
    7. '   ' → logprob: -16.279754638671875
    8. ' &=' → logprob: -16.279754638671875
    9. '  ' → logprob: -16.779754638671875
    10. ')' → logprob: -16.779754638671875

Token 249: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.016042815521359444
    2. 'set' → logprob: -4.141042709350586
    3. '(set' → logprob: -12.016042709350586
    4. ' ' → logprob: -13.516042709350586
    5. ' (' → logprob: -13.766042709350586
    6. '   ' → logprob: -16.766042709350586
    7. ' ' → logprob: -17.516042709350586
    8. '	set' → logprob: -17.766042709350586
    9. '_set' → logprob: -18.016042709350586
    10. '  ' → logprob: -18.141042709350586

Token 250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '(set' → logprob: -12.250005722045898
    3. '(range' → logprob: -14.500005722045898
    4. '(x' → logprob: -16.0000057220459
    5. 'set' → logprob: -16.6250057220459
    6. '(' → logprob: -17.1250057220459
    7. 'range' → logprob: -17.7500057220459
    8. ' ' → logprob: -18.7500057220459
    9. '１' → logprob: -19.8750057220459
    10. ' (' → logprob: -19.8750057220459

Token 251: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.02325339801609516
    2. '&' → logprob: -3.7732534408569336
    3. ' &
' → logprob: -12.773253440856934
    4. ' ' → logprob: -13.148253440856934
    5. '&amp' → logprob: -13.898253440856934
    6. '&nbsp' → logprob: -13.898253440856934
    7. '&
' → logprob: -14.398253440856934
    8. ' ' → logprob: -15.648253440856934
    9. ' &=' → logprob: -16.023252487182617
    10. '&A' → logprob: -16.273252487182617

Token 252: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02324547804892063
    2. ' set' → logprob: -3.7732455730438232
    3. '(set' → logprob: -18.898244857788086
    4. '	set' → logprob: -20.148244857788086
    5. 'Set' → logprob: -20.148244857788086
    6. ' ' → logprob: -20.398244857788086
    7. '_set' → logprob: -21.148244857788086
    8. ' ' → logprob: -21.523244857788086
    9. '=set' → logprob: -21.773244857788086
    10. 'sets' → logprob: -22.648244857788086

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۲' → logprob: -17.375
    4. '(' → logprob: -18.0625
    5. 'set' → logprob: -18.25
    6. '{' → logprob: -18.625
    7. '(set' → logprob: -18.8125
    8. '২' → logprob: -19.0
    9. '２' → logprob: -19.1875
    10. 's' → logprob: -19.4375

Token 254: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09761229157447815
    2. '    
' → logprob: -3.0976123809814453
    3. '   ' → logprob: -3.3476123809814453
    4. '  
' → logprob: -4.972612380981445
    5. '
' → logprob: -6.097612380981445
    6. ' 
' → logprob: -6.597612380981445
    7. '\n' → logprob: -7.222612380981445
    8. '

' → logprob: -8.097612380981445
    9. '   
' → logprob: -8.097612380981445
    10. 'return' → logprob: -8.847612380981445

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.143342524766922
    2. ' return' → logprob: -2.8933424949645996
    3. 'return' → logprob: -3.3933424949645996
    4. ' min' → logprob: -3.7683424949645996
    5. 'min' → logprob: -3.8933424949645996
    6. '    
' → logprob: -8.018342971801758
    7. '    ' → logprob: -9.018342971801758
    8. ' sorted' → logprob: -9.268342971801758
    9. 'minimum' → logprob: -9.393342971801758
    10. ' minimum' → logprob: -9.518342971801758

Token 256: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7632936835289001
    2. ' return' → logprob: -0.8882936835289001
    3. 'min' → logprob: -2.763293743133545
    4. ' min' → logprob: -3.763293743133545
    5. '   ' → logprob: -4.388293743133545
    6. 'result' → logprob: -4.763293743133545
    7. ' result' → logprob: -5.388293743133545
    8. ' if' → logprob: -5.513293743133545
    9. 'if' → logprob: -6.638293743133545
    10. ' l' → logprob: -6.763293743133545

Token 257: ' Nous' (ID: 20193)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4486089050769806
    2. 'return' → logprob: -1.3236088752746582
    3. ' min' → logprob: -3.198608875274658
    4. ' result' → logprob: -4.073608875274658
    5. 'min' → logprob: -4.073608875274658
    6. 'result' → logprob: -4.698608875274658
    7. '   ' → logprob: -5.448608875274658
    8. ' l' → logprob: -6.073608875274658
    9. ' res' → logprob: -7.823608875274658
    10. ' for' → logprob: -7.823608875274658

Token 258: ' retourn' (ID: 150215)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4079190194606781
    2. 'return' → logprob: -1.4079190492630005
    3. '   ' → logprob: -2.657918930053711
    4. ' #' → logprob: -4.907918930053711
    5. '#' → logprob: -5.657918930053711
    6. ' =' → logprob: -5.907918930053711
    7. 'for' → logprob: -6.407918930053711
    8. ' for' → logprob: -6.407918930053711
    9. ')' → logprob: -6.782918930053711
    10. 'min' → logprob: -7.782918930053711

Token 259: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.010554760694503784
    2. 'e' → logprob: -4.635554790496826
    3. '#' → logprob: -7.885554790496826
    4. 'on' → logprob: -8.010554313659668
    5. '   ' → logprob: -10.010554313659668
    6. 'er' → logprob: -10.385554313659668
    7. ' ons' → logprob: -12.510554313659668
    8. 'es' → logprob: -13.885554313659668
    9. 'ions' → logprob: -13.885554313659668
    10. 'return' → logprob: -14.260554313659668

Token 260: ' la' (ID: 557)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.014165272004902363
    2. 'min' → logprob: -4.26416540145874
    3. '(min' → logprob: -14.139164924621582
    4. ' max' → logprob: -14.889164924621582
    5. ' minimum' → logprob: -14.889164924621582
    6. '   ' → logprob: -15.014164924621582
    7. '	min' → logprob: -17.2641658782959
    8. ' ' → logprob: -17.7641658782959
    9. 'max' → logprob: -18.0141658782959
    10. '[min' → logprob: -18.0141658782959

Token 261: ' plus' (ID: 2932)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.634261429309845
    2. 'min' → logprob: -0.759261429309845
    3. ' minimum' → logprob: -6.884261608123779
    4. 'minimum' → logprob: -8.259261131286621
    5. ' plus' → logprob: -8.509261131286621
    6. 'plus' → logprob: -9.884261131286621
    7. '(min' → logprob: -10.009261131286621
    8. '   ' → logprob: -10.634261131286621
    9. '[min' → logprob: -11.384261131286621
    10. '	min' → logprob: -11.884261131286621

Token 262: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.001827384578064084
    2. ' petite' → logprob: -6.751827239990234
    3. 'small' → logprob: -7.751827239990234
    4. '   ' → logprob: -9.376827239990234
    5. 'min' → logprob: -9.501827239990234
    6. '```' → logprob: -10.501827239990234
    7. ' petit' → logprob: -11.126827239990234
    8. '小' → logprob: -12.876827239990234
    9. ' ' → logprob: -13.001827239990234
    10. '_pet' → logprob: -13.251827239990234

Token 263: ' valeur' (ID: 41664)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -1.2007503509521484
    2. ' valeur' → logprob: -1.7007503509521484
    3. 'élé' → logprob: -1.9507503509521484
    4. '(' → logprob: -2.0757503509521484
    5. ' element' → logprob: -2.4507503509521484
    6. ' élément' → logprob: -2.9507503509521484
    7. '(set' → logprob: -3.7007503509521484
    8. 'min' → logprob: -3.8257503509521484
    9. 'val' → logprob: -4.200750350952148
    10. '(min' → logprob: -4.200750350952148

Token 264: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.56195068359375
    2. '(min' → logprob: -1.43695068359375
    3. ' de' → logprob: -2.68695068359375
    4. ' min' → logprob: -2.81195068359375
    5. '(' → logprob: -3.56195068359375
    6. '   ' → logprob: -4.56195068359375
    7. ' minimale' → logprob: -4.56195068359375
    8. 'de' → logprob: -4.93695068359375
    9. '(set' → logprob: -6.18695068359375
    10. 'possible' → logprob: -6.81195068359375

Token 265: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.023246292024850845
    2. ' set' → logprob: -3.7732462882995605
    3. '(set' → logprob: -14.773246765136719
    4. 'l' → logprob: -15.898246765136719
    5. ' ' → logprob: -16.27324676513672
    6. 'list' → logprob: -16.89824676513672
    7. '   ' → logprob: -17.39824676513672
    8. '	set' → logprob: -17.39824676513672
    9. ')set' → logprob: -17.39824676513672
    10. 'la' → logprob: -17.52324676513672

Token 266: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.875004768371582
    3. '_' → logprob: -13.875004768371582
    4. '(' → logprob: -14.250004768371582
    5. ')' → logprob: -15.000004768371582
    6. '(min' → logprob: -17.000003814697266
    7. 'min' → logprob: -17.125003814697266
    8. 'return' → logprob: -17.250003814697266
    9. '.' → logprob: -17.375003814697266
    10. '۳' → logprob: -17.875003814697266

Token 267: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17078162729740143
    2. '
' → logprob: -2.7957816123962402
    3. 'return' → logprob: -3.0457816123962402
    4. ' return' → logprob: -3.6707816123962402
    5. '    
' → logprob: -4.79578161239624
    6. '  
' → logprob: -5.79578161239624
    7. '(min' → logprob: -6.29578161239624
    8. '.' → logprob: -6.67078161239624
    9. 'min' → logprob: -6.79578161239624
    10. '  ' → logprob: -6.79578161239624

Token 268: ' ce' (ID: 2357)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.014377268962562084
    2. 'min' → logprob: -4.264377117156982
    3. '   ' → logprob: -8.51437759399414
    4. ' ' → logprob: -12.76437759399414
    5. '	min' → logprob: -12.76437759399414
    6. ' return' → logprob: -13.13937759399414
    7. '  ' → logprob: -13.26437759399414
    8. ' minimum' → logprob: -13.63937759399414
    9. '=min' → logprob: -14.26437759399414
    10. '    ' → logprob: -14.26437759399414

Token 269: ' qui' (ID: 2780)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35779106616973877
    2. 'min' → logprob: -1.7327910661697388
    3. ' qui' → logprob: -3.357790946960449
    4. 'qui' → logprob: -3.732790946960449
    5. ' .' → logprob: -4.482790946960449
    6. '"' → logprob: -4.482790946960449
    7. '.min' → logprob: -4.982790946960449
    8. '   ' → logprob: -5.232790946960449
    9. ' min' → logprob: -5.982790946960449
    10. '#' → logprob: -5.982790946960449

Token 270: ' correspond' (ID: 11095)
  Prédit: ' correspond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' correspond' → logprob: -0.3790242671966553
    2. ' corresponds' → logprob: -1.5040242671966553
    3. '<|end|>' → logprob: -3.5040242671966553
    4. ' est' → logprob: -4.004024505615234
    5. ' serait' → logprob: -5.254024505615234
    6. ' sera' → logprob: -5.504024505615234
    7. ' permettra' → logprob: -5.504024505615234
    8. ' revient' → logprob: -5.629024505615234
    9. ' vaut' → logprob: -5.879024505615234
    10. ' donnera' → logprob: -6.004024505615234

Token 271: '
' (ID: 198)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08451985567808151
    2. ' au' → logprob: -3.084519863128662
    3. ' to' → logprob: -4.084519863128662
    4. '<|end|>' → logprob: -4.959519863128662
    5. ' a' → logprob: -5.459519863128662
    6. 'à' → logprob: -6.084519863128662
    7. 'au' → logprob: -6.459519863128662
    8. '  ' → logprob: -6.959519863128662
    9. '   ' → logprob: -7.084519863128662
    10. ' ' → logprob: -7.459519863128662

Token 272: '   ' (ID: 271)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.058926258236169815
    2. '   ' → logprob: -3.3089263439178467
    3. ' au' → logprob: -4.808926105499268
    4. ' to' → logprob: -4.933926105499268
    5. 'à' → logprob: -6.433926105499268
    6. ' a' → logprob: -6.933926105499268
    7. ' ' → logprob: -7.308926105499268
    8. '    ' → logprob: -7.308926105499268
    9. '  ' → logprob: -7.308926105499268
    10. 'au' → logprob: -7.808926105499268

Token 273: ' #' (ID: 1069)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6012436747550964
    2. ' to' → logprob: -0.9762436747550964
    3. '<|end|>' → logprob: -2.976243734359741
    4. 'to' → logprob: -4.976243495941162
    5. ' au' → logprob: -5.226243495941162
    6. 'à' → logprob: -5.851243495941162
    7. '  ' → logprob: -5.976243495941162
    8. '   ' → logprob: -6.226243495941162
    9. ' a' → logprob: -6.476243495941162
    10. ' ' → logprob: -6.976243495941162

Token 274: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.5823708772659302
    2. ' à' → logprob: -1.4573708772659302
    3. 'au' → logprob: -2.0823707580566406
    4. 'à' → logprob: -2.5823707580566406
    5. ' to' → logprob: -5.332370758056641
    6. 'to' → logprob: -7.082370758056641
    7. '<|end|>' → logprob: -7.082370758056641
    8. '   ' → logprob: -7.457370758056641
    9. '  ' → logprob: -8.45737075805664
    10. ' a' → logprob: -8.45737075805664

Token 275: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5967273712158203
    2. ' plus' → logprob: -1.4717273712158203
    3. 'plus' → logprob: -1.5967273712158203
    4. ' min' → logprob: -4.84672737121582
    5. 'minimum' → logprob: -4.84672737121582
    6. ' minimum' → logprob: -7.09672737121582
    7. 'prem' → logprob: -7.59672737121582
    8. 'multiple' → logprob: -10.09672737121582
    9. 'mini' → logprob: -10.34672737121582
    10. 'moins' → logprob: -10.59672737121582

Token 276: ' petit' (ID: 20577)
  Prédit: ' petit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.63338303565979
    2. 'pet' → logprob: -0.75838303565979
    3. 'prem' → logprob: -8.508382797241211
    4. '   ' → logprob: -8.633382797241211
    5. '```' → logprob: -8.633382797241211
    6. ' petite' → logprob: -9.883382797241211
    7. 'small' → logprob: -10.008382797241211
    8. ' small' → logprob: -10.633382797241211
    9. '_' → logprob: -10.758382797241211
    10. ' pet' → logprob: -10.758382797241211

Token 277: ' entier' (ID: 80473)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.25856509804725647
    2. ' élément' → logprob: -2.2585651874542236
    3. '_' → logprob: -3.2585651874542236
    4. '_multiple' → logprob: -3.2585651874542236
    5. 'élé' → logprob: -3.8835651874542236
    6. 'multiple' → logprob: -3.8835651874542236
    7. ' element' → logprob: -6.6335649490356445
    8. ' ' → logprob: -7.6335649490356445
    9. 'multip' → logprob: -7.6335649490356445
    10. ' múlt' → logprob: -7.7585649490356445

Token 278: ' qui' (ID: 2780)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.20006197690963745
    2. 'multiple' → logprob: -3.2000620365142822
    3. '_multiple' → logprob: -3.3250620365142822
    4. ' divisible' → logprob: -3.8250620365142822
    5. 'multip' → logprob: -3.9500620365142822
    6. '   ' → logprob: -4.075061798095703
    7. ' ' → logprob: -4.450061798095703
    8. ' multip' → logprob: -4.825061798095703
    9. ' common' → logprob: -5.075061798095703
    10. ' commun' → logprob: -5.700061798095703

Token 279: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3897010385990143
    2. ' est' → logprob: -1.139701008796692
    3. ' ' → logprob: -6.764700889587402
    4. ' soit' → logprob: -7.139700889587402
    5. 's' → logprob: -7.639700889587402
    6. 'so' → logprob: -9.764700889587402
    7. 'multip' → logprob: -10.014700889587402
    8. 'n' → logprob: -10.139700889587402
    9. ' n' → logprob: -10.389700889587402
    10. ' is' → logprob: -10.389700889587402

Token 280: ' divisible' (ID: 167813)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.3757604658603668
    2. 'multiple' → logprob: -1.3757604360580444
    3. ' divisible' → logprob: -3.125760555267334
    4. 'multip' → logprob: -4.750760555267334
    5. ' un' → logprob: -5.625760555267334
    6. ' commun' → logprob: -7.000760555267334
    7. '_multiple' → logprob: -7.250760555267334
    8. ' ' → logprob: -7.500760555267334
    9. 'div' → logprob: -7.875760555267334
    10. ' common' → logprob: -8.125760078430176

Token 281: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.128189817070961
    2. 'par' → logprob: -2.3781898021698
    3. ' ' → logprob: -3.6281898021698
    4. '<|end|>' → logprob: -7.878190040588379
    5. '   ' → logprob: -8.628190040588379
    6. ' by' → logprob: -9.128190040588379
    7. '	par' → logprob: -9.128190040588379
    8. '  ' → logprob: -9.378190040588379
    9. ' à' → logprob: -10.253190040588379
    10. 'by' → logprob: -10.753190040588379

Token 282: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.05308769270777702
    2. 'x' → logprob: -3.0530877113342285
    3. ' both' → logprob: -6.3030877113342285
    4. ' ' → logprob: -6.5530877113342285
    5. ' ' → logprob: -6.8030877113342285
    6. ' les' → logprob: -9.80308723449707
    7. 'both' → logprob: -9.92808723449707
    8. 'l' → logprob: -12.05308723449707
    9. '(x' → logprob: -12.92808723449707
    10. 'les' → logprob: -13.30308723449707

Token 283: ' ET' (ID: 23345)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.3187263011932373
    2. ' ' → logprob: -2.0687263011932373
    3. ' and' → logprob: -2.6937263011932373
    4. '   ' → logprob: -2.8187263011932373
    5. 'et' → logprob: -5.193726539611816
    6. '  ' → logprob: -5.318726539611816
    7. ',' → logprob: -6.068726539611816
    8. 'and' → logprob: -6.443726539611816
    9. '    ' → logprob: -6.693726539611816
    10. ' (' → logprob: -7.318726539611816

Token 284: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.004086947068572044
    2. 'y' → logprob: -5.504086971282959
    3. ' ' → logprob: -12.5040864944458
    4. ' ' → logprob: -12.8790864944458
    5. ' par' → logprob: -13.3790864944458
    6. '	y' → logprob: -15.2540864944458
    7. ' by' → logprob: -16.004087448120117
    8. '   ' → logprob: -16.504087448120117
    9. 'par' → logprob: -16.504087448120117
    10. '(y' → logprob: -17.629087448120117

Token 285: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09855898469686508
    2. '
' → logprob: -2.7235589027404785
    3. 'return' → logprob: -4.2235589027404785
    4. ' return' → logprob: -4.7235589027404785
    5. '    
' → logprob: -5.5985589027404785
    6. '.' → logprob: -7.9735589027404785
    7. ')' → logprob: -8.473559379577637
    8. '	return' → logprob: -9.223559379577637
    9. '  
' → logprob: -9.348559379577637
    10. '\n' → logprob: -9.848559379577637

Token 286: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31322187185287476
    2. ' l' → logprob: -2.5632219314575195
    3. 'x' → logprob: -3.6882219314575195
    4. 'la' → logprob: -3.8132219314575195
    5. ' la' → logprob: -4.0632219314575195
    6. 'part' → logprob: -4.4382219314575195
    7. '1' → logprob: -4.5632219314575195
    8. ' ' → logprob: -4.5632219314575195
    9. 'space' → logprob: -4.8132219314575195
    10. ' partir' → logprob: -4.8132219314575195

Token 287: ' fois' (ID: 14697)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3060742616653442
    2. '   ' → logprob: -1.4310742616653442
    3. '+' → logprob: -1.8060742616653442
    4. 'return' → logprob: -3.0560741424560547
    5. ' fois' → logprob: -3.9310741424560547
    6. ' return' → logprob: -4.056074142456055
    7. 'plus' → logprob: -4.306074142456055
    8. 'x' → logprob: -4.306074142456055
    9. '  ' → logprob: -4.556074142456055
    10. 'def' → logprob: -4.556074142456055

Token 288: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014545167796313763
    2. '    
' → logprob: -4.51454496383667
    3. '
' → logprob: -6.76454496383667
    4. 'return' → logprob: -6.76454496383667
    5. '  
' → logprob: -7.63954496383667
    6. '\n' → logprob: -8.389545440673828
    7. '   
' → logprob: -8.514545440673828
    8. ' return' → logprob: -9.014545440673828
    9. ')' → logprob: -10.514545440673828
    10. ' 
' → logprob: -10.764545440673828

Token 289: 'P' (ID: 47)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013277526944875717
    2. ').' → logprob: -4.888277530670166
    3. ' )' → logprob: -5.513277530670166
    4. '   ' → logprob: -6.763277530670166
    5. '):' → logprob: -9.763277053833008
    6. 'def' → logprob: -10.013277053833008
    7. '),' → logprob: -10.013277053833008
    8. ' ' → logprob: -10.263277053833008
    9. '")' → logprob: -10.263277053833008
    10. ')
' → logprob: -10.513277053833008

Token 290: 'PCM' (ID: 161754)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.2142225205898285
    2. 'r' → logprob: -2.0892224311828613
    3. 'lus' → logprob: -3.7142224311828613
    4. 'l' → logprob: -3.9642224311828613
    5. 'prem' → logprob: -4.089222431182861
    6. '   ' → logprob: -6.089222431182861
    7. ')' → logprob: -6.964222431182861
    8. ' premier' → logprob: -7.089222431182861
    9. 'm' → logprob: -7.339222431182861
    10. 'L' → logprob: -8.08922290802002

Token 291: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013345632702112198
    2. ').' → logprob: -4.513345718383789
    3. '   ' → logprob: -6.638345718383789
    4. ' )' → logprob: -7.388345718383789
    5. ')
' → logprob: -8.513345718383789
    6. '):' → logprob: -10.638345718383789
    7. ' ' → logprob: -11.138345718383789
    8. '  ' → logprob: -11.263345718383789
    9. 'def' → logprob: -11.388345718383789
    10. '))' → logprob: -11.513345718383789

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03897244855761528
    2. 'return' → logprob: -3.4139723777770996
    3. ' return' → logprob: -5.2889723777771
    4. '
' → logprob: -8.788972854614258
    5. '    
' → logprob: -9.163972854614258
    6. '    ' → logprob: -12.663972854614258
    7. '	return' → logprob: -12.913972854614258
    8. '  ' → logprob: -14.288972854614258
    9. '   
' → logprob: -14.413972854614258
    10. ' 
' → logprob: -14.663972854614258

Token 293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39478814601898193
    2. '   ' → logprob: -1.644788146018982
    3. ' return' → logprob: -2.0197882652282715
    4. 'min' → logprob: -8.394787788391113
    5. ' min' → logprob: -8.644787788391113
    6. '
' → logprob: -11.394787788391113
    7. '  ' → logprob: -11.644787788391113
    8. '    
' → logprob: -11.769787788391113
    9. ' ' → logprob: -12.644787788391113
    10. '    ' → logprob: -13.019787788391113

Token 294: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12692831456661224
    2. 'min' → logprob: -2.1269283294677734
    3. '(min' → logprob: -15.876928329467773
    4. '	min' → logprob: -17.001928329467773
    5. '   ' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.626928329467773
    7. ' ' → logprob: -19.876928329467773
    8. ' minimum' → logprob: -20.001928329467773
    9. '[min' → logprob: -20.001928329467773
    10. ',min' → logprob: -20.126928329467773

Token 295: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.011057134717702866
    2. '(' → logprob: -4.511056900024414
    3. ' (' → logprob: -11.886056900024414
    4. '(
' → logprob: -13.636056900024414
    5. 'set' → logprob: -14.011056900024414
    6. '(

' → logprob: -15.386056900024414
    7. ')set' → logprob: -16.636056900024414
    8. '(s' → logprob: -16.886056900024414
    9. '(Set' → logprob: -17.511056900024414
    10. '=set' → logprob: -17.761056900024414

Token 296: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. ')' → logprob: -19.25
    4. ' ' → logprob: -19.375
    5. '1' → logprob: -20.0
    6. '(' → logprob: -20.0
    7. '۳' → logprob: -20.0
    8. '৩' → logprob: -20.625
    9. '٣' → logprob: -20.625
    10. '(set' → logprob: -21.25

Token 297: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -16.625001907348633
    4. '}' → logprob: -18.000001907348633
    5. '()' → logprob: -18.375001907348633
    6. '))' → logprob: -19.125001907348633
    7. ')`' → logprob: -19.125001907348633
    8. ']' → logprob: -19.375001907348633
    9. '')' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.375001907348633

Token 298: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' On' (ID: 2160)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 300: ' lit' (ID: 11980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04688054323196411
    2. '=' → logprob: -3.5468804836273193
    3. '()' → logprob: -4.796880722045898
    4. '_' → logprob: -5.921880722045898
    5. '(' → logprob: -6.671880722045898
    6. 'def' → logprob: -6.921880722045898
    7. '#' → logprob: -7.546880722045898
    8. ' ' → logprob: -7.921880722045898
    9. ',' → logprob: -8.046880722045898
    10. ' (' → logprob: -8.296880722045898

Token 301: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3565162420272827
    2. '()' → logprob: -1.4815162420272827
    3. ' (' → logprob: -3.3565163612365723
    4. 'a' → logprob: -4.731516361236572
    5. ' ()' → logprob: -4.731516361236572
    6. 'n' → logprob: -5.606516361236572
    7. ' ' → logprob: -5.731516361236572
    8. 'x' → logprob: -6.106516361236572
    9. 'number' → logprob: -6.356516361236572
    10. 'input' → logprob: -6.606516361236572

Token 302: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016327254474163055
    2. ' ligne' → logprob: -5.016327381134033
    3. 'entrée' → logprob: -5.891327381134033
    4. ' valeur' → logprob: -6.266327381134033
    5. ' entrée' → logprob: -6.891327381134033
    6. ' input' → logprob: -7.141327381134033
    7. ' =' → logprob: -7.391327381134033
    8. 'ligne' → logprob: -8.016326904296875
    9. '_' → logprob: -8.141326904296875
    10. ' chaîne' → logprob: -8.266326904296875

Token 303: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006847626995295286
    2. '(' → logprob: -5.756847858428955
    3. '()
' → logprob: -6.381847858428955
    4. 'input' → logprob: -7.131847858428955
    5. 'user' → logprob: -8.131847381591797
    6. 's' → logprob: -9.006847381591797
    7. '()\' → logprob: -9.006847381591797
    8. '=input' → logprob: -9.131847381591797
    9. '_input' → logprob: -9.756847381591797
    10. ' =' → logprob: -9.881847381591797

Token 304: ' l' (ID: 305)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.8109288215637207
    2. ' code' → logprob: -0.8109288215637207
    3. 'input' → logprob: -2.8109288215637207
    4. ' input' → logprob: -3.1859288215637207
    5. 'entrée' → logprob: -5.310928821563721
    6. 'texte' → logprob: -6.560928821563721
    7. 'stdin' → logprob: -6.560928821563721
    8. 'l' → logprob: -7.810928821563721
    9. 's' → logprob: -8.435928344726562
    10. '_code' → logprob: -8.685928344726562

Token 305: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.10474466532468796
    2. 'entrée' → logprob: -2.6047446727752686
    3. 'input' → logprob: -3.9797446727752686
    4. ''utilisateur' → logprob: -5.7297444343566895
    5. ''' → logprob: -6.1047444343566895
    6. 'e' → logprob: -7.9797444343566895
    7. ''ent' → logprob: -8.854744911193848
    8. 'stdin' → logprob: -8.979744911193848
    9. 'a' → logprob: -9.104744911193848
    10. '#' → logprob: -9.229744911193848

Token 306: ' standard' (ID: 7024)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6224490404129028
    2. '()' → logprob: -1.1224490404129028
    3. 'user' → logprob: -2.4974489212036133
    4. '=input' → logprob: -4.122448921203613
    5. ' =' → logprob: -4.497448921203613
    6. '(input' → logprob: -4.497448921203613
    7. 's' → logprob: -5.997448921203613
    8. 'line' → logprob: -5.997448921203613
    9. '()
' → logprob: -6.122448921203613
    10. '(' → logprob: -6.372448921203613

Token 307: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7995165586471558
    2. 'user' → logprob: -0.9245165586471558
    3. 'line' → logprob: -3.0495166778564453
    4. '()' → logprob: -3.7995166778564453
    5. 'ligne' → logprob: -3.7995166778564453
    6. ' =' → logprob: -4.299516677856445
    7. 's' → logprob: -4.549516677856445
    8. '=input' → logprob: -4.799516677856445
    9. '(input' → logprob: -5.174516677856445
    10. 'n' → logprob: -5.299516677856445

Token 308: 'input' (ID: 2586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006214152672328055
    2. ' )' → logprob: -7.750621318817139
    3. '()' → logprob: -9.250621795654297
    4. ')
' → logprob: -9.750621795654297
    5. '())' → logprob: -11.125621795654297
    6. 'input' → logprob: -12.000621795654297
    7. ' ' → logprob: -12.125621795654297
    8. '
' → logprob: -12.750621795654297
    9. '")' → logprob: -13.250621795654297
    10. ')

' → logprob: -13.875621795654297

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7215113639831543
    2. '()' → logprob: -1.0965113639831543
    3. '())' → logprob: -1.7215113639831543
    4. '())
' → logprob: -7.471511363983154
    5. '()
' → logprob: -8.221511840820312
    6. ')
' → logprob: -8.471511840820312
    7. ' )' → logprob: -10.346511840820312
    8. '(' → logprob: -10.596511840820312
    9. '())

' → logprob: -11.971511840820312
    10. '()

' → logprob: -12.221511840820312

Token 310: ' contenant' (ID: 131049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3608643412590027
    2. 'user' → logprob: -1.4858644008636475
    3. 'input' → logprob: -2.9858644008636475
    4. '(' → logprob: -5.360864162445068
    5. 's' → logprob: -5.485864162445068
    6. 'line' → logprob: -5.735864162445068
    7. 'n' → logprob: -5.735864162445068
    8. ' =' → logprob: -6.610864162445068
    9. 'ligne' → logprob: -6.610864162445068
    10. ')' → logprob: -6.985864162445068

Token 311: ' des' (ID: 731)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.06646350771188736
    2. 'de' → logprob: -3.6914634704589844
    3. ' two' → logprob: -3.9414634704589844
    4. ' ' → logprob: -4.441463470458984
    5. ' les' → logprob: -6.316463470458984
    6. 'x' → logprob: -6.691463470458984
    7. ' une' → logprob: -6.691463470458984
    8. '2' → logprob: -7.316463470458984
    9. 'two' → logprob: -7.316463470458984
    10. ' x' → logprob: -7.441463470458984

Token 312: ' valeurs' (ID: 73668)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7527455687522888
    2. 'ent' → logprob: -1.8777456283569336
    3. ' deux' → logprob: -2.1277456283569336
    4. ' ent' → logprob: -2.2527456283569336
    5. ' nombres' → logprob: -2.3777456283569336
    6. 'x' → logprob: -3.6277456283569336
    7. ' valeurs' → logprob: -4.502745628356934
    8. ' x' → logprob: -4.627745628356934
    9. 'val' → logprob: -5.127745628356934
    10. ' two' → logprob: -6.877745628356934

Token 313: ' sépar' (ID: 97160)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1568993479013443
    2. '()' → logprob: -2.6568994522094727
    3. '=' → logprob: -3.2818994522094727
    4. ' ' → logprob: -4.281899452209473
    5. 's' → logprob: -4.281899452209473
    6. '(' → logprob: -6.406899452209473
    7. '=input' → logprob: -6.531899452209473
    8. '(x' → logprob: -7.156899452209473
    9. ' x' → logprob: -7.531899452209473
    10. 'n' → logprob: -7.781899452209473

Token 314: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008251429535448551
    2. ' par' → logprob: -5.508251667022705
    3. 'é' → logprob: -6.133251667022705
    4. 'és' → logprob: -7.008251667022705
    5. 'par' → logprob: -7.633251667022705
    6. 'es' → logprob: -8.133251190185547
    7. 'ée' → logprob: -8.383251190185547
    8. 'ees' → logprob: -10.633251190185547
    9. 'e' → logprob: -10.883251190185547
    10. ' by' → logprob: -11.133251190185547

Token 315: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.03814740478992462
    2. 'par' → logprob: -3.288147449493408
    3. 'by' → logprob: -10.66314697265625
    4. '_par' → logprob: -11.03814697265625
    5. ' ' → logprob: -11.16314697265625
    6. ' by' → logprob: -11.41314697265625
    7. '  ' → logprob: -12.16314697265625
    8. '	par' → logprob: -12.16314697265625
    9. 'es' → logprob: -12.28814697265625
    10. '<|end|>' → logprob: -12.41314697265625

Token 316: ' un' (ID: 537)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.1576071977615356
    2. ' des' → logprob: -1.2826071977615356
    3. ''' → logprob: -2.032607078552246
    4. 'un' → logprob: -2.157607078552246
    5. ''un' → logprob: -3.157607078552246
    6. ''espace' → logprob: -3.407607078552246
    7. ' un' → logprob: -3.907607078552246
    8. '"' → logprob: -4.282607078552246
    9. 'es' → logprob: -4.532607078552246
    10. 'esp' → logprob: -4.532607078552246

Token 317: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.776576042175293
    2. 'es' → logprob: -1.026576042175293
    3. ''espace' → logprob: -1.901576042175293
    4. 'space' → logprob: -4.276576042175293
    5. 'esp' → logprob: -4.776576042175293
    6. ' espaces' → logprob: -5.276576042175293
    7. '’espace' → logprob: -6.026576042175293
    8. ''esp' → logprob: -6.401576042175293
    9. ' space' → logprob: -8.151576042175293
    10. 'spaces' → logprob: -8.901576042175293

Token 318: '.
' (ID: 558)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5711418986320496
    2. 's' → logprob: -2.0711419582366943
    3. 'user' → logprob: -2.1961419582366943
    4. 'val' → logprob: -3.1961419582366943
    5. 'line' → logprob: -3.5711419582366943
    6. 'input' → logprob: -3.6961419582366943
    7. 'a' → logprob: -3.8211419582366943
    8. 'n' → logprob: -3.8211419582366943
    9. 'ligne' → logprob: -4.321141719818115
    10. ' line' → logprob: -4.446141719818115

Token 319: '#' (ID: 2)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.35028761625289917
    2. 'a' → logprob: -1.600287675857544
    3. 'val' → logprob: -3.975287675857544
    4. 'x' → logprob: -4.100287437438965
    5. ' values' → logprob: -4.225287437438965
    6. 'line' → logprob: -4.725287437438965
    7. 'input' → logprob: -4.850287437438965
    8. ' line' → logprob: -5.225287437438965
    9. 'inputs' → logprob: -5.225287437438965
    10. 'numbers' → logprob: -5.225287437438965

Token 320: ' Par' (ID: 3371)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1523669958114624
    2. 'values' → logprob: -1.1523669958114624
    3. 'x' → logprob: -2.277367115020752
    4. ' line' → logprob: -2.902367115020752
    5. ' values' → logprob: -3.027367115020752
    6. 'val' → logprob: -3.152367115020752
    7. 'input' → logprob: -3.777367115020752
    8. ' a' → logprob: -4.152367115020752
    9. 'line' → logprob: -4.152367115020752
    10. 'inputs' → logprob: -4.277367115020752

Token 321: ' exemple' (ID: 26320)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.95296311378479
    2. ' exemple' → logprob: -2.20296311378479
    3. 'a' → logprob: -2.32796311378479
    4. '#' → logprob: -2.70296311378479
    5. 'es' → logprob: -3.07796311378479
    6. ' la' → logprob: -3.07796311378479
    7. 's' → logprob: -3.32796311378479
    8. 'x' → logprob: -3.57796311378479
    9. '=' → logprob: -3.82796311378479
    10. '_' → logprob: -3.82796311378479

Token 322: ' :' (ID: 712)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.315116286277771
    2. ' a' → logprob: -1.440116286277771
    3. 'values' → logprob: -2.0651164054870605
    4. ' values' → logprob: -2.3151164054870605
    5. 'val' → logprob: -2.6901164054870605
    6. ' valeurs' → logprob: -2.8151164054870605
    7. 'x' → logprob: -3.6901164054870605
    8. ' x' → logprob: -3.6901164054870605
    9. 'n' → logprob: -3.8151164054870605
    10. ' val' → logprob: -3.8151164054870605

Token 323: ' "' (ID: 392)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37634560465812683
    2. 'x' → logprob: -2.251345634460449
    3. 'values' → logprob: -2.751345634460449
    4. ' a' → logprob: -3.126345634460449
    5. 'val' → logprob: -3.126345634460449
    6. ' values' → logprob: -4.376345634460449
    7. ' line' → logprob: -4.751345634460449
    8. ' x' → logprob: -4.876345634460449
    9. 'n' → logprob: -5.376345634460449
    10. 'input' → logprob: -5.501345634460449

Token 324: '3' (ID: 18)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.04360375553369522
    2. '6' → logprob: -4.168603897094727
    3. '4' → logprob: -4.293603897094727
    4. '2' → logprob: -5.293603897094727
    5. '8' → logprob: -5.918603897094727
    6. '3' → logprob: -6.543603897094727
    7. '15' → logprob: -6.668603897094727
    8. '10' → logprob: -6.918603897094727
    9. '24' → logprob: -7.043603897094727
    10. '5' → logprob: -7.418603897094727

Token 325: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0003222342347726226
    2. '4' → logprob: -8.125322341918945
    3. ' "' → logprob: -12.250322341918945
    4. '2' → logprob: -12.625322341918945
    5. '7' → logprob: -12.625322341918945
    6. '  ' → logprob: -13.000322341918945
    7. '5' → logprob: -13.000322341918945
    8. ' ,' → logprob: -13.125322341918945
    9. ' )' → logprob: -13.375322341918945
    10. '<|end|>' → logprob: -13.500322341918945

Token 326: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6723456978797913
    2. '5' → logprob: -0.7973456978797913
    3. '7' → logprob: -3.9223456382751465
    4. '6' → logprob: -4.1723456382751465
    5. ' ' → logprob: -6.0473456382751465
    6. '12' → logprob: -7.6723456382751465
    7. '8' → logprob: -7.9223456382751465
    8. '10' → logprob: -8.172346115112305
    9. '9' → logprob: -9.172346115112305
    10. '15' → logprob: -9.422346115112305

Token 327: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.46181681752204895
    2. '")' → logprob: -1.4618167877197266
    3. '"
' → logprob: -2.2118167877197266
    4. '\n' → logprob: -4.086816787719727
    5. '")
' → logprob: -5.336816787719727
    6. 'x' → logprob: -6.461816787719727
    7. '").' → logprob: -6.711816787719727
    8. '".' → logprob: -6.836816787719727
    9. '"
' → logprob: -7.336816787719727
    10. '3' → logprob: -7.586816787719727

Token 328: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0181207656860352
    2. 'values' → logprob: -1.3931207656860352
    3. 'x' → logprob: -1.6431207656860352
    4. 'input' → logprob: -2.268120765686035
    5. 'inputs' → logprob: -3.893120765686035
    6. 'line' → logprob: -4.268120765686035
    7. 'val' → logprob: -4.518120765686035
    8. 'numbers' → logprob: -4.643120765686035
    9. ' values' → logprob: -5.018120765686035
    10. 'user' → logprob: -5.143120765686035

Token 329: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6191005110740662
    2. 'values' → logprob: -1.119100570678711
    3. 'x' → logprob: -2.619100570678711
    4. 'val' → logprob: -3.994100570678711
    5. 'input' → logprob: -4.119100570678711
    6. 'line' → logprob: -5.119100570678711
    7. 'inputs' → logprob: -5.244100570678711
    8. 'vals' → logprob: -5.619100570678711
    9. 'nums' → logprob: -5.994100570678711
    10. 'n' → logprob: -6.119100570678711

Token 330: ' méthode' (ID: 71490)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47793707251548767
    2. ' x' → logprob: -2.4779369831085205
    3. 'val' → logprob: -2.4779369831085205
    4. 'values' → logprob: -2.6029369831085205
    5. 'a' → logprob: -3.2279369831085205
    6. 'vals' → logprob: -3.9779369831085205
    7. ' line' → logprob: -4.1029372215271
    8. ' values' → logprob: -4.2279372215271
    9. 'line' → logprob: -4.8529372215271
    10. ' vals' → logprob: -4.8529372215271

Token 331: ' split' (ID: 12648)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7472956776618958
    2. 'split' → logprob: -0.7472956776618958
    3. ' input' → logprob: -3.872295618057251
    4. '=input' → logprob: -4.49729585647583
    5. ' =' → logprob: -4.99729585647583
    6. 'values' → logprob: -5.12229585647583
    7. ' split' → logprob: -5.12229585647583
    8. 's' → logprob: -7.37229585647583
    9. '=' → logprob: -7.87229585647583
    10. 'spl' → logprob: -8.497295379638672

Token 332: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.15310683415737e-05
    2. '('' → logprob: -11.875021934509277
    3. ' ()' → logprob: -12.000021934509277
    4. '(' → logprob: -12.750021934509277
    5. '("' → logprob: -13.250021934509277
    6. '()]' → logprob: -13.875021934509277
    7. '().' → logprob: -14.250021934509277
    8. '（）' → logprob: -14.250021934509277
    9. '("")' → logprob: -15.125021934509277
    10. '()

' → logprob: -15.375021934509277

Token 333: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011489099124446511
    2. 'split' → logprob: -7.626148700714111
    3. '().' → logprob: -7.751148700714111
    4. 'spl' → logprob: -9.62614917755127
    5. '.split' → logprob: -10.00114917755127
    6. 'input' → logprob: -11.00114917755127
    7. ' ()' → logprob: -11.00114917755127
    8. 's' → logprob: -11.62614917755127
    9. '()[' → logprob: -11.75114917755127
    10. 'def' → logprob: -11.87614917755127

Token 334: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -2.868328920158092e-05
    2. 'p' → logprob: -11.375028610229492
    3. 'par' → logprob: -12.000028610229492
    4. 'parer' → logprob: -13.000028610229492
    5. 'part' → logprob: -13.125028610229492
    6. 'parent' → logprob: -13.250028610229492
    7. '_p' → logprob: -13.250028610229492
    8. 'paration' → logprob: -14.375028610229492
    9. 'para' → logprob: -14.875028610229492
    10. 'pa' → logprob: -14.875028610229492

Token 335: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007395883440040052
    2. '('' → logprob: -8.125740051269531
    3. 'input' → logprob: -9.000740051269531
    4. 'l' → logprob: -9.625740051269531
    5. 'les' → logprob: -9.750740051269531
    6. ' la' → logprob: -9.875740051269531
    7. 'la' → logprob: -10.125740051269531
    8. 'line' → logprob: -11.125740051269531
    9. ' ()' → logprob: -11.375740051269531
    10. '("' → logprob: -11.375740051269531

Token 336: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.14710359275341034
    2. ' chaîne' → logprob: -3.3971035480499268
    3. 'string' → logprob: -3.5221035480499268
    4. 'input' → logprob: -3.7721035480499268
    5. 'ligne' → logprob: -3.8971035480499268
    6. 'cha' → logprob: -4.397103786468506
    7. ' chaine' → logprob: -5.147103786468506
    8. 'entrée' → logprob: -5.522103786468506
    9. 'chain' → logprob: -5.897103786468506
    10. ' string' → logprob: -6.272103786468506

Token 337: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001968649885384366
    2. 'input' → logprob: -10.00019645690918
    3. '[]' → logprob: -10.25019645690918
    4. '('' → logprob: -10.25019645690918
    5. '()

' → logprob: -11.37519645690918
    6. '()[' → logprob: -11.50019645690918
    7. '()
' → logprob: -11.62519645690918
    8. ' ()' → logprob: -12.00019645690918
    9. ')' → logprob: -12.25019645690918
    10. '[' → logprob: -12.37519645690918

Token 338: ' liste' (ID: 31719)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.172240972518921
    2. ''' → logprob: -2.172240972518921
    3. ' tokens' → logprob: -2.172240972518921
    4. ' une' → logprob: -2.422240972518921
    5. '['' → logprob: -2.797240972518921
    6. '[]' → logprob: -3.047240972518921
    7. ' espaces' → logprob: -3.172240972518921
    8. 'liste' → logprob: -3.547240972518921
    9. 'input' → logprob: -4.0472412109375
    10. ' liste' → logprob: -4.0472412109375

Token 339: ' ["' (ID: 9129)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006038646679371595
    2. '[' → logprob: -6.881038665771484
    3. '('' → logprob: -7.006038665771484
    4. '()
' → logprob: -7.006038665771484
    5. ' des' → logprob: -7.631038665771484
    6. 's' → logprob: -8.131038665771484
    7. ' ()' → logprob: -8.131038665771484
    8. 'user' → logprob: -8.131038665771484
    9. '['' → logprob: -8.631038665771484
    10. '[]' → logprob: -8.756038665771484

Token 340: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. '"' → logprob: -14.75
    3. 'input' → logprob: -17.25
    4. ' ' → logprob: -18.375
    5. ''' → logprob: -19.375
    6. '```' → logprob: -20.125
    7. '"""' → logprob: -20.5
    8. '4' → logprob: -21.125
    9. '"]' → logprob: -21.125
    10. 'x' → logprob: -21.25

Token 341: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.16492900252342224
    2. '","' → logprob: -2.414928913116455
    3. '3' → logprob: -2.789928913116455
    4. ',' → logprob: -7.539928913116455
    5. '4' → logprob: -8.164929389953613
    6. '"' → logprob: -8.664929389953613
    7. ' ",' → logprob: -8.664929389953613
    8. ' ' → logprob: -10.414929389953613
    9. ',"' → logprob: -10.664929389953613
    10. ' ","' → logprob: -10.789929389953613

Token 342: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004387750814203173
    2. '3' → logprob: -8.250438690185547
    3. ' "' → logprob: -9.125438690185547
    4. '4' → logprob: -9.625438690185547
    5. ' ' → logprob: -13.000438690185547
    6. ''' → logprob: -15.875438690185547
    7. '"""' → logprob: -16.875438690185547
    8. '","' → logprob: -17.000438690185547
    9. '",' → logprob: -17.125438690185547
    10. '   ' → logprob: -17.250438690185547

Token 343: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. '"' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '"]' → logprob: -16.75
    5. '","' → logprob: -17.5
    6. '",' → logprob: -18.125
    7. '3' → logprob: -18.875
    8. '2' → logprob: -20.375
    9. ' "' → logprob: -20.875
    10. '"],' → logprob: -21.25

Token 344: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0008340472122654319
    2. ']' → logprob: -7.125833988189697
    3. '']' → logprob: -11.375834465026855
    4. '"]
' → logprob: -11.625834465026855
    5. '#' → logprob: -13.250834465026855
    6. '"].' → logprob: -13.250834465026855
    7. '"]
' → logprob: -13.375834465026855
    8. ' "]' → logprob: -13.625834465026855
    9. '"]

' → logprob: -14.250834465026855
    10. '"' → logprob: -14.875834465026855

Token 345: '.
' (ID: 558)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.9107339978218079
    2. '
' → logprob: -1.785733938217163
    3. 'numbers' → logprob: -1.785733938217163
    4. 'val' → logprob: -2.535733938217163
    5. 'nums' → logprob: -3.035733938217163
    6. 'x' → logprob: -3.535733938217163
    7. 'user' → logprob: -4.035734176635742
    8. 'inputs' → logprob: -4.160734176635742
    9. 'line' → logprob: -4.285734176635742
    10. 'input' → logprob: -4.410734176635742

Token 346: '#' (ID: 2)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.37011173367500305
    2. 'input' → logprob: -2.4951117038726807
    3. 'inputs' → logprob: -3.1201117038726807
    4. 'numbers' → logprob: -3.2451117038726807
    5. 'val' → logprob: -3.3701117038726807
    6. 'x' → logprob: -3.8701117038726807
    7. 'vals' → logprob: -3.9951117038726807
    8. 'a' → logprob: -4.49511194229126
    9. 'nums' → logprob: -4.49511194229126
    10. ' values' → logprob: -4.74511194229126

Token 347: ' La' (ID: 3038)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.2909199595451355
    2. 'numbers' → logprob: -2.7909200191497803
    3. 'x' → logprob: -3.2909200191497803
    4. 'input' → logprob: -3.5409200191497803
    5. 'nums' → logprob: -3.6659200191497803
    6. 'inputs' → logprob: -3.6659200191497803
    7. 'a' → logprob: -4.290919780731201
    8. '#' → logprob: -4.415919780731201
    9. 'line' → logprob: -4.415919780731201
    10. 'val' → logprob: -4.665919780731201

Token 348: ' fonction' (ID: 17610)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2923319339752197
    2. 'val' → logprob: -2.1673319339752197
    3. '#' → logprob: -2.9173319339752197
    4. 'values' → logprob: -3.2923319339752197
    5. 'a' → logprob: -4.417331695556641
    6. ' x' → logprob: -5.042331695556641
    7. 'vals' → logprob: -5.292331695556641
    8. 'ligne' → logprob: -5.542331695556641
    9. 'line' → logprob: -5.667331695556641
    10. 'input' → logprob: -6.167331695556641

Token 349: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.537136971950531
    2. 'map' → logprob: -1.4121370315551758
    3. ' list' → logprob: -2.287137031555176
    4. 'list' → logprob: -3.287137031555176
    5. ' input' → logprob: -4.037137031555176
    6. 'input' → logprob: -4.287137031555176
    7. ' x' → logprob: -7.412137031555176
    8. 'int' → logprob: -8.037137031555176
    9. 'x' → logprob: -8.537137031555176
    10. ' L' → logprob: -8.912137031555176

Token 350: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.8802491215174086e-05
    2. 'int' → logprob: -10.875028610229492
    3. '(' → logprob: -12.125028610229492
    4. '(lambda' → logprob: -13.250028610229492
    5. '(str' → logprob: -13.750028610229492
    6. '=int' → logprob: -14.500028610229492
    7. '[int' → logprob: -14.500028610229492
    8. '<int' → logprob: -15.125028610229492
    9. ' int' → logprob: -15.875028610229492
    10. '   ' → logprob: -17.625028610229492

Token 351: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7442311644554138
    2. ',' → logprob: -0.7442311644554138
    3. ',input' → logprob: -3.2442312240600586
    4. '(input' → logprob: -5.369231224060059
    5. ',map' → logprob: -6.494231224060059
    6. ',int' → logprob: -6.744231224060059
    7. '   ' → logprob: -6.869231224060059
    8. '(int' → logprob: -7.369231224060059
    9. ' ,' → logprob: -7.369231224060059
    10. 'input' → logprob: -7.994231224060059

Token 352: ' ...)' (ID: 100545)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048644933849573135
    2. ' input' → logprob: -3.04864501953125
    3. ')' → logprob: -10.04864501953125
    4. '(input' → logprob: -11.29864501953125
    5. '<input' → logprob: -14.54864501953125
    6. ' )' → logprob: -15.04864501953125
    7. '...)' → logprob: -15.04864501953125
    8. ' ' → logprob: -15.54864501953125
    9. '   ' → logprob: -16.04864501953125
    10. '=input' → logprob: -16.04864501953125

Token 353: ' applique' (ID: 180579)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.21822574734687805
    2. ' convert' → logprob: -2.4682257175445557
    3. ' transforme' → logprob: -3.3432257175445557
    4. ')' → logprob: -3.5932257175445557
    5. '(convert' → logprob: -4.093225955963135
    6. ' permet' → logprob: -4.468225955963135
    7. 'ap' → logprob: -5.093225955963135
    8. '(map' → logprob: -5.843225955963135
    9. 'map' → logprob: -6.468225955963135
    10. ' converts' → logprob: -6.468225955963135

Token 354: ' la' (ID: 557)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0859498679637909
    2. 'int' → logprob: -2.7109498977661133
    3. '(lambda' → logprob: -4.210949897766113
    4. 'lambda' → logprob: -7.460949897766113
    5. ' int' → logprob: -8.460949897766113
    6. '(' → logprob: -9.085949897766113
    7. '(str' → logprob: -9.835949897766113
    8. '<int' → logprob: -10.460949897766113
    9. '[int' → logprob: -10.585949897766113
    10. '=int' → logprob: -10.835949897766113

Token 355: ' conversion' (ID: 22165)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20741967856884003
    2. 'lambda' → logprob: -1.7074196338653564
    3. ' lambda' → logprob: -5.8324198722839355
    4. 'split' → logprob: -6.2074198722839355
    5. ' int' → logprob: -7.2074198722839355
    6. 'str' → logprob: -8.957419395446777
    7. 'list' → logprob: -9.707419395446777
    8. 'map' → logprob: -9.832419395446777
    9. ' split' → logprob: -10.832419395446777
    10. 'input' → logprob: -11.582419395446777

Token 356: ' en' (ID: 469)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.36101117730140686
    2. 'int' → logprob: -1.7360111474990845
    3. '(str' → logprob: -2.611011266708374
    4. 'str' → logprob: -3.986011266708374
    5. '(lambda' → logprob: -4.361011028289795
    6. '   ' → logprob: -4.611011028289795
    7. 'sur' → logprob: -5.861011028289795
    8. 'lambda' → logprob: -6.236011028289795
    9. '(list' → logprob: -6.611011028289795
    10. 'list' → logprob: -6.986011028289795

Token 357: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09530322253704071
    2. 'str' → logprob: -2.4703032970428467
    3. ' int' → logprob: -5.845303058624268
    4. ' str' → logprob: -6.595303058624268
    5. 'list' → logprob: -6.720303058624268
    6. 'ent' → logprob: -7.970303058624268
    7. '<int' → logprob: -9.345303535461426
    8. 'liste' → logprob: -9.345303535461426
    9. '(int' → logprob: -9.595303535461426
    10. 'inte' → logprob: -10.095303535461426

Token 358: ' à' (ID: 1221)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31594541668891907
    2. ')' → logprob: -1.9409453868865967
    3. '(map' → logprob: -3.4409453868865967
    4. '(' → logprob: -3.4409453868865967
    5. 'input' → logprob: -3.8159453868865967
    6. '(int' → logprob: -5.315945625305176
    7. ',' → logprob: -5.315945625305176
    8. '(lambda' → logprob: -5.315945625305176
    9. ' à' → logprob: -5.815945625305176
    10. 'sur' → logprob: -6.190945625305176

Token 359: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.642399251461029
    2. 'cha' → logprob: -2.142399311065674
    3. 'input' → logprob: -2.267399311065674
    4. ' input' → logprob: -2.642399311065674
    5. 'l' → logprob: -2.892399311065674
    6. ' chacune' → logprob: -3.392399311065674
    7. ' each' → logprob: -3.517399311065674
    8. 'each' → logprob: -3.767399311065674
    9. 'la' → logprob: -4.392399311065674
    10. ' chacun' → logprob: -4.517399311065674

Token 360: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.03152617812156677
    2. 'val' → logprob: -4.2815260887146
    3. 'element' → logprob: -4.4065260887146
    4. ' élément' → logprob: -6.2815260887146
    5. 'input' → logprob: -6.4065260887146
    6. 'part' → logprob: -8.156526565551758
    7. ' element' → logprob: -8.531526565551758
    8. 'elem' → logprob: -8.531526565551758
    9. ')' → logprob: -8.906526565551758
    10. 'item' → logprob: -9.156526565551758

Token 361: ' de' (ID: 334)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6257198452949524
    2. ')' → logprob: -1.1257197856903076
    3. 'input' → logprob: -2.2507197856903076
    4. ',' → logprob: -4.875720024108887
    5. '(inputs' → logprob: -5.250720024108887
    6. '(line' → logprob: -5.750720024108887
    7. '(' → logprob: -6.000720024108887
    8. '   ' → logprob: -6.000720024108887
    9. ',input' → logprob: -6.500720024108887
    10. '(x' → logprob: -6.625720024108887

Token 362: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029844442382454872
    2. ' input' → logprob: -3.5298445224761963
    3. 'l' → logprob: -9.654844284057617
    4. 'split' → logprob: -10.779844284057617
    5. '(input' → logprob: -12.654844284057617
    6. ' l' → logprob: -12.654844284057617
    7. 'la' → logprob: -13.779844284057617
    8. ' la' → logprob: -14.654844284057617
    9. '=input' → logprob: -15.529844284057617
    10. '<input' → logprob: -15.654844284057617

Token 363: ' liste' (ID: 31719)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00464206887409091
    2. ' input' → logprob: -5.379642009735107
    3. '(input' → logprob: -10.879642486572266
    4. 'split' → logprob: -13.504642486572266
    5. '=input' → logprob: -15.004642486572266
    6. 'output' → logprob: -15.129642486572266
    7. '[input' → logprob: -15.254642486572266
    8. '<input' → logprob: -15.379642486572266
    9. '.input' → logprob: -15.754642486572266
    10. 'user' → logprob: -16.629642486572266

Token 364: ',
' (ID: 412)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0473712682724
    2. '(x' → logprob: -1.5473712682724
    3. 'values' → logprob: -2.2973713874816895
    4. 'x' → logprob: -2.6723713874816895
    5. 'inputs' → logprob: -2.7973713874816895
    6. '(input' → logprob: -3.2973713874816895
    7. '(values' → logprob: -3.6723713874816895
    8. ')' → logprob: -3.7973713874816895
    9. '(inputs' → logprob: -4.2973713874816895
    10. 'line' → logprob: -4.4223713874816895

Token 365: '#' (ID: 2)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7869918942451477
    2. ')' → logprob: -1.411991834640503
    3. '   ' → logprob: -2.286991834640503
    4. ' x' → logprob: -2.661991834640503
    5. 'input' → logprob: -3.036991834640503
    6. 'result' → logprob: -3.536991834640503
    7. 'inputs' → logprob: -4.911992073059082
    8. ' input' → logprob: -5.536992073059082
    9. '#' → logprob: -5.536992073059082
    10. 'values' → logprob: -5.911992073059082

Token 366: ' ce' (ID: 2357)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.46665531396865845
    2. 'x' → logprob: -2.8416552543640137
    3. 'result' → logprob: -2.9666552543640137
    4. ' puis' → logprob: -3.2166552543640137
    5. ')' → logprob: -3.3416552543640137
    6. ' input' → logprob: -3.5916552543640137
    7. 'input' → logprob: -3.9666552543640137
    8. ' result' → logprob: -4.091655254364014
    9. ' lst' → logprob: -4.216655254364014
    10. 'inputs' → logprob: -4.591655254364014

Token 367: ' qui' (ID: 2780)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8562371730804443
    2. '#' → logprob: -2.1062371730804443
    3. '   ' → logprob: -2.9812371730804443
    4. 'result' → logprob: -3.1062371730804443
    5. 'x' → logprob: -3.2312371730804443
    6. ' result' → logprob: -3.2312371730804443
    7. 'es' → logprob: -3.2312371730804443
    8. ')' → logprob: -3.2312371730804443
    9. ' x' → logprob: -3.4812371730804443
    10. 'split' → logprob: -3.7312371730804443

Token 368: ' donne' (ID: 30004)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.050066471099853516
    2. ' crée' → logprob: -3.6750664710998535
    3. ' donne' → logprob: -5.1750664710998535
    4. 'per' → logprob: -5.6750664710998535
    5. ' nous' → logprob: -5.8000664710998535
    6. ' est' → logprob: -5.9250664710998535
    7. ' x' → logprob: -6.4250664710998535
    8. 'x' → logprob: -6.5500664710998535
    9. ' rend' → logprob: -7.0500664710998535
    10. ' transforme' → logprob: -7.3000664710998535

Token 369: ' les' (ID: 1341)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17191316187381744
    2. 'x' → logprob: -1.9219131469726562
    3. ' a' → logprob: -5.546913146972656
    4. ' list' → logprob: -5.671913146972656
    5. 'a' → logprob: -6.796913146972656
    6. ' [' → logprob: -7.296913146972656
    7. '[x' → logprob: -7.296913146972656
    8. 'list' → logprob: -7.796913146972656
    9. ' la' → logprob: -7.796913146972656
    10. ' deux' → logprob: -8.296913146972656

Token 370: ' ent' (ID: 1121)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.06470099836587906
    2. 'x' → logprob: -3.8147010803222656
    3. 'ent' → logprob: -4.189701080322266
    4. ' ent' → logprob: -5.064701080322266
    5. ' two' → logprob: -5.064701080322266
    6. ' nombres' → logprob: -5.439701080322266
    7. ' valeurs' → logprob: -5.564701080322266
    8. ' x' → logprob: -6.064701080322266
    9. 'de' → logprob: -6.564701080322266
    10. '2' → logprob: -8.564701080322266

Token 371: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00013166792632546276
    2. 'i' → logprob: -9.000131607055664
    3. 'ier' → logprob: -12.625131607055664
    4. 'ières' → logprob: -12.750131607055664
    5. 'ers' → logprob: -14.750131607055664
    6. 'ires' → logprob: -14.875131607055664
    7. '#' → logprob: -15.125131607055664
    8. ' i' → logprob: -15.500131607055664
    9. '```' → logprob: -15.625131607055664
    10. 'ière' → logprob: -16.750131607055664

Token 372: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.637750506401062
    2. ' x' → logprob: -0.762750506401062
    3. 'a' → logprob: -5.512750625610352
    4. ' a' → logprob: -7.637750625610352
    5. '(x' → logprob: -7.887750625610352
    6. '3' → logprob: -8.762750625610352
    7. ' ' → logprob: -10.637750625610352
    8. 'n' → logprob: -10.887750625610352
    9. '[x' → logprob: -12.012750625610352
    10. ' n' → logprob: -12.262750625610352

Token 373: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014184460742399096
    2. ' ,' → logprob: -7.251418590545654
    3. ',b' → logprob: -8.001418113708496
    4. ' =' → logprob: -8.626418113708496
    5. ')' → logprob: -9.876418113708496
    6. ',a' → logprob: -10.126418113708496
    7. 's' → logprob: -10.251418113708496
    8. 'a' → logprob: -11.001418113708496
    9. 'et' → logprob: -11.376418113708496
    10. ' et' → logprob: -11.626418113708496

Token 374: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931716203689575
    2. ' b' → logprob: -0.6931716203689575
    3. ' ' → logprob: -10.693171501159668
    4. 'y' → logprob: -14.068171501159668
    5. ' y' → logprob: -14.068171501159668
    6. ' ' → logprob: -15.943171501159668
    7. '  ' → logprob: -16.693172454833984
    8. 'a' → logprob: -17.443172454833984
    9. '_b' → logprob: -18.568172454833984
    10. 'x' → logprob: -18.568172454833984

Token 375: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32062411308288574
    2. ' =' → logprob: -1.3206241130828857
    3. '
' → logprob: -5.820624351501465
    4. ' a' → logprob: -6.070624351501465
    5. '=' → logprob: -6.820624351501465
    6. '(a' → logprob: -7.820624351501465
    7. '=a' → logprob: -8.570624351501465
    8. ' 
' → logprob: -9.070624351501465
    9. ' =
' → logprob: -9.570624351501465
    10. '  
' → logprob: -10.195624351501465

Token 376: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00022427814838010818
    2. '
' → logprob: -8.500224113464355
    3. ' a' → logprob: -11.375224113464355
    4. '    
' → logprob: -12.375224113464355
    5. '  
' → logprob: -13.375224113464355
    6. '

' → logprob: -13.750224113464355
    7. ' 
' → logprob: -14.000224113464355
    8. '
' → logprob: -14.625224113464355
    9. '```' → logprob: -15.250224113464355
    10. '   
' → logprob: -16.000225067138672

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.229872087715194e-05
    2. ',b' → logprob: -10.000061988830566
    3. ' ,' → logprob: -11.000061988830566
    4. ',a' → logprob: -16.875062942504883
    5. ',
' → logprob: -17.750062942504883
    6. ',v' → logprob: -17.750062942504883
    7. ',y' → logprob: -18.250062942504883
    8. 'b' → logprob: -18.750062942504883
    9. ',s' → logprob: -18.750062942504883
    10. ',int' → logprob: -18.750062942504883

Token 378: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07890664041042328
    2. 'b' → logprob: -2.578906536102295
    3. ' y' → logprob: -11.453907012939453
    4. ' ' → logprob: -12.328907012939453
    5. 'y' → logprob: -13.953907012939453
    6. ' ' → logprob: -14.203907012939453
    7. 'space' → logprob: -15.703907012939453
    8. ' space' → logprob: -16.453907012939453
    9. ' =' → logprob: -17.453907012939453
    10. '<|end|>' → logprob: -17.578907012939453

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033649154007434845
    2. '=' → logprob: -3.408649206161499
    3. ',' → logprob: -12.908649444580078
    4. '=input' → logprob: -15.033649444580078
    5. ')' → logprob: -15.408649444580078
    6. '<|end|>' → logprob: -15.783649444580078
    7. '=int' → logprob: -16.158649444580078
    8. ' =
' → logprob: -16.408649444580078
    9. ' ' → logprob: -17.283649444580078
    10. ' ' → logprob: -17.408649444580078

Token 380: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0009114635176956654
    2. ' map' → logprob: -7.000911235809326
    3. 'list' → logprob: -17.875911712646484
    4. 'm' → logprob: -18.250911712646484
    5. '	map' → logprob: -18.500911712646484
    6. 'input' → logprob: -20.000911712646484
    7. 'int' → logprob: -20.625911712646484
    8. '(map' → logprob: -21.125911712646484
    9. '[' → logprob: -21.500911712646484
    10. ' ' → logprob: -21.750911712646484

Token 381: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011762974318116903
    2. '(' → logprob: -6.751176357269287
    3. 'int' → logprob: -12.751175880432129
    4. '<int' → logprob: -13.501175880432129
    5. '[int' → logprob: -14.501175880432129
    6. '(
' → logprob: -14.626175880432129
    7. ' (' → logprob: -15.001175880432129
    8. ' int' → logprob: -15.876175880432129
    9. '=int' → logprob: -16.001176834106445
    10. '(input' → logprob: -16.001176834106445

Token 382: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024072888772934675
    2. 'input' → logprob: -6.502407073974609
    3. ',input' → logprob: -7.377407073974609
    4. '(' → logprob: -9.12740707397461
    5. ' (' → logprob: -9.12740707397461
    6. ',' → logprob: -10.25240707397461
    7. ' input' → logprob: -11.00240707397461
    8. ')' → logprob: -12.12740707397461
    9. '=input' → logprob: -12.62740707397461
    10. '```' → logprob: -14.62740707397461

Token 383: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014163628220558167
    2. ' input' → logprob: -4.264163494110107
    3. '(input' → logprob: -15.764163970947266
    4. '	input' → logprob: -18.264163970947266
    5. ' ' → logprob: -18.389163970947266
    6. '<input' → logprob: -18.389163970947266
    7. '   ' → logprob: -18.514163970947266
    8. '=input' → logprob: -18.764163970947266
    9. ')' → logprob: -19.139163970947266
    10. '.input' → logprob: -20.014163970947266

Token 384: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002967320033349097
    2. '()' → logprob: -8.125296592712402
    3. ' ().' → logprob: -14.625296592712402
    4. '())' → logprob: -15.250296592712402
    5. '()
' → logprob: -17.62529754638672
    6. '(' → logprob: -18.37529754638672
    7. '("' → logprob: -18.37529754638672
    8. '()).' → logprob: -18.50029754638672
    9. ')' → logprob: -19.25029754638672
    10. '("").' → logprob: -19.50029754638672

Token 385: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.848420551046729e-05
    2. 'strip' → logprob: -9.7500581741333
    3. ' split' → logprob: -16.375059127807617
    4. 'rstrip' → logprob: -17.375059127807617
    5. '(split' → logprob: -17.750059127807617
    6. 'spl' → logprob: -18.875059127807617
    7. '.split' → logprob: -19.875059127807617
    8. '().' → logprob: -20.375059127807617
    9. '_split' → logprob: -22.625059127807617
    10. 'read' → logprob: -22.750059127807617

Token 386: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0037867736537009478
    2. '()' → logprob: -5.753786563873291
    3. ')' → logprob: -7.878786563873291
    4. '()))' → logprob: -8.50378704071045
    5. '(' → logprob: -11.37878704071045
    6. '('' → logprob: -12.12878704071045
    7. ' ())' → logprob: -12.12878704071045
    8. '))' → logprob: -12.62878704071045
    9. '())
' → logprob: -14.87878704071045
    10. '());' → logprob: -15.00378704071045

Token 387: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.676981345459353e-06
    2. 'result' → logprob: -12.250005722045898
    3. ' print' → logprob: -14.500005722045898
    4. '#print' → logprob: -15.625005722045898
    5. '#' → logprob: -16.5000057220459
    6. '
' → logprob: -17.0000057220459
    7. '  
' → logprob: -17.2500057220459
    8. '```' → logprob: -18.1250057220459
    9. ' 
' → logprob: -18.7500057220459
    10. 'c' → logprob: -18.8750057220459

Token 388: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. 'result' → logprob: -13.375001907348633
    3. ' print' → logprob: -15.000001907348633
    4. '#' → logprob: -15.875001907348633
    5. '#print' → logprob: -17.250001907348633
    6. 'pr' → logprob: -17.625001907348633
    7. 'prin' → logprob: -18.250001907348633
    8. '
' → logprob: -18.375001907348633
    9. 'c' → logprob: -19.250001907348633
    10. 'p' → logprob: -19.625001907348633

Token 389: ' appelle' (ID: 111796)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00772196426987648
    2. ' print' → logprob: -4.882721900939941
    3. '(print' → logprob: -9.382721900939941
    4. '_print' → logprob: -11.382721900939941
    5. ')' → logprob: -12.007721900939941
    6. '.print' → logprob: -12.382721900939941
    7. '#print' → logprob: -12.882721900939941
    8. '(' → logprob: -12.882721900939941
    9. '#' → logprob: -13.757721900939941
    10. '()' → logprob: -14.007721900939941

Token 390: ' la' (ID: 557)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.6007469892501831
    2. 'print' → logprob: -0.8507469892501831
    3. '(' → logprob: -3.7257471084594727
    4. '(print' → logprob: -8.225747108459473
    5. '(L' → logprob: -9.850747108459473
    6. '(
' → logprob: -10.600747108459473
    7. 'LS' → logprob: -10.600747108459473
    8. 'def' → logprob: -11.725747108459473
    9. ' LC' → logprob: -11.725747108459473
    10. '#' → logprob: -11.975747108459473

Token 391: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16033542156219482
    2. 'LC' → logprob: -1.9103354215621948
    3. 'LS' → logprob: -9.785335540771484
    4. ' print' → logprob: -10.160335540771484
    5. 'def' → logprob: -12.285335540771484
    6. 'result' → logprob: -12.660335540771484
    7. 'function' → logprob: -13.160335540771484
    8. 'LM' → logprob: -13.285335540771484
    9. 'fonction' → logprob: -13.535335540771484
    10. ' LC' → logprob: -14.035335540771484

Token 392: ' L' (ID: 451)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.05302710086107254
    2. 'print' → logprob: -3.0530271530151367
    3. '(' → logprob: -5.803027153015137
    4. 'result' → logprob: -6.678027153015137
    5. 'LS' → logprob: -10.053027153015137
    6. '(L' → logprob: -10.678027153015137
    7. 'def' → logprob: -10.803027153015137
    8. '(print' → logprob: -11.303027153015137
    9. ' print' → logprob: -11.428027153015137
    10. 'l' → logprob: -11.803027153015137

Token 393: 'CM' (ID: 14170)
  Prédit: 'CM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -9.639096970204264e-05
    2. 'C' → logprob: -9.250096321105957
    3. 'M' → logprob: -15.875096321105957
    4. ' CM' → logprob: -16.500097274780273
    5. 'MC' → logprob: -17.875097274780273
    6. 'CMS' → logprob: -18.000097274780273
    7. '(a' → logprob: -18.000097274780273
    8. '(C' → logprob: -18.125097274780273
    9. 'cm' → logprob: -19.625097274780273
    10. 'a' → logprob: -19.625097274780273

Token 394: ' avec' (ID: 3937)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002736138121690601
    2. '(' → logprob: -8.250273704528809
    3. 'def' → logprob: -11.875273704528809
    4. ' (' → logprob: -13.250273704528809
    5. 'print' → logprob: -13.500273704528809
    6. 'L' → logprob: -14.500273704528809
    7. 'a' → logprob: -15.000273704528809
    8. '(
' → logprob: -15.125273704528809
    9. 'LC' → logprob: -15.250273704528809
    10. 'result' → logprob: -15.500273704528809

Token 395: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3133191168308258
    2. '(a' → logprob: -1.3133190870285034
    3. ' a' → logprob: -9.813319206237793
    4. '(' → logprob: -13.188319206237793
    5. 'la' → logprob: -16.188318252563477
    6. '(
' → logprob: -16.188318252563477
    7. 'l' → logprob: -16.188318252563477
    8. ')a' → logprob: -16.313318252563477
    9. ' (' → logprob: -16.438318252563477
    10. 'b' → logprob: -16.813318252563477

Token 396: ' arguments' (ID: 11917)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018661346985027194
    2. ' a' → logprob: -8.750186920166016
    3. 'arguments' → logprob: -10.875186920166016
    4. '(a' → logprob: -12.000186920166016
    5. ' arguments' → logprob: -13.250186920166016
    6. ' valeurs' → logprob: -14.625186920166016
    7. 'val' → logprob: -14.875186920166016
    8. 'variables' → logprob: -15.750186920166016
    9. 'args' → logprob: -16.625186920166016
    10. 'values' → logprob: -17.000186920166016

Token 397: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06256459653377533
    2. 'a' → logprob: -2.8125646114349365
    3. '(' → logprob: -7.437564373016357
    4. ' a' → logprob: -12.062564849853516
    5. ' (' → logprob: -13.312564849853516
    6. '(
' → logprob: -14.437564849853516
    7. '(x' → logprob: -18.562564849853516
    8. ' ' → logprob: -19.187564849853516
    9. 'b' → logprob: -19.562564849853516
    10. '_a' → logprob: -19.562564849853516

Token 398: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008122475701384246
    2. ',b' → logprob: -7.25081205368042
    3. ' ,' → logprob: -9.250812530517578
    4. 'a' → logprob: -13.250812530517578
    5. ' et' → logprob: -13.500812530517578
    6. 'et' → logprob: -14.000812530517578
    7. 'b' → logprob: -14.125812530517578
    8. ' b' → logprob: -15.000812530517578
    9. ',a' → logprob: -15.000812530517578
    10. ' ' → logprob: -15.500812530517578

Token 399: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022422909736633
    2. ' b' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.16022491455078
    4. ' ' → logprob: -19.16022491455078
    5. ')b' → logprob: -19.28522491455078
    6. '	b' → logprob: -19.66022491455078
    7. '<|end|>' → logprob: -20.41022491455078
    8. '_b' → logprob: -20.66022491455078
    9. ' б' → logprob: -21.28522491455078
    10. ',' → logprob: -21.78522491455078

Token 400: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17876020073890686
    2. 'print' → logprob: -2.803760290145874
    3. 'LC' → logprob: -3.553760290145874
    4. '(a' → logprob: -3.553760290145874
    5. '(l' → logprob: -4.303760051727295
    6. '(print' → logprob: -4.553760051727295
    7. ')' → logprob: -4.678760051727295
    8. 'result' → logprob: -5.053760051727295
    9. '(result' → logprob: -6.553760051727295
    10. 'l' → logprob: -6.678760051727295

Token 401: ' ce' (ID: 2357)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.035416603088379
    2. ' et' → logprob: -1.535416603088379
    3. ')' → logprob: -2.160416603088379
    4. 'a' → logprob: -2.910416603088379
    5. ' puis' → logprob: -2.910416603088379
    6. 'print' → logprob: -3.035416603088379
    7. 'LC' → logprob: -3.035416603088379
    8. 'et' → logprob: -3.535416603088379
    9. ' a' → logprob: -3.660416603088379
    10. 'and' → logprob: -4.535416603088379

Token 402: ' qui' (ID: 2780)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0049554109573364
    2. ''' → logprob: -1.0049554109573364
    3. ')' → logprob: -1.3799554109573364
    4. ' )' → logprob: -5.754955291748047
    5. '   ' → logprob: -6.379955291748047
    6. 'print' → logprob: -6.379955291748047
    7. '=' → logprob: -6.629955291748047
    8. 's' → logprob: -6.879955291748047
    9. 'space' → logprob: -7.004955291748047
    10. ',' → logprob: -7.129955291748047

Token 403: ' donne' (ID: 30004)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6146914958953857
    2. ' affiche' → logprob: -1.9896914958953857
    3. 'print' → logprob: -2.2396914958953857
    4. ' permet' → logprob: -2.8646914958953857
    5. ' imprime' → logprob: -3.4896914958953857
    6. ')' → logprob: -3.7396914958953857
    7. ''' → logprob: -4.114691734313965
    8. ' return' → logprob: -4.364691734313965
    9. '"' → logprob: -5.114691734313965
    10. ' a' → logprob: -5.239691734313965

Token 404: ' leur' (ID: 9853)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.2294211387634277
    2. ' l' → logprob: -1.3544211387634277
    3. ' le' → logprob: -1.9794211387634277
    4. ''' → logprob: -2.6044211387634277
    5. '"' → logprob: -2.8544211387634277
    6. 'LC' → logprob: -2.8544211387634277
    7. ' ' → logprob: -3.6044211387634277
    8. ' ' → logprob: -3.7294211387634277
    9. 'l' → logprob: -3.7294211387634277
    10. 'le' → logprob: -4.479421138763428

Token 405: ' PPC' (ID: 94738)
  Prédit: ' PPC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' PPC' → logprob: -0.2420816868543625
    2. ' plus' → logprob: -2.242081642150879
    3. '_' → logprob: -2.742081642150879
    4. '_pp' → logprob: -3.742081642150879
    5. ' L' → logprob: -5.992081642150879
    6. 'pp' → logprob: -5.992081642150879
    7. ' premier' → logprob: -6.117081642150879
    8. 'P' → logprob: -6.367081642150879
    9. ' P' → logprob: -6.617081642150879
    10. '_plus' → logprob: -6.617081642150879

Token 406: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.010836043395102024
    2. 'MI' → logprob: -4.635836124420166
    3. ' M' → logprob: -7.135836124420166
    4. 'CM' → logprob: -9.135835647583008
    5. 'I' → logprob: -9.385835647583008
    6. 'IM' → logprob: -10.260835647583008
    7. ' MI' → logprob: -11.010835647583008
    8. 'MIC' → logprob: -11.385835647583008
    9. 'm' → logprob: -12.010835647583008
    10. '	M' → logprob: -12.635835647583008

Token 407: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42587369680404663
    2. 'print' → logprob: -1.1758737564086914
    3. '(' → logprob: -4.175873756408691
    4. ',' → logprob: -4.675873756408691
    5. '()' → logprob: -5.050873756408691
    6. 'result' → logprob: -6.175873756408691
    7. '(print' → logprob: -6.675873756408691
    8. '.' → logprob: -7.050873756408691
    9. '(a' → logprob: -7.175873756408691
    10. ' print' → logprob: -7.550873756408691

Token 408: '#' (ID: 2)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0525635480880737
    2. 'result' → logprob: -1.6775635480880737
    3. 'LC' → logprob: -2.1775636672973633
    4. ' result' → logprob: -2.3025636672973633
    5. ')' → logprob: -2.5525636672973633
    6. ' "' → logprob: -3.4275636672973633
    7. '   ' → logprob: -3.8025636672973633
    8. ' l' → logprob: -4.177563667297363
    9. ' and' → logprob: -4.177563667297363
    10. ' '' → logprob: -4.177563667297363

Token 409: ' puis' (ID: 18766)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0568825006484985
    2. ' puis' → logprob: -1.4318825006484985
    3. ' print' → logprob: -1.8068825006484985
    4. 'p' → logprob: -2.431882381439209
    5. 'result' → logprob: -3.056882381439209
    6. ' p' → logprob: -3.431882381439209
    7. ' and' → logprob: -3.681882381439209
    8. ' result' → logprob: -4.056882381439209
    9. ' et' → logprob: -4.681882381439209
    10. ' l' → logprob: -4.806882381439209

Token 410: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07890399545431137
    2. ' print' → logprob: -2.578903913497925
    3. '(print' → logprob: -11.953904151916504
    4. '   ' → logprob: -12.578904151916504
    5. ')' → logprob: -13.453904151916504
    6. ' prin' → logprob: -13.828904151916504
    7. '_print' → logprob: -15.078904151916504
    8. ' ' → logprob: -15.453904151916504
    9. '	print' → logprob: -15.578904151916504
    10. '
' → logprob: -15.578904151916504

Token 411: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01717609167098999
    2. ' print' → logprob: -4.142176151275635
    3. ' imprime' → logprob: -7.142176151275635
    4. ' affiche' → logprob: -8.517175674438477
    5. 'aff' → logprob: -9.517175674438477
    6. 'pr' → logprob: -10.142175674438477
    7. '_print' → logprob: -11.017175674438477
    8. ' prints' → logprob: -12.517175674438477
    9. ' prin' → logprob: -12.517175674438477
    10. 'prints' → logprob: -12.767175674438477

Token 412: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007524513057433069
    2. '()' → logprob: -7.2507524490356445
    3. '("' → logprob: -10.750752449035645
    4. '('' → logprob: -12.375752449035645
    5. '(l' → logprob: -12.375752449035645
    6. '(
' → logprob: -12.625752449035645
    7. ' (' → logprob: -12.875752449035645
    8. 'l' → logprob: -14.000752449035645
    9. ',' → logprob: -14.625752449035645
    10. '(L' → logprob: -14.625752449035645

Token 413: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.09403281658887863
    2. 'result' → logprob: -3.2190327644348145
    3. ' resultat' → logprob: -3.9690327644348145
    4. ' result' → logprob: -4.0940327644348145
    5. ' ' → logprob: -5.9690327644348145
    6. ' ' → logprob: -6.2190327644348145
    7. 'rés' → logprob: -6.8440327644348145
    8. 'Rés' → logprob: -6.9690327644348145
    9. ' Rés' → logprob: -7.0940327644348145
    10. ''' → logprob: -7.0940327644348145

Token 414: ' obtenu' (ID: 117330)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014316666638478637
    2. '(print' → logprob: -7.251431465148926
    3. '(' → logprob: -8.001431465148926
    4. ' print' → logprob: -8.501431465148926
    5. '()' → logprob: -8.751431465148926
    6. '()
' → logprob: -11.626431465148926
    7. 'LC' → logprob: -12.501431465148926
    8. ',' → logprob: -12.626431465148926
    9. '
' → logprob: -12.876431465148926
    10. '(L' → logprob: -13.251431465148926

Token 415: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006418578792363405
    2. '(print' → logprob: -5.631418704986572
    3. '(' → logprob: -6.381418704986572
    4. '()' → logprob: -7.506418704986572
    5. ' print' → logprob: -7.756418704986572
    6. ',' → logprob: -10.006418228149414
    7. '()
' → logprob: -10.131418228149414
    8. '(L' → logprob: -11.256418228149414
    9. '(
' → logprob: -11.381418228149414
    10. 'LC' → logprob: -11.506418228149414

Token 416: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029927285388112068
    2. ' print' → logprob: -3.5299272537231445
    3. '(print' → logprob: -8.654927253723145
    4. '(' → logprob: -13.029927253723145
    5. '()' → logprob: -16.15492820739746
    6. '	print' → logprob: -16.27992820739746
    7. ' ' → logprob: -16.65492820739746
    8. ' ' → logprob: -16.90492820739746
    9. '```' → logprob: -17.65492820739746
    10. ')' → logprob: -17.77992820739746

Token 417: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011069400236010551
    2. ' print' → logprob: -4.511069297790527
    3. 'fonction' → logprob: -11.636069297790527
    4. ' function' → logprob: -12.011069297790527
    5. ' fonction' → logprob: -12.886069297790527
    6. 'function' → logprob: -13.136069297790527
    7. '(print' → logprob: -13.761069297790527
    8. ' ' → logprob: -15.136069297790527
    9. ' ' → logprob: -15.386069297790527
    10. '#print' → logprob: -16.261070251464844

Token 418: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011049231514334679
    2. ' print' → logprob: -4.511049270629883
    3. '(print' → logprob: -13.511049270629883
    4. '```' → logprob: -17.761049270629883
    5. '	print' → logprob: -19.386049270629883
    6. '(' → logprob: -21.136049270629883
    7. '`' → logprob: -21.261049270629883
    8. '_print' → logprob: -22.136049270629883
    9. '.print' → logprob: -22.261049270629883
    10. '#print' → logprob: -22.386049270629883

Token 419: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010538129135966301
    2. '(print' → logprob: -5.010538101196289
    3. 'print' → logprob: -5.635538101196289
    4. '()' → logprob: -8.385538101196289
    5. '(
' → logprob: -11.510538101196289
    6. 'LC' → logprob: -12.510538101196289
    7. '()
' → logprob: -13.760538101196289
    8. ' print' → logprob: -14.135538101196289
    9. '(L' → logprob: -15.010538101196289
    10. '((' → logprob: -15.135538101196289

Token 420: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '```' → logprob: -21.125
    4. 'pr' → logprob: -23.875
    5. 'Print' → logprob: -24.75
    6. '#print' → logprob: -24.75
    7. '
' → logprob: -24.875
    8. '	print' → logprob: -25.0
    9. '(print' → logprob: -25.0
    10. 'prin' → logprob: -25.5

Token 421: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.87501049041748
    3. '(
' → logprob: -13.62501049041748
    4. '('' → logprob: -14.50001049041748
    5. '("' → logprob: -14.75001049041748
    6. '((' → logprob: -15.00001049041748
    7. '(f' → logprob: -15.75001049041748
    8. '(

' → logprob: -15.87501049041748
    9. '(L' → logprob: -16.000009536743164
    10. ' (' → logprob: -16.000009536743164

Token 422: 'LC' (ID: 10566)
  Prédit: 'LC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.0007113590254448354
    2. 'a' → logprob: -7.250711441040039
    3. 'L' → logprob: -14.250711441040039
    4. 'LS' → logprob: -14.750711441040039
    5. ' LC' → logprob: -16.12571144104004
    6. 'LM' → logprob: -16.75071144104004
    7. ' L' → logprob: -17.00071144104004
    8. '(a' → logprob: -17.00071144104004
    9. '(' → logprob: -17.25071144104004
    10. 'l' → logprob: -18.00071144104004

Token 423: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.034592388459714e-06
    2. '(a' → logprob: -12.625005722045898
    3. 'a' → logprob: -13.125005722045898
    4. ' M' → logprob: -14.625005722045898
    5. 'М' → logprob: -17.5000057220459
    6. 'Ma' → logprob: -17.6250057220459
    7. '(M' → logprob: -18.1250057220459
    8. 'Ｍ' → logprob: -18.2500057220459
    9. '[a' → logprob: -18.3750057220459
    10. 'Mor' → logprob: -18.5000057220459

Token 424: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009124171338044107
    2. '(' → logprob: -7.000912189483643
    3. ' (' → logprob: -14.2509126663208
    4. '(
' → logprob: -15.6259126663208
    5. ')' → logprob: -17.250911712646484
    6. 'a' → logprob: -17.500911712646484
    7. '(x' → logprob: -18.375911712646484
    8. '((' → logprob: -19.625911712646484
    9. '(A' → logprob: -19.875911712646484
    10. ' ' → logprob: -20.375911712646484

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006858677952550352
    2. ',b' → logprob: -7.375685691833496
    3. ' ,' → logprob: -9.750685691833496
    4. ')' → logprob: -15.250685691833496
    5. ' ' → logprob: -15.250685691833496
    6. ',
' → logprob: -15.500685691833496
    7. 'b' → logprob: -15.500685691833496
    8. ' b' → logprob: -15.625685691833496
    9. '<|end|>' → logprob: -18.000686645507812
    10. '(' → logprob: -18.625686645507812

Token 426: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759397745132446
    2. ' b' → logprob: -0.8259397745132446
    3. ' ' → logprob: -14.825940132141113
    4. ')b' → logprob: -17.450939178466797
    5. ' ' → logprob: -17.700939178466797
    6. ')' → logprob: -18.325939178466797
    7. '	b' → logprob: -18.450939178466797
    8. ',b' → logprob: -19.450939178466797
    9. '_b' → logprob: -19.700939178466797
    10. ' 
' → logprob: -20.075939178466797

Token 427: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003179975086823106
    2. ')' → logprob: -5.753180027008057
    3. '))
' → logprob: -14.253179550170898
    4. '()))' → logprob: -14.253179550170898
    5. ')))' → logprob: -14.253179550170898
    6. '())' → logprob: -16.2531795501709
    7. ' ))' → logprob: -16.3781795501709
    8. '()' → logprob: -17.1281795501709
    9. '))

' → logprob: -18.6281795501709
    10. '])' → logprob: -18.7531795501709


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 425
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 161
Tokens correctement prédits (top 10): 281
Précision stricte (1ère position): 37.18%
Précision adaptée (1ère position): 37.88%
Précision (top 10): 66.12%
================================================================================
