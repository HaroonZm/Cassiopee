================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import numpy as np
input = sys.stdin.readline

def main():
    N, C = map(int, input().split())
    D = np.array([list(map(int, input().split())) for _ in range(C)])
    board = [list(map(int, input().split())) for _ in range(N)]
    cost = np.zeros((3, C), dtype=int)
    count = np.zeros((3, C), dtype=int)
    for i in range(N):
        for j in range(N):
            count[(i + j) % 3][board[i][j] - 1] += 1
    for i in range(3):
        for j in range(C):
            cost[i] += D[j] * count[i][j]
    ans = int(1e20)
    for i in range(C):
        for j in range(C):
            if i == j:
                continue
            for k in range(C):
                if k == i or k == j:
                    continue
                ans = min(ans, cost[0][i] + cost[1][j] + cost[2][k])
    print(ans)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.0484796017408371
    2. '<|end|>' → logprob: -3.1734795570373535
    3. 'as' → logprob: -5.7984795570373535
    4. '.' → logprob: -6.7984795570373535
    5. ' ' → logprob: -6.9234795570373535
    6. '<|end|>' → logprob: -8.798480033874512
    7. '.as' → logprob: -9.673480033874512
    8. ' .' → logprob: -9.923480033874512
    9. '.ndarray' → logprob: -10.673480033874512
    10. '.pyplot' → logprob: -11.923480033874512

Token 6: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0004699954588431865
    2. 'np' → logprob: -8.250470161437988
    3. ' ' → logprob: -8.500470161437988
    4. ' ' → logprob: -12.500470161437988
    5. ' numpy' → logprob: -14.125470161437988
    6. ' as' → logprob: -15.625470161437988
    7. ' ndarray' → logprob: -15.625470161437988
    8. ' nd' → logprob: -16.125469207763672
    9. ' n' → logprob: -16.625469207763672
    10. '_np' → logprob: -17.125469207763672

Token 7: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.275036484003067
    2. '<|end|>' → logprob: -2.650036573410034
    3. '\n' → logprob: -3.025036573410034
    4. '```' → logprob: -3.275036573410034
    5. 'import' → logprob: -3.900036573410034
    6. '
' → logprob: -4.150036334991455
    7. '[' → logprob: -4.275036334991455
    8. '\' → logprob: -4.400036334991455
    9. 'as' → logprob: -5.275036334991455
    10. '#' → logprob: -5.275036334991455

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025997955817729235
    2. '.' → logprob: -6.502599716186523
    3. '(
' → logprob: -7.627599716186523
    4. '_' → logprob: -9.127599716186523
    5. '()' → logprob: -9.627599716186523
    6. ' (' → logprob: -9.627599716186523
    7. ''' → logprob: -9.627599716186523
    8. '('' → logprob: -10.127599716186523
    9. '```' → logprob: -10.127599716186523
    10. ')' → logprob: -10.252599716186523

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023859919980168343
    2. 'sys' → logprob: -3.773859977722168
    3. ' np' → logprob: -7.648859977722168
    4. ' input' → logprob: -9.273859977722168
    5. 'input' → logprob: -10.773859977722168
    6. 'np' → logprob: -11.023859977722168
    7. ' ' → logprob: -12.773859977722168
    8. '(sys' → logprob: -13.398859977722168
    9. '	sys' → logprob: -13.523859977722168
    10. ' lambda' → logprob: -14.898859977722168

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01920543611049652
    2. '.stdin' → logprob: -4.144205570220947
    3. '.argv' → logprob: -6.769205570220947
    4. '.stdout' → logprob: -7.019205570220947
    5. ' .' → logprob: -7.644205570220947
    6. '.input' → logprob: -8.269205093383789
    7. '.import' → logprob: -8.644205093383789
    8. '.path' → logprob: -9.519205093383789
    9. '.exit' → logprob: -10.394205093383789
    10. '.stderr' → logprob: -10.769205093383789

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5460725426673889
    2. '.' → logprob: -1.0460724830627441
    3. '.read' → logprob: -2.671072483062744
    4. '.readlines' → logprob: -9.046072959899902
    5. 'read' → logprob: -9.421072959899902
    6. '.Read' → logprob: -10.296072959899902
    7. '```' → logprob: -10.921072959899902
    8. '.buffer' → logprob: -11.421072959899902
    9. ' .' → logprob: -12.671072959899902
    10. '.write' → logprob: -13.171072959899902

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3195362687110901
    2. '(' → logprob: -1.3195362091064453
    3. '(
' → logprob: -5.694536209106445
    4. '()
' → logprob: -6.694536209106445
    5. '().' → logprob: -7.819536209106445
    6. '
' → logprob: -8.444536209106445
    7. ')' → logprob: -8.694536209106445
    8. '()

' → logprob: -8.694536209106445
    9. '.' → logprob: -8.944536209106445
    10. '(

' → logprob: -9.319536209106445

Token 14: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1280427873134613
    2. '()' → logprob: -2.253042697906494
    3. '(n' → logprob: -5.253042697906494
    4. 'n' → logprob: -5.753042697906494
    5. 'def' → logprob: -6.003042697906494
    6. 'data' → logprob: -6.503042697906494
    7. 'for' → logprob: -7.378042697906494
    8. 'a' → logprob: -8.003043174743652
    9. 'x' → logprob: -8.128043174743652
    10. '(
' → logprob: -8.253043174743652

Token 15: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2082546055316925
    2. ' main' → logprob: -2.08325457572937
    3. ' solve' → logprob: -4.333254814147949
    4. ' factorial' → logprob: -4.333254814147949
    5. ' my' → logprob: -4.583254814147949
    6. ' add' → logprob: -5.333254814147949
    7. ' calculate' → logprob: -5.333254814147949
    8. '_' → logprob: -5.708254814147949
    9. ' space' → logprob: -6.458254814147949
    10. ' process' → logprob: -6.958254814147949

Token 16: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06358632445335388
    2. '(' → logprob: -2.8135862350463867
    3. '(:' → logprob: -6.813586235046387
    4. ':' → logprob: -8.563586235046387
    5. '()' → logprob: -8.813586235046387
    6. ' ():' → logprob: -9.063586235046387
    7. '(":' → logprob: -11.313586235046387
    8. '(
' → logprob: -11.563586235046387
    9. '(`' → logprob: -11.813586235046387
    10. ' (' → logprob: -12.063586235046387

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04030945524573326
    2. '(' → logprob: -3.790309429168701
    3. '    
' → logprob: -5.790309429168701
    4. ' ' → logprob: -5.915309429168701
    5. '(n' → logprob: -5.915309429168701
    6. 'n' → logprob: -5.915309429168701
    7. 'x' → logprob: -6.665309429168701
    8. '\' → logprob: -7.040309429168701
    9. '    ' → logprob: -7.290309429168701
    10. ')' → logprob: -7.790309429168701

Token 18: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5643895268440247
    2. ' ' → logprob: -1.6893894672393799
    3. 'x' → logprob: -2.43938946723938
    4. 'n' → logprob: -2.93938946723938
    5. '    ' → logprob: -3.06438946723938
    6. '(' → logprob: -4.189389705657959
    7. 'i' → logprob: -4.689389705657959
    8. 'print' → logprob: -5.189389705657959
    9. '    
' → logprob: -5.189389705657959
    10. 'r' → logprob: -5.939389705657959

Token 19: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7457958459854126
    2. ' =' → logprob: -0.7457958459854126
    3. '=' → logprob: -3.620795726776123
    4. ',' → logprob: -4.745795726776123
    5. ' ,' → logprob: -5.745795726776123
    6. '  ' → logprob: -6.245795726776123
    7. ' >' → logprob: -6.245795726776123
    8. '    ' → logprob: -6.245795726776123
    9. '   ' → logprob: -6.620795726776123
    10. ')' → logprob: -6.995795726776123

Token 20: ' C' (ID: 363)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.19275909662246704
    2. ' M' → logprob: -2.1927590370178223
    3. ' ' → logprob: -2.9427590370178223
    4. 'K' → logprob: -4.942759037017822
    5. 'M' → logprob: -6.567759037017822
    6. ' input' → logprob: -7.067759037017822
    7. 'input' → logprob: -8.19275951385498
    8. ' T' → logprob: -8.31775951385498
    9. ' x' → logprob: -8.94275951385498
    10. ' k' → logprob: -8.94275951385498

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269427090883255
    2. '=' → logprob: -2.1269426345825195
    3. ' ' → logprob: -11.50194263458252
    4. ',' → logprob: -12.50194263458252
    5. '  ' → logprob: -15.50194263458252
    6. ')' → logprob: -15.62694263458252
    7. '=input' → logprob: -15.87694263458252
    8. '=int' → logprob: -16.126943588256836
    9. '   ' → logprob: -16.751943588256836
    10. ' =
' → logprob: -17.126943588256836

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019354235846549273
    2. 'map' → logprob: -6.2519354820251465
    3. ' ' → logprob: -12.626935005187988
    4. ' input' → logprob: -13.001935005187988
    5. ' list' → logprob: -14.251935005187988
    6. '	map' → logprob: -14.876935005187988
    7. ' mapa' → logprob: -16.251935958862305
    8. ' tuple' → logprob: -16.751935958862305
    9. 'input' → logprob: -16.876935958862305
    10. '  ' → logprob: -17.376935958862305

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.027912311255931854
    2. '(' → logprob: -3.7779123783111572
    3. '(lambda' → logprob: -5.902912139892578
    4. '(str' → logprob: -6.777912139892578
    5. '(input' → logprob: -7.277912139892578
    6. 'int' → logprob: -9.902912139892578
    7. 'input' → logprob: -11.777912139892578
    8. 'lambda' → logprob: -11.902912139892578
    9. ',int' → logprob: -12.277912139892578
    10. ')' → logprob: -12.527912139892578

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030225489288568497
    2. ',input' → logprob: -3.5302255153656006
    3. '(' → logprob: -8.78022575378418
    4. ' ,' → logprob: -9.03022575378418
    5. ',int' → logprob: -9.03022575378418
    6. 'input' → logprob: -10.28022575378418
    7. '(input' → logprob: -10.28022575378418
    8. ')' → logprob: -12.65522575378418
    9. '```' → logprob: -13.40522575378418
    10. ',line' → logprob: -13.78022575378418

Token 25: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3132690191268921
    2. 'input' → logprob: -1.313269019126892
    3. ')' → logprob: -12.688268661499023
    4. ',input' → logprob: -13.438268661499023
    5. ' sys' → logprob: -13.938268661499023
    6. ' ' → logprob: -14.063268661499023
    7. '=input' → logprob: -15.063268661499023
    8. ' )' → logprob: -15.063268661499023
    9. '(input' → logprob: -15.188268661499023
    10. 'sys' → logprob: -15.938268661499023

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0012682090746238828
    2. '())' → logprob: -7.25126838684082
    3. '()' → logprob: -7.50126838684082
    4. ')' → logprob: -12.75126838684082
    5. '()))' → logprob: -13.50126838684082
    6. ' ().' → logprob: -14.12626838684082
    7. '()
' → logprob: -15.62626838684082
    8. '(' → logprob: -15.87626838684082
    9. ' ())' → logprob: -16.50126838684082
    10. ' ()' → logprob: -17.12626838684082

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.041973236948251724
    2. 'strip' → logprob: -3.291973352432251
    3. 'rstrip' → logprob: -5.541973114013672
    4. '().' → logprob: -13.541973114013672
    5. ')' → logprob: -13.666973114013672
    6. '(split' → logprob: -13.791973114013672
    7. ' split' → logprob: -13.916973114013672
    8. '()' → logprob: -14.666973114013672
    9. 'spl' → logprob: -16.166973114013672
    10. '```' → logprob: -16.291973114013672

Token 28: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004860853776335716
    2. '))' → logprob: -5.379860877990723
    3. '())' → logprob: -8.629860877990723
    4. '()' → logprob: -10.004860877990723
    5. ')
' → logprob: -11.629860877990723
    6. ')")' → logprob: -13.254860877990723
    7. ')`' → logprob: -13.504860877990723
    8. '(' → logprob: -13.879860877990723
    9. '`)' → logprob: -14.254860877990723
    10. '),' → logprob: -14.379860877990723

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20170168578624725
    2. ')' → logprob: -2.0767016410827637
    3. '
' → logprob: -3.8267016410827637
    4. '<|end|>' → logprob: -4.326701641082764
    5. '    
' → logprob: -4.826701641082764
    6. '\n' → logprob: -5.826701641082764
    7. '\' → logprob: -6.076701641082764
    8. ' ' → logprob: -6.326701641082764
    9. '```' → logprob: -6.576701641082764
    10. '<|end|>' → logprob: -7.326701641082764

Token 30: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3166388273239136
    2. ' times' → logprob: -1.6916388273239136
    3. 'times' → logprob: -2.441638946533203
    4. 'events' → logprob: -2.941638946533203
    5. 't' → logprob: -3.066638946533203
    6. ' A' → logprob: -3.066638946533203
    7. ')' → logprob: -3.191638946533203
    8. 'A' → logprob: -3.316638946533203
    9. ' events' → logprob: -3.566638946533203
    10. 'd' → logprob: -4.066638946533203

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1455644816160202
    2. ' ' → logprob: -2.770564556121826
    3. '[' → logprob: -2.895564556121826
    4. '=' → logprob: -4.645564556121826
    5. 'istance' → logprob: -6.145564556121826
    6. '[i' → logprob: -6.395564556121826
    7. ' =[' → logprob: -6.645564556121826
    8. 'ist' → logprob: -7.770564556121826
    9. '   ' → logprob: -8.145564079284668
    10. '=[' → logprob: -8.270564079284668

Token 32: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.20042146742343903
    2. ' np' → logprob: -2.0754215717315674
    3. '[np' → logprob: -2.9504215717315674
    4. '[' → logprob: -6.075421333312988
    5. '[]' → logprob: -7.825421333312988
    6. '[int' → logprob: -8.075421333312988
    7. ' [' → logprob: -8.200421333312988
    8. 'list' → logprob: -8.450421333312988
    9. '(np' → logprob: -9.200421333312988
    10. ' []' → logprob: -9.575421333312988

Token 33: '.array' (ID: 14557)
  Prédit: '.zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.4150024950504303
    2. '.' → logprob: -1.415002465248108
    3. '.array' → logprob: -2.9150025844573975
    4. '.empty' → logprob: -3.5400025844573975
    5. '.full' → logprob: -5.290002346038818
    6. '.ndarray' → logprob: -5.415002346038818
    7. ' .' → logprob: -6.165002346038818
    8. '.arange' → logprob: -7.165002346038818
    9. '[' → logprob: -8.165002822875977
    10. '.ones' → logprob: -8.290002822875977

Token 34: '([' (ID: 5194)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.701325535774231
    2. '(list' → logprob: -0.701325535774231
    3. '(np' → logprob: -5.451325416564941
    4. '([' → logprob: -6.451325416564941
    5. '(int' → logprob: -6.951325416564941
    6. '(map' → logprob: -7.451325416564941
    7. '(input' → logprob: -7.951325416564941
    8. '(tuple' → logprob: -8.951325416564941
    9. '((' → logprob: -9.701325416564941
    10. '(eval' → logprob: -9.826325416564941

Token 35: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0055993106216192245
    2. 'map' → logprob: -5.880599498748779
    3. ' list' → logprob: -6.255599498748779
    4. 'input' → logprob: -7.880599498748779
    5. 'int' → logprob: -8.255599021911621
    6. '(list' → logprob: -9.505599021911621
    7. ']' → logprob: -10.005599021911621
    8. '[int' → logprob: -10.380599021911621
    9. '])' → logprob: -11.255599021911621
    10. 'tuple' → logprob: -11.505599021911621

Token 36: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.4418171455617994e-05
    2. '(' → logprob: -10.625044822692871
    3. 'map' → logprob: -11.000044822692871
    4. '(int' → logprob: -13.125044822692871
    5. '()' → logprob: -14.750044822692871
    6. '(input' → logprob: -15.750044822692871
    7. '	map' → logprob: -16.125043869018555
    8. ' map' → logprob: -16.125043869018555
    9. '```' → logprob: -16.375043869018555
    10. '((' → logprob: -16.500043869018555

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017461004899814725
    2. 'int' → logprob: -6.37674617767334
    3. ',int' → logprob: -11.00174617767334
    4. '(' → logprob: -12.00174617767334
    5. '<int' → logprob: -12.00174617767334
    6. ']int' → logprob: -12.12674617767334
    7. '[int' → logprob: -12.75174617767334
    8. ')' → logprob: -12.87674617767334
    9. '```' → logprob: -13.37674617767334
    10. '	int' → logprob: -13.87674617767334

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1949658989906311
    2. ',input' → logprob: -1.8199658393859863
    3. '(input' → logprob: -4.944965839385986
    4. ',int' → logprob: -6.069965839385986
    5. '<|end|>' → logprob: -6.069965839385986
    6. '(' → logprob: -6.194965839385986
    7. ' ,' → logprob: -7.819965839385986
    8. ',(' → logprob: -8.069966316223145
    9. '(int' → logprob: -8.944966316223145
    10. '(),' → logprob: -9.319966316223145

Token 39: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47409260272979736
    2. ' input' → logprob: -0.9740926027297974
    3. ')' → logprob: -12.224092483520508
    4. '(input' → logprob: -12.599092483520508
    5. ',input' → logprob: -12.974092483520508
    6. '<input' → logprob: -13.849092483520508
    7. ' ' → logprob: -13.974092483520508
    8. '	input' → logprob: -14.349092483520508
    9. '),' → logprob: -14.724092483520508
    10. '=input' → logprob: -14.849092483520508

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8789383830153383e-05
    2. '()' → logprob: -11.000019073486328
    3. '.split' → logprob: -14.500019073486328
    4. '(' → logprob: -14.625019073486328
    5. ' ().' → logprob: -15.375019073486328
    6. ')' → logprob: -15.500019073486328
    7. '()))' → logprob: -15.750019073486328
    8. '())' → logprob: -16.125019073486328
    9. 'split' → logprob: -16.625019073486328
    10. '()
' → logprob: -17.000019073486328

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020818933262489736
    2. 'strip' → logprob: -8.625207901000977
    3. 'rstrip' → logprob: -10.500207901000977
    4. ' split' → logprob: -14.250207901000977
    5. 'read' → logprob: -15.500207901000977
    6. '(split' → logprob: -15.625207901000977
    7. 'plit' → logprob: -17.000207901000977
    8. ')' → logprob: -17.125207901000977
    9. '.split' → logprob: -17.750207901000977
    10. 'spl' → logprob: -18.375207901000977

Token 42: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47749245166778564
    2. '))' → logprob: -0.9774924516677856
    3. '()' → logprob: -5.852492332458496
    4. '())' → logprob: -8.477492332458496
    5. ')))' → logprob: -9.477492332458496
    6. ')),' → logprob: -9.852492332458496
    7. ')' → logprob: -9.977492332458496
    8. '())))' → logprob: -9.977492332458496
    9. '(' → logprob: -10.727492332458496
    10. ' ))' → logprob: -11.102492332458496

Token 43: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21380367875099182
    2. ')' → logprob: -2.713803768157959
    3. 'for' → logprob: -2.963803768157959
    4. ' for' → logprob: -3.338803768157959
    5. '())' → logprob: -3.963803768157959
    6. '(' → logprob: -4.463803768157959
    7. '(input' → logprob: -5.463803768157959
    8. '   ' → logprob: -6.713803768157959
    9. '()]' → logprob: -6.838803768157959
    10. 'input' → logprob: -7.713803768157959

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7698253989219666
    2. ' _' → logprob: -1.0198254585266113
    3. ' range' → logprob: -1.7698254585266113
    4. ' i' → logprob: -5.644825458526611
    5. 'range' → logprob: -7.144825458526611
    6. '_range' → logprob: -7.144825458526611
    7. ' in' → logprob: -7.769825458526611
    8. ' ' → logprob: -8.769824981689453
    9. 'i' → logprob: -8.894824981689453
    10. '_i' → logprob: -10.894824981689453

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007216607220470905
    2. 'in' → logprob: -5.007216453552246
    3. ' ' → logprob: -8.632216453552246
    4. '_' → logprob: -9.007216453552246
    5. 'range' → logprob: -9.757216453552246
    6. ' _' → logprob: -10.132216453552246
    7. 'i' → logprob: -10.632216453552246
    8. ' i' → logprob: -10.632216453552246
    9. '  ' → logprob: -10.757216453552246
    10. ' range' → logprob: -12.132216453552246

Token 46: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015205761883407831
    2. ' range' → logprob: -6.50152063369751
    3. '(range' → logprob: -11.876520156860352
    4. '   ' → logprob: -12.876520156860352
    5. ' ' → logprob: -13.376520156860352
    6. '  ' → logprob: -13.501520156860352
    7. ')' → logprob: -13.751520156860352
    8. '```' → logprob: -14.001520156860352
    9. '	range' → logprob: -14.251520156860352
    10. 'rang' → logprob: -14.376520156860352

Token 47: '(C' (ID: 5559)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.000724229437764734
    2. '(' → logprob: -7.2507243156433105
    3. '(C' → logprob: -12.125723838806152
    4. 'N' → logprob: -12.875723838806152
    5. '(n' → logprob: -13.000723838806152
    6. ' (' → logprob: -13.750723838806152
    7. '(M' → logprob: -14.500723838806152
    8. '(
' → logprob: -14.625723838806152
    9. '(int' → logprob: -15.125723838806152
    10. '(D' → logprob: -15.125723838806152

Token 48: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.029781155288219452
    2. ')]' → logprob: -4.154781341552734
    3. ')],' → logprob: -4.404781341552734
    4. ')' → logprob: -6.779781341552734
    5. ')])
' → logprob: -8.279781341552734
    6. '])' → logprob: -11.154781341552734
    7. ')])

' → logprob: -11.654781341552734
    8. ' )' → logprob: -11.779781341552734
    9. '   ' → logprob: -12.654781341552734
    10. '))' → logprob: -12.904781341552734

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03126625716686249
    2. '
' → logprob: -4.031266212463379
    3. '    
' → logprob: -4.656266212463379
    4. ')' → logprob: -5.906266212463379
    5. '<|end|>' → logprob: -8.531266212463379
    6. '```' → logprob: -9.281266212463379
    7. '    ' → logprob: -9.656266212463379
    8. '  ' → logprob: -9.781266212463379
    9. ' 
' → logprob: -10.031266212463379
    10. '\n' → logprob: -10.281266212463379

Token 50: ' board' (ID: 6796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4744671583175659
    2. ' M' → logprob: -1.724467158317566
    3. 'c' → logprob: -2.8494672775268555
    4. 'M' → logprob: -3.4744672775268555
    5. ' c' → logprob: -3.4744672775268555
    6. '    
' → logprob: -3.9744672775268555
    7. ' S' → logprob: -4.8494672775268555
    8. ' A' → logprob: -5.3494672775268555
    9. 'cost' → logprob: -5.4744672775268555
    10. ' cost' → logprob: -5.5994672775268555

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023339582607150078
    2. '=' → logprob: -3.7733395099639893
    3. '[' → logprob: -10.39833927154541
    4. ')' → logprob: -11.27333927154541
    5. ' ' → logprob: -11.27333927154541
    6. '_' → logprob: -11.64833927154541
    7. '[]' → logprob: -11.89833927154541
    8. '[:]' → logprob: -12.27333927154541
    9. '   ' → logprob: -12.39833927154541
    10. 's' → logprob: -12.64833927154541

Token 52: ' [' (ID: 723)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5175542831420898
    2. ' np' → logprob: -1.2675542831420898
    3. '[np' → logprob: -2.14255428314209
    4. '[' → logprob: -5.89255428314209
    5. ' [' → logprob: -6.14255428314209
    6. '[]' → logprob: -9.01755428314209
    7. '(np' → logprob: -10.01755428314209
    8. '[n' → logprob: -10.76755428314209
    9. '=np' → logprob: -12.01755428314209
    10. '[list' → logprob: -12.26755428314209

Token 53: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0031872207764536142
    2. ' list' → logprob: -5.75318717956543
    3. 'tuple' → logprob: -12.87818717956543
    4. 'int' → logprob: -13.25318717956543
    5. 'input' → logprob: -13.37818717956543
    6. '[list' → logprob: -13.75318717956543
    7. '   ' → logprob: -13.87818717956543
    8. '(list' → logprob: -14.12818717956543
    9. 'np' → logprob: -15.25318717956543
    10. '	list' → logprob: -15.37818717956543

Token 54: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.9424725148128346e-05
    2. 'map' → logprob: -10.375049591064453
    3. '(' → logprob: -11.125049591064453
    4. '(int' → logprob: -12.750049591064453
    5. ' (' → logprob: -15.250049591064453
    6. ' map' → logprob: -16.375049591064453
    7. '(input' → logprob: -16.625049591064453
    8. '(np' → logprob: -16.750049591064453
    9. '()' → logprob: -17.000049591064453
    10. '(range' → logprob: -17.250049591064453

Token 55: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005937820533290505
    2. 'int' → logprob: -7.500593662261963
    3. ',int' → logprob: -10.375594139099121
    4. ' int' → logprob: -13.125594139099121
    5. '=int' → logprob: -13.125594139099121
    6. '[int' → logprob: -13.250594139099121
    7. '<int' → logprob: -13.250594139099121
    8. ']int' → logprob: -13.375594139099121
    9. '(' → logprob: -15.375594139099121
    10. ':int' → logprob: -15.875594139099121

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00333087588660419
    2. ',input' → logprob: -6.628330707550049
    3. ',int' → logprob: -7.003330707550049
    4. ' ,' → logprob: -7.128330707550049
    5. '(int' → logprob: -8.753331184387207
    6. '(' → logprob: -9.628331184387207
    7. '(input' → logprob: -10.378331184387207
    8. '(),' → logprob: -10.753331184387207
    9. 'input' → logprob: -11.878331184387207
    10. '   ' → logprob: -12.253331184387207

Token 57: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759441256523132
    2. 'input' → logprob: -0.8259441256523132
    3. '(input' → logprob: -13.700943946838379
    4. ',input' → logprob: -13.700943946838379
    5. 'lambda' → logprob: -14.200943946838379
    6. 'int' → logprob: -14.950943946838379
    7. ' lambda' → logprob: -15.450943946838379
    8. ')' → logprob: -15.575943946838379
    9. '=input' → logprob: -15.825943946838379
    10. '	input' → logprob: -15.950943946838379

Token 58: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.875001907348633
    3. ' ().' → logprob: -14.375001907348633
    4. '().__' → logprob: -16.875001907348633
    5. '.' → logprob: -17.625001907348633
    6. '(' → logprob: -17.875001907348633
    7. '.readline' → logprob: -18.000001907348633
    8. ')' → logprob: -18.250001907348633
    9. '())' → logprob: -18.500001907348633
    10. '()).' → logprob: -18.750001907348633

Token 59: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'rstrip' → logprob: -13.750001907348633
    3. 'strip' → logprob: -14.250001907348633
    4. ' split' → logprob: -15.375001907348633
    5. 'spl' → logprob: -15.375001907348633
    6. '.split' → logprob: -17.875001907348633
    7. '(split' → logprob: -17.875001907348633
    8. 'read' → logprob: -17.875001907348633
    9. ')' → logprob: -18.125001907348633
    10. 'plit' → logprob: -18.250001907348633

Token 60: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0013146435376256704
    2. '()' → logprob: -7.001314640045166
    3. '))' → logprob: -8.251315116882324
    4. '())' → logprob: -9.751315116882324
    5. '()))
' → logprob: -9.876315116882324
    6. '().' → logprob: -10.876315116882324
    7. '())).' → logprob: -12.626315116882324
    8. '()));' → logprob: -13.126315116882324
    9. '()[' → logprob: -13.251315116882324
    10. '(' → logprob: -13.376315116882324

Token 61: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6928986310958862
    2. '()' → logprob: -0.9428986310958862
    3. 'for' → logprob: -2.442898750305176
    4. '())' → logprob: -3.942898750305176
    5. ' for' → logprob: -5.692898750305176
    6. '(' → logprob: -7.817898750305176
    7. '   ' → logprob: -8.817898750305176
    8. ' ' → logprob: -9.692898750305176
    9. ' ()' → logprob: -10.817898750305176
    10. ' )' → logprob: -10.942898750305176

Token 62: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.015664072707295418
    2. '_' → logprob: -4.390664100646973
    3. ' range' → logprob: -5.765664100646973
    4. ' ' → logprob: -12.015664100646973
    5. ' in' → logprob: -12.265664100646973
    6. ' i' → logprob: -12.515664100646973
    7. '_range' → logprob: -14.390664100646973
    8. 'range' → logprob: -14.640664100646973
    9. ' ' → logprob: -14.765664100646973
    10. ' each' → logprob: -16.890663146972656

Token 63: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47998282313346863
    2. ' range' → logprob: -0.979982852935791
    3. '(range' → logprob: -5.354982852935791
    4. ' in' → logprob: -7.354982852935791
    5. '(' → logprob: -8.479982376098633
    6. '_range' → logprob: -9.104982376098633
    7. '	range' → logprob: -9.104982376098633
    8. '_' → logprob: -10.104982376098633
    9. ' ' → logprob: -10.604982376098633
    10. 'in' → logprob: -11.104982376098633

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25192973017692566
    2. 'range' → logprob: -1.501929759979248
    3. '(range' → logprob: -15.12692928314209
    4. '	range' → logprob: -15.37692928314209
    5. '_range' → logprob: -16.251930236816406
    6. ' ' → logprob: -17.751930236816406
    7. ' xrange' → logprob: -18.001930236816406
    8. '_' → logprob: -18.126930236816406
    9. 'rang' → logprob: -18.376930236816406
    10. '.range' → logprob: -18.501930236816406

Token 65: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2708291709423065
    2. '(' → logprob: -1.520829200744629
    3. '(range' → logprob: -4.020829200744629
    4. ' range' → logprob: -7.520829200744629
    5. '(C' → logprob: -9.270829200744629
    6. ' (' → logprob: -9.895829200744629
    7. 'range' → logprob: -10.020829200744629
    8. '(
' → logprob: -11.145829200744629
    9. '(n' → logprob: -11.270829200744629
    10. '(int' → logprob: -11.770829200744629

Token 66: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.203409844194539e-05
    2. ')' → logprob: -11.000041961669922
    3. ')])' → logprob: -11.625041961669922
    4. ']' → logprob: -11.625041961669922
    5. '])]' → logprob: -12.250041961669922
    6. '))' → logprob: -14.000041961669922
    7. '   ' → logprob: -14.625041961669922
    8. '')]' → logprob: -14.875041961669922
    9. ')]
' → logprob: -15.500041961669922
    10. '])' → logprob: -15.750041961669922

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36591044068336487
    2. '
' → logprob: -1.6159104108810425
    3. '    
' → logprob: -2.365910530090332
    4. '<|end|>' → logprob: -5.865910530090332
    5. '

' → logprob: -6.115910530090332
    6. '```' → logprob: -6.365910530090332
    7. '   
' → logprob: -6.740910530090332
    8. '  
' → logprob: -7.115910530090332
    9. 'def' → logprob: -7.240910530090332
    10. '    
    
' → logprob: -7.365910530090332

Token 68: ' cost' (ID: 3097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3396495282649994
    2. '
' → logprob: -2.0896494388580322
    3. '    
' → logprob: -2.0896494388580322
    4. '   
' → logprob: -4.964649677276611
    5. 'color' → logprob: -5.589649677276611
    6. '  
' → logprob: -5.964649677276611
    7. 'counts' → logprob: -5.964649677276611
    8. '```' → logprob: -6.089649677276611
    9. '<|end|>' → logprob: -6.214649677276611
    10. 'count' → logprob: -6.339649677276611

Token 69: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3897934556007385
    2. ' =' → logprob: -1.1397933959960938
    3. '=' → logprob: -6.139793395996094
    4. '_' → logprob: -8.389793395996094
    5. ' ' → logprob: -8.764793395996094
    6. '_s' → logprob: -8.889793395996094
    7. '[' → logprob: -9.264793395996094
    8. '_counts' → logprob: -10.264793395996094
    9. '_matrix' → logprob: -10.639793395996094
    10. '_sum' → logprob: -11.139793395996094

Token 70: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.022121945396065712
    2. 'np' → logprob: -3.8971219062805176
    3. ' [' → logprob: -6.897121906280518
    4. ' [[' → logprob: -9.022122383117676
    5. '[np' → logprob: -9.022122383117676
    6. ' ' → logprob: -9.147122383117676
    7. ' [[[' → logprob: -9.147122383117676
    8. '[' → logprob: -10.022122383117676
    9. ' [[]' → logprob: -10.897122383117676
    10. '0' → logprob: -11.022122383117676

Token 71: '.zeros' (ID: 29146)
  Prédit: '.zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zeros' → logprob: -0.005626800935715437
    2. '.array' → logprob: -5.380626678466797
    3. '.' → logprob: -7.130626678466797
    4. '.ndarray' → logprob: -9.505626678466797
    5. ' zeros' → logprob: -9.630626678466797
    6. 'array' → logprob: -11.005626678466797
    7. '.full' → logprob: -11.005626678466797
    8. 'zeros' → logprob: -11.755626678466797
    9. '.ones' → logprob: -12.130626678466797
    10. ' .' → logprob: -12.130626678466797

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005989946890622377
    2. '(' → logprob: -5.130990028381348
    3. '(C' → logprob: -10.380990028381348
    4. '(N' → logprob: -10.755990028381348
    5. '(shape' → logprob: -12.630990028381348
    6. '([' → logprob: -13.880990028381348
    7. '(int' → logprob: -14.005990028381348
    8. '_like' → logprob: -14.130990028381348
    9. '```' → logprob: -14.505990028381348
    10. '(
' → logprob: -14.630990028381348

Token 73: '3' (ID: 18)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10315337032079697
    2. '3' → logprob: -2.3531534671783447
    3. ' C' → logprob: -7.353153228759766
    4. '(C' → logprob: -7.478153228759766
    5. ')' → logprob: -7.603153228759766
    6. '4' → logprob: -7.978153228759766
    7. ',' → logprob: -8.228153228759766
    8. ' ' → logprob: -8.728153228759766
    9. '(' → logprob: -8.978153228759766
    10. ',C' → logprob: -9.353153228759766

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009882692247629166
    2. ' ,' → logprob: -7.375988483428955
    3. ',C' → logprob: -8.000988006591797
    4. 'C' → logprob: -11.500988006591797
    5. '，' → logprob: -12.625988006591797
    6. ',N' → logprob: -13.125988006591797
    7. ',
' → logprob: -13.625988006591797
    8. ')' → logprob: -13.750988006591797
    9. ' ' → logprob: -13.875988006591797
    10. '*C' → logprob: -14.000988006591797

Token 75: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.004243416246026754
    2. ' C' → logprob: -6.25424337387085
    3. 'N' → logprob: -6.50424337387085
    4. '100' → logprob: -8.379243850708008
    5. '3' → logprob: -8.504243850708008
    6. ' ' → logprob: -9.129243850708008
    7. '   ' → logprob: -9.254243850708008
    8. '  ' → logprob: -10.004243850708008
    9. '2' → logprob: -10.504243850708008
    10. '10' → logprob: -10.879243850708008

Token 76: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07612413913011551
    2. '))' → logprob: -2.7011241912841797
    3. '),' → logprob: -5.57612419128418
    4. ' ,' → logprob: -6.57612419128418
    5. '+' → logprob: -7.45112419128418
    6. ' ))' → logprob: -8.70112419128418
    7. ' +' → logprob: -9.57612419128418
    8. ')' → logprob: -9.70112419128418
    9. ',C' → logprob: -10.70112419128418
    10. ' ),' → logprob: -11.32612419128418

Token 77: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.352213591337204
    2. ' dtype' → logprob: -1.2272136211395264
    3. ')' → logprob: -6.352213382720947
    4. ' np' → logprob: -6.602213382720947
    5. 'int' → logprob: -8.227213859558105
    6. ' int' → logprob: -8.477213859558105
    7. 'np' → logprob: -9.102213859558105
    8. ' ' → logprob: -9.977213859558105
    9. ' )' → logprob: -11.602213859558105
    10. '1' → logprob: -11.727213859558105

Token 78: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.0138115668669343
    2. '=np' → logprob: -4.7638115882873535
    3. '=' → logprob: -5.2638115882873535
    4. 'int' → logprob: -12.763811111450195
    5. '='' → logprob: -13.388811111450195
    6. '=i' → logprob: -13.638811111450195
    7. '=
' → logprob: -14.513811111450195
    8. '=in' → logprob: -14.638811111450195
    9. '=pd' → logprob: -14.888811111450195
    10. '=n' → logprob: -15.263811111450195

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1756367712223437e-05
    2. ' )' → logprob: -12.000011444091797
    3. '))' → logprob: -13.000011444091797
    4. ')
' → logprob: -13.375011444091797
    5. ',' → logprob: -15.000011444091797
    6. ',)' → logprob: -15.250011444091797
    7. ')`' → logprob: -15.500011444091797
    8. ')
' → logprob: -15.500011444091797
    9. '),' → logprob: -15.750011444091797
    10. ')

' → logprob: -16.250011444091797

Token 80: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8478800654411316
    2. 'for' → logprob: -0.8478800654411316
    3. '   ' → logprob: -1.9728801250457764
    4. '    
' → logprob: -6.222879886627197
    5. '
' → logprob: -7.097879886627197
    6. ')' → logprob: -7.597879886627197
    7. ' 
' → logprob: -8.222880363464355
    8. ' ' → logprob: -8.347880363464355
    9. '   
' → logprob: -9.347880363464355
    10. '    ' → logprob: -9.347880363464355

Token 81: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.659093976020813
    2. 'for' → logprob: -1.159093976020813
    3. '   ' → logprob: -1.784093976020813
    4. ' ' → logprob: -7.784093856811523
    5. '    
' → logprob: -8.784093856811523
    6. ')' → logprob: -9.034093856811523
    7. '  ' → logprob: -9.159093856811523
    8. '    ' → logprob: -9.534093856811523
    9. '   
' → logprob: -10.659093856811523
    10. ' 
' → logprob: -11.034093856811523

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26535922288894653
    2. 's' → logprob: -1.5153591632843018
    3. '_' → logprob: -4.765359401702881
    4. '=' → logprob: -6.015359401702881
    5. '0' → logprob: -6.890359401702881
    6. ' ' → logprob: -7.515359401702881
    7. '[' → logprob: -8.265358924865723
    8. '_colors' → logprob: -9.765358924865723
    9. '   ' → logprob: -10.140358924865723
    10. '  ' → logprob: -10.140358924865723

Token 83: ' np' (ID: 5374)
  Prédit: '[np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[np' → logprob: -0.9953055381774902
    2. 'np' → logprob: -1.1203055381774902
    3. '[' → logprob: -1.6203055381774902
    4. ' np' → logprob: -2.4953055381774902
    5. '[[' → logprob: -4.24530553817749
    6. ' [' → logprob: -4.87030553817749
    7. '0' → logprob: -7.37030553817749
    8. ' [[[' → logprob: -7.62030553817749
    9. '[{' → logprob: -8.120306015014648
    10. '(np' → logprob: -8.870306015014648

Token 84: '.zeros' (ID: 29146)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.8548199534416199
    2. '.zeros' → logprob: -0.8548199534416199
    3. 't' → logprob: -2.9798200130462646
    4. '.' → logprob: -3.3548200130462646
    5. '.array' → logprob: -4.1048197746276855
    6. 'nt' → logprob: -4.1048197746276855
    7. 'np' → logprob: -5.3548197746276855
    8. ' array' → logprob: -5.6048197746276855
    9. 'zeros' → logprob: -5.7298197746276855
    10. 'rray' → logprob: -6.6048197746276855

Token 85: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004517819732427597
    2. '(int' → logprob: -6.129518032073975
    3. '(' → logprob: -6.379518032073975
    4. ' (' → logprob: -8.254517555236816
    5. ' ((' → logprob: -8.379517555236816
    6. '<int' → logprob: -10.504517555236816
    7. '(shape' → logprob: -10.754517555236816
    8. ' ' → logprob: -10.879517555236816
    9. '   ' → logprob: -11.129517555236816
    10. ')((' → logprob: -11.254517555236816

Token 86: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8308953046798706
    2. '3' → logprob: -1.7058953046798706
    3. '(C' → logprob: -1.7058953046798706
    4. 'C' → logprob: -2.08089542388916
    5. '(N' → logprob: -2.83089542388916
    6. 'N' → logprob: -4.58089542388916
    7. ')' → logprob: -5.83089542388916
    8. ' (' → logprob: -7.20589542388916
    9. ',' → logprob: -7.45589542388916
    10. '   ' → logprob: -7.70589542388916

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019769940990954638
    2. ' ,' → logprob: -8.750197410583496
    3. ',C' → logprob: -10.375197410583496
    4. ',
' → logprob: -13.375197410583496
    5. 'C' → logprob: -13.500197410583496
    6. '),' → logprob: -13.875197410583496
    7. ',

' → logprob: -14.250197410583496
    8. ' ' → logprob: -14.875197410583496
    9. ',c' → logprob: -15.000197410583496
    10. ' C' → logprob: -15.062697410583496

Token 88: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.05060775950551033
    2. ' C' → logprob: -3.050607681274414
    3. 'N' → logprob: -7.550607681274414
    4. ')' → logprob: -7.550607681274414
    5. ' ' → logprob: -7.800607681274414
    6. '   ' → logprob: -8.175607681274414
    7. '  ' → logprob: -10.050607681274414
    8. ' N' → logprob: -10.800607681274414
    9. ',' → logprob: -11.113107681274414
    10. '1' → logprob: -11.175607681274414

Token 89: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0002120038407156244
    2. ' ),' → logprob: -8.750211715698242
    3. '))' → logprob: -10.750211715698242
    4. ')' → logprob: -10.875211715698242
    5. ',' → logprob: -11.875211715698242
    6. ',),' → logprob: -13.000211715698242
    7. '+' → logprob: -13.500211715698242
    8. ''),' → logprob: -14.750211715698242
    9. ' ' → logprob: -15.000211715698242
    10. '>,' → logprob: -15.125211715698242

Token 90: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.6780233979225159
    2. 'int' → logprob: -1.553023338317871
    3. ' dtype' → logprob: -1.553023338317871
    4. ' int' → logprob: -2.803023338317871
    5. ')' → logprob: -4.803023338317871
    6. '),' → logprob: -9.428023338317871
    7. ' )' → logprob: -9.428023338317871
    8. '))' → logprob: -10.053023338317871
    9. ' ' → logprob: -10.053023338317871
    10. '   ' → logprob: -11.803023338317871

Token 91: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.0002728985855355859
    2. '=' → logprob: -8.375272750854492
    3. '=np' → logprob: -10.750272750854492
    4. 'int' → logprob: -11.125272750854492
    5. '=i' → logprob: -12.250272750854492
    6. ' int' → logprob: -14.750272750854492
    7. '=
' → logprob: -16.125272750854492
    8. ' =' → logprob: -16.125272750854492
    9. '	int' → logprob: -16.375272750854492
    10. '=

' → logprob: -16.500272750854492

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.470901229884475e-05
    2. ')
' → logprob: -9.50008487701416
    3. ' )' → logprob: -12.00008487701416
    4. ')

' → logprob: -13.25008487701416
    5. ')
' → logprob: -13.62508487701416
    6. '))' → logprob: -15.50008487701416
    7. '   ' → logprob: -15.50008487701416
    8. ')`' → logprob: -15.50008487701416
    9. ')

' → logprob: -16.750083923339844
    10. '),' → logprob: -17.625083923339844

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4457704424858093
    2. '
' → logprob: -2.195770502090454
    3. ' for' → logprob: -2.320770502090454
    4. '    
' → logprob: -2.945770502090454
    5. 'for' → logprob: -3.195770502090454
    6. '<|end|>' → logprob: -4.195770263671875
    7. ')' → logprob: -4.320770263671875
    8. ' 
' → logprob: -4.570770263671875
    9. '  
' → logprob: -4.945770263671875
    10. '   
' → logprob: -5.820770263671875

Token 94: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27107372879981995
    2. ' for' → logprob: -1.8960736989974976
    3. 'for' (adapté à ' for') → logprob: -2.521073818206787
    4. '
' → logprob: -5.521073818206787
    5. '    
' → logprob: -6.146073818206787
    6. '  ' → logprob: -8.771073341369629
    7. '    ' → logprob: -9.021073341369629
    8. ' ' → logprob: -9.396073341369629
    9. '   
' → logprob: -9.521073341369629
    10. '' → logprob: -9.896073341369629

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013095251051709056
    2. ' r' → logprob: -7.626309394836426
    3. ' ' → logprob: -8.001309394836426
    4. 'i' → logprob: -8.251309394836426
    5. ' _' → logprob: -9.126309394836426
    6. ' y' → logprob: -10.251309394836426
    7. '_' → logprob: -10.626309394836426
    8. ' x' → logprob: -11.001309394836426
    9. ' j' → logprob: -11.876309394836426
    10. ' c' → logprob: -12.501309394836426

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026438236236572266
    2. 'in' → logprob: -3.6514382362365723
    3. ' ' → logprob: -9.776437759399414
    4. ',' → logprob: -9.901437759399414
    5. ' ,' → logprob: -11.151437759399414
    6. '   ' → logprob: -12.651437759399414
    7. 'range' → logprob: -12.651437759399414
    8. ' i' → logprob: -13.026437759399414
    9. '	in' → logprob: -13.151437759399414
    10. '  ' → logprob: -13.651437759399414

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00023178798437584192
    2. 'range' → logprob: -8.375231742858887
    3. '(range' → logprob: -14.625231742858887
    4. ' xrange' → logprob: -15.000231742858887
    5. '	range' → logprob: -15.000231742858887
    6. ' ' → logprob: -16.250232696533203
    7. ')' → logprob: -17.375232696533203
    8. '```' → logprob: -17.750232696533203
    9. '<|end|>' → logprob: -18.000232696533203
    10. ' ran' → logprob: -18.500232696533203

Token 98: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001511408481746912
    2. '(' → logprob: -6.501511573791504
    3. '(n' → logprob: -12.126511573791504
    4. '(len' → logprob: -13.876511573791504
    5. ' (' → logprob: -14.501511573791504
    6. '(C' → logprob: -14.626511573791504
    7. 'N' → logprob: -14.626511573791504
    8. '(
' → logprob: -14.626511573791504
    9. ')' → logprob: -16.251510620117188
    10. ' N' → logprob: -16.376510620117188

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006316631333902478
    2. '):
' → logprob: -7.500631809234619
    3. ':' → logprob: -10.125631332397461
    4. ')' → logprob: -10.625631332397461
    5. '*' → logprob: -12.375631332397461
    6. ' ):' → logprob: -13.000631332397461
    7. ')):' → logprob: -13.375631332397461
    8. '**' → logprob: -13.750631332397461
    9. '   ' → logprob: -14.375631332397461
    10. '+' → logprob: -14.625631332397461

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009469304233789444
    2. '   ' → logprob: -5.384469509124756
    3. ' for' → logprob: -5.509469509124756
    4. ' ' → logprob: -8.009469032287598
    5. '    ' → logprob: -8.884469032287598
    6. '<|end|>' → logprob: -8.884469032287598
    7. ',' → logprob: -10.259469032287598
    8. 'for' → logprob: -10.509469032287598
    9. ':' → logprob: -10.634469032287598
    10. '     ' → logprob: -10.884469032287598

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08936143666505814
    2. 'for' (adapté à ' for') → logprob: -2.4643614292144775
    3. '   ' → logprob: -7.839361667633057
    4. ' ' → logprob: -10.964361190795898
    5. '	for' → logprob: -11.964361190795898
    6. '       ' → logprob: -13.339361190795898
    7. '    ' → logprob: -13.964361190795898
    8. '```' → logprob: -14.214361190795898
    9. '  ' → logprob: -14.339361190795898
    10. '
' → logprob: -15.339361190795898

Token 102: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6403243541717529
    2. ' j' → logprob: -0.7653243541717529
    3. ' N' → logprob: -5.515324592590332
    4. 'N' → logprob: -6.015324592590332
    5. ' ' → logprob: -7.515324592590332
    6. '   ' → logprob: -8.015324592590332
    7. ' range' → logprob: -9.140324592590332
    8. '    ' → logprob: -9.390324592590332
    9. '  ' → logprob: -9.890324592590332
    10. 'range' → logprob: -10.265324592590332

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03941205143928528
    2. 'in' → logprob: -3.289412021636963
    3. ' ' → logprob: -6.664412021636963
    4. '	in' → logprob: -10.539412498474121
    5. '    ' → logprob: -10.664412498474121
    6. '   ' → logprob: -11.164412498474121
    7. '+' → logprob: -11.664412498474121
    8. '  ' → logprob: -12.289412498474121
    9. ' i' → logprob: -12.789412498474121
    10. 'In' → logprob: -13.164412498474121

Token 104: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6935108304023743
    2. 'range' → logprob: -0.6935108304023743
    3. '(range' → logprob: -7.943511009216309
    4. '(' → logprob: -12.443511009216309
    5. ' (' → logprob: -12.693511009216309
    6. ' in' → logprob: -14.943511009216309
    7. ' ' → logprob: -15.068511009216309
    8. '	range' → logprob: -15.193511009216309
    9. '   ' → logprob: -15.443511009216309
    10. ')' → logprob: -15.568511009216309

Token 105: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003091254911851138
    2. '(' → logprob: -8.125308990478516
    3. '(i' → logprob: -12.375308990478516
    4. ' (' → logprob: -12.375308990478516
    5. '(n' → logprob: -13.500308990478516
    6. 'N' → logprob: -13.875308990478516
    7. '(len' → logprob: -14.500308990478516
    8. '(int' → logprob: -15.125308990478516
    9. '   ' → logprob: -15.250308990478516
    10. '(C' → logprob: -15.375308990478516

Token 106: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20169320702552795
    2. '):
' → logprob: -1.7016931772232056
    3. '):
' → logprob: -8.451693534851074
    4. '       ' → logprob: -10.451693534851074
    5. '   ' → logprob: -11.076693534851074
    6. ':' → logprob: -11.701693534851074
    7. '):

' → logprob: -12.076693534851074
    8. ')' → logprob: -12.201693534851074
    9. '           ' → logprob: -14.201693534851074
    10. ' ):' → logprob: -14.451693534851074

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4803803563117981
    2. ':' → logprob: -1.3553802967071533
    3. '       ' → logprob: -2.3553802967071533
    4. '        ' → logprob: -4.480380535125732
    5. ',' → logprob: -5.355380535125732
    6. ' ' → logprob: -5.855380535125732
    7. '<|end|>' → logprob: -6.105380535125732
    8. ' :' → logprob: -6.355380535125732
    9. '):' → logprob: -6.730380535125732
    10. '            ' → logprob: -7.230380535125732

Token 108: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9386990070343018
    2. ' c' → logprob: -1.8136990070343018
    3. ' t' → logprob: -2.3136990070343018
    4. ' color' → logprob: -2.3136990070343018
    5. 'x' → logprob: -2.8136990070343018
    6. ' x' → logprob: -2.9386990070343018
    7. 'c' → logprob: -3.5636990070343018
    8. ' k' → logprob: -3.5636990070343018
    9. 't' → logprob: -3.9386990070343018
    10. 'color' → logprob: -4.313698768615723

Token 109: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.028239866718649864
    2. '[count' → logprob: -3.9032399654388428
    3. '[(' → logprob: -5.403239727020264
    4. '[' → logprob: -6.028239727020264
    5. '[int' → logprob: -8.028240203857422
    6. '[np' → logprob: -9.403240203857422
    7. '[[' → logprob: -9.653240203857422
    8. '[color' → logprob: -9.903240203857422
    9. '[input' → logprob: -10.153240203857422
    10. '[c' → logprob: -10.903240203857422

Token 110: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012112011201679707
    2. '(i' → logprob: -4.512112140655518
    3. ' (' → logprob: -7.387112140655518
    4. ' i' → logprob: -7.762112140655518
    5. ' ' → logprob: -12.51211166381836
    6. '(' → logprob: -12.51211166381836
    7. '   ' → logprob: -12.63711166381836
    8. 'j' → logprob: -12.88711166381836
    9. '_i' → logprob: -13.51211166381836
    10. '[i' → logprob: -13.88711166381836

Token 111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23761440813541412
    2. '+j' → logprob: -1.737614393234253
    3. ' +' → logprob: -3.362614393234253
    4. '%' → logprob: -7.612614631652832
    5. '[j' → logprob: -8.737614631652832
    6. '[' → logprob: -9.362614631652832
    7. ' ' → logprob: -10.237614631652832
    8. '<|end|>' → logprob: -10.237614631652832
    9. '+i' → logprob: -10.362614631652832
    10. ')' → logprob: -11.237614631652832

Token 112: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000804745068307966
    2. ' j' → logprob: -7.125804901123047
    3. '	j' → logprob: -15.875804901123047
    4. ' ' → logprob: -16.625804901123047
    5. '   ' → logprob: -16.875804901123047
    6. '<|end|>' → logprob: -18.500804901123047
    7. '$j' → logprob: -18.500804901123047
    8. '(j' → logprob: -18.625804901123047
    9. '_j' → logprob: -18.875804901123047
    10. ')' → logprob: -19.000804901123047

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014264225959777832
    2. ')%' → logprob: -4.264264106750488
    3. ' )' → logprob: -9.514264106750488
    4. '%' → logprob: -11.514264106750488
    5. ')]' → logprob: -12.389264106750488
    6. ')][' → logprob: -12.764264106750488
    7. ')
' → logprob: -13.764264106750488
    8. '[' → logprob: -13.889264106750488
    9. ')#' → logprob: -14.014264106750488
    10. ']' → logprob: -14.264264106750488

Token 114: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.297859251499176
    2. ')%' → logprob: -1.6728591918945312
    3. '%' → logprob: -2.7978591918945312
    4. ' %' → logprob: -4.797859191894531
    5. ' )' → logprob: -7.922859191894531
    6. '<|end|>' → logprob: -9.172859191894531
    7. '%)' → logprob: -9.922859191894531
    8. ']%' → logprob: -10.297859191894531
    9. ' ' → logprob: -10.547859191894531
    10. '0' → logprob: -10.797859191894531

Token 115: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -15.875096321105957
    4. '   ' → logprob: -16.875097274780273
    5. '  ' → logprob: -17.875097274780273
    6. ')' → logprob: -18.625097274780273
    7. '۳' → logprob: -18.625097274780273
    8. ' three' → logprob: -19.000097274780273
    9. '(' → logprob: -19.000097274780273
    10. '-' → logprob: -19.375097274780273

Token 116: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.375
    4. '۳' → logprob: -18.5
    5. '৩' → logprob: -19.375
    6. '３' → logprob: -19.5
    7. '३' → logprob: -19.625
    8. ')' → logprob: -20.0625
    9. '   ' → logprob: -20.125
    10. '  ' → logprob: -20.4375

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09373772889375687
    2. ',' → logprob: -2.593737840652466
    3. ')][' → logprob: -4.593737602233887
    4. ')[' → logprob: -6.218737602233887
    5. ']' → logprob: -6.593737602233887
    6. ' ][' → logprob: -8.218737602233887
    7. '],' → logprob: -8.843737602233887
    8. ']][' → logprob: -8.843737602233887
    9. '[' → logprob: -8.843737602233887
    10. ')' → logprob: -8.843737602233887

Token 118: 'board' (ID: 3935)
  Prédit: 'board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.020584510639309883
    2. ' board' → logprob: -3.8955845832824707
    3. '(board' → logprob: -10.145584106445312
    4. '	board' → logprob: -14.270584106445312
    5. '   ' → logprob: -14.520584106445312
    6. ' ' → logprob: -14.520584106445312
    7. ' (' → logprob: -15.020584106445312
    8. '(' → logprob: -15.020584106445312
    9. '-board' → logprob: -15.270584106445312
    10. '0' → logprob: -15.645584106445312

Token 119: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.523948907968588e-05
    2. '[j' → logprob: -10.875035285949707
    3. ' [' → logprob: -11.375035285949707
    4. '][' → logprob: -13.375035285949707
    5. '[' → logprob: -13.875035285949707
    6. '```' → logprob: -14.250035285949707
    7. ')[' → logprob: -14.375035285949707
    8. '[I' → logprob: -14.625035285949707
    9. '[
' → logprob: -15.750035285949707
    10. '-' → logprob: -16.87503433227539

Token 120: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011638450436294079
    2. '][' → logprob: -5.136638641357422
    3. '[j' → logprob: -5.386638641357422
    4. ' [' → logprob: -7.011638641357422
    5. '[' → logprob: -9.261638641357422
    6. '-' → logprob: -9.886638641357422
    7. '[I' → logprob: -11.136638641357422
    8. ' ][' → logprob: -11.636638641357422
    9. ']' → logprob: -11.761638641357422
    10. 'i' → logprob: -12.136638641357422

Token 121: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.123899558791891e-05
    2. '[j' → logprob: -9.87507152557373
    3. ' j' → logprob: -10.87507152557373
    4. '(j' → logprob: -15.37507152557373
    5. '```' → logprob: -15.37507152557373
    6. '-' → logprob: -16.000070571899414
    7. '	j' → logprob: -16.125070571899414
    8. '   ' → logprob: -16.500070571899414
    9. '][' → logprob: -17.000070571899414
    10. ',j' → logprob: -17.750070571899414

Token 122: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4617893397808075
    2. ']' → logprob: -1.3367893695831299
    3. '-' → logprob: -2.33678936958313
    4. ']-' → logprob: -4.961789131164551
    5. ' ]' → logprob: -6.086789131164551
    6. ')' → logprob: -6.961789131164551
    7. ' ' → logprob: -9.58678913116455
    8. '[' → logprob: -9.83678913116455
    9. ']]' → logprob: -9.96178913116455
    10. ' )' → logprob: -10.83678913116455

Token 123: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933379173278809
    2. ' -' → logprob: -0.6933379173278809
    3. ']' → logprob: -8.693338394165039
    4. ')' → logprob: -12.068338394165039
    5. ' ' → logprob: -12.318338394165039
    6. ' ]' → logprob: -12.568338394165039
    7. ']-' → logprob: -13.068338394165039
    8. ' -=' → logprob: -13.443338394165039
    9. ')]' → logprob: -13.943338394165039
    10. '1' → logprob: -14.193338394165039

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024768433067947626
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.127476692199707
    4. '<|end|>' → logprob: -16.002477645874023
    5. '```' → logprob: -16.002477645874023
    6. '  ' → logprob: -16.502477645874023
    7. '`' → logprob: -17.814977645874023
    8. ')' → logprob: -18.002477645874023
    9. '１' → logprob: -18.064977645874023
    10. '-' → logprob: -18.502477645874023

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -9.500076293945312
    3. '<|end|>' → logprob: -14.000076293945312
    4. '```' → logprob: -15.562576293945312
    5. '   ' → logprob: -15.750076293945312
    6. '`' → logprob: -16.500076293945312
    7. '１' → logprob: -17.000076293945312
    8. '.' → logprob: -17.062576293945312
    9. 'to' → logprob: -17.187576293945312

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0033400217071175575
    2. ']+=' → logprob: -5.753340244293213
    3. ' ]' → logprob: -8.753339767456055
    4. ']+' → logprob: -13.253339767456055
    5. ')]' → logprob: -14.003339767456055
    6. ')' → logprob: -14.003339767456055
    7. '`]' → logprob: -14.878339767456055
    8. '"]' → logprob: -16.003339767456055
    9. '+]' → logprob: -16.003339767456055
    10. '']' → logprob: -16.128339767456055

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006775288376957178
    2. ' +=' → logprob: -5.256775379180908
    3. '+' → logprob: -6.506775379180908
    4. ']+=' → logprob: -10.13177490234375
    5. '++' → logprob: -13.13177490234375
    6. '+='' → logprob: -13.63177490234375
    7. '+=(' → logprob: -13.75677490234375
    8. '<|end|>' → logprob: -14.00677490234375
    9. '+="' → logprob: -14.75677490234375
    10. '```' → logprob: -14.88177490234375

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -20.250001907348633
    5. '１' → logprob: -22.750001907348633
    6. '۱' → logprob: -23.250001907348633
    7. '  ' → logprob: -23.375001907348633
    8. '0' → logprob: -23.625001907348633
    9. '100' → logprob: -23.750001907348633
    10. '           ' → logprob: -24.000001907348633

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -19.125
    5. '۱' → logprob: -20.75
    6. '１' → logprob: -21.375
    7. '
' → logprob: -22.0
    8. '<|end|>' → logprob: -22.125
    9. '0' → logprob: -22.375
    10. '100' → logprob: -22.375

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06929140537977219
    2. '<|end|>' → logprob: -3.319291353225708
    3. 'for' → logprob: -4.444291591644287
    4. ' for' → logprob: -4.569291591644287
    5. '   ' → logprob: -5.069291591644287
    6. '<|end|>' → logprob: -7.569291591644287
    7. '    
' → logprob: -7.819291591644287
    8. '  
' → logprob: -7.819291591644287
    9. ' 
' → logprob: -8.444291114807129
    10. ' ' → logprob: -8.694291114807129

Token 131: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.306152880191803
    2. ' for' → logprob: -1.5561528205871582
    3. '
' → logprob: -3.431152820587158
    4. '   ' → logprob: -3.931152820587158
    5. '```' → logprob: -7.806152820587158
    6. '<|end|>' → logprob: -8.931153297424316
    7. ')' → logprob: -9.431153297424316
    8. '	for' → logprob: -9.556153297424316
    9. '    
' → logprob: -10.181153297424316
    10. ' ' → logprob: -10.806153297424316

Token 132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011800091713666916
    2. ' for' → logprob: -4.511800289154053
    3. '   ' → logprob: -7.261800289154053
    4. ')' → logprob: -11.261799812316895
    5. '
' → logprob: -11.261799812316895
    6. '```' → logprob: -12.011799812316895
    7. '	for' → logprob: -12.136799812316895
    8. '    
' → logprob: -12.761799812316895
    9. '#' → logprob: -13.136799812316895
    10. ' ' → logprob: -13.261799812316895

Token 133: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8584544658660889
    2. ' i' → logprob: -1.7334544658660889
    3. 'c' → logprob: -1.9834544658660889
    4. 'i' → logprob: -2.233454465866089
    5. 'k' → logprob: -2.858454465866089
    6. ' k' → logprob: -2.858454465866089
    7. ' color' → logprob: -4.608454704284668
    8. ' x' → logprob: -4.608454704284668
    9. 'x' → logprob: -4.858454704284668
    10. 'color' → logprob: -5.733454704284668

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003381722839549184
    2. 'in' → logprob: -5.753381729125977
    3. ',' → logprob: -9.003381729125977
    4. ' ' → logprob: -10.378381729125977
    5. 'range' → logprob: -11.003381729125977
    6. ' ,' → logprob: -11.628381729125977
    7. ' range' → logprob: -12.253381729125977
    8. 'C' → logprob: -13.003381729125977
    9. '  ' → logprob: -13.128381729125977
    10. '   ' → logprob: -13.253381729125977

Token 135: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4287126064300537
    2. 'range' → logprob: -1.0537126064300537
    3. ' ' → logprob: -12.428712844848633
    4. '   ' → logprob: -13.428712844848633
    5. '(range' → logprob: -13.803712844848633
    6. '  ' → logprob: -13.803712844848633
    7. ')' → logprob: -14.303712844848633
    8. '	range' → logprob: -14.678712844848633
    9. '```' → logprob: -14.678712844848633
    10. 'rang' → logprob: -14.803712844848633

Token 136: '(' (ID: 7)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.1428762674331665
    2. '(' → logprob: -2.017876148223877
    3. '(N' → logprob: -8.767876625061035
    4. '(len' → logprob: -11.642876625061035
    5. '(range' → logprob: -11.642876625061035
    6. '(c' → logprob: -11.767876625061035
    7. 'C' → logprob: -12.017876625061035
    8. '((' → logprob: -12.892876625061035
    9. 'range' → logprob: -13.267876625061035
    10. '(D' → logprob: -13.517876625061035

Token 137: '3' (ID: 18)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.14564765989780426
    2. '3' → logprob: -2.0206477642059326
    3. 'N' → logprob: -5.8956475257873535
    4. ' C' → logprob: -9.145648002624512
    5. '(C' → logprob: -10.645648002624512
    6. ' ' → logprob: -10.895648002624512
    7. 'len' → logprob: -11.645648002624512
    8. '   ' → logprob: -11.645648002624512
    9. '(' → logprob: -11.645648002624512
    10. ')' → logprob: -12.020648002624512

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28442078828811646
    2. '):
' → logprob: -1.4094207286834717
    3. ':' → logprob: -6.534420967102051
    4. '   ' → logprob: -7.534420967102051
    5. ' ):' → logprob: -7.534420967102051
    6. ')' → logprob: -7.909420967102051
    7. ',' → logprob: -8.90942096710205
    8. ' ):
' → logprob: -9.53442096710205
    9. ' ' → logprob: -10.03442096710205
    10. ':
' → logprob: -10.15942096710205

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009057454881258309
    2. ' for' → logprob: -7.875905513763428
    3. '   ' → logprob: -8.000905990600586
    4. '<|end|>' → logprob: -9.125905990600586
    5. ':' → logprob: -10.750905990600586
    6. ',' → logprob: -11.125905990600586
    7. 'for' → logprob: -11.125905990600586
    8. '
' → logprob: -12.000905990600586
    9. ' ' → logprob: -12.563405990600586
    10. '<|end|>' → logprob: -12.688405990600586

Token 140: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5013235211372375
    2. ' for' → logprob: -1.0013234615325928
    3. '   ' → logprob: -3.8763234615325928
    4. '       ' → logprob: -5.126323699951172
    5. ' ' → logprob: -9.626323699951172
    6. 'range' → logprob: -9.751323699951172
    7. ' range' → logprob: -10.251323699951172
    8. '	for' → logprob: -10.876323699951172
    9. ' cost' → logprob: -11.751323699951172
    10. 'cost' → logprob: -12.001323699951172

Token 141: ' j' (ID: 441)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4376540184020996
    2. 'k' → logprob: -1.5626540184020996
    3. 'j' → logprob: -2.0626540184020996
    4. 'x' → logprob: -5.3126540184021
    5. ' c' → logprob: -5.5626540184021
    6. 'color' → logprob: -5.5626540184021
    7. 'd' → logprob: -6.4376540184021
    8. ' j' → logprob: -7.0626540184021
    9. 'l' → logprob: -7.4376540184021
    10. ' k' → logprob: -7.5626540184021

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02056664600968361
    2. 'in' → logprob: -3.895566701889038
    3. 'range' → logprob: -11.145566940307617
    4. ' ' → logprob: -12.270566940307617
    5. '   ' → logprob: -13.145566940307617
    6. ' range' → logprob: -13.395566940307617
    7. ',' → logprob: -14.895566940307617
    8. '    ' → logprob: -15.145566940307617
    9. '<|end|>' → logprob: -15.145566940307617
    10. '0' → logprob: -15.645566940307617

Token 143: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868725001811981
    2. ' range' → logprob: -1.1368725299835205
    3. '(range' → logprob: -14.011872291564941
    4. ' ' → logprob: -15.386872291564941
    5. '	range' → logprob: -15.511872291564941
    6. '   ' → logprob: -16.636873245239258
    7. ')' → logprob: -17.136873245239258
    8. 'rang' → logprob: -17.386873245239258
    9. '_range' → logprob: -18.011873245239258
    10. '  ' → logprob: -18.011873245239258

Token 144: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0018169092945754528
    2. '(' → logprob: -7.376816749572754
    3. '(range' → logprob: -7.376816749572754
    4. 'range' → logprob: -7.876816749572754
    5. ' range' → logprob: -9.251816749572754
    6. ' (' → logprob: -9.376816749572754
    7. '(c' → logprob: -13.626816749572754
    8. ' in' → logprob: -14.626816749572754
    9. 'C' → logprob: -14.626816749572754
    10. ')' → logprob: -14.626816749572754

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07897009700536728
    2. '):
' → logprob: -2.578970193862915
    3. '   ' → logprob: -10.453969955444336
    4. ':' → logprob: -10.953969955444336
    5. '       ' → logprob: -11.578969955444336
    6. ')' → logprob: -12.078969955444336
    7. ' ):' → logprob: -12.078969955444336
    8. '):
' → logprob: -12.328969955444336
    9. ']:' → logprob: -13.328969955444336
    10. '           ' → logprob: -13.328969955444336

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3013283908367157
    2. '       ' → logprob: -1.426328420639038
    3. ' cost' → logprob: -4.551328182220459
    4. 'cost' → logprob: -4.801328182220459
    5. ' for' → logprob: -7.926328182220459
    6. '               ' → logprob: -8.551328659057617
    7. '   ' → logprob: -8.551328659057617
    8. '<|end|>' → logprob: -8.926328659057617
    9. 'for' → logprob: -9.176328659057617
    10. '
' → logprob: -10.676328659057617

Token 147: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.7947222590446472
    2. 'cost' (adapté à ' cost') → logprob: -0.7947222590446472
    3. 'for' → logprob: -3.294722318649292
    4. '           ' → logprob: -3.419722318649292
    5. ' for' → logprob: -4.169722080230713
    6. '   ' → logprob: -5.419722080230713
    7. '       ' → logprob: -5.794722080230713
    8. '
' → logprob: -6.294722080230713
    9. '               ' → logprob: -6.419722080230713
    10. ' ' → logprob: -9.544722557067871

Token 148: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09306127578020096
    2. '[:,' → logprob: -2.9680612087249756
    3. '[(' → logprob: -3.5930612087249756
    4. '[' → logprob: -4.968061447143555
    5. '[:]' → logprob: -6.593061447143555
    6. ' +=' → logprob: -7.343061447143555
    7. '[:' → logprob: -8.718061447143555
    8. ' [' → logprob: -9.093061447143555
    9. ' [(' → logprob: -9.093061447143555
    10. '[j' → logprob: -9.093061447143555

Token 149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34815242886543274
    2. '][' → logprob: -1.9731523990631104
    3. '][:' → logprob: -2.0981523990631104
    4. ',' → logprob: -3.8481523990631104
    5. ',j' → logprob: -5.3481526374816895
    6. '[:]' → logprob: -6.4731526374816895
    7. '[j' → logprob: -6.5981526374816895
    8. ',:' → logprob: -6.5981526374816895
    9. ']+=' → logprob: -6.9731526374816895
    10. ']=' → logprob: -8.098152160644531

Token 150: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8623740673065186
    2. '+=' → logprob: -1.1123740673065186
    3. ' +=' → logprob: -1.7373740673065186
    4. '[:]' → logprob: -3.2373740673065186
    5. ' =' → logprob: -3.6123740673065186
    6. '[' → logprob: -5.737374305725098
    7. ']+=' → logprob: -6.737374305725098
    8. '[j' → logprob: -6.737374305725098
    9. '[:' → logprob: -8.237374305725098
    10. ']' → logprob: -8.737374305725098

Token 151: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0062878066673874855
    2. ' D' → logprob: -5.131287574768066
    3. 'count' → logprob: -8.631287574768066
    4. '(D' → logprob: -9.256287574768066
    5. '   ' → logprob: -10.631287574768066
    6. 'np' → logprob: -11.256287574768066
    7. '           ' → logprob: -11.256287574768066
    8. '(' → logprob: -12.006287574768066
    9. 'cost' → logprob: -12.131287574768066
    10. ' (' → logprob: -12.381287574768066

Token 152: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03053402155637741
    2. 'j' → logprob: -3.655534029006958
    3. '[:,' → logprob: -5.905533790588379
    4. '[' → logprob: -7.280533790588379
    5. ' j' → logprob: -8.155533790588379
    6. '[i' → logprob: -8.655533790588379
    7. ' [' → logprob: -9.280533790588379
    8. '   ' → logprob: -9.655533790588379
    9. ',j' → logprob: -9.780533790588379
    10. '(j' → logprob: -10.280533790588379

Token 153: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8754164576530457
    2. ')' → logprob: -1.0004165172576904
    3. '])' → logprob: -1.8754165172576904
    4. ']' → logprob: -3.1254165172576904
    5. '][' → logprob: -5.125416278839111
    6. ',:)' → logprob: -5.625416278839111
    7. ',)' → logprob: -6.500416278839111
    8. '[' → logprob: -6.750416278839111
    9. ',:' → logprob: -7.000416278839111
    10. ')])' → logprob: -7.250416278839111

Token 154: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3306910991668701
    2. '<|end|>' → logprob: -1.3306910991668701
    3. '[j' → logprob: -4.830691337585449
    4. '[
' → logprob: -6.080691337585449
    5. '[i' → logprob: -6.705691337585449
    6. ')' → logprob: -6.955691337585449
    7. '[np' → logprob: -6.955691337585449
    8. ' *' → logprob: -7.455691337585449
    9. '<|end|>' → logprob: -8.20569133758545
    10. ' ' → logprob: -8.33069133758545

Token 155: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0263415165245533
    2. ' count' → logprob: -3.651341438293457
    3. '[count' → logprob: -10.401341438293457
    4. '(count' → logprob: -11.776341438293457
    5. ' ' → logprob: -14.526341438293457
    6. 'int' → logprob: -14.526341438293457
    7. '$count' → logprob: -14.526341438293457
    8. '	count' → logprob: -14.651341438293457
    9. '.count' → logprob: -15.026341438293457
    10. '<count' → logprob: -15.401341438293457

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.209963900502771e-05
    2. '[j' → logprob: -9.750092506408691
    3. '[(' → logprob: -11.250092506408691
    4. '[' → logprob: -11.625092506408691
    5. '<|end|>' → logprob: -12.875092506408691
    6. '(i' → logprob: -13.000092506408691
    7. 's' → logprob: -13.375092506408691
    8. '[
' → logprob: -14.000092506408691
    9. ' [' → logprob: -14.000092506408691
    10. '[[' → logprob: -14.375092506408691

Token 157: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02212800644338131
    2. '[j' → logprob: -4.397128105163574
    3. ',j' → logprob: -4.897128105163574
    4. ',' → logprob: -6.397128105163574
    5. ']' → logprob: -8.772128105163574
    6. ' ][' → logprob: -9.147128105163574
    7. ',[' → logprob: -10.022128105163574
    8. ' ,' → logprob: -10.522128105163574
    9. '[' → logprob: -10.772128105163574
    10. '[i' → logprob: -11.022128105163574

Token 158: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001664717128733173
    2. ' j' → logprob: -8.750166893005371
    3. ' ' → logprob: -12.875166893005371
    4. '   ' → logprob: -13.250166893005371
    5. ']' → logprob: -13.750166893005371
    6. '
' → logprob: -14.375166893005371
    7. ',j' → logprob: -14.875166893005371
    8. '[j' → logprob: -15.000166893005371
    9. '  ' → logprob: -15.250166893005371
    10. ':j' → logprob: -15.375166893005371

Token 159: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16656595468521118
    2. '   ' → logprob: -2.5415658950805664
    3. '\n' → logprob: -2.9165658950805664
    4. '  
' → logprob: -5.166565895080566
    5. '    
' → logprob: -5.166565895080566
    6. '(
' → logprob: -5.916565895080566
    7. '(' → logprob: -6.916565895080566
    8. ' 
' → logprob: -7.166565895080566
    9. ' ' → logprob: -7.416565895080566
    10. '   
' → logprob: -7.666565895080566

Token 161: ' ans' (ID: 3345)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0354396104812622
    2. '   ' → logprob: -1.7854396104812622
    3. '
' → logprob: -2.1604394912719727
    4. '(' → logprob: -2.2854394912719727
    5. ')' → logprob: -2.4104394912719727
    6. ' ' → logprob: -2.6604394912719727
    7. '\' → logprob: -3.7854394912719727
    8. 'return' → logprob: -4.035439491271973
    9. '(
' → logprob: -4.535439491271973
    10. ' return' → logprob: -4.660439491271973

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004319804720580578
    2. '=' → logprob: -7.750432014465332
    3. '_' → logprob: -14.625432014465332
    4. ' ' → logprob: -14.625432014465332
    5. 's' → logprob: -16.250431060791016
    6. ' =
' → logprob: -16.500431060791016
    7. '  ' → logprob: -17.000431060791016
    8. 'space' → logprob: -17.375431060791016
    9. '.' → logprob: -17.500431060791016
    10. ',' → logprob: -17.500431060791016

Token 163: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6444491744041443
    2. 'float' → logprob: -1.269449234008789
    3. 'np' → logprob: -2.019449234008789
    4. 'int' → logprob: -3.269449234008789
    5. ' np' → logprob: -4.519449234008789
    6. '1' → logprob: -5.394449234008789
    7. ' ' → logprob: -5.394449234008789
    8. ' float' → logprob: -5.894449234008789
    9. '100' → logprob: -8.144449234008789
    10. ' int' → logprob: -9.394449234008789

Token 164: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.8961017202818766e-05
    2. '1' → logprob: -10.125059127807617
    3. '[' → logprob: -11.875059127807617
    4. '()' → logprob: -12.375059127807617
    5. '(np' → logprob: -13.500059127807617
    6. '_max' → logprob: -13.750059127807617
    7. '_' → logprob: -14.250059127807617
    8. ' (' → logprob: -14.250059127807617
    9. '32' → logprob: -14.500059127807617
    10. '(float' → logprob: -14.625059127807617

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -15.250000953674316
    4. '2' → logprob: -16.500001907348633
    5. '3' → logprob: -16.750001907348633
    6. '10' → logprob: -17.000001907348633
    7. '"' → logprob: -17.125001907348633
    8. '[' → logprob: -17.250001907348633
    9. '```' → logprob: -17.375001907348633
    10. 'np' → logprob: -17.500001907348633

Token 166: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00021569548698607832
    2. '0' → logprob: -8.875215530395508
    3. '<<' → logprob: -9.625215530395508
    4. ' <<' → logprob: -11.750215530395508
    5. '_' → logprob: -14.125215530395508
    6. ')' → logprob: -15.125215530395508
    7. '(' → logprob: -15.625215530395508
    8. '000' → logprob: -16.000215530395508
    9. '[' → logprob: -16.125215530395508
    10. '00' → logprob: -16.500215530395508

Token 167: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.18716493248939514
    2. '10' → logprob: -2.1871650218963623
    3. '15' → logprob: -2.9371650218963623
    4. '18' → logprob: -5.562164783477783
    5. '+' → logprob: -7.562164783477783
    6. '12' → logprob: -7.562164783477783
    7. '16' → logprob: -8.562165260314941
    8. '11' → logprob: -8.562165260314941
    9. '7' → logprob: -9.937165260314941
    10. '14' → logprob: -10.187165260314941

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003945063799619675
    2. ' )' → logprob: -5.6289448738098145
    3. ')
' → logprob: -8.253945350646973
    4. '+' → logprob: -10.253945350646973
    5. '
' → logprob: -10.503945350646973
    6. ' )
' → logprob: -11.378945350646973
    7. ' 
' → logprob: -13.128945350646973
    8. '+)' → logprob: -13.378945350646973
    9. ' +' → logprob: -13.753945350646973
    10. ' ' → logprob: -13.878945350646973

Token 169: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.959021270275116
    2. ' for' → logprob: -1.0840213298797607
    3. '   ' → logprob: -1.4590213298797607
    4. '
' → logprob: -3.3340213298797607
    5. '    
' → logprob: -5.459021091461182
    6. ' 
' → logprob: -5.584021091461182
    7. '  
' → logprob: -6.709021091461182
    8. '   
' → logprob: -7.709021091461182
    9. ' ' → logprob: -8.20902156829834
    10. '  ' → logprob: -9.08402156829834

Token 170: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0180082321166992
    2. '   ' → logprob: -1.1430082321166992
    3. ' for' → logprob: -1.1430082321166992
    4. '
' → logprob: -8.1430082321167
    5. ' ' → logprob: -8.6430082321167
    6. '    
' → logprob: -8.7680082321167
    7. 'from' → logprob: -8.8930082321167
    8. '  ' → logprob: -9.6430082321167
    9. ' from' → logprob: -9.7680082321167
    10. ' 
' → logprob: -10.3930082321167

Token 171: ' i' (ID: 575)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.250855952501297
    2. ' c' → logprob: -2.0008559226989746
    3. 'x' → logprob: -3.2508559226989746
    4. 'i' → logprob: -3.7508559226989746
    5. 'a' → logprob: -4.125855922698975
    6. ' x' → logprob: -5.750855922698975
    7. ' i' → logprob: -6.125855922698975
    8. ' a' → logprob: -7.500855922698975
    9. 'color' → logprob: -7.625855922698975
    10. 'k' → logprob: -8.250856399536133

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00561186159029603
    2. 'in' → logprob: -5.255611896514893
    3. ' ' → logprob: -8.630611419677734
    4. '1' → logprob: -9.380611419677734
    5. 'n' → logprob: -10.755611419677734
    6. '0' → logprob: -10.880611419677734
    7. ',' → logprob: -11.130611419677734
    8. '  ' → logprob: -11.380611419677734
    9. '```' → logprob: -11.380611419677734
    10. 'range' → logprob: -11.755611419677734

Token 173: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408145666122437
    2. 'range' → logprob: -0.9740814566612244
    3. '(range' → logprob: -12.849081039428711
    4. ' ' → logprob: -14.474081039428711
    5. '	range' → logprob: -14.474081039428711
    6. '   ' → logprob: -14.724081039428711
    7. '  ' → logprob: -16.59908103942871
    8. ' xrange' → logprob: -16.84908103942871
    9. '_range' → logprob: -17.34908103942871
    10. '```' → logprob: -17.47408103942871

Token 174: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.038048144429922104
    2. '(' → logprob: -3.288048028945923
    3. '(c' → logprob: -13.163047790527344
    4. ' (' → logprob: -13.288047790527344
    5. 'C' → logprob: -13.913047790527344
    6. ' ' → logprob: -14.288047790527344
    7. ' C' → logprob: -14.413047790527344
    8. '((' → logprob: -14.913047790527344
    9. '(
' → logprob: -15.538047790527344
    10. '3' → logprob: -15.913047790527344

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3135271370410919
    2. '):' → logprob: -1.3135271072387695
    3. ')' → logprob: -9.18852710723877
    4. '-' → logprob: -9.56352710723877
    5. '   ' → logprob: -9.93852710723877
    6. '):
' → logprob: -11.18852710723877
    7. ' ):
' → logprob: -11.81352710723877
    8. '+' → logprob: -12.18852710723877
    9. ' ):' → logprob: -12.18852710723877
    10. ' -' → logprob: -12.81352710723877

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02293270267546177
    2. ' for' → logprob: -4.272932529449463
    3. '<|end|>' → logprob: -5.147932529449463
    4. ' ' → logprob: -6.272932529449463
    5. '   ' → logprob: -7.772932529449463
    6. 'for' → logprob: -8.397933006286621
    7. '    ' → logprob: -9.647933006286621
    8. '	   ' → logprob: -9.897933006286621
    9. '	for' → logprob: -10.272933006286621
    10. '	' → logprob: -10.272933006286621

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20703625679016113
    2. ' for' → logprob: -1.7070362567901611
    3. '       ' → logprob: -5.207036018371582
    4. '   ' → logprob: -9.457036018371582
    5. '	for' → logprob: -9.957036018371582
    6. '<|end|>' → logprob: -13.457036018371582
    7. ' ' → logprob: -13.957036018371582
    8. 'if' → logprob: -15.082036018371582
    9. '    ' → logprob: -15.332036018371582
    10. '           ' → logprob: -15.707036018371582

Token 178: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6355541348457336
    2. ' j' → logprob: -0.7605541348457336
    3. ' i' → logprob: -6.760554313659668
    4. ' range' → logprob: -7.135554313659668
    5. 'i' → logprob: -7.510554313659668
    6. '   ' → logprob: -9.135554313659668
    7. 'range' → logprob: -9.510554313659668
    8. ' C' → logprob: -9.635554313659668
    9. 'C' → logprob: -10.010554313659668
    10. '    ' → logprob: -10.260554313659668

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006357124075293541
    2. 'in' → logprob: -7.375635623931885
    3. ' ' → logprob: -12.250636100769043
    4. ' i' → logprob: -13.625636100769043
    5. 'range' → logprob: -13.875636100769043
    6. ' range' → logprob: -14.375636100769043
    7. ' (' → logprob: -14.750636100769043
    8. '   ' → logprob: -15.250636100769043
    9. '(' → logprob: -15.375636100769043
    10. '(i' → logprob: -15.750636100769043

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326693296432495
    2. ' range' → logprob: -1.3132669925689697
    3. '(range' → logprob: -12.81326675415039
    4. ' ' → logprob: -13.18826675415039
    5. '   ' → logprob: -15.31326675415039
    6. '  ' → logprob: -15.43826675415039
    7. '	range' → logprob: -16.68826675415039
    8. '    ' → logprob: -18.18826675415039
    9. '_range' → logprob: -18.31326675415039
    10. 'i' → logprob: -18.31326675415039

Token 181: '(C' (ID: 5559)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5765202641487122
    2. '(C' → logprob: -0.8265202641487122
    3. ' (' → logprob: -8.451519966125488
    4. '(range' → logprob: -8.826519966125488
    5. 'range' → logprob: -9.451519966125488
    6. '(' → logprob: -9.576519966125488
    7. ' range' → logprob: -10.326519966125488
    8. 'i' → logprob: -11.451519966125488
    9. ' i' → logprob: -11.451519966125488
    10. '(c' → logprob: -12.076519966125488

Token 182: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11058806627988815
    2. '):
' → logprob: -2.3605880737304688
    3. '+' → logprob: -4.735588073730469
    4. ':' → logprob: -7.360588073730469
    5. '           ' → logprob: -7.860588073730469
    6. 'if' → logprob: -8.860588073730469
    7. '       ' → logprob: -9.485588073730469
    8. ')' → logprob: -9.860588073730469
    9. ' if' → logprob: -10.110588073730469
    10. ' ):' → logprob: -10.235588073730469

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010359871201217175
    2. '<|end|>' → logprob: -5.385359764099121
    3. '               ' → logprob: -6.260359764099121
    4. ' if' → logprob: -6.385359764099121
    5. ' ' → logprob: -6.885359764099121
    6. '            ' → logprob: -7.510359764099121
    7. '                               ' → logprob: -8.885359764099121
    8. '                           ' → logprob: -9.760359764099121
    9. '	       ' → logprob: -10.135359764099121
    10. '                   ' → logprob: -10.135359764099121

Token 184: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24286316335201263
    2. '           ' → logprob: -2.492863178253174
    3. ' if' → logprob: -2.492863178253174
    4. '            ' → logprob: -3.492863178253174
    5. ' ' → logprob: -5.367863178253174
    6. '                ' → logprob: -5.617863178253174
    7. '                               ' → logprob: -5.617863178253174
    8. 'if' (adapté à ' if') → logprob: -5.742863178253174
    9. '<|end|>' → logprob: -6.492863178253174
    10. '                   ' → logprob: -7.742863178253174

Token 185: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759465098381042
    2. ' i' → logprob: -0.8259465098381042
    3. 'j' → logprob: -12.450946807861328
    4. ' j' → logprob: -12.950946807861328
    5. '   ' → logprob: -15.200946807861328
    6. ' ' → logprob: -15.450946807861328
    7. '    ' → logprob: -15.950946807861328
    8. '	i' → logprob: -16.075946807861328
    9. '```' → logprob: -16.700946807861328
    10. '           ' → logprob: -17.325946807861328

Token 186: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3539096415042877
    2. '!=' → logprob: -1.2289096117019653
    3. ' ==' → logprob: -5.853909492492676
    4. '==' → logprob: -5.978909492492676
    5. ' ' → logprob: -11.728909492492676
    6. '<|end|>' → logprob: -11.978909492492676
    7. '=' → logprob: -12.103909492492676
    8. ')' → logprob: -12.228909492492676
    9. ')!=' → logprob: -12.228909492492676
    10. ' ' → logprob: -12.353909492492676

Token 187: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019295861711725593
    2. ' j' → logprob: -6.251929759979248
    3. ' ' → logprob: -14.00192928314209
    4. '           ' → logprob: -16.626930236816406
    5. '	j' → logprob: -17.001930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '<|end|>' → logprob: -17.376930236816406
    8. '  ' → logprob: -18.251930236816406
    9. '
' → logprob: -18.626930236816406
    10. '    ' → logprob: -18.876930236816406

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4224349856376648
    2. '               ' → logprob: -1.1724350452423096
    3. ':
' → logprob: -3.4224350452423096
    4. 'continue' → logprob: -6.5474348068237305
    5. ' continue' → logprob: -7.2974348068237305
    6. ' or' → logprob: -10.04743480682373
    7. '	continue' → logprob: -10.04743480682373
    8. '           ' → logprob: -10.29743480682373
    9. '_continue' → logprob: -10.92243480682373
    10. '                               ' → logprob: -11.67243480682373

Token 189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001222508290084079
    2. ' continue' → logprob: -9.6251220703125
    3. 'continue' → logprob: -10.0001220703125
    4. '                   ' → logprob: -13.0001220703125
    5. '           ' → logprob: -13.0001220703125
    6. ':
' → logprob: -13.8751220703125
    7. '                       ' → logprob: -14.2501220703125
    8. ',' → logprob: -14.5001220703125
    9. '                               ' → logprob: -14.5001220703125
    10. '   ' → logprob: -14.5001220703125

Token 190: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4360218644142151
    2. ' continue' → logprob: -1.4360218048095703
    3. 'continue' (adapté à ' continue') → logprob: -2.1860218048095703
    4. '                   ' → logprob: -5.93602180480957
    5. '   ' → logprob: -8.68602180480957
    6. '           ' → logprob: -8.81102180480957
    7. '	continue' → logprob: -9.18602180480957
    8. '                       ' → logprob: -9.68602180480957
    9. '                               ' → logprob: -11.93602180480957
    10. '       ' → logprob: -12.18602180480957

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06629695743322372
    2. '               ' → logprob: -3.6912970542907715
    3. '<|end|>' → logprob: -3.6912970542907715
    4. '
' → logprob: -4.6912970542907715
    5. '<|end|>' → logprob: -6.3162970542907715
    6. '            
' → logprob: -6.5662970542907715
    7. '  
' → logprob: -8.191296577453613
    8. '                   ' → logprob: -8.191296577453613
    9. '            ' → logprob: -8.691296577453613
    10. '       ' → logprob: -8.691296577453613

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5770772099494934
    2. '               ' → logprob: -0.8270772099494934
    3. '<|end|>' → logprob: -7.702077388763428
    4. '       ' → logprob: -8.07707691192627
    5. '                   ' → logprob: -9.57707691192627
    6. ' for' → logprob: -9.82707691192627
    7. '                       ' → logprob: -9.95207691192627
    8. '	       ' → logprob: -10.32707691192627
    9. '<|end|>' → logprob: -10.32707691192627
    10. ' ' → logprob: -10.45207691192627

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005353174638003111
    2. ' for' → logprob: -5.505352973937988
    3. '               ' → logprob: -6.755352973937988
    4. '           ' → logprob: -9.255352973937988
    5. '	for' → logprob: -11.630352973937988
    6. '   ' → logprob: -13.755352973937988
    7. '            ' → logprob: -14.380352973937988
    8. '              ' → logprob: -14.505352973937988
    9. '	           ' → logprob: -14.505352973937988
    10. '       ' → logprob: -14.755352973937988

Token 194: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0013338132994249463
    2. ' k' → logprob: -6.626333713531494
    3. 'l' → logprob: -12.626334190368652
    4. 'x' → logprob: -13.876334190368652
    5. ' ' → logprob: -14.001334190368652
    6. '   ' → logprob: -14.626334190368652
    7. '```' → logprob: -15.251334190368652
    8. 'c' → logprob: -15.251334190368652
    9. 't' → logprob: -15.376334190368652
    10. 'h' → logprob: -15.376334190368652

Token 195: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003179975086823106
    2. 'in' → logprob: -5.753180027008057
    3. ' ' → logprob: -14.253179550170898
    4. 'range' → logprob: -14.628179550170898
    5. 'import' → logprob: -14.753179550170898
    6. '   ' → logprob: -15.628179550170898
    7. '```' → logprob: -15.628179550170898
    8. 'In' → logprob: -15.878179550170898
    9. '<|end|>' → logprob: -15.878179550170898
    10. '    ' → logprob: -16.6281795501709

Token 196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859713837504387
    2. ' range' → logprob: -3.0485970973968506
    3. '(range' → logprob: -11.54859733581543
    4. '	range' → logprob: -17.04859733581543
    5. '   ' → logprob: -18.29859733581543
    6. ' ' → logprob: -18.54859733581543
    7. '_range' → logprob: -18.67359733581543
    8. '  ' → logprob: -19.42359733581543
    9. 'ange' → logprob: -19.42359733581543
    10. 'rang' → logprob: -19.67359733581543

Token 197: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. '           ' → logprob: -15.750000953674316
    4. 'C' → logprob: -16.75
    5. '(c' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. '(
' → logprob: -19.5
    8. '               ' → logprob: -19.875
    9. '       ' → logprob: -20.375
    10. ' (' → logprob: -20.875

Token 198: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4758516252040863
    2. '):' → logprob: -0.9758516550064087
    3. ')' → logprob: -7.850851535797119
    4. '):
' → logprob: -7.975851535797119
    5. '               ' → logprob: -8.475852012634277
    6. '           ' → logprob: -8.600852012634277
    7. '<|end|>' → logprob: -8.600852012634277
    8. '):

' → logprob: -9.225852012634277
    9. ' k' → logprob: -9.725852012634277
    10. 'k' → logprob: -10.100852012634277

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007045690901577473
    2. '<|end|>' → logprob: -5.132045745849609
    3. ' if' → logprob: -7.632045745849609
    4. '                               ' → logprob: -8.50704574584961
    5. '			' → logprob: -9.38204574584961
    6. '                ' → logprob: -9.63204574584961
    7. '              ' → logprob: -9.75704574584961
    8. '           ' → logprob: -10.13204574584961
    9. 'if' → logprob: -10.38204574584961
    10. '```' → logprob: -10.88204574584961

Token 200: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15343987941741943
    2. ' if' → logprob: -2.278439998626709
    3. 'if' (adapté à ' if') → logprob: -3.653439998626709
    4. '                   ' → logprob: -4.403439998626709
    5. '   ' → logprob: -7.778439998626709
    6. '                ' → logprob: -7.778439998626709
    7. '           ' → logprob: -8.52843952178955
    8. ' ' → logprob: -8.52843952178955
    9. '                       ' → logprob: -8.90343952178955
    10. '                               ' → logprob: -9.77843952178955

Token 201: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2276812046766281
    2. ' i' → logprob: -1.7276811599731445
    3. 'k' → logprob: -3.7276811599731445
    4. ' k' → logprob: -6.3526811599731445
    5. 'j' → logprob: -9.477681159973145
    6. '(i' → logprob: -10.477681159973145
    7. ' j' → logprob: -10.852681159973145
    8. ' (' → logprob: -11.852681159973145
    9. ' ' → logprob: -13.477681159973145
    10. '(k' → logprob: -14.602681159973145

Token 202: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16022758185863495
    2. ' ==' → logprob: -1.9102275371551514
    3. '==
' → logprob: -13.28522777557373
    4. 'in' → logprob: -15.03522777557373
    5. '!=' → logprob: -15.16022777557373
    6. ']==' → logprob: -15.28522777557373
    7. '```' → logprob: -15.53522777557373
    8. '=' → logprob: -15.78522777557373
    9. ' in' → logprob: -16.035226821899414
    10. ')==' → logprob: -16.035226821899414

Token 203: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005246568005532026
    2. ' i' → logprob: -5.255246639251709
    3. 'j' → logprob: -11.38024616241455
    4. ' ' → logprob: -14.38024616241455
    5. '
' → logprob: -15.50524616241455
    6. '	i' → logprob: -15.75524616241455
    7. ' j' → logprob: -15.88024616241455
    8. 'k' → logprob: -16.130247116088867
    9. '   ' → logprob: -17.005247116088867
    10. ' ' → logprob: -17.130247116088867

Token 204: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02328135259449482
    2. 'or' → logprob: -3.7732813358306885
    3. '               ' → logprob: -10.64828109741211
    4. '                   ' → logprob: -12.27328109741211
    5. '	or' → logprob: -13.52328109741211
    6. 'k' → logprob: -13.64828109741211
    7. ')' → logprob: -14.02328109741211
    8. 'and' → logprob: -14.39828109741211
    9. '                ' → logprob: -14.64828109741211
    10. 'to' → logprob: -15.02328109741211

Token 205: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5759463906288147
    2. ' k' → logprob: -0.8259463906288147
    3. 'j' → logprob: -12.950946807861328
    4. ' ' → logprob: -13.575946807861328
    5. ' ' → logprob: -14.075946807861328
    6. '	k' → logprob: -14.325946807861328
    7. ' j' → logprob: -14.450946807861328
    8. '   ' → logprob: -15.325946807861328
    9. '    ' → logprob: -15.575946807861328
    10. '  ' → logprob: -15.700946807861328

Token 206: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759426355361938
    2. '==' → logprob: -0.8259426355361938
    3. '==
' → logprob: -12.825942993164062
    4. '=' → logprob: -15.200942993164062
    5. ' ==
' → logprob: -16.200942993164062
    6. ']==' → logprob: -16.200942993164062
    7. ' ' → logprob: -17.450942993164062
    8. ' ' → logprob: -17.575942993164062
    9. '===' → logprob: -17.700942993164062
    10. '==(' → logprob: -17.950942993164062

Token 207: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005931878462433815
    2. ' j' → logprob: -5.130931854248047
    3. '	j' → logprob: -13.505931854248047
    4. '<|end|>' → logprob: -13.630931854248047
    5. '   ' → logprob: -16.005931854248047
    6. '[j' → logprob: -16.380931854248047
    7. '$j' → logprob: -16.505931854248047
    8. ' ' → logprob: -16.630931854248047
    9. '           ' → logprob: -16.630931854248047
    10. '_j' → logprob: -16.880931854248047

Token 208: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15293267369270325
    2. ':' → logprob: -2.277932643890381
    3. '                   ' → logprob: -3.402932643890381
    4. '               ' → logprob: -5.652932643890381
    5. 'continue' → logprob: -6.277932643890381
    6. ' continue' → logprob: -8.027933120727539
    7. '                       ' → logprob: -9.027933120727539
    8. '	continue' → logprob: -9.527933120727539
    9. ' or' → logprob: -10.777933120727539
    10. '           ' → logprob: -11.152933120727539

Token 209: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002228406025096774
    2. ' continue' → logprob: -6.627228260040283
    3. 'continue' → logprob: -8.127228736877441
    4. '               ' → logprob: -8.252228736877441
    5. '                       ' → logprob: -8.502228736877441
    6. '<|end|>' → logprob: -9.877228736877441
    7. '           ' → logprob: -11.002228736877441
    8. '                  ' → logprob: -11.502228736877441
    9. '   ' → logprob: -11.627228736877441
    10. '                 ' → logprob: -11.877228736877441

Token 210: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4974147081375122
    2. '                   ' → logprob: -0.9974147081375122
    3. ' continue' → logprob: -4.372414588928223
    4. '                       ' → logprob: -4.747414588928223
    5. '               ' → logprob: -6.997414588928223
    6. '   ' → logprob: -7.497414588928223
    7. '	continue' → logprob: -8.622414588928223
    8. '           ' → logprob: -10.122414588928223
    9. '       ' → logprob: -10.497414588928223
    10. '
' → logprob: -11.372414588928223

Token 211: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30064427852630615
    2. '                   ' → logprob: -1.5506442785263062
    3. '<|end|>' → logprob: -3.5506443977355957
    4. '           ' → logprob: -5.425644397735596
    5. '                       ' → logprob: -5.800644397735596
    6. ':' → logprob: -6.300644397735596
    7. '<|end|>' → logprob: -6.550644397735596
    8. ',' → logprob: -6.925644397735596
    9. '       ' → logprob: -6.925644397735596
    10. '                ' → logprob: -7.175644397735596

Token 212: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1780366599559784
    2. '               ' → logprob: -1.9280366897583008
    3. '       ' → logprob: -5.178036689758301
    4. '                       ' → logprob: -5.428036689758301
    5. '                ' → logprob: -6.178036689758301
    6. '           ' → logprob: -6.303036689758301
    7. '<|end|>' → logprob: -6.553036689758301
    8. '   ' → logprob: -7.678036689758301
    9. '                    ' → logprob: -7.803036689758301
    10. '                    
' → logprob: -8.0530366897583

Token 213: ' ans' (ID: 3345)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.603222668170929
    2. ' total' → logprob: -1.7282226085662842
    3. ' ans' → logprob: -2.728222608566284
    4. 'total' → logprob: -2.853222608566284
    5. ' cost' → logprob: -3.228222608566284
    6. 'temp' → logprob: -3.728222608566284
    7. ' temp' → logprob: -3.978222608566284
    8. '           ' → logprob: -4.103222846984863
    9. '               ' → logprob: -4.353222846984863
    10. 'cost' → logprob: -4.978222846984863

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474101185798645
    2. '=' → logprob: -0.974101185798645
    3. '>' → logprob: -11.349101066589355
    4. '   ' → logprob: -12.724101066589355
    5. ')' → logprob: -12.974101066589355
    6. ' >' → logprob: -12.974101066589355
    7. '    ' → logprob: -13.724101066589355
    8. ' ' → logprob: -13.974101066589355
    9. '```' → logprob: -14.349101066589355
    10. ' =
' → logprob: -15.099101066589355

Token 215: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3868716359138489
    2. ' min' → logprob: -1.136871576309204
    3. '	min' → logprob: -15.636871337890625
    4. '[min' → logprob: -15.761871337890625
    5. '(min' → logprob: -16.136871337890625
    6. '.min' → logprob: -16.386871337890625
    7. ',min' → logprob: -17.261871337890625
    8. '=min' → logprob: -17.511871337890625
    9. 'int' → logprob: -17.761871337890625
    10. '```' → logprob: -17.761871337890625

Token 216: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0007111206650733948
    2. '(' → logprob: -7.250710964202881
    3. '(cost' → logprob: -14.125711441040039
    4. '(
' → logprob: -15.250711441040039
    5. '(answer' → logprob: -16.12571144104004
    6. ' (' → logprob: -16.75071144104004
    7. '(

' → logprob: -17.62571144104004
    8. '	ans' → logprob: -18.25071144104004
    9. '(an' → logprob: -18.50071144104004
    10. 'ans' → logprob: -18.75071144104004

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027901383582502604
    2. ' ,' → logprob: -6.2527899742126465
    3. ',c' → logprob: -7.1277899742126465
    4. '(cost' → logprob: -10.377790451049805
    5. 'cost' → logprob: -11.502790451049805
    6. ',
' → logprob: -11.627790451049805
    7. ' cost' → logprob: -12.627790451049805
    8. ',int' → logprob: -12.627790451049805
    9. ',

' → logprob: -15.502790451049805
    10. ' ans' → logprob: -15.752790451049805

Token 218: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.038083501160144806
    2. ' cost' → logprob: -3.288083553314209
    3. '               ' → logprob: -11.28808307647705
    4. '                   ' → logprob: -12.41308307647705
    5. '(cost' → logprob: -12.41308307647705
    6. 'np' → logprob: -12.53808307647705
    7. ' np' → logprob: -12.91308307647705
    8. '                ' → logprob: -12.91308307647705
    9. '              ' → logprob: -13.16308307647705
    10. '                 ' → logprob: -13.53808307647705

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008571469807066023
    2. '0' → logprob: -7.125857353210449
    3. ' [' → logprob: -11.12585735321045
    4. ')[' → logprob: -11.25085735321045
    5. ')' → logprob: -11.62585735321045
    6. '[i' → logprob: -11.75085735321045
    7. '[
' → logprob: -12.62585735321045
    8. ' ' → logprob: -13.00085735321045
    9. '```' → logprob: -13.87585735321045
    10. '1' → logprob: -14.87585735321045

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.472211968386546e-05
    2. ' ' → logprob: -9.500094413757324
    3. '[' → logprob: -10.875094413757324
    4. '][' → logprob: -14.875094413757324
    5. '   ' → logprob: -15.750094413757324
    6. '```' → logprob: -15.875094413757324
    7. ')' → logprob: -16.25009536743164
    8. '1' → logprob: -17.31259536743164
    9. '00' → logprob: -17.37509536743164
    10. ')[' → logprob: -17.43759536743164

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020978933200240135
    2. '[i' → logprob: -3.8959789276123047
    3. ',i' → logprob: -8.020978927612305
    4. ',' → logprob: -10.395978927612305
    5. 'i' → logprob: -10.395978927612305
    6. ' ][' → logprob: -10.895978927612305
    7. ']' → logprob: -11.645978927612305
    8. ' [' → logprob: -11.895978927612305
    9. '[' → logprob: -12.770978927612305
    10. ' i' → logprob: -12.895978927612305

Token 222: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.9153885558771435e-06
    2. ' i' → logprob: -12.125005722045898
    3. '[i' → logprob: -15.500005722045898
    4. '   ' → logprob: -15.500005722045898
    5. '
' → logprob: -18.0000057220459
    6. ')i' → logprob: -18.5000057220459
    7. 'k' → logprob: -18.6250057220459
    8. '][' → logprob: -18.7500057220459
    9. ' ' → logprob: -19.2500057220459
    10. ']' → logprob: -19.5000057220459

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019621781539171934
    2. ' ]' → logprob: -6.876962184906006
    3. ']+' → logprob: -7.001962184906006
    4. '+' → logprob: -11.126961708068848
    5. ' +' → logprob: -12.626961708068848
    6. '+]' → logprob: -14.251961708068848
    7. '])' → logprob: -17.001962661743164
    8. ']
' → logprob: -17.126962661743164
    9. '-' → logprob: -17.126962661743164
    10. ')' → logprob: -17.251962661743164

Token 224: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018150296062231064
    2. '+' → logprob: -4.018150329589844
    3. ' +
' → logprob: -16.018150329589844
    4. ' ' → logprob: -16.143150329589844
    5. '+c' → logprob: -17.018150329589844
    6. '+
' → logprob: -17.518150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '＋' → logprob: -18.518150329589844
    9. '   ' → logprob: -19.143150329589844
    10. '    ' → logprob: -19.143150329589844

Token 225: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.00861468818038702
    2. 'cost' → logprob: -4.758614540100098
    3. '    ' → logprob: -16.633615493774414
    4. ' ' → logprob: -17.633615493774414
    5. 'Cost' → logprob: -17.883615493774414
    6. '(cost' → logprob: -18.008615493774414
    7. '_cost' → logprob: -18.508615493774414
    8. ' kost' → logprob: -18.633615493774414
    9. ' costs' → logprob: -19.383615493774414
    10. '   ' → logprob: -19.633615493774414

Token 226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. '2' → logprob: -14.87500286102295
    5. ' [' → logprob: -15.75000286102295
    6. ')[' → logprob: -16.375003814697266
    7. '][' → logprob: -16.750003814697266
    8. '3' → logprob: -17.250003814697266
    9. '0' → logprob: -17.375003814697266
    10. ' ' → logprob: -17.375003814697266

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -16.125
    4. '[' → logprob: -18.625
    5. '           ' → logprob: -18.625
    6. '```' → logprob: -18.875
    7. '  ' → logprob: -19.875
    8. '                   ' → logprob: -20.125
    9. '    ' → logprob: -20.25
    10. '
' → logprob: -20.375

Token 228: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007425647345371544
    2. '[j' → logprob: -7.250742435455322
    3. ']' → logprob: -10.87574291229248
    4. '[k' → logprob: -12.00074291229248
    5. ' ][' → logprob: -12.50074291229248
    6. '>[' → logprob: -14.12574291229248
    7. '}[' → logprob: -14.37574291229248
    8. '[' → logprob: -14.50074291229248
    9. ')[' → logprob: -15.00074291229248
    10. '"][' → logprob: -15.00074291229248

Token 229: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3902033970225602e-05
    2. 'k' → logprob: -11.250014305114746
    3. ' j' → logprob: -14.375014305114746
    4. '[j' → logprob: -15.250014305114746
    5. '
' → logprob: -17.00001335144043
    6. '```' → logprob: -17.00001335144043
    7. 'jk' → logprob: -17.75001335144043
    8. ']' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.25001335144043
    10. '	j' → logprob: -18.37501335144043

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11922972649335861
    2. ' +' → logprob: -2.619229793548584
    3. '+' → logprob: -3.494229793548584
    4. ']+' → logprob: -4.744229793548584
    5. ' ]' → logprob: -7.744229793548584
    6. '[' → logprob: -11.369229316711426
    7. ')' → logprob: -11.744229316711426
    8. ' ' → logprob: -12.244229316711426
    9. '])' → logprob: -13.494229316711426
    10. '```' → logprob: -13.994229316711426

Token 231: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.029752571135759354
    2. '+' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.904752731323242
    4. '[' → logprob: -14.654752731323242
    5. '```' → logprob: -15.904752731323242
    6. '               ' → logprob: -16.029752731323242
    7. ' +
' → logprob: -16.154752731323242
    8. ')' → logprob: -16.529752731323242
    9. ' ' → logprob: -16.654752731323242
    10. '                ' → logprob: -16.654752731323242

Token 232: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.023245595395565033
    2. ' cost' → logprob: -3.7732455730438232
    3. '(cost' → logprob: -17.648244857788086
    4. '   ' → logprob: -18.148244857788086
    5. '           ' → logprob: -18.773244857788086
    6. '```' → logprob: -19.523244857788086
    7. '
' → logprob: -19.648244857788086
    8. '    ' → logprob: -19.773244857788086
    9. 'code' → logprob: -19.898244857788086
    10. '               ' → logprob: -20.023244857788086

Token 233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.44574936106801e-05
    2. '[k' → logprob: -10.12507438659668
    3. ' ' → logprob: -10.75007438659668
    4. ' [' → logprob: -11.87507438659668
    5. '][' → logprob: -13.12507438659668
    6. '```' → logprob: -13.37507438659668
    7. '0' → logprob: -14.62507438659668
    8. '2' → logprob: -14.87507438659668
    9. ')[' → logprob: -15.00007438659668
    10. '[
' → logprob: -15.25007438659668

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -16.5000057220459
    4. '[' → logprob: -17.5000057220459
    5. '   ' → logprob: -17.7500057220459
    6. '２' → logprob: -18.2500057220459
    7. '  ' → logprob: -19.2500057220459
    8. '           ' → logprob: -19.3750057220459
    9. '۲' → logprob: -20.0000057220459
    10. '     ' → logprob: -20.3750057220459

Token 235: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011271105147898197
    2. '[k' → logprob: -4.511270999908447
    3. '}[' → logprob: -9.636271476745605
    4. ']' → logprob: -10.136271476745605
    5. '[' → logprob: -10.261271476745605
    6. '>[' → logprob: -10.511271476745605
    7. ' [' → logprob: -10.886271476745605
    8. ')[' → logprob: -11.136271476745605
    9. ' ][' → logprob: -11.761271476745605
    10. 'k' → logprob: -12.761271476745605

Token 236: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.704273118884885e-07
    2. ' k' → logprob: -14.375000953674316
    3. '[k' → logprob: -18.75
    4. '```' → logprob: -18.75
    5. ' ' → logprob: -19.625
    6. '	k' → logprob: -19.875
    7. '   ' → logprob: -20.5
    8. '                   ' → logprob: -21.125
    9. ']' → logprob: -21.125
    10. '"k' → logprob: -21.25

Token 237: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.73052782076411e-05
    2. ' )' → logprob: -10.125067710876465
    3. '))' → logprob: -11.125067710876465
    4. ')
' → logprob: -11.500067710876465
    5. '）' → logprob: -14.125067710876465
    6. '})' → logprob: -14.500067710876465
    7. '])' → logprob: -14.750067710876465
    8. '())' → logprob: -15.875067710876465
    9. '`)' → logprob: -16.12506675720215
    10. ')`' → logprob: -16.12506675720215

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13196219503879547
    2. 'print' → logprob: -2.131962299346924
    3. '
' → logprob: -5.381962299346924
    4. '```' → logprob: -8.256961822509766
    5. ' print' → logprob: -9.256961822509766
    6. '    
' → logprob: -9.756961822509766
    7. '	print' → logprob: -12.756961822509766
    8. '  
' → logprob: -13.006961822509766
    9. 'if' → logprob: -13.631961822509766
    10. '``' → logprob: -14.256961822509766

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.388601690530777
    2. '   ' → logprob: -1.1386016607284546
    3. '
' → logprob: -6.638601779937744
    4. ' print' → logprob: -8.263601303100586
    5. '```' → logprob: -9.013601303100586
    6. '    
' → logprob: -10.388601303100586
    7. 'if' → logprob: -11.888601303100586
    8. '	print' → logprob: -13.888601303100586
    9. 'return' → logprob: -14.138601303100586
    10. '  
' → logprob: -15.013601303100586

Token 240: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5760093927383423
    2. '(' → logprob: -0.8260093927383423
    3. '()' → logprob: -10.076009750366211
    4. ' (' → logprob: -11.451009750366211
    5. '(
' → logprob: -11.826009750366211
    6. '('' → logprob: -12.826009750366211
    7. '(`' → logprob: -13.451009750366211
    8. '(

' → logprob: -13.826009750366211
    9. 'ans' → logprob: -13.951009750366211
    10. '((' → logprob: -14.076009750366211

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. '()' → logprob: -11.375022888183594
    3. '())' → logprob: -11.500022888183594
    4. ' )' → logprob: -14.750022888183594
    5. ')
' → logprob: -14.875022888183594
    6. ')`' → logprob: -16.625022888183594
    7. '))' → logprob: -16.750022888183594
    8. '')' → logprob: -17.500022888183594
    9. '`)' → logprob: -17.625022888183594
    10. '(' → logprob: -18.125022888183594

Token 242: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018647374818101525
    2. 'main' → logprob: -6.626864910125732
    3. '
' → logprob: -8.626864433288574
    4. ' if' → logprob: -8.876864433288574
    5. '<|end|>' → logprob: -9.626864433288574
    6. '(main' → logprob: -9.876864433288574
    7. '```' → logprob: -9.876864433288574
    8. '\n' → logprob: -11.001864433288574
    9. '  
' → logprob: -11.626864433288574
    10. ' main' → logprob: -12.251864433288574

Token 243: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931538581848145
    2. ' __' → logprob: -0.6931538581848145
    3. '_' → logprob: -12.818153381347656
    4. '_name' → logprob: -13.443153381347656
    5. '___' → logprob: -13.568153381347656
    6. 'name' → logprob: -14.568153381347656
    7. ' ' → logprob: -15.068153381347656
    8. ' ' → logprob: -15.568153381347656
    9. '/__' → logprob: -15.693153381347656
    10. '  ' → logprob: -16.693153381347656

Token 244: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06246223300695419
    2. ' ==' → logprob: -2.937462329864502
    3. '==' → logprob: -5.562462329864502
    4. ' __' → logprob: -5.812462329864502
    5. '_' → logprob: -8.312461853027344
    6. '.__' → logprob: -8.312461853027344
    7. '__.' → logprob: -9.562461853027344
    8. '.' → logprob: -10.187461853027344
    9. '.name' → logprob: -10.562461853027344
    10. ' .' → logprob: -10.937461853027344

Token 245: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.465036105713807e-06
    2. '==' → logprob: -11.875007629394531
    3. '_' → logprob: -15.625007629394531
    4. '__.__' → logprob: -15.625007629394531
    5. ' ==' → logprob: -16.25000762939453
    6. '____' → logprob: -17.50000762939453
    7. '__.' → logprob: -18.37500762939453
    8. '___' → logprob: -18.50000762939453
    9. ' __' → logprob: -18.50000762939453
    10. '__('' → logprob: -18.87500762939453

Token 246: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8472250699996948
    2. '__' → logprob: -0.8472250699996948
    3. ' ==' → logprob: -1.9722250699996948
    4. '=="' → logprob: -5.722225189208984
    5. '=='' → logprob: -8.472225189208984
    6. '.__' → logprob: -9.222225189208984
    7. '__.__' → logprob: -10.222225189208984
    8. '=' → logprob: -11.972225189208984
    9. '__.' → logprob: -12.472225189208984
    10. '===' → logprob: -12.597225189208984

Token 247: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0086253322660923
    2. ''' → logprob: -4.758625507354736
    3. ' "__' → logprob: -11.883625030517578
    4. '__' → logprob: -12.508625030517578
    5. ' '__' → logprob: -17.133625030517578
    6. '"name' → logprob: -17.383625030517578
    7. '"user' → logprob: -17.508625030517578
    8. '"_' → logprob: -18.383625030517578
    9. '("__' → logprob: -18.633625030517578
    10. 'main' → logprob: -18.633625030517578

Token 248: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.236549335066229e-05
    2. 'name' → logprob: -10.750021934509277
    3. '__' → logprob: -14.250021934509277
    4. ' main' → logprob: -15.875021934509277
    5. '_main' → logprob: -16.250022888183594
    6. '"' → logprob: -18.750022888183594
    7. 'ma' → logprob: -19.125022888183594
    8. 'built' → logprob: -19.750022888183594
    9. '	main' → logprob: -20.000022888183594
    10. '(main' → logprob: -20.000022888183594

Token 249: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.056692689657211304
    2. '__' → logprob: -2.931692600250244
    3. '__':
' → logprob: -6.556692600250244
    4. '__:' → logprob: -8.306693077087402
    5. '():
' → logprob: -9.181693077087402
    6. ':' → logprob: -11.431693077087402
    7. '__.' → logprob: -11.556693077087402
    8. '__["' → logprob: -12.181693077087402
    9. '_' → logprob: -13.056693077087402
    10. '__
' → logprob: -13.306693077087402

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05319598689675331
    2. ' main' → logprob: -3.5531959533691406
    3. 'main' → logprob: -3.8031959533691406
    4. '	main' → logprob: -7.053195953369141
    5. '(main' → logprob: -12.80319595336914
    6. ' ' → logprob: -13.17819595336914
    7. '   ' → logprob: -13.55319595336914
    8. '_main' → logprob: -13.55319595336914
    9. '  ' → logprob: -14.67819595336914
    10. '    ' → logprob: -14.92819595336914

Token 251: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -19.875
    4. '   ' → logprob: -20.0
    5. '(main' → logprob: -23.625
    6. '.main' → logprob: -24.125
    7. '_main' → logprob: -24.875
    8. '  ' → logprob: -26.0
    9. 'Main' → logprob: -27.0
    10. '    
' → logprob: -27.125

Token 252: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 250
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 137
Tokens correctement prédits (top 10): 228
Précision stricte (1ère position): 51.60%
Précision adaptée (1ère position): 54.80%
Précision (top 10): 91.20%
================================================================================
