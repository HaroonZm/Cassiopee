================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

a, b = map(int, input().split())
print(math.ceil((b - 1) / (a - 1)))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024345240090042353
    2. '```' → logprob: -7.252434730529785
    3. '\n' → logprob: -7.377434730529785
    4. '\' → logprob: -7.877434730529785
    5. 'import' → logprob: -8.002434730529785
    6. '<|end|>' → logprob: -9.252434730529785
    7. '.pi' → logprob: -10.127434730529785
    8. 'a' → logprob: -11.002434730529785
    9. '.e' → logprob: -11.127434730529785
    10. '<|end|>' → logprob: -11.127434730529785

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.040046416223049164
    2. '=' → logprob: -4.165046215057373
    3. '+' → logprob: -4.790046215057373
    4. '[' → logprob: -5.165046215057373
    5. ' ' → logprob: -6.165046215057373
    6. ')' → logprob: -6.415046215057373
    7. 'd' → logprob: -6.540046215057373
    8. '*' → logprob: -6.540046215057373
    9. ',' → logprob: -7.290046215057373
    10. ' =' → logprob: -7.665046215057373

Token 5: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24187719821929932
    2. ' b' → logprob: -1.6168771982192993
    3. 'b' → logprob: -4.11687707901001
    4. '_' → logprob: -12.241877555847168
    5. ' ,' → logprob: -12.241877555847168
    6. ' =' → logprob: -12.366877555847168
    7. '  ' → logprob: -12.491877555847168
    8. ' )' → logprob: -13.116877555847168
    9. '_b' → logprob: -13.116877555847168
    10. 'space' → logprob: -13.616877555847168

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5638629794120789
    2. '=' → logprob: -0.9388629794120789
    3. ',' → logprob: -3.3138630390167236
    4. ' ' → logprob: -6.0638628005981445
    5. ' ,' → logprob: -7.5638628005981445
    6. ')' → logprob: -7.8138628005981445
    7. '<|end|>' → logprob: -8.688862800598145
    8. '[' → logprob: -10.688862800598145
    9. '_' → logprob: -11.188862800598145
    10. ' =
' → logprob: -11.438862800598145

Token 7: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03432483971118927
    2. '0' → logprob: -3.784324884414673
    3. ' math' → logprob: -5.284324645996094
    4. '1' → logprob: -5.534324645996094
    5. 'math' → logprob: -7.159324645996094
    6. '5' → logprob: -7.534324645996094
    7. ' map' → logprob: -8.409324645996094
    8. '10' → logprob: -8.534324645996094
    9. '3' → logprob: -8.784324645996094
    10. 'map' → logprob: -9.909324645996094

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4453837275505066
    2. '(lambda' → logprob: -1.4453837871551514
    3. '(int' → logprob: -3.0703837871551514
    4. '<|end|>' → logprob: -3.0703837871551514
    5. '(str' → logprob: -3.9453837871551514
    6. '```' → logprob: -5.695383548736572
    7. '()' → logprob: -6.945383548736572
    8. '<|end|>' → logprob: -7.445383548736572
    9. '(math' → logprob: -7.695383548736572
    10. ' (' → logprob: -7.820383548736572

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40346208214759827
    2. '(input' → logprob: -1.4034620523452759
    3. '(' → logprob: -2.6534621715545654
    4. '`)' → logprob: -5.653461933135986
    5. ',' → logprob: -6.153461933135986
    6. '```' → logprob: -6.278461933135986
    7. 'input' → logprob: -6.653461933135986
    8. ')(' → logprob: -7.028461933135986
    9. '(math' → logprob: -7.278461933135986
    10. '`' → logprob: -7.528461933135986

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16034050285816193
    2. ' input' → logprob: -1.9103405475616455
    3. ')' → logprob: -9.285340309143066
    4. '(input' → logprob: -10.785340309143066
    5. ' )' → logprob: -13.660340309143066
    6. '=input' → logprob: -14.160340309143066
    7. ',input' → logprob: -14.285340309143066
    8. '	input' → logprob: -17.035341262817383
    9. '```' → logprob: -17.035341262817383
    10. '<input' → logprob: -17.160341262817383

Token 11: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18990302085876465
    2. '('' → logprob: -2.6899030208587646
    3. '()' → logprob: -2.8149030208587646
    4. ')' → logprob: -3.9399030208587646
    5. '())' → logprob: -4.064903259277344
    6. '(()' → logprob: -5.814903259277344
    7. '(token' → logprob: -7.189903259277344
    8. '(""))' → logprob: -7.314903259277344
    9. '```' → logprob: -7.439903259277344
    10. '("("' → logprob: -7.689903259277344

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043925188947468996
    2. 'strip' → logprob: -7.750439167022705
    3. 'rstrip' → logprob: -12.375439643859863
    4. ' split' → logprob: -12.500439643859863
    5. '(split' → logprob: -15.250439643859863
    6. ')' → logprob: -15.750439643859863
    7. 'spl' → logprob: -16.000438690185547
    8. 'read' → logprob: -16.250438690185547
    9. '_split' → logprob: -18.000438690185547
    10. 'startswith' → logprob: -18.875438690185547

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07079397886991501
    2. '))' → logprob: -2.695793867111206
    3. '())' → logprob: -7.195794105529785
    4. '()' → logprob: -10.195794105529785
    5. '`)' → logprob: -10.820794105529785
    6. '()))' → logprob: -11.070794105529785
    7. ')))' → logprob: -11.945794105529785
    8. '),' → logprob: -12.070794105529785
    9. ')`' → logprob: -12.070794105529785
    10. ' )' → logprob: -12.945794105529785

Token 14: 'print' (ID: 1598)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.18953865766525269
    2. 'result' → logprob: -2.0645387172698975
    3. 'if' → logprob: -3.4395387172698975
    4. 'x' → logprob: -6.189538478851318
    5. '```' → logprob: -6.314538478851318
    6. '``' → logprob: -6.814538478851318
    7. ')
' → logprob: -7.064538478851318
    8. 'print' → logprob: -7.064538478851318
    9. '\n' → logprob: -7.064538478851318
    10. 's' → logprob: -7.314538478851318

Token 15: '(math' (ID: 86464)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014621424488723278
    2. '(math' → logprob: -6.626461982727051
    3. '(a' → logprob: -9.37646198272705
    4. '("("' → logprob: -10.87646198272705
    5. '('' → logprob: -11.00146198272705
    6. '(round' → logprob: -12.50146198272705
    7. '((' → logprob: -13.00146198272705
    8. '(f' → logprob: -13.25146198272705
    9. '(max' → logprob: -13.37646198272705
    10. '(abs' → logprob: -13.50146198272705

Token 16: '.ceil' (ID: 60295)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010278105735778809
    2. '.sqrt' → logprob: -4.635278224945068
    3. '.exp' → logprob: -8.76027774810791
    4. '.)' → logprob: -8.88527774810791
    5. '.sin' → logprob: -9.38527774810791
    6. '.pi' → logprob: -10.51027774810791
    7. '.cos' → logprob: -10.51027774810791
    8. '.pow' → logprob: -10.76027774810791
    9. '.factor' → logprob: -11.13527774810791
    10. '.atan' → logprob: -11.51027774810791

Token 17: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5796257853507996
    2. '(' → logprob: -0.8296257853507996
    3. '((' → logprob: -5.954625606536865
    4. '(b' → logprob: -7.204625606536865
    5. '(abs' → logprob: -8.704626083374023
    6. '()' → logprob: -10.079626083374023
    7. '(()' → logprob: -10.829626083374023
    8. ' (' → logprob: -11.079626083374023
    9. '(ab' → logprob: -11.079626083374023
    10. '(math' → logprob: -11.329626083374023

Token 18: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003540916834026575
    2. ' a' → logprob: -6.378540992736816
    3. 'b' → logprob: -6.503540992736816
    4. '(a' → logprob: -8.503540992736816
    5. ')a' → logprob: -10.753540992736816
    6. 'abs' → logprob: -10.878540992736816
    7. ' (' → logprob: -11.253540992736816
    8. ')' → logprob: -11.253540992736816
    9. '   ' → logprob: -11.378540992736816
    10. '-a' → logprob: -11.503540992736816

Token 19: ' -' (ID: 533)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2858143448829651
    2. ' -' → logprob: -2.4108142852783203
    3. '/' → logprob: -2.5358142852783203
    4. '-' → logprob: -3.4108142852783203
    5. '/a' → logprob: -3.4108142852783203
    6. '-a' → logprob: -4.91081428527832
    7. ' ' → logprob: -5.41081428527832
    8. ')' → logprob: -7.41081428527832
    9. ' )' → logprob: -7.53581428527832
    10. ' a' → logprob: -8.03581428527832

Token 20: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519407570362091
    2. ' a' → logprob: -1.5019407272338867
    3. ' ' → logprob: -11.751940727233887
    4. ')a' → logprob: -13.751940727233887
    5. ')' → logprob: -14.001940727233887
    6. '	a' → logprob: -14.501940727233887
    7. '1' → logprob: -15.251940727233887
    8. ''a' → logprob: -15.501940727233887
    9. 'b' → logprob: -16.001941680908203
    10. '/' → logprob: -16.251941680908203

Token 21: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004375830467324704
    2. ' a' → logprob: -7.7504377365112305
    3. '1' → logprob: -12.25043773651123
    4. ' ' → logprob: -14.25043773651123
    5. '(a' → logprob: -15.00043773651123
    6. '	a' → logprob: -15.37543773651123
    7. '  ' → logprob: -15.50043773651123
    8. '100' → logprob: -15.50043773651123
    9. 'а' → logprob: -16.250436782836914
    10. '   ' → logprob: -16.750436782836914

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004707087762653828
    2. ' )' → logprob: -5.879706859588623
    3. ')/' → logprob: -6.379706859588623
    4. ' /' → logprob: -9.129707336425781
    5. ')/(' → logprob: -9.629707336425781
    6. '/' → logprob: -11.004707336425781
    7. '/a' → logprob: -12.379707336425781
    8. 'a' → logprob: -12.754707336425781
    9. '+' → logprob: -13.004707336425781
    10. ' ' → logprob: -14.379707336425781

Token 23: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.23975853621959686
    2. '/' → logprob: -1.6147584915161133
    3. ')' → logprob: -4.364758491516113
    4. '/a' → logprob: -6.989758491516113
    5. ' )' → logprob: -7.864758491516113
    6. ')/' → logprob: -9.114758491516113
    7. ' ' → logprob: -9.864758491516113
    8. '))' → logprob: -11.864758491516113
    9. ')/(' → logprob: -11.989758491516113
    10. ' ' → logprob: -12.114758491516113

Token 24: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021799057722092
    2. ' a' → logprob: -2.3502180576324463
    3. ' ' → logprob: -11.850217819213867
    4. '	a' → logprob: -13.475217819213867
    5. '2' → logprob: -13.975217819213867
    6. ')a' → logprob: -14.975217819213867
    7. 'b' → logprob: -15.100217819213867
    8. '(a' → logprob: -15.850217819213867
    9. '10' → logprob: -15.850217819213867
    10. ' ' → logprob: -15.975217819213867

Token 25: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8444881536415778e-05
    2. ' a' → logprob: -10.500028610229492
    3. ' ' → logprob: -15.000028610229492
    4. '2' → logprob: -15.875028610229492
    5. '	a' → logprob: -15.875028610229492
    6. '  ' → logprob: -16.250028610229492
    7. '   ' → logprob: -16.375028610229492
    8. ')a' → logprob: -16.750028610229492
    9. ')' → logprob: -16.875028610229492
    10. 'b' → logprob: -17.000028610229492

Token 26: ' -' (ID: 533)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.06000523269176483
    2. ')' → logprob: -3.0600051879882812
    3. ' ' → logprob: -5.185005187988281
    4. '))' → logprob: -5.685005187988281
    5. ' )' → logprob: -7.060005187988281
    6. ' ))' → logprob: -7.685005187988281
    7. ' +' → logprob: -7.810005187988281
    8. '+' → logprob: -7.810005187988281
    9. ')+' → logprob: -8.810005187988281
    10. '))))' → logprob: -11.310005187988281

Token 27: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03364673629403114
    2. ' ' → logprob: -3.408646821975708
    3. 'b' → logprob: -15.408646583557129
    4. '0' → logprob: -15.658646583557129
    5. ')' → logprob: -15.658646583557129
    6. '2' → logprob: -16.221147537231445
    7. '```' → logprob: -16.221147537231445
    8. ' )' → logprob: -17.096147537231445
    9. ' b' → logprob: -17.346147537231445
    10. '１' → logprob: -17.596147537231445

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. 'b' → logprob: -14.500009536743164
    4. '2' → logprob: -16.125009536743164
    5. 'a' → logprob: -16.625009536743164
    6. '0' → logprob: -17.437509536743164
    7. '１' → logprob: -18.250009536743164
    8. ')' → logprob: -18.625009536743164
    9. '```' → logprob: -18.937509536743164
    10. '   ' → logprob: -19.062509536743164

Token 29: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16854947805404663
    2. ')))' → logprob: -1.9185495376586914
    3. ')' → logprob: -4.793549537658691
    4. '))))' → logprob: -12.293549537658691
    5. '),' → logprob: -14.293549537658691
    6. '))
' → logprob: -14.793549537658691
    7. ' ))' → logprob: -14.918549537658691
    8. '1' → logprob: -15.168549537658691
    9. '3' → logprob: -15.293549537658691
    10. '0' → logprob: -15.543549537658691


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 22.22%
Précision adaptée (1ère position): 22.22%
Précision (top 10): 81.48%
================================================================================
