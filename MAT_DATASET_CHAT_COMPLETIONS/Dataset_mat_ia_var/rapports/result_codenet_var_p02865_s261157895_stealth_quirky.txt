================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
a=None
try:
    _even = not N%2
    a = (N//2)-int(_even)
finally:
    [print(a) for _ in range(1)]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5979353189468384
    2. '(' → logprob: -0.8479353189468384
    3. '()' → logprob: -4.222935199737549
    4. '())' → logprob: -5.097935199737549
    5. '`)' → logprob: -8.097935676574707
    6. '(
' → logprob: -8.722935676574707
    7. '```' → logprob: -9.222935676574707
    8. '')' → logprob: -9.472935676574707
    9. '(

' → logprob: -9.722935676574707
    10. '")' → logprob: -9.722935676574707

Token 4: 'a' (ID: 64)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5715791583061218
    2. 's' → logprob: -1.9465792179107666
    3. '#' → logprob: -3.1965792179107666
    4. '\n' → logprob: -3.1965792179107666
    5. 'if' → logprob: -3.5715792179107666
    6. 'i' → logprob: -3.6965792179107666
    7. 'a' → logprob: -3.6965792179107666
    8. '*' → logprob: -3.9465792179107666
    9. ''' → logprob: -4.1965789794921875
    10. '`' → logprob: -4.3215789794921875

Token 5: '=None' (ID: 12783)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006174433045089245
    2. '+' → logprob: -5.381174564361572
    3. '=' → logprob: -7.256174564361572
    4. '.' → logprob: -8.631174087524414
    5. '\[' → logprob: -8.881174087524414
    6. '[a' → logprob: -9.006174087524414
    7. 'a' → logprob: -9.131174087524414
    8. 'p' → logprob: -9.881174087524414
    9. ' =' → logprob: -10.256174087524414
    10. '[i' → logprob: -10.381174087524414

Token 6: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1480307579040527
    2. 'if' → logprob: -1.7730307579040527
    3. ' ' → logprob: -1.8980307579040527
    4. ',' → logprob: -2.1480307579040527
    5. '=' → logprob: -2.8980307579040527
    6. ' if' → logprob: -3.2730307579040527
    7. '[' → logprob: -3.6480307579040527
    8. '#' → logprob: -3.6480307579040527
    9. '<|end|>' → logprob: -3.8980307579040527
    10. '*' → logprob: -4.648030757904053

Token 7: 'try' (ID: 1806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.985327959060669
    2. 'for' → logprob: -1.110327959060669
    3. 'i' → logprob: -1.860327959060669
    4. 'b' → logprob: -3.360327959060669
    5. 'f' → logprob: -3.735327959060669
    6. 'a' → logprob: -4.11032772064209
    7. ' for' → logprob: -4.23532772064209
    8. '[' → logprob: -4.36032772064209
    9. ' if' → logprob: -4.61032772064209
    10. '=' → logprob: -4.86032772064209

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026050140149891376
    2. ' :' → logprob: -8.375260353088379
    3. ':
' → logprob: -10.625260353088379
    4. '):' → logprob: -13.000260353088379
    5. ':a' → logprob: -14.375260353088379
    6. ':**' → logprob: -14.375260353088379
    7. '():' → logprob: -15.125260353088379
    8. '：' → logprob: -15.375260353088379
    9. '>:' → logprob: -15.500260353088379
    10. '<|end|>' → logprob: -15.750260353088379

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2590988278388977
    2. ' a' → logprob: -1.509098768234253
    3. 'a' → logprob: -5.259099006652832
    4. '<|end|>' → logprob: -7.134099006652832
    5. '	a' → logprob: -8.259099006652832
    6. ' ' → logprob: -9.009099006652832
    7. ' readline' → logprob: -9.134099006652832
    8. ' if' → logprob: -9.134099006652832
    9. '    ' → logprob: -9.634099006652832
    10. ' for' → logprob: -10.009099006652832

Token 10: ' _' (ID: 1175)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08431794494390488
    2. 'a' → logprob: -2.584317922592163
    3. '   ' → logprob: -5.584318161010742
    4. '    ' → logprob: -7.584318161010742
    5. ' int' → logprob: -8.084318161010742
    6. ' ' → logprob: -8.709318161010742
    7. 'int' → logprob: -9.584318161010742
    8. 'x' → logprob: -9.709318161010742
    9. ' n' → logprob: -9.959318161010742
    10. '       ' → logprob: -9.959318161010742

Token 11: 'even' (ID: 28689)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18002374470233917
    2. 'int' → logprob: -2.805023670196533
    3. '=int' → logprob: -3.055023670196533
    4. '=' → logprob: -3.055023670196533
    5. ' =' → logprob: -5.430023670196533
    6. '=a' → logprob: -6.055023670196533
    7. ' a' → logprob: -6.555023670196533
    8. ' ' → logprob: -7.430023670196533
    9. '   ' → logprob: -8.805024147033691
    10. 'N' → logprob: -8.930024147033691

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.643868088722229
    2. '=' → logprob: -1.643868088722229
    3. ' =' → logprob: -2.1438679695129395
    4. 's' → logprob: -2.3938679695129395
    5. '_num' → logprob: -3.2688679695129395
    6. '_number' → logprob: -4.2688679695129395
    7. '_numbers' → logprob: -4.7688679695129395
    8. '_sum' → logprob: -6.0188679695129395
    9. '_s' → logprob: -6.3938679695129395
    10. 'a' → logprob: -7.0188679695129395

Token 13: ' not' (ID: 625)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1554149389266968
    2. ' int' → logprob: -1.2804149389266968
    3. ' N' → logprob: -1.9054149389266968
    4. 'N' → logprob: -2.2804150581359863
    5. '[int' → logprob: -2.9054150581359863
    6. '[]' → logprob: -3.7804150581359863
    7. ' [' → logprob: -3.7804150581359863
    8. 'a' → logprob: -4.155415058135986
    9. ' []' → logprob: -4.655415058135986
    10. ' ' → logprob: -5.405415058135986

Token 14: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5571720004081726
    2. ' (' → logprob: -1.8071720600128174
    3. 'N' → logprob: -2.1821720600128174
    4. '(' → logprob: -3.0571720600128174
    5. 'a' → logprob: -3.8071720600128174
    6. '(a' → logprob: -3.8071720600128174
    7. '(N' → logprob: -3.9321720600128174
    8. ' a' → logprob: -4.307171821594238
    9. ' ' → logprob: -4.682171821594238
    10. ' bool' → logprob: -4.932171821594238

Token 15: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1602923572063446
    2. ' %' → logprob: -1.910292387008667
    3. ' ' → logprob: -10.160292625427246
    4. ')' → logprob: -11.785292625427246
    5. ' %
' → logprob: -12.910292625427246
    6. '%
' → logprob: -13.035292625427246
    7. '%i' → logprob: -13.410292625427246
    8. 'and' → logprob: -13.535292625427246
    9. ' %

' → logprob: -13.660292625427246
    10. '```' → logprob: -13.785292625427246

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00280558317899704
    2. ' ' → logprob: -5.877805709838867
    3. '```' → logprob: -15.252805709838867
    4. '  ' → logprob: -15.502805709838867
    5. '   ' → logprob: -15.627805709838867
    6. ' ' → logprob: -17.127805709838867
    7. '1' → logprob: -17.315305709838867
    8. '0' → logprob: -17.752805709838867
    9. '    ' → logprob: -18.002805709838867
    10. ')' → logprob: -18.127805709838867

Token 17: '
' (ID: 198)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.8866029381752014
    2. 'except' → logprob: -1.2616028785705566
    3. '   ' → logprob: -1.6366028785705566
    4. ':' → logprob: -2.3866028785705566
    5. ':
' → logprob: -4.886602878570557
    6. ')' → logprob: -6.011602878570557
    7. '    
' → logprob: -6.261602878570557
    8. ' ' → logprob: -6.511602878570557
    9. '
' → logprob: -7.386602878570557
    10. '=' → logprob: -7.636602878570557

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6044898629188538
    2. ':' → logprob: -0.9794898629188538
    3. 'except' → logprob: -3.729489803314209
    4. ')' → logprob: -4.104489803314209
    5. ' except' → logprob: -4.479489803314209
    6. ':
' → logprob: -4.604489803314209
    7. '    
' → logprob: -5.604489803314209
    8. ' ' → logprob: -5.854489803314209
    9. '.' → logprob: -6.354489803314209
    10. '    ' → logprob: -6.354489803314209

Token 19: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3324461579322815
    2. ' if' → logprob: -1.5824460983276367
    3. 'if' → logprob: -3.5824460983276367
    4. 'a' (adapté à ' a') → logprob: -4.082446098327637
    5. ':' → logprob: -4.457446098327637
    6. ' ' → logprob: -5.207446098327637
    7. '       ' → logprob: -5.707446098327637
    8. '    ' → logprob: -6.082446098327637
    9. ' a' → logprob: -6.332446098327637
    10. ')' → logprob: -6.582446098327637

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21026594936847687
    2. ' =' → logprob: -1.7102659940719604
    3. ' ' → logprob: -4.96026611328125
    4. '+=' → logprob: -7.21026611328125
    5. '+' → logprob: -7.71026611328125
    6. ' +=' → logprob: -7.83526611328125
    7. ' *=' → logprob: -9.96026611328125
    8. '_' → logprob: -10.46026611328125
    9. '*=' → logprob: -10.71026611328125
    10. '*' → logprob: -10.83526611328125

Token 21: ' (' (ID: 350)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.1338491141796112
    2. 'N' → logprob: -2.6338491439819336
    3. ' int' → logprob: -3.7588491439819336
    4. 'int' → logprob: -4.508849143981934
    5. ' _' → logprob: -5.383849143981934
    6. ' ' → logprob: -5.633849143981934
    7. ' True' → logprob: -6.133849143981934
    8. '_' → logprob: -6.633849143981934
    9. ' [' → logprob: -6.883849143981934
    10. '"' → logprob: -7.008849143981934

Token 22: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10420926660299301
    2. ' N' → logprob: -2.7292091846466064
    3. 'int' → logprob: -3.8542091846466064
    4. '1' → logprob: -6.2292094230651855
    5. '   ' → logprob: -6.4792094230651855
    6. '_' → logprob: -6.6042094230651855
    7. ' int' → logprob: -6.7292094230651855
    8. '2' → logprob: -6.7292094230651855
    9. '(' → logprob: -7.1042094230651855
    10. ''' → logprob: -7.6042094230651855

Token 23: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7600305676460266
    2. ' //' → logprob: -1.3850305080413818
    3. '+' → logprob: -1.8850305080413818
    4. ' +' → logprob: -2.635030508041382
    5. '-' → logprob: -3.635030508041382
    6. ' -' → logprob: -4.635030746459961
    7. ')' → logprob: -5.260030746459961
    8. ' if' → logprob: -5.635030746459961
    9. '**' → logprob: -5.885030746459961
    10. '>>' → logprob: -6.135030746459961

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005290561355650425
    2. ' ' → logprob: -5.255290508270264
    3. '1' → logprob: -10.755290985107422
    4. ')' → logprob: -10.880290985107422
    5. '3' → logprob: -11.505290985107422
    6. '4' → logprob: -13.005290985107422
    7. '  ' → logprob: -14.130290985107422
    8. '10' → logprob: -14.380290985107422
    9. '   ' → logprob: -14.692790985107422
    10. '```' → logprob: -14.817790985107422

Token 25: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7805438041687012
    2. '+' → logprob: -1.5305438041687012
    3. ' +' → logprob: -1.9055438041687012
    4. ',' → logprob: -3.155543804168701
    5. ' if' → logprob: -3.155543804168701
    6. ' )' → logprob: -3.405543804168701
    7. ')+' → logprob: -4.405543804168701
    8. '*' → logprob: -4.905543804168701
    9. ' *' → logprob: -5.030543804168701
    10. ' ,' → logprob: -5.155543804168701

Token 26: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00419248640537262
    2. '_even' → logprob: -6.004192352294922
    3. '(' → logprob: -7.129192352294922
    4. ' ' → logprob: -8.129192352294922
    5. 'even' → logprob: -8.254192352294922
    6. '_e' → logprob: -9.129192352294922
    7. '0' → logprob: -10.129192352294922
    8. '_ev' → logprob: -10.379192352294922
    9. '2' → logprob: -10.504192352294922
    10. '(_' → logprob: -10.629192352294922

Token 27: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.03150966390967369
    2. '(' → logprob: -3.7815096378326416
    3. '(not' → logprob: -5.406509876251221
    4. '_e' → logprob: -5.906509876251221
    5. '_even' → logprob: -7.781509876251221
    6. '(e' → logprob: -8.531509399414062
    7. '(True' → logprob: -9.031509399414062
    8. '_not' → logprob: -9.531509399414062
    9. '(E' → logprob: -9.906509399414062
    10. '(False' → logprob: -10.531509399414062

Token 28: 'even' (ID: 28689)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.0008943092543631792
    2. ' _' → logprob: -8.625894546508789
    3. 'even' → logprob: -8.750894546508789
    4. '_true' → logprob: -8.875894546508789
    5. ' even' → logprob: -9.000894546508789
    6. '_not' → logprob: -9.375894546508789
    7. '_e' → logprob: -9.500894546508789
    8. '_' → logprob: -9.500894546508789
    9. 'True' → logprob: -11.000894546508789
    10. '_false' → logprob: -11.750894546508789

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000519312743563205
    2. '))' → logprob: -8.875519752502441
    3. ')
' → logprob: -9.625519752502441
    4. '+' → logprob: -9.625519752502441
    5. ')+' → logprob: -9.625519752502441
    6. ' )' → logprob: -10.000519752502441
    7. '1' → logprob: -10.750519752502441
    8. '**' → logprob: -11.250519752502441
    9. ')*' → logprob: -11.250519752502441
    10. '*' → logprob: -11.500519752502441

Token 30: 'finally' (ID: 71285)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3569524884223938
    2. 'except' → logprob: -1.856952428817749
    3. ' except' → logprob: -2.231952428817749
    4. ')' → logprob: -4.356952667236328
    5. '*' → logprob: -4.481952667236328
    6. ' +' → logprob: -5.356952667236328
    7. '<|end|>' → logprob: -5.981952667236328
    8. '+
' → logprob: -6.356952667236328
    9. '0' → logprob: -7.856952667236328
    10. '%' → logprob: -7.856952667236328

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001657565007917583
    2. ' :' → logprob: -8.750165939331055
    3. ':
' → logprob: -12.375165939331055
    4. '   ' → logprob: -13.750165939331055
    5. ':**' → logprob: -14.375165939331055
    6. ',' → logprob: -15.500165939331055
    7. '[:]' → logprob: -15.625165939331055
    8. ',:' → logprob: -15.750165939331055
    9. ':return' → logprob: -15.875165939331055
    10. '：' → logprob: -16.125165939331055

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012168655171990395
    2. '    
' → logprob: -5.762168884277344
    3. ' a' → logprob: -5.887168884277344
    4. ' pass' → logprob: -6.637168884277344
    5. '    ' → logprob: -6.637168884277344
    6. 'a' → logprob: -6.762168884277344
    7. ' print' → logprob: -7.137168884277344
    8. 'print' → logprob: -7.262168884277344
    9. 'pass' → logprob: -8.887168884277344
    10. ' None' → logprob: -9.012168884277344

Token 33: ' [' (ID: 723)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.09627778828144073
    2. 'print' → logprob: -2.9712777137756348
    3. ' pass' → logprob: -3.7212777137756348
    4. '   ' → logprob: -4.221277713775635
    5. ' a' → logprob: -7.221277713775635
    6. ' if' → logprob: -7.846277713775635
    7. 'pass' → logprob: -8.596278190612793
    8. ' return' → logprob: -9.471278190612793
    9. '    ' → logprob: -9.721278190612793
    10. '	print' → logprob: -9.721278190612793

Token 34: 'print' (ID: 1598)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1085476353764534
    2. 'print' → logprob: -3.3585476875305176
    3. ' a' → logprob: -3.6085476875305176
    4. ']' → logprob: -3.7335476875305176
    5. '   ' → logprob: -5.483547687530518
    6. 'N' → logprob: -5.983547687530518
    7. '0' → logprob: -6.358547687530518
    8. ' ]' → logprob: -6.608547687530518
    9. 'None' → logprob: -6.608547687530518
    10. '_]' → logprob: -6.983547687530518

Token 35: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.049476224929094315
    2. '(i' → logprob: -3.299476146697998
    3. '(' → logprob: -4.924476146697998
    4. '(x' → logprob: -6.174476146697998
    5. '((' → logprob: -7.049476146697998
    6. 'a' → logprob: -7.674476146697998
    7. '(N' → logprob: -8.549476623535156
    8. '('' → logprob: -8.799476623535156
    9. '(*' → logprob: -9.674476623535156
    10. '(_' → logprob: -9.924476623535156

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22592724859714508
    2. ')]' → logprob: -1.6009272336959839
    3. ',' → logprob: -7.975927352905273
    4. ']' → logprob: -9.225927352905273
    5. '))' → logprob: -10.975927352905273
    6. ')])' → logprob: -11.475927352905273
    7. ' )' → logprob: -11.850927352905273
    8. ')}' → logprob: -12.475927352905273
    9. '),' → logprob: -12.475927352905273
    10. ',a' → logprob: -12.600927352905273

Token 37: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0386321023106575
    2. ')]' → logprob: -3.2886321544647217
    3. '])' → logprob: -8.4136323928833
    4. ')' → logprob: -8.7886323928833
    5. '()]' → logprob: -9.5386323928833
    6. ',' → logprob: -9.6636323928833
    7. ' ]' → logprob: -9.9136323928833
    8. ')])' → logprob: -12.6636323928833
    9. '`]' → logprob: -12.7886323928833
    10. '])]' → logprob: -12.9136323928833

Token 38: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17302654683589935
    2. '_' → logprob: -2.2980265617370605
    3. 'range' → logprob: -3.1730265617370605
    4. ' i' → logprob: -4.7980265617370605
    5. ' _' → logprob: -4.9230265617370605
    6. 'i' → logprob: -7.2980265617370605
    7. ' ' → logprob: -8.423026084899902
    8. ' in' → logprob: -10.173026084899902
    9. ' ' → logprob: -10.673026084899902
    10. ' a' → logprob: -11.298026084899902

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6567607522010803
    2. ' range' → logprob: -1.4067606925964355
    3. 'range' → logprob: -1.6567606925964355
    4. 'in' → logprob: -3.7817606925964355
    5. ' ' → logprob: -3.9067606925964355
    6. '_' → logprob: -6.2817606925964355
    7. '  ' → logprob: -7.6567606925964355
    8. ' _' → logprob: -8.781761169433594
    9. 'i' → logprob: -9.281761169433594
    10. ' ' → logprob: -9.531761169433594

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16058935225009918
    2. ' range' → logprob: -1.910589337348938
    3. '[' → logprob: -8.035589218139648
    4. ' ' → logprob: -10.660589218139648
    5. 'rang' → logprob: -12.910589218139648
    6. '(range' → logprob: -13.035589218139648
    7. 'ran' → logprob: -13.410589218139648
    8. '   ' → logprob: -13.535589218139648
    9. '  ' → logprob: -13.660589218139648
    10. '	range' → logprob: -13.660589218139648

Token 41: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22629046440124512
    2. '(' → logprob: -1.6012904644012451
    3. 'N' → logprob: -7.601290702819824
    4. ' N' → logprob: -9.601290702819824
    5. '3' → logprob: -9.851290702819824
    6. '4' → logprob: -9.976290702819824
    7. '(a' → logprob: -10.476290702819824
    8. '(int' → logprob: -10.851290702819824
    9. '2' → logprob: -10.976290702819824
    10. ' (' → logprob: -10.976290702819824

Token 42: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20680449903011322
    2. '2' → logprob: -2.5818045139312744
    3. '3' → logprob: -3.0818045139312744
    4. ' N' → logprob: -3.2068045139312744
    5. 'a' → logprob: -4.831804275512695
    6. '5' → logprob: -5.581804275512695
    7. ' ' → logprob: -5.956804275512695
    8. '0' → logprob: -6.081804275512695
    9. '1' → logprob: -6.206804275512695
    10. '4' → logprob: -6.206804275512695

Token 43: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.627634584903717
    2. ' ,' → logprob: -1.1276345252990723
    3. ',N' → logprob: -2.0026345252990723
    4. '0' → logprob: -5.127634525299072
    5. ' N' → logprob: -8.00263500213623
    6. ' ' → logprob: -8.12763500213623
    7. 'N' → logprob: -8.37763500213623
    8. '2' → logprob: -8.87763500213623
    9. '1' → logprob: -9.25263500213623
    10. ',n' → logprob: -9.75263500213623


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 27
Précision stricte (1ère position): 31.71%
Précision adaptée (1ère position): 31.71%
Précision (top 10): 65.85%
================================================================================
