================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def prn(x): sys.stdout.write(x)
def gin(): return int(input())
def lint(): return list(map(int, input().split()))
def gm(): return map(int, input().split())
_dbg = False if True else True
MAXVISIT = 400

def printer(msg): 
    if _dbg: 
        print(msg)
        sys.stdout.flush()

class UnionF:
    def __init__(self, n):
        self.p = list(range(n))
        self.r = [0]*n
    def root(self, x):
        while self.p[x] != x:
            self.p[x] = self.p[self.p[x]]
            x = self.p[x]
        return x
    def merge(self, x, y):
        rx, ry = self.root(x), self.root(y)
        if rx == ry: return
        if self.r[rx] > self.r[ry]:
            self.p[ry] = rx
        else:
            self.p[rx] = ry
            if self.r[rx] == self.r[ry]:
                self.r[ry] += 1

def depot_here(): return last_node == 1 and dist_last == 0
def nothin_do():
    print(-1)
    sys.stdout.flush()

def get_next():
    tg = work[0] if work else 1
    return narray[last_node][tg]

def moveon():
    global last_node, dist_last, work
    n = get_next()
    print(n)
    sys.stdout.flush()
    dist_last += 1
    if dist_last == dist[last_node][n]:
        dist_last = 0
        if work and n == work[0]:
            work.pop(0)
        last_node = n

def trgr(): return len(pend) > 0

def readput(): 
    n = gin()
    [gin() for _ in range(n)]

def readverd():
    val = input().strip()
    if val != 'OK': exit()
    readput()

def setwork_wright():
    global pend, work
    vis = set(j for _,j in pend) | set(work)
    vv = len(vis)
    pend = []
    if vv == 1:
        work = list(vis)
        return
    e,f = dict(),dict()
    for x in vis: e[x]=[]
    uf = UnionF(V+1)
    for _ in range(vv-1):
        best=(-1,None,None)
        for i in e:
            for j in e:
                if uf.root(i)==uf.root(j): continue
                dif = dist[i][1] + dist[1][j] - dist[i][j]
                if dif > best[0]:
                    best = (dif,i,j)
        _,i,j = best
        e[i].append(j); e[j].append(i)
        uf.merge(i,j)
        if len(e[i])==2: f[i]=e[i]; del e[i]
        if len(e[j])==2: f[j]=e[j]; del e[j]
    ek = list(e.keys())
    p = ek[0]; cur = e[p][0]; prev = p
    work = [p,cur]
    for _ in range(vv-2):
        p = cur
        cur = f[p][0] if f[p][0]!=prev else f[p][1]
        prev = p
        work.append(cur)

def setwork_sort():
    global pend, work
    oldest = pend[0][1]
    pendset = set(x[1] for x in pend)
    sortq = []
    for i in (0,1):
        base = 1 if i else oldest
        q = sorted((dist[base][x],x) for x in pendset)
        sortq.append(q)
    vislist=[]
    while len(vislist) < MAXVISIT and (sortq[0] or sortq[1]):
        for j in (0,1):
            if not sortq[j]: continue
            _,x = sortq[j].pop()
            if x in vislist or x in work: continue
            vislist.append(x)
    prev=1
    while vislist:
        mni, mn = min(enumerate(vislist), key=lambda v: dist[prev][v[1]])
        mnx = vislist[mni]
        work.append(mnx)
        del vislist[mni]
        prev = mnx
    pend = [x for x in pend if x[1] not in work]

printer("start")

V,E = gm()
es = [[] for _ in range(V+1)]
dist = [[9999]*(V+1) for _ in range(V+1)]
for i in range(V+1): dist[i][i]=0
for _ in range(E):
    a,b,c = gm()
    es[a].append((b,c))
    es[b].append((a,c))
    dist[a][b]=dist[b][a]=c

if _dbg:
    [print(str(i),z) for i,z in enumerate(es)]

for k in range(1,V+1):
    for i in range(1,V+1):
        for j in range(1,V+1):
            dist[i][j] = min(dist[i][j], dist[i][k]+dist[k][j])
printer("WS done")

narray = [[0 for _ in range(V+1)] for _ in range(V+1)]
for i in range(1,V+1):
    for j in range(1,V+1):
        if i==j: continue
        for nk,c in es[i]:
            if dist[i][j]==c+dist[nk][j]:
                narray[i][j]=nk
                break
        else:
            print("nxtndary ERR")
            exit()

F = lint()
if len(F)==1:
    prob, tt = 1, F[0]
else:
    prob, tt = 2, gin()

pend = []
work = []
last_node = 1
dist_last = 0

for t in range(tt):
    if _dbg and t>3400: exit()
    n = gin()
    if n==1:
        i, d = gm()
        pend.append((i, d))
    if prob==2: readput()
    if depot_here():
        if trgr():
            setwork_wright()
            if work: moveon()
            else: nothin_do()
        else: nothin_do()
    else:
        moveon()
    if prob==2: readverd()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' pr' (ID: 550)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: 'n' (ID: 77)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004869186959695071
    2. 'i' → logprob: -7.875486850738525
    3. 'in' → logprob: -9.625487327575684
    4. '```' → logprob: -12.000487327575684
    5. 'nt' → logprob: -12.625487327575684
    6. 'ont' → logprob: -12.625487327575684
    7. '   ' → logprob: -12.875487327575684
    8. 'import' → logprob: -12.875487327575684
    9. 'intl' → logprob: -12.875487327575684
    10. 'ing' → logprob: -13.125487327575684

Token 6: '(x' (ID: 4061)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010403759777545929
    2. 'int' → logprob: -4.635403633117676
    3. 'it' → logprob: -8.260403633117676
    4. 'i' → logprob: -8.260403633117676
    5. '(' → logprob: -9.510403633117676
    6. '()' → logprob: -11.260403633117676
    7. 'ti' → logprob: -11.385403633117676
    8. '_t' → logprob: -12.260403633117676
    9. '```' → logprob: -12.260403633117676
    10. '(t' → logprob: -12.510403633117676

Token 7: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04925587773323059
    2. ')' → logprob: -3.049255847930908
    3. 't' → logprob: -8.299256324768066
    4. ':' → logprob: -8.424256324768066
    5. '):
' → logprob: -9.549256324768066
    6. 'e' → logprob: -10.174256324768066
    7. 's' → logprob: -10.549256324768066
    8. 'u' → logprob: -11.299256324768066
    9. ',' → logprob: -11.549256324768066
    10. 'a' → logprob: -11.799256324768066

Token 8: ' sys' (ID: 12228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7673298120498657
    2. ' print' → logprob: -1.7673298120498657
    3. '   ' → logprob: -2.142329692840576
    4. ')' → logprob: -2.642329692840576
    5. ':' → logprob: -2.767329692840576
    6. ' ' → logprob: -2.892329692840576
    7. '(' → logprob: -4.517329692840576
    8. 't' → logprob: -4.767329692840576
    9. '):' → logprob: -4.892329692840576
    10. 'nt' → logprob: -5.142329692840576

Token 9: '.stdout' (ID: 59462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003983760252594948
    2. '.stdout' → logprob: -8.125398635864258
    3. '.print' → logprob: -9.375398635864258
    4. '.write' → logprob: -12.625398635864258
    5. '.exit' → logprob: -12.750398635864258
    6. ' .' → logprob: -13.000398635864258
    7. '.println' → logprob: -13.000398635864258
    8. '.stdin' → logprob: -13.625398635864258
    9. '.argv' → logprob: -13.875398635864258
    10. '.stderr' → logprob: -14.000398635864258

Token 10: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00020413640595506877
    2. '.' → logprob: -8.500204086303711
    3. '.print' → logprob: -15.125204086303711
    4. '.Write' → logprob: -15.375204086303711
    5. 'write' → logprob: -16.25020408630371
    6. '.append' → logprob: -16.87520408630371
    7. '.flush' → logprob: -16.87520408630371
    8. '.read' → logprob: -17.37520408630371
    9. '.readline' → logprob: -18.87520408630371
    10. '.w' → logprob: -18.87520408630371

Token 11: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5403785705566406
    2. '(x' → logprob: -0.9153785705566406
    3. '(str' → logprob: -4.415378570556641
    4. '('' → logprob: -5.540378570556641
    5. '("("' → logprob: -7.040378570556641
    6. '((' → logprob: -10.41537857055664
    7. '(f' → logprob: -10.54037857055664
    8. '("""' → logprob: -10.54037857055664
    9. '(chr' → logprob: -10.54037857055664
    10. '```' → logprob: -10.66537857055664

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.006006828509271e-05
    2. '))' → logprob: -10.500080108642578
    3. '')' → logprob: -10.625080108642578
    4. '")' → logprob: -11.500080108642578
    5. ')
' → logprob: -12.625080108642578
    6. '`)' → logprob: -13.000080108642578
    7. ' )' → logprob: -13.250080108642578
    8. '+' → logprob: -13.625080108642578
    9. ')")' → logprob: -13.625080108642578
    10. ')`' → logprob: -13.750080108642578

Token 13: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04081209748983383
    2. '\n' → logprob: -4.165812015533447
    3. '(
' → logprob: -4.915812015533447
    4. '\' → logprob: -5.040812015533447
    5. ')' → logprob: -5.790812015533447
    6. '
' → logprob: -6.415812015533447
    7. '\(' → logprob: -6.415812015533447
    8. ''' → logprob: -7.540812015533447
    9. '.' → logprob: -7.665812015533447
    10. '#' → logprob: -7.665812015533447

Token 14: ' gin' (ID: 31450)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4227563738822937
    2. ' pr' → logprob: -1.6727564334869385
    3. '_' → logprob: -3.1727564334869385
    4. ' print' → logprob: -3.2977564334869385
    5. 'pr' → logprob: -3.7977564334869385
    6. '(' → logprob: -4.297756195068359
    7. ' _' → logprob: -4.797756195068359
    8. 'r' → logprob: -5.297756195068359
    9. '_print' → logprob: -5.297756195068359
    10. 'n' → logprob: -5.422756195068359

Token 15: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10151952505111694
    2. 'put' → logprob: -3.3515195846557617
    3. 'p' → logprob: -3.8515195846557617
    4. '(x' → logprob: -4.226519584655762
    5. '()' → logprob: -5.226519584655762
    6. '(n' → logprob: -5.726519584655762
    7. '(p' → logprob: -5.726519584655762
    8. 'x' → logprob: -5.851519584655762
    9. '(i' → logprob: -6.476519584655762
    10. 'f' → logprob: -6.726519584655762

Token 16: ' return' (ID: 622)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.23399993777275085
    2. ' sys' → logprob: -1.7339999675750732
    3. ' return' → logprob: -3.7339999675750732
    4. 'input' → logprob: -5.108999729156494
    5. 'return' → logprob: -6.983999729156494
    6. 'sys' → logprob: -6.983999729156494
    7. ' import' → logprob: -9.859000205993652
    8. ' ' → logprob: -9.984000205993652
    9. ' str' → logprob: -10.484000205993652
    10. ' int' → logprob: -10.484000205993652

Token 17: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.44349271059036255
    2. 'input' → logprob: -1.4434926509857178
    3. ' sys' → logprob: -2.1934926509857178
    4. 'sys' → logprob: -4.568492889404297
    5. 'int' → logprob: -9.818492889404297
    6. ' next' → logprob: -9.943492889404297
    7. ' ' → logprob: -10.318492889404297
    8. ' raw' → logprob: -10.693492889404297
    9. ' int' → logprob: -11.693492889404297
    10. 'raw' → logprob: -11.693492889404297

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4647480249404907
    2. '(' → logprob: -1.4647480249404907
    3. '(sys' → logprob: -1.9647480249404907
    4. '()' → logprob: -9.21474838256836
    5. '(open' → logprob: -9.96474838256836
    6. '((' → logprob: -10.08974838256836
    7. '(raw' → logprob: -10.21474838256836
    8. '(stdin' → logprob: -10.21474838256836
    9. ' (' → logprob: -10.46474838256836
    10. 'input' → logprob: -11.21474838256836

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00351644866168499
    2. '()' → logprob: -5.878516674041748
    3. '()))' → logprob: -7.378516674041748
    4. ' ())' → logprob: -10.25351619720459
    5. '(' → logprob: -10.75351619720459
    6. '().' → logprob: -11.25351619720459
    7. ')' → logprob: -12.12851619720459
    8. '())
' → logprob: -12.87851619720459
    9. '();)' → logprob: -12.87851619720459
    10. '());' → logprob: -13.12851619720459

Token 20: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4682033956050873
    2. '\n' → logprob: -1.7182034254074097
    3. '' → logprob: -2.96820330619812
    4. '\' → logprob: -3.34320330619812
    5. 'def' → logprob: -3.46820330619812
    6. '

' → logprob: -3.84320330619812
    7. '<|end|>' → logprob: -3.84320330619812
    8. 'd' → logprob: -4.718203544616699
    9. 'n' → logprob: -5.093203544616699
    10. '#' → logprob: -5.968203544616699

Token 21: ' lint' (ID: 72616)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23562829196453094
    2. ' pr' → logprob: -2.235628366470337
    3. 'main' → logprob: -3.360628366470337
    4. 'pr' → logprob: -4.485628128051758
    5. 'in' → logprob: -4.860628128051758
    6. ' in' → logprob: -5.110628128051758
    7. ' str' → logprob: -5.485628128051758
    8. ' def' → logprob: -5.735628128051758
    9. ' ' → logprob: -6.360628128051758
    10. ' input' → logprob: -6.360628128051758

Token 22: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07346184551715851
    2. '()' → logprob: -2.8234617710113525
    3. '[]' → logprob: -5.698462009429932
    4. '=[]' → logprob: -6.323462009429932
    5. 's' → logprob: -6.448462009429932
    6. '=list' → logprob: -6.948462009429932
    7. '()[' → logprob: -7.073462009429932
    8. '(list' → logprob: -7.573462009429932
    9. ' list' → logprob: -7.573462009429932
    10. '_list' → logprob: -8.073461532592773

Token 23: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.02146187052130699
    2. 'list' → logprob: -3.8964619636535645
    3. ' map' → logprob: -7.1464619636535645
    4. 'map' → logprob: -9.646461486816406
    5. ' ' → logprob: -10.396461486816406
    6. ' [' → logprob: -11.396461486816406
    7. '[' → logprob: -12.021461486816406
    8. '[list' → logprob: -12.146461486816406
    9. '  ' → logprob: -12.271461486816406
    10. ' tuple' → logprob: -12.646461486816406

Token 24: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12794628739356995
    2. 'list' → logprob: -2.127946376800537
    3. ' map' → logprob: -7.877946376800537
    4. '[' → logprob: -8.127945899963379
    5. '[list' → logprob: -8.877945899963379
    6. 'map' → logprob: -9.002945899963379
    7. ' [' → logprob: -10.502945899963379
    8. '[input' → logprob: -10.752945899963379
    9. 'input' → logprob: -11.752945899963379
    10. '[]' → logprob: -12.002945899963379

Token 25: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.012599951587617397
    2. '(' → logprob: -4.387599945068359
    3. ' (' → logprob: -10.01259994506836
    4. '(int' → logprob: -10.63759994506836
    5. '()' → logprob: -11.76259994506836
    6. '(
' → logprob: -11.88759994506836
    7. ' ' → logprob: -12.88759994506836
    8. '(

' → logprob: -14.13759994506836
    9. '(input' → logprob: -14.26259994506836
    10. '(m' → logprob: -15.13759994506836

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012082771718269214
    2. '(' → logprob: -9.625121116638184
    3. 'int' → logprob: -10.750121116638184
    4. '(str' → logprob: -11.125121116638184
    5. '<int' → logprob: -11.750121116638184
    6. '=int' → logprob: -12.375121116638184
    7. ',int' → logprob: -12.750121116638184
    8. '[int' → logprob: -13.875121116638184
    9. ' int' → logprob: -14.375121116638184
    10. '<|end|>' → logprob: -14.375121116638184

Token 27: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.17227786779403687
    2. ',' → logprob: -1.9222779273986816
    3. '(input' → logprob: -4.547277927398682
    4. ' ,' → logprob: -6.922277927398682
    5. 'input' → logprob: -8.797277450561523
    6. '(' → logprob: -9.547277450561523
    7. ' input' → logprob: -9.672277450561523
    8. ' (' → logprob: -9.797277450561523
    9. ',int' → logprob: -10.922277450561523
    10. ',(' → logprob: -11.297277450561523

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08898526430130005
    2. ' input' → logprob: -2.4639852046966553
    3. '(input' → logprob: -11.088985443115234
    4. 'sys' → logprob: -11.713985443115234
    5. ',input' → logprob: -12.213985443115234
    6. '	input' → logprob: -12.463985443115234
    7. ' sys' → logprob: -12.463985443115234
    8. '=input' → logprob: -12.588985443115234
    9. '<input' → logprob: -13.338985443115234
    10. ')' → logprob: -13.463985443115234

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.47757811343763e-05
    2. '()' → logprob: -11.000044822692871
    3. '.split' → logprob: -11.875044822692871
    4. '.' → logprob: -12.000044822692871
    5. ' ().' → logprob: -12.125044822692871
    6. ')' → logprob: -12.250044822692871
    7. '))' → logprob: -13.500044822692871
    8. ' .' → logprob: -13.625044822692871
    9. 'split' → logprob: -14.500044822692871
    10. '(' → logprob: -14.625044822692871

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005285696126520634
    2. 'strip' → logprob: -5.255285739898682
    3. ' split' → logprob: -10.380285263061523
    4. 'rstrip' → logprob: -11.005285263061523
    5. '(split' → logprob: -12.755285263061523
    6. ' strip' → logprob: -14.380285263061523
    7. ')' → logprob: -14.880285263061523
    8. 'spl' → logprob: -15.255285263061523
    9. ' ' → logprob: -16.005285263061523
    10. 's' → logprob: -17.255285263061523

Token 31: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12828166782855988
    2. '))' → logprob: -2.128281593322754
    3. '()' → logprob: -7.003281593322754
    4. '())' → logprob: -7.878281593322754
    5. '()))
' → logprob: -10.753281593322754
    6. ')' → logprob: -11.003281593322754
    7. '(' → logprob: -11.253281593322754
    8. ')))' → logprob: -12.503281593322754
    9. '())))' → logprob: -12.753281593322754
    10. '()));' → logprob: -12.753281593322754

Token 32: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5513032078742981
    2. '
' → logprob: -1.9263031482696533
    3. '' → logprob: -2.1763031482696533
    4. '\' → logprob: -3.1763031482696533
    5. '#' → logprob: -3.3013031482696533
    6. 'd' → logprob: -3.4263031482696533
    7. 'n' → logprob: -4.426303386688232
    8. '

' → logprob: -4.551303386688232
    9. '```' → logprob: -5.301303386688232
    10. ' ' → logprob: -5.426303386688232

Token 33: ' gm' (ID: 82401)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1294354647397995
    2. 'main' → logprob: -2.1294355392456055
    3. ' mai' → logprob: -8.379435539245605
    4. 'str' → logprob: -8.504435539245605
    5. ' solve' → logprob: -8.504435539245605
    6. ' ma' → logprob: -8.504435539245605
    7. 's' → logprob: -8.879435539245605
    8. 'int' → logprob: -9.004435539245605
    9. ' str' → logprob: -9.004435539245605
    10. 'm' → logprob: -9.504435539245605

Token 34: '():' (ID: 9442)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.1629851758480072
    2. 't' → logprob: -2.78798508644104
    3. 'a' → logprob: -3.03798508644104
    4. 'ul' → logprob: -4.537985324859619
    5. '()' → logprob: -5.037985324859619
    6. '():' → logprob: -5.037985324859619
    7. 'int' → logprob: -5.912985324859619
    8. 'in' → logprob: -5.912985324859619
    9. 'aps' → logprob: -5.912985324859619
    10. 'it' → logprob: -6.662985324859619

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.204481840133667
    2. 'return' → logprob: -1.829481840133667
    3. ' input' → logprob: -4.204482078552246
    4. 'input' → logprob: -5.829482078552246
    5. ' ' → logprob: -6.204482078552246
    6. 'int' → logprob: -6.579482078552246
    7. '[]' → logprob: -7.329482078552246
    8. ' [' → logprob: -7.454482078552246
    9. ' int' → logprob: -7.829482078552246
    10. ' []' → logprob: -7.829482078552246

Token 36: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2583664357662201
    2. 'map' → logprob: -2.633366346359253
    3. ' input' → logprob: -2.758366346359253
    4. 'list' → logprob: -3.258366346359253
    5. 'int' → logprob: -3.633366346359253
    6. ' map' → logprob: -4.133366584777832
    7. ' list' → logprob: -5.133366584777832
    8. '[input' → logprob: -6.258366584777832
    9. 'float' → logprob: -6.383366584777832
    10. '[int' → logprob: -7.758366584777832

Token 37: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003727582807186991
    2. '(' → logprob: -8.375372886657715
    3. 'int' → logprob: -9.500372886657715
    4. '(str' → logprob: -9.875372886657715
    5. '(lambda' → logprob: -11.375372886657715
    6. '(input' → logprob: -13.625372886657715
    7. '<int' → logprob: -14.125372886657715
    8. '<|end|>' → logprob: -14.875372886657715
    9. '(list' → logprob: -15.125372886657715
    10. 'input' → logprob: -15.375372886657715

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032788405660539865
    2. ',input' → logprob: -5.753278732299805
    3. '(),' → logprob: -9.378278732299805
    4. ' ,' → logprob: -11.628278732299805
    5. '(' → logprob: -12.878278732299805
    6. ')' → logprob: -13.503278732299805
    7. '(input' → logprob: -13.628278732299805
    8. ',int' → logprob: -13.753278732299805
    9. ',(' → logprob: -14.878278732299805
    10. 'input' → logprob: -15.128278732299805

Token 39: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4288121163845062
    2. 'input' → logprob: -1.0538121461868286
    3. ')' → logprob: -10.303812026977539
    4. ' sys' → logprob: -10.303812026977539
    5. 'sys' → logprob: -11.303812026977539
    6. ' ' → logprob: -11.303812026977539
    7. ',input' → logprob: -11.803812026977539
    8. '	input' → logprob: -12.428812026977539
    9. '(input' → logprob: -12.928812026977539
    10. '=input' → logprob: -13.303812026977539

Token 40: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010485442908247933
    2. '()' → logprob: -9.875104904174805
    3. '.' → logprob: -10.625104904174805
    4. ')' → logprob: -11.000104904174805
    5. ' ().' → logprob: -12.000104904174805
    6. '(' → logprob: -12.500104904174805
    7. ').' → logprob: -14.250104904174805
    8. '())' → logprob: -14.750104904174805
    9. ' .' → logprob: -14.750104904174805
    10. ' ' → logprob: -14.750104904174805

Token 41: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.700132997939363e-05
    2. ' split' → logprob: -11.250017166137695
    3. 'strip' → logprob: -12.875017166137695
    4. ')' → logprob: -14.250017166137695
    5. 'spl' → logprob: -14.375017166137695
    6. 'plit' → logprob: -16.750017166137695
    7. '(split' → logprob: -16.875017166137695
    8. 'rstrip' → logprob: -17.125017166137695
    9. '_split' → logprob: -19.000017166137695
    10. 's' → logprob: -19.500017166137695

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06911308318376541
    2. ')' → logprob: -3.19411301612854
    3. '()' → logprob: -3.69411301612854
    4. '()))' → logprob: -7.569113254547119
    5. '))' → logprob: -8.069112777709961
    6. '())
' → logprob: -9.819112777709961
    7. ' ())' → logprob: -11.569112777709961
    8. '();)' → logprob: -13.069112777709961
    9. '()
' → logprob: -13.194112777709961
    10. '()]' → logprob: -13.444112777709961

Token 43: '_dbg' (ID: 106953)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7267940044403076
    2. '\n' → logprob: -1.2267940044403076
    3. '' → logprob: -2.3517940044403076
    4. '

' → logprob: -3.4767940044403076
    5. 'n' → logprob: -3.7267940044403076
    6. '\' → logprob: -4.226794242858887
    7. 'd' → logprob: -4.351794242858887
    8. '#' → logprob: -4.476794242858887
    9. '```' → logprob: -5.101794242858887
    10. '<|end|>' → logprob: -5.601794242858887

Token 44: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5938875079154968
    2. '_' → logprob: -1.5938875675201416
    3. '()' → logprob: -1.5938875675201416
    4. '=' → logprob: -4.0938873291015625
    5. 'def' → logprob: -5.3438873291015625
    6. ' =' → logprob: -5.4688873291015625
    7. 'f' → logprob: -5.5938873291015625
    8. '('' → logprob: -5.9688873291015625
    9. 'v' → logprob: -6.2188873291015625
    10. 'print' → logprob: -6.7188873291015625

Token 45: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.19062355160713196
    2. ' False' → logprob: -2.6906235218048096
    3. '{}' → logprob: -3.1906235218048096
    4. '[]' → logprob: -4.190623760223389
    5. 'lambda' → logprob: -4.315623760223389
    6. 'set' → logprob: -4.565623760223389
    7. ' []' → logprob: -5.190623760223389
    8. 'True' → logprob: -5.565623760223389
    9. 'print' → logprob: -5.690623760223389
    10. ' {}' → logprob: -5.815623760223389

Token 46: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5705071091651917
    2. '<|end|>' → logprob: -1.9455070495605469
    3. '\n' → logprob: -2.945507049560547
    4. '
' → logprob: -2.945507049560547
    5. '\' → logprob: -3.320507049560547
    6. 'def' → logprob: -3.445507049560547
    7. '#' → logprob: -3.445507049560547
    8. '' → logprob: -3.570507049560547
    9. ' 
' → logprob: -4.695507049560547
    10. 'newline' → logprob: -4.945507049560547

Token 47: ' True' (ID: 6432)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4312190115451813
    2. ' '' → logprob: -1.8062189817428589
    3. ''s' → logprob: -3.4312191009521484
    4. ' __' → logprob: -3.4312191009521484
    5. '"' → logprob: -3.6812191009521484
    6. ' len' → logprob: -3.8062191009521484
    7. ' sys' → logprob: -4.181219100952148
    8. ''_' → logprob: -4.306219100952148
    9. ' '_' → logprob: -5.056219100952148
    10. ' "' → logprob: -5.056219100952148

Token 48: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.061983488500118256
    2. 'else' → logprob: -2.811983585357666
    3. '	else' → logprob: -11.936983108520508
    4. ' ' → logprob: -12.061983108520508
    5. '_else' → logprob: -13.811983108520508
    6. ' or' → logprob: -14.686983108520508
    7. ' 
' → logprob: -15.311983108520508
    8. '0' → logprob: -15.686983108520508
    9. '#else' → logprob: -15.811983108520508
    10. '_' → logprob: -15.936983108520508

Token 49: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.20982080698013306
    2. 'True' → logprob: -2.2098207473754883
    3. ' False' → logprob: -2.9598207473754883
    4. 'False' → logprob: -3.9598207473754883
    5. '_' → logprob: -5.709820747375488
    6. ' not' → logprob: -5.959820747375488
    7. ' _' → logprob: -6.459820747375488
    8. 'not' → logprob: -7.459820747375488
    9. ' ' → logprob: -8.459820747375488
    10. '_debug' → logprob: -9.084820747375488

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3376839756965637
    2. '<|end|>' → logprob: -1.712683916091919
    3. '_' → logprob: -2.712683916091919
    4. '\n' → logprob: -4.462684154510498
    5. '' → logprob: -4.837684154510498
    6. '

' → logprob: -5.087684154510498
    7. '\' → logprob: -5.962684154510498
    8. '_
' → logprob: -6.087684154510498
    9. '#' → logprob: -6.462684154510498
    10. 'newline' → logprob: -6.712684154510498

Token 51: 'MAX' (ID: 21911)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8812142014503479
    2. '<|end|>' → logprob: -1.0062141418457031
    3. '#' → logprob: -1.7562141418457031
    4. '\n' → logprob: -3.506214141845703
    5. '_' → logprob: -5.631214141845703
    6. '' → logprob: -5.881214141845703
    7. '\' → logprob: -6.256214141845703
    8. '```' → logprob: -6.381214141845703
    9. ' 
' → logprob: -6.756214141845703
    10. 'def' → logprob: -7.131214141845703

Token 52: 'VIS' (ID: 82553)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.030369818210601807
    2. '_SIZE' → logprob: -4.030369758605957
    3. '_VAL' → logprob: -5.905369758605957
    4. '_LEN' → logprob: -6.030369758605957
    5. ' _' → logprob: -6.405369758605957
    6. '_VALUE' → logprob: -6.905369758605957
    7. '_A' → logprob: -8.030369758605957
    8. '_NUM' → logprob: -8.030369758605957
    9. '_LINE' → logprob: -8.030369758605957
    10. '_COUNT' → logprob: -8.030369758605957

Token 53: 'IT' (ID: 1468)
  Prédit: 'IT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.880382239818573
    2. 'ITS' → logprob: -0.880382239818573
    3. 'ITED' → logprob: -2.0053822994232178
    4. '=' → logprob: -3.7553822994232178
    5. ' =' → logprob: -5.630382061004639
    6. '_' → logprob: -5.755382061004639
    7. 'I' → logprob: -6.880382061004639
    8. 'ITOR' → logprob: -6.880382061004639
    9. 'IBILITY' → logprob: -7.630382061004639
    10. '```' → logprob: -8.130382537841797

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5307217836380005
    2. ' =' → logprob: -1.5307217836380005
    3. 'ED' → logprob: -2.405721664428711
    4. '_' → logprob: -2.905721664428711
    5. '_COUNT' → logprob: -3.530721664428711
    6. 'S' → logprob: -4.905721664428711
    7. '_ED' → logprob: -5.530721664428711
    8. ' ' → logprob: -6.530721664428711
    9. '_CNT' → logprob: -6.530721664428711
    10. '_NUM' → logprob: -6.655721664428711

Token 55: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04470451921224594
    2. '100' → logprob: -3.7947044372558594
    3. '10' → logprob: -3.9197044372558594
    4. ' int' → logprob: -8.04470443725586
    5. '200' → logprob: -8.16970443725586
    6. '1' → logprob: -8.41970443725586
    7. 'int' → logprob: -8.54470443725586
    8. '20' → logprob: -9.79470443725586
    9. '999' → logprob: -9.91970443725586
    10. '300' → logprob: -10.29470443725586

Token 56: '400' (ID: 4812)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7407183647155762
    2. '10' → logprob: -0.8657183647155762
    3. '200' → logprob: -3.740718364715576
    4. '1' → logprob: -4.115718364715576
    5. 'int' → logprob: -4.615718364715576
    6. '300' → logprob: -4.865718364715576
    7. '500' → logprob: -4.990718364715576
    8. '999' → logprob: -5.115718364715576
    9. ' ' → logprob: -5.615718364715576
    10. '2' → logprob: -5.615718364715576

Token 57: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13795620203018188
    2. '<|end|>' → logprob: -2.762956142425537
    3. '0' → logprob: -3.387956142425537
    4. ' 
' → logprob: -4.762956142425537
    5. '' → logprob: -5.012956142425537
    6. '

' → logprob: -5.762956142425537
    7. '
' → logprob: -5.762956142425537
    8. '\n' → logprob: -6.387956142425537
    9. '*' → logprob: -6.512956142425537
    10. '000' → logprob: -6.637956142425537

Token 58: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3444598317146301
    2. '#' → logprob: -1.9694597721099854
    3. 'def' → logprob: -3.5944597721099854
    4. '_' → logprob: -3.9694597721099854
    5. '

' → logprob: -4.0944600105285645
    6. '' → logprob: -4.0944600105285645
    7. 'd' → logprob: -4.0944600105285645
    8. '\n' → logprob: -4.5944600105285645
    9. 'n' → logprob: -4.7194600105285645
    10. ' ' → logprob: -5.0944600105285645

Token 59: ' printer' (ID: 28923)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.15296438336372375
    2. ' bfs' → logprob: -2.7779643535614014
    3. ' visit' → logprob: -3.0279643535614014
    4. ' main' → logprob: -3.7779643535614014
    5. ' solve' → logprob: -6.0279645919799805
    6. ' DFS' → logprob: -6.6529645919799805
    7. ' BFS' → logprob: -7.0279645919799805
    8. ' ' → logprob: -7.2779645919799805
    9. ' space' → logprob: -7.2779645919799805
    10. ' check' → logprob: -7.9029645919799805

Token 60: '(msg' (ID: 15182)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014771657064557076
    2. '(s' → logprob: -4.639771461486816
    3. '(x' → logprob: -5.639771461486816
    4. 's' → logprob: -7.514771461486816
    5. '_' → logprob: -9.139771461486816
    6. '(_' → logprob: -9.389771461486816
    7. '(:' → logprob: -9.514771461486816
    8. '():' → logprob: -9.889771461486816
    9. '(a' → logprob: -10.139771461486816
    10. '("("' → logprob: -10.139771461486816

Token 61: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.252971351146698
    2. ',' → logprob: -1.5029714107513428
    3. ')' → logprob: -7.877971172332764
    4. ' ):' → logprob: -8.127971649169922
    5. ' ,' → logprob: -9.127971649169922
    6. '):
' → logprob: -9.127971649169922
    7. ':' → logprob: -9.752971649169922
    8. ',msg' → logprob: -10.002971649169922
    9. '   ' → logprob: -11.127971649169922
    10. ' :' → logprob: -11.627971649169922

Token 62: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006329855881631374
    2. ' return' → logprob: -6.3813300132751465
    3. ' print' → logprob: -6.6313300132751465
    4. ' pass' → logprob: -6.7563300132751465
    5. '    
' → logprob: -7.7563300132751465
    6. '    ' → logprob: -7.8813300132751465
    7. ' sys' → logprob: -8.006329536437988
    8. ' ' → logprob: -8.506329536437988
    9. '(' → logprob: -8.631329536437988
    10. ' if' → logprob: -8.756329536437988

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003270403016358614
    2. ':' → logprob: -6.253270626068115
    3. ' if' → logprob: -7.503270626068115
    4. ' print' → logprob: -7.753270626068115
    5. ' return' → logprob: -9.378270149230957
    6. '    
' → logprob: -9.878270149230957
    7. ' sys' → logprob: -10.503270149230957
    8. '	print' → logprob: -10.628270149230957
    9. '<|end|>' → logprob: -10.753270149230957
    10. '	pr' → logprob: -10.878270149230957

Token 64: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36214250326156616
    2. '   ' → logprob: -2.112142562866211
    3. 'if' (adapté à ' if') → logprob: -2.237142562866211
    4. ' sys' → logprob: -3.112142562866211
    5. 'print' → logprob: -4.737142562866211
    6. ' print' → logprob: -4.862142562866211
    7. 'sys' → logprob: -5.612142562866211
    8. ' global' → logprob: -5.612142562866211
    9. 'pr' → logprob: -5.862142562866211
    10. 'global' → logprob: -6.112142562866211

Token 65: ' _' (ID: 1175)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20418156683444977
    2. '_dbg' → logprob: -2.329181671142578
    3. 'not' → logprob: -2.579181671142578
    4. ' _' → logprob: -4.954181671142578
    5. '_debug' → logprob: -5.704181671142578
    6. '_not' → logprob: -7.704181671142578
    7. '_DBG' → logprob: -8.454181671142578
    8. ' ' → logprob: -8.829181671142578
    9. '   ' → logprob: -9.454181671142578
    10. '_' → logprob: -10.704181671142578

Token 66: 'dbg' (ID: 129964)
  Prédit: '_dbg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dbg' → logprob: -0.20144031941890717
    2. 'dbg' → logprob: -1.7014403343200684
    3. 'Dbg' → logprob: -11.70143985748291
    4. ' dbg' → logprob: -11.82643985748291
    5. 'debug' → logprob: -12.45143985748291
    6. '_DBG' → logprob: -12.57643985748291
    7. 'DBG' → logprob: -13.20143985748291
    8. 'db' → logprob: -14.20143985748291
    9. '_db' → logprob: -14.32643985748291
    10. '_debug' → logprob: -14.57643985748291

Token 67: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000667640648316592
    2. ' :' → logprob: -7.625667572021484
    3. ':
' → logprob: -8.750667572021484
    4. '==' → logprob: -11.250667572021484
    5. ' ==' → logprob: -12.625667572021484
    6. ' and' → logprob: -12.875667572021484
    7. '):' → logprob: -14.125667572021484
    8. '():' → logprob: -15.250667572021484
    9. '   ' → logprob: -15.625667572021484
    10. 'and' → logprob: -15.750667572021484

Token 68: ' 
' (ID: 793)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.26116153597831726
    2. ' sys' → logprob: -2.7611615657806396
    3. ' print' → logprob: -2.8861615657806396
    4. '       ' → logprob: -2.8861615657806396
    5. '   ' → logprob: -3.2611615657806396
    6. ' ' → logprob: -4.6361613273620605
    7. ' pr' → logprob: -5.6361613273620605
    8. 'pr' → logprob: -6.6361613273620605
    9. '     
' → logprob: -7.7611613273620605
    10. ' return' → logprob: -8.136161804199219

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03670202195644379
    2. ' sys' → logprob: -4.0367021560668945
    3. ' print' → logprob: -4.2867021560668945
    4. '    ' → logprob: -6.1617021560668945
    5. '   ' → logprob: -6.6617021560668945
    6. 'print' → logprob: -7.4117021560668945
    7. 'pr' → logprob: -8.286702156066895
    8. ' pr' → logprob: -9.161702156066895
    9. 'sys' → logprob: -9.786702156066895
    10. '     ' → logprob: -10.911702156066895

Token 70: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.200095072388649
    2. ' pr' → logprob: -2.4500951766967773
    3. 'print' (adapté à ' print') → logprob: -3.0750951766967773
    4. ' sys' → logprob: -3.2000951766967773
    5. 'pr' → logprob: -5.200095176696777
    6. '   ' → logprob: -6.575095176696777
    7. '       ' → logprob: -7.200095176696777
    8. 'sys' → logprob: -8.325095176696777
    9. '    ' → logprob: -9.575095176696777
    10. 'import' → logprob: -10.450095176696777

Token 71: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.12707602977752686
    2. '(' → logprob: -2.1270761489868164
    3. '(f' → logprob: -9.252076148986816
    4. '('' → logprob: -11.002076148986816
    5. '((' → logprob: -11.627076148986816
    6. '()' → logprob: -11.752076148986816
    7. ' (' → logprob: -12.002076148986816
    8. 'msg' → logprob: -12.627076148986816
    9. '(message' → logprob: -12.877076148986816
    10. '("' → logprob: -13.002076148986816

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.416665640543215e-05
    2. ' )' → logprob: -10.87503433227539
    3. ')
' → logprob: -11.87503433227539
    4. '())' → logprob: -12.62503433227539
    5. '()' → logprob: -12.75003433227539
    6. '   ' → logprob: -14.50003433227539
    7. '`)' → logprob: -14.75003433227539
    8. '))' → logprob: -15.25003433227539
    9. ')return' → logprob: -15.25003433227539
    10. ')`' → logprob: -15.87503433227539

Token 73: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4927743971347809
    2. '\n' → logprob: -1.6177743673324585
    3. '<|end|>' → logprob: -1.8677743673324585
    4. '' → logprob: -3.742774486541748
    5. '    
' → logprob: -6.242774486541748
    6. ' ' → logprob: -6.242774486541748
    7. '

' → logprob: -6.867774486541748
    8. ' 
' → logprob: -6.992774486541748
    9. '<|end|>' → logprob: -7.242774486541748
    10. 'newline' → logprob: -7.492774486541748

Token 74: ' sys' (ID: 12228)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.32411903142929077
    2. '.exit' → logprob: -1.3241190910339355
    3. '.stderr' → logprob: -4.5741190910339355
    4. '.' → logprob: -7.6991190910339355
    5. '.stdin' → logprob: -10.824118614196777
    6. '.flush' → logprob: -11.949118614196777
    7. ' .' → logprob: -14.199118614196777
    8. '.sys' → logprob: -14.949118614196777
    9. 'exit' → logprob: -14.949118614196777
    10. '.trace' → logprob: -15.074118614196777

Token 76: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.0009726829594001174
    2. '.' → logprob: -7.250972747802734
    3. '.write' → logprob: -8.250972747802734
    4. ' .' → logprob: -14.250972747802734
    5. '.exit' → logprob: -14.625972747802734
    6. 'flush' → logprob: -15.250972747802734
    7. '.stdout' → logprob: -16.500972747802734
    8. '.Flush' → logprob: -16.875972747802734
    9. ' flush' → logprob: -17.000972747802734
    10. '.readline' → logprob: -17.125972747802734

Token 77: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008640571613796055
    2. '()
' → logprob: -7.125864028930664
    3. '()\' → logprob: -10.500864028930664
    4. '(' → logprob: -11.000864028930664
    5. '()

' → logprob: -11.375864028930664
    6. ' ()' → logprob: -13.375864028930664
    7. '<|end|>' → logprob: -14.000864028930664
    8. '\n' → logprob: -14.875864028930664
    9. '()
' → logprob: -15.125864028930664
    10. '()<' → logprob: -15.500864028930664

Token 78: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3058187663555145
    2. 'def' → logprob: -1.930818796157837
    3. '<|end|>' → logprob: -2.930818796157837
    4. '\n' → logprob: -3.180818796157837
    5. '

' → logprob: -4.430818557739258
    6. '\' → logprob: -6.305818557739258
    7. '' → logprob: -6.430818557739258
    8. ' 
' → logprob: -6.430818557739258
    9. '#' → logprob: -6.430818557739258
    10. '  
' → logprob: -7.180818557739258

Token 79: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4797966480255127
    2. ' Vis' → logprob: -2.1047966480255127
    3. ' Solver' → logprob: -2.9797966480255127
    4. ' Visit' → logprob: -3.1047966480255127
    5. ' DFS' → logprob: -3.4797966480255127
    6. ' ' → logprob: -3.6047966480255127
    7. ' Solution' → logprob: -3.7297966480255127
    8. ' Visitor' → logprob: -4.229796409606934
    9. ' My' → logprob: -4.229796409606934
    10. ' Node' → logprob: -4.354796409606934

Token 80: 'F' (ID: 37)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.002264805603772402
    2. '-F' → logprob: -6.127264976501465
    3. '[' → logprob: -10.127264976501465
    4. '-' → logprob: -11.002264976501465
    5. '[int' → logprob: -11.252264976501465
    6. ' Find' → logprob: -12.377264976501465
    7. 'F' → logprob: -12.877264976501465
    8. '_Find' → logprob: -13.877264976501465
    9. '-find' → logprob: -14.002264976501465
    10. '```' → logprob: -15.627264976501465

Token 81: ':
' (ID: 734)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: 0.0
    2. ' ind' → logprob: -17.75
    3. '[ind' → logprob: -18.75
    4. '(ind' → logprob: -19.125
    5. 'Find' → logprob: -19.875
    6. '_find' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '_ind' → logprob: -21.25
    9. 'indx' → logprob: -21.5
    10. 'Ind' → logprob: -21.625

Token 82: '   ' (ID: 271)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.19050878286361694
    2. ':' → logprob: -2.3155088424682617
    3. '():' → logprob: -2.8155088424682617
    4. 'inder' → logprob: -5.690508842468262
    5. 'Ind' → logprob: -5.815508842468262
    6. 'Set' → logprob: -5.815508842468262
    7. 's' → logprob: -6.815508842468262
    8. '():
' → logprob: -7.065508842468262
    9. 'unction' → logprob: -7.690508842468262
    10. '(set' → logprob: -7.940508842468262

Token 83: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04969777911901474
    2. 'def' (adapté à ' def') → logprob: -3.0496978759765625
    3. '   ' → logprob: -7.7996978759765625
    4. 'class' → logprob: -8.299697875976562
    5. ' __' → logprob: -8.674697875976562
    6. ' class' → logprob: -9.299697875976562
    7. ' ' → logprob: -9.799697875976562
    8. 'ndef' → logprob: -10.549697875976562
    9. '	def' → logprob: -11.049697875976562
    10. 'n' → logprob: -11.174697875976562

Token 84: ' __' (ID: 2516)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.4345113933086395
    2. ' __' → logprob: -1.059511423110962
    3. ' nit' → logprob: -5.684511184692383
    4. '__' → logprob: -6.684511184692383
    5. 'init' → logprob: -7.559511184692383
    6. 'n' → logprob: -8.309511184692383
    7. ' init' → logprob: -8.559511184692383
    8. ' _' → logprob: -9.059511184692383
    9. '_init' → logprob: -10.184511184692383
    10. ' ' → logprob: -11.684511184692383

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.034592388459714e-06
    2. ' init' → logprob: -12.125005722045898
    3. 'ini' → logprob: -14.750005722045898
    4. '_init' → logprob: -17.3750057220459
    5. '	init' → logprob: -17.8750057220459
    6. 'in' → logprob: -18.5000057220459
    7. 'inite' → logprob: -18.5000057220459
    8. ' ' → logprob: -18.7500057220459
    9. '```' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.2500057220459

Token 86: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008341164328157902
    2. '__' → logprob: -4.883341312408447
    3. '(self' → logprob: -7.508341312408447
    4. '_(' → logprob: -9.383340835571289
    5. '(' → logprob: -10.133340835571289
    6. '__((' → logprob: -10.633340835571289
    7. '__(
' → logprob: -11.258340835571289
    8. '__('' → logprob: -12.133340835571289
    9. '___' → logprob: -12.133340835571289
    10. ' (' → logprob: -12.883340835571289

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026318999007344246
    2. ' self' → logprob: -3.6513190269470215
    3. ' ' → logprob: -12.276318550109863
    4. ')' → logprob: -12.651318550109863
    5. ',' → logprob: -12.651318550109863
    6. ',self' → logprob: -12.901318550109863
    7. '	self' → logprob: -13.276318550109863
    8. '(self' → logprob: -13.276318550109863
    9. '   ' → logprob: -14.401318550109863
    10. '_self' → logprob: -15.026318550109863

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044729605317115784
    2. ' ,' → logprob: -3.169729709625244
    3. '_,' → logprob: -6.919729709625244
    4. 'self' → logprob: -8.544729232788086
    5. ' (' → logprob: -8.794729232788086
    6. ',self' → logprob: -9.419729232788086
    7. ',(' → logprob: -9.669729232788086
    8. '(' → logprob: -9.794729232788086
    9. '(self' → logprob: -9.919729232788086
    10. '__,' → logprob: -10.044729232788086

Token 89: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2722116708755493
    2. ' n' → logprob: -1.6472116708755493
    3. 'self' → logprob: -3.2722115516662598
    4. ' self' → logprob: -4.89721155166626
    5. 'size' → logprob: -9.397212028503418
    6. 's' → logprob: -9.772212028503418
    7. 'N' → logprob: -10.022212028503418
    8. ' size' → logprob: -10.147212028503418
    9. ' ' → logprob: -10.397212028503418
    10. '	n' → logprob: -10.772212028503418

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00490224314853549
    2. ' ):' → logprob: -5.504902362823486
    3. ')' → logprob: -7.754902362823486
    4. ',' → logprob: -8.254901885986328
    5. ':' → logprob: -9.129901885986328
    6. ' )' → logprob: -11.379901885986328
    7. '):
' → logprob: -11.629901885986328
    8. ' ,' → logprob: -12.629901885986328
    9. ' :' → logprob: -14.379901885986328
    10. ' ' → logprob: -14.379901885986328

Token 91: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.55290687084198
    2. '):' → logprob: -1.55290687084198
    3. '       ' → logprob: -1.80290687084198
    4. '<|end|>' → logprob: -4.3029069900512695
    5. ')' → logprob: -4.4279069900512695
    6. ',' → logprob: -4.9279069900512695
    7. '   ' → logprob: -5.3029069900512695
    8. '    ' → logprob: -5.6779069900512695
    9. ' :' → logprob: -6.3029069900512695
    10. '<|end|>' → logprob: -7.0529069900512695

Token 92: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5798107981681824
    2. 'self' (adapté à ' self') → logprob: -0.8298107981681824
    3. '       ' → logprob: -5.829810619354248
    4. '	self' → logprob: -7.204810619354248
    5. '   ' → logprob: -8.829811096191406
    6. ' ' → logprob: -11.704811096191406
    7. '    ' → logprob: -11.954811096191406
    8. '	   ' → logprob: -12.579811096191406
    9. ' ' → logprob: -12.829811096191406
    10. '	' → logprob: -13.204811096191406

Token 93: '.p' (ID: 1201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04751665145158768
    2. ' .' → logprob: -3.2975165843963623
    3. '.parent' → logprob: -5.547516822814941
    4. '._' → logprob: -5.672516822814941
    5. ' ' → logprob: -7.547516822814941
    6. '.data' → logprob: -7.797516822814941
    7. '.n' → logprob: -8.797516822814941
    8. '.py' → logprob: -9.047516822814941
    9. '.__' → logprob: -9.547516822814941
    10. 'parent' → logprob: -9.547516822814941

Token 94: ' =' (ID: 314)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6441559791564941
    2. ' =' → logprob: -1.2691559791564941
    3. '=' → logprob: -1.6441559791564941
    4. ' ar' → logprob: -9.269155502319336
    5. 'aren' → logprob: -9.644155502319336
    6. '=[' → logprob: -9.769155502319336
    7. 'arr' → logprob: -9.894155502319336
    8. '[' → logprob: -10.019155502319336
    9. 'a' → logprob: -10.394155502319336
    10. '=[]' → logprob: -10.519155502319336

Token 95: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.26760923862457275
    2. ' list' → logprob: -2.142609119415283
    3. '[list' → logprob: -2.767609119415283
    4. '[' → logprob: -3.267609119415283
    5. ' [' → logprob: -4.142609119415283
    6. '[-' → logprob: -7.642609119415283
    7. ' [-' → logprob: -10.017609596252441
    8. '[n' → logprob: -10.392609596252441
    9. '=list' → logprob: -10.517609596252441
    10. '[List' → logprob: -11.517609596252441

Token 96: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -1.0921942703134846e-05
    2. 'range' → logprob: -11.50001049041748
    3. '(' → logprob: -14.12501049041748
    4. '	range' → logprob: -17.250011444091797
    5. ' range' → logprob: -19.250011444091797
    6. '```' → logprob: -20.500011444091797
    7. '

' → logprob: -20.500011444091797
    8. '()' → logprob: -20.625011444091797
    9. '(
' → logprob: -20.750011444091797
    10. '   ' → logprob: -20.875011444091797

Token 97: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.125016212463379
    3. 'n' → logprob: -13.625016212463379
    4. ' n' → logprob: -15.250016212463379
    5. ')n' → logprob: -16.125017166137695
    6. '	n' → logprob: -16.750017166137695
    7. ' (' → logprob: -17.750017166137695
    8. ',n' → logprob: -19.125017166137695
    9. '   ' → logprob: -20.125017166137695
    10. ')(' → logprob: -20.125017166137695

Token 98: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000652389950118959
    2. ' ))' → logprob: -7.875652313232422
    3. '))
' → logprob: -8.250652313232422
    4. ')' → logprob: -12.125652313232422
    5. '()))' → logprob: -12.875652313232422
    6. ')))' → logprob: -13.625652313232422
    7. ' ))
' → logprob: -15.125652313232422
    8. ' ' → logprob: -15.125652313232422
    9. '));' → logprob: -15.375652313232422
    10. '       ' → logprob: -16.125652313232422

Token 99: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006818854715675116
    2. '       ' → logprob: -5.131818771362305
    3. ' self' → logprob: -7.131818771362305
    4. '	self' → logprob: -9.631818771362305
    5. '   ' → logprob: -11.381818771362305
    6. 's' → logprob: -11.756818771362305
    7. ' ' → logprob: -13.131818771362305
    8. '           ' → logprob: -14.006818771362305
    9. '	' → logprob: -15.006818771362305
    10. '
' → logprob: -15.131818771362305

Token 101: '.r' (ID: 2951)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.9501531720161438
    2. '.rank' → logprob: -1.450153112411499
    3. '.sz' → logprob: -1.700153112411499
    4. 'size' → logprob: -1.950153112411499
    5. 'sz' → logprob: -3.950153112411499
    6. '.s' → logprob: -4.950153350830078
    7. '_sz' → logprob: -5.200153350830078
    8. '.' → logprob: -5.700153350830078
    9. '_size' → logprob: -5.825153350830078
    10. '._' → logprob: -6.200153350830078

Token 102: ' =' (ID: 314)
  Prédit: 'ank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ank' → logprob: -0.15322911739349365
    2. 'anks' → logprob: -2.028229236602783
    3. ' =' → logprob: -4.653229236602783
    4. '=' → logprob: -7.653229236602783
    5. '   ' → logprob: -9.153228759765625
    6. 'anking' → logprob: -9.278228759765625
    7. ' ank' → logprob: -10.028228759765625
    8. 'a' → logprob: -10.153228759765625
    9. ' ' → logprob: -10.528228759765625
    10. 'nk' → logprob: -10.528228759765625

Token 103: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12845048308372498
    2. ' [' → logprob: -2.128450393676758
    3. '[n' → logprob: -6.503450393676758
    4. '([' → logprob: -10.878450393676758
    5. '(n' → logprob: -13.753450393676758
    6. '0' → logprob: -13.878450393676758
    7. 'n' → logprob: -14.003450393676758
    8. '(' → logprob: -14.628450393676758
    9. ' n' → logprob: -15.503450393676758
    10. ' ' → logprob: -15.753450393676758

Token 104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005330050829797983
    2. ' ' → logprob: -5.2553300857543945
    3. '1' → logprob: -9.255330085754395
    4. '   ' → logprob: -15.317830085754395
    5. '(' → logprob: -16.005329132080078
    6. '  ' → logprob: -16.255329132080078
    7. '[' → logprob: -17.567829132080078
    8. '-' → logprob: -17.630329132080078
    9. ')' → logprob: -17.755329132080078
    10. '2' → logprob: -17.755329132080078

Token 105: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18294423818588257
    2. ']*' → logprob: -1.8079442977905273
    3. ' ]' → logprob: -6.182944297790527
    4. ']*(' → logprob: -7.557944297790527
    5. ' for' → logprob: -7.932944297790527
    6. ',' → logprob: -8.557944297790527
    7. ')' → logprob: -11.057944297790527
    8. ',n' → logprob: -11.432944297790527
    9. ' ' → logprob: -11.682944297790527
    10. 'for' → logprob: -12.307944297790527

Token 106: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.869017852295656e-06
    2. ' n' → logprob: -12.000006675720215
    3. '(n' → logprob: -14.375006675720215
    4. '	n' → logprob: -16.50000762939453
    5. '_n' → logprob: -16.87500762939453
    6. ')n' → logprob: -18.12500762939453
    7. '<|end|>' → logprob: -18.37500762939453
    8. ',n' → logprob: -18.62500762939453
    9. '$n' → logprob: -19.50000762939453
    10. '(' → logprob: -20.37500762939453

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031247306615114212
    2. 'def' (adapté à ' def') → logprob: -3.53124737739563
    3. ' def' → logprob: -7.031247138977051
    4. '   ' → logprob: -8.90624713897705
    5. '    
' → logprob: -9.03124713897705
    6. '<|end|>' → logprob: -9.03124713897705
    7. '

' → logprob: -9.28124713897705
    8. '	def' → logprob: -9.78124713897705
    9. '
' → logprob: -10.15624713897705
    10. ' 
' → logprob: -11.03124713897705

Token 110: ' root' (ID: 6577)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.030573440715670586
    2. 'find' → logprob: -3.5305733680725098
    3. ' union' → logprob: -8.030573844909668
    4. ' f' → logprob: -9.280573844909668
    5. ' fin' → logprob: -9.280573844909668
    6. ' root' → logprob: -9.780573844909668
    7. 'f' → logprob: -9.905573844909668
    8. ' unite' → logprob: -10.280573844909668
    9. ' ' → logprob: -10.530573844909668
    10. '_find' → logprob: -10.905573844909668

Token 111: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.870950215263292e-05
    2. '(' → logprob: -10.000048637390137
    3. '(s' → logprob: -12.875048637390137
    4. 'self' → logprob: -15.625048637390137
    5. ' (' → logprob: -15.750048637390137
    6. '(this' → logprob: -16.500049591064453
    7. '(Self' → logprob: -17.000049591064453
    8. '	self' → logprob: -17.250049591064453
    9. '(
' → logprob: -17.250049591064453
    10. '   ' → logprob: -17.375049591064453

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.885492621222511e-05
    2. ',u' → logprob: -10.250068664550781
    3. ' ,' → logprob: -10.750068664550781
    4. ',i' → logprob: -12.250068664550781
    5. 'self' → logprob: -12.500068664550781
    6. ',x' → logprob: -13.125068664550781
    7. ',a' → logprob: -14.000068664550781
    8. ',self' → logprob: -15.375068664550781
    9. ',v' → logprob: -15.750068664550781
    10. 'u' → logprob: -16.12506866455078

Token 113: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016166331246495247
    2. ' x' → logprob: -4.5161662101745605
    3. 'u' → logprob: -6.1411662101745605
    4. 'a' → logprob: -6.2661662101745605
    5. 'i' → logprob: -7.1411662101745605
    6. 'self' → logprob: -9.266166687011719
    7. ' u' → logprob: -9.641166687011719
    8. 'v' → logprob: -10.391166687011719
    9. ' a' → logprob: -10.516166687011719
    10. ' i' → logprob: -10.766166687011719

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021712594025302678
    2. ' ):' → logprob: -8.62521743774414
    3. ')' → logprob: -10.37521743774414
    4. '):
' → logprob: -12.25021743774414
    5. ':' → logprob: -13.50021743774414
    6. '   ' → logprob: -16.62521743774414
    7. ' )' → logprob: -16.87521743774414
    8. '):
' → logprob: -18.00021743774414
    9. '():' → logprob: -18.00021743774414
    10. ' ' → logprob: -18.87521743774414

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045736716128885746
    2. ':' → logprob: -8.375457763671875
    3. ' while' → logprob: -10.000457763671875
    4. '	' → logprob: -10.250457763671875
    5. '   ' → logprob: -10.500457763671875
    6. '
' → logprob: -10.625457763671875
    7. ':
' → logprob: -10.875457763671875
    8. '<|end|>' → logprob: -10.875457763671875
    9. ' if' → logprob: -11.875457763671875
    10. ' ' → logprob: -11.875457763671875

Token 116: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21973662078380585
    2. ' while' → logprob: -2.2197365760803223
    3. 'if' → logprob: -2.4697365760803223
    4. 'while' (adapté à ' while') → logprob: -5.594736576080322
    5. '       ' → logprob: -8.46973705291748
    6. '    ' → logprob: -10.71973705291748
    7. '   ' → logprob: -10.71973705291748
    8. '	if' → logprob: -10.84473705291748
    9. ' p' → logprob: -11.71973705291748
    10. '	while' → logprob: -12.09473705291748

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03377455472946167
    2. 'x' → logprob: -3.5337746143341064
    3. ' self' → logprob: -5.533774375915527
    4. ' x' → logprob: -9.658774375915527
    5. '(self' → logprob: -14.408774375915527
    6. '	self' → logprob: -14.783774375915527
    7. ' ' → logprob: -16.408775329589844
    8. '   ' → logprob: -16.783775329589844
    9. '(x' → logprob: -17.533775329589844
    10. 'Self' → logprob: -18.408775329589844

Token 118: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00030674142180942
    2. 'p' → logprob: -8.250307083129883
    3. ' !=' → logprob: -11.000307083129883
    4. '!=' → logprob: -11.000307083129883
    5. '.' → logprob: -12.250307083129883
    6. '<p' → logprob: -12.875307083129883
    7. ' .' → logprob: -13.875307083129883
    8. '   ' → logprob: -14.625307083129883
    9. '_p' → logprob: -15.000307083129883
    10. '[p' → logprob: -15.125307083129883

Token 119: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.500000953674316
    3. '[self' → logprob: -16.25
    4. 'x' → logprob: -16.625
    5. ' [' → logprob: -17.5
    6. '[
' → logprob: -17.875
    7. '[int' → logprob: -18.125
    8. '```' → logprob: -18.125
    9. '[p' → logprob: -18.25
    10. '<x' → logprob: -18.875

Token 120: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6370429992675781
    2. ']!=' → logprob: -1.3870429992675781
    3. '!=' → logprob: -1.5120429992675781
    4. ' !=' → logprob: -7.512042999267578
    5. 'x' → logprob: -8.137042999267578
    6. '()!=' → logprob: -11.887042999267578
    7. ')!=' → logprob: -11.887042999267578
    8. 'is' → logprob: -12.262042999267578
    9. '[' → logprob: -12.387042999267578
    10. ' ]' → logprob: -12.762042999267578

Token 121: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00219557574018836
    2. ' !=' → logprob: -6.127195358276367
    3. ']!=' → logprob: -12.127195358276367
    4. '()!=' → logprob: -13.002195358276367
    5. 'x' → logprob: -13.377195358276367
    6. ')!=' → logprob: -14.252195358276367
    7. '!==' → logprob: -14.877195358276367
    8. '!=(' → logprob: -16.502195358276367
    9. '!=-' → logprob: -16.502195358276367
    10. 'is' → logprob: -17.377195358276367

Token 122: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -17.125709533691406
    4. ')x' → logprob: -19.250709533691406
    5. '
' → logprob: -19.875709533691406
    6. '(x' → logprob: -21.500709533691406
    7. '<|end|>' → logprob: -21.625709533691406
    8. '   ' → logprob: -21.750709533691406
    9. '>x' → logprob: -21.750709533691406
    10. ' ' → logprob: -21.875709533691406

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2813645005226135
    2. ':
' → logprob: -1.4063644409179688
    3. ' and' → logprob: -10.156364440917969
    4. ':x' → logprob: -10.156364440917969
    5. ' :' → logprob: -10.531364440917969
    6. '):
' → logprob: -10.531364440917969
    7. ' :
' → logprob: -10.906364440917969
    8. 'x' → logprob: -11.406364440917969
    9. ',' → logprob: -11.406364440917969
    10. 'and' → logprob: -11.656364440917969

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2389572709798813
    2. ' x' → logprob: -1.8639572858810425
    3. '       ' → logprob: -3.363957166671753
    4. 'x' → logprob: -4.863957405090332
    5. ':' → logprob: -5.613957405090332
    6. ',' → logprob: -5.738957405090332
    7. '
' → logprob: -6.238957405090332
    8. ':
' → logprob: -6.613957405090332
    9. '<|end|>' → logprob: -6.988957405090332
    10. '   ' → logprob: -7.238957405090332

Token 125: ' self' (ID: 1051)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10113894939422607
    2. 'self' (adapté à ' self') → logprob: -2.3511390686035156
    3. ' self' → logprob: -7.601139068603516
    4. ' x' → logprob: -8.226139068603516
    5. '           ' → logprob: -8.726139068603516
    6. '	self' → logprob: -14.226139068603516
    7. '   ' → logprob: -14.226139068603516
    8. '
' → logprob: -15.601139068603516
    9. '	x' → logprob: -15.726139068603516
    10. '               ' → logprob: -16.101139068603516

Token 126: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.038692656904459
    2. 'p' → logprob: -3.4136927127838135
    3. '.x' → logprob: -6.538692474365234
    4. '=' → logprob: -7.038692474365234
    5. '[x' → logprob: -7.163692474365234
    6. 'x' → logprob: -7.413692474365234
    7. ' =' → logprob: -7.913692474365234
    8. '.' → logprob: -8.163692474365234
    9. ']' → logprob: -8.788692474365234
    10. '[p' → logprob: -8.913692474365234

Token 127: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00014215784904081374
    2. 'x' → logprob: -8.875142097473145
    3. '[' → logprob: -13.375142097473145
    4. '	x' → logprob: -16.12514305114746
    5. ' x' → logprob: -16.25014305114746
    6. '[p' → logprob: -16.25014305114746
    7. '_x' → logprob: -16.50014305114746
    8. ' [' → logprob: -16.87514305114746
    9. '[
' → logprob: -16.87514305114746
    10. '```' → logprob: -17.12514305114746

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013315865769982338
    2. '=' → logprob: -4.638315677642822
    3. ']=' → logprob: -6.013315677642822
    4. ' =' → logprob: -7.013315677642822
    5. '[x' → logprob: -8.88831615447998
    6. '[' → logprob: -10.38831615447998
    7. ' ]' → logprob: -10.76331615447998
    8. ')' → logprob: -11.76331615447998
    9. 'x' → logprob: -12.01331615447998
    10. '=x' → logprob: -13.76331615447998

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889397442340851
    2. ' =' → logprob: -2.5788938999176025
    3. '=x' → logprob: -13.078893661499023
    4. '[x' → logprob: -13.203893661499023
    5. 'x' → logprob: -15.828893661499023
    6. '[' → logprob: -16.453893661499023
    7. '=
' → logprob: -17.453893661499023
    8. ']=' → logprob: -17.453893661499023
    9. ']' → logprob: -17.578893661499023
    10. ',' → logprob: -17.578893661499023

Token 130: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.201423779129982
    2. ' self' → logprob: -1.7014237642288208
    3. '(self' → logprob: -12.201423645019531
    4. '[self' → logprob: -12.576423645019531
    5. '	self' → logprob: -13.451423645019531
    6. ' ' → logprob: -15.576423645019531
    7. '=self' → logprob: -16.32642364501953
    8. '<|end|>' → logprob: -16.57642364501953
    9. '       ' → logprob: -16.70142364501953
    10. '    ' → logprob: -17.45142364501953

Token 131: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00019245444855187088
    2. '[self' → logprob: -9.375192642211914
    3. 'self' → logprob: -9.875192642211914
    4. '[p' → logprob: -10.250192642211914
    5. 'p' → logprob: -11.375192642211914
    6. '[x' → logprob: -12.625192642211914
    7. '[' → logprob: -13.000192642211914
    8. '.' → logprob: -13.750192642211914
    9. '```' → logprob: -14.250192642211914
    10. ' .' → logprob: -14.750192642211914

Token 132: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.005585195031017065
    2. '[x' → logprob: -5.255585193634033
    3. 'self' → logprob: -8.005585670471191
    4. '[' → logprob: -11.380585670471191
    5. ' self' → logprob: -12.880585670471191
    6. '	self' → logprob: -13.255585670471191
    7. '[
' → logprob: -14.130585670471191
    8. '[p' → logprob: -14.380585670471191
    9. '(self' → logprob: -14.755585670471191
    10. 'x' → logprob: -16.380584716796875

Token 133: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.4894986785948277e-05
    2. 'p' → logprob: -10.375044822692871
    3. '.x' → logprob: -12.000044822692871
    4. '.' → logprob: -13.000044822692871
    5. ' .' → logprob: -13.500044822692871
    6. '[x' → logprob: -13.750044822692871
    7. '[p' → logprob: -14.625044822692871
    8. '_p' → logprob: -14.875044822692871
    9. ']' → logprob: -14.875044822692871
    10. 'root' → logprob: -15.000044822692871

Token 134: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0006277294596657157
    2. 'x' → logprob: -7.375627517700195
    3. ' x' → logprob: -14.625627517700195
    4. '(x' → logprob: -15.500627517700195
    5. '[' → logprob: -15.625627517700195
    6. '{x' → logprob: -16.250627517700195
    7. '	x' → logprob: -16.250627517700195
    8. ']' → logprob: -17.000627517700195
    9. ')x' → logprob: -17.250627517700195
    10. '[
' → logprob: -17.375627517700195

Token 135: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6233922243118286
    2. ']]' → logprob: -0.8733922243118286
    3. '[x' → logprob: -3.248392105102539
    4. 'x' → logprob: -4.998392105102539
    5. ' ]]' → logprob: -8.248392105102539
    6. ']]
' → logprob: -8.373392105102539
    7. ' ]' → logprob: -8.998392105102539
    8. ']
' → logprob: -9.748392105102539
    9. '])' → logprob: -10.748392105102539
    10. '[' → logprob: -11.748392105102539

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01057740580290556
    2. 'x' → logprob: -4.635577201843262
    3. ' x' → logprob: -7.135577201843262
    4. '   ' → logprob: -11.260577201843262
    5. '       ' → logprob: -12.385577201843262
    6. '
' → logprob: -12.385577201843262
    7. '	x' → logprob: -14.010577201843262
    8. '               ' → logprob: -14.760577201843262
    9. '(x' → logprob: -15.260577201843262
    10. '		' → logprob: -15.260577201843262

Token 137: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.008628051728010178
    2. ' x' → logprob: -4.758627891540527
    3. '           ' → logprob: -11.383627891540527
    4. '	x' → logprob: -13.508627891540527
    5. '       ' → logprob: -14.758627891540527
    6. '   ' → logprob: -14.883627891540527
    7. ' ' → logprob: -18.383628845214844
    8. '
' → logprob: -18.383628845214844
    9. ')x' → logprob: -19.508628845214844
    10. '  ' → logprob: -19.883628845214844

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.328889846801758
    4. '.=' → logprob: -16.453889846801758
    5. '=

' → logprob: -17.328889846801758
    6. '=p' → logprob: -17.328889846801758
    7. '=
' → logprob: -17.828889846801758
    8. ' =
' → logprob: -17.828889846801758
    9. ' +=' → logprob: -18.453889846801758
    10. '+=' → logprob: -18.703889846801758

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889199256896973
    2. ' self' → logprob: -2.5788919925689697
    3. '	self' → logprob: -13.70389175415039
    4. '   ' → logprob: -14.95389175415039
    5. '[self' → logprob: -15.32889175415039
    6. '(self' → logprob: -15.45389175415039
    7. '           ' → logprob: -16.20389175415039
    8. ' ' → logprob: -16.20389175415039
    9. '       ' → logprob: -16.45389175415039
    10. '=self' → logprob: -17.57889175415039

Token 140: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005026352009736001
    2. 'p' → logprob: -7.750502586364746
    3. '.' → logprob: -10.250502586364746
    4. '[x' → logprob: -11.125502586364746
    5. '.x' → logprob: -12.000502586364746
    6. '[p' → logprob: -12.125502586364746
    7. ' .' → logprob: -12.375502586364746
    8. ' p' → logprob: -13.875502586364746
    9. '```' → logprob: -13.875502586364746
    10. 'x' → logprob: -14.000502586364746

Token 141: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00022165567497722805
    2. 'x' → logprob: -8.500221252441406
    3. '[' → logprob: -11.250221252441406
    4. '```' → logprob: -13.250221252441406
    5. ' x' → logprob: -13.875221252441406
    6. '[
' → logprob: -14.125221252441406
    7. '[self' → logprob: -14.500221252441406
    8. ' [' → logprob: -15.375221252441406
    9. '(x' → logprob: -15.375221252441406
    10. '	x' → logprob: -15.750221252441406

Token 142: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005988170392811298
    2. ']' → logprob: -5.255988121032715
    3. ')
' → logprob: -7.380988121032715
    4. '       ' → logprob: -10.630988121032715
    5. ' )' → logprob: -10.755988121032715
    6. ')]' → logprob: -11.255988121032715
    7. ']
' → logprob: -11.380988121032715
    8. ')return' → logprob: -11.505988121032715
    9. '[' → logprob: -11.630988121032715
    10. '   ' → logprob: -12.005988121032715

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033244609367102385
    2. 'return' → logprob: -6.003324508666992
    3. ' return' → logprob: -7.503324508666992
    4. '           ' → logprob: -9.128324508666992
    5. '
' → logprob: -9.503324508666992
    6. '   ' → logprob: -9.503324508666992
    7. '<|end|>' → logprob: -12.003324508666992
    8. '	' → logprob: -12.253324508666992
    9. 'eturn' → logprob: -12.503324508666992
    10. '	return' → logprob: -12.628324508666992

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05925020948052406
    2. ' return' → logprob: -3.0592501163482666
    3. '       ' → logprob: -4.559250354766846
    4. '   ' → logprob: -9.184249877929688
    5. '	return' → logprob: -10.934249877929688
    6. 'eturn' → logprob: -12.559249877929688
    7. ' ' → logprob: -12.934249877929688
    8. '    ' → logprob: -13.059249877929688
    9. '
' → logprob: -13.184249877929688
    10. 'x' → logprob: -13.309249877929688

Token 145: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868711292743683
    2. ' x' → logprob: -1.136871099472046
    3. '	x' → logprob: -16.886871337890625
    4. '(x' → logprob: -18.636871337890625
    5. ' ' → logprob: -19.136871337890625
    6. ' ' → logprob: -19.261871337890625
    7. '   ' → logprob: -19.761871337890625
    8. ')x' → logprob: -20.261871337890625
    9. '"x' → logprob: -20.761871337890625
    10. '_x' → logprob: -21.136871337890625

Token 146: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09625537693500519
    2. '   ' → logprob: -2.721255302429199
    3. '<|end|>' → logprob: -3.971255302429199
    4. '    
' → logprob: -5.346255302429199
    5. '  
' → logprob: -6.846255302429199
    6. ' 
' → logprob: -7.471255302429199
    7. '<|end|>' → logprob: -8.8462553024292
    8. '   
' → logprob: -9.2212553024292
    9. '       ' → logprob: -9.2212553024292
    10. '\n' → logprob: -9.4712553024292

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06768351048231125
    2. '
' → logprob: -3.442683458328247
    3. '    
' → logprob: -4.317683696746826
    4. ' 
' → logprob: -5.067683696746826
    5. 'def' → logprob: -5.442683696746826
    6. '<|end|>' → logprob: -5.942683696746826
    7. ' ' → logprob: -6.067683696746826
    8. ' def' → logprob: -6.692683696746826
    9. '  
' → logprob: -6.817683696746826
    10. '```' → logprob: -7.817683696746826

Token 148: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.052078694105148315
    2. '   ' → logprob: -3.9270787239074707
    3. ' 
' → logprob: -4.802078723907471
    4. '    
' → logprob: -5.052078723907471
    5. 'def' (adapté à ' def') → logprob: -5.177078723907471
    6. '<|end|>' → logprob: -5.427078723907471
    7. '  
' → logprob: -6.177078723907471
    8. '\n' → logprob: -6.677078723907471
    9. '```' → logprob: -7.052078723907471
    10. ' def' → logprob: -7.052078723907471

Token 149: ' merge' (ID: 20345)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -1.2980183362960815
    2. ' union' → logprob: -1.4230183362960815
    3. 'un' → logprob: -1.5480183362960815
    4. ' unite' → logprob: -1.5480183362960815
    5. 'join' → logprob: -3.548018455505371
    6. ' join' → logprob: -4.548018455505371
    7. 'uni' → logprob: -5.423018455505371
    8. ' un' → logprob: -5.548018455505371
    9. ' unify' → logprob: -5.923018455505371
    10. 'merge' → logprob: -6.048018455505371

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5760567784309387
    2. '(' → logprob: -0.8260567784309387
    3. ' (' → logprob: -9.326056480407715
    4. '(s' → logprob: -10.951056480407715
    5. '(
' → logprob: -11.951056480407715
    6. '(a' → logprob: -13.576056480407715
    7. '(x' → logprob: -13.951056480407715
    8. '(this' → logprob: -14.326056480407715
    9. 'self' → logprob: -15.201056480407715
    10. '<|end|>' → logprob: -15.201056480407715

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14792944490909576
    2. '(' → logprob: -2.2729294300079346
    3. '(self' → logprob: -3.7729294300079346
    4. '(x' → logprob: -4.772929668426514
    5. ' ,' → logprob: -6.522929668426514
    6. ')' → logprob: -7.397929668426514
    7. 'self' → logprob: -8.147929191589355
    8. ',self' → logprob: -8.397929191589355
    9. '(a' → logprob: -9.022929191589355
    10. ' (' → logprob: -9.022929191589355

Token 152: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4112459123134613
    2. ' x' → logprob: -1.1612459421157837
    3. 'a' → logprob: -3.911245822906494
    4. ' a' → logprob: -5.536245822906494
    5. 'u' → logprob: -9.786246299743652
    6. ' u' → logprob: -10.036246299743652
    7. 'self' → logprob: -11.661246299743652
    8. ' ' → logprob: -11.786246299743652
    9. ' self' → logprob: -12.786246299743652
    10. ')x' → logprob: -13.661246299743652

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -11.250024795532227
    3. ',y' → logprob: -11.375024795532227
    4. ',x' → logprob: -15.500024795532227
    5. ',
' → logprob: -15.625024795532227
    6. '_,' → logprob: -17.875024795532227
    7. 'y' → logprob: -18.250024795532227
    8. ',int' → logprob: -18.625024795532227
    9. ',b' → logprob: -18.875024795532227
    10. '   ' → logprob: -19.000024795532227

Token 154: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20141352713108063
    2. 'y' → logprob: -1.7014135122299194
    3. '	y' → logprob: -16.076414108276367
    4. ' ' → logprob: -16.576414108276367
    5. ',y' → logprob: -17.576414108276367
    6. ')y' → logprob: -18.326414108276367
    7. ' ' → logprob: -18.451414108276367
    8. '   ' → logprob: -19.201414108276367
    9. ')' → logprob: -19.451414108276367
    10. '    ' → logprob: -19.451414108276367

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018013193039223552
    2. '):
' → logprob: -6.376801490783691
    3. ' ):' → logprob: -9.251801490783691
    4. ')' → logprob: -13.376801490783691
    5. '):
' → logprob: -13.626801490783691
    6. ':' → logprob: -16.251800537109375
    7. '):

' → logprob: -16.376800537109375
    8. ' ):
' → logprob: -16.501800537109375
    9. '   ' → logprob: -16.626800537109375
    10. ' ' → logprob: -16.751800537109375

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7729771137237549
    2. '<|end|>' → logprob: -1.1479771137237549
    3. ':' → logprob: -2.147977113723755
    4. ' x' → logprob: -3.647977113723755
    5. '):
' → logprob: -3.772977113723755
    6. '):' → logprob: -4.147976875305176
    7. ')' → logprob: -4.272976875305176
    8. ':
' → logprob: -4.647976875305176
    9. ',' → logprob: -5.397976875305176
    10. 'x' → logprob: -6.522976875305176

Token 157: ' rx' (ID: 37623)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1605801284313202
    2. ' x' → logprob: -1.9105801582336426
    3. 'rx' (adapté à ' rx') → logprob: -8.785579681396484
    4. '   ' → logprob: -9.035579681396484
    5. ' rx' → logprob: -9.785579681396484
    6. '	x' → logprob: -11.660579681396484
    7. ' ' → logprob: -12.160579681396484
    8. 'xr' → logprob: -12.160579681396484
    9. 'a' → logprob: -13.035579681396484
    10. '```' → logprob: -13.660579681396484

Token 158: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25201404094696045
    2. '=' → logprob: -1.5020140409469604
    3. ',' → logprob: -9.50201416015625
    4. ' ' → logprob: -12.25201416015625
    5. ' =
' → logprob: -13.12701416015625
    6. ')' → logprob: -13.12701416015625
    7. '=self' → logprob: -14.37701416015625
    8. '   ' → logprob: -15.12701416015625
    9. '  ' → logprob: -16.12701416015625
    10. '=

' → logprob: -16.12701416015625

Token 159: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.04347489774227142
    2. ' ry' → logprob: -3.1684749126434326
    3. ' =' → logprob: -7.7934746742248535
    4. '=' → logprob: -10.543475151062012
    5. 'y' → logprob: -11.168475151062012
    6. 'rz' → logprob: -12.668475151062012
    7. 'rys' → logprob: -12.793475151062012
    8. 'ryw' → logprob: -12.793475151062012
    9. ' ' → logprob: -13.168475151062012
    10. 'qy' → logprob: -13.793475151062012

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. '=self' → logprob: -14.501928329467773
    4. ',' → logprob: -16.501928329467773
    5. ')' → logprob: -16.876928329467773
    6. ' ' → logprob: -17.126928329467773
    7. ' =)' → logprob: -18.126928329467773
    8. ' =
' → logprob: -18.251928329467773
    9. ')=' → logprob: -19.626928329467773
    10. '＝' → logprob: -19.876928329467773

Token 161: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6932550072669983
    2. 'self' → logprob: -0.6932550072669983
    3. '(self' → logprob: -9.193255424499512
    4. '   ' → logprob: -13.443255424499512
    5. '[self' → logprob: -13.818255424499512
    6. '	self' → logprob: -14.068255424499512
    7. '    ' → logprob: -14.193255424499512
    8. ' ' → logprob: -14.568255424499512
    9. '=self' → logprob: -14.568255424499512
    10. '       ' → logprob: -14.943255424499512

Token 162: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.01644018106162548
    2. '.' → logprob: -4.141440391540527
    3. 'root' → logprob: -8.016440391540527
    4. ' .' → logprob: -10.391440391540527
    5. '.
' → logprob: -10.891440391540527
    6. '.p' → logprob: -12.516440391540527
    7. '[root' → logprob: -12.516440391540527
    8. ' root' → logprob: -12.641440391540527
    9. '(root' → logprob: -12.766440391540527
    10. '._' → logprob: -13.016440391540527

Token 163: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.506661833962426e-05
    2. '(' → logprob: -9.37508487701416
    3. '(y' → logprob: -16.625085830688477
    4. ' (' → logprob: -17.875085830688477
    5. '(
' → logprob: -18.125085830688477
    6. 'x' → logprob: -19.375085830688477
    7. '((' → logprob: -20.000085830688477
    8. '(s' → logprob: -20.125085830688477
    9. ',x' → logprob: -20.125085830688477
    10. ')' → logprob: -20.500085830688477

Token 164: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00014811802248004824
    2. ' ),' → logprob: -8.875147819519043
    3. ',' → logprob: -11.875147819519043
    4. ')' → logprob: -13.750147819519043
    5. ',),' → logprob: -17.12514877319336
    6. '),(' → logprob: -17.25014877319336
    7. ' ,' → logprob: -17.87514877319336
    8. '   ' → logprob: -18.62514877319336
    9. '),
' → logprob: -18.75014877319336
    10. ' ' → logprob: -19.00014877319336

Token 165: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4347176253795624
    2. 'self' → logprob: -1.0597176551818848
    3. 'y' → logprob: -5.559717655181885
    4. ' y' → logprob: -6.184717655181885
    5. 'ry' → logprob: -9.809717178344727
    6. ' ry' → logprob: -11.559717178344727
    7. ' ' → logprob: -11.809717178344727
    8. ' ' → logprob: -12.559717178344727
    9. '(self' → logprob: -12.684717178344727
    10. ' 
' → logprob: -13.309717178344727

Token 166: '.root' (ID: 25375)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6932951807975769
    2. '.root' → logprob: -0.6932951807975769
    3. ' root' → logprob: -8.9432954788208
    4. '.' → logprob: -11.5682954788208
    5. ' .' → logprob: -12.6932954788208
    6. '[root' → logprob: -13.3182954788208
    7. '	root' → logprob: -14.0682954788208
    8. '(root' → logprob: -14.5682954788208
    9. '/root' → logprob: -14.5682954788208
    10. ' ' → logprob: -14.5682954788208

Token 167: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -7.898723561083898e-05
    2. '(' → logprob: -9.500079154968262
    3. ')' → logprob: -13.125079154968262
    4. ' (' → logprob: -13.750079154968262
    5. 'y' → logprob: -14.375079154968262
    6. ')(' → logprob: -15.750079154968262
    7. '(
' → logprob: -17.000078201293945
    8. ')y' → logprob: -17.375078201293945
    9. '   ' → logprob: -17.750078201293945
    10. ' y' → logprob: -18.000078201293945

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0789230540394783
    2. ')
' → logprob: -2.578922986984253
    3. ')
' → logprob: -10.953923225402832
    4. ' )' → logprob: -12.703923225402832
    5. '<|end|>' → logprob: -12.703923225402832
    6. ');' → logprob: -12.828923225402832
    7. ' )
' → logprob: -13.703923225402832
    8. ');
' → logprob: -13.828923225402832
    9. ')return' → logprob: -13.828923225402832
    10. '<|end|>' → logprob: -14.078923225402832

Token 169: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.59376460313797
    2. '<|end|>' → logprob: -0.84376460313797
    3. '       ' → logprob: -4.218764781951904
    4. ' 
' → logprob: -7.218764781951904
    5. '<|end|>' → logprob: -7.593764781951904
    6. ' if' → logprob: -7.718764781951904
    7. '  
' → logprob: -8.218764305114746
    8. '        
' → logprob: -8.343764305114746
    9. '
' → logprob: -9.093764305114746
    10. ' ' → logprob: -9.468764305114746

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5831080675125122
    2. ' if' → logprob: -0.8331080675125122
    3. '       ' → logprob: -4.958107948303223
    4. '
' → logprob: -9.333107948303223
    5. '   ' → logprob: -11.458107948303223
    6. '	if' → logprob: -12.083107948303223
    7. ' 
' → logprob: -12.333107948303223
    8. '        
' → logprob: -12.708107948303223
    9. '        ' → logprob: -13.833107948303223
    10. '    ' → logprob: -13.958107948303223

Token 171: ' rx' (ID: 37623)
  Prédit: ' rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.011065270751714706
    2. 'rx' → logprob: -4.511065483093262
    3. '(rx' → logprob: -11.011065483093262
    4. '_rx' → logprob: -14.886065483093262
    5. ' ' → logprob: -15.011065483093262
    6. ' ry' → logprob: -16.136064529418945
    7. '.rx' → logprob: -17.011064529418945
    8. '
' → logprob: -17.136064529418945
    9. ' rv' → logprob: -18.011064529418945
    10. '   ' → logprob: -18.136064529418945

Token 172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004437359049916267
    2. ' ==' → logprob: -5.504437446594238
    3. '!=' → logprob: -8.004437446594238
    4. '=' → logprob: -10.879437446594238
    5. ']==' → logprob: -13.254437446594238
    6. ' !=' → logprob: -13.379437446594238
    7. '==
' → logprob: -13.504437446594238
    8. '===' → logprob: -14.629437446594238
    9. '==-' → logprob: -15.129437446594238
    10. '()==' → logprob: -15.754437446594238

Token 173: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.11282677948474884
    2. ' ry' → logprob: -2.2378268241882324
    3. ' ' → logprob: -14.362826347351074
    4. '
' → logprob: -14.487826347351074
    5. 'ryl' → logprob: -14.487826347351074
    6. 'rys' → logprob: -14.987826347351074
    7. 'ryd' → logprob: -14.987826347351074
    8. 'rying' → logprob: -15.112826347351074
    9. 'ryw' → logprob: -15.487826347351074
    10. 'riy' → logprob: -15.612826347351074

Token 174: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3168213963508606
    2. ':return' → logprob: -1.3168213367462158
    3. ':
' → logprob: -5.691821575164795
    4. 'return' → logprob: -9.066821098327637
    5. ' :' → logprob: -10.191821098327637
    6. ' return' → logprob: -11.691821098327637
    7. ')return' → logprob: -12.066821098327637
    8. ')' → logprob: -12.191821098327637
    9. '           ' → logprob: -13.441821098327637
    10. '):' → logprob: -13.941821098327637

Token 175: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14305967092514038
    2. ' return' → logprob: -2.268059730529785
    3. 'return' → logprob: -3.518059730529785
    4. '
' → logprob: -9.893059730529785
    5. '   ' → logprob: -10.518059730529785
    6. ':return' → logprob: -10.518059730529785
    7. '	return' → logprob: -12.143059730529785
    8. '       ' → logprob: -12.268059730529785
    9. '               ' → logprob: -12.893059730529785
    10. 'False' → logprob: -13.268059730529785

Token 176: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08045095205307007
    2. ' False' → logprob: -2.580451011657715
    3. '0' → logprob: -7.080451011657715
    4. '
' → logprob: -7.330451011657715
    5. ' 
' → logprob: -11.080451011657715
    6. 'True' → logprob: -11.205451011657715
    7. '(False' → logprob: -11.330451011657715
    8. ' ' → logprob: -11.455451011657715
    9. 'None' → logprob: -12.205451011657715
    10. '
' → logprob: -13.080451011657715

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07407539337873459
    2. ' if' → logprob: -2.82407546043396
    3. 'if' → logprob: -4.949075222015381
    4. '
' → logprob: -5.824075222015381
    5. '        
' → logprob: -6.574075222015381
    6. ' 
' → logprob: -7.949075222015381
    7. '   ' → logprob: -9.449075698852539
    8. '  
' → logprob: -10.324075698852539
    9. '    
' → logprob: -10.574075698852539
    10. '
' → logprob: -11.199075698852539

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3874911069869995
    2. ' if' → logprob: -1.1374911069869995
    3. '       ' → logprob: -7.387491226196289
    4. '	if' → logprob: -14.262491226196289
    5. '   ' → logprob: -16.63749122619629
    6. '```' → logprob: -16.88749122619629
    7. '
' → logprob: -17.01249122619629
    8. 'If' → logprob: -17.26249122619629
    9. 'elif' → logprob: -17.88749122619629
    10. ';if' → logprob: -18.01249122619629

Token 179: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.14275731146335602
    2. 'self' → logprob: -2.0177574157714844
    3. '(self' → logprob: -10.017757415771484
    4. '	self' → logprob: -11.142757415771484
    5. '   ' → logprob: -11.642757415771484
    6. ' ' → logprob: -11.892757415771484
    7. '[self' → logprob: -12.517757415771484
    8. '
' → logprob: -13.767757415771484
    9. '  ' → logprob: -14.142757415771484
    10. '=self' → logprob: -14.642757415771484

Token 180: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -2.117345684382599e-05
    2. 'r' → logprob: -10.875020980834961
    3. '.' → logprob: -13.250020980834961
    4. ' .' → logprob: -15.250020980834961
    5. '	r' → logprob: -16.50002098083496
    6. '.rank' → logprob: -17.12502098083496
    7. '[r' → logprob: -17.50002098083496
    8. '_r' → logprob: -17.62502098083496
    9. '
' → logprob: -17.75002098083496
    10. '._' → logprob: -18.75002098083496

Token 181: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. ' rx' → logprob: -13.250004768371582
    3. ' [' → logprob: -13.875004768371582
    4. '(rx' → logprob: -13.875004768371582
    5. 'rx' → logprob: -14.000004768371582
    6. 'x' → logprob: -17.125003814697266
    7. '_rx' → logprob: -18.000003814697266
    8. '```' → logprob: -18.250003814697266
    9. '.rx' → logprob: -18.875003814697266
    10. '[root' → logprob: -19.125003814697266

Token 182: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.006058671046048403
    2. '[' → logprob: -5.131058692932129
    3. ' rx' → logprob: -9.131058692932129
    4. '(rx' → logprob: -11.756058692932129
    5. 'x' → logprob: -12.006058692932129
    6. '_rx' → logprob: -12.506058692932129
    7. 'ry' → logprob: -13.006058692932129
    8. 'Rx' → logprob: -14.506058692932129
    9. '.rx' → logprob: -14.506058692932129
    10. 'tx' → logprob: -15.256058692932129

Token 183: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.35819220542907715
    2. ' <' → logprob: -1.2331922054290771
    3. ']' → logprob: -5.233192443847656
    4. '>' → logprob: -5.608192443847656
    5. '[' → logprob: -7.858192443847656
    6. ']<' → logprob: -8.608192443847656
    7. ' >' → logprob: -9.358192443847656
    8. ' ' → logprob: -11.358192443847656
    9. '<x' → logprob: -12.358192443847656
    10. ' ]' → logprob: -12.483192443847656

Token 184: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5771679878234863
    2. ' <' → logprob: -0.8271679878234863
    3. '[' → logprob: -7.202167987823486
    4. '>' → logprob: -7.827167987823486
    5. ' >' → logprob: -10.077167510986328
    6. ' ' → logprob: -11.827167510986328
    7. '<x' → logprob: -12.202167510986328
    8. '<size' → logprob: -12.452167510986328
    9. '<int' → logprob: -12.452167510986328
    10. '<class' → logprob: -12.577167510986328

Token 185: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062054961919784546
    2. ' self' → logprob: -2.8120548725128174
    3. '=self' → logprob: -10.187054634094238
    4. '	self' → logprob: -11.062054634094238
    5. '[self' → logprob: -11.437054634094238
    6. '(self' → logprob: -12.062054634094238
    7. '   ' → logprob: -12.312054634094238
    8. '<|end|>' → logprob: -12.562054634094238
    9. ' ' → logprob: -13.437054634094238
    10. '       ' → logprob: -13.562054634094238

Token 186: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.047497786581516266
    2. '.r' → logprob: -3.1724977493286133
    3. ' r' → logprob: -5.797497749328613
    4. '	r' → logprob: -7.547497749328613
    5. '_r' → logprob: -7.797497749328613
    6. '[r' → logprob: -8.672497749328613
    7. 'self' → logprob: -9.297497749328613
    8. '.' → logprob: -9.547497749328613
    9. ' .' → logprob: -10.297497749328613
    10. '[' → logprob: -10.672497749328613

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.6656825866666622e-05
    2. ' ry' → logprob: -11.25002670288086
    3. 'ry' → logprob: -11.25002670288086
    4. ' [' → logprob: -14.62502670288086
    5. '[r' → logprob: -16.37502670288086
    6. '[
' → logprob: -17.37502670288086
    7. '(' → logprob: -18.37502670288086
    8. 'Ry' → logprob: -18.50002670288086
    9. '```' → logprob: -18.75002670288086
    10. '[y' → logprob: -19.00002670288086

Token 188: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -5.919942486798391e-05
    2. ' ry' → logprob: -9.750059127807617
    3. '[' → logprob: -15.125059127807617
    4. 'rying' → logprob: -16.000059127807617
    5. '
' → logprob: -16.375059127807617
    6. 'r' → logprob: -16.500059127807617
    7. ' ' → logprob: -16.750059127807617
    8. 'rys' → logprob: -17.000059127807617
    9. '```' → logprob: -17.250059127807617
    10. 'ryl' → logprob: -17.250059127807617

Token 189: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04637777432799339
    2. '):' → logprob: -3.171377658843994
    3. ':
' → logprob: -6.296377658843994
    4. '):
' → logprob: -7.546377658843994
    5. ']:' → logprob: -7.546377658843994
    6. ' :' → logprob: -8.171378135681152
    7. '>:' → logprob: -9.296378135681152
    8. ' ):' → logprob: -10.046378135681152
    9. '}:' → logprob: -10.546378135681152
    10. '<|end|>' → logprob: -12.046378135681152

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17900224030017853
    2. '       ' → logprob: -2.929002285003662
    3. ':' → logprob: -3.054002285003662
    4. ' self' → logprob: -3.804002285003662
    5. '<|end|>' → logprob: -3.804002285003662
    6. 'self' → logprob: -5.554002285003662
    7. ':
' → logprob: -5.679002285003662
    8. ',' → logprob: -6.054002285003662
    9. '<|end|>' → logprob: -6.554002285003662
    10. ')' → logprob: -7.054002285003662

Token 191: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13635575771331787
    2. ' self' → logprob: -2.6363558769226074
    3. '           ' → logprob: -2.8863558769226074
    4. '               ' → logprob: -10.26135540008545
    5. '[self' → logprob: -12.38635540008545
    6. ',' → logprob: -12.51135540008545
    7. '	self' → logprob: -12.51135540008545
    8. '            ' → logprob: -12.76135540008545
    9. '       ' → logprob: -12.76135540008545
    10. '   ' → logprob: -12.76135540008545

Token 192: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.001676852349191904
    2. '.' → logprob: -7.0016770362854
    3. 'p' → logprob: -7.5016770362854
    4. ' .' → logprob: -8.876676559448242
    5. '_p' → logprob: -11.251676559448242
    6. '[' → logprob: -11.626676559448242
    7. ' p' → logprob: -11.751676559448242
    8. '   ' → logprob: -11.751676559448242
    9. '	p' → logprob: -11.876676559448242
    10. '```' → logprob: -11.876676559448242

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. 'ry' → logprob: -12.75000286102295
    3. ' ry' → logprob: -15.50000286102295
    4. ' [' → logprob: -17.875003814697266
    5. '[y' → logprob: -18.250003814697266
    6. '[r' → logprob: -18.625003814697266
    7. '```' → logprob: -19.125003814697266
    8. '[self' → logprob: -19.250003814697266
    9. 'rx' → logprob: -19.250003814697266
    10. 'Ry' → logprob: -19.375003814697266

Token 194: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -3.619311974034645e-05
    2. ' ry' → logprob: -10.625036239624023
    3. '[' → logprob: -11.500036239624023
    4. 'rx' → logprob: -13.750036239624023
    5. '   ' → logprob: -15.250036239624023
    6. '

' → logprob: -16.000036239624023
    7. '
' → logprob: -16.250036239624023
    8. ' ' → logprob: -16.875036239624023
    9. 'Ry' → logprob: -17.250036239624023
    10. '  ' → logprob: -17.625036239624023

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3046371340751648
    2. '=' → logprob: -1.9296371936798096
    3. ' =' → logprob: -2.3046371936798096
    4. ']=' → logprob: -4.4296369552612305
    5. ' ]' → logprob: -5.1796369552612305
    6. '[' → logprob: -9.92963695526123
    7. ')' → logprob: -11.42963695526123
    8. ' ' → logprob: -13.80463695526123
    9. ')=' → logprob: -14.17963695526123
    10. ' )' → logprob: -14.67963695526123

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021637380123138
    2. ' =' → logprob: -2.3502163887023926
    3. '[' → logprob: -11.850215911865234
    4. '=x' → logprob: -14.350215911865234
    5. '=
' → logprob: -15.225215911865234
    6. '=s' → logprob: -15.225215911865234
    7. ']=' → logprob: -15.225215911865234
    8. '=y' → logprob: -15.600215911865234
    9. '=r' → logprob: -15.600215911865234
    10. ']' → logprob: -15.975215911865234

Token 197: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0015024791937321424
    2. ' rx' → logprob: -6.501502513885498
    3. 'rv' → logprob: -16.501502990722656
    4. 'tx' → logprob: -18.001502990722656
    5. 'ry' → logprob: -18.251502990722656
    6. 'rc' → logprob: -18.501502990722656
    7. '   ' → logprob: -18.876502990722656
    8. '_rx' → logprob: -19.376502990722656
    9. ' ' → logprob: -19.626502990722656
    10. '(rx' → logprob: -19.751502990722656

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1798756718635559
    2. 'else' → logprob: -2.179875612258911
    3. ' else' → logprob: -3.679875612258911
    4. '<|end|>' → logprob: -4.17987585067749
    5. '
' → logprob: -4.80487585067749
    6. 'elif' → logprob: -6.30487585067749
    7. '           ' → logprob: -7.92987585067749
    8. '<|end|>' → logprob: -8.429875373840332
    9. 'return' → logprob: -9.054875373840332
    10. ' elif' → logprob: -10.054875373840332

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04176608473062515
    2. 'else' → logprob: -3.6667661666870117
    3. ' else' → logprob: -4.791766166687012
    4. '           ' → logprob: -5.291766166687012
    5. 'elif' → logprob: -7.041766166687012
    6. '<|end|>' → logprob: -7.041766166687012
    7. '
' → logprob: -9.166766166687012
    8. ' elif' → logprob: -9.166766166687012
    9. '        
' → logprob: -11.916766166687012
    10. ' 
' → logprob: -12.291766166687012

Token 200: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4221471846103668
    2. '       ' → logprob: -1.4221471548080444
    3. ' else' → logprob: -2.922147274017334
    4. 'elif' → logprob: -3.047147274017334
    5. ' elif' → logprob: -6.297147274017334
    6. '   ' → logprob: -12.797146797180176
    7. 'elseif' → logprob: -13.297146797180176
    8. 'if' → logprob: -13.547146797180176
    9. '           ' → logprob: -13.547146797180176
    10. '```' → logprob: -13.922146797180176

Token 201: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08569297939538956
    2. ':' → logprob: -2.585692882537842
    3. '           ' → logprob: -5.335692882537842
    4. '{
' → logprob: -7.460692882537842
    5. ' :
' → logprob: -7.460692882537842
    6. '       ' → logprob: -7.835692882537842
    7. '{' → logprob: -8.460693359375
    8. ':
' → logprob: -9.710693359375
    9. ' :' → logprob: -10.085693359375
    10. '   ' → logprob: -10.460693359375

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2751537263393402
    2. '{
' → logprob: -1.9001537561416626
    3. '{' → logprob: -3.150153636932373
    4. ':
' → logprob: -3.400153636932373
    5. '       ' → logprob: -4.525153636932373
    6. ':' → logprob: -6.650153636932373
    7. '```' → logprob: -7.650153636932373
    8. ' {
' → logprob: -7.775153636932373
    9. ' ' → logprob: -8.525154113769531
    10. '          ' → logprob: -8.775154113769531

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008762644603848457
    2. ' self' → logprob: -4.758762836456299
    3. '           ' → logprob: -8.88376235961914
    4. '	self' → logprob: -12.63376235961914
    5. '       ' → logprob: -12.88376235961914
    6. '[self' → logprob: -13.75876235961914
    7. ' ' → logprob: -13.88376235961914
    8. '   ' → logprob: -13.88376235961914
    9. '(self' → logprob: -15.50876235961914
    10. '               ' → logprob: -16.13376235961914

Token 204: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.1557283111615106e-05
    2. '.' → logprob: -10.875041961669922
    3. ' .' → logprob: -11.625041961669922
    4. 'p' → logprob: -12.375041961669922
    5. '```' → logprob: -12.375041961669922
    6. '.r' → logprob: -12.875041961669922
    7. '.py' → logprob: -14.250041961669922
    8. '   ' → logprob: -15.000041961669922
    9. '{' → logprob: -15.500041961669922
    10. '[' → logprob: -15.750041961669922

Token 205: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -17.125
    3. '```' → logprob: -17.125
    4. ' [' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -18.75
    7. '[[' → logprob: -18.875
    8. 'rx' → logprob: -19.0
    9. '       ' → logprob: -19.0
    10. 'x' → logprob: -19.375

Token 206: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -2.463036435074173e-05
    2. ' rx' → logprob: -10.625024795532227
    3. 'tx' → logprob: -16.250024795532227
    4. ' ' → logprob: -17.000024795532227
    5. 'Rx' → logprob: -17.125024795532227
    6. '[' → logprob: -17.250024795532227
    7. '_rx' → logprob: -17.500024795532227
    8. 'qx' → logprob: -18.125024795532227
    9. '(rx' → logprob: -18.250024795532227
    10. '   ' → logprob: -18.250024795532227

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013290460221469402
    2. '=' → logprob: -5.0132904052734375
    3. ' ]' → logprob: -5.5132904052734375
    4. ']=' → logprob: -6.5132904052734375
    5. ' =' → logprob: -6.8882904052734375
    6. ')' → logprob: -11.263290405273438
    7. ' ' → logprob: -13.638290405273438
    8. '[' → logprob: -13.638290405273438
    9. '<|end|>' → logprob: -14.888290405273438
    10. '   ' → logprob: -15.138290405273438

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023112833499908
    2. '=' → logprob: -1.910231113433838
    3. ']' → logprob: -12.785231590270996
    4. ')' → logprob: -12.785231590270996
    5. ' ' → logprob: -14.785231590270996
    6. '[' → logprob: -15.410231590270996
    7. '=y' → logprob: -15.535231590270996
    8. ']=' → logprob: -15.785231590270996
    9. '<|end|>' → logprob: -16.16023063659668
    10. '=p' → logprob: -16.78523063659668

Token 209: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.002475777640938759
    2. ' ry' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.12747573852539
    4. ' ' → logprob: -17.25247573852539
    5. 'ryl' → logprob: -17.50247573852539
    6. ' ' → logprob: -18.00247573852539
    7. 'ri' → logprob: -18.37747573852539
    8. 'rys' → logprob: -18.37747573852539
    9. 'ryd' → logprob: -18.50247573852539
    10. 'ay' → logprob: -18.62747573852539

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8087270038668066e-05
    2. '       ' → logprob: -11.125027656555176
    3. 'if' → logprob: -12.250027656555176
    4. '
' → logprob: -13.000027656555176
    5. '```' → logprob: -13.875027656555176
    6. ',' → logprob: -14.000027656555176
    7. '               ' → logprob: -14.125027656555176
    8. '	       ' → logprob: -14.125027656555176
    9. '            
' → logprob: -14.375027656555176
    10. ' if' → logprob: -14.500027656555176

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023725584615021944
    2. 'if' → logprob: -6.127372741699219
    3. ' if' → logprob: -9.377372741699219
    4. '       ' → logprob: -9.377372741699219
    5. '```' → logprob: -11.877372741699219
    6. '   ' → logprob: -12.252372741699219
    7. '               ' → logprob: -13.377372741699219
    8. ' ' → logprob: -14.002372741699219
    9. '
' → logprob: -14.127372741699219
    10. ',' → logprob: -14.252372741699219

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000758288602810353
    2. '           ' → logprob: -7.500758171081543
    3. ' if' → logprob: -8.500758171081543
    4. '
' → logprob: -14.000758171081543
    5. '            
' → logprob: -14.625758171081543
    6. '               ' → logprob: -15.625758171081543
    7. 'If' → logprob: -15.750758171081543
    8. '       ' → logprob: -16.25075912475586
    9. '```' → logprob: -16.62575912475586
    10. '          ' → logprob: -17.12575912475586

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024794621858745813
    2. ' self' → logprob: -6.002479553222656
    3. '(self' → logprob: -12.752479553222656
    4. '[self' → logprob: -15.252479553222656
    5. '
' → logprob: -15.502479553222656
    6. '   ' → logprob: -15.502479553222656
    7. '           ' → logprob: -16.127479553222656
    8. '	self' → logprob: -16.252479553222656
    9. '       ' → logprob: -17.752479553222656
    10. 's' → logprob: -17.752479553222656

Token 214: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -4.60414821645827e-06
    2. 'r' → logprob: -13.125004768371582
    3. '[r' → logprob: -13.500004768371582
    4. 'self' → logprob: -14.750004768371582
    5. '[self' → logprob: -15.125004768371582
    6. '	r' → logprob: -15.625004768371582
    7. '.' → logprob: -15.875004768371582
    8. '[' → logprob: -16.500003814697266
    9. ' .' → logprob: -16.875003814697266
    10. '_r' → logprob: -17.000003814697266

Token 215: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '[self' → logprob: -13.375001907348633
    3. '[r' → logprob: -15.625001907348633
    4. 'ry' → logprob: -16.750001907348633
    5. ' ry' → logprob: -17.750001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '[i' → logprob: -19.125001907348633
    8. '[
' → logprob: -19.750001907348633
    9. '```' → logprob: -19.750001907348633
    10. '[root' → logprob: -20.250001907348633

Token 216: 'rx' (ID: 26910)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0019693158101290464
    2. 'rx' → logprob: -6.251969337463379
    3. '[' → logprob: -10.126969337463379
    4. ' ry' → logprob: -14.376969337463379
    5. 'rp' → logprob: -17.001968383789062
    6. 'rv' → logprob: -17.001968383789062
    7. 'py' → logprob: -17.376968383789062
    8. 'r' → logprob: -17.501968383789062
    9. 'ru' → logprob: -18.001968383789062
    10. 'ra' → logprob: -18.376968383789062

Token 217: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12160845845937729
    2. '[' → logprob: -2.6216084957122803
    3. ']==' → logprob: -3.8716084957122803
    4. ' ==' → logprob: -4.121608257293701
    5. ']' → logprob: -5.371608257293701
    6. '==
' → logprob: -9.99660873413086
    7. ')==' → logprob: -10.24660873413086
    8. '===' → logprob: -11.37160873413086
    9. '[self' → logprob: -11.87160873413086
    10. '[]' → logprob: -11.87160873413086

Token 218: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0008106979075819254
    2. ' ==' → logprob: -7.250810623168945
    3. '[' → logprob: -9.500810623168945
    4. '=' → logprob: -11.625810623168945
    5. ']==' → logprob: -11.625810623168945
    6. '==
' → logprob: -12.125810623168945
    7. '===' → logprob: -13.000810623168945
    8. ']' → logprob: -15.875810623168945
    9. '()==' → logprob: -15.875810623168945
    10. ')==' → logprob: -16.375810623168945

Token 219: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001960512949153781
    2. ' self' → logprob: -6.251960277557373
    3. 'ry' → logprob: -10.501960754394531
    4. '[self' → logprob: -12.876960754394531
    5. 'r' → logprob: -14.626960754394531
    6. '	self' → logprob: -15.376960754394531
    7. ' ry' → logprob: -15.376960754394531
    8. '   ' → logprob: -15.501960754394531
    9. '(self' → logprob: -15.626960754394531
    10. ' ' → logprob: -15.876960754394531

Token 220: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4383571743965149
    2. '[r' → logprob: -1.3133571147918701
    3. '[' → logprob: -2.93835711479187
    4. '.r' → logprob: -3.43835711479187
    5. '	r' → logprob: -7.563357353210449
    6. 'ry' → logprob: -8.81335735321045
    7. '[self' → logprob: -9.81335735321045
    8. '_r' → logprob: -10.18835735321045
    9. ' r' → logprob: -10.43835735321045
    10. ''r' → logprob: -10.43835735321045

Token 221: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'ry' → logprob: -17.0
    3. '[
' → logprob: -19.25
    4. ' ry' → logprob: -20.0
    5. ' [' → logprob: -20.75
    6. '   ' → logprob: -21.25
    7. '[r' → logprob: -21.375
    8. '```' → logprob: -21.375
    9. '[assembly' → logprob: -21.5
    10. '[root' → logprob: -21.875

Token 222: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -2.176947600673884e-05
    2. ' ry' → logprob: -10.750021934509277
    3. '[' → logprob: -15.375021934509277
    4. '   ' → logprob: -17.87502098083496
    5. 'rying' → logprob: -18.62502098083496
    6. 'r' → logprob: -19.00002098083496
    7. ' ' → logprob: -19.37502098083496
    8. '
' → logprob: -19.75002098083496
    9. 'rys' → logprob: -19.75002098083496
    10. 'rey' → logprob: -20.00002098083496

Token 223: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20161427557468414
    2. ':
' → logprob: -1.701614260673523
    3. '):
' → logprob: -8.826614379882812
    4. '):' → logprob: -10.576614379882812
    5. ']:' → logprob: -12.326614379882812
    6. ']:
' → logprob: -12.701614379882812
    7. '           ' → logprob: -12.701614379882812
    8. ':

' → logprob: -12.826614379882812
    9. '():
' → logprob: -13.201614379882812
    10. '       ' → logprob: -13.451614379882812

Token 224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030358023941516876
    2. 'self' → logprob: -3.780358076095581
    3. ' self' → logprob: -5.155357837677002
    4. '           ' → logprob: -6.780357837677002
    5. '   ' → logprob: -9.53035831451416
    6. '                   ' → logprob: -9.65535831451416
    7. '	self' → logprob: -12.03035831451416
    8. '	           ' → logprob: -12.03035831451416
    9. '              ' → logprob: -12.28035831451416
    10. '[self' → logprob: -12.78035831451416

Token 225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12969852983951569
    2. ' self' → logprob: -2.1296985149383545
    3. '               ' → logprob: -6.379698753356934
    4. '                   ' → logprob: -6.879698753356934
    5. '           ' → logprob: -11.129698753356934
    6. '   ' → logprob: -11.254698753356934
    7. '[self' → logprob: -11.879698753356934
    8. '	self' → logprob: -12.504698753356934
    9. '                       ' → logprob: -13.379698753356934
    10. ' ' → logprob: -14.254698753356934

Token 226: '.r' (ID: 2951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06461317092180252
    2. '[r' → logprob: -3.314613103866577
    3. 'r' → logprob: -4.189613342285156
    4. '.r' → logprob: -5.064613342285156
    5. '.' → logprob: -5.439613342285156
    6. '_r' → logprob: -8.939613342285156
    7. '[self' → logprob: -9.189613342285156
    8. '   ' → logprob: -9.689613342285156
    9. '	r' → logprob: -10.314613342285156
    10. '```' → logprob: -11.189613342285156

Token 227: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.5
    3. '       ' → logprob: -19.5
    4. '[i' → logprob: -19.625
    5. '   ' → logprob: -19.75
    6. '[y' → logprob: -19.75
    7. '               ' → logprob: -20.25
    8. '[
' → logprob: -21.125
    9. '```' → logprob: -21.125
    10. '           ' → logprob: -21.25

Token 228: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.008712549693882465
    2. '[' → logprob: -4.7587127685546875
    3. ' ry' → logprob: -9.258712768554688
    4. 'ryn' → logprob: -13.758712768554688
    5. 'yr' → logprob: -15.008712768554688
    6. 'ryl' → logprob: -15.383712768554688
    7. 'rx' → logprob: -15.508712768554688
    8. 'rys' → logprob: -16.008712768554688
    9. 'ryd' → logprob: -16.133712768554688
    10. 'riy' → logprob: -16.133712768554688

Token 229: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21527011692523956
    2. ']+=' → logprob: -1.7152701616287231
    3. ' +=' → logprob: -4.715270042419434
    4. ']' → logprob: -5.340270042419434
    5. '[' → logprob: -11.840270042419434
    6. '   ' → logprob: -14.340270042419434
    7. ' ]' → logprob: -14.590270042419434
    8. '}' → logprob: -15.465270042419434
    9. '```' → logprob: -15.715270042419434
    10. '+' → logprob: -15.840270042419434

Token 230: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00043686782009899616
    2. ' +=' → logprob: -7.750436782836914
    3. ']+=' → logprob: -12.000436782836914
    4. '=' → logprob: -18.250436782836914
    5. '+='' → logprob: -19.875436782836914
    6. '+="' → logprob: -21.125436782836914
    7. '+=(' → logprob: -21.125436782836914
    8. '+' → logprob: -21.625436782836914
    9. '   ' → logprob: -22.625436782836914
    10. ' ' → logprob: -23.250436782836914

Token 231: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.2500057220459
    4. '```' → logprob: -19.5000057220459
    5. '  ' → logprob: -20.8750057220459
    6. '
' → logprob: -21.3750057220459
    7. '[' → logprob: -21.5000057220459
    8. '１' → logprob: -21.5625057220459
    9. ' ' → logprob: -21.8750057220459
    10. '<|end|>' → logprob: -22.3750057220459

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.750011444091797
    4. '
' → logprob: -19.625011444091797
    5. '  ' → logprob: -20.375011444091797
    6. '```' → logprob: -20.375011444091797
    7. '

' → logprob: -21.125011444091797
    8. '[' → logprob: -21.375011444091797
    9. '       ' → logprob: -21.375011444091797
    10. '           ' → logprob: -21.375011444091797

Token 233: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21880194544792175
    2. '
' → logprob: -2.593801975250244
    3. 'n' → logprob: -2.843801975250244
    4. 'class' → logprob: -4.593801975250244
    5. 'x' → logprob: -4.968801975250244
    6. '<|end|>' → logprob: -4.968801975250244
    7. '    
' → logprob: -5.093801975250244
    8. '\n' → logprob: -5.343801975250244
    9. '   ' → logprob: -5.843801975250244
    10. ')' → logprob: -5.843801975250244

Token 235: ' depot' (ID: 101288)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13272619247436523
    2. 'main' → logprob: -3.0077261924743652
    3. ' solve' → logprob: -3.3827261924743652
    4. ' dfs' → logprob: -3.7577261924743652
    5. 'solve' → logprob: -5.007726192474365
    6. ' bfs' → logprob: -5.007726192474365
    7. 'dfs' → logprob: -6.132726192474365
    8. 'b' → logprob: -8.507726669311523
    9. ' find' → logprob: -8.507726669311523
    10. ' run' → logprob: -8.632726669311523

Token 236: '_here' (ID: 192915)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2258109301328659
    2. 's' → logprob: -2.225811004638672
    3. '(' → logprob: -2.975811004638672
    4. '_' → logprob: -5.225811004638672
    5. '()' → logprob: -5.350811004638672
    6. '(n' → logprob: -5.350811004638672
    7. '):' → logprob: -5.975811004638672
    8. '_list' → logprob: -6.225811004638672
    9. '_count' → logprob: -6.475811004638672
    10. 'es' → logprob: -6.475811004638672

Token 237: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5813491344451904
    2. '(' → logprob: -1.3313491344451904
    3. '(x' → logprob: -2.5813491344451904
    4. '(s' → logprob: -3.4563491344451904
    5. '(n' → logprob: -4.2063493728637695
    6. '(p' → logprob: -4.3313493728637695
    7. '(pos' → logprob: -4.8313493728637695
    8. '(node' → logprob: -5.2063493728637695
    9. '(a' → logprob: -5.3313493728637695
    10. '(i' → logprob: -5.5813493728637695

Token 238: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004756564740091562
    2. '    
' → logprob: -6.754756450653076
    3. ' pass' → logprob: -7.129756450653076
    4. ' return' → logprob: -7.254756450653076
    5. '<|end|>' → logprob: -7.254756450653076
    6. '    ' → logprob: -7.504756450653076
    7. 'pass' → logprob: -8.129756927490234
    8. 'return' → logprob: -8.379756927490234
    9. '
' → logprob: -9.254756927490234
    10. '	pass' → logprob: -9.879756927490234

Token 239: ' last' (ID: 2174)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2748206853866577
    2. '0' → logprob: -2.3998208045959473
    3. 'False' → logprob: -3.1498208045959473
    4. 'True' → logprob: -3.3998208045959473
    5. '[' → logprob: -3.6498208045959473
    6. 'set' → logprob: -4.524820804595947
    7. 'int' → logprob: -5.024820804595947
    8. '[int' → logprob: -5.399820804595947
    9. 'lint' → logprob: -5.524820804595947
    10. 'list' → logprob: -5.524820804595947

Token 240: '_node' (ID: 11390)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6675335764884949
    2. ' =' → logprob: -1.9175336360931396
    3. '<|end|>' → logprob: -2.4175336360931396
    4. '=' → logprob: -2.5425336360931396
    5. '()' → logprob: -3.0425336360931396
    6. 'def' → logprob: -3.0425336360931396
    7. '.' → logprob: -4.0425333976745605
    8. '[' → logprob: -4.6675333976745605
    9. ' ' → logprob: -4.7925333976745605
    10. '(' → logprob: -4.9175333976745605

Token 241: ' ==' (ID: 951)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6684372425079346
    2. '<|end|>' → logprob: -1.1684372425079346
    3. 'def' → logprob: -2.2934372425079346
    4. '

' → logprob: -3.7934372425079346
    5. '=' → logprob: -4.1684370040893555
    6. ':' → logprob: -4.7934370040893555
    7. '()' → logprob: -5.4184370040893555
    8. ' =' → logprob: -5.6684370040893555
    9. ',' → logprob: -5.6684370040893555
    10. '<|end|>' → logprob: -5.6684370040893555

Token 242: ' ' (ID: 220)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.796693205833435
    2. ' current' → logprob: -2.2966933250427246
    3. ' depot' → logprob: -2.2966933250427246
    4. ' ' → logprob: -2.6716933250427246
    5. ' -' → logprob: -2.6716933250427246
    6. ' last' → logprob: -2.9216933250427246
    7. '-' → logprob: -3.1716933250427246
    8. ' here' → logprob: -3.2966933250427246
    9. ' cur' → logprob: -3.4216933250427246
    10. '0' → logprob: -3.5466933250427246

Token 243: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8027387261390686
    2. '-' → logprob: -1.1777386665344238
    3. 'node' → logprob: -3.802738666534424
    4. ' -' → logprob: -3.927738666534424
    5. 'de' → logprob: -4.052738666534424
    6. ' ' → logprob: -4.052738666534424
    7. 'last' → logprob: -4.177738666534424
    8. 'd' → logprob: -4.302738666534424
    9. 'current' → logprob: -4.302738666534424
    10. '1' → logprob: -4.302738666534424

Token 244: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9672043323516846
    2. 'def' → logprob: -1.4672043323516846
    3. '
' → logprob: -1.7172043323516846
    4. '<|end|>' → logprob: -2.5922043323516846
    5. ' and' → logprob: -2.9672043323516846
    6. '

' → logprob: -3.5922043323516846
    7. '#' → logprob: -4.7172040939331055
    8. 'and' → logprob: -5.0922040939331055
    9. ':def' → logprob: -5.3422040939331055
    10. '()' → logprob: -5.4672040939331055

Token 245: ' dist' (ID: 3601)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -1.6122604608535767
    2. ' not' → logprob: -2.487260341644287
    3. ' True' → logprob: -2.924760341644287
    4. ' False' → logprob: -3.049760341644287
    5. ' dist' → logprob: -3.487260341644287
    6. ' visited' → logprob: -3.487260341644287
    7. ' _' → logprob: -3.549760341644287
    8. ' len' → logprob: -3.549760341644287
    9. ' depot' → logprob: -3.737260341644287
    10. ' visit' → logprob: -3.924760341644287

Token 246: '_last' (ID: 26359)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04695551097393036
    2. '>' → logprob: -3.9219555854797363
    3. '[last' → logprob: -4.171955585479736
    4. '==' → logprob: -5.671955585479736
    5. '<=' → logprob: -7.046955585479736
    6. '>=' → logprob: -7.171955585479736
    7. '[next' → logprob: -7.421955585479736
    8. ' >' → logprob: -7.546955585479736
    9. '[-' → logprob: -7.796955585479736
    10. '[now' → logprob: -7.921955585479736

Token 247: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5777045488357544
    2. '>' → logprob: -1.2027045488357544
    3. ' >' → logprob: -2.577704429626465
    4. '==' → logprob: -4.452704429626465
    5. '>=' → logprob: -5.077704429626465
    6. ' >=' → logprob: -5.202704429626465
    7. ' and' → logprob: -5.202704429626465
    8. 'and' → logprob: -5.327704429626465
    9. '_here' → logprob: -5.827704429626465
    10. '[last' → logprob: -5.827704429626465

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024349497631192207
    2. ' ' → logprob: -3.7743494510650635
    3. '1' → logprob: -7.149349689483643
    4. 'MAX' → logprob: -9.649349212646484
    5. '2' → logprob: -10.274349212646484
    6. '100' → logprob: -10.649349212646484
    7. '10' → logprob: -10.774349212646484
    8. '20' → logprob: -10.961849212646484
    9. '3' → logprob: -11.024349212646484
    10. '5' → logprob: -11.274349212646484

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005256764590740204
    2. '1' → logprob: -6.005256652832031
    3. 'MAX' → logprob: -6.505256652832031
    4. ' ' → logprob: -7.630256652832031
    5. '-' → logprob: -8.130256652832031
    6. '2' → logprob: -9.505256652832031
    7. '100' → logprob: -9.880256652832031
    8. '10' → logprob: -10.255256652832031
    9. '3' → logprob: -10.380256652832031
    10. '5' → logprob: -10.380256652832031

Token 250: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13299432396888733
    2. '<|end|>' → logprob: -2.1329944133758545
    3. '\n' → logprob: -6.507994174957275
    4. ':' → logprob: -6.507994174957275
    5. '

' → logprob: -7.007994174957275
    6. '' → logprob: -7.382994174957275
    7. '<|end|>' → logprob: -8.007994651794434
    8. '()' → logprob: -9.007994651794434
    9. ' and' → logprob: -9.007994651794434
    10. ' ' → logprob: -9.132994651794434

Token 251: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7958183884620667
    2. '<|end|>' → logprob: -1.0458183288574219
    3. ':' → logprob: -2.295818328857422
    4. 'def' → logprob: -2.670818328857422
    5. ')' → logprob: -5.420818328857422
    6. '\n' → logprob: -5.545818328857422
    7. '#' → logprob: -5.545818328857422
    8. '

' → logprob: -5.920818328857422
    9. '<|end|>' → logprob: -5.920818328857422
    10. 'newline' → logprob: -6.795818328857422

Token 252: ' not' (ID: 625)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.71384859085083
    2. ' main' → logprob: -2.08884859085083
    3. ' depot' → logprob: -2.21384859085083
    4. ' dist' → logprob: -2.33884859085083
    5. ' can' → logprob: -2.46384859085083
    6. ' solve' → logprob: -3.46384859085083
    7. ' is' → logprob: -3.58884859085083
    8. 'dfs' → logprob: -3.83884859085083
    9. 'dist' → logprob: -3.96384859085083
    10. ' path' → logprob: -3.96384859085083

Token 253: 'hin' (ID: 15050)
  Prédit: ' depot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' depot' → logprob: -0.11982133239507675
    2. '_de' → logprob: -3.744821310043335
    3. '_here' → logprob: -3.994821310043335
    4. ' dist' → logprob: -4.494821548461914
    5. 'de' → logprob: -4.869821548461914
    6. '_' → logprob: -5.119821548461914
    7. ' _' → logprob: -5.244821548461914
    8. '_found' → logprob: -5.494821548461914
    9. '_empty' → logprob: -5.744821548461914
    10. ' visited' → logprob: -5.994821548461914

Token 254: '_do' (ID: 59120)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.9186317482963204e-05
    2. 'ess' → logprob: -10.875049591064453
    3. 'def' → logprob: -11.750049591064453
    4. 'gs' → logprob: -12.000049591064453
    5. '_g' → logprob: -12.375049591064453
    6. '=' → logprob: -12.750049591064453
    7. '():' → logprob: -13.000049591064453
    8. '()' → logprob: -13.250049591064453
    9. 'e' → logprob: -14.250049591064453
    10. '_' → logprob: -14.250049591064453

Token 255: '():
' (ID: 8595)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.018191028386354446
    2. '():' → logprob: -4.268190860748291
    3. 'ing' → logprob: -6.393190860748291
    4. '()' → logprob: -6.518190860748291
    5. 'e' → logprob: -7.518190860748291
    6. '():
' → logprob: -8.39319133758545
    7. 'ng' → logprob: -9.89319133758545
    8. 'w' → logprob: -11.76819133758545
    9. 'n' → logprob: -12.26819133758545
    10. '();' → logprob: -12.39319133758545

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004242704715579748
    2. ' pass' → logprob: -5.629242897033691
    3. ' return' → logprob: -8.629242897033691
    4. ':' → logprob: -8.754242897033691
    5. 'pass' → logprob: -8.754242897033691
    6. ' :' → logprob: -10.754242897033691
    7. '       ' → logprob: -11.004242897033691
    8. '	pass' → logprob: -11.004242897033691
    9. '():' → logprob: -11.129242897033691
    10. '   ' → logprob: -11.254242897033691

Token 257: ' print' (ID: 2123)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.19771762192249298
    2. 'pass' → logprob: -1.9477176666259766
    3. '   ' → logprob: -3.6977176666259766
    4. ' return' → logprob: -4.697717666625977
    5. 'return' → logprob: -5.947717666625977
    6. '	pass' → logprob: -8.947717666625977
    7. '    ' → logprob: -10.072717666625977
    8. ' ' → logprob: -10.947717666625977
    9. '  ' → logprob: -11.322717666625977
    10. 'pr' → logprob: -11.322717666625977

Token 258: '(-' (ID: 8087)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03726126253604889
    2. '(-' → logprob: -4.287261486053467
    3. '(' → logprob: -4.537261486053467
    4. '("")' → logprob: -5.162261486053467
    5. '()
' → logprob: -5.912261486053467
    6. '("' → logprob: -6.037261486053467
    7. '('' → logprob: -7.162261486053467
    8. '()-' → logprob: -8.787261009216309
    9. '0' → logprob: -8.912261009216309
    10. ' ()' → logprob: -10.537261009216309

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. '2' → logprob: -10.25004768371582
    3. ' ' → logprob: -13.37504768371582
    4. '3' → logprob: -13.62504768371582
    5. '-' → logprob: -13.87504768371582
    6. '100' → logprob: -13.93754768371582
    7. '42' → logprob: -14.12504768371582
    8. '10' → logprob: -14.12504768371582
    9. '999' → logprob: -14.18754768371582
    10. '11' → logprob: -14.31254768371582

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0337093286216259
    2. ')
' → logprob: -3.4087092876434326
    3. ')return' → logprob: -10.408709526062012
    4. ' )' → logprob: -10.533709526062012
    5. ')
' → logprob: -13.158709526062012
    6. ' )
' → logprob: -13.283709526062012
    7. ')

' → logprob: -14.408709526062012
    8. '
' → logprob: -14.783709526062012
    9. 'return' → logprob: -15.033709526062012
    10. '   ' → logprob: -15.283709526062012

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005783854518085718
    2. 'import' → logprob: -5.630784034729004
    3. 'def' → logprob: -7.130784034729004
    4. 'exit' → logprob: -7.255784034729004
    5. '<|end|>' → logprob: -8.005784034729004
    6. '
' → logprob: -8.755784034729004
    7. 'sys' → logprob: -9.880784034729004
    8. ';' → logprob: -10.380784034729004
    9. '	exit' → logprob: -10.380784034729004
    10. ',' → logprob: -11.255784034729004

Token 262: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.01217254064977169
    2. 'return' → logprob: -5.262172698974609
    3. 'sys' (adapté à ' sys') → logprob: -5.512172698974609
    4. 'import' → logprob: -6.137172698974609
    5. '   ' → logprob: -7.512172698974609
    6. ' exit' → logprob: -9.13717269897461
    7. 'quit' → logprob: -9.88717269897461
    8. ' sys' → logprob: -11.88717269897461
    9. ' return' → logprob: -13.13717269897461
    10. 'raise' → logprob: -14.01217269897461

Token 263: '.stdout' (ID: 59462)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00015181333583313972
    2. 'exit' → logprob: -9.250151634216309
    3. '.stdout' → logprob: -10.250151634216309
    4. '	exit' → logprob: -11.250151634216309
    5. '.' → logprob: -12.500151634216309
    6. '_exit' → logprob: -13.250151634216309
    7. '.stderr' → logprob: -14.625151634216309
    8. ' exit' → logprob: -14.750151634216309
    9. '   ' → logprob: -15.375151634216309
    10. 'Exit' → logprob: -15.500151634216309

Token 264: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.028266875073313713
    2. '.exit' → logprob: -3.7782669067382812
    3. 'flush' → logprob: -5.903266906738281
    4. 'exit' → logprob: -6.278266906738281
    5. '.' → logprob: -8.153266906738281
    6. '.write' → logprob: -9.528266906738281
    7. ' .' → logprob: -10.403266906738281
    8. '.close' → logprob: -12.778266906738281
    9. '().' → logprob: -13.278266906738281
    10. '.quit' → logprob: -13.528266906738281

Token 265: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08946739882230759
    2. '()
' → logprob: -2.4644672870635986
    3. ')' → logprob: -8.46446704864502
    4. '())' → logprob: -9.08946704864502
    5. '   ' → logprob: -9.46446704864502
    6. '()\' → logprob: -9.83946704864502
    7. '();' → logprob: -10.33946704864502
    8. '()
' → logprob: -12.08946704864502
    9. 'return' → logprob: -12.21446704864502
    10. '<|end|>' → logprob: -12.46446704864502

Token 266: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015863440930843353
    2. 'n' → logprob: -4.265863418579102
    3. 'if' → logprob: -7.765863418579102
    4. '#' → logprob: -8.265863418579102
    5. 'class' → logprob: -8.640863418579102
    6. 'N' → logprob: -8.765863418579102
    7. 'import' → logprob: -8.890863418579102
    8. '<|end|>' → logprob: -9.265863418579102
    9. 'for' → logprob: -10.265863418579102
    10. '\' → logprob: -10.265863418579102

Token 267: ' get' (ID: 717)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07480857521295547
    2. ' solve' → logprob: -2.9498085975646973
    3. ' dfs' → logprob: -4.949808597564697
    4. 'main' → logprob: -4.949808597564697
    5. ' bfs' → logprob: -6.324808597564697
    6. 'solve' → logprob: -6.949808597564697
    7. ' find' → logprob: -7.199808597564697
    8. ' dist' → logprob: -8.324808120727539
    9. ' visit' → logprob: -8.449808120727539
    10. ' run' → logprob: -8.574808120727539

Token 268: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.3800687789916992
    2. '_path' → logprob: -1.7550687789916992
    3. '_dist' → logprob: -2.505068778991699
    4. '_input' → logprob: -2.630068778991699
    5. '_neighbors' → logprob: -2.880068778991699
    6. '_last' → logprob: -3.505068778991699
    7. '_edges' → logprob: -3.880068778991699
    8. '_max' → logprob: -3.880068778991699
    9. '_paths' → logprob: -3.880068778991699
    10. '_nodes' → logprob: -3.880068778991699

Token 269: '():
' (ID: 8595)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.7244789004325867
    2. '():' → logprob: -0.9744789004325867
    3. '_token' → logprob: -2.4744789600372314
    4. '_edge' → logprob: -4.474478721618652
    5. '(' → logprob: -4.849478721618652
    6. '_move' → logprob: -5.224478721618652
    7. '()' → logprob: -5.224478721618652
    8. '_step' → logprob: -5.349478721618652
    9. '_' → logprob: -5.849478721618652
    10. '_neighbor' → logprob: -6.224478721618652

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02858724072575569
    2. ' pass' → logprob: -4.528587341308594
    3. ' return' → logprob: -4.903587341308594
    4. '    ' → logprob: -5.528587341308594
    5. ' try' → logprob: -5.528587341308594
    6. 'try' → logprob: -7.653587341308594
    7. 'return' → logprob: -7.778587341308594
    8. ' input' → logprob: -8.903587341308594
    9. ' line' → logprob: -9.028587341308594
    10. ' x' → logprob: -9.153587341308594

Token 271: ' tg' (ID: 91008)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7262163758277893
    2. ' return' → logprob: -1.7262163162231445
    3. '   ' → logprob: -2.2262163162231445
    4. 'try' → logprob: -2.4762163162231445
    5. ' try' → logprob: -3.4762163162231445
    6. ' line' → logprob: -3.4762163162231445
    7. 'line' → logprob: -3.8512163162231445
    8. 'import' → logprob: -4.3512163162231445
    9. ' pass' → logprob: -4.8512163162231445
    10. 'x' → logprob: -4.8512163162231445

Token 272: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.6982969045639038
    2. 't' → logprob: -1.6982969045639038
    3. ' =' → logprob: -1.6982969045639038
    4. '=' → logprob: -2.0732970237731934
    5. '=int' → logprob: -5.323297023773193
    6. '   ' → logprob: -7.323297023773193
    7. '_node' → logprob: -7.698297023773193
    8. '=input' → logprob: -7.698297023773193
    9. 'arget' → logprob: -7.823297023773193
    10. ',' → logprob: -8.198296546936035

Token 273: ' work' (ID: 1101)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31044575572013855
    2. 'int' → logprob: -1.935445785522461
    3. 'sys' → logprob: -2.685445785522461
    4. 'lint' → logprob: -3.810445785522461
    5. ' input' → logprob: -4.435445785522461
    6. ' sys' → logprob: -5.685445785522461
    7. 'gin' → logprob: -6.310445785522461
    8. 'list' → logprob: -6.310445785522461
    9. '0' → logprob: -6.560445785522461
    10. 'stdin' → logprob: -6.810445785522461

Token 274: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5209766626358032
    2. '.pop' → logprob: -1.5209766626358032
    3. '[-' → logprob: -1.6459766626358032
    4. 'ing' → logprob: -2.7709765434265137
    5. 'er' → logprob: -3.3959765434265137
    6. '[next' → logprob: -3.7709765434265137
    7. 'ers' → logprob: -3.8959765434265137
    8. '_queue' → logprob: -3.8959765434265137
    9. '_nodes' → logprob: -4.020976543426514
    10. 'list' → logprob: -4.145976543426514

Token 275: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7449744343757629
    2. '0' → logprob: -1.4949743747711182
    3. 'idx' → logprob: -1.8699743747711182
    4. 'ptr' → logprob: -2.869974374771118
    5. '_idx' → logprob: -4.119974613189697
    6. '_pos' → logprob: -4.369974613189697
    7. 'cur' → logprob: -4.744974613189697
    8. ']' → logprob: -5.119974613189697
    9. '_ptr' → logprob: -5.119974613189697
    10. '[' → logprob: -5.369974613189697

Token 276: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3759017586708069
    2. ']' → logprob: -1.250901699066162
    3. '].' → logprob: -3.750901699066162
    4. '[' → logprob: -6.375901699066162
    5. ']
' → logprob: -7.500901699066162
    6. '0' → logprob: -7.500901699066162
    7. '][:' → logprob: -8.00090217590332
    8. '];' → logprob: -9.75090217590332
    9. '][-' → logprob: -9.75090217590332
    10. '   ' → logprob: -10.37590217590332

Token 277: ' if' (ID: 538)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.028211934491991997
    2. '[' → logprob: -3.653211832046509
    3. '.' → logprob: -6.903212070465088
    4. '.split' → logprob: -7.528212070465088
    5. 'pop' → logprob: -8.15321159362793
    6. 'def' → logprob: -11.02821159362793
    7. '   ' → logprob: -11.65321159362793
    8. '.p' → logprob: -12.15321159362793
    9. '
' → logprob: -12.27821159362793
    10. '[:]' → logprob: -12.27821159362793

Token 278: ' work' (ID: 1101)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9132474660873413
    2. ' work' → logprob: -1.0382474660873413
    3. 'len' → logprob: -1.6632474660873413
    4. 'work' → logprob: -2.913247585296631
    5. ' not' → logprob: -8.038247108459473
    6. ' ' → logprob: -8.663247108459473
    7. 'True' → logprob: -9.038247108459473
    8. '0' → logprob: -9.288247108459473
    9. ' True' → logprob: -9.538247108459473
    10. '(len' → logprob: -10.663247108459473

Token 279: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2877056300640106
    2. 'else' → logprob: -1.412705659866333
    3. '!=' → logprob: -5.787705421447754
    4. '[' → logprob: -7.162705421447754
    5. ']' → logprob: -7.162705421447754
    6. ':' → logprob: -7.912705421447754
    7. 'len' → logprob: -8.287705421447754
    8. '.' → logprob: -8.787705421447754
    9. '<len' → logprob: -8.912705421447754
    10. '>' → logprob: -9.037705421447754

Token 280: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3432488739490509
    2. '-' → logprob: -1.5932488441467285
    3. ' None' → logprob: -2.5932488441467285
    4. ' -' → logprob: -4.7182488441467285
    5. '   ' → logprob: -6.2182488441467285
    6. '0' → logprob: -7.2182488441467285
    7. ' ' → logprob: -7.8432488441467285
    8. '  ' → logprob: -9.093249320983887
    9. '[]' → logprob: -9.343249320983887
    10. '1' → logprob: -9.593249320983887

Token 281: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16777101159095764
    2. '-' → logprob: -1.9177709817886353
    3. ' None' → logprob: -5.792770862579346
    4. '0' → logprob: -5.917770862579346
    5. '[]' → logprob: -7.542770862579346
    6. '   ' → logprob: -7.542770862579346
    7. '1' → logprob: -8.542771339416504
    8. ' -' → logprob: -8.667771339416504
    9. 'sys' → logprob: -9.542771339416504
    10. ' ' → logprob: -9.917771339416504

Token 282: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.235567569732666
    2. 'return' → logprob: -1.360567569732666
    3. '   ' → logprob: -1.860567569732666
    4. ' return' → logprob: -2.360567569732666
    5. 'def' → logprob: -2.610567569732666
    6. '<|end|>' → logprob: -3.110567569732666
    7. ' 
' → logprob: -3.985567569732666
    8. '    
' → logprob: -4.610567569732666
    9. ')' → logprob: -4.860567569732666
    10. ' if' → logprob: -4.985567569732666

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22165998816490173
    2. '<|end|>' → logprob: -2.5966598987579346
    3. 'return' → logprob: -3.4716598987579346
    4. ' if' → logprob: -3.7216598987579346
    5. ' return' → logprob: -4.221660137176514
    6. '
' → logprob: -4.346660137176514
    7. 'def' → logprob: -4.846660137176514
    8. '[' → logprob: -5.096660137176514
    9. '    
' → logprob: -5.096660137176514
    10. 'if' → logprob: -5.221660137176514

Token 284: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7850958108901978
    2. 'if' → logprob: -0.9100958108901978
    3. ' if' → logprob: -2.785095691680908
    4. 'return' (adapté à ' return') → logprob: -3.035095691680908
    5. 'for' → logprob: -4.785095691680908
    6. ' return' → logprob: -5.035095691680908
    7. 'work' → logprob: -5.410095691680908
    8. ' for' → logprob: -5.535095691680908
    9. 'idx' → logprob: -5.660095691680908
    10. 'next' → logprob: -7.160095691680908

Token 285: ' n' (ID: 297)
  Prédit: ' tg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tg' → logprob: -0.20334263145923615
    2. 'tg' → logprob: -1.7033426761627197
    3. ' ' → logprob: -6.953342437744141
    4. '1' → logprob: -8.32834243774414
    5. ' (' → logprob: -8.70334243774414
    6. ' work' → logprob: -8.70334243774414
    7. 'work' → logprob: -9.57834243774414
    8. ' None' → logprob: -9.82834243774414
    9. ' len' → logprob: -9.82834243774414
    10. '(t' → logprob: -10.20334243774414

Token 286: 'array' (ID: 3361)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: '[last' (ID: 126100)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18908505141735077
    2. '[t' → logprob: -1.8140850067138672
    3. '[
' → logprob: -6.439085006713867
    4. '[next' → logprob: -7.064085006713867
    5. 't' → logprob: -7.189085006713867
    6. '[get' → logprob: -7.689085006713867
    7. '[tag' → logprob: -7.939085006713867
    8. '[(' → logprob: -8.064085006713867
    9. '[int' → logprob: -8.189085006713867
    10. '[g' → logprob: -8.189085006713867

Token 288: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.22778165340423584
    2. ']' → logprob: -2.4777817726135254
    3. ']_' → logprob: -3.1027817726135254
    4. '_' → logprob: -3.2277817726135254
    5. '_]' → logprob: -4.227781772613525
    6. '-' → logprob: -4.852781772613525
    7. '+' → logprob: -6.102781772613525
    8. ']+' → logprob: -6.477781772613525
    9. '_idx' → logprob: -6.727781772613525
    10. '_pos' → logprob: -6.727781772613525

Token 289: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14521795511245728
    2. ']' → logprob: -2.5202178955078125
    3. '-' → logprob: -3.7702178955078125
    4. '[t' → logprob: -4.5202178955078125
    5. 'tg' → logprob: -5.1452178955078125
    6. ' -' → logprob: -6.3952178955078125
    7. '+' → logprob: -6.3952178955078125
    8. ',t' → logprob: -6.3952178955078125
    9. ' ][' → logprob: -6.6452178955078125
    10. ',' → logprob: -6.6452178955078125

Token 290: 'tg' (ID: 61531)
  Prédit: 'tg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tg' → logprob: -0.00017684244085103273
    2. '0' → logprob: -9.875176429748535
    3. ' tg' → logprob: -10.250176429748535
    4. '
' → logprob: -10.375176429748535
    5. '-' → logprob: -10.500176429748535
    6. '1' → logprob: -12.125176429748535
    7. '   ' → logprob: -12.375176429748535
    8. 'last' → logprob: -12.500176429748535
    9. 'work' → logprob: -12.625176429748535
    10. ']' → logprob: -13.500176429748535

Token 291: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008391655283048749
    2. ' ]' → logprob: -8.000839233398438
    3. '][' → logprob: -8.750839233398438
    4. '[' → logprob: -9.125839233398438
    5. '-' → logprob: -9.250839233398438
    6. '],' → logprob: -10.250839233398438
    7. ']
' → logprob: -10.750839233398438
    8. ']-' → logprob: -11.125839233398438
    9. ' -' → logprob: -11.250839233398438
    10. ']+' → logprob: -11.500839233398438

Token 292: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' move' (ID: 5275)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7177248597145081
    2. ' get' → logprob: -1.2177248001098633
    3. 'n' → logprob: -2.8427248001098633
    4. 'pr' → logprob: -4.342724800109863
    5. 'def' → logprob: -4.342724800109863
    6. 'main' → logprob: -4.342724800109863
    7. ' def' → logprob: -4.467724800109863
    8. ' pr' → logprob: -4.717724800109863
    9. ' visit' → logprob: -4.717724800109863
    10. ' work' → logprob: -4.842724800109863

Token 294: 'on' (ID: 263)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.0697933435440063
    2. '(' → logprob: -1.3197933435440063
    3. '():' → logprob: -2.194793224334717
    4. '(to' → logprob: -2.444793224334717
    5. '(last' → logprob: -2.694793224334717
    6. '_to' → logprob: -3.069793224334717
    7. '()' → logprob: -3.819793224334717
    8. '_next' → logprob: -4.319793224334717
    9. ' (' → logprob: -4.694793224334717
    10. 'to' → logprob: -4.694793224334717

Token 295: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.012227418832480907
    2. '()' → logprob: -4.512227535247803
    3. '():
' → logprob: -6.887227535247803
    4. '(' → logprob: -9.512227058410645
    5. '_' → logprob: -9.887227058410645
    6. ' ():' → logprob: -10.887227058410645
    7. '():
' → logprob: -13.387227058410645
    8. '(next' → logprob: -13.387227058410645
    9. '_next' → logprob: -13.512227058410645
    10. ' ()' → logprob: -13.887227058410645

Token 296: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.37275514006614685
    2. '   ' → logprob: -1.2477551698684692
    3. ' global' → logprob: -3.7477550506591797
    4. '	global' → logprob: -8.62275505065918
    5. 'last' → logprob: -9.37275505065918
    6. 'def' → logprob: -9.49775505065918
    7. 'pass' → logprob: -10.74775505065918
    8. 'print' → logprob: -11.62275505065918
    9. 'non' → logprob: -11.74775505065918
    10. 'if' → logprob: -11.87275505065918

Token 297: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.32565367221832275
    2. ' global' → logprob: -1.3256536722183228
    3. '   ' → logprob: -4.450653553009033
    4. 'last' → logprob: -8.950654029846191
    5. 'if' → logprob: -9.450654029846191
    6. ' last' → logprob: -9.700654029846191
    7. ' if' → logprob: -9.950654029846191
    8. 'pr' → logprob: -10.200654029846191
    9. '	global' → logprob: -10.200654029846191
    10. 'tg' → logprob: -10.325654029846191

Token 298: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.013883865438401699
    2. 'dist' → logprob: -4.6388840675354
    3. 'work' → logprob: -6.5138840675354
    4. ' last' → logprob: -6.8888840675354
    5. 'visited' → logprob: -8.138883590698242
    6. 'cur' → logprob: -8.388883590698242
    7. 'curr' → logprob: -8.888883590698242
    8. 'current' → logprob: -9.013883590698242
    9. 'n' → logprob: -9.138883590698242
    10. 'ans' → logprob: -9.263883590698242

Token 299: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00023977462842594832
    2. '_move' → logprob: -8.500239372253418
    3. '_' → logprob: -11.125239372253418
    4. '_token' → logprob: -12.125239372253418
    5. '_n' → logprob: -12.375239372253418
    6. 'node' → logprob: -12.750239372253418
    7. '_user' → logprob: -13.625239372253418
    8. '_line' → logprob: -13.625239372253418
    9. '_code' → logprob: -14.375239372253418
    10. 'move' → logprob: -14.625239372253418

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047156237065792084
    2. '
' → logprob: -4.04715633392334
    3. '   ' → logprob: -4.17215633392334
    4. '    
' → logprob: -4.92215633392334
    5. ' ,' → logprob: -5.79715633392334
    6. ',last' → logprob: -6.54715633392334
    7. '    ' → logprob: -7.67215633392334
    8. ' 
' → logprob: -8.17215633392334
    9. '   
' → logprob: -8.54715633392334
    10. ',
' → logprob: -9.29715633392334

Token 301: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06669894605875015
    2. ' dist' → logprob: -2.9416990280151367
    3. 'last' → logprob: -5.066699028015137
    4. 'work' → logprob: -7.316699028015137
    5. 'visited' → logprob: -7.691699028015137
    6. ' last' → logprob: -8.066699028015137
    7. '   ' → logprob: -8.066699028015137
    8. 'curr' → logprob: -8.066699028015137
    9. 'steps' → logprob: -8.191699028015137
    10. 'cur' → logprob: -8.316699028015137

Token 302: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.00027813989436253905
    2. '_' → logprob: -9.00027847290039
    3. 'last' → logprob: -10.37527847290039
    4. '_left' → logprob: -11.00027847290039
    5. '_next' → logprob: -11.12527847290039
    6. '_here' → logprob: -11.25027847290039
    7. '_count' → logprob: -11.87527847290039
    8. '_tr' → logprob: -12.25027847290039
    9. '_cnt' → logprob: -12.25027847290039
    10. '_from' → logprob: -12.37527847290039

Token 303: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8778340220451355
    2. ',' → logprob: -1.1278340816497803
    3. '
' → logprob: -1.3778340816497803
    4. '    
' → logprob: -6.127833843231201
    5. ' =' → logprob: -6.502833843231201
    6. ' +=' → logprob: -6.877833843231201
    7. ',last' → logprob: -7.002833843231201
    8. '
' → logprob: -7.627833843231201
    9. '    ' → logprob: -7.877833843231201
    10. ',
' → logprob: -8.25283432006836

Token 304: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.8375978469848633
    2. 'dist' → logprob: -1.7125978469848633
    3. 'visited' → logprob: -2.5875978469848633
    4. 'last' → logprob: -2.9625978469848633
    5. 'visit' → logprob: -3.8375978469848633
    6. 'vis' → logprob: -4.087597846984863
    7. 'ans' → logprob: -4.212597846984863
    8. 'steps' → logprob: -4.337597846984863
    9. 'cur' → logprob: -4.337597846984863
    10. 'cnt' → logprob: -4.462597846984863

Token 305: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43326276540756226
    2. '
' → logprob: -1.308262825012207
    3. ',' → logprob: -3.433262825012207
    4. ' =' → logprob: -3.558262825012207
    5. '    
' → logprob: -4.308262825012207
    6. '=' → logprob: -5.933262825012207
    7. ' +=' → logprob: -6.433262825012207
    8. '[last' → logprob: -7.683262825012207
    9. '+=' → logprob: -7.808262825012207
    10. '   
' → logprob: -7.933262825012207

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13356982171535492
    2. '
' → logprob: -2.1335697174072266
    3. ',' → logprob: -5.508569717407227
    4. '    
' → logprob: -6.508569717407227
    5. ',
' → logprob: -8.758569717407227
    6. '[last' → logprob: -8.883569717407227
    7. '<|end|>' → logprob: -9.133569717407227
    8. ',last' → logprob: -9.383569717407227
    9. 'def' → logprob: -9.508569717407227
    10. ' last' → logprob: -9.633569717407227

Token 307: ' n' (ID: 297)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.022194504737854
    2. 'last' → logprob: -1.272194504737854
    3. '   ' → logprob: -2.2721943855285645
    4. 'next' → logprob: -2.5221943855285645
    5. 'd' → logprob: -2.6471943855285645
    6. 'if' → logprob: -3.3971943855285645
    7. 'n' (adapté à ' n') → logprob: -4.0221943855285645
    8. 'x' → logprob: -5.0221943855285645
    9. ' last' → logprob: -5.0221943855285645
    10. ' nxt' → logprob: -5.1471943855285645

Token 308: ' =' (ID: 314)
  Prédit: 'ode'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.6157534718513489
    2. 'array' → logprob: -1.365753412246704
    3. 'ext' → logprob: -2.365753412246704
    4. '   ' → logprob: -3.990753412246704
    5. 'last' → logprob: -3.990753412246704
    6. 'def' → logprob: -4.240753650665283
    7. 'ow' → logprob: -4.365753650665283
    8. 'odes' → logprob: -4.615753650665283
    9. ' =' → logprob: -4.865753650665283
    10. '_array' → logprob: -5.615753650665283

Token 309: ' get' (ID: 717)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7495020627975464
    2. 'n' → logprob: -0.8745020627975464
    3. 'int' → logprob: -3.624502182006836
    4. ' len' → logprob: -3.624502182006836
    5. 'last' → logprob: -4.124502182006836
    6. ' n' → logprob: -4.249502182006836
    7. 'get' → logprob: -4.874502182006836
    8. '1' → logprob: -5.374502182006836
    9. 'next' → logprob: -5.749502182006836
    10. 'work' → logprob: -5.874502182006836

Token 310: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.003237601602450013
    2. 'next' → logprob: -5.878237724304199
    3. 'array' → logprob: -8.3782377243042
    4. '_last' → logprob: -10.0032377243042
    5. '_array' → logprob: -10.2532377243042
    6. '()' → logprob: -10.3782377243042
    7. '(next' → logprob: -10.8782377243042
    8. 'n' → logprob: -10.8782377243042
    9. ' next' → logprob: -11.3782377243042
    10. '_' → logprob: -12.2532377243042

Token 311: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6091160178184509
    2. '()' → logprob: -0.8591160178184509
    3. '[last' → logprob: -3.6091160774230957
    4. '()[' → logprob: -5.859116077423096
    5. '(last' → logprob: -6.859116077423096
    6. '[]' → logprob: -8.359115600585938
    7. '
' → logprob: -8.734115600585938
    8. '()

' → logprob: -8.734115600585938
    9. '[n' → logprob: -8.859115600585938
    10. '[' → logprob: -9.109115600585938

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008185925893485546
    2. 'last' → logprob: -5.383185863494873
    3. ' last' → logprob: -6.633185863494873
    4. 'if' → logprob: -6.633185863494873
    5. ' if' → logprob: -7.133185863494873
    6. 'dist' → logprob: -9.258186340332031
    7. '
' → logprob: -11.883186340332031
    8. '    
' → logprob: -12.008186340332031
    9. 'def' → logprob: -12.258186340332031
    10. 'n' → logprob: -12.883186340332031

Token 313: ' print' (ID: 2123)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0855810642242432
    2. 'if' → logprob: -1.8355810642242432
    3. 'last' → logprob: -1.9605810642242432
    4. 'printer' → logprob: -2.210581064224243
    5. 'pr' → logprob: -2.460581064224243
    6. 'work' → logprob: -2.585581064224243
    7. 'print' (adapté à ' print') → logprob: -2.710581064224243
    8. '   ' → logprob: -3.960581064224243
    9. 'sys' → logprob: -6.460580825805664
    10. ' if' → logprob: -7.210580825805664

Token 314: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.056946076452732086
    2. '(' → logprob: -3.306946039199829
    3. '('' → logprob: -4.431946277618408
    4. '(f' → logprob: -5.681946277618408
    5. '("' → logprob: -5.681946277618408
    6. '()' → logprob: -11.05694580078125
    7. '(
' → logprob: -13.30694580078125
    8. '((' → logprob: -13.43194580078125
    9. ' (' → logprob: -13.55694580078125
    10. '(('' → logprob: -15.30694580078125

Token 315: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16166065633296967
    2. ')' → logprob: -1.9116606712341309
    3. ' )
' → logprob: -7.286660671234131
    4. ',' → logprob: -7.536660671234131
    5. ')
' → logprob: -9.036660194396973
    6. ' )' → logprob: -9.411660194396973
    7. ',end' → logprob: -12.036660194396973
    8. ')

' → logprob: -12.661660194396973
    9. ' ,' → logprob: -13.161660194396973
    10. ');' → logprob: -13.161660194396973

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6905564069747925
    2. '<|end|>' → logprob: -1.1905564069747925
    3. '
' → logprob: -1.9405564069747925
    4. '\n' → logprob: -4.190556526184082
    5. '```' → logprob: -4.815556526184082
    6. '    
' → logprob: -4.815556526184082
    7. ' last' → logprob: -5.565556526184082
    8. 'last' → logprob: -5.815556526184082
    9. '  
' → logprob: -6.065556526184082
    10. 'sys' → logprob: -6.190556526184082

Token 317: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.05213074013590813
    2. 'last' → logprob: -3.177130699157715
    3. ' sys' → logprob: -5.427130699157715
    4. '   ' → logprob: -5.927130699157715
    5. 'if' → logprob: -7.052130699157715
    6. ' last' → logprob: -7.302130699157715
    7. 'print' → logprob: -8.427130699157715
    8. '    
' → logprob: -9.677130699157715
    9. '
' → logprob: -9.927130699157715
    10. '```' → logprob: -10.427130699157715

Token 318: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -0.0003103175258729607
    2. 'stdout' → logprob: -8.125309944152832
    3. '.stdin' → logprob: -12.000309944152832
    4. '.stderr' → logprob: -12.750309944152832
    5. 'sys' → logprob: -13.500309944152832
    6. '.flush' → logprob: -13.750309944152832
    7. '.exit' → logprob: -14.125309944152832
    8. '(stdout' → logprob: -14.625309944152832
    9. '_stdout' → logprob: -14.625309944152832
    10. '.out' → logprob: -15.000309944152832

Token 319: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.018220294266939163
    2. 'flush' → logprob: -4.0182204246521
    3. '_flush' → logprob: -9.643219947814941
    4. 'stdout' → logprob: -12.643219947814941
    5. '.stdout' → logprob: -13.893219947814941
    6. ' flush' → logprob: -14.893219947814941
    7. '.Flush' → logprob: -14.893219947814941
    8. '.' → logprob: -15.143219947814941
    9. '   ' → logprob: -16.268220901489258
    10. 'out' → logprob: -16.268220901489258

Token 320: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08919212967157364
    2. '
' → logprob: -2.4641921520233154
    3. '    
' → logprob: -8.589192390441895
    4. ',' → logprob: -11.214192390441895
    5. 'n' → logprob: -11.339192390441895
    6. '
' → logprob: -11.714192390441895
    7. '\n' → logprob: -12.089192390441895
    8. '<|end|>' → logprob: -12.214192390441895
    9. ',
' → logprob: -12.714192390441895
    10. ' 
' → logprob: -12.964192390441895

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003014430170878768
    2. 'last' → logprob: -5.87801456451416
    3. ' last' → logprob: -9.50301456451416
    4. '
' → logprob: -9.75301456451416
    5. '	last' → logprob: -10.37801456451416
    6. '    
' → logprob: -10.62801456451416
    7. '[last' → logprob: -11.50301456451416
    8. '<|end|>' → logprob: -12.87801456451416
    9. '_last' → logprob: -13.00301456451416
    10. 'if' → logprob: -13.50301456451416

Token 322: ' dist' (ID: 3601)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.012085392139852047
    2. 'res' → logprob: -6.012085437774658
    3. '   ' → logprob: -6.262085437774658
    4. 'resp' → logprob: -6.262085437774658
    5. 'line' → logprob: -6.637085437774658
    6. 'dist' (adapté à ' dist') → logprob: -6.887085437774658
    7. 'if' → logprob: -7.137085437774658
    8. 'work' → logprob: -7.387085437774658
    9. 'response' → logprob: -7.512085437774658
    10. 'ret' → logprob: -7.637085437774658

Token 323: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. 'last' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '_next' → logprob: -16.375001907348633
    6. '_Last' → logprob: -16.875001907348633
    7. '_prev' → logprob: -17.125001907348633
    8. '_LAST' → logprob: -17.375001907348633
    9. '=_' → logprob: -17.875001907348633
    10. ',_' → logprob: -18.125001907348633

Token 324: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10043925046920776
    2. '+=' → logprob: -2.3504393100738525
    3. ' -=' → logprob: -8.600439071655273
    4. '=' → logprob: -10.725439071655273
    5. ' =' → logprob: -11.100439071655273
    6. '-=' → logprob: -11.725439071655273
    7. '   ' → logprob: -13.850439071655273
    8. '+' → logprob: -14.100439071655273
    9. ',' → logprob: -14.225439071655273
    10. ' ' → logprob: -15.100439071655273

Token 325: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. 'n' → logprob: -14.750067710876465
    4. '-' → logprob: -15.750067710876465
    5. '   ' → logprob: -16.00006675720215
    6. 'd' → logprob: -16.00006675720215
    7. '
' → logprob: -17.00006675720215
    8. 'dist' → logprob: -17.00006675720215
    9. 'abs' → logprob: -17.37506675720215
    10. 'last' → logprob: -17.50006675720215

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022201328829396516
    2. ' ' → logprob: -8.875222206115723
    3. 'n' → logprob: -10.375222206115723
    4. 'abs' → logprob: -11.125222206115723
    5. 'd' → logprob: -11.875222206115723
    6. 'dist' → logprob: -11.875222206115723
    7. 'len' → logprob: -12.000222206115723
    8. 'edges' → logprob: -12.875222206115723
    9. 'last' → logprob: -13.125222206115723
    10. 'graph' → logprob: -13.625222206115723

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027135726995766163
    2. 'last' → logprob: -6.127713680267334
    3. 'if' → logprob: -8.627713203430176
    4. ' last' → logprob: -8.752713203430176
    5. ' if' → logprob: -8.877713203430176
    6. '
' → logprob: -10.377713203430176
    7. '	last' → logprob: -11.752713203430176
    8. '    
' → logprob: -12.502713203430176
    9. '[last' → logprob: -12.752713203430176
    10. '<|end|>' → logprob: -13.627713203430176

Token 328: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06728123873472214
    2. '   ' → logprob: -3.4422812461853027
    3. 'if' → logprob: -3.4422812461853027
    4. ' last' → logprob: -7.192281246185303
    5. ' if' → logprob: -8.192280769348145
    6. 'def' → logprob: -10.817280769348145
    7. '
' → logprob: -12.067280769348145
    8. '```' → logprob: -12.067280769348145
    9. '    
' → logprob: -12.317280769348145
    10. '	last' → logprob: -12.567280769348145

Token 329: ' if' (ID: 538)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.04330962896347046
    2. 'if' (adapté à ' if') → logprob: -3.1683096885681152
    3. 'work' → logprob: -8.293309211730957
    4. '   ' → logprob: -10.293309211730957
    5. ' last' → logprob: -11.543309211730957
    6. '
' → logprob: -12.168309211730957
    7. ' if' → logprob: -13.168309211730957
    8. '    
' → logprob: -13.793309211730957
    9. '```' → logprob: -14.168309211730957
    10. '#' → logprob: -14.293309211730957

Token 330: ' dist' (ID: 3601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13179513812065125
    2. 'de' → logprob: -2.8817951679229736
    3. ' n' → logprob: -3.5067951679229736
    4. 'dist' → logprob: -3.6317951679229736
    5. ' depot' → logprob: -5.2567949295043945
    6. ' dist' → logprob: -6.7567949295043945
    7. 'last' → logprob: -6.8817949295043945
    8. 'not' → logprob: -7.1317949295043945
    9. 'dep' → logprob: -7.1317949295043945
    10. 'work' → logprob: -7.7567949295043945

Token 331: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -7.584239938296378e-06
    2. '_' → logprob: -12.750007629394531
    3. '_next' → logprob: -13.250007629394531
    4. '_Last' → logprob: -14.375007629394531
    5. 'last' → logprob: -14.500007629394531
    6. '==' → logprob: -14.875007629394531
    7. '```' → logprob: -15.000007629394531
    8. '_LAST' → logprob: -15.000007629394531
    9. '_n' → logprob: -15.500007629394531
    10. '_here' → logprob: -16.75000762939453

Token 332: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3491218388080597
    2. '==' → logprob: -1.5991218090057373
    3. ' >=' → logprob: -2.5991218090057373
    4. '>=' → logprob: -4.099122047424316
    5. ' >' → logprob: -6.724122047424316
    6. '>' → logprob: -7.849122047424316
    7. '   ' → logprob: -10.349122047424316
    8. ' <' → logprob: -10.849122047424316
    9. ' <=' → logprob: -10.849122047424316
    10. ' ' → logprob: -11.849122047424316

Token 333: ' dist' (ID: 3601)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.00037466554204002023
    2. '1' → logprob: -8.625374794006348
    3. ' MAX' → logprob: -9.250374794006348
    4. 'n' → logprob: -10.625374794006348
    5. '2' → logprob: -11.000374794006348
    6. 'dist' → logprob: -11.500374794006348
    7. '   ' → logprob: -11.750374794006348
    8. '5' → logprob: -12.000374794006348
    9. '10' → logprob: -12.125374794006348
    10. 'max' → logprob: -12.375374794006348

Token 334: '[last' (ID: 126100)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.6585713028907776
    2. '_MAX' → logprob: -1.1585712432861328
    3. '_last' → logprob: -2.533571243286133
    4. '_next' → logprob: -3.783571243286133
    5. '_LAST' → logprob: -4.158571243286133
    6. '_max' → logprob: -4.283571243286133
    7. '[n' → logprob: -4.533571243286133
    8. 'last' → logprob: -4.908571243286133
    9. 'max' → logprob: -6.033571243286133
    10. '_NEXT' → logprob: -6.283571243286133

Token 335: '_node' (ID: 11390)
  Prédit: '_last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -0.7734746932983398
    2. '_n' → logprob: -1.3984746932983398
    3. '_node' → logprob: -1.3984746932983398
    4. '_next' → logprob: -4.27347469329834
    5. '[n' → logprob: -5.02347469329834
    6. 'n' → logprob: -5.39847469329834
    7. 'last' → logprob: -5.39847469329834
    8. '_here' → logprob: -5.52347469329834
    9. '_array' → logprob: -5.89847469329834
    10. 'node' → logprob: -6.27347469329834

Token 336: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.470147043466568
    2. '[n' → logprob: -1.0951470136642456
    3. '[t' → logprob: -4.095147132873535
    4. '[get' → logprob: -4.720147132873535
    5. '[' → logprob: -4.845147132873535
    6. '[last' → logprob: -6.595147132873535
    7. ']:' → logprob: -6.720147132873535
    8. ']' → logprob: -6.970147132873535
    9. '   ' → logprob: -7.220147132873535
    10. ',n' → logprob: -7.720147132873535

Token 337: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6166903151315637e-05
    2. ' n' → logprob: -11.625016212463379
    3. 'work' → logprob: -12.750016212463379
    4. 'get' → logprob: -13.000016212463379
    5. '
' → logprob: -14.625016212463379
    6. 'tg' → logprob: -14.875016212463379
    7. 'move' → logprob: -15.250016212463379
    8. '(n' → logprob: -15.625016212463379
    9. '   ' → logprob: -15.750016212463379
    10. 'ng' → logprob: -15.875016212463379

Token 338: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12063927203416824
    2. ']:
' → logprob: -2.6206393241882324
    3. ':' → logprob: -3.7456393241882324
    4. ']' → logprob: -4.870639324188232
    5. ']+' → logprob: -5.245639324188232
    6. '[' → logprob: -5.870639324188232
    7. ':
' → logprob: -7.620639324188232
    8. '   ' → logprob: -7.870639324188232
    9. '+' → logprob: -9.120638847351074
    10. ']:
' → logprob: -9.245638847351074

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09399430453777313
    2. ':
' → logprob: -2.468994379043579
    3. ':' → logprob: -6.093994140625
    4. '   ' → logprob: -6.843994140625
    5. '):
' → logprob: -7.343994140625
    6. ' last' → logprob: -7.968994140625
    7. 'last' → logprob: -8.093994140625
    8. ' :
' → logprob: -9.093994140625
    9. ' and' → logprob: -9.843994140625
    10. '```' → logprob: -10.218994140625

Token 340: ' dist' (ID: 3601)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.16930951178073883
    2. ' last' → logprob: -2.169309616088867
    3. '       ' → logprob: -3.794309616088867
    4. '   ' → logprob: -4.044309616088867
    5. 'dist' (adapté à ' dist') → logprob: -7.169309616088867
    6. 'work' → logprob: -7.544309616088867
    7. '	last' → logprob: -10.294309616088867
    8. ' work' → logprob: -10.419309616088867
    9. '
' → logprob: -10.544309616088867
    10. 'if' → logprob: -10.794309616088867

Token 341: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -5.080963092041202e-06
    2. 'last' → logprob: -12.625004768371582
    3. '_' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.250004768371582
    5. '[last' → logprob: -15.875004768371582
    6. 'Last' → logprob: -17.5000057220459
    7. '_LAST' → logprob: -17.5000057220459
    8. '_Last' → logprob: -17.5000057220459
    9. ' last' → logprob: -17.6250057220459
    10. '=' → logprob: -17.7500057220459

Token 342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859747737646103
    2. ' =' → logprob: -3.048597574234009
    3. ',' → logprob: -11.54859733581543
    4. '   ' → logprob: -14.79859733581543
    5. ' ' → logprob: -17.04859733581543
    6. '.=' → logprob: -17.54859733581543
    7. '  ' → logprob: -17.92359733581543
    8. '    ' → logprob: -18.42359733581543
    9. ' ,' → logprob: -18.42359733581543
    10. '       ' → logprob: -18.92359733581543

Token 343: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000918604782782495
    2. ' ' → logprob: -7.000918388366699
    3. '   ' → logprob: -12.0009183883667
    4. '  ' → logprob: -15.8134183883667
    5. '=' → logprob: -15.9384183883667
    6. '۰' → logprob: -16.438419342041016
    7. ' ' → logprob: -16.625919342041016
    8. '           ' → logprob: -16.813419342041016
    9. '       ' → logprob: -16.813419342041016
    10. '1' → logprob: -17.063419342041016

Token 344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.500024795532227
    4. '۰' → logprob: -17.125024795532227
    5. '-' → logprob: -17.625024795532227
    6. '1' → logprob: -17.625024795532227
    7. '00' → logprob: -17.687524795532227
    8. '000' → logprob: -17.750024795532227
    9. '=' → logprob: -18.062524795532227
    10. '  ' → logprob: -18.312524795532227

Token 345: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022290421649813652
    2. '   ' → logprob: -3.8972904682159424
    3. 'last' → logprob: -6.647290229797363
    4. ' last' → logprob: -7.897290229797363
    5. ',' → logprob: -10.397290229797363
    6. ',last' → logprob: -10.522290229797363
    7. '	last' → logprob: -11.272290229797363
    8. '        
' → logprob: -13.772290229797363
    9. '[last' → logprob: -13.772290229797363
    10. '           ' → logprob: -14.022290229797363

Token 346: '       ' (ID: 309)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5418873429298401
    2. '       ' → logprob: -1.2918872833251953
    3. '   ' → logprob: -2.1668872833251953
    4. ' last' → logprob: -3.5418872833251953
    5. 'if' → logprob: -10.541887283325195
    6. '	last' → logprob: -10.541887283325195
    7. 'work' → logprob: -10.791887283325195
    8. ',last' → logprob: -11.666887283325195
    9. ',' → logprob: -12.041887283325195
    10. '           ' → logprob: -12.416887283325195

Token 347: ' if' (ID: 538)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.01899760402739048
    2. 'work' → logprob: -4.393997669219971
    3. '   ' → logprob: -5.268997669219971
    4. 'if' (adapté à ' if') → logprob: -7.018997669219971
    5. ' last' → logprob: -8.143997192382812
    6. '       ' → logprob: -9.143997192382812
    7. '
' → logprob: -11.268997192382812
    8. ' work' → logprob: -13.018997192382812
    9. '	last' → logprob: -13.143997192382812
    10. ' if' → logprob: -13.518997192382812

Token 348: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.6376667618751526
    2. 'n' → logprob: -1.0126667022705078
    3. 'last' → logprob: -2.887666702270508
    4. ' work' → logprob: -3.637666702270508
    5. ' n' → logprob: -4.012666702270508
    6. ' last' → logprob: -5.637666702270508
    7. 'not' → logprob: -6.137666702270508
    8. 'len' → logprob: -7.012666702270508
    9. ' not' → logprob: -8.137666702270508
    10. ' depot' → logprob: -8.387666702270508

Token 349: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014730306342244148
    2. ' and' → logprob: -4.889730453491211
    3. ':
' → logprob: -5.139730453491211
    4. '[' → logprob: -7.139730453491211
    5. 'and' → logprob: -8.764730453491211
    6. '==' → logprob: -9.389730453491211
    7. '   ' → logprob: -10.264730453491211
    8. '<|end|>' → logprob: -10.389730453491211
    9. '```' → logprob: -10.639730453491211
    10. '.pop' → logprob: -10.764730453491211

Token 350: ' n' (ID: 297)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.23814131319522858
    2. ' work' → logprob: -1.6131412982940674
    3. 'last' → logprob: -5.2381415367126465
    4. 'n' → logprob: -5.9881415367126465
    5. ' last' → logprob: -6.8631415367126465
    6. 'tg' → logprob: -6.8631415367126465
    7. '   ' → logprob: -6.9881415367126465
    8. 'len' → logprob: -7.2381415367126465
    9. ' n' → logprob: -7.9881415367126465
    10. ' tg' → logprob: -8.113141059875488

Token 351: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133317828178406
    2. ' ==' → logprob: -1.3133318424224854
    3. ']==' → logprob: -10.688331604003906
    4. '()==' → logprob: -11.063331604003906
    5. '==
' → logprob: -12.063331604003906
    6. ')==' → logprob: -12.313331604003906
    7. '=' → logprob: -12.438331604003906
    8. '   ' → logprob: -12.563331604003906
    9. '!=' → logprob: -12.688331604003906
    10. '===' → logprob: -13.188331604003906

Token 352: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0004168489249423146
    2. ' work' → logprob: -7.8754167556762695
    3. '   ' → logprob: -10.50041675567627
    4. '
' → logprob: -12.25041675567627
    5. '1' → logprob: -13.25041675567627
    6. ' ' → logprob: -14.00041675567627
    7. '  ' → logprob: -14.00041675567627
    8. '	work' → logprob: -15.75041675567627
    9. '       ' → logprob: -15.87541675567627
    10. '    ' → logprob: -15.87541675567627

Token 353: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.615255839889869e-05
    2. '.pop' → logprob: -9.500096321105957
    3. '   ' → logprob: -11.500096321105957
    4. '[-' → logprob: -12.250096321105957
    5. '0' → logprob: -12.625096321105957
    6. 'pop' → logprob: -13.750096321105957
    7. '```' → logprob: -14.000096321105957
    8. '.' → logprob: -14.500096321105957
    9. '[
' → logprob: -15.750096321105957
    10. ' [' → logprob: -15.875096321105957

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018852073117159307
    2. '[' → logprob: -9.250188827514648
    3. '   ' → logprob: -9.500188827514648
    4. ' ' → logprob: -11.500188827514648
    5. '
' → logprob: -12.625188827514648
    6. '-' → logprob: -13.375188827514648
    7. '```' → logprob: -14.375188827514648
    8. '  ' → logprob: -15.000188827514648
    9. '(' → logprob: -15.500188827514648
    10. '1' → logprob: -15.625188827514648

Token 355: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5774957537651062
    2. ']:
' → logprob: -0.8274957537651062
    3. ']' → logprob: -7.202495574951172
    4. ':' → logprob: -7.827495574951172
    5. ']:
' → logprob: -8.577495574951172
    6. ']:

' → logprob: -9.202495574951172
    7. ':
' → logprob: -9.827495574951172
    8. ' ]' → logprob: -10.577495574951172
    9. '[' → logprob: -11.202495574951172
    10. '():
' → logprob: -11.577495574951172

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.636475493200123e-05
    2. ' work' → logprob: -9.750076293945312
    3. '          ' → logprob: -11.750076293945312
    4. ',' → logprob: -12.875076293945312
    5. '	       ' → logprob: -13.000076293945312
    6. ':' → logprob: -13.375076293945312
    7. '       ' → logprob: -13.875076293945312
    8. '               ' → logprob: -14.250076293945312
    9. '```' → logprob: -15.000076293945312
    10. '		' → logprob: -15.000076293945312

Token 357: ' work' (ID: 1101)
  Prédit: ' work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.17399266362190247
    2. '               ' → logprob: -1.92399263381958
    3. 'work' (adapté à ' work') → logprob: -4.42399263381958
    4. '	work' → logprob: -7.42399263381958
    5. '       ' → logprob: -7.67399263381958
    6. '           ' → logprob: -7.79899263381958
    7. ' del' → logprob: -8.798993110656738
    8. '   ' → logprob: -10.298993110656738
    9. '
' → logprob: -12.423993110656738
    10. '_work' → logprob: -12.548993110656738

Token 358: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.13061575591564178
    2. '=' → logprob: -2.130615711212158
    3. '.' → logprob: -5.630615711212158
    4. ' =' → logprob: -9.380616188049316
    5. 'pop' → logprob: -12.005616188049316
    6. '.=' → logprob: -13.255616188049316
    7. '=.' → logprob: -14.005616188049316
    8. '   ' → logprob: -14.380616188049316
    9. '.p' → logprob: -14.630616188049316
    10. ' .' → logprob: -15.380616188049316

Token 359: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004078997299075127
    2. '0' → logprob: -5.5040788650512695
    3. '()' → logprob: -14.50407886505127
    4. '[' → logprob: -16.629079818725586
    5. '(
' → logprob: -17.129079818725586
    6. ' (' → logprob: -18.504079818725586
    7. '()
' → logprob: -19.004079818725586
    8. '```' → logprob: -19.629079818725586
    9. 'def' → logprob: -19.754079818725586
    10. 'from' → logprob: -19.879079818725586

Token 360: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.37500286102295
    3. ')' → logprob: -13.75000286102295
    4. ' ' → logprob: -15.25000286102295
    5. '[' → logprob: -17.375003814697266
    6. '
' → logprob: -18.250003814697266
    7. ')
' → logprob: -18.500003814697266
    8. '.' → logprob: -19.875003814697266
    9. ',' → logprob: -20.125003814697266
    10. ').' → logprob: -20.125003814697266

Token 361: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000533732702024281
    2. ')
' → logprob: -8.125534057617188
    3. '())' → logprob: -9.000534057617188
    4. '()' → logprob: -9.375534057617188
    5. '<|end|>' → logprob: -10.750534057617188
    6. '       ' → logprob: -12.750534057617188
    7. '()
' → logprob: -14.125534057617188
    8. ' )' → logprob: -14.375534057617188
    9. ')return' → logprob: -14.375534057617188
    10. '   ' → logprob: -14.625534057617188

Token 362: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001606628531590104
    2. '       ' → logprob: -6.876606464385986
    3. 'last' → logprob: -7.501606464385986
    4. '           ' → logprob: -11.376606941223145
    5. '
' → logprob: -12.876606941223145
    6. '    
' → logprob: -13.001606941223145
    7. ' last' → logprob: -13.251606941223145
    8. ',' → logprob: -14.126606941223145
    9. '        
' → logprob: -14.251606941223145
    10. '<|end|>' → logprob: -14.376606941223145

Token 363: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.03830242529511452
    2. '   ' → logprob: -3.288302421569824
    3. ' last' → logprob: -8.288302421569824
    4. '       ' → logprob: -11.913302421569824
    5. '	last' → logprob: -13.913302421569824
    6. '    
' → logprob: -14.163302421569824
    7. '
' → logprob: -15.288302421569824
    8. '  ' → logprob: -15.663302421569824
    9. 'else' → logprob: -15.788302421569824
    10. '(last' → logprob: -15.913302421569824

Token 364: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.5
    3. '_token' → logprob: -17.5
    4. '_n' → logprob: -17.5
    5. '_' → logprob: -17.875
    6. '_NODE' → logprob: -18.375
    7. '_Node' → logprob: -18.75
    8. 'Node' → logprob: -20.0
    9. '_nodes' → logprob: -20.75
    10. '_code' → logprob: -21.375

Token 365: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142170786857605
    2. ' =' → logprob: -1.7014217376708984
    3. '=n' → logprob: -11.826421737670898
    4. ',' → logprob: -13.826421737670898
    5. '＝' → logprob: -16.2014217376709
    6. '=

' → logprob: -17.7014217376709
    7. ' ' → logprob: -17.7014217376709
    8. '.=' → logprob: -19.0764217376709
    9. '=
' → logprob: -19.0764217376709
    10. '=}' → logprob: -19.3264217376709

Token 366: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0067154900170862675
    2. ' n' → logprob: -5.006715297698975
    3. '	n' → logprob: -16.506715774536133
    4. '   ' → logprob: -17.256715774536133
    5. ' ' → logprob: -19.131715774536133
    6. '  ' → logprob: -19.506715774536133
    7. '<|end|>' → logprob: -19.881715774536133
    8. '    ' → logprob: -20.131715774536133
    9. '
' → logprob: -20.506715774536133
    10. '_n' → logprob: -20.631715774536133

Token 367: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.652233362197876
    2. '#' → logprob: -1.277233362197876
    3. 'n' → logprob: -2.402233362197876
    4. 'last' → logprob: -3.027233362197876
    5. '<|end|>' → logprob: -3.402233362197876
    6. '
' → logprob: -4.527233123779297
    7. 'if' → logprob: -5.902233123779297
    8. '_' → logprob: -6.402233123779297
    9. ' 
' → logprob: -6.527233123779297
    10. 'd' → logprob: -6.652233123779297

Token 369: ' tr' (ID: 498)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06705162674188614
    2. 'main' → logprob: -3.692051649093628
    3. ' def' → logprob: -4.317051410675049
    4. 'def' → logprob: -4.567051410675049
    5. ' __' → logprob: -4.817051410675049
    6. ' sys' → logprob: -5.442051410675049
    7. '__' → logprob: -7.567051410675049
    8. '_' → logprob: -7.817051410675049
    9. 'n' → logprob: -8.067051887512207
    10. 'gin' → logprob: -8.317051887512207

Token 370: 'gr' (ID: 896)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.034689340740442276
    2. 'ace' → logprob: -4.034689426422119
    3. 'avel' → logprob: -4.659689426422119
    4. 'averse' → logprob: -6.284689426422119
    5. 'ee' → logprob: -6.659689426422119
    6. 'av' → logprob: -6.909689426422119
    7. 'ans' → logprob: -7.034689426422119
    8. 'ack' → logprob: -7.659689426422119
    9. 'a' → logprob: -7.909689426422119
    10. 'ip' → logprob: -8.659688949584961

Token 371: '():' (ID: 9442)
  Prédit: 'igger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'igger' → logprob: -0.7715767025947571
    2. 'e' → logprob: -1.8965766429901123
    3. 'ee' → logprob: -2.0215766429901123
    4. 'iger' → logprob: -3.1465766429901123
    5. 'def' → logprob: -3.2715766429901123
    6. 'eat' → logprob: -3.5215766429901123
    7. 'ig' → logprob: -3.8965766429901123
    8. 'y' → logprob: -4.146576881408691
    9. '=' → logprob: -4.646576881408691
    10. 'eer' → logprob: -4.771576881408691

Token 372: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04228364676237106
    2. ' global' → logprob: -4.292283535003662
    3. ' pass' → logprob: -5.042283535003662
    4. 'global' → logprob: -5.417283535003662
    5. '<|end|>' → logprob: -5.917283535003662
    6. '    
' → logprob: -6.167283535003662
    7. ' if' → logprob: -6.417283535003662
    8. 'pass' → logprob: -6.542283535003662
    9. '
' → logprob: -6.542283535003662
    10. '	global' → logprob: -6.667283535003662

Token 373: ' len' (ID: 4631)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.5538310408592224
    2. 'len' → logprob: -2.428831100463867
    3. 'not' → logprob: -2.553831100463867
    4. ' work' → logprob: -2.553831100463867
    5. 'dist' → logprob: -3.428831100463867
    6. 'last' → logprob: -3.553831100463867
    7. ' not' → logprob: -3.803831100463867
    8. ' len' → logprob: -4.053831100463867
    9. ' dist' → logprob: -4.678831100463867
    10. ' last' → logprob: -4.928831100463867

Token 374: '(p' (ID: 2407)
  Prédit: '(work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(work' → logprob: -6.034592388459714e-06
    2. 'work' → logprob: -12.250005722045898
    3. '(' → logprob: -14.375005722045898
    4. '(_' → logprob: -14.750005722045898
    5. '(w' → logprob: -16.7500057220459
    6. '(word' → logprob: -17.0000057220459
    7. '	work' → logprob: -17.5000057220459
    8. '(sys' → logprob: -17.7500057220459
    9. '_work' → logprob: -18.3750057220459
    10. '((' → logprob: -18.6250057220459

Token 375: 'end' (ID: 419)
  Prédit: 'ath'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ath' → logprob: -0.3413147032260895
    2. 'work' → logprob: -2.4663147926330566
    3. 'r' → logprob: -2.9663147926330566
    4. 'aths' → logprob: -3.2163147926330566
    5. 'ending' → logprob: -4.341314792633057
    6. 'oss' → logprob: -4.591314792633057
    7. 'ar' → logprob: -4.591314792633057
    8. 'end' → logprob: -4.966314792633057
    9. 'lay' → logprob: -5.216314792633057
    10. 'l' → logprob: -5.591314792633057

Token 376: ')' (ID: 8)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.43914327025413513
    2. ')' → logprob: -1.0641433000564575
    3. 'ings' → logprob: -4.689143180847168
    4. ')>' → logprob: -8.314143180847168
    5. '[' → logprob: -8.939143180847168
    6. ')+' → logprob: -9.189143180847168
    7. 'ding' → logprob: -9.689143180847168
    8. '_work' → logprob: -9.689143180847168
    9. 'ng' → logprob: -9.814143180847168
    10. 'ingt' → logprob: -9.814143180847168

Token 377: ' >' (ID: 1424)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.73000568151474
    2. 'last' → logprob: -1.1050057411193848
    3. '<|end|>' → logprob: -2.7300057411193848
    4. '
' → logprob: -3.3550057411193848
    5. '#' → logprob: -3.4800057411193848
    6. 'n' → logprob: -4.230005741119385
    7. 'tr' → logprob: -5.355005741119385
    8. '    
' → logprob: -5.605005741119385
    9. '_last' → logprob: -5.730005741119385
    10. 'if' → logprob: -5.730005741119385

Token 378: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003604940138757229
    2. ' ' → logprob: -5.628604888916016
    3. '   ' → logprob: -13.941104888916016
    4. '1' → logprob: -13.941104888916016
    5. '  ' → logprob: -14.316104888916016
    6. 'MAX' → logprob: -14.378604888916016
    7. '
' → logprob: -15.378604888916016
    8. ' ' → logprob: -15.503604888916016
    9. '=' → logprob: -15.878604888916016
    10. '2' → logprob: -16.191104888916016

Token 379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003452368837315589
    2. ' ' → logprob: -8.125345230102539
    3. '1' → logprob: -10.750345230102539
    4. 'MAX' → logprob: -11.625345230102539
    5. '3' → logprob: -12.250345230102539
    6. '2' → logprob: -12.500345230102539
    7. '4' → logprob: -12.875345230102539
    8. '   ' → logprob: -13.812845230102539
    9. '5' → logprob: -14.062845230102539
    10. '  ' → logprob: -14.500345230102539

Token 380: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1628922075033188
    2. '<|end|>' → logprob: -2.0378921031951904
    3. ':' → logprob: -5.1628923416137695
    4. '#' → logprob: -5.2878923416137695
    5. '<|end|>' → logprob: -5.6628923416137695
    6. '_' → logprob: -6.2878923416137695
    7. '
' → logprob: -7.4128923416137695
    8. '```' → logprob: -7.5378923416137695
    9. 'de' → logprob: -8.03789234161377
    10. '\' → logprob: -8.16289234161377

Token 382: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7205497026443481
    2. 'main' → logprob: -0.7205497026443481
    3. 'solve' → logprob: -4.970549583435059
    4. 'tr' → logprob: -5.345549583435059
    5. ' solve' → logprob: -5.345549583435059
    6. 'run' → logprob: -6.345549583435059
    7. ' pend' → logprob: -6.595549583435059
    8. ' tr' → logprob: -6.845549583435059
    9. ' run' → logprob: -6.970549583435059
    10. 'def' → logprob: -7.345549583435059

Token 383: 'put' (ID: 772)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01452638115733862
    2. '()' → logprob: -4.7645263671875
    3. '():
' → logprob: -5.7645263671875
    4. '_line' → logprob: -6.3895263671875
    5. 'line' → logprob: -7.2645263671875
    6. '_input' → logprob: -8.7645263671875
    7. '_' → logprob: -9.3895263671875
    8. ' ():' → logprob: -9.8895263671875
    9. '()>' → logprob: -10.7645263671875
    10. 'def' → logprob: -11.5145263671875

Token 384: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003001239150762558
    2. '():
' → logprob: -6.2530012130737305
    3. '()' → logprob: -7.1280012130737305
    4. 'put' → logprob: -8.37800121307373
    5. ' ():' → logprob: -11.50300121307373
    6. 'out' → logprob: -11.62800121307373
    7. 'line' → logprob: -11.87800121307373
    8. 'ut' → logprob: -13.12800121307373
    9. 'ed' → logprob: -13.12800121307373
    10. 'def' → logprob: -13.25300121307373

Token 385: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06315163522958755
    2. ' global' → logprob: -3.3131515979766846
    3. ' n' → logprob: -3.8131515979766846
    4. 'global' → logprob: -6.563151836395264
    5. 'n' → logprob: -6.813151836395264
    6. ' pass' → logprob: -9.688151359558105
    7. '
' → logprob: -10.938151359558105
    8. 'import' → logprob: -11.063151359558105
    9. ' import' → logprob: -11.188151359558105
    10. '    ' → logprob: -11.188151359558105

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028868144378066063
    2. ' global' → logprob: -3.7788681983947754
    3. 'global' → logprob: -5.403868198394775
    4. ' n' → logprob: -7.153868198394775
    5. 'n' → logprob: -8.278867721557617
    6. '	global' → logprob: -9.903867721557617
    7. '   ' → logprob: -12.403867721557617
    8. ' ' → logprob: -13.028867721557617
    9. 'import' → logprob: -13.278867721557617
    10. '	n' → logprob: -13.528867721557617

Token 387: ' n' (ID: 297)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.1742856204509735
    2. '   ' → logprob: -2.549285650253296
    3. ' global' → logprob: -2.924285650253296
    4. 'n' (adapté à ' n') → logprob: -3.674285650253296
    5. ' n' → logprob: -7.299285411834717
    6. 's' → logprob: -7.799285411834717
    7. 'a' → logprob: -7.799285411834717
    8. 'l' → logprob: -8.424285888671875
    9. 'return' → logprob: -9.174285888671875
    10. 'g' → logprob: -9.174285888671875

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.702280580997467
    2. '=' → logprob: -0.827280580997467
    3. ',' → logprob: -3.2022805213928223
    4. '=int' → logprob: -3.7022805213928223
    5. ',p' → logprob: -7.452280521392822
    6. '   ' → logprob: -8.20228099822998
    7. ',n' → logprob: -8.45228099822998
    8. ',m' → logprob: -8.82728099822998
    9. '=sys' → logprob: -8.82728099822998
    10. '=input' → logprob: -8.95228099822998

Token 389: ' gin' (ID: 31450)
  Prédit: 'gin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gin' → logprob: -0.5163533687591553
    2. 'int' → logprob: -1.2663533687591553
    3. ' gin' → logprob: -2.5163533687591553
    4. 'lint' → logprob: -3.3913533687591553
    5. ' int' → logprob: -5.516353607177734
    6. ' lint' → logprob: -6.391353607177734
    7. ' ' → logprob: -8.391353607177734
    8. ' gint' → logprob: -8.641353607177734
    9. 'g' → logprob: -8.891353607177734
    10. '  ' → logprob: -9.391353607177734

Token 390: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000182921823579818
    2. '()
' → logprob: -8.62518310546875
    3. ' ()' → logprob: -13.00018310546875
    4. '())' → logprob: -14.62518310546875
    5. '()<' → logprob: -15.75018310546875
    6. '()
' → logprob: -16.12518310546875
    7. '()\' → logprob: -16.37518310546875
    8. '();' → logprob: -16.37518310546875
    9. '()

' → logprob: -16.62518310546875
    10. '()>' → logprob: -16.75018310546875

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021650169044733047
    2. 'm' → logprob: -4.271650314331055
    3. 'global' → logprob: -6.396650314331055
    4. 'n' → logprob: -7.271650314331055
    5. 'w' → logprob: -7.396650314331055
    6. 'l' → logprob: -7.396650314331055
    7. 'd' → logprob: -7.396650314331055
    8. ' global' → logprob: -7.646650314331055
    9. ' m' → logprob: -8.146650314331055
    10. 'a' → logprob: -8.396650314331055

Token 392: ' [' (ID: 723)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.854680061340332
    2. 'global' → logprob: -1.979680061340332
    3. 'edges' → logprob: -2.354680061340332
    4. '   ' → logprob: -2.979680061340332
    5. 'pend' → logprob: -3.229680061340332
    6. 'g' → logprob: -3.229680061340332
    7. 'graph' → logprob: -3.479680061340332
    8. 'p' → logprob: -3.604680061340332
    9. 'return' → logprob: -3.604680061340332
    10. 'adj' → logprob: -3.854680061340332

Token 393: 'gin' (ID: 11611)
  Prédit: 'lint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lint' → logprob: -0.9864055514335632
    2. '_' → logprob: -1.986405611038208
    3. 'dist' → logprob: -2.236405611038208
    4. 'pend' → logprob: -2.236405611038208
    5. 'p' → logprob: -3.111405611038208
    6. 'print' → logprob: -3.486405611038208
    7. 'sys' → logprob: -3.861405611038208
    8. 'int' → logprob: -4.111405372619629
    9. 'n' → logprob: -4.236405372619629
    10. 'l' → logprob: -4.236405372619629

Token 394: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.994086627149954e-05
    2. '()]' → logprob: -9.500080108642578
    3. ' ()' → logprob: -12.750080108642578
    4. '()
' → logprob: -13.500080108642578
    5. ']()' → logprob: -15.375080108642578
    6. 'for' → logprob: -15.500080108642578
    7. '();' → logprob: -16.375080108642578
    8. '(' → logprob: -16.625080108642578
    9. '()]
' → logprob: -16.750080108642578
    10. '()
' → logprob: -17.250080108642578

Token 395: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2985803186893463
    2. ' for' → logprob: -2.0485804080963135
    3. 'for' → logprob: -2.0485804080963135
    4. ']' → logprob: -8.798580169677734
    5. ')' → logprob: -9.923580169677734
    6. '()]' → logprob: -9.923580169677734
    7. '	for' → logprob: -10.798580169677734
    8. '(n' → logprob: -12.173580169677734
    9. ' ' → logprob: -12.298580169677734
    10. '   ' → logprob: -12.673580169677734

Token 396: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0006603728979825974
    2. ' _' → logprob: -7.375660419464111
    3. ' range' → logprob: -10.625659942626953
    4. 'range' → logprob: -12.375659942626953
    5. '_=' → logprob: -13.000659942626953
    6. '_i' → logprob: -13.500659942626953
    7. '__' → logprob: -14.375659942626953
    8. ' ' → logprob: -15.250659942626953
    9. '_range' → logprob: -15.375659942626953
    10. 'i' → logprob: -15.625659942626953

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.960827112197876
    2. 'range' → logprob: -0.960827112197876
    3. ' range' → logprob: -1.460827112197876
    4. 'in' → logprob: -5.960826873779297
    5. ' ' → logprob: -8.710826873779297
    6. '  ' → logprob: -10.710826873779297
    7. ']' → logprob: -11.710826873779297
    8. '(' → logprob: -12.085826873779297
    9. '[' → logprob: -12.335826873779297
    10. 'i' → logprob: -12.335826873779297

Token 398: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.052366528660058975
    2. ' range' → logprob: -3.1773664951324463
    3. '_' → logprob: -4.677366733551025
    4. '_range' → logprob: -12.427366256713867
    5. 'r' → logprob: -12.552366256713867
    6. '[' → logprob: -12.677366256713867
    7. 'rang' → logprob: -12.802366256713867
    8. '	range' → logprob: -13.552366256713867
    9. ' ' → logprob: -13.927366256713867
    10. ' _' → logprob: -14.427366256713867

Token 399: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020705638453364372
    2. '(' → logprob: -6.627070426940918
    3. 'n' → logprob: -7.377070426940918
    4. '
' → logprob: -10.002070426940918
    5. ' (' → logprob: -10.752070426940918
    6. '((' → logprob: -11.002070426940918
    7. '(
' → logprob: -11.627070426940918
    8. ' n' → logprob: -12.377070426940918
    9. ' ' → logprob: -12.752070426940918
    10. '(MAX' → logprob: -13.252070426940918

Token 400: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0046509611420333385
    2. ')' → logprob: -5.379651069641113
    3. ')]
' → logprob: -11.629651069641113
    4. ']' → logprob: -11.629651069641113
    5. '+' → logprob: -12.879651069641113
    6. ' )' → logprob: -12.879651069641113
    7. ')
' → logprob: -13.629651069641113
    8. '*' → logprob: -13.754651069641113
    9. '   ' → logprob: -13.754651069641113
    10. ')],' → logprob: -14.004651069641113

Token 401: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.123423270881176
    2. 'main' → logprob: -2.7484233379364014
    3. ' read' → logprob: -4.123423099517822
    4. ' pr' → logprob: -5.498423099517822
    5. ' lint' → logprob: -5.498423099517822
    6. ' sys' → logprob: -5.623423099517822
    7. ' def' → logprob: -5.623423099517822
    8. '_' → logprob: -5.873423099517822
    9. ' gin' → logprob: -6.685923099517822
    10. 'n' → logprob: -6.685923099517822

Token 403: 'verd' (ID: 37918)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.18958884477615356
    2. '()' → logprob: -2.314588785171509
    3. '():' → logprob: -3.939588785171509
    4. 'def' → logprob: -4.189589023590088
    5. 'lint' → logprob: -4.689589023590088
    6. 'int' → logprob: -4.939589023590088
    7. 'line' → logprob: -5.064589023590088
    8. 'array' → logprob: -6.314589023590088
    9. 'n' → logprob: -6.689589023590088
    10. '_put' → logprob: -6.814589023590088

Token 404: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06421760469675064
    2. '()' → logprob: -3.0642175674438477
    3. '():
' → logprob: -4.814217567443848
    4. 'it' → logprob: -6.189217567443848
    5. 'ict' → logprob: -6.314217567443848
    6. 'ef' → logprob: -7.189217567443848
    7. 'or' → logprob: -7.439217567443848
    8. 'ity' → logprob: -7.814217567443848
    9. 'def' → logprob: -7.939217567443848
    10. 'er' → logprob: -8.064217567443848

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06031974032521248
    2. ' n' → logprob: -3.435319662094116
    3. ' global' → logprob: -4.310319900512695
    4. 'n' → logprob: -4.685319900512695
    5. 'global' → logprob: -6.810319900512695
    6. ' return' → logprob: -6.935319900512695
    7. ' a' → logprob: -8.560319900512695
    8. ' m' → logprob: -8.810319900512695
    9. ' l' → logprob: -8.810319900512695
    10. 'def' → logprob: -9.060319900512695

Token 406: ' val' (ID: 1459)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9693565368652344
    2. ' global' → logprob: -1.3443565368652344
    3. '   ' → logprob: -1.8443565368652344
    4. 'n' → logprob: -2.0943565368652344
    5. 'global' → logprob: -3.2193565368652344
    6. ' return' → logprob: -4.469356536865234
    7. ' a' → logprob: -5.344356536865234
    8. 'a' → logprob: -5.594356536865234
    9. 'return' → logprob: -5.969356536865234
    10. ' pass' → logprob: -6.094356536865234

Token 407: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32396265864372253
    2. ' =' → logprob: -1.323962688446045
    3. 'ues' → logprob: -5.073962688446045
    4. 'ue' → logprob: -6.073962688446045
    5. 's' → logprob: -7.073962688446045
    6. '=int' → logprob: -8.323962211608887
    7. '   ' → logprob: -8.448962211608887
    8. 'uer' → logprob: -8.698962211608887
    9. 'def' → logprob: -9.073962211608887
    10. '()' → logprob: -9.323962211608887

Token 408: ' input' (ID: 3422)
  Prédit: 'lint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lint' → logprob: -0.9105994701385498
    2. ' lint' → logprob: -1.1605994701385498
    3. ' gin' → logprob: -2.03559947013855
    4. 'int' → logprob: -2.91059947013855
    5. 'gin' → logprob: -3.41059947013855
    6. ' list' → logprob: -4.035599708557129
    7. 'list' → logprob: -4.285599708557129
    8. ' int' → logprob: -4.535599708557129
    9. ' input' → logprob: -5.160599708557129
    10. 'input' → logprob: -5.285599708557129

Token 409: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6932241916656494
    2. '().' → logprob: -0.6932241916656494
    3. '()
' → logprob: -10.19322395324707
    4. '())' → logprob: -11.56822395324707
    5. '(' → logprob: -11.81822395324707
    6. ')' → logprob: -12.19322395324707
    7. '.strip' → logprob: -12.31822395324707
    8. ' ()' → logprob: -12.94322395324707
    9. '.readline' → logprob: -12.94322395324707
    10. '()

' → logprob: -13.81822395324707

Token 410: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.015062783844769001
    2. 'split' → logprob: -4.2650628089904785
    3. 'rstrip' → logprob: -7.0150628089904785
    4. ' strip' → logprob: -15.26506233215332
    5. 'rs' → logprob: -15.89006233215332
    6. 'replace' → logprob: -15.89006233215332
    7. 'startswith' → logprob: -16.26506233215332
    8. 'str' → logprob: -17.14006233215332
    9. 'decode' → logprob: -18.14006233215332
    10. 'isdigit' → logprob: -18.26506233215332

Token 411: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23680543899536133
    2. '()
' → logprob: -1.7368054389953613
    3. '().' → logprob: -3.3618054389953613
    4. '()
' → logprob: -10.111804962158203
    5. '();' → logprob: -10.861804962158203
    6. '()

' → logprob: -11.611804962158203
    7. '()\' → logprob: -11.736804962158203
    8. '()==' → logprob: -12.236804962158203
    9. '.split' → logprob: -12.736804962158203
    10. '(' → logprob: -12.861804962158203

Token 412: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004640642087906599
    2. 'def' → logprob: -6.129640579223633
    3. 'return' → logprob: -6.629640579223633
    4. '<|end|>' → logprob: -7.504640579223633
    5. '
' → logprob: -8.754640579223633
    6. ' return' → logprob: -9.004640579223633
    7. ',' → logprob: -9.379640579223633
    8. 'if' → logprob: -9.629640579223633
    9. ' if' → logprob: -10.504640579223633
    10. '	return' → logprob: -10.754640579223633

Token 413: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11570267379283905
    2. 'if' (adapté à ' if') → logprob: -2.8657026290893555
    3. '   ' → logprob: -3.4907026290893555
    4. ' return' → logprob: -4.1157026290893555
    5. 'try' → logprob: -6.1157026290893555
    6. ' if' → logprob: -7.3657026290893555
    7. 'global' → logprob: -7.3657026290893555
    8. 'def' → logprob: -7.8657026290893555
    9. 'print' → logprob: -8.240702629089355
    10. 'vals' → logprob: -8.365702629089355

Token 414: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.17338062822818756
    2. 'val' → logprob: -1.9233806133270264
    3. ' not' → logprob: -4.5483808517456055
    4. ' len' → logprob: -6.4233808517456055
    5. 'len' → logprob: -8.173380851745605
    6. 'not' → logprob: -8.423380851745605
    7. ' _' → logprob: -9.298380851745605
    8. ''' → logprob: -9.548380851745605
    9. '_' → logprob: -9.548380851745605
    10. ' ' → logprob: -10.298380851745605

Token 415: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5244269371032715
    2. '==' → logprob: -0.8994269371032715
    3. '.startswith' → logprob: -7.3994269371032715
    4. '=='' → logprob: -8.39942741394043
    5. ':' → logprob: -9.14942741394043
    6. ' !=' → logprob: -9.14942741394043
    7. ' in' → logprob: -10.02442741394043
    8. '!=' → logprob: -10.27442741394043
    9. ')' → logprob: -10.52442741394043
    10. '[' → logprob: -10.52442741394043

Token 416: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0403814315795898
    2. '"' → logprob: -1.1653814315795898
    3. '''' → logprob: -1.6653814315795898
    4. '""' → logprob: -2.54038143157959
    5. '"":' → logprob: -3.41538143157959
    6. ''d' → logprob: -5.16538143157959
    7. ''ex' → logprob: -5.54038143157959
    8. ' '' → logprob: -6.04038143157959
    9. ' "' → logprob: -6.16538143157959
    10. ''#' → logprob: -6.16538143157959

Token 417: 'OK' (ID: 5175)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.5212095379829407
    2. '-' → logprob: -2.271209478378296
    3. 'OK' → logprob: -2.771209478378296
    4. 'END' → logprob: -3.396209478378296
    5. ''' → logprob: -3.521209478378296
    6. 'DONE' → logprob: -3.896209478378296
    7. 'ok' → logprob: -4.021209716796875
    8. '':
' → logprob: -4.896209716796875
    9. 'NONE' → logprob: -5.021209716796875
    10. 'DEP' → logprob: -5.146209716796875

Token 418: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.020034559071063995
    2. '':
' → logprob: -4.0200347900390625
    3. ''' → logprob: -6.3950347900390625
    4. ':' → logprob: -9.270034790039062
    5. '':
' → logprob: -10.020034790039062
    6. '):' → logprob: -10.895034790039062
    7. '\n' → logprob: -11.145034790039062
    8. ''):' → logprob: -11.520034790039062
    9. '":' → logprob: -11.645034790039062
    10. ')':' → logprob: -12.645034790039062

Token 419: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059691186994314194
    2. ' not' → logprob: -3.1846911907196045
    3. 'n' → logprob: -4.934690952301025
    4. ' return' → logprob: -5.434690952301025
    5. '   ' → logprob: -5.934690952301025
    6. ' exit' → logprob: -7.184690952301025
    7. ' n' → logprob: -7.684690952301025
    8. 'not' → logprob: -7.684690952301025
    9. ' sys' → logprob: -8.184691429138184
    10. 'exit' → logprob: -9.684691429138184

Token 420: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4767598509788513
    2. '(' → logprob: -0.9767598509788513
    3. '()
' → logprob: -5.976759910583496
    4. '0' → logprob: -9.976759910583496
    5. '()\' → logprob: -9.976759910583496
    6. '()

' → logprob: -10.851759910583496
    7. '();' → logprob: -12.476759910583496
    8. 'def' → logprob: -12.476759910583496
    9. '()`' → logprob: -12.726759910583496
    10. '(True' → logprob: -12.851759910583496

Token 421: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' read' (ID: 1729)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: 'put' (ID: 772)
  Prédit: 'put'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.000104616025055293
    2. 'out' → logprob: -10.750104904174805
    3. 'val' → logprob: -10.750104904174805
    4. '()' → logprob: -11.750104904174805
    5. 'def' → logprob: -11.875104904174805
    6. 'input' → logprob: -11.875104904174805
    7. '_put' → logprob: -12.375104904174805
    8. 'pot' → logprob: -12.625104904174805
    9. 'verd' → logprob: -12.625104904174805
    10. 'puts' → logprob: -13.250104904174805

Token 424: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4974866644479334e-05
    2. '()
' → logprob: -11.250015258789062
    3. '()

' → logprob: -14.500015258789062
    4. '();' → logprob: -15.000015258789062
    5. '()`' → logprob: -15.750015258789062
    6. '(' → logprob: -15.750015258789062
    7. ' ()' → logprob: -16.000015258789062
    8. '()<' → logprob: -16.000015258789062
    9. '()]' → logprob: -16.125015258789062
    10. '()\' → logprob: -16.250015258789062

Token 425: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19913510978221893
    2. 'last' → logprob: -2.1991350650787354
    3. '#' → logprob: -3.4491350650787354
    4. '<|end|>' → logprob: -4.3241353034973145
    5. 'n' → logprob: -4.5741353034973145
    6. 'if' → logprob: -5.1991353034973145
    7. '<|end|>' → logprob: -6.0741353034973145
    8. 'read' → logprob: -6.5741353034973145
    9. 'dist' → logprob: -7.3241353034973145
    10. 'max' → logprob: -7.9491353034973145

Token 426: ' set' (ID: 920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6648091673851013
    2. ' main' → logprob: -1.664809226989746
    3. 'main' → logprob: -2.164809226989746
    4. ' def' → logprob: -2.289809226989746
    5. ' gin' → logprob: -4.539809226989746
    6. ' sys' → logprob: -4.664809226989746
    7. ' lint' → logprob: -4.914809226989746
    8. 'gin' → logprob: -4.914809226989746
    9. ' read' → logprob: -5.039809226989746
    10. '__' → logprob: -5.289809226989746

Token 427: 'work' (ID: 1596)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44504135847091675
    2. '_' → logprob: -2.0700414180755615
    3. 'attr' → logprob: -2.5700414180755615
    4. '(_' → logprob: -3.1950414180755615
    5. '_(' → logprob: -3.5700414180755615
    6. '_work' → logprob: -3.6950414180755615
    7. '_last' → logprob: -4.070041179656982
    8. 'last' → logprob: -5.195041179656982
    9. '(last' → logprob: -5.320041179656982
    10. 'default' → logprob: -5.320041179656982

Token 428: '_w' (ID: 3567)
  Prédit: '(work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.009398207068443298
    2. '(' → logprob: -5.384397983551025
    3. '(lst' → logprob: -6.509397983551025
    4. '():' → logprob: -7.509397983551025
    5. '(a' → logprob: -7.509397983551025
    6. '(s' → logprob: -7.759397983551025
    7. '(w' → logprob: -8.134398460388184
    8. '(x' → logprob: -8.634398460388184
    9. '(l' → logprob: -8.634398460388184
    10. '(args' → logprob: -8.759398460388184

Token 429: 'right' (ID: 2460)
  Prédit: 'ork'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ork' → logprob: -0.016062874346971512
    2. 'orks' → logprob: -5.5160627365112305
    3. 'ord' → logprob: -6.0160627365112305
    4. 'ith' → logprob: -6.2660627365112305
    5. 'rk' → logprob: -6.6410627365112305
    6. 'ords' → logprob: -6.8910627365112305
    7. 'or' → logprob: -7.1410627365112305
    8. 'o' → logprob: -7.1410627365112305
    9. 'here' → logprob: -7.7660627365112305
    10. 'work' → logprob: -8.01606273651123

Token 430: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.47686508297920227
    2. '(work' → logprob: -1.3518650531768799
    3. '(w' → logprob: -3.10186505317688
    4. '(' → logprob: -3.85186505317688
    5. '(s' → logprob: -4.976865291595459
    6. '():
' → logprob: -5.101865291595459
    7. '(k' → logprob: -5.476865291595459
    8. '(word' → logprob: -5.476865291595459
    9. '(line' → logprob: -5.726865291595459
    10. '(n' → logprob: -5.851865291595459

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7661176323890686
    2. ' global' → logprob: -0.8911176323890686
    3. 'global' → logprob: -2.391117572784424
    4. ' if' → logprob: -5.141117572784424
    5. ' for' → logprob: -5.266117572784424
    6. ' work' → logprob: -5.766117572784424
    7. 'if' → logprob: -5.766117572784424
    8. 'for' → logprob: -5.891117572784424
    9. ' pass' → logprob: -6.266117572784424
    10. 'work' → logprob: -6.641117572784424

Token 432: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.7434476017951965
    2. 'work' → logprob: -0.8684476017951965
    3. 'if' → logprob: -3.6184475421905518
    4. ' global' → logprob: -3.8684475421905518
    5. '   ' → logprob: -3.8684475421905518
    6. 'for' → logprob: -5.243447780609131
    7. ' work' → logprob: -5.368447780609131
    8. 'pass' → logprob: -5.493447780609131
    9. 'def' → logprob: -5.993447780609131
    10. 'last' → logprob: -5.993447780609131

Token 433: ' pend' (ID: 27278)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.08149207383394241
    2. 'last' → logprob: -2.8314921855926514
    3. ' work' → logprob: -4.081491947174072
    4. ' last' → logprob: -6.456491947174072
    5. '_work' → logprob: -8.20649242401123
    6. 'dist' → logprob: -8.58149242401123
    7. '_last' → logprob: -8.83149242401123
    8. 'n' → logprob: -9.33149242401123
    9. 'pend' → logprob: -9.70649242401123
    10. '_' → logprob: -10.45649242401123

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.682815432548523
    2. ' =' → logprob: -0.932815432548523
    3. '=' → logprob: -2.4328155517578125
    4. '
' → logprob: -5.1828155517578125
    5. '   ' → logprob: -5.3078155517578125
    6. '=[]
' → logprob: -7.3078155517578125
    7. ' ,' → logprob: -7.4328155517578125
    8. '=[]' → logprob: -7.5578155517578125
    9. ',p' → logprob: -7.9328155517578125
    10. ',
' → logprob: -8.182815551757812

Token 435: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.17304590344429016
    2. ' work' → logprob: -1.9230458736419678
    3. 'last' → logprob: -4.673046112060547
    4. ' last' → logprob: -6.048046112060547
    5. 'dist' → logprob: -8.173046112060547
    6. ' dist' → logprob: -9.048046112060547
    7. '_work' → logprob: -9.423046112060547
    8. '	work' → logprob: -9.423046112060547
    9. ' pend' → logprob: -9.423046112060547
    10. 'n' → logprob: -9.923046112060547

Token 436: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.651455283164978
    2. '=' → logprob: -1.276455283164978
    3. ',' → logprob: -1.776455283164978
    4. '   ' → logprob: -4.026455402374268
    5. '=[]' → logprob: -4.901455402374268
    6. '=[]
' → logprob: -6.276455402374268
    7. '
' → logprob: -6.776455402374268
    8. 'def' → logprob: -8.27645492553711
    9. '<|end|>' → logprob: -8.40145492553711
    10. '    
' → logprob: -8.40145492553711

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025022942572832108
    2. '
' → logprob: -6.50250244140625
    3. '    
' → logprob: -7.87750244140625
    4. 'def' → logprob: -8.37750244140625
    5. ' =' → logprob: -9.12750244140625
    6. '<|end|>' → logprob: -9.37750244140625
    7. 'pend' → logprob: -9.75250244140625
    8. ',' → logprob: -10.00250244140625
    9. ' pend' → logprob: -10.75250244140625
    10. '  ' → logprob: -11.50250244140625

Token 438: ' vis' (ID: 1909)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38557398319244385
    2. 'if' → logprob: -2.0105738639831543
    3. 'work' → logprob: -2.2605738639831543
    4. 'pend' → logprob: -3.0105738639831543
    5. 'for' → logprob: -4.760573863983154
    6. 'while' → logprob: -5.135573863983154
    7. ' if' → logprob: -5.135573863983154
    8. ' pend' → logprob: -5.635573863983154
    9. ' work' → logprob: -6.510573863983154
    10. 'tmp' → logprob: -7.385573863983154

Token 439: ' =' (ID: 314)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.03815613314509392
    2. ' =' → logprob: -3.413156032562256
    3. '=' → logprob: -5.788156032562256
    4. 'it' → logprob: -6.913156032562256
    5. '=[' → logprob: -9.288156509399414
    6. '   ' → logprob: -9.663156509399414
    7. '=[]
' → logprob: -9.788156509399414
    8. 'ed' → logprob: -9.913156509399414
    9. 'iting' → logprob: -10.538156509399414
    10. '=[]' → logprob: -10.538156509399414

Token 440: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31851983070373535
    2. '{' → logprob: -2.0685198307037354
    3. '[MAX' → logprob: -2.8185198307037354
    4. 'set' → logprob: -3.1935198307037354
    5. '{}' → logprob: -3.1935198307037354
    6. '{}
' → logprob: -6.693519592285156
    7. '[-' → logprob: -7.068519592285156
    8. '[]' → logprob: -7.443519592285156
    9. 'MAX' → logprob: -7.943519592285156
    10. '[max' → logprob: -8.068519592285156

Token 441: '(j' (ID: 4997)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.27629607915878296
    2. '()' → logprob: -1.6512961387634277
    3. '(p' → logprob: -3.0262961387634277
    4. '([' → logprob: -7.526296138763428
    5. 'pend' → logprob: -8.52629566192627
    6. '()

' → logprob: -9.02629566192627
    7. '(' → logprob: -9.02629566192627
    8. '([])
' → logprob: -10.77629566192627
    9. '(range' → logprob: -10.90129566192627
    10. '=' → logprob: -11.02629566192627

Token 442: ' for' (ID: 395)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10438024252653122
    2. '()' → logprob: -2.7293801307678223
    3. '())' → logprob: -4.604380130767822
    4. 'pend' → logprob: -5.104380130767822
    5. ')' → logprob: -5.229380130767822
    6. '()
' → logprob: -5.604380130767822
    7. '())
' → logprob: -6.229380130767822
    8. ' for' → logprob: -7.104380130767822
    9. 'range' → logprob: -7.354380130767822
    10. '(range' → logprob: -7.354380130767822

Token 443: ' _,' (ID: 18042)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.531592607498169
    2. 'j' → logprob: -0.906592607498169
    3. ' pend' → logprob: -5.40659236907959
    4. 'pend' → logprob: -5.90659236907959
    5. '	j' → logprob: -8.53159236907959
    6. 'x' → logprob: -8.78159236907959
    7. 'p' → logprob: -8.90659236907959
    8. ' x' → logprob: -9.34409236907959
    9. ' ' → logprob: -9.40659236907959
    10. ' p' → logprob: -9.96909236907959

Token 444: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01870795525610447
    2. ' j' → logprob: -4.018707752227783
    3. '_' → logprob: -7.893707752227783
    4. '_j' → logprob: -9.143708229064941
    5. 'i' → logprob: -10.518708229064941
    6. '___' → logprob: -12.268708229064941
    7. 'v' → logprob: -12.393708229064941
    8. ' _' → logprob: -12.518708229064941
    9. 'p' → logprob: -12.643708229064941
    10. '__' → logprob: -12.768708229064941

Token 445: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3875929117202759
    2. ' in' → logprob: -1.1375929117202759
    3. ')' → logprob: -7.387592792510986
    4. '<|end|>' → logprob: -10.262593269348145
    5. '),' → logprob: -11.137593269348145
    6. ' ' → logprob: -11.387593269348145
    7. '
' → logprob: -12.262593269348145
    8. 'import' → logprob: -12.262593269348145
    9. ',' → logprob: -12.387593269348145
    10. '   ' → logprob: -12.512593269348145

Token 446: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.015280231833457947
    2. ' pend' → logprob: -4.265280246734619
    3. '_' → logprob: -8.265279769897461
    4. 'work' → logprob: -8.640279769897461
    5. 'pending' → logprob: -8.765279769897461
    6. 'enumer' → logprob: -8.765279769897461
    7. 'pen' → logprob: -9.390279769897461
    8. '
' → logprob: -10.140279769897461
    9. ' work' → logprob: -10.515279769897461
    10. 'range' → logprob: -10.640279769897461

Token 447: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3073568344116211
    2. ')' → logprob: -1.682356834411621
    3. 'if' → logprob: -2.557356834411621
    4. '   ' → logprob: -7.557356834411621
    5. ')
' → logprob: -7.807356834411621
    6. ' )' → logprob: -8.932356834411621
    7. '())' → logprob: -10.557356834411621
    8. '()' → logprob: -10.682356834411621
    9. '    ' → logprob: -11.057356834411621
    10. '  ' → logprob: -11.432356834411621

Token 448: ' |' (ID: 1022)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.159708172082901
    2. '
' → logprob: -2.159708261489868
    3. '<|end|>' → logprob: -3.784708261489868
    4. '    
' → logprob: -4.909708023071289
    5. 'def' → logprob: -8.034708023071289
    6. ',' → logprob: -8.159708023071289
    7. '
' → logprob: -8.284708023071289
    8. ' 
' → logprob: -8.784708023071289
    9. '   
' → logprob: -9.034708023071289
    10. '  ' → logprob: -9.034708023071289

Token 449: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06388350576162338
    2. ' set' → logprob: -3.3138835430145264
    3. '{' → logprob: -4.063883304595947
    4. '   ' → logprob: -4.938883304595947
    5. ' {' → logprob: -7.938883304595947
    6. '{i' → logprob: -8.438883781433105
    7. '{s' → logprob: -9.313883781433105
    8. '  ' → logprob: -9.438883781433105
    9. ' ' → logprob: -9.813883781433105
    10. '       ' → logprob: -9.938883781433105

Token 450: '(work' (ID: 61786)
  Prédit: '(work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(work' → logprob: -0.590414822101593
    2. '(k' → logprob: -1.7154147624969482
    3. '(i' → logprob: -1.8404147624969482
    4. '(j' → logprob: -2.5904147624969482
    5. '(w' → logprob: -3.7154147624969482
    6. '(x' → logprob: -5.090415000915527
    7. '([' → logprob: -8.090415000915527
    8. '(range' → logprob: -8.465415000915527
    9. '(p' → logprob: -8.590415000915527
    10. '((' → logprob: -8.715415000915527

Token 451: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05841095745563507
    2. ')
' → logprob: -3.058410882949829
    3. '())' → logprob: -5.183411121368408
    4. ' )' → logprob: -6.058411121368408
    5. '())
' → logprob: -7.558411121368408
    6. '()' → logprob: -7.808411121368408
    7. '   ' → logprob: -7.808411121368408
    8. ' )
' → logprob: -8.18341064453125
    9. '<|end|>' → logprob: -9.80841064453125
    10. ' ' → logprob: -10.43341064453125

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.610237181186676
    2. '
' → logprob: -0.860237181186676
    3. '    
' → logprob: -3.6102371215820312
    4. '<|end|>' → logprob: -5.985237121582031
    5. ' 
' → logprob: -6.610237121582031
    6. '  
' → logprob: -6.985237121582031
    7. '   
' → logprob: -7.485237121582031
    8. '' → logprob: -8.735237121582031
    9. '
' → logprob: -8.860237121582031
    10. '	
' → logprob: -9.110237121582031

Token 453: ' vv' (ID: 107521)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8071562647819519
    2. ' pend' → logprob: -1.3071563243865967
    3. 'work' → logprob: -3.1821563243865967
    4. ' work' → logprob: -3.5571563243865967
    5. 'for' → logprob: -3.6821563243865967
    6. ' for' → logprob: -3.8071563243865967
    7. 'pend' → logprob: -4.057156085968018
    8. 'all' → logprob: -4.432156085968018
    9. ' nxt' → logprob: -4.432156085968018
    10. ' global' → logprob: -4.682156085968018

Token 454: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6166380047798157
    2. '=' → logprob: -0.8666380047798157
    3. 'is' → logprob: -3.741637945175171
    4. 'isit' → logprob: -5.24163818359375
    5. 'alid' → logprob: -5.24163818359375
    6. '=set' → logprob: -6.11663818359375
    7. 'al' → logprob: -6.99163818359375
    8. 'isible' → logprob: -7.99163818359375
    9. 'v' → logprob: -8.11663818359375
    10. '=[]
' → logprob: -8.11663818359375

Token 455: ' len' (ID: 4631)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3779810667037964
    2. '[]
' → logprob: -2.002981185913086
    3. '[' → logprob: -2.127981185913086
    4. '{' → logprob: -2.502981185913086
    5. '[min' → logprob: -2.502981185913086
    6. '[(' → logprob: -2.627981185913086
    7. 'set' → logprob: -3.377981185913086
    8. 'sorted' → logprob: -3.502981185913086
    9. '{}' → logprob: -3.877981185913086
    10. '[len' → logprob: -4.002981185913086

Token 456: '(vis' (ID: 183220)
  Prédit: '(vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.22857093811035156
    2. '(work' → logprob: -1.8535709381103516
    3. '(p' → logprob: -3.1035709381103516
    4. '(v' → logprob: -6.603570938110352
    5. '(' → logprob: -6.728570938110352
    6. '(set' → logprob: -10.103570938110352
    7. '(w' → logprob: -10.478570938110352
    8. '(n' → logprob: -11.228570938110352
    9. '([' → logprob: -11.228570938110352
    10. '(_' → logprob: -11.228570938110352

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10625398904085159
    2. ')
' → logprob: -2.8562541007995605
    3. ')+' → logprob: -3.3562541007995605
    4. '+' → logprob: -5.3562541007995605
    5. ' +' → logprob: -6.4812541007995605
    6. '   ' → logprob: -7.3562541007995605
    7. ' )' → logprob: -7.7312541007995605
    8. '()' → logprob: -7.9812541007995605
    9. '())' → logprob: -8.481253623962402
    10. '()+' → logprob: -9.106253623962402

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003152288496494293
    2. '    
' → logprob: -7.503152370452881
    3. '<|end|>' → logprob: -7.503152370452881
    4. 'if' → logprob: -7.878152370452881
    5. ' if' → logprob: -8.128151893615723
    6. '
' → logprob: -8.253151893615723
    7. 'v' → logprob: -8.253151893615723
    8. 'for' → logprob: -8.628151893615723
    9. ' for' → logprob: -8.753151893615723
    10. 'def' → logprob: -9.003151893615723

Token 459: ' pend' (ID: 27278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1259355545043945
    2. ' if' → logprob: -1.5009355545043945
    3. 'if' → logprob: -1.5009355545043945
    4. ' for' → logprob: -3.3759355545043945
    5. 'for' → logprob: -3.3759355545043945
    6. ' while' → logprob: -4.0009355545043945
    7. 'work' → logprob: -4.1259355545043945
    8. 'while' → logprob: -4.2509355545043945
    9. ' pend' → logprob: -5.0009355545043945
    10. ' work' → logprob: -5.0009355545043945

Token 460: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3021128475666046
    2. ' =' → logprob: -2.0521128177642822
    3. '.sort' → logprob: -2.0521128177642822
    4. ',' → logprob: -6.052113056182861
    5. '.pop' → logprob: -8.302112579345703
    6. '[:]' → logprob: -8.677112579345703
    7. '+=' → logprob: -8.802112579345703
    8. 'sort' → logprob: -8.927112579345703
    9. ' +=' → logprob: -9.177112579345703
    10. '   ' → logprob: -9.427112579345703

Token 461: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9175446033477783
    2. 'sorted' → logprob: -1.1675446033477783
    3. '[' → logprob: -2.0425446033477783
    4. '[]' → logprob: -2.4175446033477783
    5. '[j' → logprob: -3.5425446033477783
    6. '[i' → logprob: -4.167544364929199
    7. '[p' → logprob: -4.667544364929199
    8. 'list' → logprob: -5.167544364929199
    9. '[]
' → logprob: -5.792544364929199
    10. '[((' → logprob: -6.917544364929199

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3440229594707489
    2. '<|end|>' → logprob: -1.3440229892730713
    3. ' for' → logprob: -3.7190229892730713
    4. 'for' → logprob: -5.844022750854492
    5. '<|end|>' → logprob: -7.344022750854492
    6. '
' → logprob: -7.594022750854492
    7. '    
' → logprob: -7.719022750854492
    8. 'def' → logprob: -7.719022750854492
    9. '[' → logprob: -8.094022750854492
    10. '[]' → logprob: -8.594022750854492

Token 463: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013502653688192368
    2. ' for' → logprob: -5.388502597808838
    3. '   ' → logprob: -5.638502597808838
    4. 'work' → logprob: -5.888502597808838
    5. 'while' → logprob: -7.513502597808838
    6. 'idx' → logprob: -7.638502597808838
    7. 'if' (adapté à ' if') → logprob: -8.513503074645996
    8. 'w' → logprob: -8.888503074645996
    9. 'wrk' → logprob: -9.138503074645996
    10. 'i' → logprob: -9.263503074645996

Token 464: ' vv' (ID: 107521)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.38798514008522034
    2. ' vv' → logprob: -1.387985110282898
    3. 'len' → logprob: -3.8879852294921875
    4. 'work' → logprob: -4.1379852294921875
    5. 'not' → logprob: -4.5129852294921875
    6. ' not' → logprob: -5.5129852294921875
    7. '_v' → logprob: -5.6379852294921875
    8. '_' → logprob: -5.6379852294921875
    9. ' work' → logprob: -6.1379852294921875
    10. 'False' → logprob: -6.5129852294921875

Token 465: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.188964605331421
    2. ' <' → logprob: -1.313964605331421
    3. ' ==' → logprob: -1.813964605331421
    4. '<' → logprob: -2.438964605331421
    5. ' >' → logprob: -2.688964605331421
    6. '>' → logprob: -2.688964605331421
    7. ' >=' → logprob: -4.43896484375
    8. ' <=' → logprob: -4.81396484375
    9. '>=' → logprob: -4.93896484375
    10. '<=' → logprob: -5.31396484375

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2734876871109009
    2. '1' → logprob: -2.3984875679016113
    3. ' ' → logprob: -2.5234875679016113
    4. 'MAX' → logprob: -3.2734875679016113
    5. 'len' → logprob: -3.8984875679016113
    6. ' MAX' → logprob: -5.773487567901611
    7. ' len' → logprob: -6.398487567901611
    8. 'n' → logprob: -6.398487567901611
    9. ' n' → logprob: -7.148487567901611
    10. '2' → logprob: -7.148487567901611

Token 467: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6218745708465576
    2. '1' → logprob: -1.1218745708465576
    3. 'len' → logprob: -2.7468745708465576
    4. 'MAX' → logprob: -3.2468745708465576
    5. 'n' → logprob: -3.6218745708465576
    6. '2' → logprob: -5.371874809265137
    7. 'max' → logprob: -7.871874809265137
    8. ' ' → logprob: -7.871874809265137
    9. '3' → logprob: -7.871874809265137
    10. '4' → logprob: -8.746874809265137

Token 468: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8287897706031799
    2. ':' → logprob: -1.0787897109985352
    3. ' and' → logprob: -1.5787897109985352
    4. '   ' → logprob: -4.703789710998535
    5. ' or' → logprob: -5.328789710998535
    6. 'and' → logprob: -6.328789710998535
    7. ':return' → logprob: -7.078789710998535
    8. '       ' → logprob: -7.703789710998535
    9. ' :' → logprob: -9.703789710998535
    10. ' :
' → logprob: -10.203789710998535

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006175859831273556
    2. ' and' → logprob: -5.881175994873047
    3. ':' → logprob: -6.631175994873047
    4. '   ' → logprob: -6.631175994873047
    5. ':
' → logprob: -8.131175994873047
    6. ' or' → logprob: -8.756175994873047
    7. ',' → logprob: -9.506175994873047
    8. ' return' → logprob: -10.006175994873047
    9. '           ' → logprob: -10.756175994873047
    10. '	   ' → logprob: -11.068675994873047

Token 470: ' work' (ID: 1101)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1057085394859314
    2. ' work' → logprob: -3.230708599090576
    3. ' return' → logprob: -3.605708599090576
    4. '   ' → logprob: -4.355708599090576
    5. 'return' → logprob: -4.730708599090576
    6. ' if' → logprob: -5.605708599090576
    7. 'work' (adapté à ' work') → logprob: -6.480708599090576
    8. ' for' → logprob: -6.605708599090576
    9. ' pass' → logprob: -6.730708599090576
    10. 'if' → logprob: -7.355708599090576

Token 471: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.052641283720731735
    2. ' =' → logprob: -3.1776413917541504
    3. '+=' → logprob: -5.67764139175415
    4. '[:]' → logprob: -5.92764139175415
    5. '=[]' → logprob: -6.05264139175415
    6. '.append' → logprob: -7.92764139175415
    7. '.extend' → logprob: -8.177640914916992
    8. '.clear' → logprob: -8.552640914916992
    9. ' +=' → logprob: -8.927640914916992
    10. '*=' → logprob: -9.552640914916992

Token 472: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.20997881889343262
    2. '[' → logprob: -2.2099788188934326
    3. 'list' → logprob: -3.2099788188934326
    4. '[list' → logprob: -4.084979057312012
    5. '[]
' → logprob: -4.834979057312012
    6. 'work' → logprob: -5.084979057312012
    7. '[v' → logprob: -5.834979057312012
    8. '[p' → logprob: -6.584979057312012
    9. '[]}' → logprob: -7.084979057312012
    10. '[next' → logprob: -7.834979057312012

Token 473: '(vis' (ID: 183220)
  Prédit: '(vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.0023573332000523806
    2. '(range' → logprob: -6.752357482910156
    3. '(set' → logprob: -8.002357482910156
    4. '()' → logprob: -8.502357482910156
    5. '(v' → logprob: -8.627357482910156
    6. '(' → logprob: -9.252357482910156
    7. '(work' → logprob: -9.377357482910156
    8. '(map' → logprob: -9.627357482910156
    9. 'vis' → logprob: -10.002357482910156
    10. '({' → logprob: -10.002357482910156

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002119926968589425
    2. ')
' → logprob: -6.377120018005371
    3. ')[' → logprob: -8.127120018005371
    4. '())' → logprob: -9.252120018005371
    5. '   ' → logprob: -11.627120018005371
    6. ' )' → logprob: -12.502120018005371
    7. '[' → logprob: -12.627120018005371
    8. ')
' → logprob: -13.127120018005371
    9. ')+' → logprob: -13.127120018005371
    10. '       ' → logprob: -13.627120018005371

Token 475: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0477580726146698
    2. '<|end|>' → logprob: -3.297758102416992
    3. 'else' → logprob: -5.172758102416992
    4. ' else' → logprob: -5.922758102416992
    5. '       ' → logprob: -7.797758102416992
    6. 'elif' → logprob: -7.922758102416992
    7. '<|end|>' → logprob: -8.422758102416992
    8. '	else' → logprob: -9.297758102416992
    9. '    
' → logprob: -9.922758102416992
    10. ' elif' → logprob: -10.172758102416992

Token 476: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30049121379852295
    2. '   ' → logprob: -1.425491213798523
    3. ' return' → logprob: -4.4254913330078125
    4. 'return' (adapté à ' return') → logprob: -5.8004913330078125
    5. ' else' → logprob: -5.8004913330078125
    6. 'else' → logprob: -7.5504913330078125
    7. '<|end|>' → logprob: -9.425491333007812
    8. '  ' → logprob: -9.550491333007812
    9. '    ' → logprob: -9.800491333007812
    10. ' ' → logprob: -9.925491333007812

Token 477: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.397935688495636
    2. '   ' → logprob: -1.3979356288909912
    3. '    
' → logprob: -3.397935628890991
    4. '<|end|>' → logprob: -3.397935628890991
    5. 'if' → logprob: -5.39793586730957
    6. '  
' → logprob: -6.39793586730957
    7. ' if' → logprob: -6.39793586730957
    8. ' 
' → logprob: -7.14793586730957
    9. '        
' → logprob: -7.27293586730957
    10. 'def' → logprob: -7.27293586730957

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001872593886218965
    2. '    
' → logprob: -6.876872539520264
    3. 'if' → logprob: -8.251873016357422
    4. 'for' → logprob: -9.001873016357422
    5. '
' → logprob: -9.251873016357422
    6. ' for' → logprob: -9.876873016357422
    7. '        
' → logprob: -10.001873016357422
    8. ' if' → logprob: -10.126873016357422
    9. '       ' → logprob: -10.501873016357422
    10. '#' → logprob: -10.626873016357422

Token 479: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28483474254608154
    2. 'for' → logprob: -4.034834861755371
    3. 'g' → logprob: -4.597334861755371
    4. 'q' → logprob: -4.722334861755371
    5. ' for' → logprob: -4.784834861755371
    6. ' uf' → logprob: -4.784834861755371
    7. 'from' → logprob: -4.847334861755371
    8. '#' → logprob: -4.972334861755371
    9. 'import' → logprob: -5.222334861755371
    10. 'dist' → logprob: -5.284834861755371

Token 480: ',f' (ID: 38733)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.21725498139858246
    2. 'd' → logprob: -2.717254877090454
    3. 'dge' → logprob: -3.217254877090454
    4. 'lst' → logprob: -4.092255115509033
    5. 'lif' → logprob: -4.717255115509033
    6. 'dg' → logprob: -5.217255115509033
    7. 'ls' → logprob: -5.217255115509033
    8. 'l' → logprob: -5.342255115509033
    9. '   ' → logprob: -5.467255115509033
    10. 'x' → logprob: -5.717255115509033

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23361723124980927
    2. '=' → logprob: -1.6086171865463257
    3. 'or' → logprob: -5.733617305755615
    4. ',' → logprob: -6.483617305755615
    5. 'lse' → logprob: -6.483617305755615
    6. '   ' → logprob: -6.983617305755615
    7. 'ach' → logprob: -8.983616828918457
    8. 'f' → logprob: -9.358616828918457
    9. 'for' → logprob: -9.608616828918457
    10. ' ' → logprob: -9.983616828918457

Token 482: ' dict' (ID: 11878)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7776778340339661
    2. ' ' → logprob: -2.6526777744293213
    3. 'None' → logprob: -2.7776777744293213
    4. ' None' → logprob: -2.9026777744293213
    5. '-' → logprob: -3.2776777744293213
    6. 'sorted' → logprob: -3.4026777744293213
    7. 'list' → logprob: -3.6526777744293213
    8. '[],' → logprob: -3.9026777744293213
    9. 'sys' → logprob: -4.1526780128479
    10. 'min' → logprob: -4.4026780128479

Token 483: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.028747333213686943
    2. '()' → logprob: -3.903747320175171
    3. '()
' → logprob: -5.02874755859375
    4. '(),
' → logprob: -7.40374755859375
    5. ',' → logprob: -8.02874755859375
    6. 'from' → logprob: -9.27874755859375
    7. '([(' → logprob: -9.27874755859375
    8. '()

' → logprob: -9.40374755859375
    9. '=' → logprob: -9.90374755859375
    10. '();' → logprob: -10.02874755859375

Token 484: 'dict' (ID: 20993)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.057795025408267975
    2. '[]' → logprob: -3.3077950477600098
    3. 'dict' → logprob: -4.43279504776001
    4. '{' → logprob: -5.80779504776001
    5. '{}
' → logprob: -6.18279504776001
    6. ' {}' → logprob: -7.43279504776001
    7. 'default' → logprob: -7.55779504776001
    8. 'set' → logprob: -7.93279504776001
    9. ' []' → logprob: -8.307794570922852
    10. ' dict' → logprob: -8.932794570922852

Token 485: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.35042768716812134
    2. '()' → logprob: -1.2254276275634766
    3. '(),' → logprob: -6.850427627563477
    4. '<|end|>' → logprob: -8.475427627563477
    5. '   ' → logprob: -8.725427627563477
    6. '();' → logprob: -8.850427627563477
    7. '()

' → logprob: -9.225427627563477
    8. '<|end|>' → logprob: -9.725427627563477
    9. '()
' → logprob: -9.850427627563477
    10. '
' → logprob: -10.225427627563477

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000854062382131815
    2. 'for' → logprob: -7.375854015350342
    3. ' for' → logprob: -8.7508544921875
    4. '<|end|>' → logprob: -10.5008544921875
    5. 'def' → logprob: -11.5008544921875
    6. '    
' → logprob: -12.0008544921875
    7. 'edges' → logprob: -12.5008544921875
    8. 'n' → logprob: -12.5008544921875
    9. '	for' → logprob: -13.0008544921875
    10. 'e' → logprob: -13.1258544921875

Token 487: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3489745259284973
    2. 'for' (adapté à ' for') → logprob: -1.4739744663238525
    3. ' for' → logprob: -2.9739744663238525
    4. 'q' → logprob: -6.598974704742432
    5. 'g' → logprob: -6.848974704742432
    6. 'v' → logprob: -6.973974704742432
    7. 'dp' → logprob: -7.598974704742432
    8. 'd' → logprob: -7.723974704742432
    9. 'cnt' → logprob: -7.848974704742432
    10. 'c' → logprob: -7.973974704742432

Token 488: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32143452763557434
    2. 'x' → logprob: -2.571434497833252
    3. 'u' → logprob: -3.321434497833252
    4. '_,' → logprob: -3.446434497833252
    5. ' i' → logprob: -3.821434497833252
    6. 'j' → logprob: -3.821434497833252
    7. 'a' → logprob: -4.071434497833252
    8. 'v' → logprob: -4.321434497833252
    9. '_' → logprob: -4.571434497833252
    10. '(i' → logprob: -4.946434497833252

Token 489: ' in' (ID: 306)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.9422499537467957
    2. ',' → logprob: -1.3172500133514404
    3. ',_' → logprob: -2.3172500133514404
    4. ',v' → logprob: -2.4422500133514404
    5. ',i' → logprob: -3.0672500133514404
    6. ',f' → logprob: -3.3172500133514404
    7. ',(' → logprob: -3.5672500133514404
    8. ',j' → logprob: -4.567249774932861
    9. ',e' → logprob: -4.817249774932861
    10. ' in' → logprob: -4.817249774932861

Token 490: ' vis' (ID: 1909)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pend' → logprob: -1.0730791091918945
    2. 'range' → logprob: -1.0730791091918945
    3. 'vis' → logprob: -1.4480791091918945
    4. 'work' → logprob: -2.6980791091918945
    5. '(vis' → logprob: -5.8230791091918945
    6. ' range' → logprob: -6.0730791091918945
    7. '_vis' → logprob: -6.8230791091918945
    8. ' pend' → logprob: -6.8230791091918945
    9. 'list' → logprob: -7.0730791091918945
    10. 'vist' → logprob: -7.4480791091918945

Token 491: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4791799783706665
    2. ' in' → logprob: -1.4791799783706665
    3. ',' → logprob: -2.729179859161377
    4. ':
' → logprob: -2.979179859161377
    5. 'in' → logprob: -3.729179859161377
    6. '   ' → logprob: -5.104179859161377
    7. ',e' → logprob: -6.229179859161377
    8. '       ' → logprob: -6.979179859161377
    9. ',f' → logprob: -7.229179859161377
    10. ',in' → logprob: -7.604179859161377

Token 492: ' e' (ID: 319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10955703258514404
    2. ' e' → logprob: -2.3595571517944336
    3. 'e' → logprob: -5.359557151794434
    4. ' for' → logprob: -6.109557151794434
    5. ' f' → logprob: -6.609557151794434
    6. '   ' → logprob: -7.984557151794434
    7. '	e' → logprob: -8.984557151794434
    8. '<|end|>' → logprob: -9.297057151794434
    9. '	   ' → logprob: -9.484557151794434
    10. ',e' → logprob: -9.609557151794434

Token 493: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.39799270033836365
    2. ',' → logprob: -2.3979926109313965
    3. '[f' → logprob: -2.6479926109313965
    4. '[' → logprob: -2.8979926109313965
    5. ' =' → logprob: -3.2729926109313965
    6. '=' → logprob: -3.6479926109313965
    7. ',f' → logprob: -4.1479926109313965
    8. '.setdefault' → logprob: -4.3979926109313965
    9. '[e' → logprob: -5.1479926109313965
    10. 'f' → logprob: -6.0229926109313965

Token 494: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40648701786994934
    2. ']=' → logprob: -1.281486988067627
    3. '=' → logprob: -3.156486988067627
    4. '],' → logprob: -5.406486988067627
    5. ' =' → logprob: -5.781486988067627
    6. ',' → logprob: -5.906486988067627
    7. ']+=' → logprob: -6.281486988067627
    8. '].' → logprob: -7.281486988067627
    9. ']={' → logprob: -8.281487464904785
    10. '=[]' → logprob: -8.781487464904785

Token 495: '[]
' (ID: 41761)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4446597397327423
    2. '[]' → logprob: -1.81965970993042
    3. 'set' → logprob: -2.44465970993042
    4. '[' → logprob: -4.06965970993042
    5. '1' → logprob: -4.19465970993042
    6. 'f' → logprob: -4.44465970993042
    7. 'x' → logprob: -4.44465970993042
    8. '[]
' → logprob: -4.44465970993042
    9. 'False' → logprob: -4.56965970993042
    10. '[]}' → logprob: -5.69465970993042

Token 496: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5333526730537415
    2. 'for' → logprob: -1.2833526134490967
    3. '   ' → logprob: -2.5333526134490967
    4. '<|end|>' → logprob: -3.0333526134490967
    5. ' f' → logprob: -5.033352851867676
    6. 'f' → logprob: -7.408352851867676
    7. '
' → logprob: -8.033352851867676
    8. ' ' → logprob: -8.408352851867676
    9. ',f' → logprob: -8.408352851867676
    10. '<|end|>' → logprob: -8.533352851867676

Token 497: ' uf' (ID: 35772)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7497977614402771
    2. '   ' → logprob: -1.1247978210449219
    3. ' for' → logprob: -1.6247978210449219
    4. 'f' → logprob: -5.374797821044922
    5. ' f' → logprob: -6.999797821044922
    6. '	for' → logprob: -9.249797821044922
    7. '<|end|>' → logprob: -9.874797821044922
    8. 'def' → logprob: -10.374797821044922
    9. ' ' → logprob: -10.499797821044922
    10. 'g' → logprob: -11.249797821044922

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688334822654724
    2. '=' → logprob: -1.1368833780288696
    3. '   ' → logprob: -12.386883735656738
    4. '(' → logprob: -12.886883735656738
    5. ' ' → logprob: -13.511883735656738
    6. '.' → logprob: -13.636883735656738
    7. '  ' → logprob: -13.886883735656738
    8. 'f' → logprob: -15.386883735656738
    9. '    ' → logprob: -15.511883735656738
    10. ',' → logprob: -15.636883735656738

Token 499: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.001224870327860117
    2. ' Union' → logprob: -6.751224994659424
    3. '   ' → logprob: -9.876224517822266
    4. '       ' → logprob: -14.251224517822266
    5. ' ' → logprob: -14.376224517822266
    6. 'union' → logprob: -14.501224517822266
    7. '  ' → logprob: -14.626224517822266
    8. '    ' → logprob: -15.001224517822266
    9. '	' → logprob: -15.501224517822266
    10. '     ' → logprob: -16.376224517822266

Token 500: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -5.955703818472102e-05
    2. 'Find' → logprob: -9.750059127807617
    3. 'find' → logprob: -14.125059127807617
    4. 'f' → logprob: -14.750059127807617
    5. '_find' → logprob: -17.500059127807617
    6. ' find' → logprob: -18.250059127807617
    7. '(n' → logprob: -18.250059127807617
    8. '(' → logprob: -18.500059127807617
    9. '(find' → logprob: -18.750059127807617
    10. 'Finder' → logprob: -18.750059127807617

Token 501: '(V' (ID: 16949)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.030367739498615265
    2. '(len' → logprob: -3.530367851257324
    3. '(' → logprob: -7.655367851257324
    4. '(MAX' → logprob: -9.155367851257324
    5. '(n' → logprob: -10.405367851257324
    6. '(
' → logprob: -12.780367851257324
    7. '(V' → logprob: -13.780367851257324
    8. '(max' → logprob: -13.780367851257324
    9. 'len' → logprob: -14.030367851257324
    10. ' (' → logprob: -14.405367851257324

Token 502: '+' (ID: 10)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.10871018469333649
    2. 'v' → logprob: -2.733710289001465
    3. ')' → logprob: -4.108710289001465
    4. ')
' → logprob: -4.108710289001465
    5. '(v' → logprob: -6.983710289001465
    6. '+' → logprob: -7.108710289001465
    7. 'len' → logprob: -7.608710289001465
    8. '[v' → logprob: -7.733710289001465
    9. '(len' → logprob: -8.233710289001465
    10. 'VV' → logprob: -8.921210289001465

Token 503: '1' (ID: 16)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.5994162559509277
    2. '1' → logprob: -1.0994162559509277
    3. ' V' → logprob: -2.9744162559509277
    4. ' ' → logprob: -4.099416255950928
    5. '100' → logprob: -4.099416255950928
    6. 'len' → logprob: -5.349416255950928
    7. 'VV' → logprob: -5.474416255950928
    8. 'n' → logprob: -5.599416255950928
    9. '   ' → logprob: -6.099416255950928
    10. ' len' → logprob: -6.599416255950928

Token 504: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.282061368227005
    2. ')' → logprob: -1.4070613384246826
    3. ')
' → logprob: -7.032061576843262
    4. ')

' → logprob: -10.907061576843262
    5. '   ' → logprob: -12.657061576843262
    6. ' )
' → logprob: -12.907061576843262
    7. ' )' → logprob: -14.157061576843262
    8. ')`
' → logprob: -14.532061576843262
    9. ')e' → logprob: -14.907061576843262
    10. 'def' → logprob: -15.407061576843262

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16442233324050903
    2. ' for' → logprob: -2.4144222736358643
    3. '<|end|>' → logprob: -3.4144222736358643
    4. 'for' → logprob: -3.5394222736358643
    5. '
' → logprob: -9.664422035217285
    6. '<|end|>' → logprob: -9.914422035217285
    7. '```' → logprob: -10.414422035217285
    8. 'def' → logprob: -10.539422035217285
    9. '    
' → logprob: -10.914422035217285
    10. '	for' → logprob: -11.289422035217285

Token 506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004730464890599251
    2. '   ' → logprob: -5.379730701446533
    3. ' for' → logprob: -9.629730224609375
    4. 'def' → logprob: -10.379730224609375
    5. '	for' → logprob: -12.629730224609375
    6. '#' → logprob: -12.879730224609375
    7. '
' → logprob: -13.754730224609375
    8. 'from' → logprob: -13.879730224609375
    9. '       ' → logprob: -14.629730224609375
    10. 'while' → logprob: -14.754730224609375

Token 507: ' _' (ID: 1175)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7013355493545532
    2. 'i' → logprob: -1.0763355493545532
    3. 'u' → logprob: -3.0763354301452637
    4. 'a' → logprob: -3.0763354301452637
    5. '(x' → logprob: -4.451335430145264
    6. 'v' → logprob: -4.826335430145264
    7. '_' → logprob: -4.951335430145264
    8. '(i' → logprob: -5.076335430145264
    9. '(u' → logprob: -5.326335430145264
    10. ' i' → logprob: -5.701335430145264

Token 508: ' in' (ID: 306)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.798606038093567
    2. ',' → logprob: -2.0486059188842773
    3. 'i' → logprob: -2.0486059188842773
    4. 'in' → logprob: -2.2986059188842773
    5. ',v' → logprob: -2.5486059188842773
    6. ' in' → logprob: -2.6736059188842773
    7. ',i' → logprob: -2.6736059188842773
    8. 'u' → logprob: -3.5486059188842773
    9. ',x' → logprob: -3.5486059188842773
    10. ',(' → logprob: -3.6736059188842773

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4580093026161194
    2. 'pend' → logprob: -1.3330092430114746
    3. 'vis' → logprob: -2.3330092430114746
    4. 'work' → logprob: -5.833009243011475
    5. 'read' → logprob: -6.583009243011475
    6. ' range' → logprob: -7.458009243011475
    7. 'e' → logprob: -7.958009243011475
    8. 'pending' → logprob: -8.458009719848633
    9. 'vist' → logprob: -8.833009719848633
    10. '(vis' → logprob: -9.083009719848633

Token 510: '(v' (ID: 6932)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.3056414127349854
    2. 'gin' → logprob: -1.5556414127349854
    3. 'vv' → logprob: -1.5556414127349854
    4. 'n' → logprob: -1.9306414127349854
    5. 'VV' → logprob: -3.9306414127349854
    6. 'M' → logprob: -4.305641174316406
    7. 'v' → logprob: -4.305641174316406
    8. 'int' → logprob: -4.305641174316406
    9. 'vg' → logprob: -4.305641174316406
    10. 'E' → logprob: -4.555641174316406

Token 511: 'v' (ID: 85)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.6607360243797302
    2. ' V' → logprob: -2.535736083984375
    3. 'int' → logprob: -2.660736083984375
    4. '4' → logprob: -3.160736083984375
    5. 'e' → logprob: -3.285736083984375
    6. 'MAX' → logprob: -3.285736083984375
    7. '1' → logprob: -3.410736083984375
    8. 'v' → logprob: -3.660736083984375
    9. 'len' → logprob: -3.785736083984375
    10. ')' → logprob: -4.160736083984375

Token 512: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3245643675327301
    2. '):
' → logprob: -1.5745643377304077
    3. '-' → logprob: -3.0745644569396973
    4. '*' → logprob: -3.9495644569396973
    5. ' -' → logprob: -6.574564456939697
    6. '//' → logprob: -6.699564456939697
    7. '   ' → logprob: -7.699564456939697
    8. '<<' → logprob: -7.824564456939697
    9. ' *' → logprob: -8.324563980102539
    10. ' ):' → logprob: -8.824563980102539

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003068622201681137
    2. ' ' → logprob: -5.878068447113037
    3. '2' → logprob: -8.253068923950195
    4. '   ' → logprob: -14.003068923950195
    5. '...' → logprob: -14.565568923950195
    6. '3' → logprob: -15.378068923950195
    7. '```' → logprob: -15.503068923950195
    8. '
' → logprob: -15.690568923950195
    9. '  ' → logprob: -15.940568923950195
    10. ')' → logprob: -16.440568923950195

Token 514: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4094192087650299
    2. '):
' → logprob: -1.1594191789627075
    3. ':' → logprob: -4.784419059753418
    4. '       ' → logprob: -5.159419059753418
    5. '   ' → logprob: -5.409419059753418
    6. ')' → logprob: -6.659419059753418
    7. ',' → logprob: -6.784419059753418
    8. ':
' → logprob: -7.534419059753418
    9. '<|end|>' → logprob: -8.159419059753418
    10. ' ):' → logprob: -9.159419059753418

Token 515: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35191622376441956
    2. 'a' → logprob: -2.6019163131713867
    3. '   ' → logprob: -2.6019163131713867
    4. 'u' → logprob: -2.9769163131713867
    5. ' a' → logprob: -3.6019163131713867
    6. ' u' → logprob: -4.101916313171387
    7. 'v' → logprob: -4.851916313171387
    8. 'n' → logprob: -5.476916313171387
    9. ' line' → logprob: -5.476916313171387
    10. 'x' → logprob: -5.601916313171387

Token 516: ' best' (ID: 1636)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08276642858982086
    2. '   ' → logprob: -3.082766532897949
    3. 'u' → logprob: -3.707766532897949
    4. 'x' → logprob: -5.082766532897949
    5. 'i' → logprob: -6.832766532897949
    6. 's' → logprob: -7.457766532897949
    7. ' a' → logprob: -7.582766532897949
    8. '	a' → logprob: -9.08276653289795
    9. 'e' → logprob: -9.20776653289795
    10. 'v' → logprob: -9.45776653289795

Token 517: '=(-' (ID: 198297)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4266020655632019
    2. ',' → logprob: -1.6766021251678467
    3. '=' → logprob: -2.3016021251678467
    4. 'x' → logprob: -4.301601886749268
    5. 'u' → logprob: -4.551601886749268
    6. ' ,' → logprob: -4.551601886749268
    7. 'w' → logprob: -5.676601886749268
    8. 'n' → logprob: -6.426601886749268
    9. '   ' → logprob: -6.551601886749268
    10. ',u' → logprob: -6.551601886749268

Token 518: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003277056384831667
    2. '999' → logprob: -7.003276824951172
    3. 'float' → logprob: -7.003276824951172
    4. '100' → logprob: -7.753276824951172
    5. '10' → logprob: -7.878276824951172
    6. '(' → logprob: -8.878276824951172
    7. '99' → logprob: -9.003276824951172
    8. '2' → logprob: -9.128276824951172
    9. 'sys' → logprob: -9.253276824951172
    10. 'int' → logprob: -10.378276824951172

Token 519: ',None' (ID: 186897)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010203643701970577
    2. '1' → logprob: -5.510203838348389
    3. ',-' → logprob: -5.760203838348389
    4. ',float' → logprob: -6.885203838348389
    5. ' ,' → logprob: -7.385203838348389
    6. ',None' → logprob: -8.01020336151123
    7. ',b' → logprob: -8.38520336151123
    8. ',)' → logprob: -8.63520336151123
    9. ',
' → logprob: -9.38520336151123
    10. ')' → logprob: -9.88520336151123

Token 520: ',None' (ID: 186897)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5468606352806091
    2. ',None' → logprob: -0.9218606352806091
    3. ',-' → logprob: -3.796860694885254
    4. ')' → logprob: -8.421860694885254
    5. ',)' → logprob: -9.046860694885254
    6. ',n' → logprob: -9.046860694885254
    7. ',float' → logprob: -9.171860694885254
    8. ',b' → logprob: -9.421860694885254
    9. 'None' → logprob: -9.671860694885254
    10. ',"' → logprob: -9.921860694885254

Token 521: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29606977105140686
    2. ')
' → logprob: -1.5460697412490845
    3. ',' → logprob: -3.171069860458374
    4. ',None' → logprob: -7.421069622039795
    5. ',-' → logprob: -8.546070098876953
    6. '   ' → logprob: -9.296070098876953
    7. ',b' → logprob: -9.796070098876953
    8. ')
' → logprob: -10.171070098876953
    9. '       ' → logprob: -10.296070098876953
    10. ',)' → logprob: -10.671070098876953

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3441561162471771
    2. '   ' → logprob: -2.21915602684021
    3. '<|end|>' → logprob: -2.34415602684021
    4. ' for' → logprob: -3.09415602684021
    5. 'for' → logprob: -3.34415602684021
    6. ',' → logprob: -6.469156265258789
    7. '<|end|>' → logprob: -7.344156265258789
    8. ')' → logprob: -7.594156265258789
    9. 'e' → logprob: -8.094156265258789
    10. '    ' → logprob: -8.469156265258789

Token 523: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0029395483434200287
    2. '   ' → logprob: -6.377939701080322
    3. ' for' → logprob: -7.002939701080322
    4. 'best' → logprob: -10.002939224243164
    5. 'import' → logprob: -10.252939224243164
    6. 'min' → logprob: -10.627939224243164
    7. 'break' → logprob: -10.627939224243164
    8. 'found' → logprob: -10.877939224243164
    9. 'print' → logprob: -11.252939224243164
    10. 'while' → logprob: -11.252939224243164

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6872290968894958
    2. 'x' → logprob: -1.0622291564941406
    3. 'a' → logprob: -2.6872291564941406
    4. 'u' → logprob: -3.0622291564941406
    5. 'e' → logprob: -4.062229156494141
    6. 'j' → logprob: -4.937229156494141
    7. 'v' → logprob: -5.687229156494141
    8. 'ei' → logprob: -6.437229156494141
    9. 'k' → logprob: -6.687229156494141
    10. 'xx' → logprob: -7.312229156494141

Token 525: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22014714777469635
    2. ' in' → logprob: -2.220147132873535
    3. ',v' → logprob: -3.095147132873535
    4. ',e' → logprob: -4.095147132873535
    5. ',j' → logprob: -4.470147132873535
    6. ',' → logprob: -4.470147132873535
    7. ',x' → logprob: -6.720147132873535
    8. 'x' → logprob: -7.345147132873535
    9. 'e' → logprob: -7.470147132873535
    10. ',i' → logprob: -8.345147132873535

Token 526: ' e' (ID: 319)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5155414938926697
    2. 'vis' → logprob: -1.0155415534973145
    3. 'e' → logprob: -3.3905415534973145
    4. 'work' → logprob: -5.6405415534973145
    5. ' range' → logprob: -6.1405415534973145
    6. 'pend' → logprob: -7.5155415534973145
    7. 'list' → logprob: -8.265541076660156
    8. ' vis' → logprob: -9.765541076660156
    9. '[' → logprob: -10.140541076660156
    10. 'sorted' → logprob: -10.265541076660156

Token 527: ':
' (ID: 734)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.8089885711669922
    2. ':' → logprob: -1.4339885711669922
    3. ' in' → logprob: -1.4339885711669922
    4. 'x' → logprob: -3.933988571166992
    5. 'in' → logprob: -4.183988571166992
    6. ':
' → logprob: -4.433988571166992
    7. 'e' → logprob: -4.933988571166992
    8. '[e' → logprob: -4.933988571166992
    9. '.keys' → logprob: -5.183988571166992
    10. '[' → logprob: -6.558988571166992

Token 528: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05141567811369896
    2. 'for' → logprob: -3.8014156818389893
    3. '       ' → logprob: -4.80141544342041
    4. '   ' → logprob: -4.80141544342041
    5. ' in' → logprob: -5.05141544342041
    6. '           ' → logprob: -5.55141544342041
    7. ' i' → logprob: -7.30141544342041
    8. ' ' → logprob: -9.55141544342041
    9. 'in' → logprob: -9.80141544342041
    10. ' x' → logprob: -10.05141544342041

Token 529: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07509490847587585
    2. ' for' → logprob: -2.9500949382781982
    3. '   ' → logprob: -4.700094699859619
    4. 'e' → logprob: -4.700094699859619
    5. '       ' → logprob: -7.200094699859619
    6. ' e' → logprob: -7.575094699859619
    7. 'if' → logprob: -8.450095176696777
    8. '           ' → logprob: -8.700095176696777
    9. 'i' → logprob: -10.075095176696777
    10. 'best' → logprob: -10.325095176696777

Token 530: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014294786378741264
    2. ' j' → logprob: -4.389294624328613
    3. 'x' → logprob: -7.014294624328613
    4. '   ' → logprob: -8.264294624328613
    5. 'k' → logprob: -8.264294624328613
    6. 'v' → logprob: -9.264294624328613
    7. 'e' → logprob: -10.139294624328613
    8. 'w' → logprob: -10.139294624328613
    9. 'u' → logprob: -10.389294624328613
    10. 'y' → logprob: -10.889294624328613

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20234902203083038
    2. 'in' → logprob: -1.702349066734314
    3. '   ' → logprob: -8.327348709106445
    4. 'e' → logprob: -9.327348709106445
    5. 'i' → logprob: -9.452348709106445
    6. ' ' → logprob: -9.577348709106445
    7. '  ' → logprob: -9.952348709106445
    8. 'not' → logprob: -9.952348709106445
    9. '[i' → logprob: -10.202348709106445
    10. '           ' → logprob: -10.327348709106445

Token 532: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0836523026227951
    2. 'vis' → logprob: -2.7086522579193115
    3. ' e' → logprob: -4.833652496337891
    4. ' vis' → logprob: -6.458652496337891
    5. 'work' → logprob: -6.708652496337891
    6. '[e' → logprob: -7.208652496337891
    7. 'range' → logprob: -7.333652496337891
    8. '(vis' → logprob: -8.33365249633789
    9. 'vist' → logprob: -8.58365249633789
    10. '[' → logprob: -8.70865249633789

Token 533: ':
' (ID: 734)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6405310816480778e-05
    2. 'i' → logprob: -12.000016212463379
    3. ':' → logprob: -12.375016212463379
    4. '[j' → logprob: -12.500016212463379
    5. '[x' → logprob: -14.250016212463379
    6. '[' → logprob: -15.000016212463379
    7. ':i' → logprob: -15.375016212463379
    8. ':
' → logprob: -15.500016212463379
    9. '```' → logprob: -15.750016212463379
    10. '[e' → logprob: -16.375017166137695

Token 534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015360655263066292
    2. ':' → logprob: -4.6403608322143555
    3. ' :' → logprob: -6.5153608322143555
    4. '[' → logprob: -6.8903608322143555
    5. '                
' → logprob: -7.0153608322143555
    6. ':
' → logprob: -7.2653608322143555
    7. '<|end|>' → logprob: -8.140360832214355
    8. '           ' → logprob: -8.390360832214355
    9. ',' → logprob: -8.640360832214355
    10. ' :
' → logprob: -9.140360832214355

Token 535: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17307287454605103
    2. '                   ' → logprob: -2.4230728149414062
    3. '                       ' → logprob: -3.2980728149414062
    4. ' ' → logprob: -4.923072814941406
    5. '               ' → logprob: -5.423072814941406
    6. 'if' (adapté à ' if') → logprob: -5.423072814941406
    7. '                    ' → logprob: -5.923072814941406
    8. '<|end|>' → logprob: -6.048072814941406
    9. ',' → logprob: -6.423072814941406
    10. '                ' → logprob: -6.673072814941406

Token 536: ' uf' (ID: 35772)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022856971248984337
    2. ' i' → logprob: -4.647857189178467
    3. 'dist' → logprob: -4.897857189178467
    4. 'j' → logprob: -5.647857189178467
    5. '(i' → logprob: -7.397857189178467
    6. 'not' → logprob: -8.147856712341309
    7. ' dist' → logprob: -8.772856712341309
    8. '   ' → logprob: -9.022856712341309
    9. ' j' → logprob: -9.147856712341309
    10. '0' → logprob: -9.647856712341309

Token 537: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00025669054593890905
    2. '.p' → logprob: -8.375256538391113
    3. 'root' → logprob: -10.875256538391113
    4. 'p' → logprob: -12.125256538391113
    5. '.r' → logprob: -14.625256538391113
    6. '.' → logprob: -14.750256538391113
    7. '[root' → logprob: -15.250256538391113
    8. ' .' → logprob: -15.500256538391113
    9. '   ' → logprob: -16.75025749206543
    10. 'a' → logprob: -16.87525749206543

Token 538: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001649220648687333
    2. '(j' → logprob: -9.125164985656738
    3. '(e' → logprob: -10.125164985656738
    4. 'i' → logprob: -11.875164985656738
    5. '(' → logprob: -12.125164985656738
    6. '(set' → logprob: -14.250164985656738
    7. 'e' → logprob: -14.375164985656738
    8. '[i' → logprob: -14.500164985656738
    9. '(
' → logprob: -14.875164985656738
    10. ' (' → logprob: -15.375164985656738

Token 539: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05061999335885048
    2. ')==' → logprob: -3.5506200790405273
    3. ')!=' → logprob: -3.9256200790405273
    4. '==' → logprob: -7.300620079040527
    5. '!=' → logprob: -8.800620079040527
    6. ' )' → logprob: -10.925620079040527
    7. ']==' → logprob: -11.175620079040527
    8. ']!=' → logprob: -11.425620079040527
    9. ')
' → logprob: -11.675620079040527
    10. '())' → logprob: -11.800620079040527

Token 540: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.00021402664424385875
    2. ' uf' → logprob: -8.625213623046875
    3. 'jf' → logprob: -10.750213623046875
    4. '   ' → logprob: -12.500213623046875
    5. 'j' → logprob: -13.000213623046875
    6. 'uj' → logprob: -13.125213623046875
    7. 'ufs' → logprob: -13.625213623046875
    8. '           ' → logprob: -14.500213623046875
    9. '       ' → logprob: -14.500213623046875
    10. ' ' → logprob: -14.875213623046875

Token 541: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00017803447553887963
    2. 'root' → logprob: -8.750178337097168
    3. '.' → logprob: -11.500178337097168
    4. '[j' → logprob: -12.375178337097168
    5. ' .' → logprob: -13.500178337097168
    6. '(j' → logprob: -14.125178337097168
    7. '(root' → logprob: -14.375178337097168
    8. '.j' → logprob: -14.375178337097168
    9. ' root' → logprob: -14.500178337097168
    10. '[root' → logprob: -15.000178337097168

Token 542: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0007028992986306548
    2. 'j' → logprob: -7.500702857971191
    3. '[j' → logprob: -9.750702857971191
    4. '                   ' → logprob: -10.625702857971191
    5. ')' → logprob: -11.000702857971191
    6. '(i' → logprob: -11.625702857971191
    7. '           ' → logprob: -11.625702857971191
    8. '               ' → logprob: -11.625702857971191
    9. ' (' → logprob: -11.875702857971191
    10. '   ' → logprob: -12.125702857971191

Token 543: '):' (ID: 3127)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.06578207015991211
    2. ':' → logprob: -3.190782070159912
    3. ' and' → logprob: -4.190782070159912
    4. ':
' → logprob: -6.440782070159912
    5. '               ' → logprob: -6.565782070159912
    6. '                   ' → logprob: -6.565782070159912
    7. ' :' → logprob: -6.940782070159912
    8. 'and' → logprob: -7.565782070159912
    9. ' ' → logprob: -7.690782070159912
    10. ':return' → logprob: -8.06578254699707

Token 544: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22266241908073425
    2. ' continue' → logprob: -1.7226624488830566
    3. 'continue' → logprob: -4.347662448883057
    4. '                       ' → logprob: -5.472662448883057
    5. '               ' → logprob: -5.847662448883057
    6. '	continue' → logprob: -8.097661972045898
    7. '           ' → logprob: -8.347661972045898
    8. '   ' → logprob: -9.222661972045898
    9. ':' → logprob: -9.472661972045898
    10. ',' → logprob: -9.972661972045898

Token 545: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5815128087997437
    2. '               ' → logprob: -0.8315128087997437
    3. ' and' → logprob: -6.206512928009033
    4. ',' → logprob: -7.081512928009033
    5. '                       ' → logprob: -7.331512928009033
    6. ' if' → logprob: -7.581512928009033
    7. '           ' → logprob: -7.956512928009033
    8. ' or' → logprob: -8.081512451171875
    9. '<|end|>' → logprob: -8.581512451171875
    10. '                    
' → logprob: -8.956512451171875

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023972349241375923
    2. '                   ' → logprob: -3.898972272872925
    3. ' if' → logprob: -7.023972511291504
    4. ',' → logprob: -7.148972511291504
    5. ' and' → logprob: -7.773972511291504
    6. ' continue' → logprob: -8.148972511291504
    7. '                       ' → logprob: -8.273972511291504
    8. '           ' → logprob: -8.648972511291504
    9. ' or' → logprob: -9.523972511291504
    10. 'continue' → logprob: -9.523972511291504

Token 547: ' dif' (ID: 1501)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9043564796447754
    2. 'd' → logprob: -1.6543564796447754
    3. 'dist' → logprob: -2.0293564796447754
    4. '               ' → logprob: -2.5293564796447754
    5. '                   ' → logprob: -3.0293564796447754
    6. '   ' → logprob: -3.7793564796447754
    7. 'best' → logprob: -4.029356479644775
    8. 'e' → logprob: -4.154356479644775
    9. '           ' → logprob: -4.279356479644775
    10. 'w' → logprob: -4.279356479644775

Token 548: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3597424030303955
    2. '=' → logprob: -1.8597424030303955
    3. 'f' → logprob: -2.3597424030303955
    4. 'ference' → logprob: -3.6097424030303955
    5. 'fer' → logprob: -4.609742164611816
    6. '=f' → logprob: -5.109742164611816
    7. '=(' → logprob: -6.734742164611816
    8. '=x' → logprob: -6.859742164611816
    9. 'fs' → logprob: -7.109742164611816
    10. '=i' → logprob: -7.234742164611816

Token 549: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04849867895245552
    2. 'abs' → logprob: -3.2984986305236816
    3. ' dist' → logprob: -5.673498630523682
    4. 'float' → logprob: -6.548498630523682
    5. 'MAX' → logprob: -7.048498630523682
    6. 'V' → logprob: -7.423498630523682
    7. '(dist' → logprob: -7.548498630523682
    8. '1' → logprob: -7.548498630523682
    9. '-' → logprob: -7.923498630523682
    10. '0' → logprob: -8.17349910736084

Token 550: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015431294741574675
    2. '[' → logprob: -9.000154495239258
    3. ' [' → logprob: -11.750154495239258
    4. 'i' → logprob: -12.125154495239258
    5. '[j' → logprob: -12.500154495239258
    6. '[
' → logprob: -12.875154495239258
    7. '[x' → logprob: -13.500154495239258
    8. '[I' → logprob: -13.500154495239258
    9. '(i' → logprob: -13.750154495239258
    10. '```' → logprob: -13.875154495239258

Token 551: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017532380297780037
    2. '[j' → logprob: -7.001753330230713
    3. ']' → logprob: -7.876753330230713
    4. '[' → logprob: -8.001752853393555
    5. '[x' → logprob: -10.251752853393555
    6. '[i' → logprob: -10.876752853393555
    7. ' ][' → logprob: -10.876752853393555
    8. ''][' → logprob: -12.126752853393555
    9. '"][' → logprob: -12.376752853393555
    10. '   ' → logprob: -12.626752853393555

Token 552: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.371605948312208e-05
    2. ' j' → logprob: -10.375053405761719
    3. 'x' → logprob: -11.500053405761719
    4. '   ' → logprob: -12.375053405761719
    5. '           ' → logprob: -13.750053405761719
    6. '][' → logprob: -13.875053405761719
    7. '
' → logprob: -13.875053405761719
    8. ' ' → logprob: -13.875053405761719
    9. 'i' → logprob: -14.500053405761719
    10. '  ' → logprob: -14.625053405761719

Token 553: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004716703202575445
    2. ']' → logprob: -5.504716873168945
    3. ']-' → logprob: -8.129716873168945
    4. '[j' → logprob: -8.254716873168945
    5. ' ][' → logprob: -10.504716873168945
    6. ']+' → logprob: -10.629716873168945
    7. '[' → logprob: -11.879716873168945
    8. '   ' → logprob: -12.504716873168945
    9. 'j' → logprob: -12.754716873168945
    10. ']>' → logprob: -12.879716873168945

Token 554: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2465609759092331
    2. '[j' → logprob: -2.496561050415039
    3. ' -' → logprob: -2.746561050415039
    4. '[' → logprob: -3.246561050415039
    5. '+' → logprob: -3.621561050415039
    6. '-j' → logprob: -6.121561050415039
    7. '][' → logprob: -6.871561050415039
    8. ' +' → logprob: -6.996561050415039
    9. '+j' → logprob: -7.496561050415039
    10. '-f' → logprob: -8.246561050415039

Token 555: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00024989593657664955
    2. ' dist' → logprob: -8.375249862670898
    3. '   ' → logprob: -11.875249862670898
    4. '+' → logprob: -13.000249862670898
    5. '1' → logprob: -13.000249862670898
    6. 'd' → logprob: -14.000249862670898
    7. '(dist' → logprob: -14.000249862670898
    8. '
' → logprob: -14.125249862670898
    9. '	dist' → logprob: -14.125249862670898
    10. '           ' → logprob: -14.375249862670898

Token 556: '[' (ID: 58)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0857427641749382
    2. '[' → logprob: -3.335742712020874
    3. 'j' → logprob: -3.585742712020874
    4. '[i' → logprob: -4.335742950439453
    5. '[x' → logprob: -6.335742950439453
    6. '][' → logprob: -7.460742950439453
    7. '```' → logprob: -7.710742950439453
    8. ']' → logprob: -7.835742950439453
    9. 'i' → logprob: -7.835742950439453
    10. 'x' → logprob: -7.960742950439453

Token 557: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007971771992743015
    2. '1' → logprob: -5.00797176361084
    3. 'V' → logprob: -7.88297176361084
    4. 'i' → logprob: -8.25797176361084
    5. 'x' → logprob: -8.50797176361084
    6. '[j' → logprob: -9.00797176361084
    7. ' j' → logprob: -9.75797176361084
    8. '
' → logprob: -10.25797176361084
    9. '```' → logprob: -10.50797176361084
    10. 'last' → logprob: -10.63297176361084

Token 558: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.021738123148679733
    2. '[j' → logprob: -3.896738052368164
    3. '[i' → logprob: -7.521738052368164
    4. '[' → logprob: -8.646738052368164
    5. '   ' → logprob: -9.021738052368164
    6. ']' → logprob: -9.521738052368164
    7. 'j' → logprob: -9.896738052368164
    8. ''][' → logprob: -10.146738052368164
    9. '       ' → logprob: -10.646738052368164
    10. '"][' → logprob: -10.646738052368164

Token 559: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00026884564431384206
    2. ' j' → logprob: -8.375268936157227
    3. '   ' → logprob: -11.375268936157227
    4. '
' → logprob: -12.000268936157227
    5. '[j' → logprob: -12.250268936157227
    6. 'x' → logprob: -12.500268936157227
    7. '	j' → logprob: -13.125268936157227
    8. ' ' → logprob: -13.375268936157227
    9. 'i' → logprob: -13.375268936157227
    10. '```' → logprob: -13.500268936157227

Token 560: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14606943726539612
    2. ' -' → logprob: -2.2710695266723633
    3. ']' → logprob: -3.5210695266723633
    4. ']-' → logprob: -6.146069526672363
    5. '+' → logprob: -8.396069526672363
    6. '-
' → logprob: -8.896069526672363
    7. ' ]' → logprob: -8.896069526672363
    8. ' ' → logprob: -9.896069526672363
    9. '       ' → logprob: -10.146069526672363
    10. ']+' → logprob: -10.271069526672363

Token 561: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04215622693300247
    2. ' -' → logprob: -3.292156219482422
    3. '               ' → logprob: -5.792156219482422
    4. '-if' → logprob: -7.417156219482422
    5. '-d' → logprob: -9.917156219482422
    6. '-def' → logprob: -9.917156219482422
    7. '+' → logprob: -10.042156219482422
    8. '                   ' → logprob: -10.542156219482422
    9. '-check' → logprob: -10.667156219482422
    10. '-f' → logprob: -10.917156219482422

Token 562: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004340156447142363
    2. ' dist' → logprob: -5.504340171813965
    3. '(dist' → logprob: -8.504340171813965
    4. '   ' → logprob: -10.254340171813965
    5. '	dist' → logprob: -12.129340171813965
    6. '           ' → logprob: -12.254340171813965
    7. '       ' → logprob: -13.004340171813965
    8. '  ' → logprob: -13.254340171813965
    9. ' ' → logprob: -13.379340171813965
    10. '(' → logprob: -13.754340171813965

Token 563: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013536323967855424
    2. 'i' → logprob: -9.37513542175293
    3. '[' → logprob: -10.62513542175293
    4. '[j' → logprob: -11.00013542175293
    5. '```' → logprob: -12.87513542175293
    6. '   ' → logprob: -14.00013542175293
    7. '[x' → logprob: -14.25013542175293
    8. ' [' → logprob: -14.37513542175293
    9. '[int' → logprob: -14.87513542175293
    10. 'x' → logprob: -14.87513542175293

Token 564: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011088967323303223
    2. '[' → logprob: -4.511088848114014
    3. ']' → logprob: -11.011089324951172
    4. '1' → logprob: -11.886089324951172
    5. ' ][' → logprob: -12.386089324951172
    6. ''][' → logprob: -12.761089324951172
    7. '"][' → logprob: -13.636089324951172
    8. '>[' → logprob: -13.636089324951172
    9. '```' → logprob: -13.636089324951172
    10. '>' → logprob: -14.323589324951172

Token 565: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10154968500137329
    2. '1' → logprob: -2.3515496253967285
    3. '[' → logprob: -7.3515496253967285
    4. '[j' → logprob: -8.351550102233887
    5. '0' → logprob: -8.476550102233887
    6. '
' → logprob: -9.851550102233887
    7. '   ' → logprob: -9.976550102233887
    8. 'x' → logprob: -9.976550102233887
    9. ' j' → logprob: -10.476550102233887
    10. '][' → logprob: -10.726550102233887

Token 566: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.37967801094055176
    2. ']
' → logprob: -2.2546780109405518
    3. ')' → logprob: -2.6296780109405518
    4. '       ' → logprob: -2.7546780109405518
    5. ']>' → logprob: -3.6296780109405518
    6. ')
' → logprob: -4.504677772521973
    7. '           ' → logprob: -4.754677772521973
    8. '
' → logprob: -5.129677772521973
    9. '               ' → logprob: -5.129677772521973
    10. '<|end|>' → logprob: -5.129677772521973

Token 567: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01804177090525627
    2. '                ' → logprob: -5.268041610717773
    3. '<|end|>' → logprob: -5.518041610717773
    4. '                
' → logprob: -6.143041610717773
    5. ' if' → logprob: -6.268041610717773
    6. '                   ' → logprob: -6.893041610717773
    7. '                       ' → logprob: -7.268041610717773
    8. '                               ' → logprob: -7.643041610717773
    9. ')' → logprob: -7.893041610717773
    10. '              ' → logprob: -8.268041610717773

Token 568: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33331114053726196
    2. ' if' → logprob: -1.3333110809326172
    3. '                   ' → logprob: -5.208311080932617
    4. 'if' (adapté à ' if') → logprob: -5.458311080932617
    5. '                       ' → logprob: -5.708311080932617
    6. '                ' → logprob: -6.708311080932617
    7. ')' → logprob: -6.833311080932617
    8. '<|end|>' → logprob: -7.083311080932617
    9. '                               ' → logprob: -7.208311080932617
    10. '           ' → logprob: -7.333311080932617

Token 569: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.08110851049423218
    2. ' dif' → logprob: -2.831108570098877
    3. 'best' → logprob: -4.081108570098877
    4. ' best' → logprob: -7.206108570098877
    5. 'd' → logprob: -7.581108570098877
    6. '(d' → logprob: -8.706108093261719
    7. 'diff' → logprob: -8.706108093261719
    8. '(best' → logprob: -8.831108093261719
    9. '(' → logprob: -9.706108093261719
    10. ' ' → logprob: -9.831108093261719

Token 570: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25250276923179626
    2. ' >' → logprob: -1.5025027990341187
    3. '<' → logprob: -8.12750244140625
    4. ' <' → logprob: -9.00250244140625
    5. '[' → logprob: -9.37750244140625
    6. ' ' → logprob: -11.00250244140625
    7. '   ' → logprob: -11.75250244140625
    8. '>
' → logprob: -11.87750244140625
    9. ',' → logprob: -12.37750244140625
    10. ' >
' → logprob: -12.62750244140625

Token 571: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.016492590308189392
    2. '0' → logprob: -4.2664923667907715
    3. ' best' → logprob: -6.2664923667907715
    4. 'MAX' → logprob: -8.64149284362793
    5. ' ' → logprob: -9.51649284362793
    6. 'max' → logprob: -9.89149284362793
    7. '-' → logprob: -10.51649284362793
    8. '(best' → logprob: -10.76649284362793
    9. 'dist' → logprob: -11.26649284362793
    10. 'b' → logprob: -11.39149284362793

Token 572: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013810492237098515
    2. '0' → logprob: -9.000138282775879
    3. ' [' → logprob: -12.375138282775879
    4. '(' → logprob: -13.250138282775879
    5. '
' → logprob: -13.625138282775879
    6. '   ' → logprob: -14.000138282775879
    7. ',' → logprob: -14.000138282775879
    8. ' ' → logprob: -14.125138282775879
    9. '][' → logprob: -14.625138282775879
    10. '```' → logprob: -14.625138282775879

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020127551397308707
    2. '[' → logprob: -8.750201225280762
    3. '1' → logprob: -11.562701225280762
    4. '2' → logprob: -12.187701225280762
    5. '
' → logprob: -12.250201225280762
    6. ' ' → logprob: -13.125201225280762
    7. '`' → logprob: -13.625201225280762
    8. '(' → logprob: -13.687701225280762
    9. '3' → logprob: -13.687701225280762
    10. '-' → logprob: -13.750201225280762

Token 574: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30985724925994873
    2. ':
' → logprob: -1.5598572492599487
    3. '           ' → logprob: -4.059857368469238
    4. '[' → logprob: -4.309857368469238
    5. ' or' → logprob: -4.559857368469238
    6. '   ' → logprob: -4.934857368469238
    7. '       ' → logprob: -6.184857368469238
    8. ' :' → logprob: -6.684857368469238
    9. '][' → logprob: -7.309857368469238
    10. ']:
' → logprob: -7.309857368469238

Token 575: '                   ' (ID: 699)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.1637444943189621
    2. '(' → logprob: -2.5387444496154785
    3. ' (' → logprob: -3.0387444496154785
    4. '                   ' → logprob: -4.2887444496154785
    5. '                       ' → logprob: -5.9137444496154785
    6. ' best' → logprob: -6.2887444496154785
    7. '               ' → logprob: -6.2887444496154785
    8. '           ' → logprob: -6.9137444496154785
    9. '(-' → logprob: -7.1637444496154785
    10. '(d' → logprob: -7.7887444496154785

Token 576: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.06197037547826767
    2. ' best' → logprob: -2.8119704723358154
    3. '   ' → logprob: -14.061970710754395
    4. '(best' → logprob: -14.061970710754395
    5. '                   ' → logprob: -14.561970710754395
    6. '	best' → logprob: -15.436970710754395
    7. '           ' → logprob: -15.686970710754395
    8. '       ' → logprob: -16.686969757080078
    9. '                       ' → logprob: -16.686969757080078
    10. '               ' → logprob: -16.811969757080078

Token 577: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10049121826887131
    2. '=' → logprob: -2.3504912853240967
    3. '=(' → logprob: -8.850491523742676
    4. ' =(' → logprob: -9.100491523742676
    5. '=d' → logprob: -10.725491523742676
    6. '   ' → logprob: -13.225491523742676
    7. '[' → logprob: -13.725491523742676
    8. ',' → logprob: -13.725491523742676
    9. '=(-' → logprob: -13.850491523742676
    10. ' ' → logprob: -14.850491523742676

Token 578: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2523111402988434
    2. 'dif' → logprob: -1.502311110496521
    3. ' dif' → logprob: -8.752310752868652
    4. ' (' → logprob: -9.127310752868652
    5. 'd' → logprob: -9.627310752868652
    6. '	d' → logprob: -11.502310752868652
    7. '(' → logprob: -11.627310752868652
    8. '[d' → logprob: -12.127310752868652
    9. '(diff' → logprob: -12.127310752868652
    10. 'diff' → logprob: -12.252310752868652

Token 579: 'dif' (ID: 92027)
  Prédit: 'dif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -3.011373155459296e-05
    2. ' dif' → logprob: -10.625030517578125
    3. 'diff' → logprob: -12.250030517578125
    4. '   ' → logprob: -14.125030517578125
    5. '
' → logprob: -16.875030517578125
    6. '
' → logprob: -17.250030517578125
    7. 'di' → logprob: -17.500030517578125
    8. 'dis' → logprob: -17.750030517578125
    9. '	d' → logprob: -17.750030517578125
    10. '  ' → logprob: -17.875030517578125

Token 580: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003981043118983507
    2. ' ,' → logprob: -6.378981113433838
    3. ',b' → logprob: -7.003981113433838
    4. ',i' → logprob: -7.003981113433838
    5. ',None' → logprob: -8.87898063659668
    6. ',j' → logprob: -9.50398063659668
    7. ',x' → logprob: -10.37898063659668
    8. ')' → logprob: -10.62898063659668
    9. '   ' → logprob: -10.75398063659668
    10. '[' → logprob: -11.12898063659668

Token 581: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.209572896361351
    2. ',j' → logprob: -1.7095729112625122
    3. ',f' → logprob: -5.334572792053223
    4. ' ,' → logprob: -6.334572792053223
    5. '[' → logprob: -6.834572792053223
    6. ',None' → logprob: -9.084572792053223
    7. ',b' → logprob: -9.584572792053223
    8. ',
' → logprob: -10.084572792053223
    9. ',i' → logprob: -10.209572792053223
    10. ',[' → logprob: -10.584572792053223

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015070053050294518
    2. ')
' → logprob: -6.501506805419922
    3. ' )' → logprob: -13.251506805419922
    4. ')
' → logprob: -14.501506805419922
    5. ')

' → logprob: -14.626506805419922
    6. '       ' → logprob: -14.751506805419922
    7. '                   ' → logprob: -15.251506805419922
    8. '               ' → logprob: -15.376506805419922
    9. ')return' → logprob: -15.751506805419922
    10. '[' → logprob: -15.876506805419922

Token 583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023281944449990988
    2. '<|end|>' → logprob: -7.877328395843506
    3. '   ' → logprob: -8.127327919006348
    4. '
' → logprob: -8.252327919006348
    5. '               ' → logprob: -8.252327919006348
    6. ',' → logprob: -8.377327919006348
    7. '        
' → logprob: -8.502327919006348
    8. 'if' → logprob: -9.002327919006348
    9. '           ' → logprob: -9.127327919006348
    10. ' if' → logprob: -9.377327919006348

Token 584: ' _,' (ID: 18042)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09010136127471924
    2. '   ' → logprob: -3.2151012420654297
    3. 'e' → logprob: -3.4651012420654297
    4. ' e' → logprob: -5.21510124206543
    5. '           ' → logprob: -5.71510124206543
    6. '               ' → logprob: -5.71510124206543
    7. 'for' → logprob: -6.71510124206543
    8. ' for' → logprob: -8.09010124206543
    9. 'if' → logprob: -8.09010124206543
    10. ' if' → logprob: -8.34010124206543

Token 585: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18610982596874237
    2. 'a' → logprob: -2.311109781265259
    3. 'e' → logprob: -3.811109781265259
    4. 'x' → logprob: -3.811109781265259
    5. 'ei' → logprob: -4.686110019683838
    6. 'b' → logprob: -5.186110019683838
    7. 'ii' → logprob: -5.311110019683838
    8. 'u' → logprob: -6.061110019683838
    9. 'bi' → logprob: -6.811110019683838
    10. 'ee' → logprob: -6.811110019683838

Token 586: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.0006409500492736697
    2. 'j' → logprob: -8.000640869140625
    3. ',' → logprob: -8.875640869140625
    4. ',i' → logprob: -9.250640869140625
    5. ',f' → logprob: -9.875640869140625
    6. ',k' → logprob: -12.000640869140625
    7. '_,' → logprob: -12.625640869140625
    8. ' ,' → logprob: -13.000640869140625
    9. ',_' → logprob: -13.750640869140625
    10. 'f' → logprob: -14.125640869140625

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21277566254138947
    2. '=' → logprob: -1.712775707244873
    3. '   ' → logprob: -5.337775707244873
    4. 'uf' → logprob: -5.587775707244873
    5. '       ' → logprob: -6.587775707244873
    6. '           ' → logprob: -7.587775707244873
    7. ')' → logprob: -8.712775230407715
    8. ' uf' → logprob: -8.837775230407715
    9. '
' → logprob: -9.587775230407715
    10. ',' → logprob: -9.712775230407715

Token 588: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.0015023599844425917
    2. ' best' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. '(best' → logprob: -17.626502990722656
    5. '	best' → logprob: -18.126502990722656
    6. 'set' → logprob: -19.251502990722656
    7. ' ' → logprob: -19.376502990722656
    8. 'b' → logprob: -19.501502990722656
    9. '_best' → logprob: -19.876502990722656
    10. '
' → logprob: -20.501502990722656

Token 589: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019030878320336342
    2. '
' → logprob: -9.000190734863281
    3. '   ' → logprob: -10.375190734863281
    4. ',' → logprob: -11.250190734863281
    5. '        
' → logprob: -11.750190734863281
    6. 'uf' → logprob: -12.500190734863281
    7. '           ' → logprob: -12.875190734863281
    8. '
' → logprob: -13.250190734863281
    9. '               ' → logprob: -13.750190734863281
    10. ' if' → logprob: -14.250190734863281

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005214313510805368
    2. 'e' → logprob: -6.130214214324951
    3. '   ' → logprob: -6.255214214324951
    4. ' e' → logprob: -7.005214214324951
    5. 'for' → logprob: -10.38021469116211
    6. 'if' → logprob: -10.38021469116211
    7. 'uf' → logprob: -10.50521469116211
    8. ' if' → logprob: -11.00521469116211
    9. ' for' → logprob: -11.00521469116211
    10. '           ' → logprob: -11.25521469116211

Token 591: ' e' (ID: 319)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.000777707842644304
    2. 'e' (adapté à ' e') → logprob: -8.000777244567871
    3. 'if' → logprob: -9.000777244567871
    4. ' uf' → logprob: -9.125777244567871
    5. '   ' → logprob: -9.500777244567871
    6. 'for' → logprob: -9.625777244567871
    7. 'ufs' → logprob: -11.500777244567871
    8. 'work' → logprob: -11.500777244567871
    9. '       ' → logprob: -11.625777244567871
    10. 'u' → logprob: -11.750777244567871

Token 592: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.881560041918419e-05
    2. '[j' → logprob: -10.500039100646973
    3. '[' → logprob: -11.625039100646973
    4. 'i' → logprob: -13.750039100646973
    5. '[e' → logprob: -13.875039100646973
    6. '[I' → logprob: -16.250038146972656
    7. '.setdefault' → logprob: -16.750038146972656
    8. ' [' → logprob: -17.375038146972656
    9. '
' → logprob: -17.875038146972656
    10. '[f' → logprob: -18.125038146972656

Token 593: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.398067828034982e-05
    2. '.append' → logprob: -9.62507438659668
    3. ']' → logprob: -12.62507438659668
    4. ' ].' → logprob: -12.75007438659668
    5. '[j' → logprob: -14.62507438659668
    6. '[i' → logprob: -14.75007438659668
    7. '.' → logprob: -15.37507438659668
    8. '[].' → logprob: -15.62507438659668
    9. '][' → logprob: -16.12507438659668
    10. ''].' → logprob: -16.25007438659668

Token 594: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.696889623621246e-06
    2. ' append' → logprob: -13.25000286102295
    3. '.append' → logprob: -14.00000286102295
    4. 'app' → logprob: -17.125001907348633
    5. 'remove' → logprob: -17.250001907348633
    6. 'appen' → logprob: -17.375001907348633
    7. 'insert' → logprob: -17.625001907348633
    8. '	append' → logprob: -17.875001907348633
    9. '_append' → logprob: -18.125001907348633
    10. 'add' → logprob: -18.250001907348633

Token 595: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010139751975657418
    2. ' j' → logprob: -9.375101089477539
    3. '(j' → logprob: -11.125101089477539
    4. '   ' → logprob: -13.625101089477539
    5. '	j' → logprob: -15.750101089477539
    6. ' ' → logprob: -15.875101089477539
    7. '[j' → logprob: -16.12510108947754
    8. '(' → logprob: -16.62510108947754
    9. '  ' → logprob: -16.87510108947754
    10. ',j' → logprob: -17.37510108947754

Token 596: ');' (ID: 2245)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20197758078575134
    2. ')' → logprob: -1.7019776105880737
    3. ' )
' → logprob: -7.826977729797363
    4. ' )' → logprob: -9.451977729797363
    5. ')
' → logprob: -9.576977729797363
    6. '       ' → logprob: -11.576977729797363
    7. ')

' → logprob: -12.576977729797363
    8. ')e' → logprob: -13.576977729797363
    9. ')i' → logprob: -13.701977729797363
    10. ')#' → logprob: -14.826977729797363

Token 597: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.000550887081772089
    2. ' e' → logprob: -7.625550746917725
    3. '   ' → logprob: -9.750551223754883
    4. '       ' → logprob: -12.500551223754883
    5. '	e' → logprob: -15.250551223754883
    6. 'uf' → logprob: -15.500551223754883
    7. '           ' → logprob: -16.125551223754883
    8. ' ' → logprob: -16.625551223754883
    9. '    ' → logprob: -16.625551223754883
    10. 'f' → logprob: -16.625551223754883

Token 598: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008642955799587071
    2. '[i' → logprob: -7.625864505767822
    3. 'j' → logprob: -8.000864028930664
    4. '```' → logprob: -10.750864028930664
    5. '[' → logprob: -12.250864028930664
    6. '
' → logprob: -12.500864028930664
    7. '[e' → logprob: -13.375864028930664
    8. '[
' → logprob: -13.875864028930664
    9. 'e' → logprob: -14.125864028930664
    10. '][' → logprob: -14.250864028930664

Token 599: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.002585646929219365
    2. '[i' → logprob: -6.002585411071777
    3. '.append' → logprob: -9.752585411071777
    4. ']' → logprob: -10.377585411071777
    5. '.' → logprob: -11.877585411071777
    6. '][' → logprob: -12.627585411071777
    7. '[].' → logprob: -12.627585411071777
    8. '[' → logprob: -13.502585411071777
    9. ''].' → logprob: -13.752585411071777
    10. ').' → logprob: -13.752585411071777

Token 600: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.0005811501177959144
    2. 'i' → logprob: -7.62558126449585
    3. 'app' → logprob: -9.750580787658691
    4. '.append' → logprob: -10.375580787658691
    5. 'appen' → logprob: -13.625580787658691
    6. ' append' → logprob: -13.875580787658691
    7. '(i' → logprob: -14.000580787658691
    8. '_append' → logprob: -15.875580787658691
    9. 'Append' → logprob: -16.125581741333008
    10. 'add' → logprob: -16.500581741333008

Token 601: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002613358374219388
    2. 'i' → logprob: -8.250261306762695
    3. '(' → logprob: -16.500261306762695
    4. ' (' → logprob: -18.250261306762695
    5. '(
' → logprob: -18.625261306762695
    6. ' i' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.500261306762695
    8. '[i' → logprob: -19.875261306762695
    9. '	i' → logprob: -20.375261306762695
    10. '
' → logprob: -21.500261306762695

Token 602: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005349211278371513
    2. '<|end|>' → logprob: -7.750535011291504
    3. ')
' → logprob: -9.375535011291504
    4. ');' → logprob: -11.500535011291504
    5. ')return' → logprob: -12.500535011291504
    6. ')#' → logprob: -14.000535011291504
    7. '       ' → logprob: -14.250535011291504
    8. '<|end|>' → logprob: -14.250535011291504
    9. ' )' → logprob: -14.375535011291504
    10. '),' → logprob: -14.875535011291504

Token 603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011521248379722238
    2. '   ' → logprob: -7.126152038574219
    3. '<|end|>' → logprob: -8.126152038574219
    4. '           ' → logprob: -11.501152038574219
    5. '...' → logprob: -12.001152038574219
    6. ',' → logprob: -12.501152038574219
    7. '.' → logprob: -12.626152038574219
    8. ' ' → logprob: -12.751152038574219
    9. 'for' → logprob: -12.751152038574219
    10. '               ' → logprob: -12.751152038574219

Token 604: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0007175540085881948
    2. '   ' → logprob: -7.875717639923096
    3. ' uf' → logprob: -8.250717163085938
    4. '       ' → logprob: -9.625717163085938
    5. 'ufs' → logprob: -12.125717163085938
    6. '           ' → logprob: -14.000717163085938
    7. 'ufi' → logprob: -14.125717163085938
    8. '.uf' → logprob: -14.500717163085938
    9. ' ' → logprob: -14.625717163085938
    10. 'ug' → logprob: -14.875717163085938

Token 605: '.merge' (ID: 51225)
  Prédit: '.merge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.merge' → logprob: -0.00016086915275081992
    2. '.' → logprob: -8.750161170959473
    3. ' .' → logprob: -13.125161170959473
    4. '.Merge' → logprob: -15.750161170959473
    5. '.union' → logprob: -16.125160217285156
    6. '.m' → logprob: -17.375160217285156
    7. 'merge' → logprob: -17.500160217285156
    8. '.move' → logprob: -17.875160217285156
    9. '}.' → logprob: -18.125160217285156
    10. '.swap' → logprob: -18.375160217285156

Token 606: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -14.000001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(j' → logprob: -14.750001907348633
    5. '(e' → logprob: -16.875001907348633
    6. '(u' → logprob: -17.500001907348633
    7. ' (' → logprob: -19.375001907348633
    8. '(I' → logprob: -19.625001907348633
    9. '(x' → logprob: -19.625001907348633
    10. '(
' → logprob: -19.625001907348633

Token 607: ',j' (ID: 22712)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04674120992422104
    2. ',' → logprob: -3.796741247177124
    3. ',i' → logprob: -3.796741247177124
    4. ',j' → logprob: -7.671741008758545
    5. '(j' → logprob: -8.671741485595703
    6. 'i' → logprob: -9.671741485595703
    7. '(' → logprob: -10.421741485595703
    8. ' ,' → logprob: -10.921741485595703
    9. ' i' → logprob: -11.421741485595703
    10. ' (' → logprob: -11.546741485595703

Token 608: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. ')
' → logprob: -10.750040054321289
    3. ')return' → logprob: -11.625040054321289
    4. '<|end|>' → logprob: -11.750040054321289
    5. ')#' → logprob: -14.500040054321289
    6. '<|end|>' → logprob: -16.00004005432129
    7. '),' → logprob: -16.12504005432129
    8. '())' → logprob: -16.12504005432129
    9. ')n' → logprob: -16.12504005432129
    10. ')view' → logprob: -16.25004005432129

Token 609: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: ' len' (ID: 4631)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.6726682186126709
    2. 'len' → logprob: -1.797668218612671
    3. '_' → logprob: -2.047668218612671
    4. ' uf' → logprob: -2.297668218612671
    5. '__' → logprob: -3.547668218612671
    6. ' len' → logprob: -4.67266845703125
    7. 'set' → logprob: -4.92266845703125
    8. 'all' → logprob: -5.04766845703125
    9. 'not' → logprob: -5.42266845703125
    10. ' __' → logprob: -5.79766845703125

Token 612: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.05976888909935951
    2. '(p' → logprob: -3.6847689151763916
    3. '(work' → logprob: -4.1847686767578125
    4. '(' → logprob: -4.6847686767578125
    5. '(vis' → logprob: -5.4347686767578125
    6. '(set' → logprob: -6.0597686767578125
    7. '(v' → logprob: -7.3097686767578125
    8. 'e' → logprob: -7.5597686767578125
    9. 'work' → logprob: -8.059768676757812
    10. '(w' → logprob: -9.934768676757812

Token 613: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010490112006664276
    2. '[j' → logprob: -4.6354899406433105
    3. 'i' → logprob: -8.385490417480469
    4. '[' → logprob: -8.760490417480469
    5. ')' → logprob: -9.010490417480469
    6. '[e' → logprob: -9.135490417480469
    7. 'e' → logprob: -10.135490417480469
    8. 'j' → logprob: -10.760490417480469
    9. ' [' → logprob: -11.885490417480469
    10. ')i' → logprob: -12.322990417480469

Token 614: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007734515704214573
    2. ')' → logprob: -5.132734298706055
    3. '])' → logprob: -6.882734298706055
    4. ')>' → logprob: -7.632734298706055
    5. '[j' → logprob: -9.132734298706055
    6. ')<' → logprob: -9.882734298706055
    7. ']' → logprob: -10.257734298706055
    8. '[' → logprob: -10.382734298706055
    9. ']>' → logprob: -10.507734298706055
    10. ')]' → logprob: -11.882734298706055

Token 615: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6481050252914429
    2. ' <' → logprob: -0.7731050252914429
    3. '<|end|>' → logprob: -4.773105144500732
    4. ' ==' → logprob: -6.148105144500732
    5. '==' → logprob: -6.148105144500732
    6. '[' → logprob: -7.523105144500732
    7. ' >=' → logprob: -7.648105144500732
    8. '>=' → logprob: -8.023104667663574
    9. ' ' → logprob: -8.523104667663574
    10. '<int' → logprob: -8.898104667663574

Token 616: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.44589126110076904
    2. '2' → logprob: -1.320891261100769
    3. '1' → logprob: -2.6958913803100586
    4. 'MAX' → logprob: -3.9458913803100586
    5. '4' → logprob: -5.320891380310059
    6. 'V' → logprob: -7.820891380310059
    7. '0' → logprob: -8.320891380310059
    8. '5' → logprob: -8.320891380310059
    9. '6' → logprob: -10.758391380310059
    10. '10' → logprob: -10.945891380310059

Token 617: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17735140025615692
    2. ':
' → logprob: -1.9273513555526733
    3. 'e' → logprob: -5.302351474761963
    4. '           ' → logprob: -5.427351474761963
    5. ' and' → logprob: -5.552351474761963
    6. '       ' → logprob: -6.552351474761963
    7. '   ' → logprob: -7.677351474761963
    8. ' or' → logprob: -8.052350997924805
    9. ' e' → logprob: -8.177350997924805
    10. 'and' → logprob: -8.177350997924805

Token 618: ' f' (ID: 285)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9491785168647766
    2. ' del' → logprob: -1.4491784572601318
    3. 'del' → logprob: -1.8241784572601318
    4. '           ' → logprob: -2.324178457260132
    5. ' e' → logprob: -2.324178457260132
    6. '   ' → logprob: -4.574178695678711
    7. '       ' → logprob: -5.824178695678711
    8. 'continue' → logprob: -6.574178695678711
    9. ' ' → logprob: -6.824178695678711
    10. 'break' → logprob: -6.824178695678711

Token 619: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006965662818402052
    2. '.pop' → logprob: -5.006965637207031
    3. 'pop' → logprob: -9.381965637207031
    4. 'i' → logprob: -9.506965637207031
    5. 'e' → logprob: -10.131965637207031
    6. '=' → logprob: -11.756965637207031
    7. 'del' → logprob: -11.881965637207031
    8. '[e' → logprob: -12.131965637207031
    9. '.setdefault' → logprob: -12.256965637207031
    10. '[j' → logprob: -12.381965637207031

Token 620: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5536825060844421
    2. ']' → logprob: -1.303682565689087
    3. ']=' → logprob: -2.678682565689087
    4. ' =' → logprob: -3.178682565689087
    5. ']+=' → logprob: -4.053682327270508
    6. '+=' → logprob: -4.553682327270508
    7. '.append' → logprob: -4.803682327270508
    8. '=None' → logprob: -6.428682327270508
    9. ')' → logprob: -6.428682327270508
    10. '].' → logprob: -7.178682327270508

Token 621: 'e' (ID: 68)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47619882225990295
    2. '1' → logprob: -1.9761987924575806
    3. 'j' → logprob: -2.22619891166687
    4. 'i' → logprob: -2.72619891166687
    5. 'e' → logprob: -3.60119891166687
    6. '2' → logprob: -4.226198673248291
    7. 'False' → logprob: -4.476198673248291
    8. 'f' → logprob: -5.601198673248291
    9. '0' → logprob: -5.601198673248291
    10. 'None' → logprob: -6.226198673248291

Token 622: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031917323358356953
    2. 'i' → logprob: -5.753191947937012
    3. '[' → logprob: -12.503191947937012
    4. '<|end|>' → logprob: -12.503191947937012
    5. ' i' → logprob: -12.628191947937012
    6. '{i' → logprob: -13.753191947937012
    7. '[j' → logprob: -14.503191947937012
    8. '<|end|>' → logprob: -14.628191947937012
    9. '_i' → logprob: -15.003191947937012
    10. 'j' → logprob: -15.503191947937012

Token 623: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5379651188850403
    2. '[i' → logprob: -1.1629650592803955
    3. 'i' → logprob: -2.2879650592803955
    4. ']
' → logprob: -7.287965297698975
    5. '])' → logprob: -7.787965297698975
    6. ')' → logprob: -7.912965297698975
    7. '];' → logprob: -9.162964820861816
    8. '][' → logprob: -9.287964820861816
    9. '[' → logprob: -9.412964820861816
    10. ' i' → logprob: -9.412964820861816

Token 624: ' del' (ID: 1083)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.906333327293396
    2. 'if' → logprob: -1.531333327293396
    3. '       ' → logprob: -2.1563334465026855
    4. ' f' → logprob: -2.5313334465026855
    5. ' if' → logprob: -2.9063334465026855
    6. 'del' → logprob: -2.9063334465026855
    7. 'e' → logprob: -3.6563334465026855
    8. '           ' → logprob: -4.1563334465026855
    9. ' del' → logprob: -4.4063334465026855
    10. ' e' → logprob: -4.7813334465026855

Token 625: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008836151100695133
    2. ' e' → logprob: -4.758836269378662
    3. 'i' → logprob: -8.633835792541504
    4. '(e' → logprob: -11.133835792541504
    5. '[i' → logprob: -11.508835792541504
    6. '(i' → logprob: -11.508835792541504
    7. ' i' → logprob: -12.633835792541504
    8. '   ' → logprob: -13.008835792541504
    9. '[e' → logprob: -13.133835792541504
    10. ' ' → logprob: -14.508835792541504

Token 626: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.874882430769503e-05
    2. '[j' → logprob: -9.750079154968262
    3. '[' → logprob: -11.375079154968262
    4. 'i' → logprob: -12.250079154968262
    5. '[f' → logprob: -13.375079154968262
    6. '[e' → logprob: -13.750079154968262
    7. ' [' → logprob: -14.375079154968262
    8. 'e' → logprob: -15.500079154968262
    9. '```' → logprob: -15.625079154968262
    10. ' i' → logprob: -16.250078201293945

Token 627: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009797642007470131
    2. ']
' → logprob: -4.6347975730896
    3. ']

' → logprob: -11.009798049926758
    4. ']
' → logprob: -11.759798049926758
    5. ' ]' → logprob: -12.009798049926758
    6. '];' → logprob: -12.009798049926758
    7. '<|end|>' → logprob: -12.884798049926758
    8. '],' → logprob: -14.884798049926758
    9. ']\' → logprob: -15.259798049926758
    10. ']>' → logprob: -15.384798049926758

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008666928857564926
    2. '<|end|>' → logprob: -5.2586669921875
    3. '   ' → logprob: -5.7586669921875
    4. '        ' → logprob: -9.1336669921875
    5. '<|end|>' → logprob: -9.7586669921875
    6. '...' → logprob: -10.7586669921875
    7. '           ' → logprob: -10.8836669921875
    8. '.' → logprob: -11.0086669921875
    9. '    ' → logprob: -11.8836669921875
    10. ')' → logprob: -11.8836669921875

Token 629: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030400342075154185
    2. '<|end|>' → logprob: -8.250304222106934
    3. '...' → logprob: -11.125304222106934
    4. '           ' → logprob: -12.125304222106934
    5. '        ' → logprob: -12.250304222106934
    6. '   ' → logprob: -12.500304222106934
    7. '<|end|>' → logprob: -13.000304222106934
    8. ' if' → logprob: -13.250304222106934
    9. 'f' → logprob: -13.375304222106934
    10. '#' → logprob: -13.625304222106934

Token 630: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.14316773414611816
    2. 'len' → logprob: -2.018167734146118
    3. '(len' → logprob: -7.643167495727539
    4. '	len' → logprob: -12.768167495727539
    5. '   ' → logprob: -13.018167495727539
    6. '[len' → logprob: -13.268167495727539
    7. '    ' → logprob: -13.643167495727539
    8. ',len' → logprob: -14.018167495727539
    9. '<len' → logprob: -14.268167495727539
    10. '=len' → logprob: -14.518167495727539

Token 631: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0014360661152750254
    2. '(f' → logprob: -6.876436233520508
    3. '(j' → logprob: -7.876436233520508
    4. 'e' → logprob: -11.001436233520508
    5. '(' → logprob: -12.501436233520508
    6. ' (' → logprob: -14.001436233520508
    7. '[e' → logprob: -14.251436233520508
    8. '(i' → logprob: -14.626436233520508
    9. '	e' → logprob: -15.626436233520508
    10. '```' → logprob: -15.751436233520508

Token 632: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007372042746283114
    2. '[i' → logprob: -7.875737190246582
    3. '[f' → logprob: -8.500737190246582
    4. 'j' → logprob: -9.250737190246582
    5. '[' → logprob: -10.875737190246582
    6. '```' → logprob: -12.125737190246582
    7. '{' → logprob: -12.250737190246582
    8. '
' → logprob: -12.250737190246582
    9. ' [' → logprob: -12.500737190246582
    10. '   ' → logprob: -12.625737190246582

Token 633: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5214354395866394
    2. ']==' → logprob: -1.3964354991912842
    3. ')==' → logprob: -1.8964354991912842
    4. ')' → logprob: -4.896435260772705
    5. '==' → logprob: -7.271435260772705
    6. ']' → logprob: -8.771435737609863
    7. '[j' → logprob: -8.771435737609863
    8. ')]' → logprob: -9.521435737609863
    9. ' )' → logprob: -9.771435737609863
    10. '）' → logprob: -10.396435737609863

Token 634: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00015383612480945885
    2. ' ==' → logprob: -8.875153541564941
    3. ']==' → logprob: -12.125153541564941
    4. ')==' → logprob: -12.250153541564941
    5. '()==' → logprob: -13.250153541564941
    6. '=' → logprob: -14.375153541564941
    7. '==
' → logprob: -14.750153541564941
    8. '!=' → logprob: -15.000153541564941
    9. '<' → logprob: -15.750153541564941
    10. '[' → logprob: -16.125154495239258

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.452426608419046e-05
    2. ' ' → logprob: -10.37503433227539
    3. 'def' → logprob: -14.25003433227539
    4. '   ' → logprob: -14.37503433227539
    5. '1' → logprob: -14.50003433227539
    6. '.' → logprob: -15.00003433227539
    7. '=' → logprob: -15.50003433227539
    8. '  ' → logprob: -15.56253433227539
    9. '```' → logprob: -16.25003433227539
    10. '<|end|>' → logprob: -16.25003433227539

Token 636: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001348211313597858
    2. 'f' → logprob: -7.12634801864624
    3. ' f' → logprob: -8.376348495483398
    4. ':f' → logprob: -8.751348495483398
    5. '=' → logprob: -9.751348495483398
    6. ' :' → logprob: -10.001348495483398
    7. '=f' → logprob: -11.126348495483398
    8. ':
' → logprob: -11.501348495483398
    9. '==' → logprob: -12.251348495483398
    10. ' ' → logprob: -12.501348495483398

Token 637: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.14268247783184052
    2. 'f' → logprob: -2.0176825523376465
    3. '	f' → logprob: -12.392682075500488
    4. '   ' → logprob: -14.017682075500488
    5. '           ' → logprob: -14.017682075500488
    6. '       ' → logprob: -14.517682075500488
    7. ' ' → logprob: -14.892682075500488
    8. ' ' → logprob: -16.017683029174805
    9. '               ' → logprob: -16.642683029174805
    10. '
' → logprob: -16.705183029174805

Token 638: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.700132997939363e-05
    2. 'j' → logprob: -11.000017166137695
    3. '```' → logprob: -16.625017166137695
    4. '	j' → logprob: -17.250017166137695
    5. '
' → logprob: -17.250017166137695
    6. '[' → logprob: -17.875017166137695
    7. '[i' → logprob: -18.000017166137695
    8. '{' → logprob: -18.125017166137695
    9. '[js' → logprob: -19.250017166137695
    10. '[
' → logprob: -19.250017166137695

Token 639: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0064142015762627125
    2. '=' → logprob: -5.756414413452148
    3. '=e' → logprob: -6.131414413452148
    4. ']' → logprob: -7.506414413452148
    5. '=j' → logprob: -7.631414413452148
    6. '}=' → logprob: -12.006414413452148
    7. '']=' → logprob: -12.256414413452148
    8. '=f' → logprob: -12.256414413452148
    9. '"]=' → logprob: -13.381414413452148
    10. ']==' → logprob: -13.506414413452148

Token 640: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.027225754223764e-05
    2. ' e' → logprob: -9.750060081481934
    3. '[' → logprob: -14.750060081481934
    4. '	e' → logprob: -15.000060081481934
    5. 'j' → logprob: -15.250060081481934
    6. '[e' → logprob: -15.250060081481934
    7. '   ' → logprob: -15.375060081481934
    8. 'ej' → logprob: -15.875060081481934
    9. '[]' → logprob: -16.87506103515625
    10. ' ' → logprob: -17.00006103515625

Token 641: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.043087463825941086
    2. 'j' → logprob: -3.1680874824523926
    3. '[' → logprob: -10.418087005615234
    4. ']' → logprob: -11.043087005615234
    5. '```' → logprob: -11.168087005615234
    6. '	j' → logprob: -12.293087005615234
    7. '(j' → logprob: -12.293087005615234
    8. '   ' → logprob: -12.793087005615234
    9. ';j' → logprob: -12.918087005615234
    10. '[i' → logprob: -13.043087005615234

Token 642: '];' (ID: 11464)
  Prédit: ';'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';' → logprob: -0.01121935062110424
    2. '<|end|>' → logprob: -4.511219501495361
    3. ';j' → logprob: -10.011219024658203
    4. ';}' → logprob: -10.886219024658203
    5. ']' → logprob: -11.136219024658203
    6. ')' → logprob: -11.261219024658203
    7. ';if' → logprob: -11.511219024658203
    8. ';
' → logprob: -11.636219024658203
    9. '<|end|>' → logprob: -11.636219024658203
    10. '```' → logprob: -11.886219024658203

Token 643: ' del' (ID: 1083)
  Prédit: ' del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' del' → logprob: -0.40328720211982727
    2. 'del' → logprob: -1.1532871723175049
    3. '       ' → logprob: -4.153287410736084
    4. '	del' → logprob: -8.403286933898926
    5. '           ' → logprob: -8.528286933898926
    6. '   ' → logprob: -9.278286933898926
    7. '               ' → logprob: -11.028286933898926
    8. '      ' → logprob: -11.903286933898926
    9. 'def' → logprob: -12.153286933898926
    10. ' ' → logprob: -12.153286933898926

Token 644: ' e' (ID: 319)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07717623561620712
    2. 'e' → logprob: -2.827176332473755
    3. 'j' → logprob: -4.202176094055176
    4. '(j' → logprob: -9.452176094055176
    5. ' e' → logprob: -10.452176094055176
    6. '```' → logprob: -11.827176094055176
    7. '	j' → logprob: -12.202176094055176
    8. '[' → logprob: -13.077176094055176
    9. ' j' → logprob: -13.202176094055176
    10. '   ' → logprob: -13.202176094055176

Token 645: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00012833021173719317
    2. '[i' → logprob: -9.250128746032715
    3. 'j' → logprob: -10.375128746032715
    4. '{' → logprob: -15.125128746032715
    5. '[f' → logprob: -15.500128746032715
    6. '[' → logprob: -15.625128746032715
    7. '	j' → logprob: -16.5001277923584
    8. 'i' → logprob: -17.0001277923584
    9. '```' → logprob: -17.0001277923584
    10. 'e' → logprob: -17.0001277923584

Token 646: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003258876968175173
    2. ')' → logprob: -6.62825870513916
    3. '[j' → logprob: -6.62825870513916
    4. '])' → logprob: -8.62825870513916
    5. 'j' → logprob: -8.75325870513916
    6. '}' → logprob: -9.50325870513916
    7. ']
' → logprob: -9.62825870513916
    8. '[' → logprob: -9.87825870513916
    9. ']}' → logprob: -10.87825870513916
    10. ')]' → logprob: -11.00325870513916

Token 647: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15509359538555145
    2. '<|end|>' → logprob: -2.4050936698913574
    3. 'work' → logprob: -3.2800936698913574
    4. 'def' → logprob: -5.530093669891357
    5. 'while' → logprob: -6.030093669891357
    6. 'set' → logprob: -6.280093669891357
    7. 'for' → logprob: -6.405093669891357
    8. 'if' → logprob: -7.030093669891357
    9. '  ' → logprob: -7.405093669891357
    10. '    ' → logprob: -8.0300931930542

Token 648: ' ek' (ID: 6033)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19635705649852753
    2. '<|end|>' → logprob: -1.821357011795044
    3. 'work' → logprob: -4.446357250213623
    4. ' work' → logprob: -6.446357250213623
    5. 'def' → logprob: -7.821357250213623
    6. '<|end|>' → logprob: -8.196356773376465
    7. '#' → logprob: -8.321356773376465
    8. '```' → logprob: -8.446356773376465
    9. '  ' → logprob: -8.571356773376465
    10. '	work' → logprob: -8.571356773376465

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5779199600219727
    2. 'eys' → logprob: -1.5779199600219727
    3. '=' → logprob: -2.2029199600219727
    4. 'y' → logprob: -3.0779199600219727
    5. '.keys' → logprob: -3.7029199600219727
    6. 's' → logprob: -4.452919960021973
    7. 'ys' → logprob: -5.202919960021973
    8. 'i' → logprob: -5.327919960021973
    9. '=[]' → logprob: -5.452919960021973
    10. 'ey' → logprob: -5.577919960021973

Token 650: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3277027904987335
    2. 'next' → logprob: -2.202702760696411
    3. '[list' → logprob: -3.577702760696411
    4. '{' → logprob: -3.702702760696411
    5. 'f' → logprob: -3.827702760696411
    6. 'set' → logprob: -3.952702760696411
    7. '[e' → logprob: -4.32770299911499
    8. '[next' → logprob: -4.57770299911499
    9. '[f' → logprob: -4.95270299911499
    10. '[(' → logprob: -4.95270299911499

Token 651: '(e' (ID: 3454)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0014534479705616832
    2. '(e' → logprob: -6.626453399658203
    3. '(set' → logprob: -9.751453399658203
    4. '(sorted' → logprob: -10.126453399658203
    5. 'f' → logprob: -11.376453399658203
    6. '(' → logprob: -11.501453399658203
    7. '((' → logprob: -12.751453399658203
    8. '(range' → logprob: -14.001453399658203
    9. '(map' → logprob: -14.126453399658203
    10. '(filter' → logprob: -14.626453399658203

Token 652: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.0005485066794790328
    2. 'keys' → logprob: -8.250548362731934
    3. ')' → logprob: -8.375548362731934
    4. '().' → logprob: -10.250548362731934
    5. '.values' → logprob: -12.875548362731934
    6. '.' → logprob: -13.000548362731934
    7. '	keys' → logprob: -13.000548362731934
    8. '())' → logprob: -13.125548362731934
    9. '.k' → logprob: -13.125548362731934
    10. '(keys' → logprob: -13.625548362731934

Token 653: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002010837197303772
    2. '()' → logprob: -6.627010822296143
    3. '())
' → logprob: -7.377010822296143
    4. ')' → logprob: -10.2520112991333
    5. '())[' → logprob: -11.1270112991333
    6. ' ())' → logprob: -12.3770112991333
    7. '();)' → logprob: -13.7520112991333
    8. '());' → logprob: -13.8770112991333
    9. '())
' → logprob: -13.8770112991333
    10. '()[' → logprob: -14.5020112991333

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7351313829421997
    2. ' if' → logprob: -1.3601313829421997
    3. '[' → logprob: -1.6101313829421997
    4. ' ek' → logprob: -3.73513126373291
    5. 'if' → logprob: -4.61013126373291
    6. ' i' → logprob: -4.73513126373291
    7. 'e' → logprob: -6.11013126373291
    8. '[i' → logprob: -6.23513126373291
    9. ' for' → logprob: -6.36013126373291
    10. 'i' → logprob: -6.36013126373291

Token 655: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3096666932106018
    2. 'if' → logprob: -3.059666633605957
    3. 'x' → logprob: -3.184666633605957
    4. ' i' → logprob: -3.309666633605957
    5. 'a' → logprob: -3.559666633605957
    6. 'f' → logprob: -3.684666633605957
    7. 'u' → logprob: -3.684666633605957
    8. '   ' → logprob: -4.559666633605957
    9. 'for' → logprob: -4.559666633605957
    10. 'k' → logprob: -4.809666633605957

Token 656: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9764266014099121
    2. ' =' → logprob: -1.101426601409912
    3. 'r' → logprob: -2.101426601409912
    4. '0' → logprob: -2.851426601409912
    5. '1' → logprob: -2.851426601409912
    6. '=' → logprob: -3.351426601409912
    7. '=p' → logprob: -4.976426601409912
    8. 'f' → logprob: -6.476426601409912
    9. '=[' → logprob: -6.601426601409912
    10. 'rev' → logprob: -6.601426601409912

Token 657: ' ek' (ID: 6033)
  Prédit: 'ek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ek' → logprob: -0.23140744864940643
    2. '[' → logprob: -1.7314074039459229
    3. '[e' → logprob: -4.231407642364502
    4. '[f' → logprob: -5.356407642364502
    5. ' ek' → logprob: -6.106407642364502
    6. '[]' → logprob: -6.606407642364502
    7. 'f' → logprob: -6.606407642364502
    8. 'e' → logprob: -6.856407642364502
    9. '[]
' → logprob: -7.106407642364502
    10. 'ef' → logprob: -7.106407642364502

Token 658: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00740086892619729
    2. '+' → logprob: -5.382400989532471
    3. '0' → logprob: -6.507400989532471
    4. '+p' → logprob: -7.757400989532471
    5. '+[' → logprob: -8.257400512695312
    6. ' +' → logprob: -8.257400512695312
    7. '.pop' → logprob: -8.507400512695312
    8. 'p' → logprob: -9.632400512695312
    9. '2' → logprob: -10.382400512695312
    10. '*' → logprob: -11.132400512695312

Token 659: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -10.875020027160645
    3. '1' → logprob: -14.937520027160645
    4. ':' → logprob: -16.000019073486328
    5. '
' → logprob: -16.625019073486328
    6. '   ' → logprob: -16.875019073486328
    7. '-' → logprob: -17.125019073486328
    8. '(' → logprob: -17.250019073486328
    9. '۰' → logprob: -17.437519073486328
    10. ']' → logprob: -17.750019073486328

Token 660: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004542623180896044
    2. ']
' → logprob: -5.879542827606201
    3. ' ]' → logprob: -6.379542827606201
    4. 'p' → logprob: -11.504542350769043
    5. ' ]
' → logprob: -11.879542350769043
    6. ')' → logprob: -12.129542350769043
    7. '<|end|>' → logprob: -12.254542350769043
    8. ']
' → logprob: -13.379542350769043
    9. ';p' → logprob: -13.879542350769043
    10. ',p' → logprob: -13.879542350769043

Token 661: ' cur' (ID: 4396)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4165259301662445
    2. 'work' → logprob: -1.416525959968567
    3. 'q' → logprob: -2.5415258407592773
    4. 'f' → logprob: -5.916525840759277
    5. 'for' → logprob: -6.166525840759277
    6. 'if' → logprob: -6.416525840759277
    7. 'path' → logprob: -6.416525840759277
    8. 'res' → logprob: -6.541525840759277
    9. 'cur' → logprob: -6.791525840759277
    10. '   ' → logprob: -7.166525840759277

Token 662: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255842536687851
    2. '=' → logprob: -1.6005842685699463
    3. '=p' → logprob: -9.225584030151367
    4. ',' → logprob: -10.350584030151367
    5. 's' → logprob: -12.350584030151367
    6. '=f' → logprob: -12.975584030151367
    7. '=[]' → logprob: -13.100584030151367
    8. '=int' → logprob: -13.225584030151367
    9. '	' → logprob: -13.475584030151367
    10. '   ' → logprob: -13.475584030151367

Token 663: ' e' (ID: 319)
  Prédit: 'ek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ek' → logprob: -0.18125058710575104
    2. 'p' → logprob: -1.8062505722045898
    3. 'e' → logprob: -7.68125057220459
    4. ' ek' → logprob: -7.80625057220459
    5. 'f' → logprob: -8.68125057220459
    6. '1' → logprob: -9.43125057220459
    7. '[' → logprob: -9.68125057220459
    8. '0' → logprob: -10.18125057220459
    9. 'pend' → logprob: -10.18125057220459
    10. 'None' → logprob: -10.55625057220459

Token 664: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.062059223651885986
    2. 'p' → logprob: -2.812059164047241
    3. '[' → logprob: -9.43705940246582
    4. ' p' → logprob: -12.93705940246582
    5. '[k' → logprob: -13.18705940246582
    6. '.pop' → logprob: -13.56205940246582
    7. '```' → logprob: -14.18705940246582
    8. 'k' → logprob: -14.43705940246582
    9. '=p' → logprob: -14.56205940246582
    10. '(p' → logprob: -14.68705940246582

Token 665: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000596043246332556
    2. '[' → logprob: -7.500596046447754
    3. ' ][' → logprob: -11.500596046447754
    4. '0' → logprob: -11.500596046447754
    5. '][-' → logprob: -12.000596046447754
    6. '].' → logprob: -12.250596046447754
    7. ']' → logprob: -12.375596046447754
    8. '1' → logprob: -13.000596046447754
    9. 'p' → logprob: -13.750596046447754
    10. ']
' → logprob: -14.000596046447754

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.875005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '(' → logprob: -14.750005722045898
    5. ':' → logprob: -16.5625057220459
    6. '   ' → logprob: -16.6875057220459
    7. '
' → logprob: -16.6875057220459
    8. 'p' → logprob: -17.5625057220459
    9. '[' → logprob: -18.0000057220459
    10. '-' → logprob: -18.0625057220459

Token 667: '];' (ID: 11464)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12142011523246765
    2. ']
' → logprob: -2.37142014503479
    3. ';' → logprob: -4.746419906616211
    4. '
' → logprob: -4.871419906616211
    5. '   ' → logprob: -5.871419906616211
    6. 'while' → logprob: -7.371419906616211
    7. 'p' → logprob: -7.996419906616211
    8. ';p' → logprob: -8.121419906616211
    9. '];' → logprob: -8.746419906616211
    10. ']
' → logprob: -9.246419906616211

Token 668: ' prev' (ID: 10258)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.08837590366601944
    2. 'while' → logprob: -2.7133758068084717
    3. 'f' → logprob: -4.713376045227051
    4. 'path' → logprob: -6.088376045227051
    5. 'res' → logprob: -6.213376045227051
    6. 'print' → logprob: -6.713376045227051
    7. '   ' → logprob: -7.713376045227051
    8. 'ans' → logprob: -7.963376045227051
    9. 'printer' → logprob: -8.58837604522705
    10. 'pr' → logprob: -8.71337604522705

Token 669: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20179034769535065
    2. ' =' → logprob: -1.7017903327941895
    3. '=p' → logprob: -8.326790809631348
    4. ',' → logprob: -8.951790809631348
    5. 'p' → logprob: -13.201790809631348
    6. ',p' → logprob: -13.576790809631348
    7. ' ' → logprob: -14.326790809631348
    8. '=None' → logprob: -15.076790809631348
    9. '=
' → logprob: -15.451790809631348
    10. ' p' → logprob: -15.826790809631348

Token 670: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002678920282050967
    2. '-' → logprob: -8.75026798248291
    3. ' p' → logprob: -9.87526798248291
    4. 'None' → logprob: -10.00026798248291
    5. '   ' → logprob: -12.75026798248291
    6. '-p' → logprob: -13.12526798248291
    7. '1' → logprob: -13.25026798248291
    8. ' ' → logprob: -13.25026798248291
    9. '0' → logprob: -14.00026798248291
    10. ' -' → logprob: -14.12526798248291

Token 671: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.024063363671302795
    2. '
' → logprob: -4.524063587188721
    3. '   ' → logprob: -4.774063587188721
    4. 'work' → logprob: -5.524063587188721
    5. '[' → logprob: -9.024063110351562
    6. ' while' → logprob: -9.274063110351562
    7. '    
' → logprob: -9.524063110351562
    8. '[]' → logprob: -9.899063110351562
    9. '[]
' → logprob: -10.024063110351562
    10. ';' → logprob: -10.399063110351562

Token 672: '   ' (ID: 271)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.4970639646053314
    2. 'while' → logprob: -1.1220639944076538
    3. '   ' → logprob: -2.7470638751983643
    4. '
' → logprob: -7.122064113616943
    5. '```' → logprob: -7.622064113616943
    6. ' while' → logprob: -9.122063636779785
    7. '	work' → logprob: -9.247063636779785
    8. '    
' → logprob: -9.372063636779785
    9. 'wrk' → logprob: -9.372063636779785
    10. ' work' → logprob: -9.747063636779785

Token 673: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -0.1280597746372223
    2. 'while' → logprob: -2.7530598640441895
    3. '   ' → logprob: -2.8780598640441895
    4. ' while' → logprob: -9.753059387207031
    5. ' work' → logprob: -9.878059387207031
    6. 'res' → logprob: -10.378059387207031
    7. '	work' → logprob: -10.878059387207031
    8. '       ' → logprob: -11.128059387207031
    9. 'ans' → logprob: -11.503059387207031
    10. 'wrk' → logprob: -12.128059387207031

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16909754276275635
    2. ' =' → logprob: -1.9190975427627563
    3. '=[]' → logprob: -5.169097423553467
    4. '=[' → logprob: -5.794097423553467
    5. '[:]' → logprob: -9.919097900390625
    6. ' =[' → logprob: -10.794097900390625
    7. '.append' → logprob: -11.169097900390625
    8. '=[]
' → logprob: -12.544097900390625
    9. '[' → logprob: -12.919097900390625
    10. '=list' → logprob: -13.419097900390625

Token 675: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0017525337170809507
    2. '[f' → logprob: -7.1267523765563965
    3. '[' → logprob: -7.8767523765563965
    4. '[e' → logprob: -8.001752853393555
    5. '[cur' → logprob: -8.501752853393555
    6. '[j' → logprob: -11.751752853393555
    7. ' [' → logprob: -12.376752853393555
    8. '[i' → logprob: -12.376752853393555
    9. '[]' → logprob: -12.626752853393555
    10. '[a' → logprob: -13.751752853393555

Token 676: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.387667715549469
    2. 'cur' → logprob: -1.1376676559448242
    3. 'prev' → logprob: -7.387667655944824
    4. ' p' → logprob: -9.262667655944824
    5. '   ' → logprob: -10.512667655944824
    6. ' cur' → logprob: -10.637667655944824
    7. '1' → logprob: -12.262667655944824
    8. 'ek' → logprob: -12.762667655944824
    9. '(cur' → logprob: -12.887667655944824
    10. '[cur' → logprob: -13.012667655944824

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006279755849391222
    2. ']' → logprob: -5.131279945373535
    3. ',p' → logprob: -9.256279945373535
    4. ']+' → logprob: -9.256279945373535
    5. ' ,' → logprob: -9.756279945373535
    6. '[cur' → logprob: -10.131279945373535
    7. ',current' → logprob: -10.506279945373535
    8. 'cur' → logprob: -11.631279945373535
    9. ' ]' → logprob: -11.756279945373535
    10. '(cur' → logprob: -12.131279945373535

Token 678: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -9.627176768844947e-05
    2. ' cur' → logprob: -9.250096321105957
    3. '[cur' → logprob: -18.25009536743164
    4. '   ' → logprob: -18.62509536743164
    5. '	cur' → logprob: -18.62509536743164
    6. '(cur' → logprob: -19.25009536743164
    7. ' ' → logprob: -20.62509536743164
    8. '  ' → logprob: -22.12509536743164
    9. '.cur' → logprob: -22.50009536743164
    10. '-cur' → logprob: -22.62509536743164

Token 679: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18333986401557922
    2. ']' → logprob: -1.8083398342132568
    3. ']
' → logprob: -6.308340072631836
    4. '[cur' → logprob: -7.058340072631836
    5. 'cur' → logprob: -7.558340072631836
    6. ' ]' → logprob: -8.808340072631836
    7. ' ,' → logprob: -9.433340072631836
    8. ']+' → logprob: -9.808340072631836
    9. '(cur' → logprob: -10.183340072631836
    10. ',current' → logprob: -11.433340072631836

Token 680: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 681: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0011930868495255709
    2. '   ' → logprob: -6.876193046569824
    3. ' while' → logprob: -9.001193046569824
    4. '
' → logprob: -10.751193046569824
    5. '```' → logprob: -11.876193046569824
    6. '	while' → logprob: -12.376193046569824
    7. 'for' (adapté à ' for') → logprob: -12.501193046569824
    8. '    
' → logprob: -15.251193046569824
    9. 'While' → logprob: -15.751193046569824
    10. '``' → logprob: -16.12619400024414

Token 682: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0005113297956995666
    2. 'range' → logprob: -8.375511169433594
    3. 'i' → logprob: -8.500511169433594
    4. '_i' → logprob: -10.125511169433594
    5. '_range' → logprob: -11.250511169433594
    6. ' _' → logprob: -13.000511169433594
    7. '__' → logprob: -13.125511169433594
    8. 'k' → logprob: -13.375511169433594
    9. ' range' → logprob: -13.375511169433594
    10. '_]' → logprob: -13.500511169433594

Token 683: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04422152042388916
    2. 'in' → logprob: -3.1692214012145996
    3. 'range' → logprob: -6.9192214012146
    4. ' ' → logprob: -9.169221878051758
    5. ' range' → logprob: -9.794221878051758
    6. '  ' → logprob: -10.419221878051758
    7. '1' → logprob: -11.294221878051758
    8. 'work' → logprob: -11.919221878051758
    9. '   ' → logprob: -12.294221878051758
    10. 'e' → logprob: -12.669221878051758

Token 684: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036540029104799032
    2. ' range' → logprob: -5.6286540031433105
    3. 'e' → logprob: -10.253653526306152
    4. 'ek' → logprob: -12.628653526306152
    5. '   ' → logprob: -13.003653526306152
    6. 'r' → logprob: -13.253653526306152
    7. 'rang' → logprob: -13.253653526306152
    8. ' ' → logprob: -13.253653526306152
    9. '[' → logprob: -13.378653526306152
    10. 'ran' → logprob: -14.253653526306152

Token 685: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.07071967422962189
    2. '(len' → logprob: -2.9457197189331055
    3. '(V' → logprob: -4.4457197189331055
    4. '(' → logprob: -6.4457197189331055
    5. 'len' → logprob: -6.8207197189331055
    6. 'vv' → logprob: -6.9457197189331055
    7. ' vv' → logprob: -9.070719718933105
    8. 'VV' → logprob: -9.570719718933105
    9. '(MAX' → logprob: -10.320719718933105
    10. '((' → logprob: -10.445719718933105

Token 686: 'v' (ID: 85)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07181011140346527
    2. '(' → logprob: -3.571810007095337
    3. '1' → logprob: -4.196810245513916
    4. 'len' → logprob: -4.321810245513916
    5. '(len' → logprob: -4.696810245513916
    6. '3' → logprob: -6.696810245513916
    7. '4' → logprob: -7.321810245513916
    8. '8' → logprob: -8.446809768676758
    9. '6' → logprob: -8.446809768676758
    10. '10' → logprob: -8.446809768676758

Token 687: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016178183257579803
    2. ' -' → logprob: -4.141178131103516
    3. '):
' → logprob: -9.266178131103516
    4. '):' → logprob: -10.391178131103516
    5. '2' → logprob: -12.016178131103516
    6. ' ' → logprob: -12.516178131103516
    7. '   ' → logprob: -12.766178131103516
    8. '*' → logprob: -13.516178131103516
    9. ':' → logprob: -14.391178131103516
    10. ')' → logprob: -14.391178131103516

Token 688: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008409373462200165
    2. '3' → logprob: -5.13340950012207
    3. '4' → logprob: -6.75840950012207
    4. '1' → logprob: -6.75840950012207
    5. '-' → logprob: -9.75840950012207
    6. '5' → logprob: -10.38340950012207
    7. '6' → logprob: -10.88340950012207
    8. ' ' → logprob: -11.00840950012207
    9. '   ' → logprob: -11.63340950012207
    10. '7' → logprob: -12.25840950012207

Token 689: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022430546581745148
    2. '):' → logprob: -4.897430419921875
    3. '   ' → logprob: -5.022430419921875
    4. ':
' → logprob: -5.022430419921875
    5. ':' → logprob: -7.022430419921875
    6. '):
' → logprob: -8.147430419921875
    7. ' ):
' → logprob: -9.022430419921875
    8. '       ' → logprob: -9.397430419921875
    9. '():
' → logprob: -10.022430419921875
    10. ' :
' → logprob: -10.397430419921875

Token 690: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003432454075664282
    2. 'n' → logprob: -6.378432273864746
    3. '       ' → logprob: -7.378432273864746
    4. ' nxt' → logprob: -7.878432273864746
    5. 'next' → logprob: -8.253432273864746
    6. 'tmp' → logprob: -8.878432273864746
    7. 'if' → logprob: -9.128432273864746
    8. 'temp' → logprob: -10.253432273864746
    9. 'np' → logprob: -10.378432273864746
    10. 'prev' → logprob: -10.503432273864746

Token 691: ' p' (ID: 275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33871710300445557
    2. '   ' → logprob: -1.3387171030044556
    3. 'p' (adapté à ' p') → logprob: -4.963716983795166
    4. 'np' → logprob: -5.338716983795166
    5. 'nn' → logprob: -6.463716983795166
    6. 'pn' → logprob: -6.588716983795166
    7. '_n' → logprob: -6.588716983795166
    8. 'tmp' → logprob: -6.588716983795166
    9. 'ne' → logprob: -6.838716983795166
    10. 't' → logprob: -7.088716983795166

Token 692: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3225908577442169
    2. '=' → logprob: -1.8225908279418945
    3. ' =' → logprob: -2.8225908279418945
    4. 'cur' → logprob: -3.6975908279418945
    5. 'prev' → logprob: -4.0725908279418945
    6. 'rev' → logprob: -5.3225908279418945
    7. 'p' → logprob: -5.5725908279418945
    8. ',p' → logprob: -7.0725908279418945
    9. 'tmp' → logprob: -7.1975908279418945
    10. '[cur' → logprob: -7.5725908279418945

Token 693: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.006686836946755648
    2. 'work' → logprob: -5.506686687469482
    3. ' cur' → logprob: -6.381686687469482
    4. '(cur' → logprob: -7.881686687469482
    5. 'e' → logprob: -8.63168716430664
    6. '[cur' → logprob: -8.75668716430664
    7. '[' → logprob: -10.25668716430664
    8. '   ' → logprob: -10.75668716430664
    9. 'prev' → logprob: -10.75668716430664
    10. 'next' → logprob: -10.88168716430664

Token 694: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3342042565345764
    2. 'cur' → logprob: -2.4592041969299316
    3. '[cur' → logprob: -2.4592041969299316
    4. '   ' → logprob: -3.3342041969299316
    5. ' =' → logprob: -3.4592041969299316
    6. ' cur' → logprob: -4.334204196929932
    7. '=' → logprob: -4.459204196929932
    8. ';' → logprob: -4.584204196929932
    9. 'prev' → logprob: -5.834204196929932
    10. '	cur' → logprob: -5.959204196929932

Token 695: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4583580195903778
    2. 'cur' → logprob: -1.2083580493927002
    3. 'prev' → logprob: -2.8333580493927
    4. ' cur' → logprob: -5.458357810974121
    5. ',' → logprob: -6.333357810974121
    6. 'next' → logprob: -6.583357810974121
    7. ' prev' → logprob: -7.708357810974121
    8. '[cur' → logprob: -7.958357810974121
    9. '       ' → logprob: -8.208357810974121
    10. 'tmp' → logprob: -8.583357810974121

Token 696: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.18110528588294983
    2. 'n' → logprob: -1.9311052560806274
    3. 'tmp' → logprob: -5.056105136871338
    4. 'nx' → logprob: -5.306105136871338
    5. 'p' → logprob: -6.556105136871338
    6. 'prev' → logprob: -6.681105136871338
    7. 'lst' → logprob: -7.306105136871338
    8. 'if' → logprob: -7.431105136871338
    9. 'nn' → logprob: -7.556105136871338
    10. 'c' → logprob: -7.556105136871338

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01129266619682312
    2. ' =' → logprob: -4.511292457580566
    3. ',' → logprob: -8.386292457580566
    4. '=p' → logprob: -11.761292457580566
    5. '=e' → logprob: -12.636292457580566
    6. ',e' → logprob: -12.886292457580566
    7. ',p' → logprob: -13.886292457580566
    8. '=[' → logprob: -15.136292457580566
    9. '=f' → logprob: -15.136292457580566
    10. '=list' → logprob: -15.136292457580566

Token 698: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4697458744049072
    2. 'e' → logprob: -1.0947458744049072
    3. '[e' → logprob: -4.094745635986328
    4. '[f' → logprob: -5.094745635986328
    5. '(e' → logprob: -5.469745635986328
    6. 'next' → logprob: -5.844745635986328
    7. '[' → logprob: -6.094745635986328
    8. ' f' → logprob: -6.219745635986328
    9. '(f' → logprob: -6.344745635986328
    10. ' e' → logprob: -7.094745635986328

Token 699: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.09858956187963486
    2. '[cur' → logprob: -2.7235896587371826
    3. '[' → logprob: -3.5985896587371826
    4. 'p' → logprob: -7.2235894203186035
    5. 'cur' → logprob: -9.473589897155762
    6. 'prev' → logprob: -9.848589897155762
    7. '.get' → logprob: -11.598589897155762
    8. '[curr' → logprob: -12.223589897155762
    9. '.setdefault' → logprob: -12.848589897155762
    10. 'get' → logprob: -13.848589897155762

Token 700: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011987409379798919
    2. '[' → logprob: -9.125120162963867
    3. '[cur' → logprob: -11.750120162963867
    4. ']' → logprob: -14.000120162963867
    5. ' ][' → logprob: -14.000120162963867
    6. '   ' → logprob: -15.125120162963867
    7. '1' → logprob: -15.375120162963867
    8. 'cur' → logprob: -15.750120162963867
    9. '][-' → logprob: -15.875120162963867
    10. '][_' → logprob: -16.125120162963867

Token 701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024744870141148567
    2. '1' → logprob: -3.774744987487793
    3. '(' → logprob: -7.399744987487793
    4. 'prev' → logprob: -7.649744987487793
    5. ' ' → logprob: -8.774744987487793
    6. 'cur' → logprob: -9.274744987487793
    7. 'p' → logprob: -10.024744987487793
    8. 'f' → logprob: -10.399744987487793
    9. '(prev' → logprob: -10.899744987487793
    10. 'int' → logprob: -11.149744987487793

Token 702: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6099700331687927
    2. 'if' → logprob: -1.3599700927734375
    3. ']' → logprob: -1.6099700927734375
    4. ']
' → logprob: -10.359970092773438
    5. '
' → logprob: -11.734970092773438
    6. '	if' → logprob: -12.234970092773438
    7. ' ]' → logprob: -12.359970092773438
    8. ']+' → logprob: -12.734970092773438
    9. ';if' → logprob: -12.859970092773438
    10. ')' → logprob: -13.109970092773438

Token 703: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47846662998199463
    2. 'if' → logprob: -0.9784666299819946
    3. '       ' → logprob: -6.103466510772705
    4. '[' → logprob: -6.478466510772705
    5. '[cur' → logprob: -7.478466510772705
    6. '           ' → logprob: -10.853466987609863
    7. '   ' → logprob: -12.103466987609863
    8. 'cur' → logprob: -12.228466987609863
    9. 'If' → logprob: -13.353466987609863
    10. ' ' → logprob: -13.353466987609863

Token 704: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0009449340868741274
    2. ' f' → logprob: -7.125945091247559
    3. 'prev' → logprob: -9.375945091247559
    4. 'cur' → logprob: -10.000945091247559
    5. 'p' → logprob: -12.000945091247559
    6. '   ' → logprob: -13.500945091247559
    7. ' ' → logprob: -14.250945091247559
    8. '(f' → logprob: -14.250945091247559
    9. ' cur' → logprob: -14.625945091247559
    10. '  ' → logprob: -15.250945091247559

Token 705: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.11304004490375519
    2. 'p' → logprob: -2.613039970397949
    3. '[cur' → logprob: -3.988039970397949
    4. 'cur' → logprob: -4.238039970397949
    5. '[f' → logprob: -8.23803997039795
    6. 'f' → logprob: -9.23803997039795
    7. '[' → logprob: -9.36303997039795
    8. ' p' → logprob: -10.86303997039795
    9. '
' → logprob: -10.86303997039795
    10. '][' → logprob: -11.23803997039795

Token 706: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4339240491390228
    2. '0' → logprob: -1.6839240789413452
    3. '][' → logprob: -1.8089240789413452
    4. '1' → logprob: -7.058924198150635
    5. ']' → logprob: -7.808924198150635
    6. ']!=' → logprob: -7.808924198150635
    7. ']==' → logprob: -8.058923721313477
    8. '!=' → logprob: -8.433923721313477
    9. '==' → logprob: -8.683923721313477
    10. ' ' → logprob: -10.183923721313477

Token 707: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027132730931043625
    2. '1' → logprob: -3.652132749557495
    3. 'cur' → logprob: -8.277132987976074
    4. '[' → logprob: -8.777132987976074
    5. '-' → logprob: -9.652132987976074
    6. 'p' → logprob: -9.902132987976074
    7. ' ' → logprob: -10.027132987976074
    8. ']==' → logprob: -10.027132987976074
    9. '==' → logprob: -10.277132987976074
    10. ']' → logprob: -10.464632987976074

Token 708: ']!=' (ID: 85780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6625213027000427
    2. ']!=' → logprob: -1.2875213623046875
    3. ']==' → logprob: -2.1625213623046875
    4. '!=' → logprob: -2.5375213623046875
    5. '==' → logprob: -4.2875213623046875
    6. ' !=' → logprob: -7.9125213623046875
    7. ' ]' → logprob: -9.412521362304688
    8. 'else' → logprob: -9.537521362304688
    9. '```' → logprob: -10.037521362304688
    10. '()!=' → logprob: -10.412521362304688

Token 709: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -4.842555426876061e-06
    2. ' prev' → logprob: -12.250004768371582
    3. '	prev' → logprob: -17.6250057220459
    4. '(prev' → logprob: -18.1250057220459
    5. '   ' → logprob: -20.0000057220459
    6. 'previous' → logprob: -21.8750057220459
    7. '  ' → logprob: -22.5000057220459
    8. ' ' → logprob: -22.7500057220459
    9. 'pre' → logprob: -22.7500057220459
    10. 'Prev' → logprob: -22.8750057220459

Token 710: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141908526420593
    2. 'else' → logprob: -1.7014191150665283
    3. ' ' → logprob: -13.57641887664795
    4. '0' → logprob: -13.82641887664795
    5. ' f' → logprob: -14.07641887664795
    6. '   ' → logprob: -14.45141887664795
    7. 'f' → logprob: -14.57641887664795
    8. '1' → logprob: -14.95141887664795
    9. '()' → logprob: -15.32641887664795
    10. '       ' → logprob: -15.57641887664795

Token 711: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001932205050252378
    2. ' f' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.751932144165039
    4. ' ' → logprob: -15.501932144165039
    5. '       ' → logprob: -15.501932144165039
    6. '	f' → logprob: -15.876932144165039
    7. '    ' → logprob: -16.50193214416504
    8. '  ' → logprob: -16.50193214416504
    9. '           ' → logprob: -17.37693214416504
    10. '     ' → logprob: -18.00193214416504

Token 712: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.318681188422488e-05
    2. 'p' → logprob: -11.25001335144043
    3. '[' → logprob: -17.12501335144043
    4. '<p' → logprob: -17.62501335144043
    5. '[f' → logprob: -17.87501335144043
    6. '(p' → logprob: -18.12501335144043
    7. '	p' → logprob: -18.12501335144043
    8. '```' → logprob: -18.75001335144043
    9. '
' → logprob: -19.12501335144043
    10. '{' → logprob: -20.00001335144043

Token 713: '][' (ID: 2696)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00037192381569184363
    2. 'p' → logprob: -8.625371932983398
    3. '][' → logprob: -9.000371932983398
    4. '[' → logprob: -9.625371932983398
    5. '1' → logprob: -14.375371932983398
    6. '```' → logprob: -14.625371932983398
    7. ' [' → logprob: -15.000371932983398
    8. '<p' → logprob: -15.125371932983398
    9. '   ' → logprob: -15.625371932983398
    10. '>[' → logprob: -15.750371932983398

Token 714: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11284487694501877
    2. '1' → logprob: -2.237844944000244
    3. ' p' → logprob: -11.612844467163086
    4. '[p' → logprob: -11.612844467163086
    5. '[' → logprob: -12.612844467163086
    6. '0' → logprob: -14.737844467163086
    7. '```' → logprob: -15.737844467163086
    8. ' ' → logprob: -15.987844467163086
    9. '   ' → logprob: -15.987844467163086
    10. '	p' → logprob: -16.237844467163086

Token 715: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023894020705483854
    2. ' ]' → logprob: -9.250239372253418
    3. '[p' → logprob: -10.125239372253418
    4. '(prev' → logprob: -10.500239372253418
    5. 'prev' → logprob: -10.750239372253418
    6. '[' → logprob: -10.875239372253418
    7. '[cur' → logprob: -11.250239372253418
    8. ']
' → logprob: -11.750239372253418
    9. '()]' → logprob: -12.125239372253418
    10. '       ' → logprob: -13.250239372253418

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003821716527454555
    2. '   ' → logprob: -7.875381946563721
    3. '           ' → logprob: -13.625382423400879
    4. '     ' → logprob: -15.750382423400879
    5. 'work' → logprob: -15.875382423400879
    6. '      ' → logprob: -15.875382423400879
    7. '    ' → logprob: -16.250381469726562
    8. '[' → logprob: -16.375381469726562
    9. '```' → logprob: -16.875381469726562
    10. ' ' → logprob: -16.875381469726562

Token 717: ' prev' (ID: 10258)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -9.865583706414327e-05
    2. ' work' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.50009822845459
    4. '	work' → logprob: -14.37509822845459
    5. '       ' → logprob: -14.50009822845459
    6. '.work' → logprob: -16.875099182128906
    7. '(work' → logprob: -16.875099182128906
    8. '           ' → logprob: -17.375099182128906
    9. '```' → logprob: -19.500099182128906
    10. '_work' → logprob: -19.750099182128906

Token 718: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01105159055441618
    2. ' =' → logprob: -4.511051654815674
    3. '=p' → logprob: -12.511051177978516
    4. ',' → logprob: -15.636051177978516
    5. '=
' → logprob: -18.886051177978516
    6. '＝' → logprob: -19.636051177978516
    7. '.=' → logprob: -19.761051177978516
    8. 'p' → logprob: -19.886051177978516
    9. '=}' → logprob: -20.511051177978516
    10. ' ' → logprob: -20.761051177978516

Token 719: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.941850526549388e-06
    2. ' p' → logprob: -11.750007629394531
    3. 'cur' → logprob: -17.37500762939453
    4. '<p' → logprob: -22.12500762939453
    5. '	p' → logprob: -22.50000762939453
    6. '   ' → logprob: -23.12500762939453
    7. ' ' → logprob: -24.37500762939453
    8. ' cur' → logprob: -25.00000762939453
    9. '_p' → logprob: -25.12500762939453
    10. 'prev' → logprob: -25.50000762939453

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013509492855519056
    2. '   ' → logprob: -6.6263508796691895
    3. '           ' → logprob: -11.751351356506348
    4. '
' → logprob: -12.376351356506348
    5. '<|end|>' → logprob: -13.251351356506348
    6. '     ' → logprob: -13.376351356506348
    7. ',' → logprob: -13.501351356506348
    8. '        
' → logprob: -13.626351356506348
    9. '	   ' → logprob: -13.626351356506348
    10. '```' → logprob: -14.126351356506348

Token 721: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37637022137641907
    2. '       ' → logprob: -1.2513701915740967
    3. 'work' → logprob: -3.6263701915740967
    4. ' work' → logprob: -7.876370429992676
    5. '	work' → logprob: -8.251370429992676
    6. '           ' → logprob: -8.626370429992676
    7. '```' → logprob: -10.251370429992676
    8. '  ' → logprob: -10.376370429992676
    9. ' ' → logprob: -11.001370429992676
    10. '    ' → logprob: -12.626370429992676

Token 722: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -0.0003820524725597352
    2. ' work' → logprob: -8.000382423400879
    3. '   ' → logprob: -10.125382423400879
    4. '       ' → logprob: -12.375382423400879
    5. '	work' → logprob: -13.375382423400879
    6. '           ' → logprob: -14.250382423400879
    7. '```' → logprob: -17.500381469726562
    8. '(work' → logprob: -17.750381469726562
    9. '.work' → logprob: -18.375381469726562
    10. '  ' → logprob: -19.000381469726562

Token 723: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.407366916188039e-05
    2. '.' → logprob: -9.875054359436035
    3. '.app' → logprob: -13.625054359436035
    4. '.extend' → logprob: -14.625054359436035
    5. 'append' → logprob: -15.500054359436035
    6. '.ap' → logprob: -15.750054359436035
    7. '.Append' → logprob: -15.875054359436035
    8. ' .' → logprob: -16.12505340576172
    9. '.add' → logprob: -16.12505340576172
    10. '.push' → logprob: -17.00005340576172

Token 724: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -4.5491004129871726e-05
    2. 'cur' → logprob: -10.000045776367188
    3. '[cur' → logprob: -18.375045776367188
    4. ' cur' → logprob: -19.625045776367188
    5. '	cur' → logprob: -20.250045776367188
    6. '(c' → logprob: -20.250045776367188
    7. '(curr' → logprob: -22.000045776367188
    8. '(' → logprob: -22.750045776367188
    9. '.cur' → logprob: -23.500045776367188
    10. '(
' → logprob: -23.500045776367188

Token 725: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015562419139314443
    2. '<|end|>' → logprob: -9.375155448913574
    3. ')
' → logprob: -10.375155448913574
    4. '   ' → logprob: -11.000155448913574
    5. ')return' → logprob: -11.125155448913574
    6. '<|end|>' → logprob: -13.000155448913574
    7. ']' → logprob: -13.375155448913574
    8. ' )' → logprob: -14.000155448913574
    9. '       ' → logprob: -14.250155448913574
    10. '()' → logprob: -14.250155448913574

Token 726: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.20359842479228973
    2. 'set' → logprob: -2.7035984992980957
    3. ' main' → logprob: -3.5785984992980957
    4. 'def' → logprob: -3.8285984992980957
    5. ' def' → logprob: -4.078598499298096
    6. ' __' → logprob: -4.328598499298096
    7. '__' → logprob: -4.453598499298096
    8. ' read' → logprob: -4.578598499298096
    9. 'main' → logprob: -5.578598499298096
    10. 'read' → logprob: -6.078598499298096

Token 728: 'work' (ID: 1596)
  Prédit: 'work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.005244783591479063
    2. '_work' → logprob: -5.255244731903076
    3. '(work' → logprob: -12.630245208740234
    4. 'wor' → logprob: -13.630245208740234
    5. 'w' → logprob: -13.755245208740234
    6. 'def' → logprob: -14.255245208740234
    7. 'working' → logprob: -14.255245208740234
    8. '_w' → logprob: -14.380245208740234
    9. 'worker' → logprob: -15.005245208740234
    10. 'works' → logprob: -15.130245208740234

Token 729: '_sort' (ID: 43815)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03581494837999344
    2. '_w' → logprob: -3.5358150005340576
    3. '():' → logprob: -5.1608147621154785
    4. '_:' → logprob: -9.035815238952637
    5. '_a' → logprob: -9.910815238952637
    6. '_s' → logprob: -11.160815238952637
    7. '_right' → logprob: -11.285815238952637
    8. '_b' → logprob: -11.410815238952637
    9. '()' → logprob: -11.535815238952637
    10. '_wr' → logprob: -11.660815238952637

Token 730: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6411390900611877
    2. '_' → logprob: -1.391139030456543
    3. '():
' → logprob: -1.516139030456543
    4. 'ing' → logprob: -7.141139030456543
    5. '_w' → logprob: -7.266139030456543
    6. '()' → logprob: -7.391139030456543
    7. '_b' → logprob: -7.766139030456543
    8. 'a' → logprob: -7.891139030456543
    9. 'ed' → logprob: -7.891139030456543
    10. '_a' → logprob: -7.891139030456543

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.475653737783432
    2. 'global' → logprob: -0.9756537675857544
    3. 'def' → logprob: -6.725653648376465
    4. ' global' → logprob: -8.225653648376465
    5. '	global' → logprob: -9.225653648376465
    6. '(global' → logprob: -12.225653648376465
    7. '_global' → logprob: -13.725653648376465
    8. '.global' → logprob: -13.975653648376465
    9. '```' → logprob: -13.975653648376465
    10. '   ' → logprob: -14.975653648376465

Token 732: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.007918313145637512
    2. '   ' → logprob: -4.882918357849121
    3. 'def' → logprob: -8.382918357849121
    4. ' global' → logprob: -9.757918357849121
    5. '	global' → logprob: -11.507918357849121
    6. 'from' → logprob: -12.632918357849121
    7. 'import' → logprob: -12.757918357849121
    8. 'vis' → logprob: -13.382918357849121
    9. 'if' → logprob: -13.757918357849121
    10. 'pend' → logprob: -14.132918357849121

Token 733: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.34952494502067566
    2. 'work' → logprob: -1.224524974822998
    3. ' pend' → logprob: -7.099524974822998
    4. ' work' → logprob: -8.97452449798584
    5. 'pending' → logprob: -9.84952449798584
    6. 'vis' → logprob: -10.84952449798584
    7. '   ' → logprob: -11.59952449798584
    8. 'pen' → logprob: -12.34952449798584
    9. ' ' → logprob: -12.53702449798584
    10. 'Pend' → logprob: -12.91202449798584

Token 734: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07398949563503265
    2. ',' → logprob: -3.5739893913269043
    3. '=' → logprob: -3.9489893913269043
    4. ' =' → logprob: -4.323989391326904
    5. ':' → logprob: -4.823989391326904
    6. '.sort' → logprob: -7.198989391326904
    7. '
' → logprob: -7.698989391326904
    8. '=[]
' → logprob: -8.198989868164062
    9. '[:]' → logprob: -8.198989868164062
    10. ':
' → logprob: -8.323989868164062

Token 735: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.11289428919553757
    2. ' work' → logprob: -2.237894296646118
    3. '   ' → logprob: -11.237894058227539
    4. '	work' → logprob: -11.612894058227539
    5. ' ' → logprob: -11.737894058227539
    6. 'last' → logprob: -11.862894058227539
    7. ' last' → logprob: -12.175394058227539
    8. 'vis' → logprob: -12.550394058227539
    9. 'V' → logprob: -13.050394058227539
    10. 'dist' → logprob: -13.175394058227539

Token 736: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.558399319241289e-05
    2. '    
' → logprob: -11.500025749206543
    3. '
' → logprob: -12.250025749206543
    4. '  ' → logprob: -13.375025749206543
    5. ',' → logprob: -13.625025749206543
    6. '```' → logprob: -14.000025749206543
    7. '#' → logprob: -14.125025749206543
    8. '    ' → logprob: -14.250025749206543
    9. '<|end|>' → logprob: -14.500025749206543
    10. '[' → logprob: -14.500025749206543

Token 737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015908108616713434
    2. 'vis' → logprob: -9.50015926361084
    3. 'import' → logprob: -10.50015926361084
    4. 'work' → logprob: -11.12515926361084
    5. '```' → logprob: -11.12515926361084
    6. 'pend' → logprob: -11.25015926361084
    7. 'from' → logprob: -12.87515926361084
    8. '   ' → logprob: -13.00015926361084
    9. 'if' → logprob: -13.87515926361084
    10. '       ' → logprob: -14.00015926361084

Token 738: ' oldest' (ID: 34331)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4007245600223541
    2. 'vis' → logprob: -1.2757245302200317
    3. 'pend' → logprob: -3.6507246494293213
    4. 'work' → logprob: -4.025724411010742
    5. 'vv' → logprob: -6.650724411010742
    6. 'if' → logprob: -7.275724411010742
    7. 'from' → logprob: -7.650724411010742
    8. 'import' → logprob: -7.900724411010742
    9. 'all' → logprob: -8.150724411010742
    10. 'def' → logprob: -8.150724411010742

Token 739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2988912761211395
    2. '=' → logprob: -1.423891305923462
    3. ',' → logprob: -4.173891067504883
    4. ',p' → logprob: -6.798891067504883
    5. '   ' → logprob: -7.798891067504883
    6. ' ,' → logprob: -9.048891067504883
    7. 's' → logprob: -9.923891067504883
    8. 'sorted' → logprob: -10.048891067504883
    9. 'work' → logprob: -10.423891067504883
    10. '_p' → logprob: -10.548891067504883

Token 740: ' pend' (ID: 27278)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7681232690811157
    2. 'pend' → logprob: -0.8931232690811157
    3. 'None' → logprob: -3.393123149871826
    4. 'max' → logprob: -3.518123149871826
    5. '999' → logprob: -4.143123149871826
    6. '100' → logprob: -4.518123149871826
    7. 'sorted' → logprob: -4.643123149871826
    8. 'float' → logprob: -5.143123149871826
    9. '1' → logprob: -5.643123149871826
    10. '0' → logprob: -5.643123149871826

Token 741: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04444663226604462
    2. '.pop' → logprob: -3.4194467067718506
    3. '[-' → logprob: -4.5444464683532715
    4. '.sort' → logprob: -9.41944694519043
    5. '   ' → logprob: -10.79444694519043
    6. '.' → logprob: -12.29444694519043
    7. 'pop' → logprob: -12.79444694519043
    8. '[::-' → logprob: -12.91944694519043
    9. '[len' → logprob: -14.04444694519043
    10. '[:' → logprob: -14.54444694519043

Token 742: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026893243193626404
    2. '-' → logprob: -3.651893138885498
    3. ' ' → logprob: -8.526893615722656
    4. '::-' → logprob: -8.901893615722656
    5. ' -' → logprob: -9.651893615722656
    6. ':' → logprob: -9.776893615722656
    7. '[' → logprob: -10.276893615722656
    8. '][' → logprob: -10.776893615722656
    9. '   ' → logprob: -11.026893615722656
    10. '
' → logprob: -11.776893615722656

Token 743: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00539253419265151
    2. ']' → logprob: -5.755392551422119
    3. '[' → logprob: -6.255392551422119
    4. ']
' → logprob: -8.255392074584961
    5. ' ][' → logprob: -11.380392074584961
    6. '   ' → logprob: -12.005392074584961
    7. '
' → logprob: -12.630392074584961
    8. '()][' → logprob: -13.880392074584961
    9. '][]' → logprob: -13.880392074584961
    10. '-' → logprob: -14.130392074584961

Token 744: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17978614568710327
    2. '0' → logprob: -1.804786205291748
    3. '::-' → logprob: -11.05478572845459
    4. '-' → logprob: -11.67978572845459
    5. ' ' → logprob: -12.05478572845459
    6. '[' → logprob: -13.05478572845459
    7. '```' → logprob: -13.42978572845459
    8. '2' → logprob: -14.05478572845459
    9. '
' → logprob: -14.11728572845459
    10. ':' → logprob: -14.49228572845459

Token 745: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7157295942306519
    2. ']
' → logprob: -0.7157295942306519
    3. '
' → logprob: -4.465729713439941
    4. '   ' → logprob: -4.590729713439941
    5. '<|end|>' → logprob: -8.965729713439941
    6. ';' → logprob: -9.340729713439941
    7. '    
' → logprob: -9.715729713439941
    8. '];' → logprob: -9.715729713439941
    9. ']
' → logprob: -9.840729713439941
    10. ']+' → logprob: -10.090729713439941

Token 746: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007144584087654948
    2. 'work' → logprob: -7.375714302062988
    3. ' work' → logprob: -10.250714302062988
    4. 'for' → logprob: -11.125714302062988
    5. '
' → logprob: -11.875714302062988
    6. 'vis' → logprob: -12.625714302062988
    7. 'idx' → logprob: -12.750714302062988
    8. '	work' → logprob: -12.750714302062988
    9. ' for' → logprob: -13.000714302062988
    10. 'import' → logprob: -13.625714302062988

Token 747: ' pend' (ID: 27278)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.10124809294939041
    2. '   ' → logprob: -2.726248025894165
    3. 'vis' → logprob: -4.351248264312744
    4. 'pend' (adapté à ' pend') → logprob: -5.476248264312744
    5. 'if' → logprob: -5.976248264312744
    6. 'for' → logprob: -6.351248264312744
    7. 'global' → logprob: -7.101248264312744
    8. ' work' → logprob: -7.226248264312744
    9. 'w' → logprob: -7.601248264312744
    10. 'vv' → logprob: -7.601248264312744

Token 748: 'set' (ID: 977)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.39028361439704895
    2. '=' → logprob: -1.3902835845947266
    3. ' =' → logprob: -2.6402835845947266
    4. 'sort' → logprob: -6.765283584594727
    5. '.pop' → logprob: -7.390283584594727
    6. '.append' → logprob: -8.140283584594727
    7. 'sorted' → logprob: -8.890283584594727
    8. '=[' → logprob: -9.140283584594727
    9. '   ' → logprob: -9.640283584594727
    10. '[:]' → logprob: -9.640283584594727

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03446673974394798
    2. '=' → logprob: -3.4094667434692383
    3. '.add' → logprob: -8.034466743469238
    4. '=set' → logprob: -8.159466743469238
    5. '|' → logprob: -8.909466743469238
    6. ' |=' → logprob: -10.034466743469238
    7. '   ' → logprob: -11.659466743469238
    8. ' ={' → logprob: -11.784466743469238
    9. '={' → logprob: -12.284466743469238
    10. ' ' → logprob: -13.159466743469238

Token 750: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.13787789642810822
    2. '{' → logprob: -2.262877941131592
    3. ' set' → logprob: -4.012877941131592
    4. '{x' → logprob: -5.512877941131592
    5. ' {' → logprob: -6.512877941131592
    6. '{s' → logprob: -7.387877941131592
    7. '{i' → logprob: -8.137877464294434
    8. 'sorted' → logprob: -9.262877464294434
    9. '   ' → logprob: -10.262877464294434
    10. '{k' → logprob: -11.012877464294434

Token 751: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6929235458374023
    2. '(j' → logprob: -1.0679235458374023
    3. '(p' → logprob: -2.3179235458374023
    4. '(i' → logprob: -3.3179235458374023
    5. '([' → logprob: -4.567923545837402
    6. '(w' → logprob: -5.442923545837402
    7. '(work' → logprob: -5.442923545837402
    8. '(k' → logprob: -7.567923545837402
    9. '(range' → logprob: -7.692923545837402
    10. '()
' → logprob: -8.067923545837402

Token 752: '[' (ID: 58)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6060002446174622
    2. 'for' → logprob: -0.8560002446174622
    3. '(x' → logprob: -3.9810001850128174
    4. '(i' → logprob: -5.4810004234313965
    5. '(j' → logprob: -6.1060004234313965
    6. '(' → logprob: -6.8560004234313965
    7. '(p' → logprob: -6.8560004234313965
    8. '(work' → logprob: -6.8560004234313965
    9. ')' → logprob: -7.9810004234313965
    10. '(y' → logprob: -8.355999946594238

Token 753: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019220756366848946
    2. '[' → logprob: -4.51922082901001
    3. 'for' → logprob: -5.51922082901001
    4. '
' → logprob: -6.39422082901001
    5. 'i' → logprob: -7.39422082901001
    6. ' for' → logprob: -7.76922082901001
    7. '(' → logprob: -7.89422082901001
    8. ' ' → logprob: -8.394220352172852
    9. '(i' → logprob: -8.394220352172852
    10. '][' → logprob: -9.519220352172852

Token 754: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3532997965812683
    2. 'for' → logprob: -1.228299856185913
    3. '])' → logprob: -5.478299617767334
    4. ')' → logprob: -7.978299617767334
    5. ']' → logprob: -9.103300094604492
    6. '])
' → logprob: -9.728300094604492
    7. '	for' → logprob: -9.853300094604492
    8. '()' → logprob: -9.978300094604492
    9. '   ' → logprob: -10.853300094604492
    10. '[' → logprob: -12.228300094604492

Token 755: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25197717547416687
    2. ' for' → logprob: -1.5019772052764893
    3. '   ' → logprob: -10.75197696685791
    4. ')' → logprob: -11.37697696685791
    5. '	for' → logprob: -12.00197696685791
    6. ' ' → logprob: -13.25197696685791
    7. '       ' → logprob: -14.00197696685791
    8. '                   ' → logprob: -14.25197696685791
    9. '           ' → logprob: -14.25197696685791
    10. '  ' → logprob: -14.50197696685791

Token 756: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.254031240940094
    2. ' x' → logprob: -1.5040311813354492
    3. '_' → logprob: -6.754031181335449
    4. ' pend' → logprob: -7.504031181335449
    5. 'pend' → logprob: -8.50403118133545
    6. ' _' → logprob: -9.25403118133545
    7. '_x' → logprob: -11.00403118133545
    8. '<|end|>' → logprob: -11.31653118133545
    9. '
' → logprob: -11.87903118133545
    10. '_,' → logprob: -12.00403118133545

Token 757: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14270873367786407
    2. ' in' → logprob: -2.0177087783813477
    3. '	in' → logprob: -11.392708778381348
    4. 'inp' → logprob: -12.142708778381348
    5. 'n' → logprob: -12.267708778381348
    6. 'x' → logprob: -12.767708778381348
    7. '
' → logprob: -13.642708778381348
    8. '_in' → logprob: -13.767708778381348
    9. '<|end|>' → logprob: -14.267708778381348
    10. 's' → logprob: -14.392708778381348

Token 758: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -3.619311974034645e-05
    2. 'pending' → logprob: -10.625036239624023
    3. ' pend' → logprob: -11.500036239624023
    4. 'pendency' → logprob: -14.875036239624023
    5. 'pen' → logprob: -15.125036239624023
    6. '   ' → logprob: -15.125036239624023
    7. 'pendent' → logprob: -15.125036239624023
    8. ' ' → logprob: -16.125036239624023
    9. '  ' → logprob: -16.375036239624023
    10. '
' → logprob: -16.625036239624023

Token 759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7007734179496765
    2. ')
' → logprob: -0.7007734179496765
    3. '   ' → logprob: -5.075773239135742
    4. ' if' → logprob: -6.950773239135742
    5. ')
' → logprob: -8.325773239135742
    6. 'if' → logprob: -9.825773239135742
    7. ' )
' → logprob: -10.200773239135742
    8. ')

' → logprob: -10.325773239135742
    9. ' )' → logprob: -11.450773239135742
    10. '  ' → logprob: -12.700773239135742

Token 760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02419159933924675
    2. 'work' → logprob: -3.7741916179656982
    3. ' work' → logprob: -8.274191856384277
    4. '
' → logprob: -8.774191856384277
    5. 'def' → logprob: -8.899191856384277
    6. 'for' → logprob: -9.399191856384277
    7. 'if' → logprob: -9.649191856384277
    8. 'rest' → logprob: -10.149191856384277
    9. 'idx' → logprob: -10.149191856384277
    10. '    
' → logprob: -10.899191856384277

Token 761: ' sort' (ID: 4506)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.11112572997808456
    2. '   ' → logprob: -3.9861257076263428
    3. 'if' → logprob: -4.361125946044922
    4. 'for' → logprob: -5.361125946044922
    5. 'dist' → logprob: -5.361125946044922
    6. 'pend' → logprob: -5.486125946044922
    7. 'lst' → logprob: -5.486125946044922
    8. 'vis' → logprob: -5.611125946044922
    9. 'cur' → logprob: -5.611125946044922
    10. 'def' → logprob: -5.611125946044922

Token 762: 'q' (ID: 80)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.002632257528603077
    2. '=' → logprob: -7.002632141113281
    3. ' =' → logprob: -7.127632141113281
    4. 'edd' → logprob: -8.127632141113281
    5. 'list' → logprob: -8.877632141113281
    6. 'ped' → logprob: -9.002632141113281
    7. 'd' → logprob: -9.377632141113281
    8. 'eds' → logprob: -9.627632141113281
    9. '_ed' → logprob: -10.377632141113281
    10. 'pend' → logprob: -10.627632141113281

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6894069910049438
    2. ' =' → logprob: -0.8144069910049438
    3. 'ed' → logprob: -2.9394068717956543
    4. 'ued' → logprob: -6.939406871795654
    5. 'd' → logprob: -7.939406871795654
    6. 'u' → logprob: -8.439407348632812
    7. 'ue' → logprob: -8.439407348632812
    8. 'eed' → logprob: -9.564407348632812
    9. 'sorted' → logprob: -9.564407348632812
    10. '=[]
' → logprob: -9.814407348632812

Token 764: ' []
' (ID: 8911)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.38440632820129395
    2. '[(' → logprob: -2.259406328201294
    3. '[' → logprob: -2.634406328201294
    4. '[]
' → logprob: -2.634406328201294
    5. 'list' → logprob: -2.759406328201294
    6. '[list' → logprob: -5.884406089782715
    7. 'pend' → logprob: -7.009406089782715
    8. '[p' → logprob: -7.009406089782715
    9. '[]' → logprob: -7.759406089782715
    10. '[]

' → logprob: -8.009406089782715

Token 765: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36534491181373596
    2. 'for' → logprob: -1.6153448820114136
    3. ' for' → logprob: -2.240345001220703
    4. ',' → logprob: -8.990345001220703
    5. 'while' → logprob: -9.115345001220703
    6. 'cur' → logprob: -9.490345001220703
    7. 'last' → logprob: -9.740345001220703
    8. ' last' → logprob: -9.865345001220703
    9. ' =' → logprob: -10.365345001220703
    10. 'idx' → logprob: -10.365345001220703

Token 766: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07706455141305923
    2. 'while' → logprob: -3.0770645141601562
    3. 'cur' → logprob: -4.577064514160156
    4. '   ' → logprob: -4.827064514160156
    5. 'last' → logprob: -5.702064514160156
    6. 'used' → logprob: -7.577064514160156
    7. ' for' → logprob: -7.702064514160156
    8. 'pos' → logprob: -7.827064514160156
    9. 'work' → logprob: -7.952064514160156
    10. 'if' → logprob: -7.952064514160156

Token 767: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8489726781845093
    2. 'i' → logprob: -1.0989726781845093
    3. '_,' → logprob: -2.473972797393799
    4. 'v' → logprob: -3.723972797393799
    5. 'p' → logprob: -3.848972797393799
    6. '_' → logprob: -4.598972797393799
    7. 'd' → logprob: -4.723972797393799
    8. 'a' → logprob: -4.848972797393799
    9. 'w' → logprob: -5.098972797393799
    10. 'j' → logprob: -5.098972797393799

Token 768: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25651049613952637
    2. ' in' → logprob: -1.5065104961395264
    3. ',' → logprob: -5.6315107345581055
    4. ',p' → logprob: -7.6315107345581055
    5. 'range' → logprob: -8.881510734558105
    6. ',v' → logprob: -9.381510734558105
    7. '   ' → logprob: -9.631510734558105
    8. 'x' → logprob: -10.006510734558105
    9. ',_' → logprob: -10.256510734558105
    10. 'i' → logprob: -11.131510734558105

Token 769: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.45317620038986206
    2. 'pend' → logprob: -1.0781762599945068
    3. 'work' → logprob: -4.453176021575928
    4. ' range' → logprob: -4.578176021575928
    5. ' pend' → logprob: -7.828176021575928
    6. 'sorted' → logprob: -7.953176021575928
    7. 'pending' → logprob: -8.078176498413086
    8. 're' → logprob: -8.578176498413086
    9. '[' → logprob: -8.828176498413086
    10. 'list' → logprob: -9.140676498413086

Token 770: '0' (ID: 15)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.48409557342529297
    2. 'range' → logprob: -1.109095573425293
    3. 'x' → logprob: -3.484095573425293
    4. '1' → logprob: -5.234095573425293
    5. 'work' → logprob: -5.609095573425293
    6. 'sorted' → logprob: -5.859095573425293
    7. '0' → logprob: -6.609095573425293
    8. 're' → logprob: -6.609095573425293
    9. ' range' → logprob: -6.734095573425293
    10. 'i' → logprob: -6.734095573425293

Token 771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028223179280757904
    2. ',V' → logprob: -4.528223037719727
    3. ',len' → logprob: -5.403223037719727
    4. 'range' → logprob: -6.153223037719727
    5. ',p' → logprob: -6.153223037719727
    6. ' ,' → logprob: -6.278223037719727
    7. ',n' → logprob: -6.653223037719727
    8. '   ' → logprob: -6.778223037719727
    9. ',...' → logprob: -7.528223037719727
    10. '+' → logprob: -7.653223037719727

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025832349434494972
    2. 'len' → logprob: -4.525832176208496
    3. ' ' → logprob: -5.400832176208496
    4. '-' → logprob: -6.150832176208496
    5. 'old' → logprob: -6.150832176208496
    6. 'V' → logprob: -6.400832176208496
    7. '2' → logprob: -6.650832176208496
    8. ')' → logprob: -7.150832176208496
    9. 'pend' → logprob: -7.525832176208496
    10. ' V' → logprob: -8.400832176208496

Token 773: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06560224294662476
    2. '):' → logprob: -2.8156023025512695
    3. ',' → logprob: -6.0656023025512695
    4. '   ' → logprob: -7.1906023025512695
    5. '):
' → logprob: -8.19060230255127
    6. ' ):
' → logprob: -9.69060230255127
    7. ')[' → logprob: -10.44060230255127
    8. ')' → logprob: -10.44060230255127
    9. '):

' → logprob: -10.44060230255127
    10. '1' → logprob: -10.81560230255127

Token 774: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06696578115224838
    2. '   ' → logprob: -3.4419658184051514
    3. ' for' → logprob: -4.316965579986572
    4. ':' → logprob: -5.316965579986572
    5. ' if' → logprob: -5.316965579986572
    6. ':
' → logprob: -5.691965579986572
    7. '    ' → logprob: -6.066965579986572
    8. ',' → logprob: -6.066965579986572
    9. ' sort' → logprob: -8.19196605682373
    10. '):
' → logprob: -8.56696605682373

Token 775: ' base' (ID: 3611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49223703145980835
    2. 'for' → logprob: -2.367237091064453
    3. ' for' → logprob: -2.992237091064453
    4. 'sort' → logprob: -3.492237091064453
    5. ' sort' → logprob: -3.742237091064453
    6. 'if' → logprob: -3.992237091064453
    7. ' if' → logprob: -4.117237091064453
    8. 'best' → logprob: -4.867237091064453
    9. 'cand' → logprob: -4.867237091064453
    10. ' cur' → logprob: -4.992237091064453

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04092790558934212
    2. '=' → logprob: -3.4159278869628906
    3. '   ' → logprob: -6.540927886962891
    4. 'dist' → logprob: -6.790927886962891
    5. '_nodes' → logprob: -7.290927886962891
    6. 'set' → logprob: -7.540927886962891
    7. 's' → logprob: -7.915927886962891
    8. 'sort' → logprob: -8.29092788696289
    9. 'node' → logprob: -8.41592788696289
    10. ',' → logprob: -8.41592788696289

Token 777: ' ' (ID: 220)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6109880208969116
    2. 'pend' → logprob: -0.9859880208969116
    3. 'dist' → logprob: -3.985988140106201
    4. 'last' → logprob: -4.610988140106201
    5. ' oldest' → logprob: -4.735988140106201
    6. '1' → logprob: -4.735988140106201
    7. '(' → logprob: -5.235988140106201
    8. ' pend' → logprob: -5.235988140106201
    9. 'i' → logprob: -5.360988140106201
    10. 'work' → logprob: -5.610988140106201

Token 778: '1' (ID: 16)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.6995519399642944
    2. 'pend' → logprob: -1.0745519399642944
    3. 'dist' → logprob: -3.574552059173584
    4. '(' → logprob: -3.699552059173584
    5. '1' → logprob: -3.699552059173584
    6. 'last' → logprob: -3.699552059173584
    7. '(i' → logprob: -4.574552059173584
    8. 'work' → logprob: -4.699552059173584
    9. '[' → logprob: -4.949552059173584
    10. 'i' → logprob: -4.949552059173584

Token 779: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023908337578177452
    2. '
' → logprob: -4.2739081382751465
    3. ' if' → logprob: -6.0239081382751465
    4. ',' → logprob: -6.3989081382751465
    5. '+' → logprob: -6.5239081382751465
    6. '        
' → logprob: -7.0239081382751465
    7. 'for' → logprob: -7.1489081382751465
    8. ' +' → logprob: -7.6489081382751465
    9. ' for' → logprob: -7.7739081382751465
    10. 'if' → logprob: -7.8989081382751465

Token 780: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.44843822717666626
    2. 'old' → logprob: -1.3234381675720215
    3. 'not' → logprob: -3.5734381675720215
    4. 'pend' → logprob: -3.8234381675720215
    5. 'len' → logprob: -4.5734381675720215
    6. ' i' → logprob: -4.6984381675720215
    7. '(i' → logprob: -5.1984381675720215
    8. ' not' → logprob: -5.3234381675720215
    9. ' oldest' → logprob: -5.6984381675720215
    10. ' pend' → logprob: -6.1984381675720215

Token 781: ' else' (ID: 1203)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16509397327899933
    2. 'else' → logprob: -2.0400938987731934
    3. ' ==' → logprob: -4.415093898773193
    4. ' else' → logprob: -4.665093898773193
    5. 'in' → logprob: -8.540094375610352
    6. '-' → logprob: -8.790094375610352
    7. '+' → logprob: -9.915094375610352
    8. ' in' → logprob: -10.290094375610352
    9. 'not' → logprob: -10.415094375610352
    10. ' not' → logprob: -10.915094375610352

Token 782: ' oldest' (ID: 34331)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4903503954410553
    2. 'old' → logprob: -1.115350365638733
    3. 'pend' → logprob: -4.115350246429443
    4. '-' → logprob: -4.615350246429443
    5. 'last' → logprob: -5.115350246429443
    6. 'len' → logprob: -5.240350246429443
    7. 'n' → logprob: -5.240350246429443
    8. ' oldest' → logprob: -5.865350246429443
    9. 'max' → logprob: -6.490350246429443
    10. 'V' → logprob: -6.490350246429443

Token 783: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06830285489559174
    2. '   ' → logprob: -2.943302869796753
    3. ',' → logprob: -5.443302631378174
    4. '
' → logprob: -5.693302631378174
    5. 'for' → logprob: -6.568302631378174
    6. 'def' → logprob: -7.068302631378174
    7. 'dist' → logprob: -7.443302631378174
    8. ' for' → logprob: -7.943302631378174
    9. ';' → logprob: -8.068303108215332
    10. 'sort' → logprob: -8.193303108215332

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03680199012160301
    2. '   ' → logprob: -3.411802053451538
    3. ' for' → logprob: -6.786801815032959
    4. 'for' → logprob: -6.911801815032959
    5. '#' → logprob: -8.661802291870117
    6. ',' → logprob: -8.661802291870117
    7. '
' → logprob: -9.911802291870117
    8. 'd' → logprob: -10.036802291870117
    9. 'def' → logprob: -10.161802291870117
    10. ';' → logprob: -10.286802291870117

Token 785: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4530787467956543
    2. 'for' → logprob: -2.4530787467956543
    3. 'sort' → logprob: -3.0780787467956543
    4. 'q' (adapté à ' q') → logprob: -3.7030787467956543
    5. 'cur' → logprob: -3.7030787467956543
    6. 'while' → logprob: -3.7030787467956543
    7. ' for' → logprob: -4.328078746795654
    8. 'dist' → logprob: -4.453078746795654
    9. ' sort' → logprob: -4.578078746795654
    10. 'work' → logprob: -4.703078746795654

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5959438681602478
    2. ' =' → logprob: -0.8459438681602478
    3. '=[' → logprob: -4.470943927764893
    4. '=[]
' → logprob: -5.345943927764893
    5. '=[]' → logprob: -6.345943927764893
    6. ',' → logprob: -7.345943927764893
    7. '.append' → logprob: -7.595943927764893
    8. '   ' → logprob: -8.095943450927734
    9. '=[[' → logprob: -10.095943450927734
    10. 'ue' → logprob: -10.220943450927734

Token 787: ' sorted' (ID: 20099)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.45752984285354614
    2. '[' → logprob: -1.0825297832489014
    3. '[p' → logprob: -4.8325300216674805
    4. '[]
' → logprob: -4.9575300216674805
    5. '[[' → logprob: -5.4575300216674805
    6. '[b' → logprob: -5.9575300216674805
    7. 'deque' → logprob: -6.8325300216674805
    8. '{' → logprob: -7.0825300216674805
    9. '[((' → logprob: -7.2075300216674805
    10. '[{' → logprob: -7.2075300216674805

Token 788: '((' (ID: 2054)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10136162489652634
    2. '((' → logprob: -3.1013615131378174
    3. '([' → logprob: -3.9763615131378174
    4. '(x' → logprob: -4.6013617515563965
    5. '([(' → logprob: -4.7263617515563965
    6. 'pend' → logprob: -5.9763617515563965
    7. '(((' → logprob: -5.9763617515563965
    8. '(
' → logprob: -6.1013617515563965
    9. '(list' → logprob: -6.2263617515563965
    10. '(work' → logprob: -6.3513617515563965

Token 789: 'dist' (ID: 24126)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.475333034992218
    2. '(x' → logprob: -1.3503329753875732
    3. '(j' → logprob: -3.9753329753875732
    4. 'pend' → logprob: -3.9753329753875732
    5. '(p' → logprob: -4.225333213806152
    6. '(dist' → logprob: -4.475333213806152
    7. '(v' → logprob: -4.725333213806152
    8. 'j' → logprob: -4.850333213806152
    9. '((' → logprob: -4.850333213806152
    10. '(' → logprob: -5.225333213806152

Token 790: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04936208203434944
    2. '[x' → logprob: -4.0493621826171875
    3. 'base' → logprob: -4.1743621826171875
    4. '[last' → logprob: -5.2993621826171875
    5. '[node' → logprob: -5.2993621826171875
    6. 'last' → logprob: -6.6743621826171875
    7. 'x' → logprob: -7.2993621826171875
    8. '(base' → logprob: -8.049362182617188
    9. '[i' → logprob: -8.049362182617188
    10. '[b' → logprob: -8.174362182617188

Token 791: 'base' (ID: 5423)
  Prédit: 'base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.052594345062971115
    2. '[' → logprob: -3.5525944232940674
    3. 'x' → logprob: -4.177594184875488
    4. 'last' → logprob: -6.177594184875488
    5. '[x' → logprob: -6.802594184875488
    6. '[last' → logprob: -6.927594184875488
    7. 'old' → logprob: -7.552594184875488
    8. '(base' → logprob: -7.802594184875488
    9. '
' → logprob: -8.052594184875488
    10. 'b' → logprob: -8.802594184875488

Token 792: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.109614297747612
    2. '[x' → logprob: -2.609614372253418
    3. '],' → logprob: -4.109614372253418
    4. ',' → logprob: -5.359614372253418
    5. '[' → logprob: -6.234614372253418
    6. '[node' → logprob: -6.609614372253418
    7. ',x' → logprob: -6.734614372253418
    8. '[item' → logprob: -7.484614372253418
    9. '[j' → logprob: -7.609614372253418
    10. '[i' → logprob: -7.859614372253418

Token 793: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10479006171226501
    2. 'j' → logprob: -2.729789972305298
    3. 'k' → logprob: -4.229790210723877
    4. 'v' → logprob: -4.604790210723877
    5. 'i' → logprob: -5.729790210723877
    6. 'y' → logprob: -6.604790210723877
    7. 'p' → logprob: -7.104790210723877
    8. 'z' → logprob: -7.354790210723877
    9. 'u' → logprob: -7.479790210723877
    10. 'a' → logprob: -7.729790210723877

Token 794: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3875674903392792
    2. ']' → logprob: -1.1375675201416016
    3. '[' → logprob: -7.512567520141602
    4. '   ' → logprob: -10.137567520141602
    5. ' ],' → logprob: -10.887567520141602
    6. '-' → logprob: -11.137567520141602
    7. ' ]' → logprob: -11.262567520141602
    8. 'for' → logprob: -11.387567520141602
    9. 'x' → logprob: -11.762567520141602
    10. '][' → logprob: -11.887567520141602

Token 795: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006242761737667024
    2. ' x' → logprob: -7.625624179840088
    3. '   ' → logprob: -9.625624656677246
    4. '  ' → logprob: -11.250624656677246
    5. ' ' → logprob: -11.250624656677246
    6. 'dist' → logprob: -11.750624656677246
    7. '    ' → logprob: -12.125624656677246
    8. '(x' → logprob: -12.750624656677246
    9. '     ' → logprob: -13.000624656677246
    10. ')' → logprob: -13.125624656677246

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2209267020225525
    2. 'for' → logprob: -1.9709267616271973
    3. ' for' → logprob: -2.8459267616271973
    4. '   ' → logprob: -7.845926761627197
    5. ' )' → logprob: -7.970926761627197
    6. '    ' → logprob: -10.845926284790039
    7. ' ' → logprob: -11.595926284790039
    8. '  ' → logprob: -12.095926284790039
    9. ')
' → logprob: -12.095926284790039
    10. ',' → logprob: -12.345926284790039

Token 797: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16027013957500458
    2. 'for' → logprob: -1.910270094871521
    3. '   ' → logprob: -10.160269737243652
    4. ')' → logprob: -12.910269737243652
    5. '    ' → logprob: -13.910269737243652
    6. ' ' → logprob: -14.160269737243652
    7. '	for' → logprob: -14.160269737243652
    8. '  ' → logprob: -14.785269737243652
    9. '           ' → logprob: -14.910269737243652
    10. '       ' → logprob: -14.910269737243652

Token 798: ' x' (ID: 1215)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.3187946677207947
    2. 'x' → logprob: -1.3187947273254395
    3. ' pend' → logprob: -5.4437947273254395
    4. ' x' → logprob: -7.9437947273254395
    5. '(x' → logprob: -7.9437947273254395
    6. 'pendency' → logprob: -9.193794250488281
    7. 'q' → logprob: -9.693794250488281
    8. 'pending' → logprob: -9.943794250488281
    9. 'pendent' → logprob: -10.443794250488281
    10. 'pent' → logprob: -10.506294250488281

Token 799: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.029788563027977943
    2. ' in' → logprob: -3.5297884941101074
    3. 'x' → logprob: -11.154788970947266
    4. ',' → logprob: -11.404788970947266
    5. '
' → logprob: -12.404788970947266
    6. ' ' → logprob: -13.654788970947266
    7. 'inp' → logprob: -13.904788970947266
    8. '   ' → logprob: -14.279788970947266
    9. '[' → logprob: -14.404788970947266
    10. '  ' → logprob: -14.904788970947266

Token 800: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.0013627357548102736
    2. ' pend' → logprob: -6.7513628005981445
    3. '   ' → logprob: -9.751362800598145
    4. ' ' → logprob: -10.751362800598145
    5. 'range' → logprob: -11.001362800598145
    6. 'pending' → logprob: -11.251362800598145
    7. 'pen' → logprob: -11.251362800598145
    8. '(' → logprob: -11.376362800598145
    9. '  ' → logprob: -11.876362800598145
    10. 'list' → logprob: -12.001362800598145

Token 801: 'set' (ID: 977)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48085927963256836
    2. 'if' → logprob: -1.2308592796325684
    3. ')' → logprob: -2.6058592796325684
    4. 'set' → logprob: -4.730859279632568
    5. ')
' → logprob: -5.230859279632568
    6. '   ' → logprob: -6.730859279632568
    7. '[' → logprob: -8.230859756469727
    8. ')set' → logprob: -9.730859756469727
    9. ');' → logprob: -10.105859756469727
    10. '  ' → logprob: -10.605859756469727

Token 802: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3194466233253479
    2. ')' → logprob: -1.3194465637207031
    3. ' if' → logprob: -5.569446563720703
    4. '   ' → logprob: -6.319446563720703
    5. ' )
' → logprob: -8.569446563720703
    6. ');' → logprob: -9.319446563720703
    7. 'if' → logprob: -9.569446563720703
    8. ')
' → logprob: -9.569446563720703
    9. ')[' → logprob: -9.819446563720703
    10. ' )' → logprob: -10.194446563720703

Token 803: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6791175603866577
    2. '       ' → logprob: -0.8041175603866577
    3. ')' → logprob: -3.3041176795959473
    4. ')
' → logprob: -5.679117679595947
    5. '.sort' → logprob: -5.929117679595947
    6. '[' → logprob: -7.679117679595947
    7. ',' → logprob: -7.804117679595947
    8. ' sort' → logprob: -8.179117202758789
    9. '),' → logprob: -8.429117202758789
    10. 'sort' → logprob: -8.929117202758789

Token 804: ' sort' (ID: 4506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7881577610969543
    2. '   ' → logprob: -1.1631577014923096
    3. '       ' → logprob: -2.6631577014923096
    4. ' if' → logprob: -2.7881577014923096
    5. 'for' → logprob: -3.0381577014923096
    6. 'work' → logprob: -3.5381577014923096
    7. 'q' → logprob: -5.038157939910889
    8. ' for' → logprob: -5.038157939910889
    9. 'sort' (adapté à ' sort') → logprob: -5.288157939910889
    10. ' work' → logprob: -5.788157939910889

Token 805: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0005838918150402606
    2. 'ed' → logprob: -8.25058364868164
    3. '_q' → logprob: -9.25058364868164
    4. ' =' → logprob: -9.87558364868164
    5. '(q' → logprob: -10.87558364868164
    6. '   ' → logprob: -10.87558364868164
    7. '(' → logprob: -11.25058364868164
    8. '=' → logprob: -11.25058364868164
    9. 'for' → logprob: -11.50058364868164
    10. '_' → logprob: -12.12558364868164

Token 806: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0714075565338135
    2. '.append' → logprob: -1.3214075565338135
    3. ' =' → logprob: -1.4464075565338135
    4. '.sort' → logprob: -2.1964075565338135
    5. '[' → logprob: -3.6964075565338135
    6. '.reverse' → logprob: -5.446407318115234
    7. '+=' → logprob: -5.571407318115234
    8. '.' → logprob: -6.071407318115234
    9. '=[' → logprob: -6.571407318115234
    10. '[i' → logprob: -6.571407318115234

Token 807: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03580481931567192
    2. '(q' → logprob: -3.5358047485351562
    3. '[q' → logprob: -5.535804748535156
    4. ' q' → logprob: -6.535804748535156
    5. '[(' → logprob: -8.660804748535156
    6. 'list' → logprob: -9.160804748535156
    7. '([' → logprob: -9.410804748535156
    8. '[]' → logprob: -9.410804748535156
    9. '[]
' → logprob: -10.035804748535156
    10. '[' → logprob: -10.785804748535156

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.114600834436715e-05
    2. '   ' → logprob: -10.000091552734375
    3. ')
' → logprob: -10.500091552734375
    4. ' )' → logprob: -11.000091552734375
    5. ' ' → logprob: -14.875091552734375
    6. '       ' → logprob: -15.125091552734375
    7. '[' → logprob: -15.250091552734375
    8. '  ' → logprob: -16.000091552734375
    9. '
' → logprob: -16.250091552734375
    10. '))' → logprob: -16.375091552734375

Token 809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02985670231282711
    2. '<|end|>' → logprob: -4.6548566818237305
    3. 'def' → logprob: -5.2798566818237305
    4. 'if' → logprob: -5.5298566818237305
    5. ' if' → logprob: -5.6548566818237305
    6. 'for' → logprob: -6.1548566818237305
    7. ' for' → logprob: -6.4048566818237305
    8. '```' → logprob: -6.7798566818237305
    9. '
' → logprob: -6.9048566818237305
    10. 'work' → logprob: -8.52985668182373

Token 810: ' vis' (ID: 1909)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3235522210597992
    2. 'if' → logprob: -2.198552131652832
    3. ' if' → logprob: -3.573552131652832
    4. 'best' → logprob: -3.573552131652832
    5. 'for' → logprob: -3.823552131652832
    6. 'def' → logprob: -3.823552131652832
    7. ' for' → logprob: -5.073552131652832
    8. 'work' → logprob: -5.198552131652832
    9. 'global' → logprob: -5.198552131652832
    10. 'dist' → logprob: -5.198552131652832

Token 811: 'list' (ID: 2641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2569443881511688
    2. '=' → logprob: -1.5069444179534912
    3. '.add' → logprob: -5.631944179534912
    4. '=set' → logprob: -7.006944179534912
    5. '.' → logprob: -8.13194465637207
    6. '   ' → logprob: -9.75694465637207
    7. ',' → logprob: -10.38194465637207
    8. ' .' → logprob: -10.38194465637207
    9. '[' → logprob: -11.00694465637207
    10. ')' → logprob: -11.50694465637207

Token 812: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4148724377155304
    2. ' =' → logprob: -1.164872407913208
    3. '=[]' → logprob: -3.789872407913208
    4. ',' → logprob: -6.289872646331787
    5. '=[' → logprob: -6.664872646331787
    6. '=[]
' → logprob: -7.164872646331787
    7. '[' → logprob: -7.289872646331787
    8. '.sort' → logprob: -9.289872169494629
    9. '   ' → logprob: -9.664872169494629
    10. '[:]' → logprob: -10.164872169494629

Token 813: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8941338062286377
    2. 'for' → logprob: -0.8941338062286377
    3. ' for' → logprob: -1.7691338062286377
    4. '
' → logprob: -5.769133567810059
    5. '[' → logprob: -6.519133567810059
    6. 'while' → logprob: -6.769133567810059
    7. 'vis' → logprob: -7.644133567810059
    8. ' =' → logprob: -7.644133567810059
    9. '```' → logprob: -7.644133567810059
    10. ',' → logprob: -7.769133567810059

Token 814: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4127560555934906
    2. 'while' (adapté à ' while') → logprob: -1.412756085395813
    3. 'if' → logprob: -3.0377559661865234
    4. 'vis' → logprob: -5.162755966186523
    5. 'cur' → logprob: -5.287755966186523
    6. 'i' → logprob: -5.412755966186523
    7. '   ' → logprob: -5.912755966186523
    8. 'last' → logprob: -5.912755966186523
    9. 'idx' → logprob: -5.912755966186523
    10. 'p' → logprob: -6.162755966186523

Token 815: ' len' (ID: 4631)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.49984532594680786
    2. 'len' → logprob: -1.249845266342163
    3. 'sort' → logprob: -2.749845266342163
    4. ' pend' → logprob: -4.499845504760742
    5. 'work' → logprob: -4.624845504760742
    6. 'any' → logprob: -4.874845504760742
    7. 'True' → logprob: -5.124845504760742
    8. 'sum' → logprob: -6.249845504760742
    9. ' len' → logprob: -6.749845504760742
    10. 'all' → logprob: -6.874845504760742

Token 816: '(vis' (ID: 183220)
  Prédit: '(sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sort' → logprob: -0.311333566904068
    2. '(p' → logprob: -1.8113335371017456
    3. '(vis' → logprob: -2.811333656311035
    4. 'sort' → logprob: -3.686333656311035
    5. '(work' → logprob: -4.436333656311035
    6. '(' → logprob: -5.436333656311035
    7. 'work' → logprob: -7.061333656311035
    8. 'pend' → logprob: -7.186333656311035
    9. 'vis' → logprob: -7.811333656311035
    10. '(sorted' → logprob: -8.936333656311035

Token 817: 'list' (ID: 2641)
  Prédit: '(vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.03420204669237137
    2. 'vis' → logprob: -4.7842020988464355
    3. '<' → logprob: -5.0342020988464355
    4. '(p' → logprob: -5.2842020988464355
    5. ' <' → logprob: -5.2842020988464355
    6. '(sort' → logprob: -5.5342020988464355
    7. '(work' → logprob: -6.5342020988464355
    8. 'e' → logprob: -6.6592020988464355
    9. '(' → logprob: -7.7842020988464355
    10. '()<' → logprob: -8.409201622009277

Token 818: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03730939328670502
    2. ' <' → logprob: -3.412309408187866
    3. '<len' → logprob: -6.037309169769287
    4. '==' → logprob: -7.537309169769287
    5. '<p' → logprob: -8.912309646606445
    6. '()<' → logprob: -9.037309646606445
    7. ')<' → logprob: -9.162309646606445
    8. '<size' → logprob: -9.412309646606445
    9. ' ==' → logprob: -10.537309646606445
    10. '<n' → logprob: -10.537309646606445

Token 819: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05162344500422478
    2. ' <' → logprob: -3.0516233444213867
    3. '<len' → logprob: -5.926623344421387
    4. '<n' → logprob: -8.676623344421387
    5. '==' → logprob: -10.176623344421387
    6. '<tr' → logprob: -10.301623344421387
    7. '<size' → logprob: -10.926623344421387
    8. '<p' → logprob: -10.926623344421387
    9. '<v' → logprob: -11.176623344421387
    10. '<int' → logprob: -11.801623344421387

Token 820: ' MAX' (ID: 16960)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0030872784554958344
    2. ' len' → logprob: -6.003087043762207
    3. 'vv' → logprob: -8.628087043762207
    4. 'pend' → logprob: -8.878087043762207
    5. 'max' → logprob: -9.628087043762207
    6. '(len' → logprob: -10.253087043762207
    7. 'min' → logprob: -10.378087043762207
    8. 'V' → logprob: -10.503087043762207
    9. 'MAX' → logprob: -10.878087043762207
    10. 'VV' → logprob: -11.003087043762207

Token 821: 'VIS' (ID: 82553)
  Prédit: 'VIS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VIS' → logprob: -0.001943514565937221
    2. '_VIS' → logprob: -6.876943588256836
    3. 'visit' → logprob: -8.001943588256836
    4. 'V' → logprob: -8.626943588256836
    5. '_visit' → logprob: -8.626943588256836
    6. 'vis' → logprob: -10.251943588256836
    7. '   ' → logprob: -10.251943588256836
    8. '_vis' → logprob: -10.626943588256836
    9. ' VIS' → logprob: -10.751943588256836
    10. 'VI' → logprob: -11.501943588256836

Token 822: 'IT' (ID: 1468)
  Prédit: 'IT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IT' → logprob: -0.013740897178649902
    2. 'IST' → logprob: -4.8887410163879395
    3. 'T' → logprob: -5.7637410163879395
    4. 'IS' → logprob: -6.0137410163879395
    5. '
' → logprob: -9.513740539550781
    6. '   ' → logprob: -9.638740539550781
    7. 'ST' → logprob: -9.763740539550781
    8. 'ITS' → logprob: -10.013740539550781
    9. 'Visit' → logprob: -10.513740539550781
    10. '(T' → logprob: -10.513740539550781

Token 823: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14443431794643402
    2. 'and' → logprob: -2.1444342136383057
    3. ':
' → logprob: -4.894434452056885
    4. '   ' → logprob: -5.144434452056885
    5. ' or' → logprob: -6.144434452056885
    6. ':' → logprob: -6.394434452056885
    7. '       ' → logprob: -9.019433975219727
    8. '():
' → logprob: -10.894433975219727
    9. '+' → logprob: -11.394433975219727
    10. '()' → logprob: -11.519433975219727

Token 824: ' (' (ID: 350)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.7428712844848633
    2. 'sort' → logprob: -0.9928712844848633
    3. 'len' → logprob: -2.8678712844848633
    4. ' pend' → logprob: -3.3678712844848633
    5. ' sort' → logprob: -3.8678712844848633
    6. '(sort' → logprob: -4.367871284484863
    7. '(len' → logprob: -5.117871284484863
    8. ' (' → logprob: -5.367871284484863
    9. '(' → logprob: -5.492871284484863
    10. ' len' → logprob: -5.867871284484863

Token 825: 'sort' (ID: 13373)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.13743682205677032
    2. 'len' → logprob: -2.637436866760254
    3. 'sort' → logprob: -3.762436866760254
    4. ' pend' → logprob: -3.887436866760254
    5. 'tr' → logprob: -5.137436866760254
    6. 'work' → logprob: -6.387436866760254
    7. '   ' → logprob: -6.512436866760254
    8. ' sort' → logprob: -7.637436866760254
    9. ' len' → logprob: -7.762436866760254
    10. 'not' → logprob: -8.012436866760254

Token 826: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.574251918005757e-05
    2. '[' → logprob: -10.875055313110352
    3. '_q' → logprob: -11.000055313110352
    4. '
' → logprob: -12.875055313110352
    5. '```' → logprob: -13.125055313110352
    6. '   ' → logprob: -13.500055313110352
    7. '=' → logprob: -13.875055313110352
    8. 'for' → logprob: -14.000055313110352
    9. '(' → logprob: -14.000055313110352
    10. '[
' → logprob: -14.125055313110352

Token 827: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5570885807392187e-05
    2. ' and' → logprob: -12.500015258789062
    3. ')' → logprob: -12.625015258789062
    4. '):
' → logprob: -13.125015258789062
    5. 'and' → logprob: -13.625015258789062
    6. '```' → logprob: -13.625015258789062
    7. '[i' → logprob: -14.000015258789062
    8. '):' → logprob: -14.125015258789062
    9. '[
' → logprob: -14.375015258789062
    10. '
' → logprob: -14.625015258789062

Token 828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018386850133538246
    2. '[' → logprob: -4.0183868408203125
    3. '1' → logprob: -8.643386840820312
    4. '
' → logprob: -10.768386840820312
    5. 'and' → logprob: -10.893386840820312
    6. ' ' → logprob: -12.268386840820312
    7. '```' → logprob: -12.518386840820312
    8. '   ' → logprob: -12.893386840820312
    9. ' and' → logprob: -13.143386840820312
    10. 'not' → logprob: -13.518386840820312

Token 829: ']' (ID: 60)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2885684669017792
    2. 'or' → logprob: -1.4135684967041016
    3. '[' → logprob: -5.788568496704102
    4. ' and' → logprob: -6.038568496704102
    5. 'and' → logprob: -6.413568496704102
    6. ']' → logprob: -8.788568496704102
    7. ')' → logprob: -9.288568496704102
    8. '```' → logprob: -10.663568496704102
    9. '
' → logprob: -11.538568496704102
    10. '   ' → logprob: -11.788568496704102

Token 830: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.40080538392066956
    2. 'or' → logprob: -1.6508053541183472
    3. ' or' → logprob: -2.5258054733276367
    4. ' and' → logprob: -2.9008054733276367
    5. '[' → logprob: -5.775805473327637
    6. ')' → logprob: -8.900805473327637
    7. '```' → logprob: -10.150805473327637
    8. '
' → logprob: -10.900805473327637
    9. '   ' → logprob: -11.025805473327637
    10. '	or' → logprob: -11.650805473327637

Token 831: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.026324333623051643
    2. ' sort' → logprob: -3.6513242721557617
    3. '   ' → logprob: -11.151324272155762
    4. '(sort' → logprob: -12.401324272155762
    5. ' ' → logprob: -13.151324272155762
    6. '  ' → logprob: -13.401324272155762
    7. '	sort' → logprob: -14.401324272155762
    8. '    ' → logprob: -14.776324272155762
    9. '       ' → logprob: -14.901324272155762
    10. 'sorted' → logprob: -15.651324272155762

Token 832: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015943651087582111
    2. '[' → logprob: -6.501594543457031
    3. '(' → logprob: -9.376594543457031
    4. '1' → logprob: -12.876594543457031
    5. '_q' → logprob: -12.876594543457031
    6. '
' → logprob: -14.251594543457031
    7. '```' → logprob: -14.876594543457031
    8. '_' → logprob: -15.626594543457031
    9. '   ' → logprob: -16.00159454345703
    10. '2' → logprob: -16.25159454345703

Token 833: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -13.000007629394531
    3. '[
' → logprob: -13.000007629394531
    4. 'and' → logprob: -13.750007629394531
    5. ' [' → logprob: -14.625007629394531
    6. '==' → logprob: -14.750007629394531
    7. 'def' → logprob: -15.625007629394531
    8. '```' → logprob: -15.875007629394531
    9. '
' → logprob: -16.12500762939453
    10. '][' → logprob: -16.25000762939453

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '
' → logprob: -12.875011444091797
    3. '[' → logprob: -12.875011444091797
    4. ' ' → logprob: -13.125011444091797
    5. '0' → logprob: -13.562511444091797
    6. '```' → logprob: -14.250011444091797
    7. '   ' → logprob: -14.812511444091797
    8. ']' → logprob: -15.312511444091797
    9. ')' → logprob: -15.687511444091797
    10. '

' → logprob: -15.875011444091797

Token 835: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07964316010475159
    2. '):' → logprob: -2.5796432495117188
    3. ')' → logprob: -8.079643249511719
    4. '[' → logprob: -9.204643249511719
    5. '):

' → logprob: -9.204643249511719
    6. ' ):
' → logprob: -9.204643249511719
    7. ' and' → logprob: -10.204643249511719
    8. 'and' → logprob: -10.454643249511719
    9. '   ' → logprob: -10.954643249511719
    10. ' or' → logprob: -11.079643249511719

Token 836: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014515443472191691
    2. ' for' → logprob: -7.50145149230957
    3. '   ' → logprob: -7.62645149230957
    4. ',' → logprob: -8.62645149230957
    5. ' if' → logprob: -8.87645149230957
    6. '<|end|>' → logprob: -10.62645149230957
    7. '```' → logprob: -11.75145149230957
    8. '     ' → logprob: -12.37645149230957
    9. '[' → logprob: -12.50145149230957
    10. '	' → logprob: -12.50145149230957

Token 837: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.221084475517273
    2. 'for' (adapté à ' for') → logprob: -1.596084475517273
    3. '       ' → logprob: -1.846084475517273
    4. ' if' → logprob: -2.3460845947265625
    5. ' for' → logprob: -2.4710845947265625
    6. '   ' → logprob: -2.5960845947265625
    7. 'i' → logprob: -3.4710845947265625
    8. 'b' → logprob: -4.2210845947265625
    9. 'x' → logprob: -4.4710845947265625
    10. ' i' → logprob: -4.7210845947265625

Token 838: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07000679522752762
    2. 'q' → logprob: -3.070006847381592
    3. ' i' → logprob: -4.570006847381592
    4. 'j' → logprob: -6.070006847381592
    5. 'sort' → logprob: -6.570006847381592
    6. 'k' → logprob: -6.695006847381592
    7. 's' → logprob: -6.695006847381592
    8. ' q' → logprob: -7.070006847381592
    9. 'sq' → logprob: -7.445006847381592
    10. 'x' → logprob: -7.820006847381592

Token 839: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12694574892520905
    2. ' in' → logprob: -2.126945734024048
    3. ',' → logprob: -12.251945495605469
    4. 'i' → logprob: -12.251945495605469
    5. '
' → logprob: -12.751945495605469
    6. ' ' → logprob: -13.626945495605469
    7. '   ' → logprob: -13.751945495605469
    8. '	in' → logprob: -14.001945495605469
    9. ',in' → logprob: -14.876945495605469
    10. '  ' → logprob: -15.126945495605469

Token 840: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3377884030342102
    2. 'range' → logprob: -1.9627883434295654
    3. ' range' → logprob: -2.0877883434295654
    4. '0' → logprob: -4.3377885818481445
    5. '[' → logprob: -5.2127885818481445
    6. ' ' → logprob: -6.2127885818481445
    7. ' (' → logprob: -7.0877885818481445
    8. '(range' → logprob: -7.8377885818481445
    9. 'sort' → logprob: -8.337788581848145
    10. '   ' → logprob: -9.587788581848145

Token 841: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4285862057004124e-05
    2. ' ' → logprob: -10.75003433227539
    3. '1' → logprob: -11.37503433227539
    4. '   ' → logprob: -14.62503433227539
    5. '01' → logprob: -15.25003433227539
    6. '
' → logprob: -15.62503433227539
    7. '(' → logprob: -16.00003433227539
    8. '  ' → logprob: -16.62503433227539
    9. '[' → logprob: -16.68753433227539
    10. '۰' → logprob: -17.18753433227539

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',
' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. '1' → logprob: -14.500004768371582
    5. '
' → logprob: -16.750003814697266
    6. '```' → logprob: -17.750003814697266
    7. '2' → logprob: -17.875003814697266
    8. '，' → logprob: -18.125003814697266
    9. ',len' → logprob: -18.187503814697266
    10. '0' → logprob: -18.625003814697266

Token 843: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38696157932281494
    2. '1' → logprob: -1.136961579322815
    3. ' ' → logprob: -9.761961936950684
    4. '   ' → logprob: -10.636961936950684
    5. '
' → logprob: -13.011961936950684
    6. '  ' → logprob: -13.886961936950684
    7. '01' → logprob: -13.886961936950684
    8. ')' → logprob: -14.136961936950684
    9. '       ' → logprob: -14.761961936950684
    10. '     ' → logprob: -14.824461936950684

Token 844: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1927299052476883
    2. ':' → logprob: -2.067729949951172
    3. '):
' → logprob: -3.067729949951172
    4. '):' → logprob: -6.817729949951172
    5. '       ' → logprob: -7.067729949951172
    6. ':
' → logprob: -8.817729949951172
    7. ',' → logprob: -9.692729949951172
    8. ' :
' → logprob: -10.442729949951172
    9. '   ' → logprob: -10.692729949951172
    10. '           ' → logprob: -10.817729949951172

Token 845: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027436506934463978
    2. ' if' → logprob: -6.127743721008301
    3. '	       ' → logprob: -8.1277437210083
    4. '	   ' → logprob: -9.3777437210083
    5. 'if' → logprob: -10.1277437210083
    6. ',' → logprob: -10.5027437210083
    7. '   ' → logprob: -11.0027437210083
    8. '```' → logprob: -11.1277437210083
    9. '    	   ' → logprob: -11.3777437210083
    10. '       ' → logprob: -11.5027437210083

Token 846: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6296912431716919
    2. ' if' → logprob: -0.8796912431716919
    3. '           ' → logprob: -3.0046911239624023
    4. '               ' → logprob: -6.629691123962402
    5. '       ' → logprob: -7.379691123962402
    6. '   ' → logprob: -8.504691123962402
    7. 'while' → logprob: -8.504691123962402
    8. 'q' → logprob: -9.129691123962402
    9. ' while' → logprob: -9.129691123962402
    10. ' ' → logprob: -9.879691123962402

Token 847: ' not' (ID: 625)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.003522152081131935
    2. ' sort' → logprob: -6.003521919250488
    3. 'not' → logprob: -7.378521919250488
    4. '   ' → logprob: -8.378521919250488
    5. 'len' → logprob: -9.003521919250488
    6. ' not' → logprob: -10.628521919250488
    7. '  ' → logprob: -10.753521919250488
    8. ' ' → logprob: -11.628521919250488
    9. '    ' → logprob: -12.628521919250488
    10. 'j' → logprob: -12.628521919250488

Token 848: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0028796528931707144
    2. ' sort' → logprob: -5.877879619598389
    3. 'not' → logprob: -10.502880096435547
    4. '   ' → logprob: -10.627880096435547
    5. '(sort' → logprob: -11.627880096435547
    6. ' ' → logprob: -12.002880096435547
    7. 'len' → logprob: -12.877880096435547
    8. '  ' → logprob: -13.502880096435547
    9. ' not' → logprob: -13.752880096435547
    10. '	sort' → logprob: -14.002880096435547

Token 849: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. ' q' → logprob: -18.5
    3. '   ' → logprob: -18.625
    4. 'j' → logprob: -18.625
    5. '_q' → logprob: -18.875
    6. 'queue' → logprob: -19.0
    7. '
' → logprob: -19.0
    8. 'qu' → logprob: -20.0
    9. 'que' → logprob: -20.0
    10. '```' → logprob: -20.125

Token 850: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00022594700567424297
    2. 'and' → logprob: -9.250226020812988
    3. ' and' → logprob: -9.875226020812988
    4. '[' → logprob: -10.000226020812988
    5. '][' → logprob: -11.375226020812988
    6. 'j' → logprob: -11.875226020812988
    7. '           ' → logprob: -12.000226020812988
    8. '   ' → logprob: -13.125226020812988
    9. ' or' → logprob: -13.375226020812988
    10. ' [' → logprob: -14.125226020812988

Token 851: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24310612678527832
    2. ' or' → logprob: -2.1181061267852783
    3. ':
' → logprob: -3.1181061267852783
    4. '):' → logprob: -3.3681061267852783
    5. ']:' → logprob: -5.118105888366699
    6. ':return' → logprob: -5.368105888366699
    7. '):
' → logprob: -5.618105888366699
    8. ')' → logprob: -7.493105888366699
    9. ']:
' → logprob: -8.1181058883667
    10. ' and' → logprob: -8.2431058883667

Token 852: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15823455154895782
    2. ' vis' → logprob: -2.5332345962524414
    3. '           ' → logprob: -3.5332345962524414
    4. ' continue' → logprob: -3.5332345962524414
    5. ' break' → logprob: -6.408234596252441
    6. '   ' → logprob: -6.533234596252441
    7. '              ' → logprob: -7.283234596252441
    8. 'vis' → logprob: -7.533234596252441
    9. '	           ' → logprob: -7.533234596252441
    10. '            ' → logprob: -8.033234596252441

Token 853: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3093480169773102
    2. '               ' → logprob: -1.5593479871749878
    3. ',' → logprob: -3.6843481063842773
    4. '
' → logprob: -5.184348106384277
    5. ' x' → logprob: -6.059348106384277
    6. ',
' → logprob: -6.059348106384277
    7. ' s' → logprob: -6.434348106384277
    8. ' dist' → logprob: -6.434348106384277
    9. '       ' → logprob: -6.684348106384277
    10. 'd' → logprob: -6.809348106384277

Token 854: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021468983963131905
    2. '               ' → logprob: -4.0214691162109375
    3. ',' → logprob: -7.5214691162109375
    4. ' for' → logprob: -7.6464691162109375
    5. ' x' → logprob: -8.271469116210938
    6. ' nxt' → logprob: -8.646469116210938
    7. '            ' → logprob: -9.021469116210938
    8. 'v' → logprob: -9.021469116210938
    9. '	       ' → logprob: -9.021469116210938
    10. '            
' → logprob: -9.021469116210938

Token 855: ' _,' (ID: 18042)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9857121109962463
    2. '_,' (adapté à ' _,') → logprob: -1.1107120513916016
    3. ' d' → logprob: -2.3607120513916016
    4. ' dist' → logprob: -2.6107120513916016
    5. ' _,' → logprob: -3.7357120513916016
    6. 'dist' → logprob: -3.7357120513916016
    7. '           ' → logprob: -3.8607120513916016
    8. 'v' → logprob: -4.235712051391602
    9. ',' → logprob: -4.735712051391602
    10. ' vis' → logprob: -5.110712051391602

Token 856: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.28018978238105774
    2. 'n' → logprob: -2.6551897525787354
    3. 'v' → logprob: -2.9051897525787354
    4. 'cur' → logprob: -3.7801897525787354
    5. 'nx' → logprob: -4.2801899909973145
    6. 'node' → logprob: -4.4051899909973145
    7. 'p' → logprob: -4.6551899909973145
    8. 'c' → logprob: -4.9051899909973145
    9. 'y' → logprob: -5.1551899909973145
    10. 'u' → logprob: -5.1551899909973145

Token 857: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000553151941858232
    2. ' =' → logprob: -7.500553131103516
    3. '=
' → logprob: -15.625553131103516
    4. '=x' → logprob: -17.250553131103516
    5. 'sort' → logprob: -17.375553131103516
    6. '=q' → logprob: -17.375553131103516
    7. '=sys' → logprob: -19.375553131103516
    8. '   ' → logprob: -19.375553131103516
    9. '=s' → logprob: -19.375553131103516
    10. '=j' → logprob: -19.500553131103516

Token 858: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.00979150552302599
    2. ' sort' → logprob: -4.634791374206543
    3. '   ' → logprob: -10.384791374206543
    4. ' ' → logprob: -13.009791374206543
    5. '  ' → logprob: -13.509791374206543
    6. '    ' → logprob: -15.009791374206543
    7. 'sorted' → logprob: -15.384791374206543
    8. '	sort' → logprob: -15.509791374206543
    9. '(sort' → logprob: -16.25979232788086
    10. '       ' → logprob: -16.25979232788086

Token 859: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'j' → logprob: -16.875
    3. '[j' → logprob: -18.125
    4. '_q' → logprob: -19.875
    5. '
' → logprob: -20.375
    6. 'qu' → logprob: -20.5
    7. ' q' → logprob: -20.875
    8. 'op' → logprob: -21.25
    9. 'qq' → logprob: -21.25
    10. '[q' → logprob: -21.5

Token 860: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.432518421206623e-05
    2. 'j' → logprob: -9.7500638961792
    3. '[' → logprob: -12.2500638961792
    4. '[
' → logprob: -14.7500638961792
    5. '
' → logprob: -15.8750638961792
    6. ' [' → logprob: -15.8750638961792
    7. '```' → logprob: -16.000064849853516
    8. '   ' → logprob: -16.125064849853516
    9. '{' → logprob: -16.250064849853516
    10. '(j' → logprob: -16.500064849853516

Token 861: '].' (ID: 1651)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0026295194402337074
    2. ')' → logprob: -7.25262975692749
    3. ').' → logprob: -7.25262975692749
    4. 'pop' → logprob: -7.25262975692749
    5. ')
' → logprob: -8.502629280090332
    6. ');' → logprob: -9.252629280090332
    7. '           ' → logprob: -9.752629280090332
    8. '       ' → logprob: -9.752629280090332
    9. '),' → logprob: -10.877629280090332
    10. '].' → logprob: -11.127629280090332

Token 862: 'pop' (ID: 15042)
  Prédit: 'pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -4.36574100604048e-06
    2. '.pop' → logprob: -12.500004768371582
    3. ' pop' → logprob: -14.750004768371582
    4. '0' → logprob: -16.000003814697266
    5. '   ' → logprob: -17.250003814697266
    6. '	pop' → logprob: -17.625003814697266
    7. '_pop' → logprob: -18.750003814697266
    8. '```' → logprob: -20.125003814697266
    9. '(pop' → logprob: -20.625003814697266
    10. '-pop' → logprob: -21.250003814697266

Token 863: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000855597376357764
    2. '()
' → logprob: -7.250855445861816
    3. '(' → logprob: -9.250855445861816
    4. '0' → logprob: -10.500855445861816
    5. '()-' → logprob: -11.625855445861816
    6. '(-' → logprob: -11.750855445861816
    7. '()

' → logprob: -13.250855445861816
    8. '();' → logprob: -14.250855445861816
    9. '()>' → logprob: -14.250855445861816
    10. '<|end|>' → logprob: -14.500855445861816

Token 864: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013430891558527946
    2. ' if' → logprob: -7.251343250274658
    3. '       ' → logprob: -8.3763427734375
    4. '               ' → logprob: -8.6263427734375
    5. 'if' → logprob: -9.3763427734375
    6. '   ' → logprob: -9.6263427734375
    7. 'vis' → logprob: -11.1263427734375
    8. '```' → logprob: -11.1263427734375
    9. '	       ' → logprob: -11.2513427734375
    10. '          ' → logprob: -11.7513427734375

Token 865: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14466138184070587
    2. '           ' → logprob: -2.1446614265441895
    3. 'if' (adapté à ' if') → logprob: -4.1446614265441895
    4. '   ' → logprob: -6.7696614265441895
    5. '       ' → logprob: -7.5196614265441895
    6. '               ' → logprob: -11.519660949707031
    7. ' ' → logprob: -11.769660949707031
    8. ' vis' → logprob: -11.769660949707031
    9. '	if' → logprob: -12.519660949707031
    10. '          ' → logprob: -13.144660949707031

Token 866: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018174059689044952
    2. ' x' → logprob: -4.018174171447754
    3. 'not' → logprob: -11.518174171447754
    4. ' not' → logprob: -11.893174171447754
    5. 'len' → logprob: -12.268174171447754
    6. ' len' → logprob: -14.018174171447754
    7. '   ' → logprob: -14.518174171447754
    8. ' ' → logprob: -14.643174171447754
    9. '(x' → logprob: -14.893174171447754
    10. '  ' → logprob: -15.643174171447754

Token 867: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04546502232551575
    2. 'not' → logprob: -3.1704649925231934
    3. ' in' → logprob: -6.045464992523193
    4. 'in' → logprob: -9.295465469360352
    5. '	not' → logprob: -13.670465469360352
    6. ' ' → logprob: -14.920465469360352
    7. ')' → logprob: -15.795465469360352
    8. 'and' → logprob: -15.795465469360352
    9. ' and' → logprob: -16.04546546936035
    10. '
' → logprob: -16.17046546936035

Token 868: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.10077903419733047
    2. ' vis' → logprob: -2.3507790565490723
    3. 'pend' → logprob: -8.225778579711914
    4. ' pend' → logprob: -9.100778579711914
    5. '(vis' → logprob: -9.475778579711914
    6. 'vist' → logprob: -9.725778579711914
    7. 'visited' → logprob: -11.538278579711914
    8. '   ' → logprob: -12.163278579711914
    9. ' ' → logprob: -12.288278579711914
    10. 'vs' → logprob: -12.663278579711914

Token 869: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0034939926117658615
    2. 'set' → logprob: -6.378493785858154
    3. 'ist' → logprob: -6.878493785858154
    4. 'isted' → logprob: -7.253493785858154
    5. '   ' → logprob: -10.628494262695312
    6. 'ited' → logprob: -11.378494262695312
    7. 'listed' → logprob: -12.003494262695312
    8. 'vis' → logprob: -13.253494262695312
    9. '
' → logprob: -13.503494262695312
    10. 'lists' → logprob: -13.878494262695312

Token 870: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14412948489189148
    2. '               ' → logprob: -2.644129514694214
    3. ':
' → logprob: -2.894129514694214
    4. ' or' → logprob: -5.769129276275635
    5. ' and' → logprob: -6.019129276275635
    6. '           ' → logprob: -6.394129276275635
    7. ':return' → logprob: -8.519129753112793
    8. ' :' → logprob: -9.394129753112793
    9. '==' → logprob: -9.519129753112793
    10. 'and' → logprob: -10.519129753112793

Token 871: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07536745816469193
    2. ' x' → logprob: -3.4503674507141113
    3. 'len' → logprob: -4.075367450714111
    4. 'not' → logprob: -4.950367450714111
    5. '(x' → logprob: -5.325367450714111
    6. 'pend' → logprob: -5.700367450714111
    7. '(len' → logprob: -6.450367450714111
    8. 'n' → logprob: -6.700367450714111
    9. ' pend' → logprob: -6.825367450714111
    10. ' not' → logprob: -7.325367450714111

Token 872: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3918987214565277
    2. 'in' → logprob: -1.26689875125885
    3. ' not' → logprob: -3.8918986320495605
    4. '==' → logprob: -4.1418986320495605
    5. 'not' → logprob: -5.7668986320495605
    6. ' ==' → logprob: -5.8918986320495605
    7. ' is' → logprob: -9.141899108886719
    8. 'is' → logprob: -9.641899108886719
    9. '   ' → logprob: -9.766899108886719
    10. ' ' → logprob: -10.266899108886719

Token 873: ' work' (ID: 1101)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.41580963134765625
    2. 'vis' → logprob: -1.2908096313476562
    3. 'work' → logprob: -3.7908096313476562
    4. 'sort' → logprob: -3.9158096313476562
    5. ' pend' → logprob: -4.040809631347656
    6. 'vist' → logprob: -6.915809631347656
    7. '(vis' → logprob: -7.290809631347656
    8. ' vis' → logprob: -7.415809631347656
    9. ' work' → logprob: -7.790809631347656
    10. ' sort' → logprob: -7.915809631347656

Token 874: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00907374732196331
    2. ':
' → logprob: -4.884073734283447
    3. ':return' → logprob: -7.634073734283447
    4. '           ' → logprob: -8.009074211120605
    5. ' or' → logprob: -8.384074211120605
    6. '       ' → logprob: -8.509074211120605
    7. ' :' → logprob: -9.259074211120605
    8. '               ' → logprob: -9.759074211120605
    9. '   ' → logprob: -10.009074211120605
    10. '):' → logprob: -12.259074211120605

Token 875: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18167494237422943
    2. ' continue' → logprob: -1.8066749572753906
    3. 'continue' → logprob: -6.681674957275391
    4. '	continue' → logprob: -8.18167495727539
    5. '                   ' → logprob: -8.93167495727539
    6. '           ' → logprob: -9.43167495727539
    7. '                               ' → logprob: -10.30667495727539
    8. '	           ' → logprob: -10.30667495727539
    9. '
' → logprob: -10.80667495727539
    10. '   ' → logprob: -10.93167495727539

Token 876: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013083349040243775
    2. '               ' → logprob: -10.000130653381348
    3. '       ' → logprob: -10.500130653381348
    4. '   ' → logprob: -11.250130653381348
    5. '	       ' → logprob: -11.625130653381348
    6. '
' → logprob: -11.750130653381348
    7. 'vis' → logprob: -11.750130653381348
    8. '          ' → logprob: -12.625130653381348
    9. '```' → logprob: -12.625130653381348
    10. ' vis' → logprob: -13.125130653381348

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02715419791638851
    2. '       ' → logprob: -4.277153968811035
    3. '
' → logprob: -4.902153968811035
    4. '   ' → logprob: -6.152153968811035
    5. '               ' → logprob: -6.902153968811035
    6. 'vis' → logprob: -7.402153968811035
    7. '            
' → logprob: -7.527153968811035
    8. '          ' → logprob: -8.402153968811035
    9. '```' → logprob: -8.527153968811035
    10. ' 
' → logprob: -8.777153968811035

Token 878: ' vis' (ID: 1909)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014105090871453285
    2. ' vis' → logprob: -5.389105319976807
    3. '
' → logprob: -5.639105319976807
    4. ' 
' → logprob: -5.889105319976807
    5. '               ' → logprob: -7.264105319976807
    6. '            
' → logprob: -7.389105319976807
    7. '            ' → logprob: -7.514105319976807
    8. 'vis' (adapté à ' vis') → logprob: -8.264104843139648
    9. ' ' → logprob: -8.639104843139648
    10. ' +' → logprob: -9.389104843139648

Token 879: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. '_list' → logprob: -16.25
    3. 'ist' → logprob: -17.5
    4. 'lists' → logprob: -17.5
    5. '[' → logprob: -18.5
    6. 'List' → logprob: -18.75
    7. '   ' → logprob: -19.125
    8. ' list' → logprob: -19.25
    9. '.append' → logprob: -19.375
    10. 'lst' → logprob: -21.0

Token 880: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011785586830228567
    2. '.' → logprob: -6.751178741455078
    3. '.app' → logprob: -12.376178741455078
    4. 'append' → logprob: -12.876178741455078
    5. '.ap' → logprob: -14.376178741455078
    6. ' .' → logprob: -14.501178741455078
    7. '.Append' → logprob: -16.001178741455078
    8. '+.' → logprob: -16.001178741455078
    9. 'Append' → logprob: -16.626178741455078
    10. '+' → logprob: -16.751178741455078

Token 881: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'x' → logprob: -15.87501049041748
    4. '(
' → logprob: -16.750009536743164
    5. ' (' → logprob: -18.375009536743164
    6. ' x' → logprob: -20.250009536743164
    7. '((' → logprob: -21.500009536743164
    8. ',x' → logprob: -22.625009536743164
    9. '	x' → logprob: -22.750009536743164
    10. '(xs' → logprob: -23.000009536743164

Token 882: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041816019802354276
    2. ')
' → logprob: -8.125417709350586
    3. '<|end|>' → logprob: -9.125417709350586
    4. '   ' → logprob: -12.625417709350586
    5. '       ' → logprob: -13.000417709350586
    6. '           ' → logprob: -13.000417709350586
    7. ')return' → logprob: -13.125417709350586
    8. ' )' → logprob: -13.750417709350586
    9. '<|end|>' → logprob: -14.375417709350586
    10. ')

' → logprob: -14.875417709350586

Token 883: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3586118221282959
    2. '           ' → logprob: -1.233611822128296
    3. '       ' → logprob: -4.858612060546875
    4. '<|end|>' → logprob: -6.233612060546875
    5. 'if' → logprob: -8.858612060546875
    6. ' if' → logprob: -9.358612060546875
    7. '
' → logprob: -10.358612060546875
    8. ' ' → logprob: -10.983612060546875
    9. '    ' → logprob: -11.233612060546875
    10. '               ' → logprob: -11.358612060546875

Token 884: ' prev' (ID: 10258)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2641054391860962
    2. '   ' → logprob: -2.1391053199768066
    3. '       ' → logprob: -2.3891053199768066
    4. '               ' → logprob: -5.139105319976807
    5. ' ' → logprob: -5.514105319976807
    6. 'return' → logprob: -6.139105319976807
    7. '<|end|>' → logprob: -6.139105319976807
    8. '[' → logprob: -6.514105319976807
    9. '            
' → logprob: -6.889105319976807
    10. ' return' → logprob: -6.889105319976807

Token 885: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3489316403865814
    2. '=' → logprob: -1.2239316701889038
    3. ',' → logprob: -7.973931789398193
    4. '=len' → logprob: -10.223931312561035
    5. ' ' → logprob: -11.098931312561035
    6. '=end' → logprob: -11.473931312561035
    7. '=x' → logprob: -11.723931312561035
    8. '_' → logprob: -11.848931312561035
    9. '_=' → logprob: -11.848931312561035
    10. '   ' → logprob: -11.973931312561035

Token 886: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39411675930023193
    2. 'work' → logprob: -1.644116759300232
    3. 'vis' → logprob: -2.7691168785095215
    4. ' ' → logprob: -3.7691168785095215
    5. ' work' → logprob: -4.0191168785095215
    6. 'old' → logprob: -5.0191168785095215
    7. 'None' → logprob: -5.0191168785095215
    8. ' vis' → logprob: -5.3941168785095215
    9. ' None' → logprob: -5.6441168785095215
    10. '0' → logprob: -5.7691168785095215

Token 887: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5356332063674927
    2. '
' → logprob: -1.2856332063674927
    3. '<|end|>' → logprob: -2.285633087158203
    4. ' if' → logprob: -4.910633087158203
    5. '    
' → logprob: -5.410633087158203
    6. ',' → logprob: -5.410633087158203
    7. 'def' → logprob: -5.785633087158203
    8. 'prev' → logprob: -6.160633087158203
    9. ' for' → logprob: -6.410633087158203
    10. ';' → logprob: -6.410633087158203

Token 888: '   ' (ID: 271)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.39210498332977295
    2. '   ' → logprob: -1.517104983329773
    3. '
' → logprob: -3.6421051025390625
    4. 'for' → logprob: -3.7671051025390625
    5. '<|end|>' → logprob: -4.3921051025390625
    6. ' work' → logprob: -4.5171051025390625
    7. '    
' → logprob: -4.6421051025390625
    8. 'if' → logprob: -5.2671051025390625
    9. ' for' → logprob: -5.6421051025390625
    10. '	work' → logprob: -5.7671051025390625

Token 889: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6266663074493408
    2. 'for' → logprob: -1.0016663074493408
    3. 'work' → logprob: -2.376666307449341
    4. 'while' (adapté à ' while') → logprob: -5.626666069030762
    5. ' for' → logprob: -6.751666069030762
    6. '
' → logprob: -8.126666069030762
    7. '    
' → logprob: -8.876666069030762
    8. 'import' → logprob: -9.126666069030762
    9. 'def' → logprob: -10.626666069030762
    10. ' work' → logprob: -10.876666069030762

Token 890: ' vis' (ID: 1909)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5448930263519287
    2. 'vis' → logprob: -0.9198930263519287
    3. ' len' → logprob: -4.169893264770508
    4. ' vis' → logprob: -6.169893264770508
    5. 'work' → logprob: -6.669893264770508
    6. 'prev' → logprob: -7.044893264770508
    7. 'True' → logprob: -7.169893264770508
    8. '(len' → logprob: -8.294893264770508
    9. '   ' → logprob: -8.669893264770508
    10. 'pend' → logprob: -9.044893264770508

Token 891: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019170116633176804
    2. 'ist' → logprob: -4.01917028427124
    3. 'len' → logprob: -7.14417028427124
    4. 'in' → logprob: -9.644169807434082
    5. '_list' → logprob: -9.894169807434082
    6. '   ' → logprob: -10.644169807434082
    7. 'is' → logprob: -11.144169807434082
    8. 'vis' → logprob: -11.269169807434082
    9. 'not' → logprob: -11.394169807434082
    10. 'prev' → logprob: -11.894169807434082

Token 892: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9434256553649902
    2. ' and' → logprob: -1.1934256553649902
    3. ':
' → logprob: -1.8184256553649902
    4. 'and' → logprob: -1.9434256553649902
    5. '!=' → logprob: -7.06842565536499
    6. '   ' → logprob: -7.44342565536499
    7. '==' → logprob: -8.818426132202148
    8. '>' → logprob: -8.943426132202148
    9. '.pop' → logprob: -9.818426132202148
    10. '=' → logprob: -10.568426132202148

Token 893: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6890323758125305
    2. ' x' → logprob: -0.9390323758125305
    3. ' nxt' → logprob: -3.4390323162078857
    4. '       ' → logprob: -3.9390323162078857
    5. ' p' → logprob: -4.814032554626465
    6. 'x' → logprob: -4.814032554626465
    7. 'n' → logprob: -5.064032554626465
    8. '	x' → logprob: -5.189032554626465
    9. '```' → logprob: -5.689032554626465
    10. 'p' → logprob: -5.689032554626465

Token 894: ' m' (ID: 284)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.3807952404022217
    2. 'x' → logprob: -2.2557952404022217
    3. 'p' → logprob: -2.7557952404022217
    4. 'c' → logprob: -2.8807952404022217
    5. '   ' → logprob: -3.5057952404022217
    6. ' nxt' → logprob: -3.7557952404022217
    7. 'curr' → logprob: -4.505795478820801
    8. 'n' → logprob: -4.755795478820801
    9. '       ' → logprob: -4.755795478820801
    10. ' cur' → logprob: -5.880795478820801

Token 895: 'ni' (ID: 1906)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2623729705810547
    2. '   ' → logprob: -1.2623729705810547
    3. ' =' → logprob: -1.3873729705810547
    4. '=' → logprob: -2.5123729705810547
    5. 'v' → logprob: -2.8873729705810547
    6. 'y' → logprob: -4.137372970581055
    7. 'cur' → logprob: -5.012372970581055
    8. 'ove' → logprob: -5.512372970581055
    9. 'p' → logprob: -5.762372970581055
    10. '  ' → logprob: -5.762372970581055

Token 896: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47798246145248413
    2. ' =' → logprob: -0.9779824614524841
    3. '=min' → logprob: -6.102982521057129
    4. '=x' → logprob: -7.102982521057129
    5. '=m' → logprob: -8.727982521057129
    6. 'x' → logprob: -8.727982521057129
    7. '=max' → logprob: -8.852982521057129
    8. '=_' → logprob: -9.477982521057129
    9. '   ' → logprob: -9.852982521057129
    10. '=in' → logprob: -10.227982521057129

Token 897: ' mn' (ID: 34208)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12428639829158783
    2. 'mi' → logprob: -3.374286413192749
    3. 'mn' → logprob: -3.374286413192749
    4. 'idx' → logprob: -4.12428617477417
    5. 'best' → logprob: -4.49928617477417
    6. 'mx' → logprob: -5.24928617477417
    7. 'work' → logprob: -5.62428617477417
    8. 'vis' → logprob: -6.12428617477417
    9. '_m' → logprob: -6.49928617477417
    10. 'cur' → logprob: -6.62428617477417

Token 898: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.599702775478363
    2. 'x' → logprob: -0.974702775478363
    3. ' =' → logprob: -3.474702835083008
    4. 'i' → logprob: -4.349702835083008
    5. 'idx' → logprob: -4.599702835083008
    6. 'd' → logprob: -5.599702835083008
    7. 'ind' → logprob: -5.599702835083008
    8. '_idx' → logprob: -6.599702835083008
    9. 'dist' → logprob: -6.599702835083008
    10. 'ex' → logprob: -7.099702835083008

Token 899: ' min' (ID: 1349)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '999' → logprob: -1.209642767906189
    2. '100' → logprob: -1.584642767906189
    3. 'min' → logprob: -1.709642767906189
    4. '10' → logprob: -2.3346428871154785
    5. 'None' → logprob: -2.3346428871154785
    6. 'float' → logprob: -2.7096428871154785
    7. '-' → logprob: -3.4596428871154785
    8. '1' → logprob: -4.7096428871154785
    9. 'dist' → logprob: -5.4596428871154785
    10. '(' → logprob: -5.5846428871154785

Token 900: '(en' (ID: 36375)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.21975912153720856
    2. '([(' → logprob: -2.594759225845337
    3. '(range' → logprob: -2.719759225845337
    4. '(en' → logprob: -3.469759225845337
    5. '(
' → logprob: -4.094758987426758
    6. '(len' → logprob: -6.219758987426758
    7. '(' → logprob: -6.469758987426758
    8. '[(' → logprob: -6.469758987426758
    9. '(((' → logprob: -6.719758987426758
    10. 'range' → logprob: -6.969758987426758

Token 901: 'umer' (ID: 3986)
  Prédit: 'umer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umer' → logprob: -4.127333340875339e-06
    2. 'umerator' → logprob: -13.250003814697266
    3. 'ume' → logprob: -14.000003814697266
    4. 'um' → logprob: -14.500003814697266
    5. 'enumer' → logprob: -15.125003814697266
    6. '((' → logprob: -15.500003814697266
    7. 'umar' → logprob: -16.000003814697266
    8. '(en' → logprob: -16.000003814697266
    9. 'ummer' → logprob: -16.125003814697266
    10. '(range' → logprob: -16.750003814697266

Token 902: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.0003136552404612303
    2. 'enumer' → logprob: -8.875313758850098
    3. ' enumerate' → logprob: -8.875313758850098
    4. 'te' → logprob: -10.625313758850098
    5. 'e' → logprob: -12.500313758850098
    6. '
' → logprob: -13.000313758850098
    7. 'range' → logprob: -13.750313758850098
    8. '(' → logprob: -14.250313758850098
    9. '((' → logprob: -14.875313758850098
    10. '[' → logprob: -15.250313758850098

Token 903: '(vis' (ID: 183220)
  Prédit: '(vis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vis' → logprob: -0.053182996809482574
    2. '((' → logprob: -3.553183078765869
    3. '([(' → logprob: -4.303183078765869
    4. 'vis' → logprob: -5.428183078765869
    5. '([' → logprob: -5.928183078765869
    6. '(' → logprob: -6.928183078765869
    7. '(range' → logprob: -7.303183078765869
    8. '(((' → logprob: -7.678183078765869
    9. '(
' → logprob: -8.928182601928711
    10. '[(' → logprob: -9.553182601928711

Token 904: 'list' (ID: 2641)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.003758990205824375
    2. 'list' → logprob: -5.753758907318115
    3. 'is' → logprob: -7.628758907318115
    4. 'st' → logprob: -10.503759384155273
    5. '[' → logprob: -10.878759384155273
    6. 'vis' → logprob: -11.003759384155273
    7. 't' → logprob: -11.753759384155273
    8. '{' → logprob: -12.503759384155273
    9. '   ' → logprob: -12.628759384155273
    10. '
' → logprob: -12.753759384155273

Token 905: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5872044563293457
    2. ',key' → logprob: -0.9622044563293457
    3. '),' → logprob: -3.0872044563293457
    4. '(key' → logprob: -4.462204456329346
    5. '(),' → logprob: -6.087204456329346
    6. '   ' → logprob: -6.712204456329346
    7. 'key' → logprob: -7.087204456329346
    8. ')' → logprob: -7.837204456329346
    9. ',
' → logprob: -9.712203979492188
    10. ' key' → logprob: -10.212203979492188

Token 906: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.018174059689044952
    2. ' key' → logprob: -4.018174171447754
    3. ',key' → logprob: -11.518174171447754
    4. '(key' → logprob: -12.018174171447754
    5. 'lambda' → logprob: -12.143174171447754
    6. '   ' → logprob: -13.893174171447754
    7. '       ' → logprob: -14.018174171447754
    8. '	key' → logprob: -14.268174171447754
    9. '           ' → logprob: -15.768174171447754
    10. '
' → logprob: -16.893173217773438

Token 907: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.1277730017900467
    2. 'lambda' → logprob: -2.1277730464935303
    3. '(lambda' → logprob: -7.127772808074951
    4. '=' → logprob: -10.50277328491211
    5. '```' → logprob: -11.87777328491211
    6. '   ' → logprob: -12.00277328491211
    7. ' lambda' → logprob: -14.62777328491211
    8. '_lambda' → logprob: -15.25277328491211
    9. '       ' → logprob: -15.50277328491211
    10. '(' → logprob: -16.00277328491211

Token 908: ' v' (ID: 323)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.00024989593657664955
    2. ' lambda' → logprob: -8.500249862670898
    3. '(lambda' → logprob: -10.250249862670898
    4. '=lambda' → logprob: -11.500249862670898
    5. 'operator' → logprob: -14.625249862670898
    6. '   ' → logprob: -14.875249862670898
    7. '_lambda' → logprob: -17.2502498626709
    8. 'x' → logprob: -17.8752498626709
    9. 'lam' → logprob: -18.5002498626709
    10. 'λ' → logprob: -18.6252498626709

Token 909: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.01866559498012066
    2. 'v' → logprob: -4.143665790557861
    3. ' lambda' → logprob: -6.518665790557861
    4. '=lambda' → logprob: -7.143665790557861
    5. 'x' → logprob: -9.018665313720703
    6. 'ambda' → logprob: -9.643665313720703
    7. '(lambda' → logprob: -9.643665313720703
    8. ':v' → logprob: -10.393665313720703
    9. '   ' → logprob: -10.518665313720703
    10. ' v' → logprob: -10.768665313720703

Token 910: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0014173806412145495
    2. 'lambda' → logprob: -6.87641716003418
    3. '(dist' → logprob: -8.75141716003418
    4. ' dist' → logprob: -8.75141716003418
    5. '   ' → logprob: -9.87641716003418
    6. '(lambda' → logprob: -12.37641716003418
    7. ' lambda' → logprob: -13.00141716003418
    8. 'v' → logprob: -13.00141716003418
    9. 'abs' → logprob: -13.37641716003418
    10. '  ' → logprob: -14.25141716003418

Token 911: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1302645057439804
    2. 'prev' → logprob: -2.2552645206451416
    3. '[v' → logprob: -4.6302642822265625
    4. '(prev' → logprob: -5.7552642822265625
    5. 'v' → logprob: -6.1302642822265625
    6. '_prev' → logprob: -6.7552642822265625
    7. '(v' → logprob: -8.255264282226562
    8. '[(' → logprob: -8.255264282226562
    9. '[
' → logprob: -8.630264282226562
    10. '   ' → logprob: -8.880264282226562

Token 912: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1274077296257019
    2. '(prev' → logprob: -2.1274077892303467
    3. '[' → logprob: -8.127408027648926
    4. '(' → logprob: -9.127408027648926
    5. ' prev' → logprob: -10.127408027648926
    6. 'work' → logprob: -11.377408027648926
    7. ' (' → logprob: -12.752408027648926
    8. '	prev' → logprob: -12.877408027648926
    9. '(work' → logprob: -13.002408027648926
    10. '(previous' → logprob: -13.002408027648926

Token 913: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6408339142799377
    2. '][' → logprob: -1.265833854675293
    3. '[v' → logprob: -2.265833854675293
    4. ',v' → logprob: -2.765833854675293
    5. ',' → logprob: -3.890833854675293
    6. 'v' → logprob: -6.640833854675293
    7. '1' → logprob: -7.640833854675293
    8. ',[' → logprob: -7.890833854675293
    9. ' v' → logprob: -8.015833854675293
    10. ' [' → logprob: -8.640833854675293

Token 914: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005401307251304388
    2. '1' → logprob: -5.255401134490967
    3. ' v' → logprob: -9.255401611328125
    4. 'vis' → logprob: -10.005401611328125
    5. '[' → logprob: -10.755401611328125
    6. '[v' → logprob: -13.130401611328125
    7. 'vist' → logprob: -14.130401611328125
    8. ' ' → logprob: -14.755401611328125
    9. '```' → logprob: -14.880401611328125
    10. '
' → logprob: -15.005401611328125

Token 915: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001154270488768816
    2. '1' → logprob: -6.87615442276001
    3. 'v' → logprob: -9.501153945922852
    4. '[v' → logprob: -11.626153945922852
    5. ',v' → logprob: -11.876153945922852
    6. '][' → logprob: -12.376153945922852
    7. '```' → logprob: -12.626153945922852
    8. ']' → logprob: -13.126153945922852
    9. ')' → logprob: -13.126153945922852
    10. '=' → logprob: -13.126153945922852

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.721228368813172e-05
    2. '[' → logprob: -9.750086784362793
    3. '
' → logprob: -11.625086784362793
    4. '-' → logprob: -12.250086784362793
    5. '(' → logprob: -12.500086784362793
    6. '0' → logprob: -12.875086784362793
    7. 'v' → logprob: -13.500086784362793
    8. '   ' → logprob: -13.625086784362793
    9. '```' → logprob: -13.875086784362793
    10. '{' → logprob: -14.000086784362793

Token 917: ']])
' (ID: 62818)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4089467525482178
    2. '])
' → logprob: -1.4089467525482178
    3. '])' → logprob: -3.1589467525482178
    4. '][' → logprob: -3.4089467525482178
    5. ']))
' → logprob: -5.283946990966797
    6. ']])
' → logprob: -5.408946990966797
    7. ']' → logprob: -5.783946990966797
    8. ']),' → logprob: -7.283946990966797
    9. '],' → logprob: -8.033946990966797
    10. ' ])
' → logprob: -8.283946990966797

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011922525009140372
    2. ',' → logprob: -7.251192092895508
    3. '   ' → logprob: -8.501192092895508
    4. '```' → logprob: -9.126192092895508
    5. '_,' → logprob: -9.626192092895508
    6. '<|end|>' → logprob: -10.126192092895508
    7. ',
' → logprob: -11.751192092895508
    8. '[' → logprob: -11.751192092895508
    9. ')' → logprob: -11.876192092895508
    10. '
' → logprob: -12.251192092895508

Token 919: ' mn' (ID: 34208)
  Prédit: ' work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' work' → logprob: -0.251522034406662
    2. 'work' → logprob: -1.6265220642089844
    3. '       ' → logprob: -4.001522064208984
    4. 'prev' → logprob: -5.751522064208984
    5. ' prev' → logprob: -6.501522064208984
    6. '   ' → logprob: -7.001522064208984
    7. ' del' → logprob: -7.251522064208984
    8. 'del' → logprob: -7.876522064208984
    9. '           ' → logprob: -9.001522064208984
    10. '	work' → logprob: -9.126522064208984

Token 920: 'x' (ID: 87)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.434508353471756
    2. ' =' → logprob: -1.0595083236694336
    3. ',' → logprob: -5.309508323669434
    4. '   ' → logprob: -7.559508323669434
    5. '    ' → logprob: -9.934508323669434
    6. '=
' → logprob: -10.434508323669434
    7. ' ' → logprob: -10.559508323669434
    8. '  ' → logprob: -10.684508323669434
    9. '_=' → logprob: -10.684508323669434
    10. ']' → logprob: -10.934508323669434

Token 921: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932263374328613
    2. ' =' → logprob: -0.6932263374328613
    3. ',' → logprob: -9.693225860595703
    4. '=m' → logprob: -11.318225860595703
    5. '   ' → logprob: -13.443225860595703
    6. '=
' → logprob: -13.818225860595703
    7. ' ' → logprob: -14.568225860595703
    8. '  ' → logprob: -14.943225860595703
    9. '=

' → logprob: -15.193225860595703
    10. ',m' → logprob: -15.818225860595703

Token 922: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.005112441722303629
    2. ' vis' → logprob: -5.380112648010254
    3. 'work' → logprob: -7.755112648010254
    4. ' work' → logprob: -11.005112648010254
    5. 'mn' → logprob: -11.130112648010254
    6. 'm' → logprob: -11.880112648010254
    7. '   ' → logprob: -12.255112648010254
    8. ' ' → logprob: -12.380112648010254
    9. 'vist' → logprob: -12.630112648010254
    10. '(vis' → logprob: -12.880112648010254

Token 923: 'list' (ID: 2641)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.4742096960544586
    2. 'list' → logprob: -0.9742096662521362
    3. '[' → logprob: -8.974209785461426
    4. 'is' → logprob: -13.474209785461426
    5. 'loc' → logprob: -13.974209785461426
    6. 'st' → logprob: -14.224209785461426
    7. 'pop' → logprob: -14.724209785461426
    8. 'vis' → logprob: -14.724209785461426
    9. 'lst' → logprob: -15.099209785461426
    10. 'cl' → logprob: -15.224209785461426

Token 924: '[m' (ID: 29271)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.06197217106819153
    2. '[m' → logprob: -2.811972141265869
    3. 'pop' → logprob: -12.686972618103027
    4. '[:' → logprob: -14.561972618103027
    5. '
' → logprob: -14.936972618103027
    6. '.' → logprob: -14.936972618103027
    7. '   ' → logprob: -16.31197166442871
    8. ' .' → logprob: -16.43697166442871
    9. '[:]' → logprob: -17.68697166442871
    10. '[
' → logprob: -18.18697166442871

Token 925: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.747814349073451e-05
    2. 'n' → logprob: -11.625017166137695
    3. 'i' → logprob: -12.375017166137695
    4. '[' → logprob: -14.250017166137695
    5. '[i' → logprob: -14.375017166137695
    6. '
' → logprob: -14.375017166137695
    7. '니' → logprob: -15.125017166137695
    8. '```' → logprob: -15.250017166137695
    9. '   ' → logprob: -15.375017166137695
    10. 'x' → logprob: -15.625017166137695

Token 926: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0013029761612415314
    2. ']' → logprob: -6.751303195953369
    3. '];' → logprob: -9.751302719116211
    4. '       ' → logprob: -10.001302719116211
    5. ']

' → logprob: -11.751302719116211
    6. ']
' → logprob: -11.751302719116211
    7. '];
' → logprob: -12.501302719116211
    8. '.pop' → logprob: -12.876302719116211
    9. '   ' → logprob: -13.251302719116211
    10. '].' → logprob: -13.376302719116211

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015217094914987683
    2. '   ' → logprob: -9.500152587890625
    3. '```' → logprob: -10.000152587890625
    4. 'work' → logprob: -10.750152587890625
    5. 'vis' → logprob: -12.500152587890625
    6. '<|end|>' → logprob: -13.000152587890625
    7. '           ' → logprob: -14.125152587890625
    8. 'del' → logprob: -14.125152587890625
    9. ' work' → logprob: -14.375152587890625
    10. '``' → logprob: -14.500152587890625

Token 928: ' work' (ID: 1101)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020474620163440704
    2. 'work' (adapté à ' work') → logprob: -4.270474433898926
    3. 'vis' → logprob: -5.645474433898926
    4. 'del' → logprob: -6.145474433898926
    5. 'prev' → logprob: -7.895474433898926
    6. '   ' → logprob: -9.145474433898926
    7. ' work' → logprob: -9.770474433898926
    8. ' del' → logprob: -10.770474433898926
    9. 'if' → logprob: -11.020474433898926
    10. '           ' → logprob: -11.270474433898926

Token 929: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001694580540060997
    2. '.extend' → logprob: -6.501694679260254
    3. '+=' → logprob: -9.126694679260254
    4. '.' → logprob: -9.751694679260254
    5. ' +=' → logprob: -11.126694679260254
    6. '=' → logprob: -11.626694679260254
    7. '+' → logprob: -14.376694679260254
    8. ' .' → logprob: -14.751694679260254
    9. ' =' → logprob: -15.376694679260254
    10. '.insert' → logprob: -15.751694679260254

Token 930: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0013690461637452245
    2. 'mn' → logprob: -7.001368999481201
    3. '(' → logprob: -7.751368999481201
    4. 'm' → logprob: -10.75136947631836
    5. '(mx' → logprob: -12.62636947631836
    6. '(x' → logprob: -13.87636947631836
    7. '```' → logprob: -14.75136947631836
    8. '(
' → logprob: -15.12636947631836
    9. ' mn' → logprob: -15.37636947631836
    10. 'mx' → logprob: -15.87636947631836

Token 931: 'nx' (ID: 45103)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5764302611351013
    2. 'nx' → logprob: -0.8264302611351013
    3. 'xn' → logprob: -8.326430320739746
    4. 'n' → logprob: -8.451430320739746
    5. '(nx' → logprob: -10.826430320739746
    6. 'Nx' → logprob: -12.576430320739746
    7. '[x' → logprob: -12.576430320739746
    8. 'lx' → logprob: -12.701430320739746
    9. 'sx' → logprob: -14.076430320739746
    10. '(x' → logprob: -14.076430320739746

Token 932: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023440664634108543
    2. ')
' → logprob: -3.7734405994415283
    3. ')' → logprob: -8.64844036102295
    4. '
' → logprob: -11.52344036102295
    5. ',' → logprob: -13.14844036102295
    6. '),' → logprob: -13.27344036102295
    7. '        
' → logprob: -13.77344036102295
    8. ';' → logprob: -14.52344036102295
    9. ' )
' → logprob: -14.52344036102295
    10. ');
' → logprob: -14.52344036102295

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005277634598314762
    2. 'vis' → logprob: -5.255277633666992
    3. '   ' → logprob: -10.630277633666992
    4. 'del' → logprob: -11.130277633666992
    5. '           ' → logprob: -13.505277633666992
    6. '```' → logprob: -13.880277633666992
    7. 'prev' → logprob: -14.255277633666992
    8. 'vist' → logprob: -14.630277633666992
    9. ' vis' → logprob: -15.130277633666992
    10. '        
' → logprob: -15.130277633666992

Token 934: ' del' (ID: 1083)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.7098510265350342
    2. 'del' (adapté à ' del') → logprob: -1.3348510265350342
    3. 'prev' → logprob: -1.4598510265350342
    4. '       ' → logprob: -4.459851264953613
    5. '   ' → logprob: -6.834851264953613
    6. '           ' → logprob: -9.084851264953613
    7. ' del' → logprob: -10.834851264953613
    8. 'visi' → logprob: -11.584851264953613
    9. 'visited' → logprob: -12.209851264953613
    10. 'vist' → logprob: -12.334851264953613

Token 935: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.01104935072362423
    2. ' vis' → logprob: -4.511049270629883
    3. '(vis' → logprob: -13.386049270629883
    4. 'vist' → logprob: -17.511049270629883
    5. '_vis' → logprob: -19.011049270629883
    6. ' ' → logprob: -19.261049270629883
    7. '.vis' → logprob: -19.511049270629883
    8. 'visi' → logprob: -19.636049270629883
    9. 'vi' → logprob: -20.011049270629883
    10. '[' → logprob: -20.511049270629883

Token 936: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.578415036201477
    2. 'ist' → logprob: -0.828415036201477
    3. '[' → logprob: -6.3284149169921875
    4. 't' → logprob: -7.3284149169921875
    5. '_list' → logprob: -11.453414916992188
    6. '{' → logprob: -12.328414916992188
    7. '(' → logprob: -12.578414916992188
    8. '(t' → logprob: -13.078414916992188
    9. 'List' → logprob: -13.203414916992188
    10. 'st' → logprob: -13.453414916992188

Token 937: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '[max' → logprob: -17.25
    4. 'm' → logprob: -17.875
    5. '[:' → logprob: -18.0
    6. '[:]' → logprob: -18.125
    7. '[min' → logprob: -19.0
    8. '[-' → logprob: -19.125
    9. '[n' → logprob: -19.375
    10. '[
' → logprob: -19.5

Token 938: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.2200749754119897e-06
    2. 'n' → logprob: -13.375001907348633
    3. 'ни' → logprob: -15.500001907348633
    4. '니' → logprob: -16.000001907348633
    5. 'i' → logprob: -16.250001907348633
    6. '[' → logprob: -17.500001907348633
    7. 'x' → logprob: -17.875001907348633
    8. '   ' → logprob: -17.875001907348633
    9. 'no' → logprob: -17.875001907348633
    10. '
' → logprob: -18.000001907348633

Token 939: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0624447762966156
    2. '<|end|>' → logprob: -2.8124446868896484
    3. '   ' → logprob: -9.187444686889648
    4. '<|end|>' → logprob: -9.437444686889648
    5. '           ' → logprob: -9.687444686889648
    6. '        ' → logprob: -9.937444686889648
    7. 'prev' → logprob: -9.937444686889648
    8. '      ' → logprob: -10.812444686889648
    9. '
' → logprob: -10.937444686889648
    10. '    ' → logprob: -11.312444686889648

Token 941: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.062413863837718964
    2. '       ' → logprob: -2.8124139308929443
    3. ' prev' → logprob: -7.812413692474365
    4. '	prev' → logprob: -11.062414169311523
    5. '   ' → logprob: -11.437414169311523
    6. '           ' → logprob: -12.187414169311523
    7. '_prev' → logprob: -12.562414169311523
    8. '(prev' → logprob: -13.187414169311523
    9. 'previous' → logprob: -13.437414169311523
    10. 'Prev' → logprob: -14.187414169311523

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042064756155014
    2. ' =' → logprob: -3.2880420684814453
    3. ',' → logprob: -14.913042068481445
    4. '.=' → logprob: -15.538042068481445
    5. '=
' → logprob: -16.038042068481445
    6. '=

' → logprob: -17.163042068481445
    7. '=n' → logprob: -18.788042068481445
    8. '=m' → logprob: -18.788042068481445
    9. '_=' → logprob: -18.788042068481445
    10. ' =
' → logprob: -19.163042068481445

Token 943: ' mn' (ID: 34208)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.0011715330183506012
    2. ' mn' → logprob: -6.751171588897705
    3. 'work' → logprob: -13.626171112060547
    4. ' work' → logprob: -17.251171112060547
    5. 'm' → logprob: -17.626171112060547
    6. 'mx' → logprob: -17.626171112060547
    7. '.mn' → logprob: -17.751171112060547
    8. 'Mn' → logprob: -18.626171112060547
    9. 'mnt' → logprob: -18.751171112060547
    10. ' ' → logprob: -19.376171112060547

Token 944: 'x' (ID: 87)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 946: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: ' pend' (ID: 27278)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 948: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.5558443069458008
    2. '=' → logprob: -1.4308443069458008
    3. '.clear' → logprob: -1.9308443069458008
    4. '[:]' → logprob: -3.430844306945801
    5. ' =' → logprob: -4.930844306945801
    6. '<|end|>' → logprob: -6.305844306945801
    7. '.append' → logprob: -8.6808443069458
    8. '.pop' → logprob: -8.8058443069458
    9. '=[]
' → logprob: -9.0558443069458
    10. '.sort' → logprob: -9.0558443069458

Token 949: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.8312570318812504e-05
    2. '[]>' → logprob: -12.000018119812012
    3. '[]}' → logprob: -12.125018119812012
    4. '=[]' → logprob: -13.125018119812012
    5. '[]
' → logprob: -13.125018119812012
    6. '[])' → logprob: -13.500018119812012
    7. '[],' → logprob: -15.000018119812012
    8. '[:]' → logprob: -15.250018119812012
    9. ' []' → logprob: -15.625018119812012
    10. '[].' → logprob: -15.750018119812012

Token 950: 'x' (ID: 87)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05447528138756752
    2. '(x' → logprob: -3.4294753074645996
    3. 'x' → logprob: -5.0544753074646
    4. '(' → logprob: -5.5544753074646
    5. '()]' → logprob: -5.9294753074646
    6. '(p' → logprob: -6.3044753074646
    7. 'for' → logprob: -6.4294753074646
    8. 'p' → logprob: -7.1794753074646
    9. '   ' → logprob: -7.4294753074646
    10. '(i' → logprob: -7.5544753074646

Token 951: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18047519028186798
    2. 'for' → logprob: -1.8054752349853516
    3. '[' → logprob: -7.930475234985352
    4. '	for' → logprob: -8.555475234985352
    5. '   ' → logprob: -8.805475234985352
    6. ']' → logprob: -12.055475234985352
    7. ')' → logprob: -12.055475234985352
    8. '       ' → logprob: -12.680475234985352
    9. '  ' → logprob: -12.930475234985352
    10. ' ' → logprob: -13.055475234985352

Token 952: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.8497312895488e-05
    2. ' x' → logprob: -10.000068664550781
    3. '_' → logprob: -10.875068664550781
    4. '_,' → logprob: -13.000068664550781
    5. '_x' → logprob: -14.500068664550781
    6. '(x' → logprob: -14.875068664550781
    7. '(_,' → logprob: -15.250068664550781
    8. 'pend' → logprob: -15.750068664550781
    9. '
' → logprob: -15.875068664550781
    10. 'p' → logprob: -15.875068664550781

Token 953: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22634418308734894
    2. ' in' → logprob: -1.6013442277908325
    3. ',' → logprob: -7.851344108581543
    4. ',_' → logprob: -8.351344108581543
    5. 'if' → logprob: -9.851344108581543
    6. 'x' → logprob: -9.976344108581543
    7. ',x' → logprob: -10.101344108581543
    8. ' ' → logprob: -10.101344108581543
    9. '   ' → logprob: -10.726344108581543
    10. '
' → logprob: -10.976344108581543

Token 954: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.017093708738684654
    2. 'x' → logprob: -4.392093658447266
    3. 'pending' → logprob: -6.142093658447266
    4. '_' → logprob: -6.892093658447266
    5. ' pend' → logprob: -8.142093658447266
    6. 'pen' → logprob: -8.642093658447266
    7. 'filter' → logprob: -8.767093658447266
    8. '_p' → logprob: -9.142093658447266
    9. '_x' → logprob: -9.142093658447266
    10. 'work' → logprob: -9.704593658447266

Token 955: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5759873986244202
    2. ' if' → logprob: -0.8259873986244202
    3. '   ' → logprob: -10.325987815856934
    4. ']' → logprob: -11.450987815856934
    5. '	if' → logprob: -13.075987815856934
    6. '       ' → logprob: -14.325987815856934
    7. '  ' → logprob: -14.700987815856934
    8. '    ' → logprob: -14.950987815856934
    9. '           ' → logprob: -15.200987815856934
    10. ' ' → logprob: -15.825987815856934

Token 956: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.010231023654341698
    2. ' x' → logprob: -5.135231018066406
    3. '(x' → logprob: -5.760231018066406
    4. 'not' → logprob: -7.885231018066406
    5. '   ' → logprob: -8.010231018066406
    6. '1' → logprob: -9.510231018066406
    7. '(' → logprob: -9.760231018066406
    8. ' (' → logprob: -10.010231018066406
    9. ' not' → logprob: -10.010231018066406
    10. ' ' → logprob: -10.135231018066406

Token 957: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00025657136575318873
    2. ' not' → logprob: -8.625256538391113
    3. 'not' → logprob: -9.750256538391113
    4. 'if' → logprob: -12.125256538391113
    5. 'and' → logprob: -12.500256538391113
    6. ' in' → logprob: -12.750256538391113
    7. 'x' → logprob: -13.500256538391113
    8. ' [' → logprob: -13.750256538391113
    9. 'in' → logprob: -14.625256538391113
    10. '   ' → logprob: -14.625256538391113

Token 958: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.019237768370658e-05
    2. '0' → logprob: -10.000090599060059
    3. ' ' → logprob: -10.875090599060059
    4. '
' → logprob: -12.125090599060059
    5. 'not' → logprob: -12.125090599060059
    6. '   ' → logprob: -12.875090599060059
    7. '[' → logprob: -13.000090599060059
    8. ' not' → logprob: -13.125090599060059
    9. '(' → logprob: -13.875090599060059
    10. '][' → logprob: -14.000090599060059

Token 959: ']' (ID: 60)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6375706195831299
    2. ' not' → logprob: -0.7625706195831299
    3. 'in' → logprob: -5.887570381164551
    4. ']' → logprob: -6.887570381164551
    5. ' in' → logprob: -7.387570381164551
    6. '!=' → logprob: -8.63757038116455
    7. '[' → logprob: -9.01257038116455
    8. 'if' → logprob: -9.76257038116455
    9. ' !=' → logprob: -10.38757038116455
    10. '   ' → logprob: -10.38757038116455

Token 960: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2654420733451843
    2. 'not' → logprob: -1.515442132949829
    3. ' in' → logprob: -4.89044189453125
    4. 'in' → logprob: -5.14044189453125
    5. '!=' → logprob: -10.51544189453125
    6. ' !=' → logprob: -12.01544189453125
    7. ']' → logprob: -13.01544189453125
    8. 'x' → logprob: -13.14044189453125
    9. ' x' → logprob: -13.14044189453125
    10. '	not' → logprob: -13.26544189453125

Token 961: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.201463520526886
    2. ' in' → logprob: -1.8264634609222412
    3. 'work' → logprob: -3.951463460922241
    4. ' work' → logprob: -6.20146369934082
    5. '(work' → logprob: -8.95146369934082
    6. 'set' → logprob: -10.95146369934082
    7. 'vis' → logprob: -11.57646369934082
    8. ',' → logprob: -11.57646369934082
    9. '{' → logprob: -12.07646369934082
    10. '
' → logprob: -12.38896369934082

Token 962: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.004191063344478607
    2. 'set' → logprob: -6.004190921783447
    3. ' work' → logprob: -6.504190921783447
    4. 'vis' → logprob: -9.379191398620605
    5. ' set' → logprob: -9.504191398620605
    6. '{' → logprob: -10.879191398620605
    7. '[' → logprob: -11.879191398620605
    8. '(work' → logprob: -11.879191398620605
    9. '	work' → logprob: -12.004191398620605
    10. '   ' → logprob: -12.504191398620605

Token 963: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00035906085395254195
    2. '()]' → logprob: -8.500359535217285
    3. ' ]' → logprob: -8.875359535217285
    4. ']
' → logprob: -11.375359535217285
    5. ')]' → logprob: -12.750359535217285
    6. '`]' → logprob: -14.750359535217285
    7. ']

' → logprob: -14.875359535217285
    8. ':]' → logprob: -16.00035858154297
    9. ']
' → logprob: -16.12535858154297
    10. '   ' → logprob: -16.25035858154297

Token 964: 'printer' (ID: 144218)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 965: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00398021237924695
    2. '('' → logprob: -5.8789801597595215
    3. '<|end|>' → logprob: -8.62898063659668
    4. '(
' → logprob: -8.75398063659668
    5. '("("' → logprob: -8.75398063659668
    6. '("")' → logprob: -9.50398063659668
    7. '(pr' → logprob: -9.50398063659668
    8. '(print' → logprob: -9.62898063659668
    9. ')' → logprob: -9.62898063659668
    10. '((' → logprob: -10.25398063659668

Token 966: 'start' (ID: 5236)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3655988574028015
    2. ')' → logprob: -1.2405989170074463
    3. '\n' → logprob: -5.365598678588867
    4. '"' → logprob: -5.865598678588867
    5. 'def' → logprob: -6.240598678588867
    6. ')")' → logprob: -6.365598678588867
    7. 'import' → logprob: -7.240598678588867
    8. '")
' → logprob: -7.365598678588867
    9. ')
' → logprob: -7.365598678588867
    10. '')' → logprob: -7.615598678588867

Token 967: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01026489119976759
    2. ')' → logprob: -4.760264873504639
    3. ')")' → logprob: -7.385264873504639
    4. '()' → logprob: -7.635264873504639
    5. '\n' → logprob: -7.885264873504639
    6. '")
' → logprob: -9.135265350341797
    7. '("' → logprob: -11.135265350341797
    8. '"' → logprob: -11.635265350341797
    9. ')
' → logprob: -12.260265350341797
    10. '())' → logprob: -12.510265350341797

Token 968: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.02761351503431797
    2. 'n' → logprob: -4.152613639831543
    3. 'last' → logprob: -4.777613639831543
    4. 'def' → logprob: -6.152613639831543
    5. '#' → logprob: -8.652613639831543
    6. 'if' → logprob: -8.652613639831543
    7. 'MAX' → logprob: -8.902613639831543
    8. 'for' → logprob: -9.152613639831543
    9. 'pend' → logprob: -9.277613639831543
    10. 'dist' → logprob: -10.652613639831543

Token 969: ',E' (ID: 101576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8855400085449219
    2. '=' → logprob: -1.0105400085449219
    3. ',' → logprob: -1.5105400085449219
    4. '=int' → logprob: -6.385540008544922
    5. ' ,' → logprob: -7.635540008544922
    6. ',n' → logprob: -8.510540008544922
    7. ',V' → logprob: -8.760540008544922
    8. ',N' → logprob: -10.010540008544922
    9. ',v' → logprob: -10.385540008544922
    10. ',int' → logprob: -10.760540008544922

Token 970: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1490750014781952
    2. ' =' → logprob: -2.1490750312805176
    3. ',' → logprob: -3.8990750312805176
    4. ',n' → logprob: -7.149075031280518
    5. ',g' → logprob: -8.27407455444336
    6. '=n' → logprob: -8.77407455444336
    7. ' ,' → logprob: -9.14907455444336
    8. ',V' → logprob: -9.52407455444336
    9. '=int' → logprob: -9.89907455444336
    10. ',v' → logprob: -10.39907455444336

Token 971: ' gm' (ID: 82401)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.8799216151237488
    2. 'gin' → logprob: -1.8799216747283936
    3. ' gin' → logprob: -2.0049216747283936
    4. 'gm' → logprob: -2.1299216747283936
    5. ' map' → logprob: -2.3799216747283936
    6. 'lint' → logprob: -2.6299216747283936
    7. ' lint' → logprob: -4.8799214363098145
    8. ' gm' → logprob: -5.6299214363098145
    9. ' ' → logprob: -7.1299214363098145
    10. 'lit' → logprob: -8.754921913146973

Token 972: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002382249804213643
    2. '()
' → logprob: -8.500238418579102
    3. '(' → logprob: -11.250238418579102
    4. '(),' → logprob: -12.125238418579102
    5. '=' → logprob: -12.375238418579102
    6. ' ()' → logprob: -12.375238418579102
    7. '()

' → logprob: -13.125238418579102
    8. ' =' → logprob: -13.750238418579102
    9. '())' → logprob: -13.750238418579102
    10. '()\' → logprob: -14.000238418579102

Token 973: 'es' (ID: 268)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.026966705918312073
    2. 'n' → logprob: -4.276966571807861
    3. 'adj' → logprob: -4.901966571807861
    4. 'last' → logprob: -6.526966571807861
    5. 'V' → logprob: -6.526966571807861
    6. 'MAX' → logprob: -7.526966571807861
    7. 'Q' → logprob: -7.651966571807861
    8. 'graph' → logprob: -8.15196704864502
    9. 'from' → logprob: -9.02696704864502
    10. 'G' → logprob: -9.15196704864502

Token 974: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07562977075576782
    2. ' =' → logprob: -2.950629711151123
    3. '=[]' → logprob: -3.950629711151123
    4. '=[' → logprob: -8.200630187988281
    5. 't' → logprob: -8.450630187988281
    6. '=[]
' → logprob: -8.575630187988281
    7. 's' → logprob: -9.325630187988281
    8. '[' → logprob: -9.325630187988281
    9. 'd' → logprob: -9.450630187988281
    10. '[]' → logprob: -9.575630187988281

Token 975: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06973544508218765
    2. '[' → logprob: -3.069735527038574
    3. '[]
' → logprob: -4.444735527038574
    4. '[list' → logprob: -5.569735527038574
    5. '[l' → logprob: -5.694735527038574
    6. '[int' → logprob: -6.819735527038574
    7. '[len' → logprob: -8.444735527038574
    8. '[line' → logprob: -9.194735527038574
    9. '[size' → logprob: -9.819735527038574
    10. '[g' → logprob: -10.069735527038574

Token 976: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16044946014881134
    2. ' for' → logprob: -1.910449504852295
    3. ']' → logprob: -9.035449028015137
    4. ',' → logprob: -10.285449028015137
    5. '	for' → logprob: -10.410449028015137
    6. '
' → logprob: -10.785449028015137
    7. '()' → logprob: -11.910449028015137
    8. '   ' → logprob: -12.535449028015137
    9. ' ' → logprob: -12.785449028015137
    10. ')' → logprob: -13.535449028015137

Token 977: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015264061512425542
    2. 'range' → logprob: -7.251526355743408
    3. ' _' → logprob: -7.751526355743408
    4. ' range' → logprob: -8.751526832580566
    5. 'in' → logprob: -9.001526832580566
    6. ' in' → logprob: -9.251526832580566
    7. 'i' → logprob: -13.251526832580566
    8. 'x' → logprob: -13.376526832580566
    9. '_range' → logprob: -13.751526832580566
    10. '_
' → logprob: -13.751526832580566

Token 978: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21819564700126648
    2. 'in' → logprob: -2.093195676803589
    3. '_' → logprob: -2.968195676803589
    4. ' range' → logprob: -4.34319543838501
    5. ' in' → logprob: -4.84319543838501
    6. 'i' → logprob: -8.218195915222168
    7. ' ' → logprob: -10.093195915222168
    8. 'x' → logprob: -10.218195915222168
    9. '_range' → logprob: -10.468195915222168
    10. '_V' → logprob: -11.093195915222168

Token 979: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023251067847013474
    2. ' range' → logprob: -3.7732510566711426
    3. '_' → logprob: -12.6482515335083
    4. '(range' → logprob: -13.5232515335083
    5. '_range' → logprob: -13.8982515335083
    6. '	range' → logprob: -17.273250579833984
    7. '   ' → logprob: -18.023250579833984
    8. '
' → logprob: -18.898250579833984
    9. 'V' → logprob: -19.148250579833984
    10. 'r' → logprob: -19.273250579833984

Token 980: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.4740891456604004
    2. 'V' → logprob: -0.9740891456604004
    3. 'range' → logprob: -12.349088668823242
    4. ' V' → logprob: -12.849088668823242
    5. '   ' → logprob: -13.349088668823242
    6. ' (' → logprob: -14.224088668823242
    7. '0' → logprob: -14.349088668823242
    8. '(' → logprob: -14.349088668823242
    9. 'E' → logprob: -14.724088668823242
    10. '	V' → logprob: -14.974088668823242

Token 981: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04984784126281738
    2. '+' → logprob: -3.5498478412628174
    3. ')]
' → logprob: -3.9248478412628174
    4. ')]
' → logprob: -9.424847602844238
    5. ')]

' → logprob: -9.799847602844238
    6. ')' → logprob: -12.049847602844238
    7. ' )' → logprob: -12.799847602844238
    8. ']' → logprob: -13.299847602844238
    9. ' +' → logprob: -13.424847602844238
    10. '   ' → logprob: -14.424847602844238

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020520923135336488
    2. '0' → logprob: -9.500205039978027
    3. '(V' → logprob: -9.625205039978027
    4. 'V' → logprob: -10.125205039978027
    5. '(' → logprob: -11.625205039978027
    6. ' ' → logprob: -11.875205039978027
    7. 'E' → logprob: -12.375205039978027
    8. '(E' → logprob: -13.125205039978027
    9. '=' → logprob: -14.625205039978027
    10. '   ' → logprob: -15.125205039978027

Token 983: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008640928193926811
    2. ']
' → logprob: -4.758640766143799
    3. ')]' → logprob: -11.508641242980957
    4. ' ]' → logprob: -12.133641242980957
    5. ']

' → logprob: -12.133641242980957
    6. ']
' → logprob: -12.383641242980957
    7. '()]' → logprob: -14.883641242980957
    8. ')' → logprob: -15.133641242980957
    9. '];' → logprob: -15.258641242980957
    10. ' ]
' → logprob: -16.13364028930664

Token 984: 'dist' (ID: 24126)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003793423529714346
    2. 'dist' → logprob: -6.003793239593506
    3. ' for' → logprob: -6.753793239593506
    4. 'd' → logprob: -10.503793716430664
    5. 'edges' → logprob: -10.503793716430664
    6. 'deg' → logprob: -10.753793716430664
    7. '<|end|>' → logprob: -11.753793716430664
    8. 'import' → logprob: -12.003793716430664
    9. 'degree' → logprob: -12.128793716430664
    10. 'from' → logprob: -12.253793716430664

Token 985: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048677634447813034
    2. ' =' → logprob: -3.048677682876587
    3. '=[[' → logprob: -10.298677444458008
    4. '=[' → logprob: -10.548677444458008
    5. '[' → logprob: -11.173677444458008
    6. ',' → logprob: -12.048677444458008
    7. '=[]' → logprob: -12.048677444458008
    8. '=
' → logprob: -13.173677444458008
    9. '=[
' → logprob: -14.548677444458008
    10. '=sys' → logprob: -15.173677444458008

Token 986: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0005386164411902428
    2. '[' → logprob: -8.12553882598877
    3. ' [[' → logprob: -8.37553882598877
    4. '[]' → logprob: -11.50053882598877
    5. '[list' → logprob: -14.12553882598877
    6. '[['' → logprob: -15.37553882598877
    7. '([[' → logprob: -15.50053882598877
    8. 'None' → logprob: -15.62553882598877
    9. '[]
' → logprob: -15.87553882598877
    10. '[
' → logprob: -16.000537872314453

Token 987: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3956688344478607
    2. '0' → logprob: -2.3956687450408936
    3. 'float' → logprob: -2.6456687450408936
    4. '999' → logprob: -2.7706687450408936
    5. '-' → logprob: -3.2706687450408936
    6. '100' → logprob: -3.6456687450408936
    7. 'int' → logprob: -4.020668983459473
    8. '1' → logprob: -5.020668983459473
    9. '(' → logprob: -5.520668983459473
    10. '200' → logprob: -6.770668983459473

Token 988: '9' (ID: 24)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.002821158617734909
    2. '99' → logprob: -6.25282096862793
    3. '9' → logprob: -7.12782096862793
    4. ']' → logprob: -9.75282096862793
    5. ']*' → logprob: -10.87782096862793
    6. 'for' → logprob: -12.00282096862793
    7. ']*(' → logprob: -12.62782096862793
    8. ']+' → logprob: -13.87782096862793
    9. '998' → logprob: -14.50282096862793
    10. ' for' → logprob: -15.12782096862793

Token 989: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.030282748863101006
    2. ']' → logprob: -3.655282735824585
    3. ']*' → logprob: -6.405282974243164
    4. 'for' → logprob: -6.530282974243164
    5. ' for' → logprob: -7.155282974243164
    6. ']+' → logprob: -9.655282974243164
    7. 'if' → logprob: -11.405282974243164
    8. '   ' → logprob: -13.030282974243164
    9. '*(' → logprob: -13.280282974243164
    10. '0' → logprob: -13.780282974243164

Token 990: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.25206702947616577
    2. '(V' → logprob: -1.5020670890808105
    3. '(' → logprob: -9.877066612243652
    4. '   ' → logprob: -10.502066612243652
    5. ' (' → logprob: -10.627066612243652
    6. ' V' → logprob: -11.002066612243652
    7. '	V' → logprob: -11.877066612243652
    8. '
' → logprob: -12.502066612243652
    9. ' ' → logprob: -13.627066612243652
    10. 'VV' → logprob: -14.002066612243652

Token 991: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0087516784551553e-05
    2. ' +' → logprob: -12.00001049041748
    3. '+
' → logprob: -12.50001049041748
    4. '+B' → logprob: -17.250009536743164
    5. '```' → logprob: -17.750009536743164
    6. '1' → logprob: -18.000009536743164
    7. '＋' → logprob: -18.000009536743164
    8. '
' → logprob: -18.250009536743164
    9. '+

' → logprob: -18.250009536743164
    10. '()+' → logprob: -18.625009536743164

Token 992: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. ' ' → logprob: -11.875016212463379
    3. '
' → logprob: -12.625016212463379
    4. '(V' → logprob: -12.875016212463379
    5. '(' → logprob: -13.875016212463379
    6. '+' → logprob: -14.000016212463379
    7. '   ' → logprob: -14.500016212463379
    8. '2' → logprob: -15.125016212463379
    9. '```' → logprob: -15.750016212463379
    10. 'V' → logprob: -15.750016212463379

Token 993: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009307505562901497
    2. 'for' → logprob: -5.259307384490967
    3. ' for' → logprob: -5.509307384490967
    4. ')]' → logprob: -12.134307861328125
    5. ']' → logprob: -12.759307861328125
    6. '   ' → logprob: -13.134307861328125
    7. ' )' → logprob: -13.134307861328125
    8. ')
' → logprob: -13.259307861328125
    9. ' ' → logprob: -13.759307861328125
    10. '	for' → logprob: -14.884307861328125

Token 994: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868820369243622
    2. 'for' → logprob: -1.1368820667266846
    3. '	for' → logprob: -11.886881828308105
    4. '   ' → logprob: -13.511881828308105
    5. ']' → logprob: -13.636881828308105
    6. '[' → logprob: -14.636881828308105
    7. '[V' → logprob: -14.886881828308105
    8. ' ' → logprob: -15.511881828308105
    9. ')' → logprob: -15.511881828308105
    10. '
' → logprob: -16.761882781982422

Token 995: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05078045278787613
    2. ' range' → logprob: -3.1757805347442627
    3. 'range' → logprob: -5.050780296325684
    4. '_range' → logprob: -7.425780296325684
    5. ' in' → logprob: -8.050780296325684
    6. '_V' → logprob: -8.550780296325684
    7. 'in' → logprob: -8.675780296325684
    8. '_v' → logprob: -10.550780296325684
    9. ' _' → logprob: -11.050780296325684
    10. '_i' → logprob: -11.925780296325684

Token 996: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18108579516410828
    2. ' range' → logprob: -1.8060858249664307
    3. ' in' → logprob: -7.556085586547852
    4. '(range' → logprob: -7.681085586547852
    5. 'in' → logprob: -8.431085586547852
    6. '(V' → logprob: -9.056085586547852
    7. '_' → logprob: -12.181085586547852
    8. '_range' → logprob: -12.431085586547852
    9. '	range' → logprob: -12.431085586547852
    10. '(' → logprob: -13.181085586547852

Token 997: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015222413931041956
    2. ' range' → logprob: -6.501522064208984
    3. '(V' → logprob: -11.376522064208984
    4. '(range' → logprob: -11.751522064208984
    5. '   ' → logprob: -15.376522064208984
    6. '
' → logprob: -15.626522064208984
    7. 'V' → logprob: -16.001522064208984
    8. ' ' → logprob: -17.376522064208984
    9. '[V' → logprob: -17.751522064208984
    10. '	range' → logprob: -18.501522064208984

Token 998: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.07000400871038437
    2. 'V' → logprob: -2.6950039863586426
    3. 'range' → logprob: -10.6950044631958
    4. '   ' → logprob: -11.1950044631958
    5. ' (' → logprob: -11.3200044631958
    6. ' V' → logprob: -11.9450044631958
    7. '(' → logprob: -12.3200044631958
    8. '	V' → logprob: -13.3200044631958
    9. '
' → logprob: -13.5700044631958
    10. '0' → logprob: -13.8200044631958

Token 999: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.44574936106801e-05
    2. '1' → logprob: -10.00007438659668
    3. ' +' → logprob: -11.25007438659668
    4. '+
' → logprob: -12.00007438659668
    5. ')]' → logprob: -12.75007438659668
    6. ')+' → logprob: -12.87507438659668
    7. ')' → logprob: -13.75007438659668
    8. '```' → logprob: -14.50007438659668
    9. 'import' → logprob: -14.62507438659668
    10. '()+' → logprob: -15.12507438659668

Token 1000: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010473522706888616
    2. 'V' → logprob: -9.500104904174805
    3. '(V' → logprob: -11.250104904174805
    4. '+' → logprob: -11.375104904174805
    5. ' ' → logprob: -13.250104904174805
    6. '(' → logprob: -13.750104904174805
    7. '999' → logprob: -14.125104904174805
    8. '2' → logprob: -14.875104904174805
    9. '
' → logprob: -15.125104904174805
    10. '```' → logprob: -15.375104904174805

Token 1001: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7360994219779968
    2. ']
' → logprob: -0.7360994219779968
    3. ')]' → logprob: -3.2360994815826416
    4. ')]
' → logprob: -5.9860992431640625
    5. ')' → logprob: -8.861099243164062
    6. ')
' → logprob: -9.986099243164062
    7. ']
' → logprob: -11.486099243164062
    8. ']

' → logprob: -11.986099243164062
    9. ' ]
' → logprob: -12.861099243164062
    10. '])' → logprob: -13.236099243164062

Token 1002: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015514736878685653
    2. ' for' → logprob: -8.875155448913574
    3. 'dist' → logprob: -11.625155448913574
    4. 'pr' → logprob: -12.500155448913574
    5. 'def' → logprob: -14.375155448913574
    6. 'import' → logprob: -14.875155448913574
    7. 'from' → logprob: -15.125155448913574
    8. 'i' → logprob: -15.500155448913574
    9. '```' → logprob: -15.500155448913574
    10. '	for' → logprob: -16.000154495239258

Token 1003: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02275163307785988
    2. '_i' → logprob: -3.897751569747925
    3. 'i' → logprob: -6.272751808166504
    4. '_v' → logprob: -8.772751808166504
    5. '_e' → logprob: -9.397751808166504
    6. '_u' → logprob: -11.397751808166504
    7. '_E' → logprob: -11.647751808166504
    8. ' _' → logprob: -11.897751808166504
    9. '_=' → logprob: -11.897751808166504
    10. '_V' → logprob: -12.022751808166504

Token 1004: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04863357916474342
    2. 'in' → logprob: -3.048633575439453
    3. '1' → logprob: -11.298633575439453
    4. 'range' → logprob: -11.923633575439453
    5. '_' → logprob: -12.048633575439453
    6. '	in' → logprob: -12.173633575439453
    7. '(' → logprob: -12.548633575439453
    8. ' ' → logprob: -12.673633575439453
    9. ',' → logprob: -13.173633575439453
    10. 'i' → logprob: -13.673633575439453

Token 1005: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.019666075706481934
    2. ' range' → logprob: -4.5196661949157715
    3. '_' → logprob: -4.7696661949157715
    4. '_range' → logprob: -9.269665718078613
    5. 'in' → logprob: -13.644665718078613
    6. '(range' → logprob: -14.394665718078613
    7. '	range' → logprob: -14.519665718078613
    8. '_E' → logprob: -15.144665718078613
    9. '
' → logprob: -15.519665718078613
    10. '_e' → logprob: -15.644665718078613

Token 1006: '(V' (ID: 16949)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.004892519675195217
    2. '(' → logprob: -5.504892349243164
    3. 'E' → logprob: -7.504892349243164
    4. '(V' → logprob: -8.379892349243164
    5. '1' → logprob: -10.379892349243164
    6. '(_' → logprob: -13.754892349243164
    7. ' E' → logprob: -14.254892349243164
    8. '_E' → logprob: -15.254892349243164
    9. ',E' → logprob: -15.504892349243164
    10. '_' → logprob: -16.004892349243164

Token 1007: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006264181574806571
    2. '):
' → logprob: -8.250626564025879
    3. '1' → logprob: -8.500626564025879
    4. ' +' → logprob: -9.000626564025879
    5. '):' → logprob: -10.375626564025879
    6. '+
' → logprob: -13.125626564025879
    7. '
' → logprob: -13.375626564025879
    8. '   ' → logprob: -13.875626564025879
    9. '(' → logprob: -14.625626564025879
    10. '()+' → logprob: -15.125626564025879

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002525245537981391
    2. 'E' → logprob: -6.002525329589844
    3. '(E' → logprob: -11.002525329589844
    4. '(' → logprob: -11.752525329589844
    5. '
' → logprob: -12.127525329589844
    6. ' ' → logprob: -12.502525329589844
    7. '0' → logprob: -12.752525329589844
    8. '+' → logprob: -13.127525329589844
    9. '```' → logprob: -13.252525329589844
    10. ' E' → logprob: -13.315025329589844

Token 1009: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47415271401405334
    2. '):
' → logprob: -0.974152684211731
    3. '):
' → logprob: -10.224152565002441
    4. ')' → logprob: -10.849152565002441
    5. ':' → logprob: -11.974152565002441
    6. 'def' → logprob: -12.974152565002441
    7. '   ' → logprob: -13.099152565002441
    8. ' ):' → logprob: -13.349152565002441
    9. '):

' → logprob: -13.474152565002441
    10. ']):' → logprob: -13.849152565002441

Token 1010: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15219774842262268
    2. '   ' → logprob: -2.65219783782959
    3. ' dist' → logprob: -2.65219783782959
    4. '	dist' → logprob: -8.65219783782959
    5. ' ' → logprob: -12.40219783782959
    6. '  ' → logprob: -12.65219783782959
    7. '_dist' → logprob: -12.90219783782959
    8. '(dist' → logprob: -13.15219783782959
    9. '.dist' → logprob: -13.52719783782959
    10. 'Dist' → logprob: -14.40219783782959

Token 1011: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014203863975126296
    2. '[' → logprob: -8.875142097473145
    3. '[I' → logprob: -13.375142097473145
    4. '```' → logprob: -15.875142097473145
    5. '[V' → logprob: -16.375141143798828
    6. 'i' → logprob: -16.500141143798828
    7. '[
' → logprob: -16.625141143798828
    8. ' [' → logprob: -16.875141143798828
    9. 'import' → logprob: -17.375141143798828
    10. '[in' → logprob: -17.750141143798828

Token 1012: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02067291922867298
    2. '[i' → logprob: -3.8956730365753174
    3. '=' → logprob: -9.895672798156738
    4. ']' → logprob: -10.645672798156738
    5. '[' → logprob: -11.145672798156738
    6. ']=' → logprob: -11.395672798156738
    7. ' ][' → logprob: -11.395672798156738
    8. '[I' → logprob: -12.145672798156738
    9. '=i' → logprob: -12.395672798156738
    10. '(i' → logprob: -12.645672798156738

Token 1013: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.796184723294573e-06
    2. ' i' → logprob: -12.125005722045898
    3. ']' → logprob: -17.1250057220459
    4. ' ' → logprob: -17.3750057220459
    5. '	i' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.5000057220459
    7. '
' → logprob: -18.2500057220459
    8. '[i' → logprob: -18.8750057220459
    9. '<|end|>' → logprob: -18.8750057220459
    10. '<|end|>' → logprob: -18.8750057220459

Token 1014: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013497571926563978
    2. ' =' → logprob: -6.626349925994873
    3. ']=' → logprob: -10.751349449157715
    4. ']' → logprob: -13.126349449157715
    5. '=i' → logprob: -14.876349449157715
    6. '=
' → logprob: -17.25135040283203
    7. ')=' → logprob: -17.87635040283203
    8. '   ' → logprob: -18.37635040283203
    9. ',' → logprob: -18.50135040283203
    10. '=True' → logprob: -18.87635040283203

Token 1015: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -19.75
    4. '00' → logprob: -20.25
    5. '۰' → logprob: -20.375
    6. '000' → logprob: -20.5
    7. '1' → logprob: -21.375
    8. '０' → logprob: -22.3125
    9. '
' → logprob: -22.5625
    10. '  ' → logprob: -22.5625

Token 1016: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019448090461082757
    2. ' for' → logprob: -8.750194549560547
    3. '<|end|>' → logprob: -10.375194549560547
    4. 'import' → logprob: -14.125194549560547
    5. 'u' → logprob: -14.375194549560547
    6. 'from' → logprob: -14.500194549560547
    7. '
' → logprob: -14.750194549560547
    8. 'v' → logprob: -14.750194549560547
    9. 'f' → logprob: -15.375194549560547
    10. 'a' → logprob: -15.625194549560547

Token 1017: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.670925358776003e-05
    2. ' for' → logprob: -9.625066757202148
    3. 'from' → logprob: -15.875066757202148
    4. '
' → logprob: -15.875066757202148
    5. 'import' → logprob: -16.75006675720215
    6. '```' → logprob: -16.75006675720215
    7. 'while' → logprob: -17.00006675720215
    8. ' 
' → logprob: -17.12506675720215
    9. '    
' → logprob: -17.37506675720215
    10. '	for' → logprob: -17.50006675720215

Token 1018: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6047699318733066e-05
    2. ' _' → logprob: -12.125016212463379
    3. '_E' → logprob: -12.500016212463379
    4. '_i' → logprob: -12.625016212463379
    5. '_=' → logprob: -13.500016212463379
    6. '_e' → logprob: -14.500016212463379
    7. 'E' → logprob: -14.750016212463379
    8. '_
' → logprob: -14.875016212463379
    9. '
' → logprob: -15.250016212463379
    10. 'i' → logprob: -15.500016212463379

Token 1019: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10026662796735764
    2. ' in' → logprob: -2.350266695022583
    3. '_' → logprob: -10.475266456604004
    4. 'range' → logprob: -11.225266456604004
    5. ' ' → logprob: -11.600266456604004
    6. 'E' → logprob: -13.100266456604004
    7. '
' → logprob: -13.225266456604004
    8. 'import' → logprob: -13.600266456604004
    9. ',' → logprob: -13.725266456604004
    10. '```' → logprob: -14.225266456604004

Token 1020: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003210627008229494
    2. ' range' → logprob: -5.753210544586182
    3. 'gm' → logprob: -10.37821102142334
    4. 'E' → logprob: -14.00321102142334
    5. '_' → logprob: -15.12821102142334
    6. ' gm' → logprob: -15.75321102142334
    7. 'r' → logprob: -16.503210067749023
    8. 'Range' → logprob: -16.878210067749023
    9. 'rang' → logprob: -17.003210067749023
    10. '(range' → logprob: -17.003210067749023

Token 1021: '(E' (ID: 20882)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0002887490263674408
    2. '(E' → logprob: -8.500288963317871
    3. ' E' → logprob: -9.375288963317871
    4. ',E' → logprob: -16.500288009643555
    5. '	E' → logprob: -16.750288009643555
    6. '(' → logprob: -16.750288009643555
    7. '   ' → logprob: -17.250288009643555
    8. '_E' → logprob: -17.500288009643555
    9. ' (' → logprob: -17.500288009643555
    10. '1' → logprob: -17.750288009643555

Token 1022: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5180478096008301
    2. ',' → logprob: -1.14304780960083
    3. '):' → logprob: -2.64304780960083
    4. ',n' → logprob: -5.51804780960083
    5. ' ,' → logprob: -5.76804780960083
    6. ')' → logprob: -6.51804780960083
    7. '   ' → logprob: -6.76804780960083
    8. '):
' → logprob: -6.89304780960083
    9. 'n' → logprob: -7.64304780960083
    10. ',g' → logprob: -8.143047332763672

Token 1023: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7070147395133972
    2. 'u' → logprob: -0.7070147395133972
    3. ' u' → logprob: -4.957014560699463
    4. ' a' → logprob: -5.832014560699463
    5. 'x' → logprob: -6.707014560699463
    6. 'v' → logprob: -7.082014560699463
    7. '   ' → logprob: -7.457014560699463
    8. 'f' → logprob: -7.582014560699463
    9. 's' → logprob: -7.957014560699463
    10. 'i' → logprob: -9.332015037536621

Token 1024: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0481337308883667
    2. 'u' → logprob: -3.1731338500976562
    3. 'f' → logprob: -6.173133850097656
    4. 'x' → logprob: -6.298133850097656
    5. 'i' → logprob: -7.798133850097656
    6. 'v' → logprob: -7.923133850097656
    7. 's' → logprob: -8.298133850097656
    8. 'fr' → logprob: -10.048133850097656
    9. 'frm' → logprob: -10.923133850097656
    10. 'A' → logprob: -11.048133850097656

Token 1025: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.20254522562026978
    2. ',' → logprob: -1.702545166015625
    3. 'b' → logprob: -7.077545166015625
    4. ' ,' → logprob: -8.452545166015625
    5. ' b' → logprob: -10.327545166015625
    6. ',v' → logprob: -11.202545166015625
    7. ',m' → logprob: -12.077545166015625
    8. ',n' → logprob: -12.077545166015625
    9. ',d' → logprob: -13.077545166015625
    10. ',s' → logprob: -13.202545166015625

Token 1026: ',c' (ID: 22261)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.1449378877878189
    2. ',' → logprob: -2.6449379920959473
    3. ',d' → logprob: -3.3949379920959473
    4. ',c' → logprob: -3.6449379920959473
    5. ',b' → logprob: -5.644937992095947
    6. ',l' → logprob: -7.769937992095947
    7. ',g' → logprob: -9.269937515258789
    8. ',v' → logprob: -9.644937515258789
    9. 'w' → logprob: -9.894937515258789
    10. ',t' → logprob: -11.394937515258789

Token 1027: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03920035436749458
    2. ' =' → logprob: -4.039200305938721
    3. ',c' → logprob: -4.664200305938721
    4. ',' → logprob: -4.789200305938721
    5. ',g' → logprob: -5.914200305938721
    6. '=sys' → logprob: -8.289200782775879
    7. '=g' → logprob: -11.289200782775879
    8. ',n' → logprob: -11.414200782775879
    9. '=c' → logprob: -11.414200782775879
    10. '=input' → logprob: -11.414200782775879

Token 1028: ' gm' (ID: 82401)
  Prédit: 'gm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gm' → logprob: -0.08585763722658157
    2. ' gm' → logprob: -2.835857629776001
    3. 'gin' → logprob: -4.58585786819458
    4. 'lint' → logprob: -5.08585786819458
    5. ' gin' → logprob: -5.46085786819458
    6. ' lint' → logprob: -6.58585786819458
    7. 'map' → logprob: -6.83585786819458
    8. ' map' → logprob: -8.085857391357422
    9. '*' → logprob: -10.210857391357422
    10. ' gint' → logprob: -10.710857391357422

Token 1029: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001338454894721508
    2. '
' → logprob: -6.751338481903076
    3. 'a' → logprob: -9.751338005065918
    4. 'dist' → logprob: -10.251338005065918
    5. ',' → logprob: -11.251338005065918
    6. '    
' → logprob: -11.501338005065918
    7. ')
' → logprob: -11.876338005065918
    8. '  ' → logprob: -12.126338005065918
    9. ',
' → logprob: -12.126338005065918
    10. '[' → logprob: -12.251338005065918

Token 1030: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004219197668135166
    2. 'dist' → logprob: -5.504219055175781
    3. ' dist' → logprob: -9.254219055175781
    4. '	dist' → logprob: -10.254219055175781
    5. '```' → logprob: -12.004219055175781
    6. '.dist' → logprob: -14.254219055175781
    7. '   ' → logprob: -14.379219055175781
    8. 'Dist' → logprob: -14.504219055175781
    9. '(dist' → logprob: -14.879219055175781
    10. '_dist' → logprob: -15.004219055175781

Token 1031: ' es' (ID: 878)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0015365236904472113
    2. 'es' (adapté à ' es') → logprob: -7.2515363693237305
    3. ' dist' → logprob: -7.6265363693237305
    4. '   ' → logprob: -8.00153636932373
    5. ' es' → logprob: -13.12653636932373
    6. '	dist' → logprob: -14.00153636932373
    7. 'if' → logprob: -14.37653636932373
    8. '    
' → logprob: -15.75153636932373
    9. '```' → logprob: -16.501537322998047
    10. ' if' → logprob: -16.751537322998047

Token 1032: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.796184723294573e-06
    2. 'a' → logprob: -12.125005722045898
    3. '[b' → logprob: -16.7500057220459
    4. '
' → logprob: -17.0000057220459
    5. ' [' → logprob: -17.0000057220459
    6. '[' → logprob: -17.2500057220459
    7. '   ' → logprob: -18.7500057220459
    8. '=a' → logprob: -19.0000057220459
    9. '[A' → logprob: -19.1250057220459
    10. '```' → logprob: -19.2500057220459

Token 1033: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.001842609723098576
    2. '][' → logprob: -6.751842498779297
    3. '[a' → logprob: -7.501842498779297
    4. '.append' → logprob: -10.376842498779297
    5. ']' → logprob: -10.626842498779297
    6. '   ' → logprob: -10.626842498779297
    7. ').' → logprob: -11.126842498779297
    8. '[' → logprob: -11.626842498779297
    9. '[b' → logprob: -11.876842498779297
    10. '.' → logprob: -12.876842498779297

Token 1034: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. ' append' → logprob: -14.000000953674316
    3. '.append' → logprob: -16.000001907348633
    4. 'appen' → logprob: -18.125001907348633
    5. 'app' → logprob: -18.375001907348633
    6. 'Append' → logprob: -19.625001907348633
    7. '_append' → logprob: -20.250001907348633
    8. '	append' → logprob: -20.750001907348633
    9. 'add' → logprob: -21.875001907348633
    10. '```' → logprob: -22.125001907348633

Token 1035: '((' (ID: 2054)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011081179603934288
    2. '((' → logprob: -4.511081218719482
    3. '(' → logprob: -10.386080741882324
    4. 'b' → logprob: -13.386080741882324
    5. ' (' → logprob: -14.511080741882324
    6. '(c' → logprob: -14.886080741882324
    7. '   ' → logprob: -16.38608169555664
    8. '(a' → logprob: -16.88608169555664
    9. '(B' → logprob: -18.38608169555664
    10. '(
' → logprob: -19.01108169555664

Token 1036: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9623810658231378e-05
    2. ' b' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.250020027160645
    4. '	b' → logprob: -17.000019073486328
    5. '(b' → logprob: -18.000019073486328
    6. ')b' → logprob: -18.125019073486328
    7. ' ' → logprob: -18.750019073486328
    8. ',b' → logprob: -19.000019073486328
    9. '  ' → logprob: -19.500019073486328
    10. '    ' → logprob: -20.250019073486328

Token 1037: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.04860122874379158
    2. ',' → logprob: -3.0486011505126953
    3. ' ,' → logprob: -11.298601150512695
    4. 'c' → logprob: -14.298601150512695
    5. ',
' → logprob: -14.923601150512695
    6. ',b' → logprob: -15.423601150512695
    7. '   ' → logprob: -16.673601150512695
    8. '	c' → logprob: -17.173601150512695
    9. ',C' → logprob: -17.423601150512695
    10. '
' → logprob: -17.798601150512695

Token 1038: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.10986191779375076
    2. '))' → logprob: -2.4848618507385254
    3. ',' → logprob: -4.734861850738525
    4. ',c' → logprob: -5.484861850738525
    5. '));' → logprob: -5.484861850738525
    6. ',b' → logprob: -5.984861850738525
    7. '   ' → logprob: -7.609861850738525
    8. ',))
' → logprob: -7.984861850738525
    9. ' ))
' → logprob: -9.234862327575684
    10. '))
' → logprob: -9.734862327575684

Token 1039: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011699236929416656
    2. 'es' → logprob: -4.511699199676514
    3. ' es' → logprob: -7.511699199676514
    4. '	es' → logprob: -9.886699676513672
    5. '```' → logprob: -11.136699676513672
    6. 'dist' → logprob: -11.136699676513672
    7. '<|end|>' → logprob: -11.761699676513672
    8. 'for' → logprob: -12.511699676513672
    9. ' for' → logprob: -12.886699676513672
    10. ',' → logprob: -13.886699676513672

Token 1040: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' (adapté à ' es') → logprob: -0.0006548931705765426
    2. 'dist' → logprob: -7.500654697418213
    3. '   ' → logprob: -9.375655174255371
    4. ' es' → logprob: -11.500655174255371
    5. 'c' → logprob: -12.500655174255371
    6. 'e' → logprob: -13.625655174255371
    7. '	es' → logprob: -14.125655174255371
    8. 'for' → logprob: -15.125655174255371
    9. ' ' → logprob: -15.750655174255371
    10. '#' → logprob: -15.750655174255371

Token 1041: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0028710884507745504
    2. '[a' → logprob: -6.002871036529541
    3. 'b' → logprob: -7.877871036529541
    4. 's' → logprob: -12.0028715133667
    5. '[c' → logprob: -12.5028715133667
    6. 'a' → logprob: -12.8778715133667
    7. '[' → logprob: -13.3778715133667
    8. '
' → logprob: -14.8778715133667
    9. '][' → logprob: -15.2528715133667
    10. '```' → logprob: -15.5028715133667

Token 1042: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08524316549301147
    2. '].' → logprob: -3.0852432250976562
    3. ').' → logprob: -3.3352432250976562
    4. '.' → logprob: -8.710243225097656
    5. ',' → logprob: -9.460243225097656
    6. '.app' → logprob: -9.710243225097656
    7. '   ' → logprob: -9.960243225097656
    8. ' .' → logprob: -12.085243225097656
    9. '}.' → logprob: -12.335243225097656
    10. '```' → logprob: -12.460243225097656

Token 1043: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.941850526549388e-06
    2. 'appen' → logprob: -12.500007629394531
    3. '.append' → logprob: -13.125007629394531
    4. ' append' → logprob: -13.500007629394531
    5. 'app' → logprob: -14.500007629394531
    6. '```' → logprob: -16.50000762939453
    7. '	append' → logprob: -16.50000762939453
    8. 'a' → logprob: -17.00000762939453
    9. 'appe' → logprob: -17.25000762939453
    10. 'add' → logprob: -17.50000762939453

Token 1044: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008240377064794302
    2. '((' → logprob: -7.125823974609375
    3. ' (' → logprob: -11.000823974609375
    4. '(' → logprob: -13.875823974609375
    5. 'a' → logprob: -14.125823974609375
    6. '   ' → logprob: -14.500823974609375
    7. '(
' → logprob: -15.625823974609375
    8. '(A' → logprob: -15.750823974609375
    9. '```' → logprob: -16.375823974609375
    10. '(b' → logprob: -17.250823974609375

Token 1045: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.259079363080673e-05
    2. '(a' → logprob: -11.375012397766113
    3. ' a' → logprob: -14.000012397766113
    4. ')a' → logprob: -16.00001335144043
    5. ',a' → logprob: -16.50001335144043
    6. 'c' → logprob: -16.87501335144043
    7. ')' → logprob: -17.50001335144043
    8. '   ' → logprob: -17.62501335144043
    9. ' (' → logprob: -18.25001335144043
    10. '(c' → logprob: -18.62501335144043

Token 1046: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -1.9266199160483666e-05
    2. ',' → logprob: -10.875019073486328
    3. ',b' → logprob: -16.125019073486328
    4. ',
' → logprob: -17.125019073486328
    5. ' ,' → logprob: -17.500019073486328
    6. '
' → logprob: -17.750019073486328
    7. 'c' → logprob: -17.875019073486328
    8. '```' → logprob: -17.875019073486328
    9. ',d' → logprob: -19.125019073486328
    10. '   ' → logprob: -19.250019073486328

Token 1047: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1603175401687622
    2. '))' → logprob: -1.9103175401687622
    3. ')
' → logprob: -9.535317420959473
    4. '))
' → logprob: -12.160317420959473
    5. '   ' → logprob: -12.285317420959473
    6. ')))' → logprob: -12.410317420959473
    7. ' )' → logprob: -13.410317420959473
    8. ')c' → logprob: -13.660317420959473
    9. ')#' → logprob: -14.410317420959473
    10. '),' → logprob: -14.410317420959473

Token 1048: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03925972804427147
    2. 'from' → logprob: -3.414259672164917
    3. 'import' → logprob: -5.289259910583496
    4. '   ' → logprob: -8.789259910583496
    5. '```' → logprob: -8.789259910583496
    6. '#' → logprob: -9.539259910583496
    7. ' for' → logprob: -9.789259910583496
    8. 'dist' → logprob: -9.914259910583496
    9. 'while' → logprob: -10.289259910583496
    10. 'def' → logprob: -10.914259910583496

Token 1049: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4751479923725128
    2. 'dist' (adapté à ' dist') → logprob: -0.9751479625701904
    3. '#' → logprob: -7.3501482009887695
    4. 'd' → logprob: -9.22514820098877
    5. 'import' → logprob: -9.35014820098877
    6. ' for' → logprob: -9.60014820098877
    7. '   ' → logprob: -9.97514820098877
    8. 'a' → logprob: -11.10014820098877
    9. 'if' → logprob: -11.35014820098877
    10. 'c' → logprob: -11.60014820098877

Token 1050: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.463036435074173e-05
    2. 'a' → logprob: -10.625024795532227
    3. '[' → logprob: -16.000024795532227
    4. '[b' → logprob: -17.125024795532227
    5. '#a' → logprob: -17.500024795532227
    6. '[A' → logprob: -19.250024795532227
    7. '[int' → logprob: -19.500024795532227
    8. '=a' → logprob: -20.000024795532227
    9. '][' → logprob: -20.125024795532227
    10. ')[' → logprob: -20.125024795532227

Token 1051: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007211300544440746
    2. '[b' → logprob: -7.375720977783203
    3. '[a' → logprob: -10.125720977783203
    4. ')[' → logprob: -11.000720977783203
    5. '[' → logprob: -11.375720977783203
    6. '```' → logprob: -12.125720977783203
    7. ']' → logprob: -12.250720977783203
    8. ')][' → logprob: -12.625720977783203
    9. 'b' → logprob: -13.000720977783203
    10. ' ][' → logprob: -13.375720977783203

Token 1052: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -16.125
    3. '[b' → logprob: -16.375
    4. '][' → logprob: -17.125
    5. '	b' → logprob: -18.375
    6. '   ' → logprob: -18.625
    7. ' ' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. 'a' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 1053: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026813514530658722
    2. ']=' → logprob: -4.151813507080078
    3. '=c' → logprob: -5.276813507080078
    4. ' =' → logprob: -5.651813507080078
    5. ']' → logprob: -6.276813507080078
    6. ')=' → logprob: -8.901813507080078
    7. ')' → logprob: -9.776813507080078
    8. '[' → logprob: -11.526813507080078
    9. '[c' → logprob: -12.151813507080078
    10. ',c' → logprob: -12.401813507080078

Token 1054: 'dist' (ID: 24126)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.054500666621607e-06
    2. ' c' → logprob: -12.75000286102295
    3. '   ' → logprob: -17.500003814697266
    4. '	c' → logprob: -17.500003814697266
    5. ')c' → logprob: -17.875003814697266
    6. '_c' → logprob: -20.000003814697266
    7. '%c' → logprob: -20.125003814697266
    8. '
' → logprob: -20.375003814697266
    9. '```' → logprob: -20.375003814697266
    10. '*c' → logprob: -20.500003814697266

Token 1055: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.02562241442501545
    2. '[a' → logprob: -4.275622367858887
    3. 'c' → logprob: -4.525622367858887
    4. '[b' → logprob: -7.775622367858887
    5. 'a' → logprob: -9.400622367858887
    6. '[' → logprob: -10.900622367858887
    7. '```' → logprob: -11.525622367858887
    8. ' c' → logprob: -12.400622367858887
    9. '<c' → logprob: -12.400622367858887
    10. ')c' → logprob: -12.525622367858887

Token 1056: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3135997951030731
    2. '[a' → logprob: -1.3135998249053955
    3. 'a' → logprob: -8.063599586486816
    4. '[' → logprob: -11.938599586486816
    5. '   ' → logprob: -12.063599586486816
    6. ']' → logprob: -13.063599586486816
    7. '```' → logprob: -13.188599586486816
    8. ')[' → logprob: -13.438599586486816
    9. '}[' → logprob: -13.688599586486816
    10. '(a' → logprob: -14.563599586486816

Token 1057: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. '[a' → logprob: -16.5
    3. ']' → logprob: -17.625
    4. ' a' → logprob: -18.0
    5. ' ' → logprob: -19.125
    6. '[' → logprob: -19.125
    7. '	a' → logprob: -19.5
    8. '][' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '   ' → logprob: -19.75

Token 1058: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.293598473072052
    2. '=c' → logprob: -1.5435984134674072
    3. ']' → logprob: -3.2935984134674072
    4. 'c' → logprob: -6.293598651885986
    5. '=' → logprob: -7.293598651885986
    6. '[c' → logprob: -7.418598651885986
    7. ')c' → logprob: -8.918598175048828
    8. '(c' → logprob: -9.168598175048828
    9. ',c' → logprob: -9.293598175048828
    10. ')=' → logprob: -9.793598175048828

Token 1059: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. '	c' → logprob: -18.000045776367188
    4. '   ' → logprob: -19.000045776367188
    5. ')c' → logprob: -19.750045776367188
    6. '%c' → logprob: -20.500045776367188
    7. '_c' → logprob: -21.750045776367188
    8. '
' → logprob: -22.000045776367188
    9. '+c' → logprob: -22.125045776367188
    10. '$c' → logprob: -22.500045776367188

Token 1060: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20433151721954346
    2. 'from' → logprob: -1.9543315172195435
    3. 'import' → logprob: -3.204331398010254
    4. 'def' → logprob: -7.454331398010254
    5. '<|end|>' → logprob: -7.454331398010254
    6. ' for' → logprob: -7.829331398010254
    7. '#' → logprob: -7.954331398010254
    8. '```' → logprob: -8.829331398010254
    9. 'while' → logprob: -8.954331398010254
    10. '
' → logprob: -9.079331398010254

Token 1061: 'if' (ID: 366)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5034837126731873
    2. 'for' → logprob: -1.503483772277832
    3. 'from' → logprob: -1.753483772277832
    4. '```' → logprob: -11.003483772277832
    5. 'changed' → logprob: -11.378483772277832
    6. '#' → logprob: -12.003483772277832
    7. 'def' → logprob: -12.253483772277832
    8. 'queue' → logprob: -12.628483772277832
    9. 'done' → logprob: -12.753483772277832
    10. 'q' → logprob: -13.253483772277832

Token 1062: ' _' (ID: 1175)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.37031084299087524
    2. ' V' → logprob: -2.1203107833862305
    3. 'True' → logprob: -2.9953107833862305
    4. ' True' → logprob: -3.2453107833862305
    5. 'False' → logprob: -3.4953107833862305
    6. '__' → logprob: -3.6203107833862305
    7. ' False' → logprob: -4.2453107833862305
    8. ' __' → logprob: -4.3703107833862305
    9. '_' → logprob: -5.4953107833862305
    10. ' not' → logprob: -5.9953107833862305

Token 1063: 'dbg' (ID: 129964)
  Prédit: '_dbg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dbg' → logprob: -0.006379018072038889
    2. 'dbg' → logprob: -5.506379127502441
    3. '__' → logprob: -7.256379127502441
    4. 'V' → logprob: -7.256379127502441
    5. 'not' → logprob: -7.881379127502441
    6. '_DBG' → logprob: -8.381379127502441
    7. 'Dbg' → logprob: -10.256379127502441
    8. ' __' → logprob: -10.381379127502441
    9. 'True' → logprob: -10.506379127502441
    10. ' dbg' → logprob: -10.631379127502441

Token 1064: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2033153772354126
    2. ':
' → logprob: -1.7033153772354126
    3. '   ' → logprob: -6.453315258026123
    4. ' :' → logprob: -8.828315734863281
    5. ' :
' → logprob: -10.078315734863281
    6. ':
' → logprob: -10.453315734863281
    7. 'import' → logprob: -10.703315734863281
    8. ' and' → logprob: -10.953315734863281
    9. ',' → logprob: -11.703315734863281
    10. ' ==' → logprob: -11.953315734863281

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31825560331344604
    2. ' for' → logprob: -1.4432556629180908
    3. ' import' → logprob: -4.193255424499512
    4. ' from' → logprob: -4.318255424499512
    5. 'import' → logprob: -5.568255424499512
    6. 'for' → logprob: -5.943255424499512
    7. 'from' → logprob: -7.068255424499512
    8. ' print' → logprob: -7.943255424499512
    9. '	for' → logprob: -9.943255424499512
    10. ' #' → logprob: -10.068255424499512

Token 1066: ' [' (ID: 723)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.687745988368988
    2. 'for' → logprob: -1.1877460479736328
    3. 'from' → logprob: -1.9377460479736328
    4. 'print' → logprob: -3.562746047973633
    5. 'printer' → logprob: -4.312746047973633
    6. 'pass' → logprob: -5.937746047973633
    7. '   ' → logprob: -6.937746047973633
    8. 'sys' → logprob: -7.562746047973633
    9. 'def' → logprob: -7.812746047973633
    10. 'queue' → logprob: -7.812746047973633

Token 1067: 'print' (ID: 1598)
  Prédit: 'printer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'printer' → logprob: -0.6108514070510864
    2. 'print' → logprob: -1.3608514070510864
    3. 'pr' → logprob: -1.7358514070510864
    4. '   ' → logprob: -4.860851287841797
    5. 'import' → logprob: -5.235851287841797
    6. 'for' → logprob: -5.360851287841797
    7. '(pr' → logprob: -7.110851287841797
    8. '_pr' → logprob: -7.360851287841797
    9. 'sys' → logprob: -7.360851287841797
    10. ' printer' → logprob: -7.360851287841797

Token 1068: '(str' (ID: 7946)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.13441608846187592
    2. '()' → logprob: -3.509416103363037
    3. '(i' → logprob: -3.509416103363037
    4. '(*' → logprob: -3.884416103363037
    5. 'dist' → logprob: -4.634416103363037
    6. '(es' → logprob: -4.884416103363037
    7. '(f' → logprob: -5.009416103363037
    8. '("' → logprob: -5.134416103363037
    9. '((' → logprob: -6.009416103363037
    10. '(a' → logprob: -6.259416103363037

Token 1069: '(i' (ID: 3649)
  Prédit: '(dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.7338571548461914
    2. '(i' → logprob: -1.1088571548461914
    3. '(es' → logprob: -2.1088571548461914
    4. '(x' → logprob: -2.9838571548461914
    5. '(v' → logprob: -5.483857154846191
    6. '(e' → logprob: -5.733857154846191
    7. '(d' → logprob: -5.983857154846191
    8. '(row' → logprob: -6.108857154846191
    9. '(len' → logprob: -7.358857154846191
    10. 'es' → logprob: -7.358857154846191

Token 1070: '),' (ID: 936)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.6733763813972473
    2. ')' → logprob: -0.9233763813972473
    3. '))' → logprob: -2.5483763217926025
    4. '),' → logprob: -5.298376560211182
    5. ')+"' → logprob: -5.298376560211182
    6. ')+'' → logprob: -6.173376560211182
    7. ')[' → logprob: -6.798376560211182
    8. ').' → logprob: -7.423376560211182
    9. ' )' → logprob: -8.423376083374023
    10. ',' → logprob: -9.173376083374023

Token 1071: 'z' (ID: 89)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.36972561478614807
    2. 'es' → logprob: -1.7447255849838257
    3. ' end' → logprob: -2.9947257041931152
    4. ' es' → logprob: -2.9947257041931152
    5. ')' → logprob: -3.7447257041931152
    6. 'dist' → logprob: -5.869725704193115
    7. '*' → logprob: -6.119725704193115
    8. '"' → logprob: -6.869725704193115
    9. 'file' → logprob: -6.994725704193115
    10. ''' → logprob: -6.994725704193115

Token 1072: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.959636033978313e-05
    2. ')
' → logprob: -10.375089645385742
    3. ' )' → logprob: -11.375089645385742
    4. ',' → logprob: -11.500089645385742
    5. 'for' → logprob: -11.750089645385742
    6. '))' → logprob: -11.875089645385742
    7. '[i' → logprob: -12.000089645385742
    8. '[' → logprob: -12.500089645385742
    9. '   ' → logprob: -13.000089645385742
    10. 'if' → logprob: -13.375089645385742

Token 1073: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1329425722360611
    2. ' for' → logprob: -2.1329426765441895
    3. ')' → logprob: -5.3829426765441895
    4. '   ' → logprob: -6.6329426765441895
    5. ' ' → logprob: -10.382942199707031
    6. '	for' → logprob: -11.382942199707031
    7. 'in' → logprob: -11.882942199707031
    8. '  ' → logprob: -12.007942199707031
    9. ',' → logprob: -12.007942199707031
    10. '
' → logprob: -12.382942199707031

Token 1074: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0016087667318060994
    2. ' i' → logprob: -7.376608848571777
    3. 'range' → logprob: -7.376608848571777
    4. 'z' → logprob: -8.001608848571777
    5. ' range' → logprob: -11.751608848571777
    6. '(i' → logprob: -12.001608848571777
    7. ' ' → logprob: -12.626608848571777
    8. ' z' → logprob: -13.876608848571777
    9. '
' → logprob: -14.126608848571777
    10. 'enumer' → logprob: -15.126608848571777

Token 1075: ',z' (ID: 54920)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.357138067483902
    2. 'in' → logprob: -1.7321380376815796
    3. ',' → logprob: -2.107138156890869
    4. ',z' → logprob: -7.107138156890869
    5. ',in' → logprob: -8.232137680053711
    6. ' ,' → logprob: -8.732137680053711
    7. 'range' → logprob: -9.232137680053711
    8. ',e' → logprob: -9.357137680053711
    9. ',v' → logprob: -9.357137680053711
    10. ',d' → logprob: -10.232137680053711

Token 1076: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760746002197266
    2. ' in' → logprob: -0.8260746002197266
    3. 'import' → logprob: -9.826074600219727
    4. 'enumer' → logprob: -10.076074600219727
    5. ',' → logprob: -10.326074600219727
    6. ',in' → logprob: -13.076074600219727
    7. ' ' → logprob: -13.826074600219727
    8. ' enumerate' → logprob: -14.326074600219727
    9. '```' → logprob: -15.076074600219727
    10. '	in' → logprob: -15.201074600219727

Token 1077: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -4.6087021473795176e-05
    2. ' enumerate' → logprob: -10.000045776367188
    3. '
' → logprob: -14.500045776367188
    4. '(en' → logprob: -16.500045776367188
    5. 'zip' → logprob: -17.875045776367188
    6. 'en' → logprob: -18.375045776367188
    7. 'enum' → logprob: -18.500045776367188
    8. 'es' → logprob: -18.750045776367188
    9. '```' → logprob: -18.750045776367188
    10. ' ' → logprob: -19.375045776367188

Token 1078: '(es' (ID: 89947)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23955731093883514
    2. '(dist' → logprob: -1.7395572662353516
    3. '(es' → logprob: -3.8645572662353516
    4. 'es' → logprob: -4.114557266235352
    5. ' dist' → logprob: -9.364557266235352
    6. ' es' → logprob: -11.239557266235352
    7. 'range' → logprob: -11.364557266235352
    8. '(range' → logprob: -12.739557266235352
    9. '	dist' → logprob: -13.739557266235352
    10. '(' → logprob: -13.864557266235352

Token 1079: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00026300468016415834
    2. ')' → logprob: -8.375263214111328
    3. ']' → logprob: -11.125263214111328
    4. ')]
' → logprob: -11.875263214111328
    5. '[' → logprob: -13.000263214111328
    6. '   ' → logprob: -13.000263214111328
    7. ' )' → logprob: -13.750263214111328
    8. ')][' → logprob: -13.875263214111328
    9. ')],' → logprob: -14.250263214111328
    10. ')]

' → logprob: -14.625263214111328

Token 1080: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.694541871547699
    2. 'from' → logprob: -0.944541871547699
    3. 'import' → logprob: -2.1945419311523438
    4. '#' → logprob: -8.069541931152344
    5. '```' → logprob: -10.194541931152344
    6. 'q' → logprob: -10.694541931152344
    7. 'while' → logprob: -10.819541931152344
    8. 'queue' → logprob: -11.069541931152344
    9. '
' → logprob: -12.194541931152344
    10. 'def' → logprob: -12.819541931152344

Token 1081: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016097834333777428
    2. 'i' → logprob: -4.6410980224609375
    3. 'v' → logprob: -6.2660980224609375
    4. ' k' → logprob: -6.7660980224609375
    5. 'x' → logprob: -6.7660980224609375
    6. 'via' → logprob: -8.016098022460938
    7. 'p' → logprob: -8.266098022460938
    8. 'u' → logprob: -8.391098022460938
    9. 'mid' → logprob: -8.391098022460938
    10. 'kk' → logprob: -8.641098022460938

Token 1082: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31327930092811584
    2. 'in' → logprob: -1.3132792711257935
    3. 'import' → logprob: -12.813279151916504
    4. 'range' → logprob: -12.813279151916504
    5. '	in' → logprob: -13.313279151916504
    6. ' ' → logprob: -13.313279151916504
    7. 'to' → logprob: -13.438279151916504
    8. '1' → logprob: -13.688279151916504
    9. 'In' → logprob: -13.688279151916504
    10. '0' → logprob: -13.813279151916504

Token 1083: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7729658540920354e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -15.625027656555176
    4. '   ' → logprob: -17.875028610229492
    5. '1' → logprob: -18.250028610229492
    6. '(' → logprob: -19.250028610229492
    7. '	range' → logprob: -20.000028610229492
    8. ' ' → logprob: -20.000028610229492
    9. 'r' → logprob: -20.250028610229492
    10. '  ' → logprob: -21.000028610229492

Token 1084: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43977999687194824
    2. '(V' → logprob: -1.1897799968719482
    3. 'V' → logprob: -3.4397799968719482
    4. '(' → logprob: -3.9397799968719482
    5. ' ' → logprob: -12.564780235290527
    6. '   ' → logprob: -12.689780235290527
    7. '0' → logprob: -13.939780235290527
    8. '	V' → logprob: -14.064780235290527
    9. ' V' → logprob: -14.564780235290527
    10. 'range' → logprob: -15.939780235290527

Token 1085: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3871079981327057
    2. 'V' → logprob: -1.1371079683303833
    3. '(V' → logprob: -8.387107849121094
    4. '0' → logprob: -12.887107849121094
    5. ' V' → logprob: -13.012107849121094
    6. '	V' → logprob: -13.762107849121094
    7. '   ' → logprob: -14.012107849121094
    8. '(' → logprob: -14.137107849121094
    9. ' ' → logprob: -14.262107849121094
    10. 'len' → logprob: -15.012107849121094

Token 1086: ',V' (ID: 81155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3877295255661011
    2. ',V' → logprob: -1.137729525566101
    3. ' ,' → logprob: -7.637729644775391
    4. '   ' → logprob: -9.13772964477539
    5. ',v' → logprob: -9.76272964477539
    6. ',n' → logprob: -9.88772964477539
    7. '(V' → logprob: -10.01272964477539
    8. 'to' → logprob: -10.26272964477539
    9. 'V' → logprob: -11.13772964477539
    10. ',(' → logprob: -11.26272964477539

Token 1087: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2471589798224159e-05
    2. ' +' → logprob: -11.375012397766113
    3. '+
' → logprob: -14.875012397766113
    4. '   ' → logprob: -16.12501335144043
    5. '()+' → logprob: -16.37501335144043
    6. 'for' → logprob: -16.50001335144043
    7. '1' → logprob: -16.50001335144043
    8. '+:' → logprob: -17.00001335144043
    9. '+k' → logprob: -17.37501335144043
    10. 'V' → logprob: -17.50001335144043

Token 1088: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. '+' → logprob: -11.875025749206543
    3. ' ' → logprob: -11.875025749206543
    4. '
' → logprob: -12.500025749206543
    5. 'V' → logprob: -12.625025749206543
    6. '2' → logprob: -13.500025749206543
    7. '(V' → logprob: -13.750025749206543
    8. '```' → logprob: -14.375025749206543
    9. '   ' → logprob: -14.875025749206543
    10. '(' → logprob: -15.687525749206543

Token 1089: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6704849600791931
    2. ':' → logprob: -0.9204849600791931
    3. '   ' → logprob: -2.420485019683838
    4. '):
' → logprob: -6.670485019683838
    5. '):' → logprob: -10.42048454284668
    6. 'for' → logprob: -10.67048454284668
    7. '():
' → logprob: -12.79548454284668
    8. ' :
' → logprob: -13.04548454284668
    9. '       ' → logprob: -13.67048454284668
    10. ' for' → logprob: -13.67048454284668

Token 1090: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10245219618082047
    2. '   ' → logprob: -2.352452278137207
    3. ' for' → logprob: -6.102452278137207
    4. '	for' → logprob: -12.102452278137207
    5. ' ' → logprob: -16.72745132446289
    6. '       ' → logprob: -17.85245132446289
    7. '  ' → logprob: -17.97745132446289
    8. '   ' → logprob: -19.60245132446289
    9. '_for' → logprob: -19.85245132446289
    10. '```' → logprob: -20.60245132446289

Token 1091: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.2994620242971e-06
    2. '   ' → logprob: -11.750008583068848
    3. ' for' → logprob: -14.750008583068848
    4. '	for' → logprob: -18.75000762939453
    5. 'print' → logprob: -19.87500762939453
    6. ' ' → logprob: -20.87500762939453
    7. '  ' → logprob: -22.12500762939453
    8. '```' → logprob: -23.62500762939453
    9. '
' → logprob: -24.12500762939453
    10. '    
' → logprob: -24.25000762939453

Token 1092: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000628683075774461
    2. 'j' → logprob: -7.500628471374512
    3. ' i' → logprob: -9.500628471374512
    4. 'v' → logprob: -14.500628471374512
    5. ' j' → logprob: -15.750628471374512
    6. '   ' → logprob: -16.750629425048828
    7. 'u' → logprob: -16.875629425048828
    8. 'a' → logprob: -17.000629425048828
    9. 'x' → logprob: -17.375629425048828
    10. ' ' → logprob: -18.125629425048828

Token 1093: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22543954849243164
    2. 'in' → logprob: -1.6004395484924316
    3. '1' → logprob: -11.350439071655273
    4. ' ' → logprob: -12.475439071655273
    5. 'range' → logprob: -12.475439071655273
    6. '   ' → logprob: -12.725439071655273
    7. '(' → logprob: -13.975439071655273
    8. '=' → logprob: -14.100439071655273
    9. 'i' → logprob: -14.600439071655273
    10. 'import' → logprob: -14.850439071655273

Token 1094: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031993354205042124
    2. ' range' → logprob: -5.753199100494385
    3. '1' → logprob: -10.753199577331543
    4. ' ' → logprob: -15.628199577331543
    5. '(' → logprob: -16.128198623657227
    6. '(range' → logprob: -17.628198623657227
    7. '   ' → logprob: -18.003198623657227
    8. '
' → logprob: -19.378198623657227
    9. 'in' → logprob: -20.253198623657227
    10. '	range' → logprob: -20.503198623657227

Token 1095: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.314203679561615
    2. '(' → logprob: -1.3142037391662598
    3. 'range' → logprob: -7.06420373916626
    4. '   ' → logprob: -9.814203262329102
    5. 'for' → logprob: -11.439203262329102
    6. ' range' → logprob: -11.939203262329102
    7. ' ' → logprob: -12.064203262329102
    8. ' (' → logprob: -12.189203262329102
    9. '
' → logprob: -13.314203262329102
    10. '=' → logprob: -15.064203262329102

Token 1096: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.750001907348633
    4. 'V' → logprob: -16.750001907348633
    5. '(' → logprob: -17.750001907348633
    6. '
' → logprob: -18.375001907348633
    7. 'range' → logprob: -19.500001907348633
    8. '(V' → logprob: -19.750001907348633
    9. 'k' → logprob: -20.125001907348633
    10. 'for' → logprob: -20.375001907348633

Token 1097: ',V' (ID: 81155)
  Prédit: ',V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',V' → logprob: -0.0015539054293185472
    2. ',' → logprob: -6.501554012298584
    3. ',v' → logprob: -10.126553535461426
    4. ',k' → logprob: -12.126553535461426
    5. 'V' → logprob: -13.751553535461426
    6. ' ,' → logprob: -13.751553535461426
    7. '1' → logprob: -13.751553535461426
    8. '(V' → logprob: -13.876553535461426
    9. ',i' → logprob: -14.501553535461426
    10. ',j' → logprob: -14.876553535461426

Token 1098: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00013011827832087874
    2. '1' → logprob: -9.625129699707031
    3. 'for' → logprob: -10.000129699707031
    4. ',' → logprob: -11.500129699707031
    5. ',V' → logprob: -13.125129699707031
    6. '   ' → logprob: -13.625129699707031
    7. '(V' → logprob: -13.625129699707031
    8. 'in' → logprob: -14.125129699707031
    9. 'V' → logprob: -14.250129699707031
    10. ' +' → logprob: -14.375129699707031

Token 1099: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.874882430769503e-05
    2. '+' → logprob: -9.500079154968262
    3. 'V' → logprob: -13.375079154968262
    4. ' ' → logprob: -13.375079154968262
    5. '(V' → logprob: -15.250079154968262
    6. 'k' → logprob: -15.500079154968262
    7. '
' → logprob: -16.000078201293945
    8. '   ' → logprob: -16.250078201293945
    9. 'i' → logprob: -16.625078201293945
    10. '```' → logprob: -17.125078201293945

Token 1100: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5153793692588806
    2. ':
' → logprob: -1.3903794288635254
    3. '):
' → logprob: -2.2653794288635254
    4. '       ' → logprob: -3.3903794288635254
    5. '   ' → logprob: -4.515379428863525
    6. ',' → logprob: -5.765379428863525
    7. '):' → logprob: -6.515379428863525
    8. ',k' → logprob: -8.640378952026367
    9. '():
' → logprob: -8.890378952026367
    10. ':i' → logprob: -10.015378952026367

Token 1101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001278534036828205
    2. ' for' → logprob: -9.250127792358398
    3. '   ' → logprob: -11.750127792358398
    4. '           ' → logprob: -12.250127792358398
    5. '<|end|>' → logprob: -12.625127792358398
    6. 'for' → logprob: -12.750127792358398
    7. '	   ' → logprob: -13.000127792358398
    8. '               ' → logprob: -13.000127792358398
    9. '	' → logprob: -13.625127792358398
    10. '[' → logprob: -13.625127792358398

Token 1102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28359922766685486
    2. '       ' → logprob: -1.5335992574691772
    3. ' for' → logprob: -3.5335991382598877
    4. '   ' → logprob: -6.283599376678467
    5. '	for' → logprob: -9.658598899841309
    6. '           ' → logprob: -10.283598899841309
    7. ' ' → logprob: -11.908598899841309
    8. '	' → logprob: -14.533598899841309
    9. '     ' → logprob: -14.533598899841309
    10. '    ' → logprob: -14.658598899841309

Token 1103: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.2729995988775045e-06
    2. ' j' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.0000057220459
    4. '
' → logprob: -21.3750057220459
    5. '_j' → logprob: -22.5000057220459
    6. '```' → logprob: -22.5000057220459
    7. '	j' → logprob: -22.6250057220459
    8. 'k' → logprob: -23.0000057220459
    9. '$j' → logprob: -23.6250057220459
    10. ' ' → logprob: -23.6250057220459

Token 1104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16025753319263458
    2. 'in' → logprob: -1.9102575778961182
    3. '(' → logprob: -11.410257339477539
    4. '1' → logprob: -11.660257339477539
    5. '=' → logprob: -11.785257339477539
    6. ' ' → logprob: -12.910257339477539
    7. '           ' → logprob: -13.910257339477539
    8. '   ' → logprob: -13.910257339477539
    9. '       ' → logprob: -14.410257339477539
    10. '	in' → logprob: -15.035257339477539

Token 1105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014249181374907494
    2. ' range' → logprob: -4.264249324798584
    3. '(' → logprob: -9.514248847961426
    4. '1' → logprob: -11.764248847961426
    5. '(range' → logprob: -13.139248847961426
    6. '   ' → logprob: -13.389248847961426
    7. ' ' → logprob: -14.764248847961426
    8. ' (' → logprob: -17.264249801635742
    9. 'in' → logprob: -17.389249801635742
    10. '  ' → logprob: -17.639249801635742

Token 1106: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25195780396461487
    2. '1' → logprob: -1.5019577741622925
    3. '   ' → logprob: -11.001957893371582
    4. ' (' → logprob: -12.001957893371582
    5. ' ' → logprob: -13.001957893371582
    6. '           ' → logprob: -13.376957893371582
    7. 'range' → logprob: -14.001957893371582
    8. '       ' → logprob: -14.376957893371582
    9. '               ' → logprob: -16.376956939697266
    10. '
' → logprob: -16.376956939697266

Token 1107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.75000286102295
    4. '(' → logprob: -15.25000286102295
    5. 'range' → logprob: -16.875003814697266
    6. '           ' → logprob: -17.500003814697266
    7. '
' → logprob: -18.125003814697266
    8. '       ' → logprob: -18.625003814697266
    9. '               ' → logprob: -19.000003814697266
    10. '  ' → logprob: -19.125003814697266

Token 1108: ',V' (ID: 81155)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3159511685371399
    2. ',V' → logprob: -1.9409511089324951
    3. '(V' → logprob: -2.315951108932495
    4. 'range' → logprob: -4.315951347351074
    5. ',' → logprob: -4.940951347351074
    6. '(' → logprob: -5.565951347351074
    7. 'V' → logprob: -5.940951347351074
    8. '+' → logprob: -7.815951347351074
    9. ' ' → logprob: -8.190951347351074
    10. ' range' → logprob: -8.565951347351074

Token 1109: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.127333340875339e-06
    2. '+j' → logprob: -13.250003814697266
    3. '1' → logprob: -13.625003814697266
    4. ' +' → logprob: -14.375003814697266
    5. '```' → logprob: -15.000003814697266
    6. ')+' → logprob: -17.500003814697266
    7. ']+' → logprob: -17.500003814697266
    8. '+
' → logprob: -17.625003814697266
    9. '()+' → logprob: -17.875003814697266
    10. '   ' → logprob: -18.250003814697266

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06216250732541084
    2. '+' → logprob: -2.812162399291992
    3. 'j' → logprob: -8.687162399291992
    4. '+j' → logprob: -11.312162399291992
    5. ' ' → logprob: -12.562162399291992
    6. '+
' → logprob: -13.312162399291992
    7. '(V' → logprob: -13.437162399291992
    8. '```' → logprob: -13.437162399291992
    9. '(' → logprob: -14.062162399291992
    10. 'V' → logprob: -14.562162399291992

Token 1111: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15662570297718048
    2. ':
' → logprob: -3.406625747680664
    3. '               ' → logprob: -3.406625747680664
    4. '           ' → logprob: -3.656625747680664
    5. '):
' → logprob: -3.656625747680664
    6. '):' → logprob: -4.031625747680664
    7. '=' → logprob: -6.031625747680664
    8. ']:
' → logprob: -6.406625747680664
    9. ']:' → logprob: -6.531625747680664
    10. ',' → logprob: -7.031625747680664

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24880218505859375
    2. '               ' → logprob: -1.8738021850585938
    3. ' if' → logprob: -2.8738021850585938
    4. '                   ' → logprob: -5.373802185058594
    5. '                           ' → logprob: -5.998802185058594
    6. '```' → logprob: -6.998802185058594
    7. '                       ' → logprob: -7.248802185058594
    8. 'if' → logprob: -7.873802185058594
    9. '                                   ' → logprob: -8.873802185058594
    10. '            ' → logprob: -8.998802185058594

Token 1113: ' dist' (ID: 3601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2441953718662262
    2. ' if' → logprob: -2.4941954612731934
    3. 'dist' (adapté à ' dist') → logprob: -2.4941954612731934
    4. '               ' → logprob: -2.9941954612731934
    5. '           ' → logprob: -7.119195461273193
    6. ' dist' → logprob: -7.994195461273193
    7. '                   ' → logprob: -8.619194984436035
    8. '   ' → logprob: -10.369194984436035
    9. '                       ' → logprob: -10.494194984436035
    10. '	if' → logprob: -11.369194984436035

Token 1114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.319370302458992e-06
    2. '[I' → logprob: -12.750005722045898
    3. '[' → logprob: -13.500005722045898
    4. '```' → logprob: -14.625005722045898
    5. '[j' → logprob: -15.750005722045898
    6. 'i' → logprob: -16.1250057220459
    7. '[
' → logprob: -16.5000057220459
    8. '
' → logprob: -16.7500057220459
    9. '\[' → logprob: -17.5000057220459
    10. '[min' → logprob: -17.7500057220459

Token 1115: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000990295666269958
    2. '[j' → logprob: -7.000990390777588
    3. '[k' → logprob: -10.12598991394043
    4. '[i' → logprob: -10.62598991394043
    5. ']' → logprob: -11.87598991394043
    6. ' ][' → logprob: -12.62598991394043
    7. '   ' → logprob: -13.75098991394043
    8. '[' → logprob: -14.25098991394043
    9. '>[' → logprob: -14.87598991394043
    10. '```' → logprob: -15.50098991394043

Token 1116: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5759463906288147
    2. 'k' → logprob: -0.8259463906288147
    3. '
' → logprob: -12.575946807861328
    4. 'i' → logprob: -13.575946807861328
    5. ' j' → logprob: -13.950946807861328
    6. ']' → logprob: -14.325946807861328
    7. '   ' → logprob: -14.950946807861328
    8. ' k' → logprob: -15.700946807861328
    9. '```' → logprob: -16.450946807861328
    10. '[j' → logprob: -17.075946807861328

Token 1117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40740343928337097
    2. '>' → logprob: -1.5324034690856934
    3. '=' → logprob: -3.0324034690856934
    4. ']=' → logprob: -3.2824034690856934
    5. ']>' → logprob: -3.6574034690856934
    6. ']+=' → logprob: -6.157403469085693
    7. 'if' → logprob: -6.657403469085693
    8. ' =' → logprob: -6.782403469085693
    9. ' >' → logprob: -6.907403469085693
    10. '           ' → logprob: -8.032402992248535

Token 1118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007345817284658551
    2. '=min' → logprob: -7.625734806060791
    3. '>' → logprob: -8.625734329223633
    4. ' =' → logprob: -9.625734329223633
    5. 'min' → logprob: -14.750734329223633
    6. '   ' → logprob: -15.500734329223633
    7. '=max' → logprob: -15.500734329223633
    8. '>=' → logprob: -16.000734329223633
    9. '.=' → logprob: -17.250734329223633
    10. ']=' → logprob: -17.500734329223633

Token 1119: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. '	min' → logprob: -17.000009536743164
    4. '   ' → logprob: -17.750009536743164
    5. '[min' → logprob: -20.750009536743164
    6. '(min' → logprob: -20.875009536743164
    7. 'dist' → logprob: -21.500009536743164
    8. 'max' → logprob: -22.375009536743164
    9. '           ' → logprob: -22.750009536743164
    10. '  ' → logprob: -22.750009536743164

Token 1120: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.00026300468016415834
    2. '(' → logprob: -8.500263214111328
    3. 'dist' → logprob: -9.750263214111328
    4. '(
' → logprob: -13.625263214111328
    5. '	dist' → logprob: -17.000263214111328
    6. ' dist' → logprob: -17.625263214111328
    7. '(distance' → logprob: -19.750263214111328
    8. '_dist' → logprob: -19.750263214111328
    9. '.dist' → logprob: -20.375263214111328
    10. ' (' → logprob: -20.500263214111328

Token 1121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. 'i' → logprob: -14.625000953674316
    3. '```' → logprob: -15.375000953674316
    4. '][' → logprob: -15.625000953674316
    5. '[' → logprob: -16.375001907348633
    6. '[j' → logprob: -16.625001907348633
    7. ')[' → logprob: -17.250001907348633
    8. '[I' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '(i' → logprob: -17.875001907348633

Token 1122: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013406005455181003
    2. '[i' → logprob: -6.626340389251709
    3. ' ][' → logprob: -12.126340866088867
    4. '[j' → logprob: -12.626340866088867
    5. '   ' → logprob: -12.751340866088867
    6. ']' → logprob: -13.751340866088867
    7. 'i' → logprob: -14.501340866088867
    8. '[' → logprob: -15.126340866088867
    9. '       ' → logprob: -15.376340866088867
    10. ')[' → logprob: -15.626340866088867

Token 1123: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002043748099822551
    2. 'j' → logprob: -8.500204086303711
    3. '[k' → logprob: -14.875204086303711
    4. '
' → logprob: -15.000204086303711
    5. 'i' → logprob: -15.500204086303711
    6. ' k' → logprob: -16.50020408630371
    7. '][' → logprob: -19.12520408630371
    8. '[j' → logprob: -19.25020408630371
    9. '```' → logprob: -21.37520408630371
    10. '   ' → logprob: -21.50020408630371

Token 1124: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011161656584590673
    2. '],' → logprob: -7.3761162757873535
    3. ' ,' → logprob: -8.876115798950195
    4. '           ' → logprob: -9.001115798950195
    5. ',
' → logprob: -9.251115798950195
    6. '               ' → logprob: -10.376115798950195
    7. ',d' → logprob: -10.876115798950195
    8. '       ' → logprob: -11.126115798950195
    9. ',i' → logprob: -11.501115798950195
    10. 'dist' → logprob: -11.501115798950195

Token 1125: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0009287334396503866
    2. ' dist' → logprob: -7.00092887878418
    3. '               ' → logprob: -11.50092887878418
    4. '   ' → logprob: -12.37592887878418
    5. '           ' → logprob: -13.50092887878418
    6. '                   ' → logprob: -14.87592887878418
    7. '	dist' → logprob: -15.12592887878418
    8. '              ' → logprob: -15.50092887878418
    9. '       ' → logprob: -16.00092887878418
    10. '                               ' → logprob: -16.25092887878418

Token 1126: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.875
    3. '[
' → logprob: -17.125
    4. '```' → logprob: -17.625
    5. '[' → logprob: -18.375
    6. '
' → logprob: -19.0
    7. '[I' → logprob: -19.125
    8. '[j' → logprob: -19.375
    9. '][' → logprob: -19.75
    10. '{i' → logprob: -20.625

Token 1127: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07889430224895477
    2. '[i' → logprob: -2.5788943767547607
    3. '[' → logprob: -13.82889461517334
    4. ')[' → logprob: -14.32889461517334
    5. 'i' → logprob: -14.57889461517334
    6. '[k' → logprob: -14.57889461517334
    7. '[j' → logprob: -15.07889461517334
    8. '
' → logprob: -15.20389461517334
    9. ' ][' → logprob: -15.20389461517334
    10. ']' → logprob: -15.32889461517334

Token 1128: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04898030683398247
    2. 'i' → logprob: -3.048980236053467
    3. '[k' → logprob: -8.298980712890625
    4. '[i' → logprob: -9.423980712890625
    5. 'j' → logprob: -9.923980712890625
    6. '[' → logprob: -11.673980712890625
    7. '][' → logprob: -13.173980712890625
    8. '
' → logprob: -13.923980712890625
    9. '[
' → logprob: -14.048980712890625
    10. '1' → logprob: -14.673980712890625

Token 1129: ']+' (ID: 15344)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00038586699520237744
    2. '[j' → logprob: -7.875385761260986
    3. ']' → logprob: -12.750386238098145
    4. '[i' → logprob: -13.625386238098145
    5. '   ' → logprob: -14.875386238098145
    6. 'j' → logprob: -15.000386238098145
    7. ' ][' → logprob: -15.000386238098145
    8. '])' → logprob: -15.875386238098145
    9. '       ' → logprob: -16.000385284423828
    10. ']+' → logprob: -16.500385284423828

Token 1130: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0002613358374219388
    2. ' dist' → logprob: -8.250261306762695
    3. '	dist' → logprob: -19.125261306762695
    4. '   ' → logprob: -19.250261306762695
    5. '(dist' → logprob: -19.500261306762695
    6. '           ' → logprob: -20.875261306762695
    7. '.dist' → logprob: -21.000261306762695
    8. '_dist' → logprob: -21.750261306762695
    9. 'Dist' → logprob: -22.125261306762695
    10. ' ' → logprob: -22.625261306762695

Token 1131: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.2007883671903983e-05
    2. 'k' → logprob: -10.750021934509277
    3. '
' → logprob: -15.625021934509277
    4. '[i' → logprob: -16.625022888183594
    5. '[j' → logprob: -16.875022888183594
    6. ' [' → logprob: -17.375022888183594
    7. '```' → logprob: -17.375022888183594
    8. '{k' → logprob: -17.375022888183594
    9. '][' → logprob: -17.500022888183594
    10. '[
' → logprob: -17.625022888183594

Token 1132: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002865973860025406
    2. '[j' → logprob: -5.877865791320801
    3. '[k' → logprob: -9.7528657913208
    4. '[i' → logprob: -13.5028657913208
    5. 'k' → logprob: -15.1278657913208
    6. '
' → logprob: -15.1278657913208
    7. 'j' → logprob: -15.6278657913208
    8. '   ' → logprob: -15.6278657913208
    9. ']' → logprob: -15.8778657913208
    10. '[' → logprob: -15.8778657913208

Token 1133: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.180258191714529e-06
    2. '[j' → logprob: -12.250008583068848
    3. ' j' → logprob: -13.000008583068848
    4. 'k' → logprob: -14.500008583068848
    5. '   ' → logprob: -14.875008583068848
    6. ' ' → logprob: -15.875008583068848
    7. '
' → logprob: -16.62500762939453
    8. '  ' → logprob: -18.25000762939453
    9. '	j' → logprob: -18.62500762939453
    10. '```' → logprob: -19.25000762939453

Token 1134: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017490185797214508
    2. '))' → logprob: -4.142490386962891
    3. '])' → logprob: -6.642490386962891
    4. ')
' → logprob: -9.01749038696289
    5. '})' → logprob: -11.76749038696289
    6. ' )' → logprob: -12.39249038696289
    7. '           ' → logprob: -12.51749038696289
    8. '       ' → logprob: -12.64249038696289
    9. ')))' → logprob: -13.01749038696289
    10. '())' → logprob: -13.64249038696289

Token 1135: 'printer' (ID: 144218)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.004710649140179157
    2. 'work' → logprob: -6.504710674285889
    3. 'pend' → logprob: -7.129710674285889
    4. '#' → logprob: -7.629710674285889
    5. 'print' → logprob: -7.879710674285889
    6. 'max' → logprob: -8.25471019744873
    7. 'dist' → logprob: -8.75471019744873
    8. '_last' → logprob: -8.87971019744873
    9. 'MAX' → logprob: -8.87971019744873
    10. ' last' → logprob: -9.12971019744873

Token 1136: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06770523637533188
    2. '("("' → logprob: -3.4427051544189453
    3. '("")' → logprob: -3.6927051544189453
    4. '(' → logprob: -5.567705154418945
    5. '('' → logprob: -5.942705154418945
    6. '("(' → logprob: -7.067705154418945
    7. '("\' → logprob: -7.317705154418945
    8. '(":' → logprob: -8.817705154418945
    9. '("="' → logprob: -9.567705154418945
    10. '()' → logprob: -9.817705154418945

Token 1137: 'WS' (ID: 10447)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -1.3207606077194214
    2. 'done' → logprob: -1.3207606077194214
    3. 'start' → logprob: -1.6957606077194214
    4. 'ready' → logprob: -2.945760726928711
    5. 'end' → logprob: -3.195760726928711
    6. 'finish' → logprob: -3.195760726928711
    7. 'ok' → logprob: -3.445760726928711
    8. 'init' → logprob: -3.695760726928711
    9. ' done' → logprob: -4.695760726928711
    10. 'finished' → logprob: -4.820760726928711

Token 1138: ' done' (ID: 4167)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7165612578392029
    2. 'DONE' → logprob: -1.4665613174438477
    3. 't' → logprob: -2.8415613174438477
    4. 'done' → logprob: -3.3415613174438477
    5. 'T' → logprob: -3.4665613174438477
    6. '}")' → logprob: -3.5915613174438477
    7. '_' → logprob: -4.591561317443848
    8. 'TP' → logprob: -4.591561317443848
    9. '_done' → logprob: -4.591561317443848
    10. 'Done' → logprob: -4.966561317443848

Token 1139: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003803288098424673
    2. '\n' → logprob: -5.628803253173828
    3. '.")' → logprob: -9.628803253173828
    4. '!")' → logprob: -9.878803253173828
    5. '")
' → logprob: -10.378803253173828
    6. ')' → logprob: -11.003803253173828
    7. '...' → logprob: -11.503803253173828
    8. ')")' → logprob: -12.253803253173828
    9. ',' → logprob: -12.503803253173828
    10. 'def' → logprob: -13.128803253173828

Token 1140: 'n' (ID: 77)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03716835007071495
    2. 'pend' → logprob: -3.537168264389038
    3. 'work' → logprob: -5.412168502807617
    4. 'dist' → logprob: -7.037168502807617
    5. 'pending' → logprob: -7.662168502807617
    6. '#' → logprob: -8.037168502807617
    7. 'V' → logprob: -8.037168502807617
    8. 'n' → logprob: -8.537168502807617
    9. '_last' → logprob: -8.912168502807617
    10. 'sys' → logprob: -9.287168502807617

Token 1141: 'array' (ID: 3361)
  Prédit: 'odes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odes' → logprob: -0.5335250496864319
    2. '=' → logprob: -1.283524990081787
    3. ' =' → logprob: -2.533524990081787
    4. 'ode' → logprob: -3.533524990081787
    5. 'um' → logprob: -4.908524990081787
    6. 'ext' → logprob: -5.283524990081787
    7. 'umber' → logprob: -5.658524990081787
    8. 'ow' → logprob: -6.158524990081787
    9. ',' → logprob: -6.283524990081787
    10. '=int' → logprob: -6.533524990081787

Token 1142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0191017035394907
    2. ' =' → logprob: -4.019101619720459
    3. '=[[' → logprob: -7.644101619720459
    4. '=[' → logprob: -7.769101619720459
    5. '=[]' → logprob: -10.269102096557617
    6. '=
' → logprob: -12.144102096557617
    7. '[' → logprob: -13.144102096557617
    8. '=n' → logprob: -13.269102096557617
    9. '=

' → logprob: -13.519102096557617
    10. '=[
' → logprob: -13.644102096557617

Token 1143: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20141568779945374
    2. '[[' → logprob: -1.7014156579971313
    3. '[
' → logprob: -13.326416015625
    4. ' [[]' → logprob: -14.826416015625
    5. '[]' → logprob: -15.201416015625
    6. ' [[' → logprob: -16.701416015625
    7. '[['' → logprob: -17.201416015625
    8. '[-' → logprob: -17.451416015625
    9. '[]
' → logprob: -18.201416015625
    10. '[n' → logprob: -19.451416015625

Token 1144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11454831808805466
    2. '1' → logprob: -2.9895482063293457
    3. '-' → logprob: -3.2395482063293457
    4. '999' → logprob: -4.114548206329346
    5. '(' → logprob: -6.864548206329346
    6. 'V' → logprob: -7.739548206329346
    7. 'None' → logprob: -8.364548683166504
    8. ' ' → logprob: -8.864548683166504
    9. 'j' → logprob: -9.614548683166504
    10. 'False' → logprob: -9.739548683166504

Token 1145: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1832074671983719
    2. ']*(' → logprob: -2.1832075119018555
    3. 'for' → logprob: -3.3082075119018555
    4. ']' → logprob: -4.0582075119018555
    5. ']*' → logprob: -7.8082075119018555
    6. '   ' → logprob: -8.558207511901855
    7. '*(' → logprob: -9.308207511901855
    8. '	for' → logprob: -9.683207511901855
    9. ' ]' → logprob: -10.308207511901855
    10. ']+' → logprob: -10.308207511901855

Token 1146: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003024537581950426
    2. ' _' → logprob: -9.0003023147583
    3. ' in' → logprob: -9.2503023147583
    4. '_j' → logprob: -9.8753023147583
    5. '__' → logprob: -11.2503023147583
    6. 'in' → logprob: -11.8753023147583
    7. '_i' → logprob: -12.6253023147583
    8. 'j' → logprob: -13.0003023147583
    9. 'i' → logprob: -13.5003023147583
    10. ' j' → logprob: -13.6253023147583

Token 1147: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008458194322884083
    2. 'in' → logprob: -4.883458137512207
    3. ' range' → logprob: -7.258458137512207
    4. ' in' → logprob: -8.883458137512207
    5. 'n' → logprob: -11.883458137512207
    6. 'ange' → logprob: -14.758458137512207
    7. '(range' → logprob: -15.133458137512207
    8. '
' → logprob: -15.508458137512207
    9. ' ' → logprob: -15.758458137512207
    10. 'for' → logprob: -15.758458137512207

Token 1148: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007160080131143332
    2. ' range' → logprob: -7.250716209411621
    3. 'in' → logprob: -12.875716209411621
    4. '_range' → logprob: -13.500716209411621
    5. '_' → logprob: -13.750716209411621
    6. '
' → logprob: -14.375716209411621
    7. '   ' → logprob: -15.250716209411621
    8. ' ' → logprob: -16.000715255737305
    9. '  ' → logprob: -16.875715255737305
    10. '	range' → logprob: -17.250715255737305

Token 1149: '(V' (ID: 16949)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.693393886089325
    2. '(V' → logprob: -0.693393886089325
    3. ' V' → logprob: -9.56839370727539
    4. '(' → logprob: -10.19339370727539
    5. '1' → logprob: -10.31839370727539
    6. '   ' → logprob: -10.44339370727539
    7. ' (' → logprob: -10.94339370727539
    8. '0' → logprob: -11.19339370727539
    9. 'i' → logprob: -11.81839370727539
    10. 'len' → logprob: -11.94339370727539

Token 1150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.372294698550832e-06
    2. ' +' → logprob: -11.625009536743164
    3. '+
' → logprob: -15.875009536743164
    4. '1' → logprob: -16.375009536743164
    5. ')]' → logprob: -16.500009536743164
    6. '()+' → logprob: -17.875009536743164
    7. '+)' → logprob: -18.125009536743164
    8. ')' → logprob: -18.875009536743164
    9. '+j' → logprob: -19.250009536743164
    10. ')])' → logprob: -19.375009536743164

Token 1151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04138962924480438
    2. '(V' → logprob: -3.4163897037506104
    3. 'V' → logprob: -5.416389465332031
    4. '+' → logprob: -5.916389465332031
    5. '(' → logprob: -8.041389465332031
    6. '2' → logprob: -9.166389465332031
    7. '[V' → logprob: -10.416389465332031
    8. ' ' → logprob: -11.041389465332031
    9. '{' → logprob: -11.291389465332031
    10. '   ' → logprob: -11.416389465332031

Token 1152: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009710535407066345
    2. ')' → logprob: -4.759710311889648
    3. ')]' → logprob: -7.009710311889648
    4. ' ]' → logprob: -8.634710311889648
    5. ' )' → logprob: -12.259710311889648
    6. ']
' → logprob: -13.134710311889648
    7. ']]' → logprob: -13.384710311889648
    8. '   ' → logprob: -13.759710311889648
    9. '])' → logprob: -13.759710311889648
    10. ' ' → logprob: -14.134710311889648

Token 1153: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4743036925792694
    2. ' for' → logprob: -0.9743037223815918
    3. '   ' → logprob: -8.599303245544434
    4. '	for' → logprob: -10.349303245544434
    5. ' ' → logprob: -12.349303245544434
    6. ']' → logprob: -13.099303245544434
    7. '       ' → logprob: -13.349303245544434
    8. '  ' → logprob: -14.099303245544434
    9. '    ' → logprob: -14.224303245544434
    10. '           ' → logprob: -15.349303245544434

Token 1154: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11902380734682083
    2. 'i' → logprob: -3.1190237998962402
    3. 'range' → logprob: -3.1190237998962402
    4. ' range' → logprob: -3.9940237998962402
    5. '_i' → logprob: -5.99402379989624
    6. 'in' → logprob: -7.11902379989624
    7. ' i' → logprob: -7.49402379989624
    8. '_V' → logprob: -7.49402379989624
    9. '_range' → logprob: -8.119024276733398
    10. ' _' → logprob: -8.744024276733398

Token 1155: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006160548073239625
    2. ' range' → logprob: -7.750616073608398
    3. '(range' → logprob: -8.750616073608398
    4. '(V' → logprob: -10.625616073608398
    5. 'in' → logprob: -13.375616073608398
    6. '(' → logprob: -14.750616073608398
    7. 'for' → logprob: -14.875616073608398
    8. '   ' → logprob: -15.875616073608398
    9. '	range' → logprob: -15.875616073608398
    10. '_range' → logprob: -16.5006160736084

Token 1156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235529970377684
    2. ' range' → logprob: -5.25523567199707
    3. '(range' → logprob: -13.25523567199707
    4. '(V' → logprob: -17.50523567199707
    5. '   ' → logprob: -18.13023567199707
    6. '	range' → logprob: -18.25523567199707
    7. ' ' → logprob: -19.13023567199707
    8. '
' → logprob: -19.13023567199707
    9. 'V' → logprob: -19.88023567199707
    10. '[' → logprob: -20.88023567199707

Token 1157: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.020115060731768608
    2. 'range' → logprob: -4.020114898681641
    3. ' range' → logprob: -6.270114898681641
    4. 'V' → logprob: -10.52011489868164
    5. '(range' → logprob: -10.89511489868164
    6. ' (' → logprob: -11.14511489868164
    7. 'for' → logprob: -12.14511489868164
    8. '   ' → logprob: -13.02011489868164
    9. '(' → logprob: -13.27011489868164
    10. 'Range' → logprob: -14.52011489868164

Token 1158: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.894790981779806e-05
    2. '1' → logprob: -10.000048637390137
    3. ' +' → logprob: -13.125048637390137
    4. '+
' → logprob: -14.500048637390137
    5. ')]' → logprob: -15.875048637390137
    6. '+)' → logprob: -16.125049591064453
    7. ')' → logprob: -16.250049591064453
    8. '()+' → logprob: -16.375049591064453
    9. '[' → logprob: -16.500049591064453
    10. ')+' → logprob: -16.500049591064453

Token 1159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -14.00000286102295
    3. '+' → logprob: -14.50000286102295
    4. '2' → logprob: -14.75000286102295
    5. '
' → logprob: -14.75000286102295
    6. '0' → logprob: -15.00000286102295
    7. '```' → logprob: -15.37500286102295
    8. '(' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.375003814697266
    10. 'range' → logprob: -17.000003814697266

Token 1160: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012742957100272179
    2. ')]' → logprob: -4.76274299621582
    3. ']
' → logprob: -5.51274299621582
    4. ')]
' → logprob: -9.76274299621582
    5. ' ]' → logprob: -11.13774299621582
    6. ']

' → logprob: -12.88774299621582
    7. '()]' → logprob: -12.88774299621582
    8. 'for' → logprob: -13.13774299621582
    9. ']]' → logprob: -13.38774299621582
    10. ']
' → logprob: -13.76274299621582

Token 1161: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -17.125
    3. 'def' → logprob: -19.875
    4. 'from' → logprob: -20.25
    5. '```' → logprob: -21.625
    6. '	for' → logprob: -22.25
    7. 'import' → logprob: -23.875
    8. '
' → logprob: -24.0
    9. '   ' → logprob: -24.375
    10. '#' → logprob: -24.875

Token 1162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014500876888632774
    2. 'x' → logprob: -5.264501094818115
    3. 'u' → logprob: -6.014501094818115
    4. 'a' → logprob: -6.139501094818115
    5. 'v' → logprob: -6.264501094818115
    6. 'j' → logprob: -6.764501094818115
    7. 'k' → logprob: -8.014500617980957
    8. 'p' → logprob: -8.514500617980957
    9. 's' → logprob: -8.889500617980957
    10. 'start' → logprob: -8.889500617980957

Token 1163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25225308537483215
    2. 'in' → logprob: -1.5022530555725098
    3. 'n' → logprob: -9.752253532409668
    4. '   ' → logprob: -9.877253532409668
    5. 'range' → logprob: -10.002253532409668
    6. '1' → logprob: -10.252253532409668
    7. 'i' → logprob: -10.252253532409668
    8. '	in' → logprob: -11.002253532409668
    9. 'a' → logprob: -11.127253532409668
    10. ',' → logprob: -11.627253532409668

Token 1164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001929228543303907
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -15.25192928314209
    4. '1' → logprob: -16.001928329467773
    5. 'i' → logprob: -16.376928329467773
    6. 'in' → logprob: -17.126928329467773
    7. '(' → logprob: -17.376928329467773
    8. '   ' → logprob: -17.376928329467773
    9. 'r' → logprob: -17.626928329467773
    10. ' ' → logprob: -18.126928329467773

Token 1165: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7017763257026672
    2. 'range' → logprob: -0.7017763257026672
    3. '(' → logprob: -4.826776504516602
    4. 'in' → logprob: -8.076776504516602
    5. ' range' → logprob: -8.576776504516602
    6. '   ' → logprob: -9.826776504516602
    7. 'i' → logprob: -10.951776504516602
    8. '(range' → logprob: -12.576776504516602
    9. ' ' → logprob: -13.451776504516602
    10. '0' → logprob: -13.701776504516602

Token 1166: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16036710143089294
    2. '1' → logprob: -1.9103671312332153
    3. ' range' → logprob: -9.410367012023926
    4. '(' → logprob: -10.160367012023926
    5. 'V' → logprob: -11.535367012023926
    6. '   ' → logprob: -12.410367012023926
    7. '(V' → logprob: -12.660367012023926
    8. 'i' → logprob: -13.535367012023926
    9. '(range' → logprob: -13.535367012023926
    10. '2' → logprob: -14.285367012023926

Token 1167: ',V' (ID: 81155)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31731903553009033
    2. 'in' → logprob: -1.3173190355300903
    3. ',' → logprob: -5.817318916320801
    4. '   ' → logprob: -8.1923189163208
    5. 'for' → logprob: -8.3173189163208
    6. 'range' → logprob: -8.4423189163208
    7. '1' → logprob: -9.5673189163208
    8. 'import' → logprob: -10.1923189163208
    9. 'n' → logprob: -10.5673189163208
    10. '(V' → logprob: -10.5673189163208

Token 1168: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5024933218955994
    2. '1' → logprob: -1.2524933815002441
    3. '(' → logprob: -2.252493381500244
    4. '(V' → logprob: -6.002493381500244
    5. 'for' → logprob: -6.877493381500244
    6. '(i' → logprob: -9.002492904663086
    7. 'V' → logprob: -9.752492904663086
    8. ' +' → logprob: -9.752492904663086
    9. ',' → logprob: -9.877492904663086
    10. '
' → logprob: -10.252492904663086

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.877503907773644e-05
    2. 'for' → logprob: -10.750099182128906
    3. 'i' → logprob: -10.750099182128906
    4. '+' → logprob: -10.875099182128906
    5. '0' → logprob: -11.625099182128906
    6. ' ' → logprob: -11.750099182128906
    7. '(' → logprob: -12.250099182128906
    8. 'V' → logprob: -12.750099182128906
    9. '
' → logprob: -12.750099182128906
    10. '```' → logprob: -12.750099182128906

Token 1170: '):
' (ID: 1883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9155240654945374
    2. ':
' → logprob: -1.4155240058898926
    3. '):
' → logprob: -1.5405240058898926
    4. 'for' → logprob: -3.0405240058898926
    5. ':' → logprob: -3.1655240058898926
    6. ' for' → logprob: -3.4155240058898926
    7. '):' → logprob: -5.165524005889893
    8. ')' → logprob: -5.665524005889893
    9. ' ' → logprob: -5.915524005889893
    10. ',' → logprob: -5.915524005889893

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21629062294960022
    2. 'for' → logprob: -1.7162905931472778
    3. ' for' → logprob: -4.216290473937988
    4. '	for' → logprob: -12.091290473937988
    5. 'j' → logprob: -12.841290473937988
    6. '       ' → logprob: -12.966290473937988
    7. 'min' → logprob: -13.466290473937988
    8. ' ' → logprob: -14.716290473937988
    9. ' j' → logprob: -15.591290473937988
    10. '  ' → logprob: -15.716290473937988

Token 1172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019313741941004992
    2. 'best' → logprob: -7.626931190490723
    3. '   ' → logprob: -8.001931190490723
    4. 'order' → logprob: -8.501931190490723
    5. 'lst' → logprob: -9.251931190490723
    6. 'arr' → logprob: -9.501931190490723
    7. 'tmp' → logprob: -9.501931190490723
    8. 'd' → logprob: -9.501931190490723
    9. 'dist' → logprob: -9.876931190490723
    10. 'm' → logprob: -10.251931190490723

Token 1173: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00015586259542033076
    2. 'k' → logprob: -9.875155448913574
    3. 'x' → logprob: -10.125155448913574
    4. ' j' → logprob: -10.250155448913574
    5. 'v' → logprob: -10.750155448913574
    6. 'a' → logprob: -13.875155448913574
    7. 'b' → logprob: -14.375155448913574
    8. 'y' → logprob: -14.375155448913574
    9. 't' → logprob: -14.500155448913574
    10. 'w' → logprob: -14.625155448913574

Token 1174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11296169459819794
    2. 'in' → logprob: -2.237961769104004
    3. '(' → logprob: -9.362961769104004
    4. '   ' → logprob: -10.862961769104004
    5. 'range' → logprob: -10.862961769104004
    6. '1' → logprob: -11.987961769104004
    7. ' ' → logprob: -12.612961769104004
    8. 'i' → logprob: -13.612961769104004
    9. '	in' → logprob: -13.612961769104004
    10. 'import' → logprob: -14.612961769104004

Token 1175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00039385363925248384
    2. ' range' → logprob: -7.875393867492676
    3. '(' → logprob: -11.625393867492676
    4. '(range' → logprob: -12.375393867492676
    5. '   ' → logprob: -15.625393867492676
    6. 'i' → logprob: -15.875393867492676
    7. '
' → logprob: -16.50039291381836
    8. ' ' → logprob: -16.62539291381836
    9. '1' → logprob: -17.50039291381836
    10. '	range' → logprob: -18.12539291381836

Token 1176: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17261426150798798
    2. 'range' → logprob: -1.9226142168045044
    3. '1' → logprob: -4.422614097595215
    4. ' range' → logprob: -8.547614097595215
    5. '   ' → logprob: -9.297614097595215
    6. '(range' → logprob: -11.047614097595215
    7. 'i' → logprob: -12.297614097595215
    8. '(i' → logprob: -13.547614097595215
    9. ' ' → logprob: -13.922614097595215
    10. ' (' → logprob: -13.922614097595215

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5241721868515015
    2. 'range' → logprob: -0.8991721868515015
    3. ' range' → logprob: -7.524172306060791
    4. '(' → logprob: -7.774172306060791
    5. '   ' → logprob: -10.149171829223633
    6. 'i' → logprob: -10.649171829223633
    7. ' ' → logprob: -11.524171829223633
    8. '(range' → logprob: -12.149171829223633
    9. 'V' → logprob: -13.024171829223633
    10. '
' → logprob: -13.399171829223633

Token 1178: ',V' (ID: 81155)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006361720617860556
    2. '(' → logprob: -5.256361484527588
    3. '(V' → logprob: -7.881361484527588
    4. ' range' → logprob: -7.881361484527588
    5. '1' → logprob: -8.256361961364746
    6. '(range' → logprob: -9.256361961364746
    7. '   ' → logprob: -11.256361961364746
    8. 'V' → logprob: -13.006361961364746
    9. 'Range' → logprob: -14.631361961364746
    10. '
' → logprob: -15.006361961364746

Token 1179: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00044103997061029077
    2. '1' → logprob: -7.750441074371338
    3. ' +' → logprob: -12.50044059753418
    4. 'V' → logprob: -13.37544059753418
    5. '(V' → logprob: -13.50044059753418
    6. 'j' → logprob: -13.87544059753418
    7. 'for' → logprob: -14.87544059753418
    8. '```' → logprob: -14.87544059753418
    9. 'i' → logprob: -15.25044059753418
    10. '()+' → logprob: -15.62544059753418

Token 1180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009030741639435291
    2. 'range' → logprob: -4.884030818939209
    3. 'j' → logprob: -7.134030818939209
    4. ' range' → logprob: -8.25903034210205
    5. '+' → logprob: -8.50903034210205
    6. '(' → logprob: -9.50903034210205
    7. '
' → logprob: -10.88403034210205
    8. '(V' → logprob: -10.88403034210205
    9. '(range' → logprob: -11.13403034210205
    10. 'V' → logprob: -11.38403034210205

Token 1181: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4918498694896698
    2. '   ' → logprob: -2.116849899291992
    3. ':
' → logprob: -2.116849899291992
    4. '):
' → logprob: -2.616849899291992
    5. '       ' → logprob: -2.866849899291992
    6. '):' → logprob: -5.741849899291992
    7. ' if' → logprob: -5.866849899291992
    8. ' :' → logprob: -6.116849899291992
    9. ',' → logprob: -6.241849899291992
    10. ' :
' → logprob: -6.616849899291992

Token 1182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03735831752419472
    2. '   ' → logprob: -3.662358283996582
    3. ' if' → logprob: -4.662358283996582
    4. 'if' → logprob: -7.287358283996582
    5. ' for' → logprob: -8.537358283996582
    6. '           ' → logprob: -8.912358283996582
    7. 'dist' → logprob: -9.037358283996582
    8. 'n' → logprob: -9.787358283996582
    9. '```' → logprob: -9.787358283996582
    10. ' dist' → logprob: -10.287358283996582

Token 1183: ' if' (ID: 538)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.43359771370887756
    2. 'if' (adapté à ' if') → logprob: -2.6835978031158447
    3. 'for' → logprob: -2.6835978031158447
    4. 'min' → logprob: -3.3085978031158447
    5. '       ' → logprob: -3.3085978031158447
    6. 'mn' → logprob: -3.6835978031158447
    7. '   ' → logprob: -3.9335978031158447
    8. 'n' → logprob: -4.183597564697266
    9. 'mind' → logprob: -4.308597564697266
    10. 'mx' → logprob: -4.558597564697266

Token 1184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011064093559980392
    2. 'dist' → logprob: -4.636064052581787
    3. 'j' → logprob: -6.886064052581787
    4. ' i' → logprob: -8.386064529418945
    5. 'not' → logprob: -11.011064529418945
    6. '   ' → logprob: -11.261064529418945
    7. ' dist' → logprob: -11.636064529418945
    8. '(i' → logprob: -11.761064529418945
    9. '	i' → logprob: -13.011064529418945
    10. 'n' → logprob: -13.636064529418945

Token 1185: '==' (ID: 560)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0517725944519043
    2. ' ==' → logprob: -1.3017725944519043
    3. '==' → logprob: -1.5517725944519043
    4. '!=' → logprob: -1.8017725944519043
    5. '   ' → logprob: -7.551772594451904
    6. '[' → logprob: -7.551772594451904
    7. '[i' → logprob: -8.426773071289062
    8. ']==' → logprob: -9.301773071289062
    9. ']' → logprob: -9.676773071289062
    10. ' ' → logprob: -9.801773071289062

Token 1186: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.41866585687967e-06
    2. ' j' → logprob: -12.125008583068848
    3. 'i' → logprob: -13.625008583068848
    4. '   ' → logprob: -14.000008583068848
    5. '0' → logprob: -15.125008583068848
    6. '	j' → logprob: -15.500008583068848
    7. '1' → logprob: -15.750008583068848
    8. ' ' → logprob: -16.12500762939453
    9. '
' → logprob: -16.37500762939453
    10. '```' → logprob: -17.62500762939453

Token 1187: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33167266845703125
    2. ' or' → logprob: -1.9566726684570312
    3. ':' → logprob: -2.2066726684570312
    4. ' continue' → logprob: -4.081672668457031
    5. 'continue' → logprob: -5.331672668457031
    6. '       ' → logprob: -5.456672668457031
    7. ':
' → logprob: -6.581672668457031
    8. '               ' → logprob: -6.831672668457031
    9. '   ' → logprob: -7.706672668457031
    10. '	continue' → logprob: -7.706672668457031

Token 1188: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2759256958961487
    2. 'n' → logprob: -2.275925636291504
    3. '   ' → logprob: -3.025925636291504
    4. ' continue' → logprob: -3.025925636291504
    5. ' n' → logprob: -3.400925636291504
    6. 'continue' → logprob: -5.150925636291504
    7. '       ' → logprob: -6.775925636291504
    8. '	n' → logprob: -8.400925636291504
    9. '	continue' → logprob: -8.650925636291504
    10. ' ' → logprob: -8.900925636291504

Token 1189: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6014540195465088
    2. 'best' → logprob: -1.6014540195465088
    3. ' mn' → logprob: -2.726454019546509
    4. ' best' → logprob: -2.851454019546509
    5. '   ' → logprob: -2.976454019546509
    6. 'mn' → logprob: -4.22645378112793
    7. 'mx' → logprob: -4.60145378112793
    8. ' mx' → logprob: -4.72645378112793
    9. ' nxt' → logprob: -4.85145378112793
    10. 'min' → logprob: -5.10145378112793

Token 1190: '       ' (ID: 309)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.49703970551490784
    2. '   ' → logprob: -1.8720396757125854
    3. '       ' → logprob: -2.372039794921875
    4. ' best' → logprob: -3.372039794921875
    5. 'for' → logprob: -3.497039794921875
    6. 'mx' → logprob: -4.122039794921875
    7. 'min' → logprob: -4.747039794921875
    8. ' mn' → logprob: -4.872039794921875
    9. 'mn' → logprob: -4.872039794921875
    10. 'dist' → logprob: -5.122039794921875

Token 1191: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7914680242538452
    2. 'best' → logprob: -0.9164680242538452
    3. 'mn' → logprob: -3.0414681434631348
    4. 'mind' → logprob: -3.7914681434631348
    5. 'cand' → logprob: -4.041468143463135
    6. 'mi' → logprob: -4.291468143463135
    7. 'n' → logprob: -4.916468143463135
    8. 'next' → logprob: -5.041468143463135
    9. 'min' → logprob: -5.041468143463135
    10. 'mx' → logprob: -5.666468143463135

Token 1192: ' nk' (ID: 18437)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9560288786888123
    2. 'k' → logprob: -1.581028938293457
    3. 'a' → logprob: -2.331028938293457
    4. 'v' → logprob: -2.956028938293457
    5. 'x' → logprob: -2.956028938293457
    6. 'e' → logprob: -3.581028938293457
    7. 'c' → logprob: -3.956028938293457
    8. 'to' → logprob: -4.206028938293457
    9. 'z' → logprob: -4.331028938293457
    10. 'n' → logprob: -4.581028938293457

Token 1193: ',c' (ID: 22261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812992036342621
    2. 'in' → logprob: -1.4062992334365845
    3. 'n' → logprob: -9.156299591064453
    4. ' ' → logprob: -11.656299591064453
    5. 'e' → logprob: -11.906299591064453
    6. 't' → logprob: -12.406299591064453
    7. '	in' → logprob: -12.531299591064453
    8. '   ' → logprob: -13.031299591064453
    9. 's' → logprob: -13.281299591064453
    10. 'w' → logprob: -13.406299591064453

Token 1194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5239676237106323
    2. 'in' → logprob: -0.8989676237106323
    3. 'n' → logprob: -7.648967742919922
    4. ',' → logprob: -9.273967742919922
    5. ' ' → logprob: -9.773967742919922
    6. 's' → logprob: -10.148967742919922
    7. '   ' → logprob: -10.398967742919922
    8. ',n' → logprob: -10.773967742919922
    9. 't' → logprob: -11.273967742919922
    10. 'nt' → logprob: -11.773967742919922

Token 1195: ' es' (ID: 878)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.10023093223571777
    2. ' es' → logprob: -2.3502309322357178
    3. '	es' → logprob: -11.225231170654297
    4. '   ' → logprob: -12.725231170654297
    5. '[(' → logprob: -13.100231170654297
    6. '(es' → logprob: -13.725231170654297
    7. '[' → logprob: -13.975231170654297
    8. ' ' → logprob: -13.975231170654297
    9. '[[' → logprob: -14.475231170654297
    10. '
' → logprob: -14.600231170654297

Token 1196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. '[j' → logprob: -11.875012397766113
    3. 'i' → logprob: -12.750012397766113
    4. '[' → logprob: -14.000012397766113
    5. '[n' → logprob: -14.250012397766113
    6. '[s' → logprob: -15.750012397766113
    7. ' [' → logprob: -15.875012397766113
    8. 's' → logprob: -16.500011444091797
    9. '[k' → logprob: -17.125011444091797
    10. '{i' → logprob: -17.875011444091797

Token 1197: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009380202973261476
    2. ':' → logprob: -8.000938415527344
    3. ':
' → logprob: -8.000938415527344
    4. ']:
' → logprob: -8.625938415527344
    5. ']:' → logprob: -9.750938415527344
    6. '   ' → logprob: -11.625938415527344
    7. '):
' → logprob: -11.750938415527344
    8. '       ' → logprob: -12.000938415527344
    9. '           ' → logprob: -13.000938415527344
    10. '[j' → logprob: -13.625938415527344

Token 1198: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.635164754698053e-05
    2. '<|end|>' → logprob: -11.000066757202148
    3. '         ' → logprob: -11.125066757202148
    4. '	       ' → logprob: -11.250066757202148
    5. '          ' → logprob: -12.375066757202148
    6. '   ' → logprob: -12.625066757202148
    7. '		' → logprob: -12.750066757202148
    8. '               ' → logprob: -12.750066757202148
    9. ' ' → logprob: -13.125066757202148
    10. '       ' → logprob: -13.250066757202148

Token 1199: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004448512569069862
    2. 'if' (adapté à ' if') → logprob: -5.754448413848877
    3. ' if' → logprob: -7.129448413848877
    4. '               ' → logprob: -7.754448413848877
    5. '   ' → logprob: -11.004448890686035
    6. ' ' → logprob: -12.004448890686035
    7. '       ' → logprob: -12.504448890686035
    8. '                   ' → logprob: -12.629448890686035
    9. '<|end|>' → logprob: -12.754448890686035
    10. '```' → logprob: -13.004448890686035

Token 1200: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00014442270912695676
    2. ' dist' → logprob: -9.750144004821777
    3. 'c' → logprob: -10.250144004821777
    4. 'nk' → logprob: -10.875144004821777
    5. '   ' → logprob: -11.000144004821777
    6. '(dist' → logprob: -12.000144004821777
    7. '	dist' → logprob: -13.000144004821777
    8. 'abs' → logprob: -14.000144004821777
    9. 'distance' → logprob: -14.250144004821777
    10. 'Dist' → logprob: -14.625144004821777

Token 1201: '[i' (ID: 1768)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.13543812930583954
    2. '[i' → logprob: -2.7604382038116455
    3. '[j' → logprob: -2.7604382038116455
    4. '[' → logprob: -10.010437965393066
    5. 'nk' → logprob: -10.885437965393066
    6. '[k' → logprob: -11.010437965393066
    7. 'j' → logprob: -11.260437965393066
    8. '][' → logprob: -12.010437965393066
    9. 'i' → logprob: -12.135437965393066
    10. 'n' → logprob: -12.385437965393066

Token 1202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2854984700679779
    2. '[n' → logprob: -1.4104984998703003
    3. '[j' → logprob: -5.53549861907959
    4. '[k' → logprob: -8.78549861907959
    5. '[i' → logprob: -9.28549861907959
    6. '[' → logprob: -9.53549861907959
    7. '
' → logprob: -10.78549861907959
    8. '   ' → logprob: -11.28549861907959
    9. ' ][' → logprob: -11.41049861907959
    10. 'nk' → logprob: -11.78549861907959

Token 1203: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3487282693386078
    2. 'nk' → logprob: -1.2237282991409302
    3. 'nj' → logprob: -9.47372817993164
    4. 'n' → logprob: -9.72372817993164
    5. 'k' → logprob: -9.84872817993164
    6. 'jk' → logprob: -9.97372817993164
    7. '
' → logprob: -11.22372817993164
    8. 'i' → logprob: -11.72372817993164
    9. ' nk' → logprob: -12.72372817993164
    10. ']' → logprob: -12.84872817993164

Token 1204: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6053211688995361
    2. ']+' → logprob: -1.3553211688995361
    3. '[n' → logprob: -1.9803211688995361
    4. '][' → logprob: -3.480321168899536
    5. '+' → logprob: -4.230320930480957
    6. '>' → logprob: -5.480320930480957
    7. ']==' → logprob: -5.605320930480957
    8. '+n' → logprob: -6.355320930480957
    9. 'nk' → logprob: -6.855320930480957
    10. ' +' → logprob: -7.105320930480957

Token 1205: 'c' (ID: 66)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004285235481802374
    2. 'c' → logprob: -8.125428199768066
    3. ' dist' → logprob: -9.625428199768066
    4. 'nk' → logprob: -10.000428199768066
    5. '(dist' → logprob: -11.375428199768066
    6. '   ' → logprob: -12.250428199768066
    7. '	dist' → logprob: -14.125428199768066
    8. 'cost' → logprob: -14.375428199768066
    9. 'NK' → logprob: -14.750428199768066
    10. '(' → logprob: -15.000428199768066

Token 1206: '+' (ID: 10)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.22745893895626068
    2. ' and' → logprob: -2.227458953857422
    3. '+' → logprob: -2.352458953857422
    4. '+n' → logprob: -8.477458953857422
    5. ' +' → logprob: -8.602458953857422
    6. '+k' → logprob: -9.727458953857422
    7. '           ' → logprob: -11.102458953857422
    8. '   ' → logprob: -11.477458953857422
    9. '               ' → logprob: -11.602458953857422
    10. '&&' → logprob: -12.477458953857422

Token 1207: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.8889261304575484e-06
    2. ' dist' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '	dist' → logprob: -17.625003814697266
    5. '(dist' → logprob: -19.625003814697266
    6. '       ' → logprob: -19.875003814697266
    7. '           ' → logprob: -19.875003814697266
    8. 'Dist' → logprob: -20.000003814697266
    9. '  ' → logprob: -20.125003814697266
    10. ' ' → logprob: -20.250003814697266

Token 1208: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.3120038501219824e-05
    2. 'nk' → logprob: -9.875053405761719
    3. 'n' → logprob: -13.750053405761719
    4. '	n' → logprob: -16.12505340576172
    5. '   ' → logprob: -16.25005340576172
    6. '
' → logprob: -16.37505340576172
    7. '[[' → logprob: -16.75005340576172
    8. '[' → logprob: -17.12505340576172
    9. '[i' → logprob: -17.25005340576172
    10. '[
' → logprob: -17.50005340576172

Token 1209: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000275040598353371
    2. '[k' → logprob: -8.250274658203125
    3. '_k' → logprob: -12.125274658203125
    4. '{k' → logprob: -13.000274658203125
    5. ' k' → logprob: -13.500274658203125
    6. '	k' → logprob: -13.750274658203125
    7. '[' → logprob: -14.500274658203125
    8. ',k' → logprob: -14.500274658203125
    9. '
' → logprob: -14.750274658203125
    10. '(k' → logprob: -14.875274658203125

Token 1210: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00019305046589579433
    2. '][' → logprob: -8.875192642211914
    3. '[i' → logprob: -10.125192642211914
    4. '[n' → logprob: -11.875192642211914
    5. '[' → logprob: -12.375192642211914
    6. ' [' → logprob: -13.875192642211914
    7. 'j' → logprob: -14.750192642211914
    8. '```' → logprob: -15.250192642211914
    9. '[k' → logprob: -16.250192642211914
    10. '   ' → logprob: -17.000192642211914

Token 1211: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.3425219549390022e-05
    2. ' j' → logprob: -11.62501335144043
    3. '[j' → logprob: -12.37501335144043
    4. '	j' → logprob: -16.25001335144043
    5. '   ' → logprob: -16.62501335144043
    6. '
' → logprob: -18.75001335144043
    7. ',j' → logprob: -19.50001335144043
    8. ' ' → logprob: -19.75001335144043
    9. '```' → logprob: -19.75001335144043
    10. '       ' → logprob: -19.87501335144043

Token 1212: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22042880952358246
    2. '):' → logprob: -2.970428705215454
    3. '               ' → logprob: -3.220428705215454
    4. ':
' → logprob: -3.595428705215454
    5. ']:' → logprob: -3.720428705215454
    6. '):
' → logprob: -3.845428705215454
    7. '           ' → logprob: -3.845428705215454
    8. ']:
' → logprob: -5.095428943634033
    9. '[' → logprob: -5.970428943634033
    10. '       ' → logprob: -6.970428943634033

Token 1213: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018792545888572931
    2. 'n' → logprob: -7.6268792152404785
    3. '                   ' → logprob: -7.8768792152404785
    4. '           ' → logprob: -8.126879692077637
    5. ':' → logprob: -9.251879692077637
    6. ',n' → logprob: -9.501879692077637
    7. '                       ' → logprob: -9.626879692077637
    8. ':
' → logprob: -9.626879692077637
    9. '	           ' → logprob: -9.876879692077637
    10. '              ' → logprob: -10.251879692077637

Token 1214: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.002979840850457549
    2. '           ' → logprob: -6.252979755401611
    3. '               ' → logprob: -7.377979755401611
    4. ' n' → logprob: -8.12798023223877
    5. '                   ' → logprob: -9.12798023223877
    6. '	n' → logprob: -11.50298023223877
    7. '   ' → logprob: -11.75298023223877
    8. '                       ' → logprob: -14.50298023223877
    9. '          ' → logprob: -14.75298023223877
    10. '             ' → logprob: -15.00298023223877

Token 1215: 'array' (ID: 3361)
  Prédit: 'array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -2.816093228830141e-06
    2. '[i' → logprob: -13.87500286102295
    3. 'a' → logprob: -14.00000286102295
    4. 'arra' → logprob: -15.25000286102295
    5. 'arr' → logprob: -15.37500286102295
    6. '_array' → logprob: -15.62500286102295
    7. 'ar' → logprob: -15.75000286102295
    8. 'arrays' → logprob: -16.000001907348633
    9. ' array' → logprob: -17.250001907348633
    10. 'rray' → logprob: -17.875001907348633

Token 1216: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. '[I' → logprob: -14.50000286102295
    4. 'i' → logprob: -15.37500286102295
    5. '```' → logprob: -16.000001907348633
    6. ' [' → logprob: -16.250001907348633
    7. '[n' → logprob: -16.375001907348633
    8. '][' → logprob: -17.250001907348633
    9. '[
' → logprob: -17.250001907348633
    10. '
' → logprob: -18.000001907348633

Token 1217: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013076230883598328
    2. '[n' → logprob: -4.388076305389404
    3. '[j' → logprob: -8.138075828552246
    4. '[i' → logprob: -9.638075828552246
    5. '[' → logprob: -10.013075828552246
    6. ']' → logprob: -10.013075828552246
    7. '[k' → logprob: -10.763075828552246
    8. '(n' → logprob: -11.013075828552246
    9. ' ][' → logprob: -11.013075828552246
    10. '   ' → logprob: -11.263075828552246

Token 1218: 'j' (ID: 73)
  Prédit: 'nk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -9.849109119386412e-06
    2. 'k' → logprob: -12.625009536743164
    3. 'j' → logprob: -12.750009536743164
    4. 'nj' → logprob: -13.000009536743164
    5. ' nk' → logprob: -14.000009536743164
    6. 'n' → logprob: -14.750009536743164
    7. '
' → logprob: -16.500009536743164
    8. 'jk' → logprob: -18.375009536743164
    9. '[n' → logprob: -19.000009536743164
    10. 'Nk' → logprob: -19.125009536743164

Token 1219: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08320003002882004
    2. ']=' → logprob: -2.583199977874756
    3. '=' → logprob: -5.458199977874756
    4. ' =' → logprob: -10.458200454711914
    5. '=n' → logprob: -11.833200454711914
    6. ' ]' → logprob: -12.833200454711914
    7. ']
' → logprob: -14.833200454711914
    8. '<n' → logprob: -16.083200454711914
    9. ']+=' → logprob: -16.083200454711914
    10. '=k' → logprob: -16.208200454711914

Token 1220: 'nk' (ID: 55159)
  Prédit: 'nk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nk' → logprob: -2.935296834039036e-06
    2. ' nk' → logprob: -13.00000286102295
    3. 'n' → logprob: -14.50000286102295
    4. 'nj' → logprob: -17.500003814697266
    5. '	n' → logprob: -17.625003814697266
    6. '   ' → logprob: -17.625003814697266
    7. 'nv' → logprob: -18.875003814697266
    8. 'nx' → logprob: -20.250003814697266
    9. 'nm' → logprob: -20.750003814697266
    10. '<n' → logprob: -21.000003814697266

Token 1221: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1223: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06045160070061684
    2. '               ' → logprob: -3.3104515075683594
    3. ' break' → logprob: -3.8104515075683594
    4. '                   ' → logprob: -11.31045150756836
    5. '                ' → logprob: -12.68545150756836
    6. '	break' → logprob: -13.18545150756836
    7. '           ' → logprob: -13.31045150756836
    8. '                       ' → logprob: -13.93545150756836
    9. '              ' → logprob: -14.06045150756836
    10. '```' → logprob: -14.68545150756836

Token 1224: '
' (ID: 198)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0001657565007917583
    2. 'print' → logprob: -10.250165939331055
    3. '#' → logprob: -10.500165939331055
    4. '_last' → logprob: -10.875165939331055
    5. 'n' → logprob: -11.250165939331055
    6. 'lasti' → logprob: -11.625165939331055
    7. 'MAX' → logprob: -11.750165939331055
    8. ' last' → logprob: -11.750165939331055
    9. 'max' → logprob: -11.750165939331055
    10. '
' → logprob: -11.750165939331055

Token 1225: '       ' (ID: 309)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0009144435753114522
    2. 'work' → logprob: -7.125914573669434
    3. 'dist' → logprob: -9.625914573669434
    4. '_last' → logprob: -11.000914573669434
    5. 'print' → logprob: -11.750914573669434
    6. 'pend' → logprob: -12.125914573669434
    7. 'n' → logprob: -12.375914573669434
    8. 'import' → logprob: -13.250914573669434
    9. 'V' → logprob: -13.375914573669434
    10. 'pass' → logprob: -13.875914573669434

Token 1226: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7509251832962036
    2. 'printer' → logprob: -0.8759251832962036
    3. 'work' → logprob: -2.875925064086914
    4. 'last' → logprob: -3.625925064086914
    5. '#' → logprob: -4.875925064086914
    6. '```' → logprob: -5.125925064086914
    7. 'continue' → logprob: -6.375925064086914
    8. 'pass' → logprob: -6.375925064086914
    9. '
' → logprob: -6.500925064086914
    10. 'pr' → logprob: -6.750925064086914

Token 1227: ':
' (ID: 734)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0236411094665527
    2. '           ' → logprob: -1.0236411094665527
    3. 'n' → logprob: -1.2736411094665527
    4. '   ' → logprob: -7.398641109466553
    5. ':
' → logprob: -7.773641109466553
    6. ':' → logprob: -8.648641586303711
    7. ' continue' → logprob: -8.648641586303711
    8. '       ' → logprob: -9.898641586303711
    9. '```' → logprob: -9.898641586303711
    10. '               ' → logprob: -10.398641586303711

Token 1228: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011941811069846153
    2. ' n' → logprob: -5.386941909790039
    3. 'print' → logprob: -6.386941909790039
    4. '       ' → logprob: -6.511941909790039
    5. 'pass' → logprob: -6.886941909790039
    6. 'assert' → logprob: -7.136941909790039
    7. '           ' → logprob: -7.261941909790039
    8. '   ' → logprob: -7.511941909790039
    9. 'sys' → logprob: -7.511941909790039
    10. 'raise' → logprob: -8.386941909790039

Token 1229: ' print' (ID: 2123)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32486292719841003
    2. 'pass' → logprob: -1.8248629570007324
    3. 'assert' → logprob: -3.3248629570007324
    4. 'printer' → logprob: -3.5748629570007324
    5. 'print' (adapté à ' print') → logprob: -3.8248629570007324
    6. 'pr' → logprob: -4.574862957000732
    7. 'raise' → logprob: -4.824862957000732
    8. 'sys' → logprob: -5.324862957000732
    9. 'exit' → logprob: -5.824862957000732
    10. 'if' → logprob: -7.074862957000732

Token 1230: '("' (ID: 568)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3938063085079193
    2. '("' → logprob: -1.2688063383102417
    3. '('' → logprob: -3.643806219100952
    4. '(i' → logprob: -4.768806457519531
    5. '(' → logprob: -5.268806457519531
    6. '-' → logprob: -6.143806457519531
    7. '("?' → logprob: -7.143806457519531
    8. '("-' → logprob: -7.893806457519531
    9. '()' → logprob: -8.143806457519531
    10. '(f' → logprob: -8.268806457519531

Token 1231: 'n' (ID: 77)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.37910962104797363
    2. '-' → logprob: -2.2541096210479736
    3. 'i' → logprob: -2.5041096210479736
    4. ''' → logprob: -3.6291096210479736
    5. '"?' → logprob: -4.0041093826293945
    6. '"No' → logprob: -4.1291093826293945
    7. 'f' → logprob: -5.0041093826293945
    8. 'ERR' → logprob: -5.1291093826293945
    9. '?' → logprob: -5.5041093826293945
    10. '0' → logprob: -5.7541093826293945

Token 1232: 'xt' (ID: 711)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.019228115677833557
    2. 'o' → logprob: -4.394227981567383
    3. 'ot' → logprob: -5.769227981567383
    4. 'error' → logprob: -6.769227981567383
    5. '_array' → logprob: -6.769227981567383
    6. ' array' → logprob: -8.519227981567383
    7. 'ary' → logprob: -9.394227981567383
    8. 'Array' → logprob: -9.519227981567383
    9. 'here' → logprob: -9.769227981567383
    10. 'e' → logprob: -9.894227981567383

Token 1233: 'nd' (ID: 301)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3032948970794678
    2. 'error' → logprob: -1.6782948970794678
    3. 'array' → logprob: -1.9282948970794678
    4. '")' → logprob: -2.8032948970794678
    5. '?' → logprob: -2.9282948970794678
    6. '_error' → logprob: -3.0532948970794678
    7. '_' → logprob: -3.1782948970794678
    8. '_array' → logprob: -3.3032948970794678
    9. '_token' → logprob: -3.9282948970794678
    10. 'token' → logprob: -4.053295135498047

Token 1234: 'ary' (ID: 815)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.8116172552108765
    2. '")' → logprob: -1.4366172552108765
    3. '")
' → logprob: -2.061617374420166
    4. 'array' → logprob: -3.311617374420166
    5. '_' → logprob: -3.811617374420166
    6. '[i' → logprob: -4.061617374420166
    7. '_error' → logprob: -4.561617374420166
    8. '_array' → logprob: -4.561617374420166
    9. '_ex' → logprob: -4.811617374420166
    10. 'o' → logprob: -4.811617374420166

Token 1235: ' ERR' (ID: 23093)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6678749322891235
    2. '_' → logprob: -2.667874813079834
    3. 'error' → logprob: -2.667874813079834
    4. '?' → logprob: -3.042874813079834
    5. '_error' → logprob: -3.042874813079834
    6. ' error' → logprob: -3.292874813079834
    7. 'node' → logprob: -3.417874813079834
    8. 'fail' → logprob: -4.042874813079834
    9. ' not' → logprob: -4.292874813079834
    10. '_not' → logprob: -4.667874813079834

Token 1236: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12473466247320175
    2. 'or' → logprob: -2.74973464012146
    3. '")
' → logprob: -3.62473464012146
    4. '()' → logprob: -4.624734878540039
    5. ':' → logprob: -4.749734878540039
    6. '!")' → logprob: -5.874734878540039
    7. '!' → logprob: -7.624734878540039
    8. '("' → logprob: -7.624734878540039
    9. ')")' → logprob: -7.874734878540039
    10. 'exit' → logprob: -7.999734878540039

Token 1237: '           ' (ID: 352)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.08371282368898392
    2. ' exit' → logprob: -3.7087128162384033
    3. '<|end|>' → logprob: -3.9587128162384033
    4. '           ' → logprob: -4.333713054656982
    5. '(exit' → logprob: -4.708713054656982
    6. '	exit' → logprob: -5.333713054656982
    7. '```' → logprob: -5.958713054656982
    8. '_exit' → logprob: -6.583713054656982
    9. '#' → logprob: -6.958713054656982
    10. '.exit' → logprob: -7.083713054656982

Token 1238: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.20152512192726135
    2. ' exit' → logprob: -1.701525092124939
    3. '   ' → logprob: -10.57652473449707
    4. 'sys' → logprob: -10.57652473449707
    5. 'break' → logprob: -10.57652473449707
    6. ' sys' → logprob: -11.32652473449707
    7. ' break' → logprob: -11.57652473449707
    8. '	exit' → logprob: -11.70152473449707
    9. 'import' → logprob: -13.45152473449707
    10. 'quit' → logprob: -13.57652473449707

Token 1239: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1240: 'F' (ID: 37)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00019889144459739327
    2. 'work' → logprob: -9.125199317932129
    3. 'pend' → logprob: -10.125199317932129
    4. '_last' → logprob: -10.625199317932129
    5. 'dist' → logprob: -11.125199317932129
    6. 'n' → logprob: -13.000199317932129
    7. 'pending' → logprob: -13.250199317932129
    8. 'def' → logprob: -13.375199317932129
    9. '#' → logprob: -13.750199317932129
    10. 'V' → logprob: -14.000199317932129

Token 1241: ' =' (ID: 314)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0808056592941284
    2. '_last' → logprob: -1.5808056592941284
    3. '=' → logprob: -1.9558056592941284
    4. ' =' → logprob: -2.205805778503418
    5. 'irst' → logprob: -3.330805778503418
    6. '_' → logprob: -3.455805778503418
    7. 'LAST' → logprob: -4.205805778503418
    8. 'rom' → logprob: -4.205805778503418
    9. 'unction' → logprob: -4.330805778503418
    10. 'L' → logprob: -4.580805778503418

Token 1242: ' lint' (ID: 72616)
  Prédit: 'gin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gin' → logprob: -0.3193418085575104
    2. '1' → logprob: -2.6943418979644775
    3. 'int' → logprob: -2.6943418979644775
    4. '0' → logprob: -3.1943418979644775
    5. 'lint' → logprob: -3.8193418979644775
    6. '10' → logprob: -4.194341659545898
    7. '100' → logprob: -4.569341659545898
    8. 'V' → logprob: -5.069341659545898
    9. '[]' → logprob: -5.194341659545898
    10. 'False' → logprob: -5.444341659545898

Token 1243: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00847451202571392
    2. '(' → logprob: -5.008474349975586
    3. '()
' → logprob: -7.258474349975586
    4. '()[' → logprob: -8.008474349975586
    5. '[' → logprob: -8.508474349975586
    6. ',' → logprob: -8.508474349975586
    7. '[]' → logprob: -9.383474349975586
    8. '(),' → logprob: -10.258474349975586
    9. '#' → logprob: -10.383474349975586
    10. '();' → logprob: -10.633474349975586

Token 1244: 'if' (ID: 366)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.6102927923202515
    2. 'last' → logprob: -0.8602927923202515
    3. 'pending' → logprob: -4.110292911529541
    4. 'work' → logprob: -5.610292911529541
    5. 'Q' → logprob: -6.110292911529541
    6. 'for' → logprob: -6.860292911529541
    7. '#' → logprob: -7.110292911529541
    8. 'V' → logprob: -7.360292911529541
    9. 'S' → logprob: -7.485292911529541
    10. 'dep' → logprob: -7.485292911529541

Token 1245: ' len' (ID: 4631)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.7559959292411804
    2. 'len' → logprob: -1.0059959888458252
    3. 'not' → logprob: -2.630995988845825
    4. '_dbg' → logprob: -3.255995988845825
    5. ' not' → logprob: -3.755995988845825
    6. ' len' → logprob: -3.880995988845825
    7. ' F' → logprob: -5.880995750427246
    8. 'False' → logprob: -6.380995750427246
    9. '0' → logprob: -6.630995750427246
    10. '1' → logprob: -7.130995750427246

Token 1246: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -2.8087270038668066e-05
    2. 'F' → logprob: -10.500027656555176
    3. '(' → logprob: -15.250027656555176
    4. '(
' → logprob: -16.125028610229492
    5. '(f' → logprob: -16.625028610229492
    6. ' F' → logprob: -16.875028610229492
    7. '()' → logprob: -17.375028610229492
    8. ' (' → logprob: -17.625028610229492
    9. '[F' → logprob: -17.875028610229492
    10. '<F' → logprob: -18.250028610229492

Token 1247: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20383237302303314
    2. ')>' → logprob: -2.8288323879241943
    3. ')==' → logprob: -2.9538323879241943
    4. '):' → logprob: -3.0788323879241943
    5. '>' → logprob: -4.703832149505615
    6. '==' → logprob: -4.953832149505615
    7. ')<' → logprob: -5.453832149505615
    8. '[' → logprob: -6.203832149505615
    9. ' ==' → logprob: -6.703832149505615
    10. '):
' → logprob: -7.703832149505615

Token 1248: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0235410425812006
    2. '1' → logprob: -3.77354097366333
    3. ' ' → logprob: -8.523541450500488
    4. 'V' → logprob: -9.648541450500488
    5. '2' → logprob: -10.523541450500488
    6. '3' → logprob: -13.398541450500488
    7. '4' → logprob: -13.648541450500488
    8. 'F' → logprob: -13.648541450500488
    9. '   ' → logprob: -15.023541450500488
    10. ' V' → logprob: -15.023541450500488

Token 1249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5325856804847717
    2. ' and' → logprob: -1.157585620880127
    3. ':
' → logprob: -3.282585620880127
    4. '==' → logprob: -3.532585620880127
    5. 'and' → logprob: -4.282585620880127
    6. ' ==' → logprob: -4.907585620880127
    7. '   ' → logprob: -5.032585620880127
    8. '[' → logprob: -5.907585620880127
    9. ' ' → logprob: -7.782585620880127
    10. ':return' → logprob: -8.532586097717285

Token 1250: '   ' (ID: 271)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -1.1597779989242554
    2. 'F' → logprob: -1.2847779989242554
    3. '   ' → logprob: -1.4097779989242554
    4. 'work' → logprob: -2.034778118133545
    5. ' F' → logprob: -4.159778118133545
    6. ' work' → logprob: -4.909778118133545
    7. ' pend' → logprob: -5.159778118133545
    8. 'last' → logprob: -6.534778118133545
    9. 'if' → logprob: -6.784778118133545
    10. ' ' → logprob: -7.909778118133545

Token 1251: ' prob' (ID: 4921)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.658525288105011
    2. 'if' → logprob: -1.0335252285003662
    3. 'work' → logprob: -2.783525228500366
    4. 'last' → logprob: -3.533525228500366
    5. 'F' → logprob: -4.283525466918945
    6. 'exit' → logprob: -4.533525466918945
    7. 'pend' → logprob: -5.033525466918945
    8. 'sys' → logprob: -6.908525466918945
    9. '   ' → logprob: -7.408525466918945
    10. 'f' → logprob: -7.533525466918945

Token 1252: ',' (ID: 11)
  Prédit: 'lem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lem' → logprob: -0.0005323022487573326
    2. 'lems' → logprob: -7.875532150268555
    3. 'em' → logprob: -9.500532150268555
    4. 'LEM' → logprob: -10.500532150268555
    5. '=' → logprob: -11.750532150268555
    6. 'm' → logprob: -11.875532150268555
    7. 'len' → logprob: -11.875532150268555
    8. 'rem' → logprob: -12.125532150268555
    9. ' lem' → logprob: -12.500532150268555
    10. 'le' → logprob: -12.625532150268555

Token 1253: ' tt' (ID: 34181)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.9545936584472656
    2. 'prob' → logprob: -1.9545936584472656
    3. '=' → logprob: -2.0795936584472656
    4. '_=' → logprob: -2.4545936584472656
    5. 'pend' → logprob: -2.5795936584472656
    6. 'last' → logprob: -2.8295936584472656
    7. '_' → logprob: -3.7045936584472656
    8. ' =' → logprob: -3.8295936584472656
    9. 'F' → logprob: -4.079593658447266
    10. 'pending' → logprob: -5.329593658447266

Token 1254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029783006757497787
    2. ' =' → logprob: -3.529783010482788
    3. ',' → logprob: -10.904783248901367
    4. '=int' → logprob: -12.654783248901367
    5. '=len' → logprob: -13.279783248901367
    6. '=[]' → logprob: -13.904783248901367
    7. '=f' → logprob: -14.279783248901367
    8. '=sys' → logprob: -14.279783248901367
    9. '_' → logprob: -14.654783248901367
    10. '=
' → logprob: -14.779783248901367

Token 1255: ' ' (ID: 220)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.03391837701201439
    2. '1' → logprob: -4.658918380737305
    3. ' F' → logprob: -4.783918380737305
    4. '(' → logprob: -5.908918380737305
    5. '0' → logprob: -5.908918380737305
    6. '"' → logprob: -6.283918380737305
    7. ''' → logprob: -6.533918380737305
    8. '(F' → logprob: -6.533918380737305
    9. ' (' → logprob: -6.783918380737305
    10. ' ' → logprob: -6.783918380737305

Token 1256: '1' (ID: 16)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.013020692393183708
    2. '(F' → logprob: -6.0130205154418945
    3. '1' → logprob: -6.1380205154418945
    4. '(' → logprob: -6.2630205154418945
    5. '0' → logprob: -6.6380205154418945
    6. ''' → logprob: -6.7630205154418945
    7. '"' → logprob: -6.7630205154418945
    8. ' F' → logprob: -7.1380205154418945
    9. 'len' → logprob: -7.2630205154418945
    10. '('' → logprob: -8.888020515441895

Token 1257: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07958205789327621
    2. ',' → logprob: -3.2045819759368896
    3. ' =' → logprob: -3.3295819759368896
    4. '0' → logprob: -10.579582214355469
    5. 'else' → logprob: -10.579582214355469
    6. '[' → logprob: -11.204582214355469
    7. ')' → logprob: -12.329582214355469
    8. '.' → logprob: -12.829582214355469
    9. '=
' → logprob: -12.954582214355469
    10. ',_' → logprob: -12.954582214355469

Token 1258: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.026181042194366455
    2. '0' → logprob: -4.401181221008301
    3. ' F' → logprob: -4.901181221008301
    4. '1' → logprob: -6.151181221008301
    5. 'lint' → logprob: -6.776181221008301
    6. '100' → logprob: -7.401181221008301
    7. ' ' → logprob: -8.1511812210083
    8. 'None' → logprob: -8.2761812210083
    9. ' lint' → logprob: -8.4011812210083
    10. 'len' → logprob: -8.5261812210083

Token 1259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00148307834751904
    2. '0' → logprob: -7.501482963562012
    3. '+' → logprob: -7.876482963562012
    4. '
' → logprob: -8.876482963562012
    5. '*' → logprob: -9.626482963562012
    6. '[
' → logprob: -9.876482963562012
    7. '+[' → logprob: -10.251482963562012
    8. '.' → logprob: -10.626482963562012
    9. '#' → logprob: -10.626482963562012
    10. ' +' → logprob: -10.876482963562012

Token 1260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '-' → logprob: -12.500008583068848
    3. ' ' → logprob: -12.750008583068848
    4. '[' → logprob: -14.000008583068848
    5. '
' → logprob: -14.125008583068848
    6. '   ' → logprob: -15.625008583068848
    7. '1' → logprob: -15.625008583068848
    8. ']' → logprob: -15.875008583068848
    9. '(' → logprob: -17.000009536743164
    10. '```' → logprob: -17.000009536743164

Token 1261: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48645341396331787
    2. '[' → logprob: -0.9864534139633179
    3. ')' → logprob: -4.611453533172607
    4. '
' → logprob: -7.611453533172607
    5. ' ]' → logprob: -7.986453533172607
    6. ']
' → logprob: -7.986453533172607
    7. '+' → logprob: -7.986453533172607
    8. '<|end|>' → logprob: -8.61145305633545
    9. '0' → logprob: -9.11145305633545
    10. ')]' → logprob: -9.36145305633545

Token 1262: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09235046058893204
    2. '
' → logprob: -2.967350482940674
    3. 'elif' → logprob: -3.467350482940674
    4. ' else' → logprob: -6.717350482940674
    5. '<|end|>' → logprob: -6.842350482940674
    6. 'if' → logprob: -7.592350482940674
    7. ':
' → logprob: -7.717350482940674
    8. 'prob' → logprob: -8.217350006103516
    9. '```' → logprob: -8.217350006103516
    10. '#else' → logprob: -8.342350006103516

Token 1263: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24165496230125427
    2. 'prob' → logprob: -1.6166549921035767
    3. ' prob' → logprob: -4.241654872894287
    4. '(prob' → logprob: -6.866654872894287
    5. '	pro' → logprob: -7.491654872894287
    6. ' (' → logprob: -11.241655349731445
    7. 'pro' → logprob: -11.366655349731445
    8. '
' → logprob: -11.491655349731445
    9. '(pro' → logprob: -11.491655349731445
    10. ':
' → logprob: -11.741655349731445

Token 1264: '   ' (ID: 271)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.008675788529217243
    2. '   ' → logprob: -5.008675575256348
    3. ' prob' → logprob: -6.258675575256348
    4. '	pro' → logprob: -11.008675575256348
    5. '(prob' → logprob: -11.758675575256348
    6. '_prob' → logprob: -11.883675575256348
    7. 'pro' → logprob: -12.383675575256348
    8. ' ' → logprob: -13.133675575256348
    9. 'problem' → logprob: -13.508675575256348
    10. 'prog' → logprob: -14.008675575256348

Token 1265: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' (adapté à ' prob') → logprob: -8.101369894575328e-05
    2. '   ' → logprob: -10.625081062316895
    3. ' prob' → logprob: -11.000081062316895
    4. 'F' → logprob: -11.250081062316895
    5. '_,' → logprob: -12.250081062316895
    6. '_prob' → logprob: -12.250081062316895
    7. 'problem' → logprob: -12.500081062316895
    8. '_' → logprob: -12.750081062316895
    9. 'n' → logprob: -12.875081062316895
    10. '(prob' → logprob: -13.125081062316895

Token 1266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009785839356482029
    2. '=' → logprob: -4.6347856521606445
    3. '[' → logprob: -11.509785652160645
    4. ' =' → logprob: -12.134785652160645
    5. ' ,' → logprob: -12.384785652160645
    6. ',len' → logprob: -13.134785652160645
    7. ',num' → logprob: -13.509785652160645
    8. ',F' → logprob: -13.509785652160645
    9. ',val' → logprob: -14.759785652160645
    10. ',size' → logprob: -14.884785652160645

Token 1267: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.16538357734680176
    2. ' tt' → logprob: -1.9153835773468018
    3. '_' → logprob: -6.040383338928223
    4. '_tt' → logprob: -6.540383338928223
    5. 'F' → logprob: -7.290383338928223
    6. ' F' → logprob: -8.540383338928223
    7. '*' → logprob: -8.665383338928223
    8. ' _' → logprob: -10.165383338928223
    9. '_=' → logprob: -10.290383338928223
    10. 'TT' → logprob: -10.665383338928223

Token 1268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008680754341185093
    2. ' =' → logprob: -4.758680820465088
    3. ',' → logprob: -9.63368034362793
    4. '=
' → logprob: -15.00868034362793
    5. '=

' → logprob: -16.13368034362793
    6. ',F' → logprob: -16.88368034362793
    7. '=len' → logprob: -17.25868034362793
    8. '=int' → logprob: -17.63368034362793
    9. '＝' → logprob: -17.88368034362793
    10. '=t' → logprob: -18.00868034362793

Token 1269: ' ' (ID: 220)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0019354235846549273
    2. 'len' → logprob: -6.7519354820251465
    3. 'lint' → logprob: -7.8769354820251465
    4. ' F' → logprob: -8.376935005187988
    5. '0' → logprob: -9.501935005187988
    6. 'map' → logprob: -10.626935005187988
    7. '1' → logprob: -11.126935005187988
    8. 'int' → logprob: -12.126935005187988
    9. '(F' → logprob: -12.126935005187988
    10. ' ' → logprob: -12.251935005187988

Token 1270: '2' (ID: 17)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.0004374638374429196
    2. 'len' → logprob: -8.12543773651123
    3. 'lint' → logprob: -9.50043773651123
    4. ' F' → logprob: -10.00043773651123
    5. '(F' → logprob: -12.00043773651123
    6. 'map' → logprob: -12.25043773651123
    7. '0' → logprob: -12.87543773651123
    8. '(len' → logprob: -13.25043773651123
    9. 'tuple' → logprob: -13.50043773651123
    10. '   ' → logprob: -13.87543773651123

Token 1271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006822054740041494
    2. ',F' → logprob: -5.631822109222412
    3. ' =' → logprob: -6.756822109222412
    4. '=' → logprob: -7.006822109222412
    5. ',t' → logprob: -8.131821632385254
    6. ',T' → logprob: -9.131821632385254
    7. ',_' → logprob: -9.256821632385254
    8. ',time' → logprob: -9.256821632385254
    9. ',D' → logprob: -9.631821632385254
    10. ',p' → logprob: -9.756821632385254

Token 1272: ' gin' (ID: 31450)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00038705902989022434
    2. ' F' → logprob: -8.250387191772461
    3. 'lint' → logprob: -9.250387191772461
    4. 'len' → logprob: -11.625387191772461
    5. '0' → logprob: -12.000387191772461
    6. 'sorted' → logprob: -13.000387191772461
    7. '_F' → logprob: -13.250387191772461
    8. ' lint' → logprob: -13.250387191772461
    9. ' ' → logprob: -13.625387191772461
    10. '*' → logprob: -13.750387191772461

Token 1273: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007202956476248801
    2. '()
' → logprob: -7.250720500946045
    3. '())' → logprob: -12.250720024108887
    4. '()

' → logprob: -13.500720024108887
    5. '()]' → logprob: -14.000720024108887
    6. '();' → logprob: -14.250720024108887
    7. '()\' → logprob: -14.750720024108887
    8. '()>' → logprob: -14.875720024108887
    9. '(' → logprob: -15.000720024108887
    10. '()`' → logprob: -15.125720024108887

Token 1274: 'pend' (ID: 5293)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.4047844707965851
    2. 'pend' → logprob: -1.1547844409942627
    3. 'work' → logprob: -4.404784679412842
    4. 'pending' → logprob: -6.279784679412842
    5. 'dist' → logprob: -7.404784679412842
    6. 'V' → logprob: -7.529784679412842
    7. 'dep' → logprob: -7.904784679412842
    8. 'time' → logprob: -8.279784202575684
    9. '#' → logprob: -8.654784202575684
    10. '_last' → logprob: -8.654784202575684

Token 1275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18929679691791534
    2. ' =' → logprob: -1.939296841621399
    3. '=[]' → logprob: -3.5642967224121094
    4. '=[' → logprob: -8.06429672241211
    5. ',' → logprob: -11.93929672241211
    6. '=[]
' → logprob: -12.56429672241211
    7. '=[[' → logprob: -12.68929672241211
    8. '=[],' → logprob: -12.68929672241211
    9. '={}' → logprob: -12.93929672241211
    10. ' =[' → logprob: -14.06429672241211

Token 1276: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.3438327843905427e-05
    2. '[]
' → logprob: -10.75002384185791
    3. ' []' → logprob: -13.37502384185791
    4. '[]

' → logprob: -15.62502384185791
    5. '[]}' → logprob: -16.000022888183594
    6. '[' → logprob: -16.625022888183594
    7. '[],' → logprob: -17.250022888183594
    8. '[])' → logprob: -18.250022888183594
    9. '[]"' → logprob: -18.500022888183594
    10. '[]>' → logprob: -18.875022888183594

Token 1277: 'work' (ID: 1596)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3146461546421051
    2. 'work' → logprob: -1.3146461248397827
    3. 'for' → logprob: -7.064646244049072
    4. 'dist' → logprob: -8.189645767211914
    5. 'import' → logprob: -8.814645767211914
    6. 'time' → logprob: -10.689645767211914
    7. 'while' → logprob: -11.689645767211914
    8. '_last' → logprob: -11.689645767211914
    9. 'cur' → logprob: -12.314645767211914
    10. 'try' → logprob: -12.314645767211914

Token 1278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04015108942985535
    2. '=[]' → logprob: -3.4151511192321777
    3. ' =' → logprob: -5.040151119232178
    4. '=[]
' → logprob: -11.79015064239502
    5. '[:]' → logprob: -13.41515064239502
    6. '=[' → logprob: -14.16515064239502
    7. ',' → logprob: -15.16515064239502
    8. '={}' → logprob: -15.54015064239502
    9. '=[],' → logprob: -15.54015064239502
    10. '=[]
' → logprob: -15.66515064239502

Token 1279: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00027301779482513666
    2. '[' → logprob: -8.250272750854492
    3. '[]
' → logprob: -11.625272750854492
    4. '[]}' → logprob: -13.000272750854492
    5. '[]>' → logprob: -15.625272750854492
    6. '[])' → logprob: -15.625272750854492
    7. '[]

' → logprob: -16.250272750854492
    8. ' []' → logprob: -16.750272750854492
    9. '[]"' → logprob: -16.875272750854492
    10. '[],' → logprob: -16.875272750854492

Token 1280: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -7.584239938296378e-06
    2. 'import' → logprob: -12.375007629394531
    3. 'for' → logprob: -13.625007629394531
    4. 'dist' → logprob: -14.125007629394531
    5. '_last' → logprob: -14.375007629394531
    6. 'try' → logprob: -15.250007629394531
    7. 'def' → logprob: -16.37500762939453
    8. 'sys' → logprob: -16.75000762939453
    9. 'time' → logprob: -16.75000762939453
    10. 'while' → logprob: -16.87500762939453

Token 1281: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003718011314049363
    2. '_token' → logprob: -5.62871789932251
    3. '_' → logprob: -9.378718376159668
    4. '_nodes' → logprob: -11.753718376159668
    5. '=_' → logprob: -12.378718376159668
    6. '=' → logprob: -12.753718376159668
    7. '_tokens' → logprob: -13.128718376159668
    8. '_n' → logprob: -13.378718376159668
    9. ' _' → logprob: -13.503718376159668
    10. '_line' → logprob: -13.628718376159668

Token 1282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519298195838928
    2. ' =' → logprob: -1.501929759979248
    3. '<|end|>' → logprob: -15.501930236816406
    4. '=
' → logprob: -15.751930236816406
    5. ',' → logprob: -15.876930236816406
    6. ' ' → logprob: -16.376930236816406
    7. ' =
' → logprob: -17.376930236816406
    8. '＝' → logprob: -17.501930236816406
    9. '=None' → logprob: -17.876930236816406
    10. '=user' → logprob: -18.376930236816406

Token 1283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. 'last' → logprob: -14.87500286102295
    4. '0' → logprob: -15.50000286102295
    5. '<|end|>' → logprob: -17.000001907348633
    6. '```' → logprob: -18.750001907348633
    7. '   ' → logprob: -18.812501907348633
    8. '(' → logprob: -19.125001907348633
    9. 'start' → logprob: -19.500001907348633
    10. '  ' → logprob: -19.750001907348633

Token 1284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '0' → logprob: -16.000001907348633
    4. 'last' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -17.500001907348633
    6. 'start' → logprob: -19.125001907348633
    7. '(' → logprob: -19.812501907348633
    8. '۱' → logprob: -20.125001907348633
    9. '=' → logprob: -20.312501907348633
    10. '```' → logprob: -20.375001907348633

Token 1285: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.9361264946837764e-07
    2. ' dist' → logprob: -16.25
    3. '_dist' → logprob: -19.625
    4. '
' → logprob: -20.875
    5. 'Dist' → logprob: -21.0
    6. '	dist' → logprob: -21.0
    7. '(dist' → logprob: -21.0
    8. ',' → logprob: -21.125
    9. '0' → logprob: -21.25
    10. '.dist' → logprob: -21.25

Token 1286: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.896309739408025e-07
    2. 'for' → logprob: -14.875000953674316
    3. 'last' → logprob: -16.875
    4. '#' → logprob: -17.25
    5. '_dist' → logprob: -17.375
    6. ' dist' → logprob: -17.5
    7. 'print' → logprob: -17.75
    8. 'def' → logprob: -18.0
    9. 'import' → logprob: -18.125
    10. 'if' → logprob: -18.375

Token 1287: '_last' (ID: 26359)
  Prédit: '_last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_last' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -12.000008583068848
    3. '=' → logprob: -14.750008583068848
    4. '_now' → logprob: -14.875008583068848
    5. '_here' → logprob: -15.125008583068848
    6. '_=' → logprob: -15.250008583068848
    7. '_Last' → logprob: -15.375008583068848
    8. 'last' → logprob: -15.625008583068848
    9. '```' → logprob: -15.875008583068848
    10. '=_' → logprob: -16.62500762939453

Token 1288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '0' → logprob: -16.203889846801758
    4. ',' → logprob: -16.828889846801758
    5. '_=' → logprob: -17.828889846801758
    6. '=
' → logprob: -18.328889846801758
    7. '==' → logprob: -18.953889846801758
    8. '.=' → logprob: -18.953889846801758
    9. ' +=' → logprob: -19.203889846801758
    10. ' ' → logprob: -19.203889846801758

Token 1289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '<|end|>' → logprob: -17.500001907348633
    4. '1' → logprob: -18.500001907348633
    5. '۰' → logprob: -18.937501907348633
    6. '=' → logprob: -19.375001907348633
    7. '00' → logprob: -20.312501907348633
    8. '   ' → logprob: -20.312501907348633
    9. '000' → logprob: -20.375001907348633
    10. 'last' → logprob: -20.625001907348633

Token 1290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -17.625001907348633
    4. '-' → logprob: -18.250001907348633
    5. '<|end|>' → logprob: -18.375001907348633
    6. '=' → logprob: -19.125001907348633
    7. '00' → logprob: -20.125001907348633
    8. '۰' → logprob: -20.250001907348633
    9. '000' → logprob: -20.250001907348633
    10. 'last' → logprob: -20.812501907348633

Token 1291: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06430982798337936
    2. 'while' → logprob: -2.81430983543396
    3. 'import' → logprob: -6.689309597015381
    4. 'def' → logprob: -6.939309597015381
    5. 'try' → logprob: -9.189310073852539
    6. 'time' → logprob: -11.564310073852539
    7. 'from' → logprob: -11.939310073852539
    8. 't' → logprob: -12.814310073852539
    9. 'timer' → logprob: -14.064310073852539
    10. ' for' → logprob: -14.314310073852539

Token 1292: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6934779286384583
    2. 'while' → logprob: -0.6934779286384583
    3. 'def' → logprob: -8.568477630615234
    4. 'try' → logprob: -9.568477630615234
    5. 'import' → logprob: -9.568477630615234
    6. '```' → logprob: -14.693477630615234
    7. ' while' → logprob: -15.568477630615234
    8. 'from' → logprob: -15.943477630615234
    9. '
' → logprob: -16.193477630615234
    10. ' for' → logprob: -16.943477630615234

Token 1293: ' t' (ID: 260)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05247851833701134
    2. '_i' → logprob: -4.052478313446045
    3. 'i' → logprob: -4.302478313446045
    4. 't' → logprob: -4.927478313446045
    5. '_t' → logprob: -5.052478313446045
    6. ' _' → logprob: -6.427478313446045
    7. '_tt' → logprob: -6.677478313446045
    8. '_time' → logprob: -6.927478313446045
    9. 'tt' → logprob: -8.052478790283203
    10. '_x' → logprob: -8.302478790283203

Token 1294: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07403121888637543
    2. 'in' → logprob: -2.699031114578247
    3. '_' → logprob: -5.574031352996826
    4. ' ' → logprob: -8.949030876159668
    5. 'ime' → logprob: -9.574030876159668
    6. 'range' → logprob: -11.324030876159668
    7. ' _' → logprob: -11.449030876159668
    8. 'i' → logprob: -11.699030876159668
    9. '(' → logprob: -11.949030876159668
    10. 'n' → logprob: -11.949030876159668

Token 1295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005155019462108612
    2. ' range' → logprob: -7.625515460968018
    3. '_' → logprob: -11.125515937805176
    4. 'in' → logprob: -12.000515937805176
    5. '(range' → logprob: -12.750515937805176
    6. '_range' → logprob: -14.000515937805176
    7. 'F' → logprob: -14.000515937805176
    8. 'work' → logprob: -14.625515937805176
    9. 'rang' → logprob: -14.875515937805176
    10. 'gin' → logprob: -15.625515937805176

Token 1296: '(tt' (ID: 90971)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2981570363044739
    2. '(tt' → logprob: -1.423156976699829
    3. ' (' → logprob: -4.923157215118408
    4. '(t' → logprob: -5.298157215118408
    5. '(range' → logprob: -6.423157215118408
    6. ' tt' → logprob: -7.048157215118408
    7. '1' → logprob: -7.673157215118408
    8. '(prob' → logprob: -7.673157215118408
    9. 'range' → logprob: -8.04815673828125
    10. '(T' → logprob: -8.29815673828125

Token 1297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46092814207077026
    2. '+' → logprob: -1.210928201675415
    3. '):
' → logprob: -2.835928201675415
    4. ':' → logprob: -4.710927963256836
    5. '():' → logprob: -5.960927963256836
    6. '+:' → logprob: -7.710927963256836
    7. ' +' → logprob: -8.460927963256836
    8. '():
' → logprob: -8.585927963256836
    9. ',' → logprob: -9.460927963256836
    10. ':
' → logprob: -10.085927963256836

Token 1298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06729316711425781
    2. 'read' → logprob: -2.942293167114258
    3. 'line' → logprob: -5.567293167114258
    4. 'val' → logprob: -5.817293167114258
    5. 'if' → logprob: -6.567293167114258
    6. 'inp' → logprob: -6.817293167114258
    7. 'cmd' → logprob: -7.317293167114258
    8. 'x' → logprob: -7.567293167114258
    9. 's' → logprob: -7.817293167114258
    10. ' read' → logprob: -8.317293167114258

Token 1299: ' if' (ID: 538)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.4033735394477844
    2. '   ' → logprob: -1.2783734798431396
    3. 'if' (adapté à ' if') → logprob: -3.4033734798431396
    4. 'pend' → logprob: -5.528373718261719
    5. 'cmd' → logprob: -5.653373718261719
    6. 'inp' → logprob: -6.278373718261719
    7. 'line' → logprob: -6.403373718261719
    8. 'val' → logprob: -6.528373718261719
    9. 's' → logprob: -6.653373718261719
    10. 'a' → logprob: -7.028373718261719

Token 1300: ' _' (ID: 1175)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.37459129095077515
    2. 'not' → logprob: -1.87459135055542
    3. ' not' → logprob: -2.99959135055542
    4. ' tr' → logprob: -3.37459135055542
    5. '_tr' → logprob: -3.87459135055542
    6. 't' → logprob: -4.62459135055542
    7. 'n' → logprob: -4.99959135055542
    8. ' depot' → logprob: -5.12459135055542
    9. '_de' → logprob: -5.62459135055542
    10. ' pend' → logprob: -5.74959135055542

Token 1301: 'dbg' (ID: 129964)
  Prédit: 'dbg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbg' → logprob: -0.02061651274561882
    2. '_dbg' → logprob: -3.8956165313720703
    3. 'debug' → logprob: -10.77061653137207
    4. ' dbg' → logprob: -10.89561653137207
    5. 'Dbg' → logprob: -11.39561653137207
    6. 'db' → logprob: -12.14561653137207
    7. 'DBG' → logprob: -12.52061653137207
    8. 't' → logprob: -12.89561653137207
    9. '_debug' → logprob: -12.89561653137207
    10. 'stdin' → logprob: -13.14561653137207

Token 1302: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17050433158874512
    2. ':
' → logprob: -2.295504331588745
    3. ' and' → logprob: -3.920504331588745
    4. '   ' → logprob: -4.045504570007324
    5. 'and' → logprob: -5.045504570007324
    6. '==' → logprob: -5.045504570007324
    7. '():
' → logprob: -6.045504570007324
    8. '():' → logprob: -6.795504570007324
    9. ' ==' → logprob: -7.170504570007324
    10. ' :' → logprob: -7.670504570007324

Token 1303: ' t' (ID: 260)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.2788105309009552
    2. 'False' → logprob: -2.028810501098633
    3. 't' → logprob: -2.403810501098633
    4. '0' → logprob: -5.028810501098633
    5. ' False' → logprob: -5.403810501098633
    6. 'not' → logprob: -5.778810501098633
    7. 'tr' → logprob: -6.153810501098633
    8. 'len' → logprob: -6.903810501098633
    9. ' pend' → logprob: -7.153810501098633
    10. 'work' → logprob: -7.653810501098633

Token 1304: '>' (ID: 29)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0235249996185303
    2. '%' → logprob: -1.1485249996185303
    3. '==' → logprob: -1.8985249996185303
    4. ' ==' → logprob: -2.7735249996185303
    5. ' <' → logprob: -2.8985249996185303
    6. ' %' → logprob: -3.6485249996185303
    7. '>=' → logprob: -4.273525238037109
    8. ' >=' → logprob: -4.648525238037109
    9. ':' → logprob: -6.023525238037109
    10. '<len' → logprob: -6.523525238037109

Token 1305: '340' (ID: 23527)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9598118662834167
    2. '10' → logprob: -1.5848119258880615
    3. '20' → logprob: -2.4598119258880615
    4. '50' → logprob: -2.7098119258880615
    5. '0' → logprob: -3.2098119258880615
    6. '200' → logprob: -3.4598119258880615
    7. '5' → logprob: -3.4598119258880615
    8. '30' → logprob: -3.5848119258880615
    9. '500' → logprob: -4.084811687469482
    10. '2' → logprob: -4.459811687469482

Token 1306: '0' (ID: 15)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17553311586380005
    2. ':' → logprob: -2.1755330562591553
    3. ' and' → logprob: -3.9255330562591553
    4. '   ' → logprob: -4.175533294677734
    5. ':
' → logprob: -4.550533294677734
    6. 'and' → logprob: -7.300533294677734
    7. '==' → logprob: -8.675533294677734
    8. '    ' → logprob: -9.050533294677734
    9. ' or' → logprob: -9.050533294677734
    10. '	' → logprob: -9.425533294677734

Token 1307: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2773805558681488
    2. ':' → logprob: -1.5273805856704712
    3. ':
' → logprob: -4.402380466461182
    4. '   ' → logprob: -5.027380466461182
    5. ' and' → logprob: -5.277380466461182
    6. ' or' → logprob: -7.402380466461182
    7. 'and' → logprob: -8.90238094329834
    8. '==' → logprob: -9.27738094329834
    9. ' :' → logprob: -9.52738094329834
    10. '<|end|>' → logprob: -10.27738094329834

Token 1308: ' exit' (ID: 10654)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016239990945905447
    2. '   ' → logprob: -6.50162410736084
    3. 'break' → logprob: -9.75162410736084
    4. ' break' → logprob: -10.12662410736084
    5. '           ' → logprob: -12.12662410736084
    6. '	   ' → logprob: -12.87662410736084
    7. '	break' → logprob: -12.87662410736084
    8. '      ' → logprob: -13.37662410736084
    9. '    ' → logprob: -13.37662410736084
    10. '     ' → logprob: -13.50162410736084

Token 1309: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013624972198158503
    2. 'read' → logprob: -7.876362323760986
    3. 'line' → logprob: -8.626362800598145
    4. 'val' → logprob: -8.876362800598145
    5. '    
' → logprob: -9.001362800598145
    6. 'if' → logprob: -9.126362800598145
    7. 'r' → logprob: -10.126362800598145
    8. ' line' → logprob: -10.251362800598145
    9. 's' → logprob: -10.376362800598145
    10. '
' → logprob: -10.751362800598145

Token 1310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3568817675113678
    2. 'read' → logprob: -1.2318817377090454
    3. 'if' → logprob: -5.731881618499756
    4. 'line' → logprob: -6.356881618499756
    5. 'cmd' → logprob: -6.856881618499756
    6. 's' → logprob: -7.356881618499756
    7. 'try' → logprob: -7.731881618499756
    8. 'inp' → logprob: -8.106882095336914
    9. 'val' → logprob: -9.356882095336914
    10. 'l' → logprob: -9.481882095336914

Token 1311: ' n' (ID: 297)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5382906198501587
    2. '   ' → logprob: -0.9132906198501587
    3. 'if' → logprob: -4.913290500640869
    4. 'line' → logprob: -6.538290500640869
    5. 'cmd' → logprob: -6.538290500640869
    6. 'inp' → logprob: -6.788290500640869
    7. 's' → logprob: -6.913290500640869
    8. 'val' → logprob: -7.288290500640869
    9. 'try' → logprob: -7.913290500640869
    10. 'a' → logprob: -8.663290977478027

Token 1312: ' =' (ID: 314)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9973172545433044
    2. 'xt' → logprob: -1.9973173141479492
    3. 'ow' → logprob: -2.497317314147949
    4. 'v' → logprob: -2.497317314147949
    5. 'put' → logprob: -2.997317314147949
    6. ' =' → logprob: -3.122317314147949
    7. 'q' → logprob: -3.622317314147949
    8. 'p' → logprob: -4.122317314147949
    9. 'w' → logprob: -4.122317314147949
    10. 'ot' → logprob: -4.247317314147949

Token 1313: ' gin' (ID: 31450)
  Prédit: 'gin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gin' → logprob: -0.0015460490249097347
    2. 'int' → logprob: -6.6265459060668945
    3. 'lint' → logprob: -9.876545906066895
    4. 'n' → logprob: -10.626545906066895
    5. 'get' → logprob: -10.751545906066895
    6. 'input' → logprob: -11.001545906066895
    7. 'len' → logprob: -11.251545906066895
    8. 'g' → logprob: -11.376545906066895
    9. 'ging' → logprob: -11.626545906066895
    10. ' gin' → logprob: -12.001545906066895

Token 1314: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017219497822225094
    2. 'pend' → logprob: -7.7517218589782715
    3. 'if' → logprob: -8.12672233581543
    4. 'v' → logprob: -8.75172233581543
    5. 'n' → logprob: -8.87672233581543
    6. 'p' → logprob: -9.25172233581543
    7. 'u' → logprob: -9.50172233581543
    8. 'x' → logprob: -9.50172233581543
    9. 's' → logprob: -9.50172233581543
    10. 'a' → logprob: -9.87672233581543

Token 1315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025773211382329464
    2. 'if' → logprob: -6.627577304840088
    3. '```' → logprob: -7.252577304840088
    4. '<|end|>' → logprob: -8.127577781677246
    5. ' if' → logprob: -9.627577781677246
    6. 'pend' → logprob: -10.377577781677246
    7. '    
' → logprob: -10.627577781677246
    8. '#' → logprob: -10.752577781677246
    9. 'p' → logprob: -11.127577781677246
    10. '``' → logprob: -11.377577781677246

Token 1316: ' if' (ID: 538)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.2655948996543884
    2. 'for' → logprob: -2.015594959259033
    3. 'if' (adapté à ' if') → logprob: -2.390594959259033
    4. '   ' → logprob: -6.140594959259033
    5. 'x' → logprob: -6.390594959259033
    6. 'a' → logprob: -7.265594959259033
    7. 'val' → logprob: -7.390594959259033
    8. 'q' → logprob: -7.640594959259033
    9. 'cmd' → logprob: -8.140594482421875
    10. 'p' → logprob: -8.265594482421875

Token 1317: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16611039638519287
    2. 'not' → logprob: -2.4161105155944824
    3. 't' → logprob: -3.4161105155944824
    4. 'tr' → logprob: -4.166110515594482
    5. 'prob' → logprob: -4.541110515594482
    6. ' not' → logprob: -6.541110515594482
    7. ' n' → logprob: -6.791110515594482
    8. 'dep' → logprob: -8.416110038757324
    9. ' depot' → logprob: -8.416110038757324
    10. 'len' → logprob: -8.541110038757324

Token 1318: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6328194737434387
    2. ' ==' → logprob: -0.7578194737434387
    3. '==-' → logprob: -9.632819175720215
    4. '<' → logprob: -10.257819175720215
    5. ':' → logprob: -10.632819175720215
    6. '()==' → logprob: -11.007819175720215
    7. '>' → logprob: -11.132819175720215
    8. '   ' → logprob: -11.257819175720215
    9. '!=' → logprob: -11.507819175720215
    10. ' !=' → logprob: -11.882819175720215

Token 1319: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3513319790363312
    2. '-' → logprob: -1.2263319492340088
    3. '1' → logprob: -5.976332187652588
    4. '99' → logprob: -9.22633171081543
    5. '2' → logprob: -9.85133171081543
    6. ' ' → logprob: -10.35133171081543
    7. '999' → logprob: -10.35133171081543
    8. '100' → logprob: -10.72633171081543
    9. ' -' → logprob: -10.72633171081543
    10. '(-' → logprob: -11.10133171081543

Token 1320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6815860867500305
    2. ':
' → logprob: -0.8065860867500305
    3. '       ' → logprob: -3.1815860271453857
    4. '   ' → logprob: -5.681586265563965
    5. ' and' → logprob: -6.056586265563965
    6. '==' → logprob: -8.806586265563965
    7. ' or' → logprob: -9.056586265563965
    8. 'and' → logprob: -9.306586265563965
    9. '):
' → logprob: -9.931586265563965
    10. ' ==' → logprob: -10.556586265563965

Token 1321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001526525360532105
    2. '   ' → logprob: -7.251526355743408
    3. 'continue' → logprob: -7.501526355743408
    4. '#' → logprob: -9.001526832580566
    5. 'print' → logprob: -9.876526832580566
    6. 'if' → logprob: -10.626526832580566
    7. '           ' → logprob: -11.001526832580566
    8. '	   ' → logprob: -11.751526832580566
    9. 'n' → logprob: -11.876526832580566
    10. 'read' → logprob: -12.376526832580566

Token 1322: ' i' (ID: 575)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.998079776763916
    2. 'pend' → logprob: -1.248079776763916
    3. '   ' → logprob: -1.748079776763916
    4. 'work' → logprob: -2.748079776763916
    5. '       ' → logprob: -3.123079776763916
    6. 'if' → logprob: -3.373079776763916
    7. 'last' → logprob: -4.748079776763916
    8. 'continue' → logprob: -5.748079776763916
    9. 'print' → logprob: -5.873079776763916
    10. 'val' → logprob: -5.873079776763916

Token 1323: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.007866982370615005
    2. '=' → logprob: -5.507866859436035
    3. 'n' → logprob: -7.132866859436035
    4. ' =' → logprob: -7.382866859436035
    5. '   ' → logprob: -7.382866859436035
    6. 'if' → logprob: -8.007866859436035
    7. 'continue' → logprob: -8.007866859436035
    8. 'work' → logprob: -8.257866859436035
    9. 'nt' → logprob: -8.757866859436035
    10. 'm' → logprob: -9.507866859436035

Token 1324: ' d' (ID: 272)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5848913192749023
    2. 'x' → logprob: -1.9598913192749023
    3. 'd' → logprob: -2.5848913192749023
    4. 'c' → logprob: -2.7098913192749023
    5. 'p' → logprob: -3.8348913192749023
    6. 'v' → logprob: -3.9598913192749023
    7. 'w' → logprob: -4.084891319274902
    8. 't' → logprob: -4.459891319274902
    9. 'f' → logprob: -4.459891319274902
    10. 'b' → logprob: -4.584891319274902

Token 1325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33547720313072205
    2. ',' → logprob: -1.8354772329330444
    3. ' =' → logprob: -2.210477113723755
    4. ',x' → logprob: -5.085477352142334
    5. ',s' → logprob: -6.210477352142334
    6. 'x' → logprob: -6.710477352142334
    7. ',p' → logprob: -6.835477352142334
    8. 's' → logprob: -6.960477352142334
    9. 'istance' → logprob: -7.085477352142334
    10. ',j' → logprob: -7.585477352142334

Token 1326: ' gm' (ID: 82401)
  Prédit: 'gin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gin' → logprob: -0.1476368010044098
    2. 'gm' → logprob: -2.022636890411377
    3. 'lint' → logprob: -6.397636890411377
    4. ' gin' → logprob: -7.272636890411377
    5. 'glm' → logprob: -7.772636890411377
    6. 'map' → logprob: -8.272636413574219
    7. '0' → logprob: -8.397636413574219
    8. 'lit' → logprob: -8.897636413574219
    9. 'gum' → logprob: -9.022636413574219
    10. 'gv' → logprob: -9.147636413574219

Token 1327: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.04619805887341499
    2. '()' → logprob: -3.1711981296539307
    3. '       ' → logprob: -5.796197891235352
    4. '()
' → logprob: -9.296197891235352
    5. '();' → logprob: -10.671197891235352
    6. '
' → logprob: -10.921197891235352
    7. ',' → logprob: -12.546197891235352
    8. '        
' → logprob: -12.796197891235352
    9. '   ' → logprob: -13.296197891235352
    10. ')
' → logprob: -13.546197891235352

Token 1328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009236636571586132
    2. '<|end|>' → logprob: -5.759236812591553
    3. ',' → logprob: -6.134236812591553
    4. '```' → logprob: -6.634236812591553
    5. '   ' → logprob: -7.009236812591553
    6. ',p' → logprob: -8.259236335754395
    7. '[' → logprob: -8.509236335754395
    8. '``' → logprob: -8.884236335754395
    9. ',
' → logprob: -9.259236335754395
    10. 'pend' → logprob: -9.259236335754395

Token 1329: ' pend' (ID: 27278)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' (adapté à ' pend') → logprob: -0.022779831662774086
    2. '   ' → logprob: -4.397779941558838
    3. '       ' → logprob: -5.022779941558838
    4. 'if' → logprob: -5.772779941558838
    5. '           ' → logprob: -9.14777946472168
    6. ' pend' → logprob: -9.39777946472168
    7. 'pending' → logprob: -9.39777946472168
    8. 'dep' → logprob: -10.14777946472168
    9. 'work' → logprob: -10.77277946472168
    10. 'for' → logprob: -11.02277946472168

Token 1330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019971546716988087
    2. '.' → logprob: -6.251996994018555
    3. 'append' → logprob: -9.626996994018555
    4. '   ' → logprob: -13.251996994018555
    5. ' .' → logprob: -14.876996994018555
    6. '.app' → logprob: -15.501996994018555
    7. '.ap' → logprob: -15.626996994018555
    8. 'Append' → logprob: -16.876996994018555
    9. '=' → logprob: -17.251996994018555
    10. '+=' → logprob: -17.376996994018555

Token 1331: '((' (ID: 2054)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2054076194763184
    2. '(' → logprob: -1.4554076194763184
    3. '(t' → logprob: -1.4554076194763184
    4. '((' → logprob: -1.4554076194763184
    5. '(n' → logprob: -8.330408096313477
    6. '(d' → logprob: -8.330408096313477
    7. '   ' → logprob: -11.330408096313477
    8. '(-' → logprob: -12.830408096313477
    9. '(_' → logprob: -13.080408096313477
    10. '(a' → logprob: -13.205408096313477

Token 1332: 'i' (ID: 72)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.024437326937913895
    2. 'd' → logprob: -4.524437427520752
    3. '(t' → logprob: -4.524437427520752
    4. '(i' → logprob: -6.524437427520752
    5. 'i' → logprob: -7.149437427520752
    6. '(d' → logprob: -9.399436950683594
    7. 'n' → logprob: -10.024436950683594
    8. '(' → logprob: -11.024436950683594
    9. '_t' → logprob: -11.149436950683594
    10. '(_,' → logprob: -11.149436950683594

Token 1333: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.16024363040924072
    2. ',' → logprob: -1.9102436304092407
    3. ' ,' → logprob: -10.91024398803711
    4. '```' → logprob: -15.03524398803711
    5. ',i' → logprob: -15.16024398803711
    6. ',
' → logprob: -15.66024398803711
    7. '-' → logprob: -16.16024398803711
    8. ' ' → logprob: -16.28524398803711
    9. 'd' → logprob: -16.66024398803711
    10. ',n' → logprob: -17.28524398803711

Token 1334: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00031055594445206225
    2. ' d' → logprob: -8.125310897827148
    3. 'i' → logprob: -11.250310897827148
    4. ' i' → logprob: -14.875310897827148
    5. '   ' → logprob: -15.375310897827148
    6. ' ' → logprob: -15.500310897827148
    7. ')' → logprob: -16.00031089782715
    8. 'n' → logprob: -16.12531089782715
    9. '    ' → logprob: -16.12531089782715
    10. '  ' → logprob: -16.50031089782715

Token 1335: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.026337113231420517
    2. '))
' → logprob: -3.651337146759033
    3. ')' → logprob: -11.526336669921875
    4. '));' → logprob: -11.651336669921875
    5. ',' → logprob: -11.776336669921875
    6. '   ' → logprob: -13.276336669921875
    7. ')))' → logprob: -13.526336669921875
    8. '       ' → logprob: -13.526336669921875
    9. '))

' → logprob: -13.526336669921875
    10. ' ))' → logprob: -13.526336669921875

Token 1336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023866556584835052
    2. '<|end|>' → logprob: -4.523866653442383
    3. '       ' → logprob: -4.773866653442383
    4. 'continue' → logprob: -6.023866653442383
    5. 'elif' → logprob: -7.148866653442383
    6. '```' → logprob: -7.398866653442383
    7. 'else' → logprob: -8.898866653442383
    8. ')' → logprob: -9.398866653442383
    9. 'if' → logprob: -10.398866653442383
    10. '...' → logprob: -10.398866653442383

Token 1337: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5606029033660889
    2. '   ' → logprob: -1.5606029033660889
    3. 'else' → logprob: -1.6856029033660889
    4. 'if' (adapté à ' if') → logprob: -3.685602903366089
    5. ' elif' → logprob: -5.810603141784668
    6. ' else' → logprob: -6.310603141784668
    7. 'continue' → logprob: -6.560603141784668
    8. '<|end|>' → logprob: -6.810603141784668
    9. '```' → logprob: -7.685603141784668
    10. '	elif' → logprob: -8.185603141784668

Token 1338: ' prob' (ID: 4921)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0465013980865479
    2. 'de' → logprob: -1.2965013980865479
    3. 'not' → logprob: -1.7965013980865479
    4. 'n' → logprob: -2.421501398086548
    5. ' depot' → logprob: -3.296501398086548
    6. 't' → logprob: -3.546501398086548
    7. '_tr' → logprob: -4.421501159667969
    8. '_de' → logprob: -4.671501159667969
    9. 'last' → logprob: -4.796501159667969
    10. 'd' → logprob: -5.046501159667969

Token 1339: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03823014348745346
    2. ' ==' → logprob: -3.2882301807403564
    3. '!=' → logprob: -9.163229942321777
    4. '>=' → logprob: -11.288229942321777
    5. '()==' → logprob: -11.288229942321777
    6. '==
' → logprob: -11.413229942321777
    7. '<' → logprob: -11.538229942321777
    8. '<=' → logprob: -12.038229942321777
    9. ' !=' → logprob: -12.163229942321777
    10. '   ' → logprob: -12.288229942321777

Token 1340: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08895363658666611
    2. '2' → logprob: -2.463953733444214
    3. ' ' → logprob: -11.463953971862793
    4. '3' → logprob: -13.526453971862793
    5. '```' → logprob: -14.526453971862793
    6. '0' → logprob: -14.651453971862793
    7. '=' → logprob: -15.401453971862793
    8. '   ' → logprob: -15.776453971862793
    9. 'prob' → logprob: -16.526453018188477
    10. '==' → logprob: -16.651453018188477

Token 1341: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6508991718292236
    2. ':
' → logprob: -1.7758991718292236
    3. ':' → logprob: -2.0258991718292236
    4. '==' → logprob: -2.5258991718292236
    5. '       ' → logprob: -3.1508991718292236
    6. 'and' → logprob: -3.6508991718292236
    7. ' ==' → logprob: -3.9008991718292236
    8. '   ' → logprob: -4.9008989334106445
    9. '=' → logprob: -8.650898933410645
    10. '      ' → logprob: -9.275898933410645

Token 1342: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3617172837257385
    2. '       ' → logprob: -1.8617172241210938
    3. '   ' → logprob: -1.9867172241210938
    4. ' read' → logprob: -4.986717224121094
    5. 'if' → logprob: -6.111717224121094
    6. 'val' → logprob: -7.986717224121094
    7. '           ' → logprob: -8.111717224121094
    8. 'n' → logprob: -8.611717224121094
    9. '	read' → logprob: -8.861717224121094
    10. 'print' → logprob: -8.986717224121094

Token 1343: 'put' (ID: 772)
  Prédit: 'verd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verd' → logprob: -0.06200902536511421
    2. 'put' → logprob: -2.81200909614563
    3. 'verb' → logprob: -11.56200885772705
    4. 'vert' → logprob: -11.93700885772705
    5. 'ver' → logprob: -12.18700885772705
    6. 'puts' → logprob: -12.81200885772705
    7. 'erd' → logprob: -13.31200885772705
    8. 'n' → logprob: -13.81200885772705
    9. 'vend' → logprob: -13.93700885772705
    10. 'pend' → logprob: -14.06200885772705

Token 1344: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008664678782224655
    2. '<|end|>' → logprob: -4.883664608001709
    3. 'read' → logprob: -8.008665084838867
    4. '
' → logprob: -8.008665084838867
    5. ' read' → logprob: -9.883665084838867
    6. '<|end|>' → logprob: -10.133665084838867
    7. 'else' → logprob: -10.258665084838867
    8. ' ' → logprob: -10.633665084838867
    9. '    
' → logprob: -10.633665084838867
    10. '()' → logprob: -10.758665084838867

Token 1345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7119228839874268
    2. 'if' → logprob: -0.9619228839874268
    3. 'read' → logprob: -2.2119228839874268
    4. 'set' → logprob: -4.211922645568848
    5. 'tr' → logprob: -6.711922645568848
    6. 'else' → logprob: -7.586922645568848
    7. 'print' → logprob: -8.086922645568848
    8. 'elif' → logprob: -8.086922645568848
    9. 'printer' → logprob: -8.711922645568848
    10. 'pr' → logprob: -9.211922645568848

Token 1346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15324413776397705
    2. 'set' → logprob: -2.6532440185546875
    3. 'read' → logprob: -2.9032440185546875
    4. 'printer' → logprob: -4.6532440185546875
    5. 'print' → logprob: -6.0282440185546875
    6. 'tr' → logprob: -6.1532440185546875
    7. '   ' → logprob: -6.6532440185546875
    8. 'else' → logprob: -7.5282440185546875
    9. 'elif' → logprob: -8.153244018554688
    10. 'pr' → logprob: -8.153244018554688

Token 1347: ' depot' (ID: 101288)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.021746288985013962
    2. 'not' → logprob: -4.0217461585998535
    3. '_tr' → logprob: -6.8967461585998535
    4. 'set' → logprob: -7.3967461585998535
    5. ' tr' → logprob: -8.146746635437012
    6. 'pend' → logprob: -8.146746635437012
    7. 'work' → logprob: -8.271746635437012
    8. '(tr' → logprob: -8.521746635437012
    9. 'True' → logprob: -9.021746635437012
    10. 'printer' → logprob: -9.146746635437012

Token 1348: '_here' (ID: 192915)
  Prédit: '_here'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_here' → logprob: -1.8550976164988242e-05
    2. 'here' → logprob: -11.250018119812012
    3. '_else' → logprob: -13.625018119812012
    4. '```' → logprob: -14.125018119812012
    5. '_' → logprob: -14.250018119812012
    6. 'Here' → logprob: -15.000018119812012
    7. '==' → logprob: -15.250018119812012
    8. '_this' → logprob: -15.500018119812012
    9. '_that' → logprob: -15.500018119812012
    10. 'n' → logprob: -15.625018119812012

Token 1349: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00019984507525805384
    2. '()' → logprob: -9.000200271606445
    3. '():
' → logprob: -10.125200271606445
    4. ' ():' → logprob: -10.875200271606445
    5. ':' → logprob: -11.375200271606445
    6. '()==' → logprob: -12.125200271606445
    7. 'and' → logprob: -15.375200271606445
    8. ' ()' → logprob: -16.375200271606445
    9. '()!=' → logprob: -17.000200271606445
    10. '()>' → logprob: -17.500200271606445

Token 1350: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8071933388710022
    2. 'set' → logprob: -1.0571932792663574
    3. '       ' → logprob: -1.6821932792663574
    4. ' set' → logprob: -4.807193279266357
    5. 'if' → logprob: -5.557193279266357
    6. 'move' → logprob: -5.557193279266357
    7. 'tr' → logprob: -5.807193279266357
    8. 'pr' → logprob: -7.557193279266357
    9. ' move' → logprob: -7.932193279266357
    10. 'continue' → logprob: -8.557193756103516

Token 1351: ' if' (ID: 538)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5294604301452637
    2. 'if' (adapté à ' if') → logprob: -0.9044604301452637
    3. '   ' → logprob: -5.529460430145264
    4. 'continue' → logprob: -7.029460430145264
    5. 'move' → logprob: -7.279460430145264
    6. 'tr' → logprob: -8.404460906982422
    7. 'printer' → logprob: -8.529460906982422
    8. 'read' → logprob: -9.154460906982422
    9. 'print' → logprob: -9.904460906982422
    10. 'work' → logprob: -10.029460906982422

Token 1352: ' tr' (ID: 498)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.44088801741600037
    2. 'tr' → logprob: -1.1908880472183228
    3. 'work' → logprob: -3.440887928009033
    4. 'len' → logprob: -4.315887928009033
    5. 'pend' → logprob: -5.690887928009033
    6. '_tr' → logprob: -6.315887928009033
    7. 'n' → logprob: -6.565887928009033
    8. 'set' → logprob: -8.190888404846191
    9. '_not' → logprob: -9.315888404846191
    10. ' not' → logprob: -9.815888404846191

Token 1353: 'gr' (ID: 896)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3949526846408844
    2. 'gr' → logprob: -1.144952654838562
    3. 'ig' → logprob: -6.144952774047852
    4. 'r' → logprob: -7.144952774047852
    5. '()' → logprob: -7.269952774047852
    6. '```' → logprob: -7.394952774047852
    7. 'tr' → logprob: -7.894952774047852
    8. '(not' → logprob: -8.019952774047852
    9. '(p' → logprob: -8.144952774047852
    10. 'gh' → logprob: -8.144952774047852

Token 1354: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.055057067424058914
    2. '():
' → logprob: -2.9300570487976074
    3. '()' → logprob: -9.180057525634766
    4. '():
' → logprob: -10.430057525634766
    5. ':' → logprob: -10.680057525634766
    6. '()==' → logprob: -12.180057525634766
    7. '()>' → logprob: -12.555057525634766
    8. '()):
' → logprob: -12.555057525634766
    9. 'e' → logprob: -12.930057525634766
    10. '():

' → logprob: -13.555057525634766

Token 1355: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012082095257937908
    2. 'set' → logprob: -4.887082099914551
    3. '           ' → logprob: -5.512082099914551
    4. '   ' → logprob: -8.01208209991455
    5. ' set' → logprob: -9.51208209991455
    6. '
' → logprob: -12.38708209991455
    7. 'if' → logprob: -12.63708209991455
    8. '     ' → logprob: -13.26208209991455
    9. '	set' → logprob: -13.26208209991455
    10. '	   ' → logprob: -13.51208209991455

Token 1356: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.007442636415362358
    2. 'if' → logprob: -5.007442474365234
    3. '   ' → logprob: -7.382442474365234
    4. ' set' → logprob: -9.882442474365234
    5. '       ' → logprob: -10.632442474365234
    6. '           ' → logprob: -11.007442474365234
    7. ' if' → logprob: -12.382442474365234
    8. 'work' → logprob: -13.007442474365234
    9. '_set' → logprob: -13.132442474365234
    10. '	set' → logprob: -13.632442474365234

Token 1357: 'work' (ID: 1596)
  Prédit: 'work'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: 0.0
    2. '
' → logprob: -18.5
    3. '_work' → logprob: -18.5
    4. 'working' → logprob: -19.25
    5. 'works' → logprob: -19.25
    6. '(work' → logprob: -19.75
    7. 'worker' → logprob: -20.0
    8. '```' → logprob: -20.5
    9. '	work' → logprob: -20.875
    10. 'worked' → logprob: -21.0

Token 1358: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.001064963056705892
    2. '_sort' → logprob: -7.376064777374268
    3. '_right' → logprob: -8.001065254211426
    4. '_work' → logprob: -10.126065254211426
    5. '_' → logprob: -11.126065254211426
    6. '_sorted' → logprob: -11.376065254211426
    7. '_wr' → logprob: -11.626065254211426
    8. '_here' → logprob: -12.251065254211426
    9. '_wrong' → logprob: -12.251065254211426
    10. '_write' → logprob: -13.126065254211426

Token 1359: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -3.5120287066092715e-05
    2. 'wright' → logprob: -11.375035285949707
    3. '_right' → logprob: -11.500035285949707
    4. '(right' → logprob: -12.500035285949707
    5. 'Right' → logprob: -13.125035285949707
    6. 'rig' → logprob: -13.500035285949707
    7. 'rong' → logprob: -14.125035285949707
    8. 'r' → logprob: -14.375035285949707
    9. '```' → logprob: -14.375035285949707
    10. 'ring' → logprob: -14.625035285949707

Token 1360: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.1602979451417923
    2. '()' → logprob: -1.9102979898452759
    3. '()
' → logprob: -9.910298347473145
    4. '           ' → logprob: -11.285298347473145
    5. '();' → logprob: -12.285298347473145
    6. '()

' → logprob: -13.160298347473145
    7. '       ' → logprob: -13.160298347473145
    8. 'else' → logprob: -13.160298347473145
    9. '()\' → logprob: -14.660298347473145
    10. '()`' → logprob: -15.410298347473145

Token 1361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4024750292301178
    2. '       ' → logprob: -1.6524749994277954
    3. 'else' → logprob: -2.027475118637085
    4. ' else' → logprob: -5.777474880218506
    5. '<|end|>' → logprob: -6.527474880218506
    6. '   ' → logprob: -7.027474880218506
    7. 'continue' → logprob: -7.027474880218506
    8. 'elif' → logprob: -7.402474880218506
    9. '
' → logprob: -8.527475357055664
    10. '            
' → logprob: -8.652475357055664

Token 1362: ' if' (ID: 538)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.05020604282617569
    2. 'set' → logprob: -3.300205945968628
    3. 'elif' → logprob: -5.425206184387207
    4. 'else' → logprob: -5.550206184387207
    5. ' move' → logprob: -6.925206184387207
    6. '           ' → logprob: -7.175206184387207
    7. 'work' → logprob: -7.300206184387207
    8. '       ' → logprob: -7.800206184387207
    9. '   ' → logprob: -8.175206184387207
    10. 'print' → logprob: -8.300206184387207

Token 1363: ' work' (ID: 1101)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5863999128341675
    2. 'work' → logprob: -0.9613999128341675
    3. 'len' → logprob: -2.836400032043457
    4. 'tr' → logprob: -6.836400032043457
    5. ' not' → logprob: -7.586400032043457
    6. 'pend' → logprob: -8.711400032043457
    7. 'False' → logprob: -8.836400032043457
    8. '_tr' → logprob: -8.961400032043457
    9. '_work' → logprob: -8.961400032043457
    10. 'set' → logprob: -9.336400032043457

Token 1364: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2455667406320572
    2. '==' → logprob: -1.620566725730896
    3. 'and' → logprob: -4.4955668449401855
    4. '[' → logprob: -6.2455668449401855
    5. ' and' → logprob: -6.2455668449401855
    6. ':
' → logprob: -6.6205668449401855
    7. '<|end|>' → logprob: -6.6205668449401855
    8. ' ==' → logprob: -6.9955668449401855
    9. '):' → logprob: -8.120566368103027
    10. '[:]' → logprob: -8.370566368103027

Token 1365: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.6667559742927551
    2. ' move' → logprob: -0.9167559742927551
    3. '           ' → logprob: -2.6667559146881104
    4. 'print' → logprob: -5.0417561531066895
    5. '   ' → logprob: -5.4167561531066895
    6. '               ' → logprob: -6.0417561531066895
    7. '       ' → logprob: -6.0417561531066895
    8. '	move' → logprob: -7.1667561531066895
    9. ' print' → logprob: -7.6667561531066895
    10. 'pr' → logprob: -8.291755676269531

Token 1366: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.25
    3. '
' → logprob: -17.875
    4. ' on' → logprob: -18.0
    5. 'op' → logprob: -18.75
    6. 'ont' → logprob: -18.875
    7. '()' → logprob: -18.875
    8. '_on' → logprob: -19.0
    9. '	on' → logprob: -19.25
    10. 'он' → logprob: -19.375

Token 1367: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13340584933757782
    2. '()
' → logprob: -2.258405923843384
    3. '       ' → logprob: -4.508405685424805
    4. '   ' → logprob: -5.383405685424805
    5. '           ' → logprob: -5.758405685424805
    6. 'else' → logprob: -7.258405685424805
    7. '<|end|>' → logprob: -8.008405685424805
    8. '();' → logprob: -8.758405685424805
    9. '               ' → logprob: -8.883405685424805
    10. ' else' → logprob: -9.633405685424805

Token 1368: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07792285084724426
    2. '   ' → logprob: -3.327922821044922
    3. 'else' → logprob: -3.327922821044922
    4. '<|end|>' → logprob: -6.327922821044922
    5. ' else' → logprob: -7.202922821044922
    6. 'elif' → logprob: -7.952922821044922
    7. '           ' → logprob: -8.452922821044922
    8. '	else' → logprob: -10.327922821044922
    9. '```' → logprob: -10.452922821044922
    10. '...' → logprob: -11.077922821044922

Token 1369: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13636302947998047
    2. 'else' (adapté à ' else') → logprob: -2.5113630294799805
    3. 'continue' → logprob: -3.7613630294799805
    4. '   ' → logprob: -4.3863630294799805
    5. 'elif' → logprob: -4.7613630294799805
    6. '           ' → logprob: -6.6363630294799805
    7. ' else' → logprob: -8.13636302947998
    8. '<|end|>' → logprob: -8.51136302947998
    9. ' continue' → logprob: -8.63636302947998
    10. '	continue' → logprob: -11.01136302947998

Token 1370: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9460699558258057
    2. ' not' → logprob: -1.0710699558258057
    3. '           ' → logprob: -2.5710699558258057
    4. 'n' → logprob: -2.8210699558258057
    5. '   ' → logprob: -2.8210699558258057
    6. ':' → logprob: -3.5710699558258057
    7. ' n' → logprob: -3.6960699558258057
    8. '               ' → logprob: -4.946069717407227
    9. 'not' → logprob: -5.446069717407227
    10. '       ' → logprob: -5.946069717407227

Token 1371: ' not' (ID: 625)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08507106453180313
    2. ' not' → logprob: -2.585071086883545
    3. '               ' → logprob: -5.585071086883545
    4. 'not' → logprob: -6.835071086883545
    5. '           ' → logprob: -7.835071086883545
    6. '   ' → logprob: -7.835071086883545
    7. ' n' → logprob: -8.960070610046387
    8. ' move' → logprob: -9.085070610046387
    9. ' nothing' → logprob: -9.460070610046387
    10. ' print' → logprob: -9.710070610046387

Token 1372: 'hin' (ID: 15050)
  Prédit: 'hin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hin' → logprob: -0.06937393546104431
    2. 'h' → logprob: -3.694373846054077
    3. 'n' → logprob: -3.694373846054077
    4. 'in' → logprob: -4.069374084472656
    5. 'thin' → logprob: -9.194374084472656
    6. 'do' → logprob: -10.319374084472656
    7. 'hing' → logprob: -11.444374084472656
    8. 'inh' → logprob: -11.944374084472656
    9. '```' → logprob: -12.069374084472656
    10. 'def' → logprob: -12.069374084472656

Token 1373: '_do' (ID: 59120)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.5761606693267822
    2. '_do' → logprob: -0.8261606693267822
    3. 'o' → logprob: -8.701160430908203
    4. 'Do' → logprob: -10.326160430908203
    5. '()' → logprob: -11.326160430908203
    6. 'e' → logprob: -12.826160430908203
    7. 'd' → logprob: -13.201160430908203
    8. 'on' → logprob: -14.326160430908203
    9. '```' → logprob: -14.326160430908203
    10. '_Do' → logprob: -14.701160430908203

Token 1374: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26360103487968445
    2. '   ' → logprob: -1.7636010646820068
    3. '<|end|>' → logprob: -2.888601064682007
    4. 'else' → logprob: -6.138600826263428
    5. '           ' → logprob: -7.013600826263428
    6. '
' → logprob: -7.888600826263428
    7. ' else' → logprob: -8.388601303100586
    8. '<|end|>' → logprob: -8.638601303100586
    9. 'elif' → logprob: -8.763601303100586
    10. ')' → logprob: -9.013601303100586

Token 1375: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5263041853904724
    2. '       ' → logprob: -0.9013041853904724
    3. 'else' → logprob: -6.276304244995117
    4. '<|end|>' → logprob: -7.026304244995117
    5. '           ' → logprob: -9.026304244995117
    6. 'elif' → logprob: -9.026304244995117
    7. ' else' → logprob: -9.526304244995117
    8. 'continue' → logprob: -10.401304244995117
    9. ')' → logprob: -11.401304244995117
    10. '    ' → logprob: -11.526304244995117

Token 1376: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40512511134147644
    2. '       ' → logprob: -1.1551251411437988
    3. 'else' (adapté à ' else') → logprob: -4.030125141143799
    4. 'elif' → logprob: -8.40512466430664
    5. ' else' → logprob: -9.53012466430664
    6. '<|end|>' → logprob: -12.15512466430664
    7. 'continue' → logprob: -12.28012466430664
    8. '           ' → logprob: -12.40512466430664
    9. '	else' → logprob: -12.90512466430664
    10. ' elif' → logprob: -14.28012466430664

Token 1377: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14691971242427826
    2. ':
' → logprob: -2.5219197273254395
    3. ':' → logprob: -2.8969197273254395
    4. ' not' → logprob: -7.6469197273254395
    5. '       ' → logprob: -8.271919250488281
    6. '   ' → logprob: -9.521919250488281
    7. ' continue' → logprob: -10.146919250488281
    8. ' if' → logprob: -10.396919250488281
    9. '               ' → logprob: -10.771919250488281
    10. ' and' → logprob: -10.771919250488281

Token 1378: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9500726461410522
    2. 'n' → logprob: -1.5750726461410522
    3. '           ' → logprob: -1.7000726461410522
    4. ' move' → logprob: -1.9500726461410522
    5. 'not' → logprob: -3.325072765350342
    6. ' n' → logprob: -3.575072765350342
    7. 'move' → logprob: -5.325072765350342
    8. 'print' → logprob: -5.450072765350342
    9. ' print' → logprob: -5.700072765350342
    10. ' if' → logprob: -6.575072765350342

Token 1379: 'hin' (ID: 15050)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.27872374653816223
    2. 'hin' → logprob: -1.6537237167358398
    3. 'do' → logprob: -4.02872371673584
    4. 'nothing' → logprob: -5.02872371673584
    5. 'hing' → logprob: -5.15372371673584
    6. 'on' → logprob: -5.15372371673584
    7. 'n' → logprob: -5.27872371673584
    8. 'h' → logprob: -5.40372371673584
    9. 'not' → logprob: -5.90372371673584
    10. 'thing' → logprob: -7.02872371673584

Token 1380: '_do' (ID: 59120)
  Prédit: '_do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_do' → logprob: -0.002807013690471649
    2. 'do' → logprob: -5.877807140350342
    3. 'Do' → logprob: -14.252806663513184
    4. '#do' → logprob: -15.002806663513184
    5. '_d' → logprob: -15.127806663513184
    6. 'd' → logprob: -15.377806663513184
    7. '	do' → logprob: -15.502806663513184
    8. '(do' → logprob: -16.3778076171875
    9. 'dow' → logprob: -16.5028076171875
    10. '   ' → logprob: -16.5028076171875

Token 1381: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007311164867132902
    2. 'else' → logprob: -5.3823113441467285
    3. '<|end|>' → logprob: -6.0073113441467285
    4. ' else' → logprob: -9.13231086730957
    5. 'elif' → logprob: -9.63231086730957
    6. 'continue' → logprob: -11.25731086730957
    7. '       ' → logprob: -11.38231086730957
    8. ')' → logprob: -12.00731086730957
    9. '
' → logprob: -12.00731086730957
    10. '<|end|>' → logprob: -12.38231086730957

Token 1382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01455879770219326
    2. 'else' → logprob: -4.264558792114258
    3. 'elif' → logprob: -8.639558792114258
    4. '<|end|>' → logprob: -9.014558792114258
    5. ' else' → logprob: -9.764558792114258
    6. 'continue' → logprob: -11.264558792114258
    7. '       ' → logprob: -11.639558792114258
    8. '```' → logprob: -12.139558792114258
    9. '	else' → logprob: -12.764558792114258
    10. '...' → logprob: -13.639558792114258

Token 1383: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005646948236972094
    2. 'elif' → logprob: -5.6306471824646
    3. '   ' → logprob: -6.7556471824646
    4. ' else' → logprob: -7.8806471824646
    5. '<|end|>' → logprob: -8.005646705627441
    6. 'continue' → logprob: -9.005646705627441
    7. 'print' → logprob: -10.880646705627441
    8. '```' → logprob: -11.755646705627441
    9. '	else' → logprob: -11.880646705627441
    10. ' elif' → logprob: -13.005646705627441

Token 1384: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004083266947418451
    2. 'move' → logprob: -5.629083156585693
    3. ' move' → logprob: -8.379083633422852
    4. '   ' → logprob: -9.004083633422852
    5. ':
' → logprob: -10.004083633422852
    6. '	move' → logprob: -10.254083633422852
    7. '
' → logprob: -11.379083633422852
    8. ':' → logprob: -11.379083633422852
    9. '(move' → logprob: -11.379083633422852
    10. '           ' → logprob: -11.504083633422852

Token 1385: '       ' (ID: 309)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.2676739990711212
    2. '       ' → logprob: -1.5176739692687988
    3. '   ' → logprob: -4.267673969268799
    4. ' move' → logprob: -6.517673969268799
    5. '	move' → logprob: -9.267674446105957
    6. 'if' → logprob: -10.642674446105957
    7. '           ' → logprob: -12.017674446105957
    8. ' ' → logprob: -13.142674446105957
    9. '     ' → logprob: -14.267674446105957
    10. '  ' → logprob: -14.767674446105957

Token 1386: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -0.0025244110729545355
    2. 'if' → logprob: -6.127524375915527
    3. '   ' → logprob: -8.127524375915527
    4. 'read' → logprob: -11.252524375915527
    5. ' move' → logprob: -11.377524375915527
    6. 'set' → logprob: -11.502524375915527
    7. 'print' → logprob: -12.627524375915527
    8. '	move' → logprob: -13.377524375915527
    9. 'pass' → logprob: -14.002524375915527
    10. 'printer' → logprob: -14.252524375915527

Token 1387: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: 0.0
    2. 'op' → logprob: -18.25
    3. ' on' → logprob: -18.625
    4. '(on' → logprob: -19.875
    5. 'ont' → logprob: -20.375
    6. '()' → logprob: -20.75
    7. '_on' → logprob: -20.875
    8. 'n' → logprob: -21.0
    9. ''on' → logprob: -21.375
    10. '	on' → logprob: -21.625

Token 1388: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1389: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1390: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1391: ' prob' (ID: 4921)
  Prédit: '_tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tr' → logprob: -1.127926230430603
    2. 'not' → logprob: -1.377926230430603
    3. 'dist' → logprob: -2.7529263496398926
    4. '_' → logprob: -3.1279263496398926
    5. '_t' → logprob: -3.2529263496398926
    6. '_dist' → logprob: -3.5029263496398926
    7. ' not' → logprob: -3.6279263496398926
    8. 'work' → logprob: -3.7529263496398926
    9. 'tr' → logprob: -3.7529263496398926
    10. '_last' → logprob: -4.127926349639893

Token 1392: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.023487595841288567
    2. ' ==' → logprob: -3.7734875679016113
    3. '!=' → logprob: -9.02348804473877
    4. '%' → logprob: -10.39848804473877
    5. '()==' → logprob: -10.64848804473877
    6. ' ' → logprob: -11.02348804473877
    7. '==
' → logprob: -11.14848804473877
    8. ' !=' → logprob: -11.52348804473877
    9. '   ' → logprob: -11.77348804473877
    10. '=' → logprob: -12.39848804473877

Token 1393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0806804820895195
    2. '1' → logprob: -2.5806803703308105
    3. ' ' → logprob: -6.3306803703308105
    4. '  ' → logprob: -12.768180847167969
    5. '   ' → logprob: -13.080680847167969
    6. '0' → logprob: -14.018180847167969
    7. '=' → logprob: -15.205680847167969
    8. '```' → logprob: -15.518180847167969
    9. '	' → logprob: -15.580680847167969
    10. '۲' → logprob: -15.830680847167969

Token 1394: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6427627801895142
    2. '       ' → logprob: -1.7677627801895142
    3. ' read' → logprob: -2.2677626609802246
    4. ':' → logprob: -2.3927626609802246
    5. 'read' → logprob: -2.6427626609802246
    6. ':
' → logprob: -3.6427626609802246
    7. ' and' → logprob: -5.517762660980225
    8. '==' → logprob: -5.767762660980225
    9. '	read' → logprob: -7.017762660980225
    10. ' ' → logprob: -7.517762660980225

Token 1395: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0038738276343792677
    2. '   ' → logprob: -5.878873825073242
    3. ' read' → logprob: -6.878873825073242
    4. '	read' → logprob: -10.753873825073242
    5. '  ' → logprob: -12.003873825073242
    6. ' ' → logprob: -12.128873825073242
    7. 'print' → logprob: -13.503873825073242
    8. '
' → logprob: -13.628873825073242
    9. 'if' → logprob: -14.378873825073242
    10. '       ' → logprob: -14.503873825073242

Token 1396: 'verd' (ID: 37918)
  Prédit: 'verd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verd' → logprob: -0.0001415618316968903
    2. 'put' → logprob: -8.875141143798828
    3. 'verb' → logprob: -13.875141143798828
    4. 'ver' → logprob: -15.500141143798828
    5. 'vert' → logprob: -15.625141143798828
    6. 'erd' → logprob: -16.125141143798828
    7. 'ved' → logprob: -17.250141143798828
    8. 'vard' → logprob: -17.375141143798828
    9. 'Verd' → logprob: -17.500141143798828
    10. 'vend' → logprob: -17.875141143798828

Token 1397: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1395
Tokens correctement prédits (1ère position, stricte): 527
Tokens correctement prédits (1ère position, avec adaptation): 568
Tokens correctement prédits (top 10): 1146
Précision stricte (1ère position): 37.78%
Précision adaptée (1ère position): 40.72%
Précision (top 10): 82.15%
================================================================================
