================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python3
import sys
import functools
import operator

def main():
    n = int(sys.stdin.readline())
    digits = map(int, list(str(n)))
    s = functools.reduce(operator.add, digits, 0)
    verdict = {True: "Yes", False: "No"}[(lambda x, y: x % y == 0)(n, s if s != 0 else 1)]
    print(verdict)

if __name__ == '__main__':
    (lambda f: f())(main)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.13334347307682037
    2. '/python' → logprob: -2.383343458175659
    3. '/' → logprob: -3.633343458175659
    4. '/bash' → logprob: -5.133343696594238
    5. '/bin' → logprob: -8.383343696594238
    6. 'python' → logprob: -11.258343696594238
    7. '/per' → logprob: -11.383343696594238
    8. 'env' → logprob: -11.883343696594238
    9. '/node' → logprob: -13.133343696594238
    10. '#!/' → logprob: -13.258343696594238

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16446582973003387
    2. '\' → logprob: -2.28946590423584
    3. '```' → logprob: -3.66446590423584
    4. 'import' → logprob: -4.16446590423584
    5. '  
' → logprob: -5.91446590423584
    6. '3' → logprob: -6.03946590423584
    7. ' 
' → logprob: -7.16446590423584
    8. '\r' → logprob: -7.53946590423584
    9. '#' → logprob: -7.53946590423584
    10. '' → logprob: -7.66446590423584

Token 6: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31046751141548157
    2. 'import' → logprob: -1.4354674816131592
    3. '
' → logprob: -4.310467720031738
    4. '\' → logprob: -5.435467720031738
    5. '```' → logprob: -5.810467720031738
    6. '  
' → logprob: -6.310467720031738
    7. '' → logprob: -6.310467720031738
    8. ' 
' → logprob: -6.810467720031738
    9. '#!/' → logprob: -7.185467720031738
    10. '#' → logprob: -7.935467720031738

Token 7: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13889817893505096
    2. 'import' → logprob: -2.2638981342315674
    3. '```' → logprob: -4.8888983726501465
    4. '
' → logprob: -5.2638983726501465
    5. '<|end|>' → logprob: -6.0138983726501465
    6. ' 
' → logprob: -6.0138983726501465
    7. '\' → logprob: -6.1388983726501465
    8. '  
' → logprob: -6.3888983726501465
    9. '#' → logprob: -6.8888983726501465
    10. '' → logprob: -7.1388983726501465

Token 8: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.13619691133499146
    2. ' ' → logprob: -2.1361968517303467
    3. ' sys' → logprob: -6.761197090148926
    4. '<|end|>' → logprob: -6.761197090148926
    5. ' json' → logprob: -6.886197090148926
    6. ' space' → logprob: -7.011197090148926
    7. ' python' → logprob: -7.511197090148926
    8. ' math' → logprob: -7.761197090148926
    9. ' collections' → logprob: -7.761197090148926
    10. ' requests' → logprob: -7.761197090148926

Token 9: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00016957100888248533
    2. 'os' → logprob: -8.75016975402832
    3. ' argparse' → logprob: -11.50016975402832
    4. '"os' → logprob: -15.50016975402832
    5. ' json' → logprob: -15.75016975402832
    6. '	os' → logprob: -15.75016975402832
    7. ' subprocess' → logprob: -16.25016975402832
    8. ' o' → logprob: -16.50016975402832
    9. ' re' → logprob: -16.50016975402832
    10. ' math' → logprob: -16.62516975402832

Token 12: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9060043096542358
    2. '\' → logprob: -1.6560043096542358
    3. '@' → logprob: -1.9060043096542358
    4. 'def' → logprob: -2.6560044288635254
    5. '\n' → logprob: -3.2810044288635254
    6. '.' → logprob: -3.5310044288635254
    7. 'import' → logprob: -3.7810044288635254
    8. '

' → logprob: -3.9060044288635254
    9. '' → logprob: -4.031004428863525
    10. '<|end|>' → logprob: -4.281004428863525

Token 13: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48050639033317566
    2. '@' → logprob: -1.230506420135498
    3. '.' → logprob: -3.730506420135498
    4. '\' → logprob: -4.355506420135498
    5. 'import' → logprob: -4.355506420135498
    6. 'd' → logprob: -4.605506420135498
    7. '
' → logprob: -4.730506420135498
    8. '<|end|>' → logprob: -5.730506420135498
    9. '-' → logprob: -5.980506420135498
    10. '@
' → logprob: -6.355506420135498

Token 14: ' operator' (ID: 11019)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.8248818516731262
    2. ' operator' → logprob: -1.0748817920684814
    3. ' itertools' → logprob: -1.6998817920684814
    4. ' collections' → logprob: -3.6998817920684814
    5. 'operator' → logprob: -5.8248820304870605
    6. ' typing' → logprob: -5.9498820304870605
    7. ' math' → logprob: -6.4498820304870605
    8. 'os' → logprob: -6.6998820304870605
    9. ' argparse' → logprob: -7.0748820304870605
    10. ' json' → logprob: -7.1998820304870605

Token 15: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.5395539402961731
    2. '.' → logprob: -1.0395538806915283
    3. '
' → logprob: -4.164554119110107
    4. 'def' → logprob: -4.289554119110107
    5. '' → logprob: -4.914554119110107
    6. '\n' → logprob: -4.914554119110107
    7. '<|end|>' → logprob: -5.414554119110107
    8. '

' → logprob: -5.539554119110107
    9. 'import' → logprob: -5.664554119110107
    10. '```' → logprob: -6.789554119110107

Token 16: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.549891471862793
    2. '@' → logprob: -0.924891471862793
    3. '#' → logprob: -4.549891471862793
    4. '_' → logprob: -6.049891471862793
    5. 'd' → logprob: -6.049891471862793
    6. '=' → logprob: -6.424891471862793
    7. '\' → logprob: -6.549891471862793
    8. '.' → logprob: -6.799891471862793
    9. '-' → logprob: -7.049891471862793
    10. '@
' → logprob: -7.049891471862793

Token 17: ' main' (ID: 2758)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.7738269567489624
    2. ' ' → logprob: -1.0238269567489624
    3. ' reduce' → logprob: -2.898827075958252
    4. ' max' → logprob: -3.273827075958252
    5. ' compose' → logprob: -4.148827075958252
    6. ' functools' → logprob: -4.398827075958252
    7. ' wrap' → logprob: -4.648827075958252
    8. ' main' → logprob: -4.773827075958252
    9. ' map' → logprob: -5.148827075958252
    10. ' l' → logprob: -5.398827075958252

Token 18: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004472015891224146
    2. '():' → logprob: -5.629471778869629
    3. '(:' → logprob: -8.129471778869629
    4. ':' → logprob: -8.504471778869629
    5. ' (' → logprob: -8.504471778869629
    6. '```' → logprob: -10.629471778869629
    7. '("("' → logprob: -10.754471778869629
    8. '(
' → logprob: -10.754471778869629
    9. '(`' → logprob: -11.754471778869629
    10. '(**' → logprob: -11.754471778869629

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953690648078918
    2. ' ' → logprob: -0.9453690648078918
    3. '    ' → logprob: -3.070369005203247
    4. '(' → logprob: -3.320369005203247
    5. ')' → logprob: -5.570369243621826
    6. 'n' → logprob: -5.945369243621826
    7. ' )' → logprob: -6.070369243621826
    8. '[' → logprob: -6.070369243621826
    9. ' (' → logprob: -6.070369243621826
    10. 'r' → logprob: -6.320369243621826

Token 20: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -1.4160141944885254
    2. ' n' → logprob: -2.0410141944885254
    3. 'args' → logprob: -2.0410141944885254
    4. 'result' → logprob: -2.2910141944885254
    5. ' args' → logprob: -2.6660141944885254
    6. ' result' → logprob: -2.6660141944885254
    7. ' for' → logprob: -3.2910141944885254
    8. '   ' → logprob: -3.4160141944885254
    9. 'x' → logprob: -3.6660141944885254
    10. 'data' → logprob: -4.041014194488525

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04312319681048393
    2. ' ' → logprob: -3.543123245239258
    3. '=' → logprob: -4.668123245239258
    4. '  ' → logprob: -5.793123245239258
    5. '   ' → logprob: -8.293123245239258
    6. '_' → logprob: -8.668123245239258
    7. '.' → logprob: -9.418123245239258
    8. ',' → logprob: -10.293123245239258
    9. 'um' → logprob: -10.418123245239258
    10. ' ,' → logprob: -10.418123245239258

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02021833509206772
    2. 'int' → logprob: -4.020218372344971
    3. ' ' → logprob: -6.270218372344971
    4. '10' → logprob: -9.020217895507812
    5. '20' → logprob: -11.145217895507812
    6. ' input' → logprob: -11.645217895507812
    7. '5' → logprob: -11.645217895507812
    8. ' len' → logprob: -12.020217895507812
    9. ' sys' → logprob: -13.520217895507812
    10. '50' → logprob: -13.770217895507812

Token 23: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13670600950717926
    2. '(input' → logprob: -2.1367061138153076
    3. '(sys' → logprob: -4.6367058753967285
    4. 'input' → logprob: -11.011706352233887
    5. '('' → logprob: -11.261706352233887
    6. ' (' → logprob: -12.636706352233887
    7. '(
' → logprob: -13.136706352233887
    8. '(s' → logprob: -13.261706352233887
    9. '("' → logprob: -14.386706352233887
    10. '(eval' → logprob: -14.386706352233887

Token 24: '.stdin' (ID: 93480)
  Prédit: '.argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.argv' → logprob: -0.5555323958396912
    2. '.stdin' → logprob: -1.055532455444336
    3. '.' → logprob: -2.555532455444336
    4. '.readline' → logprob: -7.930532455444336
    5. ' .' → logprob: -8.930532455444336
    6. '.input' → logprob: -10.055532455444336
    7. '.stdout' → logprob: -10.805532455444336
    8. '.read' → logprob: -12.805532455444336
    9. '.args' → logprob: -12.930532455444336
    10. '.arg' → logprob: -12.930532455444336

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008954895660281181
    2. '.read' → logprob: -4.758955001831055
    3. '.' → logprob: -8.008955001831055
    4. ' .' → logprob: -12.133955001831055
    5. '.readlines' → logprob: -13.883955001831055
    6. '.Read' → logprob: -14.508955001831055
    7. '.)' → logprob: -15.258955001831055
    8. ' readline' → logprob: -15.258955001831055
    9. ').' → logprob: -15.633955001831055
    10. ')' → logprob: -16.258955001831055

Token 26: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008601097390055656
    2. '()' → logprob: -4.883601188659668
    3. '().' → logprob: -7.133601188659668
    4. ')' → logprob: -8.758601188659668
    5. ' ())' → logprob: -10.758601188659668
    6. '()))' → logprob: -11.383601188659668
    7. '()[' → logprob: -12.508601188659668
    8. '(' → logprob: -14.133601188659668
    9. '();)' → logprob: -14.133601188659668
    10. '()]' → logprob: -14.508601188659668

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02808084711432457
    2. ')' → logprob: -4.403080940246582
    3. '    
' → logprob: -5.028080940246582
    4. ' ' → logprob: -5.653080940246582
    5. '    ' → logprob: -6.278080940246582
    6. '
' → logprob: -7.278080940246582
    7. '  ' → logprob: -7.653080940246582
    8. '<|end|>' → logprob: -7.653080940246582
    9. ' 
' → logprob: -8.153080940246582
    10. '```' → logprob: -8.278080940246582

Token 28: ' digits' (ID: 37806)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15526436269283295
    2. 'data' → logprob: -3.030264377593994
    3. 'result' → logprob: -4.155264377593994
    4. '    
' → logprob: -4.780264377593994
    5. ')' → logprob: -5.030264377593994
    6. '    ' → logprob: -5.030264377593994
    7. 's' → logprob: -5.155264377593994
    8. ' numbers' → logprob: -5.530264377593994
    9. ' data' → logprob: -5.530264377593994
    10. ' s' → logprob: -5.655264377593994

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27161991596221924
    2. '=' → logprob: -1.5216199159622192
    3. '_' → logprob: -4.14661979675293
    4. '_count' → logprob: -6.39661979675293
    5. '_counts' → logprob: -7.02161979675293
    6. '   ' → logprob: -8.14661979675293
    7. ' ' → logprob: -8.27161979675293
    8. '_sum' → logprob: -9.14661979675293
    9. '_list' → logprob: -9.27161979675293
    10. '=[]' → logprob: -9.77161979675293

Token 30: ' map' (ID: 4014)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5035334825515747
    2. ' sys' → logprob: -1.7535334825515747
    3. 'list' → logprob: -1.7535334825515747
    4. 'sys' → logprob: -3.378533363342285
    5. ' [' → logprob: -4.503533363342285
    6. '[' → logprob: -6.128533363342285
    7. ' []' → logprob: -7.378533363342285
    8. ' ' → logprob: -7.628533363342285
    9. '[]' → logprob: -8.128533363342285
    10. '[list' → logprob: -9.503533363342285

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03842299431562424
    2. '(' → logprob: -3.2884230613708496
    3. '(lambda' → logprob: -8.413422584533691
    4. '(str' → logprob: -8.788422584533691
    5. '[int' → logprob: -13.663422584533691
    6. 'int' → logprob: -13.663422584533691
    7. '(
' → logprob: -14.288422584533691
    8. '<int' → logprob: -14.538422584533691
    9. '(ord' → logprob: -14.663422584533691
    10. '(len' → logprob: -14.913422584533691

Token 32: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0013897583121433854
    2. '(' → logprob: -7.251389980316162
    3. ',' → logprob: -7.501389980316162
    4. ')' → logprob: -9.626389503479004
    5. '=sys' → logprob: -10.501389503479004
    6. 'sys' → logprob: -11.376389503479004
    7. '(s' → logprob: -12.001389503479004
    8. ' sys' → logprob: -13.126389503479004
    9. '(stdin' → logprob: -13.126389503479004
    10. ' (' → logprob: -13.376389503479004

Token 33: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1007678210735321
    2. ' sys' → logprob: -2.3507678508758545
    3. '(sys' → logprob: -8.100768089294434
    4. 'list' → logprob: -9.475768089294434
    5. ')' → logprob: -9.725768089294434
    6. '=sys' → logprob: -9.975768089294434
    7. '	sys' → logprob: -10.100768089294434
    8. ' ' → logprob: -11.475768089294434
    9. '   ' → logprob: -12.100768089294434
    10. ' list' → logprob: -12.475768089294434

Token 34: '(str' (ID: 7946)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004820395726710558
    2. '(' → logprob: -5.879820346832275
    3. '(str' → logprob: -6.379820346832275
    4. '(input' → logprob: -8.504820823669434
    5. 'sys' → logprob: -10.379820823669434
    6. '((' → logprob: -10.754820823669434
    7. '(line' → logprob: -10.879820823669434
    8. ' (' → logprob: -11.754820823669434
    9. '=sys' → logprob: -12.254820823669434
    10. '(s' → logprob: -12.254820823669434

Token 35: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00283210352063179
    2. '(' → logprob: -5.877831935882568
    3. 'n' → logprob: -10.627832412719727
    4. ' (' → logprob: -13.377832412719727
    5. ' n' → logprob: -14.752832412719727
    6. '   ' → logprob: -15.127832412719727
    7. ')n' → logprob: -15.127832412719727
    8. ')(' → logprob: -15.877832412719727
    9. '((' → logprob: -15.877832412719727
    10. '	n' → logprob: -16.502832412719727

Token 36: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.019773490726947784
    2. '))))' → logprob: -4.144773483276367
    3. ')' → logprob: -5.644773483276367
    4. '())))' → logprob: -10.144773483276367
    5. ' ' → logprob: -10.269773483276367
    6. ')))
' → logprob: -10.269773483276367
    7. '))' → logprob: -10.644773483276367
    8. '))))
' → logprob: -10.769773483276367
    9. '   ' → logprob: -11.144773483276367
    10. ')));' → logprob: -12.019773483276367

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10517366230487823
    2. ')' → logprob: -2.7301735877990723
    3. '    
' → logprob: -3.7301735877990723
    4. '<|end|>' → logprob: -6.105173587799072
    5. '
' → logprob: -6.230173587799072
    6. ' ' → logprob: -6.605173587799072
    7. ' 
' → logprob: -6.855173587799072
    8. ')
' → logprob: -7.105173587799072
    9. '    ' → logprob: -7.230173587799072
    10. '  
' → logprob: -7.980173587799072

Token 38: ' s' (ID: 265)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6322951912879944
    2. 'product' → logprob: -1.3822951316833496
    3. '   ' → logprob: -2.8822951316833496
    4. 'prod' → logprob: -3.0072951316833496
    5. ' product' → logprob: -3.3822951316833496
    6. ' result' → logprob: -3.5072951316833496
    7. ' prod' → logprob: -4.13229513168335
    8. 'digits' → logprob: -5.00729513168335
    9. '    
' → logprob: -5.38229513168335
    10. ')' → logprob: -5.38229513168335

Token 39: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.05652370676398277
    2. ' =' → logprob: -3.3065237998962402
    3. '=' → logprob: -4.30652379989624
    4. 'u' → logprob: -6.68152379989624
    5. '_' → logprob: -7.05652379989624
    6. '_digits' → logprob: -7.43152379989624
    7. '_um' → logprob: -8.056523323059082
    8. 'ums' → logprob: -8.431523323059082
    9. 'quares' → logprob: -8.556523323059082
    10. '_sum' → logprob: -8.556523323059082

Token 40: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.3116041421890259
    2. ' functools' → logprob: -1.4366041421890259
    3. 'sum' → logprob: -3.9366040229797363
    4. ' sum' → logprob: -4.686604022979736
    5. ' fun' → logprob: -6.811604022979736
    6. '   ' → logprob: -10.061604499816895
    7. ' ' → logprob: -10.186604499816895
    8. 'um' → logprob: -11.311604499816895
    9. 'operator' → logprob: -11.311604499816895
    10. '  ' → logprob: -11.686604499816895

Token 41: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.01915491186082363
    2. '.' → logprob: -4.019155025482178
    3. '.partial' → logprob: -8.01915454864502
    4. ' .' → logprob: -8.14415454864502
    5. '.acc' → logprob: -8.39415454864502
    6. '.operator' → logprob: -10.26915454864502
    7. '.sum' → logprob: -10.76915454864502
    8. '.chain' → logprob: -11.01915454864502
    9. '.prod' → logprob: -11.14415454864502
    10. '.red' → logprob: -11.51915454864502

Token 42: '(operator' (ID: 145734)
  Prédit: '(operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.07920482009649277
    2. '(' → logprob: -2.579204797744751
    3. ' (' → logprob: -8.704204559326172
    4. '(lambda' → logprob: -8.954204559326172
    5. '(
' → logprob: -11.829204559326172
    6. '(op' → logprob: -12.579204559326172
    7. '(f' → logprob: -12.704204559326172
    8. 'operator' → logprob: -13.204204559326172
    9. ' ' → logprob: -13.829204559326172
    10. '(operation' → logprob: -14.204204559326172

Token 43: '.add' (ID: 1950)
  Prédit: '.mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mul' → logprob: -0.00416850671172142
    2. '.' → logprob: -5.754168510437012
    3. '.add' → logprob: -7.004168510437012
    4. '.matmul' → logprob: -10.879168510437012
    5. '.*' → logprob: -11.129168510437012
    6. '.multiply' → logprob: -11.254168510437012
    7. '.im' → logprob: -11.629168510437012
    8. ' .' → logprob: -12.004168510437012
    9. '.m' → logprob: -12.629168510437012
    10. '.__' → logprob: -12.629168510437012

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013313100207597017
    2. ' ,' → logprob: -6.876331329345703
    3. ',d' → logprob: -8.126331329345703
    4. '   ' → logprob: -14.251331329345703
    5. ',
' → logprob: -14.376331329345703
    6. ',s' → logprob: -15.626331329345703
    7. '  ' → logprob: -15.751331329345703
    8. ',",' → logprob: -15.751331329345703
    9. '    ' → logprob: -16.126331329345703
    10. ')' → logprob: -16.126331329345703

Token 45: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.5760798454284668
    2. ' digits' → logprob: -0.8260798454284668
    3. ')' → logprob: -9.326080322265625
    4. '_digits' → logprob: -10.701080322265625
    5. 'igits' → logprob: -11.701080322265625
    6. '<|end|>' → logprob: -12.201080322265625
    7. ',d' → logprob: -12.201080322265625
    8. 'Digits' → logprob: -12.701080322265625
    9. '    ' → logprob: -13.451080322265625
    10. ' )' → logprob: -13.576080322265625

Token 46: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018455786630511284
    2. ' )' → logprob: -6.751845359802246
    3. ',' → logprob: -7.751845359802246
    4. ')
' → logprob: -8.876845359802246
    5. '))' → logprob: -9.376845359802246
    6. '   ' → logprob: -12.251845359802246
    7. ')))' → logprob: -12.501845359802246
    8. ' ,' → logprob: -12.751845359802246
    9. ' )
' → logprob: -13.126845359802246
    10. ')`' → logprob: -13.501845359802246

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1426922082901001
    2. ' ' → logprob: -2.0176920890808105
    3. '   ' → logprob: -11.642692565917969
    4. '  ' → logprob: -12.892692565917969
    5. ')' → logprob: -12.892692565917969
    6. '    ' → logprob: -13.517692565917969
    7. '1' → logprob: -14.330192565917969
    8. ' ' → logprob: -14.830192565917969
    9. ' )' → logprob: -14.955192565917969
    10. '	' → logprob: -16.83019256591797

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006314247148111463
    2. ' ' → logprob: -7.375631332397461
    3. ')' → logprob: -12.625631332397461
    4. '   ' → logprob: -14.375631332397461
    5. '1' → logprob: -14.875631332397461
    6. '  ' → logprob: -15.000631332397461
    7. '    ' → logprob: -16.87563133239746
    8. '۰' → logprob: -17.43813133239746
    9. ' )' → logprob: -17.81313133239746
    10. ' ' → logprob: -17.93813133239746

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005081149865873158
    2. ')
' → logprob: -7.8755083084106445
    3. '   ' → logprob: -9.500508308410645
    4. ' )' → logprob: -10.000508308410645
    5. '))' → logprob: -13.250508308410645
    6. ')

' → logprob: -13.500508308410645
    7. ')
' → logprob: -14.125508308410645
    8. ')`' → logprob: -14.625508308410645
    9. ')+' → logprob: -14.875508308410645
    10. '+' → logprob: -15.125508308410645

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08071963489055634
    2. '<|end|>' → logprob: -3.4557197093963623
    3. ')' → logprob: -3.5807197093963623
    4. '
' → logprob: -4.205719470977783
    5. '    
' → logprob: -6.455719470977783
    6. '<|end|>' → logprob: -7.830719470977783
    7. '```' → logprob: -8.205719947814941
    8. '+' → logprob: -8.455719947814941
    9. ' ' → logprob: -8.830719947814941
    10. '  
' → logprob: -9.205719947814941

Token 51: ' verdict' (ID: 75722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009887122549116611
    2. ')' → logprob: -5.509887218475342
    3. 'print' → logprob: -6.384887218475342
    4. '    
' → logprob: -6.509887218475342
    5. ' if' → logprob: -7.509887218475342
    6. ' print' → logprob: -8.009886741638184
    7. '
' → logprob: -8.134886741638184
    8. ' 
' → logprob: -8.509886741638184
    9. '```' → logprob: -8.634886741638184
    10. ' ' → logprob: -8.884886741638184

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12715403735637665
    2. '=' → logprob: -2.1271541118621826
    3. '_' → logprob: -8.627154350280762
    4. 's' → logprob: -10.627154350280762
    5. ' ' → logprob: -11.877154350280762
    6. ')' → logprob: -12.127154350280762
    7. ':' → logprob: -13.377154350280762
    8. ' =
' → logprob: -13.377154350280762
    9. '  ' → logprob: -13.502154350280762
    10. '   ' → logprob: -14.002154350280762

Token 53: ' {' (ID: 354)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.7054712176322937
    2. '"' → logprob: -1.0804712772369385
    3. ''' → logprob: -2.8304712772369385
    4. ' '' → logprob: -3.3304712772369385
    5. ' s' → logprob: -3.7054712772369385
    6. ''s' → logprob: -4.080471038818359
    7. '"s' → logprob: -4.205471038818359
    8. 's' → logprob: -4.705471038818359
    9. ' n' → logprob: -6.330471038818359
    10. ' ' → logprob: -6.580471038818359

Token 54: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1571771800518036
    2. ' True' → logprob: -2.532177209854126
    3. '0' → logprob: -3.282177209854126
    4. '   ' → logprob: -3.782177209854126
    5. 'False' → logprob: -5.657176971435547
    6. '       ' → logprob: -7.282176971435547
    7. '1' → logprob: -8.032176971435547
    8. ' ' → logprob: -8.032176971435547
    9. '"' → logprob: -8.157176971435547
    10. ' False' → logprob: -9.157176971435547

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010115911572938785
    2. ' :' → logprob: -9.875101089477539
    3. ':true' → logprob: -11.375101089477539
    4. ':"' → logprob: -11.625101089477539
    5. ':s' → logprob: -11.750101089477539
    6. ':false' → logprob: -13.000101089477539
    7. ':`' → logprob: -13.125101089477539
    8. ':n' → logprob: -13.125101089477539
    9. ':'' → logprob: -13.375101089477539
    10. ':f' → logprob: -13.625101089477539

Token 56: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4689655303955078
    2. '"' → logprob: -1.0939655303955078
    3. ' '' → logprob: -3.968965530395508
    4. ''' → logprob: -4.093965530395508
    5. ' True' → logprob: -6.843965530395508
    6. ''s' → logprob: -7.218965530395508
    7. ' ' → logprob: -7.468965530395508
    8. '"s' → logprob: -8.343965530395508
    9. 'True' → logprob: -8.593965530395508
    10. '"No' → logprob: -9.281465530395508

Token 57: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -1.6974554061889648
    2. '"' → logprob: -2.072455406188965
    3. 'prime' → logprob: -2.447455406188965
    4. 'Prime' → logprob: -2.572455406188965
    5. 'Even' → logprob: -3.134955406188965
    6. 'Yes' → logprob: -3.197455406188965
    7. 'EV' → logprob: -3.384955406188965
    8. 'even' → logprob: -3.509955406188965
    9. ' prime' → logprob: -3.572455406188965
    10. 'Composite' → logprob: -3.634955406188965

Token 58: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.012941260822117329
    2. '\n' → logprob: -4.387941360473633
    3. '"' → logprob: -8.137941360473633
    4. '","' → logprob: -10.012941360473633
    5. '",
' → logprob: -10.012941360473633
    6. ',' → logprob: -10.637941360473633
    7. ' ",' → logprob: -11.887941360473633
    8. '"}' → logprob: -12.387941360473633
    9. '!",' → logprob: -12.512941360473633
    10. 'No' → logprob: -13.137941360473633

Token 59: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.22656574845314026
    2. 'False' → logprob: -1.6015657186508179
    3. '"' → logprob: -7.226565837860107
    4. ' "' → logprob: -8.60156536102295
    5. '   ' → logprob: -9.35156536102295
    6. '=False' → logprob: -9.72656536102295
    7. ' ' → logprob: -10.60156536102295
    8. '(False' → logprob: -10.85156536102295
    9. '"No' → logprob: -11.10156536102295
    10. ' True' → logprob: -11.10156536102295

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.2994620242971e-06
    2. ' :' → logprob: -11.750008583068848
    3. ':"' → logprob: -16.12500762939453
    4. '=' → logprob: -16.87500762939453
    5. '":' → logprob: -17.00000762939453
    6. '):' → logprob: -17.87500762939453
    7. ':
' → logprob: -17.87500762939453
    8. ':["' → logprob: -18.00000762939453
    9. '=False' → logprob: -18.25000762939453
    10. '}:' → logprob: -18.62500762939453

Token 61: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1800995171070099
    2. ' "' → logprob: -1.8050994873046875
    3. ' ' → logprob: -8.430099487304688
    4. '"No' → logprob: -9.305099487304688
    5. ' ' → logprob: -10.930099487304688
    6. ''' → logprob: -11.055099487304688
    7. '""' → logprob: -13.617599487304688
    8. ')' → logprob: -13.680099487304688
    9. '">' → logprob: -14.305099487304688
    10. '  ' → logprob: -14.367599487304688

Token 62: 'No' (ID: 3160)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.10371392965316772
    2. 'No' → logprob: -2.4787139892578125
    3. '"' → logprob: -4.8537139892578125
    4. ' "' → logprob: -5.1037139892578125
    5. ' No' → logprob: -7.7287139892578125
    6. ' ' → logprob: -8.978713989257812
    7. ''' → logprob: -9.228713989257812
    8. '“No' → logprob: -10.228713989257812
    9. 'no' → logprob: -10.478713989257812
    10. 'NO' → logprob: -10.853713989257812

Token 63: '"}' (ID: 18583)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.34541335701942444
    2. '"}' → logprob: -2.0954134464263916
    3. '}[' → logprob: -2.3454134464263916
    4. '}
' → logprob: -2.8454134464263916
    5. '}"' → logprob: -4.9704132080078125
    6. '"}
' → logprob: -5.2204132080078125
    7. '}
' → logprob: -6.4704132080078125
    8. '}

' → logprob: -7.4704132080078125
    9. '"' → logprob: -8.220413208007812
    10. '"}

' → logprob: -8.720413208007812

Token 64: '[(' (ID: 20542)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0148385763168335
    2. '   ' → logprob: -1.0148385763168335
    3. '[' → logprob: -1.5148385763168335
    4. '[
' → logprob: -3.764838695526123
    5. '[s' → logprob: -4.389838695526123
    6. '[n' → logprob: -4.514838695526123
    7. '    
' → logprob: -5.764838695526123
    8. 'print' → logprob: -6.389838695526123
    9. '
' → logprob: -7.264838695526123
    10. '\n' → logprob: -7.764838695526123

Token 65: 'lambda' (ID: 35280)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030743030831217766
    2. 's' → logprob: -4.15574312210083
    3. ' n' → logprob: -4.28074312210083
    4. ' s' → logprob: -7.28074312210083
    5. '   ' → logprob: -10.280742645263672
    6. ')' → logprob: -11.780742645263672
    7. 'not' → logprob: -12.030742645263672
    8. ' ' → logprob: -12.155742645263672
    9. '(s' → logprob: -12.405742645263672
    10. ')n' → logprob: -12.780742645263672

Token 66: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3701767325401306
    2. 'x' → logprob: -1.3701767921447754
    3. ' n' → logprob: -3.4951767921447754
    4. ' s' → logprob: -4.370176792144775
    5. 'n' → logprob: -4.745176792144775
    6. 's' → logprob: -6.370176792144775
    7. ' lambda' → logprob: -7.870176792144775
    8. 'lambda' → logprob: -7.995176792144775
    9. ' k' → logprob: -8.870176315307617
    10. ' d' → logprob: -8.870176315307617

Token 67: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004859903361648321
    2. ' :' → logprob: -6.254859924316406
    3. ':x' → logprob: -6.629859924316406
    4. ':n' → logprob: -7.379859924316406
    5. 'x' → logprob: -7.879859924316406
    6. ':s' → logprob: -8.254859924316406
    7. 's' → logprob: -8.879859924316406
    8. 'n' → logprob: -8.879859924316406
    9. ' x' → logprob: -10.879859924316406
    10. ',' → logprob: -11.629859924316406

Token 68: ' y' (ID: 342)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8310437202453613
    2. ':' → logprob: -1.3310437202453613
    3. 'y' → logprob: -2.2060437202453613
    4. 'x' → logprob: -2.4560437202453613
    5. 's' → logprob: -2.5810437202453613
    6. 'lambda' → logprob: -4.831043720245361
    7. ' n' → logprob: -5.331043720245361
    8. '   ' → logprob: -5.706043720245361
    9. ' y' → logprob: -5.831043720245361
    10. ' s' → logprob: -5.831043720245361

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01963813789188862
    2. ' :' → logprob: -4.5196380615234375
    3. ':x' → logprob: -4.8946380615234375
    4. ':s' → logprob: -7.6446380615234375
    5. ':n' → logprob: -8.269638061523438
    6. ',' → logprob: -8.519638061523438
    7. ':y' → logprob: -10.144638061523438
    8. ':(' → logprob: -10.769638061523438
    9. 'x' → logprob: -10.769638061523438
    10. ',x' → logprob: -12.269638061523438

Token 70: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.499390572309494
    2. ' x' → logprob: -0.9993906021118164
    3. 'n' → logprob: -4.624390602111816
    4. ' n' → logprob: -4.874390602111816
    5. 's' → logprob: -5.999390602111816
    6. ' s' → logprob: -6.124390602111816
    7. ' y' → logprob: -6.624390602111816
    8. 'y' → logprob: -7.249390602111816
    9. '(x' → logprob: -7.874390602111816
    10. ' (' → logprob: -8.624390602111816

Token 71: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0944705680012703
    2. '%' → logprob: -2.469470500946045
    3. '%s' → logprob: -5.344470500946045
    4. '%n' → logprob: -8.344470977783203
    5. ' ' → logprob: -8.594470977783203
    6. '%x' → logprob: -9.344470977783203
    7. 's' → logprob: -9.844470977783203
    8. ' y' → logprob: -10.344470977783203
    9. ' s' → logprob: -10.344470977783203
    10. ')' → logprob: -10.719470977783203

Token 72: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.020940756425261497
    2. ' y' → logprob: -3.8959407806396484
    3. 's' → logprob: -8.020940780639648
    4. ' ' → logprob: -10.145940780639648
    5. '9' → logprob: -11.520940780639648
    6. ' s' → logprob: -11.645940780639648
    7. '  ' → logprob: -12.895940780639648
    8. 'x' → logprob: -13.645940780639648
    9. ')' → logprob: -14.270940780639648
    10. ' (' → logprob: -14.270940780639648

Token 73: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3974875807762146
    2. ' ==' → logprob: -1.1474876403808594
    3. ')' → logprob: -6.022487640380859
    4. 's' → logprob: -6.022487640380859
    5. '(s' → logprob: -6.147487640380859
    6. ' ' → logprob: -6.897487640380859
    7. '(' → logprob: -7.397487640380859
    8. '(n' → logprob: -7.522487640380859
    9. ')(' → logprob: -7.772487640380859
    10. '0' → logprob: -8.52248764038086

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31423094868659973
    2. ' ' → logprob: -1.3142309188842773
    3. 's' → logprob: -7.564230918884277
    4. ' s' → logprob: -7.814230918884277
    5. '  ' → logprob: -11.314230918884277
    6. ' ' → logprob: -11.814230918884277
    7. '1' → logprob: -12.189230918884277
    8. '   ' → logprob: -12.751730918884277
    9. '9' → logprob: -13.314230918884277
    10. '3' → logprob: -13.314230918884277

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01820274256169796
    2. ' ' → logprob: -4.143202781677246
    3. 's' → logprob: -6.268202781677246
    4. ' s' → logprob: -8.268202781677246
    5. '  ' → logprob: -12.643202781677246
    6. ' ' → logprob: -13.080702781677246
    7. '   ' → logprob: -13.268202781677246
    8. '1' → logprob: -13.955702781677246
    9. ')' → logprob: -13.955702781677246
    10. '```' → logprob: -14.455702781677246

Token 76: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.0009933913825079799
    2. ' )(' → logprob: -7.625993251800537
    3. ')' → logprob: -8.375993728637695
    4. '(n' → logprob: -8.750993728637695
    5. ')(
' → logprob: -10.000993728637695
    6. '   ' → logprob: -10.375993728637695
    7. ')((' → logprob: -11.000993728637695
    8. '(s' → logprob: -12.250993728637695
    9. '(' → logprob: -12.750993728637695
    10. ',' → logprob: -12.750993728637695

Token 77: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011522514978423715
    2. ' n' → logprob: -9.750115394592285
    3. 's' → logprob: -10.125115394592285
    4. '  ' → logprob: -11.750115394592285
    5. '   ' → logprob: -12.250115394592285
    6. ' ' → logprob: -13.375115394592285
    7. '<|end|>' → logprob: -14.875115394592285
    8. '
' → logprob: -15.000115394592285
    9. '```' → logprob: -15.000115394592285
    10. ')' → logprob: -15.000115394592285

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29514145851135254
    2. 's' → logprob: -1.4201414585113525
    3. ' ,' → logprob: -4.920141220092773
    4. ',s' → logprob: -5.420141220092773
    5. ' s' → logprob: -6.295141220092773
    6. ' ' → logprob: -8.670141220092773
    7. ',
' → logprob: -9.795141220092773
    8. '   ' → logprob: -10.170141220092773
    9. '  ' → logprob: -11.170141220092773
    10. '9' → logprob: -11.670141220092773

Token 79: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031791406217962503
    2. ' s' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.003179550170898
    4. '   ' → logprob: -15.378179550170898
    5. ')' → logprob: -15.878179550170898
    6. '  ' → logprob: -16.6281795501709
    7. '	s' → logprob: -16.7531795501709
    8. '(s' → logprob: -16.7531795501709
    9. '`s' → logprob: -17.2531795501709
    10. ')s' → logprob: -17.2531795501709

Token 80: ' if' (ID: 538)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019018957391381264
    2. ')' → logprob: -9.000189781188965
    3. ')])' → logprob: -9.750189781188965
    4. '))' → logprob: -12.250189781188965
    5. ')]
' → logprob: -13.875189781188965
    6. ' )' → logprob: -14.250189781188965
    7. '])]' → logprob: -14.250189781188965
    8. '])' → logprob: -15.125189781188965
    9. ']' → logprob: -15.125189781188965
    10. '),' → logprob: -15.500189781188965

Token 81: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1427048146724701
    2. 's' → logprob: -2.017704725265503
    3. ' ' → logprob: -11.392704963684082
    4. '>s' → logprob: -11.892704963684082
    5. '>' → logprob: -12.642704963684082
    6. '  ' → logprob: -12.767704963684082
    7. '0' → logprob: -13.267704963684082
    8. '   ' → logprob: -13.392704963684082
    9. ' not' → logprob: -14.642704963684082
    10. '(s' → logprob: -14.767704963684082

Token 82: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3434249460697174
    2. ' !=' → logprob: -1.343424916267395
    3. '>' → logprob: -4.0934247970581055
    4. 'else' → logprob: -5.0934247970581055
    5. ' else' → logprob: -5.2184247970581055
    6. ' >' → logprob: -6.5934247970581055
    7. ' ' → logprob: -9.718424797058105
    8. '==' → logprob: -11.343424797058105
    9. '```' → logprob: -12.093424797058105
    10. '()!=' → logprob: -12.218424797058105

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.750335693359375
    4. '```' → logprob: -16.000335693359375
    5. ' ' → logprob: -16.250335693359375
    6. '  ' → logprob: -17.125335693359375
    7. '۰' → logprob: -17.937835693359375
    8. '
' → logprob: -18.125335693359375
    9. '=' → logprob: -18.187835693359375
    10. '    ' → logprob: -18.625335693359375

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003837213444057852
    2. ' ' → logprob: -7.8753838539123535
    3. '   ' → logprob: -13.125383377075195
    4. '  ' → logprob: -14.625383377075195
    5. '```' → logprob: -15.000383377075195
    6. '     ' → logprob: -15.500383377075195
    7. '    ' → logprob: -15.875383377075195
    8. '         ' → logprob: -16.562883377075195
    9. '۰' → logprob: -16.687883377075195
    10. ' ' → logprob: -16.937883377075195

Token 85: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10029389709234238
    2. 'else' → logprob: -2.3502938747406006
    3. ')' → logprob: -9.85029411315918
    4. ' ' → logprob: -11.22529411315918
    5. '))' → logprob: -11.72529411315918
    6. ' )' → logprob: -12.47529411315918
    7. '	else' → logprob: -13.22529411315918
    8. '```' → logprob: -13.35029411315918
    9. '   ' → logprob: -13.97529411315918
    10. '),' → logprob: -14.10029411315918

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0038596971426159143
    2. ' ' → logprob: -5.628859519958496
    3. 'n' → logprob: -8.378859519958496
    4. '   ' → logprob: -11.628859519958496
    5. ' n' → logprob: -12.003859519958496
    6. '9' → logprob: -12.753859519958496
    7. ')' → logprob: -12.878859519958496
    8. '-' → logprob: -13.128859519958496
    9. '>' → logprob: -13.878859519958496
    10. ' ' → logprob: -13.941359519958496

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010356683051213622
    2. ' ' → logprob: -7.001035690307617
    3. 'n' → logprob: -9.126035690307617
    4. '-' → logprob: -12.751035690307617
    5. '   ' → logprob: -12.751035690307617
    6. ')' → logprob: -13.126035690307617
    7. ' n' → logprob: -13.938535690307617
    8. 's' → logprob: -14.063535690307617
    9. '>' → logprob: -14.376035690307617
    10. '```' → logprob: -14.751035690307617

Token 88: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0035573046188801527
    2. ')])' → logprob: -5.753557205200195
    3. ')' → logprob: -8.253557205200195
    4. '))' → logprob: -9.878557205200195
    5. '])]' → logprob: -10.003557205200195
    6. ' )' → logprob: -11.878557205200195
    7. '])' → logprob: -12.003557205200195
    8. ')]
' → logprob: -12.003557205200195
    9. ')]

' → logprob: -14.378557205200195
    10. ']' → logprob: -14.503557205200195

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024923842400312424
    2. '
' → logprob: -3.774923801422119
    3. '    
' → logprob: -7.274923801422119
    4. 'print' → logprob: -7.524923801422119
    5. '<|end|>' → logprob: -8.399924278259277
    6. ')' → logprob: -9.274924278259277
    7. '```' → logprob: -10.024924278259277
    8. ')
' → logprob: -10.274924278259277
    9. '<|end|>' → logprob: -11.274924278259277
    10. '
' → logprob: -11.649924278259277

Token 90: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014181484468281269
    2. 'print' (adapté à ' print') → logprob: -4.264181613922119
    3. ' print' → logprob: -11.139181137084961
    4. '```' → logprob: -13.139181137084961
    5. '
' → logprob: -14.139181137084961
    6. '    
' → logprob: -14.264181137084961
    7. '	print' → logprob: -16.13918113708496
    8. ')' → logprob: -17.01418113708496
    9. '  ' → logprob: -18.51418113708496
    10. '       ' → logprob: -18.76418113708496

Token 91: '(ver' (ID: 185185)
  Prédit: '(ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ver' → logprob: -0.006061398424208164
    2. '(' → logprob: -5.131061553955078
    3. '()' → logprob: -9.756061553955078
    4. 'ver' → logprob: -9.756061553955078
    5. '(s' → logprob: -11.631061553955078
    6. 'verd' → logprob: -13.131061553955078
    7. '(
' → logprob: -13.506061553955078
    8. ' (' → logprob: -13.631061553955078
    9. '(v' → logprob: -14.506061553955078
    10. '   ' → logprob: -14.756061553955078

Token 92: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.0015900811413303018
    2. 'ict' → logprob: -6.501590251922607
    3. 'dit' → logprob: -10.25158977508545
    4. 'd' → logprob: -10.37658977508545
    5. 'dic' → logprob: -12.12658977508545
    6. 'rd' → logprob: -12.37658977508545
    7. ' dict' → logprob: -12.50158977508545
    8. 'r' → logprob: -12.62658977508545
    9. '_dict' → logprob: -14.00158977508545
    10. 'dir' → logprob: -14.25158977508545

Token 93: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -12.625004768371582
    3. '))' → logprob: -14.000004768371582
    4. ' )' → logprob: -14.625004768371582
    5. ')`' → logprob: -15.500004768371582
    6. '`)' → logprob: -17.0000057220459
    7. ')))' → logprob: -18.0000057220459
    8. ')}' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.3750057220459
    10. '),' → logprob: -18.5000057220459

Token 94: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0009119403548538685
    2. '__' → logprob: -7.000911712646484
    3. ' ' → logprob: -14.875911712646484
    4. ' ' → logprob: -16.250911712646484
    5. '/__' → logprob: -18.750911712646484
    6. '  ' → logprob: -19.875911712646484
    7. ' _' → logprob: -19.875911712646484
    8. ' ___' → logprob: -20.125911712646484
    9. ' "__' → logprob: -20.375911712646484
    10. '_' → logprob: -20.375911712646484

Token 96: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07478833198547363
    2. '==' → logprob: -3.6997883319854736
    3. ' ==' → logprob: -3.6997883319854736
    4. '.__' → logprob: -4.6997880935668945
    5. '__.__' → logprob: -4.6997880935668945
    6. '.' → logprob: -6.1997880935668945
    7. '.name' → logprob: -6.8247880935668945
    8. '__.' → logprob: -7.3247880935668945
    9. ' __' → logprob: -8.449788093566895
    10. ' .' → logprob: -9.074788093566895

Token 97: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.47757811343763e-05
    2. '__.__' → logprob: -10.250044822692871
    3. '__["' → logprob: -12.500044822692871
    4. '==' → logprob: -13.375044822692871
    5. '____' → logprob: -13.750044822692871
    6. '=="' → logprob: -13.750044822692871
    7. '___' → logprob: -14.125044822692871
    8. '__.' → logprob: -15.500044822692871
    9. '__":
' → logprob: -16.000043869018555
    10. '__('' → logprob: -16.000043869018555

Token 98: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.558788001537323
    2. ' ==' → logprob: -0.933788001537323
    3. '==' → logprob: -3.4337880611419678
    4. '=="' → logprob: -6.308787822723389
    5. '__.__' → logprob: -7.933787822723389
    6. '=='' → logprob: -8.308788299560547
    7. '__["' → logprob: -9.558788299560547
    8. '__.' → logprob: -9.808788299560547
    9. '_' → logprob: -10.183788299560547
    10. ' =="' → logprob: -10.308788299560547

Token 99: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1604974865913391
    2. ''' → logprob: -1.9104974269866943
    3. ' "__' → logprob: -8.535497665405273
    4. '__' → logprob: -9.910497665405273
    5. ' '__' → logprob: -10.910497665405273
    6. '"user' → logprob: -12.785497665405273
    7. ' "' → logprob: -13.035497665405273
    8. '"name' → logprob: -14.285497665405273
    9. ' ' → logprob: -14.910497665405273
    10. ''s' → logprob: -14.910497665405273

Token 100: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.06214302033185959
    2. '__' → logprob: -2.812143087387085
    3. 'name' → logprob: -9.312143325805664
    4. '__':
' → logprob: -10.187143325805664
    5. 'python' → logprob: -10.937143325805664
    6. '_main' → logprob: -11.187143325805664
    7. ''' → logprob: -12.062143325805664
    8. 'py' → logprob: -12.062143325805664
    9. '___' → logprob: -14.062143325805664
    10. ' main' → logprob: -14.437143325805664

Token 101: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0789485052227974
    2. '__' → logprob: -2.578948497772217
    3. '__":
' → logprob: -10.078948974609375
    4. '__:' → logprob: -11.328948974609375
    5. '__.' → logprob: -12.828948974609375
    6. '_' → logprob: -14.078948974609375
    7. '__('' → logprob: -14.828948974609375
    8. '__
' → logprob: -15.203948974609375
    9. '__.__' → logprob: -16.078948974609375
    10. '':' → logprob: -16.578948974609375

Token 102: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08802708238363266
    2. '   ' → logprob: -2.713027000427246
    3. 'main' → logprob: -4.088027000427246
    4. '	main' → logprob: -6.838027000427246
    5. '    
' → logprob: -9.963027000427246
    6. '```' → logprob: -11.713027000427246
    7. '_main' → logprob: -12.088027000427246
    8. ' ' → logprob: -12.088027000427246
    9. '(main' → logprob: -12.588027000427246
    10. '<|end|>' → logprob: -12.963027000427246

Token 103: ' (' (ID: 350)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01816480979323387
    2. ' main' → logprob: -4.01816463470459
    3. '	main' → logprob: -11.64316463470459
    4. '   ' → logprob: -12.01816463470459
    5. '_main' → logprob: -17.393165588378906
    6. '.main' → logprob: -18.018165588378906
    7. ' ' → logprob: -18.393165588378906
    8. '(main' → logprob: -18.518165588378906
    9. '```' → logprob: -19.393165588378906
    10. ' ' → logprob: -19.768165588378906

Token 104: 'lambda' (ID: 35280)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0003091254911851138
    2. ')' → logprob: -8.250308990478516
    3. ' main' → logprob: -10.000308990478516
    4. '	main' → logprob: -13.250308990478516
    5. '   ' → logprob: -14.500308990478516
    6. '_main' → logprob: -15.875308990478516
    7. ' ' → logprob: -18.125308990478516
    8. 'Main' → logprob: -18.625308990478516
    9. '.main' → logprob: -18.625308990478516
    10. '(main' → logprob: -18.750308990478516

Token 105: ' f' (ID: 285)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.0459343194961548
    2. ':' → logprob: -1.1709343194961548
    3. '):' → logprob: -2.1709342002868652
    4. ' ):' → logprob: -2.2959342002868652
    5. ' main' → logprob: -2.7959342002868652
    6. ')' → logprob: -4.170934200286865
    7. ' )' → logprob: -4.170934200286865
    8. 'main' → logprob: -4.295934200286865
    9. ' n' → logprob: -4.795934200286865
    10. '():' → logprob: -6.170934200286865

Token 106: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028053026646375656
    2. ':f' → logprob: -4.278052806854248
    3. ' :' → logprob: -4.778052806854248
    4. ' f' → logprob: -5.778052806854248
    5. 'f' → logprob: -6.778052806854248
    6. '(f' → logprob: -7.028052806854248
    7. '():' → logprob: -8.903053283691406
    8. '=f' → logprob: -10.403053283691406
    9. '   ' → logprob: -11.028053283691406
    10. '):' → logprob: -11.278053283691406

Token 107: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07322955131530762
    2. ' f' → logprob: -2.6982295513153076
    3. '   ' → logprob: -5.823229789733887
    4. 'main' → logprob: -9.448229789733887
    5. ' main' → logprob: -9.698229789733887
    6. ')' → logprob: -10.198229789733887
    7. '    ' → logprob: -10.573229789733887
    8. 'sys' → logprob: -10.573229789733887
    9. ' sys' → logprob: -10.698229789733887
    10. 'print' → logprob: -10.948229789733887

Token 108: '())' (ID: 3516)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0047871763817965984
    2. '(f' → logprob: -5.629786968231201
    3. '())' → logprob: -7.504786968231201
    4. ')(' → logprob: -8.00478744506836
    5. '(' → logprob: -9.00478744506836
    6. '(sys' → logprob: -9.37978744506836
    7. ')(__' → logprob: -11.00478744506836
    8. 'main' → logprob: -11.25478744506836
    9. '(__' → logprob: -11.25478744506836
    10. '()' → logprob: -11.37978744506836

Token 109: '(' (ID: 7)
  Prédit: '(main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(main' → logprob: -0.0015653307782486081
    2. '(lambda' → logprob: -6.751565456390381
    3. '(' → logprob: -8.376564979553223
    4. ' (' → logprob: -8.876564979553223
    5. 'main' → logprob: -11.251564979553223
    6. ' main' → logprob: -12.751564979553223
    7. ' ' → logprob: -12.876564979553223
    8. '(Main' → logprob: -13.001564979553223
    9. '   ' → logprob: -13.876564979553223
    10. '(print' → logprob: -13.876564979553223

Token 110: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.493430894101039e-05
    2. ' main' → logprob: -9.500075340270996
    3. 'lambda' → logprob: -17.87507438659668
    4. '	main' → logprob: -17.87507438659668
    5. '(main' → logprob: -18.50007438659668
    6. '   ' → logprob: -20.62507438659668
    7. ')' → logprob: -21.62507438659668
    8. ' ' → logprob: -22.37507438659668
    9. '.main' → logprob: -22.50007438659668
    10. '_main' → logprob: -22.75007438659668

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.65101717156358e-05
    2. '())' → logprob: -9.375096321105957
    3. ')
' → logprob: -11.875096321105957
    4. '))' → logprob: -12.875096321105957
    5. '()' → logprob: -13.750096321105957
    6. ' )' → logprob: -14.375096321105957
    7. ')`' → logprob: -15.625096321105957
    8. ')}' → logprob: -17.375097274780273
    9. ')

' → logprob: -17.625097274780273
    10. '`)' → logprob: -17.750097274780273


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 46
Tokens correctement prédits (top 10): 90
Précision stricte (1ère position): 41.28%
Précision adaptée (1ère position): 42.20%
Précision (top 10): 82.57%
================================================================================
