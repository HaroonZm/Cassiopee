================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# La variable R est un alias pour la fonction range, qui génère une séquence d'entiers.
R = range

# Les deux valeurs N et K sont extraites de l'entrée utilisateur, séparées par un espace.
# int() convertit les chaînes en entiers.
# split() découpe la chaîne en fonction des espaces.
N, K = map(int, input().split())

# Q est un objet range allant de 0 à N inclus (car range(N+1) s'arrête à N).
Q = R(N + 1)

# Création d'une matrice d, initialisée avec des zéros.
# d est de taille (N+1) x (2^N).
# Chaque sous-liste de d représente un niveau différent,
# et chaque cellule représente une combinaison possible de bits.
d = [[0] * 2 ** N for _ in Q]

# Création d'une matrice f, initialisée avec des zéros.
# f est également de taille (N+1) x (2^N).
# Cette matrice va stocker une valeur de "run length" pour des patterns binaires.
f = [[0] * 2 ** N for _ in Q]

# Remplissage de la matrice d à partir de l'entrée utilisateur.
# On itère i de 0 à N inclus.
for i in Q:
    # Lecture d'une ligne d'entrée.
    for j, c in enumerate(input()):  # enumerate() donne l'index j et le caractère c.
        d[i][j] = int(c)  # Convertit chaque caractère c en entier et l'affecte dans d[i][j].

# Construction de la matrice f.
# Pour chaque i de 1 à N inclus (c'est-à-dire pour chaque longueur de bits).
for i in R(1, N + 1):
    # Pour chaque j de 0 à (2^i) - 1 inclus.
    for j in R(1 << i):
        # Extraction du bit de poids fort dans j (celui d'indice i-1 en partant de la droite).
        t = (j >> (i - 1)) & 1  # Le bit le plus à gauche dans les i bits.
        r = 0  # Compteur pour la longueur du 'run'.
        # Boucle pour déterminer la longueur du run de bits identiques à t, à partir du bit de poids fort.
        while r < i and ((j >> (i - 1 - r)) & 1) == t:
            r += 1  # Incrémente r tant que les bits rencontrés restent égaux à t.
        f[i][j] = r  # Stocke la longueur trouvée de ce 'run' en début de la séquence.

# Algorithme de regroupement et de propagation des valeurs dans d.
for i in Q:
    # Pour chaque k de i+1 à N inclus (i < k <= N).
    for k in R(i + 1, N + 1):
        z = k - i  # Calcul de la différence d'indice.
        m = (1 << z) - 1  # Masque binaire qui sélectionne les z bits de droite.
        # Itère tous les patterns possible de k bits.
        for j in R(1 << k):
            # Ajoute la valeur d[k][j] à la densité correspondante dans d[i][j >> z], ce qui revient à agréger selon le préfixe gauche.
            d[i][j >> z] += d[k][j]
            # Utilise le run length f[z][j&m] pour obtenir la longueur d'une séquence de bits identiques dans le suffixe z bits.
            r = f[z][j & m]
            # Si r n'est pas égal à z (c'est-à-dire que la séquence suffixe n'est pas identique).
            if r != z:
                # Propagation de la densité vers la case correspondante dans d en remontant de k à k-r,
                # en concoctant un nouveau pattern qui conserve les (z-r) bits de préfixe et le suffixe r bits.
                d[k - r][((j >> z) << (z - r)) | (j & ((1 << (z - r)) - 1))] += d[k][j]

    # Recherche la première occurrence (dans l'ordre croissant des patterns) où le total dans d[i][j] est au moins K.
    for j in R(1 << i):
        if d[i][j] >= K:
            I = i  # On mémorise l'indice i, la longueur du pattern.
            J = j  # On mémorise le pattern j lui-même.
            break  # On s'arrête dès qu'on a trouvé une telle occurrence.

# Affichage du résultat :
# Si I et J sont égaux à 0, on affiche une chaîne vide.
# Sinon, on convertit J en binaire (sous forme de chaîne sans le préfixe '0b'),
# puis on complète par des zéros à gauche pour obtenir une chaîne de longueur I.
print('' if I == J == 0 else bin(J)[2:].zfill(I))  # [2:] retire le préfixe '0b', zfill(I) complète les zéros.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' La' (ID: 3038)
  → Token d'amorce (pas de prédiction)

Token 2: ' variable' (ID: 11076)
  → Token d'amorce (pas de prédiction)

Token 3: ' R' (ID: 460)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3401443362236023
    2. '_' → logprob: -1.590144395828247
    3. ' ' → logprob: -3.715144395828247
    4. '`' → logprob: -4.215144157409668
    5. 'es' → logprob: -4.215144157409668
    6. '```' → logprob: -4.715144157409668
    7. '_s' → logprob: -5.215144157409668
    8. ''s' → logprob: -5.340144157409668
    9. 'a' → logprob: -6.840144157409668
    10. ''' → logprob: -6.840144157409668

Token 4: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8379831314086914
    2. '=' → logprob: -1.8379831314086914
    3. '_' → logprob: -1.8379831314086914
    4. 'e' → logprob: -2.4629831314086914
    5. ' ' → logprob: -3.5879831314086914
    6. ' es' → logprob: -3.8379831314086914
    7. 'é' → logprob: -4.212983131408691
    8. 'a' → logprob: -4.462983131408691
    9. 'R' → logprob: -4.587983131408691
    10. '[' → logprob: -4.587983131408691

Token 5: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.205844759941101
    2. ' un' → logprob: -2.0808448791503906
    3. ' défin' → logprob: -2.2058448791503906
    4. ' =' → logprob: -2.5808448791503906
    5. ' utilisée' → logprob: -2.5808448791503906
    6. 'e' → logprob: -2.8308448791503906
    7. '=' → logprob: -3.4558448791503906
    8. ' une' → logprob: -3.4558448791503906
    9. ' a' → logprob: -3.5808448791503906
    10. 'é' → logprob: -3.7058448791503906

Token 6: ' alias' (ID: 26026)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.3685787618160248
    2. 'e' → logprob: -2.4935786724090576
    3. 'es' → logprob: -2.6185786724090576
    4. '_' → logprob: -3.1185786724090576
    5. 's' → logprob: -4.118578910827637
    6. ' ' → logprob: -4.493578910827637
    7. ' tableau' → logprob: -4.493578910827637
    8. 'ent' → logprob: -4.993578910827637
    9. 'esp' → logprob: -5.368578910827637
    10. 'space' → logprob: -5.368578910827637

Token 7: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0243849754333496
    2. '=' → logprob: -1.1493849754333496
    3. '#' → logprob: -1.3993849754333496
    4. ' =' → logprob: -3.6493849754333496
    5. 'R' → logprob: -4.14938497543335
    6. '.' → logprob: -4.89938497543335
    7. 'r' → logprob: -5.02438497543335
    8. ' ' → logprob: -5.14938497543335
    9. ':' → logprob: -5.27438497543335
    10. '```' → logprob: -6.39938497543335

Token 8: ' la' (ID: 557)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '`' → logprob: -1.6473073959350586
    2. 'np' → logprob: -2.1473073959350586
    3. 'R' → logprob: -2.2723073959350586
    4. 'numpy' → logprob: -2.5223073959350586
    5. 'range' → logprob: -3.1473073959350586
    6. ' la' → logprob: -3.1473073959350586
    7. 'r' → logprob: -3.2723073959350586
    8. 'df' → logprob: -3.2723073959350586
    9. 'random' → logprob: -3.3973073959350586
    10. 'la' → logprob: -3.6473073959350586

Token 9: ' fonction' (ID: 17610)
  Prédit: 'Ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ré' → logprob: -2.1919994354248047
    2. 'Rés' → logprob: -2.3169994354248047
    3. 'rés' → logprob: -2.6919994354248047
    4. ' requ' → logprob: -2.9419994354248047
    5. ' dataframe' → logprob: -2.9419994354248047
    6. ' variable' → logprob: -2.9419994354248047
    7. 'R' → logprob: -3.1919994354248047
    8. 'base' → logprob: -3.5669994354248047
    9. 'Re' → logprob: -3.6294994354248047
    10. 're' → logprob: -3.7544994354248047

Token 10: ' range' (ID: 3352)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -0.35759106278419495
    2. ' `' → logprob: -2.607591152191162
    3. '```' → logprob: -3.857591152191162
    4. 'R' → logprob: -4.107591152191162
    5. ' np' → logprob: -4.232591152191162
    6. 'def' → logprob: -4.232591152191162
    7. 'r' → logprob: -4.232591152191162
    8. 'range' → logprob: -4.357591152191162
    9. 'random' → logprob: -4.482591152191162
    10. ' def' → logprob: -4.732591152191162

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002852305769920349
    2. '_' → logprob: -6.627852439880371
    3. '(
' → logprob: -8.377852439880371
    4. '[' → logprob: -8.502852439880371
    5. 'r' → logprob: -8.627852439880371
    6. '.' → logprob: -8.627852439880371
    7. ' (' → logprob: -8.752852439880371
    8. '#' → logprob: -9.377852439880371
    9. '```' → logprob: -9.377852439880371
    10. 'a' → logprob: -9.752852439880371

Token 12: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.708066463470459
    2. '_' → logprob: -0.958066463470459
    3. '.' → logprob: -3.083066463470459
    4. '()' → logprob: -4.458066463470459
    5. '[' → logprob: -4.583066463470459
    6. '=' → logprob: -4.833066463470459
    7. ',' → logprob: -4.833066463470459
    8. '```' → logprob: -5.083066463470459
    9. ''' → logprob: -5.208066463470459
    10. ' (' → logprob: -5.458066463470459

Token 13: ' gén' (ID: 15330)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.3627629578113556
    2. ' crée' → logprob: -2.987762928009033
    3. 's' → logprob: -3.487762928009033
    4. ' est' → logprob: -3.487762928009033
    5. ' gén' → logprob: -3.487762928009033
    6. ' s' → logprob: -3.612762928009033
    7. ' ' → logprob: -3.737762928009033
    8. 'g' → logprob: -3.737762928009033
    9. ' prend' → logprob: -4.112762928009033
    10. ' ren' → logprob: -4.112762928009033

Token 14: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.07918664067983627
    2. 'r' → logprob: -2.9541866779327393
    3. 'èr' → logprob: -4.20418643951416
    4. 'ré' → logprob: -5.57918643951416
    5. 'érer' → logprob: -6.45418643951416
    6. 'er' → logprob: -7.20418643951416
    7. '```' → logprob: -7.57918643951416
    8. 'è' → logprob: -7.70418643951416
    9. 'ér' → logprob: -8.07918643951416
    10. '#' → logprob: -8.57918643951416

Token 15: ' une' (ID: 2463)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04100777581334114
    2. 's' → logprob: -3.2910077571868896
    3. '(s' → logprob: -7.041007995605469
    4. ' des' → logprob: -7.166007995605469
    5. ' (' → logprob: -7.541007995605469
    6. ' un' → logprob: -8.416007995605469
    7. ' ' → logprob: -9.291007995605469
    8. 'a' → logprob: -9.416007995605469
    9. '(
' → logprob: -9.416007995605469
    10. '()' → logprob: -9.791007995605469

Token 16: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5042887926101685
    2. 's' → logprob: -1.6292887926101685
    3. ' sé' → logprob: -1.8792887926101685
    4. ' plage' → logprob: -3.754288673400879
    5. 'sequence' → logprob: -5.129288673400879
    6. ' ' → logprob: -5.504288673400879
    7. ' liste' → logprob: -5.629288673400879
    8. 'sé' → logprob: -6.129288673400879
    9. ' s' → logprob: -6.254288673400879
    10. ' gamme' → logprob: -6.254288673400879

Token 17: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.01818857528269291
    2. 'q' → logprob: -4.2681884765625
    3. 'rie' → logprob: -6.1431884765625
    4. 'qu' → logprob: -6.7681884765625
    5. 'r' → logprob: -7.8931884765625
    6. '#' → logprob: -9.5181884765625
    7. 'quences' → logprob: -9.6431884765625
    8. 'que' → logprob: -9.6431884765625
    9. 'QUENCE' → logprob: -10.5181884765625
    10. '-' → logprob: -11.1431884765625

Token 18: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17245596647262573
    2. '_' → logprob: -1.9224560260772705
    3. '.' → logprob: -5.047455787658691
    4. '[' → logprob: -6.672455787658691
    5. ''' → logprob: -6.797455787658691
    6. ' (' → logprob: -7.797455787658691
    7. 'r' → logprob: -7.797455787658691
    8. ')' → logprob: -8.047455787658691
    9. '```' → logprob: -8.297455787658691
    10. '`' → logprob: -8.547455787658691

Token 19: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.05636103078722954
    2. 'e' → logprob: -3.306360960006714
    3. ''' → logprob: -5.056361198425293
    4. 'ent' → logprob: -5.306361198425293
    5. '’ent' → logprob: -5.806361198425293
    6. 'u' → logprob: -6.806361198425293
    7. 'n' → logprob: -7.681361198425293
    8. ''o' → logprob: -7.806361198425293
    9. ' nombres' → logprob: -7.931361198425293
    10. 'i' → logprob: -8.306361198425293

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.019116666167974472
    2. 'i' → logprob: -4.5191168785095215
    3. 'ières' → logprob: -4.8941168785095215
    4. 'ier' → logprob: -8.144116401672363
    5. '```' → logprob: -9.019116401672363
    6. 'ié' → logprob: -9.769116401672363
    7. 'ière' → logprob: -11.019116401672363
    8. 'î' → logprob: -11.394116401672363
    9. 'ires' → logprob: -11.519116401672363
    10. 'ités' → logprob: -12.019116401672363

Token 21: '.
' (ID: 558)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.05329815670847893
    2. 'r' → logprob: -3.303298234939575
    3. '_' → logprob: -4.928297996520996
    4. '.' → logprob: -5.678297996520996
    5. ',' → logprob: -7.303297996520996
    6. '(' → logprob: -7.428297996520996
    7. ' R' → logprob: -7.553297996520996
    8. 'n' → logprob: -7.803297996520996
    9. 'a' → logprob: -7.803297996520996
    10. '=' → logprob: -8.053297996520996

Token 22: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.4384993314743042
    2. '.' → logprob: -1.8134993314743042
    3. 'r' → logprob: -2.6884994506835938
    4. '_' → logprob: -3.3134994506835938
    5. '```' → logprob: -3.6884994506835938
    6. '\' → logprob: -4.188499450683594
    7. '#' → logprob: -4.438499450683594
    8. '`' → logprob: -4.438499450683594
    9. ' ' → logprob: -5.313499450683594
    10. ',' → logprob: -5.688499450683594

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000496436667162925
    2. '.' → logprob: -7.8754963874816895
    3. '[' → logprob: -9.375496864318848
    4. ' (' → logprob: -11.375496864318848
    5. '(
' → logprob: -11.750496864318848
    6. ',' → logprob: -12.625496864318848
    7. '(`' → logprob: -13.000496864318848
    8. ')' → logprob: -13.750496864318848
    9. '('' → logprob: -13.875496864318848
    10. '(range' → logprob: -14.375496864318848

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11286000162363052
    2. ' range' → logprob: -2.2378599643707275
    3. '	range' → logprob: -11.112859725952148
    4. ' rang' → logprob: -11.987859725952148
    5. 'rang' → logprob: -12.112859725952148
    6. ' ' → logprob: -12.862859725952148
    7. 'r' → logprob: -13.362859725952148
    8. '(range' → logprob: -13.362859725952148
    9. '   ' → logprob: -13.737859725952148
    10. '  ' → logprob: -14.612859725952148

Token 25: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002756366156972945
    2. '(
' → logprob: -8.500275611877441
    3. ')' → logprob: -11.500275611877441
    4. '('' → logprob: -11.625275611877441
    5. '.' → logprob: -11.875275611877441
    6. ' (' → logprob: -11.875275611877441
    7. ',' → logprob: -11.875275611877441
    8. ''' → logprob: -12.500275611877441
    9. '(

' → logprob: -12.500275611877441
    10. '(
' → logprob: -12.750275611877441

Token 26: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003000696888193488
    2. '(
' → logprob: -8.375300407409668
    3. '40' → logprob: -11.625300407409668
    4. '(

' → logprob: -11.750300407409668
    5. 'a' → logprob: -11.875300407409668
    6. '(
' → logprob: -12.125300407409668
    7. '#' → logprob: -12.375300407409668
    8. 's' → logprob: -12.500300407409668
    9. '[' → logprob: -12.500300407409668
    10. '.' → logprob: -12.875300407409668

Token 27: ' Les' (ID: 7029)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1648378223180771
    2. 'for' → logprob: -1.9148378372192383
    3. ' print' → logprob: -6.914837837219238
    4. ' result' → logprob: -7.289837837219238
    5. ' numbers' → logprob: -8.039837837219238
    6. ' sum' → logprob: -8.414837837219238
    7. 'print' → logprob: -8.539837837219238
    8. ' i' → logprob: -8.539837837219238
    9. ' len' → logprob: -8.539837837219238
    10. ' n' → logprob: -8.789837837219238

Token 28: ' deux' (ID: 10301)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.250312864780426
    2. ' valeurs' → logprob: -2.6253128051757812
    3. ' listes' → logprob: -3.3753128051757812
    4. ' données' → logprob: -3.6253128051757812
    5. ' éléments' → logprob: -3.8753128051757812
    6. ' n' → logprob: -4.625312805175781
    7. 'n' → logprob: -4.875312805175781
    8. '_' → logprob: -5.250312805175781
    9. ' sequences' → logprob: -5.250312805175781
    10. ' chaînes' → logprob: -5.625312805175781

Token 29: ' valeurs' (ID: 73668)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.8765840530395508
    2. ' premières' → logprob: -2.251584053039551
    3. ' listes' → logprob: -2.626584053039551
    4. ' lignes' → logprob: -2.751584053039551
    5. ' principales' → logprob: -3.376584053039551
    6. ' ' → logprob: -3.626584053039551
    7. ' premiers' → logprob: -3.751584053039551
    8. ' espaces' → logprob: -3.876584053039551
    9. ' fonctions' → logprob: -4.001584053039551
    10. ' sequences' → logprob: -4.126584053039551

Token 30: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2994060516357422
    2. ' de' → logprob: -2.174406051635742
    3. 's' → logprob: -3.924406051635742
    4. 'de' → logprob: -4.174406051635742
    5. ' d' → logprob: -4.424406051635742
    6. ' a' → logprob: -4.549406051635742
    7. ' =' → logprob: -4.674406051635742
    8. ' initial' → logprob: -4.674406051635742
    9. '  ' → logprob: -4.924406051635742
    10. ')' → logprob: -5.049406051635742

Token 31: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7935068607330322
    2. ' =' → logprob: -0.7935068607330322
    3. ' ' → logprob: -2.7935068607330322
    4. ' ,' → logprob: -4.168506622314453
    5. ' et' → logprob: -4.668506622314453
    6. 'et' → logprob: -5.543506622314453
    7. '=' → logprob: -5.793506622314453
    8. '_' → logprob: -6.668506622314453
    9. 'a' → logprob: -8.793506622314453
    10. 's' → logprob: -8.918506622314453

Token 32: ' K' (ID: 658)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.31327390670776367
    2. 'M' → logprob: -2.0632739067077637
    3. ' K' → logprob: -2.3132739067077637
    4. 'K' → logprob: -3.6882739067077637
    5. ' ' → logprob: -4.938273906707764
    6. ' n' → logprob: -5.813273906707764
    7. 'n' → logprob: -6.438273906707764
    8. 'k' → logprob: -6.688273906707764
    9. ' k' → logprob: -7.438273906707764
    10. 'm' → logprob: -7.688273906707764

Token 33: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.672806441783905
    2. '=' → logprob: -1.2978065013885498
    3. ' sont' → logprob: -1.6728065013885498
    4. ',' → logprob: -4.422806262969971
    5. ' ' → logprob: -5.297806262969971
    6. 's' → logprob: -5.422806262969971
    7. ' ,' → logprob: -6.672806262969971
    8. ' doivent' → logprob: -6.672806262969971
    9. ' ont' → logprob: -7.172806262969971
    10. '#' → logprob: -7.672806262969971

Token 34: ' extr' (ID: 15674)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.390773057937622
    2. ' initial' → logprob: -1.390773057937622
    3. ' défin' → logprob: -1.390773057937622
    4. ' les' → logprob: -3.390773057937622
    5. ' l' → logprob: -3.640773057937622
    6. 'l' → logprob: -3.765773057937622
    7. 'initial' → logprob: -3.765773057937622
    8. ' données' → logprob: -4.015772819519043
    9. ' récup' → logprob: -4.015772819519043
    10. ' ' → logprob: -4.140772819519043

Token 35: 'aites' (ID: 77569)
  Prédit: 'aites'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aites' → logprob: -0.3607540726661682
    2. 'a' → logprob: -1.2357540130615234
    3. 'aits' → logprob: -5.860754013061523
    4. 'ait' → logprob: -5.860754013061523
    5. 'act' → logprob: -6.235754013061523
    6. 'air' → logprob: -6.485754013061523
    7. 'aires' → logprob: -7.235754013061523
    8. 'ai' → logprob: -7.360754013061523
    9. 'ap' → logprob: -8.235754013061523
    10. 'érieures' → logprob: -8.485754013061523

Token 36: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7186203002929688
    2. ' ' → logprob: -1.3436203002929688
    3. ' à' → logprob: -2.2186203002929688
    4. ' =' → logprob: -3.0936203002929688
    5. ' de' → logprob: -3.9686203002929688
    6. 'from' → logprob: -4.718620300292969
    7. ' ,' → logprob: -4.843620300292969
    8. '=' → logprob: -4.968620300292969
    9. ' (' → logprob: -4.968620300292969
    10. '[' → logprob: -4.968620300292969

Token 37: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.013142813928425312
    2. 'input' → logprob: -4.3881425857543945
    3. ' la' → logprob: -8.388142585754395
    4. ' l' → logprob: -8.388142585754395
    5. ' ' → logprob: -9.138142585754395
    6. 'l' → logprob: -10.138142585754395
    7. '(input' → logprob: -11.638142585754395
    8. ' ' → logprob: -11.763142585754395
    9. 'la' → logprob: -12.388142585754395
    10. '=input' → logprob: -12.888142585754395

Token 38: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.39158928394317627
    2. ''entrée' → logprob: -1.5165892839431763
    3. 'a' → logprob: -2.8915891647338867
    4. ''' → logprob: -3.2665891647338867
    5. 'entrée' → logprob: -5.766589164733887
    6. ' input' → logprob: -6.266589164733887
    7. ''utilisateur' → logprob: -6.391589164733887
    8. 'e' → logprob: -6.516589164733887
    9. 'es' → logprob: -7.391589164733887
    10. '`' → logprob: -8.141589164733887

Token 39: ' utilisateur' (ID: 115595)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.244489386677742
    2. ' =' → logprob: -2.1194894313812256
    3. '[' → logprob: -2.6194894313812256
    4. ',' → logprob: -5.7444891929626465
    5. 's' → logprob: -5.8694891929626465
    6. '=' → logprob: -6.1194891929626465
    7. ' (' → logprob: -6.4944891929626465
    8. '[]' → logprob: -6.4944891929626465
    9. ' ,' → logprob: -6.6194891929626465
    10. ' )' → logprob: -6.7444891929626465

Token 40: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5035547018051147
    2. ' =' → logprob: -1.1285547018051147
    3. '=' → logprob: -4.378554821014404
    4. ',' → logprob: -4.378554821014404
    5. ' ' → logprob: -4.503554821014404
    6. 'n' → logprob: -4.503554821014404
    7. 's' → logprob: -5.128554821014404
    8. '[n' → logprob: -6.128554821014404
    9. 'a' → logprob: -6.378554821014404
    10. 'r' → logprob: -6.628554821014404

Token 41: ' sépar' (ID: 97160)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5817959308624268
    2. 'input' → logprob: -0.9567959308624268
    3. ' ' → logprob: -3.2067959308624268
    4. ' ' → logprob: -5.581795692443848
    5. '=input' → logprob: -5.831795692443848
    6. '*' → logprob: -5.831795692443848
    7. '0' → logprob: -6.706795692443848
    8. 's' → logprob: -7.081795692443848
    9. ',' → logprob: -7.331795692443848
    10. ' map' → logprob: -8.206795692443848

Token 42: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.8274030685424805
    2. 'ées' → logprob: -0.8274030685424805
    3. 'é' → logprob: -2.0774030685424805
    4. 'és' → logprob: -8.20240306854248
    5. 'e' → logprob: -10.32740306854248
    6. 'è' → logprob: -11.20240306854248
    7. 'er' → logprob: -11.70240306854248
    8. '```' → logprob: -11.82740306854248
    9. ' é' → logprob: -11.95240306854248
    10. 'É' → logprob: -12.32740306854248

Token 43: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1308838278055191
    2. 'par' → logprob: -2.1308839321136475
    3. 'e' → logprob: -6.505883693695068
    4. '_par' → logprob: -7.380883693695068
    5. 'es' → logprob: -7.880883693695068
    6. '```' → logprob: -8.505884170532227
    7. ')' → logprob: -9.005884170532227
    8. '<|end|>' → logprob: -9.130884170532227
    9. ' by' → logprob: -9.255884170532227
    10. ' ' → logprob: -9.255884170532227

Token 44: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7691758275032043
    2. ''un' → logprob: -1.6441757678985596
    3. ' un' → logprob: -2.0191757678985596
    4. ''' → logprob: -2.2691757678985596
    5. 'space' → logprob: -3.7691757678985596
    6. ' ' → logprob: -3.7691757678985596
    7. ''espace' → logprob: -4.144176006317139
    8. 'l' → logprob: -4.394176006317139
    9. ' ' → logprob: -5.394176006317139
    10. ' espace' → logprob: -6.019176006317139

Token 45: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.6390805840492249
    2. 'es' → logprob: -0.8890805840492249
    3. ''espace' → logprob: -3.51408052444458
    4. ' ' → logprob: -4.13908052444458
    5. 'esp' → logprob: -5.13908052444458
    6. ' espaces' → logprob: -5.88908052444458
    7. 'space' → logprob: -6.13908052444458
    8. '’espace' → logprob: -6.26408052444458
    9. ''esp' → logprob: -6.76408052444458
    10. 'e' → logprob: -8.139081001281738

Token 46: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9413032531738281
    2. '=' → logprob: -1.8163032531738281
    3. 'n' → logprob: -1.8163032531738281
    4. '[' → logprob: -1.9413032531738281
    5. 'input' → logprob: -3.441303253173828
    6. 's' → logprob: -4.066303253173828
    7. 'N' → logprob: -4.441303253173828
    8. ',' → logprob: -4.441303253173828
    9. 'x' → logprob: -4.941303253173828
    10. '.' → logprob: -5.191303253173828

Token 47: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0797158032655716
    2. 'n' → logprob: -2.7047157287597656
    3. ' N' → logprob: -4.829715728759766
    4. ' 
' → logprob: -8.204715728759766
    5. 'input' → logprob: -8.329715728759766
    6. '
' → logprob: -8.829715728759766
    7. '```' → logprob: -8.954715728759766
    8. 'user' → logprob: -9.329715728759766
    9. 'data' → logprob: -9.454715728759766
    10. '[' → logprob: -9.579715728759766

Token 48: ' int' (ID: 677)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03478606417775154
    2. ' N' → logprob: -3.9097859859466553
    3. 'n' → logprob: -4.284786224365234
    4. ' n' → logprob: -9.409786224365234
    5. '```' → logprob: -10.034786224365234
    6. ' ' → logprob: -10.159786224365234
    7. 'input' → logprob: -10.284786224365234
    8. ' 
' → logprob: -10.847286224365234
    9. ' `' → logprob: -11.534786224365234
    10. 'data' → logprob: -11.597286224365234

Token 49: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.546676516532898
    2. 's' → logprob: -1.171676516532898
    3. '()' → logprob: -2.9216766357421875
    4. '(input' → logprob: -3.9216766357421875
    5. '_input' → logprob: -4.6716766357421875
    6. '_' → logprob: -4.7966766357421875
    7. '_values' → logprob: -5.7966766357421875
    8. 'input' → logprob: -6.4216766357421875
    9. '_val' → logprob: -6.7966766357421875
    10. 'user' → logprob: -6.9216766357421875

Token 50: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08095911890268326
    2. '(input' → logprob: -2.7059590816497803
    3. '()' → logprob: -5.830959320068359
    4. '(
' → logprob: -6.580959320068359
    5. 's' → logprob: -6.955959320068359
    6. '(int' → logprob: -7.205959320068359
    7. '(*' → logprob: -7.205959320068359
    8. '(s' → logprob: -7.205959320068359
    9. 'input' → logprob: -7.580959320068359
    10. ')' → logprob: -7.705959320068359

Token 51: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.15545755624771118
    2. 'i' → logprob: -2.1554574966430664
    3. 'ies' → logprob: -5.030457496643066
    4. 'issent' → logprob: -5.030457496643066
    5. 'ie' → logprob: -5.530457496643066
    6. 'is' → logprob: -5.905457496643066
    7. 'e' → logprob: -6.155457496643066
    8. 'issez' → logprob: -6.655457496643066
    9. 'issant' → logprob: -6.780457496643066
    10. 'ir' → logprob: -7.280457496643066

Token 52: ' les' (ID: 1341)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0821901261806488
    2. '(' → logprob: -2.7071900367736816
    3. 'input' → logprob: -5.207190036773682
    4. ' input' → logprob: -6.082190036773682
    5. 's' → logprob: -6.582190036773682
    6. 'l' → logprob: -7.707190036773682
    7. '(l' → logprob: -7.832190036773682
    8. '=input' → logprob: -7.957190036773682
    9. ' l' → logprob: -8.08219051361084
    10. ' la' → logprob: -8.20719051361084

Token 53: ' chaînes' (ID: 179904)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.821302056312561
    2. '(input' → logprob: -0.946302056312561
    3. ' input' → logprob: -1.821302056312561
    4. '(' → logprob: -5.9463019371032715
    5. 'entrée' → logprob: -6.1963019371032715
    6. 's' → logprob: -6.5713019371032715
    7. '=input' → logprob: -7.3213019371032715
    8. 'val' → logprob: -7.4463019371032715
    9. ' ' → logprob: -7.5713019371032715
    10. 'chaine' → logprob: -7.5713019371032715

Token 54: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4612330496311188
    2. ' de' → logprob: -2.711233139038086
    3. ' ' → logprob: -3.211233139038086
    4. ' d' → logprob: -3.211233139038086
    5. ' des' → logprob: -3.336233139038086
    6. ' input' → logprob: -3.586233139038086
    7. ')' → logprob: -3.711233139038086
    8. '(' → logprob: -4.086233139038086
    9. ' )' → logprob: -4.086233139038086
    10. 'de' → logprob: -4.461233139038086

Token 55: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.5617210268974304
    2. ' nombres' → logprob: -1.8117210865020752
    3. 'ent' → logprob: -2.186721086502075
    4. ' ' → logprob: -2.936721086502075
    5. ' entier' → logprob: -3.061721086502075
    6. ' integers' → logprob: -3.561721086502075
    7. ' des' → logprob: -4.311720848083496
    8. ' int' → logprob: -5.436720848083496
    9. ' nombre' → logprob: -5.561720848083496
    10. ' ' → logprob: -6.186720848083496

Token 56: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.01521097682416439
    2. 't' → logprob: -4.89021110534668
    3. 'ti' → logprob: -5.64021110534668
    4. 'ières' → logprob: -6.14021110534668
    5. 'i' → logprob: -6.76521110534668
    6. '```' → logprob: -8.01521110534668
    7. 'tiers' → logprob: -8.76521110534668
    8. 'ière' → logprob: -9.39021110534668
    9. 'ier' → logprob: -10.26521110534668
    10. '#' → logprob: -11.01521110534668

Token 57: '.
' (ID: 558)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00678629707545042
    2. '(
' → logprob: -6.506786346435547
    3. 's' → logprob: -6.756786346435547
    4. '(n' → logprob: -7.006786346435547
    5. '(input' → logprob: -7.506786346435547
    6. '(N' → logprob: -7.506786346435547
    7. 'input' → logprob: -7.756786346435547
    8. '()' → logprob: -8.006786346435547
    9. '(int' → logprob: -8.381786346435547
    10. ',' → logprob: -8.631786346435547

Token 58: '#' (ID: 2)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.09860825538635254
    2. 'n' → logprob: -2.4736082553863525
    3. ' N' → logprob: -5.223608016967773
    4. '
' → logprob: -6.973608016967773
    5. ' 
' → logprob: -7.223608016967773
    6. '```' → logprob: -7.348608016967773
    7. '\n' → logprob: -8.098608016967773
    8. 's' → logprob: -8.473608016967773
    9. '[N' → logprob: -8.598608016967773
    10. 'a' → logprob: -8.848608016967773

Token 59: ' split' (ID: 12648)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03425053879618645
    2. ' N' → logprob: -3.409250497817993
    3. 'n' → logprob: -7.534250736236572
    4. '```' → logprob: -11.284250259399414
    5. ' n' → logprob: -11.659250259399414
    6. 'input' → logprob: -11.909250259399414
    7. ' ' → logprob: -12.159250259399414
    8. '#' → logprob: -12.284250259399414
    9. 'data' → logprob: -12.784250259399414
    10. ' ' → logprob: -12.909250259399414

Token 60: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07628130912780762
    2. '(' → logprob: -2.7012813091278076
    3. '('' → logprob: -5.076281547546387
    4. '("' → logprob: -10.326281547546387
    5. '("("' → logprob: -11.076281547546387
    6. '()]' → logprob: -11.576281547546387
    7. '().' → logprob: -12.576281547546387
    8. '())' → logprob: -12.826281547546387
    9. ' ()' → logprob: -12.951281547546387
    10. '(None' → logprob: -13.076281547546387

Token 61: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004394036717712879
    2. '(' → logprob: -5.504394054412842
    3. ' ()' → logprob: -9.129393577575684
    4. '('' → logprob: -9.379393577575684
    5. ')' → logprob: -10.629393577575684
    6. '<|end|>' → logprob: -11.129393577575684
    7. '())' → logprob: -11.379393577575684
    8. '().' → logprob: -11.629393577575684
    9. 'split' → logprob: -11.754393577575684
    10. '()]' → logprob: -11.879393577575684

Token 62: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.024168096482753754
    2. 'p' → logprob: -3.774168014526367
    3. 'page' → logprob: -8.024168014526367
    4. 'пе' → logprob: -8.774168014526367
    5. 'per' → logprob: -9.274168014526367
    6. 'pte' → logprob: -9.774168014526367
    7. 'п' → logprob: -9.899168014526367
    8. 'upe' → logprob: -10.024168014526367
    9. '```' → logprob: -10.149168014526367
    10. 'pé' → logprob: -10.399168014526367

Token 63: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07145435363054276
    2. '('' → logprob: -2.8214542865753174
    3. 'l' → logprob: -4.9464545249938965
    4. '(' → logprob: -7.4464545249938965
    5. ' l' → logprob: -8.071454048156738
    6. ''' → logprob: -8.071454048156738
    7. 'la' → logprob: -8.446454048156738
    8. '("' → logprob: -8.571454048156738
    9. 'input' → logprob: -8.571454048156738
    10. ' la' → logprob: -9.321454048156738

Token 64: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.08678273111581802
    2. 'chaine' → logprob: -2.836782693862915
    3. 'entrée' → logprob: -4.711782932281494
    4. ' chaine' → logprob: -4.961782932281494
    5. 'cha' → logprob: -5.836782932281494
    6. 'ligne' → logprob: -6.336782932281494
    7. ' ligne' → logprob: -6.586782932281494
    8. 'input' → logprob: -7.586782932281494
    9. 'string' → logprob: -7.961782932281494
    10. 's' → logprob: -8.086782455444336

Token 65: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004332795273512602
    2. '('' → logprob: -5.879333019256592
    3. 'input' → logprob: -8.504332542419434
    4. ' ()' → logprob: -8.504332542419434
    5. '(' → logprob: -8.629332542419434
    6. ')' → logprob: -8.629332542419434
    7. '("' → logprob: -8.754332542419434
    8. ' )' → logprob: -9.254332542419434
    9. '('\' → logprob: -9.879332542419434
    10. '()[' → logprob: -10.129332542419434

Token 66: ' fonction' (ID: 17610)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.4535656273365021
    2. ''' → logprob: -1.9535655975341797
    3. '['' → logprob: -3.3285655975341797
    4. ' '' → logprob: -3.3285655975341797
    5. ' espace' → logprob: -3.3285655975341797
    6. ''espace' → logprob: -4.07856559753418
    7. ' une' → logprob: -4.20356559753418
    8. ' ['' → logprob: -4.57856559753418
    9. ' tokens' → logprob: -5.07856559753418
    10. ' chaînes' → logprob: -5.07856559753418

Token 67: ' des' (ID: 731)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.12528614699840546
    2. ' d' → logprob: -3.125286102294922
    3. ' de' → logprob: -3.500286102294922
    4. 'du' → logprob: -4.000286102294922
    5. ' des' → logprob: -4.375286102294922
    6. 'd' → logprob: -5.000286102294922
    7. 'de' → logprob: -6.125286102294922
    8. 'des' → logprob: -6.250286102294922
    9. 's' → logprob: -6.625286102294922
    10. 'del' → logprob: -9.125286102294922

Token 68: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.06715807318687439
    2. 'esp' → logprob: -2.8171579837799072
    3. ''esp' → logprob: -5.567158222198486
    4. 'es' → logprob: -7.067158222198486
    5. ''espace' → logprob: -8.692157745361328
    6. ' espace' → logprob: -9.192157745361328
    7. ' esp' → logprob: -10.067157745361328
    8. 'spaces' → logprob: -10.192157745361328
    9. ' espacios' → logprob: -10.192157745361328
    10. ' ' → logprob: -10.442157745361328

Token 69: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20180827379226685
    2. '.' → logprob: -2.451808214187622
    3. '(' → logprob: -3.826808214187622
    4. ',' → logprob: -3.951808214187622
    5. '().' → logprob: -4.826808452606201
    6. 's' → logprob: -4.951808452606201
    7. '()
' → logprob: -4.951808452606201
    8. '(
' → logprob: -4.951808452606201
    9. ')' → logprob: -5.701808452606201
    10. 'user' → logprob: -5.951808452606201

Token 70: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06499963998794556
    2. 'n' → logprob: -3.064999580383301
    3. 'input' → logprob: -4.689999580383301
    4. 's' → logprob: -6.939999580383301
    5. 'user' → logprob: -7.189999580383301
    6. ' N' → logprob: -7.314999580383301
    7. ' =' → logprob: -7.564999580383301
    8. '=' → logprob: -7.814999580383301
    9. 'x' → logprob: -7.814999580383301
    10. '```' → logprob: -8.0649995803833

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019759766291826963
    2. ',K' → logprob: -6.251976013183594
    3. ' ,' → logprob: -10.501976013183594
    4. ',k' → logprob: -11.501976013183594
    5. ',N' → logprob: -12.126976013183594
    6. ',R' → logprob: -13.876976013183594
    7. ',n' → logprob: -15.001976013183594
    8. ',C' → logprob: -15.001976013183594
    9. ',int' → logprob: -15.126976013183594
    10. 'K' → logprob: -15.501976013183594

Token 72: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.04469232261180878
    2. 'K' → logprob: -3.169692277908325
    3. ' ' → logprob: -6.419692516326904
    4. '<|end|>' → logprob: -10.169692039489746
    5. ' ' → logprob: -11.669692039489746
    6. '  ' → logprob: -11.919692039489746
    7. '=' → logprob: -12.419692039489746
    8. ' =' → logprob: -13.794692039489746
    9. ',' → logprob: -14.294692039489746
    10. ' ' → logprob: -14.419692039489746

Token 73: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931501030921936
    2. ' =' → logprob: -0.6931501030921936
    3. '=input' → logprob: -13.693150520324707
    4. ',' → logprob: -14.068150520324707
    5. '=int' → logprob: -15.443150520324707
    6. ')' → logprob: -15.443150520324707
    7. '＝' → logprob: -15.818150520324707
    8. ' ' → logprob: -16.94314956665039
    9. ' ' → logprob: -17.06814956665039
    10. '=

' → logprob: -17.31814956665039

Token 74: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0052966042421758175
    2. 'map' → logprob: -5.25529670715332
    3. ' int' → logprob: -10.13029670715332
    4. 'int' → logprob: -11.38029670715332
    5. ' ' → logprob: -12.13029670715332
    6. ' list' → logprob: -13.25529670715332
    7. '	map' → logprob: -13.75529670715332
    8. ' ' → logprob: -13.88029670715332
    9. ' [' → logprob: -14.38029670715332
    10. ' input' → logprob: -14.50529670715332

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038109082728624344
    2. '(' → logprob: -3.288109064102173
    3. '(
' → logprob: -10.663108825683594
    4. 'int' → logprob: -10.788108825683594
    5. '(str' → logprob: -11.288108825683594
    6. '(lambda' → logprob: -12.038108825683594
    7. '(input' → logprob: -13.288108825683594
    8. ' (' → logprob: -13.663108825683594
    9. '<int' → logprob: -14.663108825683594
    10. '(

' → logprob: -14.788108825683594

Token 76: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08953443169593811
    2. 'input' → logprob: -2.5895345211029053
    3. ',input' → logprob: -4.714534282684326
    4. '(' → logprob: -7.464534282684326
    5. ' input' → logprob: -7.839534282684326
    6. ')' → logprob: -8.089534759521484
    7. ',' → logprob: -8.464534759521484
    8. ' (' → logprob: -9.839534759521484
    9. '=input' → logprob: -10.214534759521484
    10. '```' → logprob: -11.339534759521484

Token 77: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07896381616592407
    2. ' input' → logprob: -2.5789637565612793
    3. ')' → logprob: -10.328964233398438
    4. '(input' → logprob: -10.328964233398438
    5. '=input' → logprob: -13.328964233398438
    6. '   ' → logprob: -13.453964233398438
    7. ' ' → logprob: -13.828964233398438
    8. ',input' → logprob: -13.828964233398438
    9. '<input' → logprob: -13.953964233398438
    10. '	input' → logprob: -14.078964233398438

Token 78: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014203863975126296
    2. '()' → logprob: -8.875142097473145
    3. ' ().' → logprob: -13.375142097473145
    4. '())' → logprob: -15.250142097473145
    5. '(' → logprob: -15.750142097473145
    6. ')' → logprob: -15.875142097473145
    7. '.' → logprob: -17.875141143798828
    8. '('').' → logprob: -18.250141143798828
    9. '("").' → logprob: -18.500141143798828
    10. '("' → logprob: -18.625141143798828

Token 79: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016265720478259027
    2. 'strip' → logprob: -8.750163078308105
    3. ' split' → logprob: -12.625163078308105
    4. '(split' → logprob: -14.875163078308105
    5. ')' → logprob: -15.125163078308105
    6. 'rstrip' → logprob: -15.875163078308105
    7. 'spl' → logprob: -16.87516212463379
    8. '.split' → logprob: -16.87516212463379
    9. '().' → logprob: -17.37516212463379
    10. '```' → logprob: -18.37516212463379

Token 80: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00544553529471159
    2. '()' → logprob: -6.13044548034668
    3. '('' → logprob: -6.38044548034668
    4. '()))' → logprob: -7.00544548034668
    5. ')' → logprob: -7.63044548034668
    6. '(' → logprob: -9.25544548034668
    7. ' ())' → logprob: -10.50544548034668
    8. '("' → logprob: -11.00544548034668
    9. '))' → logprob: -11.88044548034668
    10. '(()' → logprob: -12.50544548034668

Token 81: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3865065574645996
    2. 'for' → logprob: -2.1365065574645996
    3. '
' → logprob: -2.8865065574645996
    4. ')' → logprob: -3.0115065574645996
    5. '<|end|>' → logprob: -3.8865065574645996
    6. ' ' → logprob: -4.0115065574646
    7. ',' → logprob: -4.2615065574646
    8. ' 
' → logprob: -4.5115065574646
    9. ' for' → logprob: -4.7615065574646
    10. '#' → logprob: -5.0115065574646

Token 82: ' Q' (ID: 1486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38110607862472534
    2. ' for' → logprob: -2.25610613822937
    3. '#' → logprob: -2.38110613822937
    4. 'result' → logprob: -3.00610613822937
    5. ' result' → logprob: -3.38110613822937
    6. 's' → logprob: -4.006105899810791
    7. 'count' → logprob: -6.256105899810791
    8. 'def' → logprob: -6.506105899810791
    9. 'if' → logprob: -6.506105899810791
    10. ' #' → logprob: -6.631105899810791

Token 83: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23137813806533813
    2. '=' → logprob: -1.7313780784606934
    3. 'u' → logprob: -3.8563780784606934
    4. 'ues' → logprob: -5.981378078460693
    5. 's' → logprob: -6.481378078460693
    6. 'ue' → logprob: -6.606378078460693
    7. '.' → logprob: -7.106378078460693
    8. '_' → logprob: -7.856378078460693
    9. '=[]' → logprob: -7.981378078460693
    10. 'ual' → logprob: -8.356378555297852

Token 84: ' un' (ID: 537)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.49135124683380127
    2. '[]' → logprob: -1.2413512468338013
    3. ' int' → logprob: -3.4913511276245117
    4. 'int' → logprob: -3.6163511276245117
    5. '[int' → logprob: -5.116351127624512
    6. ' R' → logprob: -5.116351127624512
    7. ' [' → logprob: -5.241351127624512
    8. ' K' → logprob: -5.491351127624512
    9. ' =' → logprob: -5.741351127624512
    10. '[' → logprob: -5.866351127624512

Token 85: ' objet' (ID: 13839)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4552275240421295
    2. '[]' → logprob: -2.5802276134490967
    3. '=int' → logprob: -2.5802276134490967
    4. ' int' → logprob: -3.4552276134490967
    5. '[int' → logprob: -3.5802276134490967
    6. 'e' → logprob: -3.5802276134490967
    7. 'ue' → logprob: -4.080227375030518
    8. 'ent' → logprob: -4.205227375030518
    9. 's' → logprob: -4.455227375030518
    10. ' =' → logprob: -4.705227375030518

Token 86: ' range' (ID: 3352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25209465622901917
    2. '=' → logprob: -1.8770946264266968
    3. 'range' → logprob: -3.6270947456359863
    4. '=list' → logprob: -5.002094745635986
    5. 'list' → logprob: -5.127094745635986
    6. '=[]' → logprob: -5.252094745635986
    7. 'deque' → logprob: -5.377094745635986
    8. '[]' → logprob: -5.752094745635986
    9. '=int' → logprob: -5.752094745635986
    10. '.' → logprob: -5.877094745635986

Token 87: ' allant' (ID: 122150)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20406979322433472
    2. '(N' → logprob: -2.4540698528289795
    3. '(Q' → logprob: -2.5790698528289795
    4. '(K' → logprob: -4.5790696144104
    5. '(range' → logprob: -4.7040696144104
    6. '(R' → logprob: -6.0790696144104
    7. '(
' → logprob: -8.454070091247559
    8. ')' → logprob: -8.579070091247559
    9. '(start' → logprob: -8.954070091247559
    10. 'Q' → logprob: -9.829070091247559

Token 88: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40941083431243896
    2. 'de' → logprob: -1.159410834312439
    3. 'from' → logprob: -4.5344109535217285
    4. ' jusqu' → logprob: -5.0344109535217285
    5. ' from' → logprob: -5.6594109535217285
    6. ' du' → logprob: -7.2844109535217285
    7. ' jusque' → logprob: -8.28441047668457
    8. 'jus' → logprob: -8.40941047668457
    9. 'du' → logprob: -9.15941047668457
    10. '(' → logprob: -9.15941047668457

Token 89: ' ' (ID: 220)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.7751075625419617
    2. '(' → logprob: -0.9001075625419617
    3. '(N' → logprob: -2.0251076221466064
    4. '1' → logprob: -8.275107383728027
    5. '(
' → logprob: -8.650107383728027
    6. 'K' → logprob: -9.150107383728027
    7. '(Q' → logprob: -9.275107383728027
    8. '0' → logprob: -9.900107383728027
    9. '(R' → logprob: -10.650107383728027
    10. '(k' → logprob: -11.025107383728027

Token 90: '0' (ID: 15)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -1.0324101448059082
    2. '(' → logprob: -1.2824101448059082
    3. '0' → logprob: -2.032410144805908
    4. 'K' → logprob: -2.407410144805908
    5. '1' → logprob: -2.657410144805908
    6. '(N' → logprob: -2.782410144805908
    7. 'N' → logprob: -4.782410144805908
    8. '(Q' → logprob: -6.782410144805908
    9. '2' → logprob: -7.157410144805908
    10. 'Q' → logprob: -7.532410144805908

Token 91: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05748162418603897
    2. ' ' → logprob: -3.557481527328491
    3. 'à' → logprob: -4.18248176574707
    4. '<|end|>' → logprob: -5.80748176574707
    5. ' to' → logprob: -6.30748176574707
    6. ',' → logprob: -6.30748176574707
    7. ' jusqu' → logprob: -6.43248176574707
    8. ')' → logprob: -7.18248176574707
    9. '  ' → logprob: -7.68248176574707
    10. '```' → logprob: -7.80748176574707

Token 92: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5850803256034851
    2. ' K' → logprob: -1.0850803852081299
    3. 'N' → logprob: -2.58508038520813
    4. ' N' → logprob: -3.83508038520813
    5. ' ' → logprob: -4.835080146789551
    6. '	K' → logprob: -10.46008014678955
    7. '  ' → logprob: -10.96008014678955
    8. ' ' → logprob: -11.21008014678955
    9. 'Q' → logprob: -11.46008014678955
    10. '	N' → logprob: -11.83508014678955

Token 93: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022387992590665817
    2. ' +' → logprob: -5.272387981414795
    3. 'Q' → logprob: -5.522387981414795
    4. ')' → logprob: -5.522387981414795
    5. '.' → logprob: -5.647387981414795
    6. '(' → logprob: -6.397387981414795
    7. '#' → logprob: -6.897387981414795
    8. ',' → logprob: -7.272387981414795
    9. '-' → logprob: -7.647387981414795
    10. '```' → logprob: -8.147388458251953

Token 94: ' (' (ID: 350)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.09385668486356735
    2. '(Q' → logprob: -3.0938565731048584
    3. '(' → logprob: -3.2188565731048584
    4. '+' → logprob: -6.7188568115234375
    5. ' Q' → logprob: -7.3438568115234375
    6. '(
' → logprob: -7.5938568115234375
    7. ' =' → logprob: -8.093856811523438
    8. '(N' → logprob: -8.218856811523438
    9. ' (' → logprob: -8.468856811523438
    10. ',' → logprob: -8.593856811523438

Token 95: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4466519355773926
    2. 'N' → logprob: -1.0716519355773926
    3. ' N' → logprob: -4.696651935577393
    4. ',' → logprob: -5.196651935577393
    5. ' )' → logprob: -6.571651935577393
    6. '+' → logprob: -7.071651935577393
    7. ')
' → logprob: -8.696651458740234
    8. '(N' → logprob: -9.321651458740234
    9. '):' → logprob: -9.696651458740234
    10. ':' → logprob: -9.821651458740234

Token 96: ' range' (ID: 3352)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.3728106617927551
    2. 'range' → logprob: -2.1228106021881104
    3. ' range' → logprob: -2.3728106021881104
    4. 'N' → logprob: -2.4978106021881104
    5. ' K' → logprob: -4.6228108406066895
    6. ' on' → logprob: -5.9978108406066895
    7. 'K' → logprob: -6.4978108406066895
    8. ' ' → logprob: -7.1228108406066895
    9. 'Q' → logprob: -8.247810363769531
    10. ' Q' → logprob: -8.497810363769531

Token 97: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.031373120844364166
    2. '(' → logprob: -3.6563730239868164
    3. ')' → logprob: -6.281373023986816
    4. ',' → logprob: -7.156373023986816
    5. 's' → logprob: -7.281373023986816
    6. ' (' → logprob: -7.531373023986816
    7. 'N' → logprob: -8.281373023986816
    8. '(n' → logprob: -8.656373023986816
    9. ')(' → logprob: -9.281373023986816
    10. '(K' → logprob: -9.406373023986816

Token 98: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.054912976920604706
    2. ' +' → logprob: -2.92991304397583
    3. ')' → logprob: -11.679912567138672
    4. '1' → logprob: -12.554912567138672
    5. ' plus' → logprob: -12.679912567138672
    6. ' ' → logprob: -12.804912567138672
    7. '+)' → logprob: -13.054912567138672
    8. '+
' → logprob: -13.179912567138672
    9. ')+' → logprob: -13.179912567138672
    10. '<|end|>' → logprob: -14.179912567138672

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. ')' → logprob: -13.500060081481934
    4. '2' → logprob: -16.12506103515625
    5. '

' → logprob: -16.12506103515625
    6. '```' → logprob: -16.62506103515625
    7. '))' → logprob: -16.68756103515625
    8. ' ' → logprob: -17.25006103515625
    9. '+' → logprob: -17.43756103515625
    10. '
' → logprob: -17.62506103515625

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034730788320302963
    2. '+' → logprob: -5.753473281860352
    3. '))' → logprob: -8.628473281860352
    4. ' )' → logprob: -9.628473281860352
    5. ' +' → logprob: -11.628473281860352
    6. ')))' → logprob: -12.128473281860352
    7. '(' → logprob: -12.503473281860352
    8. '),' → logprob: -12.628473281860352
    9. '#' → logprob: -12.628473281860352
    10. ')
' → logprob: -12.753473281860352

Token 101: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014489953173324466
    2. ' )' → logprob: -9.125144958496094
    3. '+' → logprob: -10.625144958496094
    4. ')
' → logprob: -12.875144958496094
    5. '),' → logprob: -13.375144958496094
    6. ').' → logprob: -13.625144958496094
    7. ')

' → logprob: -13.625144958496094
    8. '))' → logprob: -13.750144958496094
    9. ',' → logprob: -14.250144958496094
    10. '+)' → logprob: -15.000144958496094

Token 102: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.495127409696579
    2. 'er' → logprob: -1.2451274394989014
    3. 'ert' → logprob: -3.6201274394989014
    4. 'ont' → logprob: -4.245127201080322
    5. ''arr' → logprob: -4.745127201080322
    6. ''ét' → logprob: -4.995127201080322
    7. '')' → logprob: -5.120127201080322
    8. ''' → logprob: -5.745127201080322
    9. 'uff' → logprob: -5.870127201080322
    10. ''util' → logprob: -5.995127201080322

Token 103: 'ête' (ID: 16808)
  Prédit: 'rt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rt' → logprob: -0.4671083390712738
    2. 'pt' → logprob: -2.3421082496643066
    3. 'nd' → logprob: -3.0921082496643066
    4. 'ont' → logprob: -3.4671082496643066
    5. 'pp' → logprob: -3.5921082496643066
    6. 'end' → logprob: -3.7171082496643066
    7. 'ut' → logprob: -4.467108249664307
    8. 'it' → logprob: -4.592108249664307
    9. 'upt' → logprob: -4.717108249664307
    10. 'rch' → logprob: -4.717108249664307

Token 104: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14299488067626953
    2. ' à' → logprob: -2.7679948806762695
    3. '<|end|>' → logprob: -3.3929948806762695
    4. ' jusqu' → logprob: -4.2679948806762695
    5. ' au' → logprob: -4.3929948806762695
    6. ' )' → logprob: -6.2679948806762695
    7. ',' → logprob: -6.2679948806762695
    8. ' at' → logprob: -6.3929948806762695
    9. 'au' → logprob: -6.5179948806762695
    10. 'à' → logprob: -6.8929948806762695

Token 105: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5759938359260559
    2. ' N' → logprob: -0.8259938359260559
    3. ')' → logprob: -10.075993537902832
    4. ' ' → logprob: -11.825993537902832
    5. '	N' → logprob: -14.325993537902832
    6. ' ' → logprob: -14.450993537902832
    7. 'K' → logprob: -14.575993537902832
    8. '(N' → logprob: -14.825993537902832
    9. 'n' → logprob: -14.825993537902832
    10. ' K' → logprob: -15.075993537902832

Token 106: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04362760856747627
    2. ' +' → logprob: -3.5436275005340576
    3. ')' → logprob: -4.293627738952637
    4. '+)' → logprob: -9.668627738952637
    5. ' )' → logprob: -10.543627738952637
    6. '),' → logprob: -11.793627738952637
    7. '))' → logprob: -11.918627738952637
    8. ' plus' → logprob: -12.168627738952637
    9. ',' → logprob: -12.918627738952637
    10. '+
' → logprob: -13.168627738952637

Token 107: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -5.319370302458992e-06
    2. ' Q' → logprob: -12.750005722045898
    3. '
' → logprob: -14.750005722045898
    4. '#' → logprob: -14.875005722045898
    5. '`' → logprob: -15.125005722045898
    6. '```' → logprob: -15.250005722045898
    7. '(Q' → logprob: -16.0000057220459
    8. '(' → logprob: -16.1250057220459
    9. '	Q' → logprob: -16.1250057220459
    10. '`
' → logprob: -16.2500057220459

Token 108: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0962393581867218
    2. ' =' → logprob: -2.8462393283843994
    3. '=' → logprob: -3.5962393283843994
    4. '(N' → logprob: -5.3462395668029785
    5. ' (' → logprob: -7.3462395668029785
    6. '(range' → logprob: -7.4712395668029785
    7. '(R' → logprob: -9.34623908996582
    8. '(
' → logprob: -9.59623908996582
    9. ')' → logprob: -10.72123908996582
    10. '(Q' → logprob: -11.09623908996582

Token 109: ' R' (ID: 460)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6329848170280457
    2. ' range' → logprob: -0.7579848170280457
    3. ' R' → logprob: -8.50798511505127
    4. 'R' → logprob: -8.75798511505127
    5. 'Range' → logprob: -12.00798511505127
    6. '(range' → logprob: -12.13298511505127
    7. '	range' → logprob: -12.13298511505127
    8. ' ' → logprob: -13.13298511505127
    9. 'r' → logprob: -13.25798511505127
    10. '   ' → logprob: -13.50798511505127

Token 110: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00041518008220009506
    2. '(' → logprob: -7.875415325164795
    3. ' (' → logprob: -10.500414848327637
    4. 'N' → logprob: -12.250414848327637
    5. '(
' → logprob: -14.000414848327637
    6. '((' → logprob: -14.000414848327637
    7. '(Q' → logprob: -15.000414848327637
    8. '(n' → logprob: -15.750414848327637
    9. '(R' → logprob: -15.750414848327637
    10. '(K' → logprob: -15.875414848327637

Token 111: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019300628919154406
    2. ' +' → logprob: -6.251930236816406
    3. ')' → logprob: -14.376930236816406
    4. ')+' → logprob: -14.876930236816406
    5. '+
' → logprob: -15.126930236816406
    6. '+)' → logprob: -16.751930236816406
    7. '()+' → logprob: -17.001930236816406
    8. '1' → logprob: -17.501930236816406
    9. '＋' → logprob: -17.626930236816406
    10. '+

' → logprob: -17.876930236816406

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.625866030342877e-05
    2. ' ' → logprob: -9.375085830688477
    3. ')' → logprob: -13.875085830688477
    4. '   ' → logprob: -15.625085830688477
    5. '```' → logprob: -15.875085830688477
    6. '  ' → logprob: -17.750085830688477
    7. '`' → logprob: -18.125085830688477
    8. '+' → logprob: -18.687585830688477
    9. '=' → logprob: -18.937585830688477
    10. '#' → logprob: -18.937585830688477

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ')' → logprob: -13.375001907348633
    3. ' ' → logprob: -16.000001907348633
    4. '```' → logprob: -20.625001907348633
    5. ')
' → logprob: -21.125001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '１' → logprob: -22.000001907348633
    8. '۱' → logprob: -22.125001907348633
    9. '`)' → logprob: -22.500001907348633
    10. '2' → logprob: -22.625001907348633

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. '))' → logprob: -15.250003814697266
    4. ')
' → logprob: -15.375003814697266
    5. '),' → logprob: -15.750003814697266
    6. ')`' → logprob: -17.500003814697266
    7. ')

' → logprob: -17.625003814697266
    8. ')#' → logprob: -17.750003814697266
    9. '`)' → logprob: -18.625003814697266
    10. ').' → logprob: -18.625003814697266

Token 115: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09888624399900436
    2. '#' → logprob: -3.348886251449585
    3. 'i' → logprob: -3.348886251449585
    4. '[' → logprob: -5.098886013031006
    5. 'if' → logprob: -5.723886013031006
    6. ' for' → logprob: -5.848886013031006
    7. ')' → logprob: -6.848886013031006
    8. ',' → logprob: -6.848886013031006
    9. '<|end|>' → logprob: -7.098886013031006
    10. 'n' → logprob: -7.223886013031006

Token 116: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0071719884872437
    2. 'result' → logprob: -1.1321719884872437
    3. 'dp' → logprob: -2.632172107696533
    4. 's' → logprob: -3.257172107696533
    5. 'count' → logprob: -3.257172107696533
    6. 'res' → logprob: -3.632172107696533
    7. '#' → logprob: -3.632172107696533
    8. ' result' → logprob: -4.257172107696533
    9. 'S' → logprob: -4.507172107696533
    10. ' for' → logprob: -4.632172107696533

Token 117: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2303285449743271
    2. 'ation' → logprob: -1.6053285598754883
    3. 'ate' → logprob: -5.730328559875488
    4. '#' → logprob: -7.355328559875488
    5. 'e' → logprob: -7.480328559875488
    6. 'é' → logprob: -9.730328559875488
    7. 'ons' → logprob: -10.105328559875488
    8. 'd' → logprob: -10.355328559875488
    9. 'ert' → logprob: -10.480328559875488
    10. 'at' → logprob: -10.480328559875488

Token 118: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.014260227791965008
    2. 'd' → logprob: -4.264260292053223
    3. 's' → logprob: -10.764260292053223
    4. '[]' → logprob: -10.889260292053223
    5. ' de' → logprob: -11.014260292053223
    6. ' =' → logprob: -11.639260292053223
    7. '#' → logprob: -11.889260292053223
    8. ')' → logprob: -12.264260292053223
    9. 'de' → logprob: -12.514260292053223
    10. '[' → logprob: -12.639260292053223

Token 119: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.5216237902641296
    2. 'e' → logprob: -1.7716238498687744
    3. ''un' → logprob: -2.0216238498687744
    4. 'une' → logprob: -2.6466238498687744
    5. 'a' → logprob: -4.146623611450195
    6. 'es' → logprob: -5.271623611450195
    7. ''' → logprob: -6.021623611450195
    8. 'u' → logprob: -6.146623611450195
    9. 'un' → logprob: -6.271623611450195
    10. ' une' → logprob: -6.646623611450195

Token 120: ' matr' (ID: 25095)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.08707866817712784
    2. ' liste' → logprob: -2.58707857131958
    3. 'list' → logprob: -5.33707857131958
    4. '#' → logprob: -6.58707857131958
    5. 'table' → logprob: -8.212079048156738
    6. 'Liste' → logprob: -8.212079048156738
    7. 's' → logprob: -8.337079048156738
    8. 'dict' → logprob: -8.962079048156738
    9. 'lst' → logprob: -9.462079048156738
    10. 'fonction' → logprob: -9.587079048156738

Token 121: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.020598530769348145
    2. 'rice' → logprob: -4.770598411560059
    3. 'ix' → logprob: -4.895598411560059
    4. 'atrice' → logprob: -5.645598411560059
    5. 'rix' → logprob: -8.270598411560059
    6. '#' → logprob: -9.020598411560059
    7. 'ic' → logprob: -9.145598411560059
    8. 'riz' → logprob: -9.520598411560059
    9. '```' → logprob: -10.270598411560059
    10. 'ixe' → logprob: -10.395598411560059

Token 122: ' d' (ID: 272)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7106703519821167
    2. 'matrix' → logprob: -1.9606703519821167
    3. ' =' → logprob: -2.4606704711914062
    4. 'A' → logprob: -2.5856704711914062
    5. 'mat' → logprob: -2.7106704711914062
    6. ' M' → logprob: -3.2106704711914062
    7. 'dp' → logprob: -3.4606704711914062
    8. 'm' → logprob: -3.5856704711914062
    9. ' matrix' → logprob: -4.335670471191406
    10. '[' → logprob: -4.835670471191406

Token 123: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24160028994083405
    2. '[' → logprob: -2.616600275039673
    3. '[N' → logprob: -3.866600275039673
    4. '[]' → logprob: -3.991600275039673
    5. 'es' → logprob: -4.116600513458252
    6. 'ef' → logprob: -4.241600513458252
    7. ''ent' → logprob: -5.116600513458252
    8. ' zeros' → logprob: -5.241600513458252
    9. ''' → logprob: -5.491600513458252
    10. ''ad' → logprob: -5.616600513458252

Token 124: ' initial' (ID: 4871)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06960390508174896
    2. '[' → logprob: -3.31960391998291
    3. '[[' → logprob: -4.31960391998291
    4. ' d' → logprob: -4.56960391998291
    5. '[]' → logprob: -5.31960391998291
    6. '[d' → logprob: -7.06960391998291
    7. ' [' → logprob: -7.81960391998291
    8. '[
' → logprob: -7.81960391998291
    9. ' [[' → logprob: -7.94460391998291
    10. '#' → logprob: -8.81960391998291

Token 125: 'isée' (ID: 59331)
  Prédit: 'isée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.03852061554789543
    2. 'isé' → logprob: -4.038520812988281
    3. 'iser' → logprob: -5.163520812988281
    4. 'isées' → logprob: -5.288520812988281
    5. 'isation' → logprob: -5.413520812988281
    6. 'is' → logprob: -6.288520812988281
    7. 'ized' → logprob: -7.163520812988281
    8. 'isant' → logprob: -7.538520812988281
    9. 'e' → logprob: -7.913520812988281
    10. 'isés' → logprob: -8.038520812988281

Token 126: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6210799217224121
    2. ' d' → logprob: -1.371079921722412
    3. 'd' → logprob: -1.746079921722412
    4. '=' → logprob: -5.121079921722412
    5. '([[' → logprob: -5.121079921722412
    6. '(' → logprob: -5.371079921722412
    7. '[' → logprob: -5.746079921722412
    8. '([' → logprob: -6.246079921722412
    9. '=[[' → logprob: -6.246079921722412
    10. '(
' → logprob: -6.496079921722412

Token 127: ' des' (ID: 731)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05824148282408714
    2. '[' → logprob: -3.808241367340088
    3. ' ' → logprob: -4.433241367340088
    4. 'False' → logprob: -4.808241367340088
    5. '[N' → logprob: -5.433241367340088
    6. ' zeros' → logprob: -6.058241367340088
    7. 'des' → logprob: -6.683241367340088
    8. ' [' → logprob: -7.058241367340088
    9. 'float' → logprob: -7.183241367340088
    10. 'zeros' → logprob: -7.308241367340088

Token 128: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045921772718429565
    2. ' z' → logprob: -4.295921802520752
    3. ' ' → logprob: -4.920921802520752
    4. '[' → logprob: -5.045921802520752
    5. 'z' → logprob: -5.045921802520752
    6. ' zeros' → logprob: -5.420921802520752
    7. 'zeros' → logprob: -5.670921802520752
    8. 'False' → logprob: -6.545921802520752
    9. ' [' → logprob: -7.545921802520752
    10. ' False' → logprob: -7.670921802520752

Token 129: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.00011570196511456743
    2. 'eros' → logprob: -9.250115394592285
    3. 'éro' → logprob: -12.000115394592285
    4. 'e' → logprob: -12.500115394592285
    5. 'é' → logprob: -12.500115394592285
    6. 'ros' → logprob: -13.125115394592285
    7. '0' → logprob: -14.125115394592285
    8. '[' → logprob: -14.625115394592285
    9. '{' → logprob: -14.750115394592285
    10. '#' → logprob: -14.750115394592285

Token 130: '.
' (ID: 558)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015249599702656269
    2. ' d' → logprob: -4.640249729156494
    3. '[' → logprob: -6.015249729156494
    4. ' =' → logprob: -6.515249729156494
    5. '[
' → logprob: -7.015249729156494
    6. ',' → logprob: -8.515249252319336
    7. '_d' → logprob: -9.140249252319336
    8. '
' → logprob: -9.765249252319336
    9. '[d' → logprob: -9.765249252319336
    10. '[]
' → logprob: -10.640249252319336

Token 131: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00035083942930214107
    2. ' d' → logprob: -8.000350952148438
    3. '
' → logprob: -11.375350952148438
    4. ' =' → logprob: -12.875350952148438
    5. '[
' → logprob: -14.375350952148438
    6. '```' → logprob: -15.500350952148438
    7. '[' → logprob: -16.125350952148438
    8. '[]
' → logprob: -16.375350952148438
    9. ',' → logprob: -16.500350952148438
    10. ' ' → logprob: -16.750350952148438

Token 132: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02977525070309639
    2. ' d' → logprob: -3.5297751426696777
    3. '
' → logprob: -11.279775619506836
    4. ' ' → logprob: -13.029775619506836
    5. '#' → logprob: -13.154775619506836
    6. 'import' → logprob: -13.529775619506836
    7. '0' → logprob: -13.779775619506836
    8. '[' → logprob: -14.279775619506836
    9. '```' → logprob: -14.279775619506836
    10. ' ' → logprob: -14.654775619506836

Token 133: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003629646496847272
    2. '=' → logprob: -5.628629684448242
    3. ' ' → logprob: -10.628629684448242
    4. ' =[' → logprob: -13.378629684448242
    5. '[' → logprob: -13.503629684448242
    6. '=[' → logprob: -14.753629684448242
    7. ' ' → logprob: -14.753629684448242
    8. 'd' → logprob: -15.003629684448242
    9. '=[[' → logprob: -15.128629684448242
    10. '=[]' → logprob: -15.378629684448242

Token 134: ' de' (ID: 334)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.7621317505836487
    2. '[[' → logprob: -0.7621317505836487
    3. ' [' → logprob: -3.137131690979004
    4. '[' → logprob: -3.887131690979004
    5. '[]' → logprob: -6.262131690979004
    6. ' []' → logprob: -8.262131690979004
    7. '[R' → logprob: -8.512131690979004
    8. '[d' → logprob: -9.387131690979004
    9. '[N' → logprob: -9.762131690979004
    10. '[
' → logprob: -9.762131690979004

Token 135: ' taille' (ID: 41644)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.14797283709049225
    2. '[[' → logprob: -2.272972822189331
    3. ' [' → logprob: -3.897972822189331
    4. ' taille' → logprob: -5.77297306060791
    5. 'imension' → logprob: -5.77297306060791
    6. '[N' → logprob: -6.02297306060791
    7. ' size' → logprob: -6.27297306060791
    8. '[' → logprob: -6.77297306060791
    9. 'dimensions' → logprob: -7.89797306060791
    10. 'size' → logprob: -8.02297306060791

Token 136: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.26697981357574463
    2. '(N' → logprob: -1.5169798135757446
    3. '(K' → logprob: -4.266979694366455
    4. 'N' → logprob: -8.141980171203613
    5. '(Q' → logprob: -8.641980171203613
    6. ' N' → logprob: -9.266980171203613
    7. 'K' → logprob: -9.266980171203613
    8. '(n' → logprob: -9.391980171203613
    9. ' K' → logprob: -9.641980171203613
    10. '(' → logprob: -10.266980171203613

Token 137: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.26281043887138367
    2. ' N' → logprob: -1.887810468673706
    3. 'K' → logprob: -3.262810468673706
    4. ' (' → logprob: -4.262810230255127
    5. '(N' → logprob: -4.262810230255127
    6. ' K' → logprob: -4.512810230255127
    7. '(K' → logprob: -6.512810230255127
    8. ' ' → logprob: -7.887810230255127
    9. 'Q' → logprob: -9.137810707092285
    10. ')' → logprob: -9.137810707092285

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17975099384784698
    2. ' +' → logprob: -1.8047510385513306
    3. ' plus' → logprob: -13.9297513961792
    4. '+
' → logprob: -14.0547513961792
    5. 'plus' → logprob: -14.4297513961792
    6. '1' → logprob: -14.4297513961792
    7. ' ' → logprob: -14.5547513961792
    8. ')' → logprob: -14.6797513961792
    9. ' +
' → logprob: -14.8047513961792
    10. '
' → logprob: -14.9297513961792

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -9.000141143798828
    3. '2' → logprob: -11.000141143798828
    4. '
' → logprob: -14.250141143798828
    5. ')' → logprob: -16.187641143798828
    6. '```' → logprob: -16.187641143798828
    7. '

' → logprob: -16.437641143798828
    8. '   ' → logprob: -16.812641143798828
    9. '  ' → logprob: -17.437641143798828
    10. ' ' → logprob: -17.500141143798828

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002395986346527934
    2. ',' → logprob: -6.127396106719971
    3. ' x' → logprob: -9.627395629882812
    4. ')x' → logprob: -9.877395629882812
    5. ' )' → logprob: -10.002395629882812
    6. ')(' → logprob: -11.502395629882812
    7. ')*(' → logprob: -11.627395629882812
    8. '+' → logprob: -12.252395629882812
    9. ')[' → logprob: -12.377395629882812
    10. ' ' → logprob: -12.752395629882812

Token 141: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1259920597076416
    2. ')' → logprob: -1.3759920597076416
    3. 'd' → logprob: -2.0009920597076416
    4. ' d' → logprob: -2.7509920597076416
    5. ',' → logprob: -2.8759920597076416
    6. 'for' → logprob: -3.1259920597076416
    7. '+' → logprob: -3.2509920597076416
    8. 'x' → logprob: -4.0009918212890625
    9. '
' → logprob: -4.3759918212890625
    10. '×' → logprob: -4.3759918212890625

Token 142: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22550615668296814
    2. '(N' → logprob: -1.6005061864852905
    3. '(K' → logprob: -9.600505828857422
    4. 'K' → logprob: -11.975505828857422
    5. ' K' → logprob: -12.475505828857422
    6. ' N' → logprob: -12.600505828857422
    7. ' ' → logprob: -12.600505828857422
    8. 'N' → logprob: -12.600505828857422
    9. '
' → logprob: -13.725505828857422
    10. ',' → logprob: -13.850505828857422

Token 143: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3462893068790436
    2. 'N' → logprob: -1.3462892770767212
    3. ' K' → logprob: -3.8462893962860107
    4. ' N' → logprob: -4.846289157867432
    5. ' (' → logprob: -6.846289157867432
    6. '(K' → logprob: -6.846289157867432
    7. '(N' → logprob: -6.846289157867432
    8. ' ' → logprob: -10.09628963470459
    9. '(' → logprob: -11.34628963470459
    10. ' ' → logprob: -11.97128963470459

Token 144: '^' (ID: 61)
  Prédit: '*K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.6750684380531311
    2. '*' → logprob: -1.5500683784484863
    3. ' *' → logprob: -1.9250683784484863
    4. ')' → logprob: -2.8000683784484863
    5. 'K' → logprob: -3.0500683784484863
    6. '*(' → logprob: -3.8000683784484863
    7. '*N' → logprob: -6.550068378448486
    8. ' K' → logprob: -8.675068855285645
    9. '0' → logprob: -9.175068855285645
    10. ' )' → logprob: -9.300068855285645

Token 145: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3420419692993164
    2. '(K' → logprob: -1.4670419692993164
    3. ' (' → logprob: -2.9670419692993164
    4. ' K' → logprob: -5.592041969299316
    5. '(N' → logprob: -5.967041969299316
    6. 'N' → logprob: -7.592041969299316
    7. '(' → logprob: -7.592041969299316
    8. ' ' → logprob: -9.342041969299316
    9. '10' → logprob: -10.342041969299316
    10. ')' → logprob: -10.592041969299316

Token 146: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016633969498798251
    2. ' )' → logprob: -6.8766632080078125
    3. 'N' → logprob: -8.626663208007812
    4. '(N' → logprob: -8.751663208007812
    5. 'K' → logprob: -9.376663208007812
    6. '+' → logprob: -10.001663208007812
    7. '),' → logprob: -10.501663208007812
    8. ')-' → logprob: -10.626663208007812
    9. ')d' → logprob: -11.126663208007812
    10. '(' → logprob: -11.251663208007812

Token 147: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007005225634202361
    2. '[' → logprob: -8.125700950622559
    3. '[
' → logprob: -8.250700950622559
    4. '
' → logprob: -10.250700950622559
    5. ']' → logprob: -10.375700950622559
    6. ' d' → logprob: -11.125700950622559
    7. '0' → logprob: -11.500700950622559
    8. '```' → logprob: -11.750700950622559
    9. ',' → logprob: -12.000700950622559
    10. 'import' → logprob: -12.125700950622559

Token 148: ' Chaque' (ID: 94758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0033585624769330025
    2. ' d' → logprob: -5.753358364105225
    3. '0' → logprob: -9.878358840942383
    4. ' ' → logprob: -10.128358840942383
    5. '[' → logprob: -10.378358840942383
    6. 'import' → logprob: -11.003358840942383
    7. ']' → logprob: -11.628358840942383
    8. '
' → logprob: -11.878358840942383
    9. '2' → logprob: -12.003358840942383
    10. '[
' → logprob: -12.128358840942383

Token 149: ' sous' (ID: 14487)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0731161832809448
    2. ' ' → logprob: -1.1981161832809448
    3. ' d' → logprob: -1.9481161832809448
    4. ' line' → logprob: -3.1981163024902344
    5. '[
' → logprob: -3.3231163024902344
    6. ' [' → logprob: -3.9481163024902344
    7. 'd' → logprob: -4.198116302490234
    8. ']' → logprob: -4.198116302490234
    9. ')' → logprob: -4.323116302490234
    10. '_' → logprob: -4.573116302490234

Token 150: '-l' (ID: 2887)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8204536437988281
    2. 'list' → logprob: -1.6954536437988281
    3. 'liste' → logprob: -2.195453643798828
    4. 'dimension' → logprob: -3.195453643798828
    5. 'array' → logprob: -3.320453643798828
    6. 'd' → logprob: -3.320453643798828
    7. '[]' → logprob: -3.695453643798828
    8. '-l' → logprob: -4.070453643798828
    9. 'range' → logprob: -4.695453643798828
    10. 'ligne' → logprob: -4.820453643798828

Token 151: 'iste' (ID: 4872)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.5005455017089844
    2. 'iste' → logprob: -1.1255455017089844
    3. 'e' → logprob: -4.125545501708984
    4. 'st' → logprob: -5.000545501708984
    5. 'ine' → logprob: -5.000545501708984
    6. '#' → logprob: -5.125545501708984
    7. 'en' → logprob: -5.375545501708984
    8. '[' → logprob: -5.750545501708984
    9. 'igne' → logprob: -5.750545501708984
    10. 'is' → logprob: -5.875545501708984

Token 152: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.702395498752594
    2. ' d' → logprob: -1.4523954391479492
    3. ' de' → logprob: -1.9523954391479492
    4. '[' → logprob: -3.202395439147949
    5. ' [' → logprob: -3.827395439147949
    6. ',' → logprob: -4.702395439147949
    7. '=' → logprob: -4.952395439147949
    8. '=[' → logprob: -5.077395439147949
    9. ' est' → logprob: -5.577395439147949
    10. ' représente' → logprob: -5.577395439147949

Token 153: ' d' (ID: 272)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.45709240436553955
    2. '[' → logprob: -1.2070924043655396
    3. 'd' → logprob: -3.95709228515625
    4. ' [' → logprob: -4.20709228515625
    5. '(N' → logprob: -4.33209228515625
    6. 'range' → logprob: -4.83209228515625
    7. 'N' → logprob: -5.95709228515625
    8. ' range' → logprob: -6.20709228515625
    9. ' d' → logprob: -6.20709228515625
    10. '[R' → logprob: -6.58209228515625

Token 154: ' représente' (ID: 88912)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04210399091243744
    2. '=' → logprob: -3.9171040058135986
    3. '[' → logprob: -5.2921037673950195
    4. ')' → logprob: -5.9171037673950195
    5. '=[' → logprob: -6.0421037673950195
    6. ' de' → logprob: -6.2921037673950195
    7. ' représente' → logprob: -6.4171037673950195
    8. ' d' → logprob: -6.9171037673950195
    9. ' a' → logprob: -7.0421037673950195
    10. ' est' → logprob: -7.1671037673950195

Token 155: ' un' (ID: 537)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3168846070766449
    2. ' une' → logprob: -1.8168846368789673
    3. ' [' → logprob: -2.4418845176696777
    4. 'une' → logprob: -4.941884517669678
    5. '[N' → logprob: -5.191884517669678
    6. '0' → logprob: -6.316884517669678
    7. ' un' → logprob: -6.441884517669678
    8. ' des' → logprob: -6.691884517669678
    9. ' la' → logprob: -6.691884517669678
    10. '[]' → logprob: -7.066884517669678

Token 156: ' niveau' (ID: 21708)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.673572838306427
    2. ' [' → logprob: -1.0485727787017822
    3. 'niveau' → logprob: -3.7985727787017822
    4. '0' → logprob: -3.9235727787017822
    5. 'state' → logprob: -4.298573017120361
    6. ' state' → logprob: -4.298573017120361
    7. ' état' → logprob: -4.548573017120361
    8. ' niveau' → logprob: -4.673573017120361
    9. ' range' → logprob: -4.673573017120361
    10. ']' → logprob: -4.923573017120361

Token 157: ' différent' (ID: 114823)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7114567160606384
    2. ' d' → logprob: -1.0864567756652832
    3. '   ' → logprob: -2.461456775665283
    4. 'd' → logprob: -3.961456775665283
    5. ' =' → logprob: -4.086456775665283
    6. 'de' → logprob: -4.211456775665283
    7. '[' → logprob: -5.086456775665283
    8. ' ' → logprob: -5.461456775665283
    9. '[]' → logprob: -5.461456775665283
    10. ',' → logprob: -5.961456775665283

Token 158: ',
' (ID: 412)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5398125648498535
    2. '[' → logprob: -1.5398125648498535
    3. ' =' → logprob: -3.6648125648498535
    4. '[
' → logprob: -3.6648125648498535
    5. '   ' → logprob: -3.7898125648498535
    6. 'd' → logprob: -3.7898125648498535
    7. ' de' → logprob: -4.0398125648498535
    8. '[]' → logprob: -4.4148125648498535
    9. 'for' → logprob: -4.5398125648498535
    10. ' ' → logprob: -4.6648125648498535

Token 159: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9630851149559021
    2. 'for' → logprob: -1.5880851745605469
    3. ' for' → logprob: -1.8380851745605469
    4. ' [' → logprob: -2.713085174560547
    5. ' d' → logprob: -3.088085174560547
    6. '[]' → logprob: -3.588085174560547
    7. '   ' → logprob: -3.838085174560547
    8. '[
' → logprob: -3.838085174560547
    9. ' [
' → logprob: -3.963085174560547
    10. '[N' → logprob: -4.963085174560547

Token 160: ' et' (ID: 859)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15846014022827148
    2. ' [' → logprob: -3.0334601402282715
    3. 'd' → logprob: -3.7834601402282715
    4. '   ' → logprob: -4.0334601402282715
    5. ' d' → logprob: -4.1584601402282715
    6. '2' → logprob: -4.9084601402282715
    7. '[[' → logprob: -5.0334601402282715
    8. 'for' → logprob: -5.2834601402282715
    9. ' ' → logprob: -5.4084601402282715
    10. '[N' → logprob: -5.6584601402282715

Token 161: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4585583806037903
    2. ' [' → logprob: -1.4585583209991455
    3. ' d' → logprob: -3.2085583209991455
    4. ' ' → logprob: -3.8335583209991455
    5. 'd' → logprob: -4.208558559417725
    6. 'for' → logprob: -4.333558559417725
    7. '[]' → logprob: -4.458558559417725
    8. ' for' → logprob: -4.583558559417725
    9. '   ' → logprob: -4.958558559417725
    10. '0' → logprob: -6.458558559417725

Token 162: ' cellule' (ID: 169440)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3729933500289917
    2. ']' → logprob: -2.7479934692382812
    3. ' état' → logprob: -2.8729934692382812
    4. ' colonne' → logprob: -2.8729934692382812
    5. 'élé' → logprob: -2.9979934692382812
    6. ' élément' → logprob: -3.2479934692382812
    7. ' d' → logprob: -3.7479934692382812
    8. ' ' → logprob: -3.8729934692382812
    9. ' possible' → logprob: -3.9979934692382812
    10. ' index' → logprob: -3.9979934692382812

Token 163: ' représente' (ID: 88912)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8022788763046265
    2. ' d' → logprob: -1.4272788763046265
    3. ' =' → logprob: -2.427278995513916
    4. '[]' → logprob: -2.802278995513916
    5. ' de' → logprob: -3.552278995513916
    6. ')' → logprob: -3.927278995513916
    7. ' ' → logprob: -4.052278995513916
    8. ' contient' → logprob: -4.427278995513916
    9. '<|end|>' → logprob: -4.677278995513916
    10. ' représente' → logprob: -4.927278995513916

Token 164: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.44003334641456604
    2. ' un' → logprob: -1.0650333166122437
    3. 'un' → logprob: -5.315033435821533
    4. ' ' → logprob: -6.315033435821533
    5. ' l' → logprob: -6.690033435821533
    6. 'une' → logprob: -6.940033435821533
    7. ' des' → logprob: -7.190033435821533
    8. ' la' → logprob: -7.440033435821533
    9. 'l' → logprob: -8.065032958984375
    10. '0' → logprob: -8.065032958984375

Token 165: ' combinaison' (ID: 165933)
  Prédit: ' combinaison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinaison' → logprob: -1.115335464477539
    2. ' configuration' → logprob: -1.365335464477539
    3. 'poss' → logprob: -2.240335464477539
    4. 'configuration' → logprob: -2.490335464477539
    5. ' possibilité' → logprob: -2.615335464477539
    6. 's' → logprob: -3.490335464477539
    7. 'comb' → logprob: -3.615335464477539
    8. ' valeur' → logprob: -3.615335464477539
    9. 'case' → logprob: -4.115335464477539
    10. ' case' → logprob: -4.490335464477539

Token 166: ' possible' (ID: 4149)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5150920748710632
    2. ' de' → logprob: -1.265092134475708
    3. ' des' → logprob: -3.390092134475708
    4. 'd' → logprob: -4.390091896057129
    5. '[' → logprob: -4.640091896057129
    6. ',' → logprob: -4.640091896057129
    7. '<|end|>' → logprob: -5.015091896057129
    8. ' ,' → logprob: -5.140091896057129
    9. 'de' → logprob: -5.265091896057129
    10. ')' → logprob: -5.265091896057129

Token 167: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9038159251213074
    2. 'd' → logprob: -1.1538159847259521
    3. '   ' → logprob: -3.028815984725952
    4. '[' → logprob: -3.028815984725952
    5. ' de' → logprob: -3.153815984725952
    6. ']' → logprob: -3.403815984725952
    7. ',' → logprob: -3.778815984725952
    8. '_d' → logprob: -3.778815984725952
    9. ')' → logprob: -4.653815746307373
    10. ' ' → logprob: -4.778815746307373

Token 168: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.5021771788597107
    2. 'bits' → logprob: -1.7521772384643555
    3. 'K' → logprob: -2.2521772384643555
    4. ' K' → logprob: -3.1271772384643555
    5. ' états' → logprob: -4.3771772384643555
    6. ' choix' → logprob: -5.0021772384643555
    7. 's' → logprob: -5.2521772384643555
    8. ' l' → logprob: -5.6271772384643555
    9. ' sous' → logprob: -5.6271772384643555
    10. 'd' → logprob: -5.6271772384643555

Token 169: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1000096797943115
    2. '[' → logprob: -1.8500096797943115
    3. 'd' → logprob: -1.9750096797943115
    4. ' ]' → logprob: -2.1000096797943115
    5. ' d' → logprob: -2.3500096797943115
    6. ')' → logprob: -2.7250096797943115
    7. ',' → logprob: -3.9750096797943115
    8. '.' → logprob: -4.475009918212891
    9. '[
' → logprob: -4.725009918212891
    10. ' )' → logprob: -4.725009918212891

Token 170: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00039170795935206115
    2. '[
' → logprob: -8.500391960144043
    3. '[' → logprob: -8.875391960144043
    4. ' d' → logprob: -10.375391960144043
    5. '[[' → logprob: -12.250391960144043
    6. ']' → logprob: -12.375391960144043
    7. '0' → logprob: -12.875391960144043
    8. '```' → logprob: -13.625391960144043
    9. '
' → logprob: -14.125391960144043
    10. ' [
' → logprob: -14.250391960144043

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20163892209529877
    2. '=' → logprob: -1.70163893699646
    3. '[' → logprob: -8.701639175415039
    4. '=[' → logprob: -10.951639175415039
    5. ' ' → logprob: -11.201639175415039
    6. ' =[' → logprob: -11.701639175415039
    7. '=[[' → logprob: -12.451639175415039
    8. '=[]' → logprob: -12.701639175415039
    9. '.append' → logprob: -13.201639175415039
    10. ')' → logprob: -13.451639175415039

Token 172: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00010092071170220152
    2. ' [[' → logprob: -9.250101089477539
    3. '[' → logprob: -12.250101089477539
    4. '[
' → logprob: -18.12510108947754
    5. ' [' → logprob: -19.25010108947754
    6. '[]' → logprob: -21.00010108947754
    7. '([[' → logprob: -21.37510108947754
    8. '0' → logprob: -21.87510108947754
    9. '[\' → logprob: -22.00010108947754
    10. '[['' → logprob: -22.12510108947754

Token 173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.000019073486328
    3. 'float' → logprob: -14.125019073486328
    4. '-' → logprob: -14.750019073486328
    5. 'False' → logprob: -15.750019073486328
    6. '
' → logprob: -15.875019073486328
    7. 'int' → logprob: -16.687519073486328
    8. '

' → logprob: -16.875019073486328
    9. '   ' → logprob: -16.937519073486328
    10. '  ' → logprob: -17.000019073486328

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2078692764043808
    2. ' for' → logprob: -2.207869291305542
    3. ']*' → logprob: -3.457869291305542
    4. 'for' → logprob: -3.707869291305542
    5. ']*(' → logprob: -3.832869291305542
    6. ' ]' → logprob: -10.207869529724121
    7. ']+' → logprob: -11.082869529724121
    8. ')' → logprob: -11.332869529724121
    9. ' ' → logprob: -12.332869529724121
    10. '	for' → logprob: -12.707869529724121

Token 175: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.143731951713562
    2. 'for' → logprob: -2.0187320709228516
    3. ']' → logprob: -7.268732070922852
    4. '*' → logprob: -9.393732070922852
    5. ' *' → logprob: -9.518732070922852
    6. ']*(' → logprob: -10.018732070922852
    7. ']*' → logprob: -10.018732070922852
    8. ' ' → logprob: -10.393732070922852
    9. ')' → logprob: -10.393732070922852
    10. '*(' → logprob: -11.518732070922852

Token 176: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003772531636059284
    2. ' (' → logprob: -5.628772735595703
    3. '((' → logprob: -9.253772735595703
    4. '(K' → logprob: -9.878772735595703
    5. '(pow' → logprob: -11.253772735595703
    6. '   ' → logprob: -12.753772735595703
    7. '
' → logprob: -12.753772735595703
    8. '(R' → logprob: -13.003772735595703
    9. '(N' → logprob: -13.628772735595703
    10. '(Q' → logprob: -13.753772735595703

Token 177: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001126026691053994
    2. ' (' → logprob: -9.375112533569336
    3. '((' → logprob: -11.375112533569336
    4. '(K' → logprob: -11.875112533569336
    5. '(pow' → logprob: -12.750112533569336
    6. '(N' → logprob: -13.125112533569336
    7. '(R' → logprob: -13.125112533569336
    8. '(Q' → logprob: -13.875112533569336
    9. '
' → logprob: -14.375112533569336
    10. '   ' → logprob: -15.500112533569336

Token 178: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0001037815964082256
    2. ' **' → logprob: -9.375103950500488
    3. '*N' → logprob: -12.375103950500488
    4. '(N' → logprob: -12.500103950500488
    5. ']' → logprob: -13.000103950500488
    6. '*' → logprob: -13.125103950500488
    7. ')' → logprob: -13.125103950500488
    8. '```' → logprob: -13.625103950500488
    9. '0' → logprob: -14.250103950500488
    10. '
' → logprob: -15.000103950500488

Token 179: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.404745439183898e-05
    2. 'K' → logprob: -10.75003433227539
    3. ' N' → logprob: -11.62503433227539
    4. '(N' → logprob: -13.62503433227539
    5. '(' → logprob: -13.75003433227539
    6. ' ' → logprob: -14.75003433227539
    7. '   ' → logprob: -16.12503433227539
    8. 'n' → logprob: -16.25003433227539
    9. '10' → logprob: -16.50003433227539
    10. '20' → logprob: -16.62503433227539

Token 180: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38689592480659485
    2. ' for' → logprob: -1.1368958950042725
    3. ']' → logprob: -11.261896133422852
    4. '	for' → logprob: -12.511896133422852
    5. ')' → logprob: -12.636896133422852
    6. ' ' → logprob: -12.761896133422852
    7. '   ' → logprob: -13.386896133422852
    8. ' ' → logprob: -15.511896133422852
    9. '  ' → logprob: -15.636896133422852
    10. '
' → logprob: -17.01189613342285

Token 181: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5762507915496826
    2. '_' → logprob: -0.8262507915496826
    3. ' i' → logprob: -8.201251029968262
    4. ' ' → logprob: -11.701251029968262
    5. '_=' → logprob: -11.826251029968262
    6. '_i' → logprob: -11.951251029968262
    7. 'i' → logprob: -12.076251029968262
    8. ' range' → logprob: -12.451251029968262
    9. ' ' → logprob: -13.201251029968262
    10. '_]' → logprob: -14.701251029968262

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023276465013623238
    2. 'in' → logprob: -3.7732765674591064
    3. ' ' → logprob: -10.523276329040527
    4. 'range' → logprob: -13.398276329040527
    5. '  ' → logprob: -14.523276329040527
    6. ' _' → logprob: -14.523276329040527
    7. 'd' → logprob: -15.273276329040527
    8. 'R' → logprob: -15.398276329040527
    9. '_' → logprob: -15.523276329040527
    10. ' range' → logprob: -15.648276329040527

Token 183: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4808996021747589
    2. 'range' → logprob: -1.9808995723724365
    3. ' range' → logprob: -2.1058995723724365
    4. 'R' → logprob: -2.3558995723724365
    5. ' Q' → logprob: -3.8558995723724365
    6. ' R' → logprob: -5.105899810791016
    7. 'Range' → logprob: -11.105899810791016
    8. ' ' → logprob: -11.230899810791016
    9. '(Q' → logprob: -11.980899810791016
    10. '	Q' → logprob: -12.355899810791016

Token 184: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008632888086140156
    2. ')]' → logprob: -4.758632659912109
    3. ')' → logprob: -11.63363265991211
    4. ' ]' → logprob: -11.75863265991211
    5. ']
' → logprob: -14.13363265991211
    6. '()]' → logprob: -15.00863265991211
    7. '])' → logprob: -15.50863265991211
    8. '`]' → logprob: -15.88363265991211
    9. ']]' → logprob: -16.75863265991211
    10. '}]' → logprob: -16.88363265991211

Token 185: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2640494108200073
    2. 'd' → logprob: -2.889049530029297
    3. '<|end|>' → logprob: -3.014049530029297
    4. ' 
' → logprob: -3.389049530029297
    5. ')' → logprob: -3.514049530029297
    6. '[' → logprob: -4.014049530029297
    7. 'for' → logprob: -4.514049530029297
    8. ' )' → logprob: -4.889049530029297
    9. '#' → logprob: -4.889049530029297
    10. ' for' → logprob: -5.389049530029297

Token 186: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005556624382734299
    2. 'd' → logprob: -5.755556583404541
    3. 'dp' → logprob: -6.880556583404541
    4. '#' → logprob: -7.630556583404541
    5. 'def' → logprob: -8.0055570602417
    6. ' for' → logprob: -9.2555570602417
    7. 'i' → logprob: -9.5055570602417
    8. 'Q' → logprob: -9.6305570602417
    9. 'max' → logprob: -9.8805570602417
    10. 'from' → logprob: -10.5055570602417

Token 187: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.01866220124065876
    2. 'er' → logprob: -4.518661975860596
    3. 'ate' → logprob: -5.768661975860596
    4. '#' → logprob: -6.018661975860596
    5. 'a' → logprob: -8.018662452697754
    6. 'at' → logprob: -8.143662452697754
    7. '```' → logprob: -8.143662452697754
    8. 'e' → logprob: -8.643662452697754
    9. 'lation' → logprob: -9.143662452697754
    10. '=' → logprob: -9.393662452697754

Token 188: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4776526987552643
    2. ' d' → logprob: -0.9776526689529419
    3. '#' → logprob: -6.602652549743652
    4. ' of' → logprob: -6.977652549743652
    5. 's' → logprob: -7.352652549743652
    6. '[' → logprob: -8.852652549743652
    7. ' des' → logprob: -9.602652549743652
    8. ' de' → logprob: -9.727652549743652
    9. '<|end|>' → logprob: -9.852652549743652
    10. 'de' → logprob: -9.977652549743652

Token 189: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.5063675045967102
    2. ''un' → logprob: -1.2563674449920654
    3. 'une' → logprob: -3.1313674449920654
    4. 'un' → logprob: -3.7563674449920654
    5. 'a' → logprob: -4.0063676834106445
    6. 'e' → logprob: -4.6313676834106445
    7. '[' → logprob: -5.6313676834106445
    8. '_' → logprob: -6.3813676834106445
    9. '_un' → logprob: -6.5063676834106445
    10. ' un' → logprob: -6.6313676834106445

Token 190: ' matr' (ID: 25095)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.047000527381897
    2. 'deque' → logprob: -1.047000527381897
    3. 'queue' → logprob: -2.2970004081726074
    4. 'Q' → logprob: -3.1720004081726074
    5. 'list' → logprob: -3.5470004081726074
    6. 'for' → logprob: -3.9220004081726074
    7. 'liste' → logprob: -4.297000408172607
    8. 'stack' → logprob: -4.547000408172607
    9. 'd' → logprob: -4.547000408172607
    10. 'def' → logprob: -4.672000408172607

Token 191: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.011784655973315239
    2. 'ix' → logprob: -5.511784553527832
    3. 'atrice' → logprob: -5.511784553527832
    4. 'ce' → logprob: -6.386784553527832
    5. 'î' → logprob: -7.886784553527832
    6. 'lice' → logprob: -8.261784553527832
    7. 'rice' → logprob: -8.511784553527832
    8. '[' → logprob: -8.636784553527832
    9. 'ize' → logprob: -9.136784553527832
    10. 'ée' → logprob: -9.761784553527832

Token 192: ' f' (ID: 285)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0887022390961647
    2. ' d' → logprob: -3.2137022018432617
    3. '[' → logprob: -4.338702201843262
    4. '#' → logprob: -5.713702201843262
    5. '<|end|>' → logprob: -5.838702201843262
    6. 'b' → logprob: -5.963702201843262
    7. 'des' → logprob: -6.088702201843262
    8. ' =' → logprob: -6.338702201843262
    9. 's' → logprob: -6.338702201843262
    10. 'f' → logprob: -6.463702201843262

Token 193: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017770349979400635
    2. '=' → logprob: -4.267770290374756
    3. 'd' → logprob: -5.767770290374756
    4. ',' → logprob: -8.767770767211914
    5. '=[[' → logprob: -9.392770767211914
    6. 'f' → logprob: -9.767770767211914
    7. '[' → logprob: -10.142770767211914
    8. '#' → logprob: -10.642770767211914
    9. ' d' → logprob: -11.017770767211914
    10. '=[' → logprob: -11.142770767211914

Token 194: ' initial' (ID: 4871)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0028467215597629547
    2. ' [[' → logprob: -5.877846717834473
    3. '[' → logprob: -11.127846717834473
    4. 'd' → logprob: -11.252846717834473
    5. '=[[' → logprob: -11.877846717834473
    6. '#' → logprob: -13.252846717834473
    7. 'f' → logprob: -13.377846717834473
    8. ' ' → logprob: -13.752846717834473
    9. '   ' → logprob: -14.252846717834473
    10. ' d' → logprob: -15.127846717834473

Token 195: 'isée' (ID: 59331)
  Prédit: 'isées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -1.3058427572250366
    2. 'ized' → logprob: -1.8058427572250366
    3. '=[[' → logprob: -1.9308427572250366
    4. 'iz' → logprob: -2.180842876434326
    5. '[[' → logprob: -2.180842876434326
    6. 'isée' → logprob: -2.805842876434326
    7. 'isé' → logprob: -2.805842876434326
    8. 'isés' → logprob: -3.180842876434326
    9. ' =' → logprob: -5.055842876434326
    10. 'is' → logprob: -5.555842876434326

Token 196: ' avec' (ID: 3937)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.3898424208164215
    2. '=[[' → logprob: -2.0148425102233887
    3. 'avec' → logprob: -2.1398425102233887
    4. ' avec' → logprob: -3.3898425102233887
    5. ' =' → logprob: -4.139842510223389
    6. '=' → logprob: -4.764842510223389
    7. ' [[' → logprob: -4.764842510223389
    8. 'with' → logprob: -5.764842510223389
    9. '([[' → logprob: -7.889842510223389
    10. ' with' → logprob: -8.13984203338623

Token 197: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46247297525405884
    2. '[[' → logprob: -1.087472915649414
    3. '0' → logprob: -3.587472915649414
    4. '[-' → logprob: -5.837472915649414
    5. 'None' → logprob: -7.462472915649414
    6. 'False' → logprob: -7.712472915649414
    7. 'd' → logprob: -7.837472915649414
    8. '-' → logprob: -8.087472915649414
    9. 'zeros' → logprob: -8.712472915649414
    10. '1' → logprob: -8.712472915649414

Token 198: ' z' (ID: 579)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08857918530702591
    2. '[[' → logprob: -2.7135791778564453
    3. '0' → logprob: -4.713579177856445
    4. '[-' → logprob: -5.088579177856445
    5. ' [' → logprob: -6.338579177856445
    6. 'None' → logprob: -7.588579177856445
    7. '[N' → logprob: -8.463579177856445
    8. 'False' → logprob: -8.838579177856445
    9. '-' → logprob: -8.963579177856445
    10. 'zeros' → logprob: -9.213579177856445

Token 199: 'éros' (ID: 120888)
  Prédit: 'eros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eros' → logprob: -0.20402050018310547
    2. '[' → logprob: -2.0790205001831055
    3. 'éros' → logprob: -3.3290205001831055
    4. 'ero' → logprob: -4.0790205001831055
    5. '[[' → logprob: -5.9540205001831055
    6. 'er' → logprob: -7.0790205001831055
    7. '0' → logprob: -7.3290205001831055
    8. 'éro' → logprob: -7.4540205001831055
    9. 'zeros' → logprob: -7.8290205001831055
    10. '[i' → logprob: -7.8290205001831055

Token 200: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5613372921943665
    2. 'd' → logprob: -0.9363372921943665
    3. '=' → logprob: -3.4363372325897217
    4. '=[[' → logprob: -5.936337471008301
    5. 'f' → logprob: -6.561337471008301
    6. ' d' → logprob: -7.936337471008301
    7. '=[' → logprob: -8.8113374710083
    8. '=d' → logprob: -9.0613374710083
    9. '#' → logprob: -9.0613374710083
    10. ',' → logprob: -9.1863374710083

Token 201: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0206720617134124e-05
    2. ' f' → logprob: -12.00001049041748
    3. '[[' → logprob: -13.37501049041748
    4. '#' → logprob: -13.87501049041748
    5. 'd' → logprob: -14.25001049041748
    6. '
' → logprob: -15.12501049041748
    7. '[' → logprob: -15.37501049041748
    8. '=' → logprob: -16.375009536743164
    9. '=[[' → logprob: -16.500009536743164
    10. '```' → logprob: -16.750009536743164

Token 202: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1398757123970427e-05
    2. ' f' → logprob: -11.750011444091797
    3. '#' → logprob: -13.625011444091797
    4. '
' → logprob: -13.875011444091797
    5. '[[' → logprob: -14.375011444091797
    6. 'd' → logprob: -14.875011444091797
    7. '```' → logprob: -16.000011444091797
    8. '[' → logprob: -16.500011444091797
    9. ' 
' → logprob: -17.750011444091797
    10. '[f' → logprob: -18.125011444091797

Token 203: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11287469416856766
    2. '=' → logprob: -2.237874746322632
    3. '[' → logprob: -11.362874984741211
    4. 'd' → logprob: -11.487874984741211
    5. '=[' → logprob: -11.987874984741211
    6. '=[[' → logprob: -11.987874984741211
    7. ']' → logprob: -12.112874984741211
    8. ' ' → logprob: -12.362874984741211
    9. ')' → logprob: -13.612874984741211
    10. 'f' → logprob: -13.737874984741211

Token 204: ' également' (ID: 15488)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.018198171630501747
    2. ' [[' → logprob: -4.018198013305664
    3. '[' → logprob: -10.893198013305664
    4. 'd' → logprob: -11.018198013305664
    5. '[
' → logprob: -13.018198013305664
    6. '=[[' → logprob: -13.018198013305664
    7. '[d' → logprob: -13.143198013305664
    8. ' [' → logprob: -13.268198013305664
    9. ' d' → logprob: -13.643198013305664
    10. '[f' → logprob: -13.768198013305664

Token 205: ' de' (ID: 334)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -2.534558552724775e-05
    2. ' [[' → logprob: -10.625025749206543
    3. 'd' → logprob: -13.875025749206543
    4. '=[[' → logprob: -17.250024795532227
    5. '[' → logprob: -17.625024795532227
    6. '[d' → logprob: -18.375024795532227
    7. '#' → logprob: -18.625024795532227
    8. 'f' → logprob: -18.875024795532227
    9. '
' → logprob: -19.250024795532227
    10. '([[' → logprob: -19.500024795532227

Token 206: ' taille' (ID: 41644)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002968072658404708
    2. ' [[' → logprob: -5.877967834472656
    3. 'size' → logprob: -9.627967834472656
    4. '[N' → logprob: -10.252967834472656
    5. '[' → logprob: -11.002967834472656
    6. '2' → logprob: -11.752967834472656
    7. '([[' → logprob: -11.752967834472656
    8. ' size' → logprob: -12.377967834472656
    9. 'd' → logprob: -12.502967834472656
    10. ' taille' → logprob: -12.502967834472656

Token 207: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.08178585022687912
    2. ' (' → logprob: -2.5817859172821045
    3. 'd' → logprob: -6.206785678863525
    4. '(' → logprob: -7.581785678863525
    5. '[N' → logprob: -9.956786155700684
    6. '
' → logprob: -10.206786155700684
    7. '#' → logprob: -10.331786155700684
    8. '((' → logprob: -10.331786155700684
    9. '   ' → logprob: -10.581786155700684
    10. ',' → logprob: -10.706786155700684

Token 208: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005486668087542057
    2. '(N' → logprob: -5.880486488342285
    3. ' N' → logprob: -6.005486488342285
    4. ' (' → logprob: -8.880486488342285
    5. '2' → logprob: -10.380486488342285
    6. ' ' → logprob: -11.755486488342285
    7. 'Q' → logprob: -11.755486488342285
    8. ')' → logprob: -11.755486488342285
    9. '(' → logprob: -12.630486488342285
    10. 'R' → logprob: -12.755486488342285

Token 209: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031806828919798136
    2. ' +' → logprob: -5.753180503845215
    3. 'd' → logprob: -14.315680503845215
    4. '
' → logprob: -14.940680503845215
    5. ')' → logprob: -15.190680503845215
    6. '1' → logprob: -15.440680503845215
    7. '+
' → logprob: -15.440680503845215
    8. '[' → logprob: -15.565680503845215
    9. '#' → logprob: -16.19068145751953
    10. '```' → logprob: -16.25318145751953

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.75003719329834
    3. '+' → logprob: -11.87503719329834
    4. '2' → logprob: -12.87503719329834
    5. '(' → logprob: -13.18753719329834
    6. ')' → logprob: -14.50003719329834
    7. 'N' → logprob: -14.87503719329834
    8. 'K' → logprob: -15.00003719329834
    9. '{' → logprob: -15.25003719329834
    10. '۱' → logprob: -15.81253719329834

Token 211: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.999452772201039e-05
    2. ']' → logprob: -11.500029563903809
    3. ',' → logprob: -12.250029563903809
    4. ' )' → logprob: -12.375029563903809
    5. ')
' → logprob: -12.750029563903809
    6. 'd' → logprob: -12.875029563903809
    7. ')]' → logprob: -13.375029563903809
    8. 'f' → logprob: -14.500029563903809
    9. ',)' → logprob: -14.625029563903809
    10. ')[' → logprob: -14.750029563903809

Token 212: ' x' (ID: 1215)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2999139428138733
    2. ' x' → logprob: -2.7999138832092285
    3. 'd' → logprob: -3.1749138832092285
    4. '][' → logprob: -3.2999138832092285
    5. '[' → logprob: -3.6749138832092285
    6. 'x' → logprob: -4.0499138832092285
    7. 'f' → logprob: -4.4249138832092285
    8. ',' → logprob: -4.6749138832092285
    9. 'for' → logprob: -4.6749138832092285
    10. ' d' → logprob: -4.7999138832092285

Token 213: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12484578788280487
    2. ' (' → logprob: -2.4998457431793213
    3. '[' → logprob: -4.2498459815979
    4. '2' → logprob: -4.6248459815979
    5. ' ' → logprob: -4.6248459815979
    6. ' [' → logprob: -6.6248459815979
    7. '
' → logprob: -11.624845504760742
    8. '   ' → logprob: -12.249845504760742
    9. ' Q' → logprob: -12.562345504760742
    10. ')' → logprob: -12.562345504760742

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00689534330740571
    2. ' ' → logprob: -5.631895542144775
    3. '(' → logprob: -5.756895542144775
    4. ' (' → logprob: -10.006895065307617
    5. ')' → logprob: -10.131895065307617
    6. '1' → logprob: -10.631895065307617
    7. '[' → logprob: -12.006895065307617
    8. '256' → logprob: -12.256895065307617
    9. '0' → logprob: -13.131895065307617
    10. '```' → logprob: -13.631895065307617

Token 215: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31342944502830505
    2. ' **' → logprob: -1.3134294748306274
    3. '^' → logprob: -8.938429832458496
    4. ' ' → logprob: -10.938429832458496
    5. '*' → logprob: -11.313429832458496
    6. ')' → logprob: -13.438429832458496
    7. ' *' → logprob: -13.688429832458496
    8. '#' → logprob: -13.938429832458496
    9. '_' → logprob: -14.188429832458496
    10. ']' → logprob: -14.438429832458496

Token 216: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001278534036828205
    2. ' N' → logprob: -9.125127792358398
    3. '(' → logprob: -12.000127792358398
    4. '```' → logprob: -12.625127792358398
    5. 'K' → logprob: -13.125127792358398
    6. '(N' → logprob: -13.250127792358398
    7. '
' → logprob: -13.500127792358398
    8. ' ' → logprob: -13.625127792358398
    9. ' (' → logprob: -14.500127792358398
    10. 'n' → logprob: -14.875127792358398

Token 217: ').
' (ID: 6294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4045620858669281
    2. ')' → logprob: -1.6545621156692505
    3. ' for' → logprob: -2.029561996459961
    4. ')]' → logprob: -4.904561996459961
    5. ']' → logprob: -6.154561996459961
    6. 'd' → logprob: -9.279561996459961
    7. '),' → logprob: -9.529561996459961
    8. '[' → logprob: -9.529561996459961
    9. ').' → logprob: -9.529561996459961
    10. ')
' → logprob: -9.904561996459961

Token 218: '#' (ID: 2)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.750000953674316
    3. ' f' → logprob: -15.000000953674316
    4. '```' → logprob: -17.5
    5. '#' → logprob: -17.875
    6. 'd' → logprob: -18.0
    7. ']' → logprob: -19.25
    8. ',' → logprob: -20.0
    9. '=' → logprob: -20.125
    10. '[' → logprob: -20.25

Token 219: ' Cette' (ID: 27383)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.8624639324116288e-06
    2. '#' → logprob: -14.125001907348633
    3. ' f' → logprob: -14.500001907348633
    4. '
' → logprob: -14.875001907348633
    5. 'd' → logprob: -15.750001907348633
    6. '```' → logprob: -16.625001907348633
    7. 'import' → logprob: -18.375001907348633
    8. '

' → logprob: -18.500001907348633
    9. '
' → logprob: -18.750001907348633
    10. '[' → logprob: -18.875001907348633

Token 220: ' matr' (ID: 25095)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.915302038192749
    2. 'f' → logprob: -1.040302038192749
    3. ' =' → logprob: -1.665302038192749
    4. '[' → logprob: -3.915302038192749
    5. '#' → logprob: -3.915302038192749
    6. ' f' → logprob: -4.915302276611328
    7. 'd' → logprob: -6.165302276611328
    8. '[
' → logprob: -6.540302276611328
    9. 'matrix' → logprob: -7.540302276611328
    10. '=
' → logprob: -7.665302276611328

Token 221: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0008993157534860075
    2. '#' → logprob: -7.875899314880371
    3. 'ix' → logprob: -8.000899314880371
    4. '[' → logprob: -9.500899314880371
    5. 'ixe' → logprob: -10.500899314880371
    6. '[[' → logprob: -11.000899314880371
    7. '```' → logprob: -11.250899314880371
    8. 'ique' → logprob: -11.375899314880371
    9. 'i' → logprob: -12.375899314880371
    10. 'ic' → logprob: -12.625899314880371

Token 222: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04433853179216385
    2. '=' → logprob: -3.5443384647369385
    3. 'f' → logprob: -5.169338703155518
    4. '#' → logprob: -5.669338703155518
    5. '[' → logprob: -6.294338703155518
    6. 'd' → logprob: -7.544338703155518
    7. ' est' → logprob: -7.669338703155518
    8. ' représente' → logprob: -8.16933822631836
    9. 's' → logprob: -8.41933822631836
    10. ')' → logprob: -8.54433822631836

Token 223: ' stock' (ID: 6546)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.014161508530378342
    2. 'serv' → logprob: -5.264161586761475
    3. ' être' → logprob: -5.889161586761475
    4. 'être' → logprob: -6.514161586761475
    5. '[' → logprob: -6.764161586761475
    6. ' stock' → logprob: -7.139161586761475
    7. ' représ' → logprob: -7.264161586761475
    8. 'serve' → logprob: -7.514161586761475
    9. ' permettre' → logprob: -8.639161109924316
    10. '#' → logprob: -8.639161109924316

Token 224: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23308433592319489
    2. '#' → logprob: -1.9830843210220337
    3. 'e' → logprob: -3.6080844402313232
    4. '[' → logprob: -4.108084201812744
    5. '[[' → logprob: -5.233084201812744
    6. 'ant' → logprob: -5.608084201812744
    7. 'ent' → logprob: -5.983084201812744
    8. '=' → logprob: -6.108084201812744
    9. ' les' → logprob: -6.358084201812744
    10. ' =' → logprob: -6.483084201812744

Token 225: ' une' (ID: 2463)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3267417848110199
    2. 'les' → logprob: -2.7017416954040527
    3. '#' → logprob: -2.8267416954040527
    4. '[[' → logprob: -2.9517416954040527
    5. 'des' → logprob: -3.2017416954040527
    6. ' les' → logprob: -3.9517416954040527
    7. ' des' → logprob: -4.701741695404053
    8. '0' → logprob: -5.326741695404053
    9. 'l' → logprob: -5.451741695404053
    10. 'f' → logprob: -6.076741695404053

Token 226: ' valeur' (ID: 41664)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.9021660685539246
    2. '1' → logprob: -1.4021661281585693
    3. '[' → logprob: -1.9021661281585693
    4. '0' → logprob: -3.5271661281585693
    5. 'val' → logprob: -3.9021661281585693
    6. 'max' → logprob: -4.15216588973999
    7. '[
' → logprob: -4.15216588973999
    8. 'comb' → logprob: -4.15216588973999
    9. '#' → logprob: -4.52716588973999
    10. ' ' → logprob: -4.77716588973999

Token 227: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.685084342956543
    2. 'd' → logprob: -2.310084342956543
    3. 'f' → logprob: -2.685084342956543
    4. 's' → logprob: -2.935084342956543
    5. ' d' → logprob: -2.935084342956543
    6. 'max' → logprob: -2.935084342956543
    7. 'import' → logprob: -3.185084342956543
    8. '   ' → logprob: -3.560084342956543
    9. '=' → logprob: -3.810084342956543
    10. ' f' → logprob: -4.935084342956543

Token 228: ' "' (ID: 392)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3233801126480103
    2. 'prob' → logprob: -1.5733801126480103
    3. 'int' → logprob: -2.5733799934387207
    4. 'transition' → logprob: -2.6983799934387207
    5. 'bool' → logprob: -2.9483799934387207
    6. 'score' → logprob: -3.3233799934387207
    7. 'type' → logprob: -3.5733799934387207
    8. 'l' → logprob: -3.8233799934387207
    9. 'f' → logprob: -3.8233799934387207
    10. '0' → logprob: -3.9483799934387207

Token 229: 'run' (ID: 12935)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.493351697921753
    2. 'dp' → logprob: -1.743351697921753
    3. 'score' → logprob: -1.993351697921753
    4. 'che' → logprob: -3.118351697921753
    5. 's' → logprob: -3.368351697921753
    6. 'distance' → logprob: -3.618351697921753
    7. ' score' → logprob: -3.743351697921753
    8. 'max' → logprob: -3.743351697921753
    9. 'bool' → logprob: -3.868351697921753
    10. 'gain' → logprob: -3.868351697921753

Token 230: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.37896764278411865
    2. '_length' → logprob: -1.5039676427841187
    3. '-length' → logprob: -2.878967761993408
    4. '_lengths' → logprob: -5.128967761993408
    5. ' length' → logprob: -5.253967761993408
    6. 'max' → logprob: -5.503967761993408
    7. 'e' → logprob: -5.753967761993408
    8. ' lengths' → logprob: -6.003967761993408
    9. 's' → logprob: -6.128967761993408
    10. '_max' → logprob: -6.378967761993408

Token 231: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4099521338939667
    2. 'encoding' → logprob: -2.034952163696289
    3. ' encoding' → logprob: -2.159952163696289
    4. '_encoding' → logprob: -3.409952163696289
    5. 'max' → logprob: -4.409952163696289
    6. 's' → logprob: -4.534952163696289
    7. 'encoded' → logprob: -4.909952163696289
    8. '_max' → logprob: -5.409952163696289
    9. ')' → logprob: -5.659952163696289
    10. ' encoded' → logprob: -6.159952163696289

Token 232: ' pour' (ID: 1930)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5547534823417664
    2. '#' → logprob: -1.4297535419464111
    3. 'd' → logprob: -2.304753541946411
    4. ' f' → logprob: -3.554753541946411
    5. 'for' → logprob: -3.804753541946411
    6. ' d' → logprob: -4.679753303527832
    7. 'max' → logprob: -5.054753303527832
    8. ',' → logprob: -5.429753303527832
    9. 's' → logprob: -5.679753303527832
    10. 'run' → logprob: -6.054753303527832

Token 233: ' des' (ID: 731)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.15545164048671722
    2. 'each' → logprob: -3.405451536178589
    3. '#' → logprob: -4.530451774597168
    4. '[' → logprob: -4.530451774597168
    5. 'l' → logprob: -4.530451774597168
    6. ']' → logprob: -4.780451774597168
    7. ' ' → logprob: -4.780451774597168
    8. ' la' → logprob: -5.030451774597168
    9. 'i' → logprob: -5.030451774597168
    10. ' each' → logprob: -5.155451774597168

Token 234: ' patterns' (ID: 18587)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.315566062927246
    2. '[' → logprob: -2.315566062927246
    3. 'K' → logprob: -2.440566062927246
    4. ' sequences' → logprob: -2.565566062927246
    5. ' K' → logprob: -3.065566062927246
    6. 'bits' → logprob: -3.065566062927246
    7. ' comb' → logprob: -3.565566062927246
    8. 'comb' → logprob: -3.815566062927246
    9. 'f' → logprob: -3.815566062927246
    10. 'ranges' → logprob: -3.940566062927246

Token 235: ' bin' (ID: 6958)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'aires' (ID: 8507)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9578579664230347
    2. 'd' → logprob: -1.9578579664230347
    3. 'for' → logprob: -1.9578579664230347
    4. ')' → logprob: -2.582858085632324
    5. 'length' → logprob: -2.957858085632324
    6. ']' → logprob: -2.957858085632324
    7. '#' → logprob: -3.957858085632324
    8. 'def' → logprob: -4.082858085632324
    9. '   ' → logprob: -4.082858085632324
    10. ' for' → logprob: -4.332858085632324

Token 237: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.460729718208313
    2. ']' → logprob: -1.085729718208313
    3. ' for' → logprob: -4.835729598999023
    4. '.' → logprob: -4.960729598999023
    5. 'd' → logprob: -5.335729598999023
    6. '#' → logprob: -5.585729598999023
    7. ',' → logprob: -5.960729598999023
    8. 'import' → logprob: -6.460729598999023
    9. ' ]' → logprob: -6.710729598999023
    10. ')' → logprob: -7.335729598999023

Token 238: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -5.6934557505883276e-05
    2. 'for' → logprob: -10.875057220458984
    3. 'd' → logprob: -11.000057220458984
    4. '#' → logprob: -11.375057220458984
    5. '
' → logprob: -13.125057220458984
    6. 'import' → logprob: -13.375057220458984
    7. '```' → logprob: -13.625057220458984
    8. 'Q' → logprob: -14.250057220458984
    9. ' f' → logprob: -14.500057220458984
    10. '[' → logprob: -15.000057220458984

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31332340836524963
    2. '=' → logprob: -1.3133233785629272
    3. '=[[' → logprob: -10.063323020935059
    4. ' ' → logprob: -11.938323020935059
    5. '=[' → logprob: -11.938323020935059
    6. '[' → logprob: -13.063323020935059
    7. '[[' → logprob: -13.938323020935059
    8. '=[]' → logprob: -14.438323020935059
    9. ' =[' → logprob: -14.563323020935059
    10. '.append' → logprob: -14.688323020935059

Token 240: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00020354038861114532
    2. ' [[' → logprob: -8.500203132629395
    3. '[' → logprob: -16.75020408630371
    4. '0' → logprob: -18.00020408630371
    5. 'd' → logprob: -18.87520408630371
    6. ' ' → logprob: -19.50020408630371
    7. '([[' → logprob: -19.50020408630371
    8. '   ' → logprob: -21.87520408630371
    9. '[d' → logprob: -22.50020408630371
    10. '=[[' → logprob: -23.00020408630371

Token 241: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.44574936106801e-05
    2. ' ' → logprob: -10.75007438659668
    3. '[' → logprob: -11.12507438659668
    4. '-' → logprob: -11.37507438659668
    5. 'False' → logprob: -12.00007438659668
    6. '
' → logprob: -12.18757438659668
    7. 'float' → logprob: -12.75007438659668
    8. '1' → logprob: -12.81257438659668
    9. '(' → logprob: -13.31257438659668
    10. ' [' → logprob: -13.56257438659668

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023846338444855064
    2. ']*' → logprob: -8.875238418579102
    3. ' ]' → logprob: -10.000238418579102
    4. ')' → logprob: -10.875238418579102
    5. ' for' → logprob: -11.375238418579102
    6. 'for' → logprob: -11.625238418579102
    7. '   ' → logprob: -11.875238418579102
    8. ' ' → logprob: -13.000238418579102
    9. ']*(' → logprob: -13.500238418579102
    10. '*' → logprob: -14.000238418579102

Token 243: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4682237505912781
    2. '*' → logprob: -1.7182238101959229
    3. ' *' → logprob: -2.218223810195923
    4. ' for' → logprob: -2.968223810195923
    5. 'for' → logprob: -3.593223810195923
    6. ']*' → logprob: -5.593223571777344
    7. '   ' → logprob: -6.593223571777344
    8. ' ' → logprob: -7.093223571777344
    9. ')' → logprob: -8.343223571777344
    10. '(' → logprob: -8.468223571777344

Token 244: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.027855733409523964
    2. '(' → logprob: -3.777855634689331
    3. ' ' → logprob: -5.40285587310791
    4. ' (' → logprob: -9.27785587310791
    5. '   ' → logprob: -13.40285587310791
    6. '  ' → logprob: -15.15285587310791
    7. '0' → logprob: -16.027854919433594
    8. '1' → logprob: -16.027854919433594
    9. '
' → logprob: -16.527854919433594
    10. '256' → logprob: -16.527854919433594

Token 245: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03386145085096359
    2. '(' → logprob: -3.4088613986968994
    3. ' ' → logprob: -8.53386116027832
    4. ' (' → logprob: -11.03386116027832
    5. '   ' → logprob: -14.03386116027832
    6. '1' → logprob: -14.40886116027832
    7. '0' → logprob: -14.65886116027832
    8. '
' → logprob: -15.28386116027832
    9. '256' → logprob: -15.78386116027832
    10. '  ' → logprob: -16.34636116027832

Token 246: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.029905300587415695
    2. ' **' → logprob: -3.529905319213867
    3. '*' → logprob: -9.279905319213867
    4. '^' → logprob: -10.404905319213867
    5. 'N' → logprob: -11.154905319213867
    6. ' ' → logprob: -12.529905319213867
    7. ' ' → logprob: -12.654905319213867
    8. ' *' → logprob: -12.779905319213867
    9. '```' → logprob: -12.904905319213867
    10. '*N' → logprob: -13.029905319213867

Token 247: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006520323222503066
    2. ' N' → logprob: -7.375651836395264
    3. ' ' → logprob: -10.875652313232422
    4. '   ' → logprob: -12.750652313232422
    5. '(' → logprob: -14.125652313232422
    6. ' ' → logprob: -14.125652313232422
    7. '  ' → logprob: -14.750652313232422
    8. '	N' → logprob: -14.875652313232422
    9. '(N' → logprob: -15.000652313232422
    10. '2' → logprob: -15.125652313232422

Token 248: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889022678136826
    2. ' for' → logprob: -2.578890323638916
    3. '   ' → logprob: -15.703889846801758
    4. ')' → logprob: -15.828889846801758
    5. ' ' → logprob: -16.078889846801758
    6. ']' → logprob: -16.703889846801758
    7. '	for' → logprob: -17.078889846801758
    8. '
' → logprob: -17.328889846801758
    9. 'f' → logprob: -18.203889846801758
    10. '

' → logprob: -18.453889846801758

Token 249: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00798986665904522
    2. ' _' → logprob: -4.882989883422852
    3. 'Q' → logprob: -8.632989883422852
    4. ' Q' → logprob: -9.007989883422852
    5. '_Q' → logprob: -9.882989883422852
    6. ' range' → logprob: -11.007989883422852
    7. 'range' → logprob: -12.007989883422852
    8. ' ' → logprob: -13.007989883422852
    9. ' in' → logprob: -13.007989883422852
    10. '_=' → logprob: -13.882989883422852

Token 250: ' in' (ID: 306)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.016782525926828384
    2. ' Q' → logprob: -4.266782760620117
    3. ' in' → logprob: -6.141782760620117
    4. 'in' → logprob: -8.516782760620117
    5. '_' → logprob: -8.766782760620117
    6. ' range' → logprob: -10.141782760620117
    7. 'range' → logprob: -10.266782760620117
    8. ' ' → logprob: -11.141782760620117
    9. '_Q' → logprob: -11.766782760620117
    10. '(Q' → logprob: -12.766782760620117

Token 251: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0015320050297304988
    2. ' Q' → logprob: -6.501532077789307
    3. 'range' → logprob: -11.126531600952148
    4. ' range' → logprob: -11.376531600952148
    5. '	Q' → logprob: -14.001531600952148
    6. '_Q' → logprob: -14.251531600952148
    7. ' ' → logprob: -14.501531600952148
    8. 'R' → logprob: -15.001531600952148
    9. '_' → logprob: -15.376531600952148
    10. ')' → logprob: -15.501531600952148

Token 252: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012642296496778727
    2. ']

' → logprob: -9.125126838684082
    3. ']
' → logprob: -11.625126838684082
    4. ' ]' → logprob: -12.500126838684082
    5. ')' → logprob: -12.625126838684082
    6. ')]' → logprob: -13.875126838684082
    7. ']

' → logprob: -15.750126838684082
    8. ']
' → logprob: -16.125125885009766
    9. 'def' → logprob: -16.500125885009766
    10. ']


' → logprob: -16.875125885009766

Token 253: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3790920078754425
    2. '#' → logprob: -1.7540919780731201
    3. 'i' → logprob: -2.37909197807312
    4. '
' → logprob: -3.75409197807312
    5. 'mask' → logprob: -5.504092216491699
    6. ' for' → logprob: -5.754092216491699
    7. 'M' → logprob: -6.129092216491699
    8. 's' → logprob: -6.379092216491699
    9. 'x' → logprob: -6.504092216491699
    10. 'f' → logprob: -6.629092216491699

Token 254: ' Rem' (ID: 6890)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036662293132394552
    2. 'def' → logprob: -5.753666400909424
    3. '#' → logprob: -7.878666400909424
    4. ' for' → logprob: -10.628665924072266
    5. 'mask' → logprob: -11.253665924072266
    6. 'i' → logprob: -11.503665924072266
    7. 'f' → logprob: -11.753665924072266
    8. 'max' → logprob: -12.253665924072266
    9. 'result' → logprob: -12.628665924072266
    10. 'F' → logprob: -12.628665924072266

Token 255: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.02804202400147915
    2. 'p' → logprob: -3.6530420780181885
    3. 'placer' → logprob: -6.528041839599609
    4. 'pla' → logprob: -9.52804183959961
    5. 'ple' → logprob: -9.90304183959961
    6. 'plit' → logprob: -10.65304183959961
    7. 'a' → logprob: -10.65304183959961
    8. '#' → logprob: -10.77804183959961
    9. 'pir' → logprob: -10.90304183959961
    10. 'plier' → logprob: -11.02804183959961

Token 256: 'issage' (ID: 63863)
  Prédit: 'issage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issage' → logprob: -0.24153991043567657
    2. 'ir' → logprob: -1.6165399551391602
    3. '#' → logprob: -4.99153995513916
    4. 'isser' → logprob: -6.11653995513916
    5. 'issement' → logprob: -6.49153995513916
    6. 'iss' → logprob: -6.99153995513916
    7. 'er' → logprob: -6.99153995513916
    8. 'u' → logprob: -7.74153995513916
    9. 'issez' → logprob: -7.99153995513916
    10. 'ice' → logprob: -8.24153995513916

Token 257: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06410983204841614
    2. ' for' → logprob: -2.8141098022460938
    3. '<|end|>' → logprob: -6.314109802246094
    4. '
' → logprob: -9.314109802246094
    5. ')' → logprob: -9.814109802246094
    6. ']' → logprob: -9.939109802246094
    7. '#' → logprob: -10.064109802246094
    8. '<|end|>' → logprob: -11.064109802246094
    9. 'range' → logprob: -11.314109802246094
    10. 'd' → logprob: -11.439109802246094

Token 258: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23459097743034363
    2. 'd' → logprob: -1.859591007232666
    3. ' range' → logprob: -3.984591007232666
    4. 'f' → logprob: -4.109591007232666
    5. '_' → logprob: -4.734591007232666
    6. 'for' → logprob: -5.234591007232666
    7. ' d' → logprob: -6.484591007232666
    8. 'Q' → logprob: -6.609591007232666
    9. 'i' → logprob: -8.484590530395508
    10. ' f' → logprob: -8.484590530395508

Token 259: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4208430349826813
    2. 'd' → logprob: -1.6708430051803589
    3. 'f' → logprob: -1.9208430051803589
    4. '#' → logprob: -5.170843124389648
    5. 'range' → logprob: -6.920843124389648
    6. ' for' → logprob: -7.420843124389648
    7. '...' → logprob: -7.670843124389648
    8. 'first' → logprob: -8.420843124389648
    9. '```' → logprob: -8.545843124389648
    10. 'import' → logprob: -8.795843124389648

Token 260: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.00016063073417171836
    2. '#' → logprob: -9.375160217285156
    3. 'ix' → logprob: -10.250160217285156
    4. 'ce' → logprob: -12.000160217285156
    5. 'ices' → logprob: -12.000160217285156
    6. 'ace' → logprob: -12.375160217285156
    7. 'e' → logprob: -12.750160217285156
    8. 'ise' → logprob: -13.000160217285156
    9. 'ic' → logprob: -13.125160217285156
    10. 'oce' → logprob: -13.250160217285156

Token 261: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018375040963292122
    2. 'd' → logprob: -4.643374919891357
    3. ' for' → logprob: -4.768374919891357
    4. 'f' → logprob: -10.018375396728516
    5. ' d' → logprob: -10.893375396728516
    6. '#' → logprob: -11.768375396728516
    7. '[' → logprob: -12.393375396728516
    8. 'pour' → logprob: -13.018375396728516
    9. 'import' → logprob: -13.393375396728516
    10. 's' → logprob: -13.393375396728516

Token 262: ' à' (ID: 1221)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009869617642834783
    2. ' for' → logprob: -7.0009870529174805
    3. '<|end|>' → logprob: -10.62598705291748
    4. '
' → logprob: -10.87598705291748
    5. 'd' → logprob: -11.25098705291748
    6. '#' → logprob: -11.62598705291748
    7. ':' → logprob: -12.87598705291748
    8. '.' → logprob: -13.62598705291748
    9. ']' → logprob: -13.75098705291748
    10. ')' → logprob: -14.00098705291748

Token 263: ' partir' (ID: 12100)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09513935446739197
    2. '[' → logprob: -2.970139265060425
    3. 'i' → logprob: -4.220139503479004
    4. 'l' → logprob: -4.470139503479004
    5. '1' → logprob: -4.720139503479004
    6. 'Q' → logprob: -6.720139503479004
    7. 'la' → logprob: -7.470139503479004
    8. ' ' → logprob: -7.845139503479004
    9. '#' → logprob: -8.095139503479004
    10. 'N' → logprob: -8.345139503479004

Token 264: ' de' (ID: 334)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5581437349319458
    2. ' range' → logprob: -0.9331437349319458
    3. '1' → logprob: -4.558143615722656
    4. 'for' → logprob: -4.683143615722656
    5. ' for' → logprob: -5.433143615722656
    6. '#' → logprob: -6.308143615722656
    7. '(range' → logprob: -6.308143615722656
    8. ' ' → logprob: -6.683143615722656
    9. '0' → logprob: -7.433143615722656
    10. ' la' → logprob: -7.558143615722656

Token 265: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5593278408050537
    2. 'range' → logprob: -1.9343278408050537
    3. 'i' → logprob: -2.3093278408050537
    4. '0' → logprob: -2.4343278408050537
    5. 'Q' → logprob: -3.3093278408050537
    6. 'N' → logprob: -3.3093278408050537
    7. '#' → logprob: -5.059328079223633
    8. 'l' → logprob: -5.684328079223633
    9. 'd' → logprob: -5.684328079223633
    10. 'f' → logprob: -5.809328079223633

Token 266: ''entrée' (ID: 115820)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3101876676082611
    2. 'range' → logprob: -1.9351876974105835
    3. 'input' → logprob: -3.810187578201294
    4. 'i' → logprob: -3.935187578201294
    5. 'for' → logprob: -4.185187816619873
    6. '0' → logprob: -4.185187816619873
    7. '=' → logprob: -4.310187816619873
    8. 'def' → logprob: -4.935187816619873
    9. '2' → logprob: -5.685187816619873
    10. '#' → logprob: -5.810187816619873

Token 267: ' utilisateur' (ID: 115595)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003227740991860628
    2. '
' → logprob: -6.128227710723877
    3. ' for' → logprob: -7.003227710723877
    4. 'd' → logprob: -10.503228187561035
    5. 'f' → logprob: -11.378228187561035
    6. 's' → logprob: -11.378228187561035
    7. '()
' → logprob: -11.503228187561035
    8. 'data' → logprob: -11.878228187561035
    9. ':
' → logprob: -12.003228187561035
    10. 'pattern' → logprob: -12.003228187561035

Token 268: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022558939235750586
    2. '
' → logprob: -8.750226020812988
    3. ' for' → logprob: -9.625226020812988
    4. 'f' → logprob: -14.875226020812988
    5. 'd' → logprob: -15.750226020812988
    6. 'fo' → logprob: -16.375225067138672
    7. '
' → logprob: -17.000225067138672
    8. 's' → logprob: -17.000225067138672
    9. '

' → logprob: -17.375225067138672
    10. ',
' → logprob: -17.375225067138672

Token 269: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3856492842023727e-06
    2. ' for' → logprob: -13.625000953674316
    3. 'fo' → logprob: -17.375001907348633
    4. '```' → logprob: -17.375001907348633
    5. 'd' → logprob: -17.625001907348633
    6. 'f' → logprob: -17.750001907348633
    7. '	for' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '#' → logprob: -18.875001907348633
    10. '
' → logprob: -19.125001907348633

Token 270: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. ' for' → logprob: -12.625003814697266
    3. 'fo' → logprob: -16.750003814697266
    4. '
' → logprob: -17.625003814697266
    5. 'd' → logprob: -18.125003814697266
    6. 'f' → logprob: -18.375003814697266
    7. '```' → logprob: -18.625003814697266
    8. 'from' → logprob: -18.750003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '	for' → logprob: -19.500003814697266

Token 271: ' it' (ID: 480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006797663867473602
    2. ' for' → logprob: -5.006797790527344
    3. 'or' → logprob: -10.381797790527344
    4. 'pour' → logprob: -10.631797790527344
    5. '
' → logprob: -10.881797790527344
    6. 'range' → logprob: -13.506797790527344
    7. ' pour' → logprob: -13.881797790527344
    8. '=' → logprob: -14.381797790527344
    9. 's' → logprob: -14.381797790527344
    10. '```' → logprob: -14.506797790527344

Token 272: 'ère' (ID: 4346)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12227410078048706
    2. 'er' → logprob: -2.747274160385132
    3. 'for' → logprob: -3.747274160385132
    4. ' range' → logprob: -5.372273921966553
    5. '_range' → logprob: -5.872273921966553
    6. 'e' → logprob: -5.872273921966553
    7. 'ère' → logprob: -5.997273921966553
    8. 'é' → logprob: -6.122273921966553
    9. 'Range' → logprob: -6.247273921966553
    10. 'me' → logprob: -6.747273921966553

Token 273: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20565372705459595
    2. ' for' → logprob: -1.7056536674499512
    3. ' over' → logprob: -6.330653667449951
    4. 'pour' → logprob: -6.705653667449951
    5. ' pour' → logprob: -7.580653667449951
    6. '_' → logprob: -7.830653667449951
    7. ' through' → logprob: -9.33065414428711
    8. 'sur' → logprob: -9.83065414428711
    9. ' sur' → logprob: -9.95565414428711
    10. 'over' → logprob: -9.95565414428711

Token 274: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20882710814476013
    2. 'in' → logprob: -1.8338271379470825
    3. 'for' → logprob: -3.958827018737793
    4. ' for' → logprob: -6.208827018737793
    5. ' =' → logprob: -6.333827018737793
    6. '_' → logprob: -6.458827018737793
    7. 'range' → logprob: -6.708827018737793
    8. '=' → logprob: -6.958827018737793
    9. ',' → logprob: -8.083827018737793
    10. ' ' → logprob: -8.458827018737793

Token 275: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6433643698692322
    2. '1' → logprob: -1.768364429473877
    3. ' range' → logprob: -1.768364429473877
    4. 'R' → logprob: -2.268364429473877
    5. '0' → logprob: -4.018364429473877
    6. 'Q' → logprob: -4.893364429473877
    7. ' R' → logprob: -5.893364429473877
    8. ' ' → logprob: -7.018364429473877
    9. 'N' → logprob: -8.018363952636719
    10. ' Q' → logprob: -8.768363952636719

Token 276: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10592302680015564
    2. ' range' → logprob: -3.2309229373931885
    3. '1' → logprob: -3.4809229373931885
    4. 'R' → logprob: -3.7309229373931885
    5. '0' → logprob: -5.480923175811768
    6. 'N' → logprob: -6.855923175811768
    7. 'Q' → logprob: -7.105923175811768
    8. ' R' → logprob: -9.85592269897461
    9. 'rang' → logprob: -10.35592269897461
    10. 'r' → logprob: -10.35592269897461

Token 277: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11979204416275024
    2. 'à' → logprob: -2.2447919845581055
    3. ' a' → logprob: -5.4947919845581055
    4. ' jusqu' → logprob: -6.6197919845581055
    5. '+' → logprob: -8.244791984558105
    6. ' ' → logprob: -8.494791984558105
    7. 'a' → logprob: -8.494791984558105
    8. ',' → logprob: -8.744791984558105
    9. 'range' → logprob: -8.744791984558105
    10. ' range' → logprob: -9.494791984558105

Token 278: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.016616291366518e-05
    2. ' N' → logprob: -9.625070571899414
    3. 'K' → logprob: -13.375070571899414
    4. ' ' → logprob: -14.500070571899414
    5. 'R' → logprob: -14.625070571899414
    6. '   ' → logprob: -15.000070571899414
    7. '(N' → logprob: -15.375070571899414
    8. '	N' → logprob: -15.500070571899414
    9. 'n' → logprob: -15.750070571899414
    10. '<N' → logprob: -15.875070571899414

Token 279: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4271543025970459
    2. ':' → logprob: -1.552154302597046
    3. ':
' → logprob: -2.177154302597046
    4. ' for' → logprob: -4.052154541015625
    5. '
' → logprob: -5.927154541015625
    6. 'range' → logprob: -7.302154541015625
    7. '+' → logprob: -7.427154541015625
    8. 'in' → logprob: -8.427154541015625
    9. ' :' → logprob: -8.677154541015625
    10. ',' → logprob: -8.677154541015625

Token 280: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00416969507932663
    2. ' for' → logprob: -5.629169464111328
    3. ':
' → logprob: -7.879169464111328
    4. '
' → logprob: -9.129169464111328
    5. ':' → logprob: -9.504169464111328
    6. ',' → logprob: -12.879169464111328
    7. '	for' → logprob: -13.629169464111328
    8. 'range' → logprob: -14.254169464111328
    9. '   ' → logprob: -14.629169464111328
    10. '```' → logprob: -14.629169464111328

Token 281: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -13.25000286102295
    3. 'i' → logprob: -14.12500286102295
    4. '
' → logprob: -16.125001907348633
    5. '```' → logprob: -17.750001907348633
    6. 'f' → logprob: -18.750001907348633
    7. 'd' → logprob: -19.125001907348633
    8. '	for' → logprob: -19.500001907348633
    9. '``' → logprob: -19.625001907348633
    10. 'R' → logprob: -19.875001907348633

Token 282: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06198975816369057
    2. 'i' → logprob: -2.8119897842407227
    3. '	i' → logprob: -12.061989784240723
    4. ' ' → logprob: -12.061989784240723
    5. '_i' → logprob: -12.686989784240723
    6. ' ' → logprob: -12.686989784240723
    7. '_' → logprob: -12.811989784240723
    8. 'I' → logprob: -13.811989784240723
    9. ' _' → logprob: -15.186989784240723
    10. '```' → logprob: -16.686988830566406

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07912077754735947
    2. 'in' → logprob: -2.5791208744049072
    3. ' ' → logprob: -9.579120635986328
    4. ',' → logprob: -10.829120635986328
    5. 'dans' → logprob: -10.829120635986328
    6. '_' → logprob: -11.329120635986328
    7. '+' → logprob: -11.454120635986328
    8. 'de' → logprob: -11.704120635986328
    9. 'd' → logprob: -11.704120635986328
    10. 'In' → logprob: -11.891620635986328

Token 284: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2435513734817505
    2. ' Q' → logprob: -1.7435513734817505
    3. ' range' → logprob: -3.493551254272461
    4. 'range' → logprob: -4.868551254272461
    5. 'R' → logprob: -5.993551254272461
    6. ' R' → logprob: -7.368551254272461
    7. '(Q' → logprob: -10.743551254272461
    8. ' ' → logprob: -10.993551254272461
    9. '	Q' → logprob: -11.243551254272461
    10. 'Range' → logprob: -13.368551254272461

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011774055659770966
    2. ':
' → logprob: -4.636774063110352
    3. ' :' → logprob: -6.261774063110352
    4. '   ' → logprob: -10.011774063110352
    5. ' :
' → logprob: -10.386774063110352
    6. ',' → logprob: -11.261774063110352
    7. '=' → logprob: -12.011774063110352
    8. ' =' → logprob: -12.136774063110352
    9. ':
' → logprob: -13.011774063110352
    10. '):' → logprob: -14.136774063110352

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7276486754417419
    2. ' line' → logprob: -0.8526486754417419
    3. ' data' → logprob: -3.1026487350463867
    4. ' lines' → logprob: -4.227648735046387
    5. ' s' → logprob: -4.602648735046387
    6. ' parts' → logprob: -5.602648735046387
    7. 'data' → logprob: -5.602648735046387
    8. ' lignes' → logprob: -5.852648735046387
    9. ' ligne' → logprob: -6.477648735046387
    10. ' for' → logprob: -6.727648735046387

Token 287: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7339590191841125
    2. 'line' → logprob: -0.9839590191841125
    3. '   ' → logprob: -3.6089589595794678
    4. 'row' → logprob: -3.8589589595794678
    5. 's' → logprob: -3.9839589595794678
    6. ' row' → logprob: -3.9839589595794678
    7. 'if' → logprob: -4.733959197998047
    8. ' s' → logprob: -4.983959197998047
    9. 'data' → logprob: -5.108959197998047
    10. ' if' → logprob: -5.108959197998047

Token 288: ' Lecture' (ID: 106534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.320401906967163
    2. 'line' → logprob: -1.445401906967163
    3. 'bits' → logprob: -1.695401906967163
    4. 'S' → logprob: -2.320401906967163
    5. 'row' → logprob: -2.570401906967163
    6. 'for' → logprob: -4.070402145385742
    7. 'a' → logprob: -4.195402145385742
    8. 'if' → logprob: -4.445402145385742
    9. 'bit' → logprob: -4.820402145385742
    10. 'ligne' → logprob: -4.820402145385742

Token 289: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5108176469802856
    2. 's' → logprob: -2.010817527770996
    3. ' s' → logprob: -2.385817527770996
    4. 'b' → logprob: -2.760817527770996
    5. ' line' → logprob: -2.885817527770996
    6. ' ligne' → logprob: -4.760817527770996
    7. '    ' → logprob: -5.010817527770996
    8. 'ligne' → logprob: -5.385817527770996
    9. ' =' → logprob: -5.635817527770996
    10. 'bin' → logprob: -6.135817527770996

Token 290: ''une' (ID: 13337)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6791451573371887
    2. 'e' → logprob: -2.054145097732544
    3. 'input' → logprob: -2.054145097732544
    4. ' la' → logprob: -2.429145097732544
    5. 'une' → logprob: -3.304145097732544
    6. 'a' → logprob: -3.929145097732544
    7. ''une' → logprob: -3.929145097732544
    8. ''' → logprob: -4.054145336151123
    9. ' une' → logprob: -4.179145336151123
    10. 'es' → logprob: -4.679145336151123

Token 291: ' ligne' (ID: 19583)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.084929920732975
    2. 'ligne' → logprob: -2.959929943084717
    3. ' chaîne' → logprob: -4.209929943084717
    4. 'string' → logprob: -5.459929943084717
    5. 'liste' → logprob: -5.709929943084717
    6. ' chaine' → logprob: -6.334929943084717
    7. 'cha' → logprob: -6.459929943084717
    8. 'val' → logprob: -6.584929943084717
    9. 'chain' → logprob: -6.709929943084717
    10. ' ligne' → logprob: -7.834929943084717

Token 292: ' d' (ID: 272)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0165576934814453
    2. '   ' → logprob: -1.1415576934814453
    3. 's' → logprob: -1.5165576934814453
    4. ' s' → logprob: -2.5165576934814453
    5. ' b' → logprob: -5.516557693481445
    6. ' =' → logprob: -5.766557693481445
    7. '    ' → logprob: -6.391557693481445
    8. 'bits' → logprob: -6.516557693481445
    9. 'a' → logprob: -6.766557693481445
    10. ',' → logprob: -7.016557693481445

Token 293: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4265369772911072
    2. 'entrée' → logprob: -1.176537036895752
    3. 'input' → logprob: -4.301537036895752
    4. 'e' → logprob: -4.301537036895752
    5. 'entr' → logprob: -6.051537036895752
    6. 'ent' → logprob: -6.176537036895752
    7. ''ent' → logprob: -6.426537036895752
    8. ' entrée' → logprob: -6.426537036895752
    9. 'es' → logprob: -6.426537036895752
    10. ' input' → logprob: -7.301537036895752

Token 294: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5838946104049683
    2. ' =' → logprob: -1.3338946104049683
    3. 's' → logprob: -2.458894729614258
    4. 'b' → logprob: -3.083894729614258
    5. ' s' → logprob: -3.458894729614258
    6. '=' → logprob: -5.583894729614258
    7. ',' → logprob: -5.958894729614258
    8. '    ' → logprob: -5.958894729614258
    9. ' b' → logprob: -7.083894729614258
    10. 'a' → logprob: -7.708894729614258

Token 295: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9070340991020203
    2. '   ' → logprob: -1.282034158706665
    3. ' line' → logprob: -2.032034158706665
    4. 's' → logprob: -2.282034158706665
    5. ' S' → logprob: -3.407034158706665
    6. 'S' → logprob: -4.532033920288086
    7. ' a' → logprob: -4.907033920288086
    8. 'line' → logprob: -5.282033920288086
    9. 'a' → logprob: -5.407033920288086
    10. ' bits' → logprob: -5.407033920288086

Token 296: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34684404730796814
    2. 'S' → logprob: -1.8468440771102905
    3. ' s' → logprob: -3.096843957901001
    4. 'line' → logprob: -3.596843957901001
    5. 'a' → logprob: -3.971843957901001
    6. ' S' → logprob: -4.59684419631958
    7. 'bits' → logprob: -4.72184419631958
    8. ' line' → logprob: -4.84684419631958
    9. 'b' → logprob: -5.72184419631958
    10. 'row' → logprob: -6.09684419631958

Token 297: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10767927020788193
    2. ' j' → logprob: -2.6076793670654297
    3. 'x' → logprob: -4.48267936706543
    4. 'b' → logprob: -5.10767936706543
    5. 's' → logprob: -6.10767936706543
    6. 'c' → logprob: -6.73267936706543
    7. 'bit' → logprob: -6.98267936706543
    8. 'S' → logprob: -7.10767936706543
    9. ' x' → logprob: -7.35767936706543
    10. ' b' → logprob: -7.35767936706543

Token 298: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08899148553609848
    2. 'in' → logprob: -2.463991403579712
    3. ' ' → logprob: -11.213991165161133
    4. '	in' → logprob: -11.838991165161133
    5. 'd' → logprob: -12.463991165161133
    6. '  ' → logprob: -12.713991165161133
    7. ')' → logprob: -12.838991165161133
    8. 'In' → logprob: -12.838991165161133
    9. '_' → logprob: -13.213991165161133
    10. '   ' → logprob: -13.213991165161133

Token 299: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5673171281814575
    2. 'bit' → logprob: -2.192317008972168
    3. 'x' → logprob: -2.442317008972168
    4. ' c' → logprob: -2.942317008972168
    5. 'ch' → logprob: -3.192317008972168
    6. 'val' → logprob: -3.192317008972168
    7. 'b' → logprob: -3.942317008972168
    8. 's' → logprob: -4.192317008972168
    9. 'v' → logprob: -4.192317008972168
    10. ' val' → logprob: -4.442317008972168

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07917343080043793
    2. 'in' → logprob: -2.5791733264923096
    3. 's' → logprob: -9.20417308807373
    4. ' ' → logprob: -9.32917308807373
    5. ',' → logprob: -10.32917308807373
    6. 'n' → logprob: -11.45417308807373
    7. '  ' → logprob: -11.57917308807373
    8. 'ine' → logprob: -12.20417308807373
    9. '	in' → logprob: -12.45417308807373
    10. 'on' → logprob: -12.57917308807373

Token 301: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009122979827225208
    2. ' enumerate' → logprob: -7.000912189483643
    3. 'enum' → logprob: -14.8759126663208
    4. 'en' → logprob: -15.0009126663208
    5. '```' → logprob: -16.000911712646484
    6. '(en' → logprob: -17.000911712646484
    7. '.enumer' → logprob: -17.500911712646484
    8. 'enqueue' → logprob: -18.375911712646484
    9. 'enu' → logprob: -19.625911712646484
    10. '#' → logprob: -19.625911712646484

Token 302: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12694522738456726
    2. 'input' → logprob: -2.1269452571868896
    3. ' input' → logprob: -11.626945495605469
    4. '(' → logprob: -13.251945495605469
    5. ',input' → logprob: -13.751945495605469
    6. '(list' → logprob: -13.876945495605469
    7. '=input' → logprob: -13.876945495605469
    8. 'list' → logprob: -14.001945495605469
    9. 'range' → logprob: -14.626945495605469
    10. '(range' → logprob: -14.876945495605469

Token 303: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0875118151307106
    2. '().' → logprob: -2.5875117778778076
    3. '()):
' → logprob: -5.462512016296387
    4. '():' → logprob: -5.587512016296387
    5. '())' → logprob: -7.712512016296387
    6. '):' → logprob: -9.587512016296387
    7. '()[' → logprob: -10.837512016296387
    8. '():
' → logprob: -10.837512016296387
    9. '(' → logprob: -12.087512016296387
    10. '());' → logprob: -12.337512016296387

Token 304: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014528519241139293
    2. '():' → logprob: -7.001452922821045
    3. '.strip' → logprob: -8.376452445983887
    4. '):
' → logprob: -8.626452445983887
    5. '()' → logprob: -9.626452445983887
    6. ':' → logprob: -10.376452445983887
    7. ' ):' → logprob: -11.126452445983887
    8. ')' → logprob: -11.501452445983887
    9. '()):
' → logprob: -13.001452445983887
    10. '().' → logprob: -13.501452445983887

Token 305: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005389806814491749
    2. 'd' → logprob: -5.88038969039917
    3. ' d' → logprob: -6.38038969039917
    4. ' if' → logprob: -7.38038969039917
    5. 'if' → logprob: -9.380390167236328
    6. '   ' → logprob: -9.755390167236328
    7. ' f' → logprob: -10.255390167236328
    8. '        
' → logprob: -10.630390167236328
    9. 'f' → logprob: -11.130390167236328
    10. '
' → logprob: -11.880390167236328

Token 306: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05002178996801376
    2. 'd' → logprob: -3.5500218868255615
    3. ' if' → logprob: -4.550021648406982
    4. ' d' → logprob: -5.175021648406982
    5. 'if' → logprob: -5.675021648406982
    6. '   ' → logprob: -8.42502212524414
    7. '
' → logprob: -9.17502212524414
    8. '        
' → logprob: -10.42502212524414
    9. '           ' → logprob: -11.55002212524414
    10. '      ' → logprob: -11.67502212524414

Token 307: ' enumerate' (ID: 29671)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8446731567382812
    2. ' d' → logprob: -1.2196731567382812
    3. ' if' → logprob: -1.9696731567382812
    4. '       ' → logprob: -2.2196731567382812
    5. 'if' → logprob: -3.9696731567382812
    6. '   ' → logprob: -5.844673156738281
    7. '
' → logprob: -6.219673156738281
    8. '    ' → logprob: -6.469673156738281
    9. ' ' → logprob: -8.094673156738281
    10. '        
' → logprob: -8.469673156738281

Token 308: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 309: ' donne' (ID: 30004)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43382593989372253
    2. '<|end|>' → logprob: -1.308825969696045
    3. '   ' → logprob: -3.808825969696045
    4. '       ' → logprob: -4.183825969696045
    5. '
' → logprob: -4.183825969696045
    6. ':
' → logprob: -4.808825969696045
    7. '<|end|>' → logprob: -5.308825969696045
    8. ' ' → logprob: -5.308825969696045
    9. ')' → logprob: -6.183825969696045
    10. ' :' → logprob: -6.433825969696045

Token 310: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4495602250099182
    2. ' la' → logprob: -2.1995601654052734
    3. 'l' → logprob: -2.9495601654052734
    4. ' index' → logprob: -3.1995601654052734
    5. ' le' → logprob: -3.3245601654052734
    6. 'index' → logprob: -3.5745601654052734
    7. 'c' → logprob: -4.199560165405273
    8. '(index' → logprob: -4.324560165405273
    9. ' un' → logprob: -4.574560165405273
    10. 'j' → logprob: -4.699560165405273

Token 311: ''' (ID: 6)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.12695340812206268
    2. 'indice' → logprob: -2.376953363418579
    3. ''' → logprob: -4.376953601837158
    4. ''ind' → logprob: -5.001953601837158
    5. ' index' → logprob: -5.126953601837158
    6. 'j' → logprob: -8.251953125
    7. '(index' → logprob: -8.751953125
    8. 'indices' → logprob: -8.876953125
    9. '#index' → logprob: -9.001953125
    10. ' индекс' → logprob: -9.376953125

Token 312: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.048666052520275116
    2. 'indice' → logprob: -3.048666000366211
    3. ' index' → logprob: -10.548666000366211
    4. 'ind' → logprob: -11.423666000366211
    5. 'indices' → logprob: -11.423666000366211
    6. 'idx' → logprob: -11.798666000366211
    7. 'num' → logprob: -12.298666000366211
    8. 'position' → logprob: -12.923666000366211
    9. 'j' → logprob: -13.298666000366211
    10. ''ind' → logprob: -13.423666000366211

Token 313: ' j' (ID: 441)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026389814913272858
    2. 'et' → logprob: -4.4013895988464355
    3. ' et' → logprob: -4.9013895988464355
    4. ' ,' → logprob: -5.6513895988464355
    5. 'and' → logprob: -7.1513895988464355
    6. ' and' → logprob: -7.7763895988464355
    7. ',c' → logprob: -8.276390075683594
    8. '   ' → logprob: -8.401390075683594
    9. ' ' → logprob: -8.526390075683594
    10. 'c' → logprob: -8.776390075683594

Token 314: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11924613267183304
    2. ':' → logprob: -2.869246244430542
    3. ' ,' → logprob: -3.119246244430542
    4. '   ' → logprob: -5.744246006011963
    5. '):' → logprob: -5.744246006011963
    6. ' :' → logprob: -6.369246006011963
    7. ' ' → logprob: -7.619246006011963
    8. '<|end|>' → logprob: -7.994246006011963
    9. '  ' → logprob: -8.119246482849121
    10. ' in' → logprob: -8.244246482849121

Token 315: ' le' (ID: 505)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6273186802864075
    2. ' la' → logprob: -1.2523186206817627
    3. ' c' → logprob: -2.6273186206817627
    4. 'le' → logprob: -3.5023186206817627
    5. ' le' → logprob: -4.127318859100342
    6. 'la' → logprob: -4.252318859100342
    7. 'val' → logprob: -4.252318859100342
    8. 'car' → logprob: -4.627318859100342
    9. 'char' → logprob: -4.752318859100342
    10. 'value' → logprob: -5.002318859100342

Token 316: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.018604405224323273
    2. ' caractère' → logprob: -4.393604278564453
    3. 'val' → logprob: -5.643604278564453
    4. 'char' → logprob: -6.518604278564453
    5. ' caract' → logprob: -7.518604278564453
    6. 'c' → logprob: -7.893604278564453
    7. ' car' → logprob: -9.768604278564453
    8. 'value' → logprob: -10.518604278564453
    9. 'character' → logprob: -11.018604278564453
    10. ' ' → logprob: -11.643604278564453

Token 317: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5130662322044373
    2. 'c' → logprob: -1.513066291809082
    3. '   ' → logprob: -2.013066291809082
    4. ' ' → logprob: -4.013066291809082
    5. '    ' → logprob: -4.638066291809082
    6. ')' → logprob: -5.763066291809082
    7. ',' → logprob: -5.763066291809082
    8. '<|end|>' → logprob: -5.763066291809082
    9. '	c' → logprob: -6.263066291809082
    10. ' s' → logprob: -6.388066291809082

Token 318: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025394415482878685
    2. '   ' → logprob: -4.775394439697266
    3. ':
' → logprob: -4.775394439697266
    4. '       ' → logprob: -5.650394439697266
    5. ' :' → logprob: -5.900394439697266
    6. '):' → logprob: -6.650394439697266
    7. ' :
' → logprob: -8.900394439697266
    8. '):
' → logprob: -8.900394439697266
    9. ' if' → logprob: -9.525394439697266
    10. '
' → logprob: -9.775394439697266

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038317868020385504
    2. 'd' → logprob: -6.25383186340332
    3. '   ' → logprob: -7.37883186340332
    4. ' if' → logprob: -7.62883186340332
    5. ' d' → logprob: -7.62883186340332
    6. 'if' → logprob: -9.62883186340332
    7. '        
' → logprob: -9.75383186340332
    8. ' ' → logprob: -10.25383186340332
    9. '           ' → logprob: -11.00383186340332
    10. '    ' → logprob: -11.25383186340332

Token 320: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.5350365042686462
    2. 'if' → logprob: -1.660036563873291
    3. '       ' → logprob: -2.285036563873291
    4. ' if' → logprob: -2.410036563873291
    5. ' d' → logprob: -4.160036563873291
    6. '   ' → logprob: -4.410036563873291
    7. '           ' → logprob: -5.410036563873291
    8. ' ' → logprob: -8.660036087036133
    9. '	if' → logprob: -9.785036087036133
    10. '	d' → logprob: -10.535036087036133

Token 321: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[I' → logprob: -13.750001907348633
    3. '[' → logprob: -14.125001907348633
    4. '[j' → logprob: -15.875001907348633
    5. ' [' → logprob: -15.875001907348633
    6. '[N' → logprob: -17.000001907348633
    7. '```' → logprob: -17.375001907348633
    8. ')[' → logprob: -17.875001907348633
    9. '[s' → logprob: -18.625001907348633
    10. '[
' → logprob: -18.750001907348633

Token 322: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013732073130086064
    2. ']' → logprob: -7.251373291015625
    3. '[i' → logprob: -7.376373291015625
    4. ' ][' → logprob: -10.501373291015625
    5. '[' → logprob: -12.501373291015625
    6. '[j' → logprob: -13.501373291015625
    7. '   ' → logprob: -14.376373291015625
    8. '"][' → logprob: -14.501373291015625
    9. ')[' → logprob: -14.626373291015625
    10. '```' → logprob: -14.751373291015625

Token 323: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11043424159288406
    2. '(' → logprob: -2.4854342937469482
    3. '2' → logprob: -4.485434055328369
    4. 'i' → logprob: -5.235434055328369
    5. '1' → logprob: -6.360434055328369
    6. '(j' → logprob: -7.360434055328369
    7. ']' → logprob: -7.485434055328369
    8. '(i' → logprob: -7.610434055328369
    9. ' j' → logprob: -7.985434055328369
    10. ' (' → logprob: -7.985434055328369

Token 324: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00025514091248624027
    2. ']=' → logprob: -8.375255584716797
    3. '=' → logprob: -10.875255584716797
    4. ' ]' → logprob: -12.375255584716797
    5. ')' → logprob: -14.750255584716797
    6. ' =' → logprob: -15.250255584716797
    7. ']+=' → logprob: -15.625255584716797
    8. 's' → logprob: -16.500255584716797
    9. '])' → logprob: -16.625255584716797
    10. '[' → logprob: -16.625255584716797

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427599936723709
    2. ' =' → logprob: -2.0177600383758545
    3. '=int' → logprob: -9.517760276794434
    4. '=c' → logprob: -12.517760276794434
    5. ']' → logprob: -13.017760276794434
    6. '+=' → logprob: -13.642760276794434
    7. ']=' → logprob: -14.267760276794434
    8. 'c' → logprob: -14.392760276794434
    9. ')' → logprob: -14.392760276794434
    10. ' +=' → logprob: -15.017760276794434

Token 326: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026931550353765488
    2. '1' → logprob: -4.1519317626953125
    3. 'c' → logprob: -4.6519317626953125
    4. ' int' → logprob: -7.0269317626953125
    5. 'ord' → logprob: -7.9019317626953125
    6. '0' → logprob: -11.026931762695312
    7. ' c' → logprob: -11.776931762695312
    8. ' ' → logprob: -11.901931762695312
    9. ' ord' → logprob: -13.526931762695312
    10. '   ' → logprob: -13.776931762695312

Token 327: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0001801801408873871
    2. '(' → logprob: -8.6251802444458
    3. '(
' → logprob: -15.2501802444458
    4. ' (' → logprob: -16.375179290771484
    5. ')c' → logprob: -16.500179290771484
    6. 'c' → logprob: -17.000179290771484
    7. '(

' → logprob: -18.125179290771484
    8. '(s' → logprob: -18.625179290771484
    9. '(C' → logprob: -18.875179290771484
    10. '()' → logprob: -18.875179290771484

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0802738870552275e-05
    2. ' )' → logprob: -11.75001049041748
    3. ')
' → logprob: -13.12501049041748
    4. ')#' → logprob: -15.50001049041748
    5. '<|end|>' → logprob: -15.50001049041748
    6. '))' → logprob: -15.75001049041748
    7. '[' → logprob: -16.875011444091797
    8. '   ' → logprob: -17.125011444091797
    9. ')}' → logprob: -17.125011444091797
    10. '())' → logprob: -17.125011444091797

Token 329: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' Convert' (ID: 15629)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 332: 'it' (ID: 278)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.01104311365634203
    2. '(' → logprob: -4.761043071746826
    3. '(d' → logprob: -6.261043071746826
    4. ')' → logprob: -8.761043548583984
    5. 'c' → logprob: -9.761043548583984
    6. '(
' → logprob: -9.761043548583984
    7. ' (' → logprob: -9.886043548583984
    8. 'd' → logprob: -10.261043548583984
    9. ')c' → logprob: -10.261043548583984
    10. '()' → logprob: -11.386043548583984

Token 333: ' chaque' (ID: 21194)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006010802462697029
    2. '(' → logprob: -5.131011009216309
    3. 'c' → logprob: -9.631011009216309
    4. ' (' → logprob: -11.881011009216309
    5. '(
' → logprob: -11.881011009216309
    6. ')c' → logprob: -13.631011009216309
    7. ')' → logprob: -15.381011009216309
    8. '(

' → logprob: -15.506011009216309
    9. ' c' → logprob: -15.631011009216309
    10. '(d' → logprob: -15.631011009216309

Token 334: ' caractère' (ID: 80509)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.36954376101493835
    2. 'c' → logprob: -1.2445437908172607
    3. '(' → logprob: -4.494543552398682
    4. ' c' → logprob: -5.244543552398682
    5. '<|end|>' → logprob: -6.494543552398682
    6. ' (' → logprob: -6.994543552398682
    7. ')' → logprob: -7.369543552398682
    8. ' ' → logprob: -7.494543552398682
    9. ')c' → logprob: -7.994543552398682
    10. ' )' → logprob: -9.24454402923584

Token 335: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014324271120131016
    2. '<|end|>' → logprob: -4.639324188232422
    3. ' )' → logprob: -5.514324188232422
    4. '())' → logprob: -8.889324188232422
    5. '()' → logprob: -9.764324188232422
    6. ' into' → logprob: -10.014324188232422
    7. '<|end|>' → logprob: -10.014324188232422
    8. ' *' → logprob: -10.264324188232422
    9. '   ' → logprob: -10.639324188232422
    10. ' ' → logprob: -10.764324188232422

Token 337: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6526367664337158
    2. 'd' → logprob: -1.6526367664337158
    3. '1' → logprob: -2.402636766433716
    4. 'int' → logprob: -3.027636766433716
    5. ' d' → logprob: -3.402636766433716
    6. '0' → logprob: -3.402636766433716
    7. '<|end|>' → logprob: -4.152636528015137
    8. ')' → logprob: -4.277636528015137
    9. ' int' → logprob: -4.402636528015137
    10. ' )' → logprob: -4.527636528015137

Token 338: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7686675786972046
    2. ' d' → logprob: -1.5186675786972046
    3. ' ' → logprob: -2.268667697906494
    4. '<|end|>' → logprob: -2.768667697906494
    5. 'd' → logprob: -3.143667697906494
    6. ' )' → logprob: -3.268667697906494
    7. ' assign' → logprob: -3.893667697906494
    8. 'assign' → logprob: -4.393667697906494
    9. '#' → logprob: -4.893667697906494
    10. ' #' → logprob: -5.393667697906494

Token 340: ''aff' (ID: 53397)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.0566067695617676
    2. 'e' → logprob: -2.0566067695617676
    3. 'es' → logprob: -2.5566067695617676
    4. ''ass' → logprob: -3.1816067695617676
    5. ']' → logprob: -3.3066067695617676
    6. ')' → logprob: -3.4316067695617676
    7. '#' → logprob: -3.8066067695617676
    8. 'stock' → logprob: -4.056606769561768
    9. '<|end|>' → logprob: -4.056606769561768
    10. ''aff' → logprob: -4.181606769561768

Token 341: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0002751598076429218
    2. 'ected' → logprob: -8.375275611877441
    3. 'ecta' → logprob: -12.000275611877441
    4. 'irm' → logprob: -12.375275611877441
    5. 'erm' → logprob: -12.375275611877441
    6. 'er' → logprob: -12.500275611877441
    7. 'ec' → logprob: -12.750275611877441
    8. 'ort' → logprob: -12.875275611877441
    9. '=' → logprob: -12.875275611877441
    10. 'r' → logprob: -13.125275611877441

Token 342: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007237906102091074
    2. 'ue' → logprob: -5.007237911224365
    3. 'er' → logprob: -8.257237434387207
    4. 'ect' → logprob: -8.382237434387207
    5. 'é' → logprob: -11.632237434387207
    6. 'igne' → logprob: -12.132237434387207
    7. 'te' → logprob: -12.757237434387207
    8. '   ' → logprob: -12.882237434387207
    9. 'ige' → logprob: -13.132237434387207
    10. ')' → logprob: -13.507237434387207

Token 343: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1644551008939743
    2. ' d' → logprob: -1.9144550561904907
    3. '<|end|>' → logprob: -5.539454936981201
    4. ' ' → logprob: -8.28945541381836
    5. ' la' → logprob: -11.41445541381836
    6. ')' → logprob: -11.41445541381836
    7. ' 
' → logprob: -12.78945541381836
    8. 'f' → logprob: -13.16445541381836
    9. '<|end|>' → logprob: -13.41445541381836
    10. ')d' → logprob: -13.41445541381836

Token 345: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0012997613521292806
    2. '[' → logprob: -7.626299858093262
    3. '(i' → logprob: -7.751299858093262
    4. ')' → logprob: -9.251299858093262
    5. '   ' → logprob: -9.501299858093262
    6. ']' → logprob: -9.751299858093262
    7. ' [' → logprob: -10.001299858093262
    8. 'd' → logprob: -10.751299858093262
    9. '][' → logprob: -11.126299858093262
    10. ' ' → logprob: -11.126299858093262

Token 346: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009064418263733387
    2. '[i' → logprob: -5.009064197540283
    3. ']' → logprob: -6.259064197540283
    4. '])' → logprob: -8.634064674377441
    5. ' ][' → logprob: -9.009064674377441
    6. '[' → logprob: -9.759064674377441
    7. '[j' → logprob: -10.509064674377441
    8. ')' → logprob: -11.884064674377441
    9. ')[' → logprob: -12.134064674377441
    10. '   ' → logprob: -12.259064674377441

Token 347: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010415440425276756
    2. '][' → logprob: -4.760415554046631
    3. ']' → logprob: -6.635415554046631
    4. 'i' → logprob: -8.135415077209473
    5. '])' → logprob: -9.760415077209473
    6. '[j' → logprob: -10.135415077209473
    7. ' j' → logprob: -10.260415077209473
    8. ' ][' → logprob: -10.760415077209473
    9. ' ]' → logprob: -11.760415077209473
    10. ' ' → logprob: -12.010415077209473

Token 348: '].

' (ID: 37441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006272526225075126
    2. ']' → logprob: -8.250627517700195
    3. ' )' → logprob: -9.000627517700195
    4. ')]' → logprob: -9.375627517700195
    5. '])' → logprob: -9.375627517700195
    6. '<|end|>' → logprob: -10.125627517700195
    7. ')
' → logprob: -11.625627517700195
    8. '   ' → logprob: -12.000627517700195
    9. '))' → logprob: -12.625627517700195
    10. '[' → logprob: -12.875627517700195

Token 349: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25929999351501465
    2. '<|end|>' → logprob: -2.2592999935150146
    3. '#' → logprob: -2.7592999935150146
    4. 'f' → logprob: -3.1342999935150146
    5. ' for' → logprob: -4.759300231933594
    6. 'd' → logprob: -6.134300231933594
    7. '<|end|>' → logprob: -6.634300231933594
    8. '
' → logprob: -7.009300231933594
    9. ' ' → logprob: -7.134300231933594
    10. ')' → logprob: -7.259300231933594

Token 350: ' Construction' (ID: 31452)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037853471003472805
    2. '#' → logprob: -6.128785133361816
    3. 'def' → logprob: -6.878785133361816
    4. 'f' → logprob: -7.753785133361816
    5. ' for' → logprob: -9.378785133361816
    6. 'max' → logprob: -10.753785133361816
    7. '
' → logprob: -12.628785133361816
    8. 'dp' → logprob: -12.753785133361816
    9. 'from' → logprob: -12.753785133361816
    10. 'if' → logprob: -13.003785133361816

Token 351: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2638453543186188
    2. ' for' → logprob: -1.7638453245162964
    3. ' de' → logprob: -3.263845443725586
    4. 'de' → logprob: -5.138845443725586
    5. ' d' → logprob: -5.388845443725586
    6. '#' → logprob: -5.388845443725586
    7. 'd' → logprob: -5.763845443725586
    8. ' of' → logprob: -6.513845443725586
    9. ' des' → logprob: -6.763845443725586
    10. 'def' → logprob: -6.888845443725586

Token 352: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3863897323608398
    2. 'f' → logprob: -1.6363897323608398
    3. 'for' → logprob: -1.7613897323608398
    4. ' f' → logprob: -2.26138973236084
    5. ' for' → logprob: -2.26138973236084
    6. 'range' → logprob: -3.51138973236084
    7. 'the' → logprob: -3.63638973236084
    8. '#' → logprob: -3.63638973236084
    9. ' the' → logprob: -4.13638973236084
    10. ' range' → logprob: -4.26138973236084

Token 353: ' matr' (ID: 25095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08975064009428024
    2. ' for' → logprob: -2.4647505283355713
    3. 'f' → logprob: -8.214750289916992
    4. '#' → logprob: -8.839750289916992
    5. 'def' → logprob: -9.339750289916992
    6. '```' → logprob: -9.339750289916992
    7. 'dp' → logprob: -9.964750289916992
    8. 's' → logprob: -10.089750289916992
    9. 'mask' → logprob: -10.464750289916992
    10. ' f' → logprob: -10.464750289916992

Token 354: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.09427955001592636
    2. 'ce' → logprob: -2.7192795276641846
    3. '#' → logprob: -4.469279766082764
    4. 'ix' → logprob: -4.719279766082764
    5. 'e' → logprob: -7.219279766082764
    6. 'rice' → logprob: -7.719279766082764
    7. 't' → logprob: -7.844279766082764
    8. 'x' → logprob: -7.969279766082764
    9. 'ise' → logprob: -8.344279289245605
    10. 'atrice' → logprob: -8.594279289245605

Token 355: ' f' (ID: 285)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20500405132770538
    2. ' for' → logprob: -1.705004096031189
    3. 'f' → logprob: -5.7050042152404785
    4. ' f' → logprob: -8.70500373840332
    5. 's' → logprob: -9.95500373840332
    6. '#' → logprob: -11.58000373840332
    7. 'def' → logprob: -12.08000373840332
    8. ' range' → logprob: -12.58000373840332
    9. 'range' → logprob: -12.70500373840332
    10. 'd' → logprob: -12.70500373840332

Token 356: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028710884507745504
    2. ' for' → logprob: -5.877871036529541
    3. '
' → logprob: -10.3778715133667
    4. 'f' → logprob: -10.8778715133667
    5. ']' → logprob: -12.2528715133667
    6. ')' → logprob: -12.3778715133667
    7. '#' → logprob: -13.3778715133667
    8. '```' → logprob: -13.6278715133667
    9. 'def' → logprob: -14.1278715133667
    10. '=' → logprob: -14.2528715133667

Token 357: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006031776778399944
    2. ' for' → logprob: -5.1310319900512695
    3. 'f' → logprob: -9.25603199005127
    4. '
' → logprob: -13.13103199005127
    5. 'i' → logprob: -13.63103199005127
    6. ')' → logprob: -14.00603199005127
    7. '#' → logprob: -14.50603199005127
    8. '```' → logprob: -14.50603199005127
    9. 'def' → logprob: -15.00603199005127
    10. '0' → logprob: -15.00603199005127

Token 358: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004858458414673805
    2. ' for' → logprob: -7.750485897064209
    3. 'f' → logprob: -10.00048542022705
    4. 'def' → logprob: -12.87548542022705
    5. '#' → logprob: -13.00048542022705
    6. 'i' → logprob: -13.50048542022705
    7. '```' → logprob: -13.87548542022705
    8. '
' → logprob: -14.37548542022705
    9. ')' → logprob: -14.50048542022705
    10. 'from' → logprob: -15.12548542022705

Token 359: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.34869757294654846
    2. ' i' → logprob: -1.223697543144226
    3. 'j' → logprob: -9.473697662353516
    4. ' j' → logprob: -9.848697662353516
    5. ' ' → logprob: -10.723697662353516
    6. '0' → logprob: -11.036197662353516
    7. 'k' → logprob: -11.098697662353516
    8. '	i' → logprob: -12.098697662353516
    9. ' k' → logprob: -12.161197662353516
    10. 'I' → logprob: -12.348697662353516

Token 360: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09145964682102203
    2. ' i' → logprob: -2.4664597511291504
    3. 'k' → logprob: -7.21645975112915
    4. 'j' → logprob: -7.21645975112915
    5. 'mask' → logprob: -8.716459274291992
    6. 'x' → logprob: -8.966459274291992
    7. ' j' → logprob: -9.278959274291992
    8. ' k' → logprob: -9.653959274291992
    9. ' mask' → logprob: -9.966459274291992
    10. 'K' → logprob: -10.091459274291992

Token 361: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1800285428762436
    2. 'in' → logprob: -1.8050285577774048
    3. ',' → logprob: -9.055028915405273
    4. '+' → logprob: -10.305028915405273
    5. ' i' → logprob: -10.930028915405273
    6. ' ' → logprob: -11.180028915405273
    7. '1' → logprob: -11.555028915405273
    8. 'i' → logprob: -11.555028915405273
    9. 'range' → logprob: -11.930028915405273
    10. 'from' → logprob: -12.055028915405273

Token 362: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49279722571372986
    2. ' range' → logprob: -1.2427972555160522
    3. 'Q' → logprob: -2.4927971363067627
    4. 'R' → logprob: -4.117797374725342
    5. ' Q' → logprob: -6.742797374725342
    6. ' R' → logprob: -8.492796897888184
    7. 'N' → logprob: -8.992796897888184
    8. 'r' → logprob: -11.617796897888184
    9. 'Range' → logprob: -11.992796897888184
    10. 'rang' → logprob: -12.617796897888184

Token 363: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24758155643939972
    2. 'R' → logprob: -1.8725816011428833
    3. ' range' → logprob: -3.1225814819335938
    4. 'Q' → logprob: -3.8725814819335938
    5. ' R' → logprob: -8.247581481933594
    6. 'N' → logprob: -8.372581481933594
    7. 'in' → logprob: -9.372581481933594
    8. ' Q' → logprob: -10.247581481933594
    9. 'r' → logprob: -10.372581481933594
    10. '1' → logprob: -10.622581481933594

Token 364: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6776320934295654
    2. ' in' → logprob: -1.0526320934295654
    3. ' à' → logprob: -2.3026320934295654
    4. 'à' → logprob: -3.4276320934295654
    5. 'to' → logprob: -5.0526323318481445
    6. ',' → logprob: -6.1776323318481445
    7. ' to' → logprob: -7.9276323318481445
    8. 'range' → logprob: -7.9276323318481445
    9. 'dans' → logprob: -8.552632331848145
    10. ' ' → logprob: -8.677632331848145

Token 365: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005569627974182367
    2. ' N' → logprob: -7.500556945800781
    3. 'R' → logprob: -12.875556945800781
    4. ' ' → logprob: -14.500556945800781
    5. 'n' → logprob: -15.250556945800781
    6. '
' → logprob: -15.625556945800781
    7. 'Q' → logprob: -16.25055694580078
    8. '```' → logprob: -16.37555694580078
    9. '(N' → logprob: -16.87555694580078
    10. 'range' → logprob: -17.00055694580078

Token 366: ' inclus' (ID: 11891)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.053190670907497406
    2. ' for' → logprob: -3.4281907081604004
    3. 'range' → logprob: -4.4281907081604
    4. 'in' → logprob: -5.8031907081604
    5. ' in' → logprob: -6.0531907081604
    6. ':' → logprob: -7.3031907081604
    7. ' range' → logprob: -7.3031907081604
    8. 'R' → logprob: -8.428190231323242
    9. ',' → logprob: -8.678190231323242
    10. ':
' → logprob: -9.553190231323242

Token 367: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012880774214863777
    2. ' for' → logprob: -4.762880802154541
    3. 'in' → logprob: -6.012880802154541
    4. ':' → logprob: -7.137880802154541
    5. ' in' → logprob: -7.387880802154541
    6. ':
' → logprob: -8.012880325317383
    7. 'range' → logprob: -10.262880325317383
    8. ',' → logprob: -10.887880325317383
    9. '   ' → logprob: -11.887880325317383
    10. '
' → logprob: -13.512880325317383

Token 368: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46101516485214233
    2. ' for' → logprob: -1.836015224456787
    3. 'i' → logprob: -2.586015224456787
    4. 'range' → logprob: -3.086015224456787
    5. 'R' → logprob: -3.586015224456787
    6. ' range' → logprob: -3.961015224456787
    7. ' in' → logprob: -4.336015224456787
    8. ' i' → logprob: -4.961015224456787
    9. 'in' → logprob: -5.086015224456787
    10. ')' → logprob: -5.336015224456787

Token 369: ''est' (ID: 6616)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7270493507385254
    2. ' in' → logprob: -1.8520493507385254
    3. 'for' → logprob: -2.1020493507385254
    4. '=' → logprob: -2.8520493507385254
    5. ' =' → logprob: -2.9770493507385254
    6. 'range' → logprob: -3.7270493507385254
    7. 'ange' → logprob: -3.8520493507385254
    8. ' for' → logprob: -3.9770493507385254
    9. ')' → logprob: -4.102049350738525
    10. '):' → logprob: -4.727049350738525

Token 370: '-à' (ID: 56297)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.9467170238494873
    2. ' range' → logprob: -1.4467170238494873
    3. 'range' → logprob: -1.5717170238494873
    4. ' R' → logprob: -2.3217170238494873
    5. '1' → logprob: -3.1967170238494873
    6. 'Q' → logprob: -5.071717262268066
    7. ' in' → logprob: -5.071717262268066
    8. 'in' → logprob: -5.571717262268066
    9. 'for' → logprob: -5.696717262268066
    10. ' ' → logprob: -5.946717262268066

Token 371: '-dire' (ID: 76064)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.7266482710838318
    2. 'range' → logprob: -1.2266483306884766
    3. ' range' → logprob: -1.8516483306884766
    4. ' R' → logprob: -2.8516483306884766
    5. '1' → logprob: -4.851648330688477
    6. 'Q' → logprob: -8.476648330688477
    7. ' ' → logprob: -8.726648330688477
    8. 'r' → logprob: -10.226648330688477
    9. 'Range' → logprob: -10.414148330688477
    10. 'for' → logprob: -10.976648330688477

Token 372: ' pour' (ID: 1930)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7652998566627502
    2. ' range' → logprob: -1.6402997970581055
    3. 'for' → logprob: -1.8902997970581055
    4. 'R' → logprob: -2.1402997970581055
    5. ' for' → logprob: -3.1402997970581055
    6. ' R' → logprob: -3.7652997970581055
    7. '1' → logprob: -6.2652997970581055
    8. 'i' → logprob: -6.5152997970581055
    9. ')' → logprob: -7.2652997970581055
    10. 'Q' → logprob: -7.6402997970581055

Token 373: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4836449921131134
    2. ' i' → logprob: -1.983644962310791
    3. ' range' → logprob: -2.483644962310791
    4. 'R' → logprob: -2.733644962310791
    5. 'range' → logprob: -2.733644962310791
    6. ' R' → logprob: -3.733644962310791
    7. '1' → logprob: -5.233644962310791
    8. ' ' → logprob: -6.858644962310791
    9. 'r' → logprob: -7.358644962310791
    10. 'Q' → logprob: -7.858644962310791

Token 374: ' longueur' (ID: 104613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.289003849029541
    2. ' i' → logprob: -1.414003849029541
    3. ' range' → logprob: -5.539003849029541
    4. ' R' → logprob: -6.914003849029541
    5. 'range' → logprob: -7.039003849029541
    6. 'R' → logprob: -7.289003849029541
    7. '1' → logprob: -7.539003849029541
    8. ' ' → logprob: -8.039003372192383
    9. ')' → logprob: -9.289003372192383
    10. '
' → logprob: -9.289003372192383

Token 375: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3202805519104004
    2. '(' → logprob: -1.5702805519104004
    3. ' i' → logprob: -2.1952805519104004
    4. 'i' → logprob: -2.4452805519104004
    5. ' range' → logprob: -2.4452805519104004
    6. 'in' → logprob: -2.5702805519104004
    7. 'range' → logprob: -2.8202805519104004
    8. '1' → logprob: -3.9452805519104004
    9. '(i' → logprob: -4.1952805519104
    10. 'for' → logprob: -4.5702805519104

Token 376: ' bits' (ID: 18189)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3620240390300751
    2. 'range' → logprob: -2.2370240688323975
    3. 'i' → logprob: -2.3620240688323975
    4. 'Q' → logprob: -2.9870240688323975
    5. ' range' → logprob: -3.7370240688323975
    6. 'R' → logprob: -4.987023830413818
    7. ' ' → logprob: -5.112023830413818
    8. ' i' → logprob: -5.237023830413818
    9. 'K' → logprob: -5.237023830413818
    10. ' Q' → logprob: -6.487023830413818

Token 377: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6491648554801941
    2. '):' → logprob: -1.0241649150848389
    3. 'in' → logprob: -3.149164915084839
    4. ' in' → logprob: -3.649164915084839
    5. 'for' → logprob: -4.52416467666626
    6. ')' → logprob: -4.77416467666626
    7. ' ):
' → logprob: -5.02416467666626
    8. ',' → logprob: -5.77416467666626
    9. 'range' → logprob: -5.89916467666626
    10. ' ):' → logprob: -6.02416467666626

Token 378: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029762526974081993
    2. ' for' → logprob: -3.5297625064849854
    3. '   ' → logprob: -11.904762268066406
    4. '
' → logprob: -13.279762268066406
    5. 'range' → logprob: -13.654762268066406
    6. 'i' → logprob: -14.154762268066406
    7. ' 
' → logprob: -14.404762268066406
    8. ' range' → logprob: -14.529762268066406
    9. '```' → logprob: -16.029762268066406
    10. '	for' → logprob: -16.029762268066406

Token 379: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14271318912506104
    2. ' i' → logprob: -2.0177130699157715
    3. 'j' → logprob: -11.39271354675293
    4. 'range' → logprob: -12.51771354675293
    5. ' range' → logprob: -12.51771354675293
    6. 'R' → logprob: -12.64271354675293
    7. ' j' → logprob: -12.76771354675293
    8. ' in' → logprob: -13.01771354675293
    9. ' R' → logprob: -13.01771354675293
    10. ' ' → logprob: -13.14271354675293

Token 380: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4746730327606201
    2. ' in' → logprob: -0.9746730327606201
    3. ' ' → logprob: -8.2246732711792
    4. 'In' → logprob: -9.0996732711792
    5. '1' → logprob: -10.0996732711792
    6. ')' → logprob: -10.8496732711792
    7. '(' → logprob: -10.9746732711792
    8. 'd' → logprob: -10.9746732711792
    9. '_in' → logprob: -11.3496732711792
    10. 'de' → logprob: -11.4746732711792

Token 381: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.24558082222938538
    2. 'range' → logprob: -2.3705809116363525
    3. ' range' → logprob: -2.4955809116363525
    4. ' R' → logprob: -3.2455809116363525
    5. 'Q' → logprob: -5.870580673217773
    6. ' Q' → logprob: -9.745580673217773
    7. ' ' → logprob: -10.745580673217773
    8. '(range' → logprob: -11.745580673217773
    9. 'Range' → logprob: -11.870580673217773
    10. '1' → logprob: -12.495580673217773

Token 382: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.180258191714529e-06
    2. '1' → logprob: -11.750008583068848
    3. ' (' → logprob: -15.750008583068848
    4. '(N' → logprob: -16.75000762939453
    5. '(
' → logprob: -18.12500762939453
    6. '(i' → logprob: -18.50000762939453
    7. ' ' → logprob: -20.12500762939453
    8. '   ' → logprob: -21.00000762939453
    9. ',' → logprob: -21.12500762939453
    10. '((' → logprob: -21.87500762939453

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4287634491920471
    2. '(' → logprob: -1.0537633895874023
    3. ' ' → logprob: -9.928763389587402
    4. ' (' → logprob: -12.053763389587402
    5. '
' → logprob: -13.053763389587402
    6. '   ' → logprob: -13.178763389587402
    7. ')' → logprob: -13.553763389587402
    8. '(
' → logprob: -14.303763389587402
    9. ',' → logprob: -14.553763389587402
    10. '#' → logprob: -14.928763389587402

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016111508011817932
    2. ',N' → logprob: -6.626611232757568
    3. '(N' → logprob: -8.75161075592041
    4. ' ,' → logprob: -9.00161075592041
    5. 'N' → logprob: -13.75161075592041
    6. '(' → logprob: -14.12661075592041
    7. ',
' → logprob: -14.25161075592041
    8. '   ' → logprob: -14.75161075592041
    9. ',n' → logprob: -15.25161075592041
    10. ',i' → logprob: -15.37661075592041

Token 385: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009125363430939615
    2. ' N' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.1259126663208
    4. '(N' → logprob: -15.5009126663208
    5. ' ' → logprob: -15.8759126663208
    6. '	N' → logprob: -17.250911712646484
    7. '  ' → logprob: -17.875911712646484
    8. '
' → logprob: -18.000911712646484
    9. ',' → logprob: -18.750911712646484
    10. ',N' → logprob: -18.875911712646484

Token 386: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029753733426332474
    2. ' +' → logprob: -3.5297536849975586
    3. '   ' → logprob: -14.029753684997559
    4. '+
' → logprob: -14.279753684997559
    5. '1' → logprob: -14.779753684997559
    6. '+i' → logprob: -14.779753684997559
    7. '+)' → logprob: -15.654753684997559
    8. '()+' → logprob: -15.904753684997559
    9. ' ' → logprob: -16.029754638671875
    10. '+,' → logprob: -16.279754638671875

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.250060081481934
    4. '2' → logprob: -14.375060081481934
    5. '
' → logprob: -14.875060081481934
    6. ')' → logprob: -16.12506103515625
    7. '

' → logprob: -16.37506103515625
    8. '  ' → logprob: -17.00006103515625
    9. 'i' → logprob: -17.62506103515625
    10. '```' → logprob: -17.68756103515625

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -15.75001335144043
    4. '   ' → logprob: -16.25001335144043
    5. '2' → logprob: -16.50001335144043
    6. '
' → logprob: -17.00001335144043
    7. '```' → logprob: -17.00001335144043
    8. '

' → logprob: -18.00001335144043
    9. '),' → logprob: -18.43751335144043
    10. '  ' → logprob: -18.56251335144043

Token 389: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008677801117300987
    2. '):
' → logprob: -4.758677959442139
    3. ':' → logprob: -9.88367748260498
    4. '):
' → logprob: -12.00867748260498
    5. ' ):' → logprob: -12.75867748260498
    6. ')' → logprob: -13.13367748260498
    7. '   ' → logprob: -14.25867748260498
    8. ',' → logprob: -16.008678436279297
    9. '}:' → logprob: -16.258678436279297
    10. ':
' → logprob: -16.508678436279297

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9052304029464722
    2. 'for' → logprob: -0.9052304029464722
    3. ' for' → logprob: -1.6552304029464722
    4. ' ' → logprob: -10.655230522155762
    5. '	for' → logprob: -10.655230522155762
    6. '   ' → logprob: -12.905230522155762
    7. '    
' → logprob: -13.530230522155762
    8. '```' → logprob: -14.155230522155762
    9. '
' → logprob: -14.405230522155762
    10. '  ' → logprob: -14.405230522155762

Token 391: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009909313172101974
    2. ' for' → logprob: -5.009909152984619
    3. '   ' → logprob: -5.759909152984619
    4. 'mask' → logprob: -10.384909629821777
    5. ' ' → logprob: -12.384909629821777
    6. 'm' → logprob: -14.009909629821777
    7. ' mask' → logprob: -15.259909629821777
    8. '	for' → logprob: -15.384909629821777
    9. '
' → logprob: -15.509909629821777
    10. 'f' → logprob: -15.759909629821777

Token 392: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016885579680092633
    2. ' for' → logprob: -9.250168800354004
    3. '   ' → logprob: -9.875168800354004
    4. 'mask' → logprob: -10.875168800354004
    5. ' ' → logprob: -13.750168800354004
    6. '
' → logprob: -14.625168800354004
    7. 'pour' → logprob: -15.500168800354004
    8. '#' → logprob: -16.50016975402832
    9. 'm' → logprob: -16.87516975402832
    10. 'j' → logprob: -16.87516975402832

Token 393: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05293913558125496
    2. 'mask' → logprob: -3.9279391765594482
    3. 'x' → logprob: -5.052938938140869
    4. 'k' → logprob: -5.052938938140869
    5. ' j' → logprob: -5.177938938140869
    6. 'm' → logprob: -5.677938938140869
    7. 's' → logprob: -5.677938938140869
    8. 'b' → logprob: -7.177938938140869
    9. 'S' → logprob: -7.177938938140869
    10. 'v' → logprob: -7.427938938140869

Token 394: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13786688446998596
    2. 's' → logprob: -3.512866973876953
    3. 'mask' → logprob: -3.637866973876953
    4. 'x' → logprob: -4.137866973876953
    5. 'k' → logprob: -4.137866973876953
    6. 'S' → logprob: -4.387866973876953
    7. 'm' → logprob: -4.512866973876953
    8. ' j' → logprob: -6.012866973876953
    9. 'b' → logprob: -6.262866973876953
    10. 'v' → logprob: -6.387866973876953

Token 395: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07042418420314789
    2. 'in' → logprob: -2.6954240798950195
    3. '   ' → logprob: -8.32042407989502
    4. ')' → logprob: -9.44542407989502
    5. ',' → logprob: -9.94542407989502
    6. 'for' → logprob: -10.69542407989502
    7. 'd' → logprob: -11.07042407989502
    8. ' ' → logprob: -11.07042407989502
    9. 'In' → logprob: -12.19542407989502
    10. '  ' → logprob: -12.32042407989502

Token 396: ' ' (ID: 220)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.49534502625465393
    2. '2' → logprob: -1.1203449964523315
    3. 'range' → logprob: -2.870345115661621
    4. 'Q' → logprob: -5.370345115661621
    5. '0' → logprob: -6.620345115661621
    6. ' range' → logprob: -6.870345115661621
    7. '(' → logprob: -7.995345115661621
    8. ' R' → logprob: -8.370345115661621
    9. 'len' → logprob: -9.120345115661621
    10. ' ' → logprob: -10.120345115661621

Token 397: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.548855721950531
    2. 'R' → logprob: -0.923855721950531
    3. 'Q' → logprob: -4.048855781555176
    4. '0' → logprob: -5.048855781555176
    5. 'range' → logprob: -7.048855781555176
    6. 'len' → logprob: -7.798855781555176
    7. '(' → logprob: -8.548855781555176
    8. ' R' → logprob: -10.423855781555176
    9. '(R' → logprob: -10.923855781555176
    10. '1' → logprob: -12.298855781555176

Token 398: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7013309001922607
    2. ' in' → logprob: -0.7013309001922607
    3. '   ' → logprob: -5.07633113861084
    4. ',' → logprob: -6.95133113861084
    5. ')' → logprob: -8.07633113861084
    6. '    ' → logprob: -8.95133113861084
    7. ' R' → logprob: -9.20133113861084
    8. 'R' → logprob: -9.20133113861084
    9. ' ' → logprob: -9.32633113861084
    10. '(' → logprob: -9.57633113861084

Token 399: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018445169553160667
    2. ' ' → logprob: -6.50184440612793
    3. '(' → logprob: -8.50184440612793
    4. 'R' → logprob: -9.75184440612793
    5. '1' → logprob: -9.75184440612793
    6. '   ' → logprob: -11.62684440612793
    7. ' R' → logprob: -12.25184440612793
    8. ' (' → logprob: -12.75184440612793
    9. '```' → logprob: -13.12684440612793
    10. '`' → logprob: -14.25184440612793

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005244385101832449
    2. '1' → logprob: -8.125524520874023
    3. '(' → logprob: -8.875524520874023
    4. ' ' → logprob: -9.500524520874023
    5. 'R' → logprob: -12.000524520874023
    6. '   ' → logprob: -12.375524520874023
    7. ')' → logprob: -13.250524520874023
    8. '```' → logprob: -14.375524520874023
    9. 'len' → logprob: -15.125524520874023
    10. ' (' → logprob: -15.750524520874023

Token 401: '^' (ID: 61)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5762937664985657
    2. '**' → logprob: -0.8262937664985657
    3. '(i' → logprob: -9.3262939453125
    4. '(N' → logprob: -9.5762939453125
    5. '[i' → logprob: -9.7012939453125
    6. ')' → logprob: -10.4512939453125
    7. '^' → logprob: -11.0762939453125
    8. ' **)' → logprob: -11.3262939453125
    9. '```' → logprob: -11.5762939453125
    10. ' ' → logprob: -11.5762939453125

Token 402: 'i' (ID: 72)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007539079058915377
    2. 'i' → logprob: -5.00753927230835
    3. '(N' → logprob: -8.132538795471191
    4. '(i' → logprob: -8.507538795471191
    5. '(' → logprob: -8.757538795471191
    6. '   ' → logprob: -9.882538795471191
    7. ' N' → logprob: -10.132538795471191
    8. ' (' → logprob: -10.757538795471191
    9. 'n' → logprob: -11.007538795471191
    10. '
' → logprob: -11.132538795471191

Token 403: ')' (ID: 8)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8934244513511658
    2. '(' → logprob: -1.5184245109558105
    3. '(i' → logprob: -1.5184245109558105
    4. 'i' → logprob: -3.3934245109558105
    5. ')' → logprob: -3.7684245109558105
    6. '   ' → logprob: -4.1434245109558105
    7. 'R' → logprob: -4.2684245109558105
    8. ' (' → logprob: -4.5184245109558105
    9. '(R' → logprob: -4.5184245109558105
    10. ' **' → logprob: -4.6434245109558105

Token 404: ' -' (ID: 533)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4502487778663635
    2. '**' → logprob: -1.3252487182617188
    3. '):' → logprob: -2.9502487182617188
    4. '(' → logprob: -4.450248718261719
    5. '(j' → logprob: -4.950248718261719
    6. '(R' → logprob: -4.950248718261719
    7. '   ' → logprob: -4.950248718261719
    8. '):
' → logprob: -5.450248718261719
    9. ' **' → logprob: -5.950248718261719
    10. 'R' → logprob: -6.700248718261719

Token 405: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30090513825416565
    2. ' (' → logprob: -2.175905227661133
    3. '(i' → logprob: -2.550905227661133
    4. 'i' → logprob: -3.425905227661133
    5. 'R' → logprob: -4.300905227661133
    6. '(R' → logprob: -4.300905227661133
    7. '2' → logprob: -5.800905227661133
    8. ' R' → logprob: -6.425905227661133
    9. '   ' → logprob: -6.425905227661133
    10. ' i' → logprob: -7.050905227661133

Token 406: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5308796167373657
    2. '(i' → logprob: -1.5308796167373657
    3. 'i' → logprob: -1.9058796167373657
    4. '(R' → logprob: -3.530879497528076
    5. 'R' → logprob: -4.780879497528076
    6. ' (' → logprob: -5.155879497528076
    7. '1' → logprob: -6.405879497528076
    8. '2' → logprob: -7.280879497528076
    9. ')' → logprob: -8.280879974365234
    10. ' i' → logprob: -8.655879974365234

Token 407: ' inclus' (ID: 11891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0378376245498657
    2. 'for' → logprob: -1.2878376245498657
    3. ':' → logprob: -1.7878376245498657
    4. ' for' → logprob: -2.287837505340576
    5. '       ' → logprob: -2.537837505340576
    6. ':
' → logprob: -4.037837505340576
    7. ' in' → logprob: -6.287837505340576
    8. 'in' → logprob: -7.162837505340576
    9. '):
' → logprob: -7.537837505340576
    10. ',' → logprob: -7.662837505340576

Token 408: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5828377604484558
    2. 'for' → logprob: -1.8328378200531006
    3. '       ' → logprob: -1.9578378200531006
    4. ' for' → logprob: -2.4578378200531006
    5. ':' → logprob: -2.9578378200531006
    6. ':
' → logprob: -6.2078375816345215
    7. ' in' → logprob: -8.20783805847168
    8. 'in' → logprob: -8.45783805847168
    9. ' :' → logprob: -8.83283805847168
    10. '    ' → logprob: -9.70783805847168

Token 409: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44868797063827515
    2. '   ' → logprob: -1.57368803024292
    3. ' for' → logprob: -1.94868803024292
    4. '       ' → logprob: -4.44868803024292
    5. '	for' → logprob: -10.198687553405762
    6. ' ' → logprob: -10.448687553405762
    7. '    ' → logprob: -11.823687553405762
    8. '
' → logprob: -12.198687553405762
    9. '  ' → logprob: -12.698687553405762
    10. '```' → logprob: -12.823687553405762

Token 410: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07739151269197464
    2. ' for' → logprob: -2.9523916244506836
    3. '   ' → logprob: -3.8273916244506836
    4. 'j' → logprob: -7.827391624450684
    5. '       ' → logprob: -10.577391624450684
    6. ' j' → logprob: -10.827391624450684
    7. ' ' → logprob: -11.827391624450684
    8. 'range' → logprob: -12.202391624450684
    9. '	for' → logprob: -12.202391624450684
    10. 'Q' → logprob: -12.452391624450684

Token 411: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06997945159673691
    2. ' j' → logprob: -2.694979429244995
    3. 'k' → logprob: -10.444979667663574
    4. '	j' → logprob: -12.694979667663574
    5. ' ' → logprob: -12.819979667663574
    6. '   ' → logprob: -13.069979667663574
    7. 'R' → logprob: -13.444979667663574
    8. ' k' → logprob: -13.569979667663574
    9. 'x' → logprob: -14.444979667663574
    10. 'Q' → logprob: -14.569979667663574

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14271442592144012
    2. 'in' → logprob: -2.017714500427246
    3. ' ' → logprob: -11.767714500427246
    4. '  ' → logprob: -12.392714500427246
    5. 'In' → logprob: -12.517714500427246
    6. ')' → logprob: -12.767714500427246
    7. 'd' → logprob: -12.767714500427246
    8. ',' → logprob: -12.767714500427246
    9. 'import' → logprob: -12.767714500427246
    10. '   ' → logprob: -13.017714500427246

Token 413: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.12738139927387238
    2. 'range' → logprob: -2.5023813247680664
    3. ' range' → logprob: -3.7523813247680664
    4. ' R' → logprob: -4.252381324768066
    5. 'Range' → logprob: -11.627381324768066
    6. ' ' → logprob: -12.127381324768066
    7. '(range' → logprob: -13.252381324768066
    8. 'r' → logprob: -13.877381324768066
    9. '	range' → logprob: -14.252381324768066
    10. '   ' → logprob: -14.877381324768066

Token 414: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.612634362885728e-05
    2. '(i' → logprob: -10.500076293945312
    3. ' (' → logprob: -10.625076293945312
    4. '((' → logprob: -11.250076293945312
    5. '(
' → logprob: -12.125076293945312
    6. '2' → logprob: -12.750076293945312
    7. '0' → logprob: -14.000076293945312
    8. '   ' → logprob: -14.375076293945312
    9. '(pow' → logprob: -14.375076293945312
    10. ' ' → logprob: -15.000076293945312

Token 415: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18665310740470886
    2. '(' → logprob: -1.8116531372070312
    3. '0' → logprob: -5.061653137207031
    4. '1' → logprob: -7.811653137207031
    5. ' ' → logprob: -9.186653137207031
    6. ')' → logprob: -11.061653137207031
    7. '   ' → logprob: -11.686653137207031
    8. '(i' → logprob: -12.311653137207031
    9. '(
' → logprob: -12.311653137207031
    10. ' (' → logprob: -13.186653137207031

Token 416: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.7617943286895752
    2. '<<' → logprob: -0.8867943286895752
    3. ',' → logprob: -2.261794328689575
    4. '(' → logprob: -5.011794090270996
    5. '   ' → logprob: -6.011794090270996
    6. '0' → logprob: -6.011794090270996
    7. '(i' → logprob: -6.261794090270996
    8. '<<(' → logprob: -6.511794090270996
    9. '2' → logprob: -6.761794090270996
    10. ' ' → logprob: -7.761794090270996

Token 417: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00410499656572938
    2. ' i' → logprob: -5.504105091094971
    3. '(i' → logprob: -10.629104614257812
    4. '   ' → logprob: -14.004104614257812
    5. ' (' → logprob: -14.504104614257812
    6. ' ' → logprob: -15.254104614257812
    7. 'j' → logprob: -15.879104614257812
    8. '_i' → logprob: -16.004104614257812
    9. '	i' → logprob: -16.004104614257812
    10. '(' → logprob: -16.129104614257812

Token 418: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02652217075228691
    2. '):
' → logprob: -3.651522159576416
    3. ' ):' → logprob: -9.276522636413574
    4. ',' → logprob: -9.776522636413574
    5. '):
' → logprob: -10.526522636413574
    6. '-' → logprob: -11.151522636413574
    7. '#' → logprob: -11.901522636413574
    8. '   ' → logprob: -12.651522636413574
    9. ')' → logprob: -12.776522636413574
    10. '(' → logprob: -12.901522636413574

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12698091566562653
    2. 'if' → logprob: -2.376981019973755
    3. ' if' → logprob: -3.876981019973755
    4. ':' → logprob: -5.501980781555176
    5. 'f' → logprob: -7.626980781555176
    6. '):
' → logprob: -8.626980781555176
    7. '):' → logprob: -8.626980781555176
    8. '   ' → logprob: -8.876980781555176
    9. '#' → logprob: -9.126980781555176
    10. ' f' → logprob: -9.501980781555176

Token 420: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0054610674269497395
    2. '       ' → logprob: -6.0054612159729
    3. 'f' → logprob: -7.5054612159729
    4. 'mask' → logprob: -7.6304612159729
    5. ' if' → logprob: -7.7554612159729
    6. 'bit' → logprob: -7.7554612159729
    7. '           ' → logprob: -7.8804612159729
    8. '#' (adapté à ' #') → logprob: -8.505460739135742
    9. 'k' → logprob: -9.130460739135742
    10. 'count' → logprob: -9.630460739135742

Token 421: ' Extraction' (ID: 156732)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01296644750982523
    2. 'bit' → logprob: -5.387966632843018
    3. '       ' → logprob: -5.762966632843018
    4. 'mask' → logprob: -6.762966632843018
    5. ' if' → logprob: -6.887966632843018
    6. 'bits' → logprob: -7.387966632843018
    7. 'val' → logprob: -7.762966632843018
    8. 'b' → logprob: -8.01296615600586
    9. 'f' → logprob: -8.01296615600586
    10. '           ' → logprob: -8.13796615600586

Token 422: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37034496665000916
    2. '           ' → logprob: -2.745344877243042
    3. ' of' → logprob: -3.745344877243042
    4. 'f' → logprob: -3.870344877243042
    5. 'if' → logprob: -3.870344877243042
    6. ' de' → logprob: -4.120345115661621
    7. '#' → logprob: -4.120345115661621
    8. 'prev' → logprob: -4.120345115661621
    9. ' des' → logprob: -4.370345115661621
    10. 's' → logprob: -4.370345115661621

Token 423: ' bit' (ID: 3546)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12275122106075287
    2. 'j' → logprob: -3.497751235961914
    3. 'i' → logprob: -3.747751235961914
    4. '(i' → logprob: -3.872751235961914
    5. '(' → logprob: -4.622751235961914
    6. '(f' → logprob: -4.997751235961914
    7. '(j' → logprob: -5.497751235961914
    8. ' f' → logprob: -6.372751235961914
    9. 'val' → logprob: -6.372751235961914
    10. '#' → logprob: -6.372751235961914

Token 424: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0999374389648438
    2. '           ' → logprob: -1.5999374389648438
    3. 's' → logprob: -1.8499374389648438
    4. '=' → logprob: -2.3499374389648438
    5. '       ' → logprob: -2.7249374389648438
    6. ' j' → logprob: -3.5999374389648438
    7. ' précédent' → logprob: -3.7249374389648438
    8. ' s' → logprob: -3.9749374389648438
    9. 'j' → logprob: -4.349937438964844
    10. ' i' → logprob: -4.849937438964844

Token 425: ' poids' (ID: 56058)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1209878996014595
    2. '(j' → logprob: -2.370987892150879
    3. 'f' → logprob: -5.245987892150879
    4. 'd' → logprob: -5.245987892150879
    5. ' j' → logprob: -5.995987892150879
    6. '(' → logprob: -6.120987892150879
    7. '0' → logprob: -6.870987892150879
    8. ' (' → logprob: -6.995987892150879
    9. '(i' → logprob: -7.120987892150879
    10. '(f' → logprob: -7.370987892150879

Token 426: ' fort' (ID: 8024)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3714261054992676
    2. 'fort' → logprob: -2.3714261054992676
    3. '(i' → logprob: -2.9964261054992676
    4. 'plus' → logprob: -2.9964261054992676
    5. ' i' → logprob: -3.2464261054992676
    6. '(' → logprob: -3.7464261054992676
    7. 'j' → logprob: -4.496426105499268
    8. ' fort' → logprob: -4.746426105499268
    9. '```' → logprob: -4.746426105499268
    10. '1' → logprob: -5.371426105499268

Token 427: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.001815915107727
    2. ' =' → logprob: -1.251815915107727
    3. '(' → logprob: -1.626815915107727
    4. ' (' → logprob: -2.6268157958984375
    5. '       ' → logprob: -4.0018157958984375
    6. '(i' → logprob: -4.1268157958984375
    7. 'j' → logprob: -4.2518157958984375
    8. '(j' → logprob: -4.8768157958984375
    9. '((' → logprob: -5.3768157958984375
    10. ')' → logprob: -6.1268157958984375

Token 428: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013766174204647541
    2. ' j' → logprob: -4.388766288757324
    3. '(j' → logprob: -7.138766288757324
    4. ' (' → logprob: -8.263766288757324
    5. 'f' → logprob: -10.013766288757324
    6. '(' → logprob: -10.013766288757324
    7. '       ' → logprob: -10.138766288757324
    8. 'i' → logprob: -11.263766288757324
    9. '   ' → logprob: -11.388766288757324
    10. '[j' → logprob: -11.513766288757324

Token 429: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08315438777208328
    2. '=' → logprob: -2.8331544399261475
    3. '       ' → logprob: -4.208154201507568
    4. ':' → logprob: -6.208154201507568
    5. '           ' → logprob: -7.208154201507568
    6. 'if' → logprob: -7.458154201507568
    7. ',' → logprob: -7.708154201507568
    8. ' if' → logprob: -7.708154201507568
    9. 'j' → logprob: -8.708154678344727
    10. 's' → logprob: -8.708154678344727

Token 430: 'cel' (ID: 4610)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8734642863273621
    2. '(j' → logprob: -1.6234643459320068
    3. 'j' → logprob: -1.7484643459320068
    4. '(i' → logprob: -1.8734643459320068
    5. 'i' → logprob: -3.873464345932007
    6. ')' → logprob: -4.498464107513428
    7. ' j' → logprob: -4.748464107513428
    8. '(' → logprob: -4.873464107513428
    9. ' i' → logprob: -5.873464107513428
    10. '1' → logprob: -5.873464107513428

Token 431: 'ui' (ID: 1866)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16986660659313202
    2. '       ' → logprob: -3.6698665618896484
    3. ' (' → logprob: -3.9198665618896484
    4. '(' → logprob: -4.044866561889648
    5. '(j' → logprob: -4.044866561889648
    6. '           ' → logprob: -4.169866561889648
    7. '=' → logprob: -4.419866561889648
    8. 'if' → logprob: -5.169866561889648
    9. 'j' → logprob: -5.169866561889648
    10. '#' → logprob: -5.669866561889648

Token 432: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9872820377349854
    2. ')' → logprob: -2.3622820377349854
    3. ' =' → logprob: -2.3622820377349854
    4. '>>' → logprob: -2.3622820377349854
    5. '>>(' → logprob: -2.9872820377349854
    6. ' >>' → logprob: -3.2372820377349854
    7. '>>>' → logprob: -3.2372820377349854
    8. '           ' → logprob: -3.3622820377349854
    9. '(i' → logprob: -3.6122820377349854
    10. '       ' → logprob: -3.7372820377349854

Token 433: ''ind' (ID: 82245)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.0417442321777344
    2. ' i' → logprob: -1.2917442321777344
    3. '(i' → logprob: -1.7917442321777344
    4. ' (' → logprob: -2.9167442321777344
    5. '           ' → logprob: -3.4167442321777344
    6. '       ' → logprob: -3.6667442321777344
    7. '(j' → logprob: -3.9167442321777344
    8. ')' → logprob: -4.166744232177734
    9. 'i' → logprob: -4.416744232177734
    10. ' ' → logprob: -4.666744232177734

Token 434: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.14473502337932587
    2. 'ice' → logprob: -2.644735097885132
    3. 'e' → logprob: -3.269735097885132
    4. 'i' → logprob: -3.769735097885132
    5. 'é' → logprob: -7.769734859466553
    6. '[i' → logprob: -8.019735336303711
    7. ' i' → logprob: -8.519735336303711
    8. 'ic' → logprob: -8.644735336303711
    9. 'ices' → logprob: -8.769735336303711
    10. 'éc' → logprob: -8.769735336303711

Token 435: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.315981924533844
    2. ' i' → logprob: -1.3159818649291992
    3. '           ' → logprob: -6.440981864929199
    4. '       ' → logprob: -7.940981864929199
    5. ' ' → logprob: -8.9409818649292
    6. ' (' → logprob: -9.0659818649292
    7. '(i' → logprob: -9.0659818649292
    8. '   ' → logprob: -9.3159818649292
    9. '         ' → logprob: -9.3159818649292
    10. '               ' → logprob: -10.1909818649292

Token 436: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10027783364057541
    2. ' -' → logprob: -2.350277900695801
    3. ' ' → logprob: -9.8502779006958
    4. ')' → logprob: -11.7252779006958
    5. '1' → logprob: -12.1002779006958
    6. '   ' → logprob: -12.7252779006958
    7. '  ' → logprob: -15.1002779006958
    8. '
' → logprob: -15.1002779006958
    9. '−' → logprob: -15.4752779006958
    10. ' ' → logprob: -15.9127779006958

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005481490516103804
    2. ' ' → logprob: -8.125548362731934
    3. '-' → logprob: -8.625548362731934
    4. ')' → logprob: -9.750548362731934
    5. '   ' → logprob: -12.250548362731934
    6. '       ' → logprob: -12.875548362731934
    7. '
' → logprob: -13.250548362731934
    8. '           ' → logprob: -13.375548362731934
    9. '```' → logprob: -13.625548362731934
    10. ' -' → logprob: -13.750548362731934

Token 438: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034737009555101395
    2. ')>>' → logprob: -3.7847371101379395
    3. '>>' → logprob: -5.5347371101379395
    4. '       ' → logprob: -6.9097371101379395
    5. ' )' → logprob: -7.0347371101379395
    6. ',' → logprob: -7.0347371101379395
    7. ' >>' → logprob: -7.1597371101379395
    8. ')
' → logprob: -7.2847371101379395
    9. '):' → logprob: -8.034736633300781
    10. ')=' → logprob: -8.034736633300781

Token 439: ' part' (ID: 997)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7100683450698853
    2. ')' → logprob: -1.8350683450698853
    3. ' j' → logprob: -2.2100682258605957
    4. 'j' → logprob: -2.4600682258605957
    5. ' i' → logprob: -2.5850682258605957
    6. 'shift' → logprob: -2.8350682258605957
    7. 'R' → logprob: -3.0850682258605957
    8. ' ' → logprob: -3.3350682258605957
    9. 'i' → logprob: -3.5850682258605957
    10. '0' → logprob: -3.7100682258605957

Token 440: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.38689079880714417
    2. '-' → logprob: -2.3868908882141113
    3. 'i' → logprob: -2.5118908882141113
    4. 'age' → logprob: -2.7618908882141113
    5. 'ie' → logprob: -3.5118908882141113
    6. '```' → logprob: -4.261890888214111
    7. 'de' → logprob: -4.886890888214111
    8. 'ition' → logprob: -5.261890888214111
    9. '1' → logprob: -5.386890888214111
    10. 'ir' → logprob: -5.511890888214111

Token 441: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.0717577412724495
    2. 'from' → logprob: -3.0717577934265137
    3. 'du' → logprob: -4.821757793426514
    4. '       ' → logprob: -5.696757793426514
    5. ' de' → logprob: -5.821757793426514
    6. ')' → logprob: -5.821757793426514
    7. 'i' → logprob: -6.696757793426514
    8. '0' → logprob: -6.696757793426514
    9. '   ' → logprob: -7.571757793426514
    10. '=' → logprob: -7.571757793426514

Token 442: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03178638592362404
    2. 'i' → logprob: -4.1567864418029785
    3. ' i' → logprob: -5.0317864418029785
    4. '1' → logprob: -5.2817864418029785
    5. ' ' → logprob: -6.1567864418029785
    6. 'j' → logprob: -7.5317864418029785
    7. 'l' → logprob: -7.7817864418029785
    8. ' j' → logprob: -8.15678596496582
    9. 'la' → logprob: -8.40678596496582
    10. 'le' → logprob: -8.65678596496582

Token 443: ' droite' (ID: 61428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020440327934920788
    2. '1' → logprob: -6.877044200897217
    3. 'right' → logprob: -7.877044200897217
    4. 'i' → logprob: -8.127043724060059
    5. 'left' → logprob: -8.877043724060059
    6. ' droite' → logprob: -9.627043724060059
    7. ' ' → logprob: -9.752043724060059
    8. 'zero' → logprob: -11.002043724060059
    9. 'j' → logprob: -11.252043724060059
    10. ' i' → logprob: -11.252043724060059

Token 444: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11010231077671051
    2. ')>>' → logprob: -2.610102415084839
    3. '>>' → logprob: -4.73510217666626
    4. '):
' → logprob: -5.61010217666626
    5. '):' → logprob: -5.61010217666626
    6. '       ' → logprob: -6.11010217666626
    7. 'if' → logprob: -6.48510217666626
    8. ',' → logprob: -6.73510217666626
    9. '>>>' → logprob: -6.73510217666626
    10. ':' → logprob: -7.11010217666626

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7890874743461609
    2. 'b' → logprob: -1.9140875339508057
    3. 'bit' → logprob: -1.9140875339508057
    4. ' =' → logprob: -2.9140875339508057
    5. ' bit' → logprob: -3.1640875339508057
    6. ' b' → logprob: -3.1640875339508057
    7. 'f' → logprob: -3.5390875339508057
    8. 'if' → logprob: -4.039087295532227
    9. 'x' → logprob: -4.414087295532227
    10. ' f' → logprob: -4.414087295532227

Token 446: ' t' (ID: 260)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4449470341205597
    2. 'bit' → logprob: -1.8199470043182373
    3. 'x' → logprob: -2.3199470043182373
    4. 'f' → logprob: -3.5699470043182373
    5. ' b' → logprob: -4.444947242736816
    6. '       ' → logprob: -4.444947242736816
    7. 'k' → logprob: -4.569947242736816
    8. 'if' → logprob: -5.444947242736816
    9. ' bit' → logprob: -5.444947242736816
    10. 'm' → logprob: -5.694947242736816

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06994188576936722
    2. ' =' → logprob: -2.694941997528076
    3. '=j' → logprob: -13.194941520690918
    4. '=
' → logprob: -14.069941520690918
    5. ' ' → logprob: -14.694941520690918
    6. ',' → logprob: -14.944941520690918
    7. '=(' → logprob: -15.069941520690918
    8. '=int' → logprob: -15.194941520690918
    9. '	' → logprob: -15.444941520690918
    10. 's' → logprob: -15.444941520690918

Token 448: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.6614544987678528
    2. 'j' → logprob: -0.7864544987678528
    3. ' (' → logprob: -4.161454677581787
    4. ' j' → logprob: -4.411454677581787
    5. '(' → logprob: -8.036454200744629
    6. '((' → logprob: -9.036454200744629
    7. '1' → logprob: -9.411454200744629
    8. '(f' → logprob: -9.536454200744629
    9. '   ' → logprob: -10.286454200744629
    10. ' ' → logprob: -10.411454200744629

Token 449: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004897649050690234
    2. ' j' → logprob: -7.625489711761475
    3. '(j' → logprob: -13.875490188598633
    4. '   ' → logprob: -15.000490188598633
    5. '	j' → logprob: -15.125490188598633
    6. '[j' → logprob: -17.250490188598633
    7. '1' → logprob: -17.250490188598633
    8. '           ' → logprob: -17.250490188598633
    9. '       ' → logprob: -17.375490188598633
    10. '$j' → logprob: -17.375490188598633

Token 450: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.038352206349372864
    2. ' >>' → logprob: -3.2883522510528564
    3. '>>(' → logprob: -8.663352012634277
    4. '>' → logprob: -9.663352012634277
    5. ' ' → logprob: -10.913352012634277
    6. ')' → logprob: -11.288352012634277
    7. '&' → logprob: -11.913352012634277
    8. ' ' → logprob: -11.913352012634277
    9. '   ' → logprob: -12.038352012634277
    10. '    ' → logprob: -12.288352012634277

Token 451: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005012048059143126
    2. 'i' → logprob: -7.7505011558532715
    3. '1' → logprob: -10.25050163269043
    4. ' (' → logprob: -10.50050163269043
    5. '(' → logprob: -12.12550163269043
    6. '{i' → logprob: -13.62550163269043
    7. '   ' → logprob: -14.62550163269043
    8. ' i' → logprob: -15.12550163269043
    9. '[i' → logprob: -16.25050163269043
    10. '(I' → logprob: -16.62550163269043

Token 452: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20148292183876038
    2. '(i' → logprob: -1.701482892036438
    3. ' (' → logprob: -10.701482772827148
    4. ' i' → logprob: -10.701482772827148
    5. '1' → logprob: -11.201482772827148
    6. '(' → logprob: -12.201482772827148
    7. '{i' → logprob: -13.076482772827148
    8. ')i' → logprob: -14.076482772827148
    9. '[i' → logprob: -14.201482772827148
    10. '   ' → logprob: -14.201482772827148

Token 453: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0033624854404479265
    2. '1' → logprob: -5.753362655639648
    3. ' -' → logprob: -8.628362655639648
    4. ' ' → logprob: -13.628362655639648
    5. '   ' → logprob: -13.628362655639648
    6. '       ' → logprob: -13.628362655639648
    7. ')' → logprob: -13.753362655639648
    8. ')-' → logprob: -14.878362655639648
    9. '           ' → logprob: -15.253362655639648
    10. '2' → logprob: -16.37836265563965

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.875003814697266
    4. '```' → logprob: -18.500003814697266
    5. '
' → logprob: -18.625003814697266
    6. '2' → logprob: -18.750003814697266
    7. ')' → logprob: -19.375003814697266
    8. '

' → logprob: -20.625003814697266
    9. '' → logprob: -20.625003814697266
    10. '`' → logprob: -21.062503814697266

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.875018119812012
    4. '2' → logprob: -14.875018119812012
    5. '
' → logprob: -16.500017166137695
    6. ')' → logprob: -16.687517166137695
    7. '```' → logprob: -17.437517166137695
    8. '１' → logprob: -17.937517166137695
    9. '۱' → logprob: -18.250017166137695
    10. '  ' → logprob: -18.500017166137695

Token 456: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017217113636434078
    2. ')' → logprob: -6.3767218589782715
    3. '1' → logprob: -11.751721382141113
    4. ' ))' → logprob: -12.376721382141113
    5. '))
' → logprob: -13.126721382141113
    6. ')&' → logprob: -13.251721382141113
    7. '0' → logprob: -14.251721382141113
    8. ' ' → logprob: -14.626721382141113
    9. '&' → logprob: -14.751721382141113
    10. '   ' → logprob: -14.751721382141113

Token 457: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5482819676399231
    2. '&' → logprob: -0.9232819676399231
    3. ')&' → logprob: -3.7982819080352783
    4. ' &' → logprob: -6.298282146453857
    5. '1' → logprob: -7.673282146453857
    6. '&amp' → logprob: -9.6732816696167
    7. '&t' → logprob: -11.1732816696167
    8. ' )' → logprob: -11.1732816696167
    9. '&)' → logprob: -11.9232816696167
    10. '       ' → logprob: -12.1732816696167

Token 458: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.000709533691406
    4. '
' → logprob: -17.000709533691406
    5. '01' → logprob: -18.250709533691406
    6. '0' → logprob: -18.438209533691406
    7. '`' → logprob: -18.750709533691406
    8. '' → logprob: -18.875709533691406
    9. '```' → logprob: -19.000709533691406
    10. ' ' → logprob: -19.125709533691406

Token 459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -18.250009536743164
    4. '(' → logprob: -19.000009536743164
    5. '0' → logprob: -19.125009536743164
    6. '01' → logprob: -19.125009536743164
    7. '```' → logprob: -19.125009536743164
    8. '`' → logprob: -19.562509536743164
    9. '
' → logprob: -19.875009536743164
    10. '127' → logprob: -19.937509536743164

Token 460: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47506436705589294
    2. '<|end|>' → logprob: -1.1000643968582153
    3. '
' → logprob: -4.100064277648926
    4. 'if' → logprob: -4.600064277648926
    5. ' if' → logprob: -5.100064277648926
    6. ')' → logprob: -5.600064277648926
    7. '        
' → logprob: -5.975064277648926
    8. '#' → logprob: -6.100064277648926
    9. 'f' → logprob: -6.225064277648926
    10. ',' → logprob: -7.350064277648926

Token 462: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23852978646755219
    2. 'f' → logprob: -1.7385298013687134
    3. ' if' → logprob: -4.363529682159424
    4. '       ' → logprob: -4.738529682159424
    5. '0' → logprob: -5.363529682159424
    6. 'prev' → logprob: -5.613529682159424
    7. '#' → logprob: -5.988529682159424
    8. '1' → logprob: -6.488529682159424
    9. 'for' → logprob: -7.488529682159424
    10. ')' → logprob: -7.738529682159424

Token 463: ' bit' (ID: 3546)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21967864036560059
    2. ' t' → logprob: -2.2196786403656006
    3. ' ' → logprob: -3.2196786403656006
    4. 'd' → logprob: -4.59467887878418
    5. '#' → logprob: -5.09467887878418
    6. ' bit' → logprob: -5.59467887878418
    7. ')' → logprob: -5.71967887878418
    8. ' d' → logprob: -5.71967887878418
    9. ' #' → logprob: -6.34467887878418
    10. 's' → logprob: -6.59467887878418

Token 464: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0818005800247192
    2. '-' → logprob: -2.2068004608154297
    3. 's' → logprob: -2.3318004608154297
    4. 't' → logprob: -2.7068004608154297
    5. '1' → logprob: -2.9568004608154297
    6. ' plus' → logprob: -2.9568004608154297
    7. '+' → logprob: -2.9568004608154297
    8. ' next' → logprob: -3.0818004608154297
    9. 'plus' → logprob: -3.4568004608154297
    10. 'next' → logprob: -3.7068004608154297

Token 466: ' à' (ID: 1221)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.015461246483027935
    2. ' significant' → logprob: -5.015461444854736
    3. 'fort' → logprob: -5.390461444854736
    4. 'haut' → logprob: -6.390461444854736
    5. 'important' → logprob: -6.890461444854736
    6. ' signific' → logprob: -8.015460968017578
    7. ' fort' → logprob: -8.640460968017578
    8. '```' → logprob: -9.140460968017578
    9. 'é' → logprob: -9.390460968017578
    10. 'à' → logprob: -9.515460968017578

Token 467: ' gauche' (ID: 58367)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0769919157028198
    2. '1' → logprob: -1.2019919157028198
    3. 't' → logprob: -1.4519919157028198
    4. 'sign' → logprob: -2.9519920349121094
    5. '0' → logprob: -3.7019920349121094
    6. 'd' → logprob: -4.576992034912109
    7. 'right' → logprob: -4.701992034912109
    8. ' i' → logprob: -4.826992034912109
    9. ' ' → logprob: -4.951992034912109
    10. 'f' → logprob: -6.576992034912109

Token 468: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01586601324379444
    2. ' j' → logprob: -4.265865802764893
    3. 't' → logprob: -7.390865802764893
    4. 'f' → logprob: -8.01586627960205
    5. ' le' → logprob: -8.89086627960205
    6. 'd' → logprob: -9.14086627960205
    7. ' la' → logprob: -9.51586627960205
    8. 'le' → logprob: -9.64086627960205
    9. 'i' → logprob: -9.89086627960205
    10. ' bin' → logprob: -10.14086627960205

Token 470: ' i' (ID: 575)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7782008051872253
    2. 'j' → logprob: -1.0282008647918701
    3. 'i' → logprob: -2.40320086479187
    4. 'format' → logprob: -3.52820086479187
    5. 'code' → logprob: -3.90320086479187
    6. 'bits' → logprob: -4.153200626373291
    7. 'b' → logprob: -4.653200626373291
    8. ')' → logprob: -5.778200626373291
    9. ' bin' → logprob: -6.028200626373291
    10. 'range' → logprob: -6.403200626373291

Token 471: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.791133463382721
    2. '-' → logprob: -1.2911334037780762
    3. ' bits' → logprob: -1.7911334037780762
    4. ')' → logprob: -2.666133403778076
    5. ' -' → logprob: -5.166133403778076
    6. 'positions' → logprob: -5.791133403778076
    7. '_bits' → logprob: -5.791133403778076
    8. 'segments' → logprob: -5.791133403778076
    9. '-bit' → logprob: -5.791133403778076
    10. ' ' → logprob: -5.916133403778076

Token 472: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0220078956335783
    2. '<|end|>' → logprob: -4.522007942199707
    3. '
' → logprob: -5.397007942199707
    4. '        
' → logprob: -6.147007942199707
    5. ')' → logprob: -6.147007942199707
    6. 'f' → logprob: -7.647007942199707
    7. ' if' → logprob: -8.147007942199707
    8. 'if' → logprob: -8.522007942199707
    9. '       
' → logprob: -8.772007942199707
    10. '   ' → logprob: -8.897007942199707

Token 473: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5632306337356567
    2. '       ' → logprob: -0.9382306337356567
    3. ' if' → logprob: -3.938230514526367
    4. 'f' → logprob: -4.063230514526367
    5. 'for' → logprob: -7.438230514526367
    6. '#' → logprob: -7.563230514526367
    7. 's' → logprob: -7.563230514526367
    8. '   ' → logprob: -8.438230514526367
    9. '<|end|>' → logprob: -8.563230514526367
    10. ' f' → logprob: -8.688230514526367

Token 474: ' r' (ID: 428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008611999801360071
    2. ' if' → logprob: -7.750861167907715
    3. '       ' → logprob: -7.875861167907715
    4. 'f' → logprob: -10.500861167907715
    5. 'prev' → logprob: -10.875861167907715
    6. '#' → logprob: -13.375861167907715
    7. 's' → logprob: -13.875861167907715
    8. 'If' → logprob: -14.625861167907715
    9. 'x' → logprob: -15.375861167907715
    10. 'for' → logprob: -15.625861167907715

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289543628692627
    2. ' =' → logprob: -1.0539543628692627
    3. 'f' → logprob: -8.678954124450684
    4. ' ' → logprob: -10.928954124450684
    5. '=
' → logprob: -11.303954124450684
    6. 'if' → logprob: -12.053954124450684
    7. '=f' → logprob: -12.553954124450684
    8. 'e' → logprob: -12.928954124450684
    9. '=

' → logprob: -12.928954124450684
    10. '+=' → logprob: -13.053954124450684

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9998627305030823
    2. 'f' → logprob: -0.9998627305030823
    3. ' f' → logprob: -2.1248626708984375
    4. ' ' → logprob: -2.7498626708984375
    5. 'd' → logprob: -3.7498626708984375
    6. '1' → logprob: -3.7498626708984375
    7. ' d' → logprob: -4.2498626708984375
    8. 't' → logprob: -5.1248626708984375
    9. '(' → logprob: -5.9998626708984375
    10. ' (' → logprob: -6.1248626708984375

Token 477: '0' (ID: 15)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3497452139854431
    2. '0' → logprob: -1.849745273590088
    3. '1' → logprob: -2.724745273590088
    4. 't' → logprob: -4.099745273590088
    5. ' f' → logprob: -4.474745273590088
    6. '(f' → logprob: -4.724745273590088
    7. 'd' → logprob: -4.849745273590088
    8. ' ' → logprob: -5.224745273590088
    9. '(' → logprob: -5.349745273590088
    10. '(t' → logprob: -5.349745273590088

Token 478: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05447167158126831
    2. '<|end|>' → logprob: -3.304471731185913
    3. 'while' → logprob: -4.804471492767334
    4. ' while' → logprob: -6.054471492767334
    5. '
' → logprob: -6.304471492767334
    6. '	' → logprob: -6.804471492767334
    7. ' for' → logprob: -7.429471492767334
    8. ' if' → logprob: -7.554471492767334
    9. 'for' → logprob: -7.804471492767334
    10. 'if' → logprob: -7.929471492767334

Token 479: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7312824130058289
    2. 'if' → logprob: -1.6062824726104736
    3. 'while' → logprob: -1.8562824726104736
    4. '<|end|>' → logprob: -2.1062824726104736
    5. ' if' → logprob: -3.8562824726104736
    6. 'for' → logprob: -4.6062822341918945
    7. ' while' → logprob: -5.3562822341918945
    8. '
' → logprob: -6.7312822341918945
    9. ' for' → logprob: -7.4812822341918945
    10. '	while' → logprob: -7.6062822341918945

Token 480: ' Comp' (ID: 5211)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3742145895957947
    2. 'for' → logprob: -1.9992146492004395
    3. 'while' → logprob: -2.4992146492004395
    4. 'prev' → logprob: -3.1242146492004395
    5. '       ' → logprob: -4.1242146492004395
    6. ' if' → logprob: -4.6242146492004395
    7. 'p' → logprob: -4.8742146492004395
    8. '#' → logprob: -5.1242146492004395
    9. ' for' → logprob: -5.9992146492004395
    10. 'x' → logprob: -6.6242146492004395

Token 481: 'teur' (ID: 45262)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.1643680334091187
    2. 'r' → logprob: -1.4143680334091187
    3. 'un' → logprob: -1.4143680334091187
    4. 'ur' → logprob: -3.039368152618408
    5. 'ounter' → logprob: -3.664368152618408
    6. 'unning' → logprob: -4.039368152618408
    7. 'er' → logprob: -4.289368152618408
    8. 'urrent' → logprob: -4.539368152618408
    9. 'unt' → logprob: -4.664368152618408
    10. ' r' → logprob: -4.789368152618408

Token 482: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5379243493080139
    2. '0' → logprob: -1.1629242897033691
    3. '1' → logprob: -3.287924289703369
    4. 'l' → logprob: -4.037924289703369
    5. 'la' → logprob: -4.412924289703369
    6. 'run' → logprob: -4.537924289703369
    7. 'f' → logprob: -5.162924289703369
    8. 't' → logprob: -5.162924289703369
    9. 'le' → logprob: -6.037924289703369
    10. ' la' → logprob: -6.037924289703369

Token 484: ' longueur' (ID: 104613)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.22449800372123718
    2. 'r' → logprob: -2.8494980335235596
    3. 'i' → logprob: -3.9744980335235596
    4. 'f' → logprob: -3.9744980335235596
    5. 'while' → logprob: -3.9744980335235596
    6. 'current' → logprob: -4.2244977951049805
    7. 'continu' → logprob: -4.3494977951049805
    8. 'con' → logprob: -4.4744977951049805
    9. 'contin' → logprob: -5.0994977951049805
    10. 'max' → logprob: -5.0994977951049805

Token 485: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: ' '' (ID: 461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.041160158812999725
    2. ' run' → logprob: -3.9161601066589355
    3. 'r' → logprob: -4.2911601066589355
    4. '0' → logprob: -6.4161601066589355
    5. 'current' → logprob: -6.6661601066589355
    6. 'f' → logprob: -7.1661601066589355
    7. '1' → logprob: -7.1661601066589355
    8. '
' → logprob: -7.6661601066589355
    9. 'i' → logprob: -8.541160583496094
    10. '```' → logprob: -8.916160583496094

Token 487: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.00471207220107317
    2. ' run' → logprob: -6.379712104797363
    3. 'r' → logprob: -6.754712104797363
    4. '1' → logprob: -8.254712104797363
    5. '0' → logprob: -8.504712104797363
    6. 'f' → logprob: -8.754712104797363
    7. 't' → logprob: -8.879712104797363
    8. '```' → logprob: -8.879712104797363
    9. 'con' → logprob: -9.129712104797363
    10. '
' → logprob: -9.129712104797363

Token 488: ''.
' (ID: 49980)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28297629952430725
    2. '       ' → logprob: -1.7829762697219849
    3. 'if' → logprob: -3.2829763889312744
    4. ' while' → logprob: -3.4079763889312744
    5. 'for' → logprob: -5.907976150512695
    6. '	while' → logprob: -6.657976150512695
    7. '<|end|>' → logprob: -6.657976150512695
    8. ' if' → logprob: -6.782976150512695
    9. '	' → logprob: -8.032976150512695
    10. '   ' → logprob: -8.532976150512695

Token 490: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10652750730514526
    2. 'for' → logprob: -2.48152756690979
    3. 'k' → logprob: -4.356527328491211
    4. 'if' → logprob: -5.981527328491211
    5. '       ' → logprob: -7.106527328491211
    6. 'p' → logprob: -7.981527328491211
    7. ' while' → logprob: -8.481527328491211
    8. 'u' → logprob: -8.856527328491211
    9. 'l' → logprob: -9.106527328491211
    10. 'x' → logprob: -9.231527328491211

Token 491: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.051314108073711395
    2. 'for' → logprob: -3.176314115524292
    3. 'k' → logprob: -5.176313877105713
    4. 'if' → logprob: -6.551313877105713
    5. '       ' → logprob: -7.426313877105713
    6. 'prev' → logprob: -8.926314353942871
    7. 'p' → logprob: -9.051314353942871
    8. 'l' → logprob: -9.051314353942871
    9. 'm' → logprob: -10.051314353942871
    10. 'mask' → logprob: -10.176314353942871

Token 492: 'cle' (ID: 3170)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.082226276397705
    2. 'for' → logprob: -1.332226276397705
    3. 'r' → logprob: -2.082226276397705
    4. 'cle' → logprob: -2.457226276397705
    5. 'e' → logprob: -2.707226276397705
    6. 'ck' → logprob: -3.832226276397705
    7. '   ' → logprob: -3.957226276397705
    8. '       ' → logprob: -4.082226276397705
    9. 'while' → logprob: -4.082226276397705
    10. 'i' → logprob: -4.957226276397705

Token 493: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3189877271652222
    2. 'while' → logprob: -1.5689877271652222
    3. 'for' → logprob: -1.5689877271652222
    4. '=' → logprob: -1.8189877271652222
    5. 'k' → logprob: -2.8189878463745117
    6. ' for' → logprob: -3.0689878463745117
    7. ' while' → logprob: -3.8189878463745117
    8. '       ' → logprob: -4.318987846374512
    9. ' k' → logprob: -4.693987846374512
    10. '=k' → logprob: -6.568987846374512

Token 494: ' déterminer' (ID: 122024)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7407087087631226
    2. 'r' → logprob: -1.3657087087631226
    3. 'while' → logprob: -2.990708827972412
    4. 'range' → logprob: -3.490708827972412
    5. 'R' → logprob: -3.615708827972412
    6. 'Q' → logprob: -3.740708827972412
    7. 't' → logprob: -3.865708827972412
    8. 'f' → logprob: -4.115708827972412
    9. 'd' → logprob: -4.490708827972412
    10. '1' → logprob: -4.615708827972412

Token 495: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9354895949363708
    2. 'r' → logprob: -1.0604896545410156
    3. 'while' → logprob: -1.5604896545410156
    4. 'run' → logprob: -4.560489654541016
    5. ' while' → logprob: -4.810489654541016
    6. 'l' → logprob: -4.810489654541016
    7. 't' → logprob: -4.810489654541016
    8. 'for' → logprob: -5.310489654541016
    9. ' k' → logprob: -6.185489654541016
    10. '       ' → logprob: -6.310489654541016

Token 496: ' longueur' (ID: 104613)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.013820133171975613
    2. 'for' → logprob: -5.263820171356201
    3. 'run' → logprob: -5.513820171356201
    4. 'k' → logprob: -6.513820171356201
    5. ' while' → logprob: -7.013820171356201
    6. 'r' → logprob: -7.388820171356201
    7. 'i' → logprob: -7.888820171356201
    8. 'length' → logprob: -8.013819694519043
    9. 'f' → logprob: -8.388819694519043
    10. 'l' → logprob: -9.013819694519043

Token 497: ' du' (ID: 1462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4658629894256592
    2. 'k' → logprob: -1.8408629894256592
    3. 'while' → logprob: -1.9658629894256592
    4. 'r' → logprob: -1.9658629894256592
    5. ' for' → logprob: -2.090862989425659
    6. ' =' → logprob: -3.090862989425659
    7. '       ' → logprob: -3.340862989425659
    8. ' while' → logprob: -3.715862989425659
    9. ' of' → logprob: -3.840862989425659
    10. '=' → logprob: -3.965862989425659

Token 498: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.11765314638614655
    2. 'i' → logprob: -3.6176531314849854
    3. ' run' → logprob: -3.7426531314849854
    4. 'r' → logprob: -3.7426531314849854
    5. 'while' → logprob: -3.7426531314849854
    6. 'f' → logprob: -5.1176533699035645
    7. 't' → logprob: -6.7426533699035645
    8. 'for' → logprob: -7.2426533699035645
    9. '1' → logprob: -7.4926533699035645
    10. 'j' → logprob: -7.4926533699035645

Token 499: ' de' (ID: 334)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1452084630727768
    2. '       ' → logprob: -2.5202083587646484
    3. ' while' → logprob: -3.1452083587646484
    4. 'for' → logprob: -5.020208358764648
    5. 'k' → logprob: -5.645208358764648
    6. ' for' → logprob: -6.770208358764648
    7. '	while' → logprob: -9.645208358764648
    8. ' k' → logprob: -9.895208358764648
    9. '=' → logprob: -10.020208358764648
    10. 's' → logprob: -10.895208358764648

Token 500: ' bits' (ID: 18189)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10342933237552643
    2. ' t' → logprob: -3.4784293174743652
    3. '1' → logprob: -3.7284293174743652
    4. 'f' → logprob: -3.7284293174743652
    5. 'i' → logprob: -4.853429317474365
    6. 'j' → logprob: -5.853429317474365
    7. ' f' → logprob: -6.478429317474365
    8. 'r' → logprob: -6.603429317474365
    9. ' i' → logprob: -6.728429317474365
    10. ' ' → logprob: -6.728429317474365

Token 501: ' ident' (ID: 3951)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8703930974006653
    2. 'while' → logprob: -1.1203930377960205
    3. ' while' → logprob: -2.2453930377960205
    4. 'k' → logprob: -2.9953930377960205
    5. ' for' → logprob: -3.2453930377960205
    6. 'for' → logprob: -3.3703930377960205
    7. ' k' → logprob: -4.7453932762146
    8. '=' → logprob: -5.6203932762146
    9. ' =' → logprob: -5.7453932762146
    10. ' in' → logprob: -6.4953932762146

Token 502: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.42497754096984863
    2. 'ique' → logprob: -1.1749775409698486
    3. '#' → logprob: -4.7999773025512695
    4. 't' → logprob: -4.9249773025512695
    5. 'aux' → logprob: -5.1749773025512695
    6. 'que' → logprob: -5.4249773025512695
    7. '```' → logprob: -5.6749773025512695
    8. 'ques' → logprob: -5.7999773025512695
    9. 'i' → logprob: -7.1749773025512695
    10. '
' → logprob: -7.5499773025512695

Token 503: ' à' (ID: 1221)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.30670854449272156
    2. '       ' → logprob: -1.556708574295044
    3. ' while' → logprob: -3.306708574295044
    4. 'k' → logprob: -4.181708335876465
    5. 't' → logprob: -8.556708335876465
    6. ' k' → logprob: -8.681708335876465
    7. 'for' → logprob: -9.181708335876465
    8. 'dans' → logprob: -9.306708335876465
    9. '           ' → logprob: -9.556708335876465
    10. '	while' → logprob: -9.681708335876465

Token 504: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026496639475226402
    2. ' t' → logprob: -3.651496648788452
    3. 'f' → logprob: -9.776496887207031
    4. '`t' → logprob: -10.276496887207031
    5. 'j' → logprob: -10.776496887207031
    6. ' ' → logprob: -10.901496887207031
    7. '   ' → logprob: -11.276496887207031
    8. ' f' → logprob: -11.651496887207031
    9. 'r' → logprob: -11.776496887207031
    10. '(t' → logprob: -11.901496887207031

Token 505: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29268163442611694
    2. 'while' → logprob: -1.5426816940307617
    3. ' while' → logprob: -3.4176816940307617
    4. 'for' → logprob: -6.042681694030762
    5. ' for' → logprob: -6.542681694030762
    6. ',' → logprob: -6.917681694030762
    7. 'k' → logprob: -7.167681694030762
    8. '=' → logprob: -8.417681694030762
    9. ' =' → logprob: -8.542681694030762
    10. ' in' → logprob: -8.917681694030762

Token 506: ' à' (ID: 1221)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18439340591430664
    2. 'k' → logprob: -2.3093934059143066
    3. ' while' → logprob: -3.1843934059143066
    4. '       ' → logprob: -3.6843934059143066
    5. '           ' → logprob: -6.434393405914307
    6. ' k' → logprob: -8.559392929077148
    7. 'for' → logprob: -8.809392929077148
    8. '   ' → logprob: -8.934392929077148
    9. 'j' → logprob: -9.434392929077148
    10. 'l' → logprob: -9.559392929077148

Token 507: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.0745607614517212
    2. 'while' → logprob: -1.8245607614517212
    3. 'i' → logprob: -2.0745606422424316
    4. 'l' → logprob: -2.4495606422424316
    5. '0' → logprob: -3.0745606422424316
    6. ' partir' → logprob: -3.1995606422424316
    7. '1' → logprob: -3.1995606422424316
    8. 'f' → logprob: -3.1995606422424316
    9. 'range' → logprob: -4.074560642242432
    10. 'j' → logprob: -4.199560642242432

Token 508: ' du' (ID: 1462)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7177627682685852
    2. '       ' → logprob: -1.4677627086639404
    3. '0' → logprob: -2.5927627086639404
    4. ' de' → logprob: -2.8427627086639404
    5. 'i' → logprob: -2.9677627086639404
    6. 'de' → logprob: -3.3427627086639404
    7. ' j' → logprob: -3.8427627086639404
    8. ' i' → logprob: -4.3427629470825195
    9. '```' → logprob: -5.4677629470825195
    10. 't' → logprob: -5.7177629470825195

Token 509: ' bit' (ID: 3546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08929526805877686
    2. '0' → logprob: -3.2142953872680664
    3. 'j' → logprob: -3.3392953872680664
    4. '1' → logprob: -5.839295387268066
    5. 'r' → logprob: -6.714295387268066
    6. '       ' → logprob: -6.714295387268066
    7. 'k' → logprob: -6.964295387268066
    8. ' i' → logprob: -7.214295387268066
    9. '(i' → logprob: -7.214295387268066
    10. 't' → logprob: -7.589295387268066

Token 510: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18992343544960022
    2. ' i' → logprob: -1.9399234056472778
    3. '0' → logprob: -4.689923286437988
    4. '       ' → logprob: -5.064923286437988
    5. ' ' → logprob: -5.814923286437988
    6. '           ' → logprob: -6.439923286437988
    7. 'k' → logprob: -6.439923286437988
    8. ' (' → logprob: -6.814923286437988
    9. '   ' → logprob: -7.064923286437988
    10. 'j' → logprob: -7.189923286437988

Token 511: ' poids' (ID: 56058)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4520258903503418
    2. 'l' → logprob: -1.5770258903503418
    3. 'j' → logprob: -2.202025890350342
    4. '0' → logprob: -3.702025890350342
    5. 'la' → logprob: -4.702025890350342
    6. ' i' → logprob: -5.702025890350342
    7. '(i' → logprob: -6.077025890350342
    8. 'position' → logprob: -6.202025890350342
    9. 'r' → logprob: -7.202025890350342
    10. ' (' → logprob: -7.577025890350342

Token 512: ' fort' (ID: 8024)
  Prédit: 'fort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fort' → logprob: -0.1130552738904953
    2. ' fort' → logprob: -2.2380552291870117
    3. 'f' → logprob: -9.238055229187012
    4. '```' → logprob: -9.988055229187012
    5. 'for' → logprob: -11.363055229187012
    6. 'd' → logprob: -11.363055229187012
    7. 'plus' → logprob: -11.738055229187012
    8. 'g' → logprob: -11.863055229187012
    9. 'fa' → logprob: -11.863055229187012
    10. '#' → logprob: -11.988055229187012

Token 513: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15844202041625977
    2. ' for' → logprob: -2.7834420204162598
    3. 'k' → logprob: -3.5334420204162598
    4. 'while' → logprob: -4.03344202041626
    5. 'for' → logprob: -4.03344202041626
    6. ' while' → logprob: -4.90844202041626
    7. ' k' → logprob: -5.15844202041626
    8. '   ' → logprob: -6.90844202041626
    9. 's' → logprob: -7.03344202041626
    10. '	' → logprob: -7.65844202041626

Token 514: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6643112897872925
    2. '       ' → logprob: -0.9143112897872925
    3. 'for' → logprob: -2.539311408996582
    4. 'k' → logprob: -5.789311408996582
    5. ' while' → logprob: -6.289311408996582
    6. ' for' → logprob: -7.664311408996582
    7. '   ' → logprob: -9.289311408996582
    8. '	' → logprob: -9.914311408996582
    9. '	while' → logprob: -9.914311408996582
    10. '```' → logprob: -10.664311408996582

Token 515: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.026898814365267754
    2. 'for' → logprob: -3.9018988609313965
    3. 'k' → logprob: -5.1518988609313965
    4. '       ' → logprob: -8.026898384094238
    5. 'l' → logprob: -9.401898384094238
    6. ' while' → logprob: -9.901898384094238
    7. 'm' → logprob: -10.401898384094238
    8. 'x' → logprob: -10.526898384094238
    9. 'u' → logprob: -11.776898384094238
    10. 'p' → logprob: -12.401898384094238

Token 516: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1561720222234726
    2. 'j' → logprob: -2.406172037124634
    3. 't' → logprob: -4.281171798706055
    4. ' r' → logprob: -4.281171798706055
    5. '(j' → logprob: -4.531171798706055
    6. '(r' → logprob: -5.156171798706055
    7. ' j' → logprob: -5.781171798706055
    8. '(t' → logprob: -6.281171798706055
    9. ' (' → logprob: -6.281171798706055
    10. '((' → logprob: -6.781171798706055

Token 517: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16582614183425903
    2. '<' → logprob: -2.1658260822296143
    3. '<i' → logprob: -3.2908260822296143
    4. '<len' → logprob: -7.415826320648193
    5. '<n' → logprob: -9.290825843811035
    6. ' ' → logprob: -10.040825843811035
    7. 'i' → logprob: -10.040825843811035
    8. '<size' → logprob: -10.290825843811035
    9. '<N' → logprob: -10.665825843811035
    10. '<=' → logprob: -11.040825843811035

Token 518: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013071446446701884
    2. ' i' → logprob: -6.751307010650635
    3. 'N' → logprob: -9.376307487487793
    4. '(' → logprob: -11.001307487487793
    5. ' ' → logprob: -11.751307487487793
    6. '
' → logprob: -12.251307487487793
    7. 'j' → logprob: -12.501307487487793
    8. '2' → logprob: -12.626307487487793
    9. 'f' → logprob: -12.876307487487793
    10. ' N' → logprob: -13.501307487487793

Token 519: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4740874767303467
    2. ' and' → logprob: -0.9740874767303467
    3. '           ' → logprob: -12.599087715148926
    4. '       ' → logprob: -12.724087715148926
    5. ' ' → logprob: -14.099087715148926
    6. '        ' → logprob: -14.474087715148926
    7. '               ' → logprob: -14.474087715148926
    8. '   ' → logprob: -14.849087715148926
    9. '          ' → logprob: -14.849087715148926
    10. '            ' → logprob: -15.099087715148926

Token 520: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004797138273715973
    2. '(((' → logprob: -5.629796981811523
    3. '(j' → logprob: -7.629796981811523
    4. ' ((' → logprob: -7.629796981811523
    5. '   ' → logprob: -9.629796981811523
    6. '(' → logprob: -10.004796981811523
    7. '(t' → logprob: -10.629796981811523
    8. '(d' → logprob: -11.004796981811523
    9. '       ' → logprob: -11.129796981811523
    10. ' ' → logprob: -11.879796981811523

Token 521: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.022750351577997208
    2. 'j' → logprob: -4.272750377655029
    3. '((' → logprob: -4.772750377655029
    4. ' (' → logprob: -10.022749900817871
    5. '(((' → logprob: -11.647749900817871
    6. '(' → logprob: -11.772749900817871
    7. '[j' → logprob: -11.772749900817871
    8. '(t' → logprob: -11.897749900817871
    9. '(
' → logprob: -12.522749900817871
    10. '
' → logprob: -12.897749900817871

Token 522: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.18021142482757568
    2. ' >>' → logprob: -1.8052114248275757
    3. '>' → logprob: -8.680211067199707
    4. '>>(' → logprob: -8.805211067199707
    5. ' ' → logprob: -9.555211067199707
    6. ' &' → logprob: -10.680211067199707
    7. '&' → logprob: -11.430211067199707
    8. ' >' → logprob: -11.680211067199707
    9. ')' → logprob: -11.805211067199707
    10. '>>
' → logprob: -12.430211067199707

Token 523: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.21775056421756744
    2. 'r' → logprob: -1.7177505493164062
    3. '(i' → logprob: -4.217750549316406
    4. ' (' → logprob: -7.217750549316406
    5. '(' → logprob: -7.592750549316406
    6. ' r' → logprob: -8.717750549316406
    7. '((' → logprob: -11.217750549316406
    8. '(I' → logprob: -11.342750549316406
    9. 'i' → logprob: -11.592750549316406
    10. ')' → logprob: -12.217750549316406

Token 524: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6805785894393921
    2. 'r' → logprob: -0.8055785894393921
    3. '(r' → logprob: -3.4305787086486816
    4. 'i' → logprob: -4.305578708648682
    5. ' (' → logprob: -7.805578708648682
    6. '(' → logprob: -7.930578708648682
    7. ')' → logprob: -9.805578231811523
    8. ' r' → logprob: -10.680578231811523
    9. '(I' → logprob: -10.680578231811523
    10. '   ' → logprob: -11.430578231811523

Token 525: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010477257892489433
    2. ' -' → logprob: -4.635477066040039
    3. 'r' → logprob: -7.635477066040039
    4. '-r' → logprob: -8.760477066040039
    5. ')' → logprob: -10.260477066040039
    6. ' r' → logprob: -10.885477066040039
    7. '1' → logprob: -11.260477066040039
    8. ' ' → logprob: -11.760477066040039
    9. '   ' → logprob: -13.260477066040039
    10. 's' → logprob: -14.010477066040039

Token 526: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09260541945695877
    2. 'r' → logprob: -2.4676053524017334
    3. '2' → logprob: -5.8426055908203125
    4. '(r' → logprob: -7.3426055908203125
    5. '(' → logprob: -9.342605590820312
    6. '   ' → logprob: -11.217605590820312
    7. ' r' → logprob: -12.717605590820312
    8. ' ' → logprob: -13.217605590820312
    9. '
' → logprob: -14.280105590820312
    10. ' (' → logprob: -15.092605590820312

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024809526279568672
    2. 'r' → logprob: -3.8998095989227295
    3. '(r' → logprob: -5.64980936050415
    4. '(' → logprob: -7.39980936050415
    5. '2' → logprob: -9.149809837341309
    6. '   ' → logprob: -12.024809837341309
    7. ' (' → logprob: -12.274809837341309
    8. ' ' → logprob: -12.649809837341309
    9. ' r' → logprob: -13.149809837341309
    10. '
' → logprob: -14.149809837341309

Token 528: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47126471996307373
    2. '-' → logprob: -1.0962647199630737
    3. '-r' → logprob: -3.7212648391723633
    4. ' -' → logprob: -4.096264839172363
    5. '))' → logprob: -8.096264839172363
    6. '   ' → logprob: -8.096264839172363
    7. 'r' → logprob: -8.846264839172363
    8. ' ' → logprob: -10.721264839172363
    9. ')-' → logprob: -11.346264839172363
    10. ' )' → logprob: -11.471264839172363

Token 529: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.547789674485102e-05
    2. ' r' → logprob: -10.250035285949707
    3. '	r' → logprob: -18.500036239624023
    4. '1' → logprob: -18.625036239624023
    5. '   ' → logprob: -19.375036239624023
    6. ')' → logprob: -19.375036239624023
    7. ' ' → logprob: -19.875036239624023
    8. '(r' → logprob: -20.250036239624023
    9. '_r' → logprob: -20.500036239624023
    10. '
' → logprob: -21.375036239624023

Token 530: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011415231710998341
    2. ' )' → logprob: -9.500114440917969
    3. '))' → logprob: -10.500114440917969
    4. ')&' → logprob: -11.375114440917969
    5. '')' → logprob: -16.12511444091797
    6. '")' → logprob: -17.37511444091797
    7. '&' → logprob: -17.37511444091797
    8. '])' → logprob: -17.62511444091797
    9. '`)' → logprob: -17.75011444091797
    10. '})' → logprob: -18.12511444091797

Token 531: ' &' (ID: 827)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48514410853385925
    2. ')' → logprob: -0.9851441383361816
    3. ')==' → logprob: -5.110144138336182
    4. ' ==' → logprob: -5.360144138336182
    5. '&' → logprob: -8.485143661499023
    6. ' )' → logprob: -10.235143661499023
    7. '=' → logprob: -11.735143661499023
    8. ' ' → logprob: -12.610143661499023
    9. ' &' → logprob: -13.110143661499023
    10. '   ' → logprob: -13.235143661499023

Token 532: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000854062382131815
    2. 't' → logprob: -7.500854015350342
    3. ' ' → logprob: -8.1258544921875
    4. ' t' → logprob: -12.3758544921875
    5. '255' → logprob: -15.0008544921875
    6. '31' → logprob: -15.5008544921875
    7. '   ' → logprob: -16.1258544921875
    8. '7' → logprob: -16.2508544921875
    9. '(' → logprob: -16.5008544921875
    10. 'r' → logprob: -16.5008544921875

Token 533: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003957608714699745
    2. 't' → logprob: -7.875395774841309
    3. ' ' → logprob: -11.125395774841309
    4. ' t' → logprob: -14.375395774841309
    5. 'r' → logprob: -16.500394821166992
    6. '255' → logprob: -16.750394821166992
    7. '
' → logprob: -17.375394821166992
    8. '   ' → logprob: -17.750394821166992
    9. '7' → logprob: -18.000394821166992
    10. '`t' → logprob: -18.000394821166992

Token 534: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002226383425295353
    2. ')==' → logprob: -6.25222635269165
    3. '==' → logprob: -8.377226829528809
    4. ' )' → logprob: -10.252226829528809
    5. '())' → logprob: -11.002226829528809
    6. ' ==' → logprob: -11.502226829528809
    7. '()' → logprob: -13.252226829528809
    8. '=' → logprob: -13.627226829528809
    9. 't' → logprob: -14.502226829528809
    10. '))' → logprob: -15.252226829528809

Token 535: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002452587941661477
    2. ' ==' → logprob: -6.877452373504639
    3. ')==' → logprob: -7.002452373504639
    4. ')' → logprob: -8.002452850341797
    5. '=' → logprob: -8.877452850341797
    6. '==
' → logprob: -10.627452850341797
    7. '()==' → logprob: -12.002452850341797
    8. ']==' → logprob: -12.877452850341797
    9. '===' → logprob: -13.377452850341797
    10. '```' → logprob: -15.752452850341797

Token 536: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0017031522002071142
    2. ' t' → logprob: -6.376703262329102
    3. '	t' → logprob: -14.751703262329102
    4. ' ' → logprob: -15.126703262329102
    5. '`t' → logprob: -15.626703262329102
    6. '   ' → logprob: -16.2517032623291
    7. '(t' → logprob: -16.6267032623291
    8. '_t' → logprob: -17.5017032623291
    9. '  ' → logprob: -17.6267032623291
    10. ' ' → logprob: -17.7517032623291

Token 537: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42887595295906067
    2. ':' → logprob: -1.0538759231567383
    3. ' and' → logprob: -10.303875923156738
    4. 'r' → logprob: -10.303875923156738
    5. '):
' → logprob: -10.553875923156738
    6. ':
' → logprob: -10.928875923156738
    7. ':r' → logprob: -11.178875923156738
    8. '   ' → logprob: -11.303875923156738
    9. '           ' → logprob: -11.303875923156738
    10. '       ' → logprob: -11.428875923156738

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002052358817309141
    2. 'r' → logprob: -6.377052307128906
    3. ' r' → logprob: -9.252052307128906
    4. '               ' → logprob: -9.752052307128906
    5. '       ' → logprob: -9.877052307128906
    6. '
' → logprob: -9.877052307128906
    7. '   ' → logprob: -10.502052307128906
    8. '	       ' → logprob: -10.752052307128906
    9. ' and' → logprob: -11.502052307128906
    10. '		' → logprob: -11.627052307128906

Token 539: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.003736779559403658
    2. '           ' → logprob: -6.128736972808838
    3. ' r' → logprob: -6.628736972808838
    4. '               ' → logprob: -8.62873649597168
    5. '   ' → logprob: -10.37873649597168
    6. '       ' → logprob: -11.62873649597168
    7. '                   ' → logprob: -12.62873649597168
    8. '	r' → logprob: -12.87873649597168
    9. '		' → logprob: -13.00373649597168
    10. ' ' → logprob: -14.87873649597168

Token 540: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004078639671206474
    2. ' +=' → logprob: -5.5040788650512695
    3. '=' → logprob: -16.129077911376953
    4. ']+=' → logprob: -16.504077911376953
    5. '+' → logprob: -16.629077911376953
    6. '   ' → logprob: -19.504077911376953
    7. '+='' → logprob: -21.004077911376953
    8. '+="' → logprob: -21.129077911376953
    9. '	' → logprob: -21.879077911376953
    10. '+=(' → logprob: -22.004077911376953

Token 541: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.500431060791016
    4. '```' → logprob: -18.375431060791016
    5. ' ' → logprob: -19.750431060791016
    6. '  ' → logprob: -20.750431060791016
    7. '0' → logprob: -20.750431060791016
    8. '۱' → logprob: -20.875431060791016
    9. 'r' → logprob: -21.312931060791016
    10. '１' → logprob: -21.500431060791016

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '
' → logprob: -19.250001907348633
    6. 'r' → logprob: -21.375001907348633
    7. '0' → logprob: -21.375001907348633
    8. '１' → logprob: -21.500001907348633
    9. '۱' → logprob: -21.500001907348633
    10. '  ' → logprob: -21.562501907348633

Token 543: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005874514114111662
    2. '
' → logprob: -5.6308746337890625
    3. '<|end|>' → logprob: -6.5058746337890625
    4. '        
' → logprob: -7.5058746337890625
    5. ',' → logprob: -9.755874633789062
    6. 'f' → logprob: -10.380874633789062
    7. '<|end|>' → logprob: -10.505874633789062
    8. 'r' → logprob: -10.880874633789062
    9. ' if' → logprob: -11.380874633789062
    10. '```' → logprob: -11.505874633789062

Token 544: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.829521119594574
    2. '
' → logprob: -1.3295211791992188
    3. '       ' → logprob: -1.4545211791992188
    4. 'if' → logprob: -3.2045211791992188
    5. '        
' → logprob: -3.9545211791992188
    6. 'while' → logprob: -6.329521179199219
    7. ' if' → logprob: -6.579521179199219
    8. '#' → logprob: -7.579521179199219
    9. 'r' → logprob: -7.704521179199219
    10. ' 
' → logprob: -8.204521179199219

Token 545: ' In' (ID: 730)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07907352596521378
    2. '       ' → logprob: -2.704073429107666
    3. 'if' → logprob: -5.079073429107666
    4. '#' → logprob: -6.579073429107666
    5. 'r' → logprob: -7.329073429107666
    6. '
' → logprob: -8.079073905944824
    7. 'while' → logprob: -8.704073905944824
    8. ' f' → logprob: -8.829073905944824
    9. '           ' → logprob: -9.454073905944824
    10. ' if' → logprob: -10.079073905944824

Token 546: 'cré' (ID: 125389)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.5037832260131836
    2. 'cr' → logprob: -1.5037832260131836
    3. 'cré' → logprob: -2.3787832260131836
    4. 'r' → logprob: -3.1287832260131836
    5. 'cre' → logprob: -3.5037832260131836
    6. '   ' → logprob: -6.753783226013184
    7. 'CREMENT' → logprob: -6.878783226013184
    8. 'c' → logprob: -7.128783226013184
    9. 'rement' → logprob: -7.253783226013184
    10. 't' → logprob: -7.253783226013184

Token 547: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0007462600478902459
    2. 'mentation' → logprob: -8.250746726989746
    3. 'mented' → logprob: -8.500746726989746
    4. 'r' → logprob: -9.000746726989746
    5. 'mente' → logprob: -9.500746726989746
    6. '   ' → logprob: -10.625746726989746
    7. 'rement' → logprob: -11.500746726989746
    8. 'mentar' → logprob: -11.750746726989746
    9. '       ' → logprob: -11.875746726989746
    10. 'm' → logprob: -11.875746726989746

Token 548: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10683512687683105
    2. '1' → logprob: -2.606835126876831
    3. '<|end|>' → logprob: -3.731835126876831
    4. ' r' → logprob: -6.35683536529541
    5. ' ' → logprob: -7.48183536529541
    6. '<|end|>' → logprob: -7.98183536529541
    7. '       ' → logprob: -8.35683536529541
    8. ')' → logprob: -8.35683536529541
    9. '```' → logprob: -9.10683536529541
    10. '
' → logprob: -9.35683536529541

Token 549: ' tant' (ID: 16235)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.015822485089302063
    2. ' qu' → logprob: -5.015822410583496
    3. 'que' → logprob: -5.265822410583496
    4. '       ' → logprob: -6.640822410583496
    5. '           ' → logprob: -7.140822410583496
    6. '   ' → logprob: -7.640822410583496
    7. 'r' → logprob: -7.765822410583496
    8. '#' → logprob: -8.140822410583496
    9. 'qu' → logprob: -8.765822410583496
    10. '1' → logprob: -9.015822410583496

Token 551: ' les' (ID: 1341)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40664130449295044
    2. '((' → logprob: -1.7816412448883057
    3. 'True' → logprob: -2.6566412448883057
    4. '(r' → logprob: -4.406641483306885
    5. ' True' → logprob: -4.656641483306885
    6. '(' → logprob: -4.781641483306885
    7. 'la' → logprob: -4.906641483306885
    8. ' ((' → logprob: -4.906641483306885
    9. ' r' → logprob: -4.906641483306885
    10. 'les' → logprob: -5.031641483306885

Token 552: ' bits' (ID: 18189)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6012431979179382
    2. 'r' → logprob: -1.226243257522583
    3. 'bits' → logprob: -3.726243257522583
    4. 't' → logprob: -3.976243257522583
    5. '(' → logprob: -3.976243257522583
    6. ' ((' → logprob: -4.101243019104004
    7. ' bits' → logprob: -4.101243019104004
    8. '(((' → logprob: -4.601243019104004
    9. '(r' → logprob: -4.851243019104004
    10. 'run' → logprob: -5.101243019104004

Token 553: ' rencontr' (ID: 49751)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.34270918369293213
    2. ' are' → logprob: -2.2177090644836426
    3. ' continu' → logprob: -2.9677090644836426
    4. ' restent' → logprob: -3.5927090644836426
    5. 's' → logprob: -3.8427090644836426
    6. '==' → logprob: -3.9677090644836426
    7. ' ==' → logprob: -4.342709064483643
    8. 'r' → logprob: -5.217709064483643
    9. ' #' → logprob: -5.467709064483643
    10. '#' → logprob: -5.467709064483643

Token 554: 'és' (ID: 1756)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4389958679676056
    2. 'r' → logprob: -2.063995838165283
    3. 'ents' → logprob: -2.438995838165283
    4. 'és' → logprob: -3.313995838165283
    5. 'ont' → logprob: -3.813995838165283
    6. 'ons' → logprob: -4.063995838165283
    7. 'ant' → logprob: -4.313995838165283
    8. '```' → logprob: -5.063995838165283
    9. 'ains' → logprob: -5.188995838165283
    10. 'us' → logprob: -5.188995838165283

Token 555: ' restent' (ID: 116443)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0147757530212402
    2. ' are' → logprob: -1.2647757530212402
    3. ' ==' → logprob: -1.3897757530212402
    4. ' sont' → logprob: -4.13977575302124
    5. ' continu' → logprob: -4.26477575302124
    6. '#' → logprob: -4.38977575302124
    7. ' continue' → logprob: -5.01477575302124
    8. 'r' → logprob: -5.01477575302124
    9. 'are' → logprob: -5.26477575302124
    10. '```' → logprob: -5.51477575302124

Token 556: ' ég' (ID: 33150)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0821411609649658
    2. 'ég' → logprob: -1.3321411609649658
    3. ' ég' → logprob: -1.7071411609649658
    4. 'ident' → logprob: -1.7071411609649658
    5. ' ident' → logprob: -3.957141160964966
    6. 'les' → logprob: -4.582140922546387
    7. 'égal' → logprob: -6.457140922546387
    8. 'eg' → logprob: -7.207140922546387
    9. ' t' → logprob: -7.207140922546387
    10. 'const' → logprob: -7.457140922546387

Token 557: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0002135534887202084
    2. 'ales' → logprob: -9.250213623046875
    3. 'al' → logprob: -9.375213623046875
    4. 'als' → logprob: -11.125213623046875
    5. 'a' → logprob: -12.000213623046875
    6. 'ale' → logprob: -12.500213623046875
    7. '```' → logprob: -13.000213623046875
    8. 'Aux' → logprob: -13.375213623046875
    9. '``' → logprob: -13.500213623046875
    10. '   ' → logprob: -14.625213623046875

Token 558: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012356207298580557
    2. ' t' → logprob: -9.000123977661133
    3. '`t' → logprob: -16.875123977661133
    4. '	t' → logprob: -17.250123977661133
    5. ' ' → logprob: -18.625123977661133
    6. ' ' → logprob: -20.250123977661133
    7. '   ' → logprob: -20.875123977661133
    8. '  ' → logprob: -22.125123977661133
    9. ' ' → logprob: -22.750123977661133
    10. '
' → logprob: -22.875123977661133

Token 560: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24238616228103638
    2. '<|end|>' → logprob: -2.1173861026763916
    3. '
' → logprob: -2.4923861026763916
    4. '        
' → logprob: -4.992386341094971
    5. '<|end|>' → logprob: -5.867386341094971
    6. ')' → logprob: -7.492386341094971
    7. '#' → logprob: -7.992386341094971
    8. ',' → logprob: -8.242385864257812
    9. '.' → logprob: -8.742385864257812
    10. '	' → logprob: -9.367385864257812

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035774994175881147
    2. '<|end|>' → logprob: -7.003577709197998
    3. ' f' → logprob: -7.253577709197998
    4. 'f' → logprob: -7.378577709197998
    5. ' if' → logprob: -7.503577709197998
    6. '	' → logprob: -8.50357723236084
    7. 'if' → logprob: -8.87857723236084
    8. '        
' → logprob: -9.62857723236084
    9. '   ' → logprob: -9.87857723236084
    10. '	   ' → logprob: -10.00357723236084

Token 562: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.41331061720848083
    2. '       ' → logprob: -1.1633106470108032
    3. ' f' → logprob: -4.413310527801514
    4. 'if' → logprob: -4.538310527801514
    5. ' if' → logprob: -5.913310527801514
    6. '   ' → logprob: -8.413311004638672
    7. '        
' → logprob: -9.538311004638672
    8. '
' → logprob: -9.913311004638672
    9. ' ' → logprob: -10.038311004638672
    10. '	f' → logprob: -10.163311004638672

Token 563: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.749814019713085e-06
    2. ' [' → logprob: -12.375006675720215
    3. '[' → logprob: -13.625006675720215
    4. '[j' → logprob: -14.750006675720215
    5. '[I' → logprob: -15.125006675720215
    6. '   ' → logprob: -15.375006675720215
    7. '[f' → logprob: -16.25000762939453
    8. '```' → logprob: -16.37500762939453
    9. ' ' → logprob: -16.75000762939453
    10. '][' → logprob: -16.75000762939453

Token 564: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004648696631193161
    2. ']' → logprob: -8.00046443939209
    3. '[f' → logprob: -10.37546443939209
    4. '[r' → logprob: -10.75046443939209
    5. '[i' → logprob: -10.87546443939209
    6. '[' → logprob: -10.87546443939209
    7. ' ][' → logprob: -11.00046443939209
    8. '[j' → logprob: -11.87546443939209
    9. '][]' → logprob: -12.75046443939209
    10. '][-' → logprob: -13.00046443939209

Token 565: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9361264946837764e-07
    2. ' j' → logprob: -16.125
    3. '[j' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '	j' → logprob: -18.875
    6. '$j' → logprob: -20.25
    7. '
' → logprob: -21.0
    8. ':j' → logprob: -21.25
    9. '```' → logprob: -21.5
    10. '       ' → logprob: -21.625

Token 566: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02419404499232769
    2. ' =' → logprob: -4.024194240570068
    3. ']' → logprob: -5.274194240570068
    4. ']=' → logprob: -7.399194240570068
    5. '=r' → logprob: -8.14919376373291
    6. 'r' → logprob: -13.77419376373291
    7. '=f' → logprob: -14.52419376373291
    8. '[r' → logprob: -14.77419376373291
    9. ']+=' → logprob: -15.27419376373291
    10. '=
' → logprob: -16.149194717407227

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018289009109139442
    2. ' =' → logprob: -4.018289089202881
    3. '=r' → logprob: -8.893288612365723
    4. '=f' → logprob: -13.768288612365723
    5. '+=' → logprob: -15.018288612365723
    6. 'r' → logprob: -16.14328956604004
    7. '=max' → logprob: -16.64328956604004
    8. '[r' → logprob: -17.26828956604004
    9. '=re' → logprob: -17.26828956604004
    10. '=i' → logprob: -17.51828956604004

Token 568: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.841743303695694e-05
    2. 'max' → logprob: -9.25009822845459
    3. ' r' → logprob: -13.12509822845459
    4. ' max' → logprob: -15.62509822845459
    5. '   ' → logprob: -16.750099182128906
    6. 'f' → logprob: -18.250099182128906
    7. '	r' → logprob: -18.750099182128906
    8. ' ' → logprob: -19.000099182128906
    9. ' ' → logprob: -19.250099182128906
    10. '
' → logprob: -19.875099182128906

Token 569: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: ' Stock' (ID: 16382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6438217163085938
    2. 'e' → logprob: -1.2688217163085938
    3. 'er' → logprob: -1.7688217163085938
    4. 'é' → logprob: -4.018821716308594
    5. 'age' → logprob: -6.143821716308594
    6. '=r' → logprob: -7.768821716308594
    7. 'ée' → logprob: -8.018821716308594
    8. '=e' → logprob: -8.143821716308594
    9. ' =' → logprob: -8.268821716308594
    10. '0' → logprob: -8.268821716308594

Token 573: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006344011635519564
    2. ' r' → logprob: -7.37563419342041
    3. 'f' → logprob: -11.87563419342041
    4. '
' → logprob: -15.25063419342041
    5. '0' → logprob: -16.375635147094727
    6. 'run' → logprob: -16.375635147094727
    7. '
' → logprob: -16.500635147094727
    8. ' f' → logprob: -16.750635147094727
    9. '```' → logprob: -16.875635147094727
    10. '	r' → logprob: -17.000635147094727

Token 574: ' longueur' (ID: 104613)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006174852605909109
    2. ' r' → logprob: -7.500617504119873
    3. 'run' → logprob: -10.500617027282715
    4. 'f' → logprob: -10.750617027282715
    5. ' run' → logprob: -11.875617027282715
    6. '
' → logprob: -12.125617027282715
    7. '<|end|>' → logprob: -13.500617027282715
    8. 'max' → logprob: -14.750617027282715
    9. '#' → logprob: -15.750617027282715
    10. '+' → logprob: -16.00061798095703

Token 575: ' trouv' (ID: 40254)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00015229015843942761
    2. 'é' → logprob: -9.375152587890625
    3. 'ue' → logprob: -11.000152587890625
    4. '=' → logprob: -11.250152587890625
    5. 'uée' → logprob: -11.625152587890625
    6. 'née' → logprob: -11.875152587890625
    7. 'e' → logprob: -12.375152587890625
    8. 'u' → logprob: -12.875152587890625
    9. 'és' → logprob: -12.875152587890625
    10. 'ee' → logprob: -13.000152587890625

Token 577: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: ' ce' (ID: 2357)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.21325984597206116
    2. 'r' → logprob: -1.7132598161697388
    3. ' run' → logprob: -4.713259696960449
    4. 'la' → logprob: -6.588259696960449
    5. 'l' → logprob: -7.213259696960449
    6. '<|end|>' → logprob: -8.21325969696045
    7. ' r' → logprob: -9.71325969696045
    8. 'le' → logprob: -10.08825969696045
    9. ''r' → logprob: -10.08825969696045
    10. ''' → logprob: -10.08825969696045

Token 579: ' '' (ID: 461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.2350376844406128
    2. ' run' → logprob: -1.7350376844406128
    3. '"' → logprob: -4.235037803649902
    4. ''' → logprob: -4.235037803649902
    5. ' '' → logprob: -7.110037803649902
    6. ''r' → logprob: -7.485037803649902
    7. ' "' → logprob: -7.610037803649902
    8. 'r' → logprob: -7.860037803649902
    9. ''re' → logprob: -7.985037803649902
    10. ''s' → logprob: -7.985037803649902

Token 580: 'run' (ID: 12935)
  Prédit: 'run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.00048477304517291486
    2. 'r' → logprob: -8.250484466552734
    3. ''' → logprob: -9.000484466552734
    4. ' run' → logprob: -10.125484466552734
    5. ''r' → logprob: -10.250484466552734
    6. '"' → logprob: -11.500484466552734
    7. '```' → logprob: -12.750484466552734
    8. '
' → logprob: -13.375484466552734
    9. '`' → logprob: -14.375484466552734
    10. 'running' → logprob: -14.375484466552734

Token 581: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: ' début' (ID: 29589)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0829494521021843
    2. 'i' → logprob: -2.83294939994812
    3. 'position' → logprob: -4.082949638366699
    4. '[i' → logprob: -7.082949638366699
    5. ' f' → logprob: -7.457949638366699
    6. ' i' → logprob: -7.957949638366699
    7. 'continu' → logprob: -8.0829496383667
    8. ' position' → logprob: -8.3329496383667
    9. 'd' → logprob: -8.4579496383667
    10. 'continue' → logprob: -8.4579496383667

Token 584: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.7073813080787659
    2. '[i' → logprob: -1.082381248474121
    3. ' de' → logprob: -2.582381248474121
    4. 'f' → logprob: -3.457381248474121
    5. 'i' → logprob: -3.582381248474121
    6. 'd' → logprob: -4.082381248474121
    7. ' i' → logprob: -5.832381248474121
    8. '   ' → logprob: -6.332381248474121
    9. '(i' → logprob: -6.457381248474121
    10. '=i' → logprob: -6.457381248474121

Token 585: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01929430291056633
    2. 'run' → logprob: -4.769294261932373
    3. 'segment' → logprob: -4.894294261932373
    4. ' i' → logprob: -6.894294261932373
    5. 'range' → logprob: -7.894294261932373
    6. 'sequence' → logprob: -8.019294738769531
    7. 'interval' → logprob: -8.019294738769531
    8. 'bit' → logprob: -8.644294738769531
    9. 'chaine' → logprob: -9.019294738769531
    10. 'ligne' → logprob: -9.019294738769531

Token 586: ' sé' (ID: 7462)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4999736249446869
    2. 'ligne' → logprob: -1.2499736547470093
    3. 'sequence' → logprob: -3.3749735355377197
    4. 'code' → logprob: -3.3749735355377197
    5. 'segment' → logprob: -4.499973773956299
    6. 'chaine' → logprob: -5.124973773956299
    7. 'sé' → logprob: -5.624973773956299
    8. 's' → logprob: -5.749973773956299
    9. 'interval' → logprob: -6.374973773956299
    10. ' ligne' → logprob: -6.374973773956299

Token 587: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -3.619311974034645e-05
    2. 'quences' → logprob: -10.750036239624023
    3. 'QUENCE' → logprob: -11.625036239624023
    4. 'q' → logprob: -13.000036239624023
    5. 'rie' → logprob: -13.375036239624023
    6. 'r' → logprob: -14.625036239624023
    7. 'ance' → logprob: -14.875036239624023
    8. '#' → logprob: -15.125036239624023
    9. 'qu' → logprob: -15.250036239624023
    10. 'rence' → logprob: -16.125036239624023

Token 588: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3159175217151642
    2. 'for' → logprob: -1.3159174919128418
    3. 'max' → logprob: -6.690917491912842
    4. 'continue' → logprob: -8.44091796875
    5. ' for' → logprob: -8.69091796875
    6. 'print' → logprob: -9.19091796875
    7. 'result' → logprob: -9.44091796875
    8. 'dp' → logprob: -9.56591796875
    9. '```' → logprob: -9.69091796875
    10. 'Q' → logprob: -9.81591796875

Token 590: ' Alg' (ID: 31776)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4931397438049316
    2. 'ans' → logprob: -1.6181397438049316
    3. '#' → logprob: -1.7431397438049316
    4. 'answer' → logprob: -1.8681397438049316
    5. 'max' → logprob: -2.8681397438049316
    6. 'result' → logprob: -2.8681397438049316
    7. 'res' → logprob: -2.8681397438049316
    8. 'dp' → logprob: -3.7431397438049316
    9. 'total' → logprob: -4.368139743804932
    10. 'count' → logprob: -4.743139743804932

Token 591: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.18857933580875397
    2. '#' → logprob: -2.3135793209075928
    3. 'o' → logprob: -3.1885793209075928
    4. 'orithm' → logprob: -3.6885793209075928
    5. 'or' → logprob: -5.313579559326172
    6. 'orit' → logprob: -6.688579559326172
    7. 'orithms' → logprob: -9.063579559326172
    8. ' #' → logprob: -9.313579559326172
    9. 'ort' → logprob: -9.563579559326172
    10. '```' → logprob: -9.813579559326172

Token 592: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.038625337183475494
    2. 'm' → logprob: -3.2886252403259277
    3. 'mie' → logprob: -7.663625240325928
    4. '#' → logprob: -10.288625717163086
    5. 'mes' → logprob: -10.413625717163086
    6. 'e' → logprob: -10.788625717163086
    7. '```' → logprob: -12.038625717163086
    8. '_me' → logprob: -12.913625717163086
    9. 'mme' → logprob: -13.038625717163086
    10. 'hme' → logprob: -13.413625717163086

Token 593: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016688982024788857
    2. 'ans' → logprob: -5.141688823699951
    3. 'answer' → logprob: -5.391688823699951
    4. 'result' → logprob: -6.141688823699951
    5. 'dp' → logprob: -6.516688823699951
    6. 'res' → logprob: -6.641688823699951
    7. ' for' → logprob: -7.641688823699951
    8. '#' → logprob: -8.76668930053711
    9. 'max' → logprob: -9.01668930053711
    10. 'from' → logprob: -9.76668930053711

Token 594: ' regroup' (ID: 118203)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7994189858436584
    2. 'for' → logprob: -0.9244189858436584
    3. 'i' → logprob: -3.1744189262390137
    4. 'dynamic' → logprob: -3.5494189262390137
    5. '```' → logprob: -3.5494189262390137
    6. '#' → logprob: -3.7994189262390137
    7. 'K' → logprob: -4.049418926239014
    8. 'd' → logprob: -5.799418926239014
    9. 'DP' → logprob: -6.549418926239014
    10. 'diff' → logprob: -6.674418926239014

Token 595: 'ement' (ID: 962)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.36290132999420166
    2. 'e' → logprob: -2.362901210784912
    3. 'for' → logprob: -2.612901210784912
    4. 'ation' → logprob: -2.987901210784912
    5. 'o' → logprob: -3.487901210784912
    6. 'oration' → logprob: -4.237901210784912
    7. 'ration' → logprob: -4.237901210784912
    8. '#' → logprob: -5.112901210784912
    9. 'ération' → logprob: -5.362901210784912
    10. 'é' → logprob: -5.487901210784912

Token 596: ' et' (ID: 859)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005927092279307544
    2. ' for' → logprob: -7.5005927085876465
    3. '
' → logprob: -11.125593185424805
    4. '=' → logprob: -12.000593185424805
    5. 'i' → logprob: -12.500593185424805
    6. '```' → logprob: -12.625593185424805
    7. '#' → logprob: -12.750593185424805
    8. ':' → logprob: -14.000593185424805
    9. 's' → logprob: -14.000593185424805
    10. 'from' → logprob: -14.125593185424805

Token 597: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.028607726097107
    2. 'optim' → logprob: -1.653607726097107
    3. 'tri' → logprob: -1.778607726097107
    4. 'comb' → logprob: -2.5286078453063965
    5. 'calcul' → logprob: -2.9036078453063965
    6. 'com' → logprob: -4.2786078453063965
    7. 'compression' → logprob: -4.2786078453063965
    8. 'aff' → logprob: -4.6536078453063965
    9. 'fil' → logprob: -4.6536078453063965
    10. 'aggregation' → logprob: -4.6536078453063965

Token 598: ' propagation' (ID: 86772)
  Prédit: 'fusion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fusion' → logprob: -1.2273180484771729
    2. 'comb' → logprob: -1.4773180484771729
    3. 'calcul' → logprob: -1.9773180484771729
    4. 'compression' → logprob: -2.852318048477173
    5. 'mise' → logprob: -3.477318048477173
    6. 'dp' → logprob: -3.977318048477173
    7. 'tri' → logprob: -3.977318048477173
    8. 's' → logprob: -4.102317810058594
    9. '#' → logprob: -4.352317810058594
    10. 'merge' → logprob: -4.477317810058594

Token 599: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019495772721711546
    2. ' for' → logprob: -8.750194549560547
    3. '
' → logprob: -11.000194549560547
    4. '   ' → logprob: -12.250194549560547
    5. 'i' → logprob: -12.750194549560547
    6. '```' → logprob: -12.875194549560547
    7. 'from' → logprob: -13.125194549560547
    8. '#' → logprob: -13.125194549560547
    9. '=' → logprob: -14.000194549560547
    10. ')' → logprob: -14.125194549560547

Token 600: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10360816866159439
    2. 'd' → logprob: -3.6036081314086914
    3. 'rés' → logprob: -3.8536081314086914
    4. 'bits' → logprob: -4.103608131408691
    5. 'in' → logprob: -4.478608131408691
    6. 'con' → logprob: -4.603608131408691
    7. 'result' → logprob: -5.978608131408691
    8. 'diff' → logprob: -6.728608131408691
    9. 'infos' → logprob: -6.728608131408691
    10. 'information' → logprob: -7.478608131408691

Token 601: ' dans' (ID: 2671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.721228368813172e-05
    2. ' for' → logprob: -9.500086784362793
    3. '
' → logprob: -12.625086784362793
    4. '```' → logprob: -12.625086784362793
    5. '=' → logprob: -13.375086784362793
    6. '#' → logprob: -13.750086784362793
    7. 'from' → logprob: -13.875086784362793
    8. ':' → logprob: -14.625086784362793
    9. '   ' → logprob: -14.750086784362793
    10. '``' → logprob: -15.500086784362793

Token 602: ' d' (ID: 272)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.32455775141716003
    2. 'range' → logprob: -1.6995577812194824
    3. 'for' → logprob: -2.6995577812194824
    4. 'd' → logprob: -4.199557781219482
    5. 'f' → logprob: -4.824557781219482
    6. ' range' → logprob: -5.949557781219482
    7. 'Q' → logprob: -7.574557781219482
    8. '#' → logprob: -7.699557781219482
    9. '```' → logprob: -8.949557304382324
    10. ' R' → logprob: -8.949557304382324

Token 603: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014402345987036824
    2. ' for' → logprob: -6.876440048217773
    3. '
' → logprob: -8.251440048217773
    4. '```' → logprob: -9.251440048217773
    5. ':' → logprob: -10.501440048217773
    6. ':
' → logprob: -11.876440048217773
    7. '=' → logprob: -12.251440048217773
    8. '#' → logprob: -12.626440048217773
    9. 'i' → logprob: -13.001440048217773
    10. '   ' → logprob: -13.001440048217773

Token 604: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -13.500003814697266
    3. 'from' → logprob: -13.750003814697266
    4. 'R' → logprob: -14.750003814697266
    5. ' for' → logprob: -15.000003814697266
    6. 'i' → logprob: -16.000003814697266
    7. '``' → logprob: -17.125003814697266
    8. '   ' → logprob: -17.125003814697266
    9. 'def' → logprob: -17.750003814697266
    10. '
' → logprob: -17.750003814697266

Token 605: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0034019285812973976
    2. 'k' → logprob: -6.628401756286621
    3. ' i' → logprob: -6.628401756286621
    4. 'l' → logprob: -8.253401756286621
    5. 'j' → logprob: -8.878401756286621
    6. 'x' → logprob: -9.128401756286621
    7. 'length' → logprob: -9.753401756286621
    8. '_i' → logprob: -10.003401756286621
    9. 'K' → logprob: -10.378401756286621
    10. 'L' → logprob: -11.503401756286621

Token 606: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14277291297912598
    2. ' in' → logprob: -2.017772912979126
    3. ' ' → logprob: -10.392772674560547
    4. '1' → logprob: -11.017772674560547
    5. '	in' → logprob: -11.017772674560547
    6. '   ' → logprob: -11.267772674560547
    7. '(' → logprob: -12.142772674560547
    8. 'range' → logprob: -12.892772674560547
    9. 'R' → logprob: -13.142772674560547
    10. '_' → logprob: -13.267772674560547

Token 607: ' Q' (ID: 1486)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.42034420371055603
    2. 'range' → logprob: -1.5453442335128784
    3. ' range' → logprob: -2.295344114303589
    4. ' R' → logprob: -3.545344114303589
    5. '1' → logprob: -8.795344352722168
    6. 'Q' → logprob: -9.170344352722168
    7. 'r' → logprob: -10.545344352722168
    8. ' ' → logprob: -10.670344352722168
    9. 'N' → logprob: -10.920344352722168
    10. 'Range' → logprob: -11.545344352722168

Token 608: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5345118641853333
    2. '   ' → logprob: -1.6595118045806885
    3. '[' → logprob: -2.0345118045806885
    4. 'for' → logprob: -3.0345118045806885
    5. ':
' → logprob: -3.6595118045806885
    6. ' for' → logprob: -4.034512042999268
    7. ',' → logprob: -7.284512042999268
    8. '	for' → logprob: -8.40951156616211
    9. '(' → logprob: -8.90951156616211
    10. ' ' → logprob: -9.03451156616211

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10349080711603165
    2. 'for' → logprob: -2.8534908294677734
    3. ' for' → logprob: -3.2284908294677734
    4. '	for' → logprob: -6.978490829467773
    5. '   ' → logprob: -9.353490829467773
    6. 'if' → logprob: -10.978490829467773
    7. ' if' → logprob: -11.603490829467773
    8. '   ' → logprob: -12.853490829467773
    9. ' ' → logprob: -13.103490829467773
    10. '       ' → logprob: -13.478490829467773

Token 610: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033923566341400146
    2. '   ' → logprob: -3.658923625946045
    3. 'if' → logprob: -5.408923625946045
    4. ' for' → logprob: -5.783923625946045
    5. ' if' → logprob: -10.533923149108887
    6. ' ' → logprob: -11.783923149108887
    7. '	for' → logprob: -12.408923149108887
    8. 'j' → logprob: -14.158923149108887
    9. '   ' → logprob: -15.158923149108887
    10. '       ' → logprob: -15.283923149108887

Token 611: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00370280840434134
    2. 'if' → logprob: -5.753702640533447
    3. '   ' → logprob: -8.128703117370605
    4. ' for' → logprob: -8.628703117370605
    5. 'j' → logprob: -10.253703117370605
    6. ' ' → logprob: -12.878703117370605
    7. 'continue' → logprob: -12.878703117370605
    8. '	for' → logprob: -13.253703117370605
    9. 'mask' → logprob: -13.378703117370605
    10. 'pass' → logprob: -13.503703117370605

Token 612: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22810766100883484
    2. ' j' → logprob: -1.6031076908111572
    3. 'i' → logprob: -6.728107452392578
    4. ' i' → logprob: -8.228107452392578
    5. 'k' → logprob: -8.353107452392578
    6. '_' → logprob: -8.603107452392578
    7. 'K' → logprob: -8.978107452392578
    8. ' ' → logprob: -9.103107452392578
    9. '1' → logprob: -9.603107452392578
    10. ' K' → logprob: -9.853107452392578

Token 613: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.013627070933580399
    2. ' j' → logprob: -4.388627052307129
    3. 'k' → logprob: -7.263627052307129
    4. '1' → logprob: -9.888627052307129
    5. 'mask' → logprob: -9.888627052307129
    6. 'i' → logprob: -10.138627052307129
    7. '```' → logprob: -10.138627052307129
    8. '   ' → logprob: -10.513627052307129
    9. 'x' → logprob: -10.576127052307129
    10. 'K' → logprob: -10.701127052307129

Token 614: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5233928561210632
    2. ' in' → logprob: -0.8983928561210632
    3. ')' → logprob: -9.648392677307129
    4. '   ' → logprob: -9.773392677307129
    5. 'for' → logprob: -10.148392677307129
    6. ' ' → logprob: -10.648392677307129
    7. 'dans' → logprob: -11.273392677307129
    8. '```' → logprob: -11.648392677307129
    9. ' en' → logprob: -12.148392677307129
    10. '1' → logprob: -12.273392677307129

Token 615: ' i' (ID: 575)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03129109367728233
    2. 'range' → logprob: -3.6562910079956055
    3. ' range' → logprob: -5.5312910079956055
    4. ' R' → logprob: -7.0312910079956055
    5. 'Q' → logprob: -9.031291007995605
    6. '(R' → logprob: -12.906291007995605
    7. 'K' → logprob: -12.906291007995605
    8. '(' → logprob: -13.531291007995605
    9. '(range' → logprob: -13.531291007995605
    10. 'Range' → logprob: -13.531291007995605

Token 616: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04876585677266121
    2. 'in' → logprob: -3.7987658977508545
    3. '   ' → logprob: -5.173765659332275
    4. '(' → logprob: -5.423765659332275
    5. '```' → logprob: -5.798765659332275
    6. 'R' → logprob: -6.048765659332275
    7. '(R' → logprob: -6.048765659332275
    8. ',' → logprob: -6.048765659332275
    9. ' +' → logprob: -6.673765659332275
    10. ' in' → logprob: -6.798765659332275

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6100132496794686e-05
    2. ' ' → logprob: -9.875056266784668
    3. 'range' → logprob: -12.750056266784668
    4. ' range' → logprob: -14.250056266784668
    5. '```' → logprob: -15.125056266784668
    6. '   ' → logprob: -15.125056266784668
    7. '
' → logprob: -15.750056266784668
    8. '`' → logprob: -16.62505531311035
    9. 'for' → logprob: -17.12505531311035
    10. '

' → logprob: -17.37505531311035

Token 618: ' à' (ID: 1221)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20209231972694397
    2. ' in' → logprob: -2.327092409133911
    3. ',' → logprob: -2.702092409133911
    4. '(' → logprob: -4.827092170715332
    5. '   ' → logprob: -5.577092170715332
    6. 'to' → logprob: -6.452092170715332
    7. '(Q' → logprob: -6.577092170715332
    8. ')' → logprob: -7.577092170715332
    9. ' ' → logprob: -7.827092170715332
    10. 'for' → logprob: -8.077092170715332

Token 619: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.44928258657455444
    2. 'R' → logprob: -1.1992826461791992
    3. ' R' → logprob: -3.449282646179199
    4. ' N' → logprob: -3.824282646179199
    5. 'range' → logprob: -5.699282646179199
    6. ' range' → logprob: -6.449282646179199
    7. 'i' → logprob: -7.199282646179199
    8. 'K' → logprob: -7.324282646179199
    9. 'Q' → logprob: -8.5742826461792
    10. ' i' → logprob: -8.8242826461792

Token 620: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09683716297149658
    2. '(' → logprob: -3.221837043762207
    3. '(R' → logprob: -3.971837043762207
    4. ' +' → logprob: -4.096837043762207
    5. 'R' → logprob: -5.096837043762207
    6. 'for' → logprob: -5.721837043762207
    7. '(i' → logprob: -6.471837043762207
    8. ' R' → logprob: -6.721837043762207
    9. ' for' → logprob: -7.471837043762207
    10. ',' → logprob: -7.596837043762207

Token 621: ' (' (ID: 350)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.4913374185562134
    2. ' R' → logprob: -1.7413374185562134
    3. ' for' → logprob: -1.7413374185562134
    4. '   ' → logprob: -2.241337299346924
    5. 'for' → logprob: -2.241337299346924
    6. ' in' → logprob: -2.366337299346924
    7. 'in' → logprob: -3.116337299346924
    8. '(R' → logprob: -3.366337299346924
    9. ',' → logprob: -4.116337299346924
    10. ':' → logprob: -4.491337299346924

Token 622: 'i' (ID: 72)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.21443919837474823
    2. ' R' → logprob: -1.8394391536712646
    3. 'range' → logprob: -4.089439392089844
    4. ' range' → logprob: -5.089439392089844
    5. ' for' → logprob: -5.214439392089844
    6. 'for' → logprob: -5.589439392089844
    7. 'i' → logprob: -7.589439392089844
    8. ')' → logprob: -7.589439392089844
    9. 'k' → logprob: -7.589439392089844
    10. ' i' → logprob: -8.714439392089844

Token 623: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07892514765262604
    2. ' +' → logprob: -2.578925132751465
    3. ')' → logprob: -11.578925132751465
    4. '   ' → logprob: -11.828925132751465
    5. '+
' → logprob: -12.328925132751465
    6. ',' → logprob: -13.328925132751465
    7. ' +
' → logprob: -13.578925132751465
    8. ')+' → logprob: -13.578925132751465
    9. '+)' → logprob: -13.578925132751465
    10. '
' → logprob: -13.703925132751465

Token 624: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.716410219669342
    2. 'N' → logprob: -0.841410219669342
    3. ' N' → logprob: -3.7164101600646973
    4. 'i' → logprob: -3.7164101600646973
    5. ' k' → logprob: -4.466410160064697
    6. 'R' → logprob: -4.716410160064697
    7. 'Q' → logprob: -5.466410160064697
    8. ' i' → logprob: -6.341410160064697
    9. ' R' → logprob: -6.466410160064697
    10. '+' → logprob: -6.966410160064697

Token 625: ' <=' (ID: 5017)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026064783334732056
    2. '):' → logprob: -4.401064872741699
    3. '):
' → logprob: -5.026064872741699
    4. ' +' → logprob: -5.276064872741699
    5. ')' → logprob: -6.901064872741699
    6. '   ' → logprob: -8.1510648727417
    7. 'for' → logprob: -8.4010648727417
    8. ':' → logprob: -9.7760648727417
    9. ')+' → logprob: -9.9010648727417
    10. ' for' → logprob: -10.1510648727417

Token 626: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003180921310558915
    2. ' N' → logprob: -5.753180980682373
    3. 'R' → logprob: -13.253180503845215
    4. 'k' → logprob: -14.253180503845215
    5. 'K' → logprob: -15.253180503845215
    6. ' ' → logprob: -15.378180503845215
    7. ')' → logprob: -16.87818145751953
    8. 'n' → logprob: -17.00318145751953
    9. '   ' → logprob: -17.12818145751953
    10. '```' → logprob: -17.50318145751953

Token 627: ').
' (ID: 6294)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7540733814239502
    2. '):' → logprob: -0.8790733814239502
    3. '+' → logprob: -2.75407338142395
    4. ':' → logprob: -3.25407338142395
    5. ')' → logprob: -5.879073143005371
    6. '   ' → logprob: -5.879073143005371
    7. 'for' → logprob: -6.004073143005371
    8. ',' → logprob: -6.754073143005371
    9. ':
' → logprob: -6.754073143005371
    10. ' for' → logprob: -7.504073143005371

Token 628: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42119520902633667
    2. '   ' → logprob: -1.1711952686309814
    3. 'for' → logprob: -3.6711952686309814
    4. '	for' → logprob: -4.796195030212402
    5. ' R' → logprob: -11.046195030212402
    6. ' ' → logprob: -12.046195030212402
    7. '   ' → logprob: -12.546195030212402
    8. 'R' → logprob: -12.921195030212402
    9. ' ' → logprob: -13.671195030212402
    10. '       ' → logprob: -13.671195030212402

Token 629: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10353907197713852
    2. ' for' → logprob: -2.353538990020752
    3. '   ' → logprob: -5.728538990020752
    4. 'R' → logprob: -10.35353946685791
    5. '	for' → logprob: -10.72853946685791
    6. ' R' → logprob: -11.10353946685791
    7. ' ' → logprob: -13.22853946685791
    8. 'range' → logprob: -13.85353946685791
    9. 'from' → logprob: -14.10353946685791
    10. '       ' → logprob: -14.72853946685791

Token 630: ' k' (ID: 372)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.8134221434593201
    2. 'k' → logprob: -0.9384221434593201
    3. ' R' → logprob: -2.188422203063965
    4. ' k' → logprob: -3.688422203063965
    5. 'range' → logprob: -4.313422203063965
    6. ' range' → logprob: -4.563422203063965
    7. 'K' → logprob: -5.938422203063965
    8. 'Q' → logprob: -6.938422203063965
    9. 'i' → logprob: -8.688422203063965
    10. ' ' → logprob: -9.250922203063965

Token 631: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20147883892059326
    2. ' in' → logprob: -1.7014788389205933
    3. '   ' → logprob: -10.826478958129883
    4. 'k' → logprob: -11.201478958129883
    5. ')' → logprob: -11.451478958129883
    6. ' ' → logprob: -12.076478958129883
    7. 'In' → logprob: -12.951478958129883
    8. 'R' → logprob: -13.076478958129883
    9. '	in' → logprob: -13.076478958129883
    10. '  ' → logprob: -13.326478958129883

Token 632: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.01542990654706955
    2. ' R' → logprob: -4.890429973602295
    3. 'range' → logprob: -5.015429973602295
    4. ' range' → logprob: -6.765429973602295
    5. ' ' → logprob: -13.140429496765137
    6. 'Range' → logprob: -13.640429496765137
    7. 'r' → logprob: -14.515429496765137
    8. '(R' → logprob: -14.515429496765137
    9. '(range' → logprob: -15.265429496765137
    10. '   ' → logprob: -15.640429496765137

Token 633: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. 'i' → logprob: -16.875001907348633
    4. '(k' → logprob: -17.000001907348633
    5. ' (' → logprob: -18.125001907348633
    6. '(
' → logprob: -18.625001907348633
    7. '(I' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.250001907348633
    9. ' i' → logprob: -20.000001907348633
    10. '((' → logprob: -20.625001907348633

Token 634: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03813490271568298
    2. ' +' → logprob: -3.288134813308716
    3. '+k' → logprob: -10.913134574890137
    4. '+i' → logprob: -11.288134574890137
    5. '()+' → logprob: -11.538134574890137
    6. '   ' → logprob: -11.663134574890137
    7. ')+' → logprob: -11.663134574890137
    8. '1' → logprob: -11.913134574890137
    9. ',' → logprob: -12.288134574890137
    10. '(i' → logprob: -12.288134574890137

Token 635: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019712194334715605
    2. 'N' → logprob: -7.126971244812012
    3. 'k' → logprob: -7.126971244812012
    4. '(N' → logprob: -8.626971244812012
    5. ' ' → logprob: -9.001971244812012
    6. '(k' → logprob: -10.501971244812012
    7. ' N' → logprob: -11.501971244812012
    8. ' k' → logprob: -12.001971244812012
    9. '(' → logprob: -12.001971244812012
    10. '   ' → logprob: -12.501971244812012

Token 636: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.053358860313892365
    2. 'N' → logprob: -3.053358793258667
    3. 'k' → logprob: -5.553359031677246
    4. '(N' → logprob: -7.178359031677246
    5. ' N' → logprob: -9.928359031677246
    6. ' ' → logprob: -10.553359031677246
    7. '(k' → logprob: -10.678359031677246
    8. '(' → logprob: -11.803359031677246
    9. 'K' → logprob: -12.178359031677246
    10. ' k' → logprob: -12.803359031677246

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009008580818772316
    2. ',N' → logprob: -7.625900745391846
    3. ' ,' → logprob: -7.875900745391846
    4. 'N' → logprob: -11.000901222229004
    5. ',k' → logprob: -11.875901222229004
    6. '(N' → logprob: -12.250901222229004
    7. ' N' → logprob: -13.500901222229004
    8. '(),' → logprob: -13.875901222229004
    9. '   ' → logprob: -14.000901222229004
    10. ',K' → logprob: -14.375901222229004

Token 638: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.002476604888215661
    2. ' N' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.127476692199707
    4. '(N' → logprob: -16.62747573852539
    5. 'k' → logprob: -16.87747573852539
    6. '	N' → logprob: -17.37747573852539
    7. ' ' → logprob: -18.00247573852539
    8. 'K' → logprob: -18.00247573852539
    9. 'n' → logprob: -18.75247573852539
    10. '    ' → logprob: -18.87747573852539

Token 639: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043104469776153564
    2. ' +' → logprob: -3.168104410171509
    3. '()+' → logprob: -9.79310417175293
    4. '   ' → logprob: -11.29310417175293
    5. '1' → logprob: -11.41810417175293
    6. '(' → logprob: -11.66810417175293
    7. '+
' → logprob: -12.91810417175293
    8. '):
' → logprob: -12.91810417175293
    9. ')+' → logprob: -13.04310417175293
    10. ')' → logprob: -13.16810417175293

Token 640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.250024795532227
    4. '2' → logprob: -19.250024795532227
    5. '(k' → logprob: -19.500024795532227
    6. '(' → logprob: -19.500024795532227
    7. '+' → logprob: -19.875024795532227
    8. '۱' → logprob: -19.875024795532227
    9. ')' → logprob: -20.125024795532227
    10. 'k' → logprob: -20.125024795532227

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008949052426032722
    2. 'k' → logprob: -7.500895023345947
    3. '(k' → logprob: -8.125894546508789
    4. '+' → logprob: -10.500894546508789
    5. '(N' → logprob: -12.000894546508789
    6. ' ' → logprob: -12.500894546508789
    7. 'N' → logprob: -12.750894546508789
    8. 'K' → logprob: -13.375894546508789
    9. '   ' → logprob: -13.625894546508789
    10. '(' → logprob: -13.750894546508789

Token 642: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762044191360474
    2. '):' → logprob: -0.8262044191360474
    3. '):
' → logprob: -8.826204299926758
    4. ':' → logprob: -9.951204299926758
    5. '   ' → logprob: -9.951204299926758
    6. '       ' → logprob: -11.076204299926758
    7. ')' → logprob: -12.826204299926758
    8. '):

' → logprob: -13.076204299926758
    9. ',' → logprob: -13.951204299926758
    10. ':
' → logprob: -14.326204299926758

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16306184232234955
    2. 'for' → logprob: -2.2880618572235107
    3. ' for' → logprob: -3.2880618572235107
    4. '   ' → logprob: -4.538061618804932
    5. 'if' → logprob: -7.913061618804932
    6. '           ' → logprob: -8.41306209564209
    7. '#' → logprob: -9.28806209564209
    8. ' if' → logprob: -9.78806209564209
    9. '	   ' → logprob: -9.91306209564209
    10. '	for' → logprob: -10.78806209564209

Token 644: ' z' (ID: 579)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07087282091379166
    2. '       ' → logprob: -3.6958727836608887
    3. 'mask' → logprob: -3.8208727836608887
    4. 'if' → logprob: -4.695872783660889
    5. 'x' → logprob: -6.070872783660889
    6. 'm' → logprob: -6.320872783660889
    7. 'shift' → logprob: -6.695872783660889
    8. 's' → logprob: -6.945872783660889
    9. '#' → logprob: -7.070872783660889
    10. 'l' → logprob: -7.195872783660889

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5269683003425598
    2. '=' → logprob: -0.9019683003425598
    3. '   ' → logprob: -6.026968479156494
    4. 'for' → logprob: -8.276968002319336
    5. ',' → logprob: -8.901968002319336
    6. '       ' → logprob: -9.276968002319336
    7. 'd' → logprob: -9.526968002319336
    8. '=k' → logprob: -9.526968002319336
    9. '=j' → logprob: -9.526968002319336
    10. ' ' → logprob: -9.651968002319336

Token 646: ' k' (ID: 372)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23188340663909912
    2. 'd' → logprob: -2.1068835258483887
    3. '[' → logprob: -3.8568835258483887
    4. '(' → logprob: -4.731883525848389
    5. 'k' → logprob: -4.981883525848389
    6. '1' → logprob: -5.231883525848389
    7. '[d' → logprob: -5.356883525848389
    8. 'R' → logprob: -5.731883525848389
    9. '[N' → logprob: -5.731883525848389
    10. '2' → logprob: -5.856883525848389

Token 647: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10040227323770523
    2. ' -' → logprob: -2.475402355194092
    3. '-i' → logprob: -5.100402355194092
    4. '^' → logprob: -5.975402355194092
    5. ' ^' → logprob: -6.600402355194092
    6. '-k' → logprob: -6.975402355194092
    7. '   ' → logprob: -8.850401878356934
    8. '-R' → logprob: -9.600401878356934
    9. '-z' → logprob: -9.975401878356934
    10. '-j' → logprob: -10.225401878356934

Token 648: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04311120882630348
    2. '1' → logprob: -3.1681113243103027
    3. ' i' → logprob: -9.418110847473145
    4. '(i' → logprob: -11.293110847473145
    5. 'k' → logprob: -11.793110847473145
    6. 'N' → logprob: -12.668110847473145
    7. ' ' → logprob: -12.918110847473145
    8. '(' → logprob: -13.043110847473145
    9. '   ' → logprob: -13.918110847473145
    10. '2' → logprob: -14.293110847473145

Token 649: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39483848214149475
    2. '
' → logprob: -1.2698384523391724
    3. 'for' → logprob: -3.644838571548462
    4. '#' → logprob: -5.269838333129883
    5. ' for' → logprob: -5.394838333129883
    6. 'if' → logprob: -6.769838333129883
    7. '        
' → logprob: -6.769838333129883
    8. '+' → logprob: -6.894838333129883
    9. 'z' → logprob: -6.894838333129883
    10. '
' → logprob: -6.894838333129883

Token 650: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5758276581764221
    2. '
' → logprob: -0.9508276581764221
    3. 'for' → logprob: -3.3258275985717773
    4. 'if' → logprob: -4.825827598571777
    5. '#' → logprob: -5.950827598571777
    6. ' for' → logprob: -6.575827598571777
    7. ' if' → logprob: -6.825827598571777
    8. '
' → logprob: -7.325827598571777
    9. '+' → logprob: -7.950827598571777
    10. '        
' → logprob: -7.950827598571777

Token 651: ' Calcul' (ID: 57243)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8249855637550354
    2. 'z' → logprob: -1.3249855041503906
    3. 'R' → logprob: -2.1999855041503906
    4. '2' → logprob: -2.4499855041503906
    5. 'for' → logprob: -2.6999855041503906
    6. '(' → logprob: -3.9499855041503906
    7. '0' → logprob: -6.199985504150391
    8. '(z' → logprob: -6.699985504150391
    9. '(R' → logprob: -6.824985504150391
    10. 'N' → logprob: -6.824985504150391

Token 652: ' de' (ID: 334)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.46247029304504395
    2. '(z' → logprob: -1.337470293045044
    3. '-' → logprob: -3.337470293045044
    4. ' (' → logprob: -3.962470293045044
    5. '(' → logprob: -4.087470054626465
    6. '       ' → logprob: -4.712470054626465
    7. '1' → logprob: -5.212470054626465
    8. ' z' → logprob: -5.462470054626465
    9. ')' → logprob: -5.712470054626465
    10. ' -' → logprob: -5.837470054626465

Token 653: ' la' (ID: 557)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8330116868019104
    2. '1' → logprob: -1.8330116271972656
    3. 'N' → logprob: -2.5830116271972656
    4. '2' → logprob: -2.7080116271972656
    5. '(N' → logprob: -2.8330116271972656
    6. '(i' → logprob: -2.8330116271972656
    7. 'i' → logprob: -3.7080116271972656
    8. '(z' → logprob: -3.7080116271972656
    9. 'Q' → logprob: -3.9580116271972656
    10. 'R' → logprob: -4.083011627197266

Token 654: ' différence' (ID: 79196)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07643295079469681
    2. 'k' → logprob: -4.451433181762695
    3. '1' → logprob: -4.701433181762695
    4. 'R' → logprob: -4.826433181762695
    5. '(i' → logprob: -4.826433181762695
    6. '(' → logprob: -4.951433181762695
    7. 'i' → logprob: -5.326433181762695
    8. '(k' → logprob: -5.326433181762695
    9. '(z' → logprob: -5.451433181762695
    10. '2' → logprob: -5.576433181762695

Token 655: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15564723312854767
    2. '
' → logprob: -3.0306472778320312
    3. '#' → logprob: -3.1556472778320312
    4. '<|end|>' → logprob: -4.155647277832031
    5. 'for' → logprob: -4.405647277832031
    6. 'z' → logprob: -4.780647277832031
    7. ' if' → logprob: -5.655647277832031
    8. 'if' → logprob: -5.655647277832031
    9. ' for' → logprob: -6.030647277832031
    10. ' 
' → logprob: -6.655647277832031

Token 656: ''ind' (ID: 82245)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.009099025279283524
    2. ' z' → logprob: -5.384099006652832
    3. '(z' → logprob: -5.509099006652832
    4. ' (' → logprob: -8.509099006652832
    5. '1' → logprob: -10.259099006652832
    6. '(k' → logprob: -10.634099006652832
    7. ')' → logprob: -10.759099006652832
    8. '(i' → logprob: -11.009099006652832
    9. '```' → logprob: -11.384099006652832
    10. ''z' → logprob: -11.384099006652832

Token 657: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.041204437613487244
    2. 'ice' → logprob: -3.4162044525146484
    3. 'dex' → logprob: -6.166204452514648
    4. 't' → logprob: -6.416204452514648
    5. 'x' → logprob: -6.416204452514648
    6. 'ices' → logprob: -6.541204452514648
    7. 'tex' → logprob: -8.791204452514648
    8. 'ce' → logprob: -9.041204452514648
    9. 'ent' → logprob: -9.416204452514648
    10. 'ence' → logprob: -9.916204452514648

Token 658: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05089862644672394
    2. '
' → logprob: -3.800898551940918
    3. 'for' → logprob: -4.050898551940918
    4. ' for' → logprob: -5.925898551940918
    5. '<|end|>' → logprob: -6.300898551940918
    6. '#' → logprob: -6.425898551940918
    7. 'if' → logprob: -6.800898551940918
    8. 'z' → logprob: -7.550898551940918
    9. ' if' → logprob: -7.550898551940918
    10. ')' → logprob: -8.300898551940918

Token 659: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49503466486930847
    2. '       ' → logprob: -0.9950346946716309
    3. ' for' → logprob: -4.245034694671631
    4. 'if' → logprob: -5.120034694671631
    5. ' if' → logprob: -9.245034217834473
    6. '#' → logprob: -9.745034217834473
    7. '           ' → logprob: -9.745034217834473
    8. 'mask' → logprob: -9.995034217834473
    9. 'shift' → logprob: -10.370034217834473
    10. '   ' → logprob: -10.995034217834473

Token 660: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022611175663769245
    2. 'mask' → logprob: -7.002261161804199
    3. '       ' → logprob: -7.502261161804199
    4. 'if' → logprob: -7.627261161804199
    5. 'm' (adapté à ' m') → logprob: -9.0022611618042
    6. 'x' → logprob: -10.0022611618042
    7. '#' → logprob: -10.7522611618042
    8. 'v' → logprob: -11.3772611618042
    9. ' for' → logprob: -11.6272611618042
    10. 's' → logprob: -11.6272611618042

Token 661: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.530830442905426
    2. ' =' → logprob: -0.905830442905426
    3. 'ax' → logprob: -5.030830383300781
    4. 'ask' → logprob: -8.405830383300781
    5. '=k' → logprob: -8.655830383300781
    6. '=max' → logprob: -9.405830383300781
    7. '=z' → logprob: -9.780830383300781
    8. '   ' → logprob: -10.030830383300781
    9. 'x' → logprob: -10.030830383300781
    10. '=m' → logprob: -10.155830383300781

Token 662: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.802249550819397
    2. '(' → logprob: -1.552249550819397
    3. 'z' → logprob: -2.5522494316101074
    4. 'N' → logprob: -2.8022494316101074
    5. 'R' → logprob: -3.4272494316101074
    6. '0' → logprob: -3.8022494316101074
    7. 'min' → logprob: -3.9272494316101074
    8. '2' → logprob: -3.9272494316101074
    9. 'Q' → logprob: -4.052249431610107
    10. '(N' → logprob: -4.177249431610107

Token 663: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22777633368968964
    2. '(' → logprob: -2.602776288986206
    3. 'd' → logprob: -2.977776288986206
    4. 'N' → logprob: -3.352776288986206
    5. 'z' → logprob: -4.102776527404785
    6. 'Q' → logprob: -4.977776527404785
    7. 'j' → logprob: -5.727776527404785
    8. 'R' → logprob: -5.852776527404785
    9. 'k' → logprob: -6.102776527404785
    10. '2' → logprob: -6.227776527404785

Token 664: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.1200929582118988
    2. ' <<' → logprob: -2.2450928688049316
    3. '[j' → logprob: -6.120092868804932
    4. '[z' → logprob: -6.245092868804932
    5. '[k' → logprob: -6.870092868804932
    6. '[i' → logprob: -7.120092868804932
    7. '   ' → logprob: -8.37009334564209
    8. '<<(' → logprob: -8.37009334564209
    9. '1' → logprob: -8.87009334564209
    10. '[' → logprob: -9.12009334564209

Token 665: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0005512446514330804
    2. '(N' → logprob: -8.000551223754883
    3. '(z' → logprob: -9.375551223754883
    4. 'i' → logprob: -10.875551223754883
    5. ' z' → logprob: -10.875551223754883
    6. '(i' → logprob: -11.000551223754883
    7. '   ' → logprob: -11.125551223754883
    8. 'N' → logprob: -11.250551223754883
    9. 'k' → logprob: -12.125551223754883
    10. '(' → logprob: -12.250551223754883

Token 666: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003337886882945895
    2. ')-' → logprob: -5.753337860107422
    3. ' )' → logprob: -9.003337860107422
    4. '#' → logprob: -11.253337860107422
    5. ')
' → logprob: -11.878337860107422
    6. ' ' → logprob: -12.628337860107422
    7. '   ' → logprob: -12.878337860107422
    8. 'm' → logprob: -13.253337860107422
    9. ')-(' → logprob: -13.253337860107422
    10. '1' → logprob: -13.378337860107422

Token 667: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026765819638967514
    2. ' -' → logprob: -3.651765823364258
    3. '
' → logprob: -9.276765823364258
    4. '#' → logprob: -9.276765823364258
    5. '       ' → logprob: -9.776765823364258
    6. 'm' → logprob: -9.901765823364258
    7. '()-' → logprob: -10.276765823364258
    8. '+' → logprob: -10.401765823364258
    9. ')' → logprob: -10.901765823364258
    10. '   ' → logprob: -11.401765823364258

Token 668: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '           ' → logprob: -17.75004005432129
    4. 'z' → logprob: -18.37504005432129
    5. '   ' → logprob: -18.37504005432129
    6. ')' → logprob: -18.50004005432129
    7. ' z' → logprob: -18.62504005432129
    8. '(' → logprob: -18.75004005432129
    9. ' (' → logprob: -18.75004005432129
    10. '```' → logprob: -19.37504005432129

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -16.625019073486328
    4. '(' → logprob: -17.250019073486328
    5. ')' → logprob: -17.750019073486328
    6. '```' → logprob: -17.812519073486328
    7. '           ' → logprob: -18.125019073486328
    8. '   ' → logprob: -18.312519073486328
    9. ' (' → logprob: -18.625019073486328
    10. '
' → logprob: -18.625019073486328

Token 670: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04890402406454086
    2. '
' → logprob: -3.5489039421081543
    3. '<|end|>' → logprob: -4.548903942108154
    4. 'for' → logprob: -5.423903942108154
    5. ' for' → logprob: -6.423903942108154
    6. ')' → logprob: -7.048903942108154
    7. 'm' → logprob: -7.923903942108154
    8. '#' → logprob: -8.548904418945312
    9. '        
' → logprob: -8.673904418945312
    10. '<|end|>' → logprob: -9.423904418945312

Token 671: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20041677355766296
    2. '<|end|>' → logprob: -2.3254168033599854
    3. '
' → logprob: -2.7004168033599854
    4. ')' → logprob: -4.825416564941406
    5. 'for' → logprob: -5.950416564941406
    6. ' for' → logprob: -6.700416564941406
    7. 'm' → logprob: -6.950416564941406
    8. '        
' → logprob: -7.575416564941406
    9. '#' → logprob: -7.825416564941406
    10. 'if' → logprob: -7.825416564941406

Token 672: ' Mas' (ID: 10873)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11125222593545914
    2. 'mask' → logprob: -2.7362523078918457
    3. ' m' → logprob: -4.111252307891846
    4. '(' → logprob: -4.861252307891846
    5. 'for' → logprob: -5.236252307891846
    6. 'z' → logprob: -5.861252307891846
    7. ' mask' → logprob: -5.986252307891846
    8. '((' → logprob: -6.111252307891846
    9. '(m' → logprob: -6.861252307891846
    10. ' (' → logprob: -7.361252307891846

Token 673: 'que' (ID: 1126)
  Prédit: 'ask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ask' → logprob: -0.4965881407260895
    2. 'k' → logprob: -1.496588110923767
    3. 'sk' → logprob: -2.9965882301330566
    4. '```' → logprob: -4.121588230133057
    5. 'm' → logprob: -4.246588230133057
    6. '=' → logprob: -4.246588230133057
    7. 'z' → logprob: -4.371588230133057
    8. '<<' → logprob: -4.371588230133057
    9. ' =' → logprob: -4.621588230133057
    10. ' m' → logprob: -5.121588230133057

Token 674: ' b' (ID: 287)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: 'inaire' (ID: 41465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.447431206703186
    2. 'z' → logprob: -2.0724310874938965
    3. '=' → logprob: -2.6974310874938965
    4. '   ' → logprob: -2.9474310874938965
    5. ' (' → logprob: -2.9474310874938965
    6. '       ' → logprob: -3.0724310874938965
    7. '<|end|>' → logprob: -3.1974310874938965
    8. ' =' → logprob: -3.4474310874938965
    9. ' <<' → logprob: -3.4474310874938965
    10. 'm' → logprob: -3.5724310874938965

Token 676: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7315620183944702
    2. ')' → logprob: -1.2315620183944702
    3. '<|end|>' → logprob: -1.6065620183944702
    4. '<<' → logprob: -4.98156213760376
    5. ' (' → logprob: -5.60656213760376
    6. 'm' → logprob: -5.73156213760376
    7. '(' → logprob: -6.60656213760376
    8. ' <<' → logprob: -6.85656213760376
    9. '
' → logprob: -7.10656213760376
    10. '<|end|>' → logprob: -7.10656213760376

Token 677: ' sélection' (ID: 43472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027719611302018166
    2. '&' → logprob: -4.402719497680664
    3. ' =' → logprob: -4.402719497680664
    4. ')' → logprob: -6.652719497680664
    5. ' &=' → logprob: -8.402719497680664
    6. ' <<=' → logprob: -8.402719497680664
    7. ' m' → logprob: -8.777719497680664
    8. '&m' → logprob: -8.902719497680664
    9. '<<' → logprob: -9.152719497680664
    10. '|' → logprob: -9.527719497680664

Token 678: 'ne' (ID: 611)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16612069308757782
    2. ' =' → logprob: -3.666120767593384
    3. ' ((' → logprob: -4.166120529174805
    4. '(' → logprob: -4.416120529174805
    5. ' (' → logprob: -4.416120529174805
    6. '       ' → logprob: -4.416120529174805
    7. '=(' → logprob: -4.666120529174805
    8. 'e' → logprob: -4.791120529174805
    9. '<<' → logprob: -4.916120529174805
    10. '((' → logprob: -4.916120529174805

Token 679: ' les' (ID: 1341)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7290078401565552
    2. 'm' → logprob: -1.1040078401565552
    3. ' z' → logprob: -1.9790078401565552
    4. ' m' → logprob: -3.8540077209472656
    5. '(z' → logprob: -4.854007720947266
    6. '((' → logprob: -4.979007720947266
    7. ' (' → logprob: -4.979007720947266
    8. '(' → logprob: -5.729007720947266
    9. ' ((' → logprob: -6.729007720947266
    10. '(m' → logprob: -7.854007720947266

Token 680: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3883320093154907
    2. ' z' → logprob: -1.1383320093154907
    3. 'm' → logprob: -7.013331890106201
    4. '(z' → logprob: -8.51333236694336
    5. ' m' → logprob: -8.88833236694336
    6. 'k' → logprob: -9.51333236694336
    7. ' ' → logprob: -10.26333236694336
    8. ' (' → logprob: -10.51333236694336
    9. 'bits' → logprob: -10.76333236694336
    10. ' bits' → logprob: -11.88833236694336

Token 681: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7001895904541016
    2. ' bits' → logprob: -0.8251895904541016
    3. ' derniers' → logprob: -3.4501895904541016
    4. ' premiers' → logprob: -3.5751895904541016
    5. ' ' → logprob: -6.700189590454102
    6. '_bits' → logprob: -7.325189590454102
    7. ' ' → logprob: -7.450189590454102
    8. 'prem' → logprob: -7.450189590454102
    9. ' bit' → logprob: -7.700189590454102
    10. 'bit' → logprob: -7.700189590454102

Token 682: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8629559874534607
    2. '<|end|>' → logprob: -1.4879560470581055
    3. '<<' → logprob: -1.9879560470581055
    4. '       ' → logprob: -2.2379560470581055
    5. ' <<' → logprob: -4.3629560470581055
    6. 's' → logprob: -4.4879560470581055
    7. 'm' → logprob: -4.4879560470581055
    8. ')<<' → logprob: -4.8629560470581055
    9. '=' → logprob: -5.1129560470581055
    10. ' <<=' → logprob: -5.3629560470581055

Token 683: ' droite' (ID: 61428)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.3160758912563324
    2. 'po' → logprob: -1.4410759210586548
    3. ' droite' → logprob: -3.9410758018493652
    4. ' poids' → logprob: -4.816075801849365
    5. 'z' → logprob: -5.691075801849365
    6. ' dro' → logprob: -6.691075801849365
    7. 'd' → logprob: -7.441075801849365
    8. 'la' → logprob: -7.566075801849365
    9. ' z' → logprob: -8.566076278686523
    10. 'moins' → logprob: -8.691076278686523

Token 684: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030785856768488884
    2. ')' → logprob: -3.7807857990264893
    3. '<|end|>' → logprob: -6.655786037445068
    4. '
' → logprob: -6.780786037445068
    5. 'm' → logprob: -6.905786037445068
    6. 'z' → logprob: -7.280786037445068
    7. '	' → logprob: -7.530786037445068
    8. '#' → logprob: -8.03078556060791
    9. ')
' → logprob: -8.15578556060791
    10. ',' → logprob: -8.28078556060791

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6133826375007629
    2. 'for' → logprob: -1.1133825778961182
    3. 'if' → logprob: -2.613382577896118
    4. ' for' → logprob: -3.113382577896118
    5. ' if' → logprob: -4.738382816314697
    6. 'x' → logprob: -7.363382816314697
    7. '           ' → logprob: -7.863382816314697
    8. 'u' → logprob: -8.113382339477539
    9. 's' → logprob: -8.238382339477539
    10. '#' → logprob: -8.363382339477539

Token 686: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008452449692413211
    2. '       ' → logprob: -7.500845432281494
    3. 'if' → logprob: -9.375844955444336
    4. 'm' → logprob: -9.500844955444336
    5. ' for' → logprob: -10.125844955444336
    6. '#' (adapté à ' #') → logprob: -10.250844955444336
    7. 'mask' → logprob: -10.375844955444336
    8. 'x' → logprob: -12.000844955444336
    9. 'shift' → logprob: -13.000844955444336
    10. 'f' → logprob: -13.375844955444336

Token 687: ' It' (ID: 1225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002036595979006961
    2. 'x' → logprob: -10.250204086303711
    3. 'mask' → logprob: -10.375204086303711
    4. 'if' → logprob: -10.375204086303711
    5. '#' → logprob: -11.000204086303711
    6. 'm' → logprob: -11.250204086303711
    7. 'p' → logprob: -12.000204086303711
    8. '   ' → logprob: -12.000204086303711
    9. ' for' → logprob: -12.125204086303711
    10. 'f' → logprob: -12.125204086303711

Token 688: 'ère' (ID: 4346)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17724786698818207
    2. '           ' → logprob: -2.6772477626800537
    3. '       ' → logprob: -2.9272477626800537
    4. '#' → logprob: -3.8022477626800537
    5. 'if' → logprob: -4.927248001098633
    6. ' for' → logprob: -4.927248001098633
    7. '   ' → logprob: -6.927248001098633
    8. 'erm' → logprob: -8.052248001098633
    9. 'r' → logprob: -8.552248001098633
    10. 'j' → logprob: -8.802248001098633

Token 689: ' tous' (ID: 10688)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.7018169164657593
    2. ' for' → logprob: -1.4518169164657593
    3. 'for' → logprob: -1.9518169164657593
    4. 'j' → logprob: -2.201817035675049
    5. '   ' → logprob: -4.951817035675049
    6. '       ' → logprob: -5.826817035675049
    7. ' in' → logprob: -6.951817035675049
    8. ' ' → logprob: -7.201817035675049
    9. ' y' → logprob: -7.326817035675049
    10. ' over' → logprob: -7.326817035675049

Token 690: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05322718992829323
    2. ' j' → logprob: -3.178227186203003
    3. '(j' → logprob: -5.428227424621582
    4. 'l' → logprob: -6.303227424621582
    5. '   ' → logprob: -6.803227424621582
    6. '(' → logprob: -7.428227424621582
    7. 'm' → logprob: -7.803227424621582
    8. 'x' → logprob: -8.053227424621582
    9. 'R' → logprob: -8.303227424621582
    10. ' (' → logprob: -8.678227424621582

Token 691: ' patterns' (ID: 18587)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3041498363018036
    2. 'x' → logprob: -1.804149866104126
    3. 'l' → logprob: -2.804149866104126
    4. 's' → logprob: -4.929149627685547
    5. 'm' → logprob: -5.054149627685547
    6. 'y' → logprob: -5.429149627685547
    7. 'sub' → logprob: -5.929149627685547
    8. 'k' → logprob: -6.304149627685547
    9. 'w' → logprob: -6.429149627685547
    10. 'b' → logprob: -6.554149627685547

Token 692: ' possible' (ID: 4149)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7224412560462952
    2. 'for' → logprob: -1.2224411964416504
    3. ' for' → logprob: -2.0974411964416504
    4. ' j' → logprob: -2.8474411964416504
    5. ' in' → logprob: -4.34744119644165
    6. 'in' → logprob: -4.84744119644165
    7. 'x' → logprob: -5.22244119644165
    8. '(j' → logprob: -6.09744119644165
    9. '(' → logprob: -6.47244119644165
    10. '       ' → logprob: -6.72244119644165

Token 693: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3059632778167725
    2. 'for' → logprob: -1.3059632778167725
    3. ' in' → logprob: -1.5559632778167725
    4. 'j' → logprob: -1.9309632778167725
    5. ' j' → logprob: -2.6809632778167725
    6. 'in' → logprob: -4.180963516235352
    7. '   ' → logprob: -5.430963516235352
    8. '       ' → logprob: -5.805963516235352
    9. '(j' → logprob: -6.055963516235352
    10. ',' → logprob: -6.555963516235352

Token 694: ' k' (ID: 372)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.100632444024086
    2. 'R' → logprob: -2.725632429122925
    3. ' z' → logprob: -4.475632667541504
    4. 'j' → logprob: -4.975632667541504
    5. ' R' → logprob: -6.225632667541504
    6. 'k' → logprob: -6.350632667541504
    7. 'Q' → logprob: -6.600632667541504
    8. 'i' → logprob: -6.725632667541504
    9. '0' → logprob: -6.850632667541504
    10. 'm' → logprob: -6.850632667541504

Token 695: ' bits' (ID: 18189)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08978376537561417
    2. ' +' → logprob: -3.3397836685180664
    3. '):' → logprob: -3.5897836685180664
    4. '):
' → logprob: -4.464783668518066
    5. 'in' → logprob: -6.089783668518066
    6. ' -' → logprob: -6.214783668518066
    7. '-' → logprob: -6.464783668518066
    8. ':' → logprob: -6.964783668518066
    9. 'for' → logprob: -7.339783668518066
    10. '>>' → logprob: -7.964783668518066

Token 696: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5856731534004211
    2. '       ' → logprob: -0.9606731534004211
    3. ' for' → logprob: -2.8356730937957764
    4. '           ' → logprob: -7.4606733322143555
    5. '   ' → logprob: -7.7106733322143555
    6. ',' → logprob: -8.210673332214355
    7. ' in' → logprob: -8.710673332214355
    8. '(' → logprob: -8.710673332214355
    9. 'in' → logprob: -9.210673332214355
    10. ':' → logprob: -9.835673332214355

Token 697: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05045895650982857
    2. '       ' → logprob: -3.1754589080810547
    3. ' for' → logprob: -4.925458908081055
    4. '   ' → logprob: -8.800458908081055
    5. '	for' → logprob: -11.550458908081055
    6. '           ' → logprob: -12.050458908081055
    7. '	' → logprob: -13.175458908081055
    8. ' ' → logprob: -13.300458908081055
    9. '	   ' → logprob: -14.175458908081055
    10. '```' → logprob: -14.675458908081055

Token 698: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000601169012952596
    2. ' for' → logprob: -7.500601291656494
    3. '   ' → logprob: -10.875600814819336
    4. 'R' → logprob: -11.125600814819336
    5. 'j' → logprob: -11.875600814819336
    6. '       ' → logprob: -12.375600814819336
    7. 'range' → logprob: -13.500600814819336
    8. '```' → logprob: -14.625600814819336
    9. '
' → logprob: -15.000600814819336
    10. 'r' → logprob: -15.500600814819336

Token 699: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004859430715441704
    2. 'x' → logprob: -5.879859447479248
    3. 'l' → logprob: -7.504859447479248
    4. 'p' → logprob: -7.629859447479248
    5. ' j' → logprob: -8.25485897064209
    6. 's' → logprob: -8.37985897064209
    7. 'a' → logprob: -9.75485897064209
    8. 'v' → logprob: -9.87985897064209
    9. 'm' → logprob: -9.87985897064209
    10. 'pat' → logprob: -10.12985897064209

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47409674525260925
    2. 'in' → logprob: -0.9740967750549316
    3. '   ' → logprob: -11.974096298217773
    4. 'In' → logprob: -12.474096298217773
    5. 'R' → logprob: -13.474096298217773
    6. 'd' → logprob: -13.474096298217773
    7. 'n' → logprob: -13.724096298217773
    8. ' ' → logprob: -14.349096298217773
    9. 'import' → logprob: -14.474096298217773
    10. ')' → logprob: -14.724096298217773

Token 701: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.006507889833301306
    2. ' R' → logprob: -5.506507873535156
    3. 'range' → logprob: -6.256507873535156
    4. ' range' → logprob: -7.631507873535156
    5. 'Q' → logprob: -11.256507873535156
    6. '(' → logprob: -12.881507873535156
    7. '(R' → logprob: -13.006507873535156
    8. 'Range' → logprob: -13.131507873535156
    9. 'r' → logprob: -13.881507873535156
    10. ' ' → logprob: -13.881507873535156

Token 702: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025776340044103563
    2. '((' → logprob: -8.37525749206543
    3. '(k' → logprob: -11.12525749206543
    4. ' (' → logprob: -11.87525749206543
    5. '1' → logprob: -12.62525749206543
    6. '(
' → logprob: -14.87525749206543
    7. '(m' → logprob: -15.12525749206543
    8. ' ' → logprob: -15.12525749206543
    9. '   ' → logprob: -15.62525749206543
    10. '(max' → logprob: -15.75025749206543

Token 703: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009907777421176434
    2. '(' → logprob: -4.6349077224731445
    3. '0' → logprob: -9.259907722473145
    4. '   ' → logprob: -10.384907722473145
    5. ' ' → logprob: -10.759907722473145
    6. ')' → logprob: -13.634907722473145
    7. ' (' → logprob: -13.884907722473145
    8. '```' → logprob: -14.009907722473145
    9. '[' → logprob: -15.009907722473145
    10. '`' → logprob: -15.384907722473145

Token 704: ' <<' (ID: 2256)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8533450365066528
    2. '<<' → logprob: -0.8533450365066528
    3. '(k' → logprob: -2.2283449172973633
    4. ' <<' → logprob: -3.6033449172973633
    5. '1' → logprob: -5.478344917297363
    6. '<<(' → logprob: -5.478344917297363
    7. ' (' → logprob: -6.228344917297363
    8. 'k' → logprob: -6.728344917297363
    9. '(j' → logprob: -7.603344917297363
    10. '   ' → logprob: -7.853344917297363

Token 705: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.32586145401000977
    2. 'z' → logprob: -1.3258614540100098
    3. 'i' → logprob: -5.20086145401001
    4. '(k' → logprob: -5.95086145401001
    5. ' k' → logprob: -6.57586145401001
    6. ' z' → logprob: -6.95086145401001
    7. '(z' → logprob: -7.07586145401001
    8. '(i' → logprob: -7.70086145401001
    9. 'j' → logprob: -8.450860977172852
    10. '(' → logprob: -8.825860977172852

Token 706: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38831284642219543
    2. '):' → logprob: -1.138312816619873
    3. '):
' → logprob: -6.638312816619873
    4. ':' → logprob: -9.513313293457031
    5. '       ' → logprob: -10.263313293457031
    6. '   ' → logprob: -11.763313293457031
    7. '):

' → logprob: -12.388313293457031
    8. '           ' → logprob: -12.513313293457031
    9. ')' → logprob: -13.638313293457031
    10. ':
' → logprob: -13.888313293457031

Token 707: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30676373839378357
    2. 'if' → logprob: -1.556763768196106
    3. ' if' → logprob: -4.056763648986816
    4. '#' → logprob: -5.056763648986816
    5. 'x' → logprob: -5.306763648986816
    6. 's' → logprob: -5.306763648986816
    7. 't' → logprob: -5.556763648986816
    8. 'a' → logprob: -6.181763648986816
    9. 'v' → logprob: -6.306763648986816
    10. 'u' → logprob: -6.431763648986816

Token 708: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7850223779678345
    2. 'x' → logprob: -1.2850223779678345
    3. 'p' → logprob: -2.910022258758545
    4. 'a' → logprob: -2.910022258758545
    5. '           ' → logprob: -3.035022258758545
    6. 'd' → logprob: -3.785022258758545
    7. 'v' → logprob: -4.160022258758545
    8. 's' → logprob: -4.285022258758545
    9. 'f' → logprob: -4.535022258758545
    10. '#' (adapté à ' #') → logprob: -4.660022258758545

Token 709: ' Aj' (ID: 28294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6290486454963684
    2. 'x' → logprob: -1.2540485858917236
    3. 'a' → logprob: -2.8790485858917236
    4. 'p' → logprob: -3.7540485858917236
    5. 's' → logprob: -4.254048824310303
    6. 'v' → logprob: -4.379048824310303
    7. 'u' → logprob: -4.504048824310303
    8. 'd' → logprob: -4.504048824310303
    9. '#' → logprob: -4.879048824310303
    10. 'b' → logprob: -5.254048824310303

Token 710: 'oute' (ID: 3509)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.7496551871299744
    2. 'outer' → logprob: -0.9996551871299744
    3. 'outez' → logprob: -2.124655246734619
    4. 'ust' → logprob: -4.374655246734619
    5. 'if' → logprob: -4.749655246734619
    6. 'oute' → logprob: -5.124655246734619
    7. '#' → logprob: -5.624655246734619
    8. 'f' → logprob: -5.874655246734619
    9. 'uste' → logprob: -6.499655246734619
    10. '           ' → logprob: -6.874655246734619

Token 711: ' la' (ID: 557)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6613348722457886
    2. 'd' → logprob: -0.7863348722457886
    3. 'if' → logprob: -4.661334991455078
    4. '           ' → logprob: -5.536334991455078
    5. 'f' → logprob: -5.786334991455078
    6. ' if' → logprob: -5.786334991455078
    7. ' (' → logprob: -6.286334991455078
    8. ' f' → logprob: -6.786334991455078
    9. '0' → logprob: -6.911334991455078
    10. '               ' → logprob: -7.161334991455078

Token 712: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16739073395729065
    2. 'f' → logprob: -2.417390823364258
    3. ' d' → logprob: -3.042390823364258
    4. ' f' → logprob: -4.792390823364258
    5. '(' → logprob: -6.542390823364258
    6. '1' → logprob: -6.667390823364258
    7. 'if' → logprob: -6.792390823364258
    8. ' (' → logprob: -6.792390823364258
    9. '(d' → logprob: -7.417390823364258
    10. '0' → logprob: -7.667390823364258

Token 713: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.39777177572250366
    2. ' d' → logprob: -1.1477718353271484
    3. '           ' → logprob: -4.897771835327148
    4. '(d' → logprob: -7.397771835327148
    5. '               ' → logprob: -7.397771835327148
    6. ' if' → logprob: -7.897771835327148
    7. 'if' → logprob: -7.897771835327148
    8. '[d' → logprob: -7.897771835327148
    9. ' à' → logprob: -8.897771835327148
    10. ' de' → logprob: -9.147771835327148

Token 714: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03525961935520172
    2. '[k' → logprob: -3.41025972366333
    3. '[j' → logprob: -7.28525972366333
    4. 'i' → logprob: -7.53525972366333
    5. 'k' → logprob: -8.910259246826172
    6. ' [' → logprob: -9.285259246826172
    7. 'd' → logprob: -10.285259246826172
    8. '   ' → logprob: -11.035259246826172
    9. '[' → logprob: -11.285259246826172
    10. ' i' → logprob: -11.410259246826172

Token 715: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.036438364535570145
    2. '-' → logprob: -3.411438465118408
    3. ' -' → logprob: -6.286438465118408
    4. ']' → logprob: -8.03643798828125
    5. '[j' → logprob: -8.78643798828125
    6. '-m' → logprob: -9.03643798828125
    7. '[' → logprob: -9.78643798828125
    8. '[i' → logprob: -10.28643798828125
    9. '[z' → logprob: -10.28643798828125
    10. '[m' → logprob: -10.53643798828125

Token 716: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002567694988101721
    2. 'i' → logprob: -6.877567768096924
    3. '][' → logprob: -7.377567768096924
    4. ' j' → logprob: -7.877567768096924
    5. '(j' → logprob: -8.502567291259766
    6. '[j' → logprob: -9.252567291259766
    7. 'd' → logprob: -9.627567291259766
    8. '           ' → logprob: -10.377567291259766
    9. '   ' → logprob: -10.627567291259766
    10. 'k' → logprob: -10.877567291259766

Token 717: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03832467272877693
    2. '-' → logprob: -4.03832483291626
    3. '])' → logprob: -4.53832483291626
    4. ' -' → logprob: -5.53832483291626
    5. '][' → logprob: -5.53832483291626
    6. '   ' → logprob: -8.413324356079102
    7. '           ' → logprob: -8.663324356079102
    8. '       ' → logprob: -9.038324356079102
    9. '],' → logprob: -9.163324356079102
    10. ']+' → logprob: -9.413324356079102

Token 718: ' à' (ID: 1221)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5925025939941406
    2. ' +=' → logprob: -1.3425025939941406
    3. '           ' → logprob: -2.7175025939941406
    4. 'd' → logprob: -3.7175025939941406
    5. '=' → logprob: -3.8425025939941406
    6. '+' → logprob: -4.467502593994141
    7. 'if' → logprob: -4.467502593994141
    8. ' to' → logprob: -4.592502593994141
    9. 'to' → logprob: -4.717502593994141
    10. ']' → logprob: -5.217502593994141

Token 719: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03859207034111023
    2. ' d' → logprob: -3.2885921001434326
    3. '           ' → logprob: -7.9135918617248535
    4. '                   ' → logprob: -9.913592338562012
    5. '               ' → logprob: -10.163592338562012
    6. ']' → logprob: -11.038592338562012
    7. '   ' → logprob: -11.413592338562012
    8. '                       ' → logprob: -11.538592338562012
    9. ')' → logprob: -11.913592338562012
    10. '```' → logprob: -12.163592338562012

Token 720: ' dens' (ID: 42124)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015640194760635495
    2. ' d' → logprob: -7.501564025878906
    3. 'i' → logprob: -7.876564025878906
    4. ']' → logprob: -8.501564025878906
    5. '...' → logprob: -9.751564025878906
    6. '```' → logprob: -9.876564025878906
    7. '           ' → logprob: -10.126564025878906
    8. '
' → logprob: -10.501564025878906
    9. 'k' → logprob: -10.501564025878906
    10. '`' → logprob: -10.501564025878906

Token 721: 'ité' (ID: 3761)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.048915375024080276
    2. 'e' → logprob: -3.298915386199951
    3. 'i' → logprob: -4.923915386199951
    4. '[' → logprob: -7.048915386199951
    5. '   ' → logprob: -7.548915386199951
    6. ' [' → logprob: -7.673915386199951
    7. 'u' → logprob: -8.298914909362793
    8. 'é' → logprob: -8.548914909362793
    9. 'd' → logprob: -8.798914909362793
    10. '[e' → logprob: -9.298914909362793

Token 722: ' correspond' (ID: 11095)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8184128999710083
    2. 'd' → logprob: -1.6934128999710083
    3. '           ' → logprob: -1.9434128999710083
    4. '][' → logprob: -2.5684127807617188
    5. ' d' → logprob: -2.8184127807617188
    6. ']' → logprob: -3.1934127807617188
    7. '[' → logprob: -4.068412780761719
    8. '               ' → logprob: -4.818412780761719
    9. ' [' → logprob: -4.943412780761719
    10. '[d' → logprob: -5.568412780761719

Token 723: 'ante' (ID: 2116)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0090234279632568
    2. 'ante' → logprob: -1.7590234279632568
    3. ']' → logprob: -2.259023427963257
    4. '           ' → logprob: -2.384023427963257
    5. 'd' → logprob: -3.009023427963257
    6. 'ente' → logprob: -3.134023427963257
    7. '][' → logprob: -3.134023427963257
    8. 'ent' → logprob: -3.634023427963257
    9. '       ' → logprob: -4.009023666381836
    10. '[' → logprob: -4.134023666381836

Token 724: ' dans' (ID: 2671)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5153162479400635
    2. ' d' → logprob: -1.3903162479400635
    3. '           ' → logprob: -2.8903162479400635
    4. ' if' → logprob: -3.8903162479400635
    5. 'if' → logprob: -4.015316009521484
    6. '[d' → logprob: -4.015316009521484
    7. ']' → logprob: -4.515316009521484
    8. '[' → logprob: -5.140316009521484
    9. '][' → logprob: -5.390316009521484
    10. '               ' → logprob: -5.515316009521484

Token 725: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013466615928336978
    2. ' d' → logprob: -6.626346588134766
    3. '           ' → logprob: -12.001346588134766
    4. 'i' → logprob: -12.501346588134766
    5. '   ' → logprob: -13.126346588134766
    6. '[i' → logprob: -13.251346588134766
    7. '```' → logprob: -13.251346588134766
    8. '       ' → logprob: -14.251346588134766
    9. '               ' → logprob: -14.376346588134766
    10. '#' → logprob: -14.626346588134766

Token 726: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002303697168827057
    2. 'i' → logprob: -6.877303600311279
    3. '           ' → logprob: -7.377303600311279
    4. '][' → logprob: -8.877304077148438
    5. ' [' → logprob: -9.002304077148438
    6. ' i' → logprob: -9.252304077148438
    7. '   ' → logprob: -9.752304077148438
    8. 'd' → logprob: -9.877304077148438
    9. '       ' → logprob: -10.002304077148438
    10. '               ' → logprob: -10.627304077148438

Token 727: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010949730640277267
    2. '[(' → logprob: -7.126094818115234
    3. ']' → logprob: -9.876094818115234
    4. '[' → logprob: -10.251094818115234
    5. '[j' → logprob: -10.501094818115234
    6. '[((' → logprob: -10.501094818115234
    7. ']][' → logprob: -10.751094818115234
    8. '((' → logprob: -11.126094818115234
    9. '][:' → logprob: -11.251094818115234
    10. '+' → logprob: -11.501094818115234

Token 728: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.025942014530301094
    2. '(j' → logprob: -3.900942087173462
    3. 'i' → logprob: -5.400941848754883
    4. '(i' → logprob: -8.150941848754883
    5. ' (' → logprob: -8.900941848754883
    6. ' j' → logprob: -8.900941848754883
    7. '((' → logprob: -9.400941848754883
    8. '[j' → logprob: -9.400941848754883
    9. 'k' → logprob: -10.275941848754883
    10. '(' → logprob: -10.650941848754883

Token 729: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.11731841415166855
    2. '&' → logprob: -2.6173183917999268
    3. '>>' → logprob: -4.492318630218506
    4. ']' → logprob: -4.867318630218506
    5. ' ^' → logprob: -4.992318630218506
    6. ' >>' → logprob: -5.117318630218506
    7. ' |' → logprob: -5.867318630218506
    8. ' ' → logprob: -7.367318630218506
    9. '   ' → logprob: -7.492318630218506
    10. '|' → logprob: -7.742318630218506

Token 730: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0014815322356298566
    2. ' z' → logprob: -6.751481533050537
    3. '(z' → logprob: -8.126481056213379
    4. '       ' → logprob: -12.251481056213379
    5. '   ' → logprob: -12.876481056213379
    6. '           ' → logprob: -13.126481056213379
    7. 'm' → logprob: -13.751481056213379
    8. '	z' → logprob: -13.751481056213379
    9. '[z' → logprob: -13.876481056213379
    10. ' (' → logprob: -14.251481056213379

Token 731: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0043084644712507725
    2. ']+' → logprob: -6.254308700561523
    3. ']]' → logprob: -6.879308700561523
    4. ' ]' → logprob: -7.004308700561523
    5. '           ' → logprob: -9.379308700561523
    6. '].' → logprob: -9.629308700561523
    7. ')]' → logprob: -10.004308700561523
    8. '],' → logprob: -10.129308700561523
    9. '])' → logprob: -10.254308700561523
    10. '       ' → logprob: -10.629308700561523

Token 732: ' ce' (ID: 2357)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2695429027080536
    2. ' d' → logprob: -2.019542932510376
    3. '+=' → logprob: -3.644542932510376
    4. ']' → logprob: -3.894542932510376
    5. ' +=' → logprob: -4.019542694091797
    6. '           ' → logprob: -4.769542694091797
    7. ']+=' → logprob: -5.019542694091797
    8. '+' → logprob: -5.269542694091797
    9. '                           ' → logprob: -5.769542694091797
    10. ')' → logprob: -5.769542694091797

Token 733: ' qui' (ID: 2780)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.9157130122184753
    2. '=' → logprob: -1.4157130718231201
    3. ' +=' → logprob: -2.54071307182312
    4. '           ' → logprob: -2.66571307182312
    5. '+' → logprob: -2.79071307182312
    6. ']+=' → logprob: -3.04071307182312
    7. ']' → logprob: -3.16571307182312
    8. '#' → logprob: -4.415712833404541
    9. '               ' → logprob: -4.540712833404541
    10. '       ' → logprob: -5.415712833404541

Token 734: ' revient' (ID: 95900)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8077686429023743
    2. ' +=' → logprob: -1.0577685832977295
    3. ']+=' → logprob: -1.6827685832977295
    4. ']' → logprob: -5.057768821716309
    5. '#' → logprob: -5.432768821716309
    6. ')' → logprob: -5.682768821716309
    7. 's' → logprob: -7.307768821716309
    8. '=' → logprob: -7.432768821716309
    9. ' #' → logprob: -7.432768821716309
    10. ' continue' → logprob: -7.557768821716309

Token 735: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11347190290689468
    2. ' +=' → logprob: -3.1134719848632812
    3. 'à' → logprob: -3.2384719848632812
    4. '+' → logprob: -4.988471984863281
    5. ' to' → logprob: -5.238471984863281
    6. '+=' → logprob: -5.613471984863281
    7. '           ' → logprob: -6.363471984863281
    8. '=' → logprob: -6.613471984863281
    9. ' +' → logprob: -7.113471984863281
    10. 'to' → logprob: -7.113471984863281

Token 736: ' agré' (ID: 54151)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6445469856262207
    2. ' d' → logprob: -0.8945469856262207
    3. ' +=' → logprob: -3.7695469856262207
    4. '+=' → logprob: -4.019546985626221
    5. ' ajouter' → logprob: -4.769546985626221
    6. '+' → logprob: -5.519546985626221
    7. '           ' → logprob: -5.894546985626221
    8. 'j' → logprob: -6.269546985626221
    9. ' j' → logprob: -6.769546985626221
    10. ' accum' → logprob: -7.269546985626221

Token 737: 'ger' (ID: 1281)
  Prédit: 'ger'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ger' → logprob: -0.006864558905363083
    2. 'g' → logprob: -5.006864547729492
    3. '`' → logprob: -10.256864547729492
    4. 'gger' → logprob: -10.631864547729492
    5. 'gré' → logprob: -11.381864547729492
    6. 'greg' → logprob: -11.506864547729492
    7. 'gé' → logprob: -11.631864547729492
    8. 'r' → logprob: -12.131864547729492
    9. '

' → logprob: -12.256864547729492
    10. 'ge' → logprob: -12.381864547729492

Token 738: ' selon' (ID: 27571)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2520071864128113
    2. ' d' → logprob: -1.502007246017456
    3. '           ' → logprob: -10.252007484436035
    4. ' ' → logprob: -11.752007484436035
    5. '+' → logprob: -12.127007484436035
    6. ' +' → logprob: -12.627007484436035
    7. ' +=' → logprob: -12.752007484436035
    8. ')' → logprob: -12.877007484436035
    9. ']' → logprob: -13.002007484436035
    10. '   ' → logprob: -13.002007484436035

Token 739: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3707561492919922
    2. ' la' → logprob: -1.8707561492919922
    3. ' l' → logprob: -1.9957561492919922
    4. ' le' → logprob: -2.620756149291992
    5. ' les' → logprob: -2.620756149291992
    6. 'la' → logprob: -2.745756149291992
    7. 'le' → logprob: -2.870756149291992
    8. 'les' → logprob: -3.120756149291992
    9. 'd' → logprob: -3.370756149291992
    10. ' d' → logprob: -3.620756149291992

Token 740: ' pré' (ID: 9424)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1882259845733643
    2. 'z' → logprob: -1.6882259845733643
    3. ' i' → logprob: -1.9382259845733643
    4. 'k' → logprob: -2.1882259845733643
    5. ' z' → logprob: -2.4382259845733643
    6. 'bits' → logprob: -2.6882259845733643
    7. '```' → logprob: -3.4382259845733643
    8. ' k' → logprob: -3.8132259845733643
    9. '(i' → logprob: -4.688225746154785
    10. ' (' → logprob: -4.938225746154785

Token 741: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.10901777446269989
    2. 'c' → logprob: -2.484017848968506
    3. 'cision' → logprob: -4.359017848968506
    4. 'ced' → logprob: -5.734017848968506
    5. 'cé' → logprob: -6.984017848968506
    6. 'vious' → logprob: -7.234017848968506
    7. 'cis' → logprob: -7.484017848968506
    8. '_c' → logprob: -8.484017372131348
    9. '```' → logprob: -8.609017372131348
    10. 'f' → logprob: -8.984017372131348

Token 742: 'e' (ID: 68)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.7312402725219727
    2. 'fix' → logprob: -1.2312402725219727
    3. 'ixe' → logprob: -2.4812402725219727
    4. 'x' → logprob: -2.6062402725219727
    5. 'j' → logprob: -4.106240272521973
    6. '```' → logprob: -4.731240272521973
    7. 'ex' → logprob: -5.231240272521973
    8. 'i' → logprob: -5.356240272521973
    9. 'f' → logprob: -5.481240272521973
    10. ']' → logprob: -5.606240272521973

Token 743: ' gauche' (ID: 58367)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5680618286132812
    2. ' d' → logprob: -1.8180618286132812
    3. 's' → logprob: -2.6930618286132812
    4. '           ' → logprob: -3.6930618286132812
    5. '[i' → logprob: -3.6930618286132812
    6. 'i' → logprob: -3.8180618286132812
    7. '```' → logprob: -4.068061828613281
    8. ' i' → logprob: -4.193061828613281
    9. ']' → logprob: -4.193061828613281
    10. '.' → logprob: -4.443061828613281

Token 744: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6076971888542175
    2. '           ' → logprob: -1.3576972484588623
    3. 'd' → logprob: -2.9826972484588623
    4. '.' → logprob: -3.3576972484588623
    5. '[i' → logprob: -3.7326972484588623
    6. '+' → logprob: -4.232697010040283
    7. '[' → logprob: -4.357697010040283
    8. ' d' → logprob: -4.482697010040283
    9. ']+' → logprob: -4.857697010040283
    10. ']+=' → logprob: -4.982697010040283

Token 745: '           ' (ID: 352)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06717681139707565
    2. 'd' → logprob: -3.3171768188476562
    3. '           ' → logprob: -3.5671768188476562
    4. '               ' → logprob: -8.692176818847656
    5. ' 
' → logprob: -10.067176818847656
    6. '                       ' → logprob: -10.192176818847656
    7. ' ' → logprob: -10.442176818847656
    8. '	d' → logprob: -10.692176818847656
    9. ' ' → logprob: -10.817176818847656
    10. '   ' → logprob: -10.942176818847656

Token 746: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0011787971016019583
    2. ' d' → logprob: -6.751178741455078
    3. '           ' → logprob: -11.751178741455078
    4. '               ' → logprob: -14.501178741455078
    5. '	d' → logprob: -16.126178741455078
    6. '   ' → logprob: -16.376178741455078
    7. '                   ' → logprob: -17.001178741455078
    8. '       ' → logprob: -17.126178741455078
    9. '                       ' → logprob: -18.126178741455078
    10. ' ' → logprob: -18.501178741455078

Token 747: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[I' → logprob: -15.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. 'i' → logprob: -16.125
    5. '```' → logprob: -17.0
    6. ' [' → logprob: -17.375
    7. '[j' → logprob: -17.375
    8. 's' → logprob: -17.75
    9. '[d' → logprob: -18.0
    10. '[k' → logprob: -18.25

Token 748: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009176511666737497
    2. '[i' → logprob: -7.875917434692383
    3. '[j' → logprob: -8.625917434692383
    4. '[' → logprob: -9.125917434692383
    5. ']' → logprob: -9.250917434692383
    6. ' ][' → logprob: -9.500917434692383
    7. '[d' → logprob: -11.000917434692383
    8. '   ' → logprob: -11.250917434692383
    9. '       ' → logprob: -12.000917434692383
    10. 'd' → logprob: -12.375917434692383

Token 749: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00046630011638626456
    2. '[j' → logprob: -8.250466346740723
    3. ' j' → logprob: -9.125466346740723
    4. '   ' → logprob: -10.375466346740723
    5. ' ' → logprob: -10.875466346740723
    6. '][' → logprob: -11.125466346740723
    7. '(j' → logprob: -12.125466346740723
    8. 'd' → logprob: -12.125466346740723
    9. '	j' → logprob: -12.125466346740723
    10. '     ' → logprob: -13.000466346740723

Token 750: ' >>' (ID: 6832)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4844585359096527
    2. ']+=' → logprob: -1.359458565711975
    3. '[' → logprob: -2.3594584465026855
    4. '+=' → logprob: -4.2344584465026855
    5. '+' → logprob: -5.2344584465026855
    6. '    ' → logprob: -5.4844584465026855
    7. '>>' → logprob: -5.8594584465026855
    8. ' +=' → logprob: -6.8594584465026855
    9. ']+' → logprob: -6.8594584465026855
    10. '   ' → logprob: -6.9844584465026855

Token 751: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.02977236546576023
    2. ' z' → logprob: -3.5297722816467285
    3. '(z' → logprob: -11.654772758483887
    4. '	z' → logprob: -11.779772758483887
    5. '```' → logprob: -12.904772758483887
    6. '           ' → logprob: -13.779772758483887
    7. '[z' → logprob: -14.154772758483887
    8. '=z' → logprob: -15.404772758483887
    9. 'k' → logprob: -15.904772758483887
    10. ':z' → logprob: -15.904772758483887

Token 752: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07019751518964767
    2. ']+=' → logprob: -2.695197582244873
    3. ']+' → logprob: -8.695197105407715
    4. '+=' → logprob: -9.820197105407715
    5. ' ]' → logprob: -10.945197105407715
    6. '+]' → logprob: -11.945197105407715
    7. ' +=' → logprob: -12.695197105407715
    8. '+' → logprob: -12.695197105407715
    9. ')' → logprob: -12.945197105407715
    10. '[' → logprob: -13.320197105407715

Token 753: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001722188200801611
    2. ' +=' → logprob: -6.37672233581543
    3. '+' → logprob: -11.75172233581543
    4. '=' → logprob: -12.37672233581543
    5. '   ' → logprob: -12.62672233581543
    6. ']+=' → logprob: -13.00172233581543
    7. '    ' → logprob: -13.75172233581543
    8. '[' → logprob: -14.37672233581543
    9. '>' → logprob: -15.62672233581543
    10. '```' → logprob: -15.75172233581543

Token 754: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.747814349073451e-05
    2. ' d' → logprob: -11.750017166137695
    3. '           ' → logprob: -11.750017166137695
    4. '   ' → logprob: -13.875017166137695
    5. '               ' → logprob: -14.875017166137695
    6. '       ' → logprob: -16.250017166137695
    7. '                   ' → logprob: -16.750017166137695
    8. '	d' → logprob: -16.875017166137695
    9. '          ' → logprob: -17.125017166137695
    10. '         ' → logprob: -18.000017166137695

Token 755: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.1637164789135568e-05
    2. 'k' → logprob: -12.250011444091797
    3. '[i' → logprob: -12.375011444091797
    4. '```' → logprob: -14.250011444091797
    5. '[' → logprob: -14.500011444091797
    6. '[m' → logprob: -15.000011444091797
    7. '][' → logprob: -15.375011444091797
    8. '[d' → logprob: -15.375011444091797
    9. ' [' → logprob: -15.750011444091797
    10. '(k' → logprob: -16.125011444091797

Token 756: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.015283049084246159
    2. '[j' → logprob: -4.265283107757568
    3. '[' → logprob: -7.765283107757568
    4. ']' → logprob: -8.01528263092041
    5. ' ][' → logprob: -9.64028263092041
    6. '[z' → logprob: -9.64028263092041
    7. '[m' → logprob: -9.89028263092041
    8. '[i' → logprob: -10.14028263092041
    9. '[k' → logprob: -10.26528263092041
    10. '   ' → logprob: -11.01528263092041

Token 757: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.36574100604048e-06
    2. ' j' → logprob: -12.750004768371582
    3. '[j' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.750004768371582
    5. '```' → logprob: -16.625003814697266
    6. '	j' → logprob: -16.750003814697266
    7. ' ' → logprob: -17.125003814697266
    8. ']' → logprob: -17.750003814697266
    9. '(j' → logprob: -17.875003814697266
    10. 'm' → logprob: -18.250003814697266

Token 758: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00038479414070025086
    2. '])' → logprob: -8.000384330749512
    3. ' ]' → logprob: -10.250384330749512
    4. ')' → logprob: -12.125384330749512
    5. ']
' → logprob: -13.125384330749512
    6. ']<<' → logprob: -13.250384330749512
    7. '<|end|>' → logprob: -14.000384330749512
    8. '[' → logprob: -14.000384330749512
    9. '#' → logprob: -14.625384330749512
    10. ']>' → logprob: -14.875384330749512

Token 759: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 760: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: ' Util' (ID: 13564)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010880391113460064
    2. 'f' → logprob: -4.760880470275879
    3. 'd' → logprob: -6.885880470275879
    4. '           ' → logprob: -8.010880470275879
    5. '#' → logprob: -8.760880470275879
    6. 'val' → logprob: -9.260880470275879
    7. ' if' → logprob: -9.260880470275879
    8. 'l' → logprob: -9.760880470275879
    9. 'for' → logprob: -9.760880470275879
    10. 'u' → logprob: -9.885880470275879

Token 762: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.006172894034534693
    2. 'is' → logprob: -6.3811726570129395
    3. 'iser' → logprob: -6.7561726570129395
    4. '#' → logprob: -7.0061726570129395
    5. 'isez' → logprob: -7.3811726570129395
    6. 'isation' → logprob: -8.006173133850098
    7. 'e' → logprob: -8.131173133850098
    8. 'isé' → logprob: -8.381173133850098
    9. 'se' → logprob: -8.631173133850098
    10. '```' → logprob: -9.006173133850098

Token 763: ' le' (ID: 505)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.16206015646457672
    2. ' f' → logprob: -1.9120601415634155
    3. 'if' → logprob: -7.537060260772705
    4. 'd' → logprob: -7.662060260772705
    5. ' d' → logprob: -7.787060260772705
    6. ' if' → logprob: -8.412059783935547
    7. '           ' → logprob: -9.412059783935547
    8. 'k' → logprob: -11.287059783935547
    9. ' ' → logprob: -11.287059783935547
    10. '   ' → logprob: -11.537059783935547

Token 764: ' run' (ID: 2461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1242835596203804
    2. 'if' → logprob: -2.2492835521698
    3. ' f' → logprob: -5.874283790588379
    4. 'max' → logprob: -6.249283790588379
    5. ' if' → logprob: -6.499283790588379
    6. 'd' → logprob: -6.874283790588379
    7. 'r' → logprob: -7.374283790588379
    8. 'run' → logprob: -7.499283790588379
    9. 'm' → logprob: -7.999283790588379
    10. '#' → logprob: -8.374283790588379

Token 765: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.019468391314148903
    2. 'f' → logprob: -4.394468307495117
    3. ' length' → logprob: -5.269468307495117
    4. '_length' → logprob: -6.769468307495117
    5. ' f' → logprob: -8.769468307495117
    6. 'leng' → logprob: -8.769468307495117
    7. '[i' → logprob: -9.144468307495117
    8. 'len' → logprob: -9.519468307495117
    9. '-length' → logprob: -9.769468307495117
    10. 'd' → logprob: -10.769468307495117

Token 766: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.025356294587254524
    2. ' f' → logprob: -4.150356292724609
    3. '       ' → logprob: -5.650356292724609
    4. '           ' → logprob: -7.025356292724609
    5. '   ' → logprob: -7.275356292724609
    6. 'd' → logprob: -7.525356292724609
    7. '[f' → logprob: -8.02535629272461
    8. '               ' → logprob: -8.27535629272461
    9. ' to' → logprob: -8.27535629272461
    10. ' of' → logprob: -8.40035629272461

Token 767: '[z' (ID: 105082)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11498334258794785
    2. '[k' → logprob: -2.239983320236206
    3. '[j' → logprob: -7.489983558654785
    4. 'f' → logprob: -7.614983558654785
    5. '[f' → logprob: -7.864983558654785
    6. 'k' → logprob: -7.989983558654785
    7. 'i' → logprob: -8.989983558654785
    8. '[' → logprob: -9.489983558654785
    9. ' [' → logprob: -10.364983558654785
    10. '   ' → logprob: -10.739983558654785

Token 768: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003407071635592729
    2. ']' → logprob: -8.750340461730957
    3. '[j' → logprob: -9.125340461730957
    4. ' ][' → logprob: -10.625340461730957
    5. '[' → logprob: -11.375340461730957
    6. ']][' → logprob: -11.375340461730957
    7. '])' → logprob: -12.000340461730957
    8. '[(' → logprob: -12.625340461730957
    9. '[z' → logprob: -13.000340461730957
    10. ')][' → logprob: -13.125340461730957

Token 769: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11411778628826141
    2. '(j' → logprob: -2.4891178607940674
    3. '((' → logprob: -4.364117622375488
    4. 'm' → logprob: -4.989117622375488
    5. '(m' → logprob: -6.114117622375488
    6. 'd' → logprob: -6.739117622375488
    7. '(' → logprob: -7.239117622375488
    8. '(d' → logprob: -7.489117622375488
    9. ' j' → logprob: -8.114117622375488
    10. ' (' → logprob: -8.489117622375488

Token 770: '&m' (ID: 165240)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.08885973691940308
    2. ' &' → logprob: -2.963859796524048
    3. '&m' → logprob: -3.963859796524048
    4. ']' → logprob: -4.838859558105469
    5. '>>' → logprob: -5.713859558105469
    6. '&(' → logprob: -6.838859558105469
    7. '[j' → logprob: -7.338859558105469
    8. '[m' → logprob: -8.088859558105469
    9. ']&' → logprob: -8.463859558105469
    10. '][' → logprob: -8.963859558105469

Token 771: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003457136917859316
    2. ']+' → logprob: -8.500346183776855
    3. '])' → logprob: -9.750346183776855
    4. ' ]' → logprob: -9.750346183776855
    5. ']+=' → logprob: -11.750346183776855
    6. ']]' → logprob: -12.375346183776855
    7. '],' → logprob: -12.875346183776855
    8. '()]' → logprob: -13.000346183776855
    9. '`]' → logprob: -13.250346183776855
    10. '&' → logprob: -13.250346183776855

Token 772: ' pour' (ID: 1930)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.7739080786705017
    2. '           ' → logprob: -0.8989080786705017
    3. 'if' → logprob: -3.5239081382751465
    4. 'd' → logprob: -3.8989081382751465
    5. 'f' → logprob: -4.0239081382751465
    6. '*' → logprob: -4.0239081382751465
    7. '=' → logprob: -4.3989081382751465
    8. ' +=' → logprob: -4.3989081382751465
    9. '+' → logprob: -4.8989081382751465
    10. '       ' → logprob: -6.3989081382751465

Token 773: ' obtenir' (ID: 54423)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14520424604415894
    2. 'max' → logprob: -2.3952043056488037
    3. 'if' → logprob: -4.270204067230225
    4. ' d' → logprob: -4.520204067230225
    5. 'f' → logprob: -5.645204067230225
    6. 'min' → logprob: -6.145204067230225
    7. ' max' → logprob: -6.395204067230225
    8. 'aj' → logprob: -6.395204067230225
    9. 'calcul' → logprob: -6.395204067230225
    10. 'augment' → logprob: -6.520204067230225

Token 774: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22736777365207672
    2. ' d' → logprob: -1.9773677587509155
    3. 'f' → logprob: -3.852367877960205
    4. 'max' → logprob: -4.227367877960205
    5. ' la' → logprob: -4.477367877960205
    6. ' f' → logprob: -5.477367877960205
    7. 'l' → logprob: -5.977367877960205
    8. ' max' → logprob: -6.352367877960205
    9. ' le' → logprob: -6.602367877960205
    10. ' l' → logprob: -6.852367877960205

Token 775: ' longueur' (ID: 104613)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4419061541557312
    2. 'f' → logprob: -1.316906213760376
    3. 'max' → logprob: -3.566906213760376
    4. 'run' → logprob: -3.816906213760376
    5. ' d' → logprob: -4.441905975341797
    6. ' run' → logprob: -5.066905975341797
    7. ' f' → logprob: -5.191905975341797
    8. 'r' → logprob: -6.066905975341797
    9. '+' → logprob: -6.066905975341797
    10. 'length' → logprob: -6.191905975341797

Token 776: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5582536458969116
    2. ' de' → logprob: -1.9332536458969116
    3. '+' → logprob: -2.058253765106201
    4. ' d' → logprob: -3.433253765106201
    5. '               ' → logprob: -3.558253765106201
    6. 'd' → logprob: -3.808253765106201
    7. 'f' → logprob: -3.933253765106201
    8. 'de' → logprob: -4.683253765106201
    9. '            ' → logprob: -5.058253765106201
    10. '                   ' → logprob: -5.558253765106201

Token 777: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7125738859176636
    2. 'run' → logprob: -1.3375738859176636
    3. ''une' → logprob: -2.712574005126953
    4. 'un' → logprob: -3.087574005126953
    5. 'e' → logprob: -3.337574005126953
    6. 'u' → logprob: -3.712574005126953
    7. 'f' → logprob: -3.962574005126953
    8. ' run' → logprob: -4.962574005126953
    9. 'd' → logprob: -5.337574005126953
    10. ''' → logprob: -5.462574005126953

Token 778: ' sé' (ID: 7462)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -1.3003512620925903
    2. ' sé' → logprob: -1.5503512620925903
    3. 'sé' → logprob: -1.6753512620925903
    4. 'course' → logprob: -3.050351142883301
    5. 'suite' → logprob: -3.050351142883301
    6. 's' → logprob: -3.300351142883301
    7. 'chaine' → logprob: -3.550351142883301
    8. ' course' → logprob: -4.050351142883301
    9. 'sequence' → logprob: -4.050351142883301
    10. 'val' → logprob: -4.300351142883301

Token 779: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0007391115068458021
    2. 'q' → logprob: -7.750739097595215
    3. '#' → logprob: -9.375739097595215
    4. 'QUENCE' → logprob: -9.500739097595215
    5. 'quences' → logprob: -10.000739097595215
    6. '```' → logprob: -10.625739097595215
    7. '`' → logprob: -11.500739097595215
    8. '{' → logprob: -11.625739097595215
    9. 'g' → logprob: -12.250739097595215
    10. '_q' → logprob: -12.375739097595215

Token 780: ' de' (ID: 334)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.5903972387313843
    2. ' de' → logprob: -1.8403972387313843
    3. '+' → logprob: -1.9653972387313843
    4. '           ' → logprob: -2.215397357940674
    5. ' maximale' → logprob: -2.715397357940674
    6. 'max' → logprob: -2.965397357940674
    7. 'de' → logprob: -2.965397357940674
    8. 'd' → logprob: -3.090397357940674
    9. ' f' → logprob: -3.215397357940674
    10. ' d' → logprob: -3.840397357940674

Token 781: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.036088068038225174
    2. '1' → logprob: -3.661087989807129
    3. ' bits' → logprob: -5.036087989807129
    4. ' ' → logprob: -6.661087989807129
    5. '0' → logprob: -7.411087989807129
    6. 'run' → logprob: -7.911087989807129
    7. 'runs' → logprob: -8.036087989807129
    8. 'bit' → logprob: -8.661087989807129
    9. 'uns' → logprob: -9.286087989807129
    10. 't' → logprob: -9.661087989807129

Token 782: ' ident' (ID: 3951)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.11830472946167
    2. '           ' → logprob: -2.11830472946167
    3. 'continue' → logprob: -2.24330472946167
    4. 'cont' → logprob: -2.36830472946167
    5. '       ' → logprob: -2.61830472946167
    6. ' ég' → logprob: -2.74330472946167
    7. '+' → logprob: -3.11830472946167
    8. 'd' → logprob: -3.36830472946167
    9. 'de' → logprob: -3.49330472946167
    10. 'cons' → logprob: -3.49330472946167

Token 783: 'iques' (ID: 11654)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.707313060760498
    2. 'aux' → logprob: -1.332313060760498
    3. 'iques' → logprob: -2.457313060760498
    4. 'que' → logprob: -3.207313060760498
    5. 'ique' → logprob: -3.207313060760498
    6. 'ques' → logprob: -4.082313060760498
    7. 'te' → logprob: -4.707313060760498
    8. '```' → logprob: -5.082313060760498
    9. 'ale' → logprob: -5.207313060760498
    10. 'tiques' → logprob: -5.207313060760498

Token 784: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28227129578590393
    2. '*' → logprob: -2.782271385192871
    3. '+' → logprob: -2.907271385192871
    4. 'dans' → logprob: -3.157271385192871
    5. ' dans' → logprob: -3.532271385192871
    6. '#' → logprob: -4.157271385192871
    7. ']' → logprob: -5.157271385192871
    8. ')' → logprob: -5.282271385192871
    9. '```' → logprob: -5.407271385192871
    10. ' *' → logprob: -5.407271385192871

Token 785: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21496720612049103
    2. 'j' → logprob: -1.8399672508239746
    3. 'f' → logprob: -3.8399672508239746
    4. ' d' → logprob: -5.464967250823975
    5. ' j' → logprob: -6.464967250823975
    6. 'la' → logprob: -6.839967250823975
    7. '   ' → logprob: -6.964967250823975
    8. 'l' → logprob: -7.339967250823975
    9. 'le' → logprob: -7.589967250823975
    10. '```' → logprob: -7.714967250823975

Token 786: ' suffix' (ID: 43412)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6427477598190308
    2. 'j' → logprob: -1.0177477598190308
    3. 'pattern' → logprob: -3.3927478790283203
    4. 'f' → logprob: -3.5177478790283203
    5. ' d' → logprob: -4.26774787902832
    6. 'segment' → logprob: -5.14274787902832
    7. '```' → logprob: -5.26774787902832
    8. ' j' → logprob: -5.64274787902832
    9. 'run' → logprob: -6.14274787902832
    10. ' pattern' → logprob: -6.26774787902832

Token 787: 'e' (ID: 68)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -1.1197952032089233
    2. '[j' → logprob: -1.3697952032089233
    3. 'j' → logprob: -1.9947952032089233
    4. ']' → logprob: -2.119795322418213
    5. 'e' → logprob: -2.619795322418213
    6. '(j' → logprob: -3.369795322418213
    7. '][' → logprob: -4.369795322418213
    8. '   ' → logprob: -4.994795322418213
    9. ')' → logprob: -5.494795322418213
    10. '       ' → logprob: -5.744795322418213

Token 788: ' z' (ID: 579)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7448580265045166
    2. '[j' → logprob: -1.9948580265045166
    3. 'f' → logprob: -2.1198580265045166
    4. '[z' → logprob: -2.7448580265045166
    5. ' de' → logprob: -3.6198580265045166
    6. 'de' → logprob: -3.6198580265045166
    7. '```' → logprob: -3.6198580265045166
    8. 'dans' → logprob: -3.7448580265045166
    9. '   ' → logprob: -4.1198577880859375
    10. 'of' → logprob: -4.3698577880859375

Token 789: ' bits' (ID: 18189)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.21686074137687683
    2. ']' → logprob: -1.9668607711791992
    3. '[j' → logprob: -3.716860771179199
    4. '_bits' → logprob: -5.216860771179199
    5. '[z' → logprob: -5.341860771179199
    6. '&' → logprob: -5.841860771179199
    7. 'bits' → logprob: -5.841860771179199
    8. '   ' → logprob: -5.966860771179199
    9. '[' → logprob: -6.466860771179199
    10. '       ' → logprob: -6.841860771179199

Token 790: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012059479020535946
    2. '.' → logprob: -5.887059688568115
    3. ']' → logprob: -6.262059688568115
    4. ' dans' → logprob: -7.137059688568115
    5. 'dans' → logprob: -7.137059688568115
    6. ' de' → logprob: -7.387059688568115
    7. '#' → logprob: -7.512059688568115
    8. '       ' → logprob: -7.512059688568115
    9. ',' → logprob: -7.637059688568115
    10. '+' → logprob: -7.762059688568115

Token 791: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16040903329849243
    2. ' if' → logprob: -2.9104089736938477
    3. 'if' → logprob: -3.0354089736938477
    4. 'd' → logprob: -3.1604089736938477
    5. '```' → logprob: -6.285408973693848
    6. ' d' → logprob: -7.660408973693848
    7. 'f' → logprob: -8.410408973693848
    8. '+' → logprob: -8.535408973693848
    9. ' f' → logprob: -9.785408973693848
    10. 'for' → logprob: -10.035408973693848

Token 792: ' r' (ID: 428)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.017941076308488846
    2. 'if' → logprob: -4.142940998077393
    3. 'f' → logprob: -7.392940998077393
    4. '           ' → logprob: -7.517940998077393
    5. 'r' (adapté à ' r') → logprob: -7.642940998077393
    6. ' d' → logprob: -9.89294147491455
    7. 't' → logprob: -10.76794147491455
    8. 's' → logprob: -10.76794147491455
    9. 'p' → logprob: -10.89294147491455
    10. 'run' → logprob: -10.89294147491455

Token 793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741332530975342
    2. ' =' → logprob: -0.9741332530975342
    3. '=f' → logprob: -10.974133491516113
    4. '=z' → logprob: -10.974133491516113
    5. '[z' → logprob: -11.599133491516113
    6. '=r' → logprob: -12.474133491516113
    7. ' ' → logprob: -12.849133491516113
    8. '=len' → logprob: -13.599133491516113
    9. 'f' → logprob: -13.849133491516113
    10. '=_' → logprob: -14.474133491516113

Token 794: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00016432604752480984
    2. ' f' → logprob: -8.750164031982422
    3. '   ' → logprob: -12.375164031982422
    4. 'max' → logprob: -14.750164031982422
    5. 'min' → logprob: -15.250164031982422
    6. '       ' → logprob: -15.375164031982422
    7. ' ' → logprob: -15.625164031982422
    8. '  ' → logprob: -15.625164031982422
    9. '    ' → logprob: -15.750164031982422
    10. '     ' → logprob: -15.875164031982422

Token 795: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -6.873571692267433e-05
    2. 'z' → logprob: -9.750068664550781
    3. '(z' → logprob: -11.500068664550781
    4. '[' → logprob: -16.00006866455078
    5. '	z' → logprob: -16.75006866455078
    6. '[r' → logprob: -17.37506866455078
    7. ' z' → logprob: -17.75006866455078
    8. '```' → logprob: -18.12506866455078
    9. ' [' → logprob: -18.87506866455078
    10. '[
' → logprob: -19.25006866455078

Token 796: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20160287618637085
    2. '[j' → logprob: -1.7016029357910156
    3. '[' → logprob: -9.826602935791016
    4. ']' → logprob: -10.201602935791016
    5. '           ' → logprob: -10.326602935791016
    6. ' ][' → logprob: -10.826602935791016
    7. '[z' → logprob: -11.451602935791016
    8. '   ' → logprob: -11.576602935791016
    9. '       ' → logprob: -12.576602935791016
    10. '         ' → logprob: -12.951602935791016

Token 797: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00041184606379829347
    2. '(j' → logprob: -7.8754119873046875
    3. ' j' → logprob: -10.875411987304688
    4. '[j' → logprob: -11.750411987304688
    5. ' (' → logprob: -13.000411987304688
    6. '```' → logprob: -13.625411987304688
    7. '   ' → logprob: -15.375411987304688
    8. '((' → logprob: -15.500411987304688
    9. '$j' → logprob: -15.500411987304688
    10. '	j' → logprob: -15.625411987304688

Token 798: ' &' (ID: 827)
  Prédit: '&m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&m' → logprob: -0.04573744162917137
    2. '&' → logprob: -3.5457375049591064
    3. '[m' → logprob: -4.670737266540527
    4. '[j' → logprob: -5.670737266540527
    5. ' &' → logprob: -6.295737266540527
    6. 'm' → logprob: -7.920737266540527
    7. '&M' → logprob: -8.295737266540527
    8. '[' → logprob: -8.670737266540527
    9. '&amp' → logprob: -9.295737266540527
    10. '&(' → logprob: -9.420737266540527

Token 799: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.60414821645827e-06
    2. ' m' → logprob: -12.375004768371582
    3. '(m' → logprob: -15.375004768371582
    4. ' ' → logprob: -17.000003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '	m' → logprob: -17.625003814697266
    7. '```' → logprob: -18.625003814697266
    8. '           ' → logprob: -18.750003814697266
    9. '[m' → logprob: -19.500003814697266
    10. '       ' → logprob: -19.500003814697266

Token 800: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007281593861989677
    2. ']
' → logprob: -7.250728130340576
    3. ']+' → logprob: -11.750728607177734
    4. ']
' → logprob: -12.250728607177734
    5. ']

' → logprob: -12.750728607177734
    6. ' ]' → logprob: -13.250728607177734
    7. 'r' → logprob: -15.250728607177734
    8. ')' → logprob: -16.375728607177734
    9. '       ' → logprob: -16.500728607177734
    10. ']>' → logprob: -16.750728607177734

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029087694361805916
    2. 'if' → logprob: -3.779087781906128
    3. 'd' → logprob: -5.279087543487549
    4. ' if' → logprob: -7.779087543487549
    5. 'for' → logprob: -8.904088020324707
    6. 'while' → logprob: -9.029088020324707
    7. '#' → logprob: -10.904088020324707
    8. '```' → logprob: -12.029088020324707
    9. '            
' → logprob: -12.279088020324707
    10. '       ' → logprob: -12.529088020324707

Token 802: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2447868287563324
    2. '           ' → logprob: -1.6197868585586548
    3. 'd' → logprob: -4.244786739349365
    4. ' if' → logprob: -5.494786739349365
    5. 'for' → logprob: -8.244787216186523
    6. 'while' → logprob: -8.744787216186523
    7. '		' → logprob: -9.119787216186523
    8. '	       ' → logprob: -10.119787216186523
    9. '	if' → logprob: -10.494787216186523
    10. '                       ' → logprob: -10.744787216186523

Token 803: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0746188536286354
    2. 'd' → logprob: -2.6996188163757324
    3. 'for' → logprob: -5.949618816375732
    4. 'while' → logprob: -6.574618816375732
    5. '           ' → logprob: -7.574618816375732
    6. ' if' → logprob: -9.57461929321289
    7. 'i' → logprob: -11.44961929321289
    8. '#' → logprob: -11.82461929321289
    9. '            
' → logprob: -12.07461929321289
    10. 'l' → logprob: -12.19961929321289

Token 804: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014173625037074089
    2. ' r' → logprob: -4.38917350769043
    3. 'd' → logprob: -8.13917350769043
    4. '1' → logprob: -8.38917350769043
    5. 'j' → logprob: -8.38917350769043
    6. '0' → logprob: -8.51417350769043
    7. 'i' → logprob: -8.51417350769043
    8. '(r' → logprob: -8.88917350769043
    9. 'z' → logprob: -9.63917350769043
    10. ' ' → logprob: -9.76417350769043

Token 805: ' n' (ID: 297)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6846297383308411
    2. ' >' → logprob: -0.8096297383308411
    3. ' <=' → logprob: -3.9346296787261963
    4. ' ==' → logprob: -4.809629917144775
    5. ' >=' → logprob: -4.934629917144775
    6. '<=' → logprob: -5.184629917144775
    7. '==' → logprob: -5.434629917144775
    8. '>=' → logprob: -5.684629917144775
    9. ' <' → logprob: -6.934629917144775
    10. '   ' → logprob: -7.684629917144775

Token 806: ''est' (ID: 6616)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9217106103897095
    2. ' <=' → logprob: -1.5467106103897095
    3. '>' → logprob: -1.7967106103897095
    4. '<' → logprob: -2.79671049118042
    5. ' <' → logprob: -2.92171049118042
    6. '=' → logprob: -3.04671049118042
    7. '>=' → logprob: -4.29671049118042
    8. 'r' → logprob: -4.54671049118042
    9. ' >' → logprob: -4.67171049118042
    10. 'e' → logprob: -5.29671049118042

Token 807: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5081168413162231
    2. ' pas' → logprob: -1.5081168413162231
    3. 'r' → logprob: -2.2581167221069336
    4. '>' → logprob: -3.5081167221069336
    5. '0' → logprob: -4.133116722106934
    6. 'ot' → logprob: -4.883116722106934
    7. '#' → logprob: -5.133116722106934
    8. '_pas' → logprob: -5.508116722106934
    9. 'not' → logprob: -6.008116722106934
    10. '...' → logprob: -6.633116722106934

Token 808: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007689089514315128
    2. '=' → logprob: -5.257688999176025
    3. 'r' → logprob: -6.757688999176025
    4. 'z' → logprob: -7.632688999176025
    5. '>' → logprob: -8.257689476013184
    6. '==' → logprob: -8.757689476013184
    7. ' ' → logprob: -8.882689476013184
    8. '1' → logprob: -9.007689476013184
    9. ' =' → logprob: -10.257689476013184
    10. 'd' → logprob: -11.007689476013184

Token 809: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8959975838661194
    2. '(r' → logprob: -1.6459975242614746
    3. 'r' → logprob: -1.7709975242614746
    4. '(' → logprob: -2.3959975242614746
    5. 'à' → logprob: -2.7709975242614746
    6. ' ' → logprob: -3.8959975242614746
    7. '0' → logprob: -4.395997524261475
    8. ' r' → logprob: -4.645997524261475
    9. ' (' → logprob: -5.270997524261475
    10. '1' → logprob: -5.770997524261475

Token 810: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05555608123540878
    2. 'z' → logprob: -2.930556058883667
    3. ' ' → logprob: -8.055556297302246
    4. 'r' → logprob: -8.305556297302246
    5. ' z' → logprob: -9.930556297302246
    6. 'f' → logprob: -11.180556297302246
    7. 'k' → logprob: -11.180556297302246
    8. 'm' → logprob: -11.680556297302246
    9. '1' → logprob: -12.055556297302246
    10. '   ' → logprob: -12.305556297302246

Token 811: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.051834799349308014
    2. 'and' → logprob: -3.42683482170105
    3. ':' → logprob: -4.301834583282471
    4. '           ' → logprob: -5.676834583282471
    5. ':
' → logprob: -7.801834583282471
    6. '               ' → logprob: -8.301835060119629
    7. '==' → logprob: -8.801835060119629
    8. ',' → logprob: -9.926835060119629
    9. ' or' → logprob: -10.301835060119629
    10. ' ==' → logprob: -10.676835060119629

Token 812: 'c' (ID: 66)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4675231873989105
    2. 'r' → logprob: -2.0925230979919434
    3. ')' → logprob: -2.4675230979919434
    4. '               ' → logprob: -3.2175230979919434
    5. ' and' → logprob: -3.3425230979919434
    6. ' r' → logprob: -3.5925230979919434
    7. '```' → logprob: -3.8425230979919434
    8. '):
' → logprob: -4.717523097991943
    9. '):' → logprob: -4.842523097991943
    10. 'if' → logprob: -5.342523097991943

Token 813: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.274260550737381
    2. '!=' → logprob: -2.5242605209350586
    3. '```' → logprob: -2.8992605209350586
    4. '#' → logprob: -4.024260520935059
    5. ')' → logprob: -4.274260520935059
    6. '):' → logprob: -4.274260520935059
    7. 'u' → logprob: -4.774260520935059
    8. ' !=' → logprob: -4.899260520935059
    9. ' and' → logprob: -4.899260520935059
    10. 'ont' → logprob: -5.399260520935059

Token 814: '-à' (ID: 56297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.066666841506958
    2. '!=' → logprob: -2.066666841506958
    3. '-à' → logprob: -2.316666841506958
    4. 'r' → logprob: -2.441666841506958
    5. '   ' → logprob: -2.441666841506958
    6. '!' → logprob: -3.066666841506958
    7. ')' → logprob: -3.816666841506958
    8. 'à' → logprob: -3.816666841506958
    9. ' !=' → logprob: -3.816666841506958
    10. '#' → logprob: -3.816666841506958

Token 815: '-dire' (ID: 76064)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8813303709030151
    2. 'pas' → logprob: -1.1313303709030151
    3. 'z' → logprob: -2.8813304901123047
    4. 'r' → logprob: -2.8813304901123047
    5. '#' → logprob: -3.1313304901123047
    6. '=' → logprob: -3.1313304901123047
    7. 'n' → logprob: -4.256330490112305
    8. '1' → logprob: -4.631330490112305
    9. 't' → logprob: -4.881330490112305
    10. ' pas' → logprob: -5.006330490112305

Token 816: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9751936197280884
    2. ' r' → logprob: -1.1001936197280884
    3. 'r' → logprob: -2.100193500518799
    4. ' not' → logprob: -3.100193500518799
    5. '               ' → logprob: -3.100193500518799
    6. '```' → logprob: -3.600193500518799
    7. ')' → logprob: -4.350193500518799
    8. ' ' → logprob: -4.975193500518799
    9. '                   ' → logprob: -5.600193500518799
    10. '            ' → logprob: -5.600193500518799

Token 817: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3132789433002472
    2. ' r' → logprob: -1.3132789134979248
    3. ' z' → logprob: -12.438279151916504
    4. ' not' → logprob: -12.563279151916504
    5. 'z' → logprob: -12.813279151916504
    6. ' ' → logprob: -12.813279151916504
    7. 'not' → logprob: -13.688279151916504
    8. '(r' → logprob: -13.813279151916504
    9. ' ' → logprob: -14.438279151916504
    10. 't' → logprob: -14.938279151916504

Token 818: ' sé' (ID: 7462)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006548278499394655
    2. ' r' → logprob: -5.3815484046936035
    3. 'not' → logprob: -7.6315484046936035
    4. ' not' → logprob: -7.6315484046936035
    5. 'j' → logprob: -8.756547927856445
    6. 'f' → logprob: -9.381547927856445
    7. '   ' → logprob: -9.381547927856445
    8. ' ' → logprob: -9.631547927856445
    9. '```' → logprob: -9.631547927856445
    10. ' bit' → logprob: -9.756547927856445

Token 819: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0021234957966953516
    2. 'q' → logprob: -6.7521233558654785
    3. 'r' → logprob: -8.127123832702637
    4. 'quences' → logprob: -8.502123832702637
    5. '#' → logprob: -9.127123832702637
    6. 'qu' → logprob: -9.377123832702637
    7. '```' → logprob: -9.502123832702637
    8. 'lection' → logprob: -10.752123832702637
    9. 't' → logprob: -10.877123832702637
    10. '`' → logprob: -10.877123832702637

Token 820: ' suffix' (ID: 43412)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6345510482788086
    2. '!=' → logprob: -0.7595510482788086
    3. 'r' → logprob: -7.259551048278809
    4. '<' → logprob: -8.134551048278809
    5. ' <' → logprob: -8.134551048278809
    6. '           ' → logprob: -8.634551048278809
    7. '   ' → logprob: -9.759551048278809
    8. 'n' → logprob: -9.884551048278809
    9. ')' → logprob: -9.884551048278809
    10. '<n' → logprob: -10.134551048278809

Token 821: 'e' (ID: 68)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.0501792430877686
    2. 'u' → logprob: -1.4251792430877686
    3. 'e' → logprob: -1.9251792430877686
    4. 'z' → logprob: -2.4251792430877686
    5. ']' → logprob: -2.4251792430877686
    6. '!=' → logprob: -4.175179481506348
    7. 'ue' → logprob: -5.050179481506348
    8. 'quence' → logprob: -5.300179481506348
    9. 'èque' → logprob: -5.550179481506348
    10. 'r' → logprob: -5.550179481506348

Token 822: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.751270592212677
    2. '!=' → logprob: -0.876270592212677
    3. ']' → logprob: -2.3762705326080322
    4. ']!=' → logprob: -4.376270771026611
    5. ')' → logprob: -5.626270771026611
    6. ')!=' → logprob: -7.501270771026611
    7. '<' → logprob: -7.751270771026611
    8. ' <' → logprob: -8.001270294189453
    9. '<n' → logprob: -8.501270294189453
    10. 'n' → logprob: -8.626270294189453

Token 823: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.4619213938713074
    2. '!=' → logprob: -1.7119214534759521
    3. 'e' → logprob: -3.586921453475952
    4. 'est' → logprob: -3.586921453475952
    5. ''' → logprob: -3.836921453475952
    6. '']' → logprob: -3.961921453475952
    7. '#' → logprob: -4.336921215057373
    8. 'u' → logprob: -4.461921215057373
    9. ']' → logprob: -4.586921215057373
    10. ' !=' → logprob: -4.711921215057373

Token 824: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2836022675037384
    2. ' pas' → logprob: -1.408602237701416
    3. 't' → logprob: -7.658602237701416
    4. '#' → logprob: -7.783602237701416
    5. 'r' → logprob: -7.783602237701416
    6. 'z' → logprob: -7.908602237701416
    7. '_pas' → logprob: -8.283602714538574
    8. '```' → logprob: -8.658602714538574
    9. 'not' → logprob: -8.908602714538574
    10. 'Pas' → logprob: -9.658602714538574

Token 825: ' ident' (ID: 3951)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0028589628636837006
    2. ' z' → logprob: -6.377859115600586
    3. 'r' → logprob: -7.002859115600586
    4. '0' → logprob: -9.002859115600586
    5. 'exact' → logprob: -11.002859115600586
    6. '       ' → logprob: -11.252859115600586
    7. '```' → logprob: -11.377859115600586
    8. '#' → logprob: -11.502859115600586
    9. '=z' → logprob: -11.877859115600586
    10. '==' → logprob: -12.002859115600586

Token 826: 'ique' (ID: 2222)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.870259165763855
    2. 'ique' → logprob: -1.120259165763855
    3. 't' → logprob: -2.2452592849731445
    4. 'ale' → logprob: -3.1202592849731445
    5. 'e' → logprob: -3.2452592849731445
    6. 'f' → logprob: -3.3702592849731445
    7. 'al' → logprob: -4.6202592849731445
    8. 'te' → logprob: -4.8702592849731445
    9. 'qu' → logprob: -6.2452592849731445
    10. 'cal' → logprob: -6.6202592849731445

Token 827: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6775715351104736
    2. '=' → logprob: -1.6775715351104736
    3. ':' → logprob: -2.1775715351104736
    4. '):' → logprob: -2.1775715351104736
    5. '),' → logprob: -2.3025715351104736
    6. ' or' → logprob: -2.6775715351104736
    7. '):
' → logprob: -2.8025715351104736
    8. ' à' → logprob: -3.3025715351104736
    9. ' =' → logprob: -3.4275715351104736
    10. ' to' → logprob: -3.6775715351104736

Token 828: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005080056842416525
    2. '               ' → logprob: -6.005080223083496
    3. ' if' → logprob: -6.130080223083496
    4. 'if' → logprob: -8.380080223083496
    5. ':' → logprob: -9.755080223083496
    6. '       ' → logprob: -10.130080223083496
    7. '   ' → logprob: -11.130080223083496
    8. '```' → logprob: -11.130080223083496
    9. '                   ' → logprob: -11.255080223083496
    10. ',' → logprob: -11.380080223083496

Token 829: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5932298302650452
    2. '           ' → logprob: -0.8432298302650452
    3. ' if' → logprob: -4.0932297706604
    4. '               ' → logprob: -8.343230247497559
    5. '       ' → logprob: -8.593230247497559
    6. '   ' → logprob: -10.843230247497559
    7. '```' → logprob: -12.343230247497559
    8. '          ' → logprob: -12.718230247497559
    9. '                   ' → logprob: -12.843230247497559
    10. '		' → logprob: -13.718230247497559

Token 830: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.11326447129249573
    2. 'r' → logprob: -2.238264560699463
    3. ' not' → logprob: -7.863264560699463
    4. 'not' → logprob: -9.863264083862305
    5. '           ' → logprob: -12.988264083862305
    6. '   ' → logprob: -14.363264083862305
    7. ' ' → logprob: -14.488264083862305
    8. ' ' → logprob: -14.613264083862305
    9. '(r' → logprob: -14.738264083862305
    10. '	r' → logprob: -14.863264083862305

Token 831: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16485975682735443
    2. '!=' → logprob: -1.9148597717285156
    3. '<' → logprob: -5.789859771728516
    4. ' <' → logprob: -6.539859771728516
    5. ')!=' → logprob: -10.914859771728516
    6. ')' → logprob: -11.164859771728516
    7. '<n' → logprob: -11.664859771728516
    8. '[' → logprob: -11.664859771728516
    9. ' ' → logprob: -11.789859771728516
    10. '=' → logprob: -11.914859771728516

Token 832: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.023247340694069862
    2. ' z' → logprob: -3.773247241973877
    3. '	z' → logprob: -13.898247718811035
    4. '           ' → logprob: -14.773247718811035
    5. '       ' → logprob: -15.648247718811035
    6. '   ' → logprob: -16.39824676513672
    7. ' ' → logprob: -17.02324676513672
    8. '0' → logprob: -17.14824676513672
    9. '                   ' → logprob: -17.52324676513672
    10. '
' → logprob: -17.64824676513672

Token 833: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9110801219940186
    2. ':' → logprob: -1.2860801219940186
    3. ' and' → logprob: -1.2860801219940186
    4. '               ' → logprob: -3.6610801219940186
    5. '           ' → logprob: -4.286080360412598
    6. 'and' → logprob: -5.286080360412598
    7. '                   ' → logprob: -8.911080360412598
    8. ':
' → logprob: -8.911080360412598
    9. '       ' → logprob: -9.411080360412598
    10. '                       ' → logprob: -9.661080360412598

Token 834: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0467379055917263
    2. 'd' → logprob: -3.2967379093170166
    3. ' d' → logprob: -4.7967376708984375
    4. '                   ' → logprob: -8.921737670898438
    5. '                       ' → logprob: -9.671737670898438
    6. '   ' → logprob: -9.921737670898438
    7. 'continue' → logprob: -10.296737670898438
    8. '                               ' → logprob: -10.421737670898438
    9. ' and' → logprob: -11.421737670898438
    10. '           ' → logprob: -11.421737670898438

Token 835: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01837550662457943
    2. 'pos' → logprob: -5.393375396728516
    3. 'idx' → logprob: -5.768375396728516
    4. 'break' → logprob: -6.143375396728516
    5. 'p' → logprob: -6.768375396728516
    6. 'continue' → logprob: -6.768375396728516
    7. 'l' → logprob: -6.768375396728516
    8. 'x' → logprob: -7.268375396728516
    9. 'bit' → logprob: -7.518375396728516
    10. '           ' → logprob: -7.518375396728516

Token 836: ' Prop' (ID: 12978)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04782886803150177
    2. 'pos' → logprob: -4.422828674316406
    3. 'p' → logprob: -5.047828674316406
    4. 'idx' → logprob: -5.047828674316406
    5. 'continue' → logprob: -5.797828674316406
    6. 'val' → logprob: -5.797828674316406
    7. 'l' → logprob: -5.922828674316406
    8. 'x' → logprob: -6.172828674316406
    9. 'break' → logprob: -6.547828674316406
    10. 'c' → logprob: -6.922828674316406

Token 837: 'agation' (ID: 53023)
  Prédit: 'ose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ose' → logprob: -0.1873345673084259
    2. 'ag' → logprob: -3.0623345375061035
    3. 'agate' → logprob: -3.5623345375061035
    4. 'ager' → logprob: -3.9373345375061035
    5. 'os' → logprob: -4.0623345375061035
    6. 'oser' → logprob: -4.1873345375061035
    7. 'age' → logprob: -4.9373345375061035
    8. '           ' → logprob: -5.1873345375061035
    9. '       ' → logprob: -5.6873345375061035
    10. '               ' → logprob: -5.8123345375061035

Token 838: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.24480681121349335
    2. '                   ' → logprob: -2.1198067665100098
    3. '               ' → logprob: -3.4948067665100098
    4. '(d' → logprob: -3.4948067665100098
    5. ' d' → logprob: -3.6198067665100098
    6. ' =' → logprob: -6.11980676651001
    7. '[d' → logprob: -6.24480676651001
    8. '                       ' → logprob: -6.49480676651001
    9. '           ' → logprob: -6.86980676651001
    10. '=' → logprob: -7.49480676651001

Token 839: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0013266648165881634
    2. ' d' → logprob: -6.876326560974121
    3. 'j' → logprob: -9.501326560974121
    4. '1' → logprob: -9.876326560974121
    5. 'r' → logprob: -9.876326560974121
    6. '0' → logprob: -10.251326560974121
    7. 'k' → logprob: -11.376326560974121
    8. '(d' → logprob: -11.376326560974121
    9. 'f' → logprob: -11.876326560974121
    10. 'val' → logprob: -12.001326560974121

Token 840: ' dens' (ID: 42124)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04702090099453926
    2. 'val' → logprob: -3.79702091217041
    3. 'break' → logprob: -4.17202091217041
    4. 'value' → logprob: -5.17202091217041
    5. 'continue' → logprob: -7.54702091217041
    6. ' d' → logprob: -8.29702091217041
    7. 'k' → logprob: -8.29702091217041
    8. 'density' → logprob: -8.54702091217041
    9. 'j' → logprob: -8.79702091217041
    10. 'dens' → logprob: -8.79702091217041

Token 841: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.02994486317038536
    2. 'ity' → logprob: -3.779944896697998
    3. 's' → logprob: -5.279944896697998
    4. 'i' → logprob: -7.279944896697998
    5. 'ités' → logprob: -8.27994441986084
    6. 'd' → logprob: -8.52994441986084
    7. 'it' → logprob: -8.90494441986084
    8. '   ' → logprob: -9.02994441986084
    9. 'itié' → logprob: -10.02994441986084
    10. '[i' → logprob: -10.40494441986084

Token 842: ' vers' (ID: 3640)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2267100214958191
    2. '                   ' → logprob: -2.351710081100464
    3. '               ' → logprob: -3.226710081100464
    4. ' =' → logprob: -3.601710081100464
    5. '[i' → logprob: -4.101709842681885
    6. ' d' → logprob: -4.351709842681885
    7. '=' → logprob: -5.851709842681885
    8. '[d' → logprob: -6.101709842681885
    9. '                       ' → logprob: -6.476709842681885
    10. '[' → logprob: -6.726709842681885

Token 843: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12243760377168655
    2. 'i' → logprob: -2.2474377155303955
    3. 'k' → logprob: -5.247437477111816
    4. 'j' → logprob: -5.747437477111816
    5. ' d' → logprob: -7.122437477111816
    6. '           ' → logprob: -9.247437477111816
    7. ' i' → logprob: -9.997437477111816
    8. '[i' → logprob: -10.372437477111816
    9. '               ' → logprob: -10.872437477111816
    10. '   ' → logprob: -10.997437477111816

Token 844: ' case' (ID: 1890)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.12096138298511505
    2. 'i' → logprob: -2.6209614276885986
    3. 'k' → logprob: -3.7459614276885986
    4. 'j' → logprob: -4.6209611892700195
    5. 'f' → logprob: -6.6209611892700195
    6. '[i' → logprob: -6.7459611892700195
    7. 'for' → logprob: -6.9959611892700195
    8. ' d' → logprob: -7.2459611892700195
    9. 'r' → logprob: -7.8709611892700195
    10. '(i' → logprob: -8.12096118927002

Token 845: ' correspond' (ID: 11095)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25684022903442383
    2. '[i' → logprob: -1.7568402290344238
    3. 'i' → logprob: -3.131840229034424
    4. ' d' → logprob: -5.256840229034424
    5. '[' → logprob: -6.756840229034424
    6. '[j' → logprob: -7.006840229034424
    7. ' i' → logprob: -7.256840229034424
    8. '           ' → logprob: -7.631840229034424
    9. '               ' → logprob: -8.256839752197266
    10. ' [' → logprob: -8.381839752197266

Token 846: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.2312852442264557
    2. 'ant' → logprob: -1.9812852144241333
    3. 'd' → logprob: -3.856285333633423
    4. 'ente' → logprob: -3.981285333633423
    5. '               ' → logprob: -4.356285095214844
    6. '           ' → logprob: -4.856285095214844
    7. 'ent' → logprob: -5.106285095214844
    8. '   ' → logprob: -7.481285095214844
    9. '       ' → logprob: -7.481285095214844
    10. '                   ' → logprob: -8.356285095214844

Token 847: ' dans' (ID: 2671)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08709713816642761
    2. '[d' → logprob: -3.33709716796875
    3. '[' → logprob: -4.33709716796875
    4. '][' → logprob: -5.08709716796875
    5. ' d' → logprob: -5.33709716796875
    6. ' =' → logprob: -5.46209716796875
    7. '[j' → logprob: -5.58709716796875
    8. '=' → logprob: -5.71209716796875
    9. '                   ' → logprob: -5.83709716796875
    10. '[i' → logprob: -5.83709716796875

Token 848: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004953675088472664
    2. ' d' → logprob: -7.625495433807373
    3. '   ' → logprob: -13.000494956970215
    4. '           ' → logprob: -13.250494956970215
    5. '```' → logprob: -13.500494956970215
    6. 'i' → logprob: -14.250494956970215
    7. '       ' → logprob: -14.625494956970215
    8. '
' → logprob: -15.625494956970215
    9. '	d' → logprob: -15.750494956970215
    10. '               ' → logprob: -16.25049591064453

Token 849: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003564785234630108
    2. '[k' → logprob: -5.753564834594727
    3. '[d' → logprob: -8.753564834594727
    4. '               ' → logprob: -9.003564834594727
    5. '                   ' → logprob: -10.253564834594727
    6. 'd' → logprob: -10.878564834594727
    7. '[j' → logprob: -11.003564834594727
    8. '           ' → logprob: -11.503564834594727
    9. '```' → logprob: -12.003564834594727
    10. '[' → logprob: -12.253564834594727

Token 850: ' remont' (ID: 91518)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.452125608921051
    2. 'Q' → logprob: -1.9521255493164062
    3. 'R' → logprob: -1.9521255493164062
    4. 'i' → logprob: -4.202125549316406
    5. 'range' → logprob: -4.202125549316406
    6. 'r' → logprob: -4.827125549316406
    7. 'aj' → logprob: -5.577125549316406
    8. '[i' → logprob: -5.577125549316406
    9. 'q' → logprob: -5.827125549316406
    10. 'j' → logprob: -5.952125549316406

Token 851: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7107983231544495
    2. 'ée' → logprob: -1.9607982635498047
    3. '   ' → logprob: -2.0857982635498047
    4. 'ont' → logprob: -2.8357982635498047
    5. 'for' → logprob: -3.3357982635498047
    6. '       ' → logprob: -3.3357982635498047
    7. 'nant' → logprob: -3.8357982635498047
    8. 'e' → logprob: -4.210798263549805
    9. '[i' → logprob: -4.335798263549805
    10. 'è' → logprob: -4.585798263549805

Token 852: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4014081656932831
    2. '[i' → logprob: -1.1514081954956055
    3. '[d' → logprob: -5.2764081954956055
    4. '[j' → logprob: -5.9014081954956055
    5. '                   ' → logprob: -5.9014081954956055
    6. '               ' → logprob: -6.0264081954956055
    7. '           ' → logprob: -7.7764081954956055
    8. '[' → logprob: -7.9014081954956055
    9. '[k' → logprob: -8.401408195495605
    10. '(i' → logprob: -8.776408195495605

Token 853: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3669019639492035
    2. 'd' → logprob: -2.4919018745422363
    3. '1' → logprob: -2.6169018745422363
    4. 'k' → logprob: -2.7419018745422363
    5. 'i' → logprob: -2.9919018745422363
    6. 'z' → logprob: -3.9919018745422363
    7. 'j' → logprob: -4.241901874542236
    8. 'f' → logprob: -6.116901874542236
    9. '(' → logprob: -8.741902351379395
    10. ' r' → logprob: -8.866902351379395

Token 854: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3626691102981567
    2. '-' → logprob: -1.4876691102981567
    3. '[j' → logprob: -1.8626691102981567
    4. '][' → logprob: -2.612668991088867
    5. '           ' → logprob: -3.362668991088867
    6. ' -' → logprob: -3.612668991088867
    7. '+' → logprob: -3.737668991088867
    8. ']' → logprob: -3.862668991088867
    9. '[z' → logprob: -3.862668991088867
    10. '>>' → logprob: -3.987668991088867

Token 855: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07354658097028732
    2. 'k' → logprob: -2.6985466480255127
    3. 'r' → logprob: -5.948546409606934
    4. ' i' → logprob: -7.573546409606934
    5. 'd' → logprob: -8.448546409606934
    6. 'j' → logprob: -9.323546409606934
    7. 'z' → logprob: -9.573546409606934
    8. ' k' → logprob: -10.198546409606934
    9. '   ' → logprob: -11.198546409606934
    10. 'f' → logprob: -11.323546409606934

Token 856: '-r' (ID: 6335)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17798545956611633
    2. '-r' → logprob: -2.677985429763794
    3. '[r' → logprob: -2.927985429763794
    4. ' -' → logprob: -4.677985668182373
    5. '][' → logprob: -4.802985668182373
    6. 'r' → logprob: -5.052985668182373
    7. '+' → logprob: -5.677985668182373
    8. ']' → logprob: -5.677985668182373
    9. '+r' → logprob: -5.927985668182373
    10. '               ' → logprob: -6.552985668182373

Token 857: ',
' (ID: 412)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36452457308769226
    2. '[k' → logprob: -2.4895246028900146
    3. '[j' → logprob: -3.3645246028900146
    4. '               ' → logprob: -3.6145246028900146
    5. '                   ' → logprob: -3.8645246028900146
    6. 'd' → logprob: -3.8645246028900146
    7. '[' → logprob: -4.1145243644714355
    8. ':
' → logprob: -4.1145243644714355
    9. ' -' → logprob: -4.1145243644714355
    10. '[i' → logprob: -4.2395243644714355

Token 858: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7723267078399658
    2. '               ' → logprob: -1.0223267078399658
    3. 'd' → logprob: -2.397326707839966
    4. ' d' → logprob: -3.147326707839966
    5. '                       ' → logprob: -3.522326707839966
    6. '                               ' → logprob: -5.647326469421387
    7. '```' → logprob: -5.772326469421387
    8. '                           ' → logprob: -6.022326469421387
    9. '#' → logprob: -6.647326469421387
    10. 'for' → logprob: -6.897326469421387

Token 859: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.15938501060009003
    2. 'for' → logprob: -2.6593849658966064
    3. ' d' → logprob: -3.1593849658966064
    4. '                   ' → logprob: -4.0343852043151855
    5. '               ' → logprob: -4.9093852043151855
    6. ' for' → logprob: -5.0343852043151855
    7. '                       ' → logprob: -6.4093852043151855
    8. 'k' → logprob: -7.1593852043151855
    9. '                           ' → logprob: -8.909384727478027
    10. '           ' → logprob: -9.034384727478027

Token 860: ' en' (ID: 469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25865438580513
    2. 'for' → logprob: -2.0086543560028076
    3. '                   ' → logprob: -2.7586543560028076
    4. '               ' → logprob: -3.8836543560028076
    5. '                       ' → logprob: -5.383654594421387
    6. ' d' → logprob: -6.008654594421387
    7. ' for' → logprob: -6.758654594421387
    8. '           ' → logprob: -8.133654594421387
    9. '                           ' → logprob: -8.133654594421387
    10. 'while' → logprob: -8.383654594421387

Token 861: ' conco' (ID: 129238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6421139240264893
    2. 'break' → logprob: -1.7671139240264893
    3. '                   ' → logprob: -2.5171139240264893
    4. ' for' → logprob: -2.8921139240264893
    5. '                       ' → logprob: -3.1421139240264893
    6. '               ' → logprob: -3.2671139240264893
    7. '                           ' → logprob: -3.8921139240264893
    8. ' break' → logprob: -4.14211368560791
    9. '                               ' → logprob: -4.39211368560791
    10. 'd' → logprob: -4.76711368560791

Token 862: 'ct' (ID: 308)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mm' → logprob: -1.056906819343567
    2. 'nt' → logprob: -1.431906819343567
    3. 'pt' → logprob: -2.1819067001342773
    4. 'm' → logprob: -2.5569067001342773
    5. 'mp' → logprob: -2.6819067001342773
    6. 'rt' → logprob: -3.9319067001342773
    7. 'unt' → logprob: -4.056906700134277
    8. 'mt' → logprob: -4.056906700134277
    9. 'mant' → logprob: -4.681906700134277
    10. 'in' → logprob: -4.806906700134277

Token 863: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.14192147552967072
    2. 'uant' → logprob: -2.1419215202331543
    3. 'ent' → logprob: -5.891921520233154
    4. 'enant' → logprob: -6.141921520233154
    5. 'e' → logprob: -6.641921520233154
    6. 'rant' → logprob: -6.641921520233154
    7. 'urant' → logprob: -6.766921520233154
    8. 'u' → logprob: -7.016921520233154
    9. 'an' → logprob: -7.391921520233154
    10. 'est' → logprob: -7.516921520233154

Token 864: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8248229026794434
    2. 'd' → logprob: -1.5748229026794434
    3. 'range' → logprob: -2.3248229026794434
    4. ' for' → logprob: -2.4498229026794434
    5. ' d' → logprob: -2.9498229026794434
    6. 'k' → logprob: -3.4498229026794434
    7. ' range' → logprob: -3.6998229026794434
    8. '   ' → logprob: -4.324822902679443
    9. ' k' → logprob: -4.824822902679443
    10. '           ' → logprob: -4.949822902679443

Token 865: ' nouveau' (ID: 23184)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22979919612407684
    2. ' for' → logprob: -2.479799270629883
    3. 'range' → logprob: -3.104799270629883
    4. 'k' → logprob: -4.354799270629883
    5. 'mask' → logprob: -4.479799270629883
    6. 'd' → logprob: -4.604799270629883
    7. ' range' → logprob: -4.854799270629883
    8. 'r' → logprob: -5.604799270629883
    9. 'j' → logprob: -5.854799270629883
    10. 'shift' → logprob: -6.229799270629883

Token 866: ' pattern' (ID: 8302)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8985397219657898
    2. 'j' → logprob: -2.2735397815704346
    3. 'index' → logprob: -2.2735397815704346
    4. 'pattern' → logprob: -2.2735397815704346
    5. 'k' → logprob: -2.5235397815704346
    6. ' for' → logprob: -3.1485397815704346
    7. ' index' → logprob: -3.6485397815704346
    8. ' j' → logprob: -4.1485395431518555
    9. ' pattern' → logprob: -4.5235395431518555
    10. 'd' → logprob: -4.6485395431518555

Token 867: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2654813528060913
    2. '[j' → logprob: -1.6404813528060913
    3. '           ' → logprob: -1.8904813528060913
    4. '               ' → logprob: -2.765481472015381
    5. 'for' → logprob: -3.140481472015381
    6. '                   ' → logprob: -3.265481472015381
    7. 'd' → logprob: -3.390481472015381
    8. '[' → logprob: -3.515481472015381
    9. 's' → logprob: -3.515481472015381
    10. ' for' → logprob: -3.765481472015381

Token 868: ' conserve' (ID: 72274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5836179852485657
    2. '|' → logprob: -1.708617925643921
    3. ' =' → logprob: -2.208617925643921
    4. ' |=' → logprob: -3.208617925643921
    5. '>>' → logprob: -3.958617925643921
    6. ' ^=' → logprob: -4.5836181640625
    7. ' j' → logprob: -4.7086181640625
    8. 'd' → logprob: -4.7086181640625
    9. '[j' → logprob: -4.9586181640625
    10. 'j' → logprob: -5.2086181640625

Token 869: ' les' (ID: 1341)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1499519348144531
    2. '(j' → logprob: -1.7749519348144531
    3. 'k' → logprob: -2.024951934814453
    4. '((' → logprob: -2.274951934814453
    5. 'd' → logprob: -2.399951934814453
    6. 'j' → logprob: -2.649951934814453
    7. ' (' → logprob: -3.024951934814453
    8. 'r' → logprob: -4.399951934814453
    9. '(' → logprob: -4.774951934814453
    10. '1' → logprob: -5.024951934814453

Token 870: ' (' (ID: 350)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.066056251525879
    2. 'j' → logprob: -1.816056251525879
    3. '_' → logprob: -2.191056251525879
    4. 'r' → logprob: -2.316056251525879
    5. '1' → logprob: -2.941056251525879
    6. 'i' → logprob: -3.191056251525879
    7. '(k' → logprob: -3.566056251525879
    8. ' (' → logprob: -4.066056251525879
    9. '_j' → logprob: -4.316056251525879
    10. '```' → logprob: -4.441056251525879

Token 871: 'z' (ID: 89)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8839291930198669
    2. 'r' → logprob: -0.8839291930198669
    3. 'z' → logprob: -2.3839292526245117
    4. 'j' → logprob: -3.5089292526245117
    5. 'i' → logprob: -3.5089292526245117
    6. '1' → logprob: -5.508929252624512
    7. 't' → logprob: -5.633929252624512
    8. '(k' → logprob: -5.758929252624512
    9. '(r' → logprob: -6.008929252624512
    10. '(i' → logprob: -7.008929252624512

Token 872: '-r' (ID: 6335)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7848374247550964
    2. '-r' → logprob: -1.1598374843597412
    3. '-' → logprob: -1.5348374843597412
    4. ')' → logprob: -5.284837245941162
    5. '-k' → logprob: -5.659837245941162
    6. '-z' → logprob: -6.159837245941162
    7. '   ' → logprob: -6.534837245941162
    8. '-i' → logprob: -7.534837245941162
    9. 'r' → logprob: -7.784837245941162
    10. ' ' → logprob: -8.15983772277832

Token 873: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035992369521409273
    2. ')+' → logprob: -6.378599166870117
    3. ')<<' → logprob: -7.378599166870117
    4. ' )' → logprob: -8.003599166870117
    5. '0' → logprob: -8.503599166870117
    6. ')-' → logprob: -8.878599166870117
    7. '<<' → logprob: -8.878599166870117
    8. '1' → logprob: -9.253599166870117
    9. '+' → logprob: -9.878599166870117
    10. '-' → logprob: -9.878599166870117

Token 874: ' bits' (ID: 18189)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7415739297866821
    2. ' bits' → logprob: -1.6165739297866821
    3. '<<' → logprob: -2.1165738105773926
    4. 'bits' → logprob: -2.8665738105773926
    5. ' +' → logprob: -2.9915738105773926
    6. '_bits' → logprob: -3.8665738105773926
    7. '```' → logprob: -3.9915738105773926
    8. ' <<' → logprob: -4.116573810577393
    9. ')' → logprob: -4.741573810577393
    10. '0' → logprob: -5.616573810577393

Token 875: ' de' (ID: 334)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.4311405420303345
    2. '[j' → logprob: -1.9311405420303345
    3. '           ' → logprob: -2.181140422821045
    4. ' de' → logprob: -2.431140422821045
    5. '               ' → logprob: -2.556140422821045
    6. ' <<' → logprob: -3.056140422821045
    7. '(j' → logprob: -3.431140422821045
    8. '       ' → logprob: -3.431140422821045
    9. '```' → logprob: -3.556140422821045
    10. ')' → logprob: -3.681140422821045

Token 876: ' pré' (ID: 9424)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.1847124099731445
    2. 'j' → logprob: -1.4347124099731445
    3. '(m' → logprob: -1.8097124099731445
    4. 'r' → logprob: -3.3097124099731445
    5. 'm' → logprob: -3.3097124099731445
    6. 'dro' → logprob: -3.4347124099731445
    7. 'z' → logprob: -3.9347124099731445
    8. '(z' → logprob: -4.0597124099731445
    9. '1' → logprob: -4.1847124099731445
    10. '((' → logprob: -4.1847124099731445

Token 877: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.00027921271976083517
    2. 'f' → logprob: -8.625279426574707
    3. 'z' → logprob: -10.875279426574707
    4. '_fix' → logprob: -11.250279426574707
    5. ' fix' → logprob: -11.500279426574707
    6. '```' → logprob: -11.875279426574707
    7. ' fixe' → logprob: -12.125279426574707
    8. 'v' → logprob: -12.375279426574707
    9. 'c' → logprob: -12.375279426574707
    10. 'd' → logprob: -12.500279426574707

Token 878: 'e' (ID: 68)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.6769012212753296
    2. 'ixe' → logprob: -0.8019012212753296
    3. 'fix' → logprob: -3.801901340484619
    4. 'e' → logprob: -5.426901340484619
    5. 'x' → logprob: -5.551901340484619
    6. 'i' → logprob: -5.676901340484619
    7. '   ' → logprob: -6.926901340484619
    8. ' fixe' → logprob: -6.926901340484619
    9. ' fix' → logprob: -7.051901340484619
    10. '+' → logprob: -7.301901340484619

Token 879: ' et' (ID: 859)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6302139163017273
    2. '           ' → logprob: -2.380213975906372
    3. '                   ' → logprob: -2.380213975906372
    4. '```' → logprob: -2.755213975906372
    5. '[j' → logprob: -2.755213975906372
    6. '<<' → logprob: -3.005213975906372
    7. ' j' → logprob: -4.505213737487793
    8. ' <<' → logprob: -4.505213737487793
    9. 'j' → logprob: -4.630213737487793
    10. '|' → logprob: -4.630213737487793

Token 880: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07649688422679901
    2. ' r' → logprob: -3.9514968395233154
    3. '((' → logprob: -4.8264970779418945
    4. ' les' → logprob: -5.0764970779418945
    5. 'les' → logprob: -5.2014970779418945
    6. '(r' → logprob: -5.2014970779418945
    7. ' (' → logprob: -5.3264970779418945
    8. 'l' → logprob: -5.7014970779418945
    9. '|' → logprob: -5.7014970779418945
    10. '(' → logprob: -5.9514970779418945

Token 881: ' suffix' (ID: 43412)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019448524340987206
    2. '((' → logprob: -5.269448757171631
    3. '(r' → logprob: -5.644448757171631
    4. ' r' → logprob: -5.644448757171631
    5. ' (' → logprob: -5.769448757171631
    6. '(' → logprob: -6.519448757171631
    7. '1' → logprob: -8.019448280334473
    8. '|' → logprob: -8.144448280334473
    9. ' ((' → logprob: -8.394448280334473
    10. '_r' → logprob: -8.394448280334473

Token 882: 'e' (ID: 68)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.3258783221244812
    2. 'ix' → logprob: -1.950878381729126
    3. 'ixe' → logprob: -2.075878381729126
    4. 'x' → logprob: -5.450878143310547
    5. 'f' → logprob: -5.700878143310547
    6. '```' → logprob: -7.075878143310547
    7. ' fixe' → logprob: -7.325878143310547
    8. 'j' → logprob: -8.700878143310547
    9. '_fix' → logprob: -8.825878143310547
    10. 'i' → logprob: -9.200878143310547

Token 883: ' r' (ID: 428)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.8109347820281982
    2. '(j' → logprob: -1.9359347820281982
    3. 'j' → logprob: -2.0609347820281982
    4. ' (' → logprob: -2.0609347820281982
    5. '<<' → logprob: -2.5609347820281982
    6. '|' → logprob: -3.1859347820281982
    7. ' j' → logprob: -3.3109347820281982
    8. ' &' → logprob: -3.4359347820281982
    9. ' >>' → logprob: -3.9359347820281982
    10. '(' → logprob: -3.9359347820281982

Token 884: ' bits' (ID: 18189)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.7161909341812134
    2. ']' → logprob: -1.8411909341812134
    3. '+' → logprob: -1.9661909341812134
    4. ')' → logprob: -2.591190814971924
    5. '>>' → logprob: -3.091190814971924
    6. ' +' → logprob: -3.341190814971924
    7. ' ^' → logprob: -3.341190814971924
    8. '           ' → logprob: -3.466190814971924
    9. '][' → logprob: -3.591190814971924
    10. '|' → logprob: -3.591190814971924

Token 885: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9712547063827515
    2. '[j' → logprob: -1.4712547063827515
    3. '                   ' → logprob: -1.9712547063827515
    4. '           ' → logprob: -2.346254825592041
    5. '[' → logprob: -3.721254825592041
    6. '```' → logprob: -3.721254825592041
    7. ' =' → logprob: -3.846254825592041
    8. '                       ' → logprob: -4.096254825592041
    9. 's' → logprob: -4.846254825592041
    10. '=' → logprob: -5.096254825592041

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5311017036437988
    2. ' for' → logprob: -1.2811017036437988
    3. 'for' → logprob: -2.156101703643799
    4. '                   ' → logprob: -4.531101703643799
    5. '```' → logprob: -5.531101703643799
    6. '                       ' → logprob: -7.156101703643799
    7. ' d' → logprob: -7.531101703643799
    8. ' if' → logprob: -8.15610122680664
    9. '``' → logprob: -8.28110122680664
    10. '                           ' → logprob: -8.78110122680664

Token 887: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020187729969620705
    2. 'd' (adapté à ' d') → logprob: -4.145187854766846
    3. '                   ' → logprob: -6.395187854766846
    4. ' for' → logprob: -6.645187854766846
    5. '               ' → logprob: -7.395187854766846
    6. 'start' → logprob: -9.020187377929688
    7. '```' → logprob: -9.145187377929688
    8. 'x' → logprob: -10.020187377929688
    9. '                       ' → logprob: -10.395187377929688
    10. 'p' → logprob: -10.770187377929688

Token 888: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.014277390204370022
    2. '[i' → logprob: -4.764277458190918
    3. 'k' → logprob: -5.264277458190918
    4. ' [' → logprob: -8.889277458190918
    5. '   ' → logprob: -9.389277458190918
    6. '[' → logprob: -9.514277458190918
    7. 'i' → logprob: -10.014277458190918
    8. '           ' → logprob: -10.514277458190918
    9. '[z' → logprob: -11.264277458190918
    10. ' k' → logprob: -11.389277458190918

Token 889: ' -' (ID: 533)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006681174854747951
    2. ']' → logprob: -8.0006685256958
    3. '-' → logprob: -9.5006685256958
    4. '[j' → logprob: -9.6256685256958
    5. ' ][' → logprob: -9.7506685256958
    6. ' -' → logprob: -10.0006685256958
    7. '   ' → logprob: -10.3756685256958
    8. ' ' → logprob: -11.2506685256958
    9. '][-' → logprob: -12.1256685256958
    10. '][:' → logprob: -12.3756685256958

Token 890: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.166338137816638e-05
    2. ' r' → logprob: -10.625031471252441
    3. '1' → logprob: -12.125031471252441
    4. '_r' → logprob: -13.625031471252441
    5. ' ' → logprob: -16.375032424926758
    6. '   ' → logprob: -16.375032424926758
    7. 'z' → logprob: -16.500032424926758
    8. '```' → logprob: -16.875032424926758
    9. '][' → logprob: -17.125032424926758
    10. '	r' → logprob: -17.250032424926758

Token 891: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.098748053773306e-05
    2. ' ][' → logprob: -10.37506103515625
    3. ']' → logprob: -11.12506103515625
    4. '[(' → logprob: -12.25006103515625
    5. '[j' → logprob: -12.37506103515625
    6. '   ' → logprob: -13.62506103515625
    7. ']][' → logprob: -14.87506103515625
    8. '][_' → logprob: -15.00006103515625
    9. '((' → logprob: -15.18756103515625
    10. '][]' → logprob: -15.25006103515625

Token 892: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3967651426792145
    2. '(j' → logprob: -1.146765112876892
    3. '(((' → logprob: -4.771765232086182
    4. ' (' → logprob: -7.771765232086182
    5. ' ((' → logprob: -7.771765232086182
    6. 'j' → logprob: -8.271764755249023
    7. '(' → logprob: -8.646764755249023
    8. '(k' → logprob: -10.271764755249023
    9. '((((' → logprob: -10.521764755249023
    10. ' ' → logprob: -11.521764755249023

Token 893: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004259446170181036
    2. '(j' → logprob: -5.5042595863342285
    3. '((' → logprob: -9.12925910949707
    4. ' j' → logprob: -10.12925910949707
    5. ' (' → logprob: -10.75425910949707
    6. '   ' → logprob: -12.75425910949707
    7. '[j' → logprob: -13.12925910949707
    8. '(((' → logprob: -13.50425910949707
    9. '(' → logprob: -14.12925910949707
    10. ' ((' → logprob: -14.50425910949707

Token 894: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.48658281564712524
    2. ' >>' → logprob: -0.9865828156471252
    3. ' &' → logprob: -4.8615827560424805
    4. '&' → logprob: -5.4865827560424805
    5. '&m' → logprob: -7.6115827560424805
    6. '>>(' → logprob: -10.86158275604248
    7. '&r' → logprob: -11.98658275604248
    8. '<<' → logprob: -12.48658275604248
    9. '>>&' → logprob: -12.86158275604248
    10. '&gt' → logprob: -12.86158275604248

Token 895: ' z' (ID: 579)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.5309901237487793
    2. '(r' → logprob: -0.9059901237487793
    3. 'r' → logprob: -5.280990123748779
    4. ' (' → logprob: -6.780990123748779
    5. '(m' → logprob: -7.155990123748779
    6. '(' → logprob: -7.780990123748779
    7. 'z' → logprob: -8.155990600585938
    8. '(s' → logprob: -11.405990600585938
    9. '   ' → logprob: -11.530990600585938
    10. ' r' → logprob: -11.655990600585938

Token 896: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03898242861032486
    2. 'r' → logprob: -3.288982391357422
    3. '(r' → logprob: -8.038982391357422
    4. ')*' → logprob: -8.413982391357422
    5. ')<<' → logprob: -8.663982391357422
    6. ' )' → logprob: -9.663982391357422
    7. ')+' → logprob: -10.163982391357422
    8. ')(' → logprob: -10.288982391357422
    9. 'z' → logprob: -10.538982391357422
    10. ' r' → logprob: -11.413982391357422

Token 897: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.006538450717926025
    2. ' <<' → logprob: -5.131538391113281
    3. ')<<' → logprob: -7.881538391113281
    4. ')' → logprob: -8.881538391113281
    5. '<<(' → logprob: -9.381538391113281
    6. '()<<' → logprob: -12.756538391113281
    7. '   ' → logprob: -13.381538391113281
    8. ']<<' → logprob: -13.506538391113281
    9. ' ' → logprob: -14.381538391113281
    10. '<<<' → logprob: -14.881538391113281

Token 898: ' (' (ID: 350)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.3442627489566803
    2. 'r' → logprob: -1.969262719154358
    3. '(r' → logprob: -2.0942628383636475
    4. 'z' → logprob: -3.7192628383636475
    5. ' (' → logprob: -5.719262599945068
    6. '(' → logprob: -7.844262599945068
    7. ' r' → logprob: -8.594263076782227
    8. '(m' → logprob: -9.344263076782227
    9. 'm' → logprob: -9.844263076782227
    10. ' z' → logprob: -9.969263076782227

Token 899: 'z' (ID: 89)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.016379786655306816
    2. 'z' → logprob: -4.1413798332214355
    3. ' (' → logprob: -8.766379356384277
    4. '(r' → logprob: -9.141379356384277
    5. 'r' → logprob: -9.891379356384277
    6. '(' → logprob: -11.141379356384277
    7. ' z' → logprob: -11.641379356384277
    8. '[z' → logprob: -12.891379356384277
    9. '           ' → logprob: -13.641379356384277
    10. 'zr' → logprob: -13.766379356384277

Token 900: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04033372551202774
    2. 'r' → logprob: -3.6653337478637695
    3. 'z' → logprob: -4.5403337478637695
    4. 'm' → logprob: -7.0403337478637695
    5. ')m' → logprob: -7.1653337478637695
    6. ')-' → logprob: -7.4153337478637695
    7. ')+' → logprob: -8.04033374786377
    8. ' )' → logprob: -9.16533374786377
    9. '))' → logprob: -9.41533374786377
    10. ')+(' → logprob: -9.79033374786377

Token 901: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00015705463010817766
    2. '(r' → logprob: -8.875157356262207
    3. ' r' → logprob: -11.125157356262207
    4. '(' → logprob: -13.375157356262207
    5. ' (' → logprob: -14.750157356262207
    6. '_r' → logprob: -15.250157356262207
    7. '   ' → logprob: -16.37515640258789
    8. '       ' → logprob: -17.12515640258789
    9. '           ' → logprob: -17.50015640258789
    10. '
' → logprob: -17.50015640258789

Token 902: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006012882222421467
    2. ' )' → logprob: -7.500601291656494
    3. ')+' → logprob: -10.375600814819336
    4. '+' → logprob: -12.375600814819336
    5. ')
' → logprob: -13.000600814819336
    6. '))' → logprob: -13.500600814819336
    7. ')+(' → logprob: -13.500600814819336
    8. '        ' → logprob: -13.750600814819336
    9. '       ' → logprob: -13.875600814819336
    10. '```' → logprob: -14.000600814819336

Token 903: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.002160848816856742
    2. '+' → logprob: -6.377161026000977
    3. ' |' → logprob: -7.752161026000977
    4. '|(' → logprob: -11.877161026000977
    5. ' +' → logprob: -12.252161026000977
    6. '   ' → logprob: -12.377161026000977
    7. ')' → logprob: -12.502161026000977
    8. ' ' → logprob: -13.252161026000977
    9. '           ' → logprob: -13.627161026000977
    10. ']' → logprob: -13.627161026000977

Token 904: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.4772818982601166
    2. '((' → logprob: -0.977281928062439
    3. ' (' → logprob: -5.8522820472717285
    4. ' ((' → logprob: -8.35228157043457
    5. '(((' → logprob: -9.97728157043457
    6. '(' → logprob: -10.10228157043457
    7. ' ' → logprob: -14.22728157043457
    8. '  ' → logprob: -14.35228157043457
    9. '   ' → logprob: -14.72728157043457
    10. '(m' → logprob: -14.85228157043457

Token 905: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.009982019662857056
    2. 'j' → logprob: -4.884982109069824
    3. '((' → logprob: -6.759982109069824
    4. ' (' → logprob: -6.759982109069824
    5. '(m' → logprob: -10.884982109069824
    6. '(' → logprob: -11.259982109069824
    7. ' j' → logprob: -11.509982109069824
    8. '[j' → logprob: -12.509982109069824
    9. '(
' → logprob: -13.134982109069824
    10. ' ((' → logprob: -13.259982109069824

Token 906: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.21288780868053436
    2. '&m' → logprob: -1.7128877639770508
    3. ' &' → logprob: -4.712887763977051
    4. '&(' → logprob: -6.087887763977051
    5. '&M' → logprob: -9.83788776397705
    6. '&r' → logprob: -9.96288776397705
    7. '&p' → logprob: -10.83788776397705
    8. '&amp' → logprob: -11.46288776397705
    9. '&
' → logprob: -11.71288776397705
    10. '&t' → logprob: -12.46288776397705

Token 907: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0025031249970197678
    2. ' ((' → logprob: -6.002502918243408
    3. '(m' → logprob: -10.877503395080566
    4. '(' → logprob: -12.377503395080566
    5. ' ' → logprob: -13.127503395080566
    6. 'm' → logprob: -13.627503395080566
    7. ' (' → logprob: -13.752503395080566
    8. '  ' → logprob: -17.50250244140625
    9. ' m' → logprob: -17.75250244140625
    10. '(((' → logprob: -18.00250244140625

Token 908: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014334988372866064
    2. ' (' → logprob: -8.875143051147461
    3. ' ' → logprob: -13.375143051147461
    4. '   ' → logprob: -14.000143051147461
    5. '(m' → logprob: -15.375143051147461
    6. '1' → logprob: -15.625143051147461
    7. '    ' → logprob: -15.750143051147461
    8. '((' → logprob: -15.750143051147461
    9. '  ' → logprob: -16.50014305114746
    10. '     ' → logprob: -16.62514305114746

Token 909: ' <<' (ID: 2256)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19306844472885132
    2. '(r' → logprob: -2.068068504333496
    3. '(z' → logprob: -3.818068504333496
    4. ' (' → logprob: -4.318068504333496
    5. '(m' → logprob: -5.068068504333496
    6. '<<' → logprob: -5.443068504333496
    7. '1' → logprob: -6.568068504333496
    8. 'r' → logprob: -6.693068504333496
    9. '   ' → logprob: -9.318068504333496
    10. 'z' → logprob: -9.443068504333496

Token 910: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006952992174774408
    2. '(r' → logprob: -5.63195276260376
    3. '(z' → logprob: -5.75695276260376
    4. ' r' → logprob: -9.131953239440918
    5. ' (' → logprob: -10.256953239440918
    6. '(' → logprob: -10.631953239440918
    7. 'z' → logprob: -12.131953239440918
    8. '   ' → logprob: -12.506953239440918
    9. ' ' → logprob: -12.631953239440918
    10. '_r' → logprob: -13.631953239440918

Token 911: 'z' (ID: 89)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018220659694634378
    2. '(r' → logprob: -9.250182151794434
    3. '(z' → logprob: -9.625182151794434
    4. 'z' → logprob: -11.500182151794434
    5. ' r' → logprob: -12.250182151794434
    6. '   ' → logprob: -14.000182151794434
    7. '(' → logprob: -14.125182151794434
    8. '           ' → logprob: -14.125182151794434
    9. ' ' → logprob: -14.500182151794434
    10. ' (' → logprob: -14.750182151794434

Token 912: ' -' (ID: 533)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0022582602687180042
    2. '(r' → logprob: -6.50225830078125
    3. '(z' → logprob: -7.62725830078125
    4. '           ' → logprob: -9.25225830078125
    5. 'z' → logprob: -10.00225830078125
    6. ' (' → logprob: -10.75225830078125
    7. ' r' → logprob: -10.75225830078125
    8. ')' → logprob: -10.75225830078125
    9. '               ' → logprob: -11.25225830078125
    10. '_r' → logprob: -11.37725830078125

Token 913: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00012844942102674395
    2. ' r' → logprob: -9.500128746032715
    3. '(r' → logprob: -10.375128746032715
    4. 'z' → logprob: -11.750128746032715
    5. '   ' → logprob: -12.500128746032715
    6. '(' → logprob: -12.500128746032715
    7. '(z' → logprob: -13.125128746032715
    8. ' (' → logprob: -14.250128746032715
    9. ' ' → logprob: -14.250128746032715
    10. '_r' → logprob: -14.375128746032715

Token 914: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005955583415925503
    2. ')-' → logprob: -5.505955696105957
    3. 'r' → logprob: -6.505955696105957
    4. '_r' → logprob: -8.630955696105957
    5. ' )' → logprob: -9.630955696105957
    6. '))' → logprob: -9.880955696105957
    7. '(r' → logprob: -10.130955696105957
    8. '-' → logprob: -12.005955696105957
    9. '-r' → logprob: -12.255955696105957
    10. '           ' → logprob: -12.380955696105957

Token 915: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06161725893616676
    2. 'r' → logprob: -3.186617374420166
    3. ')-' → logprob: -4.061617374420166
    4. '-' → logprob: -8.061616897583008
    5. '_r' → logprob: -8.186616897583008
    6. ' )' → logprob: -8.561616897583008
    7. '-r' → logprob: -8.936616897583008
    8. '(r' → logprob: -9.061616897583008
    9. '```' → logprob: -10.061616897583008
    10. ' -' → logprob: -10.936616897583008

Token 916: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.029979458078742027
    2. '1' → logprob: -3.5299794673919678
    3. ' r' → logprob: -8.404979705810547
    4. '_r' → logprob: -12.279979705810547
    5. '(r' → logprob: -15.154979705810547
    6. ' ' → logprob: -15.654979705810547
    7. '```' → logprob: -15.779979705810547
    8. '0' → logprob: -17.904979705810547
    9. '``' → logprob: -18.154979705810547
    10. '           ' → logprob: -18.154979705810547

Token 917: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013340517180040479
    2. '1' → logprob: -6.626334190368652
    3. ' r' → logprob: -11.876334190368652
    4. '_r' → logprob: -14.126334190368652
    5. 'z' → logprob: -16.376333236694336
    6. '(r' → logprob: -16.376333236694336
    7. '   ' → logprob: -17.126333236694336
    8. '(' → logprob: -17.126333236694336
    9. '```' → logprob: -17.126333236694336
    10. '``' → logprob: -17.876333236694336

Token 918: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025673373602330685
    2. ')))' → logprob: -6.127567291259766
    3. ')' → logprob: -8.877567291259766
    4. ' ))' → logprob: -9.377567291259766
    5. '))-' → logprob: -10.002567291259766
    6. '))
' → logprob: -10.502567291259766
    7. '))}
' → logprob: -10.752567291259766
    8. '))))' → logprob: -10.877567291259766
    9. '))+' → logprob: -11.877567291259766
    10. '```' → logprob: -11.877567291259766

Token 919: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012087158858776093
    2. ')]' → logprob: -5.137087345123291
    3. ']+=' → logprob: -5.512087345123291
    4. ')' → logprob: -7.012087345123291
    5. ' ]' → logprob: -7.262087345123291
    6. '])' → logprob: -8.262086868286133
    7. ']+' → logprob: -9.512086868286133
    8. ']=' → logprob: -10.012086868286133
    9. '+' → logprob: -10.387086868286133
    10. '           ' → logprob: -10.887086868286133

Token 920: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005282850004732609
    2. ' +=' → logprob: -5.255282878875732
    3. ']+=' → logprob: -10.005282402038574
    4. '+' → logprob: -13.505282402038574
    5. '   ' → logprob: -14.005282402038574
    6. '=' → logprob: -14.505282402038574
    7. '```' → logprob: -14.880282402038574
    8. '+=(' → logprob: -15.255282402038574
    9. '    ' → logprob: -16.25528335571289
    10. '           ' → logprob: -16.25528335571289

Token 921: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00425754627212882
    2. ' d' → logprob: -5.504257678985596
    3. '   ' → logprob: -9.754257202148438
    4. '           ' → logprob: -10.379257202148438
    5. '                   ' → logprob: -10.879257202148438
    6. '               ' → logprob: -11.379257202148438
    7. ' ' → logprob: -11.379257202148438
    8. '  ' → logprob: -11.754257202148438
    9. '       ' → logprob: -12.004257202148438
    10. '    ' → logprob: -12.254257202148438

Token 922: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.43091118335723877
    2. 'k' → logprob: -1.0559111833572388
    3. '[r' → logprob: -7.055911064147949
    4. '(k' → logprob: -7.680911064147949
    5. 'r' → logprob: -7.930911064147949
    6. '[z' → logprob: -8.30591106414795
    7. ' k' → logprob: -8.68091106414795
    8. 'z' → logprob: -10.93091106414795
    9. '{k' → logprob: -11.05591106414795
    10. '[' → logprob: -11.30591106414795

Token 923: '][' (ID: 2696)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.07461033761501312
    2. ' -' → logprob: -3.0746102333068848
    3. '-' → logprob: -4.074610233306885
    4. '[k' → logprob: -5.574610233306885
    5. '-k' → logprob: -5.949610233306885
    6. '][' → logprob: -7.074610233306885
    7. '[r' → logprob: -7.074610233306885
    8. ' ' → logprob: -9.199610710144043
    9. '[' → logprob: -9.449610710144043
    10. '-[' → logprob: -9.574610710144043

Token 924: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000997559749521315
    2. 'k' → logprob: -7.125997543334961
    3. '[j' → logprob: -9.000997543334961
    4. ' j' → logprob: -10.000997543334961
    5. '(j' → logprob: -12.125997543334961
    6. '((' → logprob: -12.125997543334961
    7. '[(' → logprob: -12.375997543334961
    8. '```' → logprob: -12.625997543334961
    9. '[k' → logprob: -13.500997543334961
    10. '   ' → logprob: -13.750997543334961

Token 925: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04894272983074188
    2. '[r' → logprob: -3.923942804336548
    3. '])' → logprob: -4.048942565917969
    4. '           ' → logprob: -5.798942565917969
    5. ')' → logprob: -6.173942565917969
    6. '[' → logprob: -6.298942565917969
    7. '       ' → logprob: -7.048942565917969
    8. '[:' → logprob: -7.673942565917969
    9. ' ]' → logprob: -8.423942565917969
    10. '               ' → logprob: -8.548942565917969

Token 926: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 927: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: ' Recherche' (ID: 114815)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.4401013255119324
    2. 'if' → logprob: -2.065101385116577
    3. 'for' → logprob: -2.440101385116577
    4. ' pass' → logprob: -3.565101385116577
    5. '<|end|>' → logprob: -3.565101385116577
    6. '#' → logprob: -3.940101385116577
    7. 'print' → logprob: -4.190101146697998
    8. 'd' → logprob: -4.315101146697998
    9. ')' → logprob: -4.690101146697998
    10. ' if' → logprob: -4.690101146697998

Token 929: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6529125571250916
    2. 'best' → logprob: -1.7779126167297363
    3. '   ' → logprob: -2.1529126167297363
    4. ' max' → logprob: -2.9029126167297363
    5. 'min' → logprob: -3.0279126167297363
    6. 'for' → logprob: -3.5279126167297363
    7. ' =' → logprob: -4.027912616729736
    8. '=' → logprob: -4.152912616729736
    9. ' best' → logprob: -5.027912616729736
    10. ' for' → logprob: -5.402912616729736

Token 930: ' première' (ID: 23423)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.014975074678659439
    2. 'best' → logprob: -5.514975070953369
    3. 'maximum' → logprob: -5.639975070953369
    4. ' max' → logprob: -6.014975070953369
    5. 'm' → logprob: -6.389975070953369
    6. 'min' → logprob: -6.764975070953369
    7. 'val' → logprob: -7.764975070953369
    8. '#' → logprob: -8.014975547790527
    9. 'res' → logprob: -8.514975547790527
    10. 'ans' → logprob: -8.514975547790527

Token 931: ' occurrence' (ID: 55807)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7453449368476868
    2. 'j' → logprob: -1.620344877243042
    3. 'val' → logprob: -2.870344877243042
    4. 'v' → logprob: -3.120344877243042
    5. 'k' → logprob: -3.120344877243042
    6. ' for' → logprob: -3.120344877243042
    7. ' j' → logprob: -3.995344877243042
    8. '_' → logprob: -4.370345115661621
    9. 'r' → logprob: -4.495345115661621
    10. '=' → logprob: -4.620345115661621

Token 932: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7019355893135071
    2. '   ' → logprob: -1.5769355297088623
    3. ' for' → logprob: -2.0769355297088623
    4. '[' → logprob: -2.5769355297088623
    5. ' of' → logprob: -3.7019355297088623
    6. '_' → logprob: -4.326935768127441
    7. ' j' → logprob: -5.201935768127441
    8. ' =' → logprob: -5.326935768127441
    9. ' in' → logprob: -5.326935768127441
    10. 'of' → logprob: -5.451935768127441

Token 933: 'dans' (ID: 108151)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.21902191638946533
    2. 'for' → logprob: -2.094021797180176
    3. 'k' → logprob: -3.844021797180176
    4. ' j' → logprob: -4.219021797180176
    5. '   ' → logprob: -4.469021797180176
    6. ' for' → logprob: -5.219021797180176
    7. 'd' → logprob: -5.969021797180176
    8. 'v' → logprob: -6.094021797180176
    9. 'val' → logprob: -6.469021797180176
    10. '0' → logprob: -6.594021797180176

Token 934: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.36136594414711
    2. 'Q' → logprob: -1.7363659143447876
    3. 'R' → logprob: -2.361366033554077
    4. ' range' → logprob: -3.861366033554077
    5. 'd' → logprob: -4.611365795135498
    6. 'j' → logprob: -7.611365795135498
    7. 'f' → logprob: -7.736365795135498
    8. '...' → logprob: -8.986366271972656
    9. ' Q' → logprob: -9.111366271972656
    10. ' R' → logprob: -9.236366271972656

Token 935: ''ordre' (ID: 124753)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.764809250831604
    2. 'd' → logprob: -1.139809250831604
    3. 'R' → logprob: -2.2648091316223145
    4. 'Q' → logprob: -2.8898091316223145
    5. ' range' → logprob: -3.0148091316223145
    6. 'f' → logprob: -6.6398091316223145
    7. 'for' → logprob: -7.1398091316223145
    8. '[' → logprob: -7.2648091316223145
    9. 'j' → logprob: -7.2648091316223145
    10. ' d' → logprob: -7.2648091316223145

Token 936: ' cro' (ID: 11270)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.4368007183074951
    2. ' de' → logprob: -1.4368007183074951
    3. 'of' → logprob: -2.436800718307495
    4. 'd' → logprob: -2.436800718307495
    5. 'de' → logprob: -2.436800718307495
    6. 'for' → logprob: -2.936800718307495
    7. ' d' → logprob: -3.311800718307495
    8. 'j' → logprob: -4.061800956726074
    9. '[i' → logprob: -4.061800956726074
    10. ' for' → logprob: -4.061800956726074

Token 937: 'issant' (ID: 31359)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8742232918739319
    2. 'ur' → logprob: -1.124223232269287
    3. 'mp' → logprob: -2.874223232269287
    4. 'de' → logprob: -3.124223232269287
    5. 'range' → logprob: -3.374223232269287
    6. 'ment' → logprob: -3.874223232269287
    7. 'te' → logprob: -3.874223232269287
    8. 've' → logprob: -4.124223232269287
    9. 'urs' → logprob: -4.749223232269287
    10. 'nte' → logprob: -4.874223232269287

Token 938: ' des' (ID: 731)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5974068641662598
    2. ' de' → logprob: -1.7224068641662598
    3. ' j' → logprob: -2.3474068641662598
    4. ' of' → logprob: -2.8474068641662598
    5. 'de' → logprob: -3.5974068641662598
    6. 'of' → logprob: -3.5974068641662598
    7. 'k' → logprob: -3.5974068641662598
    8. '[j' → logprob: -4.84740686416626
    9. ')' → logprob: -5.34740686416626
    10. 'd' → logprob: -5.59740686416626

Token 939: ' patterns' (ID: 18587)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.1292996406555176
    2. 'k' → logprob: -1.1292996406555176
    3. 'range' → logprob: -1.3792996406555176
    4. 'j' → logprob: -2.5042996406555176
    5. 'R' → logprob: -5.004299640655518
    6. 'd' → logprob: -5.254299640655518
    7. 'i' → logprob: -5.254299640655518
    8. 'N' → logprob: -6.629299640655518
    9. 'K' → logprob: -7.129299640655518
    10. 'r' → logprob: -8.75429916381836

Token 940: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35590553283691406
    2. '[i' → logprob: -2.230905532836914
    3. ' de' → logprob: -3.105905532836914
    4. ',' → logprob: -3.605905532836914
    5. 'de' → logprob: -3.605905532836914
    6. '[j' → logprob: -3.730905532836914
    7. '[' → logprob: -3.980905532836914
    8. ' of' → logprob: -4.730905532836914
    9. 'j' → logprob: -4.730905532836914
    10. 'of' → logprob: -4.855905532836914

Token 941: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06820844113826752
    2. ' for' → logprob: -3.1932084560394287
    3. '   ' → logprob: -5.31820821762085
    4. '[j' → logprob: -5.69320821762085
    5. 'j' → logprob: -6.06820821762085
    6. 'of' → logprob: -6.06820821762085
    7. ' =' → logprob: -6.44320821762085
    8. ' of' → logprob: -6.56820821762085
    9. 'pos' → logprob: -6.94320821762085
    10. '=' → logprob: -6.94320821762085

Token 942: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002520965179428458
    2. 'f' → logprob: -6.50252103805542
    3. ' d' → logprob: -7.00252103805542
    4. 'any' → logprob: -10.627520561218262
    5. 'not' → logprob: -10.627520561218262
    6. 'all' → logprob: -11.252520561218262
    7. ' f' → logprob: -12.127520561218262
    8. '   ' → logprob: -12.127520561218262
    9. 'len' → logprob: -12.127520561218262
    10. '0' → logprob: -12.252520561218262

Token 943: ' total' (ID: 3609)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008759701740927994
    2. ' d' → logprob: -7.250875949859619
    3. 'f' → logprob: -9.625876426696777
    4. 'max' → logprob: -10.375876426696777
    5. '#' → logprob: -11.250876426696777
    6. 'K' → logprob: -12.125876426696777
    7. 'for' → logprob: -12.250876426696777
    8. '...' → logprob: -12.375876426696777
    9. '   ' → logprob: -12.500876426696777
    10. 'min' → logprob: -12.625876426696777

Token 944: ' dans' (ID: 2671)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.040217384696006775
    2. ' d' → logprob: -3.540217399597168
    3. '=' → logprob: -5.790217399597168
    4. 'for' → logprob: -5.915217399597168
    5. ' =' → logprob: -6.290217399597168
    6. '[d' → logprob: -7.415217399597168
    7. 'de' → logprob: -7.790217399597168
    8. '[' → logprob: -8.040217399597168
    9. ' for' → logprob: -8.665217399597168
    10. 'dans' → logprob: -8.665217399597168

Token 945: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.098748053773306e-05
    2. ' d' → logprob: -9.87506103515625
    3. '   ' → logprob: -11.75006103515625
    4. '#' → logprob: -14.25006103515625
    5. '```' → logprob: -14.75006103515625
    6. '       ' → logprob: -15.75006103515625
    7. ' ' → logprob: -16.12506103515625
    8. '
' → logprob: -16.50006103515625
    9. 'for' → logprob: -16.50006103515625
    10. '           ' → logprob: -16.62506103515625

Token 946: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.375004768371582
    3. ' [' → logprob: -13.375004768371582
    4. 'i' → logprob: -14.375004768371582
    5. '   ' → logprob: -15.375004768371582
    6. '[I' → logprob: -15.375004768371582
    7. '```' → logprob: -15.500004768371582
    8. '#' → logprob: -17.625003814697266
    9. '[j' → logprob: -17.875003814697266
    10. ' i' → logprob: -18.125003814697266

Token 947: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13786688446998596
    2. ']' → logprob: -2.637866973876953
    3. '[i' → logprob: -3.262866973876953
    4. '[j' → logprob: -4.637866973876953
    5. '[' → logprob: -5.012866973876953
    6. ']>' → logprob: -7.262866973876953
    7. '])' → logprob: -7.512866973876953
    8. ']==' → logprob: -8.387866973876953
    9. '[]' → logprob: -9.262866973876953
    10. '```' → logprob: -9.262866973876953

Token 948: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0014971260679885745
    2. 'k' → logprob: -7.876497268676758
    3. ']' → logprob: -8.126497268676758
    4. '0' → logprob: -8.626497268676758
    5. 'i' → logprob: -8.626497268676758
    6. ' j' → logprob: -9.376497268676758
    7. 'd' → logprob: -9.376497268676758
    8. '```' → logprob: -9.751497268676758
    9. '[j' → logprob: -9.751497268676758
    10. '`' → logprob: -10.751497268676758

Token 949: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047095734626054764
    2. ']>' → logprob: -3.922095775604248
    3. '>' → logprob: -4.172095775604248
    4. ']>=' → logprob: -5.797095775604248
    5. ']==' → logprob: -6.047095775604248
    6. ' >' → logprob: -6.047095775604248
    7. ')' → logprob: -7.547095775604248
    8. ' ]' → logprob: -7.672095775604248
    9. '[i' → logprob: -8.04709529876709
    10. '>=' → logprob: -8.42209529876709

Token 950: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1604270040988922
    2. ' >' → logprob: -2.5354270935058594
    3. '>=' → logprob: -3.4104270935058594
    4. '==' → logprob: -4.160427093505859
    5. ' >=' → logprob: -4.660427093505859
    6. ' ==' → logprob: -4.910427093505859
    7. ' dépasse' → logprob: -7.285427093505859
    8. 'for' → logprob: -7.410427093505859
    9. '   ' → logprob: -7.785427093505859
    10. ' !=' → logprob: -8.28542709350586

Token 951: ' au' (ID: 2791)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004777807276695967
    2. ' >' → logprob: -6.129777908325195
    3. 'sup' → logprob: -7.129777908325195
    4. '0' → logprob: -7.254777908325195
    5. '1' → logprob: -7.629777908325195
    6. 'non' → logprob: -8.754777908325195
    7. '&gt' → logprob: -9.129777908325195
    8. 'for' → logprob: -9.254777908325195
    9. 'not' → logprob: -10.254777908325195
    10. ' supérieur' → logprob: -10.254777908325195

Token 952: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.007428434211760759
    2. 'plus' → logprob: -5.7574286460876465
    3. ' moins' → logprob: -7.0074286460876465
    4. 'mo' → logprob: -7.0074286460876465
    5. 'max' → logprob: -7.1324286460876465
    6. '```' → logprob: -7.5074286460876465
    7. 'minimum' → logprob: -7.8824286460876465
    8. 'm' → logprob: -8.632428169250488
    9. '0' → logprob: -9.132428169250488
    10. 'min' → logprob: -9.382428169250488

Token 953: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0025328563060611486
    2. ' K' → logprob: -6.002532958984375
    3. '1' → logprob: -10.377532958984375
    4. '   ' → logprob: -10.752532958984375
    5. '```' → logprob: -13.252532958984375
    6. ' ' → logprob: -13.502532958984375
    7. '       ' → logprob: -15.002532958984375
    8. 'k' → logprob: -15.127532958984375
    9. '`' → logprob: -15.502532958984375
    10. '  ' → logprob: -15.877532958984375

Token 954: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022099904716014862
    2. ' for' → logprob: -4.14709997177124
    3. '   ' → logprob: -5.14709997177124
    4. ':' → logprob: -9.397099494934082
    5. '
' → logprob: -9.772099494934082
    6. ':
' → logprob: -9.897099494934082
    7. '       ' → logprob: -11.022099494934082
    8. '    
' → logprob: -11.522099494934082
    9. '	for' → logprob: -12.272099494934082
    10. '=' → logprob: -12.647099494934082

Token 955: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00894225388765335
    2. ' for' → logprob: -5.258942127227783
    3. '   ' → logprob: -6.133942127227783
    4. '```' → logprob: -6.633942127227783
    5. '
' → logprob: -9.008942604064941
    6. '    
' → logprob: -10.133942604064941
    7. '``' → logprob: -10.633942604064941
    8. 'j' → logprob: -11.133942604064941
    9. '       ' → logprob: -11.758942604064941
    10. '  
' → logprob: -13.383942604064941

Token 956: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013345248298719525
    2. ' for' → logprob: -6.8763346672058105
    3. '   ' → logprob: -8.376334190368652
    4. '```' → logprob: -9.751334190368652
    5. 'j' → logprob: -12.251334190368652
    6. '    
' → logprob: -12.501334190368652
    7. '``' → logprob: -13.126334190368652
    8. '
' → logprob: -13.876334190368652
    9. 'found' → logprob: -14.751334190368652
    10. '       ' → logprob: -15.001334190368652

Token 957: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.309382373117842e-05
    2. ' j' → logprob: -10.375033378601074
    3. 'i' → logprob: -13.375033378601074
    4. '```' → logprob: -15.250033378601074
    5. '	j' → logprob: -16.750032424926758
    6. '`' → logprob: -17.125032424926758
    7. '   ' → logprob: -17.125032424926758
    8. ' ' → logprob: -18.375032424926758
    9. '_j' → logprob: -18.500032424926758
    10. '[j' → logprob: -19.000032424926758

Token 958: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2812245786190033
    2. ' in' → logprob: -1.4062246084213257
    3. '```' → logprob: -10.906224250793457
    4. '0' → logprob: -11.031224250793457
    5. '(' → logprob: -11.656224250793457
    6. ')' → logprob: -11.781224250793457
    7. '[' → logprob: -11.781224250793457
    8. ' ' → logprob: -12.656224250793457
    9. '   ' → logprob: -12.656224250793457
    10. 'd' → logprob: -13.531224250793457

Token 959: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.140996515750885
    2. 'Q' → logprob: -2.2659964561462402
    3. 'range' → logprob: -3.7659964561462402
    4. 'd' → logprob: -6.51599645614624
    5. ' R' → logprob: -6.51599645614624
    6. ' range' → logprob: -6.51599645614624
    7. ' Q' → logprob: -9.265996932983398
    8. '0' → logprob: -10.265996932983398
    9. 'Range' → logprob: -10.765996932983398
    10. '(' → logprob: -10.890996932983398

Token 960: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06624194979667664
    2. '(len' → logprob: -2.816241979598999
    3. '(i' → logprob: -5.56624174118042
    4. '1' → logprob: -8.816242218017578
    5. '((' → logprob: -9.441242218017578
    6. 'len' → logprob: -9.441242218017578
    7. '(d' → logprob: -10.316242218017578
    8. '0' → logprob: -10.441242218017578
    9. ')' → logprob: -10.816242218017578
    10. '(j' → logprob: -11.441242218017578

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.19449129700660706
    2. '2' → logprob: -1.8194912672042847
    3. '(' → logprob: -4.319491386413574
    4. 'len' → logprob: -7.319491386413574
    5. '0' → logprob: -7.569491386413574
    6. ' ' → logprob: -9.569491386413574
    7. ')' → logprob: -10.569491386413574
    8. '```' → logprob: -11.194491386413574
    9. '(len' → logprob: -11.319491386413574
    10. '`' → logprob: -12.069491386413574

Token 962: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.122738778591156
    2. '(i' → logprob: -2.872738838195801
    3. ' <<' → logprob: -3.122738838195801
    4. '(' → logprob: -4.872738838195801
    5. '[i' → logprob: -5.372738838195801
    6. '):' → logprob: -7.247738838195801
    7. '   ' → logprob: -7.622738838195801
    8. '**' → logprob: -7.747738838195801
    9. '):
' → logprob: -7.997738838195801
    10. '<<(' → logprob: -8.1227388381958

Token 963: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4418171455617994e-05
    2. 'N' → logprob: -10.625044822692871
    3. ' i' → logprob: -11.125044822692871
    4. '(i' → logprob: -13.000044822692871
    5. '   ' → logprob: -13.500044822692871
    6. '(N' → logprob: -14.375044822692871
    7. 'j' → logprob: -14.375044822692871
    8. '(' → logprob: -15.375044822692871
    9. '```' → logprob: -15.875044822692871
    10. ' ' → logprob: -16.750043869018555

Token 964: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03009791299700737
    2. '):' → logprob: -3.5300979614257812
    3. '):
' → logprob: -8.155097961425781
    4. ')' → logprob: -10.655097961425781
    5. '   ' → logprob: -11.155097961425781
    6. ':' → logprob: -11.405097961425781
    7. '       ' → logprob: -12.280097961425781
    8. ':
' → logprob: -12.905097961425781
    9. '():
' → logprob: -14.030097961425781
    10. '[' → logprob: -14.155097961425781

Token 965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15287068486213684
    2. '   ' → logprob: -2.4028706550598145
    3. 'if' → logprob: -3.0278706550598145
    4. ' if' → logprob: -5.9028706550598145
    5. '```' → logprob: -9.402871131896973
    6. '	if' → logprob: -10.777871131896973
    7. '	   ' → logprob: -10.777871131896973
    8. '           ' → logprob: -11.777871131896973
    9. '	' → logprob: -11.902871131896973
    10. '   ' → logprob: -13.027871131896973

Token 966: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002051885472610593
    2. '       ' → logprob: -6.627051830291748
    3. ' if' → logprob: -7.627051830291748
    4. '           ' → logprob: -8.377052307128906
    5. '```' → logprob: -12.377052307128906
    6. '   ' → logprob: -12.502052307128906
    7. 'If' → logprob: -15.502052307128906
    8. '@if' → logprob: -15.627052307128906
    9. '	if' → logprob: -16.502052307128906
    10. '               ' → logprob: -17.252052307128906

Token 967: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3869791328907013
    2. 'd' → logprob: -1.136979103088379
    3. '       ' → logprob: -9.511979103088379
    4. '           ' → logprob: -10.636979103088379
    5. '   ' → logprob: -12.261979103088379
    6. '	d' → logprob: -12.636979103088379
    7. ' ' → logprob: -14.136979103088379
    8. '        ' → logprob: -15.261979103088379
    9. '(d' → logprob: -15.636979103088379
    10. '               ' → logprob: -15.761979103088379

Token 968: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0683535037969705e-05
    2. ' [' → logprob: -12.12501049041748
    3. 'i' → logprob: -12.50001049041748
    4. '[' → logprob: -13.87501049041748
    5. ' i' → logprob: -15.50001049041748
    6. '```' → logprob: -16.125011444091797
    7. '[j' → logprob: -16.875011444091797
    8. '   ' → logprob: -17.000011444091797
    9. '[I' → logprob: -17.500011444091797
    10. '(i' → logprob: -17.500011444091797

Token 969: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03510435298085213
    2. '[i' → logprob: -3.660104274749756
    3. '][' → logprob: -4.785104274749756
    4. '[' → logprob: -7.910104274749756
    5. ')[' → logprob: -10.910104751586914
    6. ' [' → logprob: -11.535104751586914
    7. '   ' → logprob: -12.160104751586914
    8. '}[' → logprob: -12.660104751586914
    9. '```' → logprob: -13.535104751586914
    10. 'j' → logprob: -13.785104751586914

Token 970: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.225939872208983e-05
    2. ' j' → logprob: -11.000032424926758
    3. '[j' → logprob: -11.125032424926758
    4. '   ' → logprob: -15.250032424926758
    5. '][' → logprob: -15.625032424926758
    6. '	j' → logprob: -16.000032424926758
    7. ' ' → logprob: -16.125032424926758
    8. '```' → logprob: -16.625032424926758
    9. ']' → logprob: -16.875032424926758
    10. ')' → logprob: -17.625032424926758

Token 971: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46541109681129456
    2. ' >=' → logprob: -1.4654110670089722
    3. ']>=' → logprob: -2.3404111862182617
    4. '>=' → logprob: -3.2154111862182617
    5. ')' → logprob: -6.215411186218262
    6. ')>=' → logprob: -6.840411186218262
    7. ' ]' → logprob: -7.590411186218262
    8. '[' → logprob: -7.965411186218262
    9. '       ' → logprob: -8.465411186218262
    10. '           ' → logprob: -8.590411186218262

Token 972: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3873949944972992
    2. '>=' → logprob: -1.1373950242996216
    3. '   ' → logprob: -7.637394905090332
    4. '>' → logprob: -11.262394905090332
    5. '	' → logprob: -12.012394905090332
    6. '       ' → logprob: -12.387394905090332
    7. ' ' → logprob: -12.387394905090332
    8. ']>=' → logprob: -12.637394905090332
    9. '    ' → logprob: -12.762394905090332
    10. ')>=' → logprob: -13.137394905090332

Token 973: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0007099286303855479
    2. ' K' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.500709533691406
    4. '	K' → logprob: -18.500709533691406
    5. '       ' → logprob: -19.875709533691406
    6. ' ' → logprob: -21.125709533691406
    7. '           ' → logprob: -21.750709533691406
    8. 'k' → logprob: -21.875709533691406
    9. '    ' → logprob: -22.625709533691406
    10. '  ' → logprob: -22.750709533691406

Token 974: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062226589769124985
    2. ':
' → logprob: -3.0622265338897705
    3. '           ' → logprob: -4.31222677230835
    4. '       ' → logprob: -9.562226295471191
    5. ' and' → logprob: -10.437226295471191
    6. ' :' → logprob: -11.437226295471191
    7. ':return' → logprob: -11.937226295471191
    8. '):' → logprob: -12.187226295471191
    9. ':
' → logprob: -12.562226295471191
    10. '):
' → logprob: -12.812226295471191

Token 975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06557488441467285
    2. 'print' → logprob: -2.940574884414673
    3. ' print' → logprob: -4.690574645996094
    4. '       ' → logprob: -6.565574645996094
    5. '```' → logprob: -10.565574645996094
    6. '   ' → logprob: -11.940574645996094
    7. '               ' → logprob: -12.440574645996094
    8. '	       ' → logprob: -13.315574645996094
    9. '#' → logprob: -13.940574645996094
    10. '          ' → logprob: -14.190574645996094

Token 976: ' I' (ID: 357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010338395833969116
    2. '           ' → logprob: -5.260338306427002
    3. ' print' → logprob: -5.385338306427002
    4. 'result' → logprob: -8.51033878326416
    5. '       ' → logprob: -8.76033878326416
    6. 'pattern' → logprob: -9.76033878326416
    7. '```' → logprob: -10.63533878326416
    8. '               ' → logprob: -11.01033878326416
    9. 'answer' → logprob: -11.01033878326416
    10. '   ' → logprob: -11.63533878326416

Token 977: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030189983546733856
    2. '=' → logprob: -4.5301899909973145
    3. ',' → logprob: -5.0301899909973145
    4. '   ' → logprob: -6.0301899909973145
    5. 'nd' → logprob: -6.1551899909973145
    6. '_' → logprob: -6.4051899909973145
    7. 'f' → logprob: -6.7801899909973145
    8. '[i' → logprob: -6.9051899909973145
    9. ' ' → logprob: -7.0301899909973145
    10. '=i' → logprob: -7.2801899909973145

Token 978: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010530461557209492
    2. 'j' → logprob: -5.260530471801758
    3. ' i' → logprob: -5.260530471801758
    4. '(i' → logprob: -10.135530471801758
    5. ' j' → logprob: -10.260530471801758
    6. ' (' → logprob: -11.760530471801758
    7. '[i' → logprob: -12.885530471801758
    8. '   ' → logprob: -13.760530471801758
    9. ' ' → logprob: -13.885530471801758
    10. 'I' → logprob: -14.010530471801758

Token 979: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005058500682935119
    2. '
' → logprob: -8.375505447387695
    3. '<|end|>' → logprob: -9.375505447387695
    4. '		' → logprob: -9.625505447387695
    5. ',' → logprob: -11.000505447387695
    6. ';' → logprob: -11.125505447387695
    7. '            
' → logprob: -11.125505447387695
    8. '#' → logprob: -11.375505447387695
    9. ' 
' → logprob: -11.625505447387695
    10. '	       ' → logprob: -11.625505447387695

Token 980: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002396936295554042
    2. 'M' → logprob: -6.627397060394287
    3. 'J' → logprob: -7.127397060394287
    4. 'B' → logprob: -9.252396583557129
    5. 'S' → logprob: -10.877396583557129
    6. 'b' → logprob: -10.877396583557129
    7. 'P' → logprob: -10.877396583557129
    8. 'print' → logprob: -11.252396583557129
    9. ' M' → logprob: -11.377396583557129
    10. 'A' → logprob: -11.502396583557129

Token 981: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.04202970117330551
    2. 'print' → logprob: -3.542029619216919
    3. ' break' → logprob: -5.542029857635498
    4. 'J' → logprob: -5.542029857635498
    5. 'pattern' → logprob: -6.292029857635498
    6. 'result' → logprob: -7.792029857635498
    7. '   ' → logprob: -8.29202938079834
    8. 'res' → logprob: -8.29202938079834
    9. 'S' → logprob: -8.66702938079834
    10. 'val' → logprob: -8.79202938079834

Token 982: ' mém' (ID: 136981)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.05448465421795845
    2. ' break' → logprob: -3.0544846057891846
    3. '           ' → logprob: -5.179484844207764
    4. '=' → logprob: -9.304484367370605
    5. '
' → logprob: -10.054484367370605
    6. '_break' → logprob: -10.054484367370605
    7. ' =' → logprob: -10.179484367370605
    8. '-break' → logprob: -11.929484367370605
    9. '       ' → logprob: -12.179484367370605
    10. '	break' → logprob: -12.679484367370605

Token 983: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.04690796136856079
    2. 'orie' → logprob: -3.171907901763916
    3. 'oire' → logprob: -6.546907901763916
    4. 'ory' → logprob: -7.546907901763916
    5. '[' → logprob: -7.796907901763916
    6. 'ore' → logprob: -8.296908378601074
    7. '#' → logprob: -8.546908378601074
    8. 'o' → logprob: -8.671908378601074
    9. '=' → logprob: -8.796908378601074
    10. '_' → logprob: -9.171908378601074

Token 984: 'ise' (ID: 1096)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6491467356681824
    2. 'ise' → logprob: -1.5241467952728271
    3. 'rise' → logprob: -1.8991467952728271
    4. 'ris' → logprob: -2.774146795272827
    5. 'ir' → logprob: -4.149146556854248
    6. 'is' → logprob: -4.899146556854248
    7. 'I' → logprob: -5.024146556854248
    8. 'ize' → logprob: -5.149146556854248
    9. 'rist' → logprob: -5.774146556854248
    10. 'ire' → logprob: -6.649146556854248

Token 985: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006751431501470506
    2. ' i' → logprob: -7.875675201416016
    3. 'I' → logprob: -8.375675201416016
    4. 'j' → logprob: -9.875675201416016
    5. '<|end|>' → logprob: -11.625675201416016
    6. '	i' → logprob: -14.000675201416016
    7. '           ' → logprob: -14.000675201416016
    8. '
' → logprob: -14.750675201416016
    9. '   ' → logprob: -15.250675201416016
    10. ' ' → logprob: -15.500675201416016

Token 986: ''ind' (ID: 82245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08184780180454254
    2. 'I' → logprob: -2.831847906112671
    3. ' i' → logprob: -3.956847906112671
    4. ' I' → logprob: -8.33184814453125
    5. 'break' → logprob: -9.20684814453125
    6. 'j' → logprob: -9.45684814453125
    7. '=i' → logprob: -10.20684814453125
    8. '+' → logprob: -10.95684814453125
    9. ' break' → logprob: -11.20684814453125
    10. ' ' → logprob: -11.58184814453125

Token 987: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03244992718100548
    2. 'e' → logprob: -3.532449960708618
    3. 'x' → logprob: -6.532449722290039
    4. 'i' → logprob: -6.782449722290039
    5. 'ent' → logprob: -9.907449722290039
    6. '#' → logprob: -11.032449722290039
    7. 'é' → logprob: -11.157449722290039
    8. 'I' → logprob: -11.782449722290039
    9. 'expl' → logprob: -12.657449722290039
    10. '=' → logprob: -12.782449722290039

Token 988: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010176986455917358
    2. '
' → logprob: -5.135177135467529
    3. '<|end|>' → logprob: -6.385177135467529
    4. 'break' → logprob: -7.385177135467529
    5. '            
' → logprob: -8.010176658630371
    6. '=' → logprob: -8.385176658630371
    7. '            ' → logprob: -8.385176658630371
    8. '               ' → logprob: -8.885176658630371
    9. ' =' → logprob: -8.885176658630371
    10. '		' → logprob: -9.135176658630371

Token 989: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.747814349073451e-05
    2. '<|end|>' → logprob: -11.875017166137695
    3. '		' → logprob: -12.500017166137695
    4. '            
' → logprob: -13.625017166137695
    5. '               ' → logprob: -14.250017166137695
    6. '            ' → logprob: -14.375017166137695
    7. 'break' → logprob: -14.375017166137695
    8. 'n' → logprob: -14.625017166137695
    9. '
' → logprob: -14.750017166137695
    10. '	       ' → logprob: -14.750017166137695

Token 990: ' la' (ID: 557)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.552851676940918
    2. 'break' → logprob: -2.177851676940918
    3. 'pos' → logprob: -2.802851676940918
    4. '           ' → logprob: -2.927851676940918
    5. 'pattern' → logprob: -3.302851676940918
    6. 'idx' → logprob: -3.552851676940918
    7. '   ' → logprob: -3.677851676940918
    8. ' break' → logprob: -4.052851676940918
    9. 'b' → logprob: -4.302851676940918
    10. '       ' → logprob: -4.677851676940918

Token 991: ' longueur' (ID: 104613)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.14604926109313965
    2. 'j' → logprob: -2.1460492610931396
    3. 'J' → logprob: -4.521049499511719
    4. 'I' → logprob: -6.271049499511719
    5. 'val' → logprob: -6.396049499511719
    6. '#' → logprob: -6.771049499511719
    7. ' break' → logprob: -7.021049499511719
    8. 'i' → logprob: -8.021049499511719
    9. 'value' → logprob: -8.021049499511719
    10. 'best' → logprob: -8.271049499511719

Token 992: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05530242621898651
    2. 'break' → logprob: -3.180302381515503
    3. '+' → logprob: -5.430302619934082
    4. 'I' → logprob: -6.430302619934082
    5. '=' → logprob: -6.805302619934082
    6. '#' → logprob: -7.430302619934082
    7. '               ' → logprob: -7.680302619934082
    8. '       ' → logprob: -7.805302619934082
    9. '
' → logprob: -7.805302619934082
    10. '_break' → logprob: -7.930302619934082

Token 993: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.08669190853834152
    2. 'run' → logprob: -3.7116918563842773
    3. 'mot' → logprob: -3.8366918563842773
    4. 'I' → logprob: -4.086691856384277
    5. 'j' → logprob: -4.961691856384277
    6. 'segment' → logprob: -5.086691856384277
    7. 'i' → logprob: -5.711691856384277
    8. 'prefix' → logprob: -6.711691856384277
    9. 'pat' → logprob: -6.836691856384277
    10. 'bit' → logprob: -7.961691856384277

Token 994: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012154294381616637
    2. 'break' → logprob: -9.375121116638184
    3. '		' → logprob: -12.250121116638184
    4. ' break' → logprob: -12.375121116638184
    5. 'b' → logprob: -12.500121116638184
    6. '       ' → logprob: -12.750121116638184
    7. '   ' → logprob: -13.000121116638184
    8. 'n' → logprob: -13.000121116638184
    9. '<|end|>' → logprob: -13.125121116638184
    10. '               ' → logprob: -13.125121116638184

Token 995: '           ' (ID: 352)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.4381971061229706
    2. '           ' → logprob: -2.063197135925293
    3. 'break' → logprob: -2.438197135925293
    4. 'print' → logprob: -2.813197135925293
    5. 'pattern' → logprob: -3.063197135925293
    6. '   ' → logprob: -4.313197135925293
    7. '       ' → logprob: -5.188197135925293
    8. 'P' → logprob: -5.438197135925293
    9. 'S' → logprob: -6.063197135925293
    10. 'result' → logprob: -7.063197135925293

Token 996: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' (adapté à ' J') → logprob: -0.6672720313072205
    2. 'pattern' → logprob: -1.1672720909118652
    3. 'P' → logprob: -2.6672720909118652
    4. 'pos' → logprob: -4.042272090911865
    5. 'S' → logprob: -4.292272090911865
    6. 'break' → logprob: -4.417272090911865
    7. '   ' → logprob: -4.792272090911865
    8. 'idx' → logprob: -4.917272090911865
    9. 'p' → logprob: -5.167272090911865
    10. 'index' → logprob: -5.292272090911865

Token 997: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759754776954651
    2. '=' → logprob: -0.8259754776954651
    3. '=j' → logprob: -10.82597541809082
    4. '           ' → logprob: -12.70097541809082
    5. '   ' → logprob: -12.95097541809082
    6. ',' → logprob: -12.95097541809082
    7. '[' → logprob: -13.07597541809082
    8. ' ' → logprob: -13.32597541809082
    9. '[j' → logprob: -13.70097541809082
    10. ' j' → logprob: -14.32597541809082

Token 998: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.676292231422849e-05
    2. ' j' → logprob: -11.000017166137695
    3. '	j' → logprob: -18.375017166137695
    4. '   ' → logprob: -19.875017166137695
    5. '$j' → logprob: -20.000017166137695
    6. '=j' → logprob: -22.000017166137695
    7. '[j' → logprob: -22.125017166137695
    8. ':j' → logprob: -23.000017166137695
    9. '       ' → logprob: -23.125017166137695
    10. ',j' → logprob: -23.375017166137695

Token 999: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9862216504407115e-05
    2. '		' → logprob: -11.750020027160645
    3. '            
' → logprob: -12.625020027160645
    4. '<|end|>' → logprob: -12.875020027160645
    5. '               ' → logprob: -13.000020027160645
    6. '
' → logprob: -14.000020027160645
    7. '                   ' → logprob: -14.750020027160645
    8. '	       ' → logprob: -15.000020027160645
    9. '          ' → logprob: -15.000020027160645
    10. '                       ' → logprob: -15.375020027160645

Token 1000: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013464801304508
    2. 'break' → logprob: -9.250134468078613
    3. '               ' → logprob: -11.250134468078613
    4. '            
' → logprob: -11.500134468078613
    5. '       ' → logprob: -12.125134468078613
    6. ' break' → logprob: -12.875134468078613
    7. '		' → logprob: -13.500134468078613
    8. '          ' → logprob: -13.500134468078613
    9. '
' → logprob: -14.125134468078613
    10. '                   ' → logprob: -14.125134468078613

Token 1001: ' On' (ID: 2160)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1606065183877945
    2. '           ' → logprob: -2.160606622695923
    3. ' break' → logprob: -3.410606622695923
    4. '	break' → logprob: -9.910606384277344
    5. '       ' → logprob: -11.285606384277344
    6. '   ' → logprob: -11.410606384277344
    7. '#' → logprob: -12.285606384277344
    8. 'Break' → logprob: -12.410606384277344
    9. '_break' → logprob: -12.535606384277344
    10. '
' → logprob: -12.910606384277344

Token 1002: ' mém' (ID: 136981)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0030700452625751495
    2. ' break' → logprob: -5.878069877624512
    3. '=' → logprob: -8.628069877624512
    4. 'I' → logprob: -10.503069877624512
    5. '
' → logprob: -10.628069877624512
    6. '           ' → logprob: -11.253069877624512
    7. '_break' → logprob: -12.378069877624512
    8. ' =' → logprob: -12.753069877624512
    9. '```' → logprob: -12.753069877624512
    10. 'BREAK' → logprob: -13.003069877624512

Token 1003: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0055969334207475185
    2. 'emor' → logprob: -6.130597114562988
    3. 'ém' → logprob: -7.255597114562988
    4. 'oriz' → logprob: -7.505597114562988
    5. 'm' → logprob: -8.005597114562988
    6. 'oris' → logprob: -8.130597114562988
    7. 'oric' → logprob: -8.755597114562988
    8. 'memor' → logprob: -8.880597114562988
    9. '=' → logprob: -9.005597114562988
    10. 'o' → logprob: -9.380597114562988

Token 1004: 'ise' (ID: 1096)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.00037502311170101166
    2. 'ar' → logprob: -8.375374794006348
    3. 'ize' → logprob: -10.500374794006348
    4. 'ise' → logprob: -10.875374794006348
    5. 'ror' → logprob: -11.375374794006348
    6. 'orse' → logprob: -11.750374794006348
    7. 'orie' → logprob: -12.000374794006348
    8. 'aise' → logprob: -12.000374794006348
    9. 'rise' → logprob: -12.125374794006348
    10. 'oise' → logprob: -12.125374794006348

Token 1005: ' le' (ID: 505)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00011832444579340518
    2. ' j' → logprob: -9.125118255615234
    3. 'i' → logprob: -11.875118255615234
    4. '   ' → logprob: -13.125118255615234
    5. '	j' → logprob: -15.625118255615234
    6. '<|end|>' → logprob: -16.000118255615234
    7. '           ' → logprob: -16.500118255615234
    8. '    ' → logprob: -16.500118255615234
    9. '  ' → logprob: -17.000118255615234
    10. '```' → logprob: -17.125118255615234

Token 1006: ' pattern' (ID: 8302)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.32523515378125e-05
    2. 'i' → logprob: -9.875062942504883
    3. '   ' → logprob: -12.000062942504883
    4. '```' → logprob: -13.500062942504883
    5. ' j' → logprob: -13.625062942504883
    6. 'J' → logprob: -14.000062942504883
    7. 'token' → logprob: -15.125062942504883
    8. '       ' → logprob: -15.625062942504883
    9. 'pattern' → logprob: -15.750062942504883
    10. 'I' → logprob: -15.875062942504883

Token 1007: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005016815848648548
    2. '            ' → logprob: -9.00050163269043
    3. '               ' → logprob: -9.12550163269043
    4. '<|end|>' → logprob: -9.12550163269043
    5. '       ' → logprob: -10.37550163269043
    6. '          ' → logprob: -11.00050163269043
    7. '            
' → logprob: -11.12550163269043
    8. '		' → logprob: -11.12550163269043
    9. '   ' → logprob: -11.25050163269043
    10. '                   ' → logprob: -11.50050163269043

Token 1008: ' lui' (ID: 10623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.215330409351736e-05
    2. '   ' → logprob: -10.500041961669922
    3. '       ' → logprob: -12.250041961669922
    4. '		' → logprob: -12.875041961669922
    5. '<|end|>' → logprob: -13.000041961669922
    6. '               ' → logprob: -13.375041961669922
    7. '            
' → logprob: -13.875041961669922
    8. '                   ' → logprob: -14.375041961669922
    9. '	       ' → logprob: -14.875041961669922
    10. '
' → logprob: -15.000041961669922

Token 1009: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.057140883058309555
    2. 'm' → logprob: -2.932140827178955
    3. ' même' → logprob: -7.557140827178955
    4. '>>>' → logprob: -7.682140827178955
    5. '-mêmes' → logprob: -8.432141304016113
    6. '```' → logprob: -8.557141304016113
    7. '   ' → logprob: -8.682141304016113
    8. '#' → logprob: -8.932141304016113
    9. '>>' → logprob: -9.057141304016113
    10. 'Même' → logprob: -9.307141304016113

Token 1010: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.47495681833243e-05
    2. '            
' → logprob: -12.250024795532227
    3. '       ' → logprob: -12.500024795532227
    4. '   ' → logprob: -12.500024795532227
    5. '               ' → logprob: -12.750024795532227
    6. '		' → logprob: -12.875024795532227
    7. '<|end|>' → logprob: -12.875024795532227
    8. '
' → logprob: -13.500024795532227
    9. '                   ' → logprob: -14.500024795532227
    10. '          ' → logprob: -15.000024795532227

Token 1011: '           ' (ID: 352)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.43001025915145874
    2. '           ' → logprob: -1.1800103187561035
    3. 'print' → logprob: -3.1800103187561035
    4. '```' → logprob: -8.180009841918945
    5. '       ' → logprob: -8.805009841918945
    6. '
' → logprob: -9.305009841918945
    7. ' break' → logprob: -10.305009841918945
    8. '            
' → logprob: -10.430009841918945
    9. '#' → logprob: -11.180009841918945
    10. '   ' → logprob: -11.180009841918945

Token 1012: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003182467306032777
    2. 'break' (adapté à ' break') → logprob: -5.753182411193848
    3. '       ' → logprob: -12.753182411193848
    4. ' break' → logprob: -13.753182411193848
    5. '               ' → logprob: -14.753182411193848
    6. '            
' → logprob: -15.503182411193848
    7. '   ' → logprob: -16.128183364868164
    8. 'print' → logprob: -16.628183364868164
    9. '```' → logprob: -17.503183364868164
    10. '		' → logprob: -17.503183364868164

Token 1013: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.15202881395816803
    2. 'print' → logprob: -2.652028799057007
    3. '#' → logprob: -3.027028799057007
    4. 'if' → logprob: -5.277029037475586
    5. 'break' → logprob: -5.652029037475586
    6. '           ' → logprob: -5.902029037475586
    7. '```' → logprob: -5.902029037475586
    8. '   ' → logprob: -6.152029037475586
    9. '
' → logprob: -6.527029037475586
    10. ' else' → logprob: -6.652029037475586

Token 1014: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006293383426964283
    2. ' else' → logprob: -6.006293296813965
    3. '#' → logprob: -6.631293296813965
    4. 'print' → logprob: -7.006293296813965
    5. '   ' → logprob: -7.756293296813965
    6. '<|end|>' → logprob: -8.131293296813965
    7. '```' → logprob: -8.256293296813965
    8. 'if' → logprob: -8.756293296813965
    9. 'for' → logprob: -9.006293296813965
    10. '
' → logprob: -9.131293296813965

Token 1015: ' On' (ID: 2160)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0021370556205511093
    2. '   ' → logprob: -6.502137184143066
    3. ' else' → logprob: -7.627137184143066
    4. '<|end|>' → logprob: -10.002137184143066
    5. '       ' → logprob: -10.502137184143066
    6. '#' → logprob: -10.502137184143066
    7. 'if' → logprob: -11.502137184143066
    8. '```' → logprob: -11.627137184143066
    9. 'print' → logprob: -11.752137184143066
    10. 'continue' → logprob: -12.502137184143066

Token 1016: ' s' (ID: 265)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.003313057590276003
    2. '           ' → logprob: -5.878313064575195
    3. '       ' → logprob: -8.628313064575195
    4. '   ' → logprob: -8.753313064575195
    5. ' break' → logprob: -9.128313064575195
    6. 'else' → logprob: -10.878313064575195
    7. 'continue' → logprob: -11.003313064575195
    8. 'import' → logprob: -12.003313064575195
    9. 'print' → logprob: -12.378313064575195
    10. '	break' → logprob: -12.503313064575195

Token 1017: ''arr' (ID: 49695)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8129622340202332
    2. '           ' → logprob: -1.062962293624878
    3. '   ' → logprob: -1.937962293624878
    4. 'e' → logprob: -3.062962293624878
    5. 'reak' → logprob: -5.312962055206299
    6. 'break' → logprob: -6.062962055206299
    7. '```' → logprob: -6.187962055206299
    8. 'top' → logprob: -6.187962055206299
    9. '=' → logprob: -7.437962055206299
    10. 'ave' → logprob: -7.562962055206299

Token 1018: 'ête' (ID: 16808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07600481808185577
    2. 'et' → logprob: -4.576004981994629
    3. 'ak' → logprob: -4.701004981994629
    4. 'te' → logprob: -4.951004981994629
    5. '           ' → logprob: -5.326004981994629
    6. 'print' → logprob: -6.076004981994629
    7. 'er' → logprob: -6.076004981994629
    8. 'êt' → logprob: -6.201004981994629
    9. '   ' → logprob: -6.326004981994629
    10. 'eat' → logprob: -6.451004981994629

Token 1019: ' dès' (ID: 37926)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1020: ' qu' (ID: 474)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1656252145767212
    2. '           ' → logprob: -1.2906252145767212
    3. 'l' → logprob: -1.6656252145767212
    4. 'la' → logprob: -2.1656250953674316
    5. '#' → logprob: -3.5406250953674316
    6. '       ' → logprob: -3.5406250953674316
    7. '1' → logprob: -3.6656250953674316
    8. '   ' → logprob: -4.415625095367432
    9. 'j' → logprob: -6.290625095367432
    10. '               ' → logprob: -6.290625095367432

Token 1021: ''on' (ID: 25812)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02479127049446106
    2. 'le' → logprob: -4.774791240692139
    3. ' le' → logprob: -5.149791240692139
    4. '   ' → logprob: -6.399791240692139
    5. ' la' → logprob: -6.649791240692139
    6. '       ' → logprob: -7.024791240692139
    7. 'l' → logprob: -7.149791240692139
    8. 'à' → logprob: -7.649791240692139
    9. '          ' → logprob: -7.774791240692139
    10. 'la' → logprob: -7.899791240692139

Token 1022: ' a' (ID: 261)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.04010516777634621
    2. ' trouve' → logprob: -3.790105104446411
    3. 'find' → logprob: -4.16510534286499
    4. 'found' → logprob: -7.29010534286499
    5. 'break' → logprob: -9.040104866027832
    6. '           ' → logprob: -9.165104866027832
    7. '       ' → logprob: -10.165104866027832
    8. '```' → logprob: -10.165104866027832
    9. '#' → logprob: -10.290104866027832
    10. 'en' → logprob: -10.790104866027832

Token 1023: ' trouvé' (ID: 60081)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.011299745179712772
    2. ' trouvé' → logprob: -5.1362996101379395
    3. 'found' → logprob: -5.2612996101379395
    4. ' trouv' → logprob: -9.511300086975098
    5. 'find' → logprob: -10.511300086975098
    6. 'break' → logprob: -11.386300086975098
    7. 'le' → logprob: -11.511300086975098
    8. ' found' → logprob: -11.636300086975098
    9. 'dé' → logprob: -12.011300086975098
    10. ' trou' → logprob: -12.511300086975098

Token 1024: ' une' (ID: 2463)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1025: ' telle' (ID: 70904)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8445017337799072
    2. 'token' → logprob: -1.9695017337799072
    3. '           ' → logprob: -2.2195017337799072
    4. 'solution' → logprob: -2.2195017337799072
    5. ' ' → logprob: -2.3445017337799072
    6. 'valid' → logprob: -2.4695017337799072
    7. 'match' → logprob: -2.9695017337799072
    8. 'val' → logprob: -3.2195017337799072
    9. '```' → logprob: -3.2195017337799072
    10. 'pattern' → logprob: -3.4695017337799072

Token 1026: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occ' → logprob: -1.0001271963119507
    2. 'occur' → logprob: -1.1251271963119507
    3. 'pattern' → logprob: -1.8751271963119507
    4. 'break' → logprob: -2.8751273155212402
    5. 'token' → logprob: -3.7501273155212402
    6. '
' → logprob: -3.8751273155212402
    7. 'instance' → logprob: -4.37512731552124
    8. 'val' → logprob: -5.00012731552124
    9. 'entrée' → logprob: -5.50012731552124
    10. 'solution' → logprob: -5.62512731552124

Token 1027: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1028: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34259653091430664
    2. 'print' → logprob: -1.3425965309143066
    3. 'pattern' → logprob: -4.467596530914307
    4. '```' → logprob: -5.092596530914307
    5. '#' → logprob: -5.342596530914307
    6. 'for' → logprob: -6.217596530914307
    7. 'break' → logprob: -6.342596530914307
    8. 'result' → logprob: -6.717596530914307
    9. 'if' → logprob: -7.217596530914307
    10. ' else' → logprob: -8.342596054077148

Token 1029: ' Aff' (ID: 13741)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3414312601089478
    2. 'pattern' → logprob: -1.4664312601089478
    3. 'res' → logprob: -1.8414312601089478
    4. 'if' → logprob: -1.9664312601089478
    5. '#' → logprob: -1.9664312601089478
    6. 'mot' → logprob: -3.591431140899658
    7. 's' → logprob: -4.091431140899658
    8. 'print' → logprob: -5.341431140899658
    9. 'mask' → logprob: -5.341431140899658
    10. 'S' → logprob: -5.466431140899658

Token 1030: 'ichage' (ID: 118475)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19430561363697052
    2. 'ichage' → logprob: -2.194305658340454
    3. 'icher' → logprob: -3.694305658340454
    4. 'ich' → logprob: -4.069305419921875
    5. 'print' → logprob: -4.319305419921875
    6. 'iche' → logprob: -5.569305419921875
    7. 'f' → logprob: -6.194305419921875
    8. '#print' → logprob: -6.444305419921875
    9. '```' → logprob: -6.694305419921875
    10. '``' → logprob: -8.319305419921875

Token 1031: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25383082032203674
    2. 'pattern' → logprob: -1.5038307905197144
    3. 'prefix' → logprob: -7.378830909729004
    4. 'if' → logprob: -7.878830909729004
    5. 'result' → logprob: -8.003830909729004
    6. 'mask' → logprob: -8.753830909729004
    7. '```' → logprob: -8.878830909729004
    8. 'pat' → logprob: -8.878830909729004
    9. 'bin' → logprob: -9.753830909729004
    10. 'binary' → logprob: -11.003830909729004

Token 1032: ' résultat' (ID: 62556)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.10325722396373749
    2. 'format' → logprob: -2.978257179260254
    3. ''I' → logprob: -3.978257179260254
    4. ''' → logprob: -4.228257179260254
    5. ''{' → logprob: -5.228257179260254
    6. '"{' → logprob: -6.228257179260254
    7. 'I' → logprob: -6.353257179260254
    8. '"' → logprob: -7.103257179260254
    9. ' bin' → logprob: -7.478257179260254
    10. '0' → logprob: -7.478257179260254

Token 1033: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008364811539649963
    2. 'pattern' → logprob: -4.883364677429199
    3. 'result' → logprob: -7.508364677429199
    4. '```' → logprob: -8.8833646774292
    5. 'for' → logprob: -10.1333646774292
    6. 'if' → logprob: -11.5083646774292
    7. 'output' → logprob: -11.7583646774292
    8. 'mask' → logprob: -12.3833646774292
    9. 'pat' → logprob: -12.7583646774292
    10. 'answer' → logprob: -13.5083646774292

Token 1034: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011532626114785671
    2. 'pattern' → logprob: -4.761532783508301
    3. 'result' → logprob: -5.886532783508301
    4. '```' → logprob: -9.8865327835083
    5. 'res' → logprob: -10.1365327835083
    6. 'if' → logprob: -10.6365327835083
    7. 'output' → logprob: -12.2615327835083
    8. 'pat' → logprob: -12.2615327835083
    9. 'mask' → logprob: -12.5115327835083
    10. 'answer' → logprob: -12.7615327835083

Token 1035: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.047594744712114334
    2. 'result' → logprob: -3.7975947856903076
    3. 'pattern' → logprob: -4.2975945472717285
    4. 'if' → logprob: -4.9225945472717285
    5. 'res' → logprob: -5.9225945472717285
    6. 'mot' → logprob: -8.547595024108887
    7. '```' → logprob: -9.672595024108887
    8. 'for' → logprob: -10.297595024108887
    9. 's' → logprob: -10.422595024108887
    10. 'pat' → logprob: -10.422595024108887

Token 1036: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03648583963513374
    2. ''I' → logprob: -3.4114859104156494
    3. ''' → logprob: -6.53648567199707
    4. ' I' → logprob: -7.28648567199707
    5. 'd' → logprob: -7.91148567199707
    6. 'K' → logprob: -9.53648567199707
    7. ''d' → logprob: -9.78648567199707
    8. 'N' → logprob: -9.78648567199707
    9. ''i' → logprob: -10.41148567199707
    10. '(I' → logprob: -10.78648567199707

Token 1037: ' et' (ID: 859)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9626250863075256
    2. '==' → logprob: -1.3376250267028809
    3. ' <' → logprob: -1.9626250267028809
    4. '<=' → logprob: -2.587625026702881
    5. ' ==' → logprob: -2.712625026702881
    6. '>' → logprob: -3.462625026702881
    7. '>=' → logprob: -3.837625026702881
    8. ' <=' → logprob: -4.462625026702881
    9. ' >=' → logprob: -6.212625026702881
    10. ' >' → logprob: -6.212625026702881

Token 1038: ' J' (ID: 643)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.01597207970917225
    2. ''' → logprob: -4.515972137451172
    3. 'I' → logprob: -6.140972137451172
    4. 'K' → logprob: -6.890972137451172
    5. ' J' → logprob: -7.140972137451172
    6. ''I' → logprob: -8.015972137451172
    7. ''i' → logprob: -8.265972137451172
    8. ''s' → logprob: -9.390972137451172
    9. ''d' → logprob: -9.390972137451172
    10. 'j' → logprob: -9.390972137451172

Token 1039: ' sont' (ID: 5242)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4585919976234436
    2. ' in' → logprob: -1.9585919380187988
    3. ' is' → logprob: -2.208591938018799
    4. 'is' → logprob: -2.958591938018799
    5. '!=' → logprob: -3.958591938018799
    6. '>=' → logprob: -4.208591938018799
    7. 'if' → logprob: -5.083591938018799
    8. ':' → logprob: -5.208591938018799
    9. '<' → logprob: -5.208591938018799
    10. ':
' → logprob: -5.708591938018799

Token 1040: ' ég' (ID: 33150)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.211656093597412
    2. 'in' → logprob: -1.961656093597412
    3. ''' → logprob: -2.086656093597412
    4. '0' → logprob: -2.336656093597412
    5. 'None' → logprob: -2.461656093597412
    6. 'I' → logprob: -2.836656093597412
    7. 'defined' → logprob: -3.211656093597412
    8. 'locals' → logprob: -3.211656093597412
    9. ''in' → logprob: -3.336656093597412
    10. ''i' → logprob: -3.961656093597412

Token 1041: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.766221821308136
    2. 'al' → logprob: -0.891221821308136
    3. 'als' → logprob: -2.141221761703491
    4. 'x' → logprob: -6.14122200012207
    5. 'gal' → logprob: -6.14122200012207
    6. 'ale' → logprob: -6.39122200012207
    7. 'ales' → logprob: -6.76622200012207
    8. 'au' → logprob: -9.14122200012207
    9. 'ual' → logprob: -10.14122200012207
    10. 'def' → logprob: -10.51622200012207

Token 1042: ' à' (ID: 1221)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0956972986459732
    2. '==' → logprob: -3.7206974029541016
    3. 'is' → logprob: -3.9706974029541016
    4. ' !=' → logprob: -4.095697402954102
    5. ' is' → logprob: -4.720697402954102
    6. '=' → logprob: -4.845697402954102
    7. '!' → logprob: -4.845697402954102
    8. '>' → logprob: -6.720697402954102
    9. '0' → logprob: -6.970697402954102
    10. 'not' → logprob: -7.095697402954102

Token 1043: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014359879307448864
    2. 'None' → logprob: -4.514359951019287
    3. 'N' → logprob: -6.139359951019287
    4. ' ' → logprob: -7.639359951019287
    5. '-' → logprob: -7.889359951019287
    6. '1' → logprob: -9.639359474182129
    7. 'I' → logprob: -9.889359474182129
    8. ' None' → logprob: -10.139359474182129
    9. 'i' → logprob: -10.639359474182129
    10. '(' → logprob: -10.889359474182129

Token 1044: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02885192073881626
    2. 'N' → logprob: -3.7788519859313965
    3. 'None' → logprob: -5.9038519859313965
    4. '-' → logprob: -6.0288519859313965
    5. 'I' → logprob: -9.153851509094238
    6. ' ' → logprob: -9.528851509094238
    7. 'i' → logprob: -9.778851509094238
    8. '1' → logprob: -9.903851509094238
    9. 'R' → logprob: -9.903851509094238
    10. 'Q' → logprob: -10.903851509094238

Token 1045: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8277220129966736
    2. ':
' → logprob: -1.0777220726013184
    3. ':' → logprob: -1.8277220726013184
    4. '==' → logprob: -3.3277220726013184
    5. ' ==' → logprob: -4.077722072601318
    6. '   ' → logprob: -5.827722072601318
    7. ' and' → logprob: -6.202722072601318
    8. ' if' → logprob: -6.452722072601318
    9. 'print' → logprob: -6.952722072601318
    10. 'and' → logprob: -7.077722072601318

Token 1046: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1661064475774765
    2. 'print' → logprob: -1.9161064624786377
    3. ' if' → logprob: -5.416106224060059
    4. 'I' → logprob: -7.541106224060059
    5. ' print' → logprob: -7.541106224060059
    6. '```' → logprob: -8.916106224060059
    7. '   ' → logprob: -9.041106224060059
    8. 'else' → logprob: -10.041106224060059
    9. ' I' → logprob: -10.166106224060059
    10. '0' → logprob: -11.791106224060059

Token 1047: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.502342939376831
    2. 'else' → logprob: -2.127342939376831
    3. 'if' → logprob: -2.252342939376831
    4. '   ' → logprob: -2.752342939376831
    5. ' print' → logprob: -3.127342939376831
    6. ':' → logprob: -3.877342939376831
    7. '=' → logprob: -4.25234317779541
    8. ' =' → logprob: -4.62734317779541
    9. ' if' → logprob: -5.62734317779541
    10. ' else' → logprob: -6.00234317779541

Token 1048: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15878258645534515
    2. '"' → logprob: -2.033782482147217
    3. ''' → logprob: -4.408782482147217
    4. '-' → logprob: -6.783782482147217
    5. ' ' → logprob: -7.033782482147217
    6. 'print' → logprob: -7.408782482147217
    7. '(' → logprob: -7.908782482147217
    8. 'I' → logprob: -8.783782958984375
    9. '1' → logprob: -9.283782958984375
    10. '("' → logprob: -9.283782958984375

Token 1049: ' chaîne' (ID: 89288)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05009447783231735
    2. '"' → logprob: -3.9250943660736084
    3. ' ' → logprob: -3.9250943660736084
    4. ''' → logprob: -5.5500946044921875
    5. 'print' → logprob: -6.5500946044921875
    6. '-' → logprob: -7.0500946044921875
    7. ' -' → logprob: -8.425094604492188
    8. 'n' → logprob: -8.425094604492188
    9. '(' → logprob: -8.675094604492188
    10. '("' → logprob: -8.675094604492188

Token 1050: ' vide' (ID: 21835)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.10088831186294556
    2. '''' → logprob: -2.850888252258301
    3. '"' → logprob: -3.600888252258301
    4. ''' → logprob: -6.350888252258301
    5. 'print' → logprob: -6.475888252258301
    6. 'vide' → logprob: -6.725888252258301
    7. '("")' → logprob: -6.975888252258301
    8. '''
' → logprob: -7.350888252258301
    9. '```' → logprob: -7.725888252258301
    10. 'if' → logprob: -7.725888252258301

Token 1051: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6510248780250549
    2. 'print' → logprob: -0.9010248780250549
    3. '
' → logprob: -2.65102481842041
    4. '""' → logprob: -6.77602481842041
    5. ' if' → logprob: -8.77602481842041
    6. '''' → logprob: -9.40102481842041
    7. '```' → logprob: -9.77602481842041
    8. '''
' → logprob: -10.02602481842041
    9. '
' → logprob: -10.40102481842041
    10. 'else' → logprob: -10.52602481842041

Token 1052: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3886905908584595
    2. 'print' → logprob: -1.1386905908584595
    3. '```' → logprob: -7.01369047164917
    4. ' if' → logprob: -7.63869047164917
    5. 'else' → logprob: -8.513690948486328
    6. '
' → logprob: -9.013690948486328
    7. '``' → logprob: -10.013690948486328
    8. 'result' → logprob: -11.263690948486328
    9. '""' → logprob: -11.388690948486328
    10. 'I' → logprob: -11.513690948486328

Token 1053: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31405115127563477
    2. 'print' → logprob: -1.3140511512756348
    3. 'result' → logprob: -8.064050674438477
    4. '```' → logprob: -8.314050674438477
    5. ' if' → logprob: -9.189050674438477
    6. '
' → logprob: -10.064050674438477
    7. 'pattern' → logprob: -10.314050674438477
    8. 'I' → logprob: -10.439050674438477
    9. '``' → logprob: -11.689050674438477
    10. 'else' → logprob: -12.439050674438477

Token 1054: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0045499843545258045
    2. 'if' → logprob: -6.254549980163574
    3. 'pattern' → logprob: -6.629549980163574
    4. '   ' → logprob: -6.879549980163574
    5. ' print' → logprob: -8.504549980163574
    6. ':
' → logprob: -11.379549980163574
    7. '       ' → logprob: -11.879549980163574
    8. ' if' → logprob: -11.879549980163574
    9. 'bin' → logprob: -12.254549980163574
    10. 'result' → logprob: -12.379549980163574

Token 1055: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.68153518543113e-05
    2. 'pattern' → logprob: -10.500057220458984
    3. ' print' → logprob: -10.625057220458984
    4. '
' → logprob: -12.875057220458984
    5. 'result' → logprob: -13.375057220458984
    6. '   ' → logprob: -14.750057220458984
    7. '```' → logprob: -15.875057220458984
    8. 'bin' → logprob: -17.000057220458984
    9. 'for' → logprob: -17.000057220458984
    10. 's' → logprob: -17.000057220458984

Token 1056: ' convert' (ID: 8452)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023437771014869213
    2. 'for' → logprob: -6.752343654632568
    3. '#' → logprob: -8.002344131469727
    4. ' print' → logprob: -8.127344131469727
    5. ':
' → logprob: -8.877344131469727
    6. ' =' → logprob: -9.002344131469727
    7. '
' → logprob: -10.127344131469727
    8. 'def' → logprob: -10.252344131469727
    9. 'output' → logprob: -10.377344131469727
    10. 's' → logprob: -10.502344131469727

Token 1057: 'it' (ID: 278)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5969831347465515
    2. 'I' → logprob: -1.7219831943511963
    3. 'bin' → logprob: -2.5969831943511963
    4. 'e' → logprob: -2.8469831943511963
    5. 'ir' → logprob: -3.2219831943511963
    6. 'er' → logprob: -3.4719831943511963
    7. ')' → logprob: -4.471982955932617
    8. '```' → logprob: -4.846982955932617
    9. '(I' → logprob: -4.971982955932617
    10. 'i' → logprob: -5.346982955932617

Token 1058: ' J' (ID: 643)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.029951108619570732
    2. 'format' → logprob: -3.5299510955810547
    3. '(bin' → logprob: -9.654951095581055
    4. '   ' → logprob: -9.904951095581055
    5. ' bin' → logprob: -10.404951095581055
    6. 'print' → logprob: -11.154951095581055
    7. ' format' → logprob: -11.529951095581055
    8. '```' → logprob: -11.654951095581055
    9. 'I' → logprob: -11.904951095581055
    10. '(format' → logprob: -11.904951095581055

Token 1059: ' en' (ID: 469)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.03847656026482582
    2. ' bin' → logprob: -4.538476467132568
    3. '(bin' → logprob: -4.913476467132568
    4. ',' → logprob: -5.038476467132568
    5. 'to' → logprob: -5.663476467132568
    6. '```' → logprob: -6.163476467132568
    7. ' to' → logprob: -6.538476467132568
    8. 'format' → logprob: -6.913476467132568
    9. ' ' → logprob: -7.288476467132568
    10. 'I' → logprob: -7.288476467132568

Token 1060: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0001698094274615869
    2. 'format' → logprob: -8.75016975402832
    3. ' bin' → logprob: -11.50016975402832
    4. '(bin' → logprob: -14.75016975402832
    5. ''{' → logprob: -15.87516975402832
    6. '/bin' → logprob: -16.00016975402832
    7. 'f' → logprob: -16.00016975402832
    8. ' format' → logprob: -16.37516975402832
    9. '```' → logprob: -16.50016975402832
    10. '''' → logprob: -16.62516975402832

Token 1061: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00433979881927371
    2. ''' → logprob: -6.379339694976807
    3. 'inary' → logprob: -6.379339694976807
    4. 'inaire' → logprob: -7.879339694976807
    5. 'bin' → logprob: -8.629340171813965
    6. 'inar' → logprob: -9.754340171813965
    7. 'ina' → logprob: -9.879340171813965
    8. ''in' → logprob: -9.879340171813965
    9. ''{' → logprob: -10.129340171813965
    10. 'format' → logprob: -10.254340171813965

Token 1062: ' (' (ID: 350)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.4618827700614929
    2. ',' → logprob: -2.0868828296661377
    3. '[' → logprob: -2.3368828296661377
    4. '[I' → logprob: -3.0868828296661377
    5. 'format' → logprob: -3.3368828296661377
    6. '(bin' → logprob: -3.3368828296661377
    7. 'if' → logprob: -5.586882591247559
    8. '```' → logprob: -5.586882591247559
    9. '[::-' → logprob: -5.836882591247559
    10. ' bin' → logprob: -5.961882591247559

Token 1063: 's' (ID: 82)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.010000431910157204
    2. 'format' → logprob: -5.385000228881836
    3. '(bin' → logprob: -5.635000228881836
    4. ')' → logprob: -7.635000228881836
    5. ')[' → logprob: -8.260000228881836
    6. ' bin' → logprob: -8.260000228881836
    7. '```' → logprob: -8.510000228881836
    8. ',' → logprob: -9.385000228881836
    9. '[I' → logprob: -9.385000228881836
    10. '
' → logprob: -9.510000228881836

Token 1064: 'ous' (ID: 784)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00026419671485200524
    2. 'bin' → logprob: -10.000264167785645
    3. '   ' → logprob: -10.375264167785645
    4. ''' → logprob: -10.375264167785645
    5. 'format' → logprob: -10.750264167785645
    6. ''{' → logprob: -11.000264167785645
    7. ' in' → logprob: -11.125264167785645
    8. 'inary' → logprob: -11.125264167785645
    9. ' format' → logprob: -11.375264167785645
    10. 'inaire' → logprob: -11.500264167785645

Token 1065: ' forme' (ID: 27450)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.00943505484610796
    2. 'format' → logprob: -5.259435176849365
    3. 'b' → logprob: -5.884435176849365
    4. ' bin' → logprob: -7.134435176849365
    5. 'f' → logprob: -8.634434700012207
    6. '```' → logprob: -9.134434700012207
    7. ''' → logprob: -9.884434700012207
    8. '-bin' → logprob: -10.259434700012207
    9. '(bin' → logprob: -10.259434700012207
    10. ''b' → logprob: -10.384434700012207

Token 1066: ' de' (ID: 334)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.06033489108085632
    2. 'format' → logprob: -3.4353349208831787
    3. '(bin' → logprob: -3.8103349208831787
    4. 'b' → logprob: -6.5603346824646
    5. '(format' → logprob: -6.6853346824646
    6. '```' → logprob: -8.060335159301758
    7. ' bin' → logprob: -8.185335159301758
    8. ')' → logprob: -8.185335159301758
    9. '=format' → logprob: -8.185335159301758
    10. 'f' → logprob: -9.560335159301758

Token 1067: ' chaîne' (ID: 89288)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.02985971048474312
    2. 'format' → logprob: -3.654859781265259
    3. 'f' → logprob: -5.77985954284668
    4. ' bin' → logprob: -8.15485954284668
    5. 'b' → logprob: -9.40485954284668
    6. ' format' → logprob: -9.77985954284668
    7. '(bin' → logprob: -10.65485954284668
    8. '```' → logprob: -12.40485954284668
    9. '
' → logprob: -13.40485954284668
    10. ''{' → logprob: -13.77985954284668

Token 1068: ' sans' (ID: 9828)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.9061746001243591
    2. 'bin' → logprob: -1.406174659729004
    3. '(bin' → logprob: -1.906174659729004
    4. '[I' → logprob: -2.906174659729004
    5. '```' → logprob: -3.406174659729004
    6. ',' → logprob: -3.406174659729004
    7. '()' → logprob: -4.156174659729004
    8. '[' → logprob: -4.531174659729004
    9. '[::-' → logprob: -4.656174659729004
    10. '(I' → logprob: -4.906174659729004

Token 1069: ' le' (ID: 505)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.05308203771710396
    2. 'b' → logprob: -3.17808198928833
    3. ''b' → logprob: -5.17808198928833
    4. ' bin' → logprob: -6.30308198928833
    5. ''' → logprob: -7.17808198928833
    6. 'format' → logprob: -7.67808198928833
    7. '0' → logprob: -7.80308198928833
    8. 'prefix' → logprob: -8.678082466125488
    9. '```' → logprob: -8.803082466125488
    10. 'print' → logprob: -9.053082466125488

Token 1070: ' pré' (ID: 9424)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4958221912384033
    2. 'b' → logprob: -0.9958221912384033
    3. ''' → logprob: -4.245821952819824
    4. ''b' → logprob: -5.120821952819824
    5. 'bin' → logprob: -6.870821952819824
    6. ' '' → logprob: -9.620821952819824
    7. '2' → logprob: -10.245821952819824
    8. ' b' → logprob: -10.620821952819824
    9. ' bin' → logprob: -11.245821952819824
    10. '```' → logprob: -11.495821952819824

Token 1071: 'fix' (ID: 11853)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07937495410442352
    2. 'b' → logprob: -2.5793750286102295
    3. 'x' → logprob: -8.329375267028809
    4. 'bin' → logprob: -8.829375267028809
    5. 'f' → logprob: -10.079375267028809
    6. 'fix' → logprob: -11.579375267028809
    7. 'ob' → logprob: -11.829375267028809
    8. 'r' → logprob: -11.954375267028809
    9. '```' → logprob: -11.954375267028809
    10. 'prefix' → logprob: -12.329375267028809

Token 1072: 'e' (ID: 68)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2308900356292725
    2. ''b' → logprob: -1.4808900356292725
    3. ''' → logprob: -1.6058900356292725
    4. '0' → logprob: -1.9808900356292725
    5. 'bin' → logprob: -2.8558900356292725
    6. 'r' → logprob: -4.230890274047852
    7. '"' → logprob: -4.355890274047852
    8. 'str' → logprob: -4.605890274047852
    9. ' '' → logprob: -4.730890274047852
    10. 'x' → logprob: -4.730890274047852

Token 1073: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32138732075691223
    2. '0' → logprob: -1.5713872909545898
    3. 'bin' → logprob: -2.82138729095459
    4. ''b' → logprob: -5.69638729095459
    5. '"' → logprob: -5.82138729095459
    6. 'b' → logprob: -7.07138729095459
    7. ' bin' → logprob: -8.82138729095459
    8. ' '' → logprob: -8.82138729095459
    9. '`' → logprob: -9.82138729095459
    10. '```' → logprob: -10.57138729095459

Token 1074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020290186628699303
    2. ''' → logprob: -4.520290374755859
    3. 'b' → logprob: -4.770290374755859
    4. 'bin' → logprob: -7.895290374755859
    5. ''b' → logprob: -8.02029037475586
    6. ' '' → logprob: -11.64529037475586
    7. '"' → logprob: -12.27029037475586
    8. ' bin' → logprob: -12.77029037475586
    9. '2' → logprob: -12.89529037475586
    10. '`' → logprob: -14.27029037475586

Token 1075: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.2200749754119897e-06
    2. 'bin' → logprob: -13.625001907348633
    3. ':b' → logprob: -14.625001907348633
    4. '2' → logprob: -15.875001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'x' → logprob: -16.500001907348633
    7. '	b' → logprob: -16.500001907348633
    8. ''b' → logprob: -17.000001907348633
    9. '>b' → logprob: -17.500001907348633
    10. '#' → logprob: -17.750001907348633

Token 1076: ''),
' (ID: 7239)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.9165247678756714
    2. 'bin' → logprob: -1.5415247678756714
    3. '(bin' → logprob: -2.041524887084961
    4. '[I' → logprob: -2.041524887084961
    5. '[J' → logprob: -3.541524887084961
    6. '[' → logprob: -3.541524887084961
    7. ')' → logprob: -4.291524887084961
    8. '()[' → logprob: -4.416524887084961
    9. '')[' → logprob: -4.541524887084961
    10. '[j' → logprob: -5.541524887084961

Token 1077: '#' (ID: 2)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.023243146017193794
    2. 'print' → logprob: -4.398242950439453
    3. ' bin' → logprob: -5.023242950439453
    4. '   ' → logprob: -5.773242950439453
    5. 'format' → logprob: -7.398242950439453
    6. '(bin' → logprob: -8.773242950439453
    7. 'f' → logprob: -9.773242950439453
    8. '       ' → logprob: -10.773242950439453
    9. ',' → logprob: -11.273242950439453
    10. 'if' → logprob: -11.398242950439453

Token 1078: ' puis' (ID: 18766)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014514153823256493
    2. ' print' → logprob: -4.764513969421387
    3. 'if' → logprob: -6.139513969421387
    4. 'bin' → logprob: -6.139513969421387
    5. 'result' → logprob: -7.514513969421387
    6. '   ' → logprob: -7.889513969421387
    7. 'pattern' → logprob: -8.389513969421387
    8. ' if' → logprob: -9.014513969421387
    9. ' bin' → logprob: -9.639513969421387
    10. 'else' → logprob: -10.139513969421387

Token 1079: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001733855315251276
    2. ' print' → logprob: -8.875173568725586
    3. 'bin' → logprob: -11.000173568725586
    4. 'z' → logprob: -11.500173568725586
    5. '   ' → logprob: -13.500173568725586
    6. '
' → logprob: -14.000173568725586
    7. '           ' → logprob: -14.500173568725586
    8. '.' → logprob: -14.750173568725586
    9. '       ' → logprob: -14.875173568725586
    10. 'l' → logprob: -15.125173568725586

Token 1080: ' complète' (ID: 75660)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006010444834828377
    2. 'z' → logprob: -5.13101053237915
    3. 'r' → logprob: -10.631010055541992
    4. 'pad' → logprob: -11.006010055541992
    5. ' print' → logprob: -11.381010055541992
    6. '=' → logprob: -11.506010055541992
    7. ' =' → logprob: -12.506010055541992
    8. 'fill' → logprob: -12.756010055541992
    9. 'p' → logprob: -13.131010055541992
    10. '.z' → logprob: -13.131010055541992

Token 1081: ' par' (ID: 686)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.07314445823431015
    2. 'print' → logprob: -4.073144435882568
    3. '```' → logprob: -4.948144435882568
    4. ''' → logprob: -5.448144435882568
    5. 'with' → logprob: -5.448144435882568
    6. '("' → logprob: -5.573144435882568
    7. '<|end|>' → logprob: -5.573144435882568
    8. '(' → logprob: -5.698144435882568
    9. 'bin' → logprob: -5.698144435882568
    10. '(bin' → logprob: -6.073144435882568

Token 1082: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01668628677725792
    2. ' '' → logprob: -4.51668643951416
    3. ' leading' → logprob: -6.64168643951416
    4. '"' → logprob: -6.76668643951416
    5. ''z' → logprob: -7.01668643951416
    6. '0' → logprob: -7.39168643951416
    7. 'z' → logprob: -8.01668643951416
    8. '('' → logprob: -8.64168643951416
    9. 'leading' → logprob: -8.64168643951416
    10. ''l' → logprob: -9.26668643951416

Token 1083: ' z' (ID: 579)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7344452738761902
    2. '0' → logprob: -0.7344452738761902
    3. 'z' → logprob: -3.359445333480835
    4. 'zeros' → logprob: -6.734445095062256
    5. ' ' → logprob: -7.359445095062256
    6. ' leading' → logprob: -7.359445095062256
    7. '"' → logprob: -7.359445095062256
    8. 'leading' → logprob: -7.484445095062256
    9. ' zeros' → logprob: -7.734445095062256
    10. 'print' → logprob: -7.859445095062256

Token 1084: 'éros' (ID: 120888)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10678090900182724
    2. ''' → logprob: -2.481781005859375
    3. '"' → logprob: -4.981781005859375
    4. '`' → logprob: -6.231781005859375
    5. '0' → logprob: -6.481781005859375
    6. 'fill' → logprob: -6.606781005859375
    7. 'r' → logprob: -6.856781005859375
    8. ''in' → logprob: -6.981781005859375
    9. 'inary' → logprob: -7.231781005859375
    10. '#' → logprob: -7.481781005859375

Token 1085: ' à' (ID: 1221)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.6524251103401184
    2. '=' → logprob: -2.1524250507354736
    3. 'z' → logprob: -2.5274250507354736
    4. '[' → logprob: -2.9024250507354736
    5. '```' → logprob: -3.4024250507354736
    6. '.z' → logprob: -3.5274250507354736
    7. ' =' → logprob: -3.6524250507354736
    8. 'J' → logprob: -4.027425289154053
    9. '(' → logprob: -4.277425289154053
    10. 's' → logprob: -4.402425289154053

Token 1086: ' gauche' (ID: 58367)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.08889409154653549
    2. ''I' → logprob: -3.5888941287994385
    3. '0' → logprob: -4.213893890380859
    4. ' I' → logprob: -4.588893890380859
    5. '(I' → logprob: -4.713893890380859
    6. 'the' → logprob: -5.213893890380859
    7. 'l' → logprob: -5.963893890380859
    8. 'left' → logprob: -6.088893890380859
    9. '.I' → logprob: -6.463893890380859
    10. 's' → logprob: -6.463893890380859

Token 1087: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7683475613594055
    2. '(' → logprob: -1.8933475017547607
    3. ',' → logprob: -2.0183475017547607
    4. 'J' → logprob: -3.2683475017547607
    5. 'bin' → logprob: -3.6433475017547607
    6. '[::-' → logprob: -4.01834774017334
    7. ' =' → logprob: -4.26834774017334
    8. '[' → logprob: -4.26834774017334
    9. '=' → logprob: -4.51834774017334
    10. 'output' → logprob: -4.64334774017334

Token 1088: ' obtenir' (ID: 54423)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.04993436858057976
    2. ' I' → logprob: -3.9249343872070312
    3. 'length' → logprob: -3.9249343872070312
    4. ' length' → logprob: -5.924934387207031
    5. 'l' → logprob: -6.424934387207031
    6. 'len' → logprob: -6.924934387207031
    7. 'width' → logprob: -7.174934387207031
    8. ' width' → logprob: -7.799934387207031
    9. 'fill' → logprob: -7.924934387207031
    10. '_I' → logprob: -8.174934387207031

Token 1089: ' une' (ID: 2463)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.01764046959578991
    2. ' I' → logprob: -4.642640590667725
    3. ''I' → logprob: -5.017640590667725
    4. 'str' → logprob: -7.642640590667725
    5. '_I' → logprob: -8.517640113830566
    6. 'f' → logprob: -9.392640113830566
    7. '.I' → logprob: -9.517640113830566
    8. 'i' → logprob: -9.767640113830566
    9. ''' → logprob: -9.767640113830566
    10. '0' → logprob: -10.017640113830566

Token 1090: ' chaîne' (ID: 89288)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.37540143728256226
    2. 'bin' → logprob: -2.250401496887207
    3. '0' → logprob: -2.375401496887207
    4. 'b' → logprob: -3.750401496887207
    5. 'width' → logprob: -4.000401496887207
    6. '{' → logprob: -4.625401496887207
    7. 'binary' → logprob: -4.625401496887207
    8. '_I' → logprob: -5.125401496887207
    9. ' I' → logprob: -5.375401496887207
    10. ''I' → logprob: -5.500401496887207

Token 1091: ' de' (ID: 334)
  Prédit: '.z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.39473283290863037
    2. 'z' → logprob: -1.6447328329086304
    3. '=' → logprob: -2.76973295211792
    4. '.' → logprob: -3.39473295211792
    5. '.r' → logprob: -4.89473295211792
    6. ' =' → logprob: -4.89473295211792
    7. '.I' → logprob: -5.14473295211792
    8. 'b' → logprob: -6.01973295211792
    9. 'I' → logprob: -6.14473295211792
    10. ' .' → logprob: -6.26973295211792

Token 1092: ' longueur' (ID: 104613)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.10322088748216629
    2. 'length' → logprob: -2.3532209396362305
    3. ' I' → logprob: -6.3532209396362305
    4. ' length' → logprob: -6.9782209396362305
    5. ' longueur' → logprob: -9.22822093963623
    6. 'long' → logprob: -10.22822093963623
    7. ''I' → logprob: -10.35322093963623
    8. '.I' → logprob: -10.35322093963623
    9. '_I' → logprob: -10.60322093963623
    10. '-length' → logprob: -10.97822093963623

Token 1093: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0006694287294521928
    2. ' I' → logprob: -7.375669479370117
    3. 'i' → logprob: -10.750669479370117
    4. '(I' → logprob: -10.875669479370117
    5. '_I' → logprob: -14.375669479370117
    6. '`' → logprob: -15.000669479370117
    7. '```' → logprob: -15.000669479370117
    8. ' ' → logprob: -15.125669479370117
    9. ' i' → logprob: -15.125669479370117
    10. '+' → logprob: -15.125669479370117

Token 1094: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03316308557987213
    2. 'result' → logprob: -3.783163070678711
    3. '
' → logprob: -5.533163070678711
    4. 'pattern' → logprob: -5.658163070678711
    5. 'if' → logprob: -6.158163070678711
    6. 's' → logprob: -9.283163070678711
    7. 'res' → logprob: -9.408163070678711
    8. 'answer' → logprob: -10.283163070678711
    9. 'output' → logprob: -10.908163070678711
    10. 'bin' → logprob: -11.033163070678711

Token 1095: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0650324821472168
    2. 'if' → logprob: -2.815032482147217
    3. 'result' → logprob: -5.815032482147217
    4. 'pattern' → logprob: -9.815032958984375
    5. '```' → logprob: -11.815032958984375
    6. ' if' → logprob: -12.190032958984375
    7. '
' → logprob: -12.565032958984375
    8. 'output' → logprob: -13.065032958984375
    9. ' print' → logprob: -13.440032958984375
    10. 'res' → logprob: -13.690032958984375

Token 1096: '('' (ID: 706)
  Prédit: '(bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.006630812771618366
    2. '(f' → logprob: -6.131630897521973
    3. '('' → logprob: -6.256630897521973
    4. '(format' → logprob: -6.631630897521973
    5. 'bin' → logprob: -7.006630897521973
    6. '(('' → logprob: -9.381630897521973
    7. '(str' → logprob: -9.631630897521973
    8. '(' → logprob: -9.756630897521973
    9. '((' → logprob: -10.506630897521973
    10. '("' → logprob: -10.881630897521973

Token 1097: ''' (ID: 6)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.24117346107959747
    2. 'format' → logprob: -1.866173505783081
    3. ''' → logprob: -3.491173505783081
    4. '('' → logprob: -4.491173267364502
    5. '{' → logprob: -5.241173267364502
    6. '0' → logprob: -5.741173267364502
    7. '''' → logprob: -5.866173267364502
    8. 'J' → logprob: -6.366173267364502
    9. '(bin' → logprob: -6.366173267364502
    10. 'f' → logprob: -7.866173267364502

Token 1098: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09460917115211487
    2. ' if' → logprob: -2.469609260559082
    3. '.z' → logprob: -5.594609260559082
    4. '.' → logprob: -6.719609260559082
    5. ')' → logprob: -7.594609260559082
    6. 'z' → logprob: -9.219609260559082
    7. '.r' → logprob: -9.969609260559082
    8. '   ' → logprob: -11.094609260559082
    9. ' ' → logprob: -11.094609260559082
    10. ',' → logprob: -11.969609260559082

Token 1099: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.0002529952325858176
    2. 'J' → logprob: -9.125252723693848
    3. ' I' → logprob: -9.125252723693848
    4. 'K' → logprob: -10.625252723693848
    5. '(I' → logprob: -12.000252723693848
    6. ''I' → logprob: -13.000252723693848
    7. 'not' → logprob: -13.500252723693848
    8. '0' → logprob: -14.750252723693848
    9. ' ' → logprob: -14.875252723693848
    10. 'd' → logprob: -16.500253677368164

Token 1100: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.048591457307338715
    2. ' ==' → logprob: -3.048591375350952
    3. '==
' → logprob: -12.923591613769531
    4. '0' → logprob: -14.673591613769531
    5. '=' → logprob: -14.923591613769531
    6. 'else' → logprob: -15.298591613769531
    7. '```' → logprob: -15.923591613769531
    8. ' ' → logprob: -16.67359161376953
    9. ' else' → logprob: -16.67359161376953
    10. ')' → logprob: -16.67359161376953

Token 1101: ' J' (ID: 643)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '=' → logprob: -22.000123977661133
    4. '```' → logprob: -22.375123977661133
    5. ' ' → logprob: -22.625123977661133
    6. '۰' → logprob: -22.875123977661133
    7. ' ' → logprob: -23.375123977661133
    8. '
' → logprob: -23.375123977661133
    9. '  ' → logprob: -23.500123977661133
    10. '   ' → logprob: -23.750123977661133

Token 1102: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13701394200325012
    2. 'else' → logprob: -2.3870139122009277
    3. ' else' → logprob: -3.3870139122009277
    4. ' ==' → logprob: -6.387013912200928
    5. '0' → logprob: -7.512013912200928
    6. ' ' → logprob: -9.512014389038086
    7. 'and' → logprob: -11.512014389038086
    8. '!=' → logprob: -12.262014389038086
    9. '  ' → logprob: -13.262014389038086
    10. ' and' → logprob: -13.387014389038086

Token 1103: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -22.0
    4. '
' → logprob: -23.0
    5. '=' → logprob: -23.375
    6. '０' → logprob: -23.5
    7. '   ' → logprob: -24.125
    8. ' ' → logprob: -24.25
    9. '00' → logprob: -24.375
    10. '```' → logprob: -24.375

Token 1104: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -22.125
    4. '```' → logprob: -22.5
    5. '０' → logprob: -22.625
    6. '=' → logprob: -23.0
    7. '00' → logprob: -23.375
    8. '
' → logprob: -23.5
    9. ' ' → logprob: -23.625
    10. '   ' → logprob: -23.625

Token 1105: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0007107630372047424
    2. ' else' → logprob: -7.250710964202881
    3. '
' → logprob: -14.500710487365723
    4. '   ' → logprob: -16.25071144104004
    5. '```' → logprob: -16.50071144104004
    6. ' ' → logprob: -17.00071144104004
    7. '	else' → logprob: -17.37571144104004
    8. '     ' → logprob: -18.62571144104004
    9. '

' → logprob: -19.00071144104004
    10. '  ' → logprob: -19.37571144104004

Token 1106: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.006726144813001156
    2. 'format' → logprob: -5.006726264953613
    3. ' bin' → logprob: -12.256726264953613
    4. '(bin' → logprob: -12.381726264953613
    5. 'f' → logprob: -13.506726264953613
    6. ' format' → logprob: -15.381726264953613
    7. 'str' → logprob: -16.381725311279297
    8. '   ' → logprob: -16.756725311279297
    9. 'binary' → logprob: -17.881725311279297
    10. ''{' → logprob: -17.881725311279297

Token 1107: '(J' (ID: 25268)
  Prédit: '(J'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(J' → logprob: -7.3458322731312364e-06
    2. 'J' → logprob: -12.250007629394531
    3. '(I' → logprob: -13.750007629394531
    4. '(' → logprob: -14.500007629394531
    5. '(j' → logprob: -14.500007629394531
    6. '[J' → logprob: -14.875007629394531
    7. ')' → logprob: -17.75000762939453
    8. '(
' → logprob: -18.50000762939453
    9. ' (' → logprob: -18.75000762939453
    10. ' J' → logprob: -19.00000762939453

Token 1108: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00013572083844337612
    2. '[I' → logprob: -9.25013542175293
    3. '(I' → logprob: -10.87513542175293
    4. '())[' → logprob: -11.87513542175293
    5. ').' → logprob: -12.12513542175293
    6. ' )[' → logprob: -12.62513542175293
    7. ')' → logprob: -13.37513542175293
    8. '')[' → logprob: -13.87513542175293
    9. 'I' → logprob: -14.25013542175293
    10. '(i' → logprob: -14.75013542175293

Token 1109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030614540446549654
    2. ')[' → logprob: -8.875306129455566
    3. '][' → logprob: -9.125306129455566
    4. '[' → logprob: -11.000306129455566
    5. '[I' → logprob: -11.250306129455566
    6. 'I' → logprob: -11.625306129455566
    7. '
' → logprob: -12.500306129455566
    8. ':' → logprob: -12.750306129455566
    9. ':I' → logprob: -13.125306129455566
    10. '])[' → logprob: -13.500306129455566

Token 1110: ':].' (ID: 193388)
  Prédit: ':].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':].' → logprob: -0.006974067073315382
    2. ').' → logprob: -5.506974220275879
    3. ':' → logprob: -6.506974220275879
    4. ':I' → logprob: -6.881974220275879
    5. '].' → logprob: -8.256974220275879
    6. '.' → logprob: -9.881974220275879
    7. '}.' → logprob: -11.631974220275879
    8. '.z' → logprob: -11.881974220275879
    9. '```' → logprob: -12.131974220275879
    10. ':z' → logprob: -12.131974220275879

Token 1111: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0003461905289441347
    2. 'r' → logprob: -8.000346183776855
    3. '.z' → logprob: -11.500346183776855
    4. ' z' → logprob: -14.375346183776855
    5. '```' → logprob: -18.250347137451172
    6. 'fill' → logprob: -19.125347137451172
    7. ''z' → logprob: -19.125347137451172
    8. 'rstrip' → logprob: -19.250347137451172
    9. 'zr' → logprob: -19.625347137451172
    10. '	z' → logprob: -19.750347137451172

Token 1112: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -1.7432603272027336e-06
    2. 'filled' → logprob: -13.875001907348633
    3. 'pad' → logprob: -15.375001907348633
    4. '_fill' → logprob: -15.500001907348633
    5. '```' → logprob: -15.750001907348633
    6. '-fill' → logprob: -16.125001907348633
    7. '.fill' → logprob: -16.375001907348633
    8. '(fill' → logprob: -17.625001907348633
    9. '`' → logprob: -18.000001907348633
    10. '``' → logprob: -18.375001907348633

Token 1113: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -9.627176768844947e-05
    2. 'I' → logprob: -9.250096321105957
    3. '(' → logprob: -16.75009536743164
    4. '(i' → logprob: -17.25009536743164
    5. ' (' → logprob: -19.50009536743164
    6. '```' → logprob: -20.12509536743164
    7. '(
' → logprob: -20.37509536743164
    8. ' I' → logprob: -20.50009536743164
    9. '[I' → logprob: -20.50009536743164
    10. '	I' → logprob: -21.12509536743164

Token 1114: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0040823169983923435
    2. ')' → logprob: -5.504082202911377
    3. ')))' → logprob: -12.879082679748535
    4. '()))' → logprob: -14.254082679748535
    5. ''))' → logprob: -15.379082679748535
    6. '))
' → logprob: -15.504082679748535
    7. ' ))' → logprob: -15.754082679748535
    8. '())' → logprob: -17.00408172607422
    9. '])' → logprob: -17.62908172607422
    10. '),' → logprob: -17.87908172607422

Token 1115: ' ' (ID: 220)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.07829206436872482
    2. '<|end|>' → logprob: -2.82829213142395
    3. '#' → logprob: -4.828291893005371
    4. '
' → logprob: -4.953291893005371
    5. '```' → logprob: -8.203291893005371
    6. ' I' → logprob: -8.203291893005371
    7. '<|end|>' → logprob: -8.703291893005371
    8. '  
' → logprob: -9.828291893005371
    9. ' ' → logprob: -9.953291893005371
    10. '    
' → logprob: -10.453291893005371

Token 1116: ' #' (ID: 1069)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.13719168305397034
    2. '#' → logprob: -2.2621917724609375
    3. '<|end|>' → logprob: -4.1371917724609375
    4. 'Name' → logprob: -5.8871917724609375
    5. '
' → logprob: -6.5121917724609375
    6. '```' → logprob: -6.7621917724609375
    7. 'R' → logprob: -7.7621917724609375
    8. 'Trace' → logprob: -7.7621917724609375
    9. ')' → logprob: -8.387191772460938
    10. ':' → logprob: -8.512191772460938

Token 1117: ' [' (ID: 723)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.022811055183410645
    2. '#' → logprob: -4.397810935974121
    3. '<|end|>' → logprob: -4.772810935974121
    4. 'R' → logprob: -7.147810935974121
    5. '```' → logprob: -8.647810935974121
    6. '
' → logprob: -8.772810935974121
    7. '0' → logprob: -9.022810935974121
    8. ' ' → logprob: -9.272810935974121
    9. ' I' → logprob: -9.522810935974121
    10. 'J' → logprob: -9.647810935974121

Token 1118: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009998897090554237
    2. '])' → logprob: -5.634998798370361
    3. ']' → logprob: -5.884998798370361
    4. ')])' → logprob: -6.259998798370361
    5. ')]' → logprob: -6.884998798370361
    6. '0' → logprob: -8.75999927520752
    7. '#' → logprob: -9.63499927520752
    8. '```' → logprob: -9.75999927520752
    9. '<|end|>' → logprob: -9.88499927520752
    10. ')
' → logprob: -10.13499927520752

Token 1119: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12503190338611603
    2. '])' → logprob: -2.6250319480895996
    3. ')' → logprob: -3.3750319480895996
    4. ':]' → logprob: -5.6250319480896
    5. ':)' → logprob: -5.6250319480896
    6. ':].' → logprob: -6.5000319480896
    7. ')])' → logprob: -6.7500319480896
    8. ']' → logprob: -7.7500319480896
    9. ']))' → logprob: -8.625031471252441
    10. '))' → logprob: -9.375031471252441

Token 1120: ' retire' (ID: 48410)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1121: ' le' (ID: 505)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023606636095792055
    2. ''' → logprob: -6.627360820770264
    3. '0' → logprob: -7.002360820770264
    4. ' ' → logprob: -9.627360343933105
    5. '"' → logprob: -9.877360343933105
    6. '3' → logprob: -13.252360343933105
    7. '  ' → logprob: -13.877360343933105
    8. '   ' → logprob: -14.002360343933105
    9. 'print' → logprob: -14.127360343933105
    10. ' '' → logprob: -14.752360343933105

Token 1122: ' pré' (ID: 9424)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4526199400424957
    2. '2' → logprob: -1.3276199102401733
    3. ''' → logprob: -2.327620029449463
    4. '"' → logprob: -7.077620029449463
    5. ' ' → logprob: -8.077619552612305
    6. 'b' → logprob: -8.827619552612305
    7. 'prefix' → logprob: -10.827619552612305
    8. '`' → logprob: -11.077619552612305
    9. '```' → logprob: -11.327619552612305
    10. ' '' → logprob: -11.452619552612305

Token 1123: 'fix' (ID: 11853)
  Prédit: 'fix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.0015260485233739018
    2. '#' → logprob: -7.62652587890625
    3. 'f' → logprob: -8.00152587890625
    4. 'print' → logprob: -8.87652587890625
    5. 'fi' → logprob: -9.12652587890625
    6. 'fx' → logprob: -9.12652587890625
    7. 'ifix' → logprob: -9.62652587890625
    8. 'refix' → logprob: -9.75152587890625
    9. 'FIX' → logprob: -10.12652587890625
    10. 'x' → logprob: -10.25152587890625

Token 1124: 'e' (ID: 68)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.096820168197155
    2. 'fix' → logprob: -3.346820116043091
    3. 'if' → logprob: -3.846820116043091
    4. 'ixe' → logprob: -4.59682035446167
    5. '```' → logprob: -4.97182035446167
    6. '#' → logprob: -5.22182035446167
    7. 'x' → logprob: -5.34682035446167
    8. ']' → logprob: -6.47182035446167
    9. 'fi' → logprob: -6.97182035446167
    10. 'i' → logprob: -6.97182035446167

Token 1125: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47338202595710754
    2. '0' → logprob: -1.8483819961547852
    3. '()' → logprob: -2.348381996154785
    4. '('' → logprob: -2.848381996154785
    5. '#' → logprob: -3.973381996154785
    6. '```' → logprob: -4.098381996154785
    7. '<|end|>' → logprob: -4.848381996154785
    8. ''' → logprob: -5.098381996154785
    9. '(I' → logprob: -5.723381996154785
    10. '.' → logprob: -5.973381996154785

Token 1126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ''' → logprob: -13.00000286102295
    3. '2' → logprob: -15.25000286102295
    4. ' ' → logprob: -16.875001907348633
    5. 'b' → logprob: -17.125001907348633
    6. 'ob' → logprob: -18.125001907348633
    7. ''b' → logprob: -18.125001907348633
    8. '"' → logprob: -18.250001907348633
    9. '```' → logprob: -18.625001907348633
    10. 'bin' → logprob: -19.000001907348633

Token 1127: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04240397363901138
    2. '2' → logprob: -3.4174039363861084
    3. ')' → logprob: -5.0424041748046875
    4. '<|end|>' → logprob: -7.0424041748046875
    5. '3' → logprob: -8.042404174804688
    6. '0' → logprob: -8.292404174804688
    7. '[' → logprob: -9.042404174804688
    8. ']' → logprob: -9.167404174804688
    9. '```' → logprob: -9.167404174804688
    10. '#' → logprob: -9.292404174804688

Token 1128: '',' (ID: 787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1129: ' z' (ID: 579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.059088751673698425
    2. 'end' → logprob: -2.934088706970215
    3. ' )' → logprob: -6.309088706970215
    4. 'sep' → logprob: -7.309088706970215
    5. ' end' → logprob: -7.684088706970215
    6. ')
' → logprob: -8.309088706970215
    7. '```' → logprob: -8.434088706970215
    8. '()' → logprob: -9.184088706970215
    9. 'I' → logprob: -9.184088706970215
    10. '   ' → logprob: -9.434088706970215

Token 1130: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -7.584239938296378e-06
    2. '.fill' → logprob: -12.375007629394531
    3. '```' → logprob: -13.500007629394531
    4. '   ' → logprob: -14.625007629394531
    5. 'pad' → logprob: -14.625007629394531
    6. 'f' → logprob: -15.500007629394531
    7. '(fill' → logprob: -15.500007629394531
    8. '.' → logprob: -15.500007629394531
    9. 'fil' → logprob: -16.25000762939453
    10. 'full' → logprob: -16.87500762939453

Token 1131: '(I' (ID: 16705)
  Prédit: '(I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(I' → logprob: -0.002533213933929801
    2. '(' → logprob: -6.002533435821533
    3. '()' → logprob: -11.377532958984375
    4. '(i' → logprob: -11.502532958984375
    5. '<|end|>' → logprob: -11.752532958984375
    6. '(IP' → logprob: -12.002532958984375
    7. '(N' → logprob: -12.502532958984375
    8. '(
' → logprob: -12.752532958984375
    9. ' (' → logprob: -12.877532958984375
    10. '(len' → logprob: -13.002532958984375

Token 1132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4806053340435028
    2. '))' → logprob: -0.9806053638458252
    3. ')))' → logprob: -5.355605125427246
    4. ').' → logprob: -6.355605125427246
    5. '())' → logprob: -11.480605125427246
    6. ')).' → logprob: -11.605605125427246
    7. ')),' → logprob: -12.230605125427246
    8. ')])' → logprob: -12.355605125427246
    9. '));' → logprob: -12.855605125427246
    10. ' )' → logprob: -13.105605125427246

Token 1133: ' complète' (ID: 75660)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6102722883224487
    2. '()' → logprob: -0.9852722883224487
    3. '<|end|>' → logprob: -3.1102724075317383
    4. '())' → logprob: -3.7352724075317383
    5. '(' → logprob: -4.610272407531738
    6. '(I' → logprob: -6.235272407531738
    7. '#' → logprob: -6.610272407531738
    8. '()
' → logprob: -8.610272407531738
    9. '(
' → logprob: -8.610272407531738
    10. '<|end|>' → logprob: -8.860272407531738

Token 1134: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7747437357902527
    2. '(I' → logprob: -0.7747437357902527
    3. '<|end|>' → logprob: -2.6497437953948975
    4. ')' → logprob: -5.649743556976318
    5. '()' → logprob: -6.149743556976318
    6. '(width' → logprob: -8.024744033813477
    7. '(len' → logprob: -8.274744033813477
    8. '(N' → logprob: -8.399744033813477
    9. '```' → logprob: -8.649744033813477
    10. '<|end|>' → logprob: -8.774744033813477

Token 1135: ' z' (ID: 579)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07857797294855118
    2. '0' → logprob: -2.953577995300293
    3. 'left' → logprob: -3.828577995300293
    4. ''I' → logprob: -7.203577995300293
    5. 'zeros' → logprob: -8.703577995300293
    6. ' '' → logprob: -8.828577995300293
    7. ' left' → logprob: -9.453577995300293
    8. 'start' → logprob: -9.453577995300293
    9. 'leading' → logprob: -9.703577995300293
    10. 'width' → logprob: -10.203577995300293

Token 1136: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.028353089466691017
    2. 'eros' → logprob: -3.653352975845337
    3. 'fill' → logprob: -6.403353214263916
    4. 'éro' → logprob: -8.278352737426758
    5. 'zeros' → logprob: -10.153352737426758
    6. 'à' → logprob: -10.403352737426758
    7. '.fill' → logprob: -11.778352737426758
    8. 'ors' → logprob: -12.028352737426758
    9. 'ero' → logprob: -12.153352737426758
    10. 'ores' → logprob: -12.153352737426758

Token 1137: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1135
Tokens correctement prédits (1ère position, stricte): 252
Tokens correctement prédits (1ère position, avec adaptation): 264
Tokens correctement prédits (top 10): 612
Précision stricte (1ère position): 22.20%
Précision adaptée (1ère position): 23.26%
Précision (top 10): 53.92%
================================================================================
