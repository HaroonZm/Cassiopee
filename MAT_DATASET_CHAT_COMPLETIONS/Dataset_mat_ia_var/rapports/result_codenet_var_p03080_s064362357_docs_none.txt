================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input()
s = input()
if s.count("R") > s.count("B"):
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '()
' (ID: 1234)
  → Token d'amorce (pas de prédiction)

Token 2: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8221578001976013
    2. '=' → logprob: -1.822157859802246
    3. ' =' → logprob: -2.322157859802246
    4. '.' → logprob: -2.447157859802246
    5. 'tr' → logprob: -2.697157859802246
    6. 'p' → logprob: -3.197157859802246
    7. 'e' → logprob: -3.322157859802246
    8. 'trip' → logprob: -3.697157859802246
    9. 'r' → logprob: -4.697157859802246
    10. 'u' → logprob: -4.822157859802246

Token 4: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7115949988365173
    2. ' input' → logprob: -0.7115949988365173
    3. ' ' → logprob: -4.336595058441162
    4. ''' → logprob: -6.336595058441162
    5. '"' → logprob: -6.461595058441162
    6. ' s' → logprob: -7.211595058441162
    7. 's' → logprob: -7.961595058441162
    8. ' '' → logprob: -8.461594581604004
    9. ' "' → logprob: -8.586594581604004
    10. ''s' → logprob: -9.586594581604004

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002974614268168807
    2. ''' → logprob: -6.627974510192871
    3. '(
' → logprob: -7.752974510192871
    4. '.' → logprob: -8.127974510192871
    5. ')' → logprob: -8.252974510192871
    6. '('' → logprob: -8.502974510192871
    7. '()' → logprob: -8.877974510192871
    8. ' (' → logprob: -9.002974510192871
    9. '[' → logprob: -10.127974510192871
    10. '"' → logprob: -10.502974510192871

Token 6: 'if' (ID: 366)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014522030018270016
    2. '.strip' → logprob: -5.014522075653076
    3. '.split' → logprob: -5.264522075653076
    4. '+' → logprob: -6.639522075653076
    5. '.lower' → logprob: -7.514522075653076
    6. '=' → logprob: -9.139521598815918
    7. ')' → logprob: -9.139521598815918
    8. '.upper' → logprob: -9.264521598815918
    9. '.count' → logprob: -9.389521598815918
    10. '[::-' → logprob: -10.139521598815918

Token 7: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5783358812332153
    2. ' s' → logprob: -0.8283358812332153
    3. 's' → logprob: -6.203335762023926
    4. ''' → logprob: -8.453335762023926
    5. ' '' → logprob: -9.828335762023926
    6. '  ' → logprob: -10.328335762023926
    7. ' ' → logprob: -10.453335762023926
    8. ' not' → logprob: -11.203335762023926
    9. '"' → logprob: -11.703335762023926
    10. ' "' → logprob: -12.078335762023926

Token 8: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4174799919128418
    2. ' ==' → logprob: -1.6674799919128418
    3. '[' → logprob: -2.167479991912842
    4. '==' → logprob: -4.042479991912842
    5. '.startswith' → logprob: -4.792479991912842
    6. ' ' → logprob: -5.542479991912842
    7. '.strip' → logprob: -5.917479991912842
    8. '=' → logprob: -6.542479991912842
    9. ' .' → logprob: -6.542479991912842
    10. '[:]' → logprob: -6.667479991912842

Token 9: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1349194347858429
    2. '(' → logprob: -2.6349194049835205
    3. '("' → logprob: -3.2599194049835205
    4. '("("' → logprob: -4.1349196434021
    5. '(">' → logprob: -9.884919166564941
    6. '("")' → logprob: -11.134919166564941
    7. ''' → logprob: -12.009919166564941
    8. ' ("' → logprob: -12.884919166564941
    9. '("""' → logprob: -12.884919166564941
    10. '(`' → logprob: -12.884919166564941

Token 10: 'R' (ID: 49)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28874558210372925
    2. '(' → logprob: -2.163745641708374
    3. '0' → logprob: -3.038745641708374
    4. '"' → logprob: -4.038745403289795
    5. '("' → logprob: -4.538745403289795
    6. ')' → logprob: -4.913745403289795
    7. '")' → logprob: -5.163745403289795
    8. '()' → logprob: -5.288745403289795
    9. '7' → logprob: -5.538745403289795
    10. 'A' → logprob: -5.538745403289795

Token 11: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.1648092120885849
    2. ')' → logprob: -1.914809226989746
    3. 'R' → logprob: -6.414809226989746
    4. '"' → logprob: -6.914809226989746
    5. '>' → logprob: -7.414809226989746
    6. ' ")' → logprob: -7.914809226989746
    7. ')")' → logprob: -8.164809226989746
    8. '')' → logprob: -9.164809226989746
    9. '">' → logprob: -9.414809226989746
    10. ')>' → logprob: -9.414809226989746

Token 12: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0358407124876976
    2. '>' → logprob: -4.1608405113220215
    3. ' ==' → logprob: -4.2858405113220215
    4. ' <' → logprob: -6.0358405113220215
    5. ' ' → logprob: -6.5358405113220215
    6. ' >=' → logprob: -6.6608405113220215
    7. '==' → logprob: -8.53584098815918
    8. '<' → logprob: -8.91084098815918
    9. ' !=' → logprob: -8.91084098815918
    10. ')' → logprob: -9.03584098815918

Token 13: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2886514663696289
    2. 's' → logprob: -1.413651466369629
    3. ' ' → logprob: -5.913651466369629
    4. '0' → logprob: -6.163651466369629
    5. ' len' → logprob: -6.663651466369629
    6. 'len' → logprob: -6.788651466369629
    7. '1' → logprob: -8.413651466369629
    8. '2' → logprob: -11.976151466369629
    9. '3' → logprob: -12.663651466369629
    10. '(s' → logprob: -12.663651466369629

Token 14: '.count' (ID: 14019)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0037143307272344828
    2. '.count' → logprob: -5.628714561462402
    3. ' .' → logprob: -10.003714561462402
    4. '[' → logprob: -10.628714561462402
    5. '.length' → logprob: -11.503714561462402
    6. ''.' → logprob: -11.878714561462402
    7. ' ' → logprob: -12.378714561462402
    8. '.find' → logprob: -12.378714561462402
    9. '.startswith' → logprob: -12.378714561462402
    10. '.Count' → logprob: -13.503714561462402

Token 15: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2304036021232605
    2. '(' → logprob: -2.1054036617279053
    3. '("("' → logprob: -2.4804036617279053
    4. '('' → logprob: -8.480403900146484
    5. '"' → logprob: -10.480403900146484
    6. ' ("' → logprob: -11.605403900146484
    7. '(">' → logprob: -11.980403900146484
    8. '("")' → logprob: -12.105403900146484
    9. '("""' → logprob: -12.230403900146484
    10. '("="' → logprob: -12.480403900146484

Token 16: 'B' (ID: 33)
  Prédit: '"L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"L' → logprob: -0.5285184383392334
    2. 'L' → logprob: -0.9035184383392334
    3. '"' → logprob: -5.7785186767578125
    4. ''L' → logprob: -6.4035186767578125
    5. '"B' → logprob: -8.403518676757812
    6. '"S' → logprob: -9.028518676757812
    7. ' L' → logprob: -9.903518676757812
    8. '"G' → logprob: -10.028518676757812
    9. '`' → logprob: -10.778518676757812
    10. '")' → logprob: -10.778518676757812

Token 17: '"):
' (ID: 33645)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.14187203347682953
    2. '):' → logprob: -2.266871929168701
    3. '")' → logprob: -4.016871929168701
    4. ')' → logprob: -4.891871929168701
    5. '":' → logprob: -6.891871929168701
    6. '"' → logprob: -7.141871929168701
    7. ':' → logprob: -7.391871929168701
    8. '"):
' → logprob: -7.891871929168701
    9. ''):' → logprob: -8.51687240600586
    10. '):
' → logprob: -10.26687240600586

Token 18: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15602150559425354
    2. ' print' → logprob: -2.0310215950012207
    3. '   ' → logprob: -4.406021595001221
    4. '"' → logprob: -7.281021595001221
    5. '\n' → logprob: -9.031021118164062
    6. '	print' → logprob: -9.406021118164062
    7. ' ' → logprob: -9.781021118164062
    8. ''' → logprob: -10.156021118164062
    9. '"\' → logprob: -10.531021118164062
    10. '       ' → logprob: -12.156021118164062

Token 19: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.39279013872146606
    2. ' print' → logprob: -1.1427900791168213
    3. '   ' → logprob: -5.1427903175354
    4. ' ' → logprob: -10.142789840698242
    5. '```' → logprob: -12.517789840698242
    6. '	print' → logprob: -12.642789840698242
    7. ''' → logprob: -12.642789840698242
    8. '"' → logprob: -12.892789840698242
    9. '`' → logprob: -13.142789840698242
    10. ' return' → logprob: -13.517789840698242

Token 20: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.030102422460913658
    2. '(' → logprob: -3.530102491378784
    3. '("("' → logprob: -8.280102729797363
    4. '('' → logprob: -9.530102729797363
    5. '(s' → logprob: -11.905102729797363
    6. '(R' → logprob: -11.905102729797363
    7. '"' → logprob: -11.905102729797363
    8. '("(' → logprob: -13.030102729797363
    9. '()' → logprob: -13.905102729797363
    10. 's' → logprob: -15.155102729797363

Token 21: 'Yes' (ID: 13022)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.03094951994717121
    2. '"' → logprob: -3.530949592590332
    3. 'Yes' → logprob: -7.905949592590332
    4. '_R' → logprob: -8.405949592590332
    5. 'A' → logprob: -9.405949592590332
    6. 'Right' → logprob: -9.530949592590332
    7. 'RED' → logprob: -9.780949592590332
    8. ''' → logprob: -9.905949592590332
    9. 'RR' → logprob: -9.905949592590332
    10. 'Red' → logprob: -10.155949592590332

Token 22: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.016792962327599525
    2. ')' → logprob: -4.3917927742004395
    3. '")
' → logprob: -5.5167927742004395
    4. ')")' → logprob: -8.641793251037598
    5. '")
' → logprob: -10.266793251037598
    6. ')
' → logprob: -10.266793251037598
    7. ')")
' → logprob: -12.766793251037598
    8. '"' → logprob: -13.141793251037598
    9. '")

' → logprob: -13.641793251037598
    10. 'else' → logprob: -13.766793251037598

Token 23: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03090595081448555
    2. ' else' → logprob: -3.5309059619903564
    3. 'elif' → logprob: -6.905905723571777
    4. '<|end|>' → logprob: -9.280905723571777
    5. ')' → logprob: -11.030905723571777
    6. '```' → logprob: -11.530905723571777
    7. ' elif' → logprob: -12.030905723571777
    8. '	else' → logprob: -12.405905723571777
    9. '_else' → logprob: -12.405905723571777
    10. 'elser' → logprob: -12.530905723571777

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4140441635390744e-05
    2. ':
' → logprob: -11.500014305114746
    3. '   ' → logprob: -13.375014305114746
    4. ' :' → logprob: -13.750014305114746
    5. '):' → logprob: -14.500014305114746
    6. '():' → logprob: -15.000014305114746
    7. ':return' → logprob: -16.00001335144043
    8. ':def' → logprob: -16.25001335144043
    9. '<|end|>' → logprob: -16.62501335144043
    10. ')' → logprob: -16.75001335144043

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007551893359050155
    2. 'print' → logprob: -7.500755310058594
    3. ' print' → logprob: -9.500755310058594
    4. '    ' → logprob: -10.125755310058594
    5. '```' → logprob: -10.750755310058594
    6. ' ' → logprob: -11.250755310058594
    7. '       ' → logprob: -11.250755310058594
    8. '"' → logprob: -11.500755310058594
    9. '    
' → logprob: -12.000755310058594
    10. '  ' → logprob: -12.125755310058594

Token 26: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05043277516961098
    2. ' print' → logprob: -3.0504326820373535
    3. '   ' → logprob: -6.3004326820373535
    4. '	print' → logprob: -12.175433158874512
    5. ' ' → logprob: -13.800433158874512
    6. '.print' → logprob: -14.050433158874512
    7. '(print' → logprob: -15.050433158874512
    8. 'Print' → logprob: -15.175433158874512
    9. '```' → logprob: -15.425433158874512
    10. '    ' → logprob: -15.800433158874512

Token 27: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0502261184155941
    2. '("' → logprob: -3.0502262115478516
    3. '("("' → logprob: -6.550226211547852
    4. '()' → logprob: -9.300226211547852
    5. '("")' → logprob: -9.550226211547852
    6. '('' → logprob: -10.925226211547852
    7. '(""' → logprob: -11.175226211547852
    8. '("""' → logprob: -12.550226211547852
    9. '("(' → logprob: -12.925226211547852
    10. '(">' → logprob: -13.050226211547852

Token 28: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.8961017202818766e-05
    2. '"No' → logprob: -9.750059127807617
    3. ' No' → logprob: -14.625059127807617
    4. '"' → logprob: -16.250059127807617
    5. '_No' → logprob: -18.000059127807617
    6. '")' → logprob: -18.250059127807617
    7. 'NO' → logprob: -19.125059127807617
    8. '>No' → logprob: -19.250059127807617
    9. '(No' → logprob: -20.750059127807617
    10. 'Yes' → logprob: -20.875059127807617

Token 29: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -8.41866585687967e-06
    2. ')' → logprob: -11.750008583068848
    3. ')")' → logprob: -14.875008583068848
    4. '")
' → logprob: -16.00000762939453
    5. '"' → logprob: -18.12500762939453
    6. '”)' → logprob: -19.37500762939453
    7. '")

' → logprob: -19.62500762939453
    8. '')' → logprob: -19.75000762939453
    9. '}")' → logprob: -20.37500762939453
    10. '");' → logprob: -20.50000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 27
Tokens correctement prédits (1ère position, stricte): 9
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 40.74%
Précision (top 10): 81.48%
================================================================================
