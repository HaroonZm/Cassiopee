================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importer toutes les fonctions du module math pour utiliser des fonctions mathématiques de base
from math import *

# Lire une valeur saisie par l'utilisateur, la convertir en entier, et l'affecter à la variable n
# input() retourne une chaîne de caractères ; int() convertit cette chaîne en entier
n = int(input())

# Créer un ensemble (set) de tous les entiers de 2 jusqu'à (et y compris) 55555
# range(2, 55556) génère une séquence de nombres de 2 à 55555
# set() construit un ensemble à partir de cette séquence
ps = set(range(2, 55556))

# Commencer une boucle pour parcourir tous les entiers i de 2 jusqu'à la racine carrée de 55555, arrondie à l'entier inférieur, puis en ajouter 1
# Ceci est nécessaire pour appliquer efficacement le crible d'Ératosthène
for i in range(2, floor(sqrt(55555) + 1)):
    # Vérifier si le nombre courant i est encore présent dans l'ensemble ps (c'est-à-dire qu'il est considéré premier)
    if i in ps:
        # Initialiser un multiplicateur k à 2 pour générer les multiples de i
        k = 2
        # Boucle pour marquer comme composés tous les multiples de i qui sont inférieurs ou égaux à 55555
        # i*k représente un multiple de i
        while(i * k <= 55555):
            # Vérifier si le multiple courant fait encore partie de l'ensemble ps
            if i * k in ps:
                # Supprimer ce nombre de l'ensemble car il n'est pas premier (c'est un multiple d'un nombre premier)
                ps.remove(i * k)
            # Passer au prochain multiple
            k += 1

# Initialiser une liste vide pour stocker les réponses ou les résultats finaux
ans = []

# Déterminer le plus grand nombre premier dans l'ensemble ps avec max(ps), et assigner cette valeur à la variable i
i = max(ps)

# Démarrer une boucle qui continue tant que la longueur de la liste ans est strictement inférieure à n ET que i est inférieur ou égal à 55555
while len(ans) < n and i <= 55555:
    # Vérifier si le nombre courant i se trouve dans l'ensemble ps, c'est-à-dire s'il s'agit d'un nombre premier
    if i in ps:
        # Ajouter ce nombre à la liste ans, ce qui signifie que ce nombre premier fait partie des résultats
        ans.append(i)
    # Décrémenter la valeur de i de 25, pour passer au nombre précédent à examiner
    i -= 25

# Afficher le contenu de la liste ans sous forme d'une séquence d'entiers séparés par des espaces
# L'opérateur * décompresse la liste ans afin que chaque élément soit passé comme argument séparé à print()
print(*ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'er' (ID: 259)
  → Token d'amorce (pas de prédiction)

Token 3: ' toutes' (ID: 17502)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03233660012483597
    2. '.' → logprob: -4.032336711883545
    3. ' ' → logprob: -5.532336711883545
    4. 'import' → logprob: -5.782336711883545
    5. '#' → logprob: -6.532336711883545
    6. '(' → logprob: -6.657336711883545
    7. '```' → logprob: -6.782336711883545
    8. ' :' → logprob: -7.157336711883545
    9. ' .' → logprob: -7.407336711883545
    10. '[' → logprob: -7.907336711883545

Token 4: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27642738819122314
    2. ' les' → logprob: -1.6514273881912231
    3. 'les' → logprob: -3.4014272689819336
    4. ' ' → logprob: -5.026427268981934
    5. '```' → logprob: -5.526427268981934
    6. '_le' → logprob: -6.651427268981934
    7. 's' → logprob: -7.026427268981934
    8. ':' → logprob: -7.401427268981934
    9. '#' → logprob: -8.151427268981934
    10. 'import' → logprob: -8.151427268981934

Token 5: ' fonctions' (ID: 87283)
  Prédit: 'bibli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bibli' → logprob: -0.352042019367218
    2. ' ' → logprob: -2.1020419597625732
    3. ' bibli' → logprob: -2.7270419597625732
    4. 'modules' → logprob: -3.3520419597625732
    5. 'libraries' → logprob: -3.7270419597625732
    6. 'import' → logprob: -4.352042198181152
    7. ' modules' → logprob: -5.227042198181152
    8. ' libraries' → logprob: -5.352042198181152
    9. 'd' → logprob: -5.477042198181152
    10. 'lib' → logprob: -5.477042198181152

Token 6: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4735190272331238
    2. ' ' → logprob: -1.3485190868377686
    3. 'import' → logprob: -2.8485190868377686
    4. '```' → logprob: -4.0985188484191895
    5. ' _' → logprob: -4.3485188484191895
    6. 's' → logprob: -5.4735188484191895
    7. 'from' → logprob: -5.9735188484191895
    8. 'es' → logprob: -6.2235188484191895
    9. '_import' → logprob: -6.2235188484191895
    10. '_util' → logprob: -6.3485188484191895

Token 7: ' module' (ID: 8827)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.48736077547073364
    2. 'os' → logprob: -1.1123607158660889
    3. 'module' → logprob: -2.987360715866089
    4. 'random' → logprob: -6.362360954284668
    5. 'f' → logprob: -6.862360954284668
    6. ' math' → logprob: -7.362360954284668
    7. 'mat' → logprob: -7.612360954284668
    8. 're' → logprob: -7.737360954284668
    9. 'm' → logprob: -8.237360954284668
    10. 'numpy' → logprob: -8.237360954284668

Token 8: ' math' (ID: 13324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6220605969429016
    2. 'from' → logprob: -1.6220605373382568
    3. ' from' → logprob: -1.9970605373382568
    4. '```' → logprob: -2.622060537338257
    5. ' import' → logprob: -3.122060537338257
    6. '_' → logprob: -5.622060775756836
    7. ' ' → logprob: -5.747060775756836
    8. '`' → logprob: -6.497060775756836
    9. '_import' → logprob: -7.247060775756836
    10. ' ```' → logprob: -7.497060775756836

Token 9: ' pour' (ID: 1930)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3459237217903137
    2. 'from' → logprob: -1.345923662185669
    3. '```' → logprob: -3.970923662185669
    4. ' from' → logprob: -4.595923900604248
    5. ' import' → logprob: -6.220923900604248
    6. '.' → logprob: -7.720923900604248
    7. ',' → logprob: -8.59592342376709
    8. '\' → logprob: -8.97092342376709
    9. '`' → logprob: -9.34592342376709
    10. ''import' → logprob: -9.84592342376709

Token 10: ' utiliser' (ID: 43227)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9690476655960083
    2. ' math' → logprob: -0.9690476655960083
    3. ' ' → logprob: -3.2190475463867188
    4. ' ' → logprob: -3.7190475463867188
    5. ' la' → logprob: -3.7190475463867188
    6. ' import' → logprob: -3.7190475463867188
    7. 'math' → logprob: -3.8440475463867188
    8. ' pouvoir' → logprob: -4.344047546386719
    9. ' calcul' → logprob: -4.594047546386719
    10. ' les' → logprob: -4.719047546386719

Token 11: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2809799909591675
    2. 'import' → logprob: -1.7809799909591675
    3. ' import' → logprob: -3.780980110168457
    4. '  ' → logprob: -4.655980110168457
    5. '```' → logprob: -4.655980110168457
    6. '.' → logprob: -5.280980110168457
    7. '_' → logprob: -5.280980110168457
    8. '`' → logprob: -5.405980110168457
    9. ' ' → logprob: -5.530980110168457
    10. ' math' → logprob: -6.280980110168457

Token 12: ' fonctions' (ID: 87283)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.17192520201206207
    2. ' ' → logprob: -3.4219253063201904
    3. ' fonctions' → logprob: -3.6719253063201904
    4. ' espace' → logprob: -4.171925067901611
    5. '_' → logprob: -4.171925067901611
    6. ' math' → logprob: -4.296925067901611
    7. 'esp' → logprob: -4.671925067901611
    8. 'import' → logprob: -4.921925067901611
    9. ' nombres' → logprob: -5.421925067901611
    10. '  ' → logprob: -5.421925067901611

Token 13: ' math' (ID: 13324)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5026827454566956
    2. ' import' → logprob: -2.127682685852051
    3. '_' → logprob: -2.377682685852051
    4. '.' → logprob: -2.502682685852051
    5. ' ' → logprob: -3.502682685852051
    6. ',' → logprob: -4.377682685852051
    7. ' .' → logprob: -4.627682685852051
    8. 'es' → logprob: -4.752682685852051
    9. '_import' → logprob: -5.127682685852051
    10. ' ,' → logprob: -5.502682685852051

Token 14: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.3404257893562317
    2. '.' → logprob: -1.590425729751587
    3. 'ématique' → logprob: -2.965425729751587
    4. 'ém' → logprob: -3.965425729751587
    5. ' .' → logprob: -5.965425968170166
    6. 'import' → logprob: -6.090425968170166
    7. 'é' → logprob: -6.215425968170166
    8. 'éma' → logprob: -6.840425968170166
    9. 'e' → logprob: -6.965425968170166
    10. '```' → logprob: -6.965425968170166

Token 15: ' de' (ID: 334)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.17285527288913727
    2. 'from' → logprob: -2.4228553771972656
    3. '```' → logprob: -3.0478553771972656
    4. ' from' → logprob: -4.297855377197266
    5. ' import' → logprob: -4.922855377197266
    6. ',' → logprob: -7.672855377197266
    7. '\' → logprob: -7.797855377197266
    8. '.' → logprob: -8.172855377197266
    9. '`' → logprob: -9.297855377197266
    10. ':' → logprob: -9.672855377197266

Token 16: ' base' (ID: 3611)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9634476900100708
    2. ' manière' → logprob: -1.2134476900100708
    3. 'import' → logprob: -2.4634475708007812
    4. 'man' → logprob: -2.9634475708007812
    5. ' import' → logprob: -3.0884475708007812
    6. ' façon' → logprob: -3.3384475708007812
    7. ' la' → logprob: -3.3384475708007812
    8. ' base' → logprob: -3.9634475708007812
    9. ' man' → logprob: -4.213447570800781
    10. 'math' → logprob: -4.838447570800781

Token 17: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6171247363090515
    2. 'import' → logprob: -0.9921247363090515
    3. '```' → logprob: -2.4921247959136963
    4. ' from' → logprob: -5.117124557495117
    5. '\' → logprob: -7.742124557495117
    6. ' import' → logprob: -8.617124557495117
    7. ',' → logprob: -8.992124557495117
    8. '``' → logprob: -9.367124557495117
    9. '	from' → logprob: -10.117124557495117
    10. ':' → logprob: -10.992124557495117

Token 18: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10724267363548279
    2. 'from' → logprob: -2.6072425842285156
    3. '```' → logprob: -3.6072425842285156
    4. '\' → logprob: -8.107242584228516
    5. ' from' → logprob: -8.232242584228516
    6. ' import' → logprob: -9.107242584228516
    7. ',' → logprob: -9.982242584228516
    8. '``' → logprob: -10.357242584228516
    9. '	import' → logprob: -11.607242584228516
    10. '\n' → logprob: -11.982242584228516

Token 19: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.06199682131409645
    2. ' ' → logprob: -2.8119969367980957
    3. ' import' → logprob: -11.311996459960938
    4. 'math' → logprob: -11.811996459960938
    5. ' ' → logprob: -12.061996459960938
    6. ' maths' → logprob: -13.686996459960938
    7. '  ' → logprob: -14.311996459960938
    8. '_math' → logprob: -14.561996459960938
    9. ' space' → logprob: -14.686996459960938
    10. 'import' → logprob: -15.186996459960938

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.033990632742643356
    2. 'import' → logprob: -3.4089906215667725
    3. ' ' → logprob: -8.033990859985352
    4. '	import' → logprob: -11.783990859985352
    5. '_import' → logprob: -12.033990859985352
    6. '<|end|>' → logprob: -13.658990859985352
    7. ' ' → logprob: -14.158990859985352
    8. ' *' → logprob: -14.533990859985352
    9. ' importe' → logprob: -14.658990859985352
    10. ' im' → logprob: -14.658990859985352

Token 21: ' *

' (ID: 40558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.010277987457811832
    2. ' ' → logprob: -4.635278224945068
    3. '*' → logprob: -8.01027774810791
    4. ' ' → logprob: -8.63527774810791
    5. '  ' → logprob: -12.63527774810791
    6. ' *>' → logprob: -12.88527774810791
    7. ' *
' → logprob: -13.26027774810791
    8. ' ' → logprob: -14.01027774810791
    9. ' **' → logprob: -14.13527774810791
    10. ' ```' → logprob: -14.88527774810791

Token 22: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4060076475143433
    2. '#' → logprob: -1.6560076475143433
    3. 'a' → logprob: -1.7810076475143433
    4. 'def' → logprob: -2.906007766723633
    5. '\' → logprob: -3.031007766723633
    6. '
' → logprob: -3.031007766723633
    7. 'import' → logprob: -3.281007766723633
    8. '\n' → logprob: -3.406007766723633
    9. 'x' → logprob: -3.531007766723633
    10. 'sqrt' → logprob: -3.781007766723633

Token 23: ' Lire' (ID: 57624)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.773844301700592
    2. ' sqrt' → logprob: -1.1488442420959473
    3. 'r' → logprob: -2.8988442420959473
    4. 'pi' → logprob: -3.1488442420959473
    5. ' pi' → logprob: -3.3988442420959473
    6. 'print' → logprob: -3.3988442420959473
    7. ' def' → logprob: -4.273844242095947
    8. 'def' → logprob: -4.273844242095947
    9. ' print' → logprob: -4.398844242095947
    10. 'sin' → logprob: -6.023844242095947

Token 24: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0030995234847068787
    2. ' l' → logprob: -7.12809944152832
    3. ' )' → logprob: -7.87809944152832
    4. '(' → logprob: -7.87809944152832
    5. ' la' → logprob: -7.87809944152832
    6. 'l' → logprob: -8.50309944152832
    7. '()' → logprob: -9.12809944152832
    8. ' a' → logprob: -9.25309944152832
    9. ' un' → logprob: -9.25309944152832
    10. ' input' → logprob: -9.37809944152832

Token 25: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01678006909787655
    2. ' valeur' → logprob: -4.266779899597168
    3. 'entrée' → logprob: -7.641779899597168
    4. ' ligne' → logprob: -7.766779899597168
    5. ' entrée' → logprob: -8.391779899597168
    6. 'nombre' → logprob: -8.641779899597168
    7. ' chaîne' → logprob: -8.641779899597168
    8. ' nombre' → logprob: -8.891779899597168
    9. 'n' → logprob: -9.016779899597168
    10. 'val' → logprob: -9.266779899597168

Token 26: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7067373991012573
    2. 'n' → logprob: -1.9567373991012573
    3. '()' → logprob: -2.081737518310547
    4. '(' → logprob: -2.081737518310547
    5. 'x' → logprob: -2.706737518310547
    6. ' )' → logprob: -2.956737518310547
    7. 'a' → logprob: -3.081737518310547
    8. 'nombre' → logprob: -3.206737518310547
    9. 'val' → logprob: -3.331737518310547
    10. 'value' → logprob: -3.956737518310547

Token 27: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.005130338948220015
    2. 'rie' → logprob: -5.880130290985107
    3. 'e' → logprob: -6.130130290985107
    4. 'i' → logprob: -9.130130767822266
    5. 'r' → logprob: -11.380130767822266
    6. '#' → logprob: -12.005130767822266
    7. 'nie' → logprob: -12.380130767822266
    8. 'sie' → logprob: -12.755130767822266
    9. 'ir' → logprob: -13.755130767822266
    10. 'lie' → logprob: -13.755130767822266

Token 28: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38045787811279297
    2. 'user' → logprob: -3.255457878112793
    3. 'n' → logprob: -3.505457878112793
    4. 'a' → logprob: -3.630457878112793
    5. 'value' → logprob: -3.630457878112793
    6. 'x' → logprob: -3.755457878112793
    7. '(' → logprob: -3.880457878112793
    8. ' )' → logprob: -4.005457878112793
    9. '()' → logprob: -4.130457878112793
    10. ',' → logprob: -4.255457878112793

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.25823238492012024
    2. 'l' → logprob: -1.5082323551177979
    3. ' ' → logprob: -5.633232593536377
    4. '	l' → logprob: -6.633232593536377
    5. ' utilisateur' → logprob: -7.383232593536377
    6. ' ' → logprob: -8.133232116699219
    7. '   ' → logprob: -9.258232116699219
    8. 'util' → logprob: -9.258232116699219
    9. '  ' → logprob: -9.883232116699219
    10. ' input' → logprob: -10.008232116699219

Token 30: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.02342214807868004
    2. ''' → logprob: -4.6484222412109375
    3. 'u' → logprob: -4.6484222412109375
    4. '’utilisateur' → logprob: -6.5234222412109375
    5. ''util' → logprob: -7.3984222412109375
    6. 'a' → logprob: -7.5234222412109375
    7. 'util' → logprob: -7.5234222412109375
    8. ''u' → logprob: -7.6484222412109375
    9. ''us' → logprob: -8.773422241210938
    10. ''user' → logprob: -10.398422241210938

Token 31: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9378382563591003
    2. 'val' → logprob: -1.0628383159637451
    3. 'n' → logprob: -1.9378383159637451
    4. 'nombre' → logprob: -3.062838315963745
    5. 'value' → logprob: -3.312838315963745
    6. 'v' → logprob: -4.812838077545166
    7. 'user' → logprob: -4.937838077545166
    8. 's' → logprob: -5.062838077545166
    9. 'a' → logprob: -5.937838077545166
    10. ' valeur' → logprob: -6.187838077545166

Token 32: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0740211009979248
    2. ' val' → logprob: -1.8240211009979248
    3. 'val' → logprob: -2.199021100997925
    4. 'x' → logprob: -2.574021100997925
    5. ' input' → logprob: -2.699021100997925
    6. ' value' → logprob: -2.699021100997925
    7. ' ' → logprob: -3.074021100997925
    8. ' valeur' → logprob: -3.324021100997925
    9. 'value' → logprob: -3.699021100997925
    10. 'n' → logprob: -4.574021339416504

Token 33: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.3657186031341553
    2. 'convert' → logprob: -1.4907186031341553
    3. 'val' → logprob: -3.1157186031341553
    4. 'mettre' → logprob: -4.865718841552734
    5. 'con' → logprob: -5.615718841552734
    6. 'conversion' → logprob: -5.615718841552734
    7. 'r' → logprob: -5.865718841552734
    8. ' convert' → logprob: -6.115718841552734
    9. 's' → logprob: -6.240718841552734
    10. ' valeur' → logprob: -6.365718841552734

Token 34: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.10934846848249435
    2. ' ' → logprob: -2.3593485355377197
    3. 'en' → logprob: -4.734348297119141
    4. '_en' → logprob: -9.73434829711914
    5. '_' → logprob: -10.23434829711914
    6. ')' → logprob: -10.35934829711914
    7. ' )' → logprob: -10.35934829711914
    8. ' ' → logprob: -10.48434829711914
    9. ''en' → logprob: -10.60934829711914
    10. ' ,' → logprob: -11.23434829711914

Token 35: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21415497362613678
    2. ' float' → logprob: -1.9641549587249756
    3. ' nombre' → logprob: -3.7141549587249756
    4. ' entier' → logprob: -4.089155197143555
    5. 'float' → logprob: -5.589155197143555
    6. ' int' → logprob: -6.464155197143555
    7. 'int' → logprob: -6.714155197143555
    8. ' ' → logprob: -7.089155197143555
    9. ' flott' → logprob: -7.214155197143555
    10. 'ent' → logprob: -7.214155197143555

Token 36: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3741109371185303
    2. ',' → logprob: -1.8741109371185303
    3. 'n' → logprob: -1.8741109371185303
    4. 'a' → logprob: -2.4991109371185303
    5. 'v' → logprob: -2.8741109371185303
    6. '(' → logprob: -2.8741109371185303
    7. 'val' → logprob: -2.9991109371185303
    8. 's' → logprob: -3.1241109371185303
    9. 'x' → logprob: -3.2491109371185303
    10. 'i' → logprob: -3.6241109371185303

Token 37: ' et' (ID: 859)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.2472415268421173
    2. ' et' → logprob: -2.122241497039795
    3. ' ' → logprob: -3.247241497039795
    4. 'et' → logprob: -3.747241497039795
    5. ' and' → logprob: -5.497241497039795
    6. ' convertir' → logprob: -5.872241497039795
    7. ' val' → logprob: -6.122241497039795
    8. ' saisir' → logprob: -6.247241497039795
    9. ' input' → logprob: -6.372241497039795
    10. ' continuer' → logprob: -6.372241497039795

Token 38: ' l' (ID: 305)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.11075752973556519
    2. ' calcul' → logprob: -3.86075758934021
    3. ' effectuer' → logprob: -3.86075758934021
    4. ' affect' → logprob: -4.360757350921631
    5. ' l' → logprob: -4.985757350921631
    6. ' afficher' → logprob: -5.110757350921631
    7. 'stock' → logprob: -5.235757350921631
    8. 'ffect' → logprob: -5.735757350921631
    9. 'aff' → logprob: -5.735757350921631
    10. ' assign' → logprob: -5.860757350921631

Token 39: ''aff' (ID: 53397)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7186582684516907
    2. 'imiter' → logprob: -1.093658208847046
    3. 'ancer' → logprob: -3.093658208847046
    4. 'ire' → logprob: -3.468658208847046
    5. 'e' → logprob: -3.593658208847046
    6. ' afficher' → logprob: -3.843658208847046
    7. '#' → logprob: -4.218658447265625
    8. 'ister' → logprob: -5.343658447265625
    9. 'print' → logprob: -5.968658447265625
    10. 'im' → logprob: -6.093658447265625

Token 40: 'ect' (ID: 534)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.059815049171447754
    2. 'ect' → logprob: -3.809814929962158
    3. 'ic' → logprob: -4.184814929962158
    4. 'ich' → logprob: -4.434814929962158
    5. 'i' → logprob: -5.559814929962158
    6. '#' → logprob: -6.309814929962158
    7. 'iche' → logprob: -6.684814929962158
    8. 'ichage' → logprob: -6.934814929962158
    9. 'er' → logprob: -7.559814929962158
    10. 'ir' → logprob: -8.934815406799316

Token 41: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.482821431243792e-05
    2. 'é' → logprob: -10.00008487701416
    3. 'e' → logprob: -10.25008487701416
    4. ' er' → logprob: -13.75008487701416
    5. 'uer' → logprob: -14.00008487701416
    6. '­er' → logprob: -14.00008487701416
    7. '#' → logprob: -14.62508487701416
    8. 'ée' → logprob: -15.25008487701416
    9. 'ér' → logprob: -16.125083923339844
    10. 'éer' → logprob: -16.125083923339844

Token 42: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04660319909453392
    2. 'a' → logprob: -4.296603202819824
    3. 'val' → logprob: -4.296603202819824
    4. 'nombre' → logprob: -5.421603202819824
    5. 'x' → logprob: -5.546603202819824
    6. '(x' → logprob: -6.171603202819824
    7. 'value' → logprob: -6.671603202819824
    8. 'n' → logprob: -6.671603202819824
    9. 's' → logprob: -6.671603202819824
    10. ' ' → logprob: -7.546603202819824

Token 43: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1536550521850586
    2. ' n' → logprob: -1.1536550521850586
    3. ' x' → logprob: -2.4036550521850586
    4. ' nombre' → logprob: -2.4036550521850586
    5. 'x' → logprob: -2.6536550521850586
    6. 'nombre' → logprob: -2.7786550521850586
    7. ' number' → logprob: -4.028655052185059
    8. ' value' → logprob: -4.903655052185059
    9. 'val' → logprob: -5.028655052185059
    10. ' ' → logprob: -5.028655052185059

Token 44: ' variable' (ID: 11076)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9741075038909912
    2. 'variable' → logprob: -0.9741075038909912
    3. ' variable' → logprob: -2.099107503890991
    4. ' valeur' → logprob: -2.599107503890991
    5. 'nombre' → logprob: -4.09910774230957
    6. 'x' → logprob: -4.22410774230957
    7. 'n' → logprob: -5.34910774230957
    8. 'value' → logprob: -5.34910774230957
    9. 'var' → logprob: -5.59910774230957
    10. ' val' → logprob: -7.34910774230957

Token 45: ' n' (ID: 297)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8229337930679321
    2. 'n' → logprob: -0.9479337930679321
    3. 'nombre' → logprob: -2.1979336738586426
    4. ' x' → logprob: -3.8229336738586426
    5. ' n' → logprob: -4.322933673858643
    6. 'val' → logprob: -4.697933673858643
    7. ' nombre' → logprob: -4.697933673858643
    8. 'number' → logprob: -5.822933673858643
    9. 'value' → logprob: -6.197933673858643
    10. 'a' → logprob: -7.072933673858643

Token 46: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.750000953674316
    3. '```' → logprob: -16.25
    4. ' =' → logprob: -17.0
    5. '

' → logprob: -17.625
    6. ',' → logprob: -17.625
    7. '
' → logprob: -17.875
    8. '=' → logprob: -18.375
    9. ' 
' → logprob: -18.5
    10. 'x' → logprob: -18.625

Token 47: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.796184723294573e-06
    2. ' n' → logprob: -12.125005722045898
    3. '`' → logprob: -16.2500057220459
    4. '```' → logprob: -16.7500057220459
    5. ' 
' → logprob: -16.8750057220459
    6. '#' → logprob: -18.2500057220459
    7. '
' → logprob: -18.2500057220459
    8. ' ' → logprob: -18.5000057220459
    9. 's' → logprob: -18.5000057220459
    10. 'x' → logprob: -18.7500057220459

Token 48: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002807963639497757
    2. ' n' → logprob: -5.877808094024658
    3. '```' → logprob: -13.2528076171875
    4. '#' → logprob: -15.2528076171875
    5. '
' → logprob: -15.8778076171875
    6. 'user' → logprob: -15.8778076171875
    7. 'nombre' → logprob: -16.2528076171875
    8. '`' → logprob: -16.3778076171875
    9. 's' → logprob: -16.5028076171875
    10. ' ' → logprob: -16.7528076171875

Token 49: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023886684328317642
    2. '()' → logprob: -4.273886680603027
    3. '('' → logprob: -5.023886680603027
    4. '("' → logprob: -6.148886680603027
    5. '("")' → logprob: -7.273886680603027
    6. '(
' → logprob: -9.648886680603027
    7. ' (' → logprob: -10.023886680603027
    8. '("("' → logprob: -10.398886680603027
    9. '("""' → logprob: -10.398886680603027
    10. '(`' → logprob: -10.773886680603027

Token 50: ' retourne' (ID: 178818)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012684108689427376
    2. '()' → logprob: -5.637684345245361
    3. '(
' → logprob: -5.762684345245361
    4. 'n' → logprob: -5.762684345245361
    5. '(n' → logprob: -6.887684345245361
    6. ' (' → logprob: -7.137684345245361
    7. '=' → logprob: -8.887683868408203
    8. ' =' → logprob: -8.887683868408203
    9. ')' → logprob: -9.012683868408203
    10. '('' → logprob: -9.262683868408203

Token 51: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.0438854806125164
    2. ' la' → logprob: -3.7938854694366455
    3. ' ' → logprob: -4.543885707855225
    4. ' ' → logprob: -5.668885707855225
    5. 'une' → logprob: -6.043885707855225
    6. ''une' → logprob: -6.918885707855225
    7. ' un' → logprob: -7.043885707855225
    8. ' l' → logprob: -8.043885231018066
    9. ' a' → logprob: -8.543885231018066
    10. '  ' → logprob: -8.668885231018066

Token 52: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.026297392323613167
    2. ' chaine' → logprob: -4.526297569274902
    3. 'chaine' → logprob: -4.901297569274902
    4. 'cha' → logprob: -5.901297569274902
    5. ' string' → logprob: -6.526297569274902
    6. 'str' → logprob: -6.651297569274902
    7. 'string' → logprob: -6.776297569274902
    8. ' ' → logprob: -8.026297569274902
    9. ' valeur' → logprob: -8.401297569274902
    10. 's' → logprob: -9.401297569274902

Token 53: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39212772250175476
    2. 'vide' → logprob: -2.392127752304077
    3. 'de' → logprob: -2.517127752304077
    4. 's' → logprob: -4.142127513885498
    5. 'n' → logprob: -4.267127513885498
    6. 'v' → logprob: -4.267127513885498
    7. ' ' → logprob: -4.392127513885498
    8. '(
' → logprob: -4.517127513885498
    9. '()' → logprob: -5.017127513885498
    10. '.' → logprob: -5.017127513885498

Token 54: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.6342578530311584
    2. ' caractères' → logprob: -0.7592578530311584
    3. ' caracteres' → logprob: -7.009257793426514
    4. ' caract' → logprob: -7.759257793426514
    5. ' caractère' → logprob: -8.384258270263672
    6. ' ' → logprob: -10.759258270263672
    7. 'texte' → logprob: -11.634258270263672
    8. 'c' → logprob: -11.634258270263672
    9. '	car' → logprob: -11.759258270263672
    10. ' car' → logprob: -12.009258270263672

Token 55: ' ;' (ID: 4605)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006678790668956935
    2. '\n' → logprob: -7.875668048858643
    3. '
' → logprob: -8.875667572021484
    4. ' n' → logprob: -10.250667572021484
    5. '\' → logprob: -10.375667572021484
    6. ',' → logprob: -11.125667572021484
    7. '```' → logprob: -11.125667572021484
    8. 's' → logprob: -11.375667572021484
    9. '  
' → logprob: -12.500667572021484
    10. '.' → logprob: -12.750667572021484

Token 56: ' int' (ID: 677)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3497190475463867
    2. 'n' → logprob: -1.2247190475463867
    3. 'int' → logprob: -7.349719047546387
    4. ' int' → logprob: -8.474719047546387
    5. ' ' → logprob: -8.724719047546387
    6. 'ent' → logprob: -10.224719047546387
    7. ' la' → logprob: -10.349719047546387
    8. 'val' → logprob: -10.599719047546387
    9. '```' → logprob: -10.599719047546387
    10. ' `' → logprob: -10.974719047546387

Token 57: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0055051688104867935
    2. '()' → logprob: -5.255505084991455
    3. '(n' → logprob: -8.755505561828613
    4. '(convert' → logprob: -10.755505561828613
    5. '('' → logprob: -10.880505561828613
    6. ' (' → logprob: -10.880505561828613
    7. '(
' → logprob: -11.755505561828613
    8. '(input' → logprob: -11.880505561828613
    9. '(int' → logprob: -12.130505561828613
    10. '("")' → logprob: -12.380505561828613

Token 58: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.8004951477050781
    2. '(' → logprob: -0.9254951477050781
    3. ' transforme' → logprob: -2.675495147705078
    4. ' convert' → logprob: -3.300495147705078
    5. '()' → logprob: -3.550495147705078
    6. '(
' → logprob: -4.675495147705078
    7. '(convert' → logprob: -5.300495147705078
    8. ' convertir' → logprob: -6.925495147705078
    9. ' permet' → logprob: -7.175495147705078
    10. ')' → logprob: -7.175495147705078

Token 59: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0015490218065679073
    2. 'i' → logprob: -6.626549243927002
    3. ' it' → logprob: -8.626548767089844
    4. '```' → logprob: -11.626548767089844
    5. '#' → logprob: -12.001548767089844
    6. 'er' → logprob: -12.501548767089844
    7. '_it' → logprob: -12.501548767089844
    8. 'et' → logprob: -13.001548767089844
    9. 't' → logprob: -13.001548767089844
    10. 'e' → logprob: -13.001548767089844

Token 60: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5192724466323853
    2. ' la' → logprob: -1.3942724466323853
    3. ' cette' → logprob: -2.3942723274230957
    4. 'l' → logprob: -3.5192723274230957
    5. '(input' → logprob: -4.269272327423096
    6. ' celle' → logprob: -5.644272327423096
    7. '(' → logprob: -5.894272327423096
    8. 'n' → logprob: -6.269272327423096
    9. ' l' → logprob: -6.519272327423096
    10. 'celle' → logprob: -6.519272327423096

Token 61: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6471438407897949
    2. ' chaîne' → logprob: -0.7721438407897949
    3. ' chaine' → logprob: -5.772143840789795
    4. ' (' → logprob: -5.897143840789795
    5. ' valeur' → logprob: -6.147143840789795
    6. '(' → logprob: -6.272143840789795
    7. 'chaine' → logprob: -6.522143840789795
    8. '  ' → logprob: -7.522143840789795
    9. ' )' → logprob: -7.522143840789795
    10. ' espace' → logprob: -7.772143840789795

Token 62: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.30235058069229126
    2. '(' → logprob: -1.4273505210876465
    3. 'en' → logprob: -5.1773505210876465
    4. '()' → logprob: -5.4273505210876465
    5. ')' → logprob: -6.3023505210876465
    6. '('' → logprob: -6.5523505210876465
    7. 's' → logprob: -7.0523505210876465
    8. ' ' → logprob: -7.0523505210876465
    9. '```' → logprob: -7.1773505210876465
    10. ',' → logprob: -7.3023505210876465

Token 63: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.21712566912174225
    2. ' entier' → logprob: -1.717125654220581
    3. 'ent' → logprob: -5.09212589263916
    4. ' ' → logprob: -5.46712589263916
    5. ' int' → logprob: -6.21712589263916
    6. ' nombre' → logprob: -6.59212589263916
    7. 'un' → logprob: -7.09212589263916
    8. ' integer' → logprob: -8.09212589263916
    9. ' ent' → logprob: -8.09212589263916
    10. 'int' → logprob: -8.34212589263916

Token 64: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008136780234053731
    2. '
' → logprob: -7.2508134841918945
    3. ' n' → logprob: -9.750813484191895
    4. '\n' → logprob: -11.375813484191895
    5. ' 
' → logprob: -11.750813484191895
    6. '```' → logprob: -12.000813484191895
    7. '\' → logprob: -12.250813484191895
    8. '  
' → logprob: -12.500813484191895
    9. '

' → logprob: -12.750813484191895
    10. 's' → logprob: -13.875813484191895

Token 65: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.2842308680992573e-05
    2. '```' → logprob: -11.500022888183594
    3. '
' → logprob: -11.750022888183594
    4. ' n' → logprob: -12.875022888183594
    5. ' 
' → logprob: -13.750022888183594
    6. '``' → logprob: -14.875022888183594
    7. '

' → logprob: -16.000022888183594
    8. '  
' → logprob: -16.000022888183594
    9. '`' → logprob: -16.125022888183594
    10. '\n' → logprob: -16.250022888183594

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020545506849884987
    2. '=' → logprob: -3.895545482635498
    3. ' ' → logprob: -13.270545959472656
    4. '=int' → logprob: -13.770545959472656
    5. ' ' → logprob: -14.770545959472656
    6. '=input' → logprob: -15.520545959472656
    7. ' =
' → logprob: -16.520545959472656
    8. '.' → logprob: -17.145545959472656
    9. ',' → logprob: -17.145545959472656
    10. 'space' → logprob: -17.270545959472656

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004711126442998648
    2. 'int' → logprob: -5.379711151123047
    3. ' input' → logprob: -9.629711151123047
    4. ' ' → logprob: -10.879711151123047
    5. 'input' → logprob: -13.004711151123047
    6. '=int' → logprob: -13.629711151123047
    7. ' ' → logprob: -13.629711151123047
    8. ' in' → logprob: -14.754711151123047
    9. '<int' → logprob: -15.379711151123047
    10. '[int' → logprob: -15.504711151123047

Token 68: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38688918948173523
    2. '(' → logprob: -1.1368892192840576
    3. '(
' → logprob: -11.636889457702637
    4. ' (' → logprob: -12.636889457702637
    5. '()' → logprob: -13.886889457702637
    6. 'input' → logprob: -14.136889457702637
    7. '(user' → logprob: -14.386889457702637
    8. '('' → logprob: -14.636889457702637
    9. '(int' → logprob: -14.761889457702637
    10. '(

' → logprob: -14.761889457702637

Token 69: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5318431854248047
    2. '(' → logprob: -1.4068431854248047
    3. '()' → logprob: -1.9068431854248047
    4. '('' → logprob: -4.156843185424805
    5. '("' → logprob: -7.406843185424805
    6. '(""))' → logprob: -7.406843185424805
    7. '()))' → logprob: -7.406843185424805
    8. ' ())' → logprob: -7.531843185424805
    9. ')' → logprob: -7.906843185424805
    10. '("("' → logprob: -8.031843185424805

Token 70: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6111235022544861
    2. ' 
' → logprob: -2.111123561859131
    3. '#' → logprob: -2.986123561859131
    4. '**' → logprob: -3.111123561859131
    5. '
' → logprob: -3.486123561859131
    6. '*' → logprob: -3.486123561859131
    7. ')' → logprob: -3.486123561859131
    8. 'n' → logprob: -3.736123561859131
    9. '\' → logprob: -3.986123561859131
    10. '  
' → logprob: -4.111123561859131

Token 71: ' Cr' (ID: 5790)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.35517749190330505
    2. 'for' → logprob: -1.7301775217056274
    3. 'fact' → logprob: -2.855177402496338
    4. 's' → logprob: -4.105177402496338
    5. ' for' → logprob: -4.230177402496338
    6. 'if' → logprob: -4.480177402496338
    7. '#' → logprob: -5.355177402496338
    8. 'result' → logprob: -5.355177402496338
    9. 'def' → logprob: -5.730177402496338
    10. 'f' → logprob: -5.730177402496338

Token 72: 'éer' (ID: 83012)
  Prédit: 'éer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.16675929725170135
    2. 'ir' → logprob: -3.7917592525482178
    3. 'op' → logprob: -4.166759490966797
    4. 'r' → logprob: -4.416759490966797
    5. 'omp' → logprob: -4.666759490966797
    6. 'iter' → logprob: -4.791759490966797
    7. 'up' → logprob: -5.166759490966797
    8. 'al' → logprob: -5.166759490966797
    9. 'ép' → logprob: -5.166759490966797
    10. 'eer' → logprob: -5.416759490966797

Token 73: ' un' (ID: 537)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8039717078208923
    2. ' ' → logprob: -1.303971767425537
    3. '_' → logprob: -1.553971767425537
    4. '()' → logprob: -3.553971767425537
    5. '("' → logprob: -4.803971767425537
    6. '('' → logprob: -4.928971767425537
    7. '[' → logprob: -4.928971767425537
    8. ' (' → logprob: -5.553971767425537
    9. ' un' → logprob: -5.803971767425537
    10. '_list' → logprob: -6.303971767425537

Token 74: ' ensemble' (ID: 33081)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1359117180109024
    2. '_' → logprob: -2.135911703109741
    3. 'a' → logprob: -5.01091194152832
    4. ' e' → logprob: -7.38591194152832
    5. 'es' → logprob: -7.38591194152832
    6. '_e' → logprob: -8.51091194152832
    7. ' _' → logprob: -8.51091194152832
    8. ' liste' → logprob: -9.51091194152832
    9. 's' → logprob: -10.01091194152832
    10. '_list' → logprob: -10.01091194152832

Token 75: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05582622438669205
    2. '(' → logprob: -3.180826187133789
    3. ' s' → logprob: -5.680826187133789
    4. 'S' → logprob: -6.555826187133789
    5. 'numbers' → logprob: -6.555826187133789
    6. '{' → logprob: -6.680826187133789
    7. '(
' → logprob: -6.680826187133789
    8. '(s' → logprob: -7.180826187133789
    9. 'set' → logprob: -7.680826187133789
    10. 'A' → logprob: -8.180826187133789

Token 76: 'set' (ID: 977)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7793976664543152
    2. ')' → logprob: -1.90439772605896
    3. ' range' → logprob: -2.02939772605896
    4. ' {' → logprob: -2.65439772605896
    5. 'range' → logprob: -2.77939772605896
    6. '(range' → logprob: -3.27939772605896
    7. 's' → logprob: -3.77939772605896
    8. ' set' → logprob: -3.90439772605896
    9. ' )' → logprob: -4.154397487640381
    10. '{s' → logprob: -4.279397487640381

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026083368808031082
    2. 's' → logprob: -4.901083469390869
    3. '()' → logprob: -4.901083469390869
    4. '(' → logprob: -5.651083469390869
    5. ' )' → logprob: -5.901083469390869
    6. '(range' → logprob: -6.276083469390869
    7. '{' → logprob: -6.776083469390869
    8. '())' → logprob: -6.901083469390869
    9. '(
' → logprob: -9.901082992553711
    10. ',' → logprob: -10.026082992553711

Token 78: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7933123111724854
    2. 's' → logprob: -1.0433123111724854
    3. '(' → logprob: -1.9183123111724854
    4. 'numbers' → logprob: -3.9183123111724854
    5. ' numbers' → logprob: -5.168312072753906
    6. '{' → logprob: -5.293312072753906
    7. '(range' → logprob: -5.543312072753906
    8. '(numbers' → logprob: -6.043312072753906
    9. 'a' → logprob: -6.668312072753906
    10. 'range' → logprob: -7.043312072753906

Token 79: ' tous' (ID: 10688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6273154020309448
    2. '{' → logprob: -2.0023155212402344
    3. ' nombres' → logprob: -2.1273155212402344
    4. ' {' → logprob: -2.2523155212402344
    5. ' ' → logprob: -4.127315521240234
    6. ' i' → logprob: -4.627315521240234
    7. 'i' → logprob: -4.752315521240234
    8. 'n' → logprob: -4.877315521240234
    9. 'div' → logprob: -5.502315521240234
    10. 'l' → logprob: -5.627315521240234

Token 80: ' les' (ID: 1341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8535922765731812
    2. '(i' → logprob: -1.7285922765731812
    3. '(range' → logprob: -1.7285922765731812
    4. 's' → logprob: -2.3535923957824707
    5. ' i' → logprob: -3.1035923957824707
    6. 'i' → logprob: -3.2285923957824707
    7. '(x' → logprob: -4.603592395782471
    8. ' les' → logprob: -5.603592395782471
    9. ' (' → logprob: -5.728592395782471
    10. '(n' → logprob: -5.978592395782471

Token 81: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05890804901719093
    2. ' ent' → logprob: -4.308907985687256
    3. ' nombre' → logprob: -4.433907985687256
    4. 's' → logprob: -5.183907985687256
    5. ' ' → logprob: -5.433907985687256
    6. 'e' → logprob: -5.683907985687256
    7. 'div' → logprob: -6.058907985687256
    8. ' divis' → logprob: -6.183907985687256
    9. 'ent' → logprob: -6.183907985687256
    10. 'n' → logprob: -6.433907985687256

Token 82: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.020657159388065338
    2. 'i' → logprob: -3.8956570625305176
    3. 'ier' → logprob: -9.395657539367676
    4. 'ié' → logprob: -11.270657539367676
    5. '```' → logprob: -11.895657539367676
    6. ' i' → logprob: -12.645657539367676
    7. 'ières' → logprob: -12.645657539367676
    8. '_i' → logprob: -13.645657539367676
    9. '(i' → logprob: -14.270657539367676
    10. '	i' → logprob: -14.520657539367676

Token 83: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.228089690208435
    2. 's' → logprob: -1.478089690208435
    3. '{' → logprob: -1.478089690208435
    4. '(range' → logprob: -2.1030898094177246
    5. ' {' → logprob: -2.6030898094177246
    6. ' ' → logprob: -4.353089809417725
    7. '({' → logprob: -4.978089809417725
    8. ' de' → logprob: -4.978089809417725
    9. '{i' → logprob: -5.228089809417725
    10. ' compris' → logprob: -5.853089809417725

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.589164674282074
    2. ' ' → logprob: -0.839164674282074
    3. '0' → logprob: -4.339164733886719
    4. '(' → logprob: -10.464164733886719
    5. '2' → logprob: -10.964164733886719
    6. 's' → logprob: -11.464164733886719
    7. ' range' → logprob: -12.089164733886719
    8. 'range' → logprob: -12.089164733886719
    9. '```' → logprob: -12.714164733886719
    10. ' la' → logprob: -12.839164733886719

Token 85: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05803059786558151
    2. ' ' → logprob: -3.308030605316162
    3. '0' → logprob: -3.933030605316162
    4. 'range' → logprob: -9.183030128479004
    5. '2' → logprob: -9.933030128479004
    6. '(' → logprob: -11.058030128479004
    7. ' range' → logprob: -11.183030128479004
    8. '```' → logprob: -11.808030128479004
    9. 'l' → logprob: -12.808030128479004
    10. 's' → logprob: -13.058030128479004

Token 86: ' jusqu' (ID: 21961)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9096719622612
    2. ' ,' → logprob: -1.0346720218658447
    3. ',' → logprob: -1.6596720218658447
    4. ' à' → logprob: -3.0346720218658447
    5. ' jusqu' → logprob: -6.659671783447266
    6. '2' → logprob: -7.409671783447266
    7. '  ' → logprob: -7.659671783447266
    8. ' )' → logprob: -7.784671783447266
    9. '1' → logprob: -8.659671783447266
    10. ' a' → logprob: -9.284671783447266

Token 87: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.906363844871521
    2. '(n' → logprob: -1.781363844871521
    3. '(' → logprob: -1.906363844871521
    4. ' a' → logprob: -2.4063639640808105
    5. ' (' → logprob: -2.5313639640808105
    6. 'à' → logprob: -3.5313639640808105
    7. 'n' → logprob: -3.5313639640808105
    8. 'a' → logprob: -4.0313639640808105
    9. ''à' → logprob: -4.2813639640808105
    10. ' n' → logprob: -4.7813639640808105

Token 88: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13437889516353607
    2. 'n' → logprob: -2.2593789100646973
    3. ' int' → logprob: -4.509378910064697
    4. ' (' → logprob: -5.259378910064697
    5. '(n' → logprob: -6.134378910064697
    6. '(' → logprob: -6.384378910064697
    7. 'int' → logprob: -7.259378910064697
    8. '(int' → logprob: -8.509378433227539
    9. ' sqrt' → logprob: -8.884378433227539
    10. 'sqrt' → logprob: -9.259378433227539

Token 89: 'et' (ID: 292)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.043141353875398636
    2. 'n' → logprob: -3.2931413650512695
    3. ' int' → logprob: -6.2931413650512695
    4. ' (' → logprob: -6.5431413650512695
    5. ' ' → logprob: -7.7931413650512695
    6. '(' → logprob: -7.9181413650512695
    7. '(n' → logprob: -7.9181413650512695
    8. ' sqrt' → logprob: -8.29314136505127
    9. '	n' → logprob: -9.29314136505127
    10. 'sqrt' → logprob: -9.66814136505127

Token 90: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6896405816078186
    2. ' n' → logprob: -0.9396405816078186
    3. ' )' → logprob: -3.314640522003174
    4. 'n' → logprob: -3.564640522003174
    5. '<|end|>' → logprob: -3.689640522003174
    6. ' ,' → logprob: -4.939640522003174
    7. ')' → logprob: -6.064640522003174
    8. ',' → logprob: -6.439640522003174
    9. ' sqrt' → logprob: -7.189640522003174
    10. ' including' → logprob: -7.439640522003174

Token 91: ' compris' (ID: 49173)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19423159956932068
    2. ' +' → logprob: -3.5692315101623535
    3. ' compris' → logprob: -3.5692315101623535
    4. ' plus' → logprob: -3.6942315101623535
    5. 'n' → logprob: -4.0692315101623535
    6. ' n' → logprob: -4.4442315101623535
    7. ')' → logprob: -4.6942315101623535
    8. ' jusqu' → logprob: -4.8192315101623535
    9. 'plus' → logprob: -5.0692315101623535
    10. '_plus' → logprob: -5.4442315101623535

Token 92: ')' (ID: 8)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.015417465008795261
    2. 'n' → logprob: -4.515417575836182
    3. ')' → logprob: -6.265417575836182
    4. ' )' → logprob: -6.265417575836182
    5. ' ' → logprob: -8.390417098999023
    6. '(n' → logprob: -8.640417098999023
    7. ')n' → logprob: -9.640417098999023
    8. ',' → logprob: -10.890417098999023
    9. ' ,' → logprob: -10.890417098999023
    10. '(' → logprob: -11.265417098999023

Token 93: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23129576444625854
    2. '(' → logprob: -2.4812958240509033
    3. 'n' → logprob: -2.8562958240509033
    4. '(n' → logprob: -2.9812958240509033
    5. ' (' → logprob: -4.231295585632324
    6. ' ' → logprob: -10.106295585632324
    7. '(int' → logprob: -10.981295585632324
    8. '(
' → logprob: -11.356295585632324
    9. ' sqrt' → logprob: -11.356295585632324
    10. '	n' → logprob: -11.481295585632324

Token 94: '555' (ID: 22275)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5773401856422424
    2. ' n' → logprob: -0.8273401856422424
    3. '(n' → logprob: -6.952340126037598
    4. '(' → logprob: -8.577340126037598
    5. ' (' → logprob: -9.077340126037598
    6. 'sqrt' → logprob: -9.702340126037598
    7. ' sqrt' → logprob: -10.702340126037598
    8. ' ' → logprob: -10.952340126037598
    9. ' int' → logprob: -11.077340126037598
    10. 'int' → logprob: -11.577340126037598

Token 95: '55' (ID: 3152)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28652262687683105
    2. ' s' → logprob: -1.661522626876831
    3. 'range' → logprob: -4.53652286529541
    4. 'numbers' → logprob: -4.53652286529541
    5. ' set' → logprob: -4.91152286529541
    6. ' numbers' → logprob: -5.41152286529541
    7. 'set' → logprob: -5.41152286529541
    8. 'n' → logprob: -5.53652286529541
    9. 'r' → logprob: -6.16152286529541
    10. ' range' → logprob: -6.41152286529541

Token 96: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17270974814891815
    2. 'range' → logprob: -2.2977097034454346
    3. '(' → logprob: -3.6727097034454346
    4. 'set' → logprob: -4.297709941864014
    5. '{' → logprob: -5.047709941864014
    6. 'numbers' → logprob: -5.172709941864014
    7. '(range' → logprob: -6.547709941864014
    8. 'r' → logprob: -6.922709941864014
    9. '(s' → logprob: -7.547709941864014
    10. ')' → logprob: -7.672709941864014

Token 97: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32329341769218445
    2. ' s' → logprob: -1.8232934474945068
    3. ' set' → logprob: -2.948293447494507
    4. 'set' → logprob: -3.823293447494507
    5. 'n' → logprob: -4.698293209075928
    6. 'numbers' → logprob: -4.698293209075928
    7. ' numbers' → logprob: -4.823293209075928
    8. 'range' → logprob: -5.323293209075928
    9. '{' → logprob: -6.448293209075928
    10. ' ' → logprob: -6.448293209075928

Token 98: ' range' (ID: 3352)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7029322385787964
    2. 'numbers' → logprob: -1.5779322385787964
    3. ' numbers' → logprob: -1.9529322385787964
    4. 'range' → logprob: -3.327932357788086
    5. ' s' → logprob: -3.452932357788086
    6. 'n' → logprob: -4.077932357788086
    7. ' primes' → logprob: -4.077932357788086
    8. 'set' → logprob: -4.452932357788086
    9. ' range' → logprob: -5.077932357788086
    10. 'prime' → logprob: -5.327932357788086

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.968312951968983e-06
    2. '(
' → logprob: -11.750009536743164
    3. ' (' → logprob: -13.500009536743164
    4. '(

' → logprob: -15.500009536743164
    5. '2' → logprob: -15.750009536743164
    6. '(start' → logprob: -16.125009536743164
    7. ')' → logprob: -16.125009536743164
    8. '(
' → logprob: -16.875009536743164
    9. 's' → logprob: -17.375009536743164
    10. '1' → logprob: -17.625009536743164

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007706823293119669
    2. ' ' → logprob: -5.507706642150879
    3. '(' → logprob: -5.632706642150879
    4. ')' → logprob: -10.757706642150879
    5. ',' → logprob: -10.882706642150879
    6. ' (' → logprob: -13.757706642150879
    7. '1' → logprob: -14.382706642150879
    8. ' ,' → logprob: -14.757706642150879
    9. '```' → logprob: -15.632706642150879
    10. ')(' → logprob: -15.882706642150879

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024793429765850306
    2. ' ,' → logprob: -6.002479553222656
    3. ',n' → logprob: -13.377479553222656
    4. ' ' → logprob: -14.627479553222656
    5. '1' → logprob: -14.752479553222656
    6. '(n' → logprob: -15.377479553222656
    7. '(' → logprob: -15.502479553222656
    8. ')' → logprob: -15.627479553222656
    9. ',
' → logprob: -15.752479553222656
    10. '```' → logprob: -15.877479553222656

Token 102: ' ' (ID: 220)
  Prédit: '556'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '556' → logprob: -0.5432634353637695
    2. '555' → logprob: -0.9182634353637695
    3. ' ' → logprob: -3.9182634353637695
    4. '557' → logprob: -11.16826343536377
    5. '566' → logprob: -11.41826343536377
    6. '565' → logprob: -11.79326343536377
    7. '560' → logprob: -12.54326343536377
    8. ')' → logprob: -12.79326343536377
    9. ' ' → logprob: -12.98076343536377
    10. '558' → logprob: -12.98076343536377

Token 103: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.030314883217215538
    2. '556' → logprob: -3.6553149223327637
    3. ' ' → logprob: -5.530314922332764
    4. ')' → logprob: -11.780314445495605
    5. '56' → logprob: -12.655314445495605
    6. '565' → logprob: -12.655314445495605
    7. '566' → logprob: -12.717814445495605
    8. '(' → logprob: -12.780314445495605
    9. '557' → logprob: -12.967814445495605
    10. '666' → logprob: -13.155314445495605

Token 104: '56' (ID: 5007)
  Prédit: '56'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '56' → logprob: -0.0005650650127790868
    2. '6' → logprob: -7.500565052032471
    3. '66' → logprob: -11.875565528869629
    4. '55' → logprob: -13.625565528869629
    5. '57' → logprob: -14.000565528869629
    6. '36' → logprob: -14.125565528869629
    7. ',' → logprob: -14.563065528869629
    8. '5' → logprob: -15.000565528869629
    9. '46' → logprob: -15.250565528869629
    10. '556' → logprob: -15.313065528869629

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011192612582817674
    2. ' )' → logprob: -7.001119136810303
    3. '):' → logprob: -8.501119613647461
    4. '))' → logprob: -13.251119613647461
    5. ',' → logprob: -14.501119613647461
    6. '),' → logprob: -14.501119613647461
    7. ' ):' → logprob: -15.001119613647461
    8. ')))' → logprob: -15.001119613647461
    9. ' ' → logprob: -15.126119613647461
    10. ')
' → logprob: -15.626119613647461

Token 106: ' gén' (ID: 15330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1040852069854736
    2. 'pr' → logprob: -1.2290852069854736
    3. ')' → logprob: -1.3540852069854736
    4. ' primes' → logprob: -3.1040852069854736
    5. 'numbers' → logprob: -3.9790852069854736
    6. 'n' → logprob: -4.3540849685668945
    7. 'prime' → logprob: -4.8540849685668945
    8. ' )' → logprob: -5.2290849685668945
    9. ' s' → logprob: -5.9790849685668945
    10. ' numbers' → logprob: -6.1040849685668945

Token 107: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.008216077461838722
    2. 'er' → logprob: -5.50821590423584
    3. 'èr' → logprob: -5.75821590423584
    4. 'érer' → logprob: -8.63321590423584
    5. ')' → logprob: -8.75821590423584
    6. 'è' → logprob: -9.13321590423584
    7. '```' → logprob: -9.25821590423584
    8. 'r' → logprob: -9.88321590423584
    9. 'érateur' → logprob: -10.13321590423584
    10. '=' → logprob: -10.13321590423584

Token 108: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3796898424625397
    2. ' une' → logprob: -1.7546898126602173
    3. ' ' → logprob: -2.629689931869507
    4. ' la' → logprob: -3.504689931869507
    5. ' les' → logprob: -4.379689693450928
    6. ' a' → logprob: -4.754689693450928
    7. ' des' → logprob: -4.879689693450928
    8. ' all' → logprob: -5.754689693450928
    9. ' l' → logprob: -6.379689693450928
    10. ' tous' → logprob: -6.504689693450928

Token 109: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.7882786989212036
    2. ' set' → logprob: -1.2882786989212036
    3. ' liste' → logprob: -2.163278579711914
    4. ' range' → logprob: -2.788278579711914
    5. 'sequence' → logprob: -3.913278579711914
    6. 'range' → logprob: -4.038278579711914
    7. ' plage' → logprob: -4.163278579711914
    8. ' ' → logprob: -4.413278579711914
    9. 'set' → logprob: -4.538278579711914
    10. ' gamme' → logprob: -5.288278579711914

Token 110: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.28164175152778625
    2. 'quence' → logprob: -1.4066417217254639
    3. 't' → logprob: -8.906641960144043
    4. 'q' → logprob: -9.156641960144043
    5. 'QUENCE' → logprob: -9.531641960144043
    6. 'ri' → logprob: -9.781641960144043
    7. 'qu' → logprob: -9.906641960144043
    8. 'que' → logprob: -11.406641960144043
    9. 'rence' → logprob: -11.781641960144043
    10. 'r' → logprob: -11.781641960144043

Token 111: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09196332842111588
    2. '(range' → logprob: -3.091963291168213
    3. 'range' → logprob: -4.341963291168213
    4. ')' → logprob: -4.841963291168213
    5. 'de' → logprob: -4.841963291168213
    6. 's' → logprob: -5.466963291168213
    7. '(
' → logprob: -5.591963291168213
    8. 'des' → logprob: -6.091963291168213
    9. 'd' → logprob: -6.966963291168213
    10. '2' → logprob: -7.841963291168213

Token 112: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2608131468296051
    2. '2' → logprob: -2.3858132362365723
    3. ' ' → logprob: -2.6358132362365723
    4. 'ent' → logprob: -4.510813236236572
    5. '555' → logprob: -4.885813236236572
    6. 'nombre' → logprob: -5.010813236236572
    7. ')' → logprob: -5.135813236236572
    8. '556' → logprob: -5.260813236236572
    9. 'numbers' → logprob: -5.385813236236572
    10. ' numbers' → logprob: -5.510813236236572

Token 113: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23231260478496552
    2. '(range' → logprob: -2.6073126792907715
    3. '(' → logprob: -2.7323126792907715
    4. 'range' → logprob: -3.6073126792907715
    5. ',' → logprob: -3.8573126792907715
    6. 's' → logprob: -4.6073126792907715
    7. ' )' → logprob: -6.1073126792907715
    8. '2' → logprob: -6.8573126792907715
    9. ' ,' → logprob: -6.8573126792907715
    10. ' ' → logprob: -6.8573126792907715

Token 114: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3868807554244995
    2. '2' → logprob: -1.1368807554244995
    3. 'de' → logprob: -13.011880874633789
    4. ' nombres' → logprob: -13.011880874633789
    5. ' deux' → logprob: -13.386880874633789
    6. '  ' → logprob: -14.261880874633789
    7. 's' → logprob: -14.386880874633789
    8. ')' → logprob: -15.511880874633789
    9. '<|end|>' → logprob: -15.511880874633789
    10. '[' → logprob: -15.636880874633789

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004622018430382013
    2. ' ' → logprob: -5.379621982574463
    3. '555' → logprob: -14.879622459411621
    4. '556' → logprob: -15.754622459411621
    5. ')' → logprob: -15.879622459411621
    6. '  ' → logprob: -15.879622459411621
    7. '```' → logprob: -15.879622459411621
    8. 'de' → logprob: -16.129621505737305
    9. '557' → logprob: -16.129621505737305
    10. '[' → logprob: -16.942121505737305

Token 116: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010158988879993558
    2. ')' → logprob: -7.626015663146973
    3. ' ,' → logprob: -7.626015663146973
    4. ' à' → logprob: -11.126015663146973
    5. ' jusqu' → logprob: -11.876015663146973
    6. ' )' → logprob: -12.751015663146973
    7. ' ' → logprob: -12.876015663146973
    8. ',)' → logprob: -13.376015663146973
    9. '```' → logprob: -13.501015663146973
    10. 'à' → logprob: -13.501015663146973

Token 117: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.043164290487766266
    2. ' ' → logprob: -3.1681642532348633
    3. '556' → logprob: -9.543164253234863
    4. ' ' → logprob: -9.543164253234863
    5. '55' → logprob: -11.855664253234863
    6. '  ' → logprob: -13.418164253234863
    7. '545' → logprob: -13.418164253234863
    8. ',' → logprob: -13.793164253234863
    9. '5' → logprob: -13.980664253234863
    10. '   ' → logprob: -14.605664253234863

Token 118: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.026385990902781487
    2. ' ' → logprob: -3.651386022567749
    3. '55' → logprob: -10.401386260986328
    4. '556' → logprob: -10.588886260986328
    5. ' ' → logprob: -11.901386260986328
    6. '5' → logprob: -12.151386260986328
    7. '  ' → logprob: -13.088886260986328
    8. '545' → logprob: -13.526386260986328
    9. '1' → logprob: -13.651386260986328
    10. '```' → logprob: -13.963886260986328

Token 119: '55' (ID: 3152)
  Prédit: '56'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '56' → logprob: -0.0027784891426563263
    2. '6' → logprob: -6.62777853012085
    3. '57' → logprob: -6.62777853012085
    4. ',' → logprob: -10.690278053283691
    5. ')' → logprob: -10.690278053283691
    6. ' ' → logprob: -10.877778053283691
    7. '7' → logprob: -11.002778053283691
    8. '5' → logprob: -11.877778053283691
    9. '55' → logprob: -12.065278053283691
    10. '556' → logprob: -12.690278053283691

Token 120: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4989008605480194
    2. 'numbers' → logprob: -2.123900890350342
    3. 'pr' → logprob: -2.623900890350342
    4. ')' → logprob: -2.998900890350342
    5. 'n' → logprob: -3.373900890350342
    6. 'ent' → logprob: -3.498900890350342
    7. 'possible' → logprob: -3.623900890350342
    8. 'prime' → logprob: -4.123900890350342
    9. 'div' → logprob: -4.623900890350342
    10. 'nums' → logprob: -4.998900890350342

Token 121: '#' (ID: 2)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6882412433624268
    2. 's' → logprob: -0.9382412433624268
    3. 'numbers' → logprob: -3.0632412433624268
    4. 'p' → logprob: -4.563241004943848
    5. 'n' → logprob: -4.563241004943848
    6. 'prime' → logprob: -4.688241004943848
    7. 'possible' → logprob: -4.813241004943848
    8. 'ent' → logprob: -5.438241004943848
    9. 'nums' → logprob: -5.688241004943848
    10. 'poss' → logprob: -5.938241004943848

Token 122: ' set' (ID: 920)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.963096559047699
    2. 's' → logprob: -1.0880966186523438
    3. 'n' → logprob: -2.3380966186523438
    4. 'numbers' → logprob: -2.7130966186523438
    5. 'div' → logprob: -3.3380966186523438
    6. 'ent' → logprob: -3.4630966186523438
    7. 'prime' → logprob: -4.338096618652344
    8. 'p' → logprob: -5.088096618652344
    9. 'prem' → logprob: -5.713096618652344
    10. 'possible' → logprob: -5.713096618652344

Token 123: '()' (ID: 416)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.3144707679748535
    2. '(' → logprob: -1.3144707679748535
    3. '()' → logprob: -6.9394707679748535
    4. 'range' → logprob: -9.064470291137695
    5. 's' → logprob: -10.439470291137695
    6. '(
' → logprob: -10.689470291137695
    7. '(s' → logprob: -10.814470291137695
    8. ')' → logprob: -11.814470291137695
    9. '(r' → logprob: -12.064470291137695
    10. '(...)' → logprob: -12.064470291137695

Token 124: ' construit' (ID: 119882)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1301041692495346
    2. '(range' → logprob: -2.1301040649414062
    3. '(create' → logprob: -7.380104064941406
    4. '<|end|>' → logprob: -7.505104064941406
    5. '(
' → logprob: -7.630104064941406
    6. 'range' → logprob: -8.005104064941406
    7. ')' → logprob: -8.255104064941406
    8. ' (' → logprob: -8.255104064941406
    9. '(set' → logprob: -8.505104064941406
    10. '(s' → logprob: -9.380104064941406

Token 125: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.08971033245325089
    2. 'un' → logprob: -3.339710235595703
    3. ' l' → logprob: -3.964710235595703
    4. 'l' → logprob: -4.089710235595703
    5. '(' → logprob: -4.714710235595703
    6. '(set' → logprob: -7.089710235595703
    7. 's' → logprob: -7.339710235595703
    8. ' ' → logprob: -7.464710235595703
    9. '()' → logprob: -7.714710235595703
    10. ' une' → logprob: -7.714710235595703

Token 126: ' ensemble' (ID: 33081)
  Prédit: ' ensemble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensemble' → logprob: -0.31112557649612427
    2. 'ensemble' → logprob: -1.8111255168914795
    3. ' set' → logprob: -2.3111255168914795
    4. 'set' → logprob: -6.186125755310059
    5. 's' → logprob: -6.436125755310059
    6. 'ense' → logprob: -7.061125755310059
    7. ' ensembles' → logprob: -10.186125755310059
    8. '_set' → logprob: -10.311125755310059
    9. '=set' → logprob: -10.311125755310059
    10. 'semble' → logprob: -10.561125755310059

Token 127: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.621145486831665
    2. '(numbers' → logprob: -1.621145486831665
    3. '(range' → logprob: -2.496145486831665
    4. '(pr' → logprob: -3.246145486831665
    5. '(n' → logprob: -3.246145486831665
    6. 's' → logprob: -3.246145486831665
    7. 'n' → logprob: -4.371145248413086
    8. 'pr' → logprob: -4.746145248413086
    9. 'numbers' → logprob: -4.746145248413086
    10. 'prime' → logprob: -5.371145248413086

Token 128: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.0024528263602405787
    2. 'part' → logprob: -6.127452850341797
    3. ' part' → logprob: -9.252452850341797
    4. ' partire' → logprob: -9.502452850341797
    5. ')' → logprob: -10.502452850341797
    6. '_part' → logprob: -11.377452850341797
    7. 'from' → logprob: -11.377452850341797
    8. 'range' → logprob: -11.627452850341797
    9. 'r' → logprob: -12.377452850341797
    10. 'l' → logprob: -12.877452850341797

Token 129: ' de' (ID: 334)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.4228004515171051
    2. ' de' → logprob: -1.2978004217147827
    3. 'range' → logprob: -3.2978005409240723
    4. 'de' → logprob: -4.297800540924072
    5. '(' → logprob: -4.797800540924072
    6. ' range' → logprob: -5.047800540924072
    7. ' des' → logprob: -5.422800540924072
    8. 'des' → logprob: -7.547800540924072
    9. ')' → logprob: -8.047800064086914
    10. ' (' → logprob: -8.172800064086914

Token 130: ' cette' (ID: 7696)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.9681832790374756
    2. ' cette' → logprob: -1.2181832790374756
    3. ' range' → logprob: -1.2181832790374756
    4. ' la' → logprob: -3.8431832790374756
    5. 'la' → logprob: -5.718183517456055
    6. ' this' → logprob: -6.343183517456055
    7. ' cet' → logprob: -7.093183517456055
    8. ' ces' → logprob: -7.468183517456055
    9. ' ce' → logprob: -8.593183517456055
    10. 'this' → logprob: -8.843183517456055

Token 131: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.07816794514656067
    2. 'sé' → logprob: -2.9531679153442383
    3. ' sequence' → logprob: -4.203167915344238
    4. 'sequence' → logprob: -6.078167915344238
    5. ' range' → logprob: -6.203167915344238
    6. 'range' → logprob: -6.203167915344238
    7. 's' → logprob: -7.453167915344238
    8. ' plage' → logprob: -7.703167915344238
    9. ' liste' → logprob: -7.828167915344238
    10. ' gamme' → logprob: -9.078167915344238

Token 132: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0018219047924503684
    2. 't' → logprob: -7.001821994781494
    3. 'rie' → logprob: -7.751821994781494
    4. 'q' → logprob: -8.626821517944336
    5. 'lection' → logprob: -9.126821517944336
    6. 'qu' → logprob: -9.751821517944336
    7. 'QUENCE' → logprob: -10.251821517944336
    8. 'quences' → logprob: -10.751821517944336
    9. 'que' → logprob: -10.751821517944336
    10. '#' → logprob: -11.501821517944336

Token 133: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.963744580745697
    2. 'numbers' → logprob: -1.4637446403503418
    3. 'n' → logprob: -1.5887446403503418
    4. 'ent' → logprob: -3.088744640350342
    5. 'div' → logprob: -3.213744640350342
    6. 'S' → logprob: -3.838744640350342
    7. 'pr' → logprob: -4.838744640350342
    8. 'N' → logprob: -4.963744640350342
    9. 'nums' → logprob: -4.963744640350342
    10. 'prime' → logprob: -5.088744640350342

Token 134: 'ps' (ID: 947)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.459150493144989
    2. 'numbers' → logprob: -1.7091505527496338
    3. 'pr' → logprob: -2.209150552749634
    4. 'n' → logprob: -3.709150552749634
    5. 'nums' → logprob: -4.709150314331055
    6. 'ent' → logprob: -4.959150314331055
    7. 'p' → logprob: -5.084150314331055
    8. 'possible' → logprob: -5.084150314331055
    9. 'S' → logprob: -5.209150314331055
    10. 'prime' → logprob: -5.584150314331055

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38116276264190674
    2. 'et' → logprob: -2.131162643432617
    3. 'ets' → logprob: -2.256162643432617
    4. '=' → logprob: -2.881162643432617
    5. '=set' → logprob: -4.506162643432617
    6. 's' → logprob: -4.631162643432617
    7. 'r' → logprob: -5.131162643432617
    8. 'rs' → logprob: -6.006162643432617
    9. 'u' → logprob: -7.381162643432617
    10. 'es' → logprob: -7.381162643432617

Token 136: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.20145533978939056
    2. 'set' → logprob: -1.7014553546905518
    3. '(set' → logprob: -11.201455116271973
    4. 'et' → logprob: -11.576455116271973
    5. '{' → logprob: -12.701455116271973
    6. ' ' → logprob: -12.951455116271973
    7. 's' → logprob: -12.951455116271973
    8. '	set' → logprob: -13.076455116271973
    9. '```' → logprob: -13.201455116271973
    10. '=set' → logprob: -13.451455116271973

Token 137: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'range' → logprob: -15.7500581741333
    4. ' (' → logprob: -17.250059127807617
    5. '(r' → logprob: -18.000059127807617
    6. '(rank' → logprob: -19.375059127807617
    7. '((' → logprob: -19.500059127807617
    8. '	range' → logprob: -20.250059127807617
    9. '.range' → logprob: -21.000059127807617
    10. '(`' → logprob: -21.375059127807617

Token 138: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.60414821645827e-06
    2. ' (' → logprob: -12.500004768371582
    3. '(
' → logprob: -14.250004768371582
    4. '2' → logprob: -15.500004768371582
    5. ')(' → logprob: -18.625003814697266
    6. ')' → logprob: -19.250003814697266
    7. ' ' → logprob: -19.625003814697266
    8. '(

' → logprob: -19.875003814697266
    9. '((' → logprob: -20.125003814697266
    10. '(
' → logprob: -20.750003814697266

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008056987426243722
    2. ' ' → logprob: -7.125805854797363
    3. '(' → logprob: -14.000805854797363
    4. '   ' → logprob: -16.000804901123047
    5. ',' → logprob: -16.500804901123047
    6. '  ' → logprob: -17.000804901123047
    7. '```' → logprob: -17.125804901123047
    8. ')' → logprob: -17.313304901123047
    9. '1' → logprob: -18.125804901123047
    10. '	' → logprob: -18.250804901123047

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -16.50002098083496
    4. '2' → logprob: -16.50002098083496
    5. '(' → logprob: -17.25002098083496
    6. ' ' → logprob: -17.25002098083496
    7. ',

' → logprob: -17.75002098083496
    8. '1' → logprob: -18.25002098083496
    9. ')' → logprob: -18.75002098083496
    10. '‌,' → logprob: -19.25002098083496

Token 141: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.054966237396001816
    2. ' ' → logprob: -2.9299662113189697
    3. '556' → logprob: -9.67996597290039
    4. ' ' → logprob: -12.49246597290039
    5. '545' → logprob: -12.61746597290039
    6. '55' → logprob: -13.36746597290039
    7. '655' → logprob: -13.55496597290039
    8. ')' → logprob: -13.74246597290039
    9. '5' → logprob: -14.11746597290039
    10. '455' → logprob: -14.17996597290039

Token 142: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.125045776367188
    3. '556' → logprob: -12.750045776367188
    4. '(' → logprob: -14.250045776367188
    5. '55' → logprob: -15.000045776367188
    6. '655' → logprob: -15.437545776367188
    7. '5' → logprob: -15.875045776367188
    8. '455' → logprob: -16.000045776367188
    9. '155' → logprob: -16.125045776367188
    10. '   ' → logprob: -16.375045776367188

Token 143: '56' (ID: 5007)
  Prédit: '56'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '56' → logprob: -0.0036175278946757317
    2. '6' → logprob: -5.628617763519287
    3. '66' → logprob: -12.191117286682129
    4. '57' → logprob: -12.753617286682129
    5. '55' → logprob: -13.316117286682129
    6. '5' → logprob: -13.566117286682129
    7. '60' → logprob: -14.128617286682129
    8. '36' → logprob: -14.503617286682129
    9. '65' → logprob: -14.566117286682129
    10. '```' → logprob: -15.003617286682129

Token 144: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003503626212477684
    2. ')' → logprob: -8.000349998474121
    3. ' ))' → logprob: -11.750349998474121
    4. '))
' → logprob: -12.250349998474121
    5. ')))' → logprob: -14.125349998474121
    6. '+' → logprob: -14.500349998474121
    7. '));' → logprob: -15.500349998474121
    8. '),' → logprob: -15.875349998474121
    9. '))

' → logprob: -15.875349998474121
    10. ' ' → logprob: -16.250350952148438

Token 145: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.083404541015625
    2. 'for' → logprob: -1.208404541015625
    3. ' 
' → logprob: -2.458404541015625
    4. ' for' → logprob: -2.583404541015625
    5. '#' → logprob: -2.708404541015625
    6. ' ' → logprob: -3.208404541015625
    7. '  
' → logprob: -3.333404541015625
    8. 'p' → logprob: -4.083404541015625
    9. 'i' → logprob: -4.083404541015625
    10. 's' → logprob: -4.708404541015625

Token 146: ' Comm' (ID: 57464)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14240606129169464
    2. 'p' → logprob: -2.1424059867858887
    3. 'i' → logprob: -4.267405986785889
    4. 'pr' → logprob: -7.017405986785889
    5. ' for' → logprob: -8.392406463623047
    6. 'ps' → logprob: -9.767406463623047
    7. '#' → logprob: -10.267406463623047
    8. 's' → logprob: -10.642406463623047
    9. 'to' → logprob: -10.642406463623047
    10. 'prime' → logprob: -10.892406463623047

Token 147: 'encer' (ID: 19726)
  Prédit: 'encer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'encer' → logprob: -0.7242823243141174
    2. 'ent' → logprob: -0.9742823243141174
    3. '#' → logprob: -2.7242822647094727
    4. 'en' → logprob: -3.3492822647094727
    5. 'e' → logprob: -4.099282264709473
    6. 'ence' → logprob: -4.849282264709473
    7. 'enter' → logprob: -4.974282264709473
    8. 'ancer' → logprob: -6.724282264709473
    9. 'encher' → logprob: -7.099282264709473
    10. 'er' → logprob: -7.474282264709473

Token 148: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.982228696346283
    2. ' for' → logprob: -1.2322287559509277
    3. 'i' → logprob: -1.4822287559509277
    4. ' i' → logprob: -2.3572287559509277
    5. 'p' → logprob: -5.732228755950928
    6. ' p' → logprob: -5.982228755950928
    7. ' ' → logprob: -6.107228755950928
    8. ')' → logprob: -6.232228755950928
    9. '#' → logprob: -7.607228755950928
    10. 'x' → logprob: -8.23222827911377

Token 149: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0645135641098022
    2. 'for' → logprob: -1.1895135641098022
    3. 'i' → logprob: -1.4395135641098022
    4. ' i' → logprob: -2.189513683319092
    5. 'p' → logprob: -7.314513683319092
    6. ' p' → logprob: -7.814513683319092
    7. ' range' → logprob: -8.814513206481934
    8. ' ' → logprob: -8.814513206481934
    9. 'range' → logprob: -9.689513206481934
    10. '#' → logprob: -9.814513206481934

Token 150: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2071615606546402
    2. ' for' → logprob: -1.832161545753479
    3. ' i' → logprob: -4.2071614265441895
    4. 'i' → logprob: -4.4571614265441895
    5. 'p' → logprob: -9.082161903381348
    6. '(' → logprob: -9.207161903381348
    7. ' ' → logprob: -10.207161903381348
    8. '(i' → logprob: -10.207161903381348
    9. 'x' → logprob: -10.332161903381348
    10. 'pour' → logprob: -10.457161903381348

Token 151: ' parcour' (ID: 130642)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6642245054244995
    2. ' i' → logprob: -1.1642245054244995
    3. 'p' → logprob: -2.039224624633789
    4. ' p' → logprob: -3.164224624633789
    5. 'x' → logprob: -8.664224624633789
    6. 'k' → logprob: -8.789224624633789
    7. 'a' → logprob: -9.164224624633789
    8. '2' → logprob: -9.789224624633789
    9. ' ' → logprob: -10.289224624633789
    10. '	i' → logprob: -10.414224624633789

Token 152: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.14673185348510742
    2. 'i' → logprob: -2.7717318534851074
    3. 'er' → logprob: -2.8967318534851074
    4. 'ant' → logprob: -4.271731853485107
    5. ' i' → logprob: -5.771731853485107
    6. 'r' → logprob: -7.271731853485107
    7. 'e' → logprob: -8.646732330322266
    8. 'u' → logprob: -9.021732330322266
    9. 'ent' → logprob: -9.521732330322266
    10. '(i' → logprob: -9.646732330322266

Token 153: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09742411971092224
    2. ' p' → logprob: -3.097424030303955
    3. 'i' → logprob: -3.222424030303955
    4. ' ' → logprob: -5.972424030303955
    5. 'p' → logprob: -6.097424030303955
    6. '2' → logprob: -6.972424030303955
    7. ' x' → logprob: -7.722424030303955
    8. '(' → logprob: -8.097424507141113
    9. ' range' → logprob: -8.222424507141113
    10. 'x' → logprob: -8.722424507141113

Token 154: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2446811944246292
    2. 'i' → logprob: -1.6196812391281128
    3. ' p' → logprob: -4.244681358337402
    4. 'p' → logprob: -5.494681358337402
    5. ' ' → logprob: -8.869681358337402
    6. ' x' → logprob: -9.119681358337402
    7. 'x' → logprob: -9.369681358337402
    8. ' nombres' → logprob: -10.244681358337402
    9. ' nombre' → logprob: -10.369681358337402
    10. ' d' → logprob: -10.369681358337402

Token 155: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11287341266870499
    2. ' i' → logprob: -2.7378733158111572
    3. 'p' → logprob: -3.3628733158111572
    4. ' p' → logprob: -4.987873554229736
    5. 'x' → logprob: -8.362873077392578
    6. ' nombres' → logprob: -9.362873077392578
    7. 'num' → logprob: -9.987873077392578
    8. 'nombre' → logprob: -10.612873077392578
    9. ' num' → logprob: -10.737873077392578
    10. 'k' → logprob: -10.737873077392578

Token 156: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00023393364972434938
    2. 'ier' → logprob: -8.37523365020752
    3. 'i' → logprob: -13.25023365020752
    4. 'ières' → logprob: -14.12523365020752
    5. 't' → logprob: -15.50023365020752
    6. 'tiers' → logprob: -16.000234603881836
    7. '```' → logprob: -16.250234603881836
    8. 'er' → logprob: -16.375234603881836
    9. 'eurs' → logprob: -16.625234603881836
    10. 'ires' → logprob: -16.625234603881836

Token 157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7517789602279663
    2. ' i' → logprob: -1.5017789602279663
    3. 'p' → logprob: -1.7517789602279663
    4. '(' → logprob: -2.876779079437256
    5. ' p' → logprob: -3.126779079437256
    6. '2' → logprob: -3.751779079437256
    7. '(p' → logprob: -6.126779079437256
    8. ' ' → logprob: -6.501779079437256
    9. 'x' → logprob: -6.626779079437256
    10. 'k' → logprob: -6.876779079437256

Token 158: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5727830529212952
    2. ' in' → logprob: -1.4477829933166504
    3. ' ' → logprob: -2.3227829933166504
    4. '2' → logprob: -3.0727829933166504
    5. ' de' → logprob: -3.6977829933166504
    6. ' en' → logprob: -5.32278299331665
    7. 'in' → logprob: -5.44778299331665
    8. ' (' → logprob: -5.44778299331665
    9. ' range' → logprob: -5.44778299331665
    10. ' i' → logprob: -5.94778299331665

Token 159: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1908332109451294
    2. ' ' → logprob: -1.9408332109451294
    3. ' range' → logprob: -3.81583309173584
    4. 'range' → logprob: -4.81583309173584
    5. '	range' → logprob: -12.56583309173584
    6. '  ' → logprob: -12.81583309173584
    7. '[' → logprob: -12.94083309173584
    8. '3' → logprob: -13.06583309173584
    9. '(' → logprob: -13.19083309173584
    10. ' deux' → logprob: -13.31583309173584

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009358879178762436
    2. 'range' → logprob: -4.759358882904053
    3. ' ' → logprob: -7.384358882904053
    4. ' range' → logprob: -9.509358406066895
    5. '(' → logprob: -10.384358406066895
    6. '   ' → logprob: -12.259358406066895
    7. '  ' → logprob: -12.634358406066895
    8. '[' → logprob: -12.884358406066895
    9. 'ps' → logprob: -13.009358406066895
    10. 'from' → logprob: -14.134358406066895

Token 161: ' jusqu' (ID: 21961)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07308385521173477
    2. ' ,' → logprob: -3.1980838775634766
    3. ' ' → logprob: -3.5730838775634766
    4. ' à' → logprob: -7.323083877563477
    5. ' in' → logprob: -8.573083877563477
    6. ' to' → logprob: -8.573083877563477
    7. ' jusqu' → logprob: -8.823083877563477
    8. ' up' → logprob: -9.073083877563477
    9. '2' → logprob: -9.823083877563477
    10. '  ' → logprob: -9.823083877563477

Token 162: ''à' (ID: 33688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004300153348594904
    2. 'à' → logprob: -5.754300117492676
    3. ' à' → logprob: -7.879300117492676
    4. ''à' → logprob: -8.129300117492676
    5. 'a' → logprob: -8.254300117492676
    6. ' (' → logprob: -10.254300117492676
    7. '’à' → logprob: -10.254300117492676
    8. 'n' → logprob: -10.879300117492676
    9. '(n' → logprob: -11.129300117492676
    10. '555' → logprob: -11.254300117492676

Token 163: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6613734364509583
    2. '555' → logprob: -0.9113734364509583
    3. ' int' → logprob: -3.2863733768463135
    4. '556' → logprob: -4.036373615264893
    5. '(int' → logprob: -5.286373615264893
    6. '550' → logprob: -5.286373615264893
    7. ' ' → logprob: -5.536373615264893
    8. 'is' → logprob: -5.786373615264893
    9. '333' → logprob: -6.411373615264893
    10. 'ceil' → logprob: -6.786373615264893

Token 164: ' rac' (ID: 12334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5455756783485413
    2. '555' → logprob: -1.2955756187438965
    3. ' int' → logprob: -2.4205756187438965
    4. '556' → logprob: -3.9205756187438965
    5. ' ' → logprob: -4.4205756187438965
    6. '550' → logprob: -5.4205756187438965
    7. 'is' → logprob: -5.7955756187438965
    8. 'floor' → logprob: -5.7955756187438965
    9. '(int' → logprob: -6.0455756187438965
    10. 'ceil' → logprob: -6.2955756187438965

Token 165: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.025363031774759293
    2. '```' → logprob: -4.650362968444824
    3. '``' → logprob: -5.775362968444824
    4. '2' → logprob: -5.900362968444824
    5. '#' → logprob: -7.150362968444824
    6. 'îne' → logprob: -7.275362968444824
    7. 'e' → logprob: -7.275362968444824
    8. '`' → logprob: -7.275362968444824
    9. 'ïne' → logprob: -7.400362968444824
    10. '(' → logprob: -7.525362968444824

Token 166: ' carr' (ID: 18321)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4502325654029846
    2. ' carr' → logprob: -1.4502325057983398
    3. 'int' → logprob: -3.82523250579834
    4. ' (' → logprob: -3.95023250579834
    5. 'car' → logprob: -4.07523250579834
    6. '(int' → logprob: -4.45023250579834
    7. ' int' → logprob: -4.57523250579834
    8. ' de' → logprob: -4.70023250579834
    9. '_' → logprob: -4.95023250579834
    10. ' carre' → logprob: -5.32523250579834

Token 167: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.1270626783370972
    2. 'é' → logprob: -1.2520626783370972
    3. 'ère' → logprob: -1.3770626783370972
    4. 'ière' → logprob: -3.0020627975463867
    5. 'ine' → logprob: -3.3770627975463867
    6. 'ére' → logprob: -4.877062797546387
    7. 'ure' → logprob: -5.002062797546387
    8. 'aire' → logprob: -5.002062797546387
    9. 'ur' → logprob: -5.252062797546387
    10. '2' → logprob: -5.502062797546387

Token 168: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03790226951241493
    2. '(int' → logprob: -3.912902355194092
    3. 'int' → logprob: -4.537902355194092
    4. 'de' → logprob: -6.162902355194092
    5. '(n' → logprob: -6.162902355194092
    6. ' (' → logprob: -6.787902355194092
    7. 'n' → logprob: -7.662902355194092
    8. ' de' → logprob: -8.412901878356934
    9. ' int' → logprob: -8.537901878356934
    10. '(i' → logprob: -10.162901878356934

Token 169: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.19937977194786072
    2. '556' → logprob: -2.8243796825408936
    3. 'int' → logprob: -3.1993796825408936
    4. ' ' → logprob: -3.3243796825408936
    5. ' int' → logprob: -3.8243796825408936
    6. '(' → logprob: -4.324379920959473
    7. '(int' → logprob: -5.199379920959473
    8. 'n' → logprob: -6.699379920959473
    9. ' (' → logprob: -6.824379920959473
    10. ' n' → logprob: -7.199379920959473

Token 170: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.0026435561012476683
    2. '(' → logprob: -6.252643585205078
    3. 'n' → logprob: -8.002643585205078
    4. ' ' → logprob: -9.252643585205078
    5. '556' → logprob: -9.252643585205078
    6. '55' → logprob: -9.877643585205078
    7. '(n' → logprob: -9.877643585205078
    8. 'int' → logprob: -11.190143585205078
    9. '550' → logprob: -12.002643585205078
    10. ' (' → logprob: -12.252643585205078

Token 171: '55' (ID: 3152)
  Prédit: '56'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '56' → logprob: -0.10270608216524124
    2. '55' → logprob: -2.35270619392395
    3. '6' → logprob: -7.102705955505371
    4. '36' → logprob: -7.602705955505371
    5. '5' → logprob: -7.852705955505371
    6. '66' → logprob: -8.102705955505371
    7. '54' → logprob: -9.102705955505371
    8. '46' → logprob: -9.227705955505371
    9. '556' → logprob: -9.977705955505371
    10. '35' → logprob: -10.102705955505371

Token 172: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04126598313450813
    2. ' (' → logprob: -3.4162659645080566
    3. '2' → logprob: -5.666265964508057
    4. '(range' → logprob: -7.166265964508057
    5. '(
' → logprob: -7.541265964508057
    6. '(n' → logprob: -7.666265964508057
    7. 'range' → logprob: -7.791265964508057
    8. '(int' → logprob: -7.791265964508057
    9. 'for' → logprob: -8.166266441345215
    10. 'int' → logprob: -8.416266441345215

Token 173: ' arr' (ID: 1724)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8086149096488953
    2. 'int' → logprob: -1.43361496925354
    3. ' ' → logprob: -1.68361496925354
    4. '556' → logprob: -2.43361496925354
    5. '555' → logprob: -3.43361496925354
    6. '2' → logprob: -6.308614730834961
    7. '(int' → logprob: -7.058614730834961
    8. ' floor' → logprob: -7.308614730834961
    9. 'sqrt' → logprob: -7.308614730834961
    10. '557' → logprob: -7.558614730834961

Token 174: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.17100249230861664
    2. 'ondi' → logprob: -1.9210025072097778
    3. 'o' → logprob: -5.421002388000488
    4. 'ound' → logprob: -6.046002388000488
    5. 'ondissement' → logprob: -6.671002388000488
    6. 'ont' → logprob: -7.046002388000488
    7. 'on' → logprob: -7.421002388000488
    8. 'onde' → logprob: -9.046002388000488
    9. '```' → logprob: -9.171002388000488
    10. 'oint' → logprob: -9.483502388000488

Token 175: 'ie' (ID: 396)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48572391271591187
    2. 'ie' → logprob: -0.9857239127159119
    3. '(' → logprob: -4.735723972320557
    4. '(i' → logprob: -6.860723972320557
    5. ')' → logprob: -7.735723972320557
    6. 'is' → logprob: -8.110723495483398
    7. 'e' → logprob: -8.735723495483398
    8. '()' → logprob: -8.860723495483398
    9. ' ie' → logprob: -9.235723495483398
    10. 'ies' → logprob: -9.485723495483398

Token 176: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03577054664492607
    2. '(int' → logprob: -3.5357706546783447
    3. 'int' → logprob: -6.660770416259766
    4. ' (' → logprob: -7.035770416259766
    5. '((' → logprob: -7.160770416259766
    6. '2' → logprob: -7.285770416259766
    7. '(
' → logprob: -7.535770416259766
    8. '1' → logprob: -7.535770416259766
    9. '(up' → logprob: -8.035770416259766
    10. '()' → logprob: -9.035770416259766

Token 177: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25058236718177795
    2. 'int' → logprob: -3.000582456588745
    3. '5' → logprob: -3.625582456588745
    4. '1' → logprob: -3.750582456588745
    5. 'sup' → logprob: -3.750582456588745
    6. ' l' → logprob: -4.000582218170166
    7. '+' → logprob: -4.000582218170166
    8. '6' → logprob: -4.375582218170166
    9. ' ' → logprob: -4.375582218170166
    10. '2' → logprob: -5.250582218170166

Token 178: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4797402024269104
    2. ''ent' → logprob: -1.6047401428222656
    3. 'ent' → logprob: -2.2297401428222656
    4. ''int' → logprob: -4.229740142822266
    5. '10' → logprob: -4.979740142822266
    6. ')' → logprob: -5.104740142822266
    7. 'ceil' → logprob: -5.479740142822266
    8. '4' → logprob: -5.729740142822266
    9. '100' → logprob: -5.729740142822266
    10. '2' → logprob: -5.854740142822266

Token 179: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.2700639069080353
    2. 'ière' → logprob: -1.520063877105713
    3. 'er' → logprob: -5.395063877105713
    4. 'i' → logprob: -5.895063877105713
    5. 'rée' → logprob: -6.395063877105713
    6. 'ti' → logprob: -6.645063877105713
    7. 't' → logprob: -6.770063877105713
    8. 'tr' → logprob: -7.145063877105713
    9. 're' → logprob: -7.270063877105713
    10. 'ir' → logprob: -7.520063877105713

Token 180: ' inférieur' (ID: 191498)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38768813014030457
    2. '(int' → logprob: -1.637688159942627
    3. 'int' → logprob: -2.512688159942627
    4. 'floor' → logprob: -4.137688159942627
    5. 'ceil' → logprob: -4.887688159942627
    6. '```' → logprob: -4.887688159942627
    7. 'tr' → logprob: -6.637688159942627
    8. 'up' → logprob: -7.012688159942627
    9. 'sup' → logprob: -7.012688159942627
    10. '(f' → logprob: -7.137688159942627

Token 181: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26004305481910706
    2. 'int' → logprob: -2.885043144226074
    3. 'for' → logprob: -3.010043144226074
    4. '2' → logprob: -3.135043144226074
    5. '(int' → logprob: -3.135043144226074
    6. ' (' → logprob: -3.760043144226074
    7. ' for' → logprob: -5.885043144226074
    8. '(n' → logprob: -6.260043144226074
    9. 'floor' → logprob: -6.635043144226074
    10. ' ' → logprob: -6.760043144226074

Token 182: ' puis' (ID: 18766)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5145694613456726
    2. ' int' → logprob: -1.0145695209503174
    3. 'is' → logprob: -4.014569282531738
    4. 'floor' → logprob: -4.889569282531738
    5. ' floor' → logprob: -5.764569282531738
    6. ' ' → logprob: -5.764569282531738
    7. ' is' → logprob: -6.139569282531738
    8. 'sqrt' → logprob: -6.764569282531738
    9. '(int' → logprob: -7.014569282531738
    10. '2' → logprob: -7.139569282531738

Token 183: ' en' (ID: 469)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '555' → logprob: -0.7108154296875
    2. 'int' → logprob: -1.7108154296875
    3. ' ' → logprob: -1.9608154296875
    4. '556' → logprob: -2.5858154296875
    5. ' int' → logprob: -3.5858154296875
    6. '1' → logprob: -3.7108154296875
    7. '(' → logprob: -4.3358154296875
    8. '56' → logprob: -4.3358154296875
    9. '+' → logprob: -4.7108154296875
    10. '(int' → logprob: -4.8358154296875

Token 184: ' ajouter' (ID: 78457)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0481463260948658
    2. ' ' → logprob: -3.4231462478637695
    3. '+' → logprob: -4.5481462478637695
    4. ' range' → logprob: -6.0481462478637695
    5. 'range' → logprob: -7.1731462478637695
    6. '2' → logprob: -9.17314624786377
    7. ' +' → logprob: -9.42314624786377
    8. '(' → logprob: -10.04814624786377
    9. 'crement' → logprob: -10.17314624786377
    10. ' plus' → logprob: -10.17314624786377

Token 185: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08969125151634216
    2. ' ' → logprob: -2.464691162109375
    3. '(' → logprob: -8.089691162109375
    4. '+' → logprob: -8.089691162109375
    5. ' +' → logprob: -9.714691162109375
    6. ' ' → logprob: -10.589691162109375
    7. ',' → logprob: -11.589691162109375
    8. '2' → logprob: -11.714691162109375
    9. ' (' → logprob: -11.964691162109375
    10. ')' → logprob: -12.214691162109375

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026394929736852646
    2. ' ' → logprob: -3.651394844055176
    3. '(' → logprob: -10.276394844055176
    4. '+' → logprob: -10.526394844055176
    5. ' +' → logprob: -10.901394844055176
    6. ' plus' → logprob: -12.651394844055176
    7. '2' → logprob: -12.901394844055176
    8. ' ' → logprob: -13.151394844055176
    9. '  ' → logprob: -13.651394844055176
    10. ' one' → logprob: -13.776394844055176

Token 187: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04127833619713783
    2. '(int' → logprob: -3.91627836227417
    3. '2' → logprob: -5.04127836227417
    4. 'int' → logprob: -5.16627836227417
    5. ':' → logprob: -5.54127836227417
    6. ' (' → logprob: -5.91627836227417
    7. ' ' → logprob: -8.166277885437012
    8. '(
' → logprob: -8.291277885437012
    9. '+' → logprob: -8.916277885437012
    10. '(n' → logprob: -8.916277885437012

Token 188: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8704594969749451
    2. '(' → logprob: -0.9954594969749451
    3. 'int' → logprob: -2.37045955657959
    4. '2' → logprob: -2.74545955657959
    5. ' for' → logprob: -3.62045955657959
    6. '(int' → logprob: -4.87045955657959
    7. ' (' → logprob: -5.24545955657959
    8. 'n' → logprob: -6.12045955657959
    9. 'range' → logprob: -6.12045955657959
    10. ' ' → logprob: -6.49545955657959

Token 189: ' Ceci' (ID: 144699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6689171195030212
    2. 'for' → logprob: -1.418917179107666
    3. 'int' → logprob: -2.293917179107666
    4. ' int' → logprob: -2.918917179107666
    5. '2' → logprob: -3.293917179107666
    6. ' ' → logprob: -4.168917179107666
    7. ' i' → logprob: -4.168917179107666
    8. 'i' → logprob: -4.668917179107666
    9. '(' → logprob: -5.293917179107666
    10. ' (' → logprob: -6.168917179107666

Token 190: ' est' (ID: 893)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.022838830947876
    2. ' for' → logprob: -1.647838830947876
    3. ':' → logprob: -1.897838830947876
    4. ' n' → logprob: -2.897838830947876
    5. ' est' → logprob: -3.397838830947876
    6. ' ' → logprob: -3.522838830947876
    7. 'n' → logprob: -3.772838830947876
    8. ' a' → logprob: -3.772838830947876
    9. ' :
' → logprob: -3.897838830947876
    10. 'for' → logprob: -4.272838592529297

Token 191: ' nécessaire' (ID: 43098)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.628606915473938
    2. 'range' → logprob: -1.878606915473938
    3. ' la' → logprob: -2.0036067962646484
    4. ' une' → logprob: -2.2536067962646484
    5. ' int' → logprob: -3.6286067962646484
    6. ' un' → logprob: -5.378606796264648
    7. ' appelé' → logprob: -5.503606796264648
    8. ' for' → logprob: -5.753606796264648
    9. ' i' → logprob: -5.753606796264648
    10. ' ' → logprob: -6.003606796264648

Token 192: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5095492601394653
    2. ' pour' → logprob: -1.7595492601394653
    3. ' to' → logprob: -2.509549140930176
    4. ' ' → logprob: -3.134549140930176
    5. 'for' → logprob: -3.134549140930176
    6. ' afin' → logprob: -3.384549140930176
    7. ',' → logprob: -5.259549140930176
    8. ' à' → logprob: -5.259549140930176
    9. '(' → logprob: -6.259549140930176
    10. ' (' → logprob: -6.509549140930176

Token 193: ' appliquer' (ID: 172872)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.40884047746658325
    2. 'int' → logprob: -1.1588404178619385
    3. ' range' → logprob: -5.533840656280518
    4. 'range' → logprob: -5.783840656280518
    5. ' garantir' → logprob: -5.908840656280518
    6. ' ' → logprob: -6.533840656280518
    7. ' couvrir' → logprob: -6.783840656280518
    8. ' assurer' → logprob: -6.908840656280518
    9. 'prendre' → logprob: -6.908840656280518
    10. ' comprendre' → logprob: -7.408840656280518

Token 194: ' efficacement' (ID: 155449)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1534979343414307
    2. '2' → logprob: -1.6534979343414307
    3. ' int' → logprob: -2.0284979343414307
    4. 'range' → logprob: -2.5284979343414307
    5. ' la' → logprob: -2.6534979343414307
    6. 'la' → logprob: -2.6534979343414307
    7. ' ' → logprob: -3.2784979343414307
    8. ' range' → logprob: -4.028497695922852
    9. 'le' → logprob: -4.153497695922852
    10. 'sqrt' → logprob: -4.778497695922852

Token 195: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9892427921295166
    2. ' la' → logprob: -1.1142427921295166
    3. 'int' → logprob: -1.8642427921295166
    4. 'range' → logprob: -3.4892427921295166
    5. ' int' → logprob: -3.6142427921295166
    6. 'le' → logprob: -3.7392427921295166
    7. ' une' → logprob: -4.4892425537109375
    8. '2' → logprob: -4.6142425537109375
    9. ' ' → logprob: -4.9892425537109375
    10. '(' → logprob: -4.9892425537109375

Token 196: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.09723355621099472
    2. 'cr' → logprob: -2.597233533859253
    3. 'crib' → logprob: -4.472233772277832
    4. 's' → logprob: -5.472233772277832
    5. ' sieve' → logprob: -6.972233772277832
    6. 'Cr' → logprob: -8.347233772277832
    7. ' Cr' → logprob: -8.597233772277832
    8. 'alg' → logprob: -8.597233772277832
    9. ' crib' → logprob: -9.347233772277832
    10. 'n' → logprob: -9.597233772277832

Token 197: 'ible' (ID: 1430)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9651094675064087
    2. 'ange' → logprob: -1.3401094675064087
    3. 'e' → logprob: -1.9651094675064087
    4. 'oot' → logprob: -3.215109348297119
    5. 'ac' → logprob: -4.090109348297119
    6. ' ' → logprob: -4.090109348297119
    7. 'o' → logprob: -4.090109348297119
    8. 'é' → logprob: -4.215109348297119
    9. 'ée' → logprob: -4.465109348297119
    10. '```' → logprob: -4.590109348297119

Token 198: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3427664637565613
    2. '(int' → logprob: -2.217766523361206
    3. 'int' → logprob: -2.467766523361206
    4. '2' → logprob: -3.217766523361206
    5. 'for' → logprob: -3.342766523361206
    6. ' for' → logprob: -4.967766284942627
    7. ' ' → logprob: -5.717766284942627
    8. ' (' → logprob: -6.092766284942627
    9. ' int' → logprob: -6.342766284942627
    10. 'i' → logprob: -6.967766284942627

Token 199: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.5579901933670044
    2. 'Er' → logprob: -1.5579901933670044
    3. 'É' → logprob: -1.5579901933670044
    4. 'erat' → logprob: -6.182990074157715
    5. 'S' → logprob: -6.682990074157715
    6. ' erat' → logprob: -7.432990074157715
    7. 'Euler' → logprob: -7.557990074157715
    8. 's' → logprob: -8.182990074157715
    9. 'Ég' → logprob: -8.307990074157715
    10. '```' → logprob: -8.307990074157715

Token 200: 'rat' (ID: 11990)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6424902081489563
    2. 'rat' → logprob: -0.7674902081489563
    3. 'rase' → logprob: -5.892490386962891
    4. 'rast' → logprob: -5.892490386962891
    5. 'R' → logprob: -6.642490386962891
    6. 'rats' → logprob: -7.767490386962891
    7. 'ras' → logprob: -7.892490386962891
    8. 'rac' → logprob: -8.26749038696289
    9. '#' → logprob: -8.26749038696289
    10. 'ration' → logprob: -8.51749038696289

Token 201: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.21499817073345184
    2. 'os' → logprob: -1.7149981260299683
    3. 'o' → logprob: -5.714998245239258
    4. 'osten' → logprob: -6.089998245239258
    5. 'h' → logprob: -6.464998245239258
    6. 'oste' → logprob: -6.839998245239258
    7. 'hos' → logprob: -7.214998245239258
    8. 'osen' → logprob: -7.589998245239258
    9. 'oen' → logprob: -7.589998245239258
    10. 'ose' → logprob: -7.839998245239258

Token 202: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.15848781168460846
    2. 'ène' → logprob: -2.4084877967834473
    3. 'ene' → logprob: -3.0334877967834473
    4. 'enes' → logprob: -5.533487796783447
    5. 'hen' → logprob: -6.783487796783447
    6. 'en' → logprob: -7.783487796783447
    7. 'ènes' → logprob: -7.908487796783447
    8. 'o' → logprob: -8.408488273620605
    9. 'here' → logprob: -8.658488273620605
    10. 'os' → logprob: -8.908488273620605

Token 203: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.15076318383216858
    2. 'ene' → logprob: -2.2757632732391357
    3. 'enes' → logprob: -3.6507632732391357
    4. 'ènes' → logprob: -5.025763034820557
    5. 'e' → logprob: -6.650763034820557
    6. '#' → logprob: -7.275763034820557
    7. 'o' → logprob: -7.525763034820557
    8. '{' → logprob: -7.900763034820557
    9. '1' → logprob: -8.150763511657715
    10. 'en' → logprob: -8.400763511657715

Token 204: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3798891305923462
    2. 'for' → logprob: -1.6298891305923462
    3. 'int' → logprob: -1.7548891305923462
    4. ':' → logprob: -2.2548890113830566
    5. 'range' → logprob: -2.5048890113830566
    6. '(range' → logprob: -3.0048890113830566
    7. '(int' → logprob: -3.2548890113830566
    8. 'sqrt' → logprob: -3.7548890113830566
    9. ' for' → logprob: -4.254889011383057
    10. 'i' → logprob: -4.254889011383057

Token 205: 'for' (ID: 1938)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8102884888648987
    2. '(' → logprob: -1.560288429260254
    3. '(int' → logprob: -2.060288429260254
    4. 'for' → logprob: -2.060288429260254
    5. 'range' → logprob: -4.185288429260254
    6. ' for' → logprob: -4.435288429260254
    7. ' int' → logprob: -4.560288429260254
    8. 'sqrt' → logprob: -4.810288429260254
    9. 'floor' → logprob: -4.935288429260254
    10. ')' → logprob: -5.310288429260254

Token 206: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004750984255224466
    2. 'i' → logprob: -5.379751205444336
    3. ' ' → logprob: -9.004751205444336
    4. '	i' → logprob: -12.004751205444336
    5. '  ' → logprob: -14.129751205444336
    6. ' ' → logprob: -14.504751205444336
    7. '```' → logprob: -15.379751205444336
    8. '   ' → logprob: -16.754751205444336
    9. ' ‌' → logprob: -17.379751205444336
    10. ' ' → logprob: -17.379751205444336

Token 207: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007875737734138966
    2. 'in' → logprob: -4.882875919342041
    3. ' ' → logprob: -8.257875442504883
    4. '  ' → logprob: -13.257875442504883
    5. '1' → logprob: -13.382875442504883
    6. '	in' → logprob: -13.382875442504883
    7. '2' → logprob: -14.007875442504883
    8. 'import' → logprob: -14.632875442504883
    9. '   ' → logprob: -14.632875442504883
    10. ' ' → logprob: -14.882875442504883

Token 208: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02786790020763874
    2. 'range' → logprob: -3.6528677940368652
    3. ' ' → logprob: -6.527867794036865
    4. '2' → logprob: -9.277868270874023
    5. '1' → logprob: -12.777868270874023
    6. '(range' → logprob: -13.152868270874023
    7. '	range' → logprob: -13.152868270874023
    8. '(' → logprob: -13.652868270874023
    9. ' int' → logprob: -14.777868270874023
    10. '   ' → logprob: -14.902868270874023

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.12500286102295
    3. '2' → logprob: -15.00000286102295
    4. '(
' → logprob: -16.375001907348633
    5. '(int' → logprob: -19.125001907348633
    6. '((' → logprob: -19.375001907348633
    7. ' ' → logprob: -20.000001907348633
    8. 'int' → logprob: -22.000001907348633
    9. '```' → logprob: -22.250001907348633
    10. '	' → logprob: -22.500001907348633

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007534049218520522
    2. ' ' → logprob: -7.250753402709961
    3. '(' → logprob: -10.125753402709961
    4. '   ' → logprob: -13.000753402709961
    5. 'int' → logprob: -15.375753402709961
    6. '	' → logprob: -15.500753402709961
    7. '
' → logprob: -15.750753402709961
    8. ',' → logprob: -16.00075340270996
    9. '  ' → logprob: -16.00075340270996
    10. ' (' → logprob: -16.50075340270996

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009918992407619953
    2. ' ,' → logprob: -4.634919166564941
    3. ',int' → logprob: -8.759919166564941
    4. 'int' → logprob: -12.634919166564941
    5. ' int' → logprob: -14.134919166564941
    6. '(int' → logprob: -14.509919166564941
    7. ',
' → logprob: -15.259919166564941
    8. '(' → logprob: -15.384919166564941
    9. ' ' → logprob: -15.509919166564941
    10. ',s' → logprob: -15.884919166564941

Token 212: ' floor' (ID: 8350)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42135563492774963
    2. ' int' → logprob: -1.5463556051254272
    3. 'floor' → logprob: -2.921355724334717
    4. 'is' → logprob: -3.046355724334717
    5. '(int' → logprob: -3.796355724334717
    6. ' floor' → logprob: -6.171355724334717
    7. 'ceil' → logprob: -6.671355724334717
    8. ' is' → logprob: -6.921355724334717
    9. '=int' → logprob: -7.171355724334717
    10. ' ' → logprob: -8.421355247497559

Token 213: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0027598219458013773
    2. '(' → logprob: -6.00275993347168
    3. 'sqrt' → logprob: -8.37775993347168
    4. ' (' → logprob: -10.75275993347168
    5. '(pow' → logprob: -10.87775993347168
    6. '((' → logprob: -11.37775993347168
    7. ' sqrt' → logprob: -13.62775993347168
    8. '.sqrt' → logprob: -15.50275993347168
    9. ')' → logprob: -15.87775993347168
    10. '(i' → logprob: -16.12775993347168

Token 214: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.003308062208816409
    2. '(' → logprob: -6.128308296203613
    3. 'q' → logprob: -7.253308296203613
    4. 'sqrt' → logprob: -8.878308296203613
    5. 'qr' → logprob: -8.878308296203613
    6. '(s' → logprob: -10.253308296203613
    7. '
' → logprob: -10.878308296203613
    8. 'qt' → logprob: -11.003308296203613
    9. 'qu' → logprob: -11.628308296203613
    10. 'qa' → logprob: -11.753308296203613

Token 215: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.504040356958285e-05
    2. '555' → logprob: -9.750064849853516
    3. ' (' → logprob: -12.375064849853516
    4. '(
' → logprob: -13.625064849853516
    5. '((' → logprob: -14.125064849853516
    6. '556' → logprob: -16.500064849853516
    7. ')' → logprob: -16.875064849853516
    8. '455' → logprob: -17.000064849853516
    9. 'n' → logprob: -17.000064849853516
    10. ' ' → logprob: -17.125064849853516

Token 216: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.007756276521831751
    2. '(' → logprob: -4.882756233215332
    3. ' ' → logprob: -9.007756233215332
    4. ' (' → logprob: -11.882756233215332
    5. '545' → logprob: -12.382756233215332
    6. '556' → logprob: -12.382756233215332
    7. '   ' → logprob: -13.632756233215332
    8. ')' → logprob: -13.757756233215332
    9. '55' → logprob: -13.757756233215332
    10. '455' → logprob: -13.820256233215332

Token 217: '55' (ID: 3152)
  Prédit: '55'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -0.0036760864313691854
    2. '56' → logprob: -5.628675937652588
    3. '5' → logprob: -9.753676414489746
    4. '555' → logprob: -12.066176414489746
    5. ' ' → logprob: -12.378676414489746
    6. '54' → logprob: -13.503676414489746
    7. '556' → logprob: -13.878676414489746
    8. '35' → logprob: -14.253676414489746
    9. ')' → logprob: -14.253676414489746
    10. '```' → logprob: -14.816176414489746

Token 218: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2486436814069748
    2. '))+' → logprob: -1.9986436367034912
    3. ')' → logprob: -2.498643636703491
    4. ')+' → logprob: -6.74864387512207
    5. ' ))' → logprob: -7.12364387512207
    6. ' ' → logprob: -8.49864387512207
    7. ')))' → logprob: -9.24864387512207
    8. ' )' → logprob: -9.37364387512207
    9. '()))' → logprob: -10.99864387512207
    10. '   ' → logprob: -11.74864387512207

Token 219: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1608443558216095
    2. ')+' → logprob: -1.910844326019287
    3. '+' → logprob: -7.660844326019287
    4. ' )' → logprob: -9.160844802856445
    5. '())' → logprob: -11.285844802856445
    6. '))+' → logprob: -11.535844802856445
    7. ' +' → logprob: -11.785844802856445
    8. '()' → logprob: -12.285844802856445
    9. '()+' → logprob: -13.160844802856445
    10. '+)' → logprob: -13.535844802856445

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '  ' → logprob: -16.375804901123047
    4. ')' → logprob: -16.625804901123047
    5. '2' → logprob: -17.125804901123047
    6. '0' → logprob: -17.375804901123047
    7. ' ' → logprob: -17.500804901123047
    8. '   ' → logprob: -17.875804901123047
    9. '))' → logprob: -18.750804901123047
    10. ' )' → logprob: -18.875804901123047

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '0' → logprob: -16.625030517578125
    4. '))' → logprob: -17.500030517578125
    5. ')' → logprob: -17.625030517578125
    6. '2' → logprob: -17.750030517578125
    7. '  ' → logprob: -18.000030517578125
    8. '   ' → logprob: -18.750030517578125
    9. ' )' → logprob: -19.625030517578125
    10. '.' → logprob: -19.875030517578125

Token 222: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6731146574020386
    2. ')):' → logprob: -0.7981146574020386
    3. '))' → logprob: -3.673114776611328
    4. ')' → logprob: -4.298114776611328
    5. ':' → logprob: -7.673114776611328
    6. ')):
' → logprob: -9.173114776611328
    7. ' ):' → logprob: -9.798114776611328
    8. ')):
' → logprob: -10.923114776611328
    9. ' ))' → logprob: -11.298114776611328
    10. ' ' → logprob: -11.423114776611328

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12821005284786224
    2. ':' → logprob: -2.8782100677490234
    3. ' ' → logprob: -3.1282100677490234
    4. ' if' → logprob: -5.128210067749023
    5. '    
' → logprob: -5.753210067749023
    6. '    ' → logprob: -6.003210067749023
    7. ' :' → logprob: -6.128210067749023
    8. ' 
' → logprob: -6.503210067749023
    9. '  ' → logprob: -6.628210067749023
    10. ':
' → logprob: -6.878210067749023

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.933748185634613
    2. ' if' → logprob: -0.933748185634613
    3. 'if' → logprob: -1.5587482452392578
    4. '    
' → logprob: -6.683748245239258
    5. ' ' → logprob: -6.933748245239258
    6. '    ' → logprob: -7.308748245239258
    7. '       ' → logprob: -8.558748245239258
    8. ' 
' → logprob: -9.558748245239258
    9. '<|end|>' → logprob: -9.558748245239258
    10. '
' → logprob: -10.183748245239258

Token 225: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.220686674118042
    2. ' if' → logprob: -1.720686674118042
    3. '   ' → logprob: -3.970686674118042
    4. ' ' → logprob: -9.595686912536621
    5. '    ' → logprob: -9.595686912536621
    6. '    
' → logprob: -10.595686912536621
    7. '  ' → logprob: -11.095686912536621
    8. 'ps' → logprob: -12.095686912536621
    9. 'while' → logprob: -12.095686912536621
    10. ' 
' → logprob: -12.220686912536621

Token 226: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.0042671505361795425
    2. 'if' → logprob: -5.87926721572876
    3. ' if' → logprob: -7.25426721572876
    4. '   ' → logprob: -8.004266738891602
    5. 'ifie' → logprob: -8.129266738891602
    6. 'ifer' → logprob: -9.754266738891602
    7. 'ifiez' → logprob: -11.004266738891602
    8. 'IFIER' → logprob: -11.254266738891602
    9. 'ify' → logprob: -11.379266738891602
    10. 'i' → logprob: -12.004266738891602

Token 227: ' si' (ID: 1784)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08285289257764816
    2. 'i' → logprob: -3.332852840423584
    3. ' ' → logprob: -3.332852840423584
    4. ' if' → logprob: -4.957852840423584
    5. 'if' → logprob: -7.082852840423584
    6. '  ' → logprob: -8.582853317260742
    7. '    ' → logprob: -9.957853317260742
    8. '   ' → logprob: -11.707853317260742
    9. ' ' → logprob: -11.957853317260742
    10. '	i' → logprob: -12.207853317260742

Token 228: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2014172375202179
    2. 'i' → logprob: -1.7014172077178955
    3. '	i' → logprob: -13.451416969299316
    4. ' ' → logprob: -13.701416969299316
    5. '   ' → logprob: -14.701416969299316
    6. ' ' → logprob: -15.076416969299316
    7. '{i' → logprob: -15.326416969299316
    8. ')i' → logprob: -16.576417922973633
    9. '(i' → logprob: -16.763917922973633
    10. '_i' → logprob: -17.138917922973633

Token 229: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42881467938423157
    2. ' i' → logprob: -1.0538146495819092
    3. ' ' → logprob: -9.303814888000488
    4. '   ' → logprob: -12.053814888000488
    5. '	i' → logprob: -12.053814888000488
    6. '    ' → logprob: -12.928814888000488
    7. '  ' → logprob: -13.053814888000488
    8. ' ' → logprob: -13.428814888000488
    9. ' 
' → logprob: -13.866314888000488
    10. '
' → logprob: -14.366314888000488

Token 230: ' courant' (ID: 74694)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.348464697599411
    2. 'i' → logprob: -1.2234647274017334
    3. ' ' → logprob: -11.723464965820312
    4. '	i' → logprob: -11.973464965820312
    5. ' in' → logprob: -13.723464965820312
    6. '   ' → logprob: -13.848464965820312
    7. '  ' → logprob: -14.098464965820312
    8. 'in' → logprob: -14.223464965820312
    9. ' ' → logprob: -14.848464965820312
    10. '{i' → logprob: -15.098464965820312

Token 231: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3906711935997009
    2. 'i' → logprob: -1.1406712532043457
    3. ' ' → logprob: -5.765671253204346
    4. '  ' → logprob: -8.765670776367188
    5. ' is' → logprob: -9.015670776367188
    6. '   ' → logprob: -9.015670776367188
    7. ' est' → logprob: -9.765670776367188
    8. 'in' → logprob: -10.390670776367188
    9. '	i' → logprob: -10.640670776367188
    10. ' in' → logprob: -10.765670776367188

Token 232: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08960255235433578
    2. 'in' → logprob: -2.464602470397949
    3. ' est' → logprob: -7.839602470397949
    4. ' ' → logprob: -9.08960247039795
    5. ' is' → logprob: -9.96460247039795
    6. ' en' → logprob: -10.46460247039795
    7. ' not' → logprob: -10.96460247039795
    8. ' i' → logprob: -11.21460247039795
    9. ' ' → logprob: -11.21460247039795
    10. '<|end|>' → logprob: -11.83960247039795

Token 233: ' encore' (ID: 14043)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.23710361123085022
    2. ' in' → logprob: -2.4871037006378174
    3. 'dans' → logprob: -2.4871037006378174
    4. ' dans' → logprob: -3.4871037006378174
    5. ' i' → logprob: -5.112103462219238
    6. 'i' → logprob: -5.487103462219238
    7. ' ' → logprob: -6.362103462219238
    8. 'prés' → logprob: -6.987103462219238
    9. ' present' → logprob: -7.987103462219238
    10. 'present' → logprob: -8.112103462219238

Token 234: ' présent' (ID: 24129)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.735729455947876
    2. 'in' → logprob: -1.235729455947876
    3. 'prés' → logprob: -2.235729455947876
    4. ' dans' → logprob: -2.485729455947876
    5. ' in' → logprob: -4.235729217529297
    6. 'present' → logprob: -4.235729217529297
    7. ' present' → logprob: -5.485729217529297
    8. 'ps' → logprob: -6.360729217529297
    9. 'pres' → logprob: -6.360729217529297
    10. ' présent' → logprob: -6.485729217529297

Token 235: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8730716109275818
    2. ' dans' → logprob: -1.1230716705322266
    3. 'dans' → logprob: -1.9980716705322266
    4. '   ' → logprob: -2.6230716705322266
    5. 'in' → logprob: -3.1230716705322266
    6. '    ' → logprob: -5.623071670532227
    7. '  ' → logprob: -7.623071670532227
    8. ' ' → logprob: -8.498071670532227
    9. 'au' → logprob: -9.623071670532227
    10. ' ' → logprob: -9.623071670532227

Token 236: ' l' (ID: 305)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.014169503934681416
    2. ' ps' → logprob: -4.264169692993164
    3. '	ps' → logprob: -12.389169692993164
    4. '(ps' → logprob: -14.014169692993164
    5. ' ' → logprob: -15.014169692993164
    6. '   ' → logprob: -15.014169692993164
    7. '_ps' → logprob: -15.889169692993164
    8. 'p' → logprob: -16.639169692993164
    9. '.ps' → logprob: -16.639169692993164
    10. ' ' → logprob: -16.764169692993164

Token 237: ''ensemble' (ID: 79341)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0032409359700977802
    2. ' ps' → logprob: -6.003241062164307
    3. 'set' → logprob: -7.503241062164307
    4. 's' → logprob: -8.878240585327148
    5. '_ps' → logprob: -10.753240585327148
    6. '	ps' → logprob: -10.878240585327148
    7. ' set' → logprob: -11.503240585327148
    8. '(ps' → logprob: -12.003240585327148
    9. '#' → logprob: -12.753240585327148
    10. 'ensemble' → logprob: -12.878240585327148

Token 238: ' ps' (ID: 10942)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12089768797159195
    2. '   ' → logprob: -2.7458977699279785
    3. ' in' → logprob: -3.8708977699279785
    4. ' i' → logprob: -4.4958977699279785
    5. 'if' → logprob: -5.1208977699279785
    6. '    ' → logprob: -5.3708977699279785
    7. ' ' → logprob: -6.2458977699279785
    8. 'in' → logprob: -6.7458977699279785
    9. ' :' → logprob: -7.3708977699279785
    10. ':' → logprob: -7.6208977699279785

Token 239: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09333441406488419
    2. ':' → logprob: -2.468334436416626
    3. ' if' → logprob: -5.843334197998047
    4. ':
' → logprob: -7.968334197998047
    5. '       ' → logprob: -8.093334197998047
    6. ' :' → logprob: -8.343334197998047
    7. '    ' → logprob: -8.593334197998047
    8. 'if' → logprob: -9.093334197998047
    9. ',' → logprob: -9.218334197998047
    10. ' and' → logprob: -9.593334197998047

Token 240: 'c' (ID: 66)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09388436377048492
    2. 'i' → logprob: -2.4688844680786133
    3. ')' → logprob: -6.218884468078613
    4. ' )' → logprob: -6.468884468078613
    5. '   ' → logprob: -7.218884468078613
    6. ' ps' → logprob: -8.468884468078613
    7. '):' → logprob: -9.093884468078613
    8. 'ps' → logprob: -9.343884468078613
    9. ' ' → logprob: -9.468884468078613
    10. '    ' → logprob: -10.593884468078613

Token 241: ''est' (ID: 6616)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8227048516273499
    2. ''est' → logprob: -1.822704792022705
    3. 'ps' → logprob: -2.072704792022705
    4. '   ' → logprob: -2.197704792022705
    5. 'e' → logprob: -3.447704792022705
    6. ' i' → logprob: -3.697704792022705
    7. ' ps' → logprob: -4.197704792022705
    8. ' ' → logprob: -4.447704792022705
    9. '#' → logprob: -4.697704792022705
    10. 'ont' → logprob: -4.697704792022705

Token 242: '-à' (ID: 56297)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.273681640625
    2. ' i' → logprob: -2.023681640625
    3. ' qu' → logprob: -3.023681640625
    4. 'i' → logprob: -4.398681640625
    5. '   ' → logprob: -4.898681640625
    6. ' True' → logprob: -5.023681640625
    7. ' un' → logprob: -5.023681640625
    8. 'que' → logprob: -5.273681640625
    9. 'le' → logprob: -5.898681640625
    10. ' une' → logprob: -5.898681640625

Token 243: '-dire' (ID: 76064)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6461776494979858
    2. 'True' → logprob: -0.7711776494979858
    3. '   ' → logprob: -6.271177768707275
    4. 'i' → logprob: -6.521177768707275
    5. 'v' → logprob: -6.521177768707275
    6. 'que' → logprob: -7.021177768707275
    7. 'pres' → logprob: -7.021177768707275
    8. 'l' → logprob: -7.146177768707275
    9. 'ps' → logprob: -7.521177768707275
    10. 'False' → logprob: -7.646177768707275

Token 244: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.8559741377830505
    2. ' i' → logprob: -1.1059741973876953
    3. 'i' → logprob: -2.2309741973876953
    4. ' qu' → logprob: -2.9809741973876953
    5. ' un' → logprob: -3.7309741973876953
    6. '   ' → logprob: -3.7309741973876953
    7. ' if' → logprob: -4.355974197387695
    8. ' une' → logprob: -5.355974197387695
    9. ' ' → logprob: -5.730974197387695
    10. ' si' → logprob: -5.855974197387695

Token 245: ''il' (ID: 14683)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06383318454027176
    2. 'i' → logprob: -2.813833236694336
    3. ' ' → logprob: -6.563833236694336
    4. ' )' → logprob: -8.688833236694336
    5. '  ' → logprob: -9.438833236694336
    6. '   ' → logprob: -9.688833236694336
    7. ')' → logprob: -10.313833236694336
    8. ' not' → logprob: -10.688833236694336
    9. '    ' → logprob: -11.188833236694336
    10. ' ps' → logprob: -11.313833236694336

Token 246: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4236331582069397
    2. ' in' → logprob: -1.548633098602295
    3. 'est' → logprob: -2.798633098602295
    4. 'in' → logprob: -3.048633098602295
    5. ' n' → logprob: -4.673633098602295
    6. ' is' → logprob: -5.548633098602295
    7. '<|end|>' → logprob: -5.923633098602295
    8. ' )' → logprob: -6.048633098602295
    9. ')' → logprob: -6.298633098602295
    10. ' ' → logprob: -6.798633098602295

Token 247: ' considéré' (ID: 136279)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6856120824813843
    2. 'prem' → logprob: -1.8106120824813843
    3. ' premier' → logprob: -2.060612201690674
    4. 'un' → logprob: -2.060612201690674
    5. 'prime' → logprob: -2.935612201690674
    6. 'prés' → logprob: -5.435612201690674
    7. 'pr' → logprob: -5.435612201690674
    8. 'prima' → logprob: -5.435612201690674
    9. ' prime' → logprob: -6.060612201690674
    10. ' primo' → logprob: -6.685612201690674

Token 248: ' premier' (ID: 15506)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.5810797214508057
    2. 'comme' → logprob: -0.8310797214508057
    3. 'as' → logprob: -6.456079483032227
    4. ' as' → logprob: -6.706079483032227
    5. ' like' → logprob: -7.706079483032227
    6. ' ' → logprob: -7.831079483032227
    7. '   ' → logprob: -7.831079483032227
    8. 'prem' → logprob: -8.581079483032227
    9. 'prima' → logprob: -8.581079483032227
    10. ')' → logprob: -8.706079483032227

Token 249: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11838798224925995
    2. '):
' → logprob: -2.8683879375457764
    3. ')' → logprob: -2.9933879375457764
    4. '   ' → logprob: -5.4933881759643555
    5. ' ):' → logprob: -7.9933881759643555
    6. ' )' → logprob: -8.993388175964355
    7. ' ):
' → logprob: -9.243388175964355
    8. '):
' → logprob: -10.368388175964355
    9. ':' → logprob: -11.243388175964355
    10. '):

' → logprob: -11.618388175964355

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13670049607753754
    2. ':' → logprob: -2.511700391769409
    3. ' if' → logprob: -3.261700391769409
    4. ':
' → logprob: -6.136700630187988
    5. '    
' → logprob: -6.386700630187988
    6. 'if' → logprob: -6.511700630187988
    7. '    ' → logprob: -7.011700630187988
    8. ' :' → logprob: -7.261700630187988
    9. ' 
' → logprob: -8.136700630187988
    10. '       ' → logprob: -8.386700630187988

Token 251: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042442502453923225
    2. ' if' → logprob: -5.879244327545166
    3. 'if' (adapté à ' if') → logprob: -6.629244327545166
    4. '    
' → logprob: -9.629243850708008
    5. ' 
' → logprob: -11.379243850708008
    6. '    ' → logprob: -11.379243850708008
    7. ':' → logprob: -11.629243850708008
    8. '   ' → logprob: -12.129243850708008
    9. '       ' → logprob: -12.504243850708008
    10. '
' → logprob: -13.254243850708008

Token 252: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026300877332687378
    2. 'i' → logprob: -3.6513009071350098
    3. ' ' → logprob: -14.901300430297852
    4. ' ' → logprob: -15.776300430297852
    5. '   ' → logprob: -16.90130043029785
    6. '	i' → logprob: -16.90130043029785
    7. '(i' → logprob: -17.15130043029785
    8. '{i' → logprob: -18.52630043029785
    9. ',i' → logprob: -19.46380043029785
    10. '  ' → logprob: -19.65130043029785

Token 253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04364541545510292
    2. 'in' → logprob: -3.1686453819274902
    3. ' ' → logprob: -7.41864538192749
    4. ' i' → logprob: -11.418645858764648
    5. ' ' → logprob: -11.793645858764648
    6. ')' → logprob: -12.043645858764648
    7. 'n' → logprob: -12.168645858764648
    8. '   ' → logprob: -12.668645858764648
    9. '  ' → logprob: -12.793645858764648
    10. ' )' → logprob: -13.418645858764648

Token 254: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.07889650017023087
    2. ' ps' → logprob: -2.5788965225219727
    3. '	ps' → logprob: -12.328896522521973
    4. '(ps' → logprob: -13.578896522521973
    5. '_ps' → logprob: -14.703896522521973
    6. '.ps' → logprob: -15.703896522521973
    7. ' ' → logprob: -16.328895568847656
    8. ' ' → logprob: -16.453895568847656
    9. 'PS' → logprob: -16.578895568847656
    10. 'p' → logprob: -16.828895568847656

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02099025435745716
    2. ':
' → logprob: -3.8959903717041016
    3. '):' → logprob: -8.145990371704102
    4. '):
' → logprob: -8.895990371704102
    5. ':
' → logprob: -11.520990371704102
    6. '   ' → logprob: -12.270990371704102
    7. '       ' → logprob: -12.645990371704102
    8. ')' → logprob: -13.895990371704102
    9. ':

' → logprob: -14.020990371704102
    10. ' :' → logprob: -14.520990371704102

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039039674447849393
    2. '        
' → logprob: -8.37539005279541
    3. '   ' → logprob: -9.75039005279541
    4. '    ' → logprob: -10.50039005279541
    5. '    
' → logprob: -10.87539005279541
    6. ' for' → logprob: -11.37539005279541
    7. '    ' → logprob: -12.12539005279541
    8. ' ' → logprob: -12.25039005279541
    9. '
' → logprob: -12.37539005279541
    10. ',' → logprob: -12.62539005279541

Token 257: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012642079964280128
    2. 'ps' → logprob: -5.637641906738281
    3. ' for' → logprob: -5.637641906738281
    4. '   ' → logprob: -5.887641906738281
    5. 'for' → logprob: -6.012641906738281
    6. ' ps' → logprob: -9.137641906738281
    7. '           ' → logprob: -10.262641906738281
    8. '    ' → logprob: -10.637641906738281
    9. '   ' → logprob: -11.012641906738281
    10. '	ps' → logprob: -11.762641906738281

Token 258: ' Initial' (ID: 9209)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.018997369334101677
    2. 'for' → logprob: -4.1439971923828125
    3. '   ' → logprob: -6.1439971923828125
    4. '       ' → logprob: -7.5189971923828125
    5. '#' → logprob: -8.518997192382812
    6. ' for' → logprob: -10.893997192382812
    7. ' ps' → logprob: -11.018997192382812
    8. 'multip' → logprob: -12.018997192382812
    9. 'p' → logprob: -12.143997192382812
    10. '	ps' → logprob: -12.643997192382812

Token 259: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0022651629988104105
    2. 'er' → logprob: -7.127264976501465
    3. 'izer' → logprob: -7.252264976501465
    4. 'ement' → logprob: -7.252264976501465
    5. 'isation' → logprob: -10.877264976501465
    6. 'ier' → logprob: -11.252264976501465
    7. '   ' → logprob: -13.377264976501465
    8. 'e' → logprob: -13.752264976501465
    9. 'lement' → logprob: -13.877264976501465
    10. 'ize' → logprob: -14.002264976501465

Token 260: ' un' (ID: 537)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10820961743593216
    2. 'multip' → logprob: -3.3582096099853516
    3. 'multiple' → logprob: -3.3582096099853516
    4. '   ' → logprob: -4.483209609985352
    5. ' j' → logprob: -5.233209609985352
    6. ' multiples' → logprob: -5.483209609985352
    7. 'for' → logprob: -5.483209609985352
    8. 'ps' → logprob: -5.608209609985352
    9. ' multiple' → logprob: -6.358209609985352
    10. 'mult' → logprob: -6.608209609985352

Token 261: ' multiplic' (ID: 67929)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4023989737033844
    2. 'multiple' → logprob: -1.902398943901062
    3. 'multip' → logprob: -2.9023990631103516
    4. ' j' → logprob: -3.2773990631103516
    5. ' multiple' → logprob: -3.4023990631103516
    6. 'mult' → logprob: -3.9023990631103516
    7. 'pas' → logprob: -4.777399063110352
    8. 'p' → logprob: -4.777399063110352
    9. 'k' → logprob: -5.652399063110352
    10. '   ' → logprob: -5.777399063110352

Token 262: 'ateur' (ID: 12477)
  Prédit: 'eur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.42738816142082214
    2. 'ateur' → logprob: -1.3023881912231445
    3. 'e' → logprob: -2.6773881912231445
    4. 'er' → logprob: -5.5523881912231445
    5. '=' → logprob: -7.1773881912231445
    6. ' =' → logprob: -7.4273881912231445
    7. 'ieur' → logprob: -7.5523881912231445
    8. 'ate' → logprob: -7.8023881912231445
    9. 'teur' → logprob: -8.302388191223145
    10. 'eu' → logprob: -8.927388191223145

Token 263: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38195496797561646
    2. 'j' → logprob: -1.7569549083709717
    3. ' j' → logprob: -2.6319549083709717
    4. ' =' → logprob: -2.8819549083709717
    5. '   ' → logprob: -4.631955146789551
    6. '2' → logprob: -5.756955146789551
    7. ' ' → logprob: -6.131955146789551
    8. ',' → logprob: -7.756955146789551
    9. '	j' → logprob: -8.00695514678955
    10. 'm' → logprob: -8.75695514678955

Token 264: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890741527080536
    2. ' =' → logprob: -2.5789074897766113
    3. '=k' → logprob: -11.328907012939453
    4. 'k' → logprob: -12.453907012939453
    5. ' ' → logprob: -14.328907012939453
    6. ' k' → logprob: -14.453907012939453
    7. '   ' → logprob: -15.578907012939453
    8. '2' → logprob: -15.953907012939453
    9. '    ' → logprob: -16.078907012939453
    10. '=i' → logprob: -16.328907012939453

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07058215886354446
    2. 'i' → logprob: -2.695582151412964
    3. ' i' → logprob: -7.820582389831543
    4. ' ' → logprob: -8.445582389831543
    5. '   ' → logprob: -10.695582389831543
    6. '*i' → logprob: -12.945582389831543
    7. '(i' → logprob: -13.945582389831543
    8. '1' → logprob: -14.070582389831543
    9. '0' → logprob: -14.195582389831543
    10. '  ' → logprob: -14.570582389831543

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04860905185341835
    2. 'i' → logprob: -3.0486090183258057
    3. ' ' → logprob: -12.048608779907227
    4. ' i' → logprob: -12.173608779907227
    5. '   ' → logprob: -12.798608779907227
    6. '*i' → logprob: -13.048608779907227
    7. '(i' → logprob: -13.423608779907227
    8. 'k' → logprob: -13.673608779907227
    9. '1' → logprob: -13.673608779907227
    10. '0' → logprob: -13.923608779907227

Token 267: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002917691832408309
    2. 'k' → logprob: -7.252917766571045
    3. '   ' → logprob: -7.377917766571045
    4. ' k' → logprob: -7.627917766571045
    5. ':
' → logprob: -7.877917766571045
    6. ':' → logprob: -8.377917289733887
    7. '	' → logprob: -8.877917289733887
    8. '	k' → logprob: -9.127917289733887
    9. '	   ' → logprob: -10.002917289733887
    10. '           ' → logprob: -10.377917289733887

Token 268: ' génér' (ID: 18939)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.1448962241411209
    2. 'k' → logprob: -2.3948962688446045
    3. ' multiplier' → logprob: -3.6448962688446045
    4. ' supprimer' → logprob: -4.519896030426025
    5. ' ' → logprob: -6.269896030426025
    6. ' commencer' → logprob: -6.894896030426025
    7. ' élim' → logprob: -7.894896030426025
    8. ' for' → logprob: -7.894896030426025
    9. 'sup' → logprob: -8.019896507263184
    10. ' la' → logprob: -8.144896507263184

Token 269: 'er' (ID: 259)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.26608067750930786
    2. 'k' → logprob: -1.516080617904663
    3. ' multiplier' → logprob: -5.141080856323242
    4. ' i' → logprob: -6.766080856323242
    5. ' while' → logprob: -6.766080856323242
    6. 'i' → logprob: -6.891080856323242
    7. ' continuer' → logprob: -7.016080856323242
    8. ' ' → logprob: -7.266080856323242
    9. 'while' → logprob: -7.516080856323242
    10. ' supprimer' → logprob: -7.766080856323242

Token 270: ' les' (ID: 1341)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.09639233350753784
    2. 'k' → logprob: -2.5963923931121826
    3. ' ' → logprob: -5.2213921546936035
    4. ' i' → logprob: -5.4713921546936035
    5. ' multiples' → logprob: -5.5963921546936035
    6. ' ,' → logprob: -6.9713921546936035
    7. ',' → logprob: -7.2213921546936035
    8. '*' → logprob: -7.5963921546936035
    9. 'i' → logprob: -7.7213921546936035
    10. '*k' → logprob: -7.9713921546936035

Token 271: ' multiples' (ID: 70720)
  Prédit: ' multiples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.12223506718873978
    2. 'k' → logprob: -2.997235059738159
    3. ' k' → logprob: -3.372235059738159
    4. 'multip' → logprob: -3.747235059738159
    5. ' multip' → logprob: -6.497235298156738
    6. 'i' → logprob: -6.622235298156738
    7. ' ' → logprob: -6.747235298156738
    8. ' multiple' → logprob: -7.622235298156738
    9. ' i' → logprob: -7.747235298156738
    10. '   ' → logprob: -7.872235298156738

Token 272: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19399841129779816
    2. 'k' → logprob: -1.9439984560012817
    3. ' k' → logprob: -4.193998336791992
    4. '   ' → logprob: -4.318998336791992
    5. '    ' → logprob: -6.943998336791992
    6. '        ' → logprob: -7.318998336791992
    7. '        
' → logprob: -7.443998336791992
    8. '	k' → logprob: -7.443998336791992
    9. '           ' → logprob: -7.943998336791992
    10. '
' → logprob: -8.568998336791992

Token 273: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12693114578723907
    2. ' i' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.626931190490723
    4. '*i' → logprob: -14.126931190490723
    5. '	i' → logprob: -14.251931190490723
    6. ' ' → logprob: -15.501931190490723
    7. '   ' → logprob: -16.251930236816406
    8. '  ' → logprob: -17.251930236816406
    9. '```' → logprob: -17.376930236816406
    10. '_i' → logprob: -18.001930236816406

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010318574495613575
    2. 'k' → logprob: -7.126031875610352
    3. ' k' → logprob: -9.001031875610352
    4. '
' → logprob: -10.376031875610352
    5. '	' → logprob: -10.751031875610352
    6. '   ' → logprob: -11.126031875610352
    7. '        
' → logprob: -11.626031875610352
    8. '	k' → logprob: -11.751031875610352
    9. ',' → logprob: -12.376031875610352
    10. '           ' → logprob: -12.501031875610352

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025589292868971825
    2. ' k' → logprob: -4.275589466094971
    3. '	' → logprob: -5.150589466094971
    4. 'k' → logprob: -5.775589466094971
    5. '	k' → logprob: -6.775589466094971
    6. '   ' → logprob: -7.400589466094971
    7. '	   ' → logprob: -8.525588989257812
    8. '\t' → logprob: -9.025588989257812
    9. '	       ' → logprob: -9.650588989257812
    10. '        
' → logprob: -9.900588989257812

Token 276: ' k' (ID: 372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14020034670829773
    2. ' k' → logprob: -2.76520037651062
    3. 'k' (adapté à ' k') → logprob: -3.14020037651062
    4. '   ' → logprob: -4.765200138092041
    5. '	' → logprob: -4.765200138092041
    6. '	k' → logprob: -5.640200138092041
    7. '	   ' → logprob: -5.890200138092041
    8. '	       ' → logprob: -8.1402006149292
    9. '           ' → logprob: -8.3902006149292
    10. ' ' → logprob: -8.8902006149292

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150413408875465
    2. ' =' → logprob: -4.018150329589844
    3. '=k' → logprob: -14.518150329589844
    4. 'k' → logprob: -17.393150329589844
    5. '*=' → logprob: -17.768150329589844
    6. '   ' → logprob: -17.893150329589844
    7. '=
' → logprob: -18.018150329589844
    8. ' ' → logprob: -18.018150329589844
    9. '＝' → logprob: -18.643150329589844
    10. '=

' → logprob: -19.143150329589844

Token 278: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10020828247070312
    2. ' ' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.850208282470703
    4. '  ' → logprob: -14.350208282470703
    5. '    ' → logprob: -16.912708282470703
    6. 'k' → logprob: -17.037708282470703
    7. '	' → logprob: -17.225208282470703
    8. ' k' → logprob: -17.412708282470703
    9. ' ' → logprob: -17.725208282470703
    10. '۲' → logprob: -17.912708282470703

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.250139236450195
    4. 'k' → logprob: -18.000139236450195
    5. '  ' → logprob: -18.000139236450195
    6. '۲' → logprob: -18.250139236450195
    7. '２' → logprob: -18.875139236450195
    8. '```' → logprob: -19.375139236450195
    9. '	' → logprob: -19.562639236450195
    10. '1' → logprob: -20.062639236450195

Token 280: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6152722835540771
    2. ':' → logprob: -1.9902722835540771
    3. '   ' → logprob: -2.115272283554077
    4. '
' → logprob: -2.490272283554077
    5. ' 
' → logprob: -3.240272283554077
    6. '  
' → logprob: -3.490272283554077
    7. '        
' → logprob: -4.740272521972656
    8. '    
' → logprob: -4.740272521972656
    9. ':
' → logprob: -4.990272521972656
    10. '   
' → logprob: -5.115272521972656

Token 282: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18166053295135498
    2. '<|end|>' → logprob: -3.3066606521606445
    3. ' 
' → logprob: -3.5566606521606445
    4. ':' → logprob: -3.5566606521606445
    5. '   ' → logprob: -4.3066606521606445
    6. '
' → logprob: -4.5566606521606445
    7. '        
' → logprob: -4.6816606521606445
    8. '  
' → logprob: -4.8066606521606445
    9. ' while' → logprob: -4.8066606521606445
    10. ':
' → logprob: -5.0566606521606445

Token 283: ' Bou' (ID: 33816)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5876019597053528
    2. 'while' → logprob: -0.8376019597053528
    3. '       ' → logprob: -4.462602138519287
    4. '   ' → logprob: -10.212601661682129
    5. '	while' → logprob: -10.712601661682129
    6. ' ' → logprob: -13.962601661682129
    7. 'While' → logprob: -14.462601661682129
    8. '        ' → logprob: -14.462601661682129
    9. ' ' → logprob: -14.837601661682129
    10. '           ' → logprob: -14.962601661682129

Token 284: 'cle' (ID: 3170)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8747478127479553
    2. ' while' → logprob: -1.1247477531433105
    3. '   ' → logprob: -1.6247477531433105
    4. '	while' → logprob: -3.2497477531433105
    5. 'while' → logprob: -4.7497477531433105
    6. 'hile' → logprob: -4.9997477531433105
    7. '    ' → logprob: -5.9997477531433105
    8. ' ' → logprob: -6.9997477531433105
    9. '        ' → logprob: -7.2497477531433105
    10. 'ile' → logprob: -7.9997477531433105

Token 285: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26046043634414673
    2. ':' → logprob: -1.885460376739502
    3. '   ' → logprob: -2.760460376739502
    4. ':
' → logprob: -4.885460376739502
    5. ' while' → logprob: -5.760460376739502
    6. ' :' → logprob: -7.260460376739502
    7. 'while' → logprob: -7.260460376739502
    8. '	while' → logprob: -7.510460376739502
    9. ' :
' → logprob: -8.38546085357666
    10. '           ' → logprob: -8.38546085357666

Token 286: ' mar' (ID: 2674)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11107675731182098
    2. 'k' → logprob: -2.361076831817627
    3. ' while' → logprob: -5.111076831817627
    4. 'while' → logprob: -6.236076831817627
    5. ' ' → logprob: -6.861076831817627
    6. ' supprimer' → logprob: -7.486076831817627
    7. ' i' → logprob: -8.111076354980469
    8. ' multiplier' → logprob: -8.486076354980469
    9. '  ' → logprob: -9.236076354980469
    10. 'i' → logprob: -9.361076354980469

Token 287: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.000540166103746742
    2. 'quant' → logprob: -7.750540256500244
    3. 'qu' → logprob: -9.375539779663086
    4. 'r' → logprob: -11.500539779663086
    5. 'cher' → logprob: -12.875539779663086
    6. 'for' → logprob: -13.000539779663086
    7. 'ker' → logprob: -13.250539779663086
    8. 'q' → logprob: -14.000539779663086
    9. 'quent' → logprob: -14.000539779663086
    10. '#' → logprob: -14.000539779663086

Token 288: ' comme' (ID: 7971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17076453566551208
    2. ' i' → logprob: -3.045764446258545
    3. ' k' → logprob: -3.045764446258545
    4. '   ' → logprob: -4.420764446258545
    5. '    ' → logprob: -5.170764446258545
    6. ' :' → logprob: -5.170764446258545
    7. '  ' → logprob: -5.420764446258545
    8. ':' → logprob: -5.545764446258545
    9. ' )' → logprob: -5.545764446258545
    10. ' ,' → logprob: -5.795764446258545

Token 289: ' compos' (ID: 14635)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8035876750946045
    2. ' k' → logprob: -1.0535876750946045
    3. 'multip' → logprob: -2.8035876750946045
    4. 'sup' → logprob: -2.9285876750946045
    5. ' multiples' → logprob: -3.0535876750946045
    6. ' supprim' → logprob: -4.553587913513184
    7. ' i' → logprob: -5.053587913513184
    8. ' multip' → logprob: -5.178587913513184
    9. 'i' → logprob: -5.303587913513184
    10. '   ' → logprob: -5.678587913513184

Token 290: 'és' (ID: 1756)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.8476998805999756
    2. 'és' → logprob: -1.0976998805999756
    3. 'pos' → logprob: -1.8476998805999756
    4. 'étés' → logprob: -3.8476998805999756
    5. 'i' → logprob: -4.347700119018555
    6. 'p' → logprob: -4.597700119018555
    7. 'ités' → logprob: -5.222700119018555
    8. '#' → logprob: -5.722700119018555
    9. 't' → logprob: -5.847700119018555
    10. 's' → logprob: -6.097700119018555

Token 291: ' tous' (ID: 10688)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11102063953876495
    2. '        ' → logprob: -4.111020565032959
    3. '   ' → logprob: -4.111020565032959
    4. ':' → logprob: -4.361020565032959
    5. ' ' → logprob: -4.486020565032959
    6. '           ' → logprob: -4.611020565032959
    7. ' while' → logprob: -4.736020565032959
    8. ' :' → logprob: -5.486020565032959
    9. ' if' → logprob: -5.611020565032959
    10. '    ' → logprob: -5.736020565032959

Token 292: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1912444531917572
    2. ' multiples' → logprob: -2.31624436378479
    3. ' k' → logprob: -2.94124436378479
    4. ' ' → logprob: -4.566244602203369
    5. 'i' → logprob: -5.191244602203369
    6. ' les' → logprob: -6.066244602203369
    7. 'k' → logprob: -6.316244602203369
    8. '    ' → logprob: -6.816244602203369
    9. 'multip' → logprob: -7.941244602203369
    10. ' (' → logprob: -8.691244125366211

Token 293: ' multiples' (ID: 70720)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37595489621162415
    2. ' i' → logprob: -1.8759548664093018
    3. ' multiples' → logprob: -2.1259548664093018
    4. 'multip' → logprob: -3.5009548664093018
    5. ' ' → logprob: -5.250955104827881
    6. 'multiple' → logprob: -6.375955104827881
    7. 'k' → logprob: -7.000955104827881
    8. ' k' → logprob: -7.500955104827881
    9. 'mult' → logprob: -7.625955104827881
    10. ' multiple' → logprob: -7.750955104827881

Token 294: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.08423051238059998
    2. 'de' → logprob: -2.709230422973633
    3. '       ' → logprob: -4.709230422973633
    4. '        ' → logprob: -6.334230422973633
    5. ' i' → logprob: -7.209230422973633
    6. ' ' → logprob: -7.459230422973633
    7. '    ' → logprob: -7.709230422973633
    8. ' of' → logprob: -7.709230422973633
    9. '   ' → logprob: -7.834230422973633
    10. 'i' → logprob: -8.459230422973633

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931585073471069
    2. ' i' → logprob: -0.6931585073471069
    3. ' ' → logprob: -11.568158149719238
    4. '	i' → logprob: -14.068158149719238
    5. '   ' → logprob: -14.443158149719238
    6. '*i' → logprob: -16.068159103393555
    7. ' ' → logprob: -16.193159103393555
    8. '  ' → logprob: -16.318159103393555
    9. '    ' → logprob: -16.818159103393555
    10. '(i' → logprob: -17.193159103393555

Token 296: ' qui' (ID: 2780)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11327660828828812
    2. ':' → logprob: -2.363276720046997
    3. ' :' → logprob: -4.738276481628418
    4. ' while' → logprob: -7.113276481628418
    5. ',' → logprob: -7.488276481628418
    6. ':
' → logprob: -7.613276481628418
    7. '   ' → logprob: -7.738276481628418
    8. '        ' → logprob: -8.113276481628418
    9. 'while' → logprob: -8.113276481628418
    10. ' :
' → logprob: -8.238276481628418

Token 297: ' sont' (ID: 5242)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.25292953848838806
    2. '*' → logprob: -2.252929449081421
    3. '<=' → logprob: -3.377929449081421
    4. ' <=' → logprob: -3.627929449081421
    5. 'i' → logprob: -3.877929449081421
    6. ' *' → logprob: -4.1279296875
    7. ' i' → logprob: -4.5029296875
    8. ' in' → logprob: -5.0029296875
    9. 'le' → logprob: -6.3779296875
    10. '*k' → logprob: -7.6279296875

Token 298: ' inf' (ID: 5603)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.7609707117080688
    2. ' <=' → logprob: -1.5109707117080688
    3. 'dans' → logprob: -1.7609707117080688
    4. ' dans' → logprob: -3.1359705924987793
    5. ' i' → logprob: -3.7609705924987793
    6. ' k' → logprob: -3.8859705924987793
    7. 'k' → logprob: -3.8859705924987793
    8. 'i' → logprob: -4.385970592498779
    9. ' présents' → logprob: -5.010970592498779
    10. 'multip' → logprob: -5.635970592498779

Token 299: 'érieurs' (ID: 97672)
  Prédit: 'érieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieurs' → logprob: -0.003186743939295411
    2. 'érieur' → logprob: -6.1281867027282715
    3. 'érieure' → logprob: -8.00318717956543
    4. 'é' → logprob: -8.62818717956543
    5. 'érieures' → logprob: -9.12818717956543
    6. 'érés' → logprob: -9.25318717956543
    7. 'érents' → logprob: -9.25318717956543
    8. 'ér' → logprob: -9.37818717956543
    9. 'éri' → logprob: -10.00318717956543
    10. 'érie' → logprob: -10.75318717956543

Token 300: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3451381027698517
    2. ' à' → logprob: -2.3451380729675293
    3. '   ' → logprob: -3.0951380729675293
    4. ',' → logprob: -3.2201380729675293
    5. 'à' → logprob: -3.4701380729675293
    6. ' or' → logprob: -3.8451380729675293
    7. 'or' → logprob: -3.9701380729675293
    8. '=' → logprob: -5.095138072967529
    9. 'ou' → logprob: -5.095138072967529
    10. 'to' → logprob: -5.345138072967529

Token 301: ' ég' (ID: 33150)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.4983518123626709
    2. 'ou' → logprob: -1.498351812362671
    3. 'égal' → logprob: -2.623351812362671
    4. ' égal' → logprob: -3.623351812362671
    5. ' ég' → logprob: -3.998351812362671
    6. 'equal' → logprob: -4.24835205078125
    7. '   ' → logprob: -4.87335205078125
    8. 'ég' → logprob: -5.12335205078125
    9. '<=' → logprob: -5.37335205078125
    10. 'eg' → logprob: -5.99835205078125

Token 302: 'aux' (ID: 5454)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.12130703777074814
    2. 'aux' → logprob: -3.371307134628296
    3. 'ps' → logprob: -3.871307134628296
    4. 'u' → logprob: -4.246306896209717
    5. 'ales' → logprob: -4.371306896209717
    6. 'ale' → logprob: -5.246306896209717
    7. 'ual' → logprob: -5.621306896209717
    8. 'als' → logprob: -5.621306896209717
    9. 'gal' → logprob: -5.996306896209717
    10. '556' → logprob: -6.246306896209717

Token 303: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40632301568984985
    2. '(' → logprob: -1.156322956085205
    3. '   ' → logprob: -4.906322956085205
    4. ' à' → logprob: -5.781322956085205
    5. '(n' → logprob: -6.031322956085205
    6. '       ' → logprob: -6.156322956085205
    7. '555' → logprob: -6.406322956085205
    8. '(k' → logprob: -6.906322956085205
    9. ' (' → logprob: -8.281323432922363
    10. ' i' → logprob: -8.406323432922363

Token 304: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.0021966483909636736
    2. ' ' → logprob: -6.127196788787842
    3. '   ' → logprob: -11.877196311950684
    4. '  ' → logprob: -13.252196311950684
    5. ' ' → logprob: -14.064696311950684
    6. '545' → logprob: -14.627196311950684
    7. '	' → logprob: -15.877196311950684
    8. '556' → logprob: -15.939696311950684
    9. '    ' → logprob: -16.064697265625
    10. '(' → logprob: -16.189697265625

Token 305: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. '   ' → logprob: -14.625025749206543
    4. '  ' → logprob: -15.250025749206543
    5. '545' → logprob: -15.437525749206543
    6. '455' → logprob: -16.68752670288086
    7. 'n' → logprob: -16.68752670288086
    8. '(' → logprob: -16.75002670288086
    9. ' ' → logprob: -16.75002670288086
    10. '550' → logprob: -16.75002670288086

Token 306: '55' (ID: 3152)
  Prédit: '55'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -0.24530456960201263
    2. '555' → logprob: -1.8703045845031738
    3. '56' → logprob: -2.870304584503174
    4. '556' → logprob: -5.995304584503174
    5. '5' → logprob: -6.495304584503174
    6. ' ' → logprob: -6.870304584503174
    7. ' k' → logprob: -7.495304584503174
    8. 'k' → logprob: -8.370304107666016
    9. '   ' → logprob: -8.995304107666016
    10. 'for' → logprob: -9.120304107666016

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012523093027994037
    2. ' while' → logprob: -10.00012493133545
    3. '   ' → logprob: -10.37512493133545
    4. ':' → logprob: -10.87512493133545
    5. 'while' → logprob: -11.75012493133545
    6. '	' → logprob: -12.25012493133545
    7. '           ' → logprob: -12.37512493133545
    8. '        
' → logprob: -12.37512493133545
    9. '	while' → logprob: -13.37512493133545
    10. '	   ' → logprob: -13.75012493133545

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005535095697268844
    2. '   ' → logprob: -8.375553131103516
    3. ' while' → logprob: -8.625553131103516
    4. '        
' → logprob: -10.375553131103516
    5. 'while' → logprob: -10.375553131103516
    6. ':' → logprob: -10.750553131103516
    7. '           ' → logprob: -10.875553131103516
    8. '	' → logprob: -11.750553131103516
    9. '
' → logprob: -11.875553131103516
    10. '	   ' → logprob: -12.875553131103516

Token 309: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013988104183226824
    2. ' while' → logprob: -6.751399040222168
    3. '   ' → logprob: -9.001399040222168
    4. 'while' → logprob: -10.251399040222168
    5. '	while' → logprob: -10.751399040222168
    6. '	' → logprob: -10.876399040222168
    7. '           ' → logprob: -11.876399040222168
    8. '	   ' → logprob: -12.126399040222168
    9. '    ' → logprob: -12.626399040222168
    10. '      ' → logprob: -13.001399040222168

Token 310: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05839712172746658
    2. ' while' → logprob: -2.933397054672241
    3. 'while' → logprob: -5.68339729309082
    4. '	while' → logprob: -10.18339729309082
    5. '   ' → logprob: -10.55839729309082
    6. ' ' → logprob: -11.55839729309082
    7. '	' → logprob: -11.93339729309082
    8. '           ' → logprob: -12.18339729309082
    9. ' ' → logprob: -12.68339729309082
    10. '        ' → logprob: -12.80839729309082

Token 311: '*k' (ID: 81061)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5842445492744446
    2. '*' → logprob: -0.8342445492744446
    3. '*k' → logprob: -4.834244728088379
    4. '*i' → logprob: -8.709244728088379
    5. ' ' → logprob: -9.834244728088379
    6. ' ' → logprob: -10.334244728088379
    7. '*j' → logprob: -11.084244728088379
    8. 'k' → logprob: -11.959244728088379
    9. ',' → logprob: -11.959244728088379
    10. '```' → logprob: -12.584244728088379

Token 312: ' représente' (ID: 88912)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1888338029384613
    2. '<=' → logprob: -2.313833713531494
    3. ' in' → logprob: -2.813833713531494
    4. ')' → logprob: -5.813833713531494
    5. ' ' → logprob: -6.438833713531494
    6. '*' → logprob: -6.438833713531494
    7. '   ' → logprob: -6.563833713531494
    8. ' )' → logprob: -7.063833713531494
    9. 'le' → logprob: -7.188833713531494
    10. 'in' → logprob: -7.563833713531494

Token 313: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02656303346157074
    2. 'i' → logprob: -3.6515629291534424
    3. ' ' → logprob: -8.526562690734863
    4. 'le' → logprob: -11.651562690734863
    5. ' ' → logprob: -11.651562690734863
    6. '    ' → logprob: -11.901562690734863
    7. ' k' → logprob: -12.026562690734863
    8. '(i' → logprob: -12.276562690734863
    9. ' les' → logprob: -12.276562690734863
    10. 'k' → logprob: -12.901562690734863

Token 314: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.7114685773849487
    2. 'multiple' → logprob: -0.9614685773849487
    3. 'élé' → logprob: -2.7114686965942383
    4. 'ent' → logprob: -3.8364686965942383
    5. ' élément' → logprob: -4.336468696594238
    6. 'multip' → logprob: -4.836468696594238
    7. 'e' → logprob: -4.961468696594238
    8. 'nombre' → logprob: -6.086468696594238
    9. ' ' → logprob: -6.211468696594238
    10. ' entier' → logprob: -6.961468696594238

Token 315: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06410010904073715
    2. '   ' → logprob: -3.1891000270843506
    3. ' de' → logprob: -5.68910026550293
    4. ' of' → logprob: -5.81410026550293
    5. '        
' → logprob: -6.31410026550293
    6. 'i' → logprob: -7.06410026550293
    7. ' in' → logprob: -7.06410026550293
    8. '    ' → logprob: -7.18910026550293
    9. 'while' → logprob: -7.18910026550293
    10. ' <=' → logprob: -7.18910026550293

Token 316: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34854042530059814
    2. 'i' → logprob: -1.2235404253005981
    3. ' ' → logprob: -9.348540306091309
    4. '	i' → logprob: -12.598540306091309
    5. '   ' → logprob: -13.348540306091309
    6. '  ' → logprob: -14.098540306091309
    7. '(i' → logprob: -14.598540306091309
    8. ' ' → logprob: -14.973540306091309
    9. '*i' → logprob: -14.973540306091309
    10. '    ' → logprob: -15.223540306091309

Token 317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010392407421022654
    2. ' while' → logprob: -7.251039028167725
    3. 'while' → logprob: -8.876039505004883
    4. '   ' → logprob: -10.251039505004883
    5. '
' → logprob: -10.501039505004883
    6. ':' → logprob: -10.751039505004883
    7. '        
' → logprob: -10.751039505004883
    8. '	while' → logprob: -11.126039505004883
    9. '           ' → logprob: -11.251039505004883
    10. '<|end|>' → logprob: -11.376039505004883

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.9424725148128346e-05
    2. ' while' → logprob: -10.375049591064453
    3. '	' → logprob: -12.375049591064453
    4. '   ' → logprob: -12.375049591064453
    5. '           ' → logprob: -13.000049591064453
    6. 'while' → logprob: -13.000049591064453
    7. '
' → logprob: -13.375049591064453
    8. '        
' → logprob: -13.500049591064453
    9. '	   ' → logprob: -14.500049591064453
    10. '	while' → logprob: -14.625049591064453

Token 319: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05489503592252731
    2. ' while' → logprob: -3.0548949241638184
    3. 'while' (adapté à ' while') → logprob: -5.429894924163818
    4. '   ' → logprob: -7.429894924163818
    5. '           ' → logprob: -7.554894924163818
    6. '        
' → logprob: -8.429895401000977
    7. '	while' → logprob: -8.429895401000977
    8. '        ' → logprob: -9.054895401000977
    9. '	' → logprob: -10.179895401000977
    10. '    ' → logprob: -10.179895401000977

Token 320: '(i' (ID: 3649)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11295083165168762
    2. 'i' → logprob: -2.2379508018493652
    3. '   ' → logprob: -9.737951278686523
    4. '(i' → logprob: -10.612951278686523
    5. ' ' → logprob: -10.862951278686523
    6. '	i' → logprob: -11.487951278686523
    7. ' (' → logprob: -12.237951278686523
    8. 'k' → logprob: -12.862951278686523
    9. '    ' → logprob: -12.987951278686523
    10. '  ' → logprob: -13.112951278686523

Token 321: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.016414735466241837
    2. '*' → logprob: -4.141414642333984
    3. '*i' → logprob: -8.266414642333984
    4. '*k' → logprob: -9.391414642333984
    5. ' ' → logprob: -10.391414642333984
    6. ')' → logprob: -12.391414642333984
    7. ')*' → logprob: -13.641414642333984
    8. ' in' → logprob: -13.641414642333984
    9. '*j' → logprob: -14.391414642333984
    10. ' ' → logprob: -14.641414642333984

Token 322: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0007101670489646494
    2. ' k' → logprob: -7.2507100105285645
    3. '*k' → logprob: -17.000709533691406
    4. ' ' → logprob: -17.125709533691406
    5. '	k' → logprob: -17.500709533691406
    6. '   ' → logprob: -17.750709533691406
    7. ')' → logprob: -18.250709533691406
    8. '  ' → logprob: -18.750709533691406
    9. '{k' → logprob: -19.500709533691406
    10. '"k' → logprob: -19.750709533691406

Token 323: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.21183127164840698
    2. '<=' → logprob: -2.2118313312530518
    3. ')' → logprob: -2.5868313312530518
    4. ' )' → logprob: -5.211831092834473
    5. ')<=' → logprob: -7.461831092834473
    6. ' in' → logprob: -9.836831092834473
    7. ' ' → logprob: -10.086831092834473
    8. ' <' → logprob: -11.961831092834473
    9. 'le' → logprob: -12.336831092834473
    10. '<' → logprob: -12.461831092834473

Token 324: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.0036068400368094444
    2. ' ' → logprob: -5.628606796264648
    3. '   ' → logprob: -13.003606796264648
    4. '545' → logprob: -13.566106796264648
    5. '  ' → logprob: -13.691106796264648
    6. ' ' → logprob: -15.066106796264648
    7. '455' → logprob: -15.066106796264648
    8. '	' → logprob: -15.191106796264648
    9. '553' → logprob: -15.441106796264648
    10. '    ' → logprob: -16.19110679626465

Token 325: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -6.051066520740278e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.250060081481934
    4. '545' → logprob: -14.625060081481934
    5. '  ' → logprob: -15.250060081481934
    6. '553' → logprob: -15.687560081481934
    7. '455' → logprob: -16.31256103515625
    8. ')' → logprob: -16.43756103515625
    9. '55' → logprob: -16.68756103515625
    10. '556' → logprob: -16.87506103515625

Token 326: '55' (ID: 3152)
  Prédit: '55'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -4.060365608893335e-05
    2. '5' → logprob: -10.375041007995605
    3. '555' → logprob: -11.750041007995605
    4. ' ' → logprob: -14.875041007995605
    5. '35' → logprob: -15.375041007995605
    6. ')' → logprob: -15.500041007995605
    7. '56' → logprob: -15.625041007995605
    8. '50' → logprob: -15.750041007995605
    9. '>' → logprob: -16.75004005432129
    10. '```' → logprob: -17.25004005432129

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5777583718299866
    2. '):
' → logprob: -0.8277583718299866
    3. '):
' → logprob: -6.827758312225342
    4. ')' → logprob: -7.577758312225342
    5. '):

' → logprob: -9.7027587890625
    6. '       ' → logprob: -9.7027587890625
    7. ' ):
' → logprob: -10.0777587890625
    8. ' ):' → logprob: -10.8277587890625
    9. ' and' → logprob: -11.0777587890625
    10. ':' → logprob: -11.8277587890625

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012047011114191264
    2. '            
' → logprob: -9.750120162963867
    3. '
' → logprob: -11.000120162963867
    4. '<|end|>' → logprob: -12.125120162963867
    5. '          ' → logprob: -12.500120162963867
    6. '	       ' → logprob: -12.625120162963867
    7. '       ' → logprob: -12.875120162963867
    8. '               ' → logprob: -13.250120162963867
    9. '\n' → logprob: -13.250120162963867
    10. ' 
' → logprob: -13.250120162963867

Token 329: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42946377396583557
    2. '               ' → logprob: -1.8044637441635132
    3. ' ps' → logprob: -1.8044637441635132
    4. 'ps' → logprob: -4.179463863372803
    5. ' ' → logprob: -6.304463863372803
    6. ' ' → logprob: -7.304463863372803
    7. '	ps' → logprob: -7.929463863372803
    8. '(ps' → logprob: -8.054463386535645
    9. '            ' → logprob: -8.304463386535645
    10. '            
' → logprob: -8.804463386535645

Token 330: ' Vér' (ID: 159169)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0003919463779311627
    2. '           ' → logprob: -8.250391960144043
    3. ' ps' → logprob: -9.000391960144043
    4. '   ' → logprob: -12.750391960144043
    5. '       ' → logprob: -13.125391960144043
    6. 'if' → logprob: -13.625391960144043
    7. '	ps' → logprob: -14.000391960144043
    8. '               ' → logprob: -16.000391006469727
    9. '  ' → logprob: -16.750391006469727
    10. '          ' → logprob: -16.875391006469727

Token 331: 'ifier' (ID: 4550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9211612939834595
    2. 'ifier' → logprob: -1.2961612939834595
    3. 'if' → logprob: -1.7961612939834595
    4. 'er' → logprob: -2.79616117477417
    5. 'ps' → logprob: -3.79616117477417
    6. '   ' → logprob: -3.79616117477417
    7. ' ps' → logprob: -4.17116117477417
    8. ' if' → logprob: -4.92116117477417
    9. '               ' → logprob: -5.29616117477417
    10. '       ' → logprob: -5.42116117477417

Token 332: ' si' (ID: 1784)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.883418083190918
    2. ' i' → logprob: -0.883418083190918
    3. '(i' → logprob: -2.258418083190918
    4. 'i' → logprob: -2.758418083190918
    5. '           ' → logprob: -5.758418083190918
    6. ' if' → logprob: -6.633418083190918
    7. 'if' → logprob: -8.508418083190918
    8. '            ' → logprob: -8.633418083190918
    9. '               ' → logprob: -8.758418083190918
    10. '(' → logprob: -9.008418083190918

Token 333: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5791861414909363
    2. ' i' → logprob: -0.8291861414909363
    3. ' (' → logprob: -6.204185962677002
    4. '(i' → logprob: -6.829185962677002
    5. '   ' → logprob: -9.45418643951416
    6. ' ' → logprob: -10.45418643951416
    7. ' ' → logprob: -11.20418643951416
    8. '(' → logprob: -11.70418643951416
    9. '	i' → logprob: -12.57918643951416
    10. '  ' → logprob: -12.95418643951416

Token 334: ' multiple' (ID: 7598)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018197467550635338
    2. ' i' → logprob: -4.018197536468506
    3. '   ' → logprob: -10.768197059631348
    4. '(i' → logprob: -11.393197059631348
    5. ' ' → logprob: -11.893197059631348
    6. ' (' → logprob: -12.518197059631348
    7. '    ' → logprob: -13.143197059631348
    8. '  ' → logprob: -13.643197059631348
    9. ' ' → logprob: -14.893197059631348
    10. '(' → logprob: -15.268197059631348

Token 335: ' courant' (ID: 74694)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17422714829444885
    2. 'i' → logprob: -2.299227237701416
    3. '(i' → logprob: -3.174227237701416
    4. ' (' → logprob: -4.299227237701416
    5. '           ' → logprob: -5.674227237701416
    6. '            ' → logprob: -8.799226760864258
    7. '               ' → logprob: -9.049226760864258
    8. '(' → logprob: -9.049226760864258
    9. '   ' → logprob: -9.424226760864258
    10. ' ' → logprob: -9.924226760864258

Token 336: ' fait' (ID: 7473)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1620418131351471
    2. 'i' → logprob: -2.0370419025421143
    3. '(i' → logprob: -4.537041664123535
    4. ' (' → logprob: -5.162041664123535
    5. '           ' → logprob: -6.287041664123535
    6. ' in' → logprob: -7.787041664123535
    7. '            ' → logprob: -8.912041664123535
    8. '               ' → logprob: -9.787041664123535
    9. '   ' → logprob: -10.037041664123535
    10. '(' → logprob: -10.162041664123535

Token 337: ' encore' (ID: 14043)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5999999046325684
    2. 'i' → logprob: -1.5999999046325684
    3. ' partie' → logprob: -2.4749999046325684
    4. ' part' → logprob: -2.4749999046325684
    5. ' i' → logprob: -2.5999999046325684
    6. '(i' → logprob: -5.599999904632568
    7. ' parti' → logprob: -6.724999904632568
    8. 'parte' → logprob: -7.099999904632568
    9. '   ' → logprob: -8.100000381469727
    10. ' parte' → logprob: -8.600000381469727

Token 338: ' partie' (ID: 22139)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03188372775912285
    2. 'part' → logprob: -4.156883716583252
    3. ' i' → logprob: -4.281883716583252
    4. ' partie' → logprob: -6.656883716583252
    5. '(i' → logprob: -8.53188419342041
    6. ' part' → logprob: -8.53188419342041
    7. '   ' → logprob: -9.03188419342041
    8. ' parti' → logprob: -10.28188419342041
    9. ' ' → logprob: -10.40688419342041
    10. 'parte' → logprob: -11.03188419342041

Token 339: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.26489952206611633
    2. '           ' → logprob: -1.764899492263794
    3. ' de' → logprob: -3.639899492263794
    4. ' (' → logprob: -4.264899730682373
    5. ' i' → logprob: -4.514899730682373
    6. 'i' → logprob: -5.639899730682373
    7. '   ' → logprob: -5.889899730682373
    8. '               ' → logprob: -6.639899730682373
    9. '            ' → logprob: -7.264899730682373
    10. ' of' → logprob: -7.764899730682373

Token 340: ' l' (ID: 305)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.16027489304542542
    2. ' ps' → logprob: -1.910274863243103
    3. '	ps' → logprob: -10.285274505615234
    4. '(ps' → logprob: -11.410274505615234
    5. '_ps' → logprob: -12.910274505615234
    6. ' ' → logprob: -13.910274505615234
    7. '.ps' → logprob: -14.285274505615234
    8. 'l' → logprob: -14.910274505615234
    9. 's' → logprob: -15.660274505615234
    10. 'PS' → logprob: -15.660274505615234

Token 341: ''ensemble' (ID: 79341)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.029829049482941628
    2. ' ps' → logprob: -3.5298290252685547
    3. '(ps' → logprob: -10.904829025268555
    4. 'set' → logprob: -11.029829025268555
    5. '	ps' → logprob: -11.029829025268555
    6. 's' → logprob: -11.404829025268555
    7. '_ps' → logprob: -12.404829025268555
    8. '#' → logprob: -12.779829025268555
    9. '`' → logprob: -13.154829025268555
    10. ' ' → logprob: -13.279829025268555

Token 342: ' ps' (ID: 10942)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3230366110801697
    2. 'i' → logprob: -1.6980366706848145
    3. '(i' → logprob: -3.4480366706848145
    4. ' (' → logprob: -3.6980366706848145
    5. '           ' → logprob: -4.0730366706848145
    6. ' if' → logprob: -4.1980366706848145
    7. 'if' → logprob: -5.8230366706848145
    8. '               ' → logprob: -7.3230366706848145
    9. '(' → logprob: -8.448036193847656
    10. '   ' → logprob: -8.573036193847656

Token 343: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013692452572286129
    2. ' and' → logprob: -4.513692378997803
    3. ' if' → logprob: -6.138692378997803
    4. 'if' → logprob: -9.013692855834961
    5. '               ' → logprob: -9.013692855834961
    6. 'and' → logprob: -9.513692855834961
    7. ',' → logprob: -10.138692855834961
    8. '<|end|>' → logprob: -10.513692855834961
    9. '       ' → logprob: -10.638692855834961
    10. ':' → logprob: -10.763692855834961

Token 344: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009060516953468323
    2. ' if' → logprob: -4.884060382843018
    3. ' and' → logprob: -6.884060382843018
    4. 'if' → logprob: -8.259060859680176
    5. '               ' → logprob: -9.759060859680176
    6. '       ' → logprob: -10.259060859680176
    7. '          ' → logprob: -11.134060859680176
    8. '   ' → logprob: -11.509060859680176
    9. 'and' → logprob: -11.759060859680176
    10. ',' → logprob: -11.759060859680176

Token 345: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3647504448890686
    2. 'if' (adapté à ' if') → logprob: -1.6147503852844238
    3. '           ' → logprob: -2.239750385284424
    4. '               ' → logprob: -8.739750862121582
    5. '       ' → logprob: -10.739750862121582
    6. '   ' → logprob: -11.364750862121582
    7. ' ' → logprob: -12.739750862121582
    8. '          ' → logprob: -13.114750862121582
    9. ' ' → logprob: -13.614750862121582
    10. '            ' → logprob: -13.614750862121582

Token 346: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.645599901676178
    2. 'i' → logprob: -0.770599901676178
    3. ' (' → logprob: -4.645599842071533
    4. '(i' → logprob: -5.895599842071533
    5. '   ' → logprob: -7.895599842071533
    6. ' ' → logprob: -9.145600318908691
    7. '(' → logprob: -10.520600318908691
    8. '	i' → logprob: -11.270600318908691
    9. ' ' → logprob: -11.270600318908691
    10. '    ' → logprob: -11.395600318908691

Token 347: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.010469709523022175
    2. '*' → logprob: -4.635469913482666
    3. '*k' → logprob: -7.260469913482666
    4. ' ' → logprob: -12.010469436645508
    5. '*object' → logprob: -14.260469436645508
    6. '*i' → logprob: -14.385469436645508
    7. '*K' → logprob: -14.635469436645508
    8. '*n' → logprob: -14.885469436645508
    9. '*u' → logprob: -15.010469436645508
    10. '<|end|>' → logprob: -15.010469436645508

Token 348: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0036004253197461367
    2. ' k' → logprob: -5.628600597381592
    3. '*k' → logprob: -15.878600120544434
    4. '	k' → logprob: -16.37860107421875
    5. ' ' → logprob: -17.37860107421875
    6. '<|end|>' → logprob: -17.62860107421875
    7. '_k' → logprob: -17.87860107421875
    8. '   ' → logprob: -19.00360107421875
    9. '"k' → logprob: -19.62860107421875
    10. ',k' → logprob: -20.50360107421875

Token 349: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1797579675912857
    2. ' in' → logprob: -1.8047579526901245
    3. ' ' → logprob: -11.804758071899414
    4. '   ' → logprob: -13.304758071899414
    5. ')' → logprob: -14.304758071899414
    6. '	in' → logprob: -14.429758071899414
    7. '<|end|>' → logprob: -14.929758071899414
    8. 'In' → logprob: -15.054758071899414
    9. 'is' → logprob: -15.179758071899414
    10. '  ' → logprob: -15.179758071899414

Token 350: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0005538671393878758
    2. ' ps' → logprob: -7.500554084777832
    3. '	ps' → logprob: -14.250554084777832
    4. '(ps' → logprob: -15.875554084777832
    5. '_ps' → logprob: -17.250553131103516
    6. '.ps' → logprob: -18.125553131103516
    7. '   ' → logprob: -18.875553131103516
    8. 'PS' → logprob: -19.000553131103516
    9. ' ' → logprob: -19.500553131103516
    10. 's' → logprob: -19.500553131103516

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19440945982933044
    2. ':
' → logprob: -1.9444094896316528
    3. '               ' → logprob: -3.4444093704223633
    4. '):
' → logprob: -6.819409370422363
    5. '           ' → logprob: -8.194409370422363
    6. '):' → logprob: -9.069409370422363
    7. ',' → logprob: -9.569409370422363
    8. ':

' → logprob: -10.819409370422363
    9. '<|end|>' → logprob: -10.944409370422363
    10. ' :' → logprob: -11.194409370422363

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019817621796391904
    2. '           ' → logprob: -8.625198364257812
    3. '                
' → logprob: -12.125198364257812
    4. '              ' → logprob: -12.625198364257812
    5. ' ps' → logprob: -12.750198364257812
    6. '<|end|>' → logprob: -13.625198364257812
    7. 'ps' → logprob: -13.750198364257812
    8. '                   ' → logprob: -14.375198364257812
    9. '	           ' → logprob: -14.500198364257812
    10. ' ' → logprob: -14.750198364257812

Token 353: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1349448561668396
    2. '               ' → logprob: -2.6349449157714844
    3. ' ps' → logprob: -3.0099449157714844
    4. 'ps' → logprob: -5.384944915771484
    5. '           ' → logprob: -8.384944915771484
    6. '                       ' → logprob: -8.634944915771484
    7. '	ps' → logprob: -10.009944915771484
    8. '                  ' → logprob: -10.009944915771484
    9. '                ' → logprob: -10.384944915771484
    10. '                    ' → logprob: -11.509944915771484

Token 354: ' Sup' (ID: 13606)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.1611909121274948
    2. ' ps' → logprob: -1.9111908674240112
    3. '               ' → logprob: -7.536190986633301
    4. '           ' → logprob: -8.5361909866333
    5. '                   ' → logprob: -8.5361909866333
    6. '	ps' → logprob: -10.5361909866333
    7. '_ps' → logprob: -12.7861909866333
    8. '.ps' → logprob: -13.1611909866333
    9. '   ' → logprob: -13.4111909866333
    10. '(ps' → logprob: -13.6611909866333

Token 355: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.0035071764141321182
    2. 'pr' → logprob: -5.878507137298584
    3. 'prim' → logprob: -8.003507614135742
    4. 'ps' → logprob: -9.003507614135742
    5. 'r' → logprob: -9.253507614135742
    6. 'p' → logprob: -9.753507614135742
    7. 'pres' → logprob: -10.253507614135742
    8. 'primir' → logprob: -10.878507614135742
    9. 'press' → logprob: -11.128507614135742
    10. 'prime' → logprob: -11.378507614135742

Token 356: ' ce' (ID: 2357)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12744981050491333
    2. ' i' → logprob: -2.1274497509002686
    3. '(i' → logprob: -8.002449989318848
    4. '               ' → logprob: -8.752449989318848
    5. ' (' → logprob: -10.877449989318848
    6. '                   ' → logprob: -11.627449989318848
    7. '           ' → logprob: -14.502449989318848
    8. '(' → logprob: -15.502449989318848
    9. ' ' → logprob: -16.12744903564453
    10. '   ' → logprob: -16.50244903564453

Token 357: ' nombre' (ID: 9733)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16752967238426208
    2. 'i' → logprob: -2.167529582977295
    3. '(i' → logprob: -3.542529582977295
    4. '                   ' → logprob: -5.542529582977295
    5. ' (' → logprob: -6.167529582977295
    6. 'multiple' → logprob: -6.542529582977295
    7. ' multiple' → logprob: -6.667529582977295
    8. '               ' → logprob: -6.917529582977295
    9. 'multip' → logprob: -7.792529582977295
    10. '           ' → logprob: -8.042530059814453

Token 358: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33594632148742676
    2. 'ps' → logprob: -2.0859463214874268
    3. '               ' → logprob: -2.3359463214874268
    4. ' ps' → logprob: -2.9609463214874268
    5. '(ps' → logprob: -5.460946083068848
    6. 'i' → logprob: -5.960946083068848
    7. ' i' → logprob: -6.335946083068848
    8. '           ' → logprob: -6.460946083068848
    9. '                       ' → logprob: -7.460946083068848
    10. '	ps' → logprob: -7.585946083068848

Token 359: ' l' (ID: 305)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.061982810497283936
    2. ' ps' → logprob: -2.8119828701019287
    3. '	ps' → logprob: -11.311983108520508
    4. '(ps' → logprob: -13.311983108520508
    5. '_ps' → logprob: -14.061983108520508
    6. '.ps' → logprob: -15.561983108520508
    7. ' ' → logprob: -15.936983108520508
    8. 's' → logprob: -17.186983108520508
    9. '   ' → logprob: -17.311983108520508
    10. ' ' → logprob: -17.436983108520508

Token 360: ''ensemble' (ID: 79341)
  Prédit: ' ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.4291047155857086
    2. 'ps' → logprob: -1.0541046857833862
    3. '	ps' → logprob: -8.679104804992676
    4. 's' → logprob: -9.054104804992676
    5. 'set' → logprob: -10.179104804992676
    6. ' set' → logprob: -10.554104804992676
    7. '_ps' → logprob: -10.679104804992676
    8. '(ps' → logprob: -10.929104804992676
    9. ' ' → logprob: -12.679104804992676
    10. ' ' → logprob: -13.179104804992676

Token 361: ' car' (ID: 1669)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6186603903770447
    2. '               ' → logprob: -1.3686604499816895
    3. ' ps' → logprob: -2.1186604499816895
    4. '                   ' → logprob: -2.4936604499816895
    5. '	ps' → logprob: -6.1186604499816895
    6. '(ps' → logprob: -7.2436604499816895
    7. '           ' → logprob: -7.9936604499816895
    8. '.ps' → logprob: -8.243659973144531
    9. ' ' → logprob: -8.493659973144531
    10. '                       ' → logprob: -8.993659973144531

Token 362: ' il' (ID: 1793)
  Prédit: ' ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.044379133731126785
    2. 'ps' → logprob: -3.169379234313965
    3. ' il' → logprob: -6.919379234313965
    4. '               ' → logprob: -8.544379234313965
    5. ' ' → logprob: -10.044379234313965
    6. ' c' → logprob: -10.294379234313965
    7. '	ps' → logprob: -10.544379234313965
    8. ' ce' → logprob: -10.669379234313965
    9. '                   ' → logprob: -10.919379234313965
    10. ' it' → logprob: -11.419379234313965

Token 363: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.08101660758256912
    2. 'est' → logprob: -2.8310165405273438
    3. ' n' → logprob: -4.081016540527344
    4. 'n' → logprob: -6.331016540527344
    5. ' is' → logprob: -9.456016540527344
    6. 's' → logprob: -10.206016540527344
    7. ' ' → logprob: -10.456016540527344
    8. ''est' → logprob: -11.081016540527344
    9. '#' → logprob: -11.706016540527344
    10. '   ' → logprob: -12.206016540527344

Token 364: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.18953154981136322
    2. ' est' → logprob: -2.1895315647125244
    3. 'est' → logprob: -3.1895315647125244
    4. 'e' → logprob: -5.064531326293945
    5. ' pas' → logprob: -5.439531326293945
    6. 'es' → logprob: -6.064531326293945
    7. '’est' → logprob: -6.064531326293945
    8. 'pas' → logprob: -6.064531326293945
    9. '`' → logprob: -8.064531326293945
    10. ' es' → logprob: -8.189531326293945

Token 365: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4602920114994049
    2. ' pas' → logprob: -1.5852919816970825
    3. ' plus' → logprob: -2.335292100906372
    4. 'plus' → logprob: -2.710292100906372
    5. 'ps' → logprob: -7.460291862487793
    6. 'prime' → logprob: -10.210291862487793
    7. 'prem' → logprob: -10.460291862487793
    8. '#' → logprob: -11.335291862487793
    9. 'p' → logprob: -11.460291862487793
    10. ' ps' → logprob: -11.960291862487793

Token 366: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.05003868788480759
    2. ' premier' → logprob: -3.0500385761260986
    3. 'un' → logprob: -7.550038814544678
    4. 'prime' → logprob: -8.05003833770752
    5. ' un' → logprob: -8.55003833770752
    6. '   ' → logprob: -8.67503833770752
    7. 'prima' → logprob: -9.17503833770752
    8. ' ' → logprob: -10.55003833770752
    9. 'plus' → logprob: -10.55003833770752
    10. 'pr' → logprob: -10.92503833770752

Token 367: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42599454522132874
    2. '                   ' → logprob: -1.1759945154190063
    3. 'ps' → logprob: -3.550994634628296
    4. ' ps' → logprob: -4.675994396209717
    5. '           ' → logprob: -8.425994873046875
    6. '(ps' → logprob: -10.050994873046875
    7. '	ps' → logprob: -10.425994873046875
    8. '                       ' → logprob: -10.425994873046875
    9. ',' → logprob: -11.925994873046875
    10. '.ps' → logprob: -12.300994873046875

Token 368: 'c' (ID: 66)
  Prédit: ' ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.5262837409973145
    2. 'ps' → logprob: -0.9012837409973145
    3. '                   ' → logprob: -6.2762837409973145
    4. '               ' → logprob: -7.4012837409973145
    5. ')' → logprob: -8.026283264160156
    6. ' )' → logprob: -9.151283264160156
    7. '           ' → logprob: -9.276283264160156
    8. ' ' → logprob: -10.026283264160156
    9. ' ' → logprob: -11.526283264160156
    10. '	ps' → logprob: -11.526283264160156

Token 369: ''est' (ID: 6616)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6910732984542847
    2. '                   ' → logprob: -1.8160732984542847
    3. '               ' → logprob: -2.441073417663574
    4. '           ' → logprob: -2.566073417663574
    5. 'pas' → logprob: -2.816073417663574
    6. 'e' → logprob: -3.691073417663574
    7. ' ps' → logprob: -3.941073417663574
    8. ''est' → logprob: -4.566073417663574
    9. '                       ' → logprob: -4.691073417663574
    10. ' pas' → logprob: -4.941073417663574

Token 370: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1345817744731903
    2. 'un' → logprob: -2.1345818042755127
    3. ' pas' → logprob: -5.884581565856934
    4. 'pas' → logprob: -5.884581565856934
    5. 'com' → logprob: -7.509581565856934
    6. 'une' → logprob: -7.634581565856934
    7. ' une' → logprob: -8.009581565856934
    8. '#' → logprob: -8.884581565856934
    9. ')' → logprob: -9.509581565856934
    10. ' composite' → logprob: -9.759581565856934

Token 371: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.12725292146205902
    2. 'multiple' → logprob: -2.1272528171539307
    3. 'multip' → logprob: -9.502252578735352
    4. 'com' → logprob: -9.752252578735352
    5. ' múlt' → logprob: -10.502252578735352
    6. ' nombre' → logprob: -10.502252578735352
    7. 'nombre' → logprob: -10.752252578735352
    8. ' composite' → logprob: -10.752252578735352
    9. 'div' → logprob: -10.752252578735352
    10. ' ' → logprob: -11.127252578735352

Token 372: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1512526422739029
    2. 'de' → logprob: -2.6512527465820312
    3. '                   ' → logprob: -3.1512527465820312
    4. '               ' → logprob: -4.276252746582031
    5. ')' → logprob: -5.651252746582031
    6. '           ' → logprob: -6.026252746582031
    7. '(i' → logprob: -6.276252746582031
    8. ' i' → logprob: -6.401252746582031
    9. 'i' → logprob: -7.526252746582031
    10. ' )' → logprob: -7.651252746582031

Token 373: ''un' (ID: 9788)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6933302283287048
    2. ' i' → logprob: -0.6933302283287048
    3. ' )' → logprob: -9.568329811096191
    4. ')' → logprob: -10.068329811096191
    5. ' ' → logprob: -10.193329811096191
    6. 'l' → logprob: -10.818329811096191
    7. '(i' → logprob: -12.943329811096191
    8. ' ' → logprob: -13.318329811096191
    9. ' l' → logprob: -13.443329811096191
    10. ' `' → logprob: -13.943329811096191

Token 374: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9837761521339417
    2. ' i' → logprob: -0.9837761521339417
    3. ' ' → logprob: -2.483776092529297
    4. ' nombre' → logprob: -3.108776092529297
    5. ' )' → logprob: -3.608776092529297
    6. ' premier' → logprob: -3.733776092529297
    7. 'nombre' → logprob: -3.733776092529297
    8. ')' → logprob: -4.233776092529297
    9. 'prime' → logprob: -4.233776092529297
    10. 'prem' → logprob: -4.733776092529297

Token 375: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.434612512588501
    2. 'prem' → logprob: -1.059612512588501
    3. ' Premier' → logprob: -6.184612274169922
    4. '   ' → logprob: -6.809612274169922
    5. ' ' → logprob: -7.309612274169922
    6. ' prime' → logprob: -7.684612274169922
    7. ' primo' → logprob: -7.934612274169922
    8. 'prime' → logprob: -8.184612274169922
    9. 'prima' → logprob: -8.809612274169922
    10. ' premiers' → logprob: -9.184612274169922

Token 376: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1051467657089233
    2. '               ' → logprob: -1.3551467657089233
    3. '                   ' → logprob: -1.8551467657089233
    4. ')
' → logprob: -1.8551467657089233
    5. '           ' → logprob: -2.355146884918213
    6. ' )
' → logprob: -7.230146884918213
    7. ',' → logprob: -7.855146884918213
    8. '                       ' → logprob: -7.980146884918213
    9. ' ' → logprob: -8.105146408081055
    10. ')
' → logprob: -8.480146408081055

Token 377: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11732764542102814
    2. '                   ' → logprob: -2.2423276901245117
    3. ' ps' → logprob: -5.867327690124512
    4. 'ps' → logprob: -6.492327690124512
    5. '           ' → logprob: -9.367327690124512
    6. '                       ' → logprob: -10.492327690124512
    7. '(ps' → logprob: -11.492327690124512
    8. '	ps' → logprob: -12.242327690124512
    9. '                ' → logprob: -12.492327690124512
    10. '   ' → logprob: -12.742327690124512

Token 378: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' (adapté à ' ps') → logprob: -0.01038358174264431
    2. ' ps' → logprob: -4.635383605957031
    3. '               ' → logprob: -8.010383605957031
    4. '                   ' → logprob: -8.385383605957031
    5. '           ' → logprob: -10.385383605957031
    6. '	ps' → logprob: -10.635383605957031
    7. '   ' → logprob: -11.885383605957031
    8. '_ps' → logprob: -13.635383605957031
    9. '.ps' → logprob: -14.260383605957031
    10. '(ps' → logprob: -14.385383605957031

Token 379: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0017066054278984666
    2. '.' → logprob: -6.501706600189209
    3. '.dis' → logprob: -8.501707077026367
    4. 'remove' → logprob: -14.001707077026367
    5. ' .' → logprob: -15.876707077026367
    6. '.Remove' → logprob: -16.751707077026367
    7. '   ' → logprob: -17.001707077026367
    8. ' remove' → logprob: -17.251707077026367
    9. '	remove' → logprob: -18.626707077026367
    10. 'discard' → logprob: -18.626707077026367

Token 380: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.6060808522743173e-05
    2. '(' → logprob: -10.625025749206543
    3. 'i' → logprob: -13.625025749206543
    4. ' (' → logprob: -14.875025749206543
    5. ' i' → logprob: -16.00002670288086
    6. '(
' → logprob: -18.00002670288086
    7. '((' → logprob: -18.37502670288086
    8. '   ' → logprob: -20.87502670288086
    9. '[i' → logprob: -21.62502670288086
    10. '	i' → logprob: -21.62502670288086

Token 381: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018943680450320244
    2. '*' → logprob: -4.018943786621094
    3. '*k' → logprob: -7.143943786621094
    4. '*i' → logprob: -13.018943786621094
    5. ' ' → logprob: -13.518943786621094
    6. ' ' → logprob: -16.393943786621094
    7. '*p' → logprob: -17.018943786621094
    8. '*j' → logprob: -17.143943786621094
    9. '*K' → logprob: -17.393943786621094
    10. '   ' → logprob: -17.893943786621094

Token 382: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.043001141399145126
    2. ' k' → logprob: -3.168001174926758
    3. ' ' → logprob: -13.918001174926758
    4. ')' → logprob: -14.668001174926758
    5. '	k' → logprob: -15.168001174926758
    6. ' ' → logprob: -16.043001174926758
    7. '_k' → logprob: -16.418001174926758
    8. '(k' → logprob: -17.043001174926758
    9. '*k' → logprob: -17.793001174926758
    10. '   ' → logprob: -17.855501174926758

Token 383: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021140782337170094
    2. ')
' → logprob: -8.625211715698242
    3. '           ' → logprob: -10.375211715698242
    4. ' )' → logprob: -14.875211715698242
    5. '               ' → logprob: -15.500211715698242
    6. ')
' → logprob: -16.750211715698242
    7. ')#' → logprob: -17.375211715698242
    8. ')

' → logprob: -17.500211715698242
    9. '       ' → logprob: -17.625211715698242
    10. '))' → logprob: -18.875211715698242

Token 384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001307142956648022
    2. '		' → logprob: -9.250130653381348
    3. 'k' → logprob: -11.375130653381348
    4. ' k' → logprob: -11.375130653381348
    5. '            
' → logprob: -12.375130653381348
    6. '	       ' → logprob: -13.000130653381348
    7. '          ' → logprob: -13.500130653381348
    8. '               ' → logprob: -13.750130653381348
    9. '	   ' → logprob: -14.375130653381348
    10. '	k' → logprob: -14.625130653381348

Token 385: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2902509868144989
    2. 'k' → logprob: -1.6652510166168213
    3. ' k' → logprob: -2.7902510166168213
    4. '	k' → logprob: -7.540250778198242
    5. '		' → logprob: -8.165250778198242
    6. '            
' → logprob: -8.915250778198242
    7. ' 
' → logprob: -9.415250778198242
    8. '            ' → logprob: -9.540250778198242
    9. ',k' → logprob: -10.290250778198242
    10. '	       ' → logprob: -10.790250778198242

Token 386: ' Pass' (ID: 12984)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011726059019565582
    2. ' k' → logprob: -6.7511725425720215
    3. '	k' → logprob: -13.00117301940918
    4. '   ' → logprob: -17.12617301940918
    5. '           ' → logprob: -17.37617301940918
    6. ' ' → logprob: -17.87617301940918
    7. ' 
' → logprob: -18.12617301940918
    8. '    ' → logprob: -18.50117301940918
    9. '            ' → logprob: -19.62617301940918
    10. '	   ' → logprob: -19.87617301940918

Token 387: 'er' (ID: 259)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.052060019224882126
    2. 'er' → logprob: -3.052060127258301
    3. '<|end|>' → logprob: -6.677060127258301
    4. '	k' → logprob: -7.677060127258301
    5. '           ' → logprob: -8.0520601272583
    6. ' k' → logprob: -8.1770601272583
    7. '
' → logprob: -8.5520601272583
    8. ' ' → logprob: -8.9270601272583
    9. '       ' → logprob: -9.0520601272583
    10. '#' → logprob: -9.1770601272583

Token 388: ' au' (ID: 2791)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03919657692313194
    2. ' k' → logprob: -3.289196491241455
    3. '	k' → logprob: -7.664196491241455
    4. ' ' → logprob: -8.164196968078613
    5. 'to' → logprob: -9.539196968078613
    6. ' to' → logprob: -10.164196968078613
    7. '(k' → logprob: -10.289196968078613
    8. '#' → logprob: -10.539196968078613
    9. '=k' → logprob: -10.539196968078613
    10. ')' → logprob: -10.664196968078613

Token 389: ' prochain' (ID: 52413)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0026705421041697264
    2. ' k' → logprob: -6.002670764923096
    3. '+' → logprob: -9.502670288085938
    4. '1' → logprob: -9.627670288085938
    5. '++' → logprob: -10.377670288085938
    6. ' ' → logprob: -11.127670288085938
    7. '(k' → logprob: -13.252670288085938
    8. 'multip' → logprob: -13.377670288085938
    9. 'next' → logprob: -13.502670288085938
    10. '+k' → logprob: -14.252670288085938

Token 390: ' multiple' (ID: 7598)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016391512006521225
    2. ' k' → logprob: -4.141391277313232
    3. ' ' → logprob: -8.01639175415039
    4. '+' → logprob: -11.89139175415039
    5. '	k' → logprob: -12.14139175415039
    6. '*k' → logprob: -12.51639175415039
    7. '<|end|>' → logprob: -13.01639175415039
    8. ')' → logprob: -13.39139175415039
    9. '*' → logprob: -13.51639175415039
    10. '++' → logprob: -13.64139175415039

Token 391: '
' (ID: 198)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20353782176971436
    2. ' k' → logprob: -1.7035378217697144
    3. '	k' → logprob: -6.453537940979004
    4. ' ' → logprob: -8.078537940979004
    5. ' 
' → logprob: -9.578537940979004
    6. '    ' → logprob: -10.203537940979004
    7. '           ' → logprob: -10.203537940979004
    8. '   ' → logprob: -10.453537940979004
    9. '     
' → logprob: -11.453537940979004
    10. '(k' → logprob: -11.828537940979004

Token 392: '           ' (ID: 352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04897213354706764
    2. ' k' → logprob: -3.0489721298217773
    3. '           ' → logprob: -8.798972129821777
    4. '	k' → logprob: -9.423972129821777
    5. '+' → logprob: -9.673972129821777
    6. '+k' → logprob: -10.798972129821777
    7. ' ' → logprob: -11.423972129821777
    8. '   ' → logprob: -11.548972129821777
    9. '=k' → logprob: -11.673972129821777
    10. '(k' → logprob: -11.798972129821777

Token 393: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.004078639671206474
    2. ' k' → logprob: -5.5040788650512695
    3. '	k' → logprob: -15.37907886505127
    4. ' ' → logprob: -17.629077911376953
    5. '    ' → logprob: -18.879077911376953
    6. '   ' → logprob: -19.129077911376953
    7. '           ' → logprob: -19.504077911376953
    8. '            ' → logprob: -20.129077911376953
    9. '+' → logprob: -20.629077911376953
    10. '+k' → logprob: -20.754077911376953

Token 394: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06201092526316643
    2. ' +=' → logprob: -2.8120110034942627
    3. '=' → logprob: -10.312010765075684
    4. '+' → logprob: -11.562010765075684
    5. ']+=' → logprob: -15.062010765075684
    6. '+="' → logprob: -16.68701171875
    7. '+='' → logprob: -16.93701171875
    8. ' =' → logprob: -16.93701171875
    9. ' ' → logprob: -17.06201171875
    10. '   ' → logprob: -18.18701171875

Token 395: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.500045776367188
    4. '<|end|>' → logprob: -19.375045776367188
    5. '  ' → logprob: -20.500045776367188
    6. '```' → logprob: -20.625045776367188
    7. '۱' → logprob: -21.250045776367188
    8. '１' → logprob: -21.750045776367188
    9. '    ' → logprob: -22.375045776367188
    10. '	' → logprob: -22.500045776367188

Token 396: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -18.500001907348633
    4. '```' → logprob: -20.312501907348633
    5. '   ' → logprob: -20.750001907348633
    6. '১' → logprob: -21.000001907348633
    7. '१' → logprob: -21.250001907348633
    8. '１' → logprob: -21.312501907348633
    9. '  ' → logprob: -21.500001907348633
    10. '۱' → logprob: -21.875001907348633

Token 397: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5491782426834106
    2. 'n' → logprob: -1.5491782426834106
    3. '#' → logprob: -2.174178123474121
    4. '<|end|>' → logprob: -2.924178123474121
    5. 'pr' → logprob: -4.674178123474121
    6. '\n' → logprob: -5.299178123474121
    7. 'p' → logprob: -5.299178123474121
    8. 'return' → logprob: -5.299178123474121
    9. 'for' → logprob: -5.424178123474121
    10. '```' → logprob: -6.049178123474121

Token 398: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1092766523361206
    2. 'for' → logprob: -2.35927677154541
    3. '#' → logprob: -4.85927677154541
    4. 'pr' → logprob: -6.98427677154541
    5. '#print' → logprob: -9.23427677154541
    6. 'prime' → logprob: -9.60927677154541
    7. 'n' → logprob: -9.85927677154541
    8. ' for' → logprob: -10.23427677154541
    9. ' print' → logprob: -11.23427677154541
    10. 'sorted' → logprob: -11.35927677154541

Token 399: ' Initial' (ID: 9209)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38139423727989197
    2. 'for' → logprob: -2.256394147872925
    3. 'pr' → logprob: -2.381394147872925
    4. 'if' → logprob: -2.631394147872925
    5. 'result' → logprob: -3.756394147872925
    6. '#' → logprob: -4.131394386291504
    7. 'prime' → logprob: -6.006394386291504
    8. 'res' → logprob: -6.131394386291504
    9. 'ps' → logprob: -7.381394386291504
    10. 'sorted' → logprob: -7.506394386291504

Token 400: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0917208194732666
    2. '#' → logprob: -3.3417208194732666
    3. 'print' → logprob: -3.8417208194732666
    4. 'izer' → logprob: -4.2167205810546875
    5. 'ps' → logprob: -6.0917205810546875
    6. 'for' → logprob: -6.0917205810546875
    7. 'ement' → logprob: -6.0917205810546875
    8. 'pr' → logprob: -6.5917205810546875
    9. 'ize' → logprob: -6.7167205810546875
    10. 'er' → logprob: -6.8417205810546875

Token 401: ' une' (ID: 2463)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.172384262084961
    2. 'pr' → logprob: -1.547384262084961
    3. 'count' → logprob: -1.797384262084961
    4. 'result' → logprob: -2.172384262084961
    5. 's' → logprob: -3.047384262084961
    6. 'sum' → logprob: -3.547384262084961
    7. 'ans' → logprob: -3.797384262084961
    8. 'cnt' → logprob: -3.922384262084961
    9. 'prime' → logprob: -4.047384262084961
    10. 'p' → logprob: -4.047384262084961

Token 402: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.19121569395065308
    2. 'result' → logprob: -2.566215753555298
    3. 'liste' → logprob: -3.191215753555298
    4. 'set' → logprob: -4.066215515136719
    5. 'sum' → logprob: -4.691215515136719
    6. 'sorted' → logprob: -4.816215515136719
    7. 'pr' → logprob: -5.066215515136719
    8. 'print' → logprob: -6.066215515136719
    9. 's' → logprob: -6.316215515136719
    10. ' list' → logprob: -6.816215515136719

Token 403: ' vide' (ID: 21835)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.047563035041093826
    2. 'prime' → logprob: -4.297563076019287
    3. 'result' → logprob: -4.547563076019287
    4. ' primes' → logprob: -4.797563076019287
    5. 'res' → logprob: -5.047563076019287
    6. 'des' → logprob: -5.922563076019287
    7. 'p' → logprob: -6.172563076019287
    8. ' des' → logprob: -7.797563076019287
    9. ' result' → logprob: -8.297562599182129
    10. 's' → logprob: -8.422562599182129

Token 404: ' pour' (ID: 1930)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.06278897821903229
    2. 'res' → logprob: -3.687788963317871
    3. 'result' → logprob: -4.187788963317871
    4. 'prime' → logprob: -4.937788963317871
    5. 'lst' → logprob: -5.437788963317871
    6. 'p' → logprob: -5.812788963317871
    7. 'prem' → logprob: -6.187788963317871
    8. 'l' → logprob: -6.562788963317871
    9. 'ans' → logprob: -7.187788963317871
    10. 'pl' → logprob: -8.062788963317871

Token 405: ' stock' (ID: 6546)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.26842790842056274
    2. 'result' → logprob: -2.393427848815918
    3. 'les' → logprob: -3.143427848815918
    4. 'stock' → logprob: -3.518427848815918
    5. ' primes' → logprob: -3.643427848815918
    6. 'res' → logprob: -4.518427848815918
    7. ' stock' → logprob: -5.143427848815918
    8. 'prime' → logprob: -5.268427848815918
    9. 'results' → logprob: -5.393427848815918
    10. ' result' → logprob: -5.518427848815918

Token 406: 'er' (ID: 259)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.40358972549438477
    2. '()' → logprob: -2.4035897254943848
    3. '[]' → logprob: -2.7785897254943848
    4. '(' → logprob: -3.1535897254943848
    5. 'des' → logprob: -3.1535897254943848
    6. ' les' → logprob: -3.9035897254943848
    7. ' primes' → logprob: -4.028589725494385
    8. '([]' → logprob: -4.528589725494385
    9. 's' → logprob: -5.028589725494385
    10. 'les' → logprob: -5.028589725494385

Token 407: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.46031454205513
    2. 'pr' → logprob: -1.0853145122528076
    3. ' les' → logprob: -4.210314750671387
    4. ' primes' → logprob: -5.210314750671387
    5. 'prime' → logprob: -5.335314750671387
    6. 'result' → logprob: -6.460314750671387
    7. '[]' → logprob: -6.835314750671387
    8. 'results' → logprob: -7.460314750671387
    9. 'res' → logprob: -8.085314750671387
    10. 'p' → logprob: -8.210314750671387

Token 408: ' réponses' (ID: 88884)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.08645424991846085
    2. 'prem' → logprob: -2.836454153060913
    3. ' premiers' → logprob: -5.211454391479492
    4. ' nombres' → logprob: -5.211454391479492
    5. ' primes' → logprob: -5.586454391479492
    6. 'prime' → logprob: -5.711454391479492
    7. 'n' → logprob: -6.336454391479492
    8. 'result' → logprob: -6.961454391479492
    9. 'nombre' → logprob: -7.086454391479492
    10. 'prim' → logprob: -7.211454391479492

Token 409: ' ou' (ID: 2031)
  Prédit: 'answers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answers' → logprob: -0.4271175265312195
    2. 'res' → logprob: -1.8021175861358643
    3. 'result' → logprob: -2.8021175861358643
    4. 're' → logprob: -3.0521175861358643
    5. 'ans' → logprob: -3.3021175861358643
    6. 'answer' → logprob: -3.8021175861358643
    7. 'results' → logprob: -4.552117347717285
    8. 'rep' → logprob: -6.427117347717285
    9. 'responses' → logprob: -6.802117347717285
    10. 'pr' → logprob: -7.177117347717285

Token 410: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3329249918460846
    2. '[]' → logprob: -2.4579250812530518
    3. 'results' → logprob: -2.5829250812530518
    4. 'les' → logprob: -3.5829250812530518
    5. ' résultats' → logprob: -3.5829250812530518
    6. ' result' → logprob: -3.8329250812530518
    7. 'rés' → logprob: -3.8329250812530518
    8. ' results' → logprob: -5.207924842834473
    9. ' les' → logprob: -5.457924842834473
    10. 'res' → logprob: -5.957924842834473

Token 411: ' résultats' (ID: 48985)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6983017921447754
    2. 'rés' → logprob: -1.0733017921447754
    3. 'result' → logprob: -2.6983017921447754
    4. 'results' → logprob: -3.6983017921447754
    5. 'print' → logprob: -4.198301792144775
    6. 'n' → logprob: -4.323301792144775
    7. 'prem' → logprob: -4.823301792144775
    8. 'indices' → logprob: -4.948301792144775
    9. 'prints' → logprob: -6.073301792144775
    10. 'tests' → logprob: -6.573301792144775

Token 412: ' fin' (ID: 2131)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2186124324798584
    2. 'result' → logprob: -1.2186124324798584
    3. 'answers' → logprob: -1.5936124324798584
    4. 'results' → logprob: -1.9686124324798584
    5. 're' → logprob: -3.4686124324798584
    6. 'answer' → logprob: -4.0936126708984375
    7. 'ans' → logprob: -4.2186126708984375
    8. 'rep' → logprob: -6.7186126708984375
    9. 'r' → logprob: -7.7186126708984375
    10. 'lst' → logprob: -7.9686126708984375

Token 413: 'aux' (ID: 5454)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ult' → logprob: -1.23828125
    2. 'ults' → logprob: -1.36328125
    3. '[]' → logprob: -1.86328125
    4. 'es' → logprob: -2.61328125
    5. 'ultat' → logprob: -2.61328125
    6. 's' → logprob: -3.11328125
    7. '```' → logprob: -3.86328125
    8. '=[]' → logprob: -4.11328125
    9. ']' → logprob: -4.36328125
    10. ' =' → logprob: -4.48828125

Token 414: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0260111093521118
    2. 'results' → logprob: -1.4010111093521118
    3. 'res' → logprob: -1.6510111093521118
    4. 'answers' → logprob: -1.7760111093521118
    5. 're' → logprob: -4.151010990142822
    6. 'answer' → logprob: -4.776010990142822
    7. 'ans' → logprob: -5.026010990142822
    8. 'rep' → logprob: -7.151010990142822
    9. 'pr' → logprob: -7.401010990142822
    10. 'rés' → logprob: -7.901010990142822

Token 415: 'ans' (ID: 616)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9194618463516235
    2. 'result' → logprob: -1.4194618463516235
    3. 'results' → logprob: -1.5444618463516235
    4. 'answers' → logprob: -2.294461727142334
    5. 'ans' → logprob: -3.919461727142334
    6. 're' → logprob: -4.419461727142334
    7. 'answer' → logprob: -5.169461727142334
    8. 'pr' → logprob: -5.419461727142334
    9. 'r' → logprob: -7.294461727142334
    10. 'rep' → logprob: -7.419461727142334

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18015944957733154
    2. '=' → logprob: -1.8051594495773315
    3. '=[]' → logprob: -7.930159568786621
    4. '[]' → logprob: -10.430159568786621
    5. '_' → logprob: -11.555159568786621
    6. 's' → logprob: -12.305159568786621
    7. '[:]' → logprob: -13.055159568786621
    8. ',' → logprob: -13.305159568786621
    9. '[' → logprob: -13.430159568786621
    10. ' ' → logprob: -13.430159568786621

Token 417: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.77627644513268e-06
    2. '[' → logprob: -12.500008583068848
    3. ' []' → logprob: -12.750008583068848
    4. '[]
' → logprob: -13.125008583068848
    5. '[]

' → logprob: -16.125009536743164
    6. '[]}' → logprob: -16.375009536743164
    7. 'list' → logprob: -18.500009536743164
    8. '[]>' → logprob: -19.250009536743164
    9. '[],' → logprob: -19.375009536743164
    10. '[]"' → logprob: -19.375009536743164

Token 418: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006887249764986336
    2. '<|end|>' → logprob: -8.500688552856445
    3. 'while' → logprob: -8.625688552856445
    4. 'i' → logprob: -8.625688552856445
    5. ' for' → logprob: -9.375688552856445
    6. 'if' → logprob: -10.625688552856445
    7. '#' → logprob: -11.875688552856445
    8. '```' → logprob: -12.375688552856445
    9. 'pr' → logprob: -14.000688552856445
    10. 'prime' → logprob: -14.125688552856445

Token 419: ' Dé' (ID: 27247)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011345596052706242
    2. 'm' → logprob: -5.511345386505127
    3. 'p' → logprob: -6.011345386505127
    4. 'i' → logprob: -6.511345386505127
    5. 'while' → logprob: -6.886345386505127
    6. 'q' → logprob: -7.261345386505127
    7. 't' → logprob: -8.261345863342285
    8. 'n' → logprob: -8.261345863342285
    9. 'x' → logprob: -8.511345863342285
    10. 'a' → logprob: -8.511345863342285

Token 420: 'termin' (ID: 26821)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5400692820549011
    2. 'f' → logprob: -0.9150692820549011
    3. 'fin' → logprob: -4.665069103240967
    4. 'but' → logprob: -5.790069103240967
    5. '#' → logprob: -6.040069103240967
    6. 'fi' → logprob: -6.665069103240967
    7. 'part' → logprob: -8.040069580078125
    8. 'if' → logprob: -9.415069580078125
    9. 'forcer' → logprob: -10.540069580078125
    10. 'p' → logprob: -10.665069580078125

Token 421: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3880802392959595
    2. 'e' → logprob: -1.1380802392959595
    3. 'for' → logprob: -7.13808012008667
    4. 'é' → logprob: -9.013080596923828
    5. ' for' → logprob: -9.263080596923828
    6. 'r' → logprob: -9.763080596923828
    7. 'iner' → logprob: -9.763080596923828
    8. 'ner' → logprob: -11.013080596923828
    9. 'in' → logprob: -11.638080596923828
    10. 'range' → logprob: -12.138080596923828

Token 422: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5776986479759216
    2. 'if' → logprob: -0.9526986479759216
    3. 'i' → logprob: -3.5776987075805664
    4. 'len' → logprob: -5.452698707580566
    5. ' if' → logprob: -5.702698707580566
    6. 'le' → logprob: -5.827698707580566
    7. 'whether' → logprob: -6.077698707580566
    8. '(len' → logprob: -6.327698707580566
    9. 'range' → logprob: -6.452698707580566
    10. ' for' → logprob: -6.577698707580566

Token 423: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22671590745449066
    2. 'while' → logprob: -2.7267158031463623
    3. 'i' → logprob: -2.9767158031463623
    4. 'p' → logprob: -4.101716041564941
    5. 'max' → logprob: -4.351716041564941
    6. 'plus' → logprob: -4.476716041564941
    7. ' for' → logprob: -4.726716041564941
    8. 'len' → logprob: -4.851716041564941
    9. 'nombre' → logprob: -5.226716041564941
    10. 'min' → logprob: -5.351716041564941

Token 424: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.0882047787308693
    2. ' grand' → logprob: -2.713204860687256
    3. 'prem' → logprob: -4.963204860687256
    4. 'pet' → logprob: -6.213204860687256
    5. ' petit' → logprob: -6.588204860687256
    6. 'large' → logprob: -6.713204860687256
    7. 'for' → logprob: -6.963204860687256
    8. 'max' → logprob: -6.963204860687256
    9. 'pro' → logprob: -7.088204860687256
    10. 'plus' → logprob: -7.213204860687256

Token 425: ' nombre' (ID: 9733)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.19316738843917847
    2. 'p' → logprob: -2.4431674480438232
    3. 'prem' → logprob: -2.9431674480438232
    4. 'nombre' → logprob: -3.8181674480438232
    5. 'i' → logprob: -6.068167209625244
    6. 'ent' → logprob: -6.318167209625244
    7. 'x' → logprob: -6.568167209625244
    8. 'pr' → logprob: -6.943167209625244
    9. 'n' → logprob: -7.318167209625244
    10. 'div' → logprob: -7.443167209625244

Token 426: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.38420796394348145
    2. 'p' → logprob: -1.7592079639434814
    3. 'prime' → logprob: -2.6342079639434814
    4. 'possible' → logprob: -3.2592079639434814
    5. 'pr' → logprob: -4.759207725524902
    6. 'dans' → logprob: -4.884207725524902
    7. 'prima' → logprob: -5.009207725524902
    8. 'd' → logprob: -6.634207725524902
    9. 't' → logprob: -7.009207725524902
    10. 's' → logprob: -7.134207725524902

Token 427: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5441262722015381
    2. '=' → logprob: -1.544126272201538
    3. 'prime' → logprob: -2.669126272201538
    4. 'max' → logprob: -3.419126272201538
    5. 'ps' → logprob: -3.544126272201538
    6. 'p' → logprob: -3.669126272201538
    7. 'dans' → logprob: -3.794126272201538
    8. 'prem' → logprob: -4.294126510620117
    9. '=max' → logprob: -6.044126510620117
    10. 'prima' → logprob: -6.544126510620117

Token 428: ' l' (ID: 305)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.008618354797363281
    2. ' ps' → logprob: -4.758618354797363
    3. '(ps' → logprob: -12.633618354797363
    4. '	ps' → logprob: -14.633618354797363
    5. '_ps' → logprob: -17.758617401123047
    6. '.ps' → logprob: -18.258617401123047
    7. ' ' → logprob: -18.258617401123047
    8. 'ans' → logprob: -18.883617401123047
    9. 'PS' → logprob: -19.508617401123047
    10. 'p' → logprob: -20.258617401123047

Token 429: ''ensemble' (ID: 79341)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0001305950863752514
    2. ' ps' → logprob: -9.000130653381348
    3. '(ps' → logprob: -12.375130653381348
    4. 'ans' → logprob: -13.750130653381348
    5. 's' → logprob: -13.875130653381348
    6. '	ps' → logprob: -14.375130653381348
    7. '.ps' → logprob: -15.750130653381348
    8. '_ps' → logprob: -15.875130653381348
    9. 'p' → logprob: -16.62512969970703
    10. '=' → logprob: -18.37512969970703

Token 430: ' ps' (ID: 10942)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14524918794631958
    2. 'ans' → logprob: -2.645249128341675
    3. 'mx' → logprob: -3.395249128341675
    4. 'p' → logprob: -4.520249366760254
    5. 'ps' → logprob: -5.020249366760254
    6. 'prime' → logprob: -5.520249366760254
    7. 'm' → logprob: -5.895249366760254
    8. ' max' → logprob: -6.395249366760254
    9. 'largest' → logprob: -6.645249366760254
    10. 'pr' → logprob: -7.020249366760254

Token 431: ' avec' (ID: 3937)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.311800092458725
    2. 'ans' → logprob: -1.4368001222610474
    3. 'mx' → logprob: -4.186800003051758
    4. 'largest' → logprob: -5.061800003051758
    5. 'm' → logprob: -5.561800003051758
    6. 'p' → logprob: -6.186800003051758
    7. 'ma' → logprob: -7.311800003051758
    8. 'answer' → logprob: -8.311800003051758
    9. ' ans' → logprob: -8.311800003051758
    10. ' max' → logprob: -8.311800003051758

Token 432: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.553032628493384e-05
    2. ' max' → logprob: -9.500075340270996
    3. 'ps' → logprob: -15.375075340270996
    4. 'ans' → logprob: -15.500075340270996
    5. '(max' → logprob: -15.875075340270996
    6. '=max' → logprob: -16.875076293945312
    7. '[max' → logprob: -18.250076293945312
    8. 'maximum' → logprob: -18.875076293945312
    9. ',max' → logprob: -19.000076293945312
    10. '`' → logprob: -19.500076293945312

Token 433: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -0.021554037928581238
    2. 'ps' → logprob: -4.396553993225098
    3. '_ps' → logprob: -5.146553993225098
    4. '()' → logprob: -6.521553993225098
    5. '(' → logprob: -6.521553993225098
    6. '(ans' → logprob: -8.771553993225098
    7. '(
' → logprob: -11.271553993225098
    8. '(pr' → logprob: -11.646553993225098
    9. 'ans' → logprob: -11.771553993225098
    10. '_ans' → logprob: -11.896553993225098

Token 434: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002458430244587362
    2. '())' → logprob: -9.250246047973633
    3. ' )' → logprob: -9.625246047973633
    4. '))' → logprob: -10.250246047973633
    5. ')
' → logprob: -10.375246047973633
    6. '()' → logprob: -11.250246047973633
    7. ')#' → logprob: -13.500246047973633
    8. ')

' → logprob: -14.375246047973633
    9. ')`' → logprob: -14.875246047973633
    10. ').' → logprob: -15.125246047973633

Token 435: ' et' (ID: 859)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6815518736839294
    2. ' max' → logprob: -1.8065519332885742
    3. ' ans' → logprob: -2.431551933288574
    4. ' p' → logprob: -2.806551933288574
    5. 'ans' → logprob: -3.056551933288574
    6. 'p' → logprob: -3.931551933288574
    7. ')' → logprob: -4.181551933288574
    8. 'val' → logprob: -4.431551933288574
    9. ' ps' → logprob: -4.431551933288574
    10. 'prime' → logprob: -4.431551933288574

Token 436: ' assign' (ID: 14975)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07190752029418945
    2. 'while' → logprob: -3.9469075202941895
    3. ' ans' → logprob: -4.1969075202941895
    4. 'if' → logprob: -4.1969075202941895
    5. 'for' → logprob: -4.6969075202941895
    6. 'print' → logprob: -5.8219075202941895
    7. 'max' → logprob: -6.4469075202941895
    8. '#' → logprob: -6.5719075202941895
    9. ' while' → logprob: -7.4469075202941895
    10. 'n' → logprob: -7.5719075202941895

Token 437: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.05517755076289177
    2. '=' → logprob: -3.3051774501800537
    3. 'ant' → logprob: -4.805177688598633
    4. '(ans' → logprob: -4.930177688598633
    5. '()' → logprob: -7.930177688598633
    6. ')' → logprob: -8.430177688598633
    7. 'é' → logprob: -8.430177688598633
    8. 'ent' → logprob: -8.555177688598633
    9. 'ans' → logprob: -8.805177688598633
    10. ' =' → logprob: -8.930177688598633

Token 438: ' cette' (ID: 7696)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.6668844819068909
    2. 'ans' → logprob: -0.9168844819068909
    3. 'max' → logprob: -3.291884422302246
    4. 'le' → logprob: -4.541884422302246
    5. 'l' → logprob: -4.916884422302246
    6. 'la' → logprob: -5.041884422302246
    7. '(max' → logprob: -5.041884422302246
    8. 'ce' → logprob: -5.541884422302246
    9. ' ce' → logprob: -5.916884422302246
    10. '()' → logprob: -6.291884422302246

Token 439: ' valeur' (ID: 41664)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009636379778385162
    2. ' )' → logprob: -4.884636402130127
    3. 'value' → logprob: -7.884636402130127
    4. ' ' → logprob: -8.259635925292969
    5. 'val' → logprob: -8.259635925292969
    6. 'max' → logprob: -8.634635925292969
    7. ' value' → logprob: -8.634635925292969
    8. ' valeur' → logprob: -9.009635925292969
    9. '<|end|>' → logprob: -9.134635925292969
    10. 'number' → logprob: -9.259635925292969

Token 440: ' à' (ID: 1221)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11775572597980499
    2. 'largest' → logprob: -3.492755651473999
    3. 'to' → logprob: -3.867755651473999
    4. 'n' → logprob: -4.242755889892578
    5. 'plus' → logprob: -4.242755889892578
    6. ' =' → logprob: -5.242755889892578
    7. '=' → logprob: -5.242755889892578
    8. 'ans' → logprob: -5.367755889892578
    9. ' to' → logprob: -5.617755889892578
    10. '(max' → logprob: -5.992755889892578

Token 441: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.37578755617141724
    2. 'ans' → logprob: -2.1257874965667725
    3. 'p' → logprob: -2.6257874965667725
    4. 'largest' → logprob: -3.3757874965667725
    5. 'm' → logprob: -3.5007874965667725
    6. 'n' → logprob: -4.375787734985352
    7. 'last' → logprob: -4.500787734985352
    8. 'x' → logprob: -4.750787734985352
    9. 'prime' → logprob: -5.125787734985352
    10. 'mx' → logprob: -6.000787734985352

Token 442: ' variable' (ID: 11076)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1035768985748291
    2. 'p' → logprob: -3.853576898574829
    3. 'largest' → logprob: -3.853576898574829
    4. 'm' → logprob: -4.60357666015625
    5. 'prime' → logprob: -4.72857666015625
    6. 'plus' → logprob: -4.85357666015625
    7. 'ans' → logprob: -5.22857666015625
    8. 'x' → logprob: -5.35357666015625
    9. 'variable' → logprob: -5.97857666015625
    10. 'maximum' → logprob: -5.97857666015625

Token 443: ' i' (ID: 575)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9465826153755188
    2. 'm' → logprob: -1.696582555770874
    3. 'mx' → logprob: -1.696582555770874
    4. 'p' → logprob: -1.946582555770874
    5. 'x' → logprob: -3.696582555770874
    6. 'a' → logprob: -4.071582794189453
    7. 'ma' → logprob: -4.696582794189453
    8. 'last' → logprob: -4.946582794189453
    9. 'largest' → logprob: -5.196582794189453
    10. 'l' → logprob: -5.196582794189453

Token 444: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7214382886886597
    2. 'i' → logprob: -0.8464382886886597
    3. ' =' → logprob: -2.471438407897949
    4. ' i' → logprob: -8.34643840789795
    5. '=i' → logprob: -9.09643840789795
    6. 'max' → logprob: -9.47143840789795
    7. '=max' → logprob: -9.97143840789795
    8. 'n' → logprob: -10.84643840789795
    9. 'for' → logprob: -11.59643840789795
    10. 's' → logprob: -11.59643840789795

Token 445: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.7053759519476444e-05
    2. ' i' → logprob: -10.750057220458984
    3. '=' → logprob: -11.250057220458984
    4. ' =' → logprob: -11.750057220458984
    5. 'max' → logprob: -12.000057220458984
    6. 'for' → logprob: -12.500057220458984
    7. 'ans' → logprob: -13.000057220458984
    8. '```' → logprob: -14.250057220458984
    9. 'n' → logprob: -14.500057220458984
    10. '
' → logprob: -14.750057220458984

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889121770858765
    2. '=' → logprob: -2.5788912773132324
    3. '=i' → logprob: -14.328890800476074
    4. ',' → logprob: -14.578890800476074
    5. ' ' → logprob: -16.20389175415039
    6. ' ' → logprob: -16.45389175415039
    7. ' =
' → logprob: -16.95389175415039
    8. '=int' → logprob: -16.95389175415039
    9. '=max' → logprob: -17.20389175415039
    10. '＝' → logprob: -17.32889175415039

Token 447: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005270041991025209
    2. ' max' → logprob: -5.255270004272461
    3. '555' → logprob: -10.255270004272461
    4. ' ' → logprob: -14.880270004272461
    5. '(max' → logprob: -15.255270004272461
    6. 'int' → logprob: -16.50527000427246
    7. '   ' → logprob: -16.75527000427246
    8. 'min' → logprob: -17.00527000427246
    9. '	max' → logprob: -17.00527000427246
    10. '556' → logprob: -17.00527000427246

Token 448: '(ps' (ID: 72187)
  Prédit: '(ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ps' → logprob: -0.002493256703019142
    2. '(' → logprob: -6.002493381500244
    3. ' (' → logprob: -11.252492904663086
    4. '(
' → logprob: -13.627492904663086
    5. '(ss' → logprob: -13.627492904663086
    6. '(s' → logprob: -14.502492904663086
    7. '(p' → logprob: -15.002492904663086
    8. '(pr' → logprob: -15.252492904663086
    9. '	ps' → logprob: -15.502492904663086
    10. '(i' → logprob: -16.377492904663086

Token 449: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5597102396423e-05
    2. ')
' → logprob: -10.375035285949707
    3. ' )' → logprob: -13.875035285949707
    4. '())' → logprob: -13.875035285949707
    5. '()' → logprob: -14.125035285949707
    6. ')

' → logprob: -14.250035285949707
    7. '<|end|>' → logprob: -14.500035285949707
    8. ')#' → logprob: -15.375035285949707
    9. '))' → logprob: -15.750035285949707
    10. ')+' → logprob: -16.750036239624023

Token 450: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13543573021888733
    2. '<|end|>' → logprob: -2.1354358196258545
    3. '+' → logprob: -5.885435581207275
    4. '

' → logprob: -7.010435581207275
    5. ' 
' → logprob: -7.010435581207275
    6. 'while' → logprob: -7.135435581207275
    7. ')' → logprob: -7.385435581207275
    8. '#' → logprob: -7.760435581207275
    9. '  
' → logprob: -7.885435581207275
    10. ' while' → logprob: -8.010436058044434

Token 451: ' D' (ID: 415)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0006475062109529972
    2. 'if' → logprob: -7.50064754486084
    3. 'for' → logprob: -9.75064754486084
    4. 'ans' → logprob: -10.75064754486084
    5. ' while' → logprob: -11.37564754486084
    6. '#' → logprob: -13.75064754486084
    7. 'i' → logprob: -14.12564754486084
    8. '```' → logprob: -15.50064754486084
    9. '
' → logprob: -15.62564754486084
    10. 'While' → logprob: -15.75064754486084

Token 452: 'ém' (ID: 4135)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5556780695915222
    2. ' while' → logprob: -1.305678129196167
    3. 'ef' → logprob: -2.305678129196167
    4. 'while' → logprob: -3.055678129196167
    5. ' e' → logprob: -5.555677890777588
    6. 'ec' → logprob: -6.680677890777588
    7. 'el' → logprob: -7.430677890777588
    8. ' ec' → logprob: -7.680677890777588
    9. 'é' → logprob: -7.805677890777588
    10. '=' → logprob: -8.055678367614746

Token 453: 'arrer' (ID: 85856)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.411931574344635
    2. 'while' → logprob: -2.0369315147399902
    3. 'e' → logprob: -2.2869315147399902
    4. 'o' → logprob: -2.7869315147399902
    5. 'ef' → logprob: -3.4119315147399902
    6. 'i' → logprob: -5.66193151473999
    7. 'é' → logprob: -6.28693151473999
    8. 'el' → logprob: -6.66193151473999
    9. ' i' → logprob: -7.53693151473999
    10. '#' → logprob: -7.53693151473999

Token 454: ' une' (ID: 2463)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2818269431591034
    2. ' while' → logprob: -1.4068269729614258
    3. ' i' → logprob: -7.406826972961426
    4. 'i' → logprob: -10.156826972961426
    5. 'for' → logprob: -11.906826972961426
    6. ' ' → logprob: -12.281826972961426
    7. ' a' → logprob: -13.031826972961426
    8. 'While' → logprob: -13.156826972961426
    9. ')' → logprob: -13.531826972961426
    10. 'hile' → logprob: -13.656826972961426

Token 455: ' boucle' (ID: 174211)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06197160854935646
    2. ' while' → logprob: -2.811971664428711
    3. 'hile' → logprob: -13.936971664428711
    4. 'for' → logprob: -14.311971664428711
    5. '```' → logprob: -14.311971664428711
    6. 'While' → logprob: -14.686971664428711
    7. '
' → logprob: -15.186971664428711
    8. 'wh' → logprob: -15.811971664428711
    9. '	while' → logprob: -15.936971664428711
    10. ' ' → logprob: -15.936971664428711

Token 456: ' qui' (ID: 2780)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2520378828048706
    2. ' while' → logprob: -1.5020378828048706
    3. ' i' → logprob: -10.00203800201416
    4. 'for' → logprob: -11.00203800201416
    5. '#' → logprob: -11.62703800201416
    6. ' in' → logprob: -12.00203800201416
    7. ' for' → logprob: -12.00203800201416
    8. ':' → logprob: -12.25203800201416
    9. 'i' → logprob: -12.75203800201416
    10. ' =' → logprob: -13.00203800201416

Token 457: ' continue' (ID: 4901)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.27231451869010925
    2. 'while' → logprob: -1.6473145484924316
    3. ' >=' → logprob: -4.022314548492432
    4. '>=' → logprob: -4.397314548492432
    5. ' i' → logprob: -5.272314548492432
    6. ' >' → logprob: -5.397314548492432
    7. '>' → logprob: -5.397314548492432
    8. ' <=' → logprob: -8.147314071655273
    9. ' !=' → logprob: -8.397314071655273
    10. 'While' → logprob: -8.522314071655273

Token 458: ' tant' (ID: 16235)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9356619715690613
    2. ' while' → logprob: -1.185662031173706
    3. ' i' → logprob: -1.310662031173706
    4. 'i' → logprob: -3.435662031173706
    5. '   ' → logprob: -9.060662269592285
    6. '(i' → logprob: -9.560662269592285
    7. ' ' → logprob: -10.685662269592285
    8. ' (' → logprob: -11.310662269592285
    9. '  ' → logprob: -12.060662269592285
    10. ' not' → logprob: -12.060662269592285

Token 459: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.14757899940013885
    2. ' i' → logprob: -2.1475789546966553
    3. 'i' → logprob: -4.522579193115234
    4. '(i' → logprob: -5.022579193115234
    5. 'que' → logprob: -6.397579193115234
    6. 'while' → logprob: -7.147579193115234
    7. ' while' → logprob: -8.397579193115234
    8. '#' → logprob: -9.147579193115234
    9. '(' → logprob: -9.897579193115234
    10. ' (' → logprob: -10.147579193115234

Token 460: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02229403518140316
    2. ' i' → logprob: -3.897294044494629
    3. 'n' → logprob: -7.022294044494629
    4. 'len' → logprob: -7.522294044494629
    5. 'ps' → logprob: -9.522294044494629
    6. 'ans' → logprob: -9.897294044494629
    7. 'True' → logprob: -10.272294044494629
    8. ' len' → logprob: -10.397294044494629
    9. '   ' → logprob: -10.522294044494629
    10. ' n' → logprob: -10.522294044494629

Token 461: ' longueur' (ID: 104613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10247338563203812
    2. ' i' → logprob: -2.602473497390747
    3. 'len' → logprob: -4.602473258972168
    4. 'n' → logprob: -4.727473258972168
    5. ' len' → logprob: -6.727473258972168
    6. 'True' → logprob: -6.852473258972168
    7. 'ps' → logprob: -7.352473258972168
    8. ' n' → logprob: -7.477473258972168
    9. ' True' → logprob: -8.852473258972168
    10. ' ps' → logprob: -8.852473258972168

Token 462: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.023504599928855896
    2. '(ps' → logprob: -3.8985044956207275
    3. '(' → logprob: -6.148504734039307
    4. 'ans' → logprob: -8.273504257202148
    5. '(len' → logprob: -8.398504257202148
    6. '(i' → logprob: -8.523504257202148
    7. ' (' → logprob: -9.398504257202148
    8. '>' → logprob: -11.023504257202148
    9. ' ans' → logprob: -11.398504257202148
    10. 'ps' → logprob: -12.273504257202148

Token 463: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.023438336327672005
    2. ' ans' → logprob: -4.148438453674316
    3. '(ans' → logprob: -5.023438453674316
    4. 'ps' → logprob: -7.273438453674316
    5. '(ps' → logprob: -10.023438453674316
    6. ' ps' → logprob: -10.148438453674316
    7. '	ans' → logprob: -11.523438453674316
    8. 'str' → logprob: -12.523438453674316
    9. '_ans' → logprob: -13.773438453674316
    10. ' str' → logprob: -14.898438453674316

Token 464: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010458028875291348
    2. 'ps' → logprob: -4.760457992553711
    3. ' ans' → logprob: -6.385457992553711
    4. '(ans' → logprob: -9.135457992553711
    5. ' ps' → logprob: -10.510457992553711
    6. 'str' → logprob: -11.510457992553711
    7. '(ps' → logprob: -12.260457992553711
    8. '	ans' → logprob: -13.010457992553711
    9. '_ans' → logprob: -14.260457992553711
    10. 'answer' → logprob: -15.010457992553711

Token 465: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0008128436165861785
    2. 'ans' → logprob: -7.125813007354736
    3. ' ans' → logprob: -12.250812530517578
    4. '(' → logprob: -13.750812530517578
    5. '	ans' → logprob: -14.000812530517578
    6. '(ps' → logprob: -14.375812530517578
    7. ' (' → logprob: -14.750812530517578
    8. '(answer' → logprob: -15.875812530517578
    9. '_ans' → logprob: -15.875812530517578
    10. 'Ans' → logprob: -16.125812530517578

Token 466: ' est' (ID: 893)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3514370918273926
    2. ' <' → logprob: -1.2264370918273926
    3. '<len' → logprob: -6.476437091827393
    4. '()<' → logprob: -7.351437091827393
    5. '<n' → logprob: -7.851437091827393
    6. '!=' → logprob: -9.601436614990234
    7. ' ' → logprob: -9.726436614990234
    8. '()' → logprob: -9.851436614990234
    9. ' !=' → logprob: -10.226436614990234
    10. ')' → logprob: -10.726436614990234

Token 467: ' strict' (ID: 12035)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05288634076714516
    2. ' <' → logprob: -3.0528862476348877
    3. ' less' → logprob: -6.177886486053467
    4. '0' → logprob: -7.177886486053467
    5. '<len' → logprob: -7.177886486053467
    6. '<n' → logprob: -7.927886486053467
    7. '()<' → logprob: -9.177886009216309
    8. ' len' → logprob: -9.927886009216309
    9. ' ' → logprob: -10.427886009216309
    10. 'less' → logprob: -10.927886009216309

Token 468: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.025090554729104042
    2. '<' → logprob: -4.02509069442749
    3. 'e' → logprob: -5.52509069442749
    4. 'ly' → logprob: -6.02509069442749
    5. '>' → logprob: -9.025090217590332
    6. 'ely' → logprob: -9.150090217590332
    7. 'ment' → logprob: -9.275090217590332
    8. 'emen' → logprob: -10.025090217590332
    9. '<len' → logprob: -10.900090217590332
    10. 'emente' → logprob: -11.025090217590332

Token 469: ' inf' (ID: 5603)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03415434807538986
    2. ' <' → logprob: -3.4091544151306152
    3. ' less' → logprob: -8.534153938293457
    4. ' inférieur' → logprob: -9.284153938293457
    5. 'less' → logprob: -9.909153938293457
    6. ' inf' → logprob: -10.034153938293457
    7. 'inf' → logprob: -10.284153938293457
    8. '()<' → logprob: -10.784153938293457
    9. '<len' → logprob: -10.909153938293457
    10. '<
' → logprob: -11.534153938293457

Token 470: 'érieure' (ID: 45836)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.3998854160308838
    2. '(len' → logprob: -1.5248854160308838
    3. 'en' → logprob: -2.774885416030884
    4. 'e' → logprob: -4.024885177612305
    5. 'ite' → logprob: -4.649885177612305
    6. 't' → logprob: -4.899885177612305
    7. '(' → logprob: -5.524885177612305
    8. 'ans' → logprob: -5.899885177612305
    9. '(i' → logprob: -6.524885177612305
    10. 'it' → logprob: -6.774885177612305

Token 471: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002622743137180805
    2. ' (' → logprob: -6.627622604370117
    3. ' <' → logprob: -7.752622604370117
    4. '(ans' → logprob: -7.877622604370117
    5. '<' → logprob: -8.752622604370117
    6. '(<' → logprob: -9.002622604370117
    7. '(n' → logprob: -9.377622604370117
    8. 'ans' → logprob: -10.252622604370117
    9. '3' → logprob: -11.127622604370117
    10. '2' → logprob: -11.502622604370117

Token 472: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4060558080673218
    2. '5' → logprob: -1.9060558080673218
    3. '10' → logprob: -2.6560559272766113
    4. '3' → logprob: -2.9060559272766113
    5. '2' → logprob: -3.7810559272766113
    6. '4' → logprob: -4.156055927276611
    7. '6' → logprob: -4.781055927276611
    8. '7' → logprob: -5.531055927276611
    9. '8' → logprob: -6.656055927276611
    10. '100' → logprob: -6.656055927276611

Token 473: ' ET' (ID: 23345)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01514450740069151
    2. 'while' → logprob: -4.890144348144531
    3. ':
' → logprob: -5.515144348144531
    4. ' and' → logprob: -6.640144348144531
    5. ' while' → logprob: -6.640144348144531
    6. 'and' → logprob: -7.140144348144531
    7. ' :' → logprob: -9.640144348144531
    8. '   ' → logprob: -12.515144348144531
    9. ' :
' → logprob: -13.515144348144531
    10. '.' → logprob: -13.765144348144531

Token 474: ' que' (ID: 661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11529441922903061
    2. ' i' → logprob: -2.2402944564819336
    3. 'len' → logprob: -6.365294456481934
    4. ' len' → logprob: -7.740294456481934
    5. 'ps' → logprob: -8.990294456481934
    6. ' ps' → logprob: -9.615294456481934
    7. '(i' → logprob: -10.615294456481934
    8. ' ' → logprob: -10.990294456481934
    9. 'n' → logprob: -11.240294456481934
    10. 'ans' → logprob: -11.615294456481934

Token 475: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0026112133637070656
    2. ' i' → logprob: -6.37761116027832
    3. 'len' → logprob: -7.62761116027832
    4. 'ps' → logprob: -7.87761116027832
    5. ' ps' → logprob: -11.62761116027832
    6. ' len' → logprob: -12.00261116027832
    7. '   ' → logprob: -12.62761116027832
    8. 'n' → logprob: -12.75261116027832
    9. '0' → logprob: -13.00261116027832
    10. '1' → logprob: -13.12761116027832

Token 476: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.301152229309082
    2. '>=' → logprob: -1.301152229309082
    3. ' >=' → logprob: -1.676152229309082
    4. '>' → logprob: -1.926152229309082
    5. 'in' → logprob: -2.676152229309082
    6. ' >' → logprob: -2.926152229309082
    7. ' not' → logprob: -9.301152229309082
    8. 'not' → logprob: -9.926152229309082
    9. ' i' → logprob: -10.051152229309082
    10. ' ' → logprob: -10.301152229309082

Token 477: ' inférieur' (ID: 191498)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8797415494918823
    2. '>' → logprob: -1.3797415494918823
    3. 'in' → logprob: -1.6297415494918823
    4. '2' → logprob: -2.629741668701172
    5. '1' → logprob: -3.754741668701172
    6. ' in' → logprob: -3.879741668701172
    7. ' >=' → logprob: -4.504741668701172
    8. ' >' → logprob: -5.379741668701172
    9. 'greater' → logprob: -6.379741668701172
    10. 'not' → logprob: -6.504741668701172

Token 478: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18922102451324463
    2. '(' → logprob: -2.939220905303955
    3. '555' → logprob: -3.189220905303955
    4. ' to' → logprob: -4.189220905303955
    5. 'to' → logprob: -4.439220905303955
    6. ' i' → logprob: -4.689220905303955
    7. 'max' → logprob: -5.064220905303955
    8. ' ' → logprob: -5.189220905303955
    9. 'i' → logprob: -5.189220905303955
    10. '0' → logprob: -5.814220905303955

Token 479: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4300328195095062
    2. '555' → logprob: -1.3050328493118286
    3. 'max' → logprob: -3.555032730102539
    4. ' ' → logprob: -4.430032730102539
    5. '0' → logprob: -4.555032730102539
    6. '556' → logprob: -5.055032730102539
    7. 'i' → logprob: -5.305032730102539
    8. '100' → logprob: -5.430032730102539
    9. ' max' → logprob: -5.805032730102539
    10. '1' → logprob: -7.180032730102539

Token 480: ' à' (ID: 1221)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '555' → logprob: -0.0033303992822766304
    2. ' ' → logprob: -5.878330230712891
    3. 'max' → logprob: -8.50333023071289
    4. ' max' → logprob: -9.37833023071289
    5. 'to' → logprob: -9.62833023071289
    6. ' to' → logprob: -10.50333023071289
    7. '5' → logprob: -10.62833023071289
    8. '556' → logprob: -11.12833023071289
    9. '=' → logprob: -11.50333023071289
    10. '  ' → logprob: -11.62833023071289

Token 481: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.0004659425176214427
    2. 'max' → logprob: -8.000466346740723
    3. '0' → logprob: -10.750466346740723
    4. 'n' → logprob: -10.875466346740723
    5. ' ' → logprob: -10.875466346740723
    6. '1' → logprob: -11.250466346740723
    7. '5' → logprob: -11.750466346740723
    8. 'i' → logprob: -11.875466346740723
    9. '550' → logprob: -12.312966346740723
    10. '55' → logprob: -12.437966346740723

Token 482: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.00015860427811276168
    2. 'max' → logprob: -9.125158309936523
    3. '0' → logprob: -12.125158309936523
    4. ' ' → logprob: -12.250158309936523
    5. '550' → logprob: -12.250158309936523
    6. '10' → logprob: -12.375158309936523
    7. 'n' → logprob: -12.375158309936523
    8. '1' → logprob: -12.500158309936523
    9. 'i' → logprob: -12.625158309936523
    10. '100' → logprob: -12.937658309936523

Token 483: '55' (ID: 3152)
  Prédit: '55'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -0.1686813086271286
    2. '5' → logprob: -1.918681263923645
    3. 'i' → logprob: -6.1686811447143555
    4. '56' → logprob: -6.5436811447143555
    5. '50' → logprob: -6.7936811447143555
    6. '35' → logprob: -7.4186811447143555
    7. ' ' → logprob: -7.4186811447143555
    8. '555' → logprob: -7.5436811447143555
    9. '0' → logprob: -7.9186811447143555
    10. '66' → logprob: -8.168681144714355

Token 484: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03494562208652496
    2. ' while' → logprob: -3.4099457263946533
    3. 'and' → logprob: -7.034945487976074
    4. ' and' → logprob: -8.034945487976074
    5. ':
' → logprob: -9.534945487976074
    6. '
' → logprob: -11.534945487976074
    7. ':' → logprob: -12.159945487976074
    8. '```' → logprob: -13.284945487976074
    9. ' :
' → logprob: -13.534945487976074
    10. 'wh' → logprob: -14.034945487976074

Token 485: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4899235963821411
    2. ' while' → logprob: -0.9899235963821411
    3. ' and' → logprob: -4.739923477172852
    4. 'and' → logprob: -4.989923477172852
    5. ' i' → logprob: -9.239923477172852
    6. ':
' → logprob: -10.864923477172852
    7. ':' → logprob: -11.114923477172852
    8. '```' → logprob: -11.489923477172852
    9. ',' → logprob: -11.739923477172852
    10. 'i' → logprob: -12.364923477172852

Token 486: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0398872010409832
    2. ' i' → logprob: -3.6648871898651123
    3. 'len' → logprob: -4.414887428283691
    4. ' ans' → logprob: -7.664887428283691
    5. 'i' → logprob: -7.789887428283691
    6. '(len' → logprob: -8.039887428283691
    7. ' ' → logprob: -10.039887428283691
    8. ' ' → logprob: -10.289887428283691
    9. ' n' → logprob: -10.664887428283691
    10. 'ans' → logprob: -10.789887428283691

Token 487: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.8624639324116288e-06
    2. ' (' → logprob: -13.875001907348633
    3. '(' → logprob: -14.125001907348633
    4. 'ans' → logprob: -16.750001907348633
    5. '	ans' → logprob: -18.125001907348633
    6. '(an' → logprob: -18.625001907348633
    7. '(answer' → logprob: -18.875001907348633
    8. '(ps' → logprob: -19.750001907348633
    9. ' ans' → logprob: -20.500001907348633
    10. '(
' → logprob: -20.875001907348633

Token 488: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012719537131488323
    2. ')<' → logprob: -4.762719631195068
    3. '<' → logprob: -5.512719631195068
    4. ' )' → logprob: -10.51271915435791
    5. ' <' → logprob: -11.01271915435791
    6. '()<' → logprob: -11.76271915435791
    7. '()' → logprob: -13.26271915435791
    8. '<n' → logprob: -13.38771915435791
    9. '```' → logprob: -13.51271915435791
    10. '[' → logprob: -13.88771915435791

Token 489: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6327794194221497
    2. ' <' → logprob: -0.7577794194221497
    3. '<n' → logprob: -9.007779121398926
    4. ' ' → logprob: -10.757779121398926
    5. ' <
' → logprob: -11.632779121398926
    6. '()<' → logprob: -12.257779121398926
    7. ' <=' → logprob: -12.382779121398926
    8. '<=' → logprob: -12.757779121398926
    9. 'and' → logprob: -12.882779121398926
    10. ' and' → logprob: -12.882779121398926

Token 490: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005234475247561932
    2. ' n' → logprob: -5.255234241485596
    3. '	n' → logprob: -15.380234718322754
    4. 'i' → logprob: -15.505234718322754
    5. ' ' → logprob: -15.880234718322754
    6. '555' → logprob: -17.255233764648438
    7. ' ' → logprob: -17.505233764648438
    8. '(n' → logprob: -17.755233764648438
    9. '55' → logprob: -18.380233764648438
    10. 'ps' → logprob: -18.505233764648438

Token 491: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009763410314917564
    2. 'and' → logprob: -4.634763240814209
    3. ':' → logprob: -12.259763717651367
    4. ' or' → logprob: -14.009763717651367
    5. ' ' → logprob: -14.384763717651367
    6. ':
' → logprob: -15.009763717651367
    7. '   ' → logprob: -15.384763717651367
    8. '>' → logprob: -16.009763717651367
    9. ' :' → logprob: -16.009763717651367
    10. '	and' → logprob: -16.759763717651367

Token 492: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06200141832232475
    2. ' i' → logprob: -2.8120014667510986
    3. '   ' → logprob: -11.43700122833252
    4. ' ' → logprob: -11.43700122833252
    5. '1' → logprob: -13.31200122833252
    6. '  ' → logprob: -13.31200122833252
    7. ' ' → logprob: -13.56200122833252
    8. 'ps' → logprob: -13.68700122833252
    9. ' ps' → logprob: -13.93700122833252
    10. '	i' → logprob: -14.06200122833252

Token 493: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2764757573604584
    2. '>=' → logprob: -2.026475667953491
    3. ' <=' → logprob: -2.401475667953491
    4. '<=' → logprob: -4.15147590637207
    5. ' >' → logprob: -6.27647590637207
    6. '>' → logprob: -6.52647590637207
    7. ' in' → logprob: -10.52647590637207
    8. ' ' → logprob: -10.52647590637207
    9. 'in' → logprob: -12.27647590637207
    10. '[' → logprob: -13.15147590637207

Token 494: ' ' (ID: 220)
  Prédit: '555'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.01110182423144579
    2. ' ' → logprob: -4.511101722717285
    3. 'max' → logprob: -11.136101722717285
    4. '556' → logprob: -12.511101722717285
    5. '5' → logprob: -12.761101722717285
    6. '545' → logprob: -12.761101722717285
    7. '0' → logprob: -12.761101722717285
    8. '557' → logprob: -13.011101722717285
    9. '551' → logprob: -13.073601722717285
    10. ' max' → logprob: -13.198601722717285

Token 495: '555' (ID: 22275)
  Prédit: '555'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '555' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -9.000144958496094
    3. 'max' → logprob: -12.187644958496094
    4. 'i' → logprob: -13.000144958496094
    5. '5' → logprob: -13.625144958496094
    6. '0' → logprob: -13.750144958496094
    7. '545' → logprob: -13.812644958496094
    8. '655' → logprob: -13.875144958496094
    9. '55' → logprob: -13.937644958496094
    10. '1' → logprob: -14.187644958496094

Token 496: '55' (ID: 3152)
  Prédit: '55'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '55' → logprob: -0.006053224205970764
    2. '56' → logprob: -5.256053447723389
    3. '5' → logprob: -7.131053447723389
    4. '555' → logprob: -11.25605297088623
    5. '54' → logprob: -14.25605297088623
    6. '53' → logprob: -14.31855297088623
    7. '35' → logprob: -14.31855297088623
    8. '556' → logprob: -14.38105297088623
    9. '```' → logprob: -14.50605297088623
    10. ' ' → logprob: -14.63105297088623

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01003407221287489
    2. ':
' → logprob: -4.885034084320068
    3. ' and' → logprob: -6.635034084320068
    4. ' :' → logprob: -7.135034084320068
    5. '   ' → logprob: -8.88503360748291
    6. 'and' → logprob: -9.13503360748291
    7. '):' → logprob: -10.38503360748291
    8. ' :
' → logprob: -11.01003360748291
    9. '):
' → logprob: -12.51003360748291
    10. ',' → logprob: -12.63503360748291

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1843041628599167
    2. ':' → logprob: -1.809304118156433
    3. ':
' → logprob: -5.684304237365723
    4. ' if' → logprob: -7.559304237365723
    5. '):' → logprob: -8.934304237365723
    6. 'if' → logprob: -9.434304237365723
    7. ' and' → logprob: -9.684304237365723
    8. '.' → logprob: -9.684304237365723
    9. '<|end|>' → logprob: -9.809304237365723
    10. ' :' → logprob: -9.809304237365723

Token 499: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05725683644413948
    2. ' if' → logprob: -3.0572569370269775
    3. 'if' → logprob: -4.807256698608398
    4. ':' → logprob: -9.182256698608398
    5. ' ' → logprob: -9.307256698608398
    6. ' i' → logprob: -9.432256698608398
    7. 'i' → logprob: -10.057256698608398
    8. '	if' → logprob: -10.182256698608398
    9. '.' → logprob: -11.057256698608398
    10. '  ' → logprob: -11.432256698608398

Token 500: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10377754271030426
    2. 'ans' → logprob: -2.8537776470184326
    3. '   ' → logprob: -3.4787776470184326
    4. ' if' → logprob: -4.9787774085998535
    5. 'for' → logprob: -6.3537774085998535
    6. ' ans' → logprob: -7.4787774085998535
    7. 'i' → logprob: -7.6037774085998535
    8. '#' → logprob: -9.103777885437012
    9. ' ' → logprob: -10.603777885437012
    10. 'answer' → logprob: -10.728777885437012

Token 501: 'ifier' (ID: 4550)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5856720209121704
    2. ' if' → logprob: -1.2106720209121704
    3. 'if' → logprob: -2.710671901702881
    4. 'er' → logprob: -2.835671901702881
    5. '#' → logprob: -5.085671901702881
    6. '=' → logprob: -5.835671901702881
    7. ' ' → logprob: -6.210671901702881
    8. ' #' → logprob: -6.585671901702881
    9. ' =' → logprob: -6.960671901702881
    10. ' in' → logprob: -7.085671901702881

Token 502: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.346344530582428
    2. 'if' → logprob: -1.4713444709777832
    3. ' i' → logprob: -3.221344470977783
    4. ' si' → logprob: -4.221344470977783
    5. 'i' → logprob: -5.221344470977783
    6. '   ' → logprob: -6.096344470977783
    7. 'si' → logprob: -7.471344470977783
    8. ' ' → logprob: -9.471344947814941
    9. '(i' → logprob: -9.721344947814941
    10. ' s' → logprob: -10.096344947814941

Token 503: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012822289951145649
    2. ' i' → logprob: -4.387822151184082
    3. '(i' → logprob: -9.012822151184082
    4. 'is' → logprob: -10.512822151184082
    5. ' ' → logprob: -10.887822151184082
    6. 'len' → logprob: -11.012822151184082
    7. 'str' → logprob: -11.262822151184082
    8. ' (' → logprob: -11.262822151184082
    9. '   ' → logprob: -11.387822151184082
    10. 'sqrt' → logprob: -11.387822151184082

Token 504: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023501921445131302
    2. ' i' → logprob: -3.7735018730163574
    3. ' ' → logprob: -10.023502349853516
    4. 'len' → logprob: -10.273502349853516
    5. '(i' → logprob: -10.398502349853516
    6. 'str' → logprob: -10.898502349853516
    7. ' (' → logprob: -11.336002349853516
    8. 'ps' → logprob: -11.398502349853516
    9. '   ' → logprob: -11.398502349853516
    10. '1' → logprob: -11.898502349853516

Token 505: ' courant' (ID: 74694)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42113035917282104
    2. ' i' → logprob: -1.6711304187774658
    3. 'in' → logprob: -2.046130418777466
    4. 'i' → logprob: -3.796130418777466
    5. ' not' → logprob: -6.421130180358887
    6. '*i' → logprob: -7.421130180358887
    7. 'not' → logprob: -7.671130180358887
    8. ' ' → logprob: -7.796130180358887
    9. '-' → logprob: -8.421130180358887
    10. '[i' → logprob: -9.046130180358887

Token 506: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1542128324508667
    2. 'in' → logprob: -2.0292129516601562
    3. ' i' → logprob: -4.779212951660156
    4. 'i' → logprob: -6.779212951660156
    5. ' not' → logprob: -7.654212951660156
    6. ' ' → logprob: -7.904212951660156
    7. '%' → logprob: -8.154212951660156
    8. 'not' → logprob: -8.779212951660156
    9. '*i' → logprob: -8.904212951660156
    10. '*' → logprob: -9.154212951660156

Token 507: ' se' (ID: 458)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31583139300346375
    2. 'in' → logprob: -1.3158314228057861
    3. ' not' → logprob: -6.815831184387207
    4. 'not' → logprob: -7.690831184387207
    5. '%' → logprob: -8.565831184387207
    6. ' ' → logprob: -8.690831184387207
    7. '**' → logprob: -8.815831184387207
    8. '-' → logprob: -8.940831184387207
    9. '*' → logprob: -9.315831184387207
    10. ' i' → logprob: -9.440831184387207

Token 508: ' trouve' (ID: 30913)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026012875139713287
    2. 'in' → logprob: -4.276012897491455
    3. 'nt' → logprob: -5.401012897491455
    4. ' in' → logprob: -5.651012897491455
    5. ' trouve' → logprob: -7.276012897491455
    6. 'st' → logprob: -7.651012897491455
    7. 'r' → logprob: -8.276012420654297
    8. '#' → logprob: -8.276012420654297
    9. 'ts' → logprob: -8.526012420654297
    10. 'u' → logprob: -8.526012420654297

Token 509: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20933128893375397
    2. 'in' → logprob: -1.7093312740325928
    3. ' dans' → logprob: -5.584331512451172
    4. 'dans' → logprob: -5.584331512451172
    5. ' i' → logprob: -9.459331512451172
    6. 'not' → logprob: -9.459331512451172
    7. ' not' → logprob: -9.709331512451172
    8. ' en' → logprob: -9.834331512451172
    9. ' ' → logprob: -10.959331512451172
    10. 'pas' → logprob: -11.209331512451172

Token 510: ' l' (ID: 305)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.029770735651254654
    2. ' ps' → logprob: -3.529770851135254
    3. '	ps' → logprob: -11.529770851135254
    4. '(ps' → logprob: -11.779770851135254
    5. 's' → logprob: -13.654770851135254
    6. '_ps' → logprob: -14.279770851135254
    7. '.ps' → logprob: -15.029770851135254
    8. 'PS' → logprob: -15.904770851135254
    9. ' ' → logprob: -16.154769897460938
    10. 'p' → logprob: -16.529769897460938

Token 511: ''ensemble' (ID: 79341)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.038101162761449814
    2. ' ps' → logprob: -3.2881011962890625
    3. 's' → logprob: -10.038101196289062
    4. '(ps' → logprob: -12.288101196289062
    5. '	ps' → logprob: -12.913101196289062
    6. 'p' → logprob: -13.038101196289062
    7. 'ans' → logprob: -13.163101196289062
    8. '_ps' → logprob: -13.913101196289062
    9. '.ps' → logprob: -14.413101196289062
    10. ' ' → logprob: -14.663101196289062

Token 512: ' ps' (ID: 10942)
  Prédit: ' ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.29515406489372253
    2. 'ps' → logprob: -1.420154094696045
    3. '(ps' → logprob: -4.295154094696045
    4. '   ' → logprob: -9.545153617858887
    5. '	ps' → logprob: -9.920153617858887
    6. '_ps' → logprob: -10.670153617858887
    7. ' if' → logprob: -10.670153617858887
    8. ' (' → logprob: -11.295153617858887
    9. 'if' → logprob: -11.295153617858887
    10. '.ps' → logprob: -11.420153617858887

Token 513: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19882187247276306
    2. ':' → logprob: -1.8238219022750854
    3. '   ' → logprob: -4.573822021484375
    4. 'and' → logprob: -4.823822021484375
    5. ':
' → logprob: -8.448822021484375
    6. ' if' → logprob: -8.823822021484375
    7. ' or' → logprob: -9.448822021484375
    8. ' :' → logprob: -10.073822021484375
    9. '       ' → logprob: -10.573822021484375
    10. '    ' → logprob: -11.823822021484375

Token 514: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1027169227600098
    2. '   ' → logprob: -1.3527169227600098
    3. ' i' → logprob: -1.3527169227600098
    4. ' and' → logprob: -2.1027169227600098
    5. 'if' → logprob: -4.60271692276001
    6. 'i' → logprob: -5.35271692276001
    7. '       ' → logprob: -5.47771692276001
    8. 'and' → logprob: -5.60271692276001
    9. ' or' → logprob: -6.22771692276001
    10. '    ' → logprob: -6.72771692276001

Token 515: ''est' (ID: 6616)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2620314955711365
    2. 'and' → logprob: -2.1370315551757812
    3. ':' → logprob: -3.1370315551757812
    4. '   ' → logprob: -3.2620315551757812
    5. '       ' → logprob: -4.637031555175781
    6. ':
' → logprob: -5.012031555175781
    7. ' ' → logprob: -5.637031555175781
    8. '    ' → logprob: -6.137031555175781
    9. '=' → logprob: -6.137031555175781
    10. '#' → logprob: -6.887031555175781

Token 516: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.779422402381897
    2. 'True' → logprob: -1.029422402381897
    3. ' True' → logprob: -2.6544222831726074
    4. 'i' → logprob: -3.0294222831726074
    5. '   ' → logprob: -3.7794222831726074
    6. 'à' → logprob: -4.404422283172607
    7. '#' → logprob: -5.029422283172607
    8. ' i' → logprob: -5.404422283172607
    9. '-i' → logprob: -6.029422283172607
    10. '       ' → logprob: -6.529422283172607

Token 517: '-dire' (ID: 76064)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8443503379821777
    2. '#' → logprob: -1.4693503379821777
    3. '   ' → logprob: -1.7193503379821777
    4. 'i' → logprob: -3.0943503379821777
    5. '       ' → logprob: -3.9693503379821777
    6. 'à' → logprob: -4.094350337982178
    7. '-à' → logprob: -4.469350337982178
    8. 'int' → logprob: -4.594350337982178
    9. 'ps' → logprob: -4.719350337982178
    10. 'not' → logprob: -4.844350337982178

Token 518: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10270790755748749
    2. 'i' → logprob: -2.727707862854004
    3. '   ' → logprob: -3.727707862854004
    4. '(i' → logprob: -5.852707862854004
    5. ' ps' → logprob: -6.352707862854004
    6. 'ps' → logprob: -7.102707862854004
    7. ' if' → logprob: -7.102707862854004
    8. ' in' → logprob: -7.477707862854004
    9. ' not' → logprob: -8.477707862854004
    10. ' ' → logprob: -8.852707862854004

Token 519: ''il' (ID: 14683)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0801623985171318
    2. 'i' → logprob: -2.705162286758423
    3. '(i' → logprob: -4.705162525177002
    4. '   ' → logprob: -7.705162525177002
    5. ' ' → logprob: -8.580162048339844
    6. '  ' → logprob: -9.455162048339844
    7. 'ps' → logprob: -9.830162048339844
    8. '[i' → logprob: -10.205162048339844
    9. ' (' → logprob: -10.330162048339844
    10. '    ' → logprob: -10.330162048339844

Token 520: ' s' (ID: 265)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0831235721707344
    2. 'in' → logprob: -2.5831236839294434
    3. ' est' → logprob: -6.583123683929443
    4. '>=' → logprob: -7.083123683929443
    5. '%' → logprob: -7.708123683929443
    6. ' i' → logprob: -7.958123683929443
    7. 'i' → logprob: -8.083123207092285
    8. ' >=' → logprob: -8.333123207092285
    9. ' not' → logprob: -8.458123207092285
    10. ' is' → logprob: -8.958123207092285

Token 521: ''agit' (ID: 72975)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6139471530914307
    2. ' in' → logprob: -0.8639471530914307
    3. 'i' → logprob: -4.113946914672852
    4. 'est' → logprob: -4.488946914672852
    5. 'et' → logprob: -5.738946914672852
    6. 'ont' → logprob: -5.738946914672852
    7. '#' → logprob: -6.863946914672852
    8. 'e' → logprob: -7.613946914672852
    9. 'u' → logprob: -7.613946914672852
    10. ' ' → logprob: -8.738946914672852

Token 522: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11135546863079071
    2. 'de' → logprob: -2.4863555431365967
    3. 'in' → logprob: -4.986355304718018
    4. ' d' → logprob: -5.361355304718018
    5. ' of' → logprob: -5.736355304718018
    6. ' in' → logprob: -5.861355304718018
    7. '   ' → logprob: -6.111355304718018
    8. 'd' → logprob: -7.236355304718018
    9. ' ' → logprob: -7.736355304718018
    10. '  ' → logprob: -8.361355781555176

Token 523: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.09142428636550903
    2. 'un' → logprob: -2.4664242267608643
    3. ' un' → logprob: -6.216424465179443
    4. '1' → logprob: -8.466423988342285
    5. 'u' → logprob: -10.341423988342285
    6. '#' → logprob: -10.466423988342285
    7. ''' → logprob: -10.466423988342285
    8. '_un' → logprob: -10.466423988342285
    9. '’un' → logprob: -10.591423988342285
    10. 'i' → logprob: -10.716423988342285

Token 524: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5469716191291809
    2. 'prime' → logprob: -1.0469715595245361
    3. 'prem' → logprob: -2.796971559524536
    4. ' nombre' → logprob: -5.546971797943115
    5. '#' → logprob: -6.296971797943115
    6. ' prime' → logprob: -6.671971797943115
    7. ' premier' → logprob: -7.546971797943115
    8. 'print' → logprob: -8.046971321105957
    9. 'prim' → logprob: -8.421971321105957
    10. 'multiple' → logprob: -8.671971321105957

Token 525: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.07021595537662506
    2. ' premier' → logprob: -2.695215940475464
    3. '   ' → logprob: -8.570216178894043
    4. 'prime' → logprob: -10.195216178894043
    5. '#' → logprob: -11.820216178894043
    6. ' premiers' → logprob: -11.945216178894043
    7. 'prima' → logprob: -12.195216178894043
    8. 'pair' → logprob: -12.445216178894043
    9. 'Premier' → logprob: -12.445216178894043
    10. ' primo' → logprob: -12.570216178894043

Token 526: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.702515721321106
    2. '   ' → logprob: -0.952515721321106
    3. ':' → logprob: -2.8275156021118164
    4. 'and' → logprob: -2.8275156021118164
    5. ' if' → logprob: -8.077515602111816
    6. ':
' → logprob: -9.077515602111816
    7. 'if' → logprob: -9.577515602111816
    8. ' or' → logprob: -10.202515602111816
    9. ',' → logprob: -11.577515602111816
    10. '  ' → logprob: -12.077515602111816

Token 527: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5059300661087036
    2. '   ' → logprob: -1.2559300661087036
    3. ' and' → logprob: -2.255929946899414
    4. 'and' → logprob: -5.755929946899414
    5. ' if' → logprob: -6.005929946899414
    6. ':
' → logprob: -7.255929946899414
    7. 'if' → logprob: -8.005929946899414
    8. '       ' → logprob: -8.255929946899414
    9. ' :' → logprob: -8.505929946899414
    10. ' or' → logprob: -9.255929946899414

Token 528: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32753631472587585
    2. ' if' → logprob: -1.5775363445281982
    3. 'if' (adapté à ' if') → logprob: -2.8275363445281982
    4. ' and' → logprob: -4.702536106109619
    5. ':' → logprob: -5.827536106109619
    6. 'and' → logprob: -6.702536106109619
    7. ' in' → logprob: -9.452536582946777
    8. ' i' → logprob: -9.702536582946777
    9. 'in' → logprob: -10.327536582946777
    10. '.' → logprob: -10.452536582946777

Token 529: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6327292919158936
    2. ' i' → logprob: -0.7577292919158936
    3. '   ' → logprob: -9.257729530334473
    4. ' ' → logprob: -10.632729530334473
    5. ' ' → logprob: -12.757729530334473
    6. '	i' → logprob: -13.507729530334473
    7. '(i' → logprob: -13.632729530334473
    8. '  ' → logprob: -13.632729530334473
    9. 'ps' → logprob: -14.695229530334473
    10. '    ' → logprob: -15.070229530334473

Token 530: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2257412075996399
    2. 'in' → logprob: -1.6007411479949951
    3. ' not' → logprob: -9.225741386413574
    4. 'not' → logprob: -9.475741386413574
    5. ' ' → logprob: -9.725741386413574
    6. '   ' → logprob: -11.225741386413574
    7. '>' → logprob: -11.350741386413574
    8. '-' → logprob: -11.475741386413574
    9. '>=' → logprob: -11.475741386413574
    10. ')' → logprob: -12.100741386413574

Token 531: ' ps' (ID: 10942)
  Prédit: ' ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.3869103789329529
    2. 'ps' → logprob: -1.1369104385375977
    3. '(ps' → logprob: -10.886910438537598
    4. '	ps' → logprob: -11.261910438537598
    5. 's' → logprob: -12.386910438537598
    6. '.ps' → logprob: -13.761910438537598
    7. '_ps' → logprob: -13.761910438537598
    8. 'ans' → logprob: -15.136910438537598
    9. 'p' → logprob: -15.261910438537598
    10. ' ' → logprob: -15.511910438537598

Token 532: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18806564807891846
    2. ':
' → logprob: -2.313065528869629
    3. ' and' → logprob: -3.188065528869629
    4. '       ' → logprob: -3.563065528869629
    5. 'and' → logprob: -6.188065528869629
    6. '   ' → logprob: -7.313065528869629
    7. ' or' → logprob: -10.438065528869629
    8. '):
' → logprob: -10.438065528869629
    9. ':
' → logprob: -10.813065528869629
    10. '=' → logprob: -11.438065528869629

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02661818265914917
    2. ':' → logprob: -3.776618242263794
    3. '   ' → logprob: -6.401618003845215
    4. ' and' → logprob: -6.526618003845215
    5. 'and' → logprob: -8.901618003845215
    6. ':
' → logprob: -9.776618003845215
    7. 'ans' → logprob: -11.401618003845215
    8. ' ans' → logprob: -12.151618003845215
    9. '      ' → logprob: -12.401618003845215
    10. '           ' → logprob: -12.401618003845215

Token 534: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9062373042106628
    2. 'ans' → logprob: -1.1562373638153076
    3. ' ans' → logprob: -1.5312373638153076
    4. '   ' → logprob: -2.7812373638153076
    5. ' if' → logprob: -6.5312371253967285
    6. '	ans' → logprob: -7.1562371253967285
    7. 'if' → logprob: -7.6562371253967285
    8. '(ans' → logprob: -9.906237602233887
    9. ' ' → logprob: -10.156237602233887
    10. '           ' → logprob: -10.281237602233887

Token 535: ' Ajouter' (ID: 165754)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4986346662044525
    2. 'ans' → logprob: -0.9986346960067749
    3. '   ' → logprob: -3.7486345767974854
    4. '       ' → logprob: -7.9986348152160645
    5. '	ans' → logprob: -8.248634338378906
    6. '#' → logprob: -10.498634338378906
    7. '  ' → logprob: -11.373634338378906
    8. 'if' → logprob: -11.623634338378906
    9. ' if' → logprob: -11.748634338378906
    10. '    ' → logprob: -11.748634338378906

Token 536: ' ce' (ID: 2357)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6254938244819641
    2. 'i' → logprob: -1.0004937648773193
    3. ' ans' → logprob: -2.6254937648773193
    4. 'ans' → logprob: -3.8754937648773193
    5. '(ans' → logprob: -6.250494003295898
    6. '(i' → logprob: -6.500494003295898
    7. '   ' → logprob: -7.500494003295898
    8. ' ' → logprob: -10.125494003295898
    9. '	ans' → logprob: -10.750494003295898
    10. '[i' → logprob: -10.750494003295898

Token 537: ' nombre' (ID: 9733)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3517613708972931
    2. 'i' → logprob: -1.2267613410949707
    3. ' ans' → logprob: -6.476761341094971
    4. ' ' → logprob: -6.726761341094971
    5. ')' → logprob: -8.851761817932129
    6. ' )' → logprob: -8.851761817932129
    7. '   ' → logprob: -9.101761817932129
    8. '  ' → logprob: -10.226761817932129
    9. ' ' → logprob: -10.476761817932129
    10. 'ans' → logprob: -10.601761817932129

Token 538: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3740381002426147
    2. ' i' → logprob: -1.4990381002426147
    3. ' to' → logprob: -1.7490381002426147
    4. '(i' → logprob: -2.1240382194519043
    5. '   ' → logprob: -2.7490382194519043
    6. 'to' → logprob: -3.1240382194519043
    7. ' ans' → logprob: -3.1240382194519043
    8. '(ans' → logprob: -3.2490382194519043
    9. 'i' → logprob: -4.124038219451904
    10. '       ' → logprob: -5.124038219451904

Token 539: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.006716317031532526
    2. 'ans' → logprob: -5.006716251373291
    3. '(ans' → logprob: -14.50671672821045
    4. '	ans' → logprob: -14.75671672821045
    5. ' ' → logprob: -16.756715774536133
    6. '_ans' → logprob: -18.006715774536133
    7. ' la' → logprob: -19.256715774536133
    8. ' ' → logprob: -20.631715774536133
    9. ' a' → logprob: -21.006715774536133
    10. ' Ans' → logprob: -21.131715774536133

Token 540: ' liste' (ID: 31719)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47409892082214355
    2. 'ans' → logprob: -0.9740989208221436
    3. '(ans' → logprob: -11.349099159240723
    4. '	ans' → logprob: -11.974099159240723
    5. ' ' → logprob: -12.974099159240723
    6. '_ans' → logprob: -14.349099159240723
    7. 'answer' → logprob: -15.349099159240723
    8. '[]' → logprob: -16.099098205566406
    9. '[' → logprob: -16.099098205566406
    10. ' 
' → logprob: -16.349098205566406

Token 541: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0012533270055428147
    2. 'ans' → logprob: -7.001253128051758
    3. '(ans' → logprob: -8.001253128051758
    4. '	ans' → logprob: -12.251253128051758
    5. '   ' → logprob: -13.751253128051758
    6. ' ' → logprob: -14.626253128051758
    7. '_ans' → logprob: -15.001253128051758
    8. 'Ans' → logprob: -17.001253128051758
    9. ' Ans' → logprob: -17.876253128051758
    10. ' `' → logprob: -17.876253128051758

Token 542: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35725343227386475
    2. '.append' → logprob: -1.2322534322738647
    3. ' ans' → logprob: -5.607253551483154
    4. '.' → logprob: -6.357253551483154
    5. '           ' → logprob: -7.107253551483154
    6. '(ans' → logprob: -7.107253551483154
    7. '   ' → logprob: -7.482253551483154
    8. 'ans' → logprob: -7.857253551483154
    9. '
' → logprob: -7.982253551483154
    10. ' .' → logprob: -8.732253074645996

Token 543: ' ce' (ID: 2357)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.005916947033256292
    2. '       ' → logprob: -5.380917072296143
    3. 'ans' → logprob: -6.755917072296143
    4. '           ' → logprob: -10.130916595458984
    5. ' ' → logprob: -10.380916595458984
    6. '(ans' → logprob: -10.380916595458984
    7. '	ans' → logprob: -10.755916595458984
    8. '   ' → logprob: -12.130916595458984
    9. '_ans' → logprob: -14.130916595458984
    10. ' Ans' → logprob: -15.130916595458984

Token 544: ' qui' (ID: 2780)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.030109822750091553
    2. 'ans' → logprob: -4.155109882354736
    3. ' ' → logprob: -5.155109882354736
    4. ' ' → logprob: -5.280109882354736
    5. '.append' → logprob: -7.780109882354736
    6. '   ' → logprob: -7.780109882354736
    7. ' #' → logprob: -7.780109882354736
    8. '    ' → logprob: -7.905109882354736
    9. ' space' → logprob: -8.530109405517578
    10. '  ' → logprob: -8.655109405517578

Token 545: ' signifie' (ID: 81149)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3358660638332367
    2. '.append' → logprob: -1.710866093635559
    3. 'ans' → logprob: -2.4608659744262695
    4. '   ' → logprob: -5.3358659744262695
    5. ' .' → logprob: -5.3358659744262695
    6. '.' → logprob: -6.0858659744262695
    7. ' ' → logprob: -6.3358659744262695
    8. '           ' → logprob: -6.7108659744262695
    9. '	ans' → logprob: -6.7108659744262695
    10. '       ' → logprob: -6.9608659744262695

Token 546: ' que' (ID: 661)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.005977381486445665
    2. 'ans' → logprob: -5.130977153778076
    3. ' ' → logprob: -10.755977630615234
    4. '	ans' → logprob: -11.505977630615234
    5. '(ans' → logprob: -12.130977630615234
    6. '   ' → logprob: -12.255977630615234
    7. ' que' → logprob: -13.130977630615234
    8. ' ' → logprob: -13.130977630615234
    9. '_ans' → logprob: -14.255977630615234
    10. ' Ans' → logprob: -14.630977630615234

Token 547: ' ce' (ID: 2357)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5761481523513794
    2. ' ans' → logprob: -0.8261481523513794
    3. '	ans' → logprob: -9.32614803314209
    4. '   ' → logprob: -9.82614803314209
    5. ' ' → logprob: -9.82614803314209
    6. '(ans' → logprob: -12.07614803314209
    7. ' ' → logprob: -12.95114803314209
    8. '  ' → logprob: -13.20114803314209
    9. '_ans' → logprob: -14.20114803314209
    10. '   ' → logprob: -15.82614803314209

Token 548: ' nombre' (ID: 9733)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.41588258743286133
    2. ' nombre' → logprob: -1.5408825874328613
    3. ' n' → logprob: -3.0408825874328613
    4. 'ans' → logprob: -3.5408825874328613
    5. ' ' → logprob: -3.9158825874328613
    6. ' i' → logprob: -5.165882587432861
    7. 'nombre' → logprob: -5.290882587432861
    8. 'n' → logprob: -5.665882587432861
    9. ' ' → logprob: -5.665882587432861
    10. ' number' → logprob: -5.915882587432861

Token 549: ' premier' (ID: 15506)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4332001805305481
    2. ' ans' → logprob: -2.0582001209259033
    3. '.append' → logprob: -2.1832001209259033
    4. '.' → logprob: -3.4332001209259033
    5. ')' → logprob: -3.6832001209259033
    6. '   ' → logprob: -3.9332001209259033
    7. ' est' → logprob: -4.558200359344482
    8. '       ' → logprob: -5.308200359344482
    9. '_ans' → logprob: -5.933200359344482
    10. ' n' → logprob: -6.058200359344482

Token 550: ' fait' (ID: 7473)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7000197172164917
    2. 'ans' → logprob: -1.5750197172164917
    3. ' ans' → logprob: -1.5750197172164917
    4. ')' → logprob: -3.2000198364257812
    5. '   ' → logprob: -3.3250198364257812
    6. '.' → logprob: -5.575019836425781
    7. '	ans' → logprob: -5.950019836425781
    8. '       ' → logprob: -6.950019836425781
    9. ',' → logprob: -7.325019836425781
    10. '(ans' → logprob: -7.325019836425781

Token 551: ' partie' (ID: 22139)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.21516823768615723
    2. ' partie' → logprob: -1.7151682376861572
    3. ' part' → logprob: -4.715167999267578
    4. ' parti' → logprob: -6.465167999267578
    5. '_part' → logprob: -7.090167999267578
    6. 'parte' → logprob: -8.090167999267578
    7. 'ans' → logprob: -8.215167999267578
    8. ' parte' → logprob: -8.340167999267578
    9. 'office' → logprob: -8.840167999267578
    10. '	part' → logprob: -8.840167999267578

Token 552: ' des' (ID: 731)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0025911119300872087
    2. 'ans' → logprob: -6.377591133117676
    3. '(' → logprob: -7.377591133117676
    4. ' ans' → logprob: -9.127591133117676
    5. '   ' → logprob: -10.002591133117676
    6. ' de' → logprob: -10.002591133117676
    7. 'de' → logprob: -10.502591133117676
    8. '	ans' → logprob: -10.752591133117676
    9. 'd' → logprob: -13.002591133117676
    10. '_ans' → logprob: -13.502591133117676

Token 553: ' résultats' (ID: 48985)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.008675788529217243
    2. 'ans' → logprob: -4.758675575256348
    3. '	ans' → logprob: -10.383675575256348
    4. ' ' → logprob: -12.008675575256348
    5. ' answers' → logprob: -12.008675575256348
    6. '(ans' → logprob: -12.258675575256348
    7. ' ' → logprob: -12.383675575256348
    8. ' primes' → logprob: -13.008675575256348
    9. ' premiers' → logprob: -13.383675575256348
    10. '_ans' → logprob: -13.383675575256348

Token 554: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0945984348654747
    2. '   ' → logprob: -3.2195985317230225
    3. '.append' → logprob: -3.5945985317230225
    4. ' ans' → logprob: -4.469598293304443
    5. 'ans' → logprob: -5.719598293304443
    6. '(ans' → logprob: -5.969598293304443
    7. '.' → logprob: -6.344598293304443
    8. '           ' → logprob: -6.344598293304443
    9. '
' → logprob: -6.719598293304443
    10. '	ans' → logprob: -8.094598770141602

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008357125334441662
    2. ' ans' → logprob: -5.008357048034668
    3. '   ' → logprob: -7.258357048034668
    4. '(ans' → logprob: -8.133357048034668
    5. 'ans' → logprob: -8.133357048034668
    6. '           ' → logprob: -8.883357048034668
    7. '```' → logprob: -9.633357048034668
    8. '.' → logprob: -10.258357048034668
    9. '	ans' → logprob: -10.258357048034668
    10. '.append' → logprob: -11.008357048034668

Token 556: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.36363276839256287
    2. 'ans' (adapté à ' ans') → logprob: -1.2386327981948853
    3. '   ' → logprob: -4.238632678985596
    4. '	ans' → logprob: -7.488632678985596
    5. '(ans' → logprob: -9.988633155822754
    6. '       ' → logprob: -10.363633155822754
    7. '_ans' → logprob: -12.988633155822754
    8. '  ' → logprob: -13.738633155822754
    9. 'anst' → logprob: -14.113633155822754
    10. ' ' → logprob: -14.113633155822754

Token 557: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004309076175559312
    2. '.' → logprob: -7.750431060791016
    3. '.add' → logprob: -16.375431060791016
    4. '.insert' → logprob: -17.250431060791016
    5. '.Append' → logprob: -17.375431060791016
    6. 'append' → logprob: -17.875431060791016
    7. '.push' → logprob: -18.000431060791016
    8. '.extend' → logprob: -18.750431060791016
    9. '.app' → logprob: -19.250431060791016
    10. ' .' → logprob: -19.500431060791016

Token 558: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0001584850688232109
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -18.375158309936523
    4. '((' → logprob: -20.000158309936523
    5. '()' → logprob: -20.250158309936523
    6. ' (' → logprob: -21.000158309936523
    7. '(I' → logprob: -21.000158309936523
    8. '(s' → logprob: -21.625158309936523
    9. '(ii' → logprob: -21.750158309936523
    10. '(n' → logprob: -22.000158309936523

Token 559: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023846338444855064
    2. ' )' → logprob: -8.375238418579102
    3. '+' → logprob: -12.625238418579102
    4. ')
' → logprob: -12.750238418579102
    5. '   ' → logprob: -14.125238418579102
    6. '-' → logprob: -15.750238418579102
    7. ')#' → logprob: -15.875238418579102
    8. ')i' → logprob: -16.0002384185791
    9. ' +' → logprob: -16.1252384185791
    10. '+)' → logprob: -17.1252384185791

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.277553620748222e-05
    2. 'i' → logprob: -9.750062942504883
    3. ' i' → logprob: -12.500062942504883
    4. '    
' → logprob: -15.000062942504883
    5. '  ' → logprob: -16.375062942504883
    6. '[i' → logprob: -16.625062942504883
    7. '	i' → logprob: -16.750062942504883
    8. '       ' → logprob: -16.875062942504883
    9. '#' → logprob: -17.000062942504883
    10. ',' → logprob: -17.375062942504883

Token 561: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.387494295835495
    2. 'i' → logprob: -1.1374943256378174
    3. ' i' → logprob: -7.387494087219238
    4. '	i' → logprob: -13.137494087219238
    5. '-' → logprob: -13.887494087219238
    6. '  ' → logprob: -15.137494087219238
    7. '```' → logprob: -15.137494087219238
    8. ' ' → logprob: -15.887494087219238
    9. '    
' → logprob: -16.137495040893555
    10. '       ' → logprob: -16.262495040893555

Token 562: ' Dé' (ID: 27247)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4849443838757e-06
    2. ' i' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.125004768371582
    4. '-' → logprob: -18.000003814697266
    5. '	i' → logprob: -18.250003814697266
    6. '  ' → logprob: -19.875003814697266
    7. ' ' → logprob: -20.625003814697266
    8. '```' → logprob: -20.750003814697266
    9. '#' → logprob: -20.875003814697266
    10. '_i' → logprob: -21.125003814697266

Token 563: 'cr' (ID: 798)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.795811653137207
    2. 'l' → logprob: -1.295811653137207
    3. 'crement' → logprob: -1.795811653137207
    4. 'cre' → logprob: -3.670811653137207
    5. ' i' → logprob: -3.670811653137207
    6. 'cr' → logprob: -3.795811653137207
    7. 'crease' → logprob: -3.920811653137207
    8. 'c' → logprob: -4.545811653137207
    9. 'f' → logprob: -6.670811653137207
    10. '	i' → logprob: -6.920811653137207

Token 564: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.9180852174758911
    2. 'i' → logprob: -1.1680852174758911
    3. 'ement' → logprob: -1.5430852174758911
    4. 'rement' → logprob: -2.6680850982666016
    5. 'ment' → logprob: -5.918085098266602
    6. 'r' → logprob: -6.418085098266602
    7. ' i' → logprob: -7.418085098266602
    8. 'e' → logprob: -7.793085098266602
    9. 'crement' → logprob: -8.043085098266602
    10. 'é' → logprob: -8.668085098266602

Token 565: 'er' (ID: 259)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22909551858901978
    2. 'e' → logprob: -2.229095458984375
    3. 'er' → logprob: -2.854095458984375
    4. ' e' → logprob: -3.729095458984375
    5. 'i' → logprob: -4.729095458984375
    6. ' ' → logprob: -5.854095458984375
    7. '(i' → logprob: -6.604095458984375
    8. '   ' → logprob: -6.729095458984375
    9. '  ' → logprob: -8.354095458984375
    10. ' (' → logprob: -9.229095458984375

Token 566: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31328749656677246
    2. ' i' → logprob: -1.3132874965667725
    3. '	i' → logprob: -11.563287734985352
    4. '(i' → logprob: -11.688287734985352
    5. ' ' → logprob: -12.438287734985352
    6. '   ' → logprob: -13.188287734985352
    7. '<|end|>' → logprob: -14.438287734985352
    8. ')' → logprob: -15.188287734985352
    9. '  ' → logprob: -15.438287734985352
    10. ')i' → logprob: -16.06328773498535

Token 567: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001502598519437015
    2. ' i' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.001502990722656
    4. '	i' → logprob: -16.501502990722656
    5. '<|end|>' → logprob: -17.376502990722656
    6. ')i' → logprob: -18.376502990722656
    7. '*i' → logprob: -18.876502990722656
    8. '.i' → logprob: -19.001502990722656
    9. ')' → logprob: -19.126502990722656
    10. 'I' → logprob: -19.251502990722656

Token 568: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0801406130194664
    2. ' i' → logprob: -2.5801405906677246
    3. '(i' → logprob: -6.705140590667725
    4. '(' → logprob: -11.455141067504883
    5. '	i' → logprob: -11.705141067504883
    6. ' ' → logprob: -12.955141067504883
    7. '   ' → logprob: -13.205141067504883
    8. '  ' → logprob: -14.705141067504883
    9. ' of' → logprob: -14.830141067504883
    10. '[i' → logprob: -15.080141067504883

Token 569: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023246755823493004
    2. ' i' → logprob: -3.7732467651367188
    3. '	i' → logprob: -13.648246765136719
    4. ' ' → logprob: -15.648246765136719
    5. '<|end|>' → logprob: -18.39824676513672
    6. ' ' → logprob: -18.89824676513672
    7. '   ' → logprob: -18.89824676513672
    8. '  ' → logprob: -19.14824676513672
    9. '(i' → logprob: -19.14824676513672
    10. ''i' → logprob: -19.64824676513672

Token 570: ' de' (ID: 334)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5115402340888977
    2. '-' → logprob: -1.011540174484253
    3. 'i' → logprob: -3.511540174484253
    4. ' -=' → logprob: -5.261540412902832
    5. '=' → logprob: -7.011540412902832
    6. ' i' → logprob: -7.386540412902832
    7. '-i' → logprob: -9.011540412902832
    8. '   ' → logprob: -10.261540412902832
    9. ' -' → logprob: -10.636540412902832
    10. '=i' → logprob: -11.261540412902832

Token 571: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.756715774536133
    4. '```' → logprob: -18.256715774536133
    5. ' one' → logprob: -19.381715774536133
    6. '.' → logprob: -19.631715774536133
    7. '2' → logprob: -19.756715774536133
    8. '<|end|>' → logprob: -20.381715774536133
    9. '-' → logprob: -20.631715774536133
    10. ' -' → logprob: -20.756715774536133

Token 572: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -19.875019073486328
    4. '```' → logprob: -21.375019073486328
    5. '<|end|>' → logprob: -21.500019073486328
    6. '.' → logprob: -22.375019073486328
    7. ' ' → logprob: -22.625019073486328
    8. '   ' → logprob: -22.750019073486328
    9. '-' → logprob: -23.000019073486328
    10. '  ' → logprob: -23.125019073486328

Token 573: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1902787834405899
    2. 'i' → logprob: -3.1902787685394287
    3. ' -=' → logprob: -3.1902787685394287
    4. ' i' → logprob: -3.3152787685394287
    5. ' -' → logprob: -3.8152787685394287
    6. '   ' → logprob: -4.190279006958008
    7. '<|end|>' → logprob: -4.690279006958008
    8. '-i' → logprob: -5.690279006958008
    9. '-=' → logprob: -5.815279006958008
    10. ' ' → logprob: -7.565279006958008

Token 574: ' pour' (ID: 1930)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5769376754760742
    2. ' i' → logprob: -0.8269376754760742
    3. '   ' → logprob: -7.201937675476074
    4. ' 
' → logprob: -9.326937675476074
    5. '25' → logprob: -10.076937675476074
    6. ' ' → logprob: -10.076937675476074
    7. '    
' → logprob: -10.326937675476074
    8. '<|end|>' → logprob: -11.701937675476074
    9. '	i' → logprob: -11.951937675476074
    10. ' -=' → logprob: -12.076937675476074

Token 575: ' passer' (ID: 27727)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023549193516373634
    2. 'i' → logprob: -4.2735490798950195
    3. ' ' → logprob: -5.2735490798950195
    4. ' -=' → logprob: -6.3985490798950195
    5. '25' → logprob: -6.7735490798950195
    6. '-' → logprob: -7.5235490798950195
    7. ' -' → logprob: -8.02354907989502
    8. ')' → logprob: -8.52354907989502
    9. '   ' → logprob: -9.64854907989502
    10. ' +=' → logprob: -10.52354907989502

Token 576: ' au' (ID: 2791)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42057180404663086
    2. 'i' → logprob: -1.1705718040466309
    3. '=' → logprob: -4.420571804046631
    4. '25' → logprob: -4.670571804046631
    5. '-' → logprob: -5.920571804046631
    6. ' ' → logprob: -6.295571804046631
    7. ' -=' → logprob: -6.420571804046631
    8. '(i' → logprob: -6.420571804046631
    9. '   ' → logprob: -6.920571804046631
    10. '=i' → logprob: -7.545571804046631

Token 577: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017112689092755318
    2. ' i' → logprob: -4.267112731933594
    3. 'next' → logprob: -7.017112731933594
    4. ' prochain' → logprob: -7.142112731933594
    5. ' next' → logprob: -7.392112731933594
    6. '25' → logprob: -8.642112731933594
    7. ' ' → logprob: -9.017112731933594
    8. 'pro' → logprob: -9.767112731933594
    9. 'previous' → logprob: -9.892112731933594
    10. '```' → logprob: -9.892112731933594

Token 578: ' précédent' (ID: 128462)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8016861081123352
    2. ' -' → logprob: -0.9266861081123352
    3. ' i' → logprob: -2.9266860485076904
    4. '25' → logprob: -2.9266860485076904
    5. ' -=' → logprob: -3.5516860485076904
    6. 'i' → logprob: -4.6766862869262695
    7. ' ' → logprob: -5.5516862869262695
    8. '-=' → logprob: -5.9266862869262695
    9. '<|end|>' → logprob: -7.1766862869262695
    10. '=' → logprob: -7.1766862869262695

Token 579: ' à' (ID: 1221)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9012387990951538
    2. 'i' → logprob: -1.1512387990951538
    3. ' -=' → logprob: -1.9012387990951538
    4. '-' → logprob: -2.1512389183044434
    5. ' -' → logprob: -5.651238918304443
    6. '-=' → logprob: -5.776238918304443
    7. '   ' → logprob: -6.276238918304443
    8. '-i' → logprob: -6.651238918304443
    9. ' ' → logprob: -6.901238918304443
    10. '<|end|>' → logprob: -7.401238918304443

Token 580: ' examiner' (ID: 115931)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7342681884765625
    2. ' ' → logprob: -1.1092681884765625
    3. '25' → logprob: -2.1092681884765625
    4. ' i' → logprob: -2.8592681884765625
    5. '-' → logprob: -6.6092681884765625
    6. ')' → logprob: -6.6092681884765625
    7. ' -' → logprob: -7.1092681884765625
    8. '1' → logprob: -7.3592681884765625
    9. '<|end|>' → logprob: -7.4842681884765625
    10. '  ' → logprob: -7.6092681884765625

Token 581: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1002296432852745
    2. ' i' → logprob: -2.4752297401428223
    3. '-' → logprob: -5.100229740142822
    4. ' -=' → logprob: -6.100229740142822
    5. '   ' → logprob: -7.225229740142822
    6. '-=' → logprob: -7.475229740142822
    7. '<|end|>' → logprob: -7.725229740142822
    8. '=' → logprob: -7.725229740142822
    9. '-i' → logprob: -8.475229263305664
    10. '
' → logprob: -9.225229263305664

Token 582: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029833100736141205
    2. ' i' → logprob: -3.5298330783843994
    3. '   ' → logprob: -10.40483283996582
    4. '=' → logprob: -11.27983283996582
    5. '	i' → logprob: -11.65483283996582
    6. ' -=' → logprob: -11.77983283996582
    7. '=i' → logprob: -12.02983283996582
    8. ' =' → logprob: -12.40483283996582
    9. '-' → logprob: -12.65483283996582
    10. ' ' → logprob: -12.90483283996582

Token 583: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0019523027585819364
    2. ' i' → logprob: -6.251952171325684
    3. '   ' → logprob: -11.126952171325684
    4. ' 
' → logprob: -12.501952171325684
    5. '<|end|>' → logprob: -13.251952171325684
    6. ' ' → logprob: -13.876952171325684
    7. '-' → logprob: -14.501952171325684
    8. '=' → logprob: -14.751952171325684
    9. '    
' → logprob: -14.751952171325684
    10. '	i' → logprob: -15.126952171325684

Token 584: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.014813347719609737
    2. '-=' → logprob: -4.389813423156738
    3. '-' → logprob: -6.389813423156738
    4. ' -' → logprob: -7.389813423156738
    5. '=' → logprob: -13.389813423156738
    6. ' +=' → logprob: -13.764813423156738
    7. ' =' → logprob: -13.764813423156738
    8. '<|end|>' → logprob: -14.139813423156738
    9. ' ' → logprob: -14.514813423156738
    10. ' ' → logprob: -16.389812469482422

Token 585: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '1' → logprob: -15.376502990722656
    4. '24' → logprob: -16.126502990722656
    5. '2' → logprob: -16.251502990722656
    6. '26' → logprob: -17.251502990722656
    7. '	' → logprob: -17.876502990722656
    8. '```' → logprob: -17.876502990722656
    9. ' ' → logprob: -18.376502990722656
    10. '   ' → logprob: -18.501502990722656

Token 586: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -16.375003814697266
    4. '2' → logprob: -16.625003814697266
    5. '24' → logprob: -18.375003814697266
    6. '२५' → logprob: -18.375003814697266
    7. '26' → logprob: -18.750003814697266
    8. '5' → logprob: -19.750003814697266
    9. '20' → logprob: -20.125003814697266
    10. '025' → logprob: -20.187503814697266

Token 587: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06657382845878601
    2. 'for' → logprob: -3.4415738582611084
    3. '#' → logprob: -3.6915738582611084
    4. '<|end|>' → logprob: -5.066573619842529
    5. '```' → logprob: -8.191574096679688
    6. 'if' → logprob: -8.441574096679688
    7. ')' → logprob: -8.691574096679688
    8. 'while' → logprob: -8.691574096679688
    9. '#print' → logprob: -8.816574096679688
    10. ' for' → logprob: -9.941574096679688

Token 588: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02333131432533264
    2. 'for' → logprob: -4.523331165313721
    3. 'ans' → logprob: -5.023331165313721
    4. '#' → logprob: -5.273331165313721
    5. 'while' → logprob: -7.773331165313721
    6. '#print' → logprob: -9.773331642150879
    7. 'i' → logprob: -11.273331642150879
    8. 'answer' → logprob: -13.398331642150879
    9. '```' → logprob: -13.648331642150879
    10. '
' → logprob: -13.648331642150879

Token 589: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.475362628698349
    2. 'for' → logprob: -0.9753626585006714
    3. 'ans' → logprob: -6.725362777709961
    4. '#' → logprob: -9.975362777709961
    5. '#print' → logprob: -11.600362777709961
    6. 'pr' → logprob: -12.100362777709961
    7. 'prin' → logprob: -12.100362777709961
    8. ' for' → logprob: -12.100362777709961
    9. ' print' → logprob: -13.475362777709961
    10. 'answer' → logprob: -13.475362777709961

Token 590: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.021264417096972466
    2. '#' → logprob: -4.021264553070068
    3. 'cher' → logprob: -5.896264553070068
    4. '```' → logprob: -9.64626407623291
    5. 'ichage' → logprob: -9.89626407623291
    6. '

' → logprob: -9.89626407623291
    7. 'f' → logprob: -10.14626407623291
    8. '   ' → logprob: -10.14626407623291
    9. 'ich' → logprob: -10.52126407623291
    10. 'iche' → logprob: -10.89626407623291

Token 591: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.06616630405187607
    2. 'ans' → logprob: -2.816166400909424
    3. '(*' → logprob: -5.566166400909424
    4. 'print' → logprob: -9.066165924072266
    5. '(' → logprob: -9.066165924072266
    6. '(len' → logprob: -9.816165924072266
    7. '(sorted' → logprob: -10.316165924072266
    8. 'sorted' → logprob: -10.816165924072266
    9. ' ans' → logprob: -11.691165924072266
    10. 'len' → logprob: -11.941165924072266

Token 592: ' contenu' (ID: 57581)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009454659186303616
    2. 'print' → logprob: -4.884454727172852
    3. ' ans' → logprob: -6.634454727172852
    4. 'for' → logprob: -8.259454727172852
    5. '(ans' → logprob: -8.634454727172852
    6. 'len' → logprob: -10.134454727172852
    7. ' for' → logprob: -11.634454727172852
    8. 's' → logprob: -11.884454727172852
    9. ' print' → logprob: -12.009454727172852
    10. '	ans' → logprob: -12.634454727172852

Token 593: ' de' (ID: 334)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.07209697365760803
    2. 'print' → logprob: -3.072097063064575
    3. 'ans' → logprob: -4.197096824645996
    4. '(' → logprob: -4.822096824645996
    5. '(print' → logprob: -9.447096824645996
    6. 's' → logprob: -10.947096824645996
    7. 'd' → logprob: -11.447096824645996
    8. '(len' → logprob: -12.072096824645996
    9. 'for' → logprob: -12.197096824645996
    10. '(
' → logprob: -12.447096824645996

Token 594: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.029904725030064583
    2. ' ans' → logprob: -3.529904842376709
    3. '(ans' → logprob: -8.77990436553955
    4. 'print' → logprob: -15.52990436553955
    5. '	ans' → logprob: -15.77990436553955
    6. '_ans' → logprob: -17.529905319213867
    7. 'ANS' → logprob: -18.279905319213867
    8. 'ann' → logprob: -18.279905319213867
    9. ' ' → logprob: -18.404905319213867
    10. 'anst' → logprob: -18.529905319213867

Token 595: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00013119110371917486
    2. ' ans' → logprob: -9.375131607055664
    3. '(ans' → logprob: -10.125131607055664
    4. 'print' → logprob: -12.000131607055664
    5. '	ans' → logprob: -17.125131607055664
    6. 'answer' → logprob: -17.125131607055664
    7. 'ann' → logprob: -18.125131607055664
    8. 'list' → logprob: -18.125131607055664
    9. 'len' → logprob: -18.500131607055664
    10. 'sorted' → logprob: -18.500131607055664

Token 596: ' ans' (ID: 3345)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.7324193120002747
    2. 'print' → logprob: -1.2324192523956299
    3. 'ans' → logprob: -1.4824192523956299
    4. ' ans' → logprob: -7.482419490814209
    5. ' print' → logprob: -11.35741901397705
    6. '(print' → logprob: -12.23241901397705
    7. '(' → logprob: -13.85741901397705
    8. '_ans' → logprob: -14.48241901397705
    9. 'for' → logprob: -15.48241901397705
    10. '	ans' → logprob: -15.85741901397705

Token 597: ' sous' (ID: 14487)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'for' → logprob: -17.625
    3. ' print' → logprob: -17.75
    4. '```' → logprob: -18.25
    5. '
' → logprob: -18.75
    6. '[' → logprob: -22.375
    7. '(print' → logprob: -22.5
    8. '``' → logprob: -23.25
    9. '[]
' → logprob: -23.625
    10. '#print' → logprob: -23.75

Token 598: ' forme' (ID: 27450)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0172333717346191
    2. '[]' → logprob: -1.5172333717346191
    3. 'print' → logprob: -1.7672333717346191
    4. 'la' → logprob: -2.017233371734619
    5. 'forme' → logprob: -3.517233371734619
    6. '[' → logprob: -3.767233371734619
    7. 'form' → logprob: -3.892233371734619
    8. 'str' → logprob: -4.642233371734619
    9. 'le' → logprob: -5.267233371734619
    10. 'l' → logprob: -5.767233371734619

Token 599: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8133808374404907
    2. 'd' → logprob: -1.1883808374404907
    3. ' d' → logprob: -2.438380718231201
    4. '[]' → logprob: -2.813380718231201
    5. '[' → logprob: -3.563380718231201
    6. 'de' → logprob: -3.563380718231201
    7. ' de' → logprob: -3.938380718231201
    8. 'e' → logprob: -4.688380718231201
    9. '[str' → logprob: -4.813380718231201
    10. 'str' → logprob: -5.688380718231201

Token 600: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.028968889266252518
    2. 'une' → logprob: -4.153968811035156
    3. ''une' → logprob: -5.653968811035156
    4. '[]' → logprob: -5.778968811035156
    5. ''' → logprob: -6.528968811035156
    6. 'print' → logprob: -7.028968811035156
    7. ''un' → logprob: -7.403968811035156
    8. '   ' → logprob: -7.403968811035156
    9. ' print' → logprob: -7.653968811035156
    10. 'a' → logprob: -7.778968811035156

Token 601: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8262102007865906
    2. 'e' → logprob: -1.7012102603912354
    3. 'liste' → logprob: -2.4512102603912354
    4. ' single' → logprob: -2.8262102603912354
    5. 'print' → logprob: -2.9512102603912354
    6. ' print' → logprob: -3.2012102603912354
    7. ' espace' → logprob: -3.8262102603912354
    8. 'es' → logprob: -4.201210021972656
    9. ' string' → logprob: -4.451210021972656
    10. 'chaine' → logprob: -4.576210021972656

Token 602: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.38376277685165405
    2. 'p' → logprob: -1.6337628364562988
    3. 'par' → logprob: -2.383762836456299
    4. 'print' → logprob: -4.258762836456299
    5. 'pr' → logprob: -4.758762836456299
    6. 'rie' → logprob: -5.883762836456299
    7. 'paration' → logprob: -6.758762836456299
    8. 'pare' → logprob: -6.883762836456299
    9. 'pa' → logprob: -7.008762836456299
    10. 'r' → logprob: -7.008762836456299

Token 603: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011302133789286017
    2. 'for' → logprob: -6.876130104064941
    3. ' print' → logprob: -9.376130104064941
    4. ' for' → logprob: -12.251130104064941
    5. '[' → logprob: -12.751130104064941
    6. ',' → logprob: -12.751130104064941
    7. '*' → logprob: -13.501130104064941
    8. '
' → logprob: -15.751130104064941
    9. 'join' → logprob: -16.126131057739258
    10. '(print' → logprob: -16.251131057739258

Token 604: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7383254170417786
    2. ''' → logprob: -1.3633253574371338
    3. 'es' → logprob: -2.113325357437134
    4. ' nombres' → logprob: -2.738325357437134
    5. ''ent' → logprob: -3.113325357437134
    6. ''espace' → logprob: -5.113325595855713
    7. ''e' → logprob: -5.738325595855713
    8. 'n' → logprob: -5.988325595855713
    9. ' e' → logprob: -6.113325595855713
    10. ' ent' → logprob: -6.113325595855713

Token 605: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018458830192685127
    2. 'iers' → logprob: -4.518458843231201
    3. 'um' → logprob: -5.393458843231201
    4. 'ti' → logprob: -6.893458843231201
    5. 'té' → logprob: -7.768458843231201
    6. 'tre' → logprob: -7.893458843231201
    7. 'ières' → logprob: -8.393458366394043
    8. 'te' → logprob: -8.518458366394043
    9. 'ten' → logprob: -8.643458366394043
    10. 'tes' → logprob: -9.268458366394043

Token 606: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. ' print' → logprob: -13.50000286102295
    3. 'for' → logprob: -13.75000286102295
    4. '
' → logprob: -18.875001907348633
    5. '```' → logprob: -20.625001907348633
    6. '(print' → logprob: -21.875001907348633
    7. '.print' → logprob: -23.250001907348633
    8. '*' → logprob: -23.750001907348633
    9. '[' → logprob: -23.750001907348633
    10. '#print' → logprob: -23.750001907348633

Token 607: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.41941753029823303
    2. 'és' → logprob: -1.2944175004959106
    3. 'é' → logprob: -2.9194176197052
    4. ' par' → logprob: -4.919417381286621
    5. 'ées' → logprob: -5.669417381286621
    6. 'par' → logprob: -6.794417381286621
    7. 'er' → logprob: -6.794417381286621
    8. 'es' → logprob: -7.919417381286621
    9. 'e' → logprob: -8.044417381286621
    10. 'ré' → logprob: -9.544417381286621

Token 608: ' par' (ID: 686)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.8400532603263855
    2. ' par' → logprob: -1.3400533199310303
    3. ' by' → logprob: -1.5900533199310303
    4. '('' → logprob: -2.8400533199310303
    5. 'par' → logprob: -3.3400533199310303
    6. 'print' → logprob: -5.340053081512451
    7. '("' → logprob: -7.090053081512451
    8. 'space' → logprob: -7.465053081512451
    9. ''' → logprob: -7.590053081512451
    10. '(' → logprob: -7.965053081512451

Token 609: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0700603649020195
    2. ''espace' → logprob: -3.8200602531433105
    3. ''esp' → logprob: -3.9450602531433105
    4. '"' → logprob: -4.8200602531433105
    5. ' espaces' → logprob: -5.5700602531433105
    6. ' des' → logprob: -5.6950602531433105
    7. ''un' → logprob: -6.0700602531433105
    8. 'des' → logprob: -6.1950602531433105
    9. 'space' → logprob: -6.1950602531433105
    10. 'spaces' → logprob: -6.6950602531433105

Token 610: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.030509620904922485
    2. 'esp' → logprob: -4.0305094718933105
    3. 'spaces' → logprob: -5.5305094718933105
    4. ''esp' → logprob: -5.6555094718933105
    5. ' spaces' → logprob: -6.7805094718933105
    6. ' espace' → logprob: -6.9055094718933105
    7. 'space' → logprob: -7.0305094718933105
    8. 'es' → logprob: -7.2805094718933105
    9. ''espace' → logprob: -7.4055094718933105
    10. ' espacios' → logprob: -8.280509948730469

Token 611: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.000001907348633
    3. 'for' → logprob: -18.125001907348633
    4. '
' → logprob: -19.000001907348633
    5. '```' → logprob: -19.250001907348633
    6. '`' → logprob: -22.375001907348633
    7. 'printf' → logprob: -22.750001907348633
    8. '.print' → logprob: -23.000001907348633
    9. '*' → logprob: -23.125001907348633
    10. '**' → logprob: -23.375001907348633

Token 612: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.25
    3. '```' → logprob: -19.625
    4. 'for' → logprob: -22.25
    5. '`' → logprob: -23.875
    6. 'prin' → logprob: -24.5
    7. 'printf' → logprob: -24.625
    8. '
' → logprob: -25.5
    9. 'Print' → logprob: -25.625
    10. '#print' → logprob: -26.25

Token 613: ' L' (ID: 451)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -13.750000953674316
    3. 'for' → logprob: -22.000001907348633
    4. 'prin' → logprob: -22.125001907348633
    5. '```' → logprob: -23.250001907348633
    6. 'pr' → logprob: -23.875001907348633
    7. 'p' → logprob: -25.125001907348633
    8. '
' → logprob: -25.375001907348633
    9. 'printf' → logprob: -25.375001907348633
    10. '#print' → logprob: -25.625001907348633

Token 614: ''op' (ID: 70747)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011081460979767144
    2. 'e' → logprob: -9.875110626220703
    3. 'r' → logprob: -11.000110626220703
    4. '```' → logprob: -11.750110626220703
    5. 'prin' → logprob: -12.125110626220703
    6. 'a' → logprob: -12.125110626220703
    7. ' print' → logprob: -12.250110626220703
    8. '#' → logprob: -12.375110626220703
    9. 'en' → logprob: -12.375110626220703
    10. '#print' → logprob: -12.750110626220703

Token 615: 'érateur' (ID: 108528)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8122217655181885
    2. 'int' → logprob: -1.0622217655181885
    3. 'print' → logprob: -1.5622217655181885
    4. ' print' → logprob: -7.937221527099609
    5. 't' → logprob: -8.31222152709961
    6. '#print' → logprob: -10.06222152709961
    7. 'rit' → logprob: -10.81222152709961
    8. '(print' → logprob: -11.18722152709961
    9. 'rent' → logprob: -11.31222152709961
    10. 'riv' → logprob: -11.43722152709961

Token 616: ' *' (ID: 425)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04424673691391945
    2. '*' → logprob: -3.1692466735839844
    3. 'join' → logprob: -7.419246673583984
    4. ''' → logprob: -7.794246673583984
    5. ' print' → logprob: -8.669246673583984
    6. '"' → logprob: -10.419246673583984
    7. '`' → logprob: -10.919246673583984
    8. ' *' → logprob: -12.544246673583984
    9. '**' → logprob: -12.544246673583984
    10. '.print' → logprob: -13.669246673583984

Token 617: ' dé' (ID: 2393)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011307948443572968
    2. ' print' → logprob: -9.125113487243652
    3. ')' → logprob: -13.625113487243652
    4. 'prin' → logprob: -14.125113487243652
    5. '(print' → logprob: -14.500113487243652
    6. 'ans' → logprob: -14.500113487243652
    7. '.print' → logprob: -14.875113487243652
    8. '*' → logprob: -14.875113487243652
    9. ',' → logprob: -15.875113487243652
    10. '=' → logprob: -16.125112533569336

Token 618: 'comp' (ID: 3697)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024194860830903053
    2. 'plo' → logprob: -4.524194717407227
    3. 'pack' → logprob: -5.024194717407227
    4. 'f' → logprob: -7.024194717407227
    5. '*' → logprob: -7.274194717407227
    6. 'pile' → logprob: -7.274194717407227
    7. 'compose' → logprob: -7.524194717407227
    8. 'pak' → logprob: -8.024194717407227
    9. '#print' → logprob: -8.024194717407227
    10. 'un' → logprob: -8.274194717407227

Token 619: 'resse' (ID: 15994)
  Prédit: 'lo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.07314346730709076
    2. '*' → logprob: -3.073143482208252
    3. 'a' → logprob: -5.198143482208252
    4. 'lace' → logprob: -6.198143482208252
    5. 'ose' → logprob: -6.198143482208252
    6. 'lot' → logprob: -6.198143482208252
    7. 'pack' → logprob: -6.698143482208252
    8. 'un' → logprob: -6.698143482208252
    9. 'aque' → logprob: -7.073143482208252
    10. 'plo' → logprob: -7.323143482208252

Token 620: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004110815469175577
    2. ' ans' → logprob: -5.504110813140869
    3. '(ans' → logprob: -10.379111289978027
    4. '	ans' → logprob: -14.504111289978027
    5. 'print' → logprob: -14.629111289978027
    6. 'args' → logprob: -16.12911033630371
    7. '_ans' → logprob: -16.37911033630371
    8. '*' → logprob: -16.75411033630371
    9. 'ann' → logprob: -18.00411033630371
    10. 'ps' → logprob: -18.00411033630371

Token 621: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00017016702622640878
    2. ' ans' → logprob: -8.75016975402832
    3. 'list' → logprob: -11.62516975402832
    4. 'liste' → logprob: -14.12516975402832
    5. '(ans' → logprob: -14.25016975402832
    6. 'args' → logprob: -14.25016975402832
    7. '	ans' → logprob: -15.50016975402832
    8. 'print' → logprob: -16.00016975402832
    9. 'lst' → logprob: -16.37516975402832
    10. '_ans' → logprob: -16.62516975402832

Token 622: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.300083648762666e-05
    2. ' print' → logprob: -10.125053405761719
    3. ',' → logprob: -11.500053405761719
    4. 'ans' → logprob: -13.250053405761719
    5. ')' → logprob: -14.625053405761719
    6. '(print' → logprob: -15.750053405761719
    7. '*' → logprob: -15.875053405761719
    8. ' ans' → logprob: -16.87505340576172
    9. '.print' → logprob: -17.00005340576172
    10. '(ans' → logprob: -17.25005340576172

Token 623: ' afin' (ID: 22217)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.3199920178740285e-05
    2. ' print' → logprob: -10.750022888183594
    3. '(print' → logprob: -14.000022888183594
    4. ',' → logprob: -14.250022888183594
    5. '(*' → logprob: -16.000022888183594
    6. '.print' → logprob: -17.625022888183594
    7. '
' → logprob: -17.625022888183594
    8. '*' → logprob: -18.375022888183594
    9. 'prin' → logprob: -19.125022888183594
    10. '#print' → logprob: -19.375022888183594

Token 624: ' que' (ID: 661)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028419606387615204
    2. ' print' → logprob: -5.877841949462891
    3. ' de' → logprob: -10.37784194946289
    4. ' d' → logprob: -12.87784194946289
    5. '   ' → logprob: -13.37784194946289
    6. '#' → logprob: -14.87784194946289
    7. '#print' → logprob: -14.87784194946289
    8. '(print' → logprob: -15.25284194946289
    9. 'de' → logprob: -15.50284194946289
    10. '_print' → logprob: -15.62784194946289

Token 625: ' chaque' (ID: 21194)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.463036435074173e-05
    2. ' print' → logprob: -11.000024795532227
    3. 'ans' → logprob: -11.750024795532227
    4. '*' → logprob: -19.625024795532227
    5. 'prin' → logprob: -20.000024795532227
    6. '#print' → logprob: -20.500024795532227
    7. ' ans' → logprob: -20.875024795532227
    8. '`' → logprob: -20.875024795532227
    9. '0' → logprob: -21.000024795532227
    10. '#' → logprob: -21.125024795532227

Token 626: ' élément' (ID: 99627)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03767189383506775
    2. 'element' → logprob: -4.53767204284668
    3. ' ans' → logprob: -4.66267204284668
    4. 'nombre' → logprob: -5.03767204284668
    5. 'elem' → logprob: -5.53767204284668
    6. 'élé' → logprob: -6.28767204284668
    7. 'num' → logprob: -6.41267204284668
    8. 'val' → logprob: -7.03767204284668
    9. ' nombre' → logprob: -7.91267204284668
    10. 'ent' → logprob: -8.53767204284668

Token 627: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.4941803514957428
    2. 'print' → logprob: -0.9941803216934204
    3. ' print' → logprob: -4.869180202484131
    4. ')' → logprob: -6.369180202484131
    5. 'so' → logprob: -6.494180202484131
    6. ' soient' → logprob: -6.494180202484131
    7. 'ans' → logprob: -6.744180202484131
    8. ',' → logprob: -6.744180202484131
    9. ' ans' → logprob: -7.119180202484131
    10. ' be' → logprob: -7.244180202484131

Token 628: ' passé' (ID: 40520)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3184613883495331
    2. ' imprim' → logprob: -1.6934614181518555
    3. 'aff' → logprob: -3.1934614181518555
    4. ' affich' → logprob: -3.6934614181518555
    5. 'sé' → logprob: -5.3184614181518555
    6. 'passed' → logprob: -5.4434614181518555
    7. ' sépar' → logprob: -5.5684614181518555
    8. 'im' → logprob: -5.5684614181518555
    9. ' print' → logprob: -6.1934614181518555
    10. ' passed' → logprob: -6.6934614181518555

Token 629: ' comme' (ID: 7971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1416431963443756
    2. ' à' → logprob: -3.2666432857513428
    3. ',' → logprob: -3.5166432857513428
    4. ' print' → logprob: -4.391643047332764
    5. 'sep' → logprob: -4.516643047332764
    6. ' en' → logprob: -4.766643047332764
    7. ' sépar' → logprob: -5.016643047332764
    8. ' to' → logprob: -5.141643047332764
    9. 'to' → logprob: -5.516643047332764
    10. ' ' → logprob: -5.891643047332764

Token 630: ' argument' (ID: 10383)
  Prédit: 'argument'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'argument' → logprob: -0.20394477248191833
    2. ' argument' → logprob: -1.7039448022842407
    3. ' un' → logprob: -7.578944683074951
    4. 'arg' → logprob: -7.828944683074951
    5. 'une' → logprob: -7.828944683074951
    6. ' une' → logprob: -7.953944683074951
    7. 'un' → logprob: -8.07894515991211
    8. 'args' → logprob: -9.07894515991211
    9. 'arguments' → logprob: -9.07894515991211
    10. ' separate' → logprob: -9.57894515991211

Token 631: ' sépar' (ID: 97160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '(print' → logprob: -17.125001907348633
    4. 'prin' → logprob: -18.125001907348633
    5. ')' → logprob: -18.375001907348633
    6. '*' → logprob: -20.125001907348633
    7. '#print' → logprob: -20.500001907348633
    8. '
' → logprob: -20.750001907348633
    9. '.print' → logprob: -20.750001907348633
    10. 'for' → logprob: -21.250001907348633

Token 632: 'é' (ID: 377)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3991285562515259
    2. ',' → logprob: -1.2741285562515259
    3. 'é' → logprob: -3.7741284370422363
    4. ' print' → logprob: -5.774128437042236
    5. 'p' → logprob: -6.149128437042236
    6. ''' → logprob: -6.149128437042236
    7. ')' → logprob: -6.274128437042236
    8. 'ate' → logprob: -6.274128437042236
    9. 'ateur' → logprob: -6.274128437042236
    10. 'au' → logprob: -6.899128437042236

Token 633: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. ' print' → logprob: -12.250004768371582
    3. ')' → logprob: -16.8750057220459
    4. 'prin' → logprob: -16.8750057220459
    5. '(print' → logprob: -19.0000057220459
    6. '#print' → logprob: -20.0000057220459
    7. '.print' → logprob: -20.2500057220459
    8. ',' → logprob: -20.2500057220459
    9. '*' → logprob: -20.3750057220459
    10. '
' → logprob: -20.6250057220459

Token 634: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.0
    3. '(print' → logprob: -24.125
    4. '```' → logprob: -24.25
    5. 'prin' → logprob: -24.25
    6. '#print' → logprob: -24.375
    7. 'printf' → logprob: -24.75
    8. 'Print' → logprob: -25.0
    9. 'pr' → logprob: -25.625
    10. '	print' → logprob: -25.875

Token 635: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004944138927385211
    2. ' print' → logprob: -8.125494003295898
    3. '(print' → logprob: -9.000494003295898
    4. '*' → logprob: -10.250494003295898
    5. '(*' → logprob: -10.375494003295898
    6. ')' → logprob: -12.875494003295898
    7. '(' → logprob: -13.250494003295898
    8. '(ans' → logprob: -13.500494003295898
    9. '.print' → logprob: -13.875494003295898
    10. 'ans' → logprob: -14.500494003295898

Token 636: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '(print' → logprob: -24.125
    4. '#print' → logprob: -24.25
    5. '.print' → logprob: -24.5
    6. '```' → logprob: -25.25
    7. 'Print' → logprob: -25.875
    8. '-print' → logprob: -26.0
    9. 'prin' → logprob: -26.25
    10. '_print' → logprob: -26.5

Token 637: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00020389800192788243
    2. '(' → logprob: -8.500204086303711
    3. '(*)' → logprob: -15.375204086303711
    4. '*' → logprob: -16.50020408630371
    5. ' (*' → logprob: -17.00020408630371
    6. '(*(' → logprob: -18.00020408630371
    7. '((*' → logprob: -18.62520408630371
    8. '(
' → logprob: -19.37520408630371
    9. '()' → logprob: -20.00020408630371
    10. '（' → logprob: -21.87520408630371

Token 638: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.500000953674316
    3. '(ans' → logprob: -15.250000953674316
    4. '	ans' → logprob: -20.625
    5. 'ann' → logprob: -21.875
    6. 'anst' → logprob: -22.625
    7. 'ANS' → logprob: -22.875
    8. 'Ans' → logprob: -23.0
    9. 'a' → logprob: -23.0
    10. '_ans' → logprob: -23.25

Token 639: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.250004768371582
    3. ',' → logprob: -16.5000057220459
    4. ',)' → logprob: -16.6250057220459
    5. '))' → logprob: -17.6250057220459
    6. ')`' → logprob: -18.2500057220459
    7. ')#' → logprob: -19.1250057220459
    8. '),' → logprob: -19.5000057220459
    9. ')
' → logprob: -19.6250057220459
    10. ')}' → logprob: -20.2500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 637
Tokens correctement prédits (1ère position, stricte): 159
Tokens correctement prédits (1ère position, avec adaptation): 162
Tokens correctement prédits (top 10): 347
Précision stricte (1ère position): 24.96%
Précision adaptée (1ère position): 25.43%
Précision (top 10): 54.47%
================================================================================
