================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = '0'
s = s + input()

def is_palindrome(s, l, r):
    while l <= r:
        if s[l] != s[r]:
            return False
        l = l + 1
        r = r - 1
    return True

def main():
    N = len(s) - 1
    if s[N] == '1' or s[1] == '0':
        print(-1)
        return
    if not is_palindrome(s, 1, N - 1):
        print(-1)
        return
    root = 1
    i = 2
    while i <= N:
        print(str(root) + ' ' + str(i))
        if s[i - 1] == '1':
            root = i
        i = i + 1

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' '' (ID: 461)
  → Token d'amorce (pas de prédiction)

Token 3: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10937892645597458
    2. '"' → logprob: -2.9843788146972656
    3. ''''' → logprob: -3.2343788146972656
    4. 'a' → logprob: -5.609378814697266
    5. '\'' → logprob: -6.484378814697266
    6. '"""' → logprob: -6.609378814697266
    7. '''' → logprob: -6.859378814697266
    8. 'H' → logprob: -7.609378814697266
    9. 'Hello' → logprob: -7.734378814697266
    10. '#' → logprob: -7.859378814697266

Token 4: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11215074360370636
    2. '0' → logprob: -2.8621506690979004
    3. '1' → logprob: -4.1121506690979
    4. ''''' → logprob: -4.1121506690979
    5. '.' → logprob: -5.9871506690979
    6. '+' → logprob: -6.1121506690979
    7. '=' → logprob: -6.1121506690979
    8. '2' → logprob: -6.7371506690979
    9. '[' → logprob: -6.9871506690979
    10. '='' → logprob: -7.1121506690979

Token 5: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024635253939777613
    2. '[' → logprob: -6.502463340759277
    3. '=' → logprob: -7.877463340759277
    4. '.' → logprob: -8.502463340759277
    5. '0' → logprob: -9.127463340759277
    6. ' +' → logprob: -9.502463340759277
    7. '*' → logprob: -9.627463340759277
    8. '+=' → logprob: -10.627463340759277
    9. 's' → logprob: -10.752463340759277
    10. '1' → logprob: -11.127463340759277

Token 6: ' =' (ID: 314)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49329179525375366
    2. '+' → logprob: -1.3682918548583984
    3. ''' → logprob: -2.4932918548583984
    4. ' ' → logprob: -4.243291854858398
    5. '.' → logprob: -4.618291854858398
    6. '1' → logprob: -4.868291854858398
    7. '#' → logprob: -5.368291854858398
    8. '```' → logprob: -6.118291854858398
    9. '2' → logprob: -6.368291854858398
    10. '\n' → logprob: -6.618291854858398

Token 7: ' s' (ID: 265)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4109286069869995
    2. ' '' → logprob: -1.6609286069869995
    3. ' s' → logprob: -2.535928726196289
    4. 's' → logprob: -3.660928726196289
    5. '"' → logprob: -4.035928726196289
    6. ' ' → logprob: -4.285928726196289
    7. ' "' → logprob: -5.785928726196289
    8. ''s' → logprob: -6.035928726196289
    9. ' ''' → logprob: -6.035928726196289
    10. '''' → logprob: -6.410928726196289

Token 8: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03380648419260979
    2. ' +' → logprob: -3.533806562423706
    3. '.' → logprob: -6.283806324005127
    4. '[' → logprob: -6.783806324005127
    5. 's' → logprob: -8.283806800842285
    6. '*' → logprob: -8.408806800842285
    7. '0' → logprob: -9.158806800842285
    8. ' ' → logprob: -9.158806800842285
    9. '[:]' → logprob: -9.533806800842285
    10. '_' → logprob: -10.283806800842285

Token 9: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009706872515380383
    2. ' '' → logprob: -4.759706974029541
    3. '"' → logprob: -7.009706974029541
    4. ''s' → logprob: -9.009706497192383
    5. ' ' → logprob: -12.134706497192383
    6. ' s' → logprob: -12.134706497192383
    7. ''i' → logprob: -12.134706497192383
    8. 's' → logprob: -12.259706497192383
    9. ''.' → logprob: -12.259706497192383
    10. ''-' → logprob: -12.384706497192383

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03545338660478592
    2. ''' → logprob: -3.5354533195495605
    3. '('' → logprob: -5.6604533195495605
    4. '()' → logprob: -7.2854533195495605
    5. '"' → logprob: -7.7854533195495605
    6. '[' → logprob: -8.285453796386719
    7. '`' → logprob: -8.785453796386719
    8. '```' → logprob: -8.910453796386719
    9. ''(' → logprob: -9.160453796386719
    10. '(
' → logprob: -9.285453796386719

Token 11: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 12: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6451376676559448
    2. ' _' → logprob: -1.2701376676559448
    3. ' space' → logprob: -2.3951377868652344
    4. '_' → logprob: -2.7701377868652344
    5. ' my' → logprob: -4.270137786865234
    6. ' s' → logprob: -4.895137786865234
    7. ' f' → logprob: -5.270137786865234
    8. ' function' → logprob: -6.020137786865234
    9. ' add' → logprob: -6.270137786865234
    10. ' '' → logprob: -6.395137786865234

Token 13: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.47842660546302795
    2. '_prime' → logprob: -1.6034265756607056
    3. '_valid' → logprob: -2.478426694869995
    4. '_even' → logprob: -3.478426694869995
    5. '_binary' → logprob: -3.978426694869995
    6. '_' → logprob: -4.103426456451416
    7. '_digit' → logprob: -4.853426456451416
    8. '_bal' → logprob: -5.103426456451416
    9. '_numeric' → logprob: -6.478426456451416
    10. '_number' → logprob: -6.603426456451416

Token 14: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.0019377965945750475
    2. 'ind' → logprob: -6.2519378662109375
    3. 'ndrome' → logprob: -12.126937866210938
    4. '```' → logprob: -13.376937866210938
    5. 'in' → logprob: -14.126937866210938
    6. 'i' → logprob: -14.751937866210938
    7. '_' → logprob: -15.501937866210938
    8. '`' → logprob: -15.876937866210938
    9. 'id' → logprob: -15.876937866210938
    10. '(' → logprob: -16.501937866210938

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35841965675354004
    2. '(s' → logprob: -1.60841965675354
    3. 's' → logprob: -2.48341965675354
    4. '_' → logprob: -4.233419418334961
    5. '("("' → logprob: -7.108419418334961
    6. '(n' → logprob: -7.483419418334961
    7. '('' → logprob: -8.233419418334961
    8. '_(' → logprob: -8.358419418334961
    9. ' (' → logprob: -8.483419418334961
    10. '(x' → logprob: -8.983419418334961

Token 16: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016487080603837967
    2. ')' → logprob: -4.141487121582031
    3. ':' → logprob: -8.516487121582031
    4. 's' → logprob: -8.891487121582031
    5. '(s' → logprob: -10.141487121582031
    6. '):
' → logprob: -10.516487121582031
    7. '(' → logprob: -11.016487121582031
    8. ' ):' → logprob: -12.141487121582031
    9. '):

' → logprob: -12.391487121582031
    10. ',' → logprob: -12.891487121582031

Token 17: ' l' (ID: 305)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -1.0904308557510376
    2. 'i' → logprob: -1.9654308557510376
    3. ' i' → logprob: -1.9654308557510376
    4. 'start' → logprob: -2.215430736541748
    5. ' left' → logprob: -2.465430736541748
    6. 'l' → logprob: -2.715430736541748
    7. ' l' → logprob: -3.590430736541748
    8. 'left' → logprob: -3.715430736541748
    9. ' ' → logprob: -4.465430736541748
    10. 'n' → logprob: -4.590430736541748

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01309093739837408
    2. 'eft' → logprob: -4.513091087341309
    3. '):' → logprob: -7.888091087341309
    4. '=' → logprob: -8.013091087341309
    5. ',r' → logprob: -8.013091087341309
    6. ' ,' → logprob: -8.513091087341309
    7. 'ef' → logprob: -8.638091087341309
    8. ')' → logprob: -8.763091087341309
    9. 'ex' → logprob: -9.263091087341309
    10. 'e' → logprob: -9.638091087341309

Token 19: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4742850363254547
    2. ' r' → logprob: -0.9742850065231323
    3. ' ' → logprob: -8.974285125732422
    4. ' l' → logprob: -10.599285125732422
    5. 'l' → logprob: -10.599285125732422
    6. 's' → logprob: -11.474285125732422
    7. ' s' → logprob: -11.724285125732422
    8. 'h' → logprob: -12.599285125732422
    9. 'u' → logprob: -12.849285125732422
    10. ' h' → logprob: -13.849285125732422

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010716310935094953
    2. ')' → logprob: -6.876071453094482
    3. '):
' → logprob: -11.25107192993164
    4. ''):' → logprob: -11.50107192993164
    5. ' ):' → logprob: -11.62607192993164
    6. ':' → logprob: -12.62607192993164
    7. ' ' → logprob: -14.12607192993164
    8. '   ' → logprob: -15.00107192993164
    9. ',' → logprob: -15.12607192993164
    10. '):
' → logprob: -15.25107192993164

Token 21: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02087993361055851
    2. '   ' → logprob: -4.395879745483398
    3. '):' → logprob: -5.145879745483398
    4. ' :' → logprob: -6.395879745483398
    5. ':
' → logprob: -8.520879745483398
    6. ' if' → logprob: -8.520879745483398
    7. ':return' → logprob: -9.020879745483398
    8. '():' → logprob: -9.520879745483398
    9. ' ' → logprob: -10.020879745483398
    10. ')' → logprob: -10.145879745483398

Token 22: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17567363381385803
    2. '   ' → logprob: -2.175673723220825
    3. 'if' → logprob: -3.050673723220825
    4. ' while' → logprob: -9.300673484802246
    5. '    ' → logprob: -9.925673484802246
    6. ' ' → logprob: -10.675673484802246
    7. ' return' → logprob: -10.675673484802246
    8. '	if' → logprob: -10.800673484802246
    9. '       ' → logprob: -11.050673484802246
    10. ' i' → logprob: -11.300673484802246

Token 23: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.03807041049003601
    2. 'l' → logprob: -3.2880704402923584
    3. ' s' → logprob: -11.538070678710938
    4. ' ' → logprob: -11.663070678710938
    5. '(l' → logprob: -12.538070678710938
    6. 's' → logprob: -13.038070678710938
    7. '	l' → logprob: -13.413070678710938
    8. '   ' → logprob: -13.663070678710938
    9. ' (' → logprob: -13.788070678710938
    10. '```' → logprob: -14.788070678710938

Token 24: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.38839733600616455
    2. ' <' → logprob: -1.1383973360061646
    3. '<=' → logprob: -6.888397216796875
    4. ' <=' → logprob: -7.638397216796875
    5. ' ' → logprob: -11.013397216796875
    6. '<s' → logprob: -12.763397216796875
    7. '<int' → logprob: -13.388397216796875
    8. '<len' → logprob: -13.638397216796875
    9. '<n' → logprob: -14.763397216796875
    10. '<size' → logprob: -15.263397216796875

Token 25: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001704579102806747
    2. ' r' → logprob: -6.376704692840576
    3. ' ' → logprob: -13.001704216003418
    4. '   ' → logprob: -17.001705169677734
    5. '	r' → logprob: -17.126705169677734
    6. '  ' → logprob: -17.876705169677734
    7. ' ' → logprob: -18.876705169677734
    8. '_r' → logprob: -19.251705169677734
    9. '<|end|>' → logprob: -19.751705169677734
    10. 'right' → logprob: -20.126705169677734

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006411474198102951
    2. ' and' → logprob: -5.881411552429199
    3. ' :' → logprob: -6.381411552429199
    4. ':
' → logprob: -6.631411552429199
    5. '   ' → logprob: -8.3814115524292
    6. '):' → logprob: -9.0064115524292
    7. '<|end|>' → logprob: -9.7564115524292
    8. 'and' → logprob: -9.8814115524292
    9. '       ' → logprob: -10.0064115524292
    10. ')' → logprob: -11.1314115524292

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03933354467153549
    2. 's' → logprob: -4.914333343505859
    3. '   ' → logprob: -5.039333343505859
    4. ' ' → logprob: -5.289333343505859
    5. ' s' → logprob: -5.289333343505859
    6. ' if' → logprob: -5.414333343505859
    7. 'if' → logprob: -6.164333343505859
    8. '<|end|>' → logprob: -6.539333343505859
    9. ' :' → logprob: -6.789333343505859
    10. '    ' → logprob: -6.914333343505859

Token 28: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7300168871879578
    2. ' if' → logprob: -0.7300168871879578
    3. '   ' → logprob: -3.8550169467926025
    4. ' ' → logprob: -5.230016708374023
    5. '       ' → logprob: -5.230016708374023
    6. 's' → logprob: -5.730016708374023
    7. '<|end|>' → logprob: -8.480016708374023
    8. '    ' → logprob: -8.730016708374023
    9. '	if' → logprob: -8.730016708374023
    10. ' s' → logprob: -8.980016708374023

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0031796174589544535
    2. 's' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.878179550170898
    4. '(s' → logprob: -15.003179550170898
    5. '	s' → logprob: -15.503179550170898
    6. ' ' → logprob: -15.878179550170898
    7. '<|end|>' → logprob: -16.1281795501709
    8. '   ' → logprob: -16.3781795501709
    9. '_s' → logprob: -16.8781795501709
    10. ' (' → logprob: -17.2531795501709

Token 30: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.001935065840370953
    2. '[' → logprob: -6.251935005187988
    3. '[left' → logprob: -13.376935005187988
    4. '[r' → logprob: -13.501935005187988
    5. '[int' → logprob: -13.751935005187988
    6. '[len' → logprob: -14.751935005187988
    7. '```' → logprob: -14.751935005187988
    8. ' [' → logprob: -14.876935005187988
    9. '[i' → logprob: -14.876935005187988
    10. '[s' → logprob: -15.251935005187988

Token 31: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005390638019889593
    2. ']!=' → logprob: -5.255390644073486
    3. ' ]' → logprob: -9.005390167236328
    4. '!=' → logprob: -10.505390167236328
    5. '']' → logprob: -12.255390167236328
    6. ' !=' → logprob: -13.505390167236328
    7. '"]' → logprob: -15.630390167236328
    8. '`]' → logprob: -16.005390167236328
    9. ']==' → logprob: -16.255390167236328
    10. '   ' → logprob: -16.755390167236328

Token 32: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011073057539761066
    2. ' !=' → logprob: -4.511073112487793
    3. ']!=' → logprob: -11.261073112487793
    4. '!==' → logprob: -12.261073112487793
    5. '()!=' → logprob: -12.386073112487793
    6. ')!=' → logprob: -13.261073112487793
    7. ' ' → logprob: -13.761073112487793
    8. '```' → logprob: -16.011072158813477
    9. ']' → logprob: -16.136072158813477
    10. '==' → logprob: -16.261072158813477

Token 33: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47408488392829895
    2. 's' → logprob: -0.9740848541259766
    3. ' ' → logprob: -11.974084854125977
    4. ' ' → logprob: -14.349084854125977
    5. '<|end|>' → logprob: -14.974084854125977
    6. '   ' → logprob: -15.974084854125977
    7. '	s' → logprob: -16.474084854125977
    8. ')' → logprob: -16.474084854125977
    9. '<|end|>' → logprob: -16.724084854125977
    10. '_s' → logprob: -16.849084854125977

Token 34: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0002656271681189537
    2. '[' → logprob: -8.250266075134277
    3. 'r' → logprob: -12.625266075134277
    4. ' [' → logprob: -14.625266075134277
    5. ']' → logprob: -15.875266075134277
    6. '[right' → logprob: -15.875266075134277
    7. '	r' → logprob: -16.12526512145996
    8. ' r' → logprob: -16.87526512145996
    9. '[s' → logprob: -17.12526512145996
    10. '[j' → logprob: -17.25026512145996

Token 35: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.025143573060631752
    2. ']' → logprob: -3.775143623352051
    3. ']:
' → logprob: -6.400143623352051
    4. ']:
' → logprob: -8.90014362335205
    5. ']):' → logprob: -10.77514362335205
    6. '):' → logprob: -10.77514362335205
    7. '']:' → logprob: -11.02514362335205
    8. ' ]' → logprob: -11.52514362335205
    9. ']:

' → logprob: -11.65014362335205
    10. ':' → logprob: -11.77514362335205

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06997933983802795
    2. ':' → logprob: -3.444979429244995
    3. '       ' → logprob: -4.194979190826416
    4. ':return' → logprob: -4.444979190826416
    5. ' :' → logprob: -5.944979190826416
    6. ' return' → logprob: -6.069979190826416
    7. ':
' → logprob: -6.694979190826416
    8. 'return' → logprob: -7.444979190826416
    9. '          ' → logprob: -7.694979190826416
    10. '   ' → logprob: -7.694979190826416

Token 37: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25742417573928833
    2. '       ' → logprob: -2.6324241161346436
    3. '           ' → logprob: -2.6324241161346436
    4. 'return' (adapté à ' return') → logprob: -2.7574241161346436
    5. ' ' → logprob: -4.507424354553223
    6. '   ' → logprob: -6.132424354553223
    7. ' 
' → logprob: -6.257424354553223
    8. ':return' → logprob: -6.257424354553223
    9. ')' → logprob: -6.632424354553223
    10. '               ' → logprob: -8.507424354553223

Token 38: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.04858759790658951
    2. ' False' → logprob: -3.0485875606536865
    3. '0' → logprob: -16.548587799072266
    4. '(False' → logprob: -16.673587799072266
    5. 'F' → logprob: -17.423587799072266
    6. ' ' → logprob: -17.673587799072266
    7. '   ' → logprob: -18.298587799072266
    8. '=False' → logprob: -18.548587799072266
    9. 'True' → logprob: -18.673587799072266
    10. ' ' → logprob: -19.923587799072266

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00387061620131135
    2. '<|end|>' → logprob: -6.378870487213135
    3. '   ' → logprob: -7.003870487213135
    4. '
' → logprob: -7.628870487213135
    5. '        
' → logprob: -8.628870964050293
    6. ' ' → logprob: -9.003870964050293
    7. ')' → logprob: -9.503870964050293
    8. ',' → logprob: -9.628870964050293
    9. '    ' → logprob: -9.753870964050293
    10. '  ' → logprob: -10.128870964050293

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012326111318543553
    2. '        
' → logprob: -7.251232624053955
    3. '
' → logprob: -8.501232147216797
    4. '<|end|>' → logprob: -9.001232147216797
    5. '   ' → logprob: -9.751232147216797
    6. '\n' → logprob: -10.501232147216797
    7. '```' → logprob: -11.001232147216797
    8. '    
' → logprob: -11.626232147216797
    9. '\' → logprob: -11.876232147216797
    10. '      ' → logprob: -11.876232147216797

Token 41: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04795704782009125
    2. ' l' → logprob: -3.672956943511963
    3. 'l' (adapté à ' l') → logprob: -4.547956943511963
    4. 'r' → logprob: -5.297956943511963
    5. '   ' → logprob: -5.547956943511963
    6. '    ' → logprob: -7.047956943511963
    7. ' ' → logprob: -8.172957420349121
    8. 's' → logprob: -8.297957420349121
    9. '      ' → logprob: -9.172957420349121
    10. '        ' → logprob: -9.922957420349121

Token 42: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47506222128868103
    2. '+=' → logprob: -0.9750622510910034
    3. ' +=' → logprob: -6.975062370300293
    4. '++' → logprob: -10.350062370300293
    5. '=' → logprob: -11.725062370300293
    6. '+++' → logprob: -13.350062370300293
    7. '   ' → logprob: -13.600062370300293
    8. ']+=' → logprob: -13.600062370300293
    9. '```' → logprob: -13.600062370300293
    10. '+="' → logprob: -13.725062370300293

Token 43: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02327471412718296
    2. ' l' → logprob: -3.7732746601104736
    3. '+' → logprob: -10.648274421691895
    4. '+l' → logprob: -12.398274421691895
    5. '	l' → logprob: -13.773274421691895
    6. '1' → logprob: -16.77327537536621
    7. ' +' → logprob: -16.77327537536621
    8. '    ' → logprob: -17.02327537536621
    9. '   ' → logprob: -18.02327537536621
    10. ' ' → logprob: -18.14827537536621

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017134972149506211
    2. ' +' → logprob: -6.376713275909424
    3. ' plus' → logprob: -12.501713752746582
    4. '1' → logprob: -12.751713752746582
    5. 's' → logprob: -12.876713752746582
    6. ' ' → logprob: -13.626713752746582
    7. '<|end|>' → logprob: -16.126712799072266
    8. '   ' → logprob: -16.251712799072266
    9. 'plus' → logprob: -16.251712799072266
    10. '<|end|>' → logprob: -16.376712799072266

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '  ' → logprob: -19.000036239624023
    5. '```' → logprob: -20.125036239624023
    6. '<|end|>' → logprob: -21.125036239624023
    7. '       ' → logprob: -21.250036239624023
    8. ' ' → logprob: -21.625036239624023
    9. '+' → logprob: -21.625036239624023
    10. '    ' → logprob: -21.875036239624023

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.500001907348633
    4. '```' → logprob: -17.750001907348633
    5. '  ' → logprob: -18.125001907348633
    6. '+' → logprob: -18.812501907348633
    7. '۱' → logprob: -19.375001907348633
    8. '`' → logprob: -19.812501907348633
    9. '<|end|>' → logprob: -20.062501907348633
    10. '१' → logprob: -20.187501907348633

Token 47: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20389828085899353
    2. '       ' → logprob: -1.703898310661316
    3. ' r' → logprob: -6.8288984298706055
    4. '   ' → logprob: -7.5788984298706055
    5. '
' → logprob: -7.8288984298706055
    6. '	r' → logprob: -8.953898429870605
    7. '[r' → logprob: -9.453898429870605
    8. ',r' → logprob: -9.578898429870605
    9. '<|end|>' → logprob: -9.828898429870605
    10. '        
' → logprob: -10.703898429870605

Token 48: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.526391863822937
    2. '       ' → logprob: -0.901391863822937
    3. '   ' → logprob: -6.151391983032227
    4. ' r' → logprob: -7.276391983032227
    5. '
' → logprob: -9.026391983032227
    6. '	r' → logprob: -9.776391983032227
    7. '        
' → logprob: -10.026391983032227
    8. '```' → logprob: -10.026391983032227
    9. ',r' → logprob: -10.026391983032227
    10. ' ' → logprob: -10.526391983032227

Token 49: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -3.8889261304575484e-06
    2. ' r' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '       ' → logprob: -17.250003814697266
    5. '	r' → logprob: -19.000003814697266
    6. '_r' → logprob: -20.375003814697266
    7. '```' → logprob: -20.750003814697266
    8. '­r' → logprob: -20.875003814697266
    9. '-r' → logprob: -21.750003814697266
    10. '    ' → logprob: -21.875003814697266

Token 50: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22740310430526733
    2. '-' → logprob: -1.602403163909912
    3. ' -' → logprob: -7.102403163909912
    4. ' =' → logprob: -7.352403163909912
    5. '-=' → logprob: -7.602403163909912
    6. ' -=' → logprob: -11.227402687072754
    7. ' ' → logprob: -11.977402687072754
    8. ')' → logprob: -13.227402687072754
    9. '_' → logprob: -13.227402687072754
    10. '   ' → logprob: -14.852402687072754

Token 51: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011048170737922192
    2. ' r' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.386048316955566
    4. '   ' → logprob: -16.51104736328125
    5. 's' → logprob: -17.01104736328125
    6. '	r' → logprob: -17.88604736328125
    7. '-' → logprob: -18.26104736328125
    8. '_r' → logprob: -18.63604736328125
    9. '  ' → logprob: -19.01104736328125
    10. '(r' → logprob: -19.51104736328125

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4974866644479334e-05
    2. ' -' → logprob: -11.125015258789062
    3. ' ' → logprob: -16.000015258789062
    4. '−' → logprob: -18.625015258789062
    5. '   ' → logprob: -18.875015258789062
    6. 'r' → logprob: -19.250015258789062
    7. '```' → logprob: -19.500015258789062
    8. '–' → logprob: -19.750015258789062
    9. '  ' → logprob: -20.500015258789062
    10. '-r' → logprob: -21.250015258789062

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.875051498413086
    4. '```' → logprob: -17.500051498413086
    5. '<|end|>' → logprob: -17.875051498413086
    6. '۱' → logprob: -18.875051498413086
    7. '１' → logprob: -19.125051498413086
    8. '  ' → logprob: -19.937551498413086
    9. '`' → logprob: -19.937551498413086
    10. ' ' → logprob: -20.000051498413086

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.750001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '۱' → logprob: -18.750001907348633
    7. '১' → logprob: -20.000001907348633
    8. '१' → logprob: -20.187501907348633
    9. '  ' → logprob: -20.312501907348633
    10. '<|end|>' → logprob: -20.375001907348633

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029637437546625733
    2. 'return' → logprob: -8.250296592712402
    3. ' return' → logprob: -10.875296592712402
    4. '```' → logprob: -11.250296592712402
    5. '
' → logprob: -13.625296592712402
    6. '    
' → logprob: -14.250296592712402
    7. '	return' → logprob: -15.000296592712402
    8. '       ' → logprob: -15.125296592712402
    9. ':return' → logprob: -15.125296592712402
    10. '   ' → logprob: -16.250295639038086

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011083780787885189
    2. 'return' → logprob: -4.511083602905273
    3. ' return' → logprob: -10.386083602905273
    4. '```' → logprob: -12.511083602905273
    5. '	return' → logprob: -14.761083602905273
    6. '    
' → logprob: -15.136083602905273
    7. '       ' → logprob: -15.386083602905273
    8. '
' → logprob: -15.886083602905273
    9. ':return' → logprob: -16.011083602905273
    10. '  ' → logprob: -16.636083602905273

Token 57: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018358182162046432
    2. '   ' → logprob: -4.01835823059082
    3. ' return' → logprob: -8.51835823059082
    4. '	return' → logprob: -12.76835823059082
    5. '```' → logprob: -12.89335823059082
    6. ' ' → logprob: -13.89335823059082
    7. ':return' → logprob: -14.64335823059082
    8. '    
' → logprob: -14.76835823059082
    9. '
' → logprob: -15.14335823059082
    10. '  ' → logprob: -15.51835823059082

Token 58: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007100477814674377
    2. ' True' → logprob: -7.2507100105285645
    3. 'Tr' → logprob: -17.500709533691406
    4. '(True' → logprob: -19.125709533691406
    5. '=True' → logprob: -21.500709533691406
    6. 'true' → logprob: -21.750709533691406
    7. ' ' → logprob: -22.375709533691406
    8. 'False' → logprob: -22.500709533691406
    9. ' Tru' → logprob: -22.625709533691406
    10. 'T' → logprob: -22.875709533691406

Token 59: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.036008596420288
    2. 'n' → logprob: -2.161008596420288
    3. '(' → logprob: -2.411008596420288
    4. 'def' → logprob: -2.661008596420288
    5. '#' → logprob: -2.786008596420288
    6. '
' → logprob: -2.911008596420288
    7. '(
' → logprob: -3.536008596420288
    8. 'l' → logprob: -3.661008596420288
    9. 'print' → logprob: -3.661008596420288
    10. '<|end|>' → logprob: -3.786008596420288

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1578279733657837
    2. 'for' → logprob: -1.4078279733657837
    3. 'n' → logprob: -1.5328279733657837
    4. 'if' → logprob: -2.282827854156494
    5. 'print' → logprob: -2.907827854156494
    6. 'result' → logprob: -3.907827854156494
    7. 'i' → logprob: -4.157827854156494
    8. 'l' → logprob: -4.657827854156494
    9. 'res' → logprob: -5.532827854156494
    10. 's' → logprob: -5.907827854156494

Token 61: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9380120038986206
    2. ' is' → logprob: -1.3130120038986206
    3. ' check' → logprob: -2.18801212310791
    4. ' find' → logprob: -2.81301212310791
    5. ' longest' → logprob: -3.43801212310791
    6. ' count' → logprob: -4.06301212310791
    7. ' largest' → logprob: -4.31301212310791
    8. ' expand' → logprob: -4.31301212310791
    9. ' reverse' → logprob: -4.56301212310791
    10. ' factorial' → logprob: -4.68801212310791

Token 62: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001801557606086135
    2. '(' → logprob: -6.376801490783691
    3. '()' → logprob: -9.501801490783691
    4. ' ():' → logprob: -11.251801490783691
    5. '():
' → logprob: -12.376801490783691
    6. ':' → logprob: -12.376801490783691
    7. '(:' → logprob: -13.751801490783691
    8. '_' → logprob: -13.876801490783691
    9. '):' → logprob: -14.876801490783691
    10. '()>' → logprob: -16.126802444458008

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11719384789466858
    2. ' n' → logprob: -2.4921939373016357
    3. 'n' → logprob: -3.9921939373016357
    4. ' s' → logprob: -5.367193698883057
    5. 's' → logprob: -6.242193698883057
    6. ' for' → logprob: -6.492193698883057
    7. ' length' → logprob: -7.742193698883057
    8. ' i' → logprob: -7.867193698883057
    9. 'i' → logprob: -9.367194175720215
    10. 'for' → logprob: -9.617194175720215

Token 64: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6153734922409058
    2. 'n' → logprob: -1.4903734922409058
    3. ' s' → logprob: -1.8653734922409058
    4. 's' → logprob: -2.8653736114501953
    5. ' for' → logprob: -4.615373611450195
    6. '   ' → logprob: -5.240373611450195
    7. 'for' → logprob: -6.365373611450195
    8. ' num' → logprob: -6.990373611450195
    9. ' t' → logprob: -7.115373611450195
    10. 't' → logprob: -7.490373611450195

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043155964463949203
    2. '=' → logprob: -3.1681559085845947
    3. '=int' → logprob: -9.293155670166016
    4. ',' → logprob: -9.793155670166016
    5. ' ' → logprob: -12.293155670166016
    6. '=input' → logprob: -13.293155670166016
    7. '  ' → logprob: -14.168155670166016
    8. '   ' → logprob: -14.668155670166016
    9. 's' → logprob: -15.043155670166016
    10. ')' → logprob: -15.168155670166016

Token 66: ' len' (ID: 4631)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47445356845855713
    2. ' int' → logprob: -0.9744535684585571
    3. 'input' → logprob: -9.349453926086426
    4. ' input' → logprob: -9.474453926086426
    5. 'len' → logprob: -9.599453926086426
    6. ' len' → logprob: -9.599453926086426
    7. ' ' → logprob: -9.849453926086426
    8. '10' → logprob: -11.849453926086426
    9. '  ' → logprob: -12.224453926086426
    10. '   ' → logprob: -13.224453926086426

Token 67: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007696056272834539
    2. '(' → logprob: -7.62576961517334
    3. 's' → logprob: -8.25076961517334
    4. ' (' → logprob: -10.87576961517334
    5. '(S' → logprob: -15.00076961517334
    6. ' s' → logprob: -15.12576961517334
    7. ')' → logprob: -15.37576961517334
    8. '(input' → logprob: -15.37576961517334
    9. '(
' → logprob: -15.50076961517334
    10. '(n' → logprob: -15.87576961517334

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0100624169572257e-05
    2. ' )' → logprob: -11.625020027160645
    3. ')
' → logprob: -12.250020027160645
    4. '   ' → logprob: -12.375020027160645
    5. ')-' → logprob: -13.500020027160645
    6. ' ' → logprob: -15.625020027160645
    7. '')' → logprob: -16.37502098083496
    8. '))' → logprob: -17.12502098083496
    9. '-' → logprob: -17.12502098083496
    10. ')#' → logprob: -17.12502098083496

Token 69: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1177150309085846
    2. '
' → logprob: -2.6177151203155518
    3. '<|end|>' → logprob: -3.7427151203155518
    4. ' for' → logprob: -5.492714881896973
    5. '    
' → logprob: -5.492714881896973
    6. 'for' → logprob: -5.867714881896973
    7. '<|end|>' → logprob: -6.742714881896973
    8. ' ' → logprob: -7.867714881896973
    9. 'def' → logprob: -8.492714881896973
    10. ',' → logprob: -8.492714881896973

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036092204973101616
    2. ' ' → logprob: -5.6286091804504395
    3. '2' → logprob: -11.753609657287598
    4. '3' → logprob: -14.878609657287598
    5. '4' → logprob: -15.378609657287598
    6. '0' → logprob: -15.503609657287598
    7. '  ' → logprob: -15.878609657287598
    8. '   ' → logprob: -16.12860870361328
    9. '7' → logprob: -16.50360870361328
    10. '5' → logprob: -16.62860870361328

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037263904232531786
    2. '2' → logprob: -8.500372886657715
    3. ' ' → logprob: -9.250372886657715
    4. '3' → logprob: -10.250372886657715
    5. '4' → logprob: -11.250372886657715
    6. '6' → logprob: -11.625372886657715
    7. '5' → logprob: -12.250372886657715
    8. '7' → logprob: -12.625372886657715
    9. '10' → logprob: -12.625372886657715
    10. 's' → logprob: -14.250372886657715

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2938483655452728
    2. '   ' → logprob: -1.6688483953475952
    3. '<|end|>' → logprob: -3.0438482761383057
    4. ' for' → logprob: -5.043848514556885
    5. ' 
' → logprob: -5.668848514556885
    6. '    
' → logprob: -6.168848514556885
    7. ' ' → logprob: -6.293848514556885
    8. '<|end|>' → logprob: -6.793848514556885
    9. '  
' → logprob: -7.293848514556885
    10. 'for' → logprob: -7.418848514556885

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2066817730665207
    2. '
' → logprob: -1.831681728363037
    3. '<|end|>' → logprob: -4.206681728363037
    4. '    
' → logprob: -4.706681728363037
    5. '<|end|>' → logprob: -7.456681728363037
    6. ' 
' → logprob: -7.706681728363037
    7. '    ' → logprob: -8.081682205200195
    8. ' for' → logprob: -8.081682205200195
    9. '  
' → logprob: -8.831682205200195
    10. '\n' → logprob: -9.206682205200195

Token 74: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24021971225738525
    2. '   ' → logprob: -2.2402195930480957
    3. ' for' → logprob: -2.4902195930480957
    4. 'dp' → logprob: -4.990219593048096
    5. 'res' → logprob: -5.865219593048096
    6. 'result' → logprob: -6.115219593048096
    7. 'if' (adapté à ' if') → logprob: -6.240219593048096
    8. 'i' → logprob: -6.365219593048096
    9. 'count' → logprob: -6.365219593048096
    10. ' ' → logprob: -7.115219593048096

Token 75: ' s' (ID: 265)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.019843492656946182
    2. 'is' → logprob: -4.269843578338623
    3. ' s' → logprob: -5.519843578338623
    4. ' N' → logprob: -7.644843578338623
    5. ' not' → logprob: -7.769843578338623
    6. 's' → logprob: -7.894843578338623
    7. ' ' → logprob: -8.644843101501465
    8. 'N' → logprob: -9.019843101501465
    9. ' len' → logprob: -10.394843101501465
    10. 'not' → logprob: -11.019843101501465

Token 76: '[N' (ID: 49776)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46618494391441345
    2. '[N' → logprob: -1.2161849737167358
    3. ' ==' → logprob: -3.3411848545074463
    4. '==' → logprob: -3.7161848545074463
    5. ' [' → logprob: -5.091185092926025
    6. '[:]' → logprob: -5.716185092926025
    7. '[::-' → logprob: -5.966185092926025
    8. '[-' → logprob: -6.966185092926025
    9. '[s' → logprob: -7.216185092926025
    10. '[:' → logprob: -7.341185092926025

Token 77: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0755324363708496
    2. ')' → logprob: -1.3255324363708496
    3. ' ==' → logprob: -1.7005324363708496
    4. ']' → logprob: -2.4505324363708496
    5. '-' → logprob: -3.0755324363708496
    6. ':' → logprob: -3.3255324363708496
    7. ']==' → logprob: -3.8255324363708496
    8. ')==' → logprob: -5.82553243637085
    9. '!=' → logprob: -6.32553243637085
    10. '>=' → logprob: -6.45053243637085

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09981264173984528
    2. '==' → logprob: -2.4748127460479736
    3. ' !=' → logprob: -5.5998125076293945
    4. ' in' → logprob: -5.7248125076293945
    5. '=='' → logprob: -6.7248125076293945
    6. ' ' → logprob: -7.2248125076293945
    7. '!=' → logprob: -7.4748125076293945
    8. ' =='' → logprob: -7.9748125076293945
    9. '=' → logprob: -8.599812507629395
    10. ':' → logprob: -9.099812507629395

Token 79: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6298854947090149
    2. ' '' → logprob: -0.8798854947090149
    3. 's' → logprob: -3.25488543510437
    4. ' s' → logprob: -4.629885673522949
    5. '0' → logprob: -6.504885673522949
    6. ''s' → logprob: -6.629885673522949
    7. ' ' → logprob: -7.379885673522949
    8. '"' → logprob: -8.56738567352295
    9. ' "' → logprob: -9.87988567352295
    10. ' '\' → logprob: -10.00488567352295

Token 80: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023138554766774178
    2. ''' → logprob: -4.773138523101807
    3. '1' → logprob: -5.148138523101807
    4. 's' → logprob: -5.148138523101807
    5. '9' → logprob: -7.148138523101807
    6. ''s' → logprob: -7.898138523101807
    7. 'a' → logprob: -8.398138999938965
    8. ')' → logprob: -8.835638999938965
    9. ' ' → logprob: -9.210638999938965
    10. '5' → logprob: -9.273138999938965

Token 81: ''' (ID: 6)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07717370241880417
    2. ''' → logprob: -2.8271737098693848
    3. ':' → logprob: -4.577173709869385
    4. ' ':' → logprob: -5.577173709869385
    5. '':
' → logprob: -7.327173709869385
    6. ' '' → logprob: -9.202173233032227
    7. '':
' → logprob: -9.452173233032227
    8. ''s' → logprob: -9.952173233032227
    9. '0' → logprob: -10.827173233032227
    10. ' or' → logprob: -11.077173233032227

Token 82: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0075296093709766865
    2. ' :' → logprob: -5.1325297355651855
    3. ' and' → logprob: -6.6325297355651855
    4. ':
' → logprob: -8.882529258728027
    5. '):' → logprob: -9.632529258728027
    6. ' or' → logprob: -10.007529258728027
    7. 'and' → logprob: -11.257529258728027
    8. ':return' → logprob: -12.007529258728027
    9. ':**' → logprob: -12.632529258728027
    10. ' :
' → logprob: -13.257529258728027

Token 83: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.023377086967229843
    2. 's' → logprob: -4.023376941680908
    3. ' ' → logprob: -6.273376941680908
    4. ' not' → logprob: -6.648376941680908
    5. ' is' → logprob: -7.023376941680908
    6. ' '' → logprob: -8.148377418518066
    7. ' N' → logprob: -8.648377418518066
    8. ' (' → logprob: -8.773377418518066
    9. ' ' → logprob: -9.273377418518066
    10. ''' → logprob: -9.398377418518066

Token 84: '[' (ID: 58)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.42668962478637695
    2. '[' → logprob: -1.426689624786377
    3. ' [' → logprob: -3.551689624786377
    4. ' ==' → logprob: -3.676689624786377
    5. ' s' → logprob: -3.926689624786377
    6. ' ' → logprob: -4.176689624786377
    7. 's' → logprob: -4.676689624786377
    8. '[s' → logprob: -5.551689624786377
    9. '==' → logprob: -5.801689624786377
    10. '   ' → logprob: -8.051689147949219

Token 85: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.131797432899475
    2. ' N' → logprob: -1.256797432899475
    3. ' ' → logprob: -1.631797432899475
    4. '0' → logprob: -1.756797432899475
    5. '1' → logprob: -4.5067973136901855
    6. '[' → logprob: -5.7567973136901855
    7. ' '' → logprob: -6.3817973136901855
    8. ' s' → logprob: -6.3817973136901855
    9. 's' → logprob: -6.5067973136901855
    10. '[N' → logprob: -6.8817973136901855

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0740085318684578
    2. ']==' → logprob: -2.8240084648132324
    3. ':]' → logprob: -5.949008464813232
    4. ':' → logprob: -5.949008464813232
    5. ' ]' → logprob: -6.199008464813232
    6. ']=='' → logprob: -7.199008464813232
    7. ' ' → logprob: -7.324008464813232
    8. '0' → logprob: -7.699008464813232
    9. 'N' → logprob: -7.824008464813232
    10. ':N' → logprob: -8.07400894165039

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48221108317375183
    2. '==' → logprob: -0.9822111129760742
    3. '=='' → logprob: -5.482211112976074
    4. ' ' → logprob: -6.232211112976074
    5. ' =='' → logprob: -7.482211112976074
    6. '<|end|>' → logprob: -7.982211112976074
    7. '[' → logprob: -8.607211112976074
    8. ')' → logprob: -8.857211112976074
    9. '=' → logprob: -8.982211112976074
    10. ' !=' → logprob: -8.982211112976074

Token 88: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.33816999197006226
    2. ''' → logprob: -1.463170051574707
    3. 's' → logprob: -3.463170051574707
    4. ' s' → logprob: -4.213170051574707
    5. ''s' → logprob: -4.963170051574707
    6. ' ' → logprob: -6.338170051574707
    7. '  ' → logprob: -9.088170051574707
    8. '0' → logprob: -9.338170051574707
    9. '1' → logprob: -9.713170051574707
    10. '   ' → logprob: -10.338170051574707

Token 89: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4509499967098236
    2. '0' → logprob: -1.200950026512146
    3. ''' → logprob: -3.2009499073028564
    4. 's' → logprob: -4.0759501457214355
    5. ''s' → logprob: -6.7009501457214355
    6. 'N' → logprob: -7.3259501457214355
    7. ' '' → logprob: -7.4509501457214355
    8. '':' → logprob: -7.9509501457214355
    9. ' ' → logprob: -8.200949668884277
    10. '['' → logprob: -9.388449668884277

Token 90: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.28802359104156494
    2. ''' → logprob: -1.538023591041565
    3. ':' → logprob: -3.4130234718322754
    4. '):' → logprob: -7.413023471832275
    5. ' ':' → logprob: -7.538023471832275
    6. ''):' → logprob: -7.788023471832275
    7. '':
' → logprob: -7.913023471832275
    8. ')' → logprob: -8.163023948669434
    9. ' '' → logprob: -9.163023948669434
    10. ')':' → logprob: -9.913023948669434

Token 91: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009866582229733467
    2. '       ' → logprob: -4.759866714477539
    3. '   ' → logprob: -7.634866714477539
    4. ':
' → logprob: -7.759866714477539
    5. '
' → logprob: -9.759866714477539
    6. '):' → logprob: -9.884866714477539
    7. ',' → logprob: -9.884866714477539
    8. ' :' → logprob: -10.134866714477539
    9. ':return' → logprob: -10.384866714477539
    10. '<|end|>' → logprob: -10.884866714477539

Token 92: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19295993447303772
    2. '   ' → logprob: -1.8179599046707153
    3. '
' → logprob: -5.817959785461426
    4. '\n' → logprob: -5.942959785461426
    5. ' return' → logprob: -6.317959785461426
    6. '    ' → logprob: -6.567959785461426
    7. 'print' (adapté à ' print') → logprob: -6.942959785461426
    8. 'return' → logprob: -7.192959785461426
    9. ':' → logprob: -7.317959785461426
    10. '    
' → logprob: -7.442959785461426

Token 93: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030994828790426254
    2. '('' → logprob: -4.155994892120361
    3. '("' → logprob: -4.780994892120361
    4. '(-' → logprob: -5.280994892120361
    5. '(False' → logprob: -6.905994892120361
    6. '()' → logprob: -8.655994415283203
    7. '(True' → logprob: -9.280994415283203
    8. '(None' → logprob: -10.780994415283203
    9. '("("' → logprob: -11.030994415283203
    10. '("")' → logprob: -11.780994415283203

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001049736310960725
    2. ' ' → logprob: -9.625104904174805
    3. ')' → logprob: -10.500104904174805
    4. '2' → logprob: -11.750104904174805
    5. ' )' → logprob: -14.500104904174805
    6. '9' → logprob: -14.750104904174805
    7. '')' → logprob: -14.875104904174805
    8. ''' → logprob: -14.875104904174805
    9. '  ' → logprob: -15.312604904174805
    10. '+' → logprob: -15.437604904174805

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047202190035022795
    2. ')
' → logprob: -7.875472068786621
    3. '   ' → logprob: -9.375472068786621
    4. '       ' → logprob: -12.625472068786621
    5. ' )' → logprob: -13.250472068786621
    6. '')' → logprob: -14.125472068786621
    7. ')
' → logprob: -14.750472068786621
    8. ')return' → logprob: -14.750472068786621
    9. ' ' → logprob: -15.875472068786621
    10. '`)' → logprob: -16.250471115112305

Token 96: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11503200232982635
    2. '       ' → logprob: -2.2400319576263428
    3. '
' → logprob: -7.490032196044922
    4. '<|end|>' → logprob: -7.490032196044922
    5. ')' → logprob: -7.615032196044922
    6. '```' → logprob: -8.365032196044922
    7. '    
' → logprob: -8.865032196044922
    8. '	' → logprob: -9.990032196044922
    9. ' ' → logprob: -10.115032196044922
    10. '\' → logprob: -10.865032196044922

Token 97: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01270458847284317
    2. '   ' → logprob: -4.387704372406006
    3. ' ' → logprob: -10.262704849243164
    4. '    ' → logprob: -10.762704849243164
    5. ' else' → logprob: -10.762704849243164
    6. '  ' → logprob: -10.887704849243164
    7. '	' → logprob: -11.012704849243164
    8. '      ' → logprob: -11.012704849243164
    9. '     ' → logprob: -11.137704849243164
    10. ' return' → logprob: -11.512704849243164

Token 98: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06904766708612442
    2. ' 
' → logprob: -3.944047689437866
    3. '    
' → logprob: -4.319047451019287
    4. '   ' → logprob: -4.319047451019287
    5. '<|end|>' → logprob: -4.694047451019287
    6. '  
' → logprob: -5.319047451019287
    7. '\n' → logprob: -6.069047451019287
    8. '```' → logprob: -6.944047451019287
    9. '   
' → logprob: -7.069047451019287
    10. ' ' → logprob: -7.069047451019287

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8476477265357971
    2. ' 
' → logprob: -1.5976476669311523
    3. '   ' → logprob: -1.8476476669311523
    4. '<|end|>' → logprob: -2.2226476669311523
    5. '    
' → logprob: -3.3476476669311523
    6. ' ' → logprob: -3.7226476669311523
    7. '  
' → logprob: -4.222647666931152
    8. '\n' → logprob: -4.347647666931152
    9. '   
' → logprob: -5.722647666931152
    10. '\' → logprob: -5.972647666931152

Token 100: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3847963809967041
    2. '
' → logprob: -1.634796380996704
    3. ' ' → logprob: -2.759796380996704
    4. '<|end|>' → logprob: -3.759796380996704
    5. '   ' → logprob: -4.384796142578125
    6. '    
' → logprob: -4.884796142578125
    7. '  
' → logprob: -5.384796142578125
    8. 'n' → logprob: -5.884796142578125
    9. '\n' → logprob: -5.884796142578125
    10. ' for' → logprob: -6.634796142578125

Token 101: ' not' (ID: 625)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3993872106075287
    2. ' is' → logprob: -1.149387240409851
    3. ' not' → logprob: -5.399387359619141
    4. ' len' → logprob: -5.899387359619141
    5. ' ' → logprob: -6.274387359619141
    6. 's' → logprob: -6.274387359619141
    7. ' N' → logprob: -7.524387359619141
    8. ' ' → logprob: -8.14938735961914
    9. ' l' → logprob: -8.89938735961914
    10. ' (' → logprob: -9.02438735961914

Token 102: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0017641937592998147
    2. 'is' → logprob: -6.626764297485352
    3. 's' → logprob: -8.251764297485352
    4. ' s' → logprob: -8.751764297485352
    5. ' ' → logprob: -12.251764297485352
    6. ' all' → logprob: -12.626764297485352
    7. ' (' → logprob: -12.876764297485352
    8. ' ' → logprob: -13.126764297485352
    9. '(is' → logprob: -13.376764297485352
    10. ' any' → logprob: -13.626764297485352

Token 103: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.2339172065258026
    2. '_' → logprob: -1.608917236328125
    3. '_p' → logprob: -4.858917236328125
    4. '_s' → logprob: -8.483917236328125
    5. '(' → logprob: -9.358917236328125
    6. 's' → logprob: -9.858917236328125
    7. '_(' → logprob: -9.858917236328125
    8. '_pa' → logprob: -10.108917236328125
    9. '_pres' → logprob: -10.233917236328125
    10. '(_' → logprob: -10.858917236328125

Token 104: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.002038202714174986
    2. 'ind' → logprob: -6.25203800201416
    3. 'ndrome' → logprob: -9.25203800201416
    4. 'in' → logprob: -11.75203800201416
    5. 'i' → logprob: -13.50203800201416
    6. 'inde' → logprob: -13.75203800201416
    7. 'e' → logprob: -14.12703800201416
    8. 'id' → logprob: -14.87703800201416
    9. 'indre' → logprob: -15.12703800201416
    10. 'd' → logprob: -15.37703800201416

Token 105: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0017352750292047858
    2. '(' → logprob: -6.376735210418701
    3. ' (' → logprob: -10.50173568725586
    4. '(
' → logprob: -13.12673568725586
    5. 's' → logprob: -13.37673568725586
    6. '(n' → logprob: -13.75173568725586
    7. '<|end|>' → logprob: -14.75173568725586
    8. ')' → logprob: -16.37673568725586
    9. '((' → logprob: -16.50173568725586
    10. '('' → logprob: -16.75173568725586

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1286787986755371
    2. '(s' → logprob: -2.503678798675537
    3. '(' → logprob: -3.503678798675537
    4. ',s' → logprob: -5.628678798675537
    5. ' ,' → logprob: -5.628678798675537
    6. 's' → logprob: -6.878678798675537
    7. ' (' → logprob: -7.878678798675537
    8. ')' → logprob: -9.128679275512695
    9. ',(' → logprob: -9.503679275512695
    10. ',
' → logprob: -11.003679275512695

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20207616686820984
    2. ' ' → logprob: -2.0770761966705322
    3. '2' → logprob: -3.2020761966705322
    4. '0' → logprob: -4.077075958251953
    5. ')' → logprob: -11.202075958251953
    6. '3' → logprob: -11.577075958251953
    7. '(' → logprob: -12.327075958251953
    8. ' N' → logprob: -13.327075958251953
    9. '   ' → logprob: -13.577075958251953
    10. '4' → logprob: -13.702075958251953

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047506991773843765
    2. '2' → logprob: -3.1725070476531982
    3. '0' → logprob: -5.422506809234619
    4. ' ' → logprob: -9.672507286071777
    5. 'N' → logprob: -11.797507286071777
    6. ')' → logprob: -12.672507286071777
    7. '(' → logprob: -12.922507286071777
    8. '3' → logprob: -13.297507286071777
    9. 's' → logprob: -14.172507286071777
    10. '   ' → logprob: -14.297507286071777

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000455340719781816
    2. ' ,' → logprob: -7.750455379486084
    3. ',N' → logprob: -11.750454902648926
    4. '+' → logprob: -11.875454902648926
    5. ' ' → logprob: -12.875454902648926
    6. ',len' → logprob: -13.000454902648926
    7. ',n' → logprob: -13.750454902648926
    8. ')' → logprob: -13.875454902648926
    9. ' +' → logprob: -14.625454902648926
    10. '   ' → logprob: -14.750454902648926

Token 110: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007612544111907482
    2. ' N' → logprob: -4.882612705230713
    3. ' ' → logprob: -12.757612228393555
    4. 'len' → logprob: -13.382612228393555
    5. '   ' → logprob: -14.507612228393555
    6. ' len' → logprob: -14.882612228393555
    7. ')' → logprob: -14.882612228393555
    8. '	N' → logprob: -15.257612228393555
    9. '  ' → logprob: -15.632612228393555
    10. 'n' → logprob: -16.632612228393555

Token 111: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03661961853504181
    2. '-' → logprob: -4.161619663238525
    3. ')' → logprob: -4.411619663238525
    4. ' ):' → logprob: -5.036619663238525
    5. ' -' → logprob: -6.661619663238525
    6. '):
' → logprob: -8.036619186401367
    7. ' )' → logprob: -10.286619186401367
    8. ' ' → logprob: -10.411619186401367
    9. ':' → logprob: -10.661619186401367
    10. '   ' → logprob: -11.036619186401367

Token 112: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00806590635329485
    2. ' ' → logprob: -5.008065700531006
    3. '2' → logprob: -6.633065700531006
    4. ')' → logprob: -11.633066177368164
    5. '3' → logprob: -11.633066177368164
    6. '0' → logprob: -11.758066177368164
    7. '4' → logprob: -13.008066177368164
    8. '   ' → logprob: -13.195566177368164
    9. '  ' → logprob: -13.883066177368164
    10. '5' → logprob: -14.133066177368164

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.543733904138207e-05
    2. '2' → logprob: -9.62509536743164
    3. ' ' → logprob: -10.50009536743164
    4. '0' → logprob: -14.75009536743164
    5. '3' → logprob: -14.93759536743164
    6. ')' → logprob: -15.18759536743164
    7. '   ' → logprob: -15.37509536743164
    8. '```' → logprob: -16.25009536743164
    9. '4' → logprob: -16.37509536743164
    10. '  ' → logprob: -17.06259536743164

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004644792061299086
    2. ')' → logprob: -5.379644870758057
    3. ' ):' → logprob: -11.254644393920898
    4. ':' → logprob: -12.129644393920898
    5. '):
' → logprob: -12.254644393920898
    6. ')：' → logprob: -15.254644393920898
    7. '   ' → logprob: -15.379644393920898
    8. ''):' → logprob: -15.504644393920898
    9. ' ' → logprob: -15.629644393920898
    10. ')):' → logprob: -15.879644393920898

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0713212639093399
    2. ':' → logprob: -2.6963212490081787
    3. '):' → logprob: -7.321321487426758
    4. '   ' → logprob: -7.696321487426758
    5. ')' → logprob: -9.946321487426758
    6. ' :' → logprob: -10.321321487426758
    7. ':
' → logprob: -10.821321487426758
    8. '<|end|>' → logprob: -10.821321487426758
    9. ',' → logprob: -10.946321487426758
    10. '        
' → logprob: -11.071321487426758

Token 116: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.0731734037399292
    2. 'print' (adapté à ' print') → logprob: -1.1981734037399292
    3. '       ' → logprob: -1.5731734037399292
    4. '   ' → logprob: -1.9481734037399292
    5. '    ' → logprob: -5.823173522949219
    6. ' ' → logprob: -6.198173522949219
    7. '  ' → logprob: -8.198173522949219
    8. '	print' → logprob: -8.823173522949219
    9. '\n' → logprob: -8.948173522949219
    10. ' 
' → logprob: -8.948173522949219

Token 117: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2525036036968231
    2. '(' → logprob: -1.5025036334991455
    3. '('' → logprob: -8.002503395080566
    4. '(
' → logprob: -9.377503395080566
    5. '(N' → logprob: -9.377503395080566
    6. '('-' → logprob: -10.877503395080566
    7. '("-' → logprob: -11.627503395080566
    8. '((' → logprob: -11.627503395080566
    9. '(s' → logprob: -11.877503395080566
    10. '()' → logprob: -12.502503395080566

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.625017166137695
    3. '2' → logprob: -12.375017166137695
    4. ')' → logprob: -14.187517166137695
    5. '   ' → logprob: -14.875017166137695
    6. '-' → logprob: -15.312517166137695
    7. '"' → logprob: -15.375017166137695
    8. '```' → logprob: -15.375017166137695
    9. '  ' → logprob: -15.500017166137695
    10. ''' → logprob: -15.875017166137695

Token 119: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10076340287923813
    2. ')
' → logprob: -2.4757633209228516
    3. '       ' → logprob: -4.475763320922852
    4. '   ' → logprob: -7.975763320922852
    5. ')return' → logprob: -11.600763320922852
    6. ')
' → logprob: -12.225763320922852
    7. '`)' → logprob: -13.225763320922852
    8. '')' → logprob: -13.350763320922852
    9. ' )' → logprob: -13.475763320922852
    10. '           ' → logprob: -13.725763320922852

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007866155356168747
    2. '   ' → logprob: -4.882866382598877
    3. '<|end|>' → logprob: -8.632865905761719
    4. '	' → logprob: -10.257865905761719
    5. ')' → logprob: -11.132865905761719
    6. '
' → logprob: -12.132865905761719
    7. ' ' → logprob: -12.257865905761719
    8. '<|end|>' → logprob: -12.882865905761719
    9. '```' → logprob: -13.007865905761719
    10. '      ' → logprob: -13.132865905761719

Token 121: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059831892140209675
    2. '   ' → logprob: -5.130983352661133
    3. '<|end|>' → logprob: -11.130983352661133
    4. '
' → logprob: -11.755983352661133
    5. ' ' → logprob: -12.005983352661133
    6. '	' → logprob: -12.005983352661133
    7. '           ' → logprob: -12.630983352661133
    8. '     ' → logprob: -12.880983352661133
    9. '  ' → logprob: -13.005983352661133
    10. 'return' (adapté à ' return') → logprob: -13.005983352661133

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04861881211400032
    2. ')' → logprob: -3.548618793487549
    3. '<|end|>' → logprob: -4.673618793487549
    4. '    
' → logprob: -4.923618793487549
    5. '
' → logprob: -7.048618793487549
    6. '    ' → logprob: -8.548619270324707
    7. ' 
' → logprob: -9.048619270324707
    8. '  ' → logprob: -9.048619270324707
    9. '  
' → logprob: -9.173619270324707
    10. '\n' → logprob: -9.298619270324707

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015592486597597599
    2. ')' → logprob: -5.015592575073242
    3. '    
' → logprob: -5.390592575073242
    4. '<|end|>' → logprob: -6.015592575073242
    5. ' 
' → logprob: -7.390592575073242
    6. '
' → logprob: -7.515592575073242
    7. '#' → logprob: -8.640592575073242
    8. '  
' → logprob: -9.015592575073242
    9. '    ' → logprob: -9.765592575073242
    10. '\n' → logprob: -9.890592575073242

Token 124: ' root' (ID: 6577)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25980252027511597
    2. 'p' → logprob: -2.5098025798797607
    3. 'print' → logprob: -2.7598025798797607
    4. 'n' → logprob: -3.8848025798797607
    5. ' 
' → logprob: -4.509802341461182
    6. '    
' → logprob: -4.634802341461182
    7. ')' → logprob: -4.759802341461182
    8. ' ' → logprob: -4.759802341461182
    9. '#' → logprob: -5.384802341461182
    10. 'i' → logprob: -5.634802341461182

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6290466785430908
    2. '_' → logprob: -1.0040466785430908
    3. 's' → logprob: -2.754046678543091
    4. '(' → logprob: -4.004046440124512
    5. '=' → logprob: -4.379046440124512
    6. '_length' → logprob: -6.254046440124512
    7. '_len' → logprob: -7.004046440124512
    8. '_count' → logprob: -7.629046440124512
    9. '()' → logprob: -8.254046440124512
    10. '2' → logprob: -8.504046440124512

Token 126: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1710764169692993
    2. '1' → logprob: -1.9210764169692993
    3. '0' → logprob: -2.0460762977600098
    4. ' int' → logprob: -2.4210762977600098
    5. 'N' → logprob: -2.6710762977600098
    6. ' ' → logprob: -2.6710762977600098
    7. ' N' → logprob: -3.0460762977600098
    8. '2' → logprob: -3.0460762977600098
    9. ' (' → logprob: -3.1710762977600098
    10. '(int' → logprob: -3.4210762977600098

Token 127: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8170720338821411
    2. '0' → logprob: -1.8170720338821411
    3. '1' → logprob: -2.1920719146728516
    4. 'N' → logprob: -2.3170719146728516
    5. '2' → logprob: -2.4420719146728516
    6. '(int' → logprob: -3.0670719146728516
    7. '(' → logprob: -3.4420719146728516
    8. '(N' → logprob: -4.442071914672852
    9. '''' → logprob: -6.442071914672852
    10. '3' → logprob: -6.817071914672852

Token 128: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1880972534418106
    2. '
' → logprob: -2.6880972385406494
    3. '<|end|>' → logprob: -3.1880972385406494
    4. ' ' → logprob: -3.3130972385406494
    5. '0' → logprob: -4.4380974769592285
    6. ',' → logprob: -6.1880974769592285
    7. ')' → logprob: -6.4380974769592285
    8. ' +' → logprob: -6.6880974769592285
    9. ' 
' → logprob: -6.6880974769592285
    10. '+
' → logprob: -6.9380974769592285

Token 129: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6563315987586975
    2. '<|end|>' → logprob: -1.2813315391540527
    3. '   ' → logprob: -2.0313315391540527
    4. ' ' → logprob: -4.156331539154053
    5. '+' → logprob: -4.406331539154053
    6. '    
' → logprob: -5.031331539154053
    7. '<|end|>' → logprob: -5.281331539154053
    8. ' 
' → logprob: -5.531331539154053
    9. ' for' → logprob: -5.906331539154053
    10. ' +' → logprob: -6.031331539154053

Token 130: ' i' (ID: 575)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09761454910039902
    2. 'for' → logprob: -2.9726145267486572
    3. 'root' → logprob: -4.097614765167236
    4. 'i' (adapté à ' i') → logprob: -4.347614765167236
    5. ' while' → logprob: -5.347614765167236
    6. 'N' → logprob: -6.847614765167236
    7. 'n' → logprob: -7.222614765167236
    8. 'stack' → logprob: -7.347614765167236
    9. '   ' → logprob: -7.472614765167236
    10. 'r' → logprob: -7.597614765167236

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32834410667419434
    2. ' =' → logprob: -1.3283441066741943
    3. 'n' → logprob: -4.453344345092773
    4. ' ' → logprob: -6.078344345092773
    5. 'f' → logprob: -7.953344345092773
    6. '+' → logprob: -7.953344345092773
    7. ' +=' → logprob: -8.953344345092773
    8. ' n' → logprob: -10.078344345092773
    9. 's' → logprob: -10.203344345092773
    10. ',' → logprob: -10.453344345092773

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6076147556304932
    2. '1' → logprob: -1.4826147556304932
    3. '2' → logprob: -1.7326147556304932
    4. ' N' → logprob: -3.482614755630493
    5. 'N' → logprob: -4.232614517211914
    6. ' root' → logprob: -5.732614517211914
    7. '0' → logprob: -6.607614517211914
    8. 'root' → logprob: -6.732614517211914
    9. ' s' → logprob: -9.607614517211914
    10. ' i' → logprob: -9.607614517211914

Token 133: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28602859377861023
    2. '1' → logprob: -1.9110286235809326
    3. 'N' → logprob: -2.4110286235809326
    4. 'root' → logprob: -5.1610283851623535
    5. '0' → logprob: -5.5360283851623535
    6. ' ' → logprob: -7.2860283851623535
    7. 'len' → logprob: -8.161028861999512
    8. ' N' → logprob: -8.536028861999512
    9. '3' → logprob: -9.286028861999512
    10. ' root' → logprob: -10.723528861999512

Token 134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0207798480987549
    2. ' 
' → logprob: -1.3957798480987549
    3. '
' → logprob: -2.020779848098755
    4. '<|end|>' → logprob: -2.145779848098755
    5. ' while' → logprob: -2.270779848098755
    6. 'while' → logprob: -4.395779609680176
    7. '   ' → logprob: -4.520779609680176
    8. '	while' → logprob: -5.645779609680176
    9. ',' → logprob: -5.895779609680176
    10. ':' → logprob: -6.395779609680176

Token 136: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07062992453575134
    2. 'i' → logprob: -2.695629835128784
    3. ' s' → logprob: -8.320630073547363
    4. ' root' → logprob: -8.445630073547363
    5. ' ' → logprob: -8.820630073547363
    6. 's' → logprob: -10.320630073547363
    7. 'root' → logprob: -10.695630073547363
    8. ' True' → logprob: -11.695630073547363
    9. '(i' → logprob: -11.945630073547363
    10. ' N' → logprob: -12.445630073547363

Token 138: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10850410908460617
    2. '<=' → logprob: -2.358504056930542
    3. ' <' → logprob: -5.483504295349121
    4. '*' → logprob: -6.233504295349121
    5. '<' → logprob: -6.858504295349121
    6. ' *' → logprob: -7.233504295349121
    7. ' ' → logprob: -8.233504295349121
    8. '*i' → logprob: -9.733504295349121
    9. '<N' → logprob: -10.983504295349121
    10. '<len' → logprob: -11.358504295349121

Token 139: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01608293503522873
    2. ' N' → logprob: -4.141082763671875
    3. ' ' → logprob: -10.641082763671875
    4. '(' → logprob: -11.516082763671875
    5. ' (' → logprob: -12.141082763671875
    6. '(N' → logprob: -13.141082763671875
    7. '   ' → logprob: -13.516082763671875
    8. 'root' → logprob: -13.766082763671875
    9. '	N' → logprob: -13.766082763671875
    10. 's' → logprob: -14.141082763671875

Token 140: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6406915187835693
    2. ':' → logprob: -0.7656915187835693
    3. 'and' → logprob: -5.140691757202148
    4. ':
' → logprob: -6.140691757202148
    5. ' :' → logprob: -10.515691757202148
    6. '   ' → logprob: -11.515691757202148
    7. '*' → logprob: -12.640691757202148
    8. ' ' → logprob: -12.765691757202148
    9. ':

' → logprob: -13.640691757202148
    10. 's' → logprob: -13.765691757202148

Token 141: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01117101963609457
    2. ':
' → logprob: -5.011170864105225
    3. ' :' → logprob: -5.761170864105225
    4. ' ' → logprob: -7.886170864105225
    5. ' :
' → logprob: -8.136171340942383
    6. '   ' → logprob: -8.636171340942383
    7. ' and' → logprob: -8.761171340942383
    8. ',' → logprob: -9.386171340942383
    9. ' if' → logprob: -10.761171340942383
    10. '       ' → logprob: -10.886171340942383

Token 142: ' print' (ID: 2123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5405293107032776
    2. ':' → logprob: -1.7905292510986328
    3. 's' → logprob: -2.790529251098633
    4. ' :' → logprob: -3.165529251098633
    5. ' if' → logprob: -3.165529251098633
    6. ' i' → logprob: -3.290529251098633
    7. 'if' → logprob: -4.290529251098633
    8. 'i' → logprob: -4.540529251098633
    9. ' 
' → logprob: -4.915529251098633
    10. ' s' → logprob: -5.165529251098633

Token 143: '(str' (ID: 7946)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7103064656257629
    2. '(root' → logprob: -1.8353064060211182
    3. '(i' → logprob: -1.8353064060211182
    4. '(' → logprob: -1.9603064060211182
    5. '("' → logprob: -4.085306644439697
    6. '(s' → logprob: -4.210306644439697
    7. '()' → logprob: -4.710306644439697
    8. 'root' → logprob: -5.210306644439697
    9. ''' → logprob: -6.960306644439697
    10. '('*' → logprob: -8.210306167602539

Token 144: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.47866061329841614
    2. '(i' → logprob: -0.9786605834960938
    3. '(s' → logprob: -5.853660583496094
    4. '(' → logprob: -6.853660583496094
    5. '('' → logprob: -8.728660583496094
    6. 'root' → logprob: -8.978660583496094
    7. '((' → logprob: -9.228660583496094
    8. '(int' → logprob: -9.853660583496094
    9. ' (' → logprob: -10.853660583496094
    10. '[root' → logprob: -11.228660583496094

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2198496162891388
    2. '+' → logprob: -1.9698495864868164
    3. ' +' → logprob: -3.9698495864868164
    4. ',' → logprob: -4.344849586486816
    5. '),' → logprob: -4.344849586486816
    6. ')+' → logprob: -4.969849586486816
    7. '))' → logprob: -5.469849586486816
    8. ' )' → logprob: -7.469849586486816
    9. '*' → logprob: -7.969849586486816
    10. ',end' → logprob: -8.469849586486816

Token 146: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8128023147583008
    2. ',' → logprob: -1.3128023147583008
    3. ')' → logprob: -1.5628023147583008
    4. ' +' → logprob: -3.187802314758301
    5. ',end' → logprob: -3.687802314758301
    6. ' ,' → logprob: -5.062802314758301
    7. ' )' → logprob: -6.312802314758301
    8. ')
' → logprob: -6.562802314758301
    9. '+'' → logprob: -8.3128023147583
    10. 'end' → logprob: -8.5628023147583

Token 147: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07614842802286148
    2. '"' → logprob: -2.826148509979248
    3. ''s' → logprob: -5.451148509979248
    4. ''-' → logprob: -6.201148509979248
    5. ''i' → logprob: -6.326148509979248
    6. ' '' → logprob: -6.576148509979248
    7. '','' → logprob: -7.076148509979248
    8. '')' → logprob: -7.076148509979248
    9. ''.' → logprob: -7.201148509979248
    10. ' ' → logprob: -7.701148509979248

Token 148: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013548177666962147
    2. '"' → logprob: -5.013548374176025
    3. ' ' → logprob: -6.138548374176025
    4. ''i' → logprob: -6.638548374176025
    5. ')' → logprob: -6.888548374176025
    6. ' '' → logprob: -7.263548374176025
    7. ' i' → logprob: -8.263547897338867
    8. '-' → logprob: -8.513547897338867
    9. '(i' → logprob: -8.513547897338867
    10. ' )' → logprob: -8.638547897338867

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01025026012212038
    2. ' +' → logprob: -4.760250091552734
    3. '+i' → logprob: -6.635250091552734
    4. ')' → logprob: -8.385250091552734
    5. '<|end|>' → logprob: -11.135250091552734
    6. 'root' → logprob: -11.385250091552734
    7. '+
' → logprob: -11.510250091552734
    8. ',' → logprob: -11.760250091552734
    9. '*i' → logprob: -11.760250091552734
    10. 'i' → logprob: -11.885250091552734

Token 150: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00022916549642104656
    2. ' str' → logprob: -8.500228881835938
    3. 's' → logprob: -10.625228881835938
    4. '(str' → logprob: -13.875228881835938
    5. ' ' → logprob: -15.750228881835938
    6. 'st' → logprob: -16.500228881835938
    7. '	str' → logprob: -16.875228881835938
    8. '   ' → logprob: -17.125228881835938
    9. '=str' → logprob: -17.375228881835938
    10. '[str' → logprob: -17.625228881835938

Token 151: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6333774328231812
    2. 'i' → logprob: -0.7583774328231812
    3. 'root' → logprob: -8.008377075195312
    4. ' i' → logprob: -8.508377075195312
    5. '(root' → logprob: -8.633377075195312
    6. '(' → logprob: -10.133377075195312
    7. ' (' → logprob: -12.383377075195312
    8. 's' → logprob: -12.758377075195312
    9. '(str' → logprob: -13.008377075195312
    10. '   ' → logprob: -13.008377075195312

Token 152: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07964535057544708
    2. ')' → logprob: -2.5796453952789307
    3. ')
' → logprob: -7.829645156860352
    4. ')`
' → logprob: -8.454645156860352
    5. '')' → logprob: -10.204645156860352
    6. '')
' → logprob: -10.204645156860352
    7. '+' → logprob: -10.829645156860352
    8. ')

' → logprob: -11.454645156860352
    9. ')'
' → logprob: -11.704645156860352
    10. ')')
' → logprob: -11.954645156860352

Token 153: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7884126305580139
    2. '       ' → logprob: -0.9134126305580139
    3. '<|end|>' → logprob: -2.288412570953369
    4. '   ' → logprob: -3.913412570953369
    5. '<|end|>' → logprob: -5.413412570953369
    6. ' 
' → logprob: -5.788412570953369
    7. ' i' → logprob: -5.913412570953369
    8. '  
' → logprob: -6.538412570953369
    9. '        
' → logprob: -6.538412570953369
    10. '    
' → logprob: -6.788412570953369

Token 154: ' if' (ID: 538)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.38368022441864014
    2. 'i' → logprob: -1.3836802244186401
    3. 'if' (adapté à ' if') → logprob: -2.8836803436279297
    4. ' root' → logprob: -5.38368034362793
    5. ' i' → logprob: -5.88368034362793
    6. '   ' → logprob: -6.13368034362793
    7. ' if' → logprob: -6.13368034362793
    8. 'r' → logprob: -9.13368034362793
    9. ' ' → logprob: -9.75868034362793
    10. '  ' → logprob: -10.25868034362793

Token 155: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24412794411182404
    2. 'i' → logprob: -2.3691279888153076
    3. 'root' → logprob: -2.8691279888153076
    4. ' s' → logprob: -2.9941279888153076
    5. ' i' → logprob: -5.4941277503967285
    6. ' root' → logprob: -5.7441277503967285
    7. '(s' → logprob: -6.2441277503967285
    8. 'is' → logprob: -6.2441277503967285
    9. 'int' → logprob: -6.9941277503967285
    10. '(i' → logprob: -7.2441277503967285

Token 156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018647374818101525
    2. '[root' → logprob: -6.501864910125732
    3. 'i' → logprob: -8.626864433288574
    4. '[' → logprob: -8.876864433288574
    5. '[s' → logprob: -10.626864433288574
    6. 'root' → logprob: -11.501864433288574
    7. '==' → logprob: -12.751864433288574
    8. 's' → logprob: -13.876864433288574
    9. ' i' → logprob: -14.251864433288574
    10. '[r' → logprob: -14.376864433288574

Token 157: ' -' (ID: 533)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.265082985162735
    2. ' ==' → logprob: -1.5150829553604126
    3. '=='' → logprob: -5.015082836151123
    4. ''' → logprob: -6.140082836151123
    5. ']' → logprob: -6.515082836151123
    6. ']==' → logprob: -6.890082836151123
    7. ')' → logprob: -7.015082836151123
    8. '=' → logprob: -8.140083312988281
    9. ']=='' → logprob: -9.140083312988281
    10. ' =='' → logprob: -9.140083312988281

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000735177774913609
    2. ' ' → logprob: -8.00073528289795
    3. '2' → logprob: -8.37573528289795
    4. ''' → logprob: -9.12573528289795
    5. '   ' → logprob: -10.62573528289795
    6. ''s' → logprob: -11.75073528289795
    7. 'i' → logprob: -12.37573528289795
    8. '-' → logprob: -12.37573528289795
    9. 'root' → logprob: -12.62573528289795
    10. 's' → logprob: -12.68823528289795

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040338258258998394
    2. '2' → logprob: -8.00040340423584
    3. 'root' → logprob: -10.37540340423584
    4. ' ' → logprob: -11.00040340423584
    5. ''' → logprob: -11.25040340423584
    6. 'i' → logprob: -13.00040340423584
    7. ''s' → logprob: -14.18790340423584
    8. ' root' → logprob: -14.31290340423584
    9. '   ' → logprob: -14.31290340423584
    10. 's' → logprob: -14.37540340423584

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13387413322925568
    2. '==' → logprob: -2.6338741779327393
    3. ']==' → logprob: -3.2588741779327393
    4. '=='' → logprob: -5.63387393951416
    5. ' ==' → logprob: -5.75887393951416
    6. ']=='' → logprob: -5.75887393951416
    7. '=' → logprob: -6.00887393951416
    8. '']' → logprob: -6.75887393951416
    9. ''' → logprob: -6.75887393951416
    10. ')' → logprob: -9.13387393951416

Token 161: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0058185867965221405
    2. ' ==' → logprob: -5.6308183670043945
    3. '=='' → logprob: -6.6308183670043945
    4. '=' → logprob: -7.1308183670043945
    5. ''' → logprob: -9.505818367004395
    6. '!=' → logprob: -12.505818367004395
    7. 's' → logprob: -12.505818367004395
    8. '==
' → logprob: -12.630818367004395
    9. '===' → logprob: -12.755818367004395
    10. '   ' → logprob: -12.880818367004395

Token 162: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.000741134281270206
    2. ' '' → logprob: -7.375741004943848
    3. '0' → logprob: -10.125741004943848
    4. '')' → logprob: -10.250741004943848
    5. ' ' → logprob: -11.750741004943848
    6. 's' → logprob: -11.875741004943848
    7. ''s' → logprob: -12.375741004943848
    8. '"' → logprob: -12.625741004943848
    9. '1' → logprob: -13.000741004943848
    10. ''i' → logprob: -13.125741004943848

Token 163: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22617381811141968
    2. '0' → logprob: -1.8511738777160645
    3. '1' → logprob: -3.1011738777160645
    4. '')' → logprob: -8.726173400878906
    5. ''s' → logprob: -9.851173400878906
    6. ' '' → logprob: -10.351173400878906
    7. 'root' → logprob: -10.601173400878906
    8. ')' → logprob: -11.101173400878906
    9. ''i' → logprob: -11.538673400878906
    10. '"' → logprob: -11.601173400878906

Token 164: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6615907549858093
    2. '':' → logprob: -1.036590814590454
    3. ':
' → logprob: -2.911590814590454
    4. '):' → logprob: -3.786590814590454
    5. '):
' → logprob: -4.036590576171875
    6. ''' → logprob: -4.661590576171875
    7. '':
' → logprob: -4.786590576171875
    8. ')' → logprob: -5.161590576171875
    9. ' and' → logprob: -5.661590576171875
    10. ''):
' → logprob: -5.786590576171875

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35835644602775574
    2. ':' → logprob: -1.7333564758300781
    3. ':
' → logprob: -2.358356475830078
    4. ' root' → logprob: -4.108356475830078
    5. '       ' → logprob: -5.483356475830078
    6. 'root' → logprob: -5.483356475830078
    7. ' :' → logprob: -7.358356475830078
    8. ',' → logprob: -7.483356475830078
    9. '[root' → logprob: -7.733356475830078
    10. '<|end|>' → logprob: -7.733356475830078

Token 166: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.0015860318671911955
    2. 'i' → logprob: -7.376585960388184
    3. ' root' → logprob: -7.376585960388184
    4. '	root' → logprob: -9.126585960388184
    5. '   ' → logprob: -9.876585960388184
    6. '
' → logprob: -10.251585960388184
    7. '<|end|>' → logprob: -11.001585960388184
    8. '(root' → logprob: -11.251585960388184
    9. '[root' → logprob: -11.376585960388184
    10. '       ' → logprob: -11.751585960388184

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132810592651367
    2. ' =' → logprob: -1.3132810592651367
    3. '=i' → logprob: -11.313281059265137
    4. ',' → logprob: -12.063281059265137
    5. '+=' → logprob: -14.813281059265137
    6. '=

' → logprob: -15.313281059265137
    7. ' +=' → logprob: -15.813281059265137
    8. '=
' → logprob: -16.438282012939453
    9. '＝' → logprob: -16.563282012939453
    10. 'i' → logprob: -16.563282012939453

Token 168: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024821963161230087
    2. ' i' → logprob: -6.0024824142456055
    3. '0' → logprob: -13.127482414245605
    4. '<|end|>' → logprob: -13.127482414245605
    5. '1' → logprob: -13.877482414245605
    6. '2' → logprob: -13.877482414245605
    7. ' ' → logprob: -14.752482414245605
    8. 's' → logprob: -16.50248146057129
    9. 'root' → logprob: -16.75248146057129
    10. '	i' → logprob: -17.00248146057129

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018483871594071388
    2. ' 
' → logprob: -4.893483638763428
    3. '<|end|>' → logprob: -5.018483638763428
    4. '  
' → logprob: -6.768483638763428
    5. '
' → logprob: -6.768483638763428
    6. '\n' → logprob: -7.768483638763428
    7. '    
' → logprob: -7.893483638763428
    8. '<|end|>' → logprob: -8.018484115600586
    9. '       ' → logprob: -8.643484115600586
    10. 'i' → logprob: -8.768484115600586

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2691445052623749
    2. '
' → logprob: -1.5191445350646973
    3. '   ' → logprob: -4.894144535064697
    4. '<|end|>' → logprob: -5.519144535064697
    5. '
' → logprob: -6.894144535064697
    6. '        
' → logprob: -7.144144535064697
    7. '  
' → logprob: -7.269144535064697
    8. 'i' → logprob: -7.519144535064697
    9. '<|end|>' → logprob: -7.644144535064697
    10. ' 
' → logprob: -7.644144535064697

Token 171: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2921469807624817
    2. 'i' (adapté à ' i') → logprob: -1.417146921157837
    3. '   ' → logprob: -5.417147159576416
    4. '	i' → logprob: -5.917147159576416
    5. '
' → logprob: -6.417147159576416
    6. '[i' → logprob: -7.417147159576416
    7. ' ' → logprob: -8.042146682739258
    8. '       ' → logprob: -8.167146682739258
    9. '*i' → logprob: -8.167146682739258
    10. '\n' → logprob: -8.667146682739258

Token 172: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012369317002594471
    2. ' +=' → logprob: -4.762369155883789
    3. '+=' → logprob: -5.887369155883789
    4. '=' → logprob: -7.262369155883789
    5. ' +' → logprob: -8.387369155883789
    6. ' ' → logprob: -10.262369155883789
    7. ' =' → logprob: -12.637369155883789
    8. '+='' → logprob: -13.637369155883789
    9. ')' → logprob: -13.762369155883789
    10. '[' → logprob: -14.262369155883789

Token 173: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141451060771942
    2. 'i' → logprob: -1.7014144659042358
    3. ' ' → logprob: -14.201414108276367
    4. '	i' → logprob: -14.951414108276367
    5. '<|end|>' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '1' → logprob: -17.326414108276367
    8. '<|end|>' → logprob: -17.576414108276367
    9. '+' → logprob: -17.701414108276367
    10. '_i' → logprob: -17.826414108276367

Token 174: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016205864027142525
    2. ' +' → logprob: -4.141205787658691
    3. '1' → logprob: -8.891205787658691
    4. ' ' → logprob: -10.516205787658691
    5. '+i' → logprob: -12.766205787658691
    6. 'i' → logprob: -13.516205787658691
    7. ' plus' → logprob: -14.391205787658691
    8. '+=' → logprob: -14.766205787658691
    9. ' +=' → logprob: -14.891205787658691
    10. '2' → logprob: -15.391205787658691

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.000709533691406
    4. '```' → logprob: -17.750709533691406
    5. '  ' → logprob: -19.000709533691406
    6. ' ' → logprob: -19.000709533691406
    7. '2' → logprob: -19.375709533691406
    8. '`' → logprob: -19.750709533691406
    9. '<|end|>' → logprob: -19.875709533691406
    10. '１' → logprob: -19.938209533691406

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.000003814697266
    4. '  ' → logprob: -19.000003814697266
    5. '```' → logprob: -19.125003814697266
    6. '2' → logprob: -20.375003814697266
    7. '１' → logprob: -20.937503814697266
    8. '`' → logprob: -21.187503814697266
    9. '۱' → logprob: -21.625003814697266
    10. '<|end|>' → logprob: -21.625003814697266

Token 177: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011003371328115463
    2. '<|end|>' → logprob: -5.261003494262695
    3. '\n' → logprob: -5.886003494262695
    4. '   ' → logprob: -6.511003494262695
    5. '```' → logprob: -8.636003494262695
    6. '
' → logprob: -8.761003494262695
    7. 'main' → logprob: -8.886003494262695
    8. 'print' → logprob: -8.886003494262695
    9. 'if' → logprob: -9.011003494262695
    10. '    
' → logprob: -9.011003494262695

Token 178: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16917887330055237
    2. 'if' → logprob: -2.0441789627075195
    3. 'm' → logprob: -4.1691789627075195
    4. 'i' → logprob: -5.5441789627075195
    5. '#' → logprob: -6.0441789627075195
    6. '
' → logprob: -7.0441789627075195
    7. 'print' → logprob: -7.1691789627075195
    8. 'n' → logprob: -7.2941789627075195
    9. '\n' → logprob: -7.6691789627075195
    10. '\' → logprob: -8.16917896270752

Token 179: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1003091111779213
    2. '(' → logprob: -2.350309133529663
    3. '()
' → logprob: -9.850309371948242
    4. '(
' → logprob: -10.475309371948242
    5. '();' → logprob: -11.475309371948242
    6. '()`' → logprob: -13.100309371948242
    7. '(

' → logprob: -13.475309371948242
    8. '#' → logprob: -13.600309371948242
    9. '()

' → logprob: -13.850309371948242
    10. '()">' → logprob: -13.850309371948242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 177
Tokens correctement prédits (1ère position, stricte): 65
Tokens correctement prédits (1ère position, avec adaptation): 69
Tokens correctement prédits (top 10): 157
Précision stricte (1ère position): 36.72%
Précision adaptée (1ère position): 38.98%
Précision (top 10): 88.70%
================================================================================
