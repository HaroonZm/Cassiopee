================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
P,Q,R=map(int,input().split())
m=P
if Q>m:
    m=Q
if R>m:
    m=R
s=P+Q+R
print(s-m)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'P' (ID: 47)
  → Token d'amorce (pas de prédiction)

Token 1: ',Q' (ID: 130136)
  → Token d'amorce (pas de prédiction)

Token 2: ',R' (ID: 48317)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1918631792068481
    2. '=' → logprob: -1.5668631792068481
    3. ';' → logprob: -1.9418631792068481
    4. ')' → logprob: -1.9418631792068481
    5. ',' → logprob: -2.3168630599975586
    6. '.' → logprob: -2.8168630599975586
    7. ' =' → logprob: -4.191863059997559
    8. '[' → logprob: -4.441863059997559
    9. ':' → logprob: -5.566863059997559
    10. '```' → logprob: -6.191863059997559

Token 4: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11361365020275116
    2. '1' → logprob: -2.7386136054992676
    3. '[]' → logprob: -4.238613605499268
    4. ' ' → logprob: -4.988613605499268
    5. '()' → logprob: -5.238613605499268
    6. '(' → logprob: -5.488613605499268
    7. 'P' → logprob: -5.863613605499268
    8. '[' → logprob: -5.863613605499268
    9. '[],' → logprob: -6.113613605499268
    10. '3' → logprob: -7.488613605499268

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1581767499446869
    2. '(lambda' → logprob: -2.5331766605377197
    3. '<|end|>' → logprob: -2.9081766605377197
    4. '```' → logprob: -5.158176898956299
    5. '(int' → logprob: -6.658176898956299
    6. '(user' → logprob: -7.158176898956299
    7. ')' → logprob: -7.408176898956299
    8. '<|end|>' → logprob: -7.783176898956299
    9. 'user' → logprob: -7.908176898956299
    10. '(token' → logprob: -8.15817642211914

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3733147978782654
    2. '<|end|>' → logprob: -1.7483148574829102
    3. '(input' → logprob: -3.12331485748291
    4. '(' → logprob: -3.37331485748291
    5. ')(' → logprob: -3.62331485748291
    6. '(user' → logprob: -4.99831485748291
    7. '```' → logprob: -5.49831485748291
    8. '(token' → logprob: -5.62331485748291
    9. '<|end|>' → logprob: -5.74831485748291
    10. '`)' → logprob: -5.99831485748291

Token 7: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.782820463180542
    2. ')' → logprob: -0.907820463180542
    3. '()' → logprob: -3.282820463180542
    4. '```' → logprob: -3.907820463180542
    5. '`)' → logprob: -3.907820463180542
    6. '<|end|>' → logprob: -4.532820701599121
    7. '(' → logprob: -4.657820701599121
    8. '()>' → logprob: -4.782820701599121
    9. '`()' → logprob: -5.532820701599121
    10. '().' → logprob: -5.782820701599121

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019662656995933503
    2. 'strip' → logprob: -8.62519645690918
    3. ' split' → logprob: -11.87519645690918
    4. ')' → logprob: -12.00019645690918
    5. 'rstrip' → logprob: -12.62519645690918
    6. '(split' → logprob: -15.25019645690918
    7. 'spl' → logprob: -16.25019645690918
    8. 'replace' → logprob: -16.50019645690918
    9. 's' → logprob: -16.62519645690918
    10. '_split' → logprob: -17.50019645690918

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025840604677796364
    2. '())' → logprob: -3.9008405208587646
    3. '))' → logprob: -5.775840759277344
    4. '`)' → logprob: -6.400840759277344
    5. '()' → logprob: -8.650840759277344
    6. ')`' → logprob: -9.275840759277344
    7. '```' → logprob: -10.400840759277344
    8. '')' → logprob: -10.525840759277344
    9. ')")' → logprob: -11.150840759277344
    10. '(' → logprob: -11.150840759277344

Token 10: 'm' (ID: 76)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12604908645153046
    2. 'a' → logprob: -3.501049041748047
    3. 's' → logprob: -3.876049041748047
    4. 'i' → logprob: -4.001049041748047
    5. '#' → logprob: -4.251049041748047
    6. ',' → logprob: -4.876049041748047
    7. ' if' → logprob: -4.876049041748047
    8. '+' → logprob: -5.001049041748047
    9. 'x' → logprob: -6.501049041748047
    10. 'I' → logprob: -6.751049041748047

Token 11: '=P' (ID: 178839)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03361688181757927
    2. 'o' → logprob: -3.908616781234741
    3. '=' → logprob: -5.03361701965332
    4. ' =' → logprob: -6.28361701965332
    5. ',a' → logprob: -6.53361701965332
    6. 'od' → logprob: -7.28361701965332
    7. '=a' → logprob: -7.53361701965332
    8. '_a' → logprob: -8.15861701965332
    9. '(a' → logprob: -8.40861701965332
    10. ',' → logprob: -8.53361701965332

Token 12: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47508978843688965
    2. '+' → logprob: -1.3500897884368896
    3. '%' → logprob: -2.4750897884368896
    4. '>' → logprob: -4.600090026855469
    5. '<|end|>' → logprob: -4.725090026855469
    6. '-' → logprob: -5.850090026855469
    7. ')' → logprob: -6.225090026855469
    8. '[' → logprob: -6.475090026855469
    9. '*>' → logprob: -6.600090026855469
    10. ',' → logprob: -6.975090026855469

Token 13: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07277189195156097
    2. '*' → logprob: -3.1977717876434326
    3. '%' → logprob: -3.6977717876434326
    4. ')' → logprob: -6.572772026062012
    5. '<|end|>' → logprob: -6.822772026062012
    6. '-' → logprob: -7.197772026062012
    7. '>' → logprob: -8.197772026062012
    8. '.' → logprob: -8.447772026062012
    9. ' ' → logprob: -8.822772026062012
    10. ',' → logprob: -8.822772026062012

Token 14: ' Q' (ID: 1486)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.19340096414089203
    2. 'm' → logprob: -2.0684008598327637
    3. ' P' → logprob: -3.5684008598327637
    4. ' ' → logprob: -4.193400859832764
    5. ' Q' → logprob: -5.443400859832764
    6. 'P' → logprob: -6.693400859832764
    7. 'Q' → logprob: -8.068401336669922
    8. ' ' → logprob: -8.818401336669922
    9. '  ' → logprob: -10.193401336669922
    10. ' not' → logprob: -10.943401336669922

Token 15: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17935828864574432
    2. '>' → logprob: -2.8043582439422607
    3. ' <' → logprob: -3.3043582439422607
    4. ' <=' → logprob: -3.6793582439422607
    5. ' >=' → logprob: -3.9293582439422607
    6. ' ==' → logprob: -4.30435848236084
    7. '==' → logprob: -6.05435848236084
    8. '<' → logprob: -6.30435848236084
    9. ' ' → logprob: -6.80435848236084
    10. '>=' → logprob: -6.92935848236084

Token 16: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.015465359203517437
    2. ' m' → logprob: -5.015465259552002
    3. 'P' → logprob: -5.140465259552002
    4. '0' → logprob: -6.015465259552002
    5. ' P' → logprob: -8.64046573638916
    6. '=' → logprob: -9.01546573638916
    7. ' ' → logprob: -9.76546573638916
    8. '=m' → logprob: -10.76546573638916
    9. 'Q' → logprob: -11.26546573638916
    10. '1' → logprob: -12.01546573638916

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001455236109904945
    2. ' :' → logprob: -7.001455307006836
    3. '>' → logprob: -8.001455307006836
    4. ' and' → logprob: -9.376455307006836
    5. '+' → logprob: -9.876455307006836
    6. '=' → logprob: -10.876455307006836
    7. ':
' → logprob: -11.126455307006836
    8. ' >' → logprob: -11.751455307006836
    9. ':m' → logprob: -12.001455307006836
    10. '.' → logprob: -12.251455307006836

Token 18: '   ' (ID: 271)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.001827384578064084
    2. 'm' → logprob: -6.626827239990234
    3. ' Q' → logprob: -7.626827239990234
    4. 'Q' → logprob: -12.126827239990234
    5. ' ' → logprob: -12.251827239990234
    6. ' ' → logprob: -13.626827239990234
    7. '   ' → logprob: -14.376827239990234
    8. '	m' → logprob: -14.376827239990234
    9. '    ' → logprob: -15.001827239990234
    10. ' P' → logprob: -15.376827239990234

Token 19: ' m' (ID: 284)
  Prédit: ' Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.5605320930480957
    2. ' m' → logprob: -1.0605320930480957
    3. 'm' (adapté à ' m') → logprob: -3.1855320930480957
    4. 'Q' → logprob: -3.1855320930480957
    5. '    ' → logprob: -9.560531616210938
    6. '   ' → logprob: -11.060531616210938
    7. ' ' → logprob: -11.310531616210938
    8. '	Q' → logprob: -12.685531616210938
    9. '(Q' → logprob: -13.435531616210938
    10. ' ' → logprob: -13.560531616210938

Token 20: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10034307092428207
    2. ' =' → logprob: -2.3503429889678955
    3. '=m' → logprob: -8.975342750549316
    4. '=q' → logprob: -12.350342750549316
    5. '=P' → logprob: -13.600342750549316
    6. '=max' → logprob: -14.225342750549316
    7. '=

' → logprob: -14.850342750549316
    8. '>' → logprob: -14.975342750549316
    9. ' ' → logprob: -15.100342750549316
    10. '=int' → logprob: -15.350342750549316

Token 21: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0380435548722744
    2. ' Q' → logprob: -3.28804349899292
    3. '	Q' → logprob: -13.288043975830078
    4. '   ' → logprob: -15.288043975830078
    5. ' ' → logprob: -16.663043975830078
    6. ',Q' → logprob: -17.788043975830078
    7. '<Q' → logprob: -18.163043975830078
    8. ' ' → logprob: -18.288043975830078
    9. '-Q' → logprob: -18.538043975830078
    10. '    ' → logprob: -18.663043975830078

Token 22: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10293377190828323
    2. '<|end|>' → logprob: -3.227933883666992
    3. '\n' → logprob: -4.102933883666992
    4. ' 
' → logprob: -4.352933883666992
    5. '  
' → logprob: -4.727933883666992
    6. '    
' → logprob: -5.227933883666992
    7. 'if' → logprob: -5.352933883666992
    8. '```' → logprob: -6.102933883666992
    9. 'elif' → logprob: -6.352933883666992
    10. ' if' → logprob: -6.352933883666992

Token 23: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25774672627449036
    2. '```' → logprob: -2.132746696472168
    3. ' if' → logprob: -2.882746696472168
    4. '\n' → logprob: -3.257746696472168
    5. '``' → logprob: -5.007746696472168
    6. '
' → logprob: -5.632746696472168
    7. '\' → logprob: -6.257746696472168
    8. ' 
' → logprob: -7.507746696472168
    9. '    
' → logprob: -8.007746696472168
    10. '  
' → logprob: -8.382746696472168

Token 24: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2519790232181549
    2. 'R' → logprob: -1.5019789934158325
    3. ' ' → logprob: -10.251978874206543
    4. 'P' → logprob: -12.376978874206543
    5. ' ' → logprob: -12.751978874206543
    6. ' P' → logprob: -12.751978874206543
    7. 'm' → logprob: -14.376978874206543
    8. '	R' → logprob: -14.501978874206543
    9. ')' → logprob: -14.626978874206543
    10. 'r' → logprob: -14.751978874206543

Token 25: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006717974785715342
    2. ' >' → logprob: -5.006718158721924
    3. '<m' → logprob: -14.256717681884766
    4. '">' → logprob: -14.506717681884766
    5. ' ' → logprob: -15.006717681884766
    6. '   ' → logprob: -15.631717681884766
    7. '＞' → logprob: -15.881717681884766
    8. ')>' → logprob: -16.506717681884766
    9. '>=' → logprob: -16.506717681884766
    10. '&gt' → logprob: -16.506717681884766

Token 26: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0006266565760597587
    2. ' m' → logprob: -7.375626564025879
    3. ' ' → logprob: -17.000627517700195
    4. '<|end|>' → logprob: -17.125627517700195
    5. '	m' → logprob: -17.375627517700195
    6. ' ' → logprob: -19.250627517700195
    7. '```' → logprob: -19.750627517700195
    8. 'м' → logprob: -19.750627517700195
    9. '_m' → logprob: -19.875627517700195
    10. '   ' → logprob: -19.875627517700195

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.870950215263292e-05
    2. ':
' → logprob: -10.375048637390137
    3. ' :' → logprob: -11.375048637390137
    4. '   ' → logprob: -12.750048637390137
    5. '>' → logprob: -14.250048637390137
    6. '=' → logprob: -14.250048637390137
    7. ':m' → logprob: -14.375048637390137
    8. '):' → logprob: -15.250048637390137
    9. '>:' → logprob: -15.250048637390137
    10. 'm' → logprob: -15.750048637390137

Token 28: '   ' (ID: 271)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.04076094180345535
    2. ' R' → logprob: -3.2907609939575195
    3. '   ' → logprob: -5.9157609939575195
    4. ' ' → logprob: -11.91576099395752
    5. '`' → logprob: -13.04076099395752
    6. '	R' → logprob: -13.16576099395752
    7. '```' → logprob: -13.29076099395752
    8. '    ' → logprob: -13.54076099395752
    9. '    
' → logprob: -13.66576099395752
    10. '  ' → logprob: -14.04076099395752

Token 29: ' m' (ID: 284)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00016086915275081992
    2. ' R' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.125161170959473
    4. 'm' (adapté à ' m') → logprob: -15.625161170959473
    5. 'r' → logprob: -15.625161170959473
    6. ' ' → logprob: -16.375160217285156
    7. '  ' → logprob: -17.875160217285156
    8. '	R' → logprob: -18.000160217285156
    9. '<|end|>' → logprob: -18.875160217285156
    10. '=' → logprob: -19.625160217285156

Token 30: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008643055334687233
    2. '=m' → logprob: -4.75864315032959
    3. ' =' → logprob: -10.63364315032959
    4. '=max' → logprob: -13.63364315032959
    5. '=

' → logprob: -14.00864315032959
    6. '=int' → logprob: -14.38364315032959
    7. '=r' → logprob: -14.38364315032959
    8. '=end' → logprob: -15.75864315032959
    9. '=}' → logprob: -15.75864315032959
    10. '=
' → logprob: -15.88364315032959

Token 31: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.014684110297821e-06
    2. ' R' → logprob: -11.625008583068848
    3. ' ' → logprob: -18.625009536743164
    4. '	R' → logprob: -18.875009536743164
    5. '   ' → logprob: -19.250009536743164
    6. 'Ｒ' → logprob: -19.625009536743164
    7. '```' → logprob: -20.000009536743164
    8. '<R' → logprob: -20.625009536743164
    9. '`' → logprob: -20.750009536743164
    10. 'r' → logprob: -20.750009536743164

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.577416181564331
    2. 'print' → logprob: -1.327416181564331
    3. '<|end|>' → logprob: -1.952416181564331
    4. 'm' → logprob: -4.32741641998291
    5. '\n' → logprob: -4.57741641998291
    6. ' ' → logprob: -6.32741641998291
    7. ')' → logprob: -6.70241641998291
    8. '#' → logprob: -6.82741641998291
    9. ' print' → logprob: -7.20241641998291
    10. '' → logprob: -7.70241641998291

Token 33: 's' (ID: 82)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001640876434976235
    2. '
' → logprob: -8.875164031982422
    3. ' print' → logprob: -11.000164031982422
    4. 'm' → logprob: -12.875164031982422
    5. '```' → logprob: -13.500164031982422
    6. ',
' → logprob: -14.875164031982422
    7. ')' → logprob: -15.000164031982422
    8. ':
' → logprob: -15.125164031982422
    9. '(print' → logprob: -15.125164031982422
    10. '   ' → logprob: -15.125164031982422

Token 34: '=P' (ID: 178839)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1318121701478958
    2. ' =' → logprob: -2.63181209564209
    3. 'um' → logprob: -3.00681209564209
    4. 'u' → logprob: -7.50681209564209
    5. ' ' → logprob: -7.75681209564209
    6. '=s' → logprob: -9.13181209564209
    7. '+=' → logprob: -9.38181209564209
    8. 'print' → logprob: -9.38181209564209
    9. '+' → logprob: -9.50681209564209
    10. ',' → logprob: -9.63181209564209

Token 35: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001845101942308247
    2. ' +' → logprob: -6.501844882965088
    3. '<|end|>' → logprob: -8.001845359802246
    4. '+
' → logprob: -12.751845359802246
    5. '>' → logprob: -13.376845359802246
    6. ' ' → logprob: -14.126845359802246
    7. '+s' → logprob: -15.001845359802246
    8. '+</' → logprob: -15.376845359802246
    9. '+

' → logprob: -15.626845359802246
    10. '<|end|>' → logprob: -15.626845359802246

Token 36: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0002639582962729037
    2. ' Q' → logprob: -8.250264167785645
    3. '	Q' → logprob: -13.500264167785645
    4. ' ' → logprob: -14.125264167785645
    5. '(Q' → logprob: -15.750264167785645
    6. 'QR' → logprob: -16.250263214111328
    7. ',Q' → logprob: -16.375263214111328
    8. '  ' → logprob: -16.750263214111328
    9. '+' → logprob: -16.750263214111328
    10. 'R' → logprob: -16.875263214111328

Token 37: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.290784560609609e-05
    2. ' +' → logprob: -9.750072479248047
    3. '+r' → logprob: -11.375072479248047
    4. 'R' → logprob: -13.125072479248047
    5. ' R' → logprob: -15.625072479248047
    6. '+
' → logprob: -16.125072479248047
    7. '+

' → logprob: -16.375072479248047
    8. '>' → logprob: -16.375072479248047
    9. '＋' → logprob: -16.625072479248047
    10. '```' → logprob: -16.875072479248047

Token 38: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.56102097814437e-05
    2. ' R' → logprob: -10.000045776367188
    3. '	R' → logprob: -16.625045776367188
    4. ' ' → logprob: -16.875045776367188
    5. 'P' → logprob: -17.375045776367188
    6. '<|end|>' → logprob: -17.875045776367188
    7. 'r' → logprob: -18.625045776367188
    8. 'RSpec' → logprob: -18.750045776367188
    9. '   ' → logprob: -18.875045776367188
    10. '<R' → logprob: -18.875045776367188

Token 39: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49954095482826233
    2. '-m' → logprob: -1.24954092502594
    3. '-s' → logprob: -2.7495410442352295
    4. ' -' → logprob: -3.2495410442352295
    5. 'm' → logprob: -6.87454080581665
    6. ' ' → logprob: -7.24954080581665
    7. '-P' → logprob: -7.24954080581665
    8. 's' → logprob: -7.99954080581665
    9. '```' → logprob: -8.249541282653809
    10. 'print' → logprob: -8.874541282653809

Token 40: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2742364704608917
    2. '-' → logprob: -2.0242364406585693
    3. 'if' → logprob: -3.2742364406585693
    4. ' if' → logprob: -4.274236679077148
    5. 'm' → logprob: -4.649236679077148
    6. ' -' → logprob: -4.774236679077148
    7. ' print' → logprob: -5.024236679077148
    8. '
' → logprob: -5.024236679077148
    9. ' ' → logprob: -5.399236679077148
    10. ' 
' → logprob: -5.649236679077148

Token 41: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.049663178622722626
    2. '(s' → logprob: -3.0496630668640137
    3. '(m' → logprob: -6.924663066864014
    4. '((' → logprob: -10.424663543701172
    5. 's' → logprob: -10.799663543701172
    6. '(max' → logprob: -11.424663543701172
    7. ' (' → logprob: -11.424663543701172
    8. '('' → logprob: -11.799663543701172
    9. '()' → logprob: -12.924663543701172
    10. '(`' → logprob: -12.924663543701172

Token 42: '-m' (ID: 2126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8126592193730175e-05
    2. ' )' → logprob: -10.7500581741333
    3. '-' → logprob: -11.0000581741333
    4. '-)' → logprob: -12.3750581741333
    5. '))' → logprob: -12.6250581741333
    6. '-m' → logprob: -12.6250581741333
    7. '-s' → logprob: -13.5000581741333
    8. ')m' → logprob: -13.7500581741333
    9. '`)' → logprob: -14.2500581741333
    10. '-P' → logprob: -14.5000581741333

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.13388703338569e-06
    2. ' )' → logprob: -12.375009536743164
    3. '`)' → logprob: -13.375009536743164
    4. ')`' → logprob: -13.750009536743164
    5. '))' → logprob: -13.875009536743164
    6. '*' → logprob: -15.875009536743164
    7. '-)' → logprob: -15.875009536743164
    8. '')' → logprob: -16.000009536743164
    9. '-' → logprob: -16.000009536743164
    10. '```' → logprob: -16.125009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 31
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 43.90%
Précision (top 10): 75.61%
================================================================================
